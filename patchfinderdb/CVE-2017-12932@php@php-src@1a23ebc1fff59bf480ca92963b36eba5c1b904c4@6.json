{
  "cve_id": "CVE-2017-12932",
  "cve_desc": "ext/standard/var_unserializer.re in PHP 7.0.x through 7.0.22 and 7.1.x through 7.1.8 is prone to a heap use after free while unserializing untrusted data, related to improper use of the hash API for key deletion in a situation with an invalid array size. Exploitation of this issue can have an unspecified impact on the integrity of PHP.",
  "repo": "php/php-src",
  "patch_hash": "1a23ebc1fff59bf480ca92963b36eba5c1b904c4",
  "patch_info": {
    "commit_hash": "1a23ebc1fff59bf480ca92963b36eba5c1b904c4",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/1a23ebc1fff59bf480ca92963b36eba5c1b904c4",
    "files": [
      "NEWS",
      "ext/standard/tests/serialize/bug74103.phpt",
      "ext/standard/tests/serialize/bug75054.phpt",
      "ext/standard/var_unserializer.c",
      "ext/standard/var_unserializer.re"
    ],
    "message": "Fixed bug #74103 and bug #75054\n\nDirectly fail unserialization when trying to acquire an r/R\nreference to an UNDEF HT slot. Previously this left an UNDEF and\nlater deleted the index/key from the HT.\n\nWhat actually caused the issue here is a combination of two\nfactors: First, the key deletion was performed using the hash API,\nrather than the symtable API, such that the element was not actually\nremoved if it used an integral string key. Second, a subsequent\ndeletion operation, while collecting trailing UNDEF ranges, would\nmark the element as available for reuse (leaving a corrupted HT\nstate with nNumOfElemnts > nNumUsed).\n\nFix this by failing early and dropping the deletion code.",
    "before_after_code_files": [
      "ext/standard/tests/serialize/bug74103.phpt||ext/standard/tests/serialize/bug74103.phpt",
      "ext/standard/tests/serialize/bug75054.phpt||ext/standard/tests/serialize/bug75054.phpt",
      "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
      "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
    ]
  },
  "patch_diff": {
    "ext/standard/tests/serialize/bug74103.phpt||ext/standard/tests/serialize/bug74103.phpt": [
      "File: ext/standard/tests/serialize/bug74103.phpt -> ext/standard/tests/serialize/bug74103.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Bug #74103: heap-use-after-free when unserializing invalid array size",
      "3: --FILE--",
      "4: <?php",
      "5: var_dump(unserialize('a:7:{i:0;i:04;s:1:\"a\";i:2;i:00009617006;i:4;s:1:\"a\";i:4;s:1:\"a\";R:5;s:1:\"7\";R:3;s:1:\"a\";R:5;;s:18;}}'));",
      "6: ?>",
      "7: --EXPECTF--",
      "8: Notice: unserialize(): Error at offset 68 of 100 bytes in %s on line %d",
      "9: bool(false)",
      "",
      "---------------"
    ],
    "ext/standard/tests/serialize/bug75054.phpt||ext/standard/tests/serialize/bug75054.phpt": [
      "File: ext/standard/tests/serialize/bug75054.phpt -> ext/standard/tests/serialize/bug75054.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Bug #75054: A Denial of Service Vulnerability was found when performing deserialization",
      "3: --FILE--",
      "4: <?php",
      "5: $poc = 'a:9:{i:0;s:4:\"0000\";i:0;s:4:\"0000\";i:0;R:2;s:4:\"5003\";R:2;s:4:\"0000\";R:2;s:4:\"0000\";R:2;s:4:\"';",
      "6: $poc .= \"\\x06\";",
      "7: $poc .= '000\";R:2;s:4:\"0000\";d:0;s:4:\"0000\";a:9:{s:4:\"0000\";';",
      "8: var_dump(unserialize($poc));",
      "9: ?>",
      "10: --EXPECTF--",
      "11: Notice: unserialize(): Error at offset 43 of 145 bytes in %s on line %d",
      "12: bool(false)",
      "",
      "---------------"
    ],
    "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
      "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "405:    return 0;",
      "406:   }",
      "418:   zval_dtor(&key);",
      "420:   if (elements && *(*p-1) != ';' && *(*p-1) != '}') {",
      "",
      "[Removed Lines]",
      "408:   if (UNEXPECTED(Z_ISUNDEF_P(data))) {",
      "409:    if (Z_TYPE(key) == IS_LONG) {",
      "410:     zend_hash_index_del(ht, Z_LVAL(key));",
      "411:    } else {",
      "412:     zend_hash_del_ind(ht, Z_STR(key));",
      "413:    }",
      "414:   } else {",
      "415:    var_push_dtor(var_hash, data);",
      "416:   }",
      "",
      "[Added Lines]",
      "408:   var_push_dtor(var_hash, data);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "581:  start = cursor;",
      "585: {",
      "586:  YYCTYPE yych;",
      "587:  static const unsigned char yybm[] = {",
      "",
      "[Removed Lines]",
      "584: #line 585 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "575: #line 576 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "622:  yych = *YYCURSOR;",
      "623:  switch (yych) {",
      "624:  case 'C':",
      "626:  case 'N': goto yy5;",
      "633:  case 'o': goto yy12;",
      "638:  }",
      "639: yy2:",
      "642: yy3:",
      "644:  { return 0; }",
      "646: yy4:",
      "647:  yych = *(YYMARKER = ++YYCURSOR);",
      "649:  goto yy3;",
      "650: yy5:",
      "651:  yych = *++YYCURSOR;",
      "653:  goto yy3;",
      "654: yy6:",
      "655:  yych = *(YYMARKER = ++YYCURSOR);",
      "657:  goto yy3;",
      "658: yy7:",
      "659:  yych = *(YYMARKER = ++YYCURSOR);",
      "661:  goto yy3;",
      "662: yy8:",
      "663:  yych = *(YYMARKER = ++YYCURSOR);",
      "665:  goto yy3;",
      "666: yy9:",
      "667:  yych = *(YYMARKER = ++YYCURSOR);",
      "669:  goto yy3;",
      "670: yy10:",
      "671:  yych = *(YYMARKER = ++YYCURSOR);",
      "673:  goto yy3;",
      "674: yy11:",
      "675:  yych = *(YYMARKER = ++YYCURSOR);",
      "677:  goto yy3;",
      "678: yy12:",
      "679:  yych = *(YYMARKER = ++YYCURSOR);",
      "681:  goto yy3;",
      "682: yy13:",
      "683:  yych = *(YYMARKER = ++YYCURSOR);",
      "685:  goto yy3;",
      "686: yy14:",
      "687:  ++YYCURSOR;",
      "689:  {",
      "691:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
      "693: }",
      "698: yy17:",
      "699:  yych = *++YYCURSOR;",
      "700:  if (yybm[0+yych] & 128) {",
      "702:  }",
      "704: yy18:",
      "705:  YYCURSOR = YYMARKER;",
      "706:  goto yy3;",
      "707: yy19:",
      "708:  yych = *++YYCURSOR;",
      "711:  }",
      "712:  goto yy18;",
      "720:  if (yych <= '/') goto yy18;",
      "722:  yych = *++YYCURSOR;",
      "841:   }",
      "858:   }",
      "861:  }",
      "868:  }",
      "872:  }",
      "879:  yych = *++YYCURSOR;",
      "880:  if (yych <= ',') {",
      "882:  } else {",
      "884:   if (yych <= '/') goto yy18;",
      "886:   goto yy18;",
      "887:  }",
      "889:  yych = *++YYCURSOR;",
      "890:  if (yych <= '/') goto yy18;",
      "893:  ++YYCURSOR;",
      "894:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
      "895:  yych = *YYCURSOR;",
      "896:  if (yych <= '/') goto yy18;",
      "899:  yych = *++YYCURSOR;",
      "901:  ++YYCURSOR;",
      "917:  if (yych <= '/') goto yy18;",
      "918:  if (yych <= '9') goto yy34;",
      "919:  goto yy18;",
      "921:  yych = *++YYCURSOR;",
      "922:  if (yych <= '/') goto yy18;",
      "923:  if (yych >= ':') goto yy18;",
      "925:  ++YYCURSOR;",
      "926:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
      "927:  yych = *YYCURSOR;",
      "928:  if (yych <= '/') goto yy18;",
      "931:  yych = *++YYCURSOR;",
      "933:  ++YYCURSOR;",
      "950:  }",
      "954:  }",
      "960:  yych = *++YYCURSOR;",
      "962:  if (yych <= '/') goto yy18;",
      "964:  goto yy18;",
      "966:  yych = *++YYCURSOR;",
      "967:  if (yych <= '/') goto yy18;",
      "968:  if (yych >= ':') goto yy18;",
      "970:  ++YYCURSOR;",
      "971:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
      "972:  yych = *YYCURSOR;",
      "973:  if (yych <= '/') goto yy18;",
      "976:  yych = *++YYCURSOR;",
      "978:  ++YYCURSOR;",
      "1017:  if (yych <= '/') goto yy18;",
      "1019:  goto yy18;",
      "1021:  yych = *++YYCURSOR;",
      "1022:  if (yych <= '/') goto yy18;",
      "1023:  if (yych >= ':') goto yy18;",
      "1025:  ++YYCURSOR;",
      "1026:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
      "1027:  yych = *YYCURSOR;",
      "1028:  if (yych <= '/') goto yy18;",
      "1031:  yych = *++YYCURSOR;",
      "1033:  ++YYCURSOR;",
      "1035:  {",
      "1052:   return 0;",
      "1053:  }",
      "1057:   return 0;",
      "1058:  }",
      "1064:  return 1;",
      "1065: }",
      "1087:  yych = *++YYCURSOR;",
      "1089:  goto yy18;",
      "1100:  yych = *++YYCURSOR;",
      "1102:  goto yy18;",
      "1109:  ++YYCURSOR;",
      "1136:  ++YYCURSOR;",
      "1137:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
      "1138:  yych = *YYCURSOR;",
      "1139:  if (yych <= ';') {",
      "1140:   if (yych <= '/') goto yy18;",
      "1142:   if (yych <= ':') goto yy18;",
      "1143:  } else {",
      "1144:   if (yych <= 'E') {",
      "1145:    if (yych <= 'D') goto yy18;",
      "1147:   } else {",
      "1149:    goto yy18;",
      "1150:   }",
      "1151:  }",
      "1153:  ++YYCURSOR;",
      "1155:  {",
      "1156: #if SIZEOF_ZEND_LONG == 4",
      "1157: use_double:",
      "",
      "[Removed Lines]",
      "625:  case 'O': goto yy13;",
      "627:  case 'R': goto yy2;",
      "628:  case 'S': goto yy10;",
      "629:  case 'a': goto yy11;",
      "630:  case 'b': goto yy6;",
      "631:  case 'd': goto yy8;",
      "632:  case 'i': goto yy7;",
      "634:  case 'r': goto yy4;",
      "635:  case 's': goto yy9;",
      "636:  case '}': goto yy14;",
      "637:  default: goto yy16;",
      "640:  yych = *(YYMARKER = ++YYCURSOR);",
      "641:  if (yych == ':') goto yy95;",
      "643: #line 962 \"ext/standard/var_unserializer.re\"",
      "645: #line 646 \"ext/standard/var_unserializer.c\"",
      "648:  if (yych == ':') goto yy89;",
      "652:  if (yych == ';') goto yy87;",
      "656:  if (yych == ':') goto yy83;",
      "660:  if (yych == ':') goto yy77;",
      "664:  if (yych == ':') goto yy53;",
      "668:  if (yych == ':') goto yy46;",
      "672:  if (yych == ':') goto yy39;",
      "676:  if (yych == ':') goto yy32;",
      "680:  if (yych == ':') goto yy25;",
      "684:  if (yych == ':') goto yy17;",
      "688: #line 956 \"ext/standard/var_unserializer.re\"",
      "694: #line 695 \"ext/standard/var_unserializer.c\"",
      "695: yy16:",
      "696:  yych = *++YYCURSOR;",
      "697:  goto yy3;",
      "701:   goto yy20;",
      "703:  if (yych == '+') goto yy19;",
      "709:  if (yybm[0+yych] & 128) {",
      "710:   goto yy20;",
      "713: yy20:",
      "714:  ++YYCURSOR;",
      "715:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
      "716:  yych = *YYCURSOR;",
      "717:  if (yybm[0+yych] & 128) {",
      "718:   goto yy20;",
      "719:  }",
      "721:  if (yych >= ';') goto yy18;",
      "723:  if (yych != '\"') goto yy18;",
      "724:  ++YYCURSOR;",
      "725: #line 804 \"ext/standard/var_unserializer.re\"",
      "726:  {",
      "727:  size_t len, len2, len3, maxlen;",
      "728:  zend_long elements;",
      "729:  char *str;",
      "730:  zend_string *class_name;",
      "731:  zend_class_entry *ce;",
      "732:  int incomplete_class = 0;",
      "734:  int custom_object = 0;",
      "736:  zval user_func;",
      "737:  zval retval;",
      "738:  zval args[1];",
      "740:     if (!var_hash) return 0;",
      "741:  if (*start == 'C') {",
      "742:   custom_object = 1;",
      "743:  }",
      "745:  len2 = len = parse_uiv(start + 2);",
      "746:  maxlen = max - YYCURSOR;",
      "747:  if (maxlen < len || len == 0) {",
      "749:   return 0;",
      "750:  }",
      "752:  str = (char*)YYCURSOR;",
      "754:  YYCURSOR += len;",
      "756:  if (*(YYCURSOR) != '\"') {",
      "758:   return 0;",
      "759:  }",
      "760:  if (*(YYCURSOR+1) != ':') {",
      "762:   return 0;",
      "763:  }",
      "765:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
      "766:  if (len3 != len)",
      "767:  {",
      "769:   return 0;",
      "770:  }",
      "772:  class_name = zend_string_init(str, len, 0);",
      "774:  do {",
      "775:   if(!unserialize_allowed_class(class_name, classes)) {",
      "776:    incomplete_class = 1;",
      "777:    ce = PHP_IC_ENTRY;",
      "778:    break;",
      "779:   }",
      "782:   BG(serialize_lock)++;",
      "783:   ce = zend_lookup_class(class_name);",
      "784:   if (ce) {",
      "785:    BG(serialize_lock)--;",
      "786:    if (EG(exception)) {",
      "787:     zend_string_release(class_name);",
      "788:     return 0;",
      "789:    }",
      "790:    break;",
      "791:   }",
      "792:   BG(serialize_lock)--;",
      "794:   if (EG(exception)) {",
      "795:    zend_string_release(class_name);",
      "796:    return 0;",
      "797:   }",
      "800:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
      "801:    incomplete_class = 1;",
      "802:    ce = PHP_IC_ENTRY;",
      "803:    break;",
      "804:   }",
      "807:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
      "809:   ZVAL_STR_COPY(&args[0], class_name);",
      "810:   BG(serialize_lock)++;",
      "811:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
      "812:    BG(serialize_lock)--;",
      "813:    if (EG(exception)) {",
      "814:     zend_string_release(class_name);",
      "815:     zval_ptr_dtor(&user_func);",
      "816:     zval_ptr_dtor(&args[0]);",
      "817:     return 0;",
      "818:    }",
      "819:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
      "820:    incomplete_class = 1;",
      "821:    ce = PHP_IC_ENTRY;",
      "822:    zval_ptr_dtor(&user_func);",
      "823:    zval_ptr_dtor(&args[0]);",
      "824:    break;",
      "825:   }",
      "826:   BG(serialize_lock)--;",
      "827:   zval_ptr_dtor(&retval);",
      "828:   if (EG(exception)) {",
      "829:    zend_string_release(class_name);",
      "830:    zval_ptr_dtor(&user_func);",
      "831:    zval_ptr_dtor(&args[0]);",
      "832:    return 0;",
      "833:   }",
      "836:   BG(serialize_lock)++;",
      "837:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
      "838:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
      "839:    incomplete_class = 1;",
      "840:    ce = PHP_IC_ENTRY;",
      "842:   BG(serialize_lock)--;",
      "844:   zval_ptr_dtor(&user_func);",
      "845:   zval_ptr_dtor(&args[0]);",
      "846:   break;",
      "847:  } while (1);",
      "851:  if (custom_object) {",
      "852:   int ret;",
      "854:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
      "856:   if (ret && incomplete_class) {",
      "857:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
      "859:   zend_string_release(class_name);",
      "860:   return ret;",
      "863:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
      "865:  if (elements < 0) {",
      "866:     zend_string_release(class_name);",
      "867:     return 0;",
      "870:  if (incomplete_class) {",
      "871:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
      "873:  zend_string_release(class_name);",
      "875:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
      "876: }",
      "877: #line 878 \"ext/standard/var_unserializer.c\"",
      "878: yy25:",
      "881:   if (yych != '+') goto yy18;",
      "883:   if (yych <= '-') goto yy26;",
      "885:   if (yych <= '9') goto yy27;",
      "888: yy26:",
      "891:  if (yych >= ':') goto yy18;",
      "892: yy27:",
      "897:  if (yych <= '9') goto yy27;",
      "898:  if (yych >= ';') goto yy18;",
      "900:  if (yych != '\"') goto yy18;",
      "902: #line 793 \"ext/standard/var_unserializer.re\"",
      "903:  {",
      "904:  zend_long elements;",
      "905:     if (!var_hash) return 0;",
      "907:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
      "908:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
      "909:   return 0;",
      "910:  }",
      "911:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
      "912: }",
      "913: #line 914 \"ext/standard/var_unserializer.c\"",
      "914: yy32:",
      "915:  yych = *++YYCURSOR;",
      "916:  if (yych == '+') goto yy33;",
      "920: yy33:",
      "924: yy34:",
      "929:  if (yych <= '9') goto yy34;",
      "930:  if (yych >= ';') goto yy18;",
      "932:  if (yych != '{') goto yy18;",
      "934: #line 769 \"ext/standard/var_unserializer.re\"",
      "935:  {",
      "936:  zend_long elements = parse_iv(start + 2);",
      "939:     if (!var_hash) return 0;",
      "941:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
      "942:   return 0;",
      "943:  }",
      "945:  array_init_size(rval, elements);",
      "946:  if (elements) {",
      "949:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
      "952:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
      "953:   return 0;",
      "956:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
      "957: }",
      "958: #line 959 \"ext/standard/var_unserializer.c\"",
      "959: yy39:",
      "961:  if (yych == '+') goto yy40;",
      "963:  if (yych <= '9') goto yy41;",
      "965: yy40:",
      "969: yy41:",
      "974:  if (yych <= '9') goto yy41;",
      "975:  if (yych >= ';') goto yy18;",
      "977:  if (yych != '\"') goto yy18;",
      "979: #line 735 \"ext/standard/var_unserializer.re\"",
      "980:  {",
      "981:  size_t len, maxlen;",
      "982:  zend_string *str;",
      "984:  len = parse_uiv(start + 2);",
      "985:  maxlen = max - YYCURSOR;",
      "986:  if (maxlen < len) {",
      "988:   return 0;",
      "989:  }",
      "991:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
      "992:   return 0;",
      "993:  }",
      "995:  if (*(YYCURSOR) != '\"') {",
      "996:   zend_string_free(str);",
      "998:   return 0;",
      "999:  }",
      "1001:  if (*(YYCURSOR + 1) != ';') {",
      "1002:   efree(str);",
      "1004:   return 0;",
      "1005:  }",
      "1007:  YYCURSOR += 2;",
      "1010:  ZVAL_STR(rval, str);",
      "1011:  return 1;",
      "1012: }",
      "1013: #line 1014 \"ext/standard/var_unserializer.c\"",
      "1014: yy46:",
      "1015:  yych = *++YYCURSOR;",
      "1016:  if (yych == '+') goto yy47;",
      "1018:  if (yych <= '9') goto yy48;",
      "1020: yy47:",
      "1024: yy48:",
      "1029:  if (yych <= '9') goto yy48;",
      "1030:  if (yych >= ';') goto yy18;",
      "1032:  if (yych != '\"') goto yy18;",
      "1034: #line 703 \"ext/standard/var_unserializer.re\"",
      "1036:  size_t len, maxlen;",
      "1037:  char *str;",
      "1039:  len = parse_uiv(start + 2);",
      "1040:  maxlen = max - YYCURSOR;",
      "1041:  if (maxlen < len) {",
      "1043:   return 0;",
      "1044:  }",
      "1046:  str = (char*)YYCURSOR;",
      "1048:  YYCURSOR += len;",
      "1050:  if (*(YYCURSOR) != '\"') {",
      "1055:  if (*(YYCURSOR + 1) != ';') {",
      "1060:  YYCURSOR += 2;",
      "1063:  ZVAL_STRINGL(rval, str, len);",
      "1066: #line 1067 \"ext/standard/var_unserializer.c\"",
      "1067: yy53:",
      "1068:  yych = *++YYCURSOR;",
      "1069:  if (yych <= '/') {",
      "1070:   if (yych <= ',') {",
      "1071:    if (yych == '+') goto yy57;",
      "1072:    goto yy18;",
      "1073:   } else {",
      "1074:    if (yych <= '-') goto yy55;",
      "1075:    if (yych <= '.') goto yy60;",
      "1076:    goto yy18;",
      "1077:   }",
      "1078:  } else {",
      "1079:   if (yych <= 'I') {",
      "1080:    if (yych <= '9') goto yy58;",
      "1081:    if (yych <= 'H') goto yy18;",
      "1082:    goto yy56;",
      "1083:   } else {",
      "1084:    if (yych != 'N') goto yy18;",
      "1085:   }",
      "1086:  }",
      "1088:  if (yych == 'A') goto yy76;",
      "1090: yy55:",
      "1091:  yych = *++YYCURSOR;",
      "1092:  if (yych <= '/') {",
      "1093:   if (yych == '.') goto yy60;",
      "1094:   goto yy18;",
      "1095:  } else {",
      "1096:   if (yych <= '9') goto yy58;",
      "1097:   if (yych != 'I') goto yy18;",
      "1098:  }",
      "1099: yy56:",
      "1101:  if (yych == 'N') goto yy72;",
      "1103: yy57:",
      "1104:  yych = *++YYCURSOR;",
      "1105:  if (yych == '.') goto yy60;",
      "1106:  if (yych <= '/') goto yy18;",
      "1107:  if (yych >= ':') goto yy18;",
      "1108: yy58:",
      "1110:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
      "1111:  yych = *YYCURSOR;",
      "1112:  if (yych <= ':') {",
      "1113:   if (yych <= '.') {",
      "1114:    if (yych <= '-') goto yy18;",
      "1115:    goto yy70;",
      "1116:   } else {",
      "1117:    if (yych <= '/') goto yy18;",
      "1118:    if (yych <= '9') goto yy58;",
      "1119:    goto yy18;",
      "1120:   }",
      "1121:  } else {",
      "1122:   if (yych <= 'E') {",
      "1123:    if (yych <= ';') goto yy63;",
      "1124:    if (yych <= 'D') goto yy18;",
      "1125:    goto yy65;",
      "1126:   } else {",
      "1127:    if (yych == 'e') goto yy65;",
      "1128:    goto yy18;",
      "1129:   }",
      "1130:  }",
      "1131: yy60:",
      "1132:  yych = *++YYCURSOR;",
      "1133:  if (yych <= '/') goto yy18;",
      "1134:  if (yych >= ':') goto yy18;",
      "1135: yy61:",
      "1141:   if (yych <= '9') goto yy61;",
      "1146:    goto yy65;",
      "1148:    if (yych == 'e') goto yy65;",
      "1152: yy63:",
      "1154: #line 694 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "616:  case 'O': goto yy4;",
      "618:  case 'R': goto yy6;",
      "619:  case 'S': goto yy7;",
      "620:  case 'a': goto yy8;",
      "621:  case 'b': goto yy9;",
      "622:  case 'd': goto yy10;",
      "623:  case 'i': goto yy11;",
      "625:  case 'r': goto yy13;",
      "626:  case 's': goto yy14;",
      "627:  case '}': goto yy15;",
      "628:  default: goto yy2;",
      "631:  ++YYCURSOR;",
      "633: #line 951 \"ext/standard/var_unserializer.re\"",
      "635: #line 636 \"ext/standard/var_unserializer.c\"",
      "638:  if (yych == ':') goto yy17;",
      "642:  if (yych == ';') goto yy19;",
      "646:  if (yych == ':') goto yy21;",
      "650:  if (yych == ':') goto yy22;",
      "654:  if (yych == ':') goto yy23;",
      "658:  if (yych == ':') goto yy24;",
      "662:  if (yych == ':') goto yy25;",
      "666:  if (yych == ':') goto yy26;",
      "670:  if (yych == ':') goto yy27;",
      "674:  if (yych == ':') goto yy28;",
      "677:  yych = *(YYMARKER = ++YYCURSOR);",
      "678:  if (yych == ':') goto yy29;",
      "679:  goto yy3;",
      "680: yy15:",
      "682: #line 945 \"ext/standard/var_unserializer.re\"",
      "688: #line 689 \"ext/standard/var_unserializer.c\"",
      "692:   goto yy31;",
      "694:  if (yych == '+') goto yy30;",
      "699:  ++YYCURSOR;",
      "700: #line 629 \"ext/standard/var_unserializer.re\"",
      "701:  {",
      "703:  ZVAL_NULL(rval);",
      "704:  return 1;",
      "705: }",
      "706: #line 707 \"ext/standard/var_unserializer.c\"",
      "707: yy21:",
      "709:  if (yych <= ',') {",
      "710:   if (yych == '+') goto yy33;",
      "711:   goto yy18;",
      "712:  } else {",
      "713:   if (yych <= '-') goto yy33;",
      "714:   if (yych <= '/') goto yy18;",
      "715:   if (yych <= '9') goto yy34;",
      "716:   goto yy18;",
      "718: yy22:",
      "719:  yych = *++YYCURSOR;",
      "720:  if (yych == '+') goto yy36;",
      "721:  if (yych <= '/') goto yy18;",
      "722:  if (yych <= '9') goto yy37;",
      "724: yy23:",
      "725:  yych = *++YYCURSOR;",
      "726:  if (yych == '+') goto yy39;",
      "728:  if (yych <= '9') goto yy40;",
      "729:  goto yy18;",
      "730: yy24:",
      "732:  if (yych <= '/') goto yy18;",
      "733:  if (yych <= '1') goto yy42;",
      "734:  goto yy18;",
      "735: yy25:",
      "736:  yych = *++YYCURSOR;",
      "737:  if (yych <= '/') {",
      "738:   if (yych <= ',') {",
      "739:    if (yych == '+') goto yy43;",
      "740:    goto yy18;",
      "741:   } else {",
      "742:    if (yych <= '-') goto yy44;",
      "743:    if (yych <= '.') goto yy45;",
      "744:    goto yy18;",
      "746:  } else {",
      "747:   if (yych <= 'I') {",
      "748:    if (yych <= '9') goto yy46;",
      "749:    if (yych <= 'H') goto yy18;",
      "750:    goto yy48;",
      "751:   } else {",
      "752:    if (yych == 'N') goto yy49;",
      "753:    goto yy18;",
      "756: yy26:",
      "757:  yych = *++YYCURSOR;",
      "758:  if (yych <= ',') {",
      "759:   if (yych == '+') goto yy50;",
      "760:   goto yy18;",
      "761:  } else {",
      "762:   if (yych <= '-') goto yy50;",
      "763:   if (yych <= '/') goto yy18;",
      "764:   if (yych <= '9') goto yy51;",
      "765:   goto yy18;",
      "767: yy27:",
      "768:  yych = *++YYCURSOR;",
      "769:  if (yych <= ',') {",
      "770:   if (yych == '+') goto yy53;",
      "771:   goto yy18;",
      "772:  } else {",
      "773:   if (yych <= '-') goto yy53;",
      "774:   if (yych <= '/') goto yy18;",
      "775:   if (yych <= '9') goto yy54;",
      "776:   goto yy18;",
      "778: yy28:",
      "781:   if (yych == '+') goto yy56;",
      "782:   goto yy18;",
      "784:   if (yych <= '-') goto yy56;",
      "786:   if (yych <= '9') goto yy57;",
      "789: yy29:",
      "791:  if (yych == '+') goto yy59;",
      "793:  if (yych <= '9') goto yy60;",
      "794:  goto yy18;",
      "795: yy30:",
      "796:  yych = *++YYCURSOR;",
      "797:  if (yybm[0+yych] & 128) {",
      "798:   goto yy31;",
      "799:  }",
      "800:  goto yy18;",
      "801: yy31:",
      "805:  if (yybm[0+yych] & 128) {",
      "806:   goto yy31;",
      "807:  }",
      "809:  if (yych <= ':') goto yy62;",
      "810:  goto yy18;",
      "811: yy33:",
      "813:  if (yych <= '/') goto yy18;",
      "814:  if (yych >= ':') goto yy18;",
      "815: yy34:",
      "817:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
      "818:  yych = *YYCURSOR;",
      "821:  if (yych == ';') goto yy63;",
      "823: yy36:",
      "827: yy37:",
      "832:  if (yych <= '9') goto yy37;",
      "833:  if (yych <= ':') goto yy65;",
      "834:  goto yy18;",
      "835: yy39:",
      "837:  if (yych <= '/') goto yy18;",
      "838:  if (yych >= ':') goto yy18;",
      "839: yy40:",
      "841:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
      "842:  yych = *YYCURSOR;",
      "843:  if (yych <= '/') goto yy18;",
      "844:  if (yych <= '9') goto yy40;",
      "845:  if (yych <= ':') goto yy66;",
      "846:  goto yy18;",
      "847: yy42:",
      "848:  yych = *++YYCURSOR;",
      "849:  if (yych == ';') goto yy67;",
      "850:  goto yy18;",
      "851: yy43:",
      "852:  yych = *++YYCURSOR;",
      "853:  if (yych == '.') goto yy45;",
      "854:  if (yych <= '/') goto yy18;",
      "855:  if (yych <= '9') goto yy46;",
      "856:  goto yy18;",
      "857: yy44:",
      "858:  yych = *++YYCURSOR;",
      "859:  if (yych <= '/') {",
      "860:   if (yych != '.') goto yy18;",
      "861:  } else {",
      "862:   if (yych <= '9') goto yy46;",
      "863:   if (yych == 'I') goto yy48;",
      "864:   goto yy18;",
      "866: yy45:",
      "867:  yych = *++YYCURSOR;",
      "868:  if (yych <= '/') goto yy18;",
      "869:  if (yych <= '9') goto yy69;",
      "870:  goto yy18;",
      "871: yy46:",
      "872:  ++YYCURSOR;",
      "873:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
      "874:  yych = *YYCURSOR;",
      "875:  if (yych <= ':') {",
      "876:   if (yych <= '.') {",
      "877:    if (yych <= '-') goto yy18;",
      "878:    goto yy69;",
      "879:   } else {",
      "880:    if (yych <= '/') goto yy18;",
      "881:    if (yych <= '9') goto yy46;",
      "882:    goto yy18;",
      "883:   }",
      "884:  } else {",
      "885:   if (yych <= 'E') {",
      "886:    if (yych <= ';') goto yy71;",
      "887:    if (yych <= 'D') goto yy18;",
      "888:    goto yy73;",
      "889:   } else {",
      "890:    if (yych == 'e') goto yy73;",
      "891:    goto yy18;",
      "892:   }",
      "894: yy48:",
      "895:  yych = *++YYCURSOR;",
      "896:  if (yych == 'N') goto yy74;",
      "897:  goto yy18;",
      "898: yy49:",
      "899:  yych = *++YYCURSOR;",
      "900:  if (yych == 'A') goto yy75;",
      "901:  goto yy18;",
      "902: yy50:",
      "905:  if (yych >= ':') goto yy18;",
      "906: yy51:",
      "907:  ++YYCURSOR;",
      "908:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
      "909:  yych = *YYCURSOR;",
      "910:  if (yych <= '/') goto yy18;",
      "911:  if (yych <= '9') goto yy51;",
      "912:  if (yych == ';') goto yy76;",
      "914: yy53:",
      "918: yy54:",
      "923:  if (yych <= '9') goto yy54;",
      "924:  if (yych <= ':') goto yy78;",
      "925:  goto yy18;",
      "926: yy56:",
      "928:  if (yych <= '/') goto yy18;",
      "929:  if (yych >= ':') goto yy18;",
      "930: yy57:",
      "932:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
      "933:  yych = *YYCURSOR;",
      "935:  if (yych <= '9') goto yy57;",
      "936:  if (yych == ';') goto yy79;",
      "938: yy59:",
      "942: yy60:",
      "947:  if (yych <= '9') goto yy60;",
      "948:  if (yych <= ':') goto yy81;",
      "949:  goto yy18;",
      "950: yy62:",
      "952:  if (yych == '\"') goto yy82;",
      "953:  goto yy18;",
      "954: yy63:",
      "956: #line 580 \"ext/standard/var_unserializer.re\"",
      "958:  zend_long id;",
      "961:  if (!var_hash) return 0;",
      "963:  id = parse_iv(start + 2) - 1;",
      "964:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
      "968:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
      "972:  if (Z_ISREF_P(rval_ref)) {",
      "973:   ZVAL_COPY(rval, rval_ref);",
      "974:  } else {",
      "975:   ZVAL_NEW_REF(rval_ref, rval_ref);",
      "976:   ZVAL_COPY(rval, rval_ref);",
      "977:  }",
      "981: #line 982 \"ext/standard/var_unserializer.c\"",
      "982: yy65:",
      "984:  if (yych == '\"') goto yy84;",
      "986: yy66:",
      "988:  if (yych == '{') goto yy86;",
      "990: yy67:",
      "992: #line 635 \"ext/standard/var_unserializer.re\"",
      "993:  {",
      "995:  ZVAL_BOOL(rval, parse_iv(start + 2));",
      "996:  return 1;",
      "997: }",
      "998: #line 999 \"ext/standard/var_unserializer.c\"",
      "999: yy69:",
      "1005:   if (yych <= '9') goto yy69;",
      "1010:    goto yy73;",
      "1012:    if (yych == 'e') goto yy73;",
      "1016: yy71:",
      "1018: #line 683 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1160:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
      "1161:  return 1;",
      "1162: }",
      "1165:  yych = *++YYCURSOR;",
      "1166:  if (yych <= ',') {",
      "1168:  } else {",
      "1170:   if (yych <= '/') goto yy18;",
      "1172:   goto yy18;",
      "1173:  }",
      "1175:  yych = *++YYCURSOR;",
      "1191:  goto yy18;",
      "1193:  yych = *++YYCURSOR;",
      "1196:  goto yy18;",
      "1198:  ++YYCURSOR;",
      "1210:   } else {",
      "1213:   }",
      "1214:  }",
      "1219:  yych = *++YYCURSOR;",
      "1221:  ++YYCURSOR;",
      "1223:  {",
      "1234:  }",
      "1236:  return 1;",
      "1237: }",
      "1240:  yych = *++YYCURSOR;",
      "1242:  goto yy18;",
      "1258:  ++YYCURSOR;",
      "1266:  {",
      "1272:  }",
      "1281:    }",
      "1284:   }",
      "1290: }",
      "1298:  ++YYCURSOR;",
      "1300:  {",
      "1303:  return 1;",
      "1304: }",
      "1307:  ++YYCURSOR;",
      "1309:  {",
      "1313: }",
      "1316:  yych = *++YYCURSOR;",
      "1317:  if (yych <= ',') {",
      "1319:  } else {",
      "1321:   if (yych <= '/') goto yy18;",
      "1324:  }",
      "1330:  ++YYCURSOR;",
      "1331:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
      "1332:  yych = *YYCURSOR;",
      "1333:  if (yych <= '/') goto yy18;",
      "1336:  ++YYCURSOR;",
      "1338:  {",
      "1346:   return 0;",
      "1347:  }",
      "1350:   return 0;",
      "1351:  }",
      "1356:  }",
      "1360:  return 1;",
      "1361: }",
      "1373: yy96:",
      "1374:  yych = *++YYCURSOR;",
      "1375:  if (yych <= '/') goto yy18;",
      "1377: yy97:",
      "1378:  ++YYCURSOR;",
      "1386:  {",
      "1404:  } else {",
      "1407:  }",
      "1409:  return 1;",
      "1410: }",
      "1412: }",
      "1416:  return 0;",
      "",
      "[Removed Lines]",
      "1163: #line 1164 \"ext/standard/var_unserializer.c\"",
      "1164: yy65:",
      "1167:   if (yych != '+') goto yy18;",
      "1169:   if (yych <= '-') goto yy66;",
      "1171:   if (yych <= '9') goto yy67;",
      "1174: yy66:",
      "1176:  if (yych <= ',') {",
      "1177:   if (yych == '+') goto yy69;",
      "1178:   goto yy18;",
      "1179:  } else {",
      "1180:   if (yych <= '-') goto yy69;",
      "1181:   if (yych <= '/') goto yy18;",
      "1182:   if (yych >= ':') goto yy18;",
      "1183:  }",
      "1184: yy67:",
      "1185:  ++YYCURSOR;",
      "1186:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
      "1187:  yych = *YYCURSOR;",
      "1188:  if (yych <= '/') goto yy18;",
      "1189:  if (yych <= '9') goto yy67;",
      "1190:  if (yych == ';') goto yy63;",
      "1192: yy69:",
      "1194:  if (yych <= '/') goto yy18;",
      "1195:  if (yych <= '9') goto yy67;",
      "1197: yy70:",
      "1199:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
      "1200:  yych = *YYCURSOR;",
      "1201:  if (yych <= ';') {",
      "1202:   if (yych <= '/') goto yy18;",
      "1203:   if (yych <= '9') goto yy70;",
      "1204:   if (yych <= ':') goto yy18;",
      "1205:   goto yy63;",
      "1206:  } else {",
      "1207:   if (yych <= 'E') {",
      "1208:    if (yych <= 'D') goto yy18;",
      "1209:    goto yy65;",
      "1211:    if (yych == 'e') goto yy65;",
      "1212:    goto yy18;",
      "1215: yy72:",
      "1216:  yych = *++YYCURSOR;",
      "1217:  if (yych != 'F') goto yy18;",
      "1218: yy73:",
      "1220:  if (yych != ';') goto yy18;",
      "1222: #line 678 \"ext/standard/var_unserializer.re\"",
      "1226:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
      "1227:   ZVAL_DOUBLE(rval, php_get_nan());",
      "1228:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
      "1229:   ZVAL_DOUBLE(rval, php_get_inf());",
      "1230:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
      "1231:   ZVAL_DOUBLE(rval, -php_get_inf());",
      "1232:  } else {",
      "1233:   ZVAL_NULL(rval);",
      "1238: #line 1239 \"ext/standard/var_unserializer.c\"",
      "1239: yy76:",
      "1241:  if (yych == 'N') goto yy73;",
      "1243: yy77:",
      "1244:  yych = *++YYCURSOR;",
      "1245:  if (yych <= ',') {",
      "1246:   if (yych != '+') goto yy18;",
      "1247:  } else {",
      "1248:   if (yych <= '-') goto yy78;",
      "1249:   if (yych <= '/') goto yy18;",
      "1250:   if (yych <= '9') goto yy79;",
      "1251:   goto yy18;",
      "1252:  }",
      "1253: yy78:",
      "1254:  yych = *++YYCURSOR;",
      "1255:  if (yych <= '/') goto yy18;",
      "1256:  if (yych >= ':') goto yy18;",
      "1257: yy79:",
      "1259:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
      "1260:  yych = *YYCURSOR;",
      "1261:  if (yych <= '/') goto yy18;",
      "1262:  if (yych <= '9') goto yy79;",
      "1263:  if (yych != ';') goto yy18;",
      "1264:  ++YYCURSOR;",
      "1265: #line 652 \"ext/standard/var_unserializer.re\"",
      "1267: #if SIZEOF_ZEND_LONG == 4",
      "1268:  int digits = YYCURSOR - start - 3;",
      "1270:  if (start[2] == '-' || start[2] == '+') {",
      "1271:   digits--;",
      "1275:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
      "1276:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
      "1277:    int cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
      "1279:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
      "1280:     goto use_double;",
      "1282:   } else {",
      "1283:    goto use_double;",
      "1285:  }",
      "1286: #endif",
      "1288:  ZVAL_LONG(rval, parse_iv(start + 2));",
      "1289:  return 1;",
      "1291: #line 1292 \"ext/standard/var_unserializer.c\"",
      "1292: yy83:",
      "1293:  yych = *++YYCURSOR;",
      "1294:  if (yych <= '/') goto yy18;",
      "1295:  if (yych >= '2') goto yy18;",
      "1296:  yych = *++YYCURSOR;",
      "1297:  if (yych != ';') goto yy18;",
      "1299: #line 646 \"ext/standard/var_unserializer.re\"",
      "1302:  ZVAL_BOOL(rval, parse_iv(start + 2));",
      "1305: #line 1306 \"ext/standard/var_unserializer.c\"",
      "1306: yy87:",
      "1308: #line 640 \"ext/standard/var_unserializer.re\"",
      "1311:  ZVAL_NULL(rval);",
      "1312:  return 1;",
      "1314: #line 1315 \"ext/standard/var_unserializer.c\"",
      "1315: yy89:",
      "1318:   if (yych != '+') goto yy18;",
      "1320:   if (yych <= '-') goto yy90;",
      "1322:   if (yych <= '9') goto yy91;",
      "1323:   goto yy18;",
      "1325: yy90:",
      "1326:  yych = *++YYCURSOR;",
      "1327:  if (yych <= '/') goto yy18;",
      "1328:  if (yych >= ':') goto yy18;",
      "1329: yy91:",
      "1334:  if (yych <= '9') goto yy91;",
      "1335:  if (yych != ';') goto yy18;",
      "1337: #line 615 \"ext/standard/var_unserializer.re\"",
      "1339:  zend_long id;",
      "1342:  if (!var_hash) return 0;",
      "1344:  id = parse_iv(start + 2) - 1;",
      "1345:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
      "1349:  if (rval_ref == rval) {",
      "1353:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
      "1354:   ZVAL_UNDEF(rval);",
      "1355:   return 1;",
      "1358:  ZVAL_COPY(rval, rval_ref);",
      "1362: #line 1363 \"ext/standard/var_unserializer.c\"",
      "1363: yy95:",
      "1364:  yych = *++YYCURSOR;",
      "1365:  if (yych <= ',') {",
      "1366:   if (yych != '+') goto yy18;",
      "1367:  } else {",
      "1368:   if (yych <= '-') goto yy96;",
      "1369:   if (yych <= '/') goto yy18;",
      "1370:   if (yych <= '9') goto yy97;",
      "1371:   goto yy18;",
      "1372:  }",
      "1376:  if (yych >= ':') goto yy18;",
      "1379:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
      "1380:  yych = *YYCURSOR;",
      "1381:  if (yych <= '/') goto yy18;",
      "1382:  if (yych <= '9') goto yy97;",
      "1383:  if (yych != ';') goto yy18;",
      "1384:  ++YYCURSOR;",
      "1385: #line 589 \"ext/standard/var_unserializer.re\"",
      "1387:  zend_long id;",
      "1390:  if (!var_hash) return 0;",
      "1392:  id = parse_iv(start + 2) - 1;",
      "1393:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
      "1394:   return 0;",
      "1395:  }",
      "1397:  zval_ptr_dtor(rval);",
      "1398:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
      "1399:   ZVAL_UNDEF(rval);",
      "1400:   return 1;",
      "1401:  }",
      "1402:  if (Z_ISREF_P(rval_ref)) {",
      "1403:   ZVAL_COPY(rval, rval_ref);",
      "1405:   ZVAL_NEW_REF(rval_ref, rval_ref);",
      "1406:   ZVAL_COPY(rval, rval_ref);",
      "1411: #line 1412 \"ext/standard/var_unserializer.c\"",
      "1413: #line 964 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1027: #line 1028 \"ext/standard/var_unserializer.c\"",
      "1028: yy73:",
      "1031:   if (yych == '+') goto yy88;",
      "1032:   goto yy18;",
      "1034:   if (yych <= '-') goto yy88;",
      "1036:   if (yych <= '9') goto yy89;",
      "1039: yy74:",
      "1041:  if (yych == 'F') goto yy91;",
      "1043: yy75:",
      "1045:  if (yych == 'N') goto yy91;",
      "1047: yy76:",
      "1049: #line 641 \"ext/standard/var_unserializer.re\"",
      "1050:  {",
      "1051: #if SIZEOF_ZEND_LONG == 4",
      "1052:  int digits = YYCURSOR - start - 3;",
      "1054:  if (start[2] == '-' || start[2] == '+') {",
      "1055:   digits--;",
      "1056:  }",
      "1059:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
      "1060:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
      "1061:    int cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
      "1063:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
      "1064:     goto use_double;",
      "1065:    }",
      "1067:    goto use_double;",
      "1070: #endif",
      "1072:  ZVAL_LONG(rval, parse_iv(start + 2));",
      "1073:  return 1;",
      "1074: }",
      "1075: #line 1076 \"ext/standard/var_unserializer.c\"",
      "1076: yy78:",
      "1078:  if (yych == '\"') goto yy92;",
      "1079:  goto yy18;",
      "1080: yy79:",
      "1082: #line 605 \"ext/standard/var_unserializer.re\"",
      "1084:  zend_long id;",
      "1087:  if (!var_hash) return 0;",
      "1089:  id = parse_iv(start + 2) - 1;",
      "1090:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
      "1091:   return 0;",
      "1092:  }",
      "1094:  if (rval_ref == rval) {",
      "1095:   return 0;",
      "1098:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
      "1099:   return 0;",
      "1100:  }",
      "1102:  ZVAL_COPY(rval, rval_ref);",
      "1106: #line 1107 \"ext/standard/var_unserializer.c\"",
      "1107: yy81:",
      "1109:  if (yych == '\"') goto yy94;",
      "1111: yy82:",
      "1113: #line 793 \"ext/standard/var_unserializer.re\"",
      "1115:  size_t len, len2, len3, maxlen;",
      "1116:  zend_long elements;",
      "1117:  char *str;",
      "1118:  zend_string *class_name;",
      "1119:  zend_class_entry *ce;",
      "1120:  int incomplete_class = 0;",
      "1122:  int custom_object = 0;",
      "1124:  zval user_func;",
      "1125:  zval retval;",
      "1126:  zval args[1];",
      "1128:     if (!var_hash) return 0;",
      "1129:  if (*start == 'C') {",
      "1130:   custom_object = 1;",
      "1133:  len2 = len = parse_uiv(start + 2);",
      "1134:  maxlen = max - YYCURSOR;",
      "1135:  if (maxlen < len || len == 0) {",
      "1137:   return 0;",
      "1138:  }",
      "1140:  str = (char*)YYCURSOR;",
      "1142:  YYCURSOR += len;",
      "1144:  if (*(YYCURSOR) != '\"') {",
      "1146:   return 0;",
      "1147:  }",
      "1148:  if (*(YYCURSOR+1) != ':') {",
      "1150:   return 0;",
      "1151:  }",
      "1153:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
      "1154:  if (len3 != len)",
      "1155:  {",
      "1157:   return 0;",
      "1158:  }",
      "1160:  class_name = zend_string_init(str, len, 0);",
      "1162:  do {",
      "1163:   if(!unserialize_allowed_class(class_name, classes)) {",
      "1164:    incomplete_class = 1;",
      "1165:    ce = PHP_IC_ENTRY;",
      "1166:    break;",
      "1167:   }",
      "1170:   BG(serialize_lock)++;",
      "1171:   ce = zend_lookup_class(class_name);",
      "1172:   if (ce) {",
      "1173:    BG(serialize_lock)--;",
      "1174:    if (EG(exception)) {",
      "1175:     zend_string_release(class_name);",
      "1176:     return 0;",
      "1178:    break;",
      "1180:   BG(serialize_lock)--;",
      "1182:   if (EG(exception)) {",
      "1183:    zend_string_release(class_name);",
      "1184:    return 0;",
      "1185:   }",
      "1188:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
      "1189:    incomplete_class = 1;",
      "1190:    ce = PHP_IC_ENTRY;",
      "1191:    break;",
      "1192:   }",
      "1195:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
      "1197:   ZVAL_STR_COPY(&args[0], class_name);",
      "1198:   BG(serialize_lock)++;",
      "1199:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
      "1200:    BG(serialize_lock)--;",
      "1201:    if (EG(exception)) {",
      "1202:     zend_string_release(class_name);",
      "1203:     zval_ptr_dtor(&user_func);",
      "1204:     zval_ptr_dtor(&args[0]);",
      "1205:     return 0;",
      "1206:    }",
      "1207:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
      "1208:    incomplete_class = 1;",
      "1209:    ce = PHP_IC_ENTRY;",
      "1210:    zval_ptr_dtor(&user_func);",
      "1211:    zval_ptr_dtor(&args[0]);",
      "1212:    break;",
      "1213:   }",
      "1214:   BG(serialize_lock)--;",
      "1215:   zval_ptr_dtor(&retval);",
      "1216:   if (EG(exception)) {",
      "1217:    zend_string_release(class_name);",
      "1218:    zval_ptr_dtor(&user_func);",
      "1219:    zval_ptr_dtor(&args[0]);",
      "1220:    return 0;",
      "1221:   }",
      "1224:   BG(serialize_lock)++;",
      "1225:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
      "1226:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
      "1227:    incomplete_class = 1;",
      "1228:    ce = PHP_IC_ENTRY;",
      "1229:   }",
      "1230:   BG(serialize_lock)--;",
      "1232:   zval_ptr_dtor(&user_func);",
      "1233:   zval_ptr_dtor(&args[0]);",
      "1234:   break;",
      "1235:  } while (1);",
      "1239:  if (custom_object) {",
      "1240:   int ret;",
      "1242:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
      "1244:   if (ret && incomplete_class) {",
      "1245:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
      "1246:   }",
      "1247:   zend_string_release(class_name);",
      "1248:   return ret;",
      "1249:  }",
      "1251:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
      "1253:  if (elements < 0) {",
      "1254:     zend_string_release(class_name);",
      "1255:     return 0;",
      "1256:  }",
      "1258:  if (incomplete_class) {",
      "1259:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
      "1260:  }",
      "1261:  zend_string_release(class_name);",
      "1263:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
      "1265: #line 1266 \"ext/standard/var_unserializer.c\"",
      "1266: yy84:",
      "1268: #line 724 \"ext/standard/var_unserializer.re\"",
      "1270:  size_t len, maxlen;",
      "1271:  zend_string *str;",
      "1273:  len = parse_uiv(start + 2);",
      "1274:  maxlen = max - YYCURSOR;",
      "1275:  if (maxlen < len) {",
      "1277:   return 0;",
      "1278:  }",
      "1280:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
      "1281:   return 0;",
      "1282:  }",
      "1284:  if (*(YYCURSOR) != '\"') {",
      "1285:   zend_string_free(str);",
      "1287:   return 0;",
      "1288:  }",
      "1290:  if (*(YYCURSOR + 1) != ';') {",
      "1291:   efree(str);",
      "1293:   return 0;",
      "1294:  }",
      "1296:  YYCURSOR += 2;",
      "1299:  ZVAL_STR(rval, str);",
      "1302: #line 1303 \"ext/standard/var_unserializer.c\"",
      "1303: yy86:",
      "1305: #line 758 \"ext/standard/var_unserializer.re\"",
      "1307:  zend_long elements = parse_iv(start + 2);",
      "1310:     if (!var_hash) return 0;",
      "1312:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
      "1313:   return 0;",
      "1314:  }",
      "1316:  array_init_size(rval, elements);",
      "1317:  if (elements) {",
      "1320:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
      "1321:  }",
      "1323:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
      "1324:   return 0;",
      "1325:  }",
      "1327:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
      "1329: #line 1330 \"ext/standard/var_unserializer.c\"",
      "1330: yy88:",
      "1333:   if (yych == '+') goto yy96;",
      "1334:   goto yy18;",
      "1336:   if (yych <= '-') goto yy96;",
      "1338:   if (yych >= ':') goto yy18;",
      "1340: yy89:",
      "1345:  if (yych <= '9') goto yy89;",
      "1346:  if (yych == ';') goto yy71;",
      "1347:  goto yy18;",
      "1348: yy91:",
      "1349:  yych = *++YYCURSOR;",
      "1350:  if (yych == ';') goto yy97;",
      "1351:  goto yy18;",
      "1352: yy92:",
      "1354: #line 782 \"ext/standard/var_unserializer.re\"",
      "1356:  zend_long elements;",
      "1357:     if (!var_hash) return 0;",
      "1359:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
      "1360:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
      "1361:   return 0;",
      "1362:  }",
      "1363:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
      "1364: }",
      "1365: #line 1366 \"ext/standard/var_unserializer.c\"",
      "1366: yy94:",
      "1367:  ++YYCURSOR;",
      "1368: #line 692 \"ext/standard/var_unserializer.re\"",
      "1369:  {",
      "1370:  size_t len, maxlen;",
      "1371:  char *str;",
      "1373:  len = parse_uiv(start + 2);",
      "1374:  maxlen = max - YYCURSOR;",
      "1375:  if (maxlen < len) {",
      "1380:  str = (char*)YYCURSOR;",
      "1382:  YYCURSOR += len;",
      "1384:  if (*(YYCURSOR) != '\"') {",
      "1389:  if (*(YYCURSOR + 1) != ';') {",
      "1391:   return 0;",
      "1394:  YYCURSOR += 2;",
      "1397:  ZVAL_STRINGL(rval, str, len);",
      "1400: #line 1401 \"ext/standard/var_unserializer.c\"",
      "1404:  if (yych <= '9') goto yy89;",
      "1405:  goto yy18;",
      "1408: #line 667 \"ext/standard/var_unserializer.re\"",
      "1412:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
      "1413:   ZVAL_DOUBLE(rval, php_get_nan());",
      "1414:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
      "1415:   ZVAL_DOUBLE(rval, php_get_inf());",
      "1416:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
      "1417:   ZVAL_DOUBLE(rval, -php_get_inf());",
      "1419:   ZVAL_NULL(rval);",
      "1424: #line 1425 \"ext/standard/var_unserializer.c\"",
      "1426: #line 953 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------"
    ],
    "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
      "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
      "--- Hunk 1 ---",
      "[Context before]",
      "409:    return 0;",
      "410:   }",
      "422:   zval_dtor(&key);",
      "424:   if (elements && *(*p-1) != ';' && *(*p-1) != '}') {",
      "",
      "[Removed Lines]",
      "412:   if (UNEXPECTED(Z_ISUNDEF_P(data))) {",
      "413:    if (Z_TYPE(key) == IS_LONG) {",
      "414:     zend_hash_index_del(ht, Z_LVAL(key));",
      "415:    } else {",
      "416:     zend_hash_del_ind(ht, Z_STR(key));",
      "417:    }",
      "418:   } else {",
      "419:    var_push_dtor(var_hash, data);",
      "420:   }",
      "",
      "[Added Lines]",
      "412:   var_push_dtor(var_hash, data);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "597:   return 0;",
      "598:  }",
      "601:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
      "604:  }",
      "605:  if (Z_ISREF_P(rval_ref)) {",
      "606:   ZVAL_COPY(rval, rval_ref);",
      "607:  } else {",
      "",
      "[Removed Lines]",
      "600:  zval_ptr_dtor(rval);",
      "602:   ZVAL_UNDEF(rval);",
      "603:   return 1;",
      "",
      "[Added Lines]",
      "592:   return 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "628:  }",
      "630:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
      "633:  }",
      "635:  ZVAL_COPY(rval, rval_ref);",
      "",
      "[Removed Lines]",
      "631:   ZVAL_UNDEF(rval);",
      "632:   return 1;",
      "",
      "[Added Lines]",
      "621:   return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fa2125df6766bb7edac0a0bf433940465da9af4b",
      "candidate_info": {
        "commit_hash": "fa2125df6766bb7edac0a0bf433940465da9af4b",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/fa2125df6766bb7edac0a0bf433940465da9af4b",
        "files": [
          "ext/exif/exif.c",
          "ext/exif/tests/bug73737.phpt",
          "ext/exif/tests/bug73737.tiff",
          "ext/phar/phar.c",
          "ext/phar/tests/bug73764.phar",
          "ext/phar/tests/bug73764.phpt",
          "ext/phar/tests/bug73768.phar",
          "ext/phar/tests/bug73768.phpt",
          "ext/standard/tests/serialize/bug73825.phpt",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Merge branch 'PHP-5.6.30' into PHP-5.6\n\n* PHP-5.6.30:\n  Fix bug #73737 FPE when parsing a tag format\n  Fix bug #73773 - Seg fault when loading hostile phar\n  Fix bug #73825 - Heap out of bounds read on unserialize in finish_nested_data()\n  Fix bug #73768 - Memory corruption when loading hostile phar\n  Fix int overflows in phar (bug #73764)",
        "before_after_code_files": [
          "ext/exif/exif.c||ext/exif/exif.c",
          "ext/exif/tests/bug73737.phpt||ext/exif/tests/bug73737.phpt",
          "ext/phar/phar.c||ext/phar/phar.c",
          "ext/phar/tests/bug73764.phpt||ext/phar/tests/bug73764.phpt",
          "ext/phar/tests/bug73768.phpt||ext/phar/tests/bug73768.phpt",
          "ext/standard/tests/serialize/bug73825.phpt||ext/standard/tests/serialize/bug73825.phpt",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "ext/exif/exif.c||ext/exif/exif.c": [
          "File: ext/exif/exif.c -> ext/exif/exif.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1303:    if (s_den == 0) {",
          "1304:     return 0;",
          "1305:    } else {",
          "1307:    }",
          "1309:   case TAG_FMT_SSHORT:    return php_ifd_get16u(value, motorola_intel);",
          "",
          "[Removed Lines]",
          "1306:     return php_ifd_get32s(value, motorola_intel) / s_den;",
          "",
          "[Added Lines]",
          "1306:     return (size_t)((double)php_ifd_get32s(value, motorola_intel) / s_den);",
          "",
          "---------------"
        ],
        "ext/exif/tests/bug73737.phpt||ext/exif/tests/bug73737.phpt": [
          "File: ext/exif/tests/bug73737.phpt -> ext/exif/tests/bug73737.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #73737 (Crash when parsing a tag format)",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded('exif')) print 'skip exif extension not available';?>",
          "5: --FILE--",
          "6: <?php",
          "7:  $exif = exif_thumbnail(__DIR__ . '/bug73737.tiff');",
          "8:  var_dump($exif);",
          "9: ?>",
          "10: --EXPECTF--",
          "11: Warning: exif_thumbnail(bug73737.tiff): Error in TIFF: filesize(x0030) less than start of IFD dir(x10102) in %s line %d",
          "12: bool(false)",
          "",
          "---------------"
        ],
        "ext/phar/phar.c||ext/phar/phar.c": [
          "File: ext/phar/phar.c -> ext/phar/phar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "982:   if (alias && alias_len && (alias_len != (int)tmp_len || strncmp(alias, buffer, tmp_len)))",
          "983:   {",
          "985:    php_stream_close(fp);",
          "987:    if (signature) {",
          "",
          "[Removed Lines]",
          "984:    buffer[tmp_len] = '\\0';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "989:    }",
          "991:    if (error) {",
          "993:    }",
          "995:    efree(savebuf);",
          "",
          "[Removed Lines]",
          "992:     spprintf(error, 0, \"cannot load phar \\\"%s\\\" with implicit alias \\\"%s\\\" under different alias \\\"%s\\\"\", fname, buffer, alias);",
          "",
          "[Added Lines]",
          "991:     spprintf(error, 0, \"cannot load phar \\\"%s\\\" with implicit alias \\\"%.*s\\\" under different alias \\\"%s\\\"\", fname, tmp_len, buffer, alias);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1055:  entry.is_persistent = mydata->is_persistent;",
          "1057:  for (manifest_index = 0; manifest_index < manifest_count; ++manifest_index) {",
          "1059:    MAPPHAR_FAIL(\"internal corruption of phar \\\"%s\\\" (truncated manifest entry)\")",
          "1060:   }",
          "",
          "[Removed Lines]",
          "1058:   if (buffer + 4 > endbuffer) {",
          "",
          "[Added Lines]",
          "1057:   if (buffer + 28 > endbuffer) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1069:    entry.manifest_pos = manifest_index;",
          "1070:   }",
          "1073:    MAPPHAR_FAIL(\"internal corruption of phar \\\"%s\\\" (truncated manifest entry)\");",
          "1074:   }",
          "",
          "[Removed Lines]",
          "1072:   if (entry.filename_len + 20 > endbuffer - buffer) {",
          "",
          "[Added Lines]",
          "1071:   if (entry.filename_len > endbuffer - buffer - 24) {",
          "",
          "---------------"
        ],
        "ext/phar/tests/bug73764.phpt||ext/phar/tests/bug73764.phpt": [
          "File: ext/phar/tests/bug73764.phpt -> ext/phar/tests/bug73764.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Phar: PHP bug #73764: Crash while loading hostile phar archive",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded(\"phar\")) die(\"skip\"); ?>",
          "5: --FILE--",
          "6: <?php",
          "7: chdir(__DIR__);",
          "8: try {",
          "9: $p = Phar::LoadPhar('bug73764.phar', 'alias.phar');",
          "10: echo \"OK\\n\";",
          "11: } catch(PharException $e) {",
          "12:  echo $e->getMessage();",
          "13: }",
          "14: ?>",
          "15: --EXPECTF--",
          "16: internal corruption of phar \"%sbug73764.phar\" (truncated manifest entry)",
          "",
          "---------------"
        ],
        "ext/phar/tests/bug73768.phpt||ext/phar/tests/bug73768.phpt": [
          "File: ext/phar/tests/bug73768.phpt -> ext/phar/tests/bug73768.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Phar: PHP bug #73768: Memory corruption when loading hostile phar",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded(\"phar\")) die(\"skip\"); ?>",
          "5: --FILE--",
          "6: <?php",
          "7: chdir(__DIR__);",
          "8: try {",
          "9: $p = Phar::LoadPhar('bug73768.phar', 'alias.phar');",
          "10: echo \"OK\\n\";",
          "11: } catch(PharException $e) {",
          "12:  echo $e->getMessage();",
          "13: }",
          "14: ?>",
          "15: --EXPECTF--",
          "16: cannot load phar \"%sbug73768.phar\" with implicit alias \"\" under different alias \"alias.phar\"",
          "",
          "---------------"
        ],
        "ext/standard/tests/serialize/bug73825.phpt||ext/standard/tests/serialize/bug73825.phpt": [
          "File: ext/standard/tests/serialize/bug73825.phpt -> ext/standard/tests/serialize/bug73825.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #73825 Heap out of bounds read on unserialize in finish_nested_data()",
          "3: --FILE--",
          "4: <?php",
          "5: $obj = unserialize('O:8:\"00000000\":');",
          "6: var_dump($obj);",
          "7: ?>",
          "8: --EXPECTF--",
          "9: Warning: Bad unserialize data in %sbug73825.php on line %d",
          "11: Notice: unserialize(): Error at offset 13 of 15 bytes in %sbug73825.php on line %d",
          "12: bool(false)",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "405: {",
          "406:  long elements;",
          "408:  elements = parse_iv2((*p) + 2, p);",
          "410:  (*p) += 2;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "408:  if( *p >= max - 2) {",
          "409:   zend_error(E_WARNING, \"Bad unserialize data\");",
          "410:   return -1;",
          "411:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "417:   zend_error(E_WARNING, \"Erroneous data format for unserializing '%s'\", ce->name);",
          "419:  }",
          "421:  return elements;",
          "",
          "[Removed Lines]",
          "418:   return 0;",
          "",
          "[Added Lines]",
          "423:   return -1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "496: {",
          "497:  YYCTYPE yych;",
          "498:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "495: #line 496 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "500: #line 501 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "529:     0,   0,   0,   0,   0,   0,   0,   0,",
          "530:     0,   0,   0,   0,   0,   0,   0,   0,",
          "531:  };",
          "532:  if ((YYLIMIT - YYCURSOR) < 7) YYFILL(7);",
          "533:  yych = *YYCURSOR;",
          "534:  switch (yych) {",
          "535:  case 'C':",
          "537:  case 'N': goto yy5;",
          "544:  case 'o': goto yy12;",
          "549:  }",
          "550: yy2:",
          "552: yy3:",
          "554:  { return 0; }",
          "556: yy4:",
          "557:  yych = *(YYMARKER = ++YYCURSOR);",
          "559:  goto yy3;",
          "560: yy5:",
          "561:  yych = *++YYCURSOR;",
          "563:  goto yy3;",
          "564: yy6:",
          "565:  yych = *(YYMARKER = ++YYCURSOR);",
          "567:  goto yy3;",
          "568: yy7:",
          "569:  yych = *(YYMARKER = ++YYCURSOR);",
          "571:  goto yy3;",
          "572: yy8:",
          "573:  yych = *(YYMARKER = ++YYCURSOR);",
          "575:  goto yy3;",
          "576: yy9:",
          "577:  yych = *(YYMARKER = ++YYCURSOR);",
          "579:  goto yy3;",
          "580: yy10:",
          "581:  yych = *(YYMARKER = ++YYCURSOR);",
          "583:  goto yy3;",
          "584: yy11:",
          "585:  yych = *(YYMARKER = ++YYCURSOR);",
          "587:  goto yy3;",
          "588: yy12:",
          "589:  yych = *(YYMARKER = ++YYCURSOR);",
          "591:  goto yy3;",
          "592: yy13:",
          "593:  yych = *(YYMARKER = ++YYCURSOR);",
          "595:  goto yy3;",
          "596: yy14:",
          "601:  ++YYCURSOR;",
          "603:  {",
          "605:  php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"Unexpected end of serialized data\");",
          "607: }",
          "609: yy17:",
          "610:  yych = *++YYCURSOR;",
          "611:  if (yybm[0+yych] & 128) {",
          "613:  }",
          "615: yy18:",
          "616:  YYCURSOR = YYMARKER;",
          "617:  goto yy3;",
          "618: yy19:",
          "629:  yych = *++YYCURSOR;",
          "638:  }",
          "650:  goto yy18;",
          "653:  if (yych <= '/') goto yy18;",
          "657:  yych = *++YYCURSOR;",
          "666:   }",
          "672:   } else {",
          "675:   }",
          "676:  }",
          "687:  }",
          "698:  }",
          "700:  yych = *++YYCURSOR;",
          "701:  if (yych <= ',') {",
          "704:  } else {",
          "706:   if (yych <= '/') goto yy18;",
          "708:   goto yy18;",
          "709:  }",
          "711:  yych = *++YYCURSOR;",
          "713:  if (yych <= '/') goto yy18;",
          "723:  ++YYCURSOR;",
          "724:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "725:  yych = *YYCURSOR;",
          "729:  if (yych <= '/') goto yy18;",
          "733:  yych = *++YYCURSOR;",
          "737:  ++YYCURSOR;",
          "740:  if (yych <= '/') goto yy18;",
          "741:  if (yych <= '9') goto yy34;",
          "743:  goto yy18;",
          "745:  yych = *++YYCURSOR;",
          "746:  if (yych <= '/') goto yy18;",
          "747:  if (yych >= ':') goto yy18;",
          "749:  ++YYCURSOR;",
          "750:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "751:  yych = *YYCURSOR;",
          "752:  if (yych <= '/') goto yy18;",
          "757:  yych = *++YYCURSOR;",
          "761:  ++YYCURSOR;",
          "786:  }",
          "814:  }",
          "824:  yych = *++YYCURSOR;",
          "825:  if (yych <= '/') goto yy18;",
          "834:  goto yy18;",
          "836:  yych = *++YYCURSOR;",
          "837:  if (yych <= '/') goto yy18;",
          "838:  if (yych >= ':') goto yy18;",
          "840:  ++YYCURSOR;",
          "841:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "842:  yych = *YYCURSOR;",
          "843:  if (yych <= '/') goto yy18;",
          "848:  yych = *++YYCURSOR;",
          "852:  ++YYCURSOR;",
          "855:  if (yych <= '/') goto yy18;",
          "858:  goto yy18;",
          "860:  yych = *++YYCURSOR;",
          "861:  if (yych <= '/') goto yy18;",
          "862:  if (yych >= ':') goto yy18;",
          "864:  ++YYCURSOR;",
          "865:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "866:  yych = *YYCURSOR;",
          "867:  if (yych <= '/') goto yy18;",
          "872:  yych = *++YYCURSOR;",
          "876:  ++YYCURSOR;",
          "878:  {",
          "886:   return 0;",
          "887:  }",
          "891:  }",
          "896:  return 1;",
          "897: }",
          "900:  yych = *++YYCURSOR;",
          "902:  goto yy18;",
          "904:  yych = *++YYCURSOR;",
          "906:  goto yy18;",
          "908:  ++YYCURSOR;",
          "918:  ++YYCURSOR;",
          "919:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "920:  yych = *YYCURSOR;",
          "921:  if (yych <= ';') {",
          "922:   if (yych <= '/') goto yy18;",
          "924:   if (yych <= ':') goto yy18;",
          "925:  } else {",
          "926:   if (yych <= 'E') {",
          "927:    if (yych <= 'D') goto yy18;",
          "929:   } else {",
          "931:    goto yy18;",
          "932:   }",
          "933:  }",
          "935:  ++YYCURSOR;",
          "937:  {",
          "938: #if SIZEOF_LONG == 4",
          "939: use_double:",
          "",
          "[Removed Lines]",
          "536:  case 'O': goto yy4;",
          "538:  case 'R': goto yy6;",
          "539:  case 'S': goto yy7;",
          "540:  case 'a': goto yy8;",
          "541:  case 'b': goto yy9;",
          "542:  case 'd': goto yy10;",
          "543:  case 'i': goto yy11;",
          "545:  case 'r': goto yy13;",
          "546:  case 's': goto yy14;",
          "547:  case '}': goto yy15;",
          "548:  default: goto yy2;",
          "551:  ++YYCURSOR;",
          "553: #line 863 \"ext/standard/var_unserializer.re\"",
          "555: #line 556 \"ext/standard/var_unserializer.c\"",
          "558:  if (yych == ':') goto yy17;",
          "562:  if (yych == ';') goto yy19;",
          "566:  if (yych == ':') goto yy21;",
          "570:  if (yych == ':') goto yy22;",
          "574:  if (yych == ':') goto yy23;",
          "578:  if (yych == ':') goto yy24;",
          "582:  if (yych == ':') goto yy25;",
          "586:  if (yych == ':') goto yy26;",
          "590:  if (yych == ':') goto yy27;",
          "594:  if (yych == ':') goto yy28;",
          "597:  yych = *(YYMARKER = ++YYCURSOR);",
          "598:  if (yych == ':') goto yy29;",
          "599:  goto yy3;",
          "600: yy15:",
          "602: #line 857 \"ext/standard/var_unserializer.re\"",
          "608: #line 609 \"ext/standard/var_unserializer.c\"",
          "612:   goto yy31;",
          "614:  if (yych == '+') goto yy30;",
          "619:  ++YYCURSOR;",
          "620: #line 544 \"ext/standard/var_unserializer.re\"",
          "621:  {",
          "623:  INIT_PZVAL(*rval);",
          "624:  ZVAL_NULL(*rval);",
          "625:  return 1;",
          "626: }",
          "627: #line 628 \"ext/standard/var_unserializer.c\"",
          "628: yy21:",
          "630:  if (yych <= ',') {",
          "631:   if (yych == '+') goto yy33;",
          "632:   goto yy18;",
          "633:  } else {",
          "634:   if (yych <= '-') goto yy33;",
          "635:   if (yych <= '/') goto yy18;",
          "636:   if (yych <= '9') goto yy34;",
          "637:   goto yy18;",
          "639: yy22:",
          "640:  yych = *++YYCURSOR;",
          "641:  if (yych == '+') goto yy36;",
          "642:  if (yych <= '/') goto yy18;",
          "643:  if (yych <= '9') goto yy37;",
          "644:  goto yy18;",
          "645: yy23:",
          "646:  yych = *++YYCURSOR;",
          "647:  if (yych == '+') goto yy39;",
          "648:  if (yych <= '/') goto yy18;",
          "649:  if (yych <= '9') goto yy40;",
          "651: yy24:",
          "652:  yych = *++YYCURSOR;",
          "654:  if (yych <= '1') goto yy42;",
          "655:  goto yy18;",
          "656: yy25:",
          "658:  if (yych <= '/') {",
          "659:   if (yych <= ',') {",
          "660:    if (yych == '+') goto yy43;",
          "661:    goto yy18;",
          "662:   } else {",
          "663:    if (yych <= '-') goto yy44;",
          "664:    if (yych <= '.') goto yy45;",
          "665:    goto yy18;",
          "667:  } else {",
          "668:   if (yych <= 'I') {",
          "669:    if (yych <= '9') goto yy46;",
          "670:    if (yych <= 'H') goto yy18;",
          "671:    goto yy48;",
          "673:    if (yych == 'N') goto yy49;",
          "674:    goto yy18;",
          "677: yy26:",
          "678:  yych = *++YYCURSOR;",
          "679:  if (yych <= ',') {",
          "680:   if (yych == '+') goto yy50;",
          "681:   goto yy18;",
          "682:  } else {",
          "683:   if (yych <= '-') goto yy50;",
          "684:   if (yych <= '/') goto yy18;",
          "685:   if (yych <= '9') goto yy51;",
          "686:   goto yy18;",
          "688: yy27:",
          "689:  yych = *++YYCURSOR;",
          "690:  if (yych <= ',') {",
          "691:   if (yych == '+') goto yy53;",
          "692:   goto yy18;",
          "693:  } else {",
          "694:   if (yych <= '-') goto yy53;",
          "695:   if (yych <= '/') goto yy18;",
          "696:   if (yych <= '9') goto yy54;",
          "697:   goto yy18;",
          "699: yy28:",
          "702:   if (yych == '+') goto yy56;",
          "703:   goto yy18;",
          "705:   if (yych <= '-') goto yy56;",
          "707:   if (yych <= '9') goto yy57;",
          "710: yy29:",
          "712:  if (yych == '+') goto yy59;",
          "714:  if (yych <= '9') goto yy60;",
          "715:  goto yy18;",
          "716: yy30:",
          "717:  yych = *++YYCURSOR;",
          "718:  if (yybm[0+yych] & 128) {",
          "719:   goto yy31;",
          "720:  }",
          "721:  goto yy18;",
          "722: yy31:",
          "726:  if (yybm[0+yych] & 128) {",
          "727:   goto yy31;",
          "728:  }",
          "730:  if (yych <= ':') goto yy62;",
          "731:  goto yy18;",
          "732: yy33:",
          "734:  if (yych <= '/') goto yy18;",
          "735:  if (yych >= ':') goto yy18;",
          "736: yy34:",
          "738:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "739:  yych = *YYCURSOR;",
          "742:  if (yych == ';') goto yy63;",
          "744: yy36:",
          "748: yy37:",
          "753:  if (yych <= '9') goto yy37;",
          "754:  if (yych <= ':') goto yy65;",
          "755:  goto yy18;",
          "756: yy39:",
          "758:  if (yych <= '/') goto yy18;",
          "759:  if (yych >= ':') goto yy18;",
          "760: yy40:",
          "762:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "763:  yych = *YYCURSOR;",
          "764:  if (yych <= '/') goto yy18;",
          "765:  if (yych <= '9') goto yy40;",
          "766:  if (yych <= ':') goto yy66;",
          "767:  goto yy18;",
          "768: yy42:",
          "769:  yych = *++YYCURSOR;",
          "770:  if (yych == ';') goto yy67;",
          "771:  goto yy18;",
          "772: yy43:",
          "773:  yych = *++YYCURSOR;",
          "774:  if (yych == '.') goto yy45;",
          "775:  if (yych <= '/') goto yy18;",
          "776:  if (yych <= '9') goto yy46;",
          "777:  goto yy18;",
          "778: yy44:",
          "779:  yych = *++YYCURSOR;",
          "780:  if (yych <= '/') {",
          "781:   if (yych != '.') goto yy18;",
          "782:  } else {",
          "783:   if (yych <= '9') goto yy46;",
          "784:   if (yych == 'I') goto yy48;",
          "785:   goto yy18;",
          "787: yy45:",
          "788:  yych = *++YYCURSOR;",
          "789:  if (yych <= '/') goto yy18;",
          "790:  if (yych <= '9') goto yy69;",
          "791:  goto yy18;",
          "792: yy46:",
          "793:  ++YYCURSOR;",
          "794:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "795:  yych = *YYCURSOR;",
          "796:  if (yych <= ':') {",
          "797:   if (yych <= '.') {",
          "798:    if (yych <= '-') goto yy18;",
          "799:    goto yy69;",
          "800:   } else {",
          "801:    if (yych <= '/') goto yy18;",
          "802:    if (yych <= '9') goto yy46;",
          "803:    goto yy18;",
          "804:   }",
          "805:  } else {",
          "806:   if (yych <= 'E') {",
          "807:    if (yych <= ';') goto yy71;",
          "808:    if (yych <= 'D') goto yy18;",
          "809:    goto yy73;",
          "810:   } else {",
          "811:    if (yych == 'e') goto yy73;",
          "812:    goto yy18;",
          "813:   }",
          "815: yy48:",
          "816:  yych = *++YYCURSOR;",
          "817:  if (yych == 'N') goto yy74;",
          "818:  goto yy18;",
          "819: yy49:",
          "820:  yych = *++YYCURSOR;",
          "821:  if (yych == 'A') goto yy75;",
          "822:  goto yy18;",
          "823: yy50:",
          "826:  if (yych >= ':') goto yy18;",
          "827: yy51:",
          "828:  ++YYCURSOR;",
          "829:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "830:  yych = *YYCURSOR;",
          "831:  if (yych <= '/') goto yy18;",
          "832:  if (yych <= '9') goto yy51;",
          "833:  if (yych == ';') goto yy76;",
          "835: yy53:",
          "839: yy54:",
          "844:  if (yych <= '9') goto yy54;",
          "845:  if (yych <= ':') goto yy78;",
          "846:  goto yy18;",
          "847: yy56:",
          "849:  if (yych <= '/') goto yy18;",
          "850:  if (yych >= ':') goto yy18;",
          "851: yy57:",
          "853:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "854:  yych = *YYCURSOR;",
          "856:  if (yych <= '9') goto yy57;",
          "857:  if (yych == ';') goto yy79;",
          "859: yy59:",
          "863: yy60:",
          "868:  if (yych <= '9') goto yy60;",
          "869:  if (yych <= ':') goto yy81;",
          "870:  goto yy18;",
          "871: yy62:",
          "873:  if (yych == '\"') goto yy82;",
          "874:  goto yy18;",
          "875: yy63:",
          "877: #line 500 \"ext/standard/var_unserializer.re\"",
          "879:  long id;",
          "882:  if (!var_hash) return 0;",
          "884:  id = parse_iv(start + 2) - 1;",
          "885:  if (id == -1 || var_access(var_hash, id, &rval_ref) != SUCCESS) {",
          "889:  if (*rval != NULL) {",
          "890:   var_push_dtor_no_addref(var_hash, rval);",
          "893:  Z_ADDREF_PP(rval);",
          "894:  Z_SET_ISREF_PP(rval);",
          "898: #line 899 \"ext/standard/var_unserializer.c\"",
          "899: yy65:",
          "901:  if (yych == '\"') goto yy84;",
          "903: yy66:",
          "905:  if (yych == '{') goto yy86;",
          "907: yy67:",
          "909: #line 551 \"ext/standard/var_unserializer.re\"",
          "910:  {",
          "912:  INIT_PZVAL(*rval);",
          "913:  ZVAL_BOOL(*rval, parse_iv(start + 2));",
          "914:  return 1;",
          "915: }",
          "916: #line 917 \"ext/standard/var_unserializer.c\"",
          "917: yy69:",
          "923:   if (yych <= '9') goto yy69;",
          "928:    goto yy73;",
          "930:    if (yych == 'e') goto yy73;",
          "934: yy71:",
          "936: #line 600 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "542:  case 'O': goto yy13;",
          "544:  case 'R': goto yy2;",
          "545:  case 'S': goto yy10;",
          "546:  case 'a': goto yy11;",
          "547:  case 'b': goto yy6;",
          "548:  case 'd': goto yy8;",
          "549:  case 'i': goto yy7;",
          "551:  case 'r': goto yy4;",
          "552:  case 's': goto yy9;",
          "553:  case '}': goto yy14;",
          "554:  default: goto yy16;",
          "557:  yych = *(YYMARKER = ++YYCURSOR);",
          "558:  if (yych == ':') goto yy95;",
          "560: #line 877 \"ext/standard/var_unserializer.re\"",
          "562: #line 563 \"ext/standard/var_unserializer.c\"",
          "565:  if (yych == ':') goto yy89;",
          "569:  if (yych == ';') goto yy87;",
          "573:  if (yych == ':') goto yy83;",
          "577:  if (yych == ':') goto yy77;",
          "581:  if (yych == ':') goto yy53;",
          "585:  if (yych == ':') goto yy46;",
          "589:  if (yych == ':') goto yy39;",
          "593:  if (yych == ':') goto yy32;",
          "597:  if (yych == ':') goto yy25;",
          "601:  if (yych == ':') goto yy17;",
          "605: #line 871 \"ext/standard/var_unserializer.re\"",
          "611: #line 612 \"ext/standard/var_unserializer.c\"",
          "612: yy16:",
          "613:  yych = *++YYCURSOR;",
          "614:  goto yy3;",
          "618:   goto yy20;",
          "620:  if (yych == '+') goto yy19;",
          "626:  if (yybm[0+yych] & 128) {",
          "627:   goto yy20;",
          "630: yy20:",
          "631:  ++YYCURSOR;",
          "632:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "633:  yych = *YYCURSOR;",
          "634:  if (yybm[0+yych] & 128) {",
          "635:   goto yy20;",
          "636:  }",
          "638:  if (yych >= ';') goto yy18;",
          "640:  if (yych != '\"') goto yy18;",
          "641:  ++YYCURSOR;",
          "642: #line 717 \"ext/standard/var_unserializer.re\"",
          "643:  {",
          "644:  size_t len, len2, len3, maxlen;",
          "645:  long elements;",
          "646:  char *class_name;",
          "647:  zend_class_entry *ce;",
          "648:  zend_class_entry **pce;",
          "649:  int incomplete_class = 0;",
          "651:  int custom_object = 0;",
          "653:  zval *user_func;",
          "654:  zval *retval_ptr;",
          "655:  zval **args[1];",
          "656:  zval *arg_func_name;",
          "658:     if (!var_hash) return 0;",
          "659:  if (*start == 'C') {",
          "660:   custom_object = 1;",
          "661:  }",
          "663:  INIT_PZVAL(*rval);",
          "664:  len2 = len = parse_uiv(start + 2);",
          "665:  maxlen = max - YYCURSOR;",
          "666:  if (maxlen < len || len == 0) {",
          "668:   return 0;",
          "669:  }",
          "671:  class_name = (char*)YYCURSOR;",
          "673:  YYCURSOR += len;",
          "675:  if (*(YYCURSOR) != '\"') {",
          "677:   return 0;",
          "678:  }",
          "679:  if (*(YYCURSOR+1) != ':') {",
          "681:   return 0;",
          "682:  }",
          "684:  len3 = strspn(class_name, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "685:  if (len3 != len)",
          "686:  {",
          "688:   return 0;",
          "689:  }",
          "691:  class_name = estrndup(class_name, len);",
          "693:  do {",
          "695:   BG(serialize_lock)++;",
          "696:   if (zend_lookup_class(class_name, len2, &pce TSRMLS_CC) == SUCCESS) {",
          "697:    BG(serialize_lock)--;",
          "698:    if (EG(exception)) {",
          "699:     efree(class_name);",
          "700:     return 0;",
          "701:    }",
          "702:    ce = *pce;",
          "703:    break;",
          "705:   BG(serialize_lock)--;",
          "707:   if (EG(exception)) {",
          "708:    efree(class_name);",
          "709:    return 0;",
          "710:   }",
          "713:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "714:    incomplete_class = 1;",
          "715:    ce = PHP_IC_ENTRY;",
          "716:    break;",
          "717:   }",
          "720:   MAKE_STD_ZVAL(user_func);",
          "721:   ZVAL_STRING(user_func, PG(unserialize_callback_func), 1);",
          "722:   args[0] = &arg_func_name;",
          "723:   MAKE_STD_ZVAL(arg_func_name);",
          "724:   ZVAL_STRING(arg_func_name, class_name, 1);",
          "725:   BG(serialize_lock)++;",
          "726:   if (call_user_function_ex(CG(function_table), NULL, user_func, &retval_ptr, 1, args, 0, NULL TSRMLS_CC) != SUCCESS) {",
          "727:    BG(serialize_lock)--;",
          "728:    if (EG(exception)) {",
          "729:     efree(class_name);",
          "730:     zval_ptr_dtor(&user_func);",
          "731:     zval_ptr_dtor(&arg_func_name);",
          "732:     return 0;",
          "733:    }",
          "734:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"defined (%s) but not found\", user_func->value.str.val);",
          "735:    incomplete_class = 1;",
          "736:    ce = PHP_IC_ENTRY;",
          "737:    zval_ptr_dtor(&user_func);",
          "738:    zval_ptr_dtor(&arg_func_name);",
          "739:    break;",
          "740:   }",
          "741:   BG(serialize_lock)--;",
          "742:   if (retval_ptr) {",
          "743:    zval_ptr_dtor(&retval_ptr);",
          "744:   }",
          "745:   if (EG(exception)) {",
          "746:    efree(class_name);",
          "747:    zval_ptr_dtor(&user_func);",
          "748:    zval_ptr_dtor(&arg_func_name);",
          "749:    return 0;",
          "750:   }",
          "753:   BG(serialize_lock)++;",
          "754:   if (zend_lookup_class(class_name, len2, &pce TSRMLS_CC) == SUCCESS) {",
          "755:    ce = *pce;",
          "757:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Function %s() hasn't defined the class it was called for\", user_func->value.str.val);",
          "758:    incomplete_class = 1;",
          "759:    ce = PHP_IC_ENTRY;",
          "760:   }",
          "761:   BG(serialize_lock)--;",
          "763:   zval_ptr_dtor(&user_func);",
          "764:   zval_ptr_dtor(&arg_func_name);",
          "765:   break;",
          "766:  } while (1);",
          "770:  if (custom_object) {",
          "771:   int ret;",
          "773:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "775:   if (ret && incomplete_class) {",
          "776:    php_store_class_name(*rval, class_name, len2);",
          "778:   efree(class_name);",
          "779:   return ret;",
          "782:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "784:  if (elements < 0) {",
          "785:     efree(class_name);",
          "786:     return 0;",
          "789:  if (incomplete_class) {",
          "790:   php_store_class_name(*rval, class_name, len2);",
          "792:  efree(class_name);",
          "794:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "795: }",
          "796: #line 797 \"ext/standard/var_unserializer.c\"",
          "797: yy25:",
          "800:   if (yych != '+') goto yy18;",
          "802:   if (yych <= '-') goto yy26;",
          "804:   if (yych <= '9') goto yy27;",
          "807: yy26:",
          "810:  if (yych >= ':') goto yy18;",
          "811: yy27:",
          "816:  if (yych <= '9') goto yy27;",
          "817:  if (yych >= ';') goto yy18;",
          "819:  if (yych != '\"') goto yy18;",
          "821: #line 704 \"ext/standard/var_unserializer.re\"",
          "822:  {",
          "823:  long elements;",
          "824:     if (!var_hash) return 0;",
          "826:  INIT_PZVAL(*rval);",
          "828:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "829:  if (elements < 0) {",
          "830:   return 0;",
          "831:  }",
          "832:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "833: }",
          "834: #line 835 \"ext/standard/var_unserializer.c\"",
          "835: yy32:",
          "836:  yych = *++YYCURSOR;",
          "837:  if (yych == '+') goto yy33;",
          "841: yy33:",
          "845: yy34:",
          "850:  if (yych <= '9') goto yy34;",
          "851:  if (yych >= ';') goto yy18;",
          "853:  if (yych != '{') goto yy18;",
          "855: #line 683 \"ext/standard/var_unserializer.re\"",
          "856:  {",
          "857:  long elements = parse_iv(start + 2);",
          "860:     if (!var_hash) return 0;",
          "862:  if (elements < 0) {",
          "863:   return 0;",
          "866:  INIT_PZVAL(*rval);",
          "868:  array_init_size(*rval, elements);",
          "870:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_PP(rval), elements, 0)) {",
          "871:   return 0;",
          "874:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "875: }",
          "876: #line 877 \"ext/standard/var_unserializer.c\"",
          "877: yy39:",
          "879:  if (yych == '+') goto yy40;",
          "881:  if (yych <= '9') goto yy41;",
          "883: yy40:",
          "887: yy41:",
          "892:  if (yych <= '9') goto yy41;",
          "893:  if (yych >= ';') goto yy18;",
          "895:  if (yych != '\"') goto yy18;",
          "897: #line 648 \"ext/standard/var_unserializer.re\"",
          "898:  {",
          "899:  size_t len, maxlen;",
          "900:  char *str;",
          "902:  len = parse_uiv(start + 2);",
          "903:  maxlen = max - YYCURSOR;",
          "904:  if (maxlen < len) {",
          "906:   return 0;",
          "907:  }",
          "909:  if ((str = unserialize_str(&YYCURSOR, &len, maxlen)) == NULL) {",
          "910:   return 0;",
          "911:  }",
          "913:  if (*(YYCURSOR) != '\"') {",
          "914:   efree(str);",
          "916:   return 0;",
          "917:  }",
          "919:  if (*(YYCURSOR + 1) != ';') {",
          "920:   efree(str);",
          "922:   return 0;",
          "923:  }",
          "925:  YYCURSOR += 2;",
          "928:  INIT_PZVAL(*rval);",
          "929:  ZVAL_STRINGL(*rval, str, len, 0);",
          "930:  return 1;",
          "931: }",
          "932: #line 933 \"ext/standard/var_unserializer.c\"",
          "933: yy46:",
          "934:  yych = *++YYCURSOR;",
          "935:  if (yych == '+') goto yy47;",
          "937:  if (yych <= '9') goto yy48;",
          "939: yy47:",
          "943: yy48:",
          "948:  if (yych <= '9') goto yy48;",
          "949:  if (yych >= ';') goto yy18;",
          "951:  if (yych != '\"') goto yy18;",
          "953: #line 615 \"ext/standard/var_unserializer.re\"",
          "955:  size_t len, maxlen;",
          "956:  char *str;",
          "958:  len = parse_uiv(start + 2);",
          "959:  maxlen = max - YYCURSOR;",
          "960:  if (maxlen < len) {",
          "962:   return 0;",
          "963:  }",
          "965:  str = (char*)YYCURSOR;",
          "967:  YYCURSOR += len;",
          "969:  if (*(YYCURSOR) != '\"') {",
          "974:  if (*(YYCURSOR + 1) != ';') {",
          "976:   return 0;",
          "979:  YYCURSOR += 2;",
          "982:  INIT_PZVAL(*rval);",
          "983:  ZVAL_STRINGL(*rval, str, len, 1);",
          "986: #line 987 \"ext/standard/var_unserializer.c\"",
          "987: yy53:",
          "988:  yych = *++YYCURSOR;",
          "989:  if (yych <= '/') {",
          "990:   if (yych <= ',') {",
          "991:    if (yych == '+') goto yy57;",
          "992:    goto yy18;",
          "993:   } else {",
          "994:    if (yych <= '-') goto yy55;",
          "995:    if (yych <= '.') goto yy60;",
          "996:    goto yy18;",
          "997:   }",
          "998:  } else {",
          "999:   if (yych <= 'I') {",
          "1000:    if (yych <= '9') goto yy58;",
          "1001:    if (yych <= 'H') goto yy18;",
          "1002:    goto yy56;",
          "1003:   } else {",
          "1004:    if (yych != 'N') goto yy18;",
          "1005:   }",
          "1006:  }",
          "1008:  if (yych == 'A') goto yy76;",
          "1010: yy55:",
          "1011:  yych = *++YYCURSOR;",
          "1012:  if (yych <= '/') {",
          "1013:   if (yych == '.') goto yy60;",
          "1014:   goto yy18;",
          "1015:  } else {",
          "1016:   if (yych <= '9') goto yy58;",
          "1017:   if (yych != 'I') goto yy18;",
          "1018:  }",
          "1019: yy56:",
          "1021:  if (yych == 'N') goto yy72;",
          "1023: yy57:",
          "1024:  yych = *++YYCURSOR;",
          "1025:  if (yych == '.') goto yy60;",
          "1026:  if (yych <= '/') goto yy18;",
          "1027:  if (yych >= ':') goto yy18;",
          "1028: yy58:",
          "1030:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1031:  yych = *YYCURSOR;",
          "1032:  if (yych <= ':') {",
          "1033:   if (yych <= '.') {",
          "1034:    if (yych <= '-') goto yy18;",
          "1035:    goto yy70;",
          "1036:   } else {",
          "1037:    if (yych <= '/') goto yy18;",
          "1038:    if (yych <= '9') goto yy58;",
          "1039:    goto yy18;",
          "1040:   }",
          "1041:  } else {",
          "1042:   if (yych <= 'E') {",
          "1043:    if (yych <= ';') goto yy63;",
          "1044:    if (yych <= 'D') goto yy18;",
          "1045:    goto yy65;",
          "1046:   } else {",
          "1047:    if (yych == 'e') goto yy65;",
          "1048:    goto yy18;",
          "1049:   }",
          "1050:  }",
          "1051: yy60:",
          "1052:  yych = *++YYCURSOR;",
          "1053:  if (yych <= '/') goto yy18;",
          "1054:  if (yych >= ':') goto yy18;",
          "1055: yy61:",
          "1061:   if (yych <= '9') goto yy61;",
          "1066:    goto yy65;",
          "1068:    if (yych == 'e') goto yy65;",
          "1072: yy63:",
          "1074: #line 605 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "943:  ZVAL_DOUBLE(*rval, zend_strtod((const char *)start + 2, NULL));",
          "944:  return 1;",
          "945: }",
          "948:  yych = *++YYCURSOR;",
          "949:  if (yych <= ',') {",
          "952:  } else {",
          "954:   if (yych <= '/') goto yy18;",
          "956:   goto yy18;",
          "957:  }",
          "959:  yych = *++YYCURSOR;",
          "961:  goto yy18;",
          "963:  yych = *++YYCURSOR;",
          "965:  goto yy18;",
          "967:  ++YYCURSOR;",
          "985:   } else {",
          "987:   }",
          "988:  }",
          "991:  INIT_PZVAL(*rval);",
          "993:  return 1;",
          "994: }",
          "997:  yych = *++YYCURSOR;",
          "999:  goto yy18;",
          "1018:  }",
          "1027:  yych = *++YYCURSOR;",
          "1031:  ++YYCURSOR;",
          "1033:  {",
          "1079:  }",
          "1123:    }",
          "1146:   } else {",
          "1167:   }",
          "1170:  }",
          "1180: }",
          "1183:  ++YYCURSOR;",
          "1185:  {",
          "1215:  INIT_PZVAL(*rval);",
          "1217:  return 1;",
          "1218: }",
          "1221:  ++YYCURSOR;",
          "1223:  {",
          "1233:  INIT_PZVAL(*rval);",
          "1242: }",
          "1245:  yych = *++YYCURSOR;",
          "1246:  if (yych <= ',') {",
          "1249:  } else {",
          "1251:   if (yych <= '/') goto yy18;",
          "1253:  }",
          "1255:  ++YYCURSOR;",
          "1256:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1257:  yych = *YYCURSOR;",
          "1258:  if (yych <= '/') goto yy18;",
          "1267:  ++YYCURSOR;",
          "1269:  {",
          "1289:   return 0;",
          "1290:  }",
          "1304:  }",
          "1311:  return 1;",
          "1312: }",
          "1314: yy96:",
          "1315:  yych = *++YYCURSOR;",
          "1316:  if (yych <= '/') goto yy18;",
          "1319: yy97:",
          "1320:  ++YYCURSOR;",
          "1322:  {",
          "1332:  }",
          "1334:  return 1;",
          "1335: }",
          "1337: }",
          "1341:  return 0;",
          "",
          "[Removed Lines]",
          "946: #line 947 \"ext/standard/var_unserializer.c\"",
          "947: yy73:",
          "950:   if (yych == '+') goto yy88;",
          "951:   goto yy18;",
          "953:   if (yych <= '-') goto yy88;",
          "955:   if (yych <= '9') goto yy89;",
          "958: yy74:",
          "960:  if (yych == 'F') goto yy91;",
          "962: yy75:",
          "964:  if (yych == 'N') goto yy91;",
          "966: yy76:",
          "968: #line 558 \"ext/standard/var_unserializer.re\"",
          "969:  {",
          "970: #if SIZEOF_LONG == 4",
          "971:  int digits = YYCURSOR - start - 3;",
          "973:  if (start[2] == '-' || start[2] == '+') {",
          "974:   digits--;",
          "975:  }",
          "978:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
          "979:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
          "980:    int cmp = strncmp(YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
          "982:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
          "983:     goto use_double;",
          "984:    }",
          "986:    goto use_double;",
          "989: #endif",
          "992:  ZVAL_LONG(*rval, parse_iv(start + 2));",
          "995: #line 996 \"ext/standard/var_unserializer.c\"",
          "996: yy78:",
          "998:  if (yych == '\"') goto yy92;",
          "1000: yy79:",
          "1001:  ++YYCURSOR;",
          "1002: #line 521 \"ext/standard/var_unserializer.re\"",
          "1003:  {",
          "1004:  long id;",
          "1007:  if (!var_hash) return 0;",
          "1009:  id = parse_iv(start + 2) - 1;",
          "1010:  if (id == -1 || var_access(var_hash, id, &rval_ref) != SUCCESS) {",
          "1011:   return 0;",
          "1012:  }",
          "1014:  if (*rval == *rval_ref) return 0;",
          "1016:  if (*rval != NULL) {",
          "1017:   var_push_dtor_no_addref(var_hash, rval);",
          "1020:  Z_ADDREF_PP(rval);",
          "1021:  Z_UNSET_ISREF_PP(rval);",
          "1023:  return 1;",
          "1024: }",
          "1025: #line 1026 \"ext/standard/var_unserializer.c\"",
          "1026: yy81:",
          "1028:  if (yych == '\"') goto yy94;",
          "1029:  goto yy18;",
          "1030: yy82:",
          "1032: #line 708 \"ext/standard/var_unserializer.re\"",
          "1034:  size_t len, len2, len3, maxlen;",
          "1035:  long elements;",
          "1036:  char *class_name;",
          "1037:  zend_class_entry *ce;",
          "1038:  zend_class_entry **pce;",
          "1039:  int incomplete_class = 0;",
          "1041:  int custom_object = 0;",
          "1043:  zval *user_func;",
          "1044:  zval *retval_ptr;",
          "1045:  zval **args[1];",
          "1046:  zval *arg_func_name;",
          "1048:     if (!var_hash) return 0;",
          "1049:  if (*start == 'C') {",
          "1050:   custom_object = 1;",
          "1051:  }",
          "1053:  INIT_PZVAL(*rval);",
          "1054:  len2 = len = parse_uiv(start + 2);",
          "1055:  maxlen = max - YYCURSOR;",
          "1056:  if (maxlen < len || len == 0) {",
          "1058:   return 0;",
          "1059:  }",
          "1061:  class_name = (char*)YYCURSOR;",
          "1063:  YYCURSOR += len;",
          "1065:  if (*(YYCURSOR) != '\"') {",
          "1067:   return 0;",
          "1068:  }",
          "1069:  if (*(YYCURSOR+1) != ':') {",
          "1071:   return 0;",
          "1072:  }",
          "1074:  len3 = strspn(class_name, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "1075:  if (len3 != len)",
          "1076:  {",
          "1078:   return 0;",
          "1081:  class_name = estrndup(class_name, len);",
          "1083:  do {",
          "1085:   BG(serialize_lock)++;",
          "1086:   if (zend_lookup_class(class_name, len2, &pce TSRMLS_CC) == SUCCESS) {",
          "1087:    BG(serialize_lock)--;",
          "1088:    if (EG(exception)) {",
          "1089:     efree(class_name);",
          "1090:     return 0;",
          "1091:    }",
          "1092:    ce = *pce;",
          "1093:    break;",
          "1094:   }",
          "1095:   BG(serialize_lock)--;",
          "1097:   if (EG(exception)) {",
          "1098:    efree(class_name);",
          "1099:    return 0;",
          "1100:   }",
          "1103:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "1104:    incomplete_class = 1;",
          "1105:    ce = PHP_IC_ENTRY;",
          "1106:    break;",
          "1107:   }",
          "1110:   MAKE_STD_ZVAL(user_func);",
          "1111:   ZVAL_STRING(user_func, PG(unserialize_callback_func), 1);",
          "1112:   args[0] = &arg_func_name;",
          "1113:   MAKE_STD_ZVAL(arg_func_name);",
          "1114:   ZVAL_STRING(arg_func_name, class_name, 1);",
          "1115:   BG(serialize_lock)++;",
          "1116:   if (call_user_function_ex(CG(function_table), NULL, user_func, &retval_ptr, 1, args, 0, NULL TSRMLS_CC) != SUCCESS) {",
          "1117:    BG(serialize_lock)--;",
          "1118:    if (EG(exception)) {",
          "1119:     efree(class_name);",
          "1120:     zval_ptr_dtor(&user_func);",
          "1121:     zval_ptr_dtor(&arg_func_name);",
          "1122:     return 0;",
          "1124:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"defined (%s) but not found\", user_func->value.str.val);",
          "1125:    incomplete_class = 1;",
          "1126:    ce = PHP_IC_ENTRY;",
          "1127:    zval_ptr_dtor(&user_func);",
          "1128:    zval_ptr_dtor(&arg_func_name);",
          "1129:    break;",
          "1130:   }",
          "1131:   BG(serialize_lock)--;",
          "1132:   if (retval_ptr) {",
          "1133:    zval_ptr_dtor(&retval_ptr);",
          "1134:   }",
          "1135:   if (EG(exception)) {",
          "1136:    efree(class_name);",
          "1137:    zval_ptr_dtor(&user_func);",
          "1138:    zval_ptr_dtor(&arg_func_name);",
          "1139:    return 0;",
          "1140:   }",
          "1143:   BG(serialize_lock)++;",
          "1144:   if (zend_lookup_class(class_name, len2, &pce TSRMLS_CC) == SUCCESS) {",
          "1145:    ce = *pce;",
          "1147:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Function %s() hasn't defined the class it was called for\", user_func->value.str.val);",
          "1148:    incomplete_class = 1;",
          "1149:    ce = PHP_IC_ENTRY;",
          "1150:   }",
          "1151:   BG(serialize_lock)--;",
          "1153:   zval_ptr_dtor(&user_func);",
          "1154:   zval_ptr_dtor(&arg_func_name);",
          "1155:   break;",
          "1156:  } while (1);",
          "1160:  if (custom_object) {",
          "1161:   int ret;",
          "1163:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "1165:   if (ret && incomplete_class) {",
          "1166:    php_store_class_name(*rval, class_name, len2);",
          "1168:   efree(class_name);",
          "1169:   return ret;",
          "1172:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "1174:  if (incomplete_class) {",
          "1175:   php_store_class_name(*rval, class_name, len2);",
          "1176:  }",
          "1177:  efree(class_name);",
          "1179:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1181: #line 1182 \"ext/standard/var_unserializer.c\"",
          "1182: yy84:",
          "1184: #line 643 \"ext/standard/var_unserializer.re\"",
          "1186:  size_t len, maxlen;",
          "1187:  char *str;",
          "1189:  len = parse_uiv(start + 2);",
          "1190:  maxlen = max - YYCURSOR;",
          "1191:  if (maxlen < len) {",
          "1193:   return 0;",
          "1194:  }",
          "1196:  if ((str = unserialize_str(&YYCURSOR, &len, maxlen)) == NULL) {",
          "1197:   return 0;",
          "1198:  }",
          "1200:  if (*(YYCURSOR) != '\"') {",
          "1201:   efree(str);",
          "1203:   return 0;",
          "1204:  }",
          "1206:  if (*(YYCURSOR + 1) != ';') {",
          "1207:   efree(str);",
          "1209:   return 0;",
          "1210:  }",
          "1212:  YYCURSOR += 2;",
          "1216:  ZVAL_STRINGL(*rval, str, len, 0);",
          "1219: #line 1220 \"ext/standard/var_unserializer.c\"",
          "1220: yy86:",
          "1222: #line 678 \"ext/standard/var_unserializer.re\"",
          "1224:  long elements = parse_iv(start + 2);",
          "1227:     if (!var_hash) return 0;",
          "1229:  if (elements < 0) {",
          "1230:   return 0;",
          "1231:  }",
          "1235:  array_init_size(*rval, elements);",
          "1237:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_PP(rval), elements, 0)) {",
          "1238:   return 0;",
          "1239:  }",
          "1241:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "1243: #line 1244 \"ext/standard/var_unserializer.c\"",
          "1244: yy88:",
          "1247:   if (yych == '+') goto yy96;",
          "1248:   goto yy18;",
          "1250:   if (yych <= '-') goto yy96;",
          "1252:   if (yych >= ':') goto yy18;",
          "1254: yy89:",
          "1259:  if (yych <= '9') goto yy89;",
          "1260:  if (yych == ';') goto yy71;",
          "1261:  goto yy18;",
          "1262: yy91:",
          "1263:  yych = *++YYCURSOR;",
          "1264:  if (yych == ';') goto yy97;",
          "1265:  goto yy18;",
          "1266: yy92:",
          "1268: #line 699 \"ext/standard/var_unserializer.re\"",
          "1270:     if (!var_hash) return 0;",
          "1272:  INIT_PZVAL(*rval);",
          "1274:  return object_common2(UNSERIALIZE_PASSTHRU,",
          "1275:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
          "1276: }",
          "1277: #line 1278 \"ext/standard/var_unserializer.c\"",
          "1278: yy94:",
          "1279:  ++YYCURSOR;",
          "1280: #line 610 \"ext/standard/var_unserializer.re\"",
          "1281:  {",
          "1282:  size_t len, maxlen;",
          "1283:  char *str;",
          "1285:  len = parse_uiv(start + 2);",
          "1286:  maxlen = max - YYCURSOR;",
          "1287:  if (maxlen < len) {",
          "1292:  str = (char*)YYCURSOR;",
          "1294:  YYCURSOR += len;",
          "1296:  if (*(YYCURSOR) != '\"') {",
          "1298:   return 0;",
          "1299:  }",
          "1301:  if (*(YYCURSOR + 1) != ';') {",
          "1303:   return 0;",
          "1306:  YYCURSOR += 2;",
          "1309:  INIT_PZVAL(*rval);",
          "1310:  ZVAL_STRINGL(*rval, str, len, 1);",
          "1313: #line 1314 \"ext/standard/var_unserializer.c\"",
          "1317:  if (yych <= '9') goto yy89;",
          "1318:  goto yy18;",
          "1321: #line 585 \"ext/standard/var_unserializer.re\"",
          "1324:  INIT_PZVAL(*rval);",
          "1326:  if (!strncmp(start + 2, \"NAN\", 3)) {",
          "1327:   ZVAL_DOUBLE(*rval, php_get_nan());",
          "1328:  } else if (!strncmp(start + 2, \"INF\", 3)) {",
          "1329:   ZVAL_DOUBLE(*rval, php_get_inf());",
          "1330:  } else if (!strncmp(start + 2, \"-INF\", 4)) {",
          "1331:   ZVAL_DOUBLE(*rval, -php_get_inf());",
          "1336: #line 1337 \"ext/standard/var_unserializer.c\"",
          "1338: #line 865 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1084: #line 1085 \"ext/standard/var_unserializer.c\"",
          "1085: yy65:",
          "1088:   if (yych != '+') goto yy18;",
          "1090:   if (yych <= '-') goto yy66;",
          "1092:   if (yych <= '9') goto yy67;",
          "1095: yy66:",
          "1097:  if (yych <= ',') {",
          "1098:   if (yych == '+') goto yy69;",
          "1099:   goto yy18;",
          "1100:  } else {",
          "1101:   if (yych <= '-') goto yy69;",
          "1102:   if (yych <= '/') goto yy18;",
          "1103:   if (yych >= ':') goto yy18;",
          "1104:  }",
          "1105: yy67:",
          "1106:  ++YYCURSOR;",
          "1107:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1108:  yych = *YYCURSOR;",
          "1109:  if (yych <= '/') goto yy18;",
          "1110:  if (yych <= '9') goto yy67;",
          "1111:  if (yych == ';') goto yy63;",
          "1113: yy69:",
          "1115:  if (yych <= '/') goto yy18;",
          "1116:  if (yych <= '9') goto yy67;",
          "1118: yy70:",
          "1120:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1121:  yych = *YYCURSOR;",
          "1122:  if (yych <= ';') {",
          "1123:   if (yych <= '/') goto yy18;",
          "1124:   if (yych <= '9') goto yy70;",
          "1125:   if (yych <= ':') goto yy18;",
          "1126:   goto yy63;",
          "1127:  } else {",
          "1128:   if (yych <= 'E') {",
          "1129:    if (yych <= 'D') goto yy18;",
          "1130:    goto yy65;",
          "1132:    if (yych == 'e') goto yy65;",
          "1133:    goto yy18;",
          "1136: yy72:",
          "1137:  yych = *++YYCURSOR;",
          "1138:  if (yych != 'F') goto yy18;",
          "1139: yy73:",
          "1140:  yych = *++YYCURSOR;",
          "1141:  if (yych != ';') goto yy18;",
          "1142:  ++YYCURSOR;",
          "1143: #line 590 \"ext/standard/var_unserializer.re\"",
          "1144:  {",
          "1148:  if (!strncmp(start + 2, \"NAN\", 3)) {",
          "1149:   ZVAL_DOUBLE(*rval, php_get_nan());",
          "1150:  } else if (!strncmp(start + 2, \"INF\", 3)) {",
          "1151:   ZVAL_DOUBLE(*rval, php_get_inf());",
          "1152:  } else if (!strncmp(start + 2, \"-INF\", 4)) {",
          "1153:   ZVAL_DOUBLE(*rval, -php_get_inf());",
          "1154:  }",
          "1158: #line 1159 \"ext/standard/var_unserializer.c\"",
          "1159: yy76:",
          "1161:  if (yych == 'N') goto yy73;",
          "1163: yy77:",
          "1164:  yych = *++YYCURSOR;",
          "1165:  if (yych <= ',') {",
          "1166:   if (yych != '+') goto yy18;",
          "1167:  } else {",
          "1168:   if (yych <= '-') goto yy78;",
          "1169:   if (yych <= '/') goto yy18;",
          "1170:   if (yych <= '9') goto yy79;",
          "1171:   goto yy18;",
          "1173: yy78:",
          "1175:  if (yych <= '/') goto yy18;",
          "1176:  if (yych >= ':') goto yy18;",
          "1177: yy79:",
          "1179:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1180:  yych = *YYCURSOR;",
          "1181:  if (yych <= '/') goto yy18;",
          "1182:  if (yych <= '9') goto yy79;",
          "1183:  if (yych != ';') goto yy18;",
          "1184:  ++YYCURSOR;",
          "1185: #line 563 \"ext/standard/var_unserializer.re\"",
          "1187: #if SIZEOF_LONG == 4",
          "1188:  int digits = YYCURSOR - start - 3;",
          "1190:  if (start[2] == '-' || start[2] == '+') {",
          "1191:   digits--;",
          "1195:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
          "1196:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
          "1197:    int cmp = strncmp(YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
          "1199:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
          "1200:     goto use_double;",
          "1203:    goto use_double;",
          "1206: #endif",
          "1208:  INIT_PZVAL(*rval);",
          "1209:  ZVAL_LONG(*rval, parse_iv(start + 2));",
          "1210:  return 1;",
          "1212: #line 1213 \"ext/standard/var_unserializer.c\"",
          "1213: yy83:",
          "1214:  yych = *++YYCURSOR;",
          "1215:  if (yych <= '/') goto yy18;",
          "1216:  if (yych >= '2') goto yy18;",
          "1217:  yych = *++YYCURSOR;",
          "1218:  if (yych != ';') goto yy18;",
          "1220: #line 556 \"ext/standard/var_unserializer.re\"",
          "1224:  ZVAL_BOOL(*rval, parse_iv(start + 2));",
          "1227: #line 1228 \"ext/standard/var_unserializer.c\"",
          "1228: yy87:",
          "1230: #line 549 \"ext/standard/var_unserializer.re\"",
          "1234:  ZVAL_NULL(*rval);",
          "1235:  return 1;",
          "1237: #line 1238 \"ext/standard/var_unserializer.c\"",
          "1238: yy89:",
          "1241:   if (yych != '+') goto yy18;",
          "1243:   if (yych <= '-') goto yy90;",
          "1245:   if (yych <= '9') goto yy91;",
          "1246:   goto yy18;",
          "1248: yy90:",
          "1249:  yych = *++YYCURSOR;",
          "1250:  if (yych <= '/') goto yy18;",
          "1251:  if (yych >= ':') goto yy18;",
          "1252: yy91:",
          "1257:  if (yych <= '9') goto yy91;",
          "1258:  if (yych != ';') goto yy18;",
          "1260: #line 526 \"ext/standard/var_unserializer.re\"",
          "1262:  long id;",
          "1265:  if (!var_hash) return 0;",
          "1267:  id = parse_iv(start + 2) - 1;",
          "1268:  if (id == -1 || var_access(var_hash, id, &rval_ref) != SUCCESS) {",
          "1272:  if (*rval == *rval_ref) return 0;",
          "1274:  if (*rval != NULL) {",
          "1275:   var_push_dtor_no_addref(var_hash, rval);",
          "1278:  Z_ADDREF_PP(rval);",
          "1279:  Z_UNSET_ISREF_PP(rval);",
          "1283: #line 1284 \"ext/standard/var_unserializer.c\"",
          "1284: yy95:",
          "1285:  yych = *++YYCURSOR;",
          "1286:  if (yych <= ',') {",
          "1287:   if (yych != '+') goto yy18;",
          "1288:  } else {",
          "1289:   if (yych <= '-') goto yy96;",
          "1290:   if (yych <= '/') goto yy18;",
          "1291:   if (yych <= '9') goto yy97;",
          "1292:   goto yy18;",
          "1293:  }",
          "1297:  if (yych >= ':') goto yy18;",
          "1300:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1301:  yych = *YYCURSOR;",
          "1302:  if (yych <= '/') goto yy18;",
          "1303:  if (yych <= '9') goto yy97;",
          "1304:  if (yych != ';') goto yy18;",
          "1305:  ++YYCURSOR;",
          "1306: #line 505 \"ext/standard/var_unserializer.re\"",
          "1308:  long id;",
          "1311:  if (!var_hash) return 0;",
          "1313:  id = parse_iv(start + 2) - 1;",
          "1314:  if (id == -1 || var_access(var_hash, id, &rval_ref) != SUCCESS) {",
          "1315:   return 0;",
          "1316:  }",
          "1318:  if (*rval != NULL) {",
          "1319:   var_push_dtor_no_addref(var_hash, rval);",
          "1322:  Z_ADDREF_PP(rval);",
          "1323:  Z_SET_ISREF_PP(rval);",
          "1327: #line 1328 \"ext/standard/var_unserializer.c\"",
          "1329: #line 879 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "409: {",
          "410:  long elements;",
          "412:  elements = parse_iv2((*p) + 2, p);",
          "414:  (*p) += 2;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "412:  if( *p >= max - 2) {",
          "413:   zend_error(E_WARNING, \"Bad unserialize data\");",
          "414:   return -1;",
          "415:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "421:   zend_error(E_WARNING, \"Erroneous data format for unserializing '%s'\", ce->name);",
          "423:  }",
          "425:  return elements;",
          "",
          "[Removed Lines]",
          "422:   return 0;",
          "",
          "[Added Lines]",
          "427:   return -1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "697: }",
          "699: \"o:\" iv \":\" [\"] {",
          "700:     if (!var_hash) return 0;",
          "702:  INIT_PZVAL(*rval);",
          "706: }",
          "708: object \":\" uiv \":\" [\"] {",
          "",
          "[Removed Lines]",
          "704:  return object_common2(UNSERIALIZE_PASSTHRU,",
          "705:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
          "",
          "[Added Lines]",
          "705:  long elements;",
          "710:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "711:  if (elements < 0) {",
          "712:   return 0;",
          "713:  }",
          "714:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "847:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "849:  if (incomplete_class) {",
          "850:   php_store_class_name(*rval, class_name, len2);",
          "851:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "858:  if (elements < 0) {",
          "859:     efree(class_name);",
          "860:     return 0;",
          "861:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "16b3003ffc6393e250f069aa28a78dc5a2c064b2",
      "candidate_info": {
        "commit_hash": "16b3003ffc6393e250f069aa28a78dc5a2c064b2",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/16b3003ffc6393e250f069aa28a78dc5a2c064b2",
        "files": [
          "ext/standard/tests/serialize/bug73825.phpt",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Fix bug #73825 - Heap out of bounds read on unserialize in finish_nested_data()",
        "before_after_code_files": [
          "ext/standard/tests/serialize/bug73825.phpt||ext/standard/tests/serialize/bug73825.phpt",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "ext/standard/tests/serialize/bug73825.phpt||ext/standard/tests/serialize/bug73825.phpt": [
          "File: ext/standard/tests/serialize/bug73825.phpt -> ext/standard/tests/serialize/bug73825.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #73825 Heap out of bounds read on unserialize in finish_nested_data()",
          "3: --FILE--",
          "4: <?php",
          "5: $obj = unserialize('O:8:\"00000000\":');",
          "6: var_dump($obj);",
          "7: ?>",
          "8: --EXPECTF--",
          "9: Warning: Bad unserialize data in %sbug73825.php on line %d",
          "11: Notice: unserialize(): Error at offset 13 of 15 bytes in %sbug73825.php on line %d",
          "12: bool(false)",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "405: {",
          "406:  long elements;",
          "408:  elements = parse_iv2((*p) + 2, p);",
          "410:  (*p) += 2;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "408:  if( *p >= max - 2) {",
          "409:   zend_error(E_WARNING, \"Bad unserialize data\");",
          "410:   return -1;",
          "411:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "417:   zend_error(E_WARNING, \"Erroneous data format for unserializing '%s'\", ce->name);",
          "419:  }",
          "421:  return elements;",
          "",
          "[Removed Lines]",
          "418:   return 0;",
          "",
          "[Added Lines]",
          "423:   return -1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "496: {",
          "497:  YYCTYPE yych;",
          "498:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "495: #line 496 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "500: #line 501 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "552:  yych = *(YYMARKER = ++YYCURSOR);",
          "553:  if (yych == ':') goto yy95;",
          "554: yy3:",
          "556:  { return 0; }",
          "558: yy4:",
          "559:  yych = *(YYMARKER = ++YYCURSOR);",
          "560:  if (yych == ':') goto yy89;",
          "",
          "[Removed Lines]",
          "555: #line 861 \"ext/standard/var_unserializer.re\"",
          "557: #line 558 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "560: #line 875 \"ext/standard/var_unserializer.re\"",
          "562: #line 563 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "597:  goto yy3;",
          "598: yy14:",
          "599:  ++YYCURSOR;",
          "601:  {",
          "603:  php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"Unexpected end of serialized data\");",
          "605: }",
          "607: yy16:",
          "608:  yych = *++YYCURSOR;",
          "609:  goto yy3;",
          "",
          "[Removed Lines]",
          "600: #line 855 \"ext/standard/var_unserializer.re\"",
          "606: #line 607 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "605: #line 869 \"ext/standard/var_unserializer.re\"",
          "611: #line 612 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "634:  yych = *++YYCURSOR;",
          "635:  if (yych != '\"') goto yy18;",
          "636:  ++YYCURSOR;",
          "638:  {",
          "639:  size_t len, len2, len3, maxlen;",
          "640:  long elements;",
          "",
          "[Removed Lines]",
          "637: #line 708 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "642: #line 717 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "775:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "777:  if (incomplete_class) {",
          "778:   php_store_class_name(*rval, class_name, len2);",
          "779:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "782:  if (elements < 0) {",
          "783:     efree(class_name);",
          "784:     return 0;",
          "785:  }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "782:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "783: }",
          "785: yy25:",
          "786:  yych = *++YYCURSOR;",
          "787:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "784: #line 785 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "794: #line 795 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "806:  yych = *++YYCURSOR;",
          "807:  if (yych != '\"') goto yy18;",
          "808:  ++YYCURSOR;",
          "810:  {",
          "811:     if (!var_hash) return 0;",
          "813:  INIT_PZVAL(*rval);",
          "817: }",
          "819: yy32:",
          "820:  yych = *++YYCURSOR;",
          "821:  if (yych == '+') goto yy33;",
          "",
          "[Removed Lines]",
          "809: #line 699 \"ext/standard/var_unserializer.re\"",
          "815:  return object_common2(UNSERIALIZE_PASSTHRU,",
          "816:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
          "818: #line 819 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "819: #line 704 \"ext/standard/var_unserializer.re\"",
          "821:  long elements;",
          "826:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "827:  if (elements < 0) {",
          "828:   return 0;",
          "829:  }",
          "830:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "832: #line 833 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "836:  yych = *++YYCURSOR;",
          "837:  if (yych != '{') goto yy18;",
          "838:  ++YYCURSOR;",
          "840:  {",
          "841:  long elements = parse_iv(start + 2);",
          "",
          "[Removed Lines]",
          "839: #line 678 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "853: #line 683 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "858:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "859: }",
          "861: yy39:",
          "862:  yych = *++YYCURSOR;",
          "863:  if (yych == '+') goto yy40;",
          "",
          "[Removed Lines]",
          "860: #line 861 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "874: #line 875 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "878:  yych = *++YYCURSOR;",
          "879:  if (yych != '\"') goto yy18;",
          "880:  ++YYCURSOR;",
          "882:  {",
          "883:  size_t len, maxlen;",
          "884:  char *str;",
          "",
          "[Removed Lines]",
          "881: #line 643 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "895: #line 648 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "913:  ZVAL_STRINGL(*rval, str, len, 0);",
          "914:  return 1;",
          "915: }",
          "917: yy46:",
          "918:  yych = *++YYCURSOR;",
          "919:  if (yych == '+') goto yy47;",
          "",
          "[Removed Lines]",
          "916: #line 917 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "930: #line 931 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "934:  yych = *++YYCURSOR;",
          "935:  if (yych != '\"') goto yy18;",
          "936:  ++YYCURSOR;",
          "938:  {",
          "939:  size_t len, maxlen;",
          "940:  char *str;",
          "",
          "[Removed Lines]",
          "937: #line 610 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "951: #line 615 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "967:  ZVAL_STRINGL(*rval, str, len, 1);",
          "968:  return 1;",
          "969: }",
          "971: yy53:",
          "972:  yych = *++YYCURSOR;",
          "973:  if (yych <= '/') {",
          "",
          "[Removed Lines]",
          "970: #line 971 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "984: #line 985 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1055:  }",
          "1056: yy63:",
          "1057:  ++YYCURSOR;",
          "1059:  {",
          "1060: #if SIZEOF_LONG == 4",
          "1061: use_double:",
          "",
          "[Removed Lines]",
          "1058: #line 600 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1072: #line 605 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1065:  ZVAL_DOUBLE(*rval, zend_strtod((const char *)start + 2, NULL));",
          "1066:  return 1;",
          "1067: }",
          "1069: yy65:",
          "1070:  yych = *++YYCURSOR;",
          "1071:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1068: #line 1069 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1082: #line 1083 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1124:  yych = *++YYCURSOR;",
          "1125:  if (yych != ';') goto yy18;",
          "1126:  ++YYCURSOR;",
          "1128:  {",
          "1130:  INIT_PZVAL(*rval);",
          "",
          "[Removed Lines]",
          "1127: #line 585 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1141: #line 590 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1140:  return 1;",
          "1141: }",
          "1143: yy76:",
          "1144:  yych = *++YYCURSOR;",
          "1145:  if (yych == 'N') goto yy73;",
          "",
          "[Removed Lines]",
          "1142: #line 1143 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1156: #line 1157 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1166:  if (yych <= '9') goto yy79;",
          "1167:  if (yych != ';') goto yy18;",
          "1168:  ++YYCURSOR;",
          "1170:  {",
          "1171: #if SIZEOF_LONG == 4",
          "1172:  int digits = YYCURSOR - start - 3;",
          "",
          "[Removed Lines]",
          "1169: #line 558 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1183: #line 563 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1193:  ZVAL_LONG(*rval, parse_iv(start + 2));",
          "1194:  return 1;",
          "1195: }",
          "1197: yy83:",
          "1198:  yych = *++YYCURSOR;",
          "1199:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1196: #line 1197 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1210: #line 1211 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1201:  yych = *++YYCURSOR;",
          "1202:  if (yych != ';') goto yy18;",
          "1203:  ++YYCURSOR;",
          "1205:  {",
          "1207:  INIT_PZVAL(*rval);",
          "1208:  ZVAL_BOOL(*rval, parse_iv(start + 2));",
          "1209:  return 1;",
          "1210: }",
          "1212: yy87:",
          "1213:  ++YYCURSOR;",
          "1215:  {",
          "1217:  INIT_PZVAL(*rval);",
          "1218:  ZVAL_NULL(*rval);",
          "1219:  return 1;",
          "1220: }",
          "1222: yy89:",
          "1223:  yych = *++YYCURSOR;",
          "1224:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1204: #line 551 \"ext/standard/var_unserializer.re\"",
          "1211: #line 1212 \"ext/standard/var_unserializer.c\"",
          "1214: #line 544 \"ext/standard/var_unserializer.re\"",
          "1221: #line 1222 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1218: #line 556 \"ext/standard/var_unserializer.re\"",
          "1225: #line 1226 \"ext/standard/var_unserializer.c\"",
          "1228: #line 549 \"ext/standard/var_unserializer.re\"",
          "1235: #line 1236 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1241:  if (yych <= '9') goto yy91;",
          "1242:  if (yych != ';') goto yy18;",
          "1243:  ++YYCURSOR;",
          "1245:  {",
          "1246:  long id;",
          "",
          "[Removed Lines]",
          "1244: #line 521 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1258: #line 526 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1265:  return 1;",
          "1266: }",
          "1268: yy95:",
          "1269:  yych = *++YYCURSOR;",
          "1270:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1267: #line 1268 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1281: #line 1282 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1287:  if (yych <= '9') goto yy97;",
          "1288:  if (yych != ';') goto yy18;",
          "1289:  ++YYCURSOR;",
          "1291:  {",
          "1292:  long id;",
          "",
          "[Removed Lines]",
          "1290: #line 500 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1304: #line 505 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1309:  return 1;",
          "1310: }",
          "1312: }",
          "1316:  return 0;",
          "",
          "[Removed Lines]",
          "1311: #line 1312 \"ext/standard/var_unserializer.c\"",
          "1313: #line 863 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1325: #line 1326 \"ext/standard/var_unserializer.c\"",
          "1327: #line 877 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "409: {",
          "410:  long elements;",
          "412:  elements = parse_iv2((*p) + 2, p);",
          "414:  (*p) += 2;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "412:  if( *p >= max - 2) {",
          "413:   zend_error(E_WARNING, \"Bad unserialize data\");",
          "414:   return -1;",
          "415:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "421:   zend_error(E_WARNING, \"Erroneous data format for unserializing '%s'\", ce->name);",
          "423:  }",
          "425:  return elements;",
          "",
          "[Removed Lines]",
          "422:   return 0;",
          "",
          "[Added Lines]",
          "427:   return -1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "697: }",
          "699: \"o:\" iv \":\" [\"] {",
          "700:     if (!var_hash) return 0;",
          "702:  INIT_PZVAL(*rval);",
          "706: }",
          "708: object \":\" uiv \":\" [\"] {",
          "",
          "[Removed Lines]",
          "704:  return object_common2(UNSERIALIZE_PASSTHRU,",
          "705:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
          "",
          "[Added Lines]",
          "705:  long elements;",
          "710:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "711:  if (elements < 0) {",
          "712:   return 0;",
          "713:  }",
          "714:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "845:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "847:  if (incomplete_class) {",
          "848:   php_store_class_name(*rval, class_name, len2);",
          "849:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "856:  if (elements < 0) {",
          "857:     efree(class_name);",
          "858:     return 0;",
          "859:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a5014d7c58e66f2270c86b573ac9fabd40559de9",
      "candidate_info": {
        "commit_hash": "a5014d7c58e66f2270c86b573ac9fabd40559de9",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/a5014d7c58e66f2270c86b573ac9fabd40559de9",
        "files": [
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Avoid visibility checks for classes without predefined properties",
        "before_after_code_files": [
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "436:   } else {",
          "437:    if (EXPECTED(Z_TYPE(key) == IS_STRING)) {",
          "438: string_key:",
          "440:      zend_property_info *existing_propinfo;",
          "441:      zend_string *new_key;",
          "442:      const char *unmangled_class = NULL;",
          "443:      const char *unmangled_prop;",
          "444:      size_t unmangled_prop_len;",
          "446:      if (UNEXPECTED(zend_unmangle_property_name_ex(Z_STR(key), &unmangled_class, &unmangled_prop, &unmangled_prop_len) == FAILURE)) {",
          "447:       zval_ptr_dtor(&key);",
          "448:       return 0;",
          "449:      }",
          "457:         new_key = zend_mangle_property_name(",
          "469:           ZSTR_VAL(unmangled), ZSTR_LEN(unmangled),",
          "470:           0);",
          "473:        } else {",
          "476:        }",
          "480:        zend_string_release(unmangled);",
          "481:       }",
          "482:      }",
          "492:      }",
          "493:     }",
          "494:    } else if (Z_TYPE(key) == IS_LONG) {",
          "",
          "[Removed Lines]",
          "439:     {",
          "451:      if (Z_TYPE_P(rval) == IS_OBJECT) {",
          "452:       zend_string *unmangled = zend_string_init(unmangled_prop, unmangled_prop_len, 0);",
          "454:       if (((existing_propinfo = zend_hash_find_ptr(&Z_OBJCE_P(rval)->properties_info, unmangled)) != NULL)",
          "455:         && (existing_propinfo->flags & ZEND_ACC_PPP_MASK)) {",
          "456:        if (existing_propinfo->flags & ZEND_ACC_PROTECTED) {",
          "458:          \"*\", 1, ZSTR_VAL(unmangled), ZSTR_LEN(unmangled), 0);",
          "459:         zend_string_release(unmangled);",
          "460:        } else if (existing_propinfo->flags & ZEND_ACC_PRIVATE) {",
          "461:         if (unmangled_class != NULL && strcmp(unmangled_class, \"*\") != 0) {",
          "462:          new_key = zend_mangle_property_name(",
          "463:           unmangled_class, strlen(unmangled_class),",
          "464:           ZSTR_VAL(unmangled), ZSTR_LEN(unmangled),",
          "465:           0);",
          "466:         } else {",
          "467:          new_key = zend_mangle_property_name(",
          "468:           ZSTR_VAL(existing_propinfo->ce->name), ZSTR_LEN(existing_propinfo->ce->name),",
          "471:         }",
          "472:         zend_string_release(unmangled);",
          "474:         ZEND_ASSERT(existing_propinfo->flags & ZEND_ACC_PUBLIC);",
          "475:         new_key = unmangled;",
          "477:        zend_string_release(Z_STR(key));",
          "478:        ZVAL_STR(&key, new_key);",
          "479:       } else {",
          "484:      if ((old_data = zend_hash_find(ht, Z_STR(key))) != NULL) {",
          "485:       if (Z_TYPE_P(old_data) == IS_INDIRECT) {",
          "486:        old_data = Z_INDIRECT_P(old_data);",
          "487:       }",
          "488:       var_push_dtor(var_hash, old_data);",
          "489:       data = zend_hash_update_ind(ht, Z_STR(key), &d);",
          "490:      } else {",
          "491:       data = zend_hash_add_new(ht, Z_STR(key), &d);",
          "",
          "[Added Lines]",
          "439:     if (Z_TYPE_P(rval) == IS_OBJECT",
          "440:       && zend_hash_num_elements(&Z_OBJCE_P(rval)->properties_info) > 0) {",
          "446:      zend_string *unmangled;",
          "453:      unmangled = zend_string_init(unmangled_prop, unmangled_prop_len, 0);",
          "455:      existing_propinfo = zend_hash_find_ptr(&Z_OBJCE_P(rval)->properties_info, unmangled);",
          "456:      if ((existing_propinfo != NULL)",
          "457:        && (existing_propinfo->flags & ZEND_ACC_PPP_MASK)) {",
          "458:       if (existing_propinfo->flags & ZEND_ACC_PROTECTED) {",
          "459:        new_key = zend_mangle_property_name(",
          "460:         \"*\", 1, ZSTR_VAL(unmangled), ZSTR_LEN(unmangled), 0);",
          "461:        zend_string_release(unmangled);",
          "462:       } else if (existing_propinfo->flags & ZEND_ACC_PRIVATE) {",
          "463:        if (unmangled_class != NULL && strcmp(unmangled_class, \"*\") != 0) {",
          "465:          unmangled_class, strlen(unmangled_class),",
          "469:         new_key = zend_mangle_property_name(",
          "470:          ZSTR_VAL(existing_propinfo->ce->name), ZSTR_LEN(existing_propinfo->ce->name),",
          "471:          ZSTR_VAL(unmangled), ZSTR_LEN(unmangled),",
          "472:          0);",
          "475:       } else {",
          "476:        ZEND_ASSERT(existing_propinfo->flags & ZEND_ACC_PUBLIC);",
          "477:        new_key = unmangled;",
          "479:       zend_string_release(Z_STR(key));",
          "480:       ZVAL_STR(&key, new_key);",
          "481:      } else {",
          "482:       zend_string_release(unmangled);",
          "484:     }",
          "486:     if ((old_data = zend_hash_find(ht, Z_STR(key))) != NULL) {",
          "487:      if (Z_TYPE_P(old_data) == IS_INDIRECT) {",
          "488:       old_data = Z_INDIRECT_P(old_data);",
          "490:      var_push_dtor(var_hash, old_data);",
          "491:      data = zend_hash_update_ind(ht, Z_STR(key), &d);",
          "492:     } else {",
          "493:      data = zend_hash_add_new(ht, Z_STR(key), &d);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "667:  start = cursor;",
          "671: {",
          "672:  YYCTYPE yych;",
          "673:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "670: #line 671 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "671: #line 672 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "725: yy2:",
          "726:  ++YYCURSOR;",
          "727: yy3:",
          "729:  { return 0; }",
          "731: yy4:",
          "732:  yych = *(YYMARKER = ++YYCURSOR);",
          "733:  if (yych == ':') goto yy17;",
          "",
          "[Removed Lines]",
          "728: #line 1070 \"ext/standard/var_unserializer.re\"",
          "730: #line 731 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "729: #line 1071 \"ext/standard/var_unserializer.re\"",
          "731: #line 732 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "774:  goto yy3;",
          "775: yy15:",
          "776:  ++YYCURSOR;",
          "778:  {",
          "780:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "782: }",
          "784: yy17:",
          "785:  yych = *++YYCURSOR;",
          "786:  if (yybm[0+yych] & 128) {",
          "",
          "[Removed Lines]",
          "777: #line 1064 \"ext/standard/var_unserializer.re\"",
          "783: #line 784 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "778: #line 1065 \"ext/standard/var_unserializer.re\"",
          "784: #line 785 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "791:  goto yy3;",
          "792: yy19:",
          "793:  ++YYCURSOR;",
          "795:  {",
          "797:  ZVAL_NULL(rval);",
          "798:  return 1;",
          "799: }",
          "801: yy21:",
          "802:  yych = *++YYCURSOR;",
          "803:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "794: #line 725 \"ext/standard/var_unserializer.re\"",
          "800: #line 801 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "795: #line 726 \"ext/standard/var_unserializer.re\"",
          "801: #line 802 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1001:  goto yy18;",
          "1002: yy57:",
          "1003:  ++YYCURSOR;",
          "1005:  {",
          "1006:  zend_long id;",
          "",
          "[Removed Lines]",
          "1004: #line 675 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1005: #line 676 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1027:  return 1;",
          "1028: }",
          "1030: yy59:",
          "1031:  yych = *++YYCURSOR;",
          "1032:  if (yych == '\"') goto yy80;",
          "",
          "[Removed Lines]",
          "1029: #line 1030 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1030: #line 1031 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1037:  goto yy18;",
          "1038: yy61:",
          "1039:  ++YYCURSOR;",
          "1041:  {",
          "1043:  ZVAL_FALSE(rval);",
          "1044:  return 1;",
          "1045: }",
          "1047: yy63:",
          "1048:  ++YYCURSOR;",
          "1050:  {",
          "1052:  ZVAL_TRUE(rval);",
          "1053:  return 1;",
          "1054: }",
          "1056: yy65:",
          "1057:  ++YYCURSOR;",
          "1058:  if ((YYLIMIT - YYCURSOR) < 3) YYFILL(3);",
          "",
          "[Removed Lines]",
          "1040: #line 731 \"ext/standard/var_unserializer.re\"",
          "1046: #line 1047 \"ext/standard/var_unserializer.c\"",
          "1049: #line 737 \"ext/standard/var_unserializer.re\"",
          "1055: #line 1056 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1041: #line 732 \"ext/standard/var_unserializer.re\"",
          "1047: #line 1048 \"ext/standard/var_unserializer.c\"",
          "1050: #line 738 \"ext/standard/var_unserializer.re\"",
          "1056: #line 1057 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1072:  }",
          "1073: yy67:",
          "1074:  ++YYCURSOR;",
          "1076:  {",
          "1077: #if SIZEOF_ZEND_LONG == 4",
          "1078: use_double:",
          "",
          "[Removed Lines]",
          "1075: #line 785 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1076: #line 786 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1081:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1082:  return 1;",
          "1083: }",
          "1085: yy69:",
          "1086:  yych = *++YYCURSOR;",
          "1087:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1084: #line 1085 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1085: #line 1086 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1103:  goto yy18;",
          "1104: yy72:",
          "1105:  ++YYCURSOR;",
          "1107:  {",
          "1108: #if SIZEOF_ZEND_LONG == 4",
          "1109:  int digits = YYCURSOR - start - 3;",
          "",
          "[Removed Lines]",
          "1106: #line 743 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1107: #line 744 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1129:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1130:  return 1;",
          "1131: }",
          "1133: yy74:",
          "1134:  yych = *++YYCURSOR;",
          "1135:  if (yych == '\"') goto yy88;",
          "1136:  goto yy18;",
          "1137: yy75:",
          "1138:  ++YYCURSOR;",
          "1140:  {",
          "1141:  zend_long id;",
          "",
          "[Removed Lines]",
          "1132: #line 1133 \"ext/standard/var_unserializer.c\"",
          "1139: #line 700 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1133: #line 1134 \"ext/standard/var_unserializer.c\"",
          "1140: #line 701 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1162:  return 1;",
          "1163: }",
          "1165: yy77:",
          "1166:  yych = *++YYCURSOR;",
          "1167:  if (yych == '\"') goto yy90;",
          "1168:  goto yy18;",
          "1169: yy78:",
          "1170:  ++YYCURSOR;",
          "1172:  {",
          "1173:  size_t len, len2, len3, maxlen;",
          "1174:  zend_long elements;",
          "",
          "[Removed Lines]",
          "1164: #line 1165 \"ext/standard/var_unserializer.c\"",
          "1171: #line 912 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1165: #line 1166 \"ext/standard/var_unserializer.c\"",
          "1172: #line 913 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1321:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1322: }",
          "1324: yy80:",
          "1325:  ++YYCURSOR;",
          "1327:  {",
          "1328:  size_t len, maxlen;",
          "1329:  zend_string *str;",
          "",
          "[Removed Lines]",
          "1323: #line 1324 \"ext/standard/var_unserializer.c\"",
          "1326: #line 834 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1324: #line 1325 \"ext/standard/var_unserializer.c\"",
          "1327: #line 835 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1357:  ZVAL_STR(rval, str);",
          "1358:  return 1;",
          "1359: }",
          "1361: yy82:",
          "1362:  ++YYCURSOR;",
          "1364:  {",
          "1365:  zend_long elements = parse_iv(start + 2);",
          "",
          "[Removed Lines]",
          "1360: #line 1361 \"ext/standard/var_unserializer.c\"",
          "1363: #line 868 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1361: #line 1362 \"ext/standard/var_unserializer.c\"",
          "1364: #line 869 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1394:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "1395: }",
          "1397: yy84:",
          "1398:  yych = *++YYCURSOR;",
          "1399:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1396: #line 1397 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1397: #line 1398 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1412:  goto yy18;",
          "1413: yy88:",
          "1414:  ++YYCURSOR;",
          "1416:  {",
          "1417:  zend_long elements;",
          "1418:     if (!var_hash) return 0;",
          "",
          "[Removed Lines]",
          "1415: #line 901 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1416: #line 902 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1423:  }",
          "1424:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1425: }",
          "1427: yy90:",
          "1428:  ++YYCURSOR;",
          "1430:  {",
          "1431:  size_t len, maxlen;",
          "1432:  char *str;",
          "",
          "[Removed Lines]",
          "1426: #line 1427 \"ext/standard/var_unserializer.c\"",
          "1429: #line 794 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1427: #line 1428 \"ext/standard/var_unserializer.c\"",
          "1430: #line 795 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1466:  }",
          "1467:  return 1;",
          "1468: }",
          "1470: yy92:",
          "1471:  ++YYCURSOR;",
          "1473:  {",
          "",
          "[Removed Lines]",
          "1469: #line 1470 \"ext/standard/var_unserializer.c\"",
          "1472: #line 769 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1470: #line 1471 \"ext/standard/var_unserializer.c\"",
          "1473: #line 770 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1486:  return 1;",
          "1487: }",
          "1489: }",
          "1493:  return 0;",
          "",
          "[Removed Lines]",
          "1488: #line 1489 \"ext/standard/var_unserializer.c\"",
          "1490: #line 1072 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1489: #line 1490 \"ext/standard/var_unserializer.c\"",
          "1491: #line 1073 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "440:   } else {",
          "441:    if (EXPECTED(Z_TYPE(key) == IS_STRING)) {",
          "442: string_key:",
          "444:      zend_property_info *existing_propinfo;",
          "445:      zend_string *new_key;",
          "446:      const char *unmangled_class = NULL;",
          "447:      const char *unmangled_prop;",
          "448:      size_t unmangled_prop_len;",
          "450:      if (UNEXPECTED(zend_unmangle_property_name_ex(Z_STR(key), &unmangled_class, &unmangled_prop, &unmangled_prop_len) == FAILURE)) {",
          "451:       zval_ptr_dtor(&key);",
          "452:       return 0;",
          "453:      }",
          "461:         new_key = zend_mangle_property_name(",
          "473:           ZSTR_VAL(unmangled), ZSTR_LEN(unmangled),",
          "474:           0);",
          "477:        } else {",
          "480:        }",
          "484:        zend_string_release(unmangled);",
          "485:       }",
          "486:      }",
          "496:      }",
          "497:     }",
          "498:    } else if (Z_TYPE(key) == IS_LONG) {",
          "",
          "[Removed Lines]",
          "443:     {",
          "455:      if (Z_TYPE_P(rval) == IS_OBJECT) {",
          "456:       zend_string *unmangled = zend_string_init(unmangled_prop, unmangled_prop_len, 0);",
          "458:       if (((existing_propinfo = zend_hash_find_ptr(&Z_OBJCE_P(rval)->properties_info, unmangled)) != NULL)",
          "459:         && (existing_propinfo->flags & ZEND_ACC_PPP_MASK)) {",
          "460:        if (existing_propinfo->flags & ZEND_ACC_PROTECTED) {",
          "462:          \"*\", 1, ZSTR_VAL(unmangled), ZSTR_LEN(unmangled), 0);",
          "463:         zend_string_release(unmangled);",
          "464:        } else if (existing_propinfo->flags & ZEND_ACC_PRIVATE) {",
          "465:         if (unmangled_class != NULL && strcmp(unmangled_class, \"*\") != 0) {",
          "466:          new_key = zend_mangle_property_name(",
          "467:           unmangled_class, strlen(unmangled_class),",
          "468:           ZSTR_VAL(unmangled), ZSTR_LEN(unmangled),",
          "469:           0);",
          "470:         } else {",
          "471:          new_key = zend_mangle_property_name(",
          "472:           ZSTR_VAL(existing_propinfo->ce->name), ZSTR_LEN(existing_propinfo->ce->name),",
          "475:         }",
          "476:         zend_string_release(unmangled);",
          "478:         ZEND_ASSERT(existing_propinfo->flags & ZEND_ACC_PUBLIC);",
          "479:         new_key = unmangled;",
          "481:        zend_string_release(Z_STR(key));",
          "482:        ZVAL_STR(&key, new_key);",
          "483:       } else {",
          "488:      if ((old_data = zend_hash_find(ht, Z_STR(key))) != NULL) {",
          "489:       if (Z_TYPE_P(old_data) == IS_INDIRECT) {",
          "490:        old_data = Z_INDIRECT_P(old_data);",
          "491:       }",
          "492:       var_push_dtor(var_hash, old_data);",
          "493:       data = zend_hash_update_ind(ht, Z_STR(key), &d);",
          "494:      } else {",
          "495:       data = zend_hash_add_new(ht, Z_STR(key), &d);",
          "",
          "[Added Lines]",
          "443:     if (Z_TYPE_P(rval) == IS_OBJECT",
          "444:       && zend_hash_num_elements(&Z_OBJCE_P(rval)->properties_info) > 0) {",
          "450:      zend_string *unmangled;",
          "457:      unmangled = zend_string_init(unmangled_prop, unmangled_prop_len, 0);",
          "459:      existing_propinfo = zend_hash_find_ptr(&Z_OBJCE_P(rval)->properties_info, unmangled);",
          "460:      if ((existing_propinfo != NULL)",
          "461:        && (existing_propinfo->flags & ZEND_ACC_PPP_MASK)) {",
          "462:       if (existing_propinfo->flags & ZEND_ACC_PROTECTED) {",
          "463:        new_key = zend_mangle_property_name(",
          "464:         \"*\", 1, ZSTR_VAL(unmangled), ZSTR_LEN(unmangled), 0);",
          "465:        zend_string_release(unmangled);",
          "466:       } else if (existing_propinfo->flags & ZEND_ACC_PRIVATE) {",
          "467:        if (unmangled_class != NULL && strcmp(unmangled_class, \"*\") != 0) {",
          "469:          unmangled_class, strlen(unmangled_class),",
          "473:         new_key = zend_mangle_property_name(",
          "474:          ZSTR_VAL(existing_propinfo->ce->name), ZSTR_LEN(existing_propinfo->ce->name),",
          "475:          ZSTR_VAL(unmangled), ZSTR_LEN(unmangled),",
          "476:          0);",
          "479:       } else {",
          "480:        ZEND_ASSERT(existing_propinfo->flags & ZEND_ACC_PUBLIC);",
          "481:        new_key = unmangled;",
          "483:       zend_string_release(Z_STR(key));",
          "484:       ZVAL_STR(&key, new_key);",
          "485:      } else {",
          "486:       zend_string_release(unmangled);",
          "488:     }",
          "490:     if ((old_data = zend_hash_find(ht, Z_STR(key))) != NULL) {",
          "491:      if (Z_TYPE_P(old_data) == IS_INDIRECT) {",
          "492:       old_data = Z_INDIRECT_P(old_data);",
          "494:      var_push_dtor(var_hash, old_data);",
          "495:      data = zend_hash_update_ind(ht, Z_STR(key), &d);",
          "496:     } else {",
          "497:      data = zend_hash_add_new(ht, Z_STR(key), &d);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9cf87aa1965504b1cd9dc595a3c6af418a416cfc",
      "candidate_info": {
        "commit_hash": "9cf87aa1965504b1cd9dc595a3c6af418a416cfc",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/9cf87aa1965504b1cd9dc595a3c6af418a416cfc",
        "files": [
          "Zend/zend_ast.c",
          "Zend/zend_builtin_functions.c",
          "Zend/zend_closures.c",
          "Zend/zend_compile.c",
          "Zend/zend_hash.c",
          "Zend/zend_hash.h",
          "Zend/zend_operators.c",
          "Zend/zend_vm_def.h",
          "Zend/zend_vm_execute.h",
          "ext/dom/xpath.c",
          "ext/libxml/libxml.c",
          "ext/mbstring/mbstring.c",
          "ext/mysqli/mysqli_nonapi.c",
          "ext/mysqli/mysqli_prop.c",
          "ext/reflection/php_reflection.c",
          "ext/simplexml/simplexml.c",
          "ext/spl/spl_fixedarray.c",
          "ext/sqlite3/sqlite3.c",
          "ext/standard/array.c",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re",
          "ext/xsl/xsltprocessor.c"
        ],
        "message": "Avoid HashTable allocations for empty arrays (using zend_empty_array).",
        "before_after_code_files": [
          "Zend/zend_ast.c||Zend/zend_ast.c",
          "Zend/zend_builtin_functions.c||Zend/zend_builtin_functions.c",
          "Zend/zend_closures.c||Zend/zend_closures.c",
          "Zend/zend_compile.c||Zend/zend_compile.c",
          "Zend/zend_hash.c||Zend/zend_hash.c",
          "Zend/zend_hash.h||Zend/zend_hash.h",
          "Zend/zend_operators.c||Zend/zend_operators.c",
          "Zend/zend_vm_def.h||Zend/zend_vm_def.h",
          "ext/dom/xpath.c||ext/dom/xpath.c",
          "ext/libxml/libxml.c||ext/libxml/libxml.c",
          "ext/mbstring/mbstring.c||ext/mbstring/mbstring.c",
          "ext/mysqli/mysqli_nonapi.c||ext/mysqli/mysqli_nonapi.c",
          "ext/mysqli/mysqli_prop.c||ext/mysqli/mysqli_prop.c",
          "ext/reflection/php_reflection.c||ext/reflection/php_reflection.c",
          "ext/simplexml/simplexml.c||ext/simplexml/simplexml.c",
          "ext/spl/spl_fixedarray.c||ext/spl/spl_fixedarray.c",
          "ext/sqlite3/sqlite3.c||ext/sqlite3/sqlite3.c",
          "ext/standard/array.c||ext/standard/array.c",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re",
          "ext/xsl/xsltprocessor.c||ext/xsl/xsltprocessor.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend_ast.c||Zend/zend_ast.c": [
          "File: Zend/zend_ast.c -> Zend/zend_ast.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "408:    }",
          "409:    break;",
          "410:   case ZEND_AST_ARRAY:",
          "412:    {",
          "413:     uint32_t i;",
          "414:     zend_ast_list *list = zend_ast_get_list(ast);",
          "415:     for (i = 0; i < list->children; i++) {",
          "416:      zend_ast *elem = list->child[i];",
          "417:      if (elem->child[1]) {",
          "",
          "[Removed Lines]",
          "411:    array_init(result);",
          "",
          "[Added Lines]",
          "415:     if (!list->children) {",
          "416:      ZVAL_EMPTY_ARRAY(result);",
          "417:      break;",
          "418:     }",
          "419:     array_init(result);",
          "",
          "---------------"
        ],
        "Zend/zend_builtin_functions.c||Zend/zend_builtin_functions.c": [
          "File: Zend/zend_builtin_functions.c -> Zend/zend_builtin_functions.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "473:  arg_count = ZEND_CALL_NUM_ARGS(ex);",
          "476:  if (arg_count) {",
          "477:   first_extra_arg = ex->func->op_array.num_args;",
          "478:   zend_hash_real_init(Z_ARRVAL_P(return_value), 1);",
          "479:   ZEND_HASH_FILL_PACKED(Z_ARRVAL_P(return_value)) {",
          "",
          "[Removed Lines]",
          "475:  array_init_size(return_value, arg_count);",
          "",
          "[Added Lines]",
          "476:   array_init_size(return_value, arg_count);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "512:    }",
          "513:   } ZEND_HASH_FILL_END();",
          "514:   Z_ARRVAL_P(return_value)->nNumOfElements = arg_count;",
          "515:  }",
          "516: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "515:  } else {",
          "516:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2122: {",
          "2123:  uint32_t num_args = ZEND_CALL_NUM_ARGS(call);",
          "2126:  if (num_args) {",
          "2127:   uint32_t i = 0;",
          "2128:   zval *p = ZEND_CALL_ARG(call, 1);",
          "2130:   zend_hash_real_init(Z_ARRVAL_P(arg_array), 1);",
          "2131:   ZEND_HASH_FILL_PACKED(Z_ARRVAL_P(arg_array)) {",
          "2132:    if (call->func->type == ZEND_USER_FUNCTION) {",
          "",
          "[Removed Lines]",
          "2125:  array_init_size(arg_array, num_args);",
          "",
          "[Added Lines]",
          "2131:   array_init_size(arg_array, num_args);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2184:    }",
          "2185:   } ZEND_HASH_FILL_END();",
          "2186:   Z_ARRVAL_P(arg_array)->nNumOfElements = num_args;",
          "2187:  }",
          "2188: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2189:  } else {",
          "2190:   ZVAL_EMPTY_ARRAY(arg_array);",
          "",
          "---------------"
        ],
        "Zend/zend_closures.c||Zend/zend_closures.c": [
          "File: Zend/zend_closures.c -> Zend/zend_closures.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "251:  fci.params = params;",
          "252:  fci.param_count = 2;",
          "253:  ZVAL_STR(&fci.params[0], EX(func)->common.function_name);",
          "257:  fci.object = Z_OBJ(EX(This));",
          "258:  fcc.object = Z_OBJ(EX(This));",
          "",
          "[Removed Lines]",
          "254:  array_init(&fci.params[1]);",
          "255:  zend_copy_parameters_array(ZEND_NUM_ARGS(), &fci.params[1]);",
          "",
          "[Added Lines]",
          "254:  if (ZEND_NUM_ARGS()) {",
          "255:   array_init_size(&fci.params[1], ZEND_NUM_ARGS());",
          "256:   zend_copy_parameters_array(ZEND_NUM_ARGS(), &fci.params[1]);",
          "257:  } else {",
          "258:   ZVAL_EMPTY_ARRAY(&fci.params[1]);",
          "259:  }",
          "",
          "---------------"
        ],
        "Zend/zend_compile.c||Zend/zend_compile.c": [
          "File: Zend/zend_compile.c -> Zend/zend_compile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6949:   return 0;",
          "6950:  }",
          "6952:  array_init_size(result, list->children);",
          "6953:  for (i = 0; i < list->children; ++i) {",
          "6954:   zend_ast *elem_ast = list->child[i];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6952:  if (!list->children) {",
          "6953:   ZVAL_EMPTY_ARRAY(result);",
          "6954:   return 1;",
          "6955:  }",
          "",
          "---------------"
        ],
        "Zend/zend_hash.c||Zend/zend_hash.c": [
          "File: Zend/zend_hash.c -> Zend/zend_hash.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "157: static const uint32_t uninitialized_bucket[-HT_MIN_MASK] =",
          "158:  {HT_INVALID_IDX, HT_INVALID_IDX};",
          "160: static zend_always_inline void _zend_hash_init_int(HashTable *ht, uint32_t nSize, dtor_func_t pDestructor, zend_bool persistent)",
          "161: {",
          "162:  GC_REFCOUNT(ht) = 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "160: ZEND_API const HashTable zend_empty_array = {",
          "161:  .gc.refcount = 2,",
          "162:  .gc.u.type_info = IS_ARRAY | (GC_IMMUTABLE << GC_FLAGS_SHIFT),",
          "163:  .u.flags = HASH_FLAG_STATIC_KEYS,",
          "164:  .nTableMask = HT_MIN_MASK,",
          "165:  .arData = (Bucket*)&uninitialized_bucket[2],",
          "166:  .nNumUsed = 0,",
          "167:  .nNumOfElements = 0,",
          "168:  .nTableSize = HT_MIN_SIZE,",
          "169:  .nInternalPointer = HT_INVALID_IDX,",
          "170:  .nNextFreeElement = 0,",
          "171:  .pDestructor = ZVAL_PTR_DTOR",
          "172: };",
          "",
          "---------------"
        ],
        "Zend/zend_hash.h||Zend/zend_hash.h": [
          "File: Zend/zend_hash.h -> Zend/zend_hash.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "56: # define HT_ALLOW_COW_VIOLATION(ht)",
          "57: #endif",
          "59: typedef struct _zend_hash_key {",
          "60:  zend_ulong h;",
          "61:  zend_string *key;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59: extern ZEND_API const HashTable zend_empty_array;",
          "61: #define ZVAL_EMPTY_ARRAY(z) do {      \\",
          "62:   zval *__z = (z);        \\",
          "63:   Z_ARR_P(__z) = (zend_array*)&zend_empty_array; \\",
          "64:   Z_TYPE_INFO_P(__z) = IS_ARRAY | (IS_TYPE_COPYABLE << Z_TYPE_FLAGS_SHIFT); \\",
          "65:  } while (0)",
          "",
          "---------------"
        ],
        "Zend/zend_operators.c||Zend/zend_operators.c": [
          "File: Zend/zend_operators.c -> Zend/zend_operators.c"
        ],
        "Zend/zend_vm_def.h||Zend/zend_vm_def.h": [
          "File: Zend/zend_vm_def.h -> Zend/zend_vm_def.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "4782:    }",
          "4783:   } ZEND_HASH_FILL_END();",
          "4784:  } else {",
          "4786:  }",
          "4788:  ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION();",
          "",
          "[Removed Lines]",
          "4785:   array_init(params);",
          "",
          "[Added Lines]",
          "4785:   ZVAL_EMPTY_ARRAY(params);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5263:  array = EX_VAR(opline->result.var);",
          "5264:  if (OP1_TYPE != IS_UNUSED) {",
          "5265:   size = opline->extended_value >> ZEND_ARRAY_SIZE_SHIFT;",
          "5273:   if (opline->extended_value & ZEND_ARRAY_NOT_PACKED) {",
          "5274:    zend_hash_real_init(Z_ARRVAL_P(array), 0);",
          "5275:   }",
          "5276:  }",
          "5279: }",
          "5281: ZEND_VM_HANDLER(21, ZEND_CAST, CONST|TMP|VAR|CV, ANY, TYPE)",
          "",
          "[Removed Lines]",
          "5266:  } else {",
          "5267:   size = 0;",
          "5268:  }",
          "5269:  ZVAL_ARR(array, zend_new_array(size));",
          "5271:  if (OP1_TYPE != IS_UNUSED) {",
          "5278:  ZEND_VM_DISPATCH_TO_HANDLER(ZEND_ADD_ARRAY_ELEMENT);",
          "",
          "[Added Lines]",
          "5266:   ZVAL_ARR(array, zend_new_array(size));",
          "5271:   ZEND_VM_DISPATCH_TO_HANDLER(ZEND_ADD_ARRAY_ELEMENT);",
          "5272:  } else {",
          "5273:   ZVAL_EMPTY_ARRAY(array);",
          "5274:   ZEND_VM_NEXT_OPCODE();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5324:    if (opline->extended_value == IS_ARRAY) {",
          "5325:     if (Z_TYPE_P(expr) != IS_OBJECT) {",
          "5327:      if (Z_TYPE_P(expr) != IS_NULL) {",
          "5328:       expr = zend_hash_index_add_new(Z_ARRVAL_P(result), 0, expr);",
          "5329:       if (OP1_TYPE == IS_CONST) {",
          "5330:        if (UNEXPECTED(Z_OPT_REFCOUNTED_P(expr))) Z_ADDREF_P(expr);",
          "5331:       } else {",
          "5332:        if (Z_OPT_REFCOUNTED_P(expr)) Z_ADDREF_P(expr);",
          "5333:       }",
          "5334:      }",
          "5335:     } else {",
          "5336:      ZVAL_COPY_VALUE(result, expr);",
          "",
          "[Removed Lines]",
          "5326:      ZVAL_ARR(result, zend_new_array(8));",
          "",
          "[Added Lines]",
          "5324:       ZVAL_ARR(result, zend_new_array(8));",
          "5331:      } else {",
          "5332:       ZVAL_EMPTY_ARRAY(result);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7820:  SAVE_OPLINE();",
          "7823:  if (num_args) {",
          "7824:   zval *p = ZEND_CALL_ARG(execute_data, 1);",
          "7825:   zval *end = p + num_args;",
          "7827:   zend_hash_real_init(args, 1);",
          "7828:   ZEND_HASH_FILL_PACKED(args) {",
          "7829:    do {",
          "",
          "[Removed Lines]",
          "7822:  args = zend_new_array(num_args);",
          "",
          "[Added Lines]",
          "7825:   args = zend_new_array(num_args);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7842:  ZEND_CALL_NUM_ARGS(call) = 2;",
          "7844:  ZVAL_STR(ZEND_CALL_ARG(call, 1), fbc->common.function_name);",
          "7846:  zend_free_trampoline(fbc);",
          "7847:  fbc = call->func;",
          "",
          "[Removed Lines]",
          "7845:  ZVAL_ARR(ZEND_CALL_ARG(call, 2), args);",
          "",
          "[Added Lines]",
          "7844:  if (num_args) {",
          "7845:   ZVAL_ARR(ZEND_CALL_ARG(call, 2), args);",
          "7846:  } else {",
          "7847:   ZVAL_EMPTY_ARRAY(ZEND_CALL_ARG(call, 2));",
          "7848:  }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "8316:   result_size = arg_count;",
          "8317:  }",
          "8322:  if (result_size) {",
          "8323:   uint32_t first_extra_arg = EX(func)->op_array.num_args;",
          "8324:   zend_hash_real_init(ht, 1);",
          "8325:   ZEND_HASH_FILL_PACKED(ht) {",
          "8326:    zval *p, *q;",
          "",
          "[Removed Lines]",
          "8319:  ht = zend_new_array(result_size);",
          "8320:  ZVAL_ARR(EX_VAR(opline->result.var), ht);",
          "",
          "[Added Lines]",
          "8325:   ht = zend_new_array(result_size);",
          "8326:   ZVAL_ARR(EX_VAR(opline->result.var), ht);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "8364:    }",
          "8365:   } ZEND_HASH_FILL_END();",
          "8366:   ht->nNumOfElements = result_size;",
          "8367:  }",
          "8368:  ZEND_VM_NEXT_OPCODE();",
          "8369: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8370:  } else {",
          "8371:   ZVAL_EMPTY_ARRAY(EX_VAR(opline->result.var));",
          "",
          "---------------"
        ],
        "ext/dom/xpath.c||ext/dom/xpath.c": [
          "File: ext/dom/xpath.c -> ext/dom/xpath.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "134:      xmlFree(str);",
          "135:     } else if (type == 2) {",
          "136:      int j;",
          "138:      if (obj->nodesetval && obj->nodesetval->nodeNr > 0) {",
          "139:       for (j = 0; j < obj->nodesetval->nodeNr; j++) {",
          "140:        xmlNodePtr node = obj->nodesetval->nodeTab[j];",
          "141:        zval child;",
          "",
          "[Removed Lines]",
          "137:      array_init(&fci.params[i]);",
          "",
          "[Added Lines]",
          "138:       array_init(&fci.params[i]);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "161:        php_dom_create_object(node, &child, &intern->dom);",
          "162:        add_next_index_zval(&fci.params[i], &child);",
          "163:       }",
          "164:      }",
          "165:     }",
          "166:     break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "164:      } else {",
          "165:       ZVAL_EMPTY_ARRAY(&fci.params[i]);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "430:    int i;",
          "431:    xmlNodeSetPtr nodesetp;",
          "437:     for (i = 0; i < nodesetp->nodeNr; i++) {",
          "438:      xmlNodePtr node = nodesetp->nodeTab[i];",
          "439:      zval child;",
          "",
          "[Removed Lines]",
          "433:    array_init(&retval);",
          "435:    if (xpathobjp->type == XPATH_NODESET && NULL != (nodesetp = xpathobjp->nodesetval)) {",
          "",
          "[Added Lines]",
          "435:    if (xpathobjp->type == XPATH_NODESET && NULL != (nodesetp = xpathobjp->nodesetval) && nodesetp->nodeNr) {",
          "437:     array_init(&retval);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "459:      php_dom_create_object(node, &child, &intern->dom);",
          "460:      add_next_index_zval(&retval, &child);",
          "461:     }",
          "462:    }",
          "463:    php_dom_create_interator(return_value, DOM_NODELIST);",
          "464:    nodeobj = Z_DOMOBJ_P(return_value);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "463:    } else {",
          "464:     ZVAL_EMPTY_ARRAY(&retval);",
          "",
          "---------------"
        ],
        "ext/libxml/libxml.c||ext/libxml/libxml.c": [
          "File: ext/libxml/libxml.c -> ext/libxml/libxml.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1043:  xmlErrorPtr error;",
          "1047:  if (LIBXML(error_list)) {",
          "1049:   error = zend_llist_get_first(LIBXML(error_list));",
          "1051:   while (error != NULL) {",
          "",
          "[Removed Lines]",
          "1045:  array_init(return_value);",
          "",
          "[Added Lines]",
          "1047:   array_init(return_value);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1071:    error = zend_llist_get_next(LIBXML(error_list));",
          "1072:   }",
          "1073:  }",
          "1074: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1072:  } else {",
          "1073:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------"
        ],
        "ext/mbstring/mbstring.c||ext/mbstring/mbstring.c": [
          "File: ext/mbstring/mbstring.c -> ext/mbstring/mbstring.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3136:     break;",
          "3137:    case IS_ARRAY:",
          "3138:     chash = php_mb_convert_encoding_recursive(HASH_OF(entry), _to_encoding, _from_encodings);",
          "3141:     }",
          "3143:     break;",
          "3144:    case IS_OBJECT:",
          "3145:    default:",
          "",
          "[Removed Lines]",
          "3139:     if (!chash) {",
          "3140:      chash = zend_new_array(0);",
          "3142:     ZVAL_ARR(&entry_tmp, chash);",
          "",
          "[Added Lines]",
          "3139:     if (chash) {",
          "3140:      ZVAL_ARR(&entry_tmp, chash);",
          "3141:     } else {",
          "3142:      ZVAL_EMPTY_ARRAY(&entry_tmp);",
          "",
          "---------------"
        ],
        "ext/mysqli/mysqli_nonapi.c||ext/mysqli/mysqli_nonapi.c": [
          "File: ext/mysqli/mysqli_nonapi.c -> ext/mysqli/mysqli_nonapi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "423:   return;",
          "424:  }",
          "425:  MYSQLI_FETCH_RESOURCE_CONN(mysql, mysql_link, MYSQLI_STATUS_VALID);",
          "427: #if defined(MYSQLI_USE_MYSQLND)",
          "428:  if (mysql->mysql->data->error_info->error_list) {",
          "429:   MYSQLND_ERROR_LIST_ELEMENT * message;",
          "430:   zend_llist_position pos;",
          "431:   for (message = (MYSQLND_ERROR_LIST_ELEMENT *) zend_llist_get_first_ex(mysql->mysql->data->error_info->error_list, &pos);",
          "432:     message;",
          "433:     message = (MYSQLND_ERROR_LIST_ELEMENT *) zend_llist_get_next_ex(mysql->mysql->data->error_info->error_list, &pos))",
          "",
          "[Removed Lines]",
          "426:  array_init(return_value);",
          "",
          "[Added Lines]",
          "430:   array_init(return_value);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "439:    add_assoc_string_ex(&single_error, \"error\", sizeof(\"error\") - 1, message->error);",
          "440:    add_next_index_zval(return_value, &single_error);",
          "441:   }",
          "442:  }",
          "443: #else",
          "444:  if (mysql_errno(mysql->mysql)) {",
          "445:   zval single_error;",
          "446:   array_init(&single_error);",
          "447:   add_assoc_long_ex(&single_error, \"errno\", sizeof(\"errno\") - 1, mysql_errno(mysql->mysql));",
          "448:   add_assoc_string_ex(&single_error, \"sqlstate\", sizeof(\"sqlstate\") - 1, mysql_sqlstate(mysql->mysql));",
          "449:   add_assoc_string_ex(&single_error, \"error\", sizeof(\"error\") - 1, mysql_error(mysql->mysql));",
          "450:   add_next_index_zval(return_value, &single_error);",
          "451:  }",
          "452: #endif",
          "453: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "442:  } else {",
          "443:   ZVAL_EMPTY_ARRAY(return_value);",
          "448:   array_init(return_value);",
          "454:  } else {",
          "455:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "464:   return;",
          "465:  }",
          "466:  MYSQLI_FETCH_RESOURCE_STMT(stmt, mysql_stmt, MYSQLI_STATUS_INITIALIZED);",
          "468: #if defined(MYSQLI_USE_MYSQLND)",
          "469:  if (stmt->stmt && stmt->stmt->data && stmt->stmt->data->error_info->error_list) {",
          "470:   MYSQLND_ERROR_LIST_ELEMENT * message;",
          "471:   zend_llist_position pos;",
          "472:   for (message = (MYSQLND_ERROR_LIST_ELEMENT *) zend_llist_get_first_ex(stmt->stmt->data->error_info->error_list, &pos);",
          "473:     message;",
          "474:     message = (MYSQLND_ERROR_LIST_ELEMENT *) zend_llist_get_next_ex(stmt->stmt->data->error_info->error_list, &pos))",
          "",
          "[Removed Lines]",
          "467:  array_init(return_value);",
          "",
          "[Added Lines]",
          "476:   array_init(return_value);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "480:    add_assoc_string_ex(&single_error, \"error\", sizeof(\"error\") - 1, message->error);",
          "481:    add_next_index_zval(return_value, &single_error);",
          "482:   }",
          "483:  }",
          "484: #else",
          "485:  if (mysql_stmt_errno(stmt->stmt)) {",
          "486:   zval single_error;",
          "487:   array_init(&single_error);",
          "488:   add_assoc_long_ex(&single_error, \"errno\", sizeof(\"errno\") - 1, mysql_stmt_errno(stmt->stmt));",
          "489:   add_assoc_string_ex(&single_error, \"sqlstate\", sizeof(\"sqlstate\") - 1, mysql_stmt_sqlstate(stmt->stmt));",
          "490:   add_assoc_string_ex(&single_error, \"error\", sizeof(\"error\") - 1, mysql_stmt_error(stmt->stmt));",
          "491:   add_next_index_zval(return_value, &single_error);",
          "492:  }",
          "493: #endif",
          "494: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "488:  } else {",
          "489:   ZVAL_EMPTY_ARRAY(return_value);",
          "494:   array_init(return_value);",
          "500:  } else {",
          "501:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------"
        ],
        "ext/mysqli/mysqli_prop.c||ext/mysqli/mysqli_prop.c": [
          "File: ext/mysqli/mysqli_prop.c -> ext/mysqli/mysqli_prop.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "185:   mysql = (MY_MYSQL *)((MYSQLI_RESOURCE *)(obj->ptr))->ptr;",
          "188:  if (mysql) {",
          "189: #if defined(MYSQLI_USE_MYSQLND)",
          "190:   if (mysql->mysql->data->error_info->error_list) {",
          "191:    MYSQLND_ERROR_LIST_ELEMENT * message;",
          "",
          "[Removed Lines]",
          "187:  array_init(retval);",
          "",
          "[Added Lines]",
          "188:   array_init(retval);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "212:    add_next_index_zval(retval, &single_error);",
          "213:   }",
          "214: #endif",
          "215:  }",
          "217:  return retval;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "215:  } else {",
          "216:   ZVAL_EMPTY_ARRAY(retval);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "374:  CHECK_STATUS(MYSQLI_STATUS_INITIALIZED);",
          "376:   stmt = (MY_STMT *)((MYSQLI_RESOURCE *)(obj->ptr))->ptr;",
          "378:  if (stmt && stmt->stmt) {",
          "379: #if defined(MYSQLI_USE_MYSQLND)",
          "380:   if (stmt->stmt->data && stmt->stmt->data->error_info->error_list) {",
          "381:    MYSQLND_ERROR_LIST_ELEMENT * message;",
          "",
          "[Removed Lines]",
          "377:  array_init(retval);",
          "",
          "[Added Lines]",
          "380:   array_init(retval);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "402:    add_next_index_zval(retval, &single_error);",
          "403:   }",
          "404: #endif",
          "405:  }",
          "406:  return retval;",
          "407: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "407:  } else {",
          "408:   ZVAL_EMPTY_ARRAY(retval);",
          "",
          "---------------"
        ],
        "ext/reflection/php_reflection.c||ext/reflection/php_reflection.c": [
          "File: ext/reflection/php_reflection.c -> ext/reflection/php_reflection.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1846:  GET_REFLECTION_OBJECT_PTR(fptr);",
          "1850:  if (fptr->type == ZEND_USER_FUNCTION && fptr->op_array.static_variables != NULL) {",
          "1851:   if (GC_REFCOUNT(fptr->op_array.static_variables) > 1) {",
          "1852:    if (!(GC_FLAGS(fptr->op_array.static_variables) & IS_ARRAY_IMMUTABLE)) {",
          "1853:     GC_REFCOUNT(fptr->op_array.static_variables)--;",
          "",
          "[Removed Lines]",
          "1849:  array_init(return_value);",
          "",
          "[Added Lines]",
          "1850:   array_init(return_value);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1860:    }",
          "1861:   } ZEND_HASH_FOREACH_END();",
          "1862:   zend_hash_copy(Z_ARRVAL_P(return_value), fptr->op_array.static_variables, zval_add_ref);",
          "1863:  }",
          "1864: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1863:  } else {",
          "1864:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2046:   num_args++;",
          "2047:  }",
          "2049:  array_init(return_value);",
          "2050:  for (i = 0; i < num_args; i++) {",
          "2051:   zval parameter;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2051:  if (!num_args) {",
          "2052:   ZVAL_EMPTY_ARRAY(return_value);",
          "2053:   return;",
          "2054:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4917:  }",
          "4918:  GET_REFLECTION_OBJECT_PTR(ce);",
          "4923:  if (ce->num_interfaces) {",
          "4924:   uint32_t i;",
          "4926:   for (i=0; i < ce->num_interfaces; i++) {",
          "4927:    zval interface;",
          "4928:    zend_reflection_class_factory(ce->interfaces[i], &interface);",
          "4929:    zend_hash_update(Z_ARRVAL_P(return_value), ce->interfaces[i]->name, &interface);",
          "4930:   }",
          "4931:  }",
          "4932: }",
          "",
          "[Removed Lines]",
          "4921:  array_init(return_value);",
          "",
          "[Added Lines]",
          "4930:   array_init(return_value);",
          "4936:  } else {",
          "4937:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4945:  }",
          "4946:  GET_REFLECTION_OBJECT_PTR(ce);",
          "4949:  array_init(return_value);",
          "4951:  for (i=0; i < ce->num_interfaces; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4955:  if (!ce->num_interfaces) {",
          "4957:   ZVAL_EMPTY_ARRAY(return_value);",
          "4958:   return;",
          "4959:  }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4967:  }",
          "4968:  GET_REFLECTION_OBJECT_PTR(ce);",
          "4970:  array_init(return_value);",
          "4972:  for (i=0; i < ce->num_traits; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4982:  if (!ce->num_traits) {",
          "4983:   ZVAL_EMPTY_ARRAY(return_value);",
          "4984:   return;",
          "4985:  }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4990:  }",
          "4991:  GET_REFLECTION_OBJECT_PTR(ce);",
          "4993:  array_init(return_value);",
          "4995:  for (i=0; i < ce->num_traits; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5010:  if (!ce->num_traits) {",
          "5011:   ZVAL_EMPTY_ARRAY(return_value);",
          "5012:   return;",
          "5013:  }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "5010:  }",
          "5011:  GET_REFLECTION_OBJECT_PTR(ce);",
          "5015:  if (ce->trait_aliases) {",
          "5016:   uint32_t i = 0;",
          "5017:   while (ce->trait_aliases[i]) {",
          "5018:    zend_string *mname;",
          "5019:    zend_trait_method_reference *cur_ref = ce->trait_aliases[i]->trait_method;",
          "",
          "[Removed Lines]",
          "5013:  array_init(return_value);",
          "",
          "[Added Lines]",
          "5039:   array_init(return_value);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "5026:    }",
          "5027:    i++;",
          "5028:   }",
          "5029:  }",
          "5030: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5052:  } else {",
          "5053:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "5961:  }",
          "5962:  GET_REFLECTION_OBJECT_PTR(module);",
          "5966:  dep = module->deps;",
          "5968:  if (!dep)",
          "5969:  {",
          "5970:   return;",
          "5971:  }",
          "5973:  while(dep->name) {",
          "5974:   zend_string *relation;",
          "5975:   char *rel_type;",
          "",
          "[Removed Lines]",
          "5964:  array_init(return_value);",
          "",
          "[Added Lines]",
          "5993:   ZVAL_EMPTY_ARRAY(return_value);",
          "5997:  array_init(return_value);",
          "",
          "---------------"
        ],
        "ext/simplexml/simplexml.c||ext/simplexml/simplexml.c": [
          "File: ext/simplexml/simplexml.c -> ext/simplexml/simplexml.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1351:  result = retval->nodesetval;",
          "1355:  if (result != NULL) {",
          "1356:   for (i = 0; i < result->nodeNr; ++i) {",
          "1357:    nodeptr = result->nodeTab[i];",
          "1358:    if (nodeptr->type == XML_TEXT_NODE || nodeptr->type == XML_ELEMENT_NODE || nodeptr->type == XML_ATTRIBUTE_NODE) {",
          "",
          "[Removed Lines]",
          "1353:  array_init(return_value);",
          "",
          "[Added Lines]",
          "1354:   array_init(return_value);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1372:     add_next_index_zval(return_value, &value);",
          "1373:    }",
          "1374:   }",
          "1375:  }",
          "1377:  xmlXPathFreeObject(retval);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1375:  } else {",
          "1376:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------"
        ],
        "ext/spl/spl_fixedarray.c||ext/spl/spl_fixedarray.c": [
          "File: ext/spl/spl_fixedarray.c -> ext/spl/spl_fixedarray.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "638:  intern = Z_SPLFIXEDARRAY_P(getThis());",
          "641:  if (intern->array.size > 0) {",
          "642:   int i = 0;",
          "643:   for (; i < intern->array.size; i++) {",
          "644:    if (!Z_ISUNDEF(intern->array.elements[i])) {",
          "645:     zend_hash_index_update(Z_ARRVAL_P(return_value), i, &intern->array.elements[i]);",
          "",
          "[Removed Lines]",
          "640:  array_init(return_value);",
          "",
          "[Added Lines]",
          "643:   array_init(return_value);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "650:     zend_hash_index_update(Z_ARRVAL_P(return_value), i, &EG(uninitialized_zval));",
          "651:    }",
          "652:   }",
          "653:  }",
          "654: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "654:  } else {",
          "655:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------"
        ],
        "ext/sqlite3/sqlite3.c||ext/sqlite3/sqlite3.c": [
          "File: ext/sqlite3/sqlite3.c -> ext/sqlite3/sqlite3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "676:    if (!entire_row) {",
          "677:     RETVAL_NULL();",
          "678:    } else {",
          "680:    }",
          "681:    break;",
          "682:   }",
          "",
          "[Removed Lines]",
          "679:     array_init(return_value);",
          "",
          "[Added Lines]",
          "679:     ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------"
        ],
        "ext/standard/array.c||ext/standard/array.c": [
          "File: ext/standard/array.c -> ext/standard/array.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2689:    }",
          "2690:   }",
          "2691:  } else if (EXPECTED(num == 0)) {",
          "2693:   return;",
          "2694:  } else {",
          "2695:   php_error_docref(NULL, E_WARNING, \"Number of elements can't be negative\");",
          "",
          "[Removed Lines]",
          "2692:   array_init(return_value);",
          "",
          "[Added Lines]",
          "2692:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3547:  if (offset > num_in) {",
          "3549:   return;",
          "3550:  } else if (offset < 0 && (offset = (num_in + offset)) < 0) {",
          "3551:   offset = 0;",
          "",
          "[Removed Lines]",
          "3548:   array_init(return_value);",
          "",
          "[Added Lines]",
          "3548:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3559:  }",
          "3561:  if (length <= 0) {",
          "3563:   return;",
          "3564:  }",
          "",
          "[Removed Lines]",
          "3562:   array_init(return_value);",
          "",
          "[Added Lines]",
          "3562:   ZVAL_EMPTY_ARRAY(return_value);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "6316:   RETURN_FALSE;",
          "6317:  }",
          "6321:  if (!num_keys) {",
          "6322:   return;",
          "6323:  }",
          "6325:  ZEND_HASH_FOREACH_VAL(keys, entry_keys) {",
          "6326:   while (1) {",
          "6327:    if (pos_values >= values->nNumUsed) {",
          "",
          "[Removed Lines]",
          "6319:  array_init_size(return_value, num_keys);",
          "",
          "[Added Lines]",
          "6320:   ZVAL_EMPTY_ARRAY(return_value);",
          "6324:  array_init_size(return_value, num_keys);",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "704:  yych = *(YYMARKER = ++YYCURSOR);",
          "705:  if (yych == ':') goto yy88;",
          "706: yy3:",
          "708:  { return 0; }",
          "709: #line 710 \"ext/standard/var_unserializer.c\"",
          "710: yy4:",
          "",
          "[Removed Lines]",
          "707: #line 1036 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "707: #line 1039 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "749:  goto yy3;",
          "750: yy14:",
          "751:  ++YYCURSOR;",
          "753:  {",
          "755:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "",
          "[Removed Lines]",
          "752: #line 1030 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "752: #line 1033 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "779:  yych = *++YYCURSOR;",
          "780:  if (yych != '\"') goto yy18;",
          "781:  ++YYCURSOR;",
          "783:  {",
          "784:  size_t len, len2, len3, maxlen;",
          "785:  zend_long elements;",
          "",
          "[Removed Lines]",
          "782: #line 878 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "782: #line 881 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "946:  yych = *++YYCURSOR;",
          "947:  if (yych != '\"') goto yy18;",
          "948:  ++YYCURSOR;",
          "950:  {",
          "951:  zend_long elements;",
          "952:     if (!var_hash) return 0;",
          "",
          "[Removed Lines]",
          "949: #line 867 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "949: #line 870 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "983:   return 0;",
          "984:  }",
          "987:  if (elements) {",
          "990:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "991:  }",
          "",
          "[Removed Lines]",
          "986:  array_init_size(rval, elements);",
          "",
          "[Added Lines]",
          "987:   array_init_size(rval, elements);",
          "991:  } else {",
          "992:   ZVAL_EMPTY_ARRAY(rval);",
          "993:   return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1003:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "1004: }",
          "1006: yy36:",
          "1007:  yych = *++YYCURSOR;",
          "1008:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1005: #line 1006 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1008: #line 1009 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1051:  ZVAL_STR(rval, str);",
          "1052:  return 1;",
          "1053: }",
          "1055: yy42:",
          "1056:  yych = *++YYCURSOR;",
          "1057:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1054: #line 1055 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1057: #line 1058 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1104:  }",
          "1105:  return 1;",
          "1106: }",
          "1108: yy48:",
          "1109:  yych = *++YYCURSOR;",
          "1110:  if (yych <= '/') {",
          "",
          "[Removed Lines]",
          "1107: #line 1108 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1110: #line 1111 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1201:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1202:  return 1;",
          "1203: }",
          "1205: yy60:",
          "1206:  yych = *++YYCURSOR;",
          "1207:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1204: #line 1205 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1207: #line 1208 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1266:  return 1;",
          "1267: }",
          "1269: yy70:",
          "1270:  yych = *++YYCURSOR;",
          "1271:  if (yych == 'N') goto yy67;",
          "",
          "[Removed Lines]",
          "1268: #line 1269 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1271: #line 1272 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1318:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1319:  return 1;",
          "1320: }",
          "1322: yy77:",
          "1323:  yych = *++YYCURSOR;",
          "1324:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1321: #line 1322 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1324: #line 1325 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1332:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1333:  return 1;",
          "1334: }",
          "1336: yy81:",
          "1337:  ++YYCURSOR;",
          "1338: #line 702 \"ext/standard/var_unserializer.re\"",
          "",
          "[Removed Lines]",
          "1335: #line 1336 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1338: #line 1339 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1341:  ZVAL_NULL(rval);",
          "1342:  return 1;",
          "1343: }",
          "1345: yy83:",
          "1346:  yych = *++YYCURSOR;",
          "1347:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1344: #line 1345 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1347: #line 1348 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1380:  return 1;",
          "1381: }",
          "1383: yy88:",
          "1384:  yych = *++YYCURSOR;",
          "1385:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1382: #line 1383 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1385: #line 1386 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1418:  return 1;",
          "1419: }",
          "1421: }",
          "1425:  return 0;",
          "",
          "[Removed Lines]",
          "1420: #line 1421 \"ext/standard/var_unserializer.c\"",
          "1422: #line 1038 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1423: #line 1424 \"ext/standard/var_unserializer.c\"",
          "1425: #line 1041 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "844:   return 0;",
          "845:  }",
          "848:  if (elements) {",
          "851:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "852:  }",
          "",
          "[Removed Lines]",
          "847:  array_init_size(rval, elements);",
          "",
          "[Added Lines]",
          "848:   array_init_size(rval, elements);",
          "852:  } else {",
          "853:   ZVAL_EMPTY_ARRAY(rval);",
          "854:   return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "",
          "---------------"
        ],
        "ext/xsl/xsltprocessor.c||ext/xsl/xsltprocessor.c": [
          "File: ext/xsl/xsltprocessor.c -> ext/xsl/xsltprocessor.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "252:     } else if (type == 2) {",
          "253:      int j;",
          "254:      dom_object *domintern = (dom_object *)intern->doc;",
          "256:      if (obj->nodesetval && obj->nodesetval->nodeNr > 0) {",
          "257:       for (j = 0; j < obj->nodesetval->nodeNr; j++) {",
          "258:        xmlNodePtr node = obj->nodesetval->nodeTab[j];",
          "259:        zval child;",
          "",
          "[Removed Lines]",
          "255:      array_init(&args[i]);",
          "",
          "[Added Lines]",
          "256:       array_init(&args[i]);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "282:        php_dom_create_object(node, &child, domintern);",
          "283:        add_next_index_zval(&args[i], &child);",
          "284:       }",
          "285:      }",
          "286:     }",
          "287:     break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "285:      } else {",
          "286:       ZVAL_EMPTY_ARRAY(&args[i]);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3a25a56a92ac1d0d6028a8ecd32ccf03bcd71ade",
      "candidate_info": {
        "commit_hash": "3a25a56a92ac1d0d6028a8ecd32ccf03bcd71ade",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/3a25a56a92ac1d0d6028a8ecd32ccf03bcd71ade",
        "files": [
          "ext/standard/tests/serialize/bug25378.phpt",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Fixed bug #74111",
        "before_after_code_files": [
          "ext/standard/tests/serialize/bug25378.phpt||ext/standard/tests/serialize/bug25378.phpt",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "ext/standard/tests/serialize/bug25378.phpt||ext/standard/tests/serialize/bug25378.phpt": [
          "File: ext/standard/tests/serialize/bug25378.phpt -> ext/standard/tests/serialize/bug25378.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: Notice: unserialize(): Error at offset 17 of 33 bytes in %sbug25378.php on line %d",
          "43: bool(false)",
          "46: bool(false)",
          "48: Notice: unserialize(): Error at offset 2 of 13 bytes in %sbug25378.php on line %d",
          "",
          "[Removed Lines]",
          "45: Notice: unserialize(): Error at offset 33 of 32 bytes in %sbug25378.php on line %d",
          "",
          "[Added Lines]",
          "45: Notice: unserialize(): Error at offset 32 of 32 bytes in %sbug25378.php on line %d",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "429: static inline int finish_nested_data(UNSERIALIZE_PARAMETER)",
          "430: {",
          "438: }",
          "440: static inline int object_custom(UNSERIALIZE_PARAMETER, zend_class_entry *ce)",
          "",
          "[Removed Lines]",
          "431:  if (*((*p)++) == '}')",
          "432:   return 1;",
          "434: #if SOMETHING_NEW_MIGHT_LEAD_TO_CRASH_ENABLE_IF_YOU_ARE_BRAVE",
          "435:  zval_ptr_dtor(rval);",
          "436: #endif",
          "437:  return 0;",
          "",
          "[Added Lines]",
          "431:  if (*p >= max || **p != '}') {",
          "432:   return 0;",
          "433:  }",
          "435:  (*p)++;",
          "436:  return 1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "582:  start = cursor;",
          "586: {",
          "587:  YYCTYPE yych;",
          "588:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "585: #line 586 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "584: #line 585 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "623:  yych = *YYCURSOR;",
          "624:  switch (yych) {",
          "625:  case 'C':",
          "627:  case 'N': goto yy5;",
          "634:  case 'o': goto yy12;",
          "639:  }",
          "640: yy2:",
          "642: yy3:",
          "644:  { return 0; }",
          "645: #line 646 \"ext/standard/var_unserializer.c\"",
          "646: yy4:",
          "647:  yych = *(YYMARKER = ++YYCURSOR);",
          "649:  goto yy3;",
          "650: yy5:",
          "651:  yych = *++YYCURSOR;",
          "653:  goto yy3;",
          "654: yy6:",
          "655:  yych = *(YYMARKER = ++YYCURSOR);",
          "657:  goto yy3;",
          "658: yy7:",
          "659:  yych = *(YYMARKER = ++YYCURSOR);",
          "661:  goto yy3;",
          "662: yy8:",
          "663:  yych = *(YYMARKER = ++YYCURSOR);",
          "665:  goto yy3;",
          "666: yy9:",
          "667:  yych = *(YYMARKER = ++YYCURSOR);",
          "669:  goto yy3;",
          "670: yy10:",
          "671:  yych = *(YYMARKER = ++YYCURSOR);",
          "673:  goto yy3;",
          "674: yy11:",
          "675:  yych = *(YYMARKER = ++YYCURSOR);",
          "677:  goto yy3;",
          "678: yy12:",
          "679:  yych = *(YYMARKER = ++YYCURSOR);",
          "681:  goto yy3;",
          "682: yy13:",
          "683:  yych = *(YYMARKER = ++YYCURSOR);",
          "685:  goto yy3;",
          "686: yy14:",
          "691:  ++YYCURSOR;",
          "693:  {",
          "695:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "697: }",
          "699: yy17:",
          "700:  yych = *++YYCURSOR;",
          "701:  if (yybm[0+yych] & 128) {",
          "703:  }",
          "705: yy18:",
          "706:  YYCURSOR = YYMARKER;",
          "707:  goto yy3;",
          "708: yy19:",
          "718:  yych = *++YYCURSOR;",
          "727:  }",
          "739:  goto yy18;",
          "742:  if (yych <= '/') goto yy18;",
          "746:  yych = *++YYCURSOR;",
          "755:   }",
          "764:   }",
          "765:  }",
          "776:  }",
          "787:  }",
          "789:  yych = *++YYCURSOR;",
          "790:  if (yych <= ',') {",
          "793:  } else {",
          "795:   if (yych <= '/') goto yy18;",
          "797:   goto yy18;",
          "798:  }",
          "800:  yych = *++YYCURSOR;",
          "802:  if (yych <= '/') goto yy18;",
          "812:  ++YYCURSOR;",
          "813:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "814:  yych = *YYCURSOR;",
          "818:  if (yych <= '/') goto yy18;",
          "822:  yych = *++YYCURSOR;",
          "826:  ++YYCURSOR;",
          "829:  if (yych <= '/') goto yy18;",
          "830:  if (yych <= '9') goto yy34;",
          "832:  goto yy18;",
          "834:  yych = *++YYCURSOR;",
          "835:  if (yych <= '/') goto yy18;",
          "836:  if (yych >= ':') goto yy18;",
          "838:  ++YYCURSOR;",
          "839:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "840:  yych = *YYCURSOR;",
          "841:  if (yych <= '/') goto yy18;",
          "846:  yych = *++YYCURSOR;",
          "850:  ++YYCURSOR;",
          "875:  }",
          "903:  }",
          "913:  yych = *++YYCURSOR;",
          "914:  if (yych <= '/') goto yy18;",
          "923:  goto yy18;",
          "925:  yych = *++YYCURSOR;",
          "926:  if (yych <= '/') goto yy18;",
          "927:  if (yych >= ':') goto yy18;",
          "929:  ++YYCURSOR;",
          "930:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "931:  yych = *YYCURSOR;",
          "932:  if (yych <= '/') goto yy18;",
          "937:  yych = *++YYCURSOR;",
          "941:  ++YYCURSOR;",
          "944:  if (yych <= '/') goto yy18;",
          "947:  goto yy18;",
          "949:  yych = *++YYCURSOR;",
          "950:  if (yych <= '/') goto yy18;",
          "951:  if (yych >= ':') goto yy18;",
          "953:  ++YYCURSOR;",
          "954:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "955:  yych = *YYCURSOR;",
          "956:  if (yych <= '/') goto yy18;",
          "961:  yych = *++YYCURSOR;",
          "965:  ++YYCURSOR;",
          "967:  {",
          "975:   return 0;",
          "976:  }",
          "982:  }",
          "988:  }",
          "990:  return 1;",
          "991: }",
          "994:  yych = *++YYCURSOR;",
          "996:  goto yy18;",
          "998:  yych = *++YYCURSOR;",
          "1000:  goto yy18;",
          "1002:  ++YYCURSOR;",
          "1011:  ++YYCURSOR;",
          "1012:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1013:  yych = *YYCURSOR;",
          "1014:  if (yych <= ';') {",
          "1015:   if (yych <= '/') goto yy18;",
          "1017:   if (yych <= ':') goto yy18;",
          "1018:  } else {",
          "1019:   if (yych <= 'E') {",
          "1020:    if (yych <= 'D') goto yy18;",
          "1022:   } else {",
          "1024:    goto yy18;",
          "1025:   }",
          "1026:  }",
          "1028:  ++YYCURSOR;",
          "1030:  {",
          "1031: #if SIZEOF_ZEND_LONG == 4",
          "1032: use_double:",
          "",
          "[Removed Lines]",
          "626:  case 'O': goto yy4;",
          "628:  case 'R': goto yy6;",
          "629:  case 'S': goto yy7;",
          "630:  case 'a': goto yy8;",
          "631:  case 'b': goto yy9;",
          "632:  case 'd': goto yy10;",
          "633:  case 'i': goto yy11;",
          "635:  case 'r': goto yy13;",
          "636:  case 's': goto yy14;",
          "637:  case '}': goto yy15;",
          "638:  default: goto yy2;",
          "641:  ++YYCURSOR;",
          "643: #line 963 \"ext/standard/var_unserializer.re\"",
          "648:  if (yych == ':') goto yy17;",
          "652:  if (yych == ';') goto yy19;",
          "656:  if (yych == ':') goto yy21;",
          "660:  if (yych == ':') goto yy22;",
          "664:  if (yych == ':') goto yy23;",
          "668:  if (yych == ':') goto yy24;",
          "672:  if (yych == ':') goto yy25;",
          "676:  if (yych == ':') goto yy26;",
          "680:  if (yych == ':') goto yy27;",
          "684:  if (yych == ':') goto yy28;",
          "687:  yych = *(YYMARKER = ++YYCURSOR);",
          "688:  if (yych == ':') goto yy29;",
          "689:  goto yy3;",
          "690: yy15:",
          "692: #line 957 \"ext/standard/var_unserializer.re\"",
          "698: #line 699 \"ext/standard/var_unserializer.c\"",
          "702:   goto yy31;",
          "704:  if (yych == '+') goto yy30;",
          "709:  ++YYCURSOR;",
          "710: #line 641 \"ext/standard/var_unserializer.re\"",
          "711:  {",
          "713:  ZVAL_NULL(rval);",
          "714:  return 1;",
          "715: }",
          "716: #line 717 \"ext/standard/var_unserializer.c\"",
          "717: yy21:",
          "719:  if (yych <= ',') {",
          "720:   if (yych == '+') goto yy33;",
          "721:   goto yy18;",
          "722:  } else {",
          "723:   if (yych <= '-') goto yy33;",
          "724:   if (yych <= '/') goto yy18;",
          "725:   if (yych <= '9') goto yy34;",
          "726:   goto yy18;",
          "728: yy22:",
          "729:  yych = *++YYCURSOR;",
          "730:  if (yych == '+') goto yy36;",
          "731:  if (yych <= '/') goto yy18;",
          "732:  if (yych <= '9') goto yy37;",
          "733:  goto yy18;",
          "734: yy23:",
          "735:  yych = *++YYCURSOR;",
          "736:  if (yych == '+') goto yy39;",
          "737:  if (yych <= '/') goto yy18;",
          "738:  if (yych <= '9') goto yy40;",
          "740: yy24:",
          "741:  yych = *++YYCURSOR;",
          "743:  if (yych <= '1') goto yy42;",
          "744:  goto yy18;",
          "745: yy25:",
          "747:  if (yych <= '/') {",
          "748:   if (yych <= ',') {",
          "749:    if (yych == '+') goto yy43;",
          "750:    goto yy18;",
          "751:   } else {",
          "752:    if (yych <= '-') goto yy44;",
          "753:    if (yych <= '.') goto yy45;",
          "754:    goto yy18;",
          "756:  } else {",
          "757:   if (yych <= 'I') {",
          "758:    if (yych <= '9') goto yy46;",
          "759:    if (yych <= 'H') goto yy18;",
          "760:    goto yy48;",
          "761:   } else {",
          "762:    if (yych == 'N') goto yy49;",
          "763:    goto yy18;",
          "766: yy26:",
          "767:  yych = *++YYCURSOR;",
          "768:  if (yych <= ',') {",
          "769:   if (yych == '+') goto yy50;",
          "770:   goto yy18;",
          "771:  } else {",
          "772:   if (yych <= '-') goto yy50;",
          "773:   if (yych <= '/') goto yy18;",
          "774:   if (yych <= '9') goto yy51;",
          "775:   goto yy18;",
          "777: yy27:",
          "778:  yych = *++YYCURSOR;",
          "779:  if (yych <= ',') {",
          "780:   if (yych == '+') goto yy53;",
          "781:   goto yy18;",
          "782:  } else {",
          "783:   if (yych <= '-') goto yy53;",
          "784:   if (yych <= '/') goto yy18;",
          "785:   if (yych <= '9') goto yy54;",
          "786:   goto yy18;",
          "788: yy28:",
          "791:   if (yych == '+') goto yy56;",
          "792:   goto yy18;",
          "794:   if (yych <= '-') goto yy56;",
          "796:   if (yych <= '9') goto yy57;",
          "799: yy29:",
          "801:  if (yych == '+') goto yy59;",
          "803:  if (yych <= '9') goto yy60;",
          "804:  goto yy18;",
          "805: yy30:",
          "806:  yych = *++YYCURSOR;",
          "807:  if (yybm[0+yych] & 128) {",
          "808:   goto yy31;",
          "809:  }",
          "810:  goto yy18;",
          "811: yy31:",
          "815:  if (yybm[0+yych] & 128) {",
          "816:   goto yy31;",
          "817:  }",
          "819:  if (yych <= ':') goto yy62;",
          "820:  goto yy18;",
          "821: yy33:",
          "823:  if (yych <= '/') goto yy18;",
          "824:  if (yych >= ':') goto yy18;",
          "825: yy34:",
          "827:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "828:  yych = *YYCURSOR;",
          "831:  if (yych == ';') goto yy63;",
          "833: yy36:",
          "837: yy37:",
          "842:  if (yych <= '9') goto yy37;",
          "843:  if (yych <= ':') goto yy65;",
          "844:  goto yy18;",
          "845: yy39:",
          "847:  if (yych <= '/') goto yy18;",
          "848:  if (yych >= ':') goto yy18;",
          "849: yy40:",
          "851:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "852:  yych = *YYCURSOR;",
          "853:  if (yych <= '/') goto yy18;",
          "854:  if (yych <= '9') goto yy40;",
          "855:  if (yych <= ':') goto yy66;",
          "856:  goto yy18;",
          "857: yy42:",
          "858:  yych = *++YYCURSOR;",
          "859:  if (yych == ';') goto yy67;",
          "860:  goto yy18;",
          "861: yy43:",
          "862:  yych = *++YYCURSOR;",
          "863:  if (yych == '.') goto yy45;",
          "864:  if (yych <= '/') goto yy18;",
          "865:  if (yych <= '9') goto yy46;",
          "866:  goto yy18;",
          "867: yy44:",
          "868:  yych = *++YYCURSOR;",
          "869:  if (yych <= '/') {",
          "870:   if (yych != '.') goto yy18;",
          "871:  } else {",
          "872:   if (yych <= '9') goto yy46;",
          "873:   if (yych == 'I') goto yy48;",
          "874:   goto yy18;",
          "876: yy45:",
          "877:  yych = *++YYCURSOR;",
          "878:  if (yych <= '/') goto yy18;",
          "879:  if (yych <= '9') goto yy69;",
          "880:  goto yy18;",
          "881: yy46:",
          "882:  ++YYCURSOR;",
          "883:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "884:  yych = *YYCURSOR;",
          "885:  if (yych <= ':') {",
          "886:   if (yych <= '.') {",
          "887:    if (yych <= '-') goto yy18;",
          "888:    goto yy69;",
          "889:   } else {",
          "890:    if (yych <= '/') goto yy18;",
          "891:    if (yych <= '9') goto yy46;",
          "892:    goto yy18;",
          "893:   }",
          "894:  } else {",
          "895:   if (yych <= 'E') {",
          "896:    if (yych <= ';') goto yy71;",
          "897:    if (yych <= 'D') goto yy18;",
          "898:    goto yy73;",
          "899:   } else {",
          "900:    if (yych == 'e') goto yy73;",
          "901:    goto yy18;",
          "902:   }",
          "904: yy48:",
          "905:  yych = *++YYCURSOR;",
          "906:  if (yych == 'N') goto yy74;",
          "907:  goto yy18;",
          "908: yy49:",
          "909:  yych = *++YYCURSOR;",
          "910:  if (yych == 'A') goto yy75;",
          "911:  goto yy18;",
          "912: yy50:",
          "915:  if (yych >= ':') goto yy18;",
          "916: yy51:",
          "917:  ++YYCURSOR;",
          "918:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "919:  yych = *YYCURSOR;",
          "920:  if (yych <= '/') goto yy18;",
          "921:  if (yych <= '9') goto yy51;",
          "922:  if (yych == ';') goto yy76;",
          "924: yy53:",
          "928: yy54:",
          "933:  if (yych <= '9') goto yy54;",
          "934:  if (yych <= ':') goto yy78;",
          "935:  goto yy18;",
          "936: yy56:",
          "938:  if (yych <= '/') goto yy18;",
          "939:  if (yych >= ':') goto yy18;",
          "940: yy57:",
          "942:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "943:  yych = *YYCURSOR;",
          "945:  if (yych <= '9') goto yy57;",
          "946:  if (yych == ';') goto yy79;",
          "948: yy59:",
          "952: yy60:",
          "957:  if (yych <= '9') goto yy60;",
          "958:  if (yych <= ':') goto yy81;",
          "959:  goto yy18;",
          "960: yy62:",
          "962:  if (yych == '\"') goto yy82;",
          "963:  goto yy18;",
          "964: yy63:",
          "966: #line 590 \"ext/standard/var_unserializer.re\"",
          "968:  zend_long id;",
          "971:  if (!var_hash) return 0;",
          "973:  id = parse_iv(start + 2) - 1;",
          "974:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "978:  zval_ptr_dtor(rval);",
          "979:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "980:   ZVAL_UNDEF(rval);",
          "981:   return 1;",
          "983:  if (Z_ISREF_P(rval_ref)) {",
          "984:   ZVAL_COPY(rval, rval_ref);",
          "985:  } else {",
          "986:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "987:   ZVAL_COPY(rval, rval_ref);",
          "992: #line 993 \"ext/standard/var_unserializer.c\"",
          "993: yy65:",
          "995:  if (yych == '\"') goto yy84;",
          "997: yy66:",
          "999:  if (yych == '{') goto yy86;",
          "1001: yy67:",
          "1003: #line 647 \"ext/standard/var_unserializer.re\"",
          "1004:  {",
          "1006:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1007:  return 1;",
          "1008: }",
          "1009: #line 1010 \"ext/standard/var_unserializer.c\"",
          "1010: yy69:",
          "1016:   if (yych <= '9') goto yy69;",
          "1021:    goto yy73;",
          "1023:    if (yych == 'e') goto yy73;",
          "1027: yy71:",
          "1029: #line 695 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "625:  case 'O': goto yy13;",
          "627:  case 'R': goto yy2;",
          "628:  case 'S': goto yy10;",
          "629:  case 'a': goto yy11;",
          "630:  case 'b': goto yy6;",
          "631:  case 'd': goto yy8;",
          "632:  case 'i': goto yy7;",
          "634:  case 'r': goto yy4;",
          "635:  case 's': goto yy9;",
          "636:  case '}': goto yy14;",
          "637:  default: goto yy16;",
          "640:  yych = *(YYMARKER = ++YYCURSOR);",
          "641:  if (yych == ':') goto yy95;",
          "643: #line 962 \"ext/standard/var_unserializer.re\"",
          "648:  if (yych == ':') goto yy89;",
          "652:  if (yych == ';') goto yy87;",
          "656:  if (yych == ':') goto yy83;",
          "660:  if (yych == ':') goto yy77;",
          "664:  if (yych == ':') goto yy53;",
          "668:  if (yych == ':') goto yy46;",
          "672:  if (yych == ':') goto yy39;",
          "676:  if (yych == ':') goto yy32;",
          "680:  if (yych == ':') goto yy25;",
          "684:  if (yych == ':') goto yy17;",
          "688: #line 956 \"ext/standard/var_unserializer.re\"",
          "694: #line 695 \"ext/standard/var_unserializer.c\"",
          "695: yy16:",
          "696:  yych = *++YYCURSOR;",
          "697:  goto yy3;",
          "701:   goto yy20;",
          "703:  if (yych == '+') goto yy19;",
          "709:  if (yybm[0+yych] & 128) {",
          "710:   goto yy20;",
          "713: yy20:",
          "714:  ++YYCURSOR;",
          "715:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "716:  yych = *YYCURSOR;",
          "717:  if (yybm[0+yych] & 128) {",
          "718:   goto yy20;",
          "719:  }",
          "721:  if (yych >= ';') goto yy18;",
          "723:  if (yych != '\"') goto yy18;",
          "724:  ++YYCURSOR;",
          "725: #line 804 \"ext/standard/var_unserializer.re\"",
          "726:  {",
          "727:  size_t len, len2, len3, maxlen;",
          "728:  zend_long elements;",
          "729:  char *str;",
          "730:  zend_string *class_name;",
          "731:  zend_class_entry *ce;",
          "732:  int incomplete_class = 0;",
          "734:  int custom_object = 0;",
          "736:  zval user_func;",
          "737:  zval retval;",
          "738:  zval args[1];",
          "740:     if (!var_hash) return 0;",
          "741:  if (*start == 'C') {",
          "742:   custom_object = 1;",
          "743:  }",
          "745:  len2 = len = parse_uiv(start + 2);",
          "746:  maxlen = max - YYCURSOR;",
          "747:  if (maxlen < len || len == 0) {",
          "749:   return 0;",
          "750:  }",
          "752:  str = (char*)YYCURSOR;",
          "754:  YYCURSOR += len;",
          "756:  if (*(YYCURSOR) != '\"') {",
          "758:   return 0;",
          "759:  }",
          "760:  if (*(YYCURSOR+1) != ':') {",
          "762:   return 0;",
          "763:  }",
          "765:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "766:  if (len3 != len)",
          "767:  {",
          "769:   return 0;",
          "770:  }",
          "772:  class_name = zend_string_init(str, len, 0);",
          "774:  do {",
          "775:   if(!unserialize_allowed_class(class_name, classes)) {",
          "776:    incomplete_class = 1;",
          "777:    ce = PHP_IC_ENTRY;",
          "778:    break;",
          "782:   BG(serialize_lock)++;",
          "783:   ce = zend_lookup_class(class_name);",
          "784:   if (ce) {",
          "785:    BG(serialize_lock)--;",
          "786:    if (EG(exception)) {",
          "787:     zend_string_release(class_name);",
          "788:     return 0;",
          "789:    }",
          "790:    break;",
          "791:   }",
          "792:   BG(serialize_lock)--;",
          "794:   if (EG(exception)) {",
          "795:    zend_string_release(class_name);",
          "796:    return 0;",
          "797:   }",
          "800:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "801:    incomplete_class = 1;",
          "802:    ce = PHP_IC_ENTRY;",
          "803:    break;",
          "804:   }",
          "807:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "809:   ZVAL_STR_COPY(&args[0], class_name);",
          "810:   BG(serialize_lock)++;",
          "811:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "812:    BG(serialize_lock)--;",
          "813:    if (EG(exception)) {",
          "814:     zend_string_release(class_name);",
          "815:     zval_ptr_dtor(&user_func);",
          "816:     zval_ptr_dtor(&args[0]);",
          "817:     return 0;",
          "818:    }",
          "819:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "820:    incomplete_class = 1;",
          "821:    ce = PHP_IC_ENTRY;",
          "822:    zval_ptr_dtor(&user_func);",
          "823:    zval_ptr_dtor(&args[0]);",
          "824:    break;",
          "825:   }",
          "826:   BG(serialize_lock)--;",
          "827:   zval_ptr_dtor(&retval);",
          "828:   if (EG(exception)) {",
          "829:    zend_string_release(class_name);",
          "830:    zval_ptr_dtor(&user_func);",
          "831:    zval_ptr_dtor(&args[0]);",
          "832:    return 0;",
          "833:   }",
          "836:   BG(serialize_lock)++;",
          "837:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "838:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "839:    incomplete_class = 1;",
          "840:    ce = PHP_IC_ENTRY;",
          "841:   }",
          "842:   BG(serialize_lock)--;",
          "844:   zval_ptr_dtor(&user_func);",
          "845:   zval_ptr_dtor(&args[0]);",
          "846:   break;",
          "847:  } while (1);",
          "851:  if (custom_object) {",
          "852:   int ret;",
          "854:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "856:   if (ret && incomplete_class) {",
          "857:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "859:   zend_string_release(class_name);",
          "860:   return ret;",
          "863:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "865:  if (elements < 0) {",
          "866:     zend_string_release(class_name);",
          "867:     return 0;",
          "870:  if (incomplete_class) {",
          "871:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "873:  zend_string_release(class_name);",
          "875:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "876: }",
          "877: #line 878 \"ext/standard/var_unserializer.c\"",
          "878: yy25:",
          "881:   if (yych != '+') goto yy18;",
          "883:   if (yych <= '-') goto yy26;",
          "885:   if (yych <= '9') goto yy27;",
          "888: yy26:",
          "891:  if (yych >= ':') goto yy18;",
          "892: yy27:",
          "897:  if (yych <= '9') goto yy27;",
          "898:  if (yych >= ';') goto yy18;",
          "900:  if (yych != '\"') goto yy18;",
          "902: #line 793 \"ext/standard/var_unserializer.re\"",
          "903:  {",
          "904:  zend_long elements;",
          "905:     if (!var_hash) return 0;",
          "907:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "908:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
          "909:   return 0;",
          "910:  }",
          "911:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "912: }",
          "913: #line 914 \"ext/standard/var_unserializer.c\"",
          "914: yy32:",
          "915:  yych = *++YYCURSOR;",
          "916:  if (yych == '+') goto yy33;",
          "920: yy33:",
          "924: yy34:",
          "929:  if (yych <= '9') goto yy34;",
          "930:  if (yych >= ';') goto yy18;",
          "932:  if (yych != '{') goto yy18;",
          "934: #line 769 \"ext/standard/var_unserializer.re\"",
          "935:  {",
          "936:  zend_long elements = parse_iv(start + 2);",
          "939:     if (!var_hash) return 0;",
          "941:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
          "942:   return 0;",
          "945:  array_init_size(rval, elements);",
          "946:  if (elements) {",
          "949:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "952:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "953:   return 0;",
          "954:  }",
          "956:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "957: }",
          "958: #line 959 \"ext/standard/var_unserializer.c\"",
          "959: yy39:",
          "961:  if (yych == '+') goto yy40;",
          "963:  if (yych <= '9') goto yy41;",
          "965: yy40:",
          "969: yy41:",
          "974:  if (yych <= '9') goto yy41;",
          "975:  if (yych >= ';') goto yy18;",
          "977:  if (yych != '\"') goto yy18;",
          "979: #line 735 \"ext/standard/var_unserializer.re\"",
          "980:  {",
          "981:  size_t len, maxlen;",
          "982:  zend_string *str;",
          "984:  len = parse_uiv(start + 2);",
          "985:  maxlen = max - YYCURSOR;",
          "986:  if (maxlen < len) {",
          "988:   return 0;",
          "989:  }",
          "991:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "992:   return 0;",
          "993:  }",
          "995:  if (*(YYCURSOR) != '\"') {",
          "996:   zend_string_free(str);",
          "998:   return 0;",
          "999:  }",
          "1001:  if (*(YYCURSOR + 1) != ';') {",
          "1002:   efree(str);",
          "1004:   return 0;",
          "1005:  }",
          "1007:  YYCURSOR += 2;",
          "1010:  ZVAL_STR(rval, str);",
          "1011:  return 1;",
          "1012: }",
          "1013: #line 1014 \"ext/standard/var_unserializer.c\"",
          "1014: yy46:",
          "1015:  yych = *++YYCURSOR;",
          "1016:  if (yych == '+') goto yy47;",
          "1018:  if (yych <= '9') goto yy48;",
          "1020: yy47:",
          "1024: yy48:",
          "1029:  if (yych <= '9') goto yy48;",
          "1030:  if (yych >= ';') goto yy18;",
          "1032:  if (yych != '\"') goto yy18;",
          "1034: #line 703 \"ext/standard/var_unserializer.re\"",
          "1036:  size_t len, maxlen;",
          "1037:  char *str;",
          "1039:  len = parse_uiv(start + 2);",
          "1040:  maxlen = max - YYCURSOR;",
          "1041:  if (maxlen < len) {",
          "1046:  str = (char*)YYCURSOR;",
          "1048:  YYCURSOR += len;",
          "1050:  if (*(YYCURSOR) != '\"') {",
          "1052:   return 0;",
          "1055:  if (*(YYCURSOR + 1) != ';') {",
          "1057:   return 0;",
          "1060:  YYCURSOR += 2;",
          "1063:  ZVAL_STRINGL(rval, str, len);",
          "1066: #line 1067 \"ext/standard/var_unserializer.c\"",
          "1067: yy53:",
          "1068:  yych = *++YYCURSOR;",
          "1069:  if (yych <= '/') {",
          "1070:   if (yych <= ',') {",
          "1071:    if (yych == '+') goto yy57;",
          "1072:    goto yy18;",
          "1073:   } else {",
          "1074:    if (yych <= '-') goto yy55;",
          "1075:    if (yych <= '.') goto yy60;",
          "1076:    goto yy18;",
          "1077:   }",
          "1078:  } else {",
          "1079:   if (yych <= 'I') {",
          "1080:    if (yych <= '9') goto yy58;",
          "1081:    if (yych <= 'H') goto yy18;",
          "1082:    goto yy56;",
          "1083:   } else {",
          "1084:    if (yych != 'N') goto yy18;",
          "1085:   }",
          "1086:  }",
          "1088:  if (yych == 'A') goto yy76;",
          "1090: yy55:",
          "1091:  yych = *++YYCURSOR;",
          "1092:  if (yych <= '/') {",
          "1093:   if (yych == '.') goto yy60;",
          "1094:   goto yy18;",
          "1095:  } else {",
          "1096:   if (yych <= '9') goto yy58;",
          "1097:   if (yych != 'I') goto yy18;",
          "1098:  }",
          "1099: yy56:",
          "1101:  if (yych == 'N') goto yy72;",
          "1103: yy57:",
          "1104:  yych = *++YYCURSOR;",
          "1105:  if (yych == '.') goto yy60;",
          "1106:  if (yych <= '/') goto yy18;",
          "1107:  if (yych >= ':') goto yy18;",
          "1108: yy58:",
          "1110:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1111:  yych = *YYCURSOR;",
          "1112:  if (yych <= ':') {",
          "1113:   if (yych <= '.') {",
          "1114:    if (yych <= '-') goto yy18;",
          "1115:    goto yy70;",
          "1116:   } else {",
          "1117:    if (yych <= '/') goto yy18;",
          "1118:    if (yych <= '9') goto yy58;",
          "1119:    goto yy18;",
          "1120:   }",
          "1121:  } else {",
          "1122:   if (yych <= 'E') {",
          "1123:    if (yych <= ';') goto yy63;",
          "1124:    if (yych <= 'D') goto yy18;",
          "1125:    goto yy65;",
          "1126:   } else {",
          "1127:    if (yych == 'e') goto yy65;",
          "1128:    goto yy18;",
          "1129:   }",
          "1130:  }",
          "1131: yy60:",
          "1132:  yych = *++YYCURSOR;",
          "1133:  if (yych <= '/') goto yy18;",
          "1134:  if (yych >= ':') goto yy18;",
          "1135: yy61:",
          "1141:   if (yych <= '9') goto yy61;",
          "1146:    goto yy65;",
          "1148:    if (yych == 'e') goto yy65;",
          "1152: yy63:",
          "1154: #line 694 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1035:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1036:  return 1;",
          "1037: }",
          "1040:  yych = *++YYCURSOR;",
          "1041:  if (yych <= ',') {",
          "1044:  } else {",
          "1046:   if (yych <= '/') goto yy18;",
          "1048:   goto yy18;",
          "1049:  }",
          "1051:  yych = *++YYCURSOR;",
          "1053:  goto yy18;",
          "1055:  yych = *++YYCURSOR;",
          "1057:  goto yy18;",
          "1059:  ++YYCURSOR;",
          "1077:   } else {",
          "1079:   }",
          "1080:  }",
          "1088:  yych = *++YYCURSOR;",
          "1092:  ++YYCURSOR;",
          "1094:  {",
          "1112:  }",
          "1116:  return 1;",
          "1117: }",
          "1120:  yych = *++YYCURSOR;",
          "1122:  goto yy18;",
          "1124:  ++YYCURSOR;",
          "1126:  {",
          "1170:  }",
          "1218:    }",
          "1258:   }",
          "1268:  }",
          "1276: }",
          "1279:  ++YYCURSOR;",
          "1281:  {",
          "1312:  return 1;",
          "1313: }",
          "1316:  ++YYCURSOR;",
          "1318:  {",
          "1340: }",
          "1343:  yych = *++YYCURSOR;",
          "1344:  if (yych <= ',') {",
          "1347:  } else {",
          "1349:   if (yych <= '/') goto yy18;",
          "1351:  }",
          "1353:  ++YYCURSOR;",
          "1354:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1355:  yych = *YYCURSOR;",
          "1356:  if (yych <= '/') goto yy18;",
          "1365:  ++YYCURSOR;",
          "1367:  {",
          "1389:   return 0;",
          "1390:  }",
          "1398:   return 0;",
          "1399:  }",
          "1404:  }",
          "1410:  return 1;",
          "1411: }",
          "1413: yy96:",
          "1414:  yych = *++YYCURSOR;",
          "1415:  if (yych <= '/') goto yy18;",
          "1418: yy97:",
          "1419:  ++YYCURSOR;",
          "1421:  {",
          "1430:  } else {",
          "1432:  }",
          "1434:  return 1;",
          "1435: }",
          "1437: }",
          "1441:  return 0;",
          "",
          "[Removed Lines]",
          "1038: #line 1039 \"ext/standard/var_unserializer.c\"",
          "1039: yy73:",
          "1042:   if (yych == '+') goto yy88;",
          "1043:   goto yy18;",
          "1045:   if (yych <= '-') goto yy88;",
          "1047:   if (yych <= '9') goto yy89;",
          "1050: yy74:",
          "1052:  if (yych == 'F') goto yy91;",
          "1054: yy75:",
          "1056:  if (yych == 'N') goto yy91;",
          "1058: yy76:",
          "1060: #line 653 \"ext/standard/var_unserializer.re\"",
          "1061:  {",
          "1062: #if SIZEOF_ZEND_LONG == 4",
          "1063:  int digits = YYCURSOR - start - 3;",
          "1065:  if (start[2] == '-' || start[2] == '+') {",
          "1066:   digits--;",
          "1067:  }",
          "1070:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
          "1071:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
          "1072:    int cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
          "1074:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
          "1075:     goto use_double;",
          "1076:    }",
          "1078:    goto use_double;",
          "1081: #endif",
          "1083:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1084:  return 1;",
          "1085: }",
          "1086: #line 1087 \"ext/standard/var_unserializer.c\"",
          "1087: yy78:",
          "1089:  if (yych == '\"') goto yy92;",
          "1090:  goto yy18;",
          "1091: yy79:",
          "1093: #line 616 \"ext/standard/var_unserializer.re\"",
          "1095:  zend_long id;",
          "1098:  if (!var_hash) return 0;",
          "1100:  id = parse_iv(start + 2) - 1;",
          "1101:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1102:   return 0;",
          "1103:  }",
          "1105:  if (rval_ref == rval) {",
          "1106:   return 0;",
          "1107:  }",
          "1109:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1110:   ZVAL_UNDEF(rval);",
          "1111:   return 1;",
          "1114:  ZVAL_COPY(rval, rval_ref);",
          "1118: #line 1119 \"ext/standard/var_unserializer.c\"",
          "1119: yy81:",
          "1121:  if (yych == '\"') goto yy94;",
          "1123: yy82:",
          "1125: #line 805 \"ext/standard/var_unserializer.re\"",
          "1127:  size_t len, len2, len3, maxlen;",
          "1128:  zend_long elements;",
          "1129:  char *str;",
          "1130:  zend_string *class_name;",
          "1131:  zend_class_entry *ce;",
          "1132:  int incomplete_class = 0;",
          "1134:  int custom_object = 0;",
          "1136:  zval user_func;",
          "1137:  zval retval;",
          "1138:  zval args[1];",
          "1140:     if (!var_hash) return 0;",
          "1141:  if (*start == 'C') {",
          "1142:   custom_object = 1;",
          "1143:  }",
          "1145:  len2 = len = parse_uiv(start + 2);",
          "1146:  maxlen = max - YYCURSOR;",
          "1147:  if (maxlen < len || len == 0) {",
          "1149:   return 0;",
          "1150:  }",
          "1152:  str = (char*)YYCURSOR;",
          "1154:  YYCURSOR += len;",
          "1156:  if (*(YYCURSOR) != '\"') {",
          "1158:   return 0;",
          "1159:  }",
          "1160:  if (*(YYCURSOR+1) != ':') {",
          "1162:   return 0;",
          "1163:  }",
          "1165:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "1166:  if (len3 != len)",
          "1167:  {",
          "1169:   return 0;",
          "1172:  class_name = zend_string_init(str, len, 0);",
          "1174:  do {",
          "1175:   if(!unserialize_allowed_class(class_name, classes)) {",
          "1176:    incomplete_class = 1;",
          "1177:    ce = PHP_IC_ENTRY;",
          "1178:    break;",
          "1179:   }",
          "1182:   BG(serialize_lock)++;",
          "1183:   ce = zend_lookup_class(class_name);",
          "1184:   if (ce) {",
          "1185:    BG(serialize_lock)--;",
          "1186:    if (EG(exception)) {",
          "1187:     zend_string_release(class_name);",
          "1188:     return 0;",
          "1189:    }",
          "1190:    break;",
          "1191:   }",
          "1192:   BG(serialize_lock)--;",
          "1194:   if (EG(exception)) {",
          "1195:    zend_string_release(class_name);",
          "1196:    return 0;",
          "1197:   }",
          "1200:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "1201:    incomplete_class = 1;",
          "1202:    ce = PHP_IC_ENTRY;",
          "1203:    break;",
          "1204:   }",
          "1207:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "1209:   ZVAL_STR_COPY(&args[0], class_name);",
          "1210:   BG(serialize_lock)++;",
          "1211:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "1212:    BG(serialize_lock)--;",
          "1213:    if (EG(exception)) {",
          "1214:     zend_string_release(class_name);",
          "1215:     zval_ptr_dtor(&user_func);",
          "1216:     zval_ptr_dtor(&args[0]);",
          "1217:     return 0;",
          "1219:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "1220:    incomplete_class = 1;",
          "1221:    ce = PHP_IC_ENTRY;",
          "1222:    zval_ptr_dtor(&user_func);",
          "1223:    zval_ptr_dtor(&args[0]);",
          "1224:    break;",
          "1225:   }",
          "1226:   BG(serialize_lock)--;",
          "1227:   zval_ptr_dtor(&retval);",
          "1228:   if (EG(exception)) {",
          "1229:    zend_string_release(class_name);",
          "1230:    zval_ptr_dtor(&user_func);",
          "1231:    zval_ptr_dtor(&args[0]);",
          "1232:    return 0;",
          "1233:   }",
          "1236:   BG(serialize_lock)++;",
          "1237:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "1238:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "1239:    incomplete_class = 1;",
          "1240:    ce = PHP_IC_ENTRY;",
          "1241:   }",
          "1242:   BG(serialize_lock)--;",
          "1244:   zval_ptr_dtor(&user_func);",
          "1245:   zval_ptr_dtor(&args[0]);",
          "1246:   break;",
          "1247:  } while (1);",
          "1251:  if (custom_object) {",
          "1252:   int ret;",
          "1254:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "1256:   if (ret && incomplete_class) {",
          "1257:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1259:   zend_string_release(class_name);",
          "1260:   return ret;",
          "1261:  }",
          "1263:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "1265:  if (elements < 0) {",
          "1266:     zend_string_release(class_name);",
          "1267:     return 0;",
          "1270:  if (incomplete_class) {",
          "1271:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1272:  }",
          "1273:  zend_string_release(class_name);",
          "1275:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1277: #line 1278 \"ext/standard/var_unserializer.c\"",
          "1278: yy84:",
          "1280: #line 736 \"ext/standard/var_unserializer.re\"",
          "1282:  size_t len, maxlen;",
          "1283:  zend_string *str;",
          "1285:  len = parse_uiv(start + 2);",
          "1286:  maxlen = max - YYCURSOR;",
          "1287:  if (maxlen < len) {",
          "1289:   return 0;",
          "1290:  }",
          "1292:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "1293:   return 0;",
          "1294:  }",
          "1296:  if (*(YYCURSOR) != '\"') {",
          "1297:   zend_string_free(str);",
          "1299:   return 0;",
          "1300:  }",
          "1302:  if (*(YYCURSOR + 1) != ';') {",
          "1303:   efree(str);",
          "1305:   return 0;",
          "1306:  }",
          "1308:  YYCURSOR += 2;",
          "1311:  ZVAL_STR(rval, str);",
          "1314: #line 1315 \"ext/standard/var_unserializer.c\"",
          "1315: yy86:",
          "1317: #line 770 \"ext/standard/var_unserializer.re\"",
          "1319:  zend_long elements = parse_iv(start + 2);",
          "1322:     if (!var_hash) return 0;",
          "1324:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
          "1325:   return 0;",
          "1326:  }",
          "1328:  array_init_size(rval, elements);",
          "1329:  if (elements) {",
          "1332:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "1333:  }",
          "1335:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "1336:   return 0;",
          "1337:  }",
          "1339:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "1341: #line 1342 \"ext/standard/var_unserializer.c\"",
          "1342: yy88:",
          "1345:   if (yych == '+') goto yy96;",
          "1346:   goto yy18;",
          "1348:   if (yych <= '-') goto yy96;",
          "1350:   if (yych >= ':') goto yy18;",
          "1352: yy89:",
          "1357:  if (yych <= '9') goto yy89;",
          "1358:  if (yych == ';') goto yy71;",
          "1359:  goto yy18;",
          "1360: yy91:",
          "1361:  yych = *++YYCURSOR;",
          "1362:  if (yych == ';') goto yy97;",
          "1363:  goto yy18;",
          "1364: yy92:",
          "1366: #line 794 \"ext/standard/var_unserializer.re\"",
          "1368:  zend_long elements;",
          "1369:     if (!var_hash) return 0;",
          "1371:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "1372:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
          "1373:   return 0;",
          "1374:  }",
          "1375:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1376: }",
          "1377: #line 1378 \"ext/standard/var_unserializer.c\"",
          "1378: yy94:",
          "1379:  ++YYCURSOR;",
          "1380: #line 704 \"ext/standard/var_unserializer.re\"",
          "1381:  {",
          "1382:  size_t len, maxlen;",
          "1383:  char *str;",
          "1385:  len = parse_uiv(start + 2);",
          "1386:  maxlen = max - YYCURSOR;",
          "1387:  if (maxlen < len) {",
          "1392:  str = (char*)YYCURSOR;",
          "1394:  YYCURSOR += len;",
          "1396:  if (*(YYCURSOR) != '\"') {",
          "1401:  if (*(YYCURSOR + 1) != ';') {",
          "1403:   return 0;",
          "1406:  YYCURSOR += 2;",
          "1409:  ZVAL_STRINGL(rval, str, len);",
          "1412: #line 1413 \"ext/standard/var_unserializer.c\"",
          "1416:  if (yych <= '9') goto yy89;",
          "1417:  goto yy18;",
          "1420: #line 679 \"ext/standard/var_unserializer.re\"",
          "1424:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1425:   ZVAL_DOUBLE(rval, php_get_nan());",
          "1426:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1427:   ZVAL_DOUBLE(rval, php_get_inf());",
          "1428:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1429:   ZVAL_DOUBLE(rval, -php_get_inf());",
          "1431:   ZVAL_NULL(rval);",
          "1436: #line 1437 \"ext/standard/var_unserializer.c\"",
          "1438: #line 965 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1163: #line 1164 \"ext/standard/var_unserializer.c\"",
          "1164: yy65:",
          "1167:   if (yych != '+') goto yy18;",
          "1169:   if (yych <= '-') goto yy66;",
          "1171:   if (yych <= '9') goto yy67;",
          "1174: yy66:",
          "1176:  if (yych <= ',') {",
          "1177:   if (yych == '+') goto yy69;",
          "1178:   goto yy18;",
          "1179:  } else {",
          "1180:   if (yych <= '-') goto yy69;",
          "1181:   if (yych <= '/') goto yy18;",
          "1182:   if (yych >= ':') goto yy18;",
          "1183:  }",
          "1184: yy67:",
          "1185:  ++YYCURSOR;",
          "1186:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1187:  yych = *YYCURSOR;",
          "1188:  if (yych <= '/') goto yy18;",
          "1189:  if (yych <= '9') goto yy67;",
          "1190:  if (yych == ';') goto yy63;",
          "1192: yy69:",
          "1194:  if (yych <= '/') goto yy18;",
          "1195:  if (yych <= '9') goto yy67;",
          "1197: yy70:",
          "1199:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1200:  yych = *YYCURSOR;",
          "1201:  if (yych <= ';') {",
          "1202:   if (yych <= '/') goto yy18;",
          "1203:   if (yych <= '9') goto yy70;",
          "1204:   if (yych <= ':') goto yy18;",
          "1205:   goto yy63;",
          "1206:  } else {",
          "1207:   if (yych <= 'E') {",
          "1208:    if (yych <= 'D') goto yy18;",
          "1209:    goto yy65;",
          "1211:    if (yych == 'e') goto yy65;",
          "1212:    goto yy18;",
          "1215: yy72:",
          "1217:  if (yych != 'F') goto yy18;",
          "1218: yy73:",
          "1219:  yych = *++YYCURSOR;",
          "1220:  if (yych != ';') goto yy18;",
          "1222: #line 678 \"ext/standard/var_unserializer.re\"",
          "1226:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1227:   ZVAL_DOUBLE(rval, php_get_nan());",
          "1228:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1229:   ZVAL_DOUBLE(rval, php_get_inf());",
          "1230:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1231:   ZVAL_DOUBLE(rval, -php_get_inf());",
          "1232:  } else {",
          "1233:   ZVAL_NULL(rval);",
          "1238: #line 1239 \"ext/standard/var_unserializer.c\"",
          "1239: yy76:",
          "1241:  if (yych == 'N') goto yy73;",
          "1243: yy77:",
          "1244:  yych = *++YYCURSOR;",
          "1245:  if (yych <= ',') {",
          "1246:   if (yych != '+') goto yy18;",
          "1247:  } else {",
          "1248:   if (yych <= '-') goto yy78;",
          "1249:   if (yych <= '/') goto yy18;",
          "1250:   if (yych <= '9') goto yy79;",
          "1251:   goto yy18;",
          "1252:  }",
          "1253: yy78:",
          "1254:  yych = *++YYCURSOR;",
          "1255:  if (yych <= '/') goto yy18;",
          "1256:  if (yych >= ':') goto yy18;",
          "1257: yy79:",
          "1259:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1260:  yych = *YYCURSOR;",
          "1261:  if (yych <= '/') goto yy18;",
          "1262:  if (yych <= '9') goto yy79;",
          "1263:  if (yych != ';') goto yy18;",
          "1264:  ++YYCURSOR;",
          "1265: #line 652 \"ext/standard/var_unserializer.re\"",
          "1267: #if SIZEOF_ZEND_LONG == 4",
          "1268:  int digits = YYCURSOR - start - 3;",
          "1270:  if (start[2] == '-' || start[2] == '+') {",
          "1271:   digits--;",
          "1275:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
          "1276:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
          "1277:    int cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
          "1279:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
          "1280:     goto use_double;",
          "1282:   } else {",
          "1283:    goto use_double;",
          "1286: #endif",
          "1288:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1289:  return 1;",
          "1291: #line 1292 \"ext/standard/var_unserializer.c\"",
          "1292: yy83:",
          "1293:  yych = *++YYCURSOR;",
          "1294:  if (yych <= '/') goto yy18;",
          "1295:  if (yych >= '2') goto yy18;",
          "1296:  yych = *++YYCURSOR;",
          "1297:  if (yych != ';') goto yy18;",
          "1299: #line 646 \"ext/standard/var_unserializer.re\"",
          "1302:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1305: #line 1306 \"ext/standard/var_unserializer.c\"",
          "1306: yy87:",
          "1308: #line 640 \"ext/standard/var_unserializer.re\"",
          "1311:  ZVAL_NULL(rval);",
          "1312:  return 1;",
          "1314: #line 1315 \"ext/standard/var_unserializer.c\"",
          "1315: yy89:",
          "1318:   if (yych != '+') goto yy18;",
          "1320:   if (yych <= '-') goto yy90;",
          "1322:   if (yych <= '9') goto yy91;",
          "1323:   goto yy18;",
          "1325: yy90:",
          "1326:  yych = *++YYCURSOR;",
          "1327:  if (yych <= '/') goto yy18;",
          "1328:  if (yych >= ':') goto yy18;",
          "1329: yy91:",
          "1334:  if (yych <= '9') goto yy91;",
          "1335:  if (yych != ';') goto yy18;",
          "1337: #line 615 \"ext/standard/var_unserializer.re\"",
          "1339:  zend_long id;",
          "1342:  if (!var_hash) return 0;",
          "1344:  id = parse_iv(start + 2) - 1;",
          "1345:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1349:  if (rval_ref == rval) {",
          "1353:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1354:   ZVAL_UNDEF(rval);",
          "1355:   return 1;",
          "1358:  ZVAL_COPY(rval, rval_ref);",
          "1362: #line 1363 \"ext/standard/var_unserializer.c\"",
          "1363: yy95:",
          "1364:  yych = *++YYCURSOR;",
          "1365:  if (yych <= ',') {",
          "1366:   if (yych != '+') goto yy18;",
          "1367:  } else {",
          "1368:   if (yych <= '-') goto yy96;",
          "1369:   if (yych <= '/') goto yy18;",
          "1370:   if (yych <= '9') goto yy97;",
          "1371:   goto yy18;",
          "1372:  }",
          "1376:  if (yych >= ':') goto yy18;",
          "1379:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1380:  yych = *YYCURSOR;",
          "1381:  if (yych <= '/') goto yy18;",
          "1382:  if (yych <= '9') goto yy97;",
          "1383:  if (yych != ';') goto yy18;",
          "1384:  ++YYCURSOR;",
          "1385: #line 589 \"ext/standard/var_unserializer.re\"",
          "1387:  zend_long id;",
          "1390:  if (!var_hash) return 0;",
          "1392:  id = parse_iv(start + 2) - 1;",
          "1393:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1394:   return 0;",
          "1395:  }",
          "1397:  zval_ptr_dtor(rval);",
          "1398:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1399:   ZVAL_UNDEF(rval);",
          "1400:   return 1;",
          "1401:  }",
          "1402:  if (Z_ISREF_P(rval_ref)) {",
          "1403:   ZVAL_COPY(rval, rval_ref);",
          "1405:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "1406:   ZVAL_COPY(rval, rval_ref);",
          "1411: #line 1412 \"ext/standard/var_unserializer.c\"",
          "1413: #line 964 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "433: static inline int finish_nested_data(UNSERIALIZE_PARAMETER)",
          "434: {",
          "442: }",
          "444: static inline int object_custom(UNSERIALIZE_PARAMETER, zend_class_entry *ce)",
          "",
          "[Removed Lines]",
          "435:  if (*((*p)++) == '}')",
          "436:   return 1;",
          "438: #if SOMETHING_NEW_MIGHT_LEAD_TO_CRASH_ENABLE_IF_YOU_ARE_BRAVE",
          "439:  zval_ptr_dtor(rval);",
          "440: #endif",
          "441:  return 0;",
          "",
          "[Added Lines]",
          "435:  if (*p >= max || **p != '}') {",
          "436:   return 0;",
          "437:  }",
          "439:  (*p)++;",
          "440:  return 1;",
          "",
          "---------------"
        ]
      }
    }
  ]
}