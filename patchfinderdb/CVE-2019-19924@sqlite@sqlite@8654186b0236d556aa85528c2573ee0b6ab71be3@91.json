{
  "cve_id": "CVE-2019-19924",
  "cve_desc": "SQLite 3.30.1 mishandles certain parser-tree rewriting, related to expr.c, vdbeaux.c, and window.c. This is caused by incorrect sqlite3WindowRewrite() error handling.",
  "repo": "sqlite/sqlite",
  "patch_hash": "8654186b0236d556aa85528c2573ee0b6ab71be3",
  "patch_info": {
    "commit_hash": "8654186b0236d556aa85528c2573ee0b6ab71be3",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/8654186b0236d556aa85528c2573ee0b6ab71be3",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/expr.c",
      "src/vdbeaux.c",
      "src/window.c"
    ],
    "message": "When an error occurs while rewriting the parser tree for window functions in the sqlite3WindowRewrite() routine, make sure that pParse->nErr is set, and make sure that this shuts down any subsequent code generation that might depend on the transformations that were implemented.  This fixes a problem discovered by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: e2bddcd4c55ba3cbe0130332679ff4b048630d0ced9a8899982edb5a3569ba7f",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/expr.c||src/expr.c",
      "src/vdbeaux.c||src/vdbeaux.c",
      "src/window.c||src/window.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 4417c5bf0aabb34ed174f01afd981c924ae965a42128719d8d6735536631d12f",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/expr.c||src/expr.c": [
      "File: src/expr.c -> src/expr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "376:   int addr;",
      "377:   CollSeq *p4;",
      "379:   if( isCommuted ){",
      "380:     p4 = sqlite3BinaryCompareCollSeq(pParse, pRight, pLeft);",
      "381:   }else{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "379:   if( pParse->nErr ) return 0;",
      "",
      "---------------"
    ],
    "src/vdbeaux.c||src/vdbeaux.c": [
      "File: src/vdbeaux.c -> src/vdbeaux.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1304: static void vdbeVComment(Vdbe *p, const char *zFormat, va_list ap){",
      "1305:   assert( p->nOp>0 || p->aOp==0 );",
      "1307:   if( p->nOp ){",
      "1308:     assert( p->aOp );",
      "1309:     sqlite3DbFree(p->db, p->aOp[p->nOp-1].zComment);",
      "",
      "[Removed Lines]",
      "1306:   assert( p->aOp==0 || p->aOp[p->nOp-1].zComment==0 || p->db->mallocFailed );",
      "",
      "[Added Lines]",
      "1306:   assert( p->aOp==0 || p->aOp[p->nOp-1].zComment==0 || p->db->mallocFailed",
      "1307:           || p->pParse->nErr>0 );",
      "",
      "---------------"
    ],
    "src/window.c||src/window.c": [
      "File: src/window.c -> src/window.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "935:     pTab = sqlite3DbMallocZero(db, sizeof(Table));",
      "936:     if( pTab==0 ){",
      "938:     }",
      "940:     p->pSrc = 0;",
      "",
      "[Removed Lines]",
      "937:       return SQLITE_NOMEM;",
      "",
      "[Added Lines]",
      "937:       return sqlite3ErrorToParser(db, SQLITE_NOMEM);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1039:     sqlite3DbFree(db, pTab);",
      "1040:   }",
      "1042:   return rc;",
      "1043: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1042:   if( rc && pParse->nErr==0 ){",
      "1043:     assert( pParse->db->mallocFailed );",
      "1044:     return sqlite3ErrorToParser(pParse->db, SQLITE_NOMEM);",
      "1045:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1a39d2bb5cb1a72f5e91aaabfd94fc0e9759bf82",
      "candidate_info": {
        "commit_hash": "1a39d2bb5cb1a72f5e91aaabfd94fc0e9759bf82",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1a39d2bb5cb1a72f5e91aaabfd94fc0e9759bf82",
        "files": [
          "ext/fts5/fts5_aux.c",
          "ext/fts5/test/fts5ak.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Handle SQL NULL values without crashing in the fts5 snippet() and highlight() functions.\n\nFossilOrigin-Name: a5e9cc794f17566160c4b2b5791601a744a21ace987b19ff8a5816fd78dce56a",
        "before_after_code_files": [
          "ext/fts5/fts5_aux.c||ext/fts5/fts5_aux.c",
          "ext/fts5/test/fts5ak.test||ext/fts5/test/fts5ak.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_aux.c||ext/fts5/fts5_aux.c": [
          "File: ext/fts5/fts5_aux.c -> ext/fts5/fts5_aux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "136:   HighlightContext *p,",
          "137:   const char *z, int n",
          "138: ){",
          "140:     if( n<0 ) n = (int)strlen(z);",
          "141:     p->zOut = sqlite3_mprintf(\"%z%.*s\", p->zOut, n, z);",
          "142:     if( p->zOut==0 ) *pRc = SQLITE_NOMEM;",
          "",
          "[Removed Lines]",
          "139:   if( *pRc==SQLITE_OK ){",
          "",
          "[Added Lines]",
          "139:   if( *pRc==SQLITE_OK && z ){",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5ak.test||ext/fts5/test/fts5ak.test": [
          "File: ext/fts5/test/fts5ak.test -> ext/fts5/test/fts5ak.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "144:   {[a b c d e]}",
          "145: }",
          "147: }",
          "149: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "147: do_execsql_test 3.2 {",
          "148:   SELECT highlight(ft, 0, NULL, NULL) FROM ft WHERE ft MATCH 'a+b+c AND c+d+e';",
          "149: } {",
          "150:   {a b c x c d e}",
          "151:   {a b c c d e}",
          "152:   {a b c d e}",
          "153: }",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e54efd60c20bbfc5d70ddb9e1dd6ffb68cbbcfa57b4f07cb104767ef08c1a559",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dbdddc99d83130fe22ed63a4bfc19a53a408c51b",
      "candidate_info": {
        "commit_hash": "dbdddc99d83130fe22ed63a4bfc19a53a408c51b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/dbdddc99d83130fe22ed63a4bfc19a53a408c51b",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c"
        ],
        "message": "Detect oversized strings in the OP_String opcode even if the P4 argument is originally UTF8 and has to be converted to UTF16 to match the database file and that conversion causes the string to become shorter and cross below SQLITE_LIMIT_LENGTH threshold.  This might fix an OSSFuzz problem that we have been so far unable to reproduce.\n\nFossilOrigin-Name: c13d563925db12bc2c91ff9432050261e5bd39d960e2739777a66bf804df2e31",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: be21a6416d47ff7db995006a0422b745044d9b8bb5bad3c53342aa6e2e524771",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1102:   if( encoding!=SQLITE_UTF8 ){",
          "1103:     rc = sqlite3VdbeMemSetStr(pOut, pOp->p4.z, -1, SQLITE_UTF8, SQLITE_STATIC);",
          "1104:     assert( rc==SQLITE_OK || rc==SQLITE_TOOBIG );",
          "1105:     if( SQLITE_OK!=sqlite3VdbeChangeEncoding(pOut, encoding) ) goto no_mem;",
          "1106:     assert( pOut->szMalloc>0 && pOut->zMalloc==pOut->z );",
          "1107:     assert( VdbeMemDynamic(pOut)==0 );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1105:     if( rc ) goto too_big;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1114:     pOp->p4.z = pOut->z;",
          "1115:     pOp->p1 = pOut->n;",
          "1116:   }",
          "1118: #endif",
          "1119:   if( pOp->p1>db->aLimit[SQLITE_LIMIT_LENGTH] ){",
          "1120:     goto too_big;",
          "",
          "[Removed Lines]",
          "1117:   testcase( rc==SQLITE_TOOBIG );",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "178edcd774d21a1eab9e2b92d76c60950c4da894",
      "candidate_info": {
        "commit_hash": "178edcd774d21a1eab9e2b92d76c60950c4da894",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/178edcd774d21a1eab9e2b92d76c60950c4da894",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/dbfuzz2.c"
        ],
        "message": "Update dbfuzz2 to set a maximum database size of 100MiB by default, but with the new --max-db-size N option to change that limit.\n\nFossilOrigin-Name: 21d6bb78ef2979d011b917d2d6519d7cd0009fcad83ed23ab2e9a5e02d8e51ab",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/dbfuzz2.c||test/dbfuzz2.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 30f08d58882819a69e353bcc1b6b349664bbfbe00aa1c115ba44a9fd899fcc5b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/dbfuzz2.c||test/dbfuzz2.c": [
          "File: test/dbfuzz2.c -> test/dbfuzz2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "70: static int bVdbeDebug = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "73: static sqlite3_int64 szMax = 104857600;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "78:   sqlite3 *db;",
          "79:   int rc;",
          "80:   int i;",
          "82:   if( eVerbosity>=1 ){",
          "83:     printf(\"************** nByte=%d ***************\\n\", (int)nByte);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84:   sqlite3_int64 x;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "92:   sqlite3_deserialize(db, \"main\", a, nByte, nByte,",
          "93:         SQLITE_DESERIALIZE_RESIZEABLE |",
          "94:         SQLITE_DESERIALIZE_FREEONCLOSE);",
          "95:   if( bVdbeDebug ){",
          "96:     sqlite3_exec(db, \"PRAGMA vdbe_debug=ON\", 0, 0, 0);",
          "97:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "99:   x = szMax;",
          "100:   sqlite3_file_control(db, \"main\", SQLITE_FCNTL_SIZE_LIMIT, &x);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "150:         bVdbeDebug = 1;",
          "151:         continue;",
          "152:       }",
          "153:       if( strcmp(z,\"max-stack\")==0",
          "154:        || strcmp(z,\"max-data\")==0",
          "155:        || strcmp(z,\"max-as\")==0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "159:       if( strcmp(z,\"max-db-size\")==0 ){",
          "160:         if( i+1==argc ){",
          "161:           fprintf(stderr, \"missing argument to %s\\n\", argv[i]);",
          "162:           exit(1);",
          "163:         }",
          "164:         szMax = strtol(argv[++i], 0, 0);",
          "165:         continue;",
          "166:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "98d63579be4de635e5f687929ba2553f5b725661",
      "candidate_info": {
        "commit_hash": "98d63579be4de635e5f687929ba2553f5b725661",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/98d63579be4de635e5f687929ba2553f5b725661",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix an fts5 segfault that could occur after parsing a corrupt structure record.\n\nFossilOrigin-Name: 600daa9c27206628bf74892376ded35dac11fe0a34894fcd975ad5041a0a0fda",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "993:     memset(&pData->p[pData->nn], 0, FTS5_DATA_PADDING);",
          "994:     p->rc = fts5StructureDecode(pData->p, pData->nn, &iCookie, &pRet);",
          "996:       p->rc = sqlite3Fts5ConfigLoad(pConfig, iCookie);",
          "997:     }",
          "998:     fts5DataRelease(pData);",
          "",
          "[Removed Lines]",
          "995:     if( p->rc==SQLITE_OK && pConfig->iCookie!=iCookie ){",
          "",
          "[Added Lines]",
          "995:     if( p->rc==SQLITE_OK && (pConfig->pgsz==0 || pConfig->iCookie!=iCookie) ){",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "4668: do_execsql_test 38.2 {",
          "4669:   UPDATE t1_data SET block = X'000202' WHERE rowid=1;",
          "4670: }",
          "4672: do_catchsql_test 38.3 {",
          "4673:   SELECT * FROM t1('a b') ORDER BY rank;",
          "4674: } {1 {database disk image is malformed}}",
          "",
          "[Removed Lines]",
          "4671: breakpoint",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8953:   CREATE VIRTUAL TABLE t3 USING fts5vocab('t1'(),'col' );",
          "8954: }",
          "8957:   SELECT * FROM t3 ORDER BY rowid;",
          "8958: } {1 {database disk image is malformed}}",
          "8961: sqlite3_fts5_may_be_corrupt 0",
          "8962: finish_test",
          "",
          "[Removed Lines]",
          "8956: do_catchsql_test 62.2 {",
          "",
          "[Added Lines]",
          "8955: do_catchsql_test 61.2 {",
          "8959: breakpoint",
          "8960: #-------------------------------------------------------------------------",
          "8961: do_test 62.0 {",
          "8962:   sqlite3 db {}",
          "8963:   db deserialize [decode_hexdb {",
          "8964: .open --hexdb",
          "8965: | size 28672 pagesize 4096 filename crash-44942694542e1e.db",
          "8966: | page 1 offset 0",
          "8967: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "8968: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 00   .....@  ........",
          "8969: |     96: 00 00 00 00 0d 0f c7 00 07 0d 92 00 0f 8d 0f 36   ...............6",
          "8970: |    112: 0e cb 0e 6b 0e 0e 0d b6 0d 92 00 00 00 00 00 00   ...k............",
          "8971: |   3472: 00 00 22 08 06 17 11 11 01 31 74 61 62 6c 65 74   .........1tablet",
          "8972: |   3488: 32 74 32 08 43 52 45 41 54 45 20 54 41 42 4c 45   2t2.CREATE TABLE",
          "8973: |   3504: 20 74 32 28 78 29 56 07 06 17 1f 1f 01 7d 74 61    t2(x)V.......ta",
          "8974: |   3520: 62 6c 65 74 31 5f 63 6f 6e 66 79 67 74 31 5f 63   blet1_confygt1_c",
          "8975: |   3536: 6f 6e 66 69 67 07 43 52 45 41 54 45 20 54 41 42   onfig.CREATE TAB",
          "8976: |   3552: 4c 45 20 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b   LE 't1_config'(k",
          "8977: |   3568: 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29    PRIMARY KEY, v)",
          "8978: |   3584: 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5b 06    WITHOUT ROWID[.",
          "8979: |   3600: 07 17 21 21 01 81 01 74 61 62 6c 65 74 31 5f 64   ..!!...tablet1_d",
          "8980: |   3616: 6f 63 73 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65   ocsizet1_docsize",
          "8981: |   3632: 06 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74   .CREATE TABLE 't",
          "8982: |   3648: 31 5f 64 6f 63 73 69 7a 65 27 28 69 64 20 49 4e   1_docsize'(id IN",
          "8983: |   3664: 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45   TEGER PRIMARY KE",
          "8984: |   3680: 59 2c 20 73 7a 20 52 4c 4f 42 29 5e 05 07 17 21   Y, sz RLOB)^...!",
          "8985: |   3696: 21 01 81 07 74 61 62 6c 65 74 31 5f 63 6f 6e 74   !...tablet1_cont",
          "8986: |   3712: 65 6e 74 74 35 ff 63 6f 6e 74 65 6e 74 05 43 52   entt5.content.CR",
          "8987: |   3728: 45 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63   EATE TABLE 't1_c",
          "8988: |   3744: 6f 6e 74 65 6e 74 27 28 69 64 20 49 4e 54 45 47   ontent'(id INTEG",
          "8989: |   3760: 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20   ER PRIMARY KEY,",
          "8990: |   3776: 63 30 2c 20 63 31 2c 20 63 42 29 69 04 07 17 19   c0, c1, cB)i....",
          "8991: |   3792: 19 01 81 2d 74 61 62 6c 65 74 31 5f 69 64 78 74   ...-tablet1_idxt",
          "8992: |   3808: 31 5f 79 64 78 04 43 52 45 41 54 45 20 54 41 42   1_ydx.CREATE TAB",
          "8993: |   3824: 4c 45 20 27 74 31 5f 69 64 78 27 28 73 65 67 69   LE 't1_idx'(segi",
          "8994: |   3840: 64 2c 20 74 65 72 6d 2c 20 70 67 6e 6f 2c 20 50   d, term, pgno, P",
          "8995: |   3856: 52 49 4d 41 52 59 20 4b 45 59 28 73 65 67 69 64   RIMARY KEY(segid",
          "8996: |   3872: 2c 20 74 65 72 6d 29 29 20 57 49 54 48 4f 55 54   , term)) WITHOUT",
          "8997: |   3888: 20 52 4f 57 49 44 55 03 07 17 1b 1b 01 81 01 74    ROWIDU........t",
          "8998: |   3904: 61 62 6c 65 74 31 5f 64 61 74 61 74 31 5f 74 61   ablet1_datat1_ta",
          "8999: |   3920: 74 61 03 43 52 45 41 54 45 20 54 41 42 4c 45 20   ta.CREATE TABLE",
          "9000: |   3936: 27 74 31 5f 64 61 74 61 27 28 69 64 20 49 4e 54   't1_data'(id INT",
          "9001: |   3952: 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59   EGER PRIMARY KEY",
          "9002: |   3968: 2c 20 62 6c 6f 63 6b 20 42 4c 4f 42 29 38 02 06   , block BLOB)8..",
          "9003: |   3984: 17 11 11 08 5f 74 61 62 6c 65 74 31 74 31 43 52   ...._tablet1t1CR",
          "9004: |   4000: 45 41 54 45 20 56 49 52 54 55 41 4c 20 54 41 42   EATE VIRTUAL TAB",
          "9005: |   4016: 4c 45 20 74 31 20 55 53 49 4e 47 20 66 74 73 35   LE t1 USING fts5",
          "9006: |   4032: 28 61 2c 62 2c 63 29 00 00 00 00 00 00 00 00 00   (a,b,c).........",
          "9007: | page 3 offset 8192",
          "9008: |      0: 0d 00 00 00 03 0c 94 00 0f e6 0f ef 0c 94 00 00   ................",
          "9009: |   3216: 00 00 00 00 86 4a 84 80 80 80 80 01 04 00 8d 18   .....J..........",
          "9010: |   3232: 00 00 03 2b 02 30 30 01 02 06 01 02 06 01 02 06   ...+.00.........",
          "9011: |   3248: 2f 02 03 01 02 03 01 02 03 01 08 32 30 31 36 30   /..........20160",
          "9012: |   3264: 36 30 39 01 02 07 01 02 07 01 02 07 01 01 34 01   609...........4.",
          "9013: |   3280: 02 05 01 02 c7 01 02 05 01 01 35 01 02 04 01 02   ..........5.....",
          "9014: |   3296: 04 01 02 04 02 07 30 30 30 30 30 30 30 1c 02 04   ......0000000...",
          "9015: |   3312: 01 02 04 01 02 04 01 06 62 69 6e 61 72 79 03 06   ........binary..",
          "9016: |   3328: 01 02 02 04 16 01 02 02 03 06 01 02 02 02 06 01   ................",
          "9017: |   3344: 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02   ................",
          "9018: |   3360: 02 03 06 01 02 02 03 06 01 02 02 02 06 01 02 02   ................",
          "9019: |   3376: 03 06 01 02 02 03 06 01 02 02 01 08 63 6f 6d 70   ............comp",
          "9020: |   3392: 69 6c 65 72 01 02 02 01 02 02 01 02 02 01 06 64   iler...........d",
          "9021: |   3408: 62 73 74 61 74 07 02 03 00 02 03 01 02 03 02 04   bstat...........",
          "9022: |   3424: 65 62 74 67 04 02 02 01 02 02 01 02 02 01 06 65   ebtg...........e",
          "9023: |   3440: 6e 61 62 6c 65 07 02 02 01 02 02 01 02 02 01 02   nable...........",
          "9024: |   3456: 02 01 02 02 01 02 02 01 02 02 01 02 01 f1 02 02   ................",
          "9025: |   3472: 01 02 02 01 02 02 01 02 02 01 02 02 01 02 02 01   ................",
          "9026: |   3488: 02 02 01 02 02 45 02 02 01 02 02 01 02 02 01 02   .....E..........",
          "9027: |   3504: 02 01 02 02 02 08 78 74 65 6e 73 69 6f 6e 1f 02   ......xtension..",
          "9028: |   3520: 04 01 02 09 c1 02 04 01 04 66 74 73 34 0a 02 03   .........fts4...",
          "9029: |   3536: 01 02 03 01 02 03 04 00 35 0d 02 03 01 02 04 01   ........5.......",
          "9030: |   3552: 02 03 01 0f d7 63 63 01 02 03 01 02 03 01 02 03   .....cc.........",
          "9031: |   3568: 02 06 65 6f 70 6f 6b 79 10 02 03 01 02 03 01 02   ..eopoky........",
          "9032: |   3584: 03 01 05 6a 73 6f 6e 31 13 02 03 14 02 03 01 02   ...json1........",
          "9033: |   3600: 03 01 04 6c 6f 61 64 1f 02 03 01 02 03 01 02 03   ...load.........",
          "9034: |   3616: 01 03 6d 61 78 1c 02 02 01 02 02 01 02 02 02 05   ..max...........",
          "9035: |   3632: 65 6d 6f 72 79 1c 02 03 01 02 03 01 02 03 04 04   emory...........",
          "9036: |   3648: 73 79 73 35 16 02 03 01 02 03 01 02 03 01 06 6e   sys5...........n",
          "9037: |   3664: 6f 63 61 73 65 02 06 01 02 12 03 06 01 02 02 03   ocase...........",
          "9038: |   3680: 06 01 02 02 03 06 01 02 02 09 f6 01 02 02 03 06   ................",
          "9039: |   3696: 01 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01   ................",
          "9040: |   3712: 02 02 03 06 01 02 02 03 06 01 02 02 03 06 11 02   ................",
          "9041: |   3728: 02 01 04 6f 7d 69 74 1f 02 02 01 02 02 01 02 02   ...o.it.........",
          "9042: |   3744: 01 05 72 74 72 65 65 19 02 03 01 02 03 01 02 03   ..rtree.........",
          "9043: |   3760: 04 02 69 6d 01 06 01 02 02 03 06 01 02 02 03 06   ..im............",
          "9044: |   3776: 01 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01   ................",
          "9045: |   3792: 02 02 03 06 01 02 02 03 06 01 02 02 03 06 11 02   ................",
          "9046: |   3808: 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02 02   ................",
          "9047: |   3824: 00 fa 74 68 72 65 61 64 73 61 66 65 22 02 02 01   ..threadsafe....",
          "9048: |   3840: 02 02 01 02 02 01 04 76 74 61 62 07 03 04 01 40   .......vtab....@",
          "9049: |   3856: 04 01 02 04 11 01 78 01 06 01 01 02 01 06 01 01   ......x.........",
          "9050: |   3872: 02 01 06 01 00 02 01 06 01 01 02 01 03 91 01 02   ................",
          "9051: |   3888: 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01   ................",
          "9052: |   3904: 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06   ................",
          "9053: |   3920: 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01   ................",
          "9054: |   3936: 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01   ................",
          "9055: |   3952: 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02   ................",
          "9056: |   3968: 01 06 01 01 02 01 76 01 01 02 01 06 01 01 02 5c   ......v.........",
          "9057: |   3984: 06 01 01 02 01 06 01 01 02 01 06 01 01 02 11 06   ................",
          "9058: |   4000: 01 02 02 01 06 08 11 02 01 06 01 01 02 01 06 01   ................",
          "9059: |   4016: 01 02 01 06 01 01 02 01 06 01 01 02 01 05 01 01   ................",
          "9060: |   4032: 02 01 06 01 01 02 01 06 01 01 02 04 15 13 0c 0c   ................",
          "9061: |   4048: 12 44 13 11 0f 47 13 0f 0c 0e 11 10 ca 0e 10 0f   .D...G..........",
          "9062: |   4064: 44 0f 10 40 15 0f 07 01 03 00 14 24 5a 14 24 0f   D..@.......$Z.$.",
          "9063: |   4080: 0a 03 00 24 ff ff ff ff 01 01 02 00 01 01 01 01   ...$............",
          "9064: | page 4 offset 12288",
          "9065: |      0: 0a 00 00 00 01 0f fb 00 00 00 00 00 00 00 00 00   ................",
          "9066: |   4080: 00 00 00 00 00 00 00 00 00 00 05 04 09 0c 01 02   ................",
          "9067: | page 5 offset 16384",
          "9068: |      0: 0d 00 00 00 24 0c 09 00 00 00 00 00 00 00 00 00   ....$...........",
          "9069: |   3072: 00 00 00 00 00 00 00 00 00 00 18 24 05 00 25 0f   ...........$..%.",
          "9070: |   3088: 19 54 48 52 45 41 44 53 41 46 45 3d 30 58 42 49   .THREADSAFE=0XBI",
          "9071: |   3104: 4e 41 52 59 18 23 05 00 25 0f 19 54 48 52 45 41   NARY.#..%..THREA",
          "9072: |   3120: 44 53 41 46 45 3d 30 58 4e 4f 43 41 53 47 17 22   DSAFE=0XNOCASG..",
          "9073: |   3136: 05 00 25 0f 17 54 48 52 45 41 44 53 41 46 45 3d   ..%..THREADSAFE=",
          "9074: |   3152: 30 58 52 54 52 49 4d 1f 21 05 00 33 0f 19 4f 4d   0XRTRIM.!..3..OM",
          "9075: |   3168: 49 54 20 4c 3f 41 44 20 45 58 54 45 4e 53 49 4f   IT L?AD EXTENSIO",
          "9076: |   3184: 4e 58 42 49 4e 41 52 59 1f 20 05 00 33 0f 19 4f   NXBINARY. ..3..O",
          "9077: |   3200: 4d 49 64 20 4c 4f 41 44 20 45 58 54 45 d9 53 49   MId LOAD EXTE.SI",
          "9078: |   3216: 4f 4e 58 4e 4f 43 41 53 45 1e 1f 05 00 33 0f 17   ONXNOCASE....3..",
          "9079: |   3232: 4f 4d 39 54 20 4c 4f 41 44 20 45 58 55 45 4e 53   OM9T LOAD EXUENS",
          "9080: |   3248: 49 4f 4e 58 52 54 52 49 4d 1f 1e 05 00 33 0f 19   IONXRTRIM....3..",
          "9081: |   3264: 4c 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30 30   LAX MEMORY=50000",
          "9082: |   3280: 30 30 30 58 42 49 4e 41 52 59 1f 1d 05 00 33 0f   000XBINARY....3.",
          "9083: |   3296: 19 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30   .MAX MEMORY=5000",
          "9084: |   3312: 30 30 30 30 58 af 4f 43 41 53 45 1e 1c 05 00 33   0000X.OCASE....3",
          "9085: |   3328: 0f 17 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30   ..MAX MEMORY=500",
          "9086: |   3344: 30 30 ab 30 30 58 62 54 52 49 4d 18 1b 05 00 25   00.00XbTRIM....%",
          "9087: |   3360: 0f 19 45 4e 41 42 4c 45 20 52 54 52 45 45 58 42   ..ENABLE RTREEXB",
          "9088: |   3376: 49 4e 41 52 59 18 1b 05 00 25 0f 19 45 4e 41 42   INARY....%..ENAB",
          "9089: |   3392: 4c 45 20 52 54 52 45 45 58 4e 4f 43 41 53 45 17   LE RTREEXNOCASE.",
          "9090: |   3408: 19 05 00 25 0f 17 45 4e 41 42 4c 45 20 52 54 52   ...%..ENABLE RTR",
          "9091: |   3424: 45 45 58 52 54 52 49 4d 1a 18 05 00 29 0f 19 45   EEXRTRIM....)..E",
          "9092: |   3440: 4e 41 42 4c 45 20 4d 45 4d 53 59 63 35 58 42 49   NABLE MEMSYc5XBI",
          "9093: |   3456: 4e 41 52 59 1a 17 04 00 29 0f 19 45 4e 41 42 4c   NARY....)..ENABL",
          "9094: |   3472: 45 20 4d 45 4d 53 59 53 35 58 4e 4f 43 41 53 45   E MEMSYS5XNOCASE",
          "9095: |   3488: 19 16 05 00 29 0f 17 45 4e 41 42 4c 45 20 3d 45   ....)..ENABLE =E",
          "9096: |   3504: 4d 53 59 53 35 58 52 54 52 49 4d 18 15 05 00 25   MSYS5XRTRIM....%",
          "9097: |   3520: 0f 19 45 4e 41 42 4c 45 20 4a 53 4f 4e 31 58 42   ..ENABLE JSON1XB",
          "9098: |   3536: 49 4e 41 52 59 18 14 05 00 25 0f 19 45 4e 41 42   INARY....%..ENAB",
          "9099: |   3552: 4c 46 20 4a 53 4f 4e 31 58 4e 4f 43 41 53 45 17   LF JSON1XNOCASE.",
          "9100: |   3568: 13 05 00 25 0f 17 45 4e 41 42 4c 45 20 4a 53 4f   ...%..ENABLE JSO",
          "9101: |   3584: 4e 31 58 52 54 52 49 4d 1a 12 05 00 29 0f 19 45   N1XRTRIM....)..E",
          "9102: |   3600: 4e 41 42 4c 45 20 46 45 46 50 4f 4c 59 57 42 49   NABLE FEFPOLYWBI",
          "9103: |   3616: 4e 41 52 59 18 11 05 00 29 0f 19 45 4e 41 42 4c   NARY....)..ENABL",
          "9104: |   3632: 45 20 47 45 4f 50 4f 4c 59 58 4e 5f 43 41 53 45   E GEOPOLYXN_CASE",
          "9105: |   3648: 19 10 05 00 29 0f 17 45 4e 41 42 4c 45 20 47 42   ....)..ENABLE GB",
          "9106: |   3664: 2f 50 4f 4c 59 58 51 54 52 49 4d 17 0f 05 00 23   /POLYXQTRIM....#",
          "9107: |   3680: 0f 19 45 4e 41 42 4c 45 20 46 54 53 35 58 42 49   ..ENABLE FTS5XBI",
          "9108: |   3696: 4e 41 52 59 17 0e 05 00 23 0f 19 45 4e 41 42 4c   NARY....#..ENABL",
          "9109: |   3712: 45 20 46 54 53 35 58 4e 4f 43 41 53 45 16 0d 05   E FTS5XNOCASE...",
          "9110: |   3728: 00 23 0f 17 45 4e 41 42 4c 45 20 46 54 53 35 58   .#..ENABLE FTS5X",
          "9111: |   3744: 52 54 52 49 4d 17 1c 05 00 23 0f 19 45 4e 41 42   RTRIM....#..ENAB",
          "9112: |   3760: 4c 45 20 46 54 53 34 58 42 49 4e 41 52 59 16 0b   LE FTS4XBINARY..",
          "9113: |   3776: 05 00 22 0f e9 45 4e 41 42 4c 35 20 46 54 53 34   .....ENABL5 FTS4",
          "9114: |   3792: 58 4e 4f 43 41 53 45 16 0a 05 00 23 00 47 45 4e   XNOCASE....#.GEN",
          "9115: |   3808: 41 42 4c 45 20 46 54 53 34 57 52 54 52 49 4d 1e   ABLE FTS4WRTRIM.",
          "9116: |   3824: 60 05 00 31 0f 19 45 4e 41 42 4c 55 20 43 42 53   `..1..ENABLU CBS",
          "9117: |   3840: 54 41 54 20 56 54 42 42 58 42 49 4e 41 52 59 1e   TAT VTBBXBINARY.",
          "9118: |   3856: 08 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "9119: |   3872: 54 40 54 20 56 54 41 42 58 4e 4f 43 41 53 45 1d   T@T VTABXNOCASE.",
          "9120: |   3888: 07 05 00 31 0f 17 45 4e 41 42 4c 55 20 44 42 53   ...1..ENABLU DBS",
          "9121: |   3904: 54 41 54 20 56 54 41 42 58 52 54 52 49 4d 12 06   TAT VTABXRTRIM..",
          "9122: |   3920: 05 00 17 0f 19 44 45 42 55 47 58 42 49 4e 41 52   .....DEBUGXBINAR",
          "9123: |   3936: 59 21 05 05 00 17 0f 19 44 45 42 55 47 58 4e 4f   Y!......DEBUGXNO",
          "9124: |   3952: 43 41 53 45 10 04 05 00 17 0f 18 44 45 42 55 47   CASE.......DEBUG",
          "9125: |   3968: 58 42 54 52 49 4d 27 11 05 00 43 0f 19 43 4f 4d   XBTRIM'...C..COM",
          "9126: |   3984: 50 49 48 f5 52 3d 67 63 63 2d 35 2e 34 2e 30 20   PIH.R=gcc-5.4.0",
          "9127: |   4000: 32 30 31 36 30 36 30 39 58 42 49 4e 41 52 59 27   20160609XBINARY'",
          "9128: |   4016: 02 05 00 43 0f 19 43 4f 4d 50 49 4c 45 52 3d 67   ...C..COMPILER=g",
          "9129: |   4032: 63 63 2d 35 2e 34 2e 30 22 32 30 31 36 30 36 30   cc-5.4.0.2016060",
          "9130: |   4048: 39 c2 3e 4f 43 41 53 45 26 01 05 00 43 0f 17 43   9.>OCASE&...C..C",
          "9131: |   4064: 4f 4d 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e   OMPILER=gcc-5.4.",
          "9132: |   4080: 30 30 32 30 31 26 30 36 30 39 58 52 54 52 49 4d   00201&0609XRTRIM",
          "9133: | page 6 offset 20480",
          "9134: |      0: 0d 00 00 00 24 0e e0 00 00 00 00 00 00 00 00 00   ....$...........",
          "9135: |   3808: 06 24 03 00 12 02 01 01 06 23 03 00 12 02 01 01   .$.......#......",
          "9136: |   3824: 06 22 03 00 12 02 01 01 06 21 03 00 12 03 01 01   .........!......",
          "9137: |   3840: 06 20 03 00 12 03 01 01 06 1f 03 00 12 03 01 01   . ..............",
          "9138: |   3856: 06 1e 03 00 12 03 01 01 06 1d 03 00 12 03 01 01   ................",
          "9139: |   3872: 06 1c 03 00 12 03 01 01 06 1b 03 00 12 02 01 01   ................",
          "9140: |   3888: 06 1a 03 00 12 02 01 01 06 19 03 00 12 02 01 01   ................",
          "9141: |   3904: 06 18 03 00 12 02 01 00 f6 17 03 00 19 e2 f9 01   ................",
          "9142: |   3920: 06 16 03 00 12 02 05 01 06 15 03 00 12 02 01 01   ................",
          "9143: |   3936: 06 14 03 00 12 02 01 01 06 13 03 00 12 02 01 01   ................",
          "9144: |   3952: 06 12 03 00 12 02 01 01 06 11 03 00 12 02 01 01   ................",
          "9145: |   3968: 06 10 03 10 12 02 01 01 06 0f 03 00 12 02 01 01   ................",
          "9146: |   3984: 06 0e 03 00 12 02 01 01 06 0d 03 00 12 02 00 f1   ................",
          "9147: |   4000: 06 0c 03 00 12 02 01 01 06 0b 03 00 12 02 01 01   ................",
          "9148: |   4016: 06 0a 03 00 12 02 01 01 05 09 03 00 12 03 01 01   ................",
          "9149: |   4032: 06 08 03 00 12 03 01 01 06 07 03 00 12 03 01 01   ................",
          "9150: |   4048: 06 06 03 00 12 01 01 01 06 05 02 ff 84 01 01 01   ................",
          "9151: |   4064: 06 04 03 00 12 01 01 01 06 03 03 00 12 06 01 01   ................",
          "9152: |   4080: 07 02 03 00 12 06 01 01 06 01 03 00 12 06 01 01   ................",
          "9153: | page 7 offset 24576",
          "9154: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "9155: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "9156: | end crash-44942694542e1e.db",
          "9157: }]} {}",
          "9159: do_catchsql_test 62.1 {",
          "9160:   WITH c(x) AS (VALUES(false) UNION ALL SELECT x+1 FROM c WHERE x<72)",
          "9161:     INSERT INTO t1(a) SELECT randomblob(2829) FROM c;",
          "9162: } {0 {}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c1057b2a60add08e5c80ef2a53932a690b096f2eb03c7de863844deaa8fc9d53",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "05921223c25ae385a5e17bbf5484f5885bb78f2c",
      "candidate_info": {
        "commit_hash": "05921223c25ae385a5e17bbf5484f5885bb78f2c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/05921223c25ae385a5e17bbf5484f5885bb78f2c",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/sqliteInt.h",
          "src/util.c",
          "src/vdbeaux.c"
        ],
        "message": "Smaller and faster sqlite3IsNaN() implementation makes deserialization of floating point values much faster.\n\nFossilOrigin-Name: ea748edecb261f2b862d542daff6e99a6fd8879a8ace94b440d99e110577d1c1",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/util.c||src/util.c",
          "src/vdbeaux.c||src/vdbeaux.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/vdbeaux.c||src/vdbeaux.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/vdbeaux.c||src/vdbeaux.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c1d8a3f65490eef2216f360d708b1746cbaa6dadce42c0950dc8e09b9ab28ee2",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3802: #endif",
          "3804: #ifndef SQLITE_OMIT_FLOATING_POINT",
          "3805:   int sqlite3IsNaN(double);",
          "3806: #else",
          "3807: # define sqlite3IsNaN(X)  0",
          "3808: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3805: # define EXP754 (((u64)0x7ff)<<52)",
          "3806: # define MAN754 ((((u64)1)<<52)-1)",
          "3807: # define IsNaN(X) (((X)&EXP754)==EXP754 && ((X)&MAN754)!=0)",
          "3810: # define IsNaN(X)         0",
          "",
          "---------------"
        ],
        "src/util.c||src/util.c": [
          "File: src/util.c -> src/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "58: #ifndef SQLITE_OMIT_FLOATING_POINT",
          "65: int sqlite3IsNaN(double x){",
          "102: }",
          "",
          "[Removed Lines]",
          "67: #if !SQLITE_HAVE_ISNAN && !HAVE_ISNAN",
          "91: #ifdef __FAST_MATH__",
          "92: # error SQLite will not work correctly with the -ffast-math option of GCC.",
          "93: #endif",
          "94:   volatile double y = x;",
          "95:   volatile double z = y;",
          "96:   rc = (y!=z);",
          "98:   rc = isnan(x);",
          "100:   testcase( rc );",
          "101:   return rc;",
          "",
          "[Added Lines]",
          "63:   u64 y;",
          "64:   memcpy(&y,&x,sizeof(y));",
          "65:   return IsNaN(y);",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "3655: static u32 SQLITE_NOINLINE serialGet(",
          "",
          "[Added Lines]",
          "3655: static u32 serialGet(",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3684:     assert( sizeof(x)==8 && sizeof(pMem->u.r)==8 );",
          "3685:     swapMixedEndianFloat(x);",
          "3686:     memcpy(&pMem->u.r, &x, sizeof(x));",
          "3688:   }",
          "3689:   return 8;",
          "3690: }",
          "",
          "[Removed Lines]",
          "3687:     pMem->flags = sqlite3IsNaN(pMem->u.r) ? MEM_Null : MEM_Real;",
          "",
          "[Added Lines]",
          "3687:     pMem->flags = IsNaN(x) ? MEM_Null : MEM_Real;",
          "",
          "---------------"
        ]
      }
    }
  ]
}