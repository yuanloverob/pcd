{
  "cve_id": "CVE-2021-21261",
  "cve_desc": "Flatpak is a system for building, distributing, and running sandboxed desktop applications on Linux. A bug was discovered in the `flatpak-portal` service that can allow sandboxed applications to execute arbitrary code on the host system (a sandbox escape). This sandbox-escape bug is present in versions from 0.11.4 and before fixed versions 1.8.5 and 1.10.0. The Flatpak portal D-Bus service (`flatpak-portal`, also known by its D-Bus service name `org.freedesktop.portal.Flatpak`) allows apps in a Flatpak sandbox to launch their own subprocesses in a new sandbox instance, either with the same security settings as the caller or with more restrictive security settings. For example, this is used in Flatpak-packaged web browsers such as Chromium to launch subprocesses that will process untrusted web content, and give those subprocesses a more restrictive sandbox than the browser itself. In vulnerable versions, the Flatpak portal service passes caller-specified environment variables to non-sandboxed processes on the host system, and in particular to the `flatpak run` command that is used to launch the new sandbox instance. A malicious or compromised Flatpak app could set environment variables that are trusted by the `flatpak run` command, and use them to execute arbitrary code that is not in a sandbox. As a workaround, this vulnerability can be mitigated by preventing the `flatpak-portal` service from starting, but that mitigation will prevent many Flatpak apps from working correctly. This is fixed in versions 1.8.5 and 1.10.0.",
  "repo": "flatpak/flatpak",
  "patch_hash": "cc1401043c075268ecc652eac557ef8076b5eaba",
  "patch_info": {
    "commit_hash": "cc1401043c075268ecc652eac557ef8076b5eaba",
    "repo": "flatpak/flatpak",
    "commit_url": "https://github.com/flatpak/flatpak/commit/cc1401043c075268ecc652eac557ef8076b5eaba",
    "files": [
      "portal/flatpak-portal.c"
    ],
    "message": "portal: Do not use caller-supplied variables in environment\n\nIf the caller specifies a variable that can be used to inject arbitrary\ncode into processes, we must not allow it to enter the environment\nblock used to run `flatpak run`, which runs unsandboxed.\n\nThis change requires the previous commit \"context: Add --env-fd option\",\nwhich adds infrastructure used here.\n\nTo be secure, this change also requires the previous commit\n\"run: Convert all environment variables into bwrap arguments\", which\nprotects a non-setuid bwrap(1) from the same attack.\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>\nPart-of: https://github.com/flatpak/flatpak/security/advisories/GHSA-4ppf-fxf6-vxg2",
    "before_after_code_files": [
      "portal/flatpak-portal.c||portal/flatpak-portal.c"
    ]
  },
  "patch_diff": {
    "portal/flatpak-portal.c||portal/flatpak-portal.c": [
      "File: portal/flatpak-portal.c -> portal/flatpak-portal.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1005:       const char *val = NULL;",
      "1006:       g_variant_get_child (arg_envs, i, \"{&s&s}\", &var, &val);",
      "1009:     }",
      "1011:   g_ptr_array_add (flatpak_argv, g_strdup (\"flatpak\"));",
      "",
      "[Removed Lines]",
      "1008:       env = g_environ_setenv (env, var, val, TRUE);",
      "",
      "[Added Lines]",
      "1015:       if (var[0] == '\\0')",
      "1016:         {",
      "1017:           g_dbus_method_invocation_return_error (invocation, G_DBUS_ERROR,",
      "1018:                                                  G_DBUS_ERROR_INVALID_ARGS,",
      "1019:                                                  \"Environment variable cannot have empty name\");",
      "1020:           return G_DBUS_METHOD_INVOCATION_HANDLED;",
      "1021:         }",
      "1023:       if (strchr (var, '=') != NULL)",
      "1024:         {",
      "1025:           g_dbus_method_invocation_return_error (invocation, G_DBUS_ERROR,",
      "1026:                                                  G_DBUS_ERROR_INVALID_ARGS,",
      "1027:                                                  \"Environment variable name cannot contain '='\");",
      "1028:           return G_DBUS_METHOD_INVOCATION_HANDLED;",
      "1029:         }",
      "1031:       g_string_append (env_string, var);",
      "1032:       g_string_append_c (env_string, '=');",
      "1033:       g_string_append (env_string, val);",
      "1034:       g_string_append_c (env_string, '\\0');",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "26f09bf5fd955e335b2b057d9c1335174ddb79b7",
      "candidate_info": {
        "commit_hash": "26f09bf5fd955e335b2b057d9c1335174ddb79b7",
        "repo": "flatpak/flatpak",
        "commit_url": "https://github.com/flatpak/flatpak/commit/26f09bf5fd955e335b2b057d9c1335174ddb79b7",
        "files": [
          "portal/flatpak-portal.c"
        ],
        "message": "portal: Do not use caller-supplied variables in environment\n\nIf the caller specifies a variable that can be used to inject arbitrary\ncode into processes, we must not allow it to enter the environment\nblock used to run `flatpak run`, which runs unsandboxed.\n\nThis change requires the previous commit \"context: Add --env-fd option\",\nwhich adds infrastructure used here.\n\nTo be secure, this change also requires the previous commit\n\"run: Convert all environment variables into bwrap arguments\", which\nprotects a non-setuid bwrap(1) from the same attack.\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>\nPart-of: https://github.com/flatpak/flatpak/security/advisories/GHSA-4ppf-fxf6-vxg2",
        "before_after_code_files": [
          "portal/flatpak-portal.c||portal/flatpak-portal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "portal/flatpak-portal.c||portal/flatpak-portal.c"
          ],
          "candidate": [
            "portal/flatpak-portal.c||portal/flatpak-portal.c"
          ]
        }
      },
      "candidate_diff": {
        "portal/flatpak-portal.c||portal/flatpak-portal.c": [
          "File: portal/flatpak-portal.c -> portal/flatpak-portal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "989:       const char *val = NULL;",
          "990:       g_variant_get_child (arg_envs, i, \"{&s&s}\", &var, &val);",
          "993:     }",
          "995:   g_ptr_array_add (flatpak_argv, g_strdup (\"flatpak\"));",
          "",
          "[Removed Lines]",
          "992:       env = g_environ_setenv (env, var, val, TRUE);",
          "",
          "[Added Lines]",
          "999:       if (var[0] == '\\0')",
          "1000:         {",
          "1001:           g_dbus_method_invocation_return_error (invocation, G_DBUS_ERROR,",
          "1002:                                                  G_DBUS_ERROR_INVALID_ARGS,",
          "1003:                                                  \"Environment variable cannot have empty name\");",
          "1004:           return G_DBUS_METHOD_INVOCATION_HANDLED;",
          "1005:         }",
          "1007:       if (strchr (var, '=') != NULL)",
          "1008:         {",
          "1009:           g_dbus_method_invocation_return_error (invocation, G_DBUS_ERROR,",
          "1010:                                                  G_DBUS_ERROR_INVALID_ARGS,",
          "1011:                                                  \"Environment variable name cannot contain '='\");",
          "1012:           return G_DBUS_METHOD_INVOCATION_HANDLED;",
          "1013:         }",
          "1015:       g_string_append (env_string, var);",
          "1016:       g_string_append_c (env_string, '=');",
          "1017:       g_string_append (env_string, val);",
          "1018:       g_string_append_c (env_string, '\\0');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f527eaeb132dcd5bb06115b987d6a6f8bfafac9b",
      "candidate_info": {
        "commit_hash": "f527eaeb132dcd5bb06115b987d6a6f8bfafac9b",
        "repo": "flatpak/flatpak",
        "commit_url": "https://github.com/flatpak/flatpak/commit/f527eaeb132dcd5bb06115b987d6a6f8bfafac9b",
        "files": [
          "portal/flatpak-portal.c"
        ],
        "message": "portal: Do not use caller-supplied variables in environment\n\nIf the caller specifies a variable that can be used to inject arbitrary\ncode into processes, we must not allow it to enter the environment\nblock used to run `flatpak run`, which runs unsandboxed.\n\nThis change requires the previous commit \"context: Add --env-fd option\",\nwhich adds infrastructure used here.\n\nTo be secure, this change also requires the previous commit\n\"run: Convert all environment variables into bwrap arguments\", which\nprotects a non-setuid bwrap(1) from the same attack.\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>\nPart-of: https://github.com/flatpak/flatpak/security/advisories/GHSA-4ppf-fxf6-vxg2",
        "before_after_code_files": [
          "portal/flatpak-portal.c||portal/flatpak-portal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "portal/flatpak-portal.c||portal/flatpak-portal.c"
          ],
          "candidate": [
            "portal/flatpak-portal.c||portal/flatpak-portal.c"
          ]
        }
      },
      "candidate_diff": {
        "portal/flatpak-portal.c||portal/flatpak-portal.c": [
          "File: portal/flatpak-portal.c -> portal/flatpak-portal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "533:       const char *val = NULL;",
          "534:       g_variant_get_child (arg_envs, i, \"{&s&s}\", &var, &val);",
          "537:     }",
          "539:   g_ptr_array_add (flatpak_argv, g_strdup (\"flatpak\"));",
          "",
          "[Removed Lines]",
          "536:       env = g_environ_setenv (env, var, val, TRUE);",
          "",
          "[Added Lines]",
          "543:       if (var[0] == '\\0')",
          "544:         {",
          "545:           g_dbus_method_invocation_return_error (invocation, G_DBUS_ERROR,",
          "546:                                                  G_DBUS_ERROR_INVALID_ARGS,",
          "547:                                                  \"Environment variable cannot have empty name\");",
          "548:           return G_DBUS_METHOD_INVOCATION_HANDLED;",
          "549:         }",
          "551:       if (strchr (var, '=') != NULL)",
          "552:         {",
          "553:           g_dbus_method_invocation_return_error (invocation, G_DBUS_ERROR,",
          "554:                                                  G_DBUS_ERROR_INVALID_ARGS,",
          "555:                                                  \"Environment variable name cannot contain '='\");",
          "556:           return G_DBUS_METHOD_INVOCATION_HANDLED;",
          "557:         }",
          "559:       g_string_append (env_string, var);",
          "560:       g_string_append_c (env_string, '=');",
          "561:       g_string_append (env_string, val);",
          "562:       g_string_append_c (env_string, '\\0');",
          "",
          "---------------"
        ]
      }
    }
  ]
}