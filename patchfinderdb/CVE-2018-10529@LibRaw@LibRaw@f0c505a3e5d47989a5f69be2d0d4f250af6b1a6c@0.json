{
  "cve_id": "CVE-2018-10529",
  "cve_desc": "An issue was discovered in LibRaw 0.18.9. There is an out-of-bounds read affecting the X3F property table list implementation in libraw_x3f.cpp and libraw_cxx.cpp.",
  "repo": "LibRaw/LibRaw",
  "patch_hash": "f0c505a3e5d47989a5f69be2d0d4f250af6b1a6c",
  "patch_info": {
    "commit_hash": "f0c505a3e5d47989a5f69be2d0d4f250af6b1a6c",
    "repo": "LibRaw/LibRaw",
    "commit_url": "https://github.com/LibRaw/LibRaw/commit/f0c505a3e5d47989a5f69be2d0d4f250af6b1a6c",
    "files": [
      "internal/dcraw_common.cpp",
      "internal/libraw_x3f.cpp",
      "src/libraw_cxx.cpp"
    ],
    "message": "X3F property table list fix",
    "before_after_code_files": [
      "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
      "internal/libraw_x3f.cpp||internal/libraw_x3f.cpp",
      "src/libraw_cxx.cpp||src/libraw_cxx.cpp"
    ]
  },
  "patch_diff": {
    "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
      "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "17602:       tiff_ifd[i].dng_levels.analogbalance[c] = 1.0f;",
      "17603:   }",
      "17604: #endif",
      "17605:   memset(gpsdata, 0, sizeof gpsdata);",
      "17606:   memset(cblack, 0, sizeof cblack);",
      "17607:   memset(white, 0, sizeof white);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "internal/libraw_x3f.cpp||internal/libraw_x3f.cpp": [
      "File: internal/libraw_x3f.cpp -> internal/libraw_x3f.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "126: } x3f_property_t;",
      "128: typedef struct x3f_property_table_s {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "516:   int _cur = _file->_func(_buffer,1,_left); \\",
      "517:   if (_cur == 0) {       \\",
      "518:    throw LIBRAW_EXCEPTION_IO_CORRUPT;  \\",
      "520:   }           \\",
      "521:   _left -= _cur;        \\",
      "522:  }            \\",
      "",
      "[Removed Lines]",
      "519:    exit(1);        \\",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "912:    if (PL)",
      "913:    {",
      "914:     int i;",
      "920:    }",
      "921:    FREE(PL->property_table.element);",
      "922:    FREE(PL->data);",
      "",
      "[Removed Lines]",
      "916:     for (i = 0; i < PL->property_table.size; i++) {",
      "917:      FREE(PL->property_table.element[i].name_utf8);",
      "918:      FREE(PL->property_table.element[i].value_utf8);",
      "919:     }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1625:  if (!PL->data_size)",
      "1626:   PL->data_size = read_data_block(&PL->data, I, DE, 0);",
      "1628:  for (i=0; i<PL->num_properties; i++) {",
      "1629:   x3f_property_t *P = &PL->property_table.element[i];",
      "1631:   P->name = ((utf16_t *)PL->data + P->name_offset);",
      "1632:   P->value = ((utf16_t *)PL->data + P->value_offset);",
      "1635:  }",
      "1636: }",
      "",
      "[Removed Lines]",
      "1633:   P->name_utf8 = 0;// utf16le_to_utf8(P->name);",
      "1634:   P->value_utf8 = 0;//utf16le_to_utf8(P->value);",
      "",
      "[Added Lines]",
      "1619:  uint32_t maxoffset = PL->data_size/sizeof(utf16_t)-2; // at least 2 chars, value + terminating 0x0000",
      "1623:   if(P->name_offset > maxoffset || P->value_offset > maxoffset)",
      "1624:    throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "",
      "---------------"
    ],
    "src/libraw_cxx.cpp||src/libraw_cxx.cpp": [
      "File: src/libraw_cxx.cpp -> src/libraw_cxx.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "6143:   imgdata.sizes.raw_width = ID->columns;",
      "6144:   imgdata.sizes.raw_height = ID->rows;",
      "6146:   DE = x3f_get_prop(x3f);",
      "6147:   if ((x3f_load_data(x3f, DE) == X3F_OK))",
      "6148:   {",
      "6150:     DEH = &DE->header;",
      "6151:     x3f_property_list_t *PL = &DEH->data_subsection.property_list;",
      "6152:     if (PL->property_table.size != 0)",
      "6153:     {",
      "6154:       int i;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6153:     utf16_t *datap = (utf16_t*) PL->data;",
      "6154:     uint32_t maxitems = PL->data_size/sizeof(utf16_t);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "6156:       for (i = 0; i < PL->num_properties; i++)",
      "6157:       {",
      "6158:         char name[100], value[100];",
      "6161:         if (!strcmp(name, \"ISO\"))",
      "6162:           imgdata.other.iso_speed = atoi(value);",
      "6163:         if (!strcmp(name, \"CAMMANUF\"))",
      "",
      "[Removed Lines]",
      "6159:         utf2char(P[i].name, name,sizeof(name));",
      "6160:         utf2char(P[i].value, value,sizeof(value));",
      "",
      "[Added Lines]",
      "6162:         int noffset = (P[i].name - datap);",
      "6163:         int voffset = (P[i].value - datap);",
      "6164:         if(noffset < 0 || noffset>maxitems || voffset<0 || voffset>maxitems)",
      "6165:            throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "6166:         int maxnsize = maxitems - (P[i].name - datap);",
      "6167:         int maxvsize = maxitems - (P[i].value - datap);",
      "6168:         utf2char(P[i].name, name,MIN(maxnsize,sizeof(name)));",
      "6169:         utf2char(P[i].value, value,MIN(maxvsize,sizeof(value)));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6b08eae24034789b3543a1b66dd6af9c20230029",
      "candidate_info": {
        "commit_hash": "6b08eae24034789b3543a1b66dd6af9c20230029",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/6b08eae24034789b3543a1b66dd6af9c20230029",
        "files": [
          "internal/dcraw_common.cpp",
          "internal/libraw_x3f.cpp",
          "src/libraw_cxx.cpp"
        ],
        "message": "X3F property table list fix",
        "before_after_code_files": [
          "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
          "internal/libraw_x3f.cpp||internal/libraw_x3f.cpp",
          "src/libraw_cxx.cpp||src/libraw_cxx.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/libraw_x3f.cpp||internal/libraw_x3f.cpp",
            "src/libraw_cxx.cpp||src/libraw_cxx.cpp"
          ],
          "candidate": [
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/libraw_x3f.cpp||internal/libraw_x3f.cpp",
            "src/libraw_cxx.cpp||src/libraw_cxx.cpp"
          ]
        }
      },
      "candidate_diff": {
        "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
          "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp"
        ],
        "internal/libraw_x3f.cpp||internal/libraw_x3f.cpp": [
          "File: internal/libraw_x3f.cpp -> internal/libraw_x3f.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "516:   int _cur = _file->_func(_buffer,1,_left); \\",
          "517:   if (_cur == 0) {       \\",
          "518:    throw LIBRAW_EXCEPTION_IO_CORRUPT;  \\",
          "520:   }           \\",
          "521:   _left -= _cur;        \\",
          "522:  }            \\",
          "",
          "[Removed Lines]",
          "519:    exit(1);        \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "912:    if (PL)",
          "913:    {",
          "914:     int i;",
          "920:    }",
          "921:    FREE(PL->property_table.element);",
          "922:    FREE(PL->data);",
          "",
          "[Removed Lines]",
          "916:     for (i = 0; i < PL->property_table.size; i++) {",
          "917:      FREE(PL->property_table.element[i].name_utf8);",
          "918:      FREE(PL->property_table.element[i].value_utf8);",
          "919:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1625:  if (!PL->data_size)",
          "1626:   PL->data_size = read_data_block(&PL->data, I, DE, 0);",
          "1628:  for (i=0; i<PL->num_properties; i++) {",
          "1629:   x3f_property_t *P = &PL->property_table.element[i];",
          "1631:   P->name = ((utf16_t *)PL->data + P->name_offset);",
          "1632:   P->value = ((utf16_t *)PL->data + P->value_offset);",
          "1635:  }",
          "1636: }",
          "",
          "[Removed Lines]",
          "1633:   P->name_utf8 = 0;// utf16le_to_utf8(P->name);",
          "1634:   P->value_utf8 = 0;//utf16le_to_utf8(P->value);",
          "",
          "[Added Lines]",
          "1619:  uint32_t maxoffset = PL->data_size/sizeof(utf16_t)-2; // at least 2 chars, value + terminating 0x0000",
          "1623:   if(P->name_offset > maxoffset || P->value_offset > maxoffset)",
          "1624:    throw LIBRAW_EXCEPTION_IO_CORRUPT;",
          "",
          "---------------"
        ],
        "src/libraw_cxx.cpp||src/libraw_cxx.cpp": [
          "File: src/libraw_cxx.cpp -> src/libraw_cxx.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "6161:   imgdata.sizes.raw_width = ID->columns;",
          "6162:   imgdata.sizes.raw_height = ID->rows;",
          "6164:   DE = x3f_get_prop(x3f);",
          "6165:   if ((x3f_load_data(x3f, DE) == X3F_OK))",
          "6166:   {",
          "6168:     DEH = &DE->header;",
          "6169:     x3f_property_list_t *PL = &DEH->data_subsection.property_list;",
          "6170:     if (PL->property_table.size != 0)",
          "6171:     {",
          "6172:       int i;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6171:     utf16_t *datap = (utf16_t*) PL->data;",
          "6172:     uint32_t maxitems = PL->data_size/sizeof(utf16_t);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6174:       for (i = 0; i < PL->num_properties; i++)",
          "6175:       {",
          "6176:         char name[100], value[100];",
          "6179:         if (!strcmp(name, \"ISO\"))",
          "6180:           imgdata.other.iso_speed = atoi(value);",
          "6181:         if (!strcmp(name, \"CAMMANUF\"))",
          "",
          "[Removed Lines]",
          "6177:         utf2char(P[i].name, name,sizeof(name));",
          "6178:         utf2char(P[i].value, value,sizeof(value));",
          "",
          "[Added Lines]",
          "6180:         int noffset = (P[i].name - datap);",
          "6181:         int voffset = (P[i].value - datap);",
          "6182:         if(noffset < 0 || noffset>maxitems || voffset<0 || voffset>maxitems)",
          "6183:            throw LIBRAW_EXCEPTION_IO_CORRUPT;",
          "6184:         int maxnsize = maxitems - (P[i].name - datap);",
          "6185:         int maxvsize = maxitems - (P[i].value - datap);",
          "6186:         utf2char(P[i].name, name,MIN(maxnsize,sizeof(name)));",
          "6187:         utf2char(P[i].value, value,MIN(maxvsize,sizeof(value)));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "71071be25f6456c87ec75b7aeca911585e34e7c9",
      "candidate_info": {
        "commit_hash": "71071be25f6456c87ec75b7aeca911585e34e7c9",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/71071be25f6456c87ec75b7aeca911585e34e7c9",
        "files": [
          "internal/dcraw_common.cpp",
          "internal/libraw_x3f.cpp",
          "src/libraw_cxx.cpp"
        ],
        "message": "X3F property table list fix",
        "before_after_code_files": [
          "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
          "internal/libraw_x3f.cpp||internal/libraw_x3f.cpp",
          "src/libraw_cxx.cpp||src/libraw_cxx.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/libraw_x3f.cpp||internal/libraw_x3f.cpp",
            "src/libraw_cxx.cpp||src/libraw_cxx.cpp"
          ],
          "candidate": [
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/libraw_x3f.cpp||internal/libraw_x3f.cpp",
            "src/libraw_cxx.cpp||src/libraw_cxx.cpp"
          ]
        }
      },
      "candidate_diff": {
        "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
          "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp"
        ],
        "internal/libraw_x3f.cpp||internal/libraw_x3f.cpp": [
          "File: internal/libraw_x3f.cpp -> internal/libraw_x3f.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "516:   int _cur = _file->_func(_buffer,1,_left); \\",
          "517:   if (_cur == 0) {       \\",
          "518:    throw LIBRAW_EXCEPTION_IO_CORRUPT;  \\",
          "520:   }           \\",
          "521:   _left -= _cur;        \\",
          "522:  }            \\",
          "",
          "[Removed Lines]",
          "519:    exit(1);        \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "912:    if (PL)",
          "913:    {",
          "914:     int i;",
          "920:    }",
          "921:    FREE(PL->property_table.element);",
          "922:    FREE(PL->data);",
          "",
          "[Removed Lines]",
          "916:     for (i = 0; i < PL->property_table.size; i++) {",
          "917:      FREE(PL->property_table.element[i].name_utf8);",
          "918:      FREE(PL->property_table.element[i].value_utf8);",
          "919:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1625:  if (!PL->data_size)",
          "1626:   PL->data_size = read_data_block(&PL->data, I, DE, 0);",
          "1628:  for (i=0; i<PL->num_properties; i++) {",
          "1629:   x3f_property_t *P = &PL->property_table.element[i];",
          "1631:   P->name = ((utf16_t *)PL->data + P->name_offset);",
          "1632:   P->value = ((utf16_t *)PL->data + P->value_offset);",
          "1635:  }",
          "1636: }",
          "",
          "[Removed Lines]",
          "1633:   P->name_utf8 = 0;// utf16le_to_utf8(P->name);",
          "1634:   P->value_utf8 = 0;//utf16le_to_utf8(P->value);",
          "",
          "[Added Lines]",
          "1619:  uint32_t maxoffset = PL->data_size/sizeof(utf16_t)-2; // at least 2 chars, value + terminating 0x0000",
          "1623:   if(P->name_offset > maxoffset || P->value_offset > maxoffset)",
          "1624:    throw LIBRAW_EXCEPTION_IO_CORRUPT;",
          "",
          "---------------"
        ],
        "src/libraw_cxx.cpp||src/libraw_cxx.cpp": [
          "File: src/libraw_cxx.cpp -> src/libraw_cxx.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "6299:   imgdata.sizes.raw_width = ID->columns;",
          "6300:   imgdata.sizes.raw_height = ID->rows;",
          "6302:   DE = x3f_get_prop(x3f);",
          "6303:   if ((x3f_load_data(x3f, DE) == X3F_OK))",
          "6304:   {",
          "6306:     DEH = &DE->header;",
          "6307:     x3f_property_list_t *PL = &DEH->data_subsection.property_list;",
          "6308:     if (PL->property_table.size != 0)",
          "6309:     {",
          "6310:       int i;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6309:     utf16_t *datap = (utf16_t*) PL->data;",
          "6310:     uint32_t maxitems = PL->data_size/sizeof(utf16_t);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6312:       for (i = 0; i < PL->num_properties; i++)",
          "6313:       {",
          "6314:         char name[100], value[100];",
          "6317:         if (!strcmp(name, \"ISO\"))",
          "6318:           imgdata.other.iso_speed = atoi(value);",
          "6319:         if (!strcmp(name, \"CAMMANUF\"))",
          "",
          "[Removed Lines]",
          "6315:         utf2char(P[i].name, name,sizeof(name));",
          "6316:         utf2char(P[i].value, value,sizeof(value));",
          "",
          "[Added Lines]",
          "6318:         int noffset = (P[i].name - datap);",
          "6319:         int voffset = (P[i].value - datap);",
          "6320:         if(noffset < 0 || noffset>maxitems || voffset<0 || voffset>maxitems)",
          "6321:            throw LIBRAW_EXCEPTION_IO_CORRUPT;",
          "6322:         int maxnsize = maxitems - (P[i].name - datap);",
          "6323:         int maxvsize = maxitems - (P[i].value - datap);",
          "6324:         utf2char(P[i].name, name,MIN(maxnsize,sizeof(name)));",
          "6325:         utf2char(P[i].value, value,MIN(maxvsize,sizeof(value)));",
          "",
          "---------------"
        ]
      }
    }
  ]
}