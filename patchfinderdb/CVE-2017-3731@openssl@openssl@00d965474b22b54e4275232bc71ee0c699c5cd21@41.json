{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ded9d1076cffc912ed7c40256b6202876a2b6caa",
      "candidate_info": {
        "commit_hash": "ded9d1076cffc912ed7c40256b6202876a2b6caa",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ded9d1076cffc912ed7c40256b6202876a2b6caa",
        "files": [
          "apps/ca.c",
          "apps/srp.c"
        ],
        "message": "Fix some more memory leaks with TXT_DB_insert.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2684)\n(cherry picked from commit 0fbaef9e64fa10446aff805791befaa2b967e322)",
        "before_after_code_files": [
          "apps/ca.c||apps/ca.c",
          "apps/srp.c||apps/srp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/ca.c||apps/ca.c": [
          "File: apps/ca.c -> apps/ca.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2063:         row[DB_rev_date] = NULL;",
          "2064:         row[DB_file] = OPENSSL_strdup(\"unknown\");",
          "2066:         irow = app_malloc(sizeof(*irow) * (DB_NUMBER + 1), \"row ptr\");",
          "2068:             irow[i] = row[i];",
          "2071:         irow[DB_NUMBER] = NULL;",
          "2073:         if (!TXT_DB_insert(db->db, irow)) {",
          "2074:             BIO_printf(bio_err, \"failed to update database\\n\");",
          "2075:             BIO_printf(bio_err, \"TXT_DB error number %ld\\n\", db->db->error);",
          "2076:             goto end;",
          "2077:         }",
          "2080:         if (type == -1)",
          "2081:             ok = 1;",
          "",
          "[Removed Lines]",
          "2067:         for (i = 0; i < DB_NUMBER; i++) {",
          "2069:             row[i] = NULL;",
          "2070:         }",
          "",
          "[Added Lines]",
          "2066:         if (row[DB_type] == NULL || row[DB_file] == NULL) {",
          "2067:             BIO_printf(bio_err, \"Memory allocation failure\\n\");",
          "2068:             goto end;",
          "2069:         }",
          "2072:         for (i = 0; i < DB_NUMBER; i++)",
          "2079:             OPENSSL_free(irow);",
          "2083:         for (i = 0; i < DB_NUMBER; i++)",
          "2084:             row[i] = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2108:     }",
          "2109:     ok = 1;",
          "2110:  end:",
          "2112:         OPENSSL_free(row[i]);",
          "2114:     return (ok);",
          "2115: }",
          "",
          "[Removed Lines]",
          "2111:     for (i = 0; i < DB_NUMBER; i++) {",
          "2113:     }",
          "",
          "[Added Lines]",
          "2118:     for (i = 0; i < DB_NUMBER; i++)",
          "",
          "---------------"
        ],
        "apps/srp.c||apps/srp.c": [
          "File: apps/srp.c -> apps/srp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "92:     int i;",
          "94:     irow = app_malloc(sizeof(*irow) * (DB_NUMBER + 1), \"row pointers\");",
          "96:         irow[i] = row[i];",
          "99:     irow[DB_NUMBER] = NULL;",
          "101:     if (!TXT_DB_insert(db->db, irow)) {",
          "",
          "[Removed Lines]",
          "95:     for (i = 0; i < DB_NUMBER; i++) {",
          "97:         row[i] = NULL;",
          "98:     }",
          "",
          "[Added Lines]",
          "95:     for (i = 0; i < DB_NUMBER; i++)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c9c1a63d58c7950484347d153a2150b4587e7a53",
      "candidate_info": {
        "commit_hash": "c9c1a63d58c7950484347d153a2150b4587e7a53",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c9c1a63d58c7950484347d153a2150b4587e7a53",
        "files": [
          "ssl/t1_ext.c"
        ],
        "message": "Rework error handling of custom_ext_meth_add towards strong exception safety.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2636)\n(cherry picked from commit ed874fac6399d5064d6eb8fe2022b918aeaf75af)",
        "before_after_code_files": [
          "ssl/t1_ext.c||ssl/t1_ext.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/t1_ext.c||ssl/t1_ext.c": [
          "File: ssl/t1_ext.c -> ssl/t1_ext.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "181:     tmp = OPENSSL_realloc(exts->meths,",
          "182:                           (exts->meths_count + 1) * sizeof(custom_ext_method));",
          "188:         return 0;",
          "191:     exts->meths = tmp;",
          "192:     meth = exts->meths + exts->meths_count;",
          "",
          "[Removed Lines]",
          "184:     if (tmp == NULL) {",
          "185:         OPENSSL_free(exts->meths);",
          "186:         exts->meths = NULL;",
          "187:         exts->meths_count = 0;",
          "189:     }",
          "",
          "[Added Lines]",
          "184:     if (tmp == NULL)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f8b21b98e96096eac702b814900100be922c6534",
      "candidate_info": {
        "commit_hash": "f8b21b98e96096eac702b814900100be922c6534",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f8b21b98e96096eac702b814900100be922c6534",
        "files": [
          "crypto/evp/e_aes.c",
          "crypto/evp/evp_enc.c"
        ],
        "message": "Fix a crash in EVP_CIPHER_CTX_cleanup due to cipher_data may be NULL or EVP_CTRL_INIT/EVP_CTRL_COPY was not called or failed. If that happens in EVP_CipherInit_ex/EVP_CIPHER_CTX_copy set cipher = NULL, aes_gcm_cleanup should check that gctx != NULL before calling OPENSSL_cleanse.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2562)\n(cherry picked from commit 273a0218e65f1737cdbb0ef65a5ddebd601e6bef)",
        "before_after_code_files": [
          "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
          "crypto/evp/evp_enc.c||crypto/evp/evp_enc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [
            "crypto/evp/e_aes.c||crypto/evp/e_aes.c"
          ],
          "candidate": [
            "crypto/evp/e_aes.c||crypto/evp/e_aes.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
          "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1268: static int aes_gcm_cleanup(EVP_CIPHER_CTX *c)",
          "1269: {",
          "1270:     EVP_AES_GCM_CTX *gctx = EVP_C_DATA(EVP_AES_GCM_CTX,c);",
          "1271:     OPENSSL_cleanse(&gctx->gcm, sizeof(gctx->gcm));",
          "1272:     if (gctx->iv != EVP_CIPHER_CTX_iv_noconst(c))",
          "1273:         OPENSSL_free(gctx->iv);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1271:     if (gctx == NULL)",
          "1272:         return 0;",
          "",
          "---------------"
        ],
        "crypto/evp/evp_enc.c||crypto/evp/evp_enc.c": [
          "File: crypto/evp/evp_enc.c -> crypto/evp/evp_enc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "125:         if (ctx->cipher->ctx_size) {",
          "126:             ctx->cipher_data = OPENSSL_zalloc(ctx->cipher->ctx_size);",
          "127:             if (ctx->cipher_data == NULL) {",
          "128:                 EVPerr(EVP_F_EVP_CIPHERINIT_EX, ERR_R_MALLOC_FAILURE);",
          "129:                 return 0;",
          "130:             }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "128:                 ctx->cipher = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "136:         ctx->flags &= EVP_CIPHER_CTX_FLAG_WRAP_ALLOW;",
          "137:         if (ctx->cipher->flags & EVP_CIPH_CTRL_INIT) {",
          "138:             if (!EVP_CIPHER_CTX_ctrl(ctx, EVP_CTRL_INIT, 0, NULL)) {",
          "139:                 EVPerr(EVP_F_EVP_CIPHERINIT_EX, EVP_R_INITIALIZATION_ERROR);",
          "140:                 return 0;",
          "141:             }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "140:                 ctx->cipher = NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "616:     if (in->cipher_data && in->cipher->ctx_size) {",
          "617:         out->cipher_data = OPENSSL_malloc(in->cipher->ctx_size);",
          "618:         if (out->cipher_data == NULL) {",
          "619:             EVPerr(EVP_F_EVP_CIPHER_CTX_COPY, ERR_R_MALLOC_FAILURE);",
          "620:             return 0;",
          "621:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "621:             out->cipher = NULL;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "623:     }",
          "625:     if (in->cipher->flags & EVP_CIPH_CUSTOM_COPY)",
          "627:     return 1;",
          "628: }",
          "",
          "[Removed Lines]",
          "626:         return in->cipher->ctrl((EVP_CIPHER_CTX *)in, EVP_CTRL_COPY, 0, out);",
          "",
          "[Added Lines]",
          "629:         if (!in->cipher->ctrl((EVP_CIPHER_CTX *)in, EVP_CTRL_COPY, 0, out)) {",
          "630:             out->cipher = NULL;",
          "631:             EVPerr(EVP_F_EVP_CIPHER_CTX_COPY, EVP_R_INITIALIZATION_ERROR);",
          "632:             return 0;",
          "633:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e9a86d6b4951a1c536d5536d1217e6be6455858a",
      "candidate_info": {
        "commit_hash": "e9a86d6b4951a1c536d5536d1217e6be6455858a",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/e9a86d6b4951a1c536d5536d1217e6be6455858a",
        "files": [
          "Configurations/10-main.conf"
        ],
        "message": "Add missing -zdelete for some linux arches\n\nb6d5ba1a9f004d637acac18ae3519fe063b6b5e1 forgot to update some linux arches.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n\nGH: #1977\n(cherry picked from commit 55ab86e4c202e202a2b9200291d038878a727815)",
        "before_after_code_files": [
          "Configurations/10-main.conf||Configurations/10-main.conf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/10-main.conf||Configurations/10-main.conf": [
          "File: Configurations/10-main.conf -> Configurations/10-main.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "708:         cflags           => add(\"-mabi=ilp32\"),",
          "709:         bn_ops           => \"SIXTY_FOUR_BIT RC4_CHAR\",",
          "710:         perlasm_scheme   => \"linux64\",",
          "712:     },",
          "714:     \"linux-mips32\" => {",
          "",
          "[Removed Lines]",
          "711:         shared_ldflag    => \"-mabi=ilp32\",",
          "",
          "[Added Lines]",
          "711:         shared_ldflag    => add(\"-mabi=ilp32\"),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "790:         cflags           => add(\"-mx32 -DL_ENDIAN\"),",
          "791:         bn_ops           => \"SIXTY_FOUR_BIT\",",
          "792:         perlasm_scheme   => \"elf32\",",
          "794:         multilib         => \"x32\",",
          "795:     },",
          "",
          "[Removed Lines]",
          "793:         shared_ldflag    => \"-mx32\",",
          "",
          "[Added Lines]",
          "793:         shared_ldflag    => add(\"-mx32\"),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0f6c9d73cb1e1027c67d993a669719e351c25cfc",
      "candidate_info": {
        "commit_hash": "0f6c9d73cb1e1027c67d993a669719e351c25cfc",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0f6c9d73cb1e1027c67d993a669719e351c25cfc",
        "files": [
          "ssl/record/rec_layer_s3.c"
        ],
        "message": "Fix read_ahead\n\nThe function ssl3_read_n() takes a parameter |clearold| which, if set,\ncauses any old data in the read buffer to be forgotten, and any unread data\nto be moved to the start of the buffer. This is supposed to happen when we\nfirst read the record header.\n\nHowever, the data move was only taking place if there was not already\nsufficient data in the buffer to satisfy the request. If read_ahead is set\nthen the record header could be in the buffer already from when we read the\npreceding record. So with read_ahead we can get into a situation where even\nthough |clearold| is set, the data does not get moved to the start of the\nread buffer when we read the record header. This means there is insufficient\nroom in the read buffer to consume the rest of the record body, resulting in\nan internal error.\n\nThis commit moves the |clearold| processing to earlier in ssl3_read_n()\nto ensure that it always takes place.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(cherry picked from commit a7faa6da317887e14e8e28254a83555983ed6ca7)",
        "before_after_code_files": [
          "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
          "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "242:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "244:     len = s->rlayer.packet_length;",
          "245:     pkt = rb->buf + align;",
          "250:     if (s->rlayer.packet != pkt && clearold == 1) {",
          "251:         memmove(pkt, s->rlayer.packet, len + left);",
          "252:         s->rlayer.packet = pkt;",
          "253:         rb->offset = len + align;",
          "254:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "279:         SSLerr(SSL_F_SSL3_READ_N, ERR_R_INTERNAL_ERROR);",
          "280:         return -1;",
          "",
          "[Removed Lines]",
          "266:     len = s->rlayer.packet_length;",
          "267:     pkt = rb->buf + align;",
          "273:         memmove(pkt, s->rlayer.packet, len + left);",
          "274:         s->rlayer.packet = pkt;",
          "275:         rb->offset = len + align;",
          "276:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}