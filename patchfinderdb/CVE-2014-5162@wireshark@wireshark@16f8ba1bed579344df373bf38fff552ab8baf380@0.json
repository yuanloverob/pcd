{
  "cve_id": "CVE-2014-5162",
  "cve_desc": "The read_new_line function in wiretap/catapult_dct2000.c in the Catapult DCT2000 dissector in Wireshark 1.10.x before 1.10.9 does not properly strip '\\n' and '\\r' characters, which allows remote attackers to cause a denial of service (off-by-one buffer underflow and application crash) via a crafted packet.",
  "repo": "wireshark/wireshark",
  "patch_hash": "16f8ba1bed579344df373bf38fff552ab8baf380",
  "patch_info": {
    "commit_hash": "16f8ba1bed579344df373bf38fff552ab8baf380",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/16f8ba1bed579344df373bf38fff552ab8baf380",
    "files": [
      "plugins/irda/packet-irda.c",
      "wiretap/catapult_dct2000.c"
    ],
    "message": "catapult,irda: Fix ASAN crashes due to buffer underrun\n\nThe catapult dissector tripped on this random file I had. A quick look\nat other dissectors which use a construct like \"-1] *= '*\\\\[rn]\" showed\npacket-irda too, so fix that as well.\n\nChange-Id: I4b5fadcacd0b09d0fb29bdefc3dd1f28aef9b593\nReviewed-on: https://code.wireshark.org/review/2802\nReviewed-by: Evan Huus <eapache@gmail.com>\nReviewed-by: Michael Mann <mmann78@netscape.net>",
    "before_after_code_files": [
      "plugins/irda/packet-irda.c||plugins/irda/packet-irda.c",
      "wiretap/catapult_dct2000.c||wiretap/catapult_dct2000.c"
    ]
  },
  "patch_diff": {
    "plugins/irda/packet-irda.c||plugins/irda/packet-irda.c": [
      "File: plugins/irda/packet-irda.c -> plugins/irda/packet-irda.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1651:         char    buf[256];",
      "1655:         if (length > sizeof(buf)-1)",
      "1656:             length = sizeof(buf)-1;",
      "1657:         tvb_memcpy(tvb, buf, 0, length);",
      "1658:         buf[length] = 0;",
      "1660:             buf[length-1] = 0;",
      "1662:             buf[length-2] = 0;",
      "1664:         col_add_str(pinfo->cinfo, COL_INFO, buf);",
      "",
      "[Removed Lines]",
      "1654:         length = tvb_length(tvb);",
      "1659:         if (buf[length-1] == '\\n')",
      "1661:         else if (buf[length-2] == '\\n')",
      "",
      "[Added Lines]",
      "1654:         length = tvb_captured_length(tvb);",
      "1659:         if (length > 0 && buf[length-1] == '\\n')",
      "1661:         else if (length > 1 && buf[length-2] == '\\n')",
      "",
      "---------------"
    ],
    "wiretap/catapult_dct2000.c||wiretap/catapult_dct2000.c": [
      "File: wiretap/catapult_dct2000.c -> wiretap/catapult_dct2000.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "809:         linebuff[*length-1] = '\\0';",
      "811:     }",
      "814:         linebuff[*length-1] = '\\0';",
      "816:     }",
      "",
      "[Removed Lines]",
      "808:     if (linebuff[*length-1] == '\\n') {",
      "813:     if (linebuff[*length-1] == '\\r') {",
      "",
      "[Added Lines]",
      "808:     if (*length > 0 && linebuff[*length-1] == '\\n') {",
      "813:     if (*length > 0 && linebuff[*length-1] == '\\r') {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a2f977dd56442e2741425481309f4ee1994b8ac3",
      "candidate_info": {
        "commit_hash": "a2f977dd56442e2741425481309f4ee1994b8ac3",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/a2f977dd56442e2741425481309f4ee1994b8ac3",
        "files": [
          "plugins/irda/packet-irda.c",
          "wiretap/catapult_dct2000.c"
        ],
        "message": "catapult,irda: Fix ASAN crashes due to buffer underrun\n\nThe catapult dissector tripped on this random file I had. A quick look\nat other dissectors which use a construct like \"-1] *= '*\\\\[rn]\" showed\npacket-irda too, so fix that as well.\n\nConflicts:\n\twiretap/catapult_dct2000.c\n\nChange-Id: I4b5fadcacd0b09d0fb29bdefc3dd1f28aef9b593\nReviewed-on: https://code.wireshark.org/review/2802\nReviewed-by: Evan Huus <eapache@gmail.com>\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit 16f8ba1bed579344df373bf38fff552ab8baf380)\nReviewed-on: https://code.wireshark.org/review/2810\nReviewed-on: https://code.wireshark.org/review/3437\nReviewed-by: Balint Reczey <balint@balintreczey.hu>",
        "before_after_code_files": [
          "plugins/irda/packet-irda.c||plugins/irda/packet-irda.c",
          "wiretap/catapult_dct2000.c||wiretap/catapult_dct2000.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "plugins/irda/packet-irda.c||plugins/irda/packet-irda.c",
            "wiretap/catapult_dct2000.c||wiretap/catapult_dct2000.c"
          ],
          "candidate": [
            "plugins/irda/packet-irda.c||plugins/irda/packet-irda.c",
            "wiretap/catapult_dct2000.c||wiretap/catapult_dct2000.c"
          ]
        }
      },
      "candidate_diff": {
        "plugins/irda/packet-irda.c||plugins/irda/packet-irda.c": [
          "File: plugins/irda/packet-irda.c -> plugins/irda/packet-irda.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1656:             length = sizeof(buf)-1;",
          "1657:         tvb_memcpy(tvb, buf, 0, length);",
          "1658:         buf[length] = 0;",
          "1660:             buf[length-1] = 0;",
          "1662:             buf[length-2] = 0;",
          "1664:         col_add_str(pinfo->cinfo, COL_INFO, buf);",
          "",
          "[Removed Lines]",
          "1659:         if (buf[length-1] == '\\n')",
          "1661:         else if (buf[length-2] == '\\n')",
          "",
          "[Added Lines]",
          "1659:         if (length > 0 && buf[length-1] == '\\n')",
          "1661:         else if (length > 1 && buf[length-2] == '\\n')",
          "",
          "---------------"
        ],
        "wiretap/catapult_dct2000.c||wiretap/catapult_dct2000.c": [
          "File: wiretap/catapult_dct2000.c -> wiretap/catapult_dct2000.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "813:         linebuff[*length-1] = '\\0';",
          "815:     }",
          "",
          "[Removed Lines]",
          "812:     if (linebuff[*length-1] == '\\n') {",
          "",
          "[Added Lines]",
          "812:     if (*length > 0 && linebuff[*length-1] == '\\n') {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "71cb629adcc50242d98ac4fe73499d7d36c17180",
      "candidate_info": {
        "commit_hash": "71cb629adcc50242d98ac4fe73499d7d36c17180",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/71cb629adcc50242d98ac4fe73499d7d36c17180",
        "files": [
          "plugins/irda/packet-irda.c",
          "wiretap/catapult_dct2000.c"
        ],
        "message": "catapult,irda: Fix ASAN crashes due to buffer underrun\n\nThe catapult dissector tripped on this random file I had. A quick look\nat other dissectors which use a construct like \"-1] *= '*\\\\[rn]\" showed\npacket-irda too, so fix that as well.\n\nChange-Id: I4b5fadcacd0b09d0fb29bdefc3dd1f28aef9b593\nReviewed-on: https://code.wireshark.org/review/2802\nReviewed-by: Evan Huus <eapache@gmail.com>\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit 16f8ba1bed579344df373bf38fff552ab8baf380)\nChange-Id: I4b5fadcacd0b09d0fb29bdefc3dd1f28aef9b593\nReviewed-on: https://code.wireshark.org/review/2809\nReviewed-by: Evan Huus <eapache@gmail.com>",
        "before_after_code_files": [
          "plugins/irda/packet-irda.c||plugins/irda/packet-irda.c",
          "wiretap/catapult_dct2000.c||wiretap/catapult_dct2000.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "plugins/irda/packet-irda.c||plugins/irda/packet-irda.c",
            "wiretap/catapult_dct2000.c||wiretap/catapult_dct2000.c"
          ],
          "candidate": [
            "plugins/irda/packet-irda.c||plugins/irda/packet-irda.c",
            "wiretap/catapult_dct2000.c||wiretap/catapult_dct2000.c"
          ]
        }
      },
      "candidate_diff": {
        "plugins/irda/packet-irda.c||plugins/irda/packet-irda.c": [
          "File: plugins/irda/packet-irda.c -> plugins/irda/packet-irda.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1651:         char    buf[256];",
          "1655:         if (length > sizeof(buf)-1)",
          "1656:             length = sizeof(buf)-1;",
          "1657:         tvb_memcpy(tvb, buf, 0, length);",
          "1658:         buf[length] = 0;",
          "1660:             buf[length-1] = 0;",
          "1662:             buf[length-2] = 0;",
          "1664:         col_add_str(pinfo->cinfo, COL_INFO, buf);",
          "",
          "[Removed Lines]",
          "1654:         length = tvb_length(tvb);",
          "1659:         if (buf[length-1] == '\\n')",
          "1661:         else if (buf[length-2] == '\\n')",
          "",
          "[Added Lines]",
          "1654:         length = tvb_captured_length(tvb);",
          "1659:         if (length > 0 && buf[length-1] == '\\n')",
          "1661:         else if (length > 1 && buf[length-2] == '\\n')",
          "",
          "---------------"
        ],
        "wiretap/catapult_dct2000.c||wiretap/catapult_dct2000.c": [
          "File: wiretap/catapult_dct2000.c -> wiretap/catapult_dct2000.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "809:         linebuff[*length-1] = '\\0';",
          "811:     }",
          "814:         linebuff[*length-1] = '\\0';",
          "816:     }",
          "",
          "[Removed Lines]",
          "808:     if (linebuff[*length-1] == '\\n') {",
          "813:     if (linebuff[*length-1] == '\\r') {",
          "",
          "[Added Lines]",
          "808:     if (*length > 0 && linebuff[*length-1] == '\\n') {",
          "813:     if (*length > 0 && linebuff[*length-1] == '\\r') {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cdb8710f75e1c32f1d798ff11d009ed99c437d32",
      "candidate_info": {
        "commit_hash": "cdb8710f75e1c32f1d798ff11d009ed99c437d32",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/cdb8710f75e1c32f1d798ff11d009ed99c437d32",
        "files": [
          "plugins/irda/packet-irda.c",
          "wiretap/catapult_dct2000.c"
        ],
        "message": "catapult,irda: Fix ASAN crashes due to buffer underrun\n\nThe catapult dissector tripped on this random file I had. A quick look\nat other dissectors which use a construct like \"-1] *= '*\\\\[rn]\" showed\npacket-irda too, so fix that as well.\n\nChange-Id: I4b5fadcacd0b09d0fb29bdefc3dd1f28aef9b593\nReviewed-on: https://code.wireshark.org/review/2802\nReviewed-by: Evan Huus <eapache@gmail.com>\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit 16f8ba1bed579344df373bf38fff552ab8baf380)\nReviewed-on: https://code.wireshark.org/review/2810",
        "before_after_code_files": [
          "plugins/irda/packet-irda.c||plugins/irda/packet-irda.c",
          "wiretap/catapult_dct2000.c||wiretap/catapult_dct2000.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "plugins/irda/packet-irda.c||plugins/irda/packet-irda.c",
            "wiretap/catapult_dct2000.c||wiretap/catapult_dct2000.c"
          ],
          "candidate": [
            "plugins/irda/packet-irda.c||plugins/irda/packet-irda.c",
            "wiretap/catapult_dct2000.c||wiretap/catapult_dct2000.c"
          ]
        }
      },
      "candidate_diff": {
        "plugins/irda/packet-irda.c||plugins/irda/packet-irda.c": [
          "File: plugins/irda/packet-irda.c -> plugins/irda/packet-irda.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1654:             length = sizeof(buf)-1;",
          "1655:         tvb_memcpy(tvb, buf, 0, length);",
          "1656:         buf[length] = 0;",
          "1658:             buf[length-1] = 0;",
          "1660:             buf[length-2] = 0;",
          "1662:         col_add_str(pinfo->cinfo, COL_INFO, buf);",
          "",
          "[Removed Lines]",
          "1657:         if (buf[length-1] == '\\n')",
          "1659:         else if (buf[length-2] == '\\n')",
          "",
          "[Added Lines]",
          "1657:         if (length > 0 && buf[length-1] == '\\n')",
          "1659:         else if (length > 1 && buf[length-2] == '\\n')",
          "",
          "---------------"
        ],
        "wiretap/catapult_dct2000.c||wiretap/catapult_dct2000.c": [
          "File: wiretap/catapult_dct2000.c -> wiretap/catapult_dct2000.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "896:         linebuff[*length-1] = '\\0';",
          "898:     }",
          "901:         linebuff[*length-1] = '\\0';",
          "903:     }",
          "",
          "[Removed Lines]",
          "895:     if (linebuff[*length-1] == '\\n') {",
          "900:     if (linebuff[*length-1] == '\\r') {",
          "",
          "[Added Lines]",
          "895:     if (*length > 0 && linebuff[*length-1] == '\\n') {",
          "900:     if (*length > 0 && linebuff[*length-1] == '\\r') {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "92c0fa7dc1d3f94a658951a21b8a0bf55c0fb5bd",
      "candidate_info": {
        "commit_hash": "92c0fa7dc1d3f94a658951a21b8a0bf55c0fb5bd",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/92c0fa7dc1d3f94a658951a21b8a0bf55c0fb5bd",
        "files": [
          "plugins/irda/packet-irda.c",
          "wiretap/catapult_dct2000.c"
        ],
        "message": "catapult,irda: Fix ASAN crashes due to buffer underrun\n\nThe catapult dissector tripped on this random file I had. A quick look\nat other dissectors which use a construct like \"-1] *= '*\\\\[rn]\" showed\npacket-irda too, so fix that as well.\n\nConflicts:\n\twiretap/catapult_dct2000.c\n\nChange-Id: I4b5fadcacd0b09d0fb29bdefc3dd1f28aef9b593\nReviewed-on: https://code.wireshark.org/review/2802\nReviewed-by: Evan Huus <eapache@gmail.com>\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit 16f8ba1bed579344df373bf38fff552ab8baf380)\nReviewed-on: https://code.wireshark.org/review/2810\nReviewed-on: https://code.wireshark.org/review/3501\nReviewed-by: Balint Reczey <balint@balintreczey.hu>",
        "before_after_code_files": [
          "plugins/irda/packet-irda.c||plugins/irda/packet-irda.c",
          "wiretap/catapult_dct2000.c||wiretap/catapult_dct2000.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "plugins/irda/packet-irda.c||plugins/irda/packet-irda.c",
            "wiretap/catapult_dct2000.c||wiretap/catapult_dct2000.c"
          ],
          "candidate": [
            "plugins/irda/packet-irda.c||plugins/irda/packet-irda.c",
            "wiretap/catapult_dct2000.c||wiretap/catapult_dct2000.c"
          ]
        }
      },
      "candidate_diff": {
        "plugins/irda/packet-irda.c||plugins/irda/packet-irda.c": [
          "File: plugins/irda/packet-irda.c -> plugins/irda/packet-irda.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1691:             length = sizeof(buf)-1;",
          "1692:         tvb_memcpy(tvb, buf, 0, length);",
          "1693:         buf[length] = 0;",
          "1695:             buf[length-1] = 0;",
          "1697:             buf[length-2] = 0;",
          "1699:         col_add_str(pinfo->cinfo, COL_INFO, buf);",
          "",
          "[Removed Lines]",
          "1694:         if (buf[length-1] == '\\n')",
          "1696:         else if (buf[length-2] == '\\n')",
          "",
          "[Added Lines]",
          "1694:         if (length > 0 && buf[length-1] == '\\n')",
          "1696:         else if (length > 1 && buf[length-2] == '\\n')",
          "",
          "---------------"
        ],
        "wiretap/catapult_dct2000.c||wiretap/catapult_dct2000.c": [
          "File: wiretap/catapult_dct2000.c -> wiretap/catapult_dct2000.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "810:     {",
          "811:         linebuff[*length-1] = '\\0';",
          "",
          "[Removed Lines]",
          "809:     if (linebuff[*length-1] == '\\n')",
          "",
          "[Added Lines]",
          "809:     if (*length > 0 && linebuff[*length-1] == '\\n')",
          "",
          "---------------"
        ]
      }
    }
  ]
}