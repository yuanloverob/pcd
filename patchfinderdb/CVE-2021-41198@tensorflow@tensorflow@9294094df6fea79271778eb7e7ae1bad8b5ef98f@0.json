{
  "cve_id": "CVE-2021-41198",
  "cve_desc": "TensorFlow is an open source platform for machine learning. In affected versions if `tf.tile` is called with a large input argument then the TensorFlow process will crash due to a `CHECK`-failure caused by an overflow. The number of elements in the output tensor is too much for the `int64_t` type and the overflow is detected via a `CHECK` statement. This aborts the process. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "9294094df6fea79271778eb7e7ae1bad8b5ef98f",
  "patch_info": {
    "commit_hash": "9294094df6fea79271778eb7e7ae1bad8b5ef98f",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/9294094df6fea79271778eb7e7ae1bad8b5ef98f",
    "files": [
      "tensorflow/core/kernels/tile_ops.cc",
      "tensorflow/python/kernel_tests/shape_ops_test.py"
    ],
    "message": "Merge pull request #51138 from yongtang:46911-tile\n\nPiperOrigin-RevId: 397891537\nChange-Id: I9b12304000e80dd87e6d4a42614ab10383a967b0",
    "before_after_code_files": [
      "tensorflow/core/kernels/tile_ops.cc||tensorflow/core/kernels/tile_ops.cc",
      "tensorflow/python/kernel_tests/shape_ops_test.py||tensorflow/python/kernel_tests/shape_ops_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/tile_ops.cc||tensorflow/core/kernels/tile_ops.cc": [
      "File: tensorflow/core/kernels/tile_ops.cc -> tensorflow/core/kernels/tile_ops.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "188:           context, multiples_array[i] >= 0,",
      "189:           errors::InvalidArgument(\"Expected multiples[\", i, \"] >= 0, but got \",",
      "190:                                   multiples_array[i]));",
      "192:     }",
      "193:     if (output_shape == input.shape()) {",
      "194:       context->set_output(0, input);",
      "",
      "[Removed Lines]",
      "191:       output_shape.AddDim(input.dim_size(i) * multiples_array[i]);",
      "",
      "[Added Lines]",
      "191:       OP_REQUIRES_OK(context, output_shape.AddDimWithStatus(",
      "192:                                   input.dim_size(i) * multiples_array[i]));",
      "",
      "---------------"
    ],
    "tensorflow/python/kernel_tests/shape_ops_test.py||tensorflow/python/kernel_tests/shape_ops_test.py": [
      "File: tensorflow/python/kernel_tests/shape_ops_test.py -> tensorflow/python/kernel_tests/shape_ops_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "723:           inp, array_ops.placeholder(",
      "724:               dtypes.int32, shape=[3]))",
      "727: if __name__ == \"__main__\":",
      "728:   test.main()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "726:   def testLargeTensor(self):",
      "727:     # Test case for GItHub issue 46911.",
      "728:     if test_util.is_xla_enabled():",
      "729:       # The following test fails with XLA enabled.",
      "730:       return",
      "731:     with self.assertRaises(errors_impl.InternalError):",
      "732:       with self.cached_session():",
      "733:         tiled = array_ops.tile(",
      "734:             np.ones((1, 1, 1)), [100000000, 100000000, 100000000])",
      "735:         self.evaluate(tiled)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "75267964384837cc61cc20e1b99e93bf23297b9d",
      "candidate_info": {
        "commit_hash": "75267964384837cc61cc20e1b99e93bf23297b9d",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/75267964384837cc61cc20e1b99e93bf23297b9d",
        "files": [
          "tensorflow/core/kernels/tile_ops.cc",
          "tensorflow/python/kernel_tests/shape_ops_test.py"
        ],
        "message": "Merge pull request #51138 from yongtang:46911-tile\n\nPiperOrigin-RevId: 397891537\nChange-Id: I9b12304000e80dd87e6d4a42614ab10383a967b0",
        "before_after_code_files": [
          "tensorflow/core/kernels/tile_ops.cc||tensorflow/core/kernels/tile_ops.cc",
          "tensorflow/python/kernel_tests/shape_ops_test.py||tensorflow/python/kernel_tests/shape_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/tile_ops.cc||tensorflow/core/kernels/tile_ops.cc",
            "tensorflow/python/kernel_tests/shape_ops_test.py||tensorflow/python/kernel_tests/shape_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/tile_ops.cc||tensorflow/core/kernels/tile_ops.cc",
            "tensorflow/python/kernel_tests/shape_ops_test.py||tensorflow/python/kernel_tests/shape_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/tile_ops.cc||tensorflow/core/kernels/tile_ops.cc": [
          "File: tensorflow/core/kernels/tile_ops.cc -> tensorflow/core/kernels/tile_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "188:           context, multiples_array[i] >= 0,",
          "189:           errors::InvalidArgument(\"Expected multiples[\", i, \"] >= 0, but got \",",
          "190:                                   multiples_array[i]));",
          "192:     }",
          "193:     if (output_shape == input.shape()) {",
          "194:       context->set_output(0, input);",
          "",
          "[Removed Lines]",
          "191:       output_shape.AddDim(input.dim_size(i) * multiples_array[i]);",
          "",
          "[Added Lines]",
          "191:       OP_REQUIRES_OK(context, output_shape.AddDimWithStatus(",
          "192:                                   input.dim_size(i) * multiples_array[i]));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/shape_ops_test.py||tensorflow/python/kernel_tests/shape_ops_test.py": [
          "File: tensorflow/python/kernel_tests/shape_ops_test.py -> tensorflow/python/kernel_tests/shape_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "723:           inp, array_ops.placeholder(",
          "724:               dtypes.int32, shape=[3]))",
          "727: if __name__ == \"__main__\":",
          "728:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "726:   def testLargeTensor(self):",
          "727:     # Test case for GItHub issue 46911.",
          "728:     if test_util.is_xla_enabled():",
          "729:       # The following test fails with XLA enabled.",
          "730:       return",
          "731:     with self.assertRaises(errors_impl.InternalError):",
          "732:       with self.cached_session():",
          "733:         tiled = array_ops.tile(",
          "734:             np.ones((1, 1, 1)), [100000000, 100000000, 100000000])",
          "735:         self.evaluate(tiled)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cbe76458e3d8915a3199c4316c51247c30124864",
      "candidate_info": {
        "commit_hash": "cbe76458e3d8915a3199c4316c51247c30124864",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/cbe76458e3d8915a3199c4316c51247c30124864",
        "files": [
          "tensorflow/core/kernels/tile_ops.cc",
          "tensorflow/python/kernel_tests/shape_ops_test.py"
        ],
        "message": "Merge pull request #51138 from yongtang:46911-tile\n\nPiperOrigin-RevId: 397891537\nChange-Id: I9b12304000e80dd87e6d4a42614ab10383a967b0",
        "before_after_code_files": [
          "tensorflow/core/kernels/tile_ops.cc||tensorflow/core/kernels/tile_ops.cc",
          "tensorflow/python/kernel_tests/shape_ops_test.py||tensorflow/python/kernel_tests/shape_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/tile_ops.cc||tensorflow/core/kernels/tile_ops.cc",
            "tensorflow/python/kernel_tests/shape_ops_test.py||tensorflow/python/kernel_tests/shape_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/tile_ops.cc||tensorflow/core/kernels/tile_ops.cc",
            "tensorflow/python/kernel_tests/shape_ops_test.py||tensorflow/python/kernel_tests/shape_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/tile_ops.cc||tensorflow/core/kernels/tile_ops.cc": [
          "File: tensorflow/core/kernels/tile_ops.cc -> tensorflow/core/kernels/tile_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "188:           context, multiples_array[i] >= 0,",
          "189:           errors::InvalidArgument(\"Expected multiples[\", i, \"] >= 0, but got \",",
          "190:                                   multiples_array[i]));",
          "192:     }",
          "193:     if (output_shape == input.shape()) {",
          "194:       context->set_output(0, input);",
          "",
          "[Removed Lines]",
          "191:       output_shape.AddDim(input.dim_size(i) * multiples_array[i]);",
          "",
          "[Added Lines]",
          "191:       OP_REQUIRES_OK(context, output_shape.AddDimWithStatus(",
          "192:                                   input.dim_size(i) * multiples_array[i]));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/shape_ops_test.py||tensorflow/python/kernel_tests/shape_ops_test.py": [
          "File: tensorflow/python/kernel_tests/shape_ops_test.py -> tensorflow/python/kernel_tests/shape_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "723:           inp, array_ops.placeholder(",
          "724:               dtypes.int32, shape=[3]))",
          "727: if __name__ == \"__main__\":",
          "728:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "726:   def testLargeTensor(self):",
          "727:     # Test case for GItHub issue 46911.",
          "728:     if test_util.is_xla_enabled():",
          "729:       # The following test fails with XLA enabled.",
          "730:       return",
          "731:     with self.assertRaises(errors_impl.InternalError):",
          "732:       with self.cached_session():",
          "733:         tiled = array_ops.tile(",
          "734:             np.ones((1, 1, 1)), [100000000, 100000000, 100000000])",
          "735:         self.evaluate(tiled)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c98c7233d9b61cc0f814e07825c2a35513e3cbe2",
      "candidate_info": {
        "commit_hash": "c98c7233d9b61cc0f814e07825c2a35513e3cbe2",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/c98c7233d9b61cc0f814e07825c2a35513e3cbe2",
        "files": [
          "tensorflow/core/kernels/tile_ops.cc",
          "tensorflow/python/kernel_tests/shape_ops_test.py"
        ],
        "message": "Merge pull request #51138 from yongtang:46911-tile\n\nPiperOrigin-RevId: 397891537\nChange-Id: I9b12304000e80dd87e6d4a42614ab10383a967b0",
        "before_after_code_files": [
          "tensorflow/core/kernels/tile_ops.cc||tensorflow/core/kernels/tile_ops.cc",
          "tensorflow/python/kernel_tests/shape_ops_test.py||tensorflow/python/kernel_tests/shape_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/tile_ops.cc||tensorflow/core/kernels/tile_ops.cc",
            "tensorflow/python/kernel_tests/shape_ops_test.py||tensorflow/python/kernel_tests/shape_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/tile_ops.cc||tensorflow/core/kernels/tile_ops.cc",
            "tensorflow/python/kernel_tests/shape_ops_test.py||tensorflow/python/kernel_tests/shape_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/tile_ops.cc||tensorflow/core/kernels/tile_ops.cc": [
          "File: tensorflow/core/kernels/tile_ops.cc -> tensorflow/core/kernels/tile_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "188:           context, multiples_array[i] >= 0,",
          "189:           errors::InvalidArgument(\"Expected multiples[\", i, \"] >= 0, but got \",",
          "190:                                   multiples_array[i]));",
          "192:     }",
          "193:     if (output_shape == input.shape()) {",
          "194:       context->set_output(0, input);",
          "",
          "[Removed Lines]",
          "191:       output_shape.AddDim(input.dim_size(i) * multiples_array[i]);",
          "",
          "[Added Lines]",
          "191:       OP_REQUIRES_OK(context, output_shape.AddDimWithStatus(",
          "192:                                   input.dim_size(i) * multiples_array[i]));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/shape_ops_test.py||tensorflow/python/kernel_tests/shape_ops_test.py": [
          "File: tensorflow/python/kernel_tests/shape_ops_test.py -> tensorflow/python/kernel_tests/shape_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "723:           inp, array_ops.placeholder(",
          "724:               dtypes.int32, shape=[3]))",
          "727: if __name__ == \"__main__\":",
          "728:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "726:   def testLargeTensor(self):",
          "727:     # Test case for GItHub issue 46911.",
          "728:     if test_util.is_xla_enabled():",
          "729:       # The following test fails with XLA enabled.",
          "730:       return",
          "731:     with self.assertRaises(errors_impl.InternalError):",
          "732:       with self.cached_session():",
          "733:         tiled = array_ops.tile(",
          "734:             np.ones((1, 1, 1)), [100000000, 100000000, 100000000])",
          "735:         self.evaluate(tiled)",
          "",
          "---------------"
        ]
      }
    }
  ]
}