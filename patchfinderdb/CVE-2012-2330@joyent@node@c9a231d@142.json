{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f9a47debfca854666e45de299b0bb630db4a1548",
      "candidate_info": {
        "commit_hash": "f9a47debfca854666e45de299b0bb630db4a1548",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/f9a47debfca854666e45de299b0bb630db4a1548",
        "files": [
          "doc/api/cluster.markdown",
          "lib/cluster.js",
          "test/simple/test-cluster-kill-workers.js",
          "test/simple/test-cluster-master-error.js",
          "test/simple/test-cluster-setup-master.js"
        ],
        "message": "Add cluster.setupMaster\n\nFixes #2470",
        "before_after_code_files": [
          "lib/cluster.js||licluster.js",
          "test/simple/test-cluster-kill-workers.js||test/simple/test-cluster-kill-workers.js",
          "test/simple/test-cluster-master-error.js||test/simple/test-cluster-master-error.js",
          "test/simple/test-cluster-setup-master.js||test/simple/test-cluster-setup-master.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/cluster.js||licluster.js": [
          "File: lib/cluster.js -> licluster.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: var masterStarted = false;",
          "62: var ids = 0;",
          "63: var serverHandlers = {};",
          "68: var serverLisenters = {};",
          "",
          "[Removed Lines]",
          "64: var workerFilename;",
          "65: var workerArgs;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79: cluster.workers = cluster.isMaster ? {} : null;",
          "82: function eachWorker(cb) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "88:   }",
          "89: }",
          "117:     quickDestroyCluster();",
          "118:     process.exit(1);",
          "123: var INTERNAL_PREFIX = 'NODE_CLUSTER_';",
          "",
          "[Removed Lines]",
          "103: function startMaster() {",
          "105:   assert(cluster.isMaster);",
          "107:   if (masterStarted) return;",
          "108:   masterStarted = true;",
          "110:   workerFilename = process.argv[1];",
          "111:   workerArgs = process.argv.slice(2);",
          "113:   process.on('uncaughtException', function(e) {",
          "114:     console.error('Exception in cluster master process: ' +",
          "115:         e.message + '\\n' + e.stack);",
          "119:   });",
          "120: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "275:     }",
          "280:     });",
          "282:   } else {",
          "283:     this.process = process;",
          "284:   }",
          "",
          "[Removed Lines]",
          "278:     this.process = fork(workerFilename, workerArgs, {",
          "279:       'env': envCopy",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "426:   assert(cluster.isMaster);",
          "431:   return (new cluster.Worker(env));",
          "432: };",
          "",
          "[Removed Lines]",
          "429:   startMaster();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-cluster-kill-workers.js||test/simple/test-cluster-kill-workers.js": [
          "File: test/simple/test-cluster-kill-workers.js -> test/simple/test-cluster-kill-workers.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-cluster-master-error.js||test/simple/test-cluster-master-error.js": [
          "File: test/simple/test-cluster-master-error.js -> test/simple/test-cluster-master-error.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: var common = require('../common');",
          "24: var assert = require('assert');",
          "25: var cluster = require('cluster');",
          "28: if (cluster.isWorker) {",
          "29:   var http = require('http');",
          "30:   http.Server(function() {",
          "32:   }).listen(common.PORT, '127.0.0.1');",
          "34: } else if (process.argv[2] === 'cluster') {",
          "36:   var totalWorkers = 2;",
          "39:   var forkNum = 0;",
          "40:   cluster.on('fork', function forkEvent(worker) {",
          "43:     process.send({",
          "44:       cmd: 'worker',",
          "45:       workerPID: worker.process.pid",
          "46:     });",
          "49:     if (++forkNum === totalWorkers) {",
          "50:       cluster.removeListener('fork', forkEvent);",
          "51:     }",
          "52:   });",
          "55:   var listeningNum = 0;",
          "56:   cluster.on('listening', function listeningEvent() {",
          "59:     if (++listeningNum === totalWorkers) {",
          "61:       cluster.removeListener('listening', listeningEvent);",
          "64:       process.nextTick(function() {",
          "65:         throw 'accidently error';",
          "66:       });",
          "67:     }",
          "69:   });",
          "72:   cluster.fork();",
          "73:   cluster.fork();",
          "75: } else {",
          "78:   var fork = require('child_process').fork;",
          "80:   var isAlive = function(pid) {",
          "81:     try {",
          "83:       process.kill(pid, 0);",
          "85:       return true;",
          "86:     } catch (e) {",
          "87:       return false;",
          "88:     }",
          "89:   };",
          "91:   var existMaster = false;",
          "92:   var existWorker = false;",
          "95:   var workers = [];",
          "98:   var master = fork(process.argv[1], ['cluster'], {silent: true});",
          "101:   master.on('message', function(data) {",
          "104:     if (data.cmd === 'worker') {",
          "105:       workers.push(data.workerPID);",
          "106:     }",
          "107:   });",
          "110:   master.on('exit', function(code) {",
          "113:     existMaster = (code === 1);",
          "116:     var alive = false;",
          "117:     workers.forEach(function(pid) {",
          "118:       if (isAlive(pid)) {",
          "119:         alive = true;",
          "120:       }",
          "121:     });",
          "124:     existWorker = !alive;",
          "125:   });",
          "127:   process.once('exit', function() {",
          "128:     assert.ok(existMaster, 'The master did not die after an error was throwed');",
          "129:     assert.ok(existWorker, 'The workers did not die after an error in the master');",
          "130:   });",
          "132: }",
          "",
          "---------------"
        ],
        "test/simple/test-cluster-setup-master.js||test/simple/test-cluster-setup-master.js": [
          "File: test/simple/test-cluster-setup-master.js -> test/simple/test-cluster-setup-master.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: var common = require('../common');",
          "24: var assert = require('assert');",
          "25: var cluster = require('cluster');",
          "27: if (cluster.isWorker) {",
          "30:   process.send(process.argv[2]);",
          "32: } else if (cluster.isMaster) {",
          "34:   var checks = {",
          "35:     args: false,",
          "36:     setupEvent: false,",
          "37:     settingsObject: false",
          "38:   };",
          "40:   var totalWorkers = 2;",
          "42:   cluster.once('setup', function() {",
          "43:     checks.setupEvent = true;",
          "45:     var settings = cluster.settings;",
          "46:     if (settings &&",
          "47:         settings.args && settings.args[0] === 'custom argument' &&",
          "48:         settings.silent === true &&",
          "49:         settings.exec === process.argv[1]) {",
          "50:       checks.settingsObject = true;",
          "51:     }",
          "52:   });",
          "55:   cluster.setupMaster({",
          "56:     args: ['custom argument'],",
          "57:     silent: true",
          "58:   });",
          "60:   var correctIn = 0;",
          "62:   cluster.on('online', function lisenter(worker) {",
          "64:     worker.once('message', function(data) {",
          "65:       correctIn += (data === 'custom argument' ? 1 : 0);",
          "66:       if (correctIn === totalWorkers) {",
          "67:         checks.args = true;",
          "68:       }",
          "69:       worker.destroy();",
          "70:     });",
          "73:     if (cluster.onlineWorkers === totalWorkers) {",
          "74:       checks.workers = true;",
          "75:     }",
          "76:   });",
          "79:   cluster.fork();",
          "80:   cluster.fork();",
          "83:   process.once('exit', function() {",
          "84:     assert.ok(checks.args, 'The arguments was noy send to the worker');",
          "85:     assert.ok(checks.setupEvent, 'The setup event was never emitted');",
          "86:     assert.ok(checks.settingsObject, 'The settingsObject do not have correct properties');",
          "87:   });",
          "89: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9eddaebb79ff1954b7ecdb209587d7db6554580d",
      "candidate_info": {
        "commit_hash": "9eddaebb79ff1954b7ecdb209587d7db6554580d",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/9eddaebb79ff1954b7ecdb209587d7db6554580d",
        "files": [
          "lib/assert.js"
        ],
        "message": "assert: remove unnecessary use of __proto__\n\nAssertionError already inherits from Error above using util.inherits(),\nso this extra line was redundant.\n\ntest/simple/test-assert.js already tests for `instanceof`, and still passes.",
        "before_after_code_files": [
          "lib/assert.js||liassert.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/assert.js||liassert.js": [
          "File: lib/assert.js -> liassert.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:   }",
          "86: };",
          "",
          "[Removed Lines]",
          "90: assert.AssertionError.__proto__ = Error.prototype;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d03b8487c608cb030055a6ccff34ae59a230356a",
      "candidate_info": {
        "commit_hash": "d03b8487c608cb030055a6ccff34ae59a230356a",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/d03b8487c608cb030055a6ccff34ae59a230356a",
        "files": [
          "configure",
          "node.gyp"
        ],
        "message": "build: support shared zlib",
        "before_after_code_files": [
          "node.gyp||node.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "node.gyp||node.gyp": [
          "File: node.gyp -> node.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:     'werror': '',",
          "7:     'node_use_dtrace': 'false',",
          "8:     'node_shared_v8%': 'false',",
          "9:     'node_use_openssl%': 'true',",
          "10:     'node_use_system_openssl%': 'false',",
          "11:     'library_files': [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9:     'node_shared_zlib%': 'false',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56:       'dependencies': [",
          "57:         'deps/http_parser/http_parser.gyp:http_parser',",
          "58:         'deps/uv/uv.gyp:uv',",
          "60:         'node_js2c#host',",
          "61:       ],",
          "",
          "[Removed Lines]",
          "59:         'deps/zlib/zlib.gyp:zlib',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "158:           'dependencies': [ 'deps/v8/tools/gyp/v8.gyp:v8' ],",
          "159:         }],",
          "161:         [ 'OS==\"win\"', {",
          "162:           'sources': [",
          "163:             'tools/msvs/res/node.rc',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "161:         [ 'node_shared_zlib==\"false\"', {",
          "162:           'dependencies': [ 'deps/zlib/zlib.gyp:zlib' ],",
          "163:         }],",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "35c1f682c10e29fede293492379d6d1c93a92f04",
      "candidate_info": {
        "commit_hash": "35c1f682c10e29fede293492379d6d1c93a92f04",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/35c1f682c10e29fede293492379d6d1c93a92f04",
        "files": [
          "deps/uv/src/win/internal.h",
          "deps/uv/src/win/tcp.c",
          "deps/uv/src/win/winsock.c"
        ],
        "message": "update libuv to c0e7044862",
        "before_after_code_files": [
          "deps/uv/src/win/internal.h||deps/uv/src/win/internal.h",
          "deps/uv/src/win/tcp.c||deps/uv/src/win/tcp.c",
          "deps/uv/src/win/winsock.c||deps/uv/src/win/winsock.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/src/win/internal.h||deps/uv/src/win/internal.h": [
          "File: deps/uv/src/win/internal.h -> deps/uv/src/win/internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "338: extern int uv_allow_ipv6;",
          "341: extern struct sockaddr_in uv_addr_ip4_any_;",
          "342: extern struct sockaddr_in6 uv_addr_ip6_any_;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "341: extern int uv_tcp_non_ifs_lsp_ipv4;",
          "342: extern int uv_tcp_non_ifs_lsp_ipv6;",
          "",
          "---------------"
        ],
        "deps/uv/src/win/tcp.c||deps/uv/src/win/tcp.c": [
          "File: deps/uv/src/win/tcp.c -> deps/uv/src/win/tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "85: static int uv_tcp_set_socket(uv_loop_t* loop, uv_tcp_t* handle,",
          "86:     SOCKET socket, int imported) {",
          "87:   DWORD yes = 1;",
          "89:   assert(handle->socket == INVALID_SOCKET);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:   int non_ifs_lsp;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "114:     }",
          "115:   }",
          "118:     if (pSetFileCompletionNotificationModes((HANDLE) socket,",
          "119:         FILE_SKIP_SET_EVENT_ON_HANDLE |",
          "120:         FILE_SKIP_COMPLETION_PORT_ON_SUCCESS)) {",
          "",
          "[Removed Lines]",
          "117:   if (pSetFileCompletionNotificationModes) {",
          "",
          "[Added Lines]",
          "118:   non_ifs_lsp = (handle->flags & UV_HANDLE_IPV6) ? uv_tcp_non_ifs_lsp_ipv6 :",
          "119:     uv_tcp_non_ifs_lsp_ipv4;",
          "121:   if (pSetFileCompletionNotificationModes && !non_ifs_lsp) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1039:   tcp->flags |= UV_HANDLE_BOUND;",
          "1040:   tcp->flags |= UV_HANDLE_SHARED_TCP_SERVER;",
          "1042:   return uv_tcp_set_socket(tcp->loop, tcp, socket, 1);",
          "1043: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1046:   if (socket_protocol_info->iAddressFamily == AF_INET6) {",
          "1047:     tcp->flags |= UV_HANDLE_IPV6;",
          "1048:   }",
          "",
          "---------------"
        ],
        "deps/uv/src/win/winsock.c||deps/uv/src/win/winsock.c": [
          "File: deps/uv/src/win/winsock.c -> deps/uv/src/win/winsock.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: int uv_allow_ipv6;",
          "32: struct sockaddr_in uv_addr_ip4_any_;",
          "33: struct sockaddr_in6 uv_addr_ip6_any_;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: int uv_tcp_non_ifs_lsp_ipv4;",
          "33: int uv_tcp_non_ifs_lsp_ipv6;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81:   WSADATA wsa_data;",
          "82:   int errorno;",
          "86:   errorno = WSAStartup(MAKEWORD(2, 2), &wsa_data);",
          "",
          "[Removed Lines]",
          "83:   SOCKET dummy6;",
          "",
          "[Added Lines]",
          "87:   SOCKET dummy;",
          "88:   WSAPROTOCOL_INFOW protocol_info;",
          "89:   int opt_len;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "92:   uv_addr_ip4_any_ = uv_ip4_addr(\"0.0.0.0\", 0);",
          "93:   uv_addr_ip6_any_ = uv_ip6_addr(\"::\", 0);",
          "98:     uv_allow_ipv6 = TRUE;",
          "100:       uv_fatal_error(WSAGetLastError(), \"closesocket\");",
          "101:     }",
          "102:   }",
          "",
          "[Removed Lines]",
          "96:   dummy6 = socket(AF_INET6, SOCK_STREAM, IPPROTO_IP);",
          "97:   if (dummy6 != INVALID_SOCKET) {",
          "99:     if (closesocket(dummy6) == SOCKET_ERROR) {",
          "",
          "[Added Lines]",
          "102:   dummy = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);",
          "103:   if (dummy == INVALID_SOCKET) {",
          "104:     uv_fatal_error(WSAGetLastError(), \"socket\");",
          "105:   }",
          "107:   opt_len = (int) sizeof protocol_info;",
          "108:   if (!getsockopt(dummy,",
          "109:                   SOL_SOCKET,",
          "110:                   SO_PROTOCOL_INFOW,",
          "111:                   (char*) &protocol_info,",
          "112:                   &opt_len) == SOCKET_ERROR) {",
          "113:     uv_fatal_error(WSAGetLastError(), \"socket\");",
          "114:   }",
          "116:   if (!(protocol_info.dwServiceFlags1 & XP1_IFS_HANDLES)) {",
          "117:     uv_tcp_non_ifs_lsp_ipv4 = 1;",
          "118:   }",
          "120:   if (closesocket(dummy) == SOCKET_ERROR) {",
          "121:     uv_fatal_error(WSAGetLastError(), \"closesocket\");",
          "122:   }",
          "125:   dummy = socket(AF_INET6, SOCK_STREAM, IPPROTO_IP);",
          "126:   if (dummy != INVALID_SOCKET) {",
          "129:     opt_len = (int) sizeof protocol_info;",
          "130:     if (!getsockopt(dummy,",
          "131:                     SOL_SOCKET,",
          "132:                     SO_PROTOCOL_INFOW,",
          "133:                     (char*) &protocol_info,",
          "134:                     &opt_len) == SOCKET_ERROR) {",
          "135:       uv_fatal_error(WSAGetLastError(), \"socket\");",
          "136:     }",
          "138:     if (!(protocol_info.dwServiceFlags1 & XP1_IFS_HANDLES)) {",
          "139:       uv_tcp_non_ifs_lsp_ipv6 = 1;",
          "140:     }",
          "142:     if (closesocket(dummy) == SOCKET_ERROR) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2f256af412486b5402a1a6bf3da9c2b9c0ac0556",
      "candidate_info": {
        "commit_hash": "2f256af412486b5402a1a6bf3da9c2b9c0ac0556",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/2f256af412486b5402a1a6bf3da9c2b9c0ac0556",
        "files": [
          "src/node_version.h"
        ],
        "message": "Now working on v0.6.13",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #define NODE_MAJOR_VERSION 0",
          "30: #define NODE_MINOR_VERSION 6",
          "34: #ifndef NODE_STRINGIFY",
          "35: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "31: #define NODE_PATCH_VERSION 12",
          "32: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "[Added Lines]",
          "31: #define NODE_PATCH_VERSION 13",
          "32: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "---------------"
        ]
      }
    }
  ]
}