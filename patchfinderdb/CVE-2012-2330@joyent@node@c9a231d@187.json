{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "71a2a2caa69865add8065cb0e282096e3f4d78f6",
      "candidate_info": {
        "commit_hash": "71a2a2caa69865add8065cb0e282096e3f4d78f6",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/71a2a2caa69865add8065cb0e282096e3f4d78f6",
        "files": [
          "lib/net.js",
          "test/simple/test-net-during-close.js"
        ],
        "message": "net: Prevent property access throws during close\n\nFix #3455.\n\nThe remoteAddress and remotePort properties are\ndynamically retrieved from _getpeername().\n\nWhile _getpeername() checks if the _handle is\nnull, it is also possible for the tcp_wrapped\n_handle.getpeername() to return null on error.\n\nSuch a condition happens when the remote closes\nand one of these properties is accessed before\n_handle is set to null.",
        "before_after_code_files": [
          "lib/net.js||linet.js",
          "test/simple/test-net-during-close.js||test/simple/test-net-during-close.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/net.js||linet.js": [
          "File: lib/net.js -> linet.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "437:   }",
          "438:   if (!this._peername) {",
          "439:     this._peername = this._handle.getpeername();",
          "440:   }",
          "441:   return this._peername;",
          "442: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-net-during-close.js||test/simple/test-net-during-close.js": [
          "File: test/simple/test-net-during-close.js -> test/simple/test-net-during-close.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common');",
          "23: var assert = require('assert');",
          "24: var net = require('net');",
          "25: var accessedProperties = false;",
          "27: var server = net.createServer(function(socket) {",
          "28:   socket.end();",
          "29: });",
          "31: server.listen(common.PORT, function() {",
          "32:   var client = net.createConnection(common.PORT);",
          "33:   server.close();",
          "36:   assert.doesNotThrow(function() {",
          "37:     client.remoteAddress;",
          "38:     client.remotePort;",
          "39:   });",
          "40:   accessedProperties = true;",
          "42:   process.exit(0);",
          "43: });",
          "45: process.on('exit', function() {",
          "46:   assert(accessedProperties);",
          "47: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "39e2c469db86c4cdcef901dd619cdeb5a3e62065",
      "candidate_info": {
        "commit_hash": "39e2c469db86c4cdcef901dd619cdeb5a3e62065",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/39e2c469db86c4cdcef901dd619cdeb5a3e62065",
        "files": [
          "configure",
          "node.gyp"
        ],
        "message": "build: add --without-isolates configure switch",
        "before_after_code_files": [
          "node.gyp||node.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "node.gyp||node.gyp": [
          "File: node.gyp -> node.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "130:       ],",
          "132:       'conditions': [",
          "133:         [ 'node_use_openssl==\"true\"', {",
          "134:           'defines': [ 'HAVE_OPENSSL=1' ],",
          "135:           'sources': [ 'src/node_crypto.cc' ],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "133:         [ 'node_use_isolates==\"true\"', {",
          "134:           'defines': [ 'HAVE_ISOLATES=1' ],",
          "135:         }, {",
          "136:           'defines': [ 'HAVE_ISOLATES=0' ],",
          "137:         }],",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "441e7928492b73b21b7d1d9dced4ee4537fc90c4",
      "candidate_info": {
        "commit_hash": "441e7928492b73b21b7d1d9dced4ee4537fc90c4",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/441e7928492b73b21b7d1d9dced4ee4537fc90c4",
        "files": [
          "src/node.js"
        ],
        "message": "stdin.pipe: Replace forgotten opts member",
        "before_after_code_files": [
          "src/node.js||src/node.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.js||src/node.js": [
          "File: src/node.js -> src/node.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "405:       var pipe = stdin.pipe;",
          "407:         stdin.resume();",
          "409:       };",
          "411:       return stdin;",
          "",
          "[Removed Lines]",
          "406:       stdin.pipe = function(dest) {",
          "408:         return pipe.call(stdin, dest);",
          "",
          "[Added Lines]",
          "406:       stdin.pipe = function(dest, opts) {",
          "408:         return pipe.call(stdin, dest, opts);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9da830e8959393dc757d3b87478b9e5b8ea695f1",
      "candidate_info": {
        "commit_hash": "9da830e8959393dc757d3b87478b9e5b8ea695f1",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/9da830e8959393dc757d3b87478b9e5b8ea695f1",
        "files": [
          "lib/child_process.js"
        ],
        "message": "child_process: stop .disconnect() call if channel is diconnected",
        "before_after_code_files": [
          "lib/child_process.js||lichild_process.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/child_process.js||lichild_process.js": [
          "File: lib/child_process.js -> lichild_process.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "142:   target.disconnect = function() {",
          "143:       if (!this.connected) {",
          "144:         this.emit('error', new Error('IPC channel is already disconnected'));",
          "145:       }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3502e45b6c05eeabf9eae1ec8c455eedcdac79f8",
      "candidate_info": {
        "commit_hash": "3502e45b6c05eeabf9eae1ec8c455eedcdac79f8",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/3502e45b6c05eeabf9eae1ec8c455eedcdac79f8",
        "files": [
          "lib/dgram.js"
        ],
        "message": "dgram: defer send error to next tick",
        "before_after_code_files": [
          "lib/dgram.js||lidgram.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/dgram.js||lidgram.js": [
          "File: lib/dgram.js -> lidgram.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "189:       }",
          "190:       else {",
          "193:       }",
          "194:     }",
          "195:   });",
          "",
          "[Removed Lines]",
          "192:         callback(errnoException(errno, 'send'));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}