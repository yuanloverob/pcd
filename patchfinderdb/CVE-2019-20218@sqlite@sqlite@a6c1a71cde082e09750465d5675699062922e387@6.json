{
  "cve_id": "CVE-2019-20218",
  "cve_desc": "selectExpander in select.c in SQLite 3.30.1 proceeds with WITH stack unwinding even after a parsing error.",
  "repo": "sqlite/sqlite",
  "patch_hash": "a6c1a71cde082e09750465d5675699062922e387",
  "patch_info": {
    "commit_hash": "a6c1a71cde082e09750465d5675699062922e387",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/a6c1a71cde082e09750465d5675699062922e387",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/altertab3.test"
    ],
    "message": "Do not attempt to unwind the WITH stack in the Parse object following an error. This fixes a separate case to [de6e6d68].\n\nFossilOrigin-Name: d29edef93451cc67a5d69c1cce1b1832d9ca8fff1f600afdd51338b74d077b92",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/altertab3.test||test/altertab3.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 597896ed0ae9e2960a8f39576bd7f77a11dccc1da84b6a44ebb5c38d90ebc330",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4982:     return WRC_Abort;",
      "4983:   }",
      "",
      "[Removed Lines]",
      "4981:   if( db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "[Added Lines]",
      "4981:   if( pParse->nErr || db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "---------------"
    ],
    "test/altertab3.test||test/altertab3.test": [
      "File: test/altertab3.test -> test/altertab3.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "531:   ALTER TABLE t1 RENAME TO t1x;",
      "532: } {1 {error in trigger r1: no such table: main.t2}}",
      "534: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "534: #------------------------------------------------------------------------",
      "535: #",
      "536: reset_db",
      "537: do_execsql_test 23.1 {",
      "538:   CREATE TABLE v0 (a);",
      "539:   CREATE VIEW v2 (v3) AS",
      "540:     WITH x1 AS (SELECT * FROM v2)",
      "541:     SELECT v3 AS x, v3 AS y FROM v2;",
      "542: }",
      "544: do_catchsql_test 23.2 {",
      "545:   SELECT * FROM v2",
      "546: } {1 {view v2 is circularly defined}}",
      "548: db close",
      "549: sqlite3 db test.db",
      "551: do_catchsql_test 23.3 {",
      "552:   ALTER TABLE v0 RENAME TO t3 ;",
      "553: } {1 {error in view v2: view v2 is circularly defined}}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6a1bfc9a6d5b2367a84d367290d3bf5dba708a16",
      "candidate_info": {
        "commit_hash": "6a1bfc9a6d5b2367a84d367290d3bf5dba708a16",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/6a1bfc9a6d5b2367a84d367290d3bf5dba708a16",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/os_unix.c"
        ],
        "message": "Changes to the unix VFS that allegedly enable it to build of Fuchsia. We have no way of testing this.\n\nFossilOrigin-Name: be21a6416d47ff7db995006a0422b745044d9b8bb5bad3c53342aa6e2e524771",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/os_unix.c||src/os_unix.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: af84774d1eebcfe6a61b564b4edf280ad3c3a93f39b7f70b6fcc56f7bbdfb9eb",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/os_unix.c||src/os_unix.c": [
          "File: src/os_unix.c -> src/os_unix.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7822:     UNIXVFS(\"unix\",          autolockIoFinder ),",
          "7823: #elif OS_VXWORKS",
          "7824:     UNIXVFS(\"unix\",          vxworksIoFinder ),",
          "7825: #else",
          "7826:     UNIXVFS(\"unix\",          posixIoFinder ),",
          "7827: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7825: #elif __Fuchsia__",
          "7827:     UNIXVFS(\"unix\",          dotlockIoFinder ),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9942ef0d95c5a34bec24b669f454fc157bbf8eee",
      "candidate_info": {
        "commit_hash": "9942ef0d95c5a34bec24b669f454fc157bbf8eee",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/9942ef0d95c5a34bec24b669f454fc157bbf8eee",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "src/insert.c",
          "src/sqliteInt.h"
        ],
        "message": "STORED columns can now reference other STORED columns, in any order, as long as there are not loops.\n\nFossilOrigin-Name: 0d236698e64b2a4b46f91a25279c406e0bf392fe66116678456f0a034c11d7b4",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "src/insert.c||src/insert.c",
          "src/sqliteInt.h||src/sqliteInt.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4ad66af04a654d92711d2d056ce8f35cd21eac4b99fb8d78be1a314620b6d29e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3577:       }",
          "3578:       if( iTab<0 ){",
          "3579:         if( pParse->iSelfTab<0 ){",
          "3582:           assert( pExpr->iColumn>=XN_ROWID );",
          "3583:           assert( pExpr->iColumn<pExpr->y.pTab->nCol );",
          "3589:             sqlite3VdbeAddOp1(v, OP_RealAffinity, target);",
          "3590:             return target;",
          "3591:           }else{",
          "3593:           }",
          "3594:         }else{",
          "",
          "[Removed Lines]",
          "3581:           assert( pExpr->y.pTab!=0 );",
          "3584:           if( pExpr->iColumn>=0",
          "3585:             && pExpr->y.pTab->aCol[pExpr->iColumn].affinity==SQLITE_AFF_REAL",
          "3586:           ){",
          "3587:             sqlite3VdbeAddOp2(v, OP_SCopy, pExpr->iColumn - pParse->iSelfTab,",
          "3588:                               target);",
          "3592:             return pExpr->iColumn - pParse->iSelfTab;",
          "",
          "[Added Lines]",
          "3586:           Column *pCol;",
          "3587:           Table *pTab = pExpr->y.pTab;",
          "3588:           int iSrc;",
          "3589:           assert( pTab!=0 );",
          "3592:           if( pExpr->iColumn<0 ){",
          "3593:             return -1-pParse->iSelfTab;",
          "3594:           }",
          "3595:           pCol = pTab->aCol + pExpr->iColumn;",
          "3596:           iSrc = sqlite3ColumnOfTable(pTab, pExpr->iColumn) - pParse->iSelfTab;",
          "3597: #ifndef SQLITE_OMIT_GENERATED_COLUMNS",
          "3598:           if( pCol->colFlags & COLFLAG_GENERATED ){",
          "3599:             if( pCol->colFlags & COLFLAG_BUSY ){",
          "3600:               sqlite3ErrorMsg(pParse, \"generated column loop on \\\"%s\\\"\",",
          "3601:                               pCol->zName);",
          "3602:               return 0;",
          "3603:             }",
          "3604:             pCol->colFlags |= COLFLAG_BUSY;",
          "3605:             if( pCol->colFlags & COLFLAG_VIRTUAL ){",
          "3606:               target = sqlite3ExprCodeTarget(pParse, pCol->pDflt, target);",
          "3607:             }else{",
          "3608:               target = iSrc;",
          "3609:               if( pCol->colFlags & COLFLAG_NOTAVAIL ){",
          "3610:                 sqlite3ExprCode(pParse, pCol->pDflt, iSrc);",
          "3611:               }",
          "3612:             }",
          "3613:             pCol->colFlags &= ~(COLFLAG_BUSY|COLFLAG_NOTAVAIL);",
          "3614:             return target;",
          "3615:           }else",
          "3617:           if( pCol->affinity==SQLITE_AFF_REAL ){",
          "3618:             sqlite3VdbeAddOp2(v, OP_SCopy, iSrc, target);",
          "3622:             return iSrc;",
          "",
          "---------------"
        ],
        "src/insert.c||src/insert.c": [
          "File: src/insert.c -> src/insert.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "216: ){",
          "217:   int i;",
          "218:   pParse->iSelfTab = -iRegStore;",
          "219:   for(i=0; i<pTab->nCol; i++, iRegStore++){",
          "220:     u32 colFlags = pTab->aCol[i].colFlags;",
          "221:     if( (colFlags & COLFLAG_VIRTUAL)!=0 ){",
          "223:       iRegStore--;",
          "226:       sqlite3ExprCode(pParse, pTab->aCol[i].pDflt, iRegStore);",
          "227:     }",
          "228:   }",
          "229:   pParse->iSelfTab = 0;",
          "",
          "[Removed Lines]",
          "224:     }else if( (colFlags & COLFLAG_STORED)!=0 ){",
          "",
          "[Added Lines]",
          "222:   for(i=0; i<pTab->nCol; i++){",
          "223:     if( pTab->aCol[i].colFlags & COLFLAG_STORED ){",
          "224:       pTab->aCol[i].colFlags |= COLFLAG_NOTAVAIL;",
          "225:     }",
          "226:   }",
          "238:     }else if( (colFlags & COLFLAG_NOTAVAIL)!=0 ){",
          "241:       colFlags &= ~COLFLAG_NOTAVAIL;",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h"
        ]
      }
    },
    {
      "candidate_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
      "candidate_info": {
        "commit_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8428b3b437569338a9d1e10c4cd8154acbe33089",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c"
        ],
        "message": "Continuation of [e2bddcd4c55ba3cb]: Add another spot where it is necessary to abort early due to prior errors in sqlite3WindowRewrite().\n\nFossilOrigin-Name: cba2a2a44cdf138a629109bb0ad088ed4ef67fc66bed3e0373554681a39615d2",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3d4c0bf8904135fa68c75801bfa738715cacc3b19dc8ad6ef550b11798d4b121",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2809:     }",
          "2810:   #endif",
          "2811:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2812:   if( pParse->nErr ) goto multi_select_end;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f4d9c9822df99cbf29b49a3af6f183aa4992fb36",
      "candidate_info": {
        "commit_hash": "f4d9c9822df99cbf29b49a3af6f183aa4992fb36",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f4d9c9822df99cbf29b49a3af6f183aa4992fb36",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c"
        ],
        "message": "Remove a faulty testcase() macro.\n\nFossilOrigin-Name: 80124ae55246b79023d23d3f55487ac3c0b40e8ff301c5daf4dd0631de8ddb29",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e8e9f77d52974f6ba0a536d05837b280a996745deb3a2169bb29379f10e49df4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5112:     case TK_IN:",
          "5113:     case TK_FUNCTION:",
          "5114:       testcase( pExpr->op==TK_ISNOT );",
          "5116:       testcase( pExpr->op==TK_ISNULL );",
          "5117:       testcase( pExpr->op==TK_NOTNULL );",
          "5118:       testcase( pExpr->op==TK_IS );",
          "",
          "[Removed Lines]",
          "5115:       testcase( pExpr->op==TK_NOT );",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "37eca05112b7d3d87325ea36fb4bca0f419c95f8",
      "candidate_info": {
        "commit_hash": "37eca05112b7d3d87325ea36fb4bca0f419c95f8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/37eca05112b7d3d87325ea36fb4bca0f419c95f8",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/wapptest.tcl"
        ],
        "message": "Tweaks to wapptest.tcl: Ensure that the \"Debug\" checkbox is disabled unless the app is in \"config\" state, and have Debug variants run \"test\" instead of \"fulltest\".\n\nFossilOrigin-Name: dd248c186a157b5ed60bbdae669b31237b8354c1a7e6ed64d377904043bd57ee",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/wapptest.tcl||test/wapptest.tcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 56b664185e3e56ad22e0c16a5b946fc8204d4d33221b6b4269d6d650dfd9969c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/wapptest.tcl||test/wapptest.tcl": [
          "File: test/wapptest.tcl -> test/wapptest.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "135:         regsub -all {fulltest[a-z]*} $xtarget test xtarget",
          "136:         if {$debug_idx<0} {",
          "137:           lappend G(test_array) [",
          "139:           ]",
          "140:         } else {",
          "141:           lappend G(test_array) [",
          "",
          "[Removed Lines]",
          "138:             dict create config $config-(Debug) target $target",
          "",
          "[Added Lines]",
          "138:             dict create config $config-(Debug) target $xtarget",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "608:   if {$script != \"config.js\"} {",
          "609:     wapp-subst {",
          "610:       var lElem = \\[\"control_platform\", \"control_test\",",
          "612:       \\];",
          "613:       lElem.forEach(function(e) {",
          "614:         var elem = document.getElementById(e);",
          "",
          "[Removed Lines]",
          "611:           \"control_tcl\", \"control_keep\", \"control_msvc\"",
          "",
          "[Added Lines]",
          "611:           \"control_tcl\", \"control_keep\", \"control_msvc\",",
          "612:           \"control_debug\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}