{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "da908364a8ece7186f408eb1307ecf54ac2a76a7",
      "candidate_info": {
        "commit_hash": "da908364a8ece7186f408eb1307ecf54ac2a76a7",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/da908364a8ece7186f408eb1307ecf54ac2a76a7",
        "files": [
          "lib/http.js",
          "lib/https.js",
          "lib/tls.js"
        ],
        "message": "tls http https: don't pollute user's `options` object",
        "before_after_code_files": [
          "lib/http.js||lihttp.js",
          "lib/https.js||lihttps.js",
          "lib/tls.js||litls.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/http.js||lihttp.js": [
          "File: lib/http.js -> lihttp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1076: function ClientRequest(options, cb) {",
          "1077:   var self = this;",
          "1078:   OutgoingMessage.call(self);",
          "1085:   if (options.setHost === undefined) {",
          "1087:   }",
          "1089:   self.socketPath = options.socketPath;",
          "",
          "[Removed Lines]",
          "1079:   self.agent = options.agent;",
          "1080:   options.defaultPort = options.defaultPort || 80;",
          "1082:   options.port = options.port || options.defaultPort;",
          "1083:   options.host = options.hostname || options.host || 'localhost';",
          "1086:     options.setHost = true;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1102:         self.setHeader(key, options.headers[key]);",
          "1103:       }",
          "1104:     }",
          "1109:       }",
          "1110:       this.setHeader('Host', hostHeader);",
          "1111:     }",
          "",
          "[Removed Lines]",
          "1105:     if (options.host && !this.getHeader('host') && options.setHost) {",
          "1106:       var hostHeader = options.host;",
          "1107:       if (options.port && +options.port !== options.defaultPort) {",
          "1108:         hostHeader += ':' + options.port;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1143:     self._last = false;",
          "1144:     self.shouldKeepAlive = true;",
          "1146:   } else {",
          "1148:     self._last = true;",
          "1149:     self.shouldKeepAlive = false;",
          "1150:     if (options.createConnection) {",
          "1152:     } else {",
          "1154:     }",
          "1155:     self.onSocket(conn);",
          "1156:   }",
          "",
          "[Removed Lines]",
          "1145:     self.agent.addRequest(self, options.host, options.port);",
          "1151:       var conn = options.createConnection(options.port, options.host, options);",
          "1153:       var conn = net.createConnection(options.port, options.host);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1426:     throw new Error('Protocol:' + options.protocol + ' not supported.');",
          "1427:   }",
          "1433:   return new ClientRequest(options, cb);",
          "1434: };",
          "1436: exports.get = function(options, cb) {",
          "1438:   var req = exports.request(options, cb);",
          "1439:   req.end();",
          "1440:   return req;",
          "",
          "[Removed Lines]",
          "1429:   if (options.agent === undefined) {",
          "1430:     options.agent = globalAgent;",
          "1431:   }",
          "1437:   options.method = 'GET';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/https.js||lihttps.js": [
          "File: lib/https.js -> lihttps.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "83: };",
          "85: exports.get = function(options, cb) {",
          "87:   var req = exports.request(options, cb);",
          "88:   req.end();",
          "89:   return req;",
          "",
          "[Removed Lines]",
          "86:   options.method = 'GET';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/tls.js||litls.js": [
          "File: lib/tls.js -> litls.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1063: exports.connect = function(/* [port, host], options, cb */) {",
          "1066:   if (typeof arguments[0] === 'object') {",
          "1067:     options = arguments[0];",
          "1068:   } else if (typeof arguments[1] === 'object') {",
          "1069:     options = arguments[1];",
          "1071:   } else if (typeof arguments[2] === 'object') {",
          "1072:     options = arguments[2];",
          "1075:   } else {",
          "1078:     if (typeof arguments[0] === 'number') {",
          "1080:     }",
          "1081:     if (typeof arguments[1] === 'string') {",
          "1083:     }",
          "1084:   }",
          "1086:   if (typeof arguments[arguments.length - 1] === 'function') {",
          "1087:     cb = arguments[arguments.length - 1];",
          "1088:   }",
          "",
          "[Removed Lines]",
          "1064:   var options = {}, cb;",
          "1070:     options.port = arguments[0];",
          "1073:     options.port = arguments[0];",
          "1074:     options.host = arguments[1];",
          "1079:       options.port = arguments[0];",
          "1082:       options.host = arguments[1];",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0cebfc8ddb509fbf5f865bb660b73e96680b3f65",
      "candidate_info": {
        "commit_hash": "0cebfc8ddb509fbf5f865bb660b73e96680b3f65",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/0cebfc8ddb509fbf5f865bb660b73e96680b3f65",
        "files": [
          "tools/test.py"
        ],
        "message": "tests: kill process group on failure\n\nTest suite is often leaving `stray` processes on failure. They are\nharmless, but may cause future test runs fail because those `stray`\nprocesses are occupying `common.PORT` or due to some other reasons.\n\nKilling whole process group on test suite failure should help in such\ncases.",
        "before_after_code_files": [
          "tools/test.py||tools/test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/test.py||tools/test.py": [
          "File: tools/test.py -> tools/test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1439: if __name__ == '__main__':",
          "",
          "[Removed Lines]",
          "1440:   sys.exit(Main())",
          "",
          "[Added Lines]",
          "1440:   ret = 0",
          "1441:   try:",
          "1442:     ret = Main()",
          "1443:     sys.exit(ret)",
          "1444:   finally:",
          "1445:     if ret and not utils.IsWindows():",
          "1446:       os.killpg(0, signal.SIGKILL)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4fdec07bd81a604762218a8e9d0649fb5cef7b6c",
      "candidate_info": {
        "commit_hash": "4fdec07bd81a604762218a8e9d0649fb5cef7b6c",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/4fdec07bd81a604762218a8e9d0649fb5cef7b6c",
        "files": [
          "deps/v8/src/ia32/code-stubs-ia32.cc",
          "deps/v8/src/objects.h"
        ],
        "message": "Land number collision fix for v8 3.6 by Erik Corry\n\nUpdate with fixes from: http://codereview.chromium.org/9190001/",
        "before_after_code_files": [
          "deps/v8/src/ia32/code-stubs-ia32.cc||deps/v8/src/ia32/code-stubs-ia32.cc",
          "deps/v8/src/objects.h||deps/v8/src/objects.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/src/ia32/code-stubs-ia32.cc||deps/v8/src/ia32/code-stubs-ia32.cc": [
          "File: deps/v8/src/ia32/code-stubs-ia32.cc -> deps/v8/src/ia32/code-stubs-ia32.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "5614:     __ mov(scratch, Operand::StaticArray(scratch,",
          "5615:                                          times_pointer_size,",
          "5616:                                          roots_address));",
          "5617:     __ add(scratch, Operand(character));",
          "5618:     __ mov(hash, scratch);",
          "5619:     __ shl(scratch, 10);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5617:     __ SmiUntag(scratch);",
          "",
          "---------------"
        ],
        "deps/v8/src/objects.h||deps/v8/src/objects.h": [
          "File: deps/v8/src/objects.h -> deps/v8/src/objects.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2535:   inline uint32_t Hash(Key key) {",
          "2536:     if (Shape::UsesSeed) {",
          "2540:     } else {",
          "2541:       return Shape::Hash(key);",
          "2542:     }",
          "",
          "[Removed Lines]",
          "2539:       return Shape::SeededHash(key, map()->heap()->HashSeed());",
          "",
          "[Added Lines]",
          "2537:       return Shape::SeededHash(key, GetHeap()->HashSeed());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2545:   inline uint32_t HashForObject(Key key, Object* object) {",
          "2546:     if (Shape::UsesSeed) {",
          "2550:     } else {",
          "2551:       return Shape::HashForObject(key, object);",
          "2552:     }",
          "",
          "[Removed Lines]",
          "2549:       return Shape::SeededHashForObject(key, map()->heap()->HashSeed(), object);",
          "",
          "[Added Lines]",
          "2545:       return Shape::SeededHashForObject(key, GetHeap()->HashSeed(), object);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "75c6255d167a885de700c1fe71681514ac979d36",
      "candidate_info": {
        "commit_hash": "75c6255d167a885de700c1fe71681514ac979d36",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/75c6255d167a885de700c1fe71681514ac979d36",
        "files": [
          "deps/uv/src/unix/ev/ev.c"
        ],
        "message": "deps: remove libuv sanity check\n\nRemove reference count check. Unbreaks test suite. This needs to be addressed.",
        "before_after_code_files": [
          "deps/uv/src/unix/ev/ev.c||deps/uv/src/unix/ev/ev.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/src/unix/ev/ev.c||deps/uv/src/unix/ev/ev.c": [
          "File: deps/uv/src/unix/ev/ev.c -> deps/uv/src/unix/ev/ev.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2554: ev_unref (EV_P)",
          "2555: {",
          "2556:   --activecnt;",
          "2558: }",
          "2560: void",
          "",
          "[Removed Lines]",
          "2557:   if (activecnt < 0) abort();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d3fa0dcb89d986f267b2394d347ef30f6a03dc56",
      "candidate_info": {
        "commit_hash": "d3fa0dcb89d986f267b2394d347ef30f6a03dc56",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/d3fa0dcb89d986f267b2394d347ef30f6a03dc56",
        "files": [
          "deps/openssl/openssl.gyp"
        ],
        "message": "openssl: disable harmless compiler warnings\n\nCompile with -Wno-missing-field-initializers and -Wno-old-style-declaration.\nThe warnings are harmless but they clutter the build output a great deal.",
        "before_after_code_files": [
          "deps/openssl/openssl.gyp||deps/openssl/openssl.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/openssl/openssl.gyp||deps/openssl/openssl.gyp": [
          "File: deps/openssl/openssl.gyp -> deps/openssl/openssl.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "676:             'OPENSSLDIR=\"/etc/ssl\"',",
          "677:             'TERMIOS',",
          "678:           ],",
          "679:         }],",
          "680:         ['OS==\"solaris\"', {",
          "681:           'defines': ['__EXTENSIONS__'],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "679:           'cflags': [",
          "680:             '-Wno-missing-field-initializers',",
          "681:             '-Wno-old-style-declaration',",
          "682:           ],",
          "",
          "---------------"
        ]
      }
    }
  ]
}