{
  "cve_id": "CVE-2019-19646",
  "cve_desc": "pragma.c in SQLite through 3.30.1 mishandles NOT NULL in an integrity_check PRAGMA command in certain cases of generated columns.",
  "repo": "sqlite/sqlite",
  "patch_hash": "ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
  "patch_info": {
    "commit_hash": "ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/pragma.c",
      "test/gencol1.test"
    ],
    "message": "Fix the NOT NULL verification logic in PRAGMA integrity_check so that it works for generated columns whose value is the result of a comparison operator. Ticket [bd8c280671ba44a7]\n\nFossilOrigin-Name: f3b39c71b88cb6721f443de56cdce4c08252453a5e340b00a2bd88dc10c42400",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/pragma.c||src/pragma.c",
      "test/gencol1.test||test/gencol1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: e3398c5ffb060b2b26334b8598e2c63953741e2d6f5124dbd6bdfc8e94742539",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/pragma.c||src/pragma.c": [
      "File: src/pragma.c -> src/pragma.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1596:           if( j==pTab->iPKey ) continue;",
      "1597:           if( pTab->aCol[j].notNull==0 ) continue;",
      "1598:           sqlite3ExprCodeGetColumnOfTable(v, pTab, iDataCur, j, 3);",
      "1600:           jmp2 = sqlite3VdbeAddOp1(v, OP_NotNull, 3); VdbeCoverage(v);",
      "1601:           zErr = sqlite3MPrintf(db, \"NULL value in %s.%s\", pTab->zName,",
      "1602:                               pTab->aCol[j].zName);",
      "",
      "[Removed Lines]",
      "1599:           sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);",
      "",
      "[Added Lines]",
      "1599:           if( sqlite3VdbeGetOp(v,-1)->opcode==OP_Column ){",
      "1600:             sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);",
      "1601:           }",
      "",
      "---------------"
    ],
    "test/gencol1.test||test/gencol1.test": [
      "File: test/gencol1.test -> test/gencol1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "328:   INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0)",
      "329: } {1 {FOREIGN KEY constraint failed}}",
      "331: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "331: # 2019-12-09 ticket bd8c280671ba44a7",
      "332: # With generated columns, the sqlite3ExprGetColumnOfTable() routine might",
      "333: # generate a code sequence that does not end with OP_Column.  So check to",
      "334: # make sure that the last instruction generated is an OP_column prior to",
      "335: # applying the OPFLAG_TYPEOFARG optimization to NOT NULL checks in the",
      "336: # PRAGMA integrity_check code.",
      "337: #",
      "338: sqlite3 db :memory:",
      "339: do_execsql_test gencol1-12.10 {",
      "340:   CREATE TABLE t0 (c0, c1 NOT NULL AS (c0==0));",
      "341:   INSERT INTO t0(c0) VALUES (0);",
      "342:   PRAGMA integrity_check;",
      "343: } {ok}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "dcc427cf19603d5060742745dfca76352f9ced43",
      "candidate_info": {
        "commit_hash": "dcc427cf19603d5060742745dfca76352f9ced43",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/dcc427cf19603d5060742745dfca76352f9ced43",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c",
          "test/corruptL.test"
        ],
        "message": "Add an extra test for database corruption to defragmentPage().\n\nFossilOrigin-Name: 80e951fce3e5aaa224c8dba6449832d2efabcdc24e86eb6b7833f85cf08ecc00",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c",
          "test/corruptL.test||test/corruptL.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3649a77b79001ea6c5defe882f9934521b20b9d36aab26d03b5d42006c7fa228",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1455:           if( iFree2+sz2 > usableSize ) return SQLITE_CORRUPT_PAGE(pPage);",
          "1456:           memmove(&data[iFree+sz+sz2], &data[iFree+sz], iFree2-(iFree+sz));",
          "1457:           sz += sz2;",
          "1458:         }",
          "1459:         cbrk = top+sz;",
          "1460:         assert( cbrk+(iFree-top) <= usableSize );",
          "1461:         memmove(&data[cbrk], &data[top], iFree-top);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1458:         }else if( iFree+sz>usableSize ){",
          "1459:           return SQLITE_CORRUPT_PAGE(pPage);",
          "",
          "---------------"
        ],
        "test/corruptL.test||test/corruptL.test": [
          "File: test/corruptL.test -> test/corruptL.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "727:   SELECT * FROM sqlite_master;",
          "728: } {1 {malformed database schema (t1x1) - invalid rootpage}}",
          "730: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "730: #-------------------------------------------------------------------------",
          "731: reset_db",
          "732: do_test 8.0 {",
          "733:   sqlite3 db {}",
          "734:   db deserialize [decode_hexdb {",
          "735: | size 2048 pagesize 512 filename a.db",
          "736: | page 1 offset 0",
          "737: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "738: |     16: 02 00 01 01 00 40 20 20 ff ff 00 0c 00 00 00 07   .....@  ........",
          "739: |     32: 0b 00 00 00 00 00 00 00 00 00 00 08 9c 00 00 04   ................",
          "740: |     48: 00 00 00 e0 09 00 00 01 00 00 00 01 00 00 00 00   ................",
          "741: |     64: 00 00 00 00 f2 ff 00 00 00 00 00 00 00 00 00 00   ................",
          "742: |     80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0c   ................",
          "743: |     96: 00 2e 2c 50 0d 00 00 00 06 01 06 00 01 da 01 b0   ..,P............",
          "744: |    112: 05 56 01 86 01 2a 01 06 00 00 00 00 00 06 00 00   .V...*..........",
          "745: |    128: 00 ff 00 00 ff ff ff e1 00 00 00 00 00 00 00 00   ................",
          "746: |    144: 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00   ................",
          "747: |    160: 00 00 00 00 00 00 00 00 f2 00 00 00 00 00 00 00   ................",
          "748: |    176: 00 00 f9 ff ff ff ff ff ff ff 00 00 00 5f 00 fb   ............._..",
          "749: |    192: 00 00 00 00 00 00 00 00 00 e1 ff 00 00 00 00 00   ................",
          "750: |    208: 00 00 10 00 00 00 00 00 1e 00 00 00 fe 00 00 00   ................",
          "751: |    224: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ca 00   ................",
          "752: |    240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 35   ...............5",
          "753: |    256: 00 00 00 00 ef ff 22 07 06 17 11 11 01 30 39 38   .............098",
          "754: |    272: 62 6c 65 74 38 38 74 04 43 52 45 41 54 45 20 54   blet88t.CREATE T",
          "755: |    288: 41 42 4c 45 20 74 34 28 87 29 2a 06 06 17 13 11   ABLE t4(.)*.....",
          "756: |    304: 01 3f 69 4f 64 65 78 74 33 78 74 40 05 43 52 45   .?iOdext3xt@.CRE",
          "757: |    320: 41 54 45 20 49 6e 44 45 58 20 74 33 78 20 4f 4e   ATE InDEX t3x ON",
          "758: |    336: 20 74 33 28 78 29 2e 04 06 17 15 11 01 45 69 6e    t3(x).......Ein",
          "759: |    352: 00 04 00 00 34 63 64 74 3d 05 43 52 45 41 54 45   ....4cdt=.CREATE",
          "760: |    368: 20 49 4e 44 45 58 20 63 74 64 32 20 4f 4e 20 74    INDEX ctd2 ON t",
          "761: |    384: 32 28 0a 0c 44 29 28 05 06 17 11 11 01 3d 74 6c   2(..D)(......=tl",
          "762: |    400: 62 61 d4 65 33 74 33 04 43 52 45 41 54 45 20 54   ba.e3t3.CREATE T",
          "763: |    416: 41 42 4c 45 20 74 33 28 63 2c 78 2c 65 2c 66 29   ABLE t3(c,x,e,f)",
          "764: |    432: 28 02 06 17 11 11 01 3d 74 61 62 6c 65 74 32 74   (......=tablet2t",
          "765: |    448: 32 03 43 52 45 41 54 45 20 54 41 42 4c 45 20 74   2.CREATE TABLE t",
          "766: |    464: 32 28 63 2c 64 2c 65 2c 66 29 24 01 06 17 11 11   2(c,d,e,f)$.....",
          "767: |    480: 01 35 74 60 62 6c 65 74 31 74 31 02 43 52 45 41   .5t`blet1t1.CREA",
          "768: |    496: 54 45 20 54 41 42 4c 45 20 74 30 28 61 2c 62 29   TE TABLE t0(a,b)",
          "769: | page 2 offset 512",
          "770: |      0: 0d 00 ff 11 04 01 cf 80 01 fa 01 09 00 de 01 cf   ................",
          "771: |     16: 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00   ................",
          "772: |     32: 00 00 08 00 00 00 00 00 00 11 00 00 00 00 00 13   ................",
          "773: |     48: 00 00 00 00 00 00 00 00 00 00 00 01 00 e0 ff ff   ................",
          "774: |     64: ff d2 ff ff ff 00 f8 ff ff ff 00 00 00 00 00 00   ................",
          "775: |     80: 00 ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "776: |     96: 00 00 00 00 ff de 00 00 00 00 00 00 00 00 00 00   ................",
          "777: |    112: 00 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00   .............@..",
          "778: |    128: 2a 00 00 00 00 00 00 00 00 f7 00 00 00 00 00 00   *...............",
          "779: |    144: 00 00 00 00 00 21 00 00 00 00 00 00 00 00 00 00   .....!..........",
          "780: |    160: 01 64 00 00 00 00 04 80 ff ff ff 00 00 00 00 00   .d..............",
          "781: |    176: 00 00 00 00 00 00 00 00 1f 00 00 00 00 00 00 00   ................",
          "782: |    192: 00 00 40 00 00 00 00 00 00 00 00 00 00 00 00 00   ..@.............",
          "783: |    208: b5 00 00 00 00 00 00 40 00 00 00 00 00 00 00 00   .......@........",
          "784: |    224: 00 00 00 f6 00 ee ff ff ff 00 00 00 00 00 00 00   ................",
          "785: |    272: f2 00 00 00 00 00 00 00 00 00 f9 ff ff ff ff ff   ................",
          "786: |    288: ff ff 00 00 00 5f 00 fb 00 00 00 00 00 00 00 00   ....._..........",
          "787: |    320: 1e 00 00 00 fe 00 00 00 00 00 00 00 00 00 00 00   ................",
          "788: |    336: 00 00 00 00 00 00 ca 00 00 00 00 00 00 00 ff ec   ................",
          "789: |    352: 00 00 00 00 00 00 00 32 00 00 00 00 ef ff 22 07   .......2........",
          "790: |    368: 06 17 11 11 01 30 74 61 62 6c 65 74 38 38 74 04   .....0tablet88t.",
          "791: |    384: 43 52 45 41 54 45 20 54 41 42 4c 45 20 8c cb d7   CREATE TABLE ...",
          "792: |    400: 78 d6 d5 f9 f9 17 13 11 01 3f 69 4f 64 65 78 74   x........?iOdext",
          "793: |    416: 33 78 74 33 05 43 52 45 41 54 45 26 49 6e 44 45   3xt3.CREATE&InDE",
          "794: |    432: 58 20 74 33 78 00 00 00 00 00 00 00 00 00 00 00   X t3x...........",
          "795: |    464: 00 00 00 00 00 13 76 65 6e 65 69 67 68 74 13 03   ......veneight..",
          "796: |    480: 03 40 07 07 15 00 54 45 20 49 4e 44 45 58 20 74   .@....TE INDEX t",
          "797: |    496: 31 63 64 20 4f 4e 20 74 ce d7 f5 f0 44 09 01 02   1cd ON t....D...",
          "798: | page 3 offset 1024",
          "799: |      0: 0d 00 00 00 48 01 54 00 01 f6 e2 ec 01 c5 01 aa   ....H.T.........",
          "800: |     16: 30 34 28 87 29 32 06 f5 16 13 11 01 8e 61 24 64   04(.)2.......a$d",
          "801: |     32: 65 78 74 37 78 1f 33 6d 6d 6d 6d 6d 00 00 04 06   ext7x.3mmmmm....",
          "802: |     48: 6d 41 6d 6d 6e 6d 6d 00 00 02 00 6d 6d 6d 6d 6d   mAmmnmm....mmmmm",
          "803: |     64: 15 11 01 45 45 45 45 45 45 45 45 45 45 45 45 45   ...EEEEEEEEEEEEE",
          "804: |     80: 45 45 45 45 45 45 45 45 45 45 45 00 45 63 74 64   EEEEEEEEEEE.Ectd",
          "805: |     96: 34 20 4f 4e 20 61 62 6c 5d 74 38 38 74 04 43 52   4 ON abl]t88t.CR",
          "806: |    112: 45 41 54 45 20 54 41 42 4c 45 20 74 34 28 87 29   EATE TABLE t4(.)",
          "807: |    128: 2a 06 06 13 13 01 00 00 00 4f 64 6e 78 74 33 44   *........Odnxt3D",
          "808: |    144: 74 13 05 43 52 45 41 54 45 20 49 6e 44 45 00 00   t..CREATE InDE..",
          "809: |    160: 00 00 00 00 00 00 00 f9 ff ff ff ff ff ff ff 00   ................",
          "810: |    176: 00 00 5f 00 fb 00 00 2d 00 00 00 00 00 00 00 00   .._....-........",
          "811: |    192: 00 00 00 00 00 00 00 00 00 00 00 00 00 1e 00 00   ................",
          "812: |    208: 00 fe 00 00 00 00 17 15 11 01 45 69 6e 64 65 2e   ..........Einde.",
          "813: |    224: 5b 38 63 64 74 3d 05 43 52 45 41 54 45 20 49 4e   [8cdt=.CREATE IN",
          "814: |    240: 44 45 58 20 63 20 64 32 20 4f 4e 20 74 32 28 0a   DEX c d2 ON t2(.",
          "815: |    256: 0c 44 32 05 00 10 00 00 11 11 3d 74 6c 62 61 d4   .D2.......=tlba.",
          "816: |    272: 65 33 74 33 04 43 52 45 41 54 45 20 54 41 42 4c   e3t3.CREATE TABL",
          "817: |    288: 45 20 74 36 ff ff 7f ff 43 52 45 41 54 45 20 49   E t6....CREATE I",
          "818: |    304: 73 71 6c 69 74 65 5f 73 65 71 75 65 6e 63 65 28   sqlite_sequence(",
          "819: |    320: 0a 0c 44 29 28 05 06 17 11 11 01 3d 74 6c 62 61   ..D)(......=tlba",
          "820: |    336: 20 00 00 00 33 04 43 52 45 41 54 45 20 54 41 42    ...3.CREATE TAB",
          "821: |    352: 4c 45 20 74 33 28 63 2c 78 2c 65 2c 66 29 28 02   LE t3(c,x,e,f)(.",
          "822: |    368: 06 00 00 7f ff 40 41 54 45 20 49 6e 44 45 58 20   .....@ATE InDEX",
          "823: |    384: 74 33 78 20 4f 4e 20 74 31 28 78 29 2e 04 06 17   t3x ON t1(x)....",
          "824: |    400: 15 11 01 45 69 6e 64 65 2e 74 34 63 64 74 3d 05   ...Einde.t4cdt=.",
          "825: |    416: 00 00 00 00 00 00 00 00 00 00 00 4d 00 00 00 00   ...........M....",
          "826: |    432: 01 00 00 00 00 00 00 05 00 00 10 00 00 00 00 00   ................",
          "827: |    448: 00 01 00 00 00 00 01 00 00 00 00 07 40 14 00 00   ............@...",
          "828: |    464: 00 00 21 00 40 18 00 00 00 00 00 00 40 1c 00 00   ..!.@.......@...",
          "829: |    480: 00 00 ff ff ff 00 00 00 5f 00 fb 00 00 2d 00 00   ........_....-..",
          "830: |    496: 00 00 00 1e 00 00 00 fe 00 00 64 00 00 ff fb 02   ..........d.....",
          "831: | page 4 offset 1536",
          "832: |      0: 0d 00 39 00 00 02 00 00 00 00 00 00 00 00 00 00   ..9.............",
          "833: | end a.db",
          "834: }]} {}",
          "837: do_catchsql_test 8.1 {",
          "838:   INSERT INTO t3 SELECT * FROM t2;",
          "839: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1b16216f9eb297ddebc36fd83d3c3816baad0163",
      "candidate_info": {
        "commit_hash": "1b16216f9eb297ddebc36fd83d3c3816baad0163",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1b16216f9eb297ddebc36fd83d3c3816baad0163",
        "files": [
          "ext/misc/dbdata.c",
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Fix building the shell with SQLITE_OMIT_VIRTUAL_TABLE. And without SQLITE_ENABLE_DBPAGE_VTAB.\n\nFossilOrigin-Name: 425d708c3908fe74f69b62e6dd1722a0018088977e12f14b312dad1df0fbb804",
        "before_after_code_files": [
          "ext/misc/dbdata.c||ext/misc/dbdata.c",
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/misc/dbdata.c||ext/misc/dbdata.c": [
          "File: ext/misc/dbdata.c -> ext/misc/dbdata.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "75: #include \"sqlite3ext.h\"",
          "77: typedef unsigned char u8;",
          "80: #endif",
          "81: SQLITE_EXTENSION_INIT1",
          "",
          "[Removed Lines]",
          "78: typedef unsigned long u32;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "557:         if( nPayload>nLocal ){",
          "558:           sqlite3_int64 nRem = nPayload - nLocal;",
          "560:           while( nRem>0 ){",
          "561:             u8 *aOvfl = 0;",
          "562:             int nOvfl = 0;",
          "",
          "[Removed Lines]",
          "559:           u32 pgnoOvfl = get_uint32(&pCsr->aPage[iOff]);",
          "",
          "[Added Lines]",
          "558:           unsigned int pgnoOvfl = get_uint32(&pCsr->aPage[iOff]);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b91d819bd16de43fc99e379da0ba9c915b0c5afc68e804a50c3c1662c1f9a740",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "948: INCLUDE ../ext/expert/sqlite3expert.h",
          "949: INCLUDE ../ext/expert/sqlite3expert.c",
          "951: INCLUDE ../ext/misc/dbdata.c",
          "953: #if defined(SQLITE_ENABLE_SESSION)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "951: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_ENABLE_DBPAGE_VTAB)",
          "953: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3576:   \".prompt MAIN CONTINUE    Replace the standard prompts\",",
          "3577:   \".quit                    Exit this program\",",
          "3578:   \".read FILE               Read input from FILE\",",
          "3579:   \".recover                 Recover as much data as possible from corrupt db.\",",
          "3580:   \".restore ?DB? FILE       Restore content of DB (default \\\"main\\\") from FILE\",",
          "3581:   \".save FILE               Write in-memory database into FILE\",",
          "3582:   \".scanstats on|off        Turn sqlite3_stmt_scanstatus() metrics on or off\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3581: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_ENABLE_DBPAGE_VTAB)",
          "3583: #endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4121:     sqlite3_fileio_init(p->db, 0, 0);",
          "4122:     sqlite3_shathree_init(p->db, 0, 0);",
          "4123:     sqlite3_completion_init(p->db, 0, 0);",
          "4124:     sqlite3_dbdata_init(p->db, 0, 0);",
          "4125: #ifdef SQLITE_HAVE_ZLIB",
          "4126:     sqlite3_zipfile_init(p->db, 0, 0);",
          "4127:     sqlite3_sqlar_init(p->db, 0, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4128: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_ENABLE_DBPAGE_VTAB)",
          "4130: #endif",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5390:   return SQLITE_ERROR;",
          "5391: }",
          "5397: static void shellPrepare(",
          "5398:   sqlite3 *db,",
          "5399:   int *pRc,",
          "",
          "[Removed Lines]",
          "5393: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_HAVE_ZLIB)",
          "",
          "[Added Lines]",
          "5399: #if !defined SQLITE_OMIT_VIRTUALTABLE",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "5465:   }",
          "5466: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5472: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_HAVE_ZLIB)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6165: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_ENABLE_DBPAGE_VTAB)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7063:     rc = shell_dbinfo_command(p, nArg, azArg);",
          "7064:   }else",
          "7066:   if( c=='r' && strncmp(azArg[0], \"recover\", n)==0 ){",
          "7067:     open_db(p, 0);",
          "7068:     rc = recoverDatabaseCmd(p, nArg, azArg);",
          "7069:   }else",
          "7071:   if( c=='d' && strncmp(azArg[0], \"dump\", n)==0 ){",
          "7072:     const char *zLike = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7077: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_ENABLE_DBPAGE_VTAB)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e0155b7af92be5eacd49d1ab94b3d8c20a3d6450",
      "candidate_info": {
        "commit_hash": "e0155b7af92be5eacd49d1ab94b3d8c20a3d6450",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e0155b7af92be5eacd49d1ab94b3d8c20a3d6450",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/windowfault.test"
        ],
        "message": "Fix a test script problem in windowfault.test.\n\nFossilOrigin-Name: 47010bf17cb080cc1c693c84d16b986ea4addf9c54bd7e22de1e0f6b555ea9d1",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/windowfault.test||test/windowfault.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 36295dcebcb5487f2a462eabb41900ac28b8e839898ef0fae0aa4730bf9b0671",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/windowfault.test||test/windowfault.test": [
          "File: test/windowfault.test -> test/windowfault.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "209:   return $ret",
          "210: }",
          "212: do_faultsim_test 9 -end 25 -faults tmpread -body {",
          "213:   execsql {",
          "214:     SELECT sum(y) OVER win FROM t",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "212: set L [db eval {SELECT 0.0 FROM t}]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "217:     )",
          "218:   }",
          "219: } -test {",
          "221: }",
          "223: catch {db close}",
          "",
          "[Removed Lines]",
          "220:   faultsim_test_result {0 {}}",
          "",
          "[Added Lines]",
          "221:   faultsim_test_result [list 0 $::L]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cd79010964231114a6e370852c28aae8adcb5dfd",
      "candidate_info": {
        "commit_hash": "cd79010964231114a6e370852c28aae8adcb5dfd",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/cd79010964231114a6e370852c28aae8adcb5dfd",
        "files": [
          "ext/fts3/fts3_write.c",
          "manifest",
          "manifest.uuid",
          "test/fts3misc.test"
        ],
        "message": "Fix a problem in the fts3 integrity-check routine causing it to report as corrupt tables that contain values with embedded 0x00 bytes.\n\nFossilOrigin-Name: 629e20c9880acc2cb9e2fa6da39a15a90483e9a8f433df29d285c23bdfb03b0b",
        "before_after_code_files": [
          "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c",
          "manifest.uuid||manifest.uuid",
          "test/fts3misc.test||test/fts3misc.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c": [
          "File: ext/fts3/fts3_write.c -> ext/fts3/fts3_write.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5244:       for(iCol=0; rc==SQLITE_OK && iCol<p->nColumn; iCol++){",
          "5245:         if( p->abNotindexed[iCol]==0 ){",
          "5246:           const char *zText = (const char *)sqlite3_column_text(pStmt, iCol+1);",
          "5248:           sqlite3_tokenizer_cursor *pT = 0;",
          "5251:           while( rc==SQLITE_OK ){",
          "",
          "[Removed Lines]",
          "5247:           int nText = sqlite3_column_bytes(pStmt, iCol+1);",
          "5250:           rc = sqlite3Fts3OpenTokenizer(p->pTokenizer, iLang, zText, nText,&pT);",
          "",
          "[Added Lines]",
          "5249:           rc = sqlite3Fts3OpenTokenizer(p->pTokenizer, iLang, zText, -1, &pT);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ccba7202b69d239724c3b589439c9c3b0e1bba237accfeb11c39d492522b8719",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts3misc.test||test/fts3misc.test": [
          "File: test/fts3misc.test -> test/fts3misc.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "226:   SELECT rowid FROM t6 WHERE t6 MATCH 'b OR \"x a\"'",
          "227: } {50001 50002 50003 50004}",
          "230: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "229: #-------------------------------------------------------------------------",
          "230: #",
          "231: reset_db",
          "232: do_execsql_test 7.0 {",
          "233:   CREATE VIRTUAL TABLE vt0 USING fts3(c0);",
          "234:   INSERT INTO vt0 VALUES (x'00');",
          "235: }",
          "236: do_execsql_test 7.1 {",
          "237:   INSERT INTO vt0(vt0) VALUES('integrity-check');",
          "238: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9252966b3c67f90e265394a597297908fccf691b",
      "candidate_info": {
        "commit_hash": "9252966b3c67f90e265394a597297908fccf691b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/9252966b3c67f90e265394a597297908fccf691b",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "New test cases in test/fuzzdata8.db.\n\nFossilOrigin-Name: 228e1087c0602470e450586499de5a3e87e266c688bc828f20e3bad2fdc65ff1",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 456ced57774a92acff23cad975b78ff0e5cbbf5204ea48599fe1761a018a92e4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}