{
  "cve_id": "CVE-2022-3299",
  "cve_desc": "A vulnerability was found in Open5GS up to 2.4.10. It has been declared as problematic. Affected by this vulnerability is an unknown functionality in the library lib/sbi/client.c of the component AMF. The manipulation leads to denial of service. The attack can be launched remotely. The name of the patch is 724fa568435dae45ef0c3a48b2aabde052afae88. It is recommended to apply a patch to fix this issue. The identifier VDB-209545 was assigned to this vulnerability.",
  "repo": "open5gs/open5gs",
  "patch_hash": "724fa568435dae45ef0c3a48b2aabde052afae88",
  "patch_info": {
    "commit_hash": "724fa568435dae45ef0c3a48b2aabde052afae88",
    "repo": "open5gs/open5gs",
    "commit_url": "https://github.com/open5gs/open5gs/commit/724fa568435dae45ef0c3a48b2aabde052afae88",
    "files": [
      "lib/sbi/client.c",
      "lib/sbi/nghttp2-server.c"
    ],
    "message": "Fixed HTTP2 crashes for random JSON data (#1769)",
    "before_after_code_files": [
      "lib/sbi/client.c||lib/sbi/client.c",
      "lib/sbi/nghttp2-server.c||lib/sbi/nghttp2-server.c"
    ]
  },
  "patch_diff": {
    "lib/sbi/client.c||lib/sbi/client.c": [
      "File: lib/sbi/client.c -> lib/sbi/client.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "45:     char *memory;",
      "46:     size_t size;",
      "48:     char *location;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "47:     bool memory_overflow;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "534:             res = resource->data.result;",
      "535:             if (res == CURLE_OK) {",
      "536:                 response = ogs_sbi_response_new();",
      "537:                 ogs_assert(response);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "537:                 ogs_log_level_e level = OGS_LOG_DEBUG;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "546:                 response->h.uri = ogs_strdup(url);",
      "547:                 ogs_assert(response->h.uri);",
      "550:                         response->status, response->h.method, response->h.uri);",
      "552:                 if (conn->memory) {",
      "",
      "[Removed Lines]",
      "549:                 ogs_debug(\"[%d:%s] %s\",",
      "",
      "[Added Lines]",
      "552:                 if (content_type)",
      "553:                     ogs_sbi_header_set(response->http.headers,",
      "554:                             OGS_SBI_CONTENT_TYPE, content_type);",
      "555:                 if (conn->location)",
      "556:                     ogs_sbi_header_set(response->http.headers,",
      "557:                             OGS_SBI_LOCATION, conn->location);",
      "559:                 if (conn->memory_overflow == true)",
      "560:                     level = OGS_LOG_ERROR;",
      "562:                 ogs_log_message(level, 0, \"[%d:%s] %s\",",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "557:                     ogs_assert(response->http.content_length);",
      "558:                 }",
      "561:                 if (response->http.content_length && response->http.content)",
      "570:             } else",
      "571:                 ogs_warn(\"[%d] %s\", res, conn->error);",
      "",
      "[Removed Lines]",
      "560:                 ogs_debug(\"RECEIVED[%d]\", (int)response->http.content_length);",
      "562:                     ogs_debug(\"%s\", response->http.content);",
      "564:                 if (content_type)",
      "565:                     ogs_sbi_header_set(response->http.headers,",
      "566:                             OGS_SBI_CONTENT_TYPE, content_type);",
      "567:                 if (conn->location)",
      "568:                     ogs_sbi_header_set(response->http.headers,",
      "569:                             OGS_SBI_LOCATION, conn->location);",
      "",
      "[Added Lines]",
      "573:                 ogs_log_message(level, 0, \"RECEIVED[%d]\",",
      "574:                         (int)response->http.content_length);",
      "576:                     ogs_log_message(level, 0, \"%s\", response->http.content);",
      "578:                 if (conn->memory_overflow == true) {",
      "579:                     ogs_sbi_response_free(response);",
      "580:                     connection_remove(conn);",
      "581:                     break;",
      "582:                 }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "727:     realsize = size * nmemb;",
      "728:     ptr = ogs_realloc(conn->memory, conn->size + realsize + 1);",
      "729:     if(!ptr) {",
      "732:         return 0;",
      "733:     }",
      "",
      "[Removed Lines]",
      "730:         ogs_fatal(\"not enough memory (realloc returned NULL)\");",
      "731:         ogs_assert_if_reached();",
      "",
      "[Added Lines]",
      "744:         conn->memory_overflow = true;",
      "746:         ogs_error(\"Overflow : conn->size[%d], realsize[%d]\",",
      "747:                     (int)conn->size, (int)realsize);",
      "748:         ogs_log_hexdump(OGS_LOG_ERROR, contents, realsize);",
      "",
      "---------------"
    ],
    "lib/sbi/nghttp2-server.c||lib/sbi/nghttp2-server.c": [
      "File: lib/sbi/nghttp2-server.c -> lib/sbi/nghttp2-server.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "83:     int32_t                 stream_id;",
      "84:     ogs_sbi_request_t       *request;",
      "86:     ogs_sbi_session_t       *session;",
      "87: } ogs_sbi_stream_t;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "85:     bool                    memory_overflow;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "791:     case NGHTTP2_DATA:",
      "793:         if (frame->hd.flags & NGHTTP2_FLAG_END_STREAM) {",
      "797:             if (request->http.content_length && request->http.content) {",
      "800:             }",
      "802:             if (server->cb(request, stream) != OGS_OK) {",
      "",
      "[Removed Lines]",
      "795:             ogs_debug(\"[%s] %s\", request->h.method, request->h.uri);",
      "798:                 ogs_debug(\"RECEIVED: %d\", (int)request->http.content_length);",
      "799:                 ogs_debug(\"%s\", request->http.content);",
      "",
      "[Added Lines]",
      "795:             ogs_log_level_e level = OGS_LOG_DEBUG;",
      "797:             if (stream->memory_overflow == true)",
      "798:                 level = OGS_LOG_ERROR;",
      "800:             ogs_log_message(level, 0,",
      "801:                     \"[%s] %s\", request->h.method, request->h.uri);",
      "804:                 ogs_log_message(level, 0,",
      "805:                         \"RECEIVED: %d\", (int)request->http.content_length);",
      "806:                 ogs_log_message(level, 0, \"%s\", request->http.content);",
      "807:             }",
      "809:             if (stream->memory_overflow == true) {",
      "810:                 ogs_error(\"[DROP] Overflow\");",
      "811:                 break;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "967:     ogs_assert(len);",
      "969:     if (request->http.content == NULL) {",
      "974:     } else {",
      "985:     }",
      "987:     memcpy(request->http.content + offset, data, len);",
      "988:     request->http.content[request->http.content_length] = '\\0';",
      "",
      "[Removed Lines]",
      "970:         request->http.content_length = len;",
      "971:         request->http.content =",
      "972:             (char*)ogs_malloc(request->http.content_length + 1);",
      "973:         ogs_assert(request->http.content);",
      "975:         offset = request->http.content_length;",
      "976:         if ((request->http.content_length + len) > OGS_HUGE_LEN) {",
      "977:             ogs_error(\"Overflow : Content-Length[%d], len[%d]\",",
      "978:                         (int)request->http.content_length, (int)len);",
      "979:             ogs_assert_if_reached();",
      "980:         }",
      "981:         request->http.content_length += len;",
      "982:         request->http.content = (char *)ogs_realloc(",
      "983:                 request->http.content, request->http.content_length + 1);",
      "984:         ogs_assert(request->http.content);",
      "",
      "[Added Lines]",
      "982:         ogs_assert(request->http.content_length == 0);",
      "983:         ogs_assert(offset == 0);",
      "985:         request->http.content = (char*)ogs_malloc(len + 1);",
      "987:         ogs_assert(request->http.content_length != 0);",
      "989:         request->http.content = (char*)ogs_realloc(",
      "990:                 request->http.content, request->http.content_length + len + 1);",
      "993:     if (!request->http.content) {",
      "994:         stream->memory_overflow = true;",
      "996:         ogs_error(\"Overflow : Content-Length[%d], len[%d]\",",
      "997:                     (int)request->http.content_length, (int)len);",
      "998:         ogs_log_hexdump(OGS_LOG_ERROR, data, len);",
      "1000:         return 0;",
      "1001:     }",
      "1003:     offset = request->http.content_length;",
      "1004:     request->http.content_length += len;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "361c3b73878f92818191c1244123ab5d60cc03e0",
      "candidate_info": {
        "commit_hash": "361c3b73878f92818191c1244123ab5d60cc03e0",
        "repo": "open5gs/open5gs",
        "commit_url": "https://github.com/open5gs/open5gs/commit/361c3b73878f92818191c1244123ab5d60cc03e0",
        "files": [
          "lib/sbi/client.c"
        ],
        "message": "[SBI] Fix invalid read beyond allocated memory (#1610)\n\nValgrind memcheck tool reports an error, of invalid read beyond the\nallocated memory.\n\nFunction \"write_cb()\" already allocates (realloc) +1 byte and\nnull-terminates the data. But the length \"conn->size\" does not contain\nthis extra null-terminated byte.\nWhen a copy of the received data is made in \"check_multi_info()\", it\ndoes not include the null character, resulting in potentially a\nnon-null terminated string.\nLater on when parsing the data, \"strlen()\" will read beyond the\nallocated memory to search for the null character, resulting in an\ninvalid read.\n\n==1994== Invalid read of size 1\n==1994==    at 0x484ED24: strlen (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)\n==1994==    by 0x4D3F401: cJSON_ParseWithOpts (cJSON.c:1109)\n==1994==    by 0x4D3F65C: cJSON_Parse (cJSON.c:1197)\n==1994==    by 0x4C927DE: parse_json (message.c:913)\n==1994==    by 0x4C972D8: parse_content (message.c:1790)\n==1994==    by 0x4C90096: ogs_sbi_parse_response (message.c:589)\n==1994==    by 0x136431: amf_state_operational (amf-sm.c:248)\n...\n==1994==  Address 0x668371d is 0 bytes after a block of size 253 alloc'd\n==1994==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)\n==1994==    by 0x5107D7F: ??? (in /usr/lib/x86_64-linux-gnu/libtalloc.so.2.3.3)\n==1994==    by 0x510814B: _talloc_memdup (in /usr/lib/x86_64-linux-gnu/libtalloc.so.2.3.3)\n==1994==    by 0x4871568: ogs_talloc_memdup (ogs-strings.c:184)\n==1994==    by 0x4CA7755: check_multi_info (client.c:475)\n...",
        "before_after_code_files": [
          "lib/sbi/client.c||lib/sbi/client.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/sbi/client.c||lib/sbi/client.c"
          ],
          "candidate": [
            "lib/sbi/client.c||lib/sbi/client.c"
          ]
        }
      },
      "candidate_diff": {
        "lib/sbi/client.c||lib/sbi/client.c": [
          "File: lib/sbi/client.c -> lib/sbi/client.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "472:                 if (conn->memory) {",
          "473:                     response->http.content =",
          "475:                     ogs_assert(response->http.content);",
          "476:                     response->http.content_length = conn->size;",
          "477:                     ogs_assert(response->http.content_length);",
          "",
          "[Removed Lines]",
          "474:                         ogs_memdup(conn->memory, conn->size);",
          "",
          "[Added Lines]",
          "474:                         ogs_memdup(conn->memory, conn->size + 1);",
          "",
          "---------------"
        ]
      }
    }
  ]
}