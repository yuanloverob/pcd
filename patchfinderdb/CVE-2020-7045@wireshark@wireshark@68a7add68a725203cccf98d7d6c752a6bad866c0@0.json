{
  "cve_id": "CVE-2020-7045",
  "cve_desc": "In Wireshark 3.0.x before 3.0.8, the BT ATT dissector could crash. This was addressed in epan/dissectors/packet-btatt.c by validating opcodes.",
  "repo": "wireshark/wireshark",
  "patch_hash": "68a7add68a725203cccf98d7d6c752a6bad866c0",
  "patch_info": {
    "commit_hash": "68a7add68a725203cccf98d7d6c752a6bad866c0",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/68a7add68a725203cccf98d7d6c752a6bad866c0",
    "files": [
      "epan/dissectors/packet-btatt.c"
    ],
    "message": "btatt: check the opcode against the current data.\n\nWhile here:\n- some indentation fixes\n- add defines for missing ATT_OPCODEs\n\nBug: 16258\nChange-Id: I2cd8172bcff9c209bbddc4729573c008a8e81fec\nReviewed-on: https://code.wireshark.org/review/35339\nPetri-Dish: Dario Lombardo <lomato@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-btatt.c||epan/dissectors/packet-btatt.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-btatt.c||epan/dissectors/packet-btatt.c": [
      "File: epan/dissectors/packet-btatt.c -> epan/dissectors/packet-btatt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2173:     {0x0, NULL}",
      "2174: };",
      "2176: #define ATT_OPCODE_READ_BY_TYPE_REQUEST         0x08",
      "2177: #define ATT_OPCODE_READ_BY_TYPE_RESPONSE        0x09",
      "2179: #define ATT_OPCODE_READ_REQUEST                 0x0A",
      "2180: #define ATT_OPCODE_READ_RESPONSE                0x0B",
      "2181: #define ATT_OPCODE_READ_BLOB_REQUEST            0x0C",
      "2182: #define ATT_OPCODE_READ_BLOB_RESPONSE           0x0D",
      "2183: #define ATT_OPCODE_READ_MULTIPLE_REQUEST        0x0E",
      "2184: #define ATT_OPCODE_READ_MULTIPLE_RESPONSE       0x0F",
      "2186: #define ATT_OPCODE_READ_BY_GROUP_TYPE_REQUEST   0x10",
      "2187: #define ATT_OPCODE_READ_BY_GROUP_TYPE_RESPONSE  0x11",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2176: #define ATT_OPCODE_ERROR_RESPONSE               0x01",
      "2177: #define ATT_OPCODE_EXCHANGE_MTU_REQUEST         0x02",
      "2178: #define ATT_OPCODE_EXCHANGE_MTU_RESPONSE        0x03",
      "2179: #define ATT_OPCODE_FIND_INFORMATION_REQUEST     0x04",
      "2180: #define ATT_OPCODE_FIND_INFORMATION_RESPONSE    0x05",
      "2181: #define ATT_OPCODE_FIND_BY_TYPE_VALUE_REQUEST   0x06",
      "2182: #define ATT_OPCODE_FIND_BY_TYPE_VALUE_RESPONSE  0x07",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2190: #define ATT_OPCODE_WRITE_RESPONSE               0x13",
      "2191: #define ATT_OPCODE_WRITE_PREPARE_REQUEST        0x16",
      "2192: #define ATT_OPCODE_WRITE_PREPARE_RESPONSE       0x17",
      "2193: #define ATT_OPCODE_WRITE_COMMAND                0x52",
      "2194: #define ATT_OPCODE_WRITE_SIGNED_COMMAND         0xD2",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2199: #define ATT_OPCODE_WRITE_EXECUTE_REQUEST        0x18",
      "2200: #define ATT_OPCODE_WRITE_EXECUTE_RESPONSE       0x19",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "4299:     key[4].length = 0;",
      "4300:     key[4].key    = NULL;",
      "4303:     request_data->opcode = opcode;",
      "4304:     request_data->request_in_frame = frame_number;",
      "4305:     request_data->response_in_frame = 0;",
      "",
      "[Removed Lines]",
      "4302:     request_data = wmem_new(wmem_file_scope(), request_data_t);",
      "",
      "[Added Lines]",
      "4310:     request_data = wmem_new0(wmem_file_scope(), request_data_t);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "10954:             offset += 1;",
      "10956:             if (format == 1) {",
      "10958:                     sub_item = proto_tree_add_item(main_tree, hf_btatt_information_data, tvb, offset, 4, ENC_NA);",
      "10959:                     sub_tree = proto_item_add_subtree(sub_item, ett_btatt_list);",
      "",
      "[Removed Lines]",
      "10957:                 while( tvb_reported_length_remaining(tvb, offset) > 0) {",
      "",
      "[Added Lines]",
      "10965:                 while (tvb_reported_length_remaining(tvb, offset) > 0) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "10974:                 }",
      "10975:             }",
      "10976:             else if (format == 2) {",
      "10978:                     sub_item = proto_tree_add_item(main_tree, hf_btatt_information_data, tvb, offset, 4, ENC_NA);",
      "10979:                     sub_tree = proto_item_add_subtree(sub_item, ett_btatt_list);",
      "",
      "[Removed Lines]",
      "10977:                 while( tvb_reported_length_remaining(tvb, offset) > 0) {",
      "",
      "[Added Lines]",
      "10985:                 while (tvb_reported_length_remaining(tvb, offset) > 0) {",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "11031:         break;",
      "11035:             sub_item = proto_tree_add_none_format(main_tree, hf_btatt_handles_info, tvb, offset, 4,",
      "11036:                                             \"Handles Info, Handle: 0x%04x, Group End Handle: 0x%04x\",",
      "11037:                                             tvb_get_letohs(tvb, offset), tvb_get_letohs(tvb, offset+2));",
      "",
      "[Removed Lines]",
      "11034:         while( tvb_reported_length_remaining(tvb, offset) > 0 ) {",
      "",
      "[Added Lines]",
      "11042:         while (tvb_reported_length_remaining(tvb, offset) > 0) {",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "11105:             proto_tree_add_item(main_tree, hf_btatt_length, tvb, offset, 1, ENC_LITTLE_ENDIAN);",
      "11106:             offset++;",
      "11109:                 col_append_fstr(pinfo->cinfo, COL_INFO, \", Attribute List Length: %u\",",
      "11110:                                         tvb_reported_length_remaining(tvb, offset)/length);",
      "",
      "[Removed Lines]",
      "11108:             if(length > 0) {",
      "",
      "[Added Lines]",
      "11116:             if (length > 0) {",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "11208:         break;",
      "11212:             dissect_handle(main_tree, pinfo, hf_btatt_handle, tvb, offset, bluetooth_data, &uuid, request_data->parameters.read_write.handle);",
      "11214:             col_append_info_by_handle(pinfo, request_data->parameters.read_write.handle, bluetooth_data);",
      "",
      "[Removed Lines]",
      "11211:         if (request_data) {",
      "",
      "[Added Lines]",
      "11219:         if (request_data && request_data->opcode == (opcode - 1)) {",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "11275:         break;",
      "11279:             guint  i_handle;",
      "11281:             for (i_handle = 0; i_handle < request_data->parameters.read_multiple.number_of_handles; i_handle += 1) {",
      "",
      "[Removed Lines]",
      "11278:         if (request_data) {",
      "",
      "[Added Lines]",
      "11286:         if (request_data && request_data->opcode == (opcode - 1)) {",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "11320:                 }",
      "11321:             }",
      "11324:                 sub_item = proto_tree_add_uint(main_tree, hf_btatt_uuid16, tvb, 0, 0, request_data->parameters.read_by_type.uuid.bt_uuid);",
      "11325:                 proto_item_set_generated(sub_item);",
      "11326:             }",
      "",
      "[Removed Lines]",
      "11323:             if (request_data) {",
      "",
      "[Added Lines]",
      "11331:             if (request_data && request_data->opcode == (opcode - 1)) {",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "11355:             dissect_handle(main_tree, pinfo, hf_btatt_handle, tvb, offset, bluetooth_data, &uuid, request_data->parameters.read_write.handle);",
      "11357:             dissect_attribute_value(main_tree, NULL, pinfo, tvb, offset, 0, request_data->parameters.read_write.handle, uuid, &att_data);",
      "",
      "[Removed Lines]",
      "11354:         if (request_data) {",
      "",
      "[Added Lines]",
      "11362:         if (request_data && request_data->opcode == (opcode - 1)) {",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "11385:                     tvb_get_guint16(tvb, offset - 2, ENC_LITTLE_ENDIAN),",
      "11386:                     bluetooth_data);",
      "11391:             tvbuff_t  *next_tvb;",
      "11392:             guint      reassembled_length;",
      "11393:             guint8    *reassembled_data;",
      "",
      "[Removed Lines]",
      "11390:         if (request_data && tvb_captured_length(tvb) < mtu) {",
      "",
      "[Added Lines]",
      "11398:         if (request_data && request_data->opcode == (opcode - 1) && tvb_captured_length(tvb) < mtu) {",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "11430:         break;",
      "11434:             dissect_handle(main_tree, pinfo, hf_btatt_handle, tvb, offset, bluetooth_data, &uuid, request_data->parameters.read_write.handle);",
      "11436:             col_append_info_by_handle(pinfo, request_data->parameters.read_write.handle, bluetooth_data);",
      "",
      "[Removed Lines]",
      "11433:         if (request_data) {",
      "",
      "[Added Lines]",
      "11441:         if (request_data && request_data->opcode == (opcode - 1)) {",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "11464:         break;",
      "11465:     }",
      "11468:         if (request_data->request_in_frame > 0  && request_data->request_in_frame != pinfo->num) {",
      "11469:             sub_item = proto_tree_add_uint(main_tree, hf_request_in_frame, tvb, 0, 0, request_data->request_in_frame);",
      "11470:             proto_item_set_generated(sub_item);",
      "",
      "[Removed Lines]",
      "11467:     if (request_data) {",
      "",
      "[Added Lines]",
      "11475:     if (request_data && request_data->opcode == (opcode - 1)) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "01f261de41f4dd3233ef578e5c0ffb9c25c7d14d",
      "candidate_info": {
        "commit_hash": "01f261de41f4dd3233ef578e5c0ffb9c25c7d14d",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/01f261de41f4dd3233ef578e5c0ffb9c25c7d14d",
        "files": [
          "epan/dissectors/packet-btatt.c"
        ],
        "message": "btatt: check the opcode against the current data.\n\nWhile here:\n- some indentation fixes\n- add defines for missing ATT_OPCODEs\n\nBug: 16258\nChange-Id: I2cd8172bcff9c209bbddc4729573c008a8e81fec\nReviewed-on: https://code.wireshark.org/review/35339\nPetri-Dish: Dario Lombardo <lomato@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 68a7add68a725203cccf98d7d6c752a6bad866c0)\nReviewed-on: https://code.wireshark.org/review/35387\nReviewed-by: Dario Lombardo <lomato@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-btatt.c||epan/dissectors/packet-btatt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-btatt.c||epan/dissectors/packet-btatt.c"
          ],
          "candidate": [
            "epan/dissectors/packet-btatt.c||epan/dissectors/packet-btatt.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-btatt.c||epan/dissectors/packet-btatt.c": [
          "File: epan/dissectors/packet-btatt.c -> epan/dissectors/packet-btatt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2173:     {0x0, NULL}",
          "2174: };",
          "2176: #define ATT_OPCODE_READ_BY_TYPE_REQUEST         0x08",
          "2177: #define ATT_OPCODE_READ_BY_TYPE_RESPONSE        0x09",
          "2179: #define ATT_OPCODE_READ_REQUEST                 0x0A",
          "2180: #define ATT_OPCODE_READ_RESPONSE                0x0B",
          "2181: #define ATT_OPCODE_READ_BLOB_REQUEST            0x0C",
          "2182: #define ATT_OPCODE_READ_BLOB_RESPONSE           0x0D",
          "2183: #define ATT_OPCODE_READ_MULTIPLE_REQUEST        0x0E",
          "2184: #define ATT_OPCODE_READ_MULTIPLE_RESPONSE       0x0F",
          "2186: #define ATT_OPCODE_READ_BY_GROUP_TYPE_REQUEST   0x10",
          "2187: #define ATT_OPCODE_READ_BY_GROUP_TYPE_RESPONSE  0x11",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2176: #define ATT_OPCODE_ERROR_RESPONSE               0x01",
          "2177: #define ATT_OPCODE_EXCHANGE_MTU_REQUEST         0x02",
          "2178: #define ATT_OPCODE_EXCHANGE_MTU_RESPONSE        0x03",
          "2179: #define ATT_OPCODE_FIND_INFORMATION_REQUEST     0x04",
          "2180: #define ATT_OPCODE_FIND_INFORMATION_RESPONSE    0x05",
          "2181: #define ATT_OPCODE_FIND_BY_TYPE_VALUE_REQUEST   0x06",
          "2182: #define ATT_OPCODE_FIND_BY_TYPE_VALUE_RESPONSE  0x07",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2190: #define ATT_OPCODE_WRITE_RESPONSE               0x13",
          "2191: #define ATT_OPCODE_WRITE_PREPARE_REQUEST        0x16",
          "2192: #define ATT_OPCODE_WRITE_PREPARE_RESPONSE       0x17",
          "2193: #define ATT_OPCODE_WRITE_COMMAND                0x52",
          "2194: #define ATT_OPCODE_WRITE_SIGNED_COMMAND         0xD2",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2199: #define ATT_OPCODE_WRITE_EXECUTE_REQUEST        0x18",
          "2200: #define ATT_OPCODE_WRITE_EXECUTE_RESPONSE       0x19",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4299:     key[4].length = 0;",
          "4300:     key[4].key    = NULL;",
          "4303:     request_data->opcode = opcode;",
          "4304:     request_data->request_in_frame = frame_number;",
          "4305:     request_data->response_in_frame = 0;",
          "",
          "[Removed Lines]",
          "4302:     request_data = wmem_new(wmem_file_scope(), request_data_t);",
          "",
          "[Added Lines]",
          "4310:     request_data = wmem_new0(wmem_file_scope(), request_data_t);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "10954:             offset += 1;",
          "10956:             if (format == 1) {",
          "10958:                     sub_item = proto_tree_add_item(main_tree, hf_btatt_information_data, tvb, offset, 4, ENC_NA);",
          "10959:                     sub_tree = proto_item_add_subtree(sub_item, ett_btatt_list);",
          "",
          "[Removed Lines]",
          "10957:                 while( tvb_reported_length_remaining(tvb, offset) > 0) {",
          "",
          "[Added Lines]",
          "10965:                 while (tvb_reported_length_remaining(tvb, offset) > 0) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "10974:                 }",
          "10975:             }",
          "10976:             else if (format == 2) {",
          "10978:                     sub_item = proto_tree_add_item(main_tree, hf_btatt_information_data, tvb, offset, 4, ENC_NA);",
          "10979:                     sub_tree = proto_item_add_subtree(sub_item, ett_btatt_list);",
          "",
          "[Removed Lines]",
          "10977:                 while( tvb_reported_length_remaining(tvb, offset) > 0) {",
          "",
          "[Added Lines]",
          "10985:                 while (tvb_reported_length_remaining(tvb, offset) > 0) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "11031:         break;",
          "11035:             sub_item = proto_tree_add_none_format(main_tree, hf_btatt_handles_info, tvb, offset, 4,",
          "11036:                                             \"Handles Info, Handle: 0x%04x, Group End Handle: 0x%04x\",",
          "11037:                                             tvb_get_letohs(tvb, offset), tvb_get_letohs(tvb, offset+2));",
          "",
          "[Removed Lines]",
          "11034:         while( tvb_reported_length_remaining(tvb, offset) > 0 ) {",
          "",
          "[Added Lines]",
          "11042:         while (tvb_reported_length_remaining(tvb, offset) > 0) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "11105:             proto_tree_add_item(main_tree, hf_btatt_length, tvb, offset, 1, ENC_LITTLE_ENDIAN);",
          "11106:             offset++;",
          "11109:                 col_append_fstr(pinfo->cinfo, COL_INFO, \", Attribute List Length: %u\",",
          "11110:                                         tvb_reported_length_remaining(tvb, offset)/length);",
          "",
          "[Removed Lines]",
          "11108:             if(length > 0) {",
          "",
          "[Added Lines]",
          "11116:             if (length > 0) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "11208:         break;",
          "11212:             dissect_handle(main_tree, pinfo, hf_btatt_handle, tvb, offset, bluetooth_data, &uuid, request_data->parameters.read_write.handle);",
          "11214:             col_append_info_by_handle(pinfo, request_data->parameters.read_write.handle, bluetooth_data);",
          "",
          "[Removed Lines]",
          "11211:         if (request_data) {",
          "",
          "[Added Lines]",
          "11219:         if (request_data && request_data->opcode == (opcode - 1)) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "11275:         break;",
          "11279:             guint  i_handle;",
          "11281:             for (i_handle = 0; i_handle < request_data->parameters.read_multiple.number_of_handles; i_handle += 1) {",
          "",
          "[Removed Lines]",
          "11278:         if (request_data) {",
          "",
          "[Added Lines]",
          "11286:         if (request_data && request_data->opcode == (opcode - 1)) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "11320:                 }",
          "11321:             }",
          "11324:                 sub_item = proto_tree_add_uint(main_tree, hf_btatt_uuid16, tvb, 0, 0, request_data->parameters.read_by_type.uuid.bt_uuid);",
          "11325:                 proto_item_set_generated(sub_item);",
          "11326:             }",
          "",
          "[Removed Lines]",
          "11323:             if (request_data) {",
          "",
          "[Added Lines]",
          "11331:             if (request_data && request_data->opcode == (opcode - 1)) {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "11355:             dissect_handle(main_tree, pinfo, hf_btatt_handle, tvb, offset, bluetooth_data, &uuid, request_data->parameters.read_write.handle);",
          "11357:             dissect_attribute_value(main_tree, NULL, pinfo, tvb, offset, 0, request_data->parameters.read_write.handle, uuid, &att_data);",
          "",
          "[Removed Lines]",
          "11354:         if (request_data) {",
          "",
          "[Added Lines]",
          "11362:         if (request_data && request_data->opcode == (opcode - 1)) {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "11385:                     tvb_get_guint16(tvb, offset - 2, ENC_LITTLE_ENDIAN),",
          "11386:                     bluetooth_data);",
          "11391:             tvbuff_t  *next_tvb;",
          "11392:             guint      reassembled_length;",
          "11393:             guint8    *reassembled_data;",
          "",
          "[Removed Lines]",
          "11390:         if (request_data && tvb_captured_length(tvb) < mtu) {",
          "",
          "[Added Lines]",
          "11398:         if (request_data && request_data->opcode == (opcode - 1) && tvb_captured_length(tvb) < mtu) {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "11430:         break;",
          "11434:             dissect_handle(main_tree, pinfo, hf_btatt_handle, tvb, offset, bluetooth_data, &uuid, request_data->parameters.read_write.handle);",
          "11436:             col_append_info_by_handle(pinfo, request_data->parameters.read_write.handle, bluetooth_data);",
          "",
          "[Removed Lines]",
          "11433:         if (request_data) {",
          "",
          "[Added Lines]",
          "11441:         if (request_data && request_data->opcode == (opcode - 1)) {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "11464:         break;",
          "11465:     }",
          "11468:         if (request_data->request_in_frame > 0  && request_data->request_in_frame != pinfo->num) {",
          "11469:             sub_item = proto_tree_add_uint(main_tree, hf_request_in_frame, tvb, 0, 0, request_data->request_in_frame);",
          "11470:             proto_item_set_generated(sub_item);",
          "",
          "[Removed Lines]",
          "11467:     if (request_data) {",
          "",
          "[Added Lines]",
          "11475:     if (request_data && request_data->opcode == (opcode - 1)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5ed1108a68b136034f7c173dfc604893251a76e7",
      "candidate_info": {
        "commit_hash": "5ed1108a68b136034f7c173dfc604893251a76e7",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/5ed1108a68b136034f7c173dfc604893251a76e7",
        "files": [
          "epan/dissectors/packet-btatt.c"
        ],
        "message": "btatt: check the opcode against the current data.\n\nWhile here:\n- some indentation fixes\n- add defines for missing ATT_OPCODEs\n\nBug: 16258\nChange-Id: I2cd8172bcff9c209bbddc4729573c008a8e81fec\nReviewed-on: https://code.wireshark.org/review/35339\nPetri-Dish: Dario Lombardo <lomato@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 68a7add68a725203cccf98d7d6c752a6bad866c0)\nReviewed-on: https://code.wireshark.org/review/35388\nReviewed-by: Dario Lombardo <lomato@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-btatt.c||epan/dissectors/packet-btatt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-btatt.c||epan/dissectors/packet-btatt.c"
          ],
          "candidate": [
            "epan/dissectors/packet-btatt.c||epan/dissectors/packet-btatt.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-btatt.c||epan/dissectors/packet-btatt.c": [
          "File: epan/dissectors/packet-btatt.c -> epan/dissectors/packet-btatt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2171:     {0x0, NULL}",
          "2172: };",
          "2174: #define ATT_OPCODE_READ_BY_TYPE_REQUEST         0x08",
          "2175: #define ATT_OPCODE_READ_BY_TYPE_RESPONSE        0x09",
          "2177: #define ATT_OPCODE_READ_REQUEST                 0x0A",
          "2178: #define ATT_OPCODE_READ_RESPONSE                0x0B",
          "2179: #define ATT_OPCODE_READ_BLOB_REQUEST            0x0C",
          "2180: #define ATT_OPCODE_READ_BLOB_RESPONSE           0x0D",
          "2181: #define ATT_OPCODE_READ_MULTIPLE_REQUEST        0x0E",
          "2182: #define ATT_OPCODE_READ_MULTIPLE_RESPONSE       0x0F",
          "2184: #define ATT_OPCODE_READ_BY_GROUP_TYPE_REQUEST   0x10",
          "2185: #define ATT_OPCODE_READ_BY_GROUP_TYPE_RESPONSE  0x11",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2174: #define ATT_OPCODE_ERROR_RESPONSE               0x01",
          "2175: #define ATT_OPCODE_EXCHANGE_MTU_REQUEST         0x02",
          "2176: #define ATT_OPCODE_EXCHANGE_MTU_RESPONSE        0x03",
          "2177: #define ATT_OPCODE_FIND_INFORMATION_REQUEST     0x04",
          "2178: #define ATT_OPCODE_FIND_INFORMATION_RESPONSE    0x05",
          "2179: #define ATT_OPCODE_FIND_BY_TYPE_VALUE_REQUEST   0x06",
          "2180: #define ATT_OPCODE_FIND_BY_TYPE_VALUE_RESPONSE  0x07",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2188: #define ATT_OPCODE_WRITE_RESPONSE               0x13",
          "2189: #define ATT_OPCODE_WRITE_PREPARE_REQUEST        0x16",
          "2190: #define ATT_OPCODE_WRITE_PREPARE_RESPONSE       0x17",
          "2191: #define ATT_OPCODE_WRITE_COMMAND                0x52",
          "2192: #define ATT_OPCODE_WRITE_SIGNED_COMMAND         0xD2",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2197: #define ATT_OPCODE_WRITE_EXECUTE_REQUEST        0x18",
          "2198: #define ATT_OPCODE_WRITE_EXECUTE_RESPONSE       0x19",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4294:     key[4].length = 0;",
          "4295:     key[4].key    = NULL;",
          "4298:     request_data->opcode = opcode;",
          "4299:     request_data->request_in_frame = frame_number;",
          "4300:     request_data->response_in_frame = 0;",
          "",
          "[Removed Lines]",
          "4297:     request_data = wmem_new(wmem_file_scope(), request_data_t);",
          "",
          "[Added Lines]",
          "4305:     request_data = wmem_new0(wmem_file_scope(), request_data_t);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "10888:             offset += 1;",
          "10890:             if (format == 1) {",
          "10892:                     sub_item = proto_tree_add_item(main_tree, hf_btatt_information_data, tvb, offset, 4, ENC_NA);",
          "10893:                     sub_tree = proto_item_add_subtree(sub_item, ett_btatt_list);",
          "",
          "[Removed Lines]",
          "10891:                 while( tvb_reported_length_remaining(tvb, offset) > 0) {",
          "",
          "[Added Lines]",
          "10899:                 while (tvb_reported_length_remaining(tvb, offset) > 0) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "10908:                 }",
          "10909:             }",
          "10910:             else if (format == 2) {",
          "10912:                     sub_item = proto_tree_add_item(main_tree, hf_btatt_information_data, tvb, offset, 4, ENC_NA);",
          "10913:                     sub_tree = proto_item_add_subtree(sub_item, ett_btatt_list);",
          "",
          "[Removed Lines]",
          "10911:                 while( tvb_reported_length_remaining(tvb, offset) > 0) {",
          "",
          "[Added Lines]",
          "10919:                 while (tvb_reported_length_remaining(tvb, offset) > 0) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "10965:         break;",
          "10969:             sub_item = proto_tree_add_none_format(main_tree, hf_btatt_handles_info, tvb, offset, 4,",
          "10970:                                             \"Handles Info, Handle: 0x%04x, Group End Handle: 0x%04x\",",
          "10971:                                             tvb_get_letohs(tvb, offset), tvb_get_letohs(tvb, offset+2));",
          "",
          "[Removed Lines]",
          "10968:         while( tvb_reported_length_remaining(tvb, offset) > 0 ) {",
          "",
          "[Added Lines]",
          "10976:         while (tvb_reported_length_remaining(tvb, offset) > 0) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "11039:             proto_tree_add_item(main_tree, hf_btatt_length, tvb, offset, 1, ENC_LITTLE_ENDIAN);",
          "11040:             offset++;",
          "11043:                 col_append_fstr(pinfo->cinfo, COL_INFO, \", Attribute List Length: %u\",",
          "11044:                                         tvb_reported_length_remaining(tvb, offset)/length);",
          "",
          "[Removed Lines]",
          "11042:             if(length > 0) {",
          "",
          "[Added Lines]",
          "11050:             if (length > 0) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "11142:         break;",
          "11146:             dissect_handle(main_tree, pinfo, hf_btatt_handle, tvb, offset, bluetooth_data, &uuid, request_data->parameters.read_write.handle);",
          "11148:             col_append_info_by_handle(pinfo, request_data->parameters.read_write.handle, bluetooth_data);",
          "",
          "[Removed Lines]",
          "11145:         if (request_data) {",
          "",
          "[Added Lines]",
          "11153:         if (request_data && request_data->opcode == (opcode - 1)) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "11209:         break;",
          "11213:             guint  i_handle;",
          "11215:             for (i_handle = 0; i_handle < request_data->parameters.read_multiple.number_of_handles; i_handle += 1) {",
          "",
          "[Removed Lines]",
          "11212:         if (request_data) {",
          "",
          "[Added Lines]",
          "11220:         if (request_data && request_data->opcode == (opcode - 1)) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "11254:                 }",
          "11255:             }",
          "11258:                 sub_item = proto_tree_add_uint(main_tree, hf_btatt_uuid16, tvb, 0, 0, request_data->parameters.read_by_type.uuid.bt_uuid);",
          "11259:                 PROTO_ITEM_SET_GENERATED(sub_item);",
          "11260:             }",
          "",
          "[Removed Lines]",
          "11257:             if (request_data) {",
          "",
          "[Added Lines]",
          "11265:             if (request_data && request_data->opcode == (opcode - 1)) {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "11289:             dissect_handle(main_tree, pinfo, hf_btatt_handle, tvb, offset, bluetooth_data, &uuid, request_data->parameters.read_write.handle);",
          "11291:             dissect_attribute_value(main_tree, NULL, pinfo, tvb, offset, 0, request_data->parameters.read_write.handle, uuid, &att_data);",
          "",
          "[Removed Lines]",
          "11288:         if (request_data) {",
          "",
          "[Added Lines]",
          "11296:         if (request_data && request_data->opcode == (opcode - 1)) {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "11319:                     tvb_get_guint16(tvb, offset - 2, ENC_LITTLE_ENDIAN),",
          "11320:                     bluetooth_data);",
          "11325:             tvbuff_t  *next_tvb;",
          "11326:             guint      reassembled_length;",
          "11327:             guint8    *reassembled_data;",
          "",
          "[Removed Lines]",
          "11324:         if (request_data && tvb_captured_length(tvb) < mtu) {",
          "",
          "[Added Lines]",
          "11332:         if (request_data && request_data->opcode == (opcode - 1) && tvb_captured_length(tvb) < mtu) {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "11364:         break;",
          "11368:             dissect_handle(main_tree, pinfo, hf_btatt_handle, tvb, offset, bluetooth_data, &uuid, request_data->parameters.read_write.handle);",
          "11370:             col_append_info_by_handle(pinfo, request_data->parameters.read_write.handle, bluetooth_data);",
          "",
          "[Removed Lines]",
          "11367:         if (request_data) {",
          "",
          "[Added Lines]",
          "11375:         if (request_data && request_data->opcode == (opcode - 1)) {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "11398:         break;",
          "11399:     }",
          "11402:         if (request_data->request_in_frame > 0  && request_data->request_in_frame != pinfo->num) {",
          "11403:             sub_item = proto_tree_add_uint(main_tree, hf_request_in_frame, tvb, 0, 0, request_data->request_in_frame);",
          "11404:             PROTO_ITEM_SET_GENERATED(sub_item);",
          "",
          "[Removed Lines]",
          "11401:     if (request_data) {",
          "",
          "[Added Lines]",
          "11409:     if (request_data && request_data->opcode == (opcode - 1)) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}