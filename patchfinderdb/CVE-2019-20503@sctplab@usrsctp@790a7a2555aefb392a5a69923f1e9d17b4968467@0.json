{
  "cve_id": "CVE-2019-20503",
  "cve_desc": "usrsctp before 2019-12-20 has out-of-bounds reads in sctp_load_addresses_from_init.",
  "repo": "sctplab/usrsctp",
  "patch_hash": "790a7a2555aefb392a5a69923f1e9d17b4968467",
  "patch_info": {
    "commit_hash": "790a7a2555aefb392a5a69923f1e9d17b4968467",
    "repo": "sctplab/usrsctp",
    "commit_url": "https://github.com/sctplab/usrsctp/commit/790a7a2555aefb392a5a69923f1e9d17b4968467",
    "files": [
      "usrsctplib/netinet/sctp_auth.c",
      "usrsctplib/netinet/sctp_pcb.c"
    ],
    "message": "Improve input validation for some parameters having a too small reported length.\n\nThanks to Natalie Silvanovich from Google for finding one of these\nissues in the SCTP userland stack and reporting it.",
    "before_after_code_files": [
      "usrsctplib/netinet/sctp_auth.c||usrsctplib/netinet/sctp_auth.c",
      "usrsctplib/netinet/sctp_pcb.c||usrsctplib/netinet/sctp_pcb.c"
    ]
  },
  "patch_diff": {
    "usrsctplib/netinet/sctp_auth.c||usrsctplib/netinet/sctp_auth.c": [
      "File: usrsctplib/netinet/sctp_auth.c -> usrsctplib/netinet/sctp_auth.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: #ifdef __FreeBSD__",
      "36: #include <sys/cdefs.h>",
      "38: #endif",
      "40: #include <netinet/sctp_os.h>",
      "",
      "[Removed Lines]",
      "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_auth.c 352438 2019-09-17 09:46:42Z tuexen $\");",
      "",
      "[Added Lines]",
      "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_auth.c 355931 2019-12-20 15:25:08Z tuexen $\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1421:   ptype = ntohs(phdr->param_type);",
      "1422:   plen = ntohs(phdr->param_length);",
      "1425:    break;",
      "1427:   if (ptype == SCTP_RANDOM) {",
      "",
      "[Removed Lines]",
      "1424:   if ((plen == 0) || (offset + plen > length))",
      "",
      "[Added Lines]",
      "1424:   if ((plen < sizeof(struct sctp_paramhdr)) ||",
      "1425:       (offset + plen > length))",
      "",
      "---------------"
    ],
    "usrsctplib/netinet/sctp_pcb.c||usrsctplib/netinet/sctp_pcb.c": [
      "File: usrsctplib/netinet/sctp_pcb.c -> usrsctplib/netinet/sctp_pcb.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: #ifdef __FreeBSD__",
      "36: #include <sys/cdefs.h>",
      "38: #endif",
      "40: #include <netinet/sctp_os.h>",
      "",
      "[Removed Lines]",
      "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 353477 2019-10-13 16:14:04Z markj $\");",
      "",
      "[Added Lines]",
      "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 355931 2019-12-20 15:25:08Z tuexen $\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "7247:   if (offset + plen > limit) {",
      "7248:    break;",
      "7249:   }",
      "7251:    break;",
      "7252:   }",
      "7253: #ifdef INET",
      "",
      "[Removed Lines]",
      "7250:   if (plen == 0) {",
      "",
      "[Added Lines]",
      "7250:   if (plen < sizeof(struct sctp_paramhdr)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "7463:    if (plen > sizeof(lstore)) {",
      "7464:     return (-23);",
      "7465:    }",
      "7466:    phdr = sctp_get_next_param(m, offset,",
      "7467:          (struct sctp_paramhdr *)&lstore,",
      "7468:          plen);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7466:    if (plen < sizeof(struct sctp_asconf_addrv4_param)) {",
      "7467:     return (-101);",
      "7468:    }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d844a690d30ace22de75e8b80d9bb08ae7283795",
      "candidate_info": {
        "commit_hash": "d844a690d30ace22de75e8b80d9bb08ae7283795",
        "repo": "sctplab/usrsctp",
        "commit_url": "https://github.com/sctplab/usrsctp/commit/d844a690d30ace22de75e8b80d9bb08ae7283795",
        "files": [
          "usrsctplib/netinet/sctp_input.c",
          "usrsctplib/netinet/sctp_pcb.c"
        ],
        "message": "Improve the input validation and processing of cookies.\n\nThis avoids setting the association in an inconsistent\nstate, which could result in a use-after-free situation.\nThe issue can be triggered by a malicious peer, if the peer\ncan modify the cookie without the local endpoint recognizing it.\n\nThanks to Ned Williamson for reporting the issue.",
        "before_after_code_files": [
          "usrsctplib/netinet/sctp_input.c||usrsctplinetinet/sctp_input.c",
          "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "usrsctplib/netinet/sctp_input.c||usrsctplinetinet/sctp_input.c": [
          "File: usrsctplib/netinet/sctp_input.c -> usrsctplinetinet/sctp_input.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #if defined(__FreeBSD__) && !defined(__Userspace__)",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_input.c 365071 2020-09-01 21:19:14Z mjg $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2252:                          vrf_id, port);",
          "2253:   return (NULL);",
          "2254:  }",
          "2259:  asoc = &stcb->asoc;",
          "2261:  asoc->scope.ipv4_local_scope = cookie->ipv4_scope;",
          "",
          "[Removed Lines]",
          "2256:  if (netp)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2312:  asoc->advanced_peer_ack_point = asoc->last_acked_seq;",
          "2319:  if (retval < 0) {",
          "2320: #if defined(__APPLE__) && !defined(__Userspace__)",
          "2321:   atomic_add_int(&stcb->asoc.refcnt, 1);",
          "",
          "[Removed Lines]",
          "2315:  if (netp)",
          "2316:   retval = sctp_process_init(init_cp, stcb);",
          "2317:  else",
          "2318:   retval = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2499:   ;",
          "2500:  }",
          "2505:  if (stcb->asoc.sctp_autoclose_ticks &&",
          "2506:      sctp_is_feature_on(inp, SCTP_PCB_FLAGS_AUTOCLOSE)) {",
          "2507:   sctp_timer_start(SCTP_TIMER_TYPE_AUTOCLOSE, inp, stcb, NULL);",
          "2508:  }",
          "2509:  (void)SCTP_GETTIME_TIMEVAL(&stcb->asoc.time_entered);",
          "2511:   struct timeval old;",
          "2514:   old.tv_sec = cookie->time_entered.tv_sec;",
          "2515:   old.tv_usec = cookie->time_entered.tv_usec;",
          "2516:   sctp_calculate_rto(stcb, asoc, *netp, &old, SCTP_RTT_FROM_NON_DATA);",
          "",
          "[Removed Lines]",
          "2502:  if ((netp) && (*netp))",
          "2503:   (*netp)->hb_responded = 1;",
          "2510:  if ((netp != NULL) && (*netp != NULL)) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c": [
          "File: usrsctplib/netinet/sctp_pcb.c -> usrsctplinetinet/sctp_pcb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #if defined(__FreeBSD__) && !defined(__Userspace__)",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 366226 2020-09-28 14:11:53Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4955:   if ((ntohs(sin->sin_port) == 0) ||",
          "4956:       (sin->sin_addr.s_addr == INADDR_ANY) ||",
          "4957:       (sin->sin_addr.s_addr == INADDR_BROADCAST) ||",
          "4960:    SCTP_INP_RUNLOCK(inp);",
          "4961:    SCTP_LTRACE_ERR_RET(inp, NULL, NULL, SCTP_FROM_SCTP_PCB, EINVAL);",
          "",
          "[Removed Lines]",
          "4958:       IN_MULTICAST(ntohl(sin->sin_addr.s_addr))) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4974:   sin6 = (struct sockaddr_in6 *)firstaddr;",
          "4975:   if ((ntohs(sin6->sin6_port) == 0) ||",
          "4976:       IN6_IS_ADDR_UNSPECIFIED(&sin6->sin6_addr) ||",
          "4979:    SCTP_INP_RUNLOCK(inp);",
          "4980:    SCTP_LTRACE_ERR_RET(inp, NULL, NULL, SCTP_FROM_SCTP_PCB, EINVAL);",
          "",
          "[Removed Lines]",
          "4977:       IN6_IS_ADDR_MULTICAST(&sin6->sin6_addr)) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4993:   sconn = (struct sockaddr_conn *)firstaddr;",
          "4994:   if ((ntohs(sconn->sconn_port) == 0) ||",
          "4997:    SCTP_INP_RUNLOCK(inp);",
          "4998:    SCTP_LTRACE_ERR_RET(inp, NULL, NULL, SCTP_FROM_SCTP_PCB, EINVAL);",
          "",
          "[Removed Lines]",
          "4995:       (sconn->sconn_addr == NULL)) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "421fc204fa9f6a468e6e622600c414fb1cc2c82c",
      "candidate_info": {
        "commit_hash": "421fc204fa9f6a468e6e622600c414fb1cc2c82c",
        "repo": "sctplab/usrsctp",
        "commit_url": "https://github.com/sctplab/usrsctp/commit/421fc204fa9f6a468e6e622600c414fb1cc2c82c",
        "files": [
          "usrsctplib/netinet/sctp_auth.c",
          "usrsctplib/netinet/sctp_constants.h",
          "usrsctplib/netinet/sctp_indata.c",
          "usrsctplib/netinet/sctp_input.c",
          "usrsctplib/netinet/sctp_output.c",
          "usrsctplib/netinet/sctp_output.h",
          "usrsctplib/netinet/sctp_sysctl.c",
          "usrsctplib/netinet/sctp_sysctl.h",
          "usrsctplib/netinet/sctp_usrreq.c",
          "usrsctplib/netinet/sctputil.c",
          "usrsctplib/netinet/sctputil.h",
          "usrsctplib/netinet6/sctp6_usrreq.c"
        ],
        "message": "Sync FBSDIDs.",
        "before_after_code_files": [
          "usrsctplib/netinet/sctp_auth.c||usrsctplinetinet/sctp_auth.c",
          "usrsctplib/netinet/sctp_constants.h||usrsctplinetinet/sctp_constants.h",
          "usrsctplib/netinet/sctp_indata.c||usrsctplinetinet/sctp_indata.c",
          "usrsctplib/netinet/sctp_input.c||usrsctplinetinet/sctp_input.c",
          "usrsctplib/netinet/sctp_output.c||usrsctplinetinet/sctp_output.c",
          "usrsctplib/netinet/sctp_output.h||usrsctplinetinet/sctp_output.h",
          "usrsctplib/netinet/sctp_sysctl.c||usrsctplinetinet/sctp_sysctl.c",
          "usrsctplib/netinet/sctp_sysctl.h||usrsctplinetinet/sctp_sysctl.h",
          "usrsctplib/netinet/sctp_usrreq.c||usrsctplinetinet/sctp_usrreq.c",
          "usrsctplib/netinet/sctputil.c||usrsctplinetinet/sctputil.c",
          "usrsctplib/netinet/sctputil.h||usrsctplinetinet/sctputil.h",
          "usrsctplib/netinet6/sctp6_usrreq.c||usrsctplinetinet6/sctp6_usrreq.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "usrsctplib/netinet/sctp_auth.c||usrsctplinetinet/sctp_auth.c": [
          "File: usrsctplib/netinet/sctp_auth.c -> usrsctplinetinet/sctp_auth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_auth.c 361227 2020-05-18 19:48:38Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_constants.h||usrsctplinetinet/sctp_constants.h": [
          "File: usrsctplib/netinet/sctp_constants.h -> usrsctplinetinet/sctp_constants.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #ifndef _NETINET_SCTP_CONSTANTS_H_",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_constants.h 361872 2020-06-06 18:20:09Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_indata.c||usrsctplinetinet/sctp_indata.c": [
          "File: usrsctplib/netinet/sctp_indata.c -> usrsctplinetinet/sctp_indata.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_indata.c 361872 2020-06-06 18:20:09Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_input.c||usrsctplinetinet/sctp_input.c": [
          "File: usrsctplib/netinet/sctp_input.c -> usrsctplinetinet/sctp_input.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_input.c 361243 2020-05-19 07:23:35Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_output.c||usrsctplinetinet/sctp_output.c": [
          "File: usrsctplib/netinet/sctp_output.c -> usrsctplinetinet/sctp_output.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_output.c 361872 2020-06-06 18:20:09Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_output.h||usrsctplinetinet/sctp_output.h": [
          "File: usrsctplib/netinet/sctp_output.h -> usrsctplinetinet/sctp_output.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #ifndef _NETINET_SCTP_OUTPUT_H_",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_output.h 351654 2019-09-01 10:09:53Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_sysctl.c||usrsctplinetinet/sctp_sysctl.c": [
          "File: usrsctplib/netinet/sctp_sysctl.c -> usrsctplinetinet/sctp_sysctl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_sysctl.c 356357 2020-01-04 20:33:12Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_sysctl.h||usrsctplinetinet/sctp_sysctl.h": [
          "File: usrsctplib/netinet/sctp_sysctl.h -> usrsctplinetinet/sctp_sysctl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #ifndef _NETINET_SCTP_SYSCTL_H_",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_sysctl.h 356357 2020-01-04 20:33:12Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_usrreq.c||usrsctplinetinet/sctp_usrreq.c": [
          "File: usrsctplib/netinet/sctp_usrreq.c -> usrsctplinetinet/sctp_usrreq.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_usrreq.c 361872 2020-06-06 18:20:09Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctputil.c||usrsctplinetinet/sctputil.c": [
          "File: usrsctplib/netinet/sctputil.c -> usrsctplinetinet/sctputil.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctputil.c 361225 2020-05-18 19:23:01Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctputil.h||usrsctplinetinet/sctputil.h": [
          "File: usrsctplib/netinet/sctputil.h -> usrsctplinetinet/sctputil.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #ifndef _NETINET_SCTP_UTIL_H_",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctputil.h 359405 2020-03-28 20:25:45Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet6/sctp6_usrreq.c||usrsctplinetinet6/sctp6_usrreq.c": [
          "File: usrsctplib/netinet6/sctp6_usrreq.c -> usrsctplinetinet6/sctp6_usrreq.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet6/sctp6_usrreq.c 358083 2020-02-18 21:25:17Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "196fbbea796b2b6e8601ce2af4cbfe2121b14238",
      "candidate_info": {
        "commit_hash": "196fbbea796b2b6e8601ce2af4cbfe2121b14238",
        "repo": "sctplab/usrsctp",
        "commit_url": "https://github.com/sctplab/usrsctp/commit/196fbbea796b2b6e8601ce2af4cbfe2121b14238",
        "files": [
          "usrsctplib/netinet/sctp_cc_functions.c",
          "usrsctplib/netinet/sctp_indata.c",
          "usrsctplib/netinet/sctp_output.c",
          "usrsctplib/netinet/sctp_pcb.c",
          "usrsctplib/netinet/sctp_pcb.h"
        ],
        "message": "Whitespace cleanup",
        "before_after_code_files": [
          "usrsctplib/netinet/sctp_cc_functions.c||usrsctplinetinet/sctp_cc_functions.c",
          "usrsctplib/netinet/sctp_indata.c||usrsctplinetinet/sctp_indata.c",
          "usrsctplib/netinet/sctp_output.c||usrsctplinetinet/sctp_output.c",
          "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c",
          "usrsctplib/netinet/sctp_pcb.h||usrsctplinetinet/sctp_pcb.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "usrsctplib/netinet/sctp_cc_functions.c||usrsctplinetinet/sctp_cc_functions.c": [
          "File: usrsctplib/netinet/sctp_cc_functions.c -> usrsctplinetinet/sctp_cc_functions.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:  if ((assoc->max_cwnd > 0) &&",
          "65:      (net->cwnd > assoc->max_cwnd) &&",
          "66:      (net->cwnd > (net->mtu - sizeof(struct sctphdr)))) {",
          "68:   if (net->cwnd < (net->mtu - sizeof(struct sctphdr))) {",
          "69:    net->cwnd = net->mtu - sizeof(struct sctphdr);",
          "70:   }",
          "",
          "[Removed Lines]",
          "67:   net->cwnd = assoc->max_cwnd ;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_indata.c||usrsctplinetinet/sctp_indata.c": [
          "File: usrsctplib/netinet/sctp_indata.c -> usrsctplinetinet/sctp_indata.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "403:     if (unordered) {",
          "404:      control->on_strm_q = SCTP_ON_UNORDERED;",
          "405:     } else {",
          "407:     }",
          "408:     break;",
          "409:    } else if (SCTP_MID_EQ(asoc->idata_supported, at->mid, control->mid)) {",
          "",
          "[Removed Lines]",
          "406:      control->on_strm_q = SCTP_ON_ORDERED ;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "424:      }",
          "425:      TAILQ_INSERT_AFTER(q, at, control, next_instrm);",
          "426:      if (unordered) {",
          "428:      } else {",
          "430:      }",
          "431:      break;",
          "432:     }",
          "",
          "[Removed Lines]",
          "427:       control->on_strm_q = SCTP_ON_UNORDERED ;",
          "429:       control->on_strm_q = SCTP_ON_ORDERED ;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5650:   SCTP_INP_READ_LOCK(stcb->sctp_ep);",
          "5652:    strm = &asoc->strmin[sid];",
          "5653:    if (!TAILQ_EMPTY(&strm->uno_inqueue)) {",
          "5654:     sctp_flush_reassm_for_str_seq(stcb, asoc, strm, TAILQ_FIRST(&strm->uno_inqueue), 0, new_cum_tsn);",
          "",
          "[Removed Lines]",
          "5651:   for (sid = 0 ; sid < asoc->streamincnt; sid++) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_output.c||usrsctplinetinet/sctp_output.c": [
          "File: usrsctplib/netinet/sctp_output.c -> usrsctplinetinet/sctp_output.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "8542:  }",
          "8543:  old_start_at = NULL;",
          "8544: again_one_more_time:",
          "8548:   if (old_start_at && (old_start_at == net)) {",
          "",
          "[Removed Lines]",
          "8545:  for (net = start_at ; net != NULL; net = TAILQ_NEXT(net, sctp_next)) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c": [
          "File: usrsctplib/netinet/sctp_pcb.c -> usrsctplinetinet/sctp_pcb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #if defined(__FreeBSD__) && !defined(__Userspace__)",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 366114 2020-09-24 12:26:06Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_pcb.h||usrsctplinetinet/sctp_pcb.h": [
          "File: usrsctplib/netinet/sctp_pcb.h -> usrsctplinetinet/sctp_pcb.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "673: #if defined(__FreeBSD__) && !defined(__Userspace__)",
          "675: #else",
          "676: extern struct sctp_base_info system_base_info;",
          "677: #endif",
          "",
          "[Removed Lines]",
          "674: VNET_DECLARE(struct sctp_base_info, system_base_info) ;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5ac79526564e05149ba49e5f1d4d71dd2f6d4ed4",
      "candidate_info": {
        "commit_hash": "5ac79526564e05149ba49e5f1d4d71dd2f6d4ed4",
        "repo": "sctplab/usrsctp",
        "commit_url": "https://github.com/sctplab/usrsctp/commit/5ac79526564e05149ba49e5f1d4d71dd2f6d4ed4",
        "files": [
          "usrsctplib/netinet/sctp_pcb.c"
        ],
        "message": "Fix a typo in a comment.\n\nThis was reported by Orgad Shaneh in https://github.com/sctplab/usrsctp/pull/473",
        "before_after_code_files": [
          "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c": [
          "File: usrsctplib/netinet/sctp_pcb.c -> usrsctplinetinet/sctp_pcb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 361872 2020-06-06 18:20:09Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "86b8c028f640a5869989b794a4bf65b6a06899fd",
      "candidate_info": {
        "commit_hash": "86b8c028f640a5869989b794a4bf65b6a06899fd",
        "repo": "sctplab/usrsctp",
        "commit_url": "https://github.com/sctplab/usrsctp/commit/86b8c028f640a5869989b794a4bf65b6a06899fd",
        "files": [
          "usrsctplib/netinet/sctp_pcb.c"
        ],
        "message": "Improve socket state handling when closing an end-point.",
        "before_after_code_files": [
          "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "usrsctplib/netinet/sctp_pcb.c||usrsctplib/netinet/sctp_pcb.c"
          ],
          "candidate": [
            "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c"
          ]
        }
      },
      "candidate_diff": {
        "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c": [
          "File: usrsctplib/netinet/sctp_pcb.c -> usrsctplinetinet/sctp_pcb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 349986 2019-07-14 12:04:39Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5681:    inp->sctp_flags |= SCTP_PCB_FLAGS_WAS_CONNECTED;",
          "5682:    if (so) {",
          "5683:     SOCKBUF_LOCK(&so->so_rcv);",
          "5690: #if defined(__APPLE__)",
          "5691:     socantrcvmore(so);",
          "5692: #else",
          "",
          "[Removed Lines]",
          "5684:     if (so->so_rcv.sb_cc == 0) {",
          "5685:      so->so_state &= ~(SS_ISCONNECTING |",
          "5686:          SS_ISDISCONNECTING |",
          "5687:          SS_ISCONFIRMING |",
          "5688:          SS_ISCONNECTED);",
          "5689:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}