{
  "cve_id": "CVE-2016-7178",
  "cve_desc": "epan/dissectors/packet-umts_fp.c in the UMTS FP dissector in Wireshark 2.x before 2.0.6 does not ensure that memory is allocated for certain data structures, which allows remote attackers to cause a denial of service (invalid write access and application crash) via a crafted packet.",
  "repo": "wireshark/wireshark",
  "patch_hash": "315bba7c645b75af24215c6303d187b188610bba",
  "patch_info": {
    "commit_hash": "315bba7c645b75af24215c6303d187b188610bba",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/315bba7c645b75af24215c6303d187b188610bba",
    "files": [
      "epan/dissectors/packet-umts_fp.c"
    ],
    "message": "FP: ensure that mac and rlc structures are always allocated\n\nRather han checking everywhere that the RLC and MAC info are present in pinfo,\nallocate a temporary structure that will be dropped once packet dissection is\nover.\n\nBug: 12751\nChange-Id: I890430dd0c0b56d641777c15eedbf07fef082904\nReviewed-on: https://code.wireshark.org/review/17094\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-umts_fp.c||epan/dissectors/packet-umts_fp.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-umts_fp.c||epan/dissectors/packet-umts_fp.c": [
      "File: epan/dissectors/packet-umts_fp.c -> epan/dissectors/packet-umts_fp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2724:                 ddi_ti = proto_tree_add_bits_ret_val(subframe_header_tree, hf_fp_edch_ddi, tvb,",
      "2725:                                                      offset*8 + bit_offset, 6, &ddi, ENC_BIG_ENDIAN);",
      "",
      "[Removed Lines]",
      "2727:                 if (rlcinf) {",
      "2728:                     rlcinf->rbid[i] = (guint8)ddi;",
      "2729:                 }",
      "",
      "[Added Lines]",
      "2727:                 rlcinf->rbid[i] = (guint8)ddi;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2775:             bit_offset = 0;",
      "2777:             macinf = (umts_mac_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_umts_mac, 0);",
      "2779:             subframe_ti = proto_tree_add_string_format(tree, hf_fp_edch_subframe, tvb, offset, 0,",
      "2780:                                                        \"\", \"Subframe %u data\", subframes[n].subframe_number);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2776:             if (!macinf) {",
      "2777:                 macinf = wmem_new0(wmem_packet_scope(), umts_mac_info);",
      "2778:             }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3170:         rlc_info *rlcinf;",
      "3172:         rlcinf = (rlc_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_rlc, 0);",
      "3173:         macinf = (umts_mac_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_umts_mac, 0);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3174:         if (!rlcinf) {",
      "3175:             rlcinf = wmem_new0(wmem_packet_scope(), rlc_info);",
      "3176:         }",
      "3178:         if (!macinf) {",
      "3179:             macinf = wmem_new0(wmem_packet_scope(), umts_mac_info);",
      "3180:         }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "3373:         rlc_info *rlcinf;",
      "3375:         rlcinf = (rlc_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_rlc, 0);",
      "3376:         macinf = (umts_mac_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_umts_mac, 0);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3383:         if (!rlcinf) {",
      "3384:             rlcinf = wmem_new0(wmem_packet_scope(), rlc_info);",
      "3385:         }",
      "3387:         if (!macinf) {",
      "3388:             macinf = wmem_new0(wmem_packet_scope(), umts_mac_info);",
      "3389:         }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "3616:         rlc_info *rlcinf;",
      "3618:         rlcinf = (rlc_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_rlc, 0);",
      "3619:         macinf = (umts_mac_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_umts_mac, 0);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3633:         if (!rlcinf) {",
      "3634:             rlcinf = wmem_new0(wmem_packet_scope(), rlc_info);",
      "3635:         }",
      "3637:         if (!macinf) {",
      "3638:             macinf = wmem_new0(wmem_packet_scope(), umts_mac_info);",
      "3639:         }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "4318:     }",
      "4320:     rlcinf = (rlc_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_rlc, 0);",
      "4323:     if (preferences_show_release_info) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4341:     if (!rlcinf) {",
      "4342:         rlcinf = wmem_new0(wmem_packet_scope(), rlc_info);",
      "4343:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7dc8d30a12ef845cb200f8182672f481e867fdbb",
      "candidate_info": {
        "commit_hash": "7dc8d30a12ef845cb200f8182672f481e867fdbb",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/7dc8d30a12ef845cb200f8182672f481e867fdbb",
        "files": [
          "epan/dissectors/packet-umts_fp.c"
        ],
        "message": "FP: ensure that mac and rlc structures are always allocated\n\nRather han checking everywhere that the RLC and MAC info are present in pinfo,\nallocate a temporary structure that will be dropped once packet dissection is\nover.\n\nBug: 12751\nChange-Id: I890430dd0c0b56d641777c15eedbf07fef082904\nReviewed-on: https://code.wireshark.org/review/17094\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\n(cherry picked from commit 315bba7c645b75af24215c6303d187b188610bba)\nReviewed-on: https://code.wireshark.org/review/17101",
        "before_after_code_files": [
          "epan/dissectors/packet-umts_fp.c||epan/dissectors/packet-umts_fp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-umts_fp.c||epan/dissectors/packet-umts_fp.c"
          ],
          "candidate": [
            "epan/dissectors/packet-umts_fp.c||epan/dissectors/packet-umts_fp.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-umts_fp.c||epan/dissectors/packet-umts_fp.c": [
          "File: epan/dissectors/packet-umts_fp.c -> epan/dissectors/packet-umts_fp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2724:                 ddi_ti = proto_tree_add_bits_ret_val(subframe_header_tree, hf_fp_edch_ddi, tvb,",
          "2725:                                                      offset*8 + bit_offset, 6, &ddi, ENC_BIG_ENDIAN);",
          "",
          "[Removed Lines]",
          "2727:                 if (rlcinf) {",
          "2728:                     rlcinf->rbid[i] = (guint8)ddi;",
          "2729:                 }",
          "",
          "[Added Lines]",
          "2727:                 rlcinf->rbid[i] = (guint8)ddi;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2775:             bit_offset = 0;",
          "2777:             macinf = (umts_mac_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_umts_mac, 0);",
          "2779:             subframe_ti = proto_tree_add_string_format(tree, hf_fp_edch_subframe, tvb, offset, 0,",
          "2780:                                                        \"\", \"Subframe %u data\", subframes[n].subframe_number);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2776:             if (!macinf) {",
          "2777:                 macinf = wmem_new0(wmem_packet_scope(), umts_mac_info);",
          "2778:             }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3170:         rlc_info *rlcinf;",
          "3172:         rlcinf = (rlc_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_rlc, 0);",
          "3173:         macinf = (umts_mac_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_umts_mac, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3174:         if (!rlcinf) {",
          "3175:             rlcinf = wmem_new0(wmem_packet_scope(), rlc_info);",
          "3176:         }",
          "3178:         if (!macinf) {",
          "3179:             macinf = wmem_new0(wmem_packet_scope(), umts_mac_info);",
          "3180:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3373:         rlc_info *rlcinf;",
          "3375:         rlcinf = (rlc_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_rlc, 0);",
          "3376:         macinf = (umts_mac_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_umts_mac, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3383:         if (!rlcinf) {",
          "3384:             rlcinf = wmem_new0(wmem_packet_scope(), rlc_info);",
          "3385:         }",
          "3387:         if (!macinf) {",
          "3388:             macinf = wmem_new0(wmem_packet_scope(), umts_mac_info);",
          "3389:         }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3616:         rlc_info *rlcinf;",
          "3618:         rlcinf = (rlc_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_rlc, 0);",
          "3619:         macinf = (umts_mac_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_umts_mac, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3633:         if (!rlcinf) {",
          "3634:             rlcinf = wmem_new0(wmem_packet_scope(), rlc_info);",
          "3635:         }",
          "3637:         if (!macinf) {",
          "3638:             macinf = wmem_new0(wmem_packet_scope(), umts_mac_info);",
          "3639:         }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4318:     }",
          "4320:     rlcinf = (rlc_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_rlc, 0);",
          "4323:     if (preferences_show_release_info) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4341:     if (!rlcinf) {",
          "4342:         rlcinf = wmem_new0(wmem_packet_scope(), rlc_info);",
          "4343:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1531d538115bd94c9874d1babfd5889e7281b69b",
      "candidate_info": {
        "commit_hash": "1531d538115bd94c9874d1babfd5889e7281b69b",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/1531d538115bd94c9874d1babfd5889e7281b69b",
        "files": [
          "epan/dissectors/packet-umts_fp.c"
        ],
        "message": "FP: ensure that mac and rlc structures are always allocated\n\nRather han checking everywhere that the RLC and MAC info are present in pinfo,\nallocate a temporary structure that will be dropped once packet dissection is\nover.\n\nBug: 12751\nChange-Id: I890430dd0c0b56d641777c15eedbf07fef082904\nReviewed-on: https://code.wireshark.org/review/17094\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\n(cherry picked from commit 315bba7c645b75af24215c6303d187b188610bba)\nReviewed-on: https://code.wireshark.org/review/17102",
        "before_after_code_files": [
          "epan/dissectors/packet-umts_fp.c||epan/dissectors/packet-umts_fp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-umts_fp.c||epan/dissectors/packet-umts_fp.c"
          ],
          "candidate": [
            "epan/dissectors/packet-umts_fp.c||epan/dissectors/packet-umts_fp.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-umts_fp.c||epan/dissectors/packet-umts_fp.c": [
          "File: epan/dissectors/packet-umts_fp.c -> epan/dissectors/packet-umts_fp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2671:                 ddi_ti = proto_tree_add_bits_ret_val(subframe_header_tree, hf_fp_edch_ddi, tvb,",
          "2672:                                                      offset*8 + bit_offset, 6, &ddi, ENC_BIG_ENDIAN);",
          "",
          "[Removed Lines]",
          "2674:                 if (rlcinf) {",
          "2675:                     rlcinf->rbid[i] = (guint8)ddi;",
          "2676:                 }",
          "",
          "[Added Lines]",
          "2674:                 rlcinf->rbid[i] = (guint8)ddi;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2722:             bit_offset = 0;",
          "2724:             macinf = (umts_mac_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_umts_mac, 0);",
          "2726:             subframe_ti = proto_tree_add_string_format(tree, hf_fp_edch_subframe, tvb, offset, 0,",
          "2727:                                                        \"\", \"Subframe %u data\", subframes[n].subframe_number);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2723:             if (!macinf) {",
          "2724:                 macinf = wmem_new0(wmem_packet_scope(), umts_mac_info);",
          "2725:             }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3113:         rlc_info *rlcinf;",
          "3115:         rlcinf = (rlc_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_rlc, 0);",
          "3116:         macinf = (umts_mac_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_umts_mac, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3117:         if (!rlcinf) {",
          "3118:             rlcinf = wmem_new0(wmem_packet_scope(), rlc_info);",
          "3119:         }",
          "3121:         if (!macinf) {",
          "3122:             macinf = wmem_new0(wmem_packet_scope(), umts_mac_info);",
          "3123:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3315:         rlc_info *rlcinf;",
          "3317:         rlcinf = (rlc_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_rlc, 0);",
          "3318:         macinf = (umts_mac_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_umts_mac, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3325:         if (!rlcinf) {",
          "3326:             rlcinf = wmem_new0(wmem_packet_scope(), rlc_info);",
          "3327:         }",
          "3329:         if (!macinf) {",
          "3330:             macinf = wmem_new0(wmem_packet_scope(), umts_mac_info);",
          "3331:         }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3555:         rlc_info *rlcinf;",
          "3557:         rlcinf = (rlc_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_rlc, 0);",
          "3558:         macinf = (umts_mac_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_umts_mac, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3572:         if (!rlcinf) {",
          "3573:             rlcinf = wmem_new0(wmem_packet_scope(), rlc_info);",
          "3574:         }",
          "3576:         if (!macinf) {",
          "3577:             macinf = wmem_new0(wmem_packet_scope(), umts_mac_info);",
          "3578:         }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4264:     }",
          "4266:     rlcinf = (rlc_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_rlc, 0);",
          "4269:     if (preferences_show_release_info) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4287:     if (!rlcinf) {",
          "4288:         rlcinf = wmem_new0(wmem_packet_scope(), rlc_info);",
          "4289:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8e3411505ad2a420d7ef96eb52f2b1c02b0c4380",
      "candidate_info": {
        "commit_hash": "8e3411505ad2a420d7ef96eb52f2b1c02b0c4380",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/8e3411505ad2a420d7ef96eb52f2b1c02b0c4380",
        "files": [
          "epan/dissectors/packet-umts_fp.c"
        ],
        "message": "FP: ensure that mac and rlc structures are always allocated\n\nRather han checking everywhere that the RLC and MAC info are present in pinfo,\nallocate a temporary structure that will be dropped once packet dissection is\nover.\n\nConflicts:\n\tepan/dissectors/packet-umts_fp.c\n\nBug: 12751\nChange-Id: I890430dd0c0b56d641777c15eedbf07fef082904\nReviewed-on: https://code.wireshark.org/review/17094\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\n(cherry picked from commit 315bba7c645b75af24215c6303d187b188610bba)\nReviewed-on: https://code.wireshark.org/review/17102\nReviewed-on: https://code.wireshark.org/review/17801\nReviewed-by: Balint Reczey <balint@balintreczey.hu>",
        "before_after_code_files": [
          "epan/dissectors/packet-umts_fp.c||epan/dissectors/packet-umts_fp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-umts_fp.c||epan/dissectors/packet-umts_fp.c"
          ],
          "candidate": [
            "epan/dissectors/packet-umts_fp.c||epan/dissectors/packet-umts_fp.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-umts_fp.c||epan/dissectors/packet-umts_fp.c": [
          "File: epan/dissectors/packet-umts_fp.c -> epan/dissectors/packet-umts_fp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2675:                 ddi_ti = proto_tree_add_bits_ret_val(subframe_header_tree, hf_fp_edch_ddi, tvb,",
          "2676:                                                      offset*8 + bit_offset, 6, &ddi, ENC_BIG_ENDIAN);",
          "",
          "[Removed Lines]",
          "2678:                 if(rlcinf){",
          "2679:                     rlcinf->rbid[i] = (guint8)ddi;",
          "2680:                 }",
          "",
          "[Added Lines]",
          "2678:                 rlcinf->rbid[i] = (guint8)ddi;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2726:             bit_offset = 0;",
          "2728:             macinf = (umts_mac_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_umts_mac, 0);",
          "2730:             subframe_ti = proto_tree_add_string_format(tree, hf_fp_edch_subframe, tvb, offset, 0,",
          "2731:                                                        \"\", \"Subframe %u data\", subframes[n].subframe_number);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2727:             if (!macinf) {",
          "2728:                 macinf = wmem_new0(wmem_packet_scope(), umts_mac_info);",
          "2729:             }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3115:         rlc_info *rlcinf;",
          "3117:         rlcinf = (rlc_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_rlc, 0);",
          "3118:         macinf = (umts_mac_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_umts_mac, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3119:         if (!rlcinf) {",
          "3120:             rlcinf = wmem_new0(wmem_packet_scope(), rlc_info);",
          "3121:         }",
          "3123:         if (!macinf) {",
          "3124:             macinf = wmem_new0(wmem_packet_scope(), umts_mac_info);",
          "3125:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3317:         rlc_info *rlcinf;",
          "3319:         rlcinf = (rlc_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_rlc, 0);",
          "3320:         macinf = (umts_mac_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_umts_mac, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3327:         if (!rlcinf) {",
          "3328:             rlcinf = wmem_new0(wmem_packet_scope(), rlc_info);",
          "3329:         }",
          "3331:         if (!macinf) {",
          "3332:             macinf = wmem_new0(wmem_packet_scope(), umts_mac_info);",
          "3333:         }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3555:         rlc_info *rlcinf;",
          "3557:         rlcinf = (rlc_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_rlc, 0);",
          "3558:         macinf = (umts_mac_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_umts_mac, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3572:         if (!rlcinf) {",
          "3573:             rlcinf = wmem_new0(wmem_packet_scope(), rlc_info);",
          "3574:         }",
          "3576:         if (!macinf) {",
          "3577:             macinf = wmem_new0(wmem_packet_scope(), umts_mac_info);",
          "3578:         }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4267:     }",
          "4269:     rlcinf = (rlc_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_rlc, 0);",
          "4272:     if (preferences_show_release_info) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4290:     if (!rlcinf) {",
          "4291:         rlcinf = wmem_new0(wmem_packet_scope(), rlc_info);",
          "4292:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}