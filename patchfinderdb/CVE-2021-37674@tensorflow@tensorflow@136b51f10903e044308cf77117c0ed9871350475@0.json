{
  "cve_id": "CVE-2021-37674",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can trigger a denial of service via a segmentation fault in `tf.raw_ops.MaxPoolGrad` caused by missing validation. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/maxpooling_op.cc) misses some validation for the `orig_input` and `orig_output` tensors. The fixes for CVE-2021-29579 were incomplete. We have patched the issue in GitHub commit 136b51f10903e044308cf77117c0ed9871350475. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "136b51f10903e044308cf77117c0ed9871350475",
  "patch_info": {
    "commit_hash": "136b51f10903e044308cf77117c0ed9871350475",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/136b51f10903e044308cf77117c0ed9871350475",
    "files": [
      "tensorflow/core/kernels/maxpooling_op.cc",
      "tensorflow/core/kernels/pooling_ops_common.cc"
    ],
    "message": "Add missing validation to `maxpooling_op.cc`\n\nPiperOrigin-RevId: 387932441\nChange-Id: I43a0b24e6a12cc965611144ba035accd384594b9",
    "before_after_code_files": [
      "tensorflow/core/kernels/maxpooling_op.cc||tensorflow/core/kernels/maxpooling_op.cc",
      "tensorflow/core/kernels/pooling_ops_common.cc||tensorflow/core/kernels/pooling_ops_common.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/maxpooling_op.cc||tensorflow/core/kernels/maxpooling_op.cc": [
      "File: tensorflow/core/kernels/maxpooling_op.cc -> tensorflow/core/kernels/maxpooling_op.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "74:         errors::Internal(\"SpatialMaxPoolWithArgMaxHelper requires Targmax \"",
      "75:                          \"to be int64 when input_backprop != nullptr\"));",
      "76:   }",
      "78:   typedef Eigen::Map<const Eigen::Matrix<T, Eigen::Dynamic, Eigen::Dynamic>>",
      "79:       ConstEigenMatrixMap;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "77:   if (tensor_in.NumElements() == 0 || output->NumElements() == 0) return;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "950:   void Compute(OpKernelContext* context) override {",
      "951:     const Tensor& tensor_in = context->input(0);",
      "953:     PoolParameters params{context,",
      "954:                           ksize_,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "953:     OP_REQUIRES(context, tensor_in.dims() == 4,",
      "954:                 errors::InvalidArgument(\"tensor_in must be 4-dimensional (2)\"));",
      "955:     OP_REQUIRES(context, tensor_in.NumElements() > 0,",
      "956:                 errors::InvalidArgument(\"tensor_in must not be empty (2)\"));",
      "",
      "---------------"
    ],
    "tensorflow/core/kernels/pooling_ops_common.cc||tensorflow/core/kernels/pooling_ops_common.cc": [
      "File: tensorflow/core/kernels/pooling_ops_common.cc -> tensorflow/core/kernels/pooling_ops_common.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "171:     pad_depth = 0;",
      "172:     out_depth = depth;",
      "173:   } else {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "174:     OP_REQUIRES(context, depth_window > 0,",
      "175:                 errors::InvalidArgument(\"depth_window must not be 0\"));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "097a348f029365a73693b0a3cc0e51a5f87ace67",
      "candidate_info": {
        "commit_hash": "097a348f029365a73693b0a3cc0e51a5f87ace67",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/097a348f029365a73693b0a3cc0e51a5f87ace67",
        "files": [
          "tensorflow/core/kernels/maxpooling_op.cc",
          "tensorflow/core/kernels/pooling_ops_common.cc"
        ],
        "message": "Add missing validation to `maxpooling_op.cc`\n\nPiperOrigin-RevId: 387932441\nChange-Id: I43a0b24e6a12cc965611144ba035accd384594b9",
        "before_after_code_files": [
          "tensorflow/core/kernels/maxpooling_op.cc||tensorflow/core/kernels/maxpooling_op.cc",
          "tensorflow/core/kernels/pooling_ops_common.cc||tensorflow/core/kernels/pooling_ops_common.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/maxpooling_op.cc||tensorflow/core/kernels/maxpooling_op.cc",
            "tensorflow/core/kernels/pooling_ops_common.cc||tensorflow/core/kernels/pooling_ops_common.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/maxpooling_op.cc||tensorflow/core/kernels/maxpooling_op.cc",
            "tensorflow/core/kernels/pooling_ops_common.cc||tensorflow/core/kernels/pooling_ops_common.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/maxpooling_op.cc||tensorflow/core/kernels/maxpooling_op.cc": [
          "File: tensorflow/core/kernels/maxpooling_op.cc -> tensorflow/core/kernels/maxpooling_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:         errors::Internal(\"SpatialMaxPoolWithArgMaxHelper requires Targmax \"",
          "75:                          \"to be int64 when input_backprop != nullptr\"));",
          "76:   }",
          "78:   typedef Eigen::Map<const Eigen::Matrix<T, Eigen::Dynamic, Eigen::Dynamic>>",
          "79:       ConstEigenMatrixMap;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77:   if (tensor_in.NumElements() == 0 || output->NumElements() == 0) return;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "950:   void Compute(OpKernelContext* context) override {",
          "951:     const Tensor& tensor_in = context->input(0);",
          "953:     PoolParameters params{context,",
          "954:                           ksize_,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "953:     OP_REQUIRES(context, tensor_in.dims() == 4,",
          "954:                 errors::InvalidArgument(\"tensor_in must be 4-dimensional (2)\"));",
          "955:     OP_REQUIRES(context, tensor_in.NumElements() > 0,",
          "956:                 errors::InvalidArgument(\"tensor_in must not be empty (2)\"));",
          "",
          "---------------"
        ],
        "tensorflow/core/kernels/pooling_ops_common.cc||tensorflow/core/kernels/pooling_ops_common.cc": [
          "File: tensorflow/core/kernels/pooling_ops_common.cc -> tensorflow/core/kernels/pooling_ops_common.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "170:     pad_depth = 0;",
          "171:     out_depth = depth;",
          "172:   } else {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "173:     OP_REQUIRES(context, depth_window > 0,",
          "174:                 errors::InvalidArgument(\"depth_window must not be 0\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0290e0ffe98601df15b9e0a33105ff8d73ebe0f0",
      "candidate_info": {
        "commit_hash": "0290e0ffe98601df15b9e0a33105ff8d73ebe0f0",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/0290e0ffe98601df15b9e0a33105ff8d73ebe0f0",
        "files": [
          "tensorflow/core/kernels/maxpooling_op.cc",
          "tensorflow/core/kernels/pooling_ops_common.cc"
        ],
        "message": "Add missing validation to `maxpooling_op.cc`\n\nPiperOrigin-RevId: 387932441\nChange-Id: I43a0b24e6a12cc965611144ba035accd384594b9",
        "before_after_code_files": [
          "tensorflow/core/kernels/maxpooling_op.cc||tensorflow/core/kernels/maxpooling_op.cc",
          "tensorflow/core/kernels/pooling_ops_common.cc||tensorflow/core/kernels/pooling_ops_common.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/maxpooling_op.cc||tensorflow/core/kernels/maxpooling_op.cc",
            "tensorflow/core/kernels/pooling_ops_common.cc||tensorflow/core/kernels/pooling_ops_common.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/maxpooling_op.cc||tensorflow/core/kernels/maxpooling_op.cc",
            "tensorflow/core/kernels/pooling_ops_common.cc||tensorflow/core/kernels/pooling_ops_common.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/maxpooling_op.cc||tensorflow/core/kernels/maxpooling_op.cc": [
          "File: tensorflow/core/kernels/maxpooling_op.cc -> tensorflow/core/kernels/maxpooling_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:             \"SpatialMaxPoolWithArgMaxHelper requires include_batch_in_index \"",
          "69:             \"to be True when when input_backprop != nullptr\"));",
          "70:   }",
          "72:   typedef Eigen::Map<const Eigen::Matrix<T, Eigen::Dynamic, Eigen::Dynamic>>",
          "73:       ConstEigenMatrixMap;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:   if (tensor_in.NumElements() == 0 || output->NumElements() == 0) return;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "925:   void Compute(OpKernelContext* context) override {",
          "926:     const Tensor& tensor_in = context->input(0);",
          "928:     PoolParameters params{context,  ksize_,      stride_,",
          "929:                           padding_, FORMAT_NHWC, tensor_in.shape()};",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "928:     OP_REQUIRES(context, tensor_in.dims() == 4,",
          "929:                 errors::InvalidArgument(\"tensor_in must be 4-dimensional (2)\"));",
          "930:     OP_REQUIRES(context, tensor_in.NumElements() > 0,",
          "931:                 errors::InvalidArgument(\"tensor_in must not be empty (2)\"));",
          "",
          "---------------"
        ],
        "tensorflow/core/kernels/pooling_ops_common.cc||tensorflow/core/kernels/pooling_ops_common.cc": [
          "File: tensorflow/core/kernels/pooling_ops_common.cc -> tensorflow/core/kernels/pooling_ops_common.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:     pad_depth = 0;",
          "97:     out_depth = depth;",
          "98:   } else {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "99:     OP_REQUIRES(context, depth_window > 0,",
          "100:                 errors::InvalidArgument(\"depth_window must not be 0\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f247680de288f0740756ad657a617b54032dc1df",
      "candidate_info": {
        "commit_hash": "f247680de288f0740756ad657a617b54032dc1df",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/f247680de288f0740756ad657a617b54032dc1df",
        "files": [
          "tensorflow/core/kernels/maxpooling_op.cc",
          "tensorflow/core/kernels/pooling_ops_common.cc"
        ],
        "message": "Add missing validation to `maxpooling_op.cc`\n\nPiperOrigin-RevId: 387932441\nChange-Id: I43a0b24e6a12cc965611144ba035accd384594b9",
        "before_after_code_files": [
          "tensorflow/core/kernels/maxpooling_op.cc||tensorflow/core/kernels/maxpooling_op.cc",
          "tensorflow/core/kernels/pooling_ops_common.cc||tensorflow/core/kernels/pooling_ops_common.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/maxpooling_op.cc||tensorflow/core/kernels/maxpooling_op.cc",
            "tensorflow/core/kernels/pooling_ops_common.cc||tensorflow/core/kernels/pooling_ops_common.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/maxpooling_op.cc||tensorflow/core/kernels/maxpooling_op.cc",
            "tensorflow/core/kernels/pooling_ops_common.cc||tensorflow/core/kernels/pooling_ops_common.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/maxpooling_op.cc||tensorflow/core/kernels/maxpooling_op.cc": [
          "File: tensorflow/core/kernels/maxpooling_op.cc -> tensorflow/core/kernels/maxpooling_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:             \"SpatialMaxPoolWithArgMaxHelper requires include_batch_in_index \"",
          "69:             \"to be True when when input_backprop != nullptr\"));",
          "70:   }",
          "72:   typedef Eigen::Map<const Eigen::Matrix<T, Eigen::Dynamic, Eigen::Dynamic>>",
          "73:       ConstEigenMatrixMap;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:   if (tensor_in.NumElements() == 0 || output->NumElements() == 0) return;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "943:   void Compute(OpKernelContext* context) override {",
          "944:     const Tensor& tensor_in = context->input(0);",
          "946:     PoolParameters params{context,",
          "947:                           ksize_,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "946:     OP_REQUIRES(context, tensor_in.dims() == 4,",
          "947:                 errors::InvalidArgument(\"tensor_in must be 4-dimensional (2)\"));",
          "948:     OP_REQUIRES(context, tensor_in.NumElements() > 0,",
          "949:                 errors::InvalidArgument(\"tensor_in must not be empty (2)\"));",
          "",
          "---------------"
        ],
        "tensorflow/core/kernels/pooling_ops_common.cc||tensorflow/core/kernels/pooling_ops_common.cc": [
          "File: tensorflow/core/kernels/pooling_ops_common.cc -> tensorflow/core/kernels/pooling_ops_common.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "170:     pad_depth = 0;",
          "171:     out_depth = depth;",
          "172:   } else {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "173:     OP_REQUIRES(context, depth_window > 0,",
          "174:                 errors::InvalidArgument(\"depth_window must not be 0\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "15a0e44d5320b26def43d9d0acc6e8ce53b7e0f5",
      "candidate_info": {
        "commit_hash": "15a0e44d5320b26def43d9d0acc6e8ce53b7e0f5",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/15a0e44d5320b26def43d9d0acc6e8ce53b7e0f5",
        "files": [
          "tensorflow/core/kernels/maxpooling_op.cc",
          "tensorflow/core/kernels/pooling_ops_common.cc"
        ],
        "message": "Add missing validation to `maxpooling_op.cc`\n\nPiperOrigin-RevId: 387932441\nChange-Id: I43a0b24e6a12cc965611144ba035accd384594b9",
        "before_after_code_files": [
          "tensorflow/core/kernels/maxpooling_op.cc||tensorflow/core/kernels/maxpooling_op.cc",
          "tensorflow/core/kernels/pooling_ops_common.cc||tensorflow/core/kernels/pooling_ops_common.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/maxpooling_op.cc||tensorflow/core/kernels/maxpooling_op.cc",
            "tensorflow/core/kernels/pooling_ops_common.cc||tensorflow/core/kernels/pooling_ops_common.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/maxpooling_op.cc||tensorflow/core/kernels/maxpooling_op.cc",
            "tensorflow/core/kernels/pooling_ops_common.cc||tensorflow/core/kernels/pooling_ops_common.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/maxpooling_op.cc||tensorflow/core/kernels/maxpooling_op.cc": [
          "File: tensorflow/core/kernels/maxpooling_op.cc -> tensorflow/core/kernels/maxpooling_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:         errors::Internal(\"SpatialMaxPoolWithArgMaxHelper requires Targmax \"",
          "75:                          \"to be int64 when input_backprop != nullptr\"));",
          "76:   }",
          "78:   typedef Eigen::Map<const Eigen::Matrix<T, Eigen::Dynamic, Eigen::Dynamic>>",
          "79:       ConstEigenMatrixMap;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77:   if (tensor_in.NumElements() == 0 || output->NumElements() == 0) return;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "950:   void Compute(OpKernelContext* context) override {",
          "951:     const Tensor& tensor_in = context->input(0);",
          "953:     PoolParameters params{context,",
          "954:                           ksize_,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "953:     OP_REQUIRES(context, tensor_in.dims() == 4,",
          "954:                 errors::InvalidArgument(\"tensor_in must be 4-dimensional (2)\"));",
          "955:     OP_REQUIRES(context, tensor_in.NumElements() > 0,",
          "956:                 errors::InvalidArgument(\"tensor_in must not be empty (2)\"));",
          "",
          "---------------"
        ],
        "tensorflow/core/kernels/pooling_ops_common.cc||tensorflow/core/kernels/pooling_ops_common.cc": [
          "File: tensorflow/core/kernels/pooling_ops_common.cc -> tensorflow/core/kernels/pooling_ops_common.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "170:     pad_depth = 0;",
          "171:     out_depth = depth;",
          "172:   } else {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "173:     OP_REQUIRES(context, depth_window > 0,",
          "174:                 errors::InvalidArgument(\"depth_window must not be 0\"));",
          "",
          "---------------"
        ]
      }
    }
  ]
}