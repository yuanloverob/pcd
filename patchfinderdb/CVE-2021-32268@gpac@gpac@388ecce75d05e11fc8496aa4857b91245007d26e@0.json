{
  "cve_id": "CVE-2021-32268",
  "cve_desc": "Buffer overflow vulnerability in function gf_fprintf in os_file.c in gpac before 1.0.1 allows attackers to execute arbitrary code. The fixed version is 1.0.1.",
  "repo": "gpac/gpac",
  "patch_hash": "388ecce75d05e11fc8496aa4857b91245007d26e",
  "patch_info": {
    "commit_hash": "388ecce75d05e11fc8496aa4857b91245007d26e",
    "repo": "gpac/gpac",
    "commit_url": "https://github.com/gpac/gpac/commit/388ecce75d05e11fc8496aa4857b91245007d26e",
    "files": [
      "src/isomedia/box_code_base.c"
    ],
    "message": "fixed #1587",
    "before_after_code_files": [
      "src/isomedia/box_code_base.c||src/isomedia/box_code_base.c"
    ]
  },
  "patch_diff": {
    "src/isomedia/box_code_base.c||src/isomedia/box_code_base.c": [
      "File: src/isomedia/box_code_base.c -> src/isomedia/box_code_base.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "580:   ptr->location = (char*)gf_malloc((u32) ptr->size);",
      "581:   if (! ptr->location) return GF_OUT_OF_MEM;",
      "582:   gf_bs_read_data(bs, ptr->location, (u32)ptr->size);",
      "583:  }",
      "584:  return GF_OK;",
      "585: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "583:   if (ptr->location[ptr->size-1]) {",
      "584:    GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[iso file] url box location is not 0-terminated\\n\" ));",
      "585:    return GF_ISOM_INVALID_FILE;",
      "586:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bbd741e0e5a6e7e1e90a73c350acc061dde9450b",
      "candidate_info": {
        "commit_hash": "bbd741e0e5a6e7e1e90a73c350acc061dde9450b",
        "repo": "gpac/gpac",
        "commit_url": "https://github.com/gpac/gpac/commit/bbd741e0e5a6e7e1e90a73c350acc061dde9450b",
        "files": [
          "src/isomedia/box_code_base.c"
        ],
        "message": "fixes for talos report TALOS-2021-1299 (#1814):\n\nadds checks for integer overflows\n\nincludes fixes for:\n\nCVE-2021-21853\nCVE-2021-21854\nCVE-2021-21855\nCVE-2021-21856\nCVE-2021-21857\nCVE-2021-21858",
        "before_after_code_files": [
          "src/isomedia/box_code_base.c||src/isomedia/box_code_base.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/isomedia/box_code_base.c||src/isomedia/box_code_base.c"
          ],
          "candidate": [
            "src/isomedia/box_code_base.c||src/isomedia/box_code_base.c"
          ]
        }
      },
      "candidate_diff": {
        "src/isomedia/box_code_base.c||src/isomedia/box_code_base.c": [
          "File: src/isomedia/box_code_base.c -> src/isomedia/box_code_base.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "577:  GF_DataEntryURLBox *ptr = (GF_DataEntryURLBox *)s;",
          "579:  if (ptr->size) {",
          "581:   if (! ptr->location) return GF_OUT_OF_MEM;",
          "584:    GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[iso file] url box location is not 0-terminated\\n\" ));",
          "585:    return GF_ISOM_INVALID_FILE;",
          "586:   }",
          "",
          "[Removed Lines]",
          "580:   ptr->location = (char*)gf_malloc((u32) ptr->size);",
          "582:   gf_bs_read_data(bs, ptr->location, (u32)ptr->size);",
          "583:   if (ptr->location[ptr->size-1]) {",
          "",
          "[Added Lines]",
          "580:   u32 location_size = (u32) ptr->size;",
          "581:   if (location_size < 1) {",
          "582:    GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[iso file] Invalid size %llu in svhd box\\n\", ptr->size));",
          "583:    return GF_ISOM_INVALID_FILE;",
          "584:   }",
          "585:   ptr->location = (char*)gf_malloc(location_size);",
          "587:   gf_bs_read_data(bs, ptr->location, location_size);",
          "588:   if (ptr->location[location_size-1]) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1896:  if (ptr == NULL) return GF_BAD_PARAM;",
          "1898:  length = (u32) (ptr->size);",
          "1900:  ptr->sdpText = (char*)gf_malloc(sizeof(char) * (length+1));",
          "1901:  if (!ptr->sdpText) return GF_OUT_OF_MEM;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1905:  if (length >= (u32)0xFFFFFFFF) {",
          "1906:   GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[iso file] Invalid length %lu in sdp box\\n\", length));",
          "1907:   return GF_ISOM_INVALID_FILE;",
          "1908:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1953:  ptr->subType = gf_bs_read_u32(bs);",
          "1955:  length = (u32) (ptr->size);",
          "1957:  ptr->sdpText = (char*)gf_malloc(sizeof(char) * (length+1));",
          "1958:  if (!ptr->sdpText) return GF_OUT_OF_MEM;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1968:  if (length >= (u32)0xFFFFFFFF) {",
          "1969:   GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[iso file] Invalid length %lu in rtp_hnti box\\n\", length));",
          "1970:   return GF_ISOM_INVALID_FILE;",
          "1971:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2616:  GF_NameBox *ptr = (GF_NameBox *)s;",
          "2618:  length = (u32) (ptr->size);",
          "2619:  ptr->string = (char*)gf_malloc(sizeof(char) * (length+1));",
          "2620:  if (! ptr->string) return GF_OUT_OF_MEM;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2637:  if (length >= (u32)0xFFFFFFFF) {",
          "2638:   GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[iso file] Invalid length %lu in name box\\n\", length));",
          "2639:   return GF_ISOM_INVALID_FILE;",
          "2640:  }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "8549: GF_Err txtc_box_read(GF_Box *s, GF_BitStream *bs)",
          "8550: {",
          "8551:  GF_TextConfigBox *ptr = (GF_TextConfigBox*)s;",
          "8552:  ptr->config = (char *)gf_malloc(sizeof(char)*((u32) ptr->size+1));",
          "8553:  if (!ptr->config) return GF_OUT_OF_MEM;",
          "8554:  gf_bs_read_data(bs, ptr->config, (u32) ptr->size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8575:  if ((u32)ptr->size >= (u32)0xFFFFFFFF) {",
          "8576:   GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[iso file] Invalid size %llu in txtc box\\n\", ptr->size));",
          "8577:   return GF_ISOM_INVALID_FILE;",
          "8578:  }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "12634: GF_Err svhd_box_read(GF_Box *s, GF_BitStream *bs)",
          "12635: {",
          "12636:  GF_SphericalVideoInfoBox *ptr = (GF_SphericalVideoInfoBox *)s;",
          "12637:  ptr->string = gf_malloc(sizeof(char) * ((u32) ptr->size+1));",
          "12638:  if (!ptr->string) return GF_OUT_OF_MEM;",
          "12639:  gf_bs_read_data(bs, ptr->string, (u32) ptr->size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12664:  if ((u32)ptr->size >= (u32)0xFFFFFFFF) {",
          "12665:   GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[iso file] Invalid size %llu in svhd box\\n\", ptr->size));",
          "12666:   return GF_ISOM_INVALID_FILE;",
          "12667:  }",
          "",
          "---------------"
        ]
      }
    }
  ]
}