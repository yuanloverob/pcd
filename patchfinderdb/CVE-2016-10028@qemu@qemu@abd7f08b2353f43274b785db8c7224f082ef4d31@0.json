{
  "cve_id": "CVE-2016-10028",
  "cve_desc": "The virgl_cmd_get_capset function in hw/display/virtio-gpu-3d.c in QEMU (aka Quick Emulator) built with Virtio GPU Device emulator support allows local guest OS users to cause a denial of service (out-of-bounds read and process crash) via a VIRTIO_GPU_CMD_GET_CAPSET command with a maximum capabilities size with a value of 0.",
  "repo": "qemu/qemu",
  "patch_hash": "abd7f08b2353f43274b785db8c7224f082ef4d31",
  "patch_info": {
    "commit_hash": "abd7f08b2353f43274b785db8c7224f082ef4d31",
    "repo": "qemu/qemu",
    "commit_url": "https://github.com/qemu/qemu/commit/abd7f08b2353f43274b785db8c7224f082ef4d31",
    "files": [
      "hw/display/virtio-gpu-3d.c"
    ],
    "message": "display: virtio-gpu-3d: check virgl capabilities max_size\n\nVirtio GPU device while processing 'VIRTIO_GPU_CMD_GET_CAPSET'\ncommand, retrieves the maximum capabilities size to fill in the\nresponse object. It continues to fill in capabilities even if\nretrieved 'max_size' is zero(0), thus resulting in OOB access.\nAdd check to avoid it.\n\nReported-by: Zhenhao Hong <zhenhaohong@gmail.com>\nSigned-off-by: Prasad J Pandit <pjp@fedoraproject.org>\nMessage-id: 20161214070156.23368-1-ppandit@redhat.com\nSigned-off-by: Gerd Hoffmann <kraxel@redhat.com>",
    "before_after_code_files": [
      "hw/display/virtio-gpu-3d.c||hw/display/virtio-gpu-3d.c"
    ]
  },
  "patch_diff": {
    "hw/display/virtio-gpu-3d.c||hw/display/virtio-gpu-3d.c": [
      "File: hw/display/virtio-gpu-3d.c -> hw/display/virtio-gpu-3d.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "372:     virgl_renderer_get_cap_set(gc.capset_id, &max_ver,",
      "373:                                &max_size);",
      "376:     resp->hdr.type = VIRTIO_GPU_RESP_OK_CAPSET;",
      "377:     virgl_renderer_fill_caps(gc.capset_id,",
      "378:                              gc.capset_version,",
      "",
      "[Removed Lines]",
      "374:     resp = g_malloc(sizeof(*resp) + max_size);",
      "",
      "[Added Lines]",
      "374:     if (!max_size) {",
      "375:         cmd->error = VIRTIO_GPU_RESP_ERR_INVALID_PARAMETER;",
      "376:         return;",
      "377:     }",
      "379:     resp = g_malloc(sizeof(*resp) + max_size);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "85d9d044471f93c48c5c396f7e217b4ef12f69f8",
      "candidate_info": {
        "commit_hash": "85d9d044471f93c48c5c396f7e217b4ef12f69f8",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/85d9d044471f93c48c5c396f7e217b4ef12f69f8",
        "files": [
          "hw/display/virtio-gpu-3d.c"
        ],
        "message": "virtio-gpu: fix information leak in capset get dispatch\n\nIn virgl_cmd_get_capset function, it uses g_malloc to allocate\na response struct to the guest. As the 'resp'struct hasn't been full\ninitialized it will lead the 'resp->padding' field to the guest.\nUse g_malloc0 to avoid this.\n\nSigned-off-by: Li Qiang <liqiang6-s@360.cn>\nReviewed-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nMessage-id: 58188cae.4a6ec20a.3d2d1.aff2@mx.google.com\n\n[ kraxel: resolved conflict ]\n\nSigned-off-by: Gerd Hoffmann <kraxel@redhat.com>",
        "before_after_code_files": [
          "hw/display/virtio-gpu-3d.c||hw/display/virtio-gpu-3d.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "hw/display/virtio-gpu-3d.c||hw/display/virtio-gpu-3d.c"
          ],
          "candidate": [
            "hw/display/virtio-gpu-3d.c||hw/display/virtio-gpu-3d.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/display/virtio-gpu-3d.c||hw/display/virtio-gpu-3d.c": [
          "File: hw/display/virtio-gpu-3d.c -> hw/display/virtio-gpu-3d.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "379:         return;",
          "380:     }",
          "383:     resp->hdr.type = VIRTIO_GPU_RESP_OK_CAPSET;",
          "384:     virgl_renderer_fill_caps(gc.capset_id,",
          "385:                              gc.capset_version,",
          "",
          "[Removed Lines]",
          "382:     resp = g_malloc(sizeof(*resp) + max_size);",
          "",
          "[Added Lines]",
          "382:     resp = g_malloc0(sizeof(*resp) + max_size);",
          "",
          "---------------"
        ]
      }
    }
  ]
}