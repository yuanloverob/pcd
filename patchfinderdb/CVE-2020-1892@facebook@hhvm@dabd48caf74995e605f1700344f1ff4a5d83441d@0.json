{
  "cve_id": "CVE-2020-1892",
  "cve_desc": "Insufficient boundary checks when decoding JSON in JSON_parser allows read access to out of bounds memory, potentially leading to information leak and DOS. This issue affects HHVM 4.45.0, 4.44.0, 4.43.0, 4.42.0, 4.41.0, 4.40.0, 4.39.0, versions between 4.33.0 and 4.38.0 (inclusive), versions between 4.9.0 and 4.32.0 (inclusive), and versions prior to 4.8.7.",
  "repo": "facebook/hhvm",
  "patch_hash": "dabd48caf74995e605f1700344f1ff4a5d83441d",
  "patch_info": {
    "commit_hash": "dabd48caf74995e605f1700344f1ff4a5d83441d",
    "repo": "facebook/hhvm",
    "commit_url": "https://github.com/facebook/hhvm/commit/dabd48caf74995e605f1700344f1ff4a5d83441d",
    "files": [
      "hphp/runtime/ext/json/JSON_parser.cpp",
      "hphp/test/slow/ext_json/decode_crash.php",
      "hphp/test/slow/ext_json/decode_crash.php.expect"
    ],
    "message": "Fix a json_decode crash when depth==0\n\nSummary:\nSetting depth=0 is an error, and should result in NULL, but we weren't\nchecking for it, so in the case of a single, top-level string, we\nwould reading the -1th element of the stack.\n\nDifferential Revision: D19609959\n\nfbshipit-source-id: 04ca1e0965e04b44df2d5c806a73c3da99ff66fb",
    "before_after_code_files": [
      "hphp/runtime/ext/json/JSON_parser.cpp||hphp/runtime/ext/json/JSON_parser.cpp"
    ]
  },
  "patch_diff": {
    "hphp/runtime/ext/json/JSON_parser.cpp||hphp/runtime/ext/json/JSON_parser.cpp": [
      "File: hphp/runtime/ext/json/JSON_parser.cpp -> hphp/runtime/ext/json/JSON_parser.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "1150:   json->initSb(length);",
      "1151:   SCOPE_EXIT {",
      "1152:     constexpr int kMaxPersistentStringBufferCapacity = 256 * 1024;",
      "1153:     if (json->sb_cap > kMaxPersistentStringBufferCapacity) json->flushSb();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1151:   if (depth <= 0) {",
      "1152:     json->error_code = json_error_codes::JSON_ERROR_DEPTH;",
      "1153:     return false;",
      "1154:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1df7ed751bf69c36bd55b33d78e58fb38c99c5e1",
      "candidate_info": {
        "commit_hash": "1df7ed751bf69c36bd55b33d78e58fb38c99c5e1",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/1df7ed751bf69c36bd55b33d78e58fb38c99c5e1",
        "files": [
          "hphp/runtime/ext/json/JSON_parser.cpp",
          "hphp/test/slow/ext_json/decode_crash.php",
          "hphp/test/slow/ext_json/decode_crash.php.expect"
        ],
        "message": "Fix a json_decode crash when depth==0\n\nSummary:\nSetting depth=0 is an error, and should result in NULL, but we weren't\nchecking for it, so in the case of a single, top-level string, we\nwould reading the -1th element of the stack.\n\nReviewed By: oulgen\n\nDifferential Revision: D19609959",
        "before_after_code_files": [
          "hphp/runtime/ext/json/JSON_parser.cpp||hphp/runtime/ext/json/JSON_parser.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/ext/json/JSON_parser.cpp||hphp/runtime/ext/json/JSON_parser.cpp"
          ],
          "candidate": [
            "hphp/runtime/ext/json/JSON_parser.cpp||hphp/runtime/ext/json/JSON_parser.cpp"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/ext/json/JSON_parser.cpp||hphp/runtime/ext/json/JSON_parser.cpp": [
          "File: hphp/runtime/ext/json/JSON_parser.cpp -> hphp/runtime/ext/json/JSON_parser.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1150:   json->initSb(length);",
          "1151:   SCOPE_EXIT {",
          "1152:     constexpr int kMaxPersistentStringBufferCapacity = 256 * 1024;",
          "1153:     if (json->sb_cap > kMaxPersistentStringBufferCapacity) json->flushSb();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1151:   if (depth <= 0) {",
          "1152:     json->error_code = json_error_codes::JSON_ERROR_DEPTH;",
          "1153:     return false;",
          "1154:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8b9147eaddb077122b591ef8706c9cf5afe6a331",
      "candidate_info": {
        "commit_hash": "8b9147eaddb077122b591ef8706c9cf5afe6a331",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/8b9147eaddb077122b591ef8706c9cf5afe6a331",
        "files": [
          "hphp/runtime/ext/json/JSON_parser.cpp",
          "hphp/test/slow/ext_json/decode_crash.php",
          "hphp/test/slow/ext_json/decode_crash.php.expect"
        ],
        "message": "Fix a json_decode crash when depth==0\n\nSummary:\nSetting depth=0 is an error, and should result in NULL, but we weren't\nchecking for it, so in the case of a single, top-level string, we\nwould reading the -1th element of the stack.\n\nReviewed By: oulgen\n\nDifferential Revision: D19609959",
        "before_after_code_files": [
          "hphp/runtime/ext/json/JSON_parser.cpp||hphp/runtime/ext/json/JSON_parser.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/ext/json/JSON_parser.cpp||hphp/runtime/ext/json/JSON_parser.cpp"
          ],
          "candidate": [
            "hphp/runtime/ext/json/JSON_parser.cpp||hphp/runtime/ext/json/JSON_parser.cpp"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/ext/json/JSON_parser.cpp||hphp/runtime/ext/json/JSON_parser.cpp": [
          "File: hphp/runtime/ext/json/JSON_parser.cpp -> hphp/runtime/ext/json/JSON_parser.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1150:   json->initSb(length);",
          "1151:   SCOPE_EXIT {",
          "1152:     constexpr int kMaxPersistentStringBufferCapacity = 256 * 1024;",
          "1153:     if (json->sb_cap > kMaxPersistentStringBufferCapacity) json->flushSb();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1151:   if (depth <= 0) {",
          "1152:     json->error_code = json_error_codes::JSON_ERROR_DEPTH;",
          "1153:     return false;",
          "1154:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}