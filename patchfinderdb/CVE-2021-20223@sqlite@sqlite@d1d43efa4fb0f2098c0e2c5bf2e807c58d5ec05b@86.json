{
  "cve_id": "CVE-2021-20223",
  "cve_desc": "",
  "repo": "sqlite/sqlite",
  "patch_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
  "patch_info": {
    "commit_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "files": [
      "ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test",
      "manifest",
      "manifest.uuid"
    ],
    "message": "Prevent fts5 tokenizer unicode61 from considering '\\0' to be a token characters, even if other characters of class \"Cc\" are.\n\nFossilOrigin-Name: b7b7bde9b7a03665e3691c6d51118965f216d2dfb1617f138b9f9e60e418ed2f",
    "before_after_code_files": [
      "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test",
      "manifest.uuid||manifest.uuid"
    ]
  },
  "patch_diff": {
    "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c": [
      "File: ext/fts5/fts5_unicode2.c -> ext/fts5/fts5_unicode2.c"
    ],
    "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test": [
      "File: ext/fts5/test/fts5tok1.test -> ext/fts5/test/fts5tok1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "111:   SELECT * FROM t4;",
      "112: } {1 {SQL logic error}}",
      "115: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "114: #-------------------------------------------------------------------------",
      "115: # Embedded 0x00 characters.",
      "116: #",
      "117: reset_db",
      "118: do_execsql_test 3.1.0 {",
      "119:   CREATE VIRTUAL TABLE t1 USING fts5(z);",
      "120:   CREATE VIRTUAL TABLE tt USING fts5vocab(t1, 'instance');",
      "121:   INSERT INTO t1 VALUES('abc' || char(0) || 'def');",
      "122:   SELECT * FROM tt;",
      "123: } { abc 1 z 0 def 1 z 1 }",
      "124: do_execsql_test 3.1.1 {",
      "125:   SELECT hex(z) FROM t1;",
      "126: } {61626300646566}",
      "127: do_execsql_test 3.1.2 {",
      "128:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "129: } {}",
      "131: do_execsql_test 3.2.0 {",
      "132:   CREATE VIRTUAL TABLE t2 USING fts5(z,",
      "133:       tokenize=\"unicode61 categories 'L* N* Co Cc'\"",
      "134:   );",
      "135:   CREATE VIRTUAL TABLE tu USING fts5vocab(t2, 'instance');",
      "137:   INSERT INTO t2 VALUES('abc' || char(0) || 'def');",
      "138:   SELECT * FROM tu;",
      "139: } { abc 1 z 0 def 1 z 1 }",
      "141: do_execsql_test 3.2.1 {",
      "142:   SELECT hex(z) FROM t1;",
      "143: } {61626300646566}",
      "145: do_execsql_test 3.2.2 {",
      "146:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "147: } {}",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 0e7e113d9f2c929c1f8a85e2cfad8e2e60f0e8770212b5e5320fb2a2c42911f8",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0c76e892d9622dc5c13b168b39f40aa51884cef6",
      "candidate_info": {
        "commit_hash": "0c76e892d9622dc5c13b168b39f40aa51884cef6",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/0c76e892d9622dc5c13b168b39f40aa51884cef6",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/select3.test"
        ],
        "message": "Apply the correct affinity transformations when pulling values off of the sorter index used for GROUP BY.  Ticket [e0c2ad1aa8a9c691]\n\nFossilOrigin-Name: 101f7dea75a203f1f3aa422a607ef701eb0901ba4d5e8d1075cd350454a61956",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/select3.test||test/select3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a2d6f108c5d07559b125823a04c9cb072c80be80d7913097891a6192c7e1e225",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3791:         assert( pCol->iMem>0 );",
          "3792:         return pCol->iMem;",
          "3793:       }else if( pAggInfo->useSortingIdx ){",
          "3794:         sqlite3VdbeAddOp3(v, OP_Column, pAggInfo->sortingIdxPTab,",
          "3795:                               pCol->iSorterColumn, target);",
          "3796:         return target;",
          "3797:       }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3794:         Table *pTab = pCol->pTab;",
          "3797:         if( ALWAYS(pTab) && pCol->iColumn>=0 ){",
          "3798:           sqlite3ColumnDefault(v, pTab, pCol->iColumn, target);",
          "3799:         }",
          "",
          "---------------"
        ],
        "test/select3.test||test/select3.test": [
          "File: test/select3.test -> test/select3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "306:   } {{} 1.0 ok}",
          "307: }",
          "309: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "309: # 2020-03-10 ticket e0c2ad1aa8a9c691",
          "310: reset_db",
          "311: do_execsql_test select3-9.100 {",
          "312:   CREATE TABLE t0(c0 REAL, c1 REAL GENERATED ALWAYS AS (c0));",
          "313:   INSERT INTO t0(c0) VALUES (1);",
          "314:   SELECT * FROM t0 GROUP BY c0;",
          "315: } {1.0 1.0}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cacdf20771dfa0e21c642ab264e9a659da3634ca",
      "candidate_info": {
        "commit_hash": "cacdf20771dfa0e21c642ab264e9a659da3634ca",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/cacdf20771dfa0e21c642ab264e9a659da3634ca",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/where.c",
          "src/whereInt.h"
        ],
        "message": "Expose some of the Where data structure debug printing routines to the entire WHERE-clause processing module.\n\nFossilOrigin-Name: 85e76887761b5d7e290fb2bac7f9121648f79d67fdd92f624d81632f28620518",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/where.c||src/where.c",
          "src/whereInt.h||src/whereInt.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 52ea0672d7494346c636cd7b05ca42161eb3b07d9378fa9959be9a11de87dbbb",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/where.c||src/where.c": [
          "File: src/where.c -> src/where.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1735:   if( pTerm==0 ){",
          "1736:     sqlite3DebugPrintf(\"TERM-%-3d NULL\\n\", iTerm);",
          "1737:   }else{",
          "",
          "[Removed Lines]",
          "1734: static void whereTermPrint(WhereTerm *pTerm, int iTerm){",
          "",
          "[Added Lines]",
          "1734: void sqlite3WhereTermPrint(WhereTerm *pTerm, int iTerm){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1777: void sqlite3WhereClausePrint(WhereClause *pWC){",
          "1778:   int i;",
          "1779:   for(i=0; i<pWC->nTerm; i++){",
          "1781:   }",
          "1782: }",
          "1783: #endif",
          "",
          "[Removed Lines]",
          "1780:     whereTermPrint(&pWC->a[i], i);",
          "",
          "[Added Lines]",
          "1780:     sqlite3WhereTermPrint(&pWC->a[i], i);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1790:   WhereInfo *pWInfo = pWC->pWInfo;",
          "1791:   int nb = 1+(pWInfo->pTabList->nSrc+3)/4;",
          "1792:   struct SrcList_item *pItem = pWInfo->pTabList->a + p->iTab;",
          "",
          "[Removed Lines]",
          "1789: static void whereLoopPrint(WhereLoop *p, WhereClause *pWC){",
          "",
          "[Added Lines]",
          "1789: void sqlite3WhereLoopPrint(WhereLoop *p, WhereClause *pWC){",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1828:   if( p->nLTerm && (sqlite3WhereTrace & 0x100)!=0 ){",
          "1829:     int i;",
          "1830:     for(i=0; i<p->nLTerm; i++){",
          "1832:     }",
          "1833:   }",
          "1834: }",
          "",
          "[Removed Lines]",
          "1831:       whereTermPrint(p->aLTerm[i], i);",
          "",
          "[Added Lines]",
          "1831:       sqlite3WhereTermPrint(p->aLTerm[i], i);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2148:       if( sqlite3WhereTrace & 0x8 ){",
          "2149:         sqlite3DebugPrintf(x?\"   or-%d:  \":\"   or-X:  \", n);",
          "2151:       }",
          "2152: #endif",
          "2153:     }",
          "",
          "[Removed Lines]",
          "2150:         whereLoopPrint(pTemplate, pBuilder->pWC);",
          "",
          "[Added Lines]",
          "2150:         sqlite3WhereLoopPrint(pTemplate, pBuilder->pWC);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2166:     if( sqlite3WhereTrace & 0x8 ){",
          "2167:       sqlite3DebugPrintf(\"   skip: \");",
          "2169:     }",
          "2170: #endif",
          "2171:     return SQLITE_OK;",
          "",
          "[Removed Lines]",
          "2168:       whereLoopPrint(pTemplate, pBuilder->pWC);",
          "",
          "[Added Lines]",
          "2168:       sqlite3WhereLoopPrint(pTemplate, pBuilder->pWC);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2181:   if( sqlite3WhereTrace & 0x8 ){",
          "2182:     if( p!=0 ){",
          "2183:       sqlite3DebugPrintf(\"replace: \");",
          "2185:       sqlite3DebugPrintf(\"   with: \");",
          "2186:     }else{",
          "2187:       sqlite3DebugPrintf(\"    add: \");",
          "2188:     }",
          "2190:   }",
          "2191: #endif",
          "2192:   if( p==0 ){",
          "",
          "[Removed Lines]",
          "2184:       whereLoopPrint(p, pBuilder->pWC);",
          "2189:     whereLoopPrint(pTemplate, pBuilder->pWC);",
          "",
          "[Added Lines]",
          "2184:       sqlite3WhereLoopPrint(p, pBuilder->pWC);",
          "2189:     sqlite3WhereLoopPrint(pTemplate, pBuilder->pWC);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2211:       if( sqlite3WhereTrace & 0x8 ){",
          "2212:         sqlite3DebugPrintf(\" delete: \");",
          "2214:       }",
          "2215: #endif",
          "2216:       whereLoopDelete(db, pToDel);",
          "",
          "[Removed Lines]",
          "2213:         whereLoopPrint(pToDel, pBuilder->pWC);",
          "",
          "[Added Lines]",
          "2213:         sqlite3WhereLoopPrint(pToDel, pBuilder->pWC);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "4829:                                              \"ABCDEFGHIJKLMNOPQRSTUVWYXZ\";",
          "4830:       for(p=pWInfo->pLoops, i=0; p; p=p->pNextLoop, i++){",
          "4831:         p->cId = zLabel[i%(sizeof(zLabel)-1)];",
          "4833:       }",
          "4834:     }",
          "4835: #endif",
          "",
          "[Removed Lines]",
          "4832:         whereLoopPrint(p, sWLB.pWC);",
          "",
          "[Added Lines]",
          "4832:         sqlite3WhereLoopPrint(p, sWLB.pWC);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "4869:     }",
          "4870:     sqlite3DebugPrintf(\"\\n\");",
          "4871:     for(ii=0; ii<pWInfo->nLevel; ii++){",
          "4873:     }",
          "4874:   }",
          "4875: #endif",
          "",
          "[Removed Lines]",
          "4872:       whereLoopPrint(pWInfo->a[ii].pWLoop, sWLB.pWC);",
          "",
          "[Added Lines]",
          "4872:       sqlite3WhereLoopPrint(pWInfo->a[ii].pWLoop, sWLB.pWC);",
          "",
          "---------------"
        ],
        "src/whereInt.h||src/whereInt.h": [
          "File: src/whereInt.h -> src/whereInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "479: Bitmask sqlite3WhereGetMask(WhereMaskSet*,int);",
          "480: #ifdef WHERETRACE_ENABLED",
          "481: void sqlite3WhereClausePrint(WhereClause *pWC);",
          "482: #endif",
          "483: WhereTerm *sqlite3WhereFindTerm(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "482: void sqlite3WhereTermPrint(WhereTerm *pTerm, int iTerm);",
          "483: void sqlite3WhereLoopPrint(WhereLoop *p, WhereClause *pWC);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d9059bdb5b9e96d06c987ecbe29725912e092fd9",
      "candidate_info": {
        "commit_hash": "d9059bdb5b9e96d06c987ecbe29725912e092fd9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d9059bdb5b9e96d06c987ecbe29725912e092fd9",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/memjournal.c"
        ],
        "message": "Fix pointer aliasing problem in the in-memory journal code. Ref: [https://sqlite.org/forum/forumpost/d44eb2fc44|forum post d44eb2fc44]\n\nFossilOrigin-Name: 892e9191dc8f805678a501db1993437ee99a1e1849496a0a24ceec9b84123257",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/memjournal.c||src/memjournal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 6019bf8a2db548fea4be4f49961937d5b12eba9e42c7c7a58babfaf3288cb0cd",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/memjournal.c||src/memjournal.c": [
          "File: src/memjournal.c -> src/memjournal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "366:     assert( MEMJOURNAL_DFLT_FILECHUNKSIZE==fileChunkSize(p->nChunkSize) );",
          "367:   }",
          "370:   p->nSpill = nSpill;",
          "371:   p->flags = flags;",
          "372:   p->zJournal = zName;",
          "",
          "[Removed Lines]",
          "369:   p->pMethod = (const sqlite3_io_methods*)&MemJournalMethods;",
          "",
          "[Added Lines]",
          "369:   pJfd->pMethods = (const sqlite3_io_methods*)&MemJournalMethods;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "392: int sqlite3JournalCreate(sqlite3_file *pJfd){",
          "393:   int rc = SQLITE_OK;",
          "394:   MemJournal *p = (MemJournal*)pJfd;",
          "396: #ifdef SQLITE_ENABLE_ATOMIC_WRITE",
          "397:      p->nSpill>0",
          "398: #else",
          "",
          "[Removed Lines]",
          "395:   if( p->pMethod==&MemJournalMethods && (",
          "",
          "[Added Lines]",
          "395:   if( pJfd->pMethods==&MemJournalMethods && (",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a8aae52391afb2b1d5eac44c45e8de994642e228",
      "candidate_info": {
        "commit_hash": "a8aae52391afb2b1d5eac44c45e8de994642e228",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a8aae52391afb2b1d5eac44c45e8de994642e228",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/walsetlk.test"
        ],
        "message": "Avoid leaking a file-handle in test file walsetlk.test.\n\nFossilOrigin-Name: 3cfc675e2e917b69108feb3a75728b573abe8e44f0890a7d20d307b0b6784c0e",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/walsetlk.test||test/walsetlk.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e89c864299024cdce395a15c19b000b976142b9eed267901a288adaa695f9e65",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/walsetlk.test||test/walsetlk.test": [
          "File: test/walsetlk.test -> test/walsetlk.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:   file size test.db-wal",
          "73: } 0",
          "75: db close",
          "76: db2 close",
          "77: #-------------------------------------------------------------------------",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "75: close $fd",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2b1c2aad9f45a21e04d3420152779386b6cf7d33",
      "candidate_info": {
        "commit_hash": "2b1c2aad9f45a21e04d3420152779386b6cf7d33",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/2b1c2aad9f45a21e04d3420152779386b6cf7d33",
        "files": [
          "ext/misc/amatch.c",
          "ext/misc/completion.c",
          "ext/misc/compress.c",
          "ext/misc/csv.c",
          "ext/misc/eval.c",
          "ext/misc/fileio.c",
          "ext/misc/fossildelta.c",
          "ext/misc/fuzzer.c",
          "ext/misc/ieee754.c",
          "ext/misc/json1.c",
          "ext/misc/nextchar.c",
          "ext/misc/percentile.c",
          "ext/misc/prefixes.c",
          "ext/misc/regexp.c",
          "ext/misc/rot13.c",
          "ext/misc/series.c",
          "ext/misc/sha1.c",
          "ext/misc/shathree.c",
          "ext/misc/spellfix.c",
          "ext/misc/sqlar.c",
          "ext/misc/totype.c",
          "ext/misc/uuid.c",
          "ext/misc/wholenumber.c",
          "ext/misc/zipfile.c",
          "manifest",
          "manifest.uuid",
          "src/dbpage.c",
          "src/dbstat.c",
          "src/pragma.c",
          "src/pragma.h",
          "tool/mkpragmatab.tcl"
        ],
        "message": "Create the \"trusted_schema\" pragma.  Add sqlite3_vtab_config() calls to set the risk rank for many virtual tables.\n\nFossilOrigin-Name: 4c21373c21c9b17b222ae65297a039a035e6ec6b505c00c33704e3c03f94f834",
        "before_after_code_files": [
          "ext/misc/amatch.c||ext/misc/amatch.c",
          "ext/misc/completion.c||ext/misc/completion.c",
          "ext/misc/compress.c||ext/misc/compress.c",
          "ext/misc/csv.c||ext/misc/csv.c",
          "ext/misc/eval.c||ext/misc/eval.c",
          "ext/misc/fileio.c||ext/misc/fileio.c",
          "ext/misc/fossildelta.c||ext/misc/fossildelta.c",
          "ext/misc/fuzzer.c||ext/misc/fuzzer.c",
          "ext/misc/ieee754.c||ext/misc/ieee754.c",
          "ext/misc/json1.c||ext/misc/json1.c",
          "ext/misc/nextchar.c||ext/misc/nextchar.c",
          "ext/misc/percentile.c||ext/misc/percentile.c",
          "ext/misc/prefixes.c||ext/misc/prefixes.c",
          "ext/misc/regexp.c||ext/misc/regexp.c",
          "ext/misc/rot13.c||ext/misc/rot13.c",
          "ext/misc/series.c||ext/misc/series.c",
          "ext/misc/sha1.c||ext/misc/sha1.c",
          "ext/misc/shathree.c||ext/misc/shathree.c",
          "ext/misc/spellfix.c||ext/misc/spellfix.c",
          "ext/misc/sqlar.c||ext/misc/sqlar.c",
          "ext/misc/totype.c||ext/misc/totype.c",
          "ext/misc/uuid.c||ext/misc/uuid.c",
          "ext/misc/wholenumber.c||ext/misc/wholenumber.c",
          "ext/misc/zipfile.c||ext/misc/zipfile.c",
          "manifest.uuid||manifest.uuid",
          "src/dbpage.c||src/dbpage.c",
          "src/dbstat.c||src/dbstat.c",
          "src/pragma.c||src/pragma.c",
          "src/pragma.h||src/pragma.h",
          "tool/mkpragmatab.tcl||tool/mkpragmatab.tcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/misc/amatch.c||ext/misc/amatch.c": [
          "File: ext/misc/amatch.c -> ext/misc/amatch.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "900:     rc = amatchLoadRules(db, pNew, pzErr);",
          "901:   }",
          "902:   if( rc==SQLITE_OK ){",
          "903:     rc = sqlite3_declare_vtab(db,",
          "904:            \"CREATE TABLE x(word,distance,language,\"",
          "905:            \"command HIDDEN,nword HIDDEN)\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "903:     sqlite3_vtab_config(db, SQLITE_VTAB_INNOCUOUS);",
          "",
          "---------------"
        ],
        "ext/misc/completion.c||ext/misc/completion.c": [
          "File: ext/misc/completion.c -> ext/misc/completion.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "121:   rc = sqlite3_declare_vtab(db,",
          "122:       \"CREATE TABLE x(\"",
          "123:       \"  candidate TEXT,\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "121:   sqlite3_vtab_config(db, SQLITE_VTAB_INNOCUOUS);",
          "",
          "---------------"
        ],
        "ext/misc/compress.c||ext/misc/compress.c": [
          "File: ext/misc/compress.c -> ext/misc/compress.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "119:   int rc = SQLITE_OK;",
          "120:   SQLITE_EXTENSION_INIT2(pApi);",
          "124:   if( rc==SQLITE_OK ){",
          "127:   }",
          "128:   return rc;",
          "129: }",
          "",
          "[Removed Lines]",
          "122:   rc = sqlite3_create_function(db, \"compress\", 1, SQLITE_UTF8, 0,",
          "123:                                compressFunc, 0, 0);",
          "125:     rc = sqlite3_create_function(db, \"uncompress\", 1, SQLITE_UTF8, 0,",
          "126:                                  uncompressFunc, 0, 0);",
          "",
          "[Added Lines]",
          "122:   rc = sqlite3_create_function(db, \"compress\", 1,",
          "123:                     SQLITE_UTF8 | SQLITE_INNOCUOUS | SQLITE_DETERMINISTIC,",
          "124:                     0, compressFunc, 0, 0);",
          "126:     rc = sqlite3_create_function(db, \"uncompress\", 1,",
          "127:                     SQLITE_UTF8 | SQLITE_INNOCUOUS | SQLITE_DETERMINISTIC,",
          "128:                     0, uncompressFunc, 0, 0);",
          "",
          "---------------"
        ],
        "ext/misc/csv.c||ext/misc/csv.c": [
          "File: ext/misc/csv.c -> ext/misc/csv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "632:   for(i=0; i<sizeof(azPValue)/sizeof(azPValue[0]); i++){",
          "633:     sqlite3_free(azPValue[i]);",
          "634:   }",
          "635:   return SQLITE_OK;",
          "637: csvtab_connect_oom:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "643:   sqlite3_vtab_config(db, SQLITE_VTAB_DIRECTONLY);",
          "",
          "---------------"
        ],
        "ext/misc/eval.c||ext/misc/eval.c": [
          "File: ext/misc/eval.c -> ext/misc/eval.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "113:   int rc = SQLITE_OK;",
          "114:   SQLITE_EXTENSION_INIT2(pApi);",
          "117:                                sqlEvalFunc, 0, 0);",
          "118:   if( rc==SQLITE_OK ){",
          "120:                                  sqlEvalFunc, 0, 0);",
          "121:   }",
          "122:   return rc;",
          "",
          "[Removed Lines]",
          "116:   rc = sqlite3_create_function(db, \"eval\", 1, SQLITE_UTF8, 0,",
          "119:     rc = sqlite3_create_function(db, \"eval\", 2, SQLITE_UTF8, 0,",
          "",
          "[Added Lines]",
          "116:   rc = sqlite3_create_function(db, \"eval\", 1,",
          "117:                                SQLITE_UTF8|SQLITE_DIRECTONLY, 0,",
          "120:     rc = sqlite3_create_function(db, \"eval\", 2,",
          "121:                                  SQLITE_UTF8|SQLITE_DIRECTONLY, 0,",
          "",
          "---------------"
        ],
        "ext/misc/fileio.c||ext/misc/fileio.c": [
          "File: ext/misc/fileio.c -> ext/misc/fileio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "585:     pNew = (fsdir_tab*)sqlite3_malloc( sizeof(*pNew) );",
          "586:     if( pNew==0 ) return SQLITE_NOMEM;",
          "587:     memset(pNew, 0, sizeof(*pNew));",
          "588:   }",
          "590:   return rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "588:     sqlite3_vtab_config(db, SQLITE_VTAB_DIRECTONLY);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "978:   int rc = SQLITE_OK;",
          "979:   SQLITE_EXTENSION_INIT2(pApi);",
          "982:                                readfileFunc, 0, 0);",
          "983:   if( rc==SQLITE_OK ){",
          "985:                                  writefileFunc, 0, 0);",
          "986:   }",
          "987:   if( rc==SQLITE_OK ){",
          "",
          "[Removed Lines]",
          "981:   rc = sqlite3_create_function(db, \"readfile\", 1, SQLITE_UTF8, 0,",
          "984:     rc = sqlite3_create_function(db, \"writefile\", -1, SQLITE_UTF8, 0,",
          "",
          "[Added Lines]",
          "982:   rc = sqlite3_create_function(db, \"readfile\", 1,",
          "983:                                SQLITE_UTF8|SQLITE_DIRECTONLY, 0,",
          "986:     rc = sqlite3_create_function(db, \"writefile\", -1,",
          "987:                                  SQLITE_UTF8|SQLITE_DIRECTONLY, 0,",
          "",
          "---------------"
        ],
        "ext/misc/fossildelta.c||ext/misc/fossildelta.c": [
          "File: ext/misc/fossildelta.c -> ext/misc/fossildelta.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "823:     if( pNew==0 ) return SQLITE_NOMEM;",
          "824:     memset(pNew, 0, sizeof(*pNew));",
          "825:   }",
          "826:   return rc;",
          "827: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "825:     sqlite3_vtab_config(db, SQLITE_VTAB_INNOCUOUS);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1070:   char **pzErrMsg,",
          "1071:   const sqlite3_api_routines *pApi",
          "1072: ){",
          "1073:   int rc = SQLITE_OK;",
          "1074:   SQLITE_EXTENSION_INIT2(pApi);",
          "1077:                                deltaCreateFunc, 0, 0);",
          "1078:   if( rc==SQLITE_OK ){",
          "1080:                                  deltaApplyFunc, 0, 0);",
          "1081:   }",
          "1082:   if( rc==SQLITE_OK ){",
          "1084:                                  deltaOutputSizeFunc, 0, 0);",
          "1085:   }",
          "1086:   if( rc==SQLITE_OK ){",
          "",
          "[Removed Lines]",
          "1076:   rc = sqlite3_create_function(db, \"delta_create\", 2, SQLITE_UTF8, 0,",
          "1079:     rc = sqlite3_create_function(db, \"delta_apply\", 2, SQLITE_UTF8, 0,",
          "1083:     rc = sqlite3_create_function(db, \"delta_output_size\", 1, SQLITE_UTF8, 0,",
          "",
          "[Added Lines]",
          "1074:   static const enc = SQLITE_UTF8|SQLITE_INNOCUOUS;",
          "1078:   rc = sqlite3_create_function(db, \"delta_create\", 2, enc, 0,",
          "1081:     rc = sqlite3_create_function(db, \"delta_apply\", 2, enc, 0,",
          "1085:     rc = sqlite3_create_function(db, \"delta_output_size\", 1, enc, 0,",
          "",
          "---------------"
        ],
        "ext/misc/fuzzer.c||ext/misc/fuzzer.c": [
          "File: ext/misc/fuzzer.c -> ext/misc/fuzzer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "540:       if( rc!=SQLITE_OK ){",
          "541:         fuzzerDisconnect((sqlite3_vtab *)pNew);",
          "542:         pNew = 0;",
          "543:       }",
          "544:     }",
          "545:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "543:       }else{",
          "544:         sqlite3_vtab_config(db, SQLITE_VTAB_INNOCUOUS);",
          "",
          "---------------"
        ],
        "ext/misc/ieee754.c||ext/misc/ieee754.c": [
          "File: ext/misc/ieee754.c -> ext/misc/ieee754.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "121:   int rc = SQLITE_OK;",
          "122:   SQLITE_EXTENSION_INIT2(pApi);",
          "125:                                ieee754func, 0, 0);",
          "126:   if( rc==SQLITE_OK ){",
          "128:                                  ieee754func, 0, 0);",
          "129:   }",
          "130:   return rc;",
          "",
          "[Removed Lines]",
          "124:   rc = sqlite3_create_function(db, \"ieee754\", 1, SQLITE_UTF8, 0,",
          "127:     rc = sqlite3_create_function(db, \"ieee754\", 2, SQLITE_UTF8, 0,",
          "",
          "[Added Lines]",
          "124:   rc = sqlite3_create_function(db, \"ieee754\", 1,",
          "125:                                SQLITE_UTF8|SQLITE_INNOCUOUS, 0,",
          "128:     rc = sqlite3_create_function(db, \"ieee754\", 2,",
          "129:                                  SQLITE_UTF8|SQLITE_INNOCUOUS, 0,",
          "",
          "---------------"
        ],
        "ext/misc/json1.c||ext/misc/json1.c": [
          "File: ext/misc/json1.c -> ext/misc/json1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2091:     pNew = *ppVtab = sqlite3_malloc( sizeof(*pNew) );",
          "2092:     if( pNew==0 ) return SQLITE_NOMEM;",
          "2093:     memset(pNew, 0, sizeof(*pNew));",
          "2094:   }",
          "2095:   return rc;",
          "2096: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2094:     sqlite3_vtab_config(db, SQLITE_VTAB_INNOCUOUS);",
          "",
          "---------------"
        ],
        "ext/misc/nextchar.c||ext/misc/nextchar.c": [
          "File: ext/misc/nextchar.c -> ext/misc/nextchar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "297:   int rc = SQLITE_OK;",
          "298:   SQLITE_EXTENSION_INIT2(pApi);",
          "301:                                nextCharFunc, 0, 0);",
          "302:   if( rc==SQLITE_OK ){",
          "304:                                  nextCharFunc, 0, 0);",
          "305:   }",
          "306:   if( rc==SQLITE_OK ){",
          "308:                                  nextCharFunc, 0, 0);",
          "309:   }",
          "310:   return rc;",
          "",
          "[Removed Lines]",
          "300:   rc = sqlite3_create_function(db, \"next_char\", 3, SQLITE_UTF8, 0,",
          "303:     rc = sqlite3_create_function(db, \"next_char\", 4, SQLITE_UTF8, 0,",
          "307:     rc = sqlite3_create_function(db, \"next_char\", 5, SQLITE_UTF8, 0,",
          "",
          "[Added Lines]",
          "300:   rc = sqlite3_create_function(db, \"next_char\", 3,",
          "301:                                SQLITE_UTF8|SQLITE_INNOCUOUS, 0,",
          "304:     rc = sqlite3_create_function(db, \"next_char\", 4,",
          "305:                                  SQLITE_UTF8|SQLITE_INNOCUOUS, 0,",
          "309:     rc = sqlite3_create_function(db, \"next_char\", 5,",
          "310:                                  SQLITE_UTF8|SQLITE_INNOCUOUS, 0,",
          "",
          "---------------"
        ],
        "ext/misc/percentile.c||ext/misc/percentile.c": [
          "File: ext/misc/percentile.c -> ext/misc/percentile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "213:   int rc = SQLITE_OK;",
          "214:   SQLITE_EXTENSION_INIT2(pApi);",
          "217:                                0, percentStep, percentFinal);",
          "218:   return rc;",
          "219: }",
          "",
          "[Removed Lines]",
          "216:   rc = sqlite3_create_function(db, \"percentile\", 2, SQLITE_UTF8, 0,",
          "",
          "[Added Lines]",
          "216:   rc = sqlite3_create_function(db, \"percentile\", 2,",
          "217:                                SQLITE_UTF8|SQLITE_INNOCUOUS, 0,",
          "",
          "---------------"
        ],
        "ext/misc/prefixes.c||ext/misc/prefixes.c": [
          "File: ext/misc/prefixes.c -> ext/misc/prefixes.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:     if( pNew==0 ) return SQLITE_NOMEM;",
          "81:     memset(pNew, 0, sizeof(*pNew));",
          "82:   }",
          "83:   return rc;",
          "84: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:     sqlite3_vtab_config(db, SQLITE_VTAB_INNOCUOUS);",
          "",
          "---------------"
        ],
        "ext/misc/regexp.c||ext/misc/regexp.c": [
          "File: ext/misc/regexp.c -> ext/misc/regexp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "754: ){",
          "755:   int rc = SQLITE_OK;",
          "756:   SQLITE_EXTENSION_INIT2(pApi);",
          "759:   return rc;",
          "760: }",
          "",
          "[Removed Lines]",
          "757:   rc = sqlite3_create_function(db, \"regexp\", 2, SQLITE_UTF8, 0,",
          "758:                                  re_sql_func, 0, 0);",
          "",
          "[Added Lines]",
          "757:   rc = sqlite3_create_function(db, \"regexp\", 2, SQLITE_UTF8|SQLITE_INNOCUOUS,",
          "758:                                0, re_sql_func, 0, 0);",
          "",
          "---------------"
        ],
        "ext/misc/rot13.c||ext/misc/rot13.c": [
          "File: ext/misc/rot13.c -> ext/misc/rot13.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:   int rc = SQLITE_OK;",
          "106:   SQLITE_EXTENSION_INIT2(pApi);",
          "109:                                rot13func, 0, 0);",
          "110:   if( rc==SQLITE_OK ){",
          "111:     rc = sqlite3_create_collation(db, \"rot13\", SQLITE_UTF8, 0, rot13CollFunc);",
          "",
          "[Removed Lines]",
          "108:   rc = sqlite3_create_function(db, \"rot13\", 1, SQLITE_UTF8, 0,",
          "",
          "[Added Lines]",
          "108:   rc = sqlite3_create_function(db, \"rot13\", 1, SQLITE_UTF8|SQLITE_INNOCUOUS, 0,",
          "",
          "---------------"
        ],
        "ext/misc/series.c||ext/misc/series.c": [
          "File: ext/misc/series.c -> ext/misc/series.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "126:     pNew = *ppVtab = sqlite3_malloc( sizeof(*pNew) );",
          "127:     if( pNew==0 ) return SQLITE_NOMEM;",
          "128:     memset(pNew, 0, sizeof(*pNew));",
          "129:   }",
          "130:   return rc;",
          "131: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "129:     sqlite3_vtab_config(db, SQLITE_INNOCUOUS);",
          "",
          "---------------"
        ],
        "ext/misc/sha1.c||ext/misc/sha1.c": [
          "File: ext/misc/sha1.c -> ext/misc/sha1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "381:   int rc = SQLITE_OK;",
          "382:   SQLITE_EXTENSION_INIT2(pApi);",
          "385:                                sha1Func, 0, 0);",
          "386:   if( rc==SQLITE_OK ){",
          "388:                                  sha1QueryFunc, 0, 0);",
          "389:   }",
          "390:   return rc;",
          "",
          "[Removed Lines]",
          "384:   rc = sqlite3_create_function(db, \"sha1\", 1, SQLITE_UTF8, 0,",
          "387:     rc = sqlite3_create_function(db, \"sha1_query\", 1, SQLITE_UTF8, 0,",
          "",
          "[Added Lines]",
          "384:   rc = sqlite3_create_function(db, \"sha1\", 1, SQLITE_UTF8|SQLITE_INNOCUOUS, 0,",
          "387:     rc = sqlite3_create_function(db, \"sha1_query\", 1,",
          "388:                                  SQLITE_UTF8|SQLITE_DIRECTONLY, 0,",
          "",
          "---------------"
        ],
        "ext/misc/shathree.c||ext/misc/shathree.c": [
          "File: ext/misc/shathree.c -> ext/misc/shathree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "696:   int rc = SQLITE_OK;",
          "697:   SQLITE_EXTENSION_INIT2(pApi);",
          "701:   if( rc==SQLITE_OK ){",
          "704:   }",
          "705:   if( rc==SQLITE_OK ){",
          "708:   }",
          "709:   if( rc==SQLITE_OK ){",
          "712:   }",
          "713:   return rc;",
          "714: }",
          "",
          "[Removed Lines]",
          "699:   rc = sqlite3_create_function(db, \"sha3\", 1, SQLITE_UTF8, 0,",
          "700:                                sha3Func, 0, 0);",
          "702:     rc = sqlite3_create_function(db, \"sha3\", 2, SQLITE_UTF8, 0,",
          "703:                                  sha3Func, 0, 0);",
          "706:     rc = sqlite3_create_function(db, \"sha3_query\", 1, SQLITE_UTF8, 0,",
          "707:                                  sha3QueryFunc, 0, 0);",
          "710:     rc = sqlite3_create_function(db, \"sha3_query\", 2, SQLITE_UTF8, 0,",
          "711:                                  sha3QueryFunc, 0, 0);",
          "",
          "[Added Lines]",
          "699:   rc = sqlite3_create_function(db, \"sha3\", 1,",
          "700:                       SQLITE_UTF8 | SQLITE_INNOCUOUS | SQLITE_DETERMINISTIC,",
          "701:                       0, sha3Func, 0, 0);",
          "703:     rc = sqlite3_create_function(db, \"sha3\", 2,",
          "704:                       SQLITE_UTF8 | SQLITE_INNOCUOUS | SQLITE_DETERMINISTIC,",
          "705:                       0, sha3Func, 0, 0);",
          "708:     rc = sqlite3_create_function(db, \"sha3_query\", 1,",
          "709:                       SQLITE_UTF8 | SQLITE_DIRECTONLY,",
          "710:                       0, sha3QueryFunc, 0, 0);",
          "713:     rc = sqlite3_create_function(db, \"sha3_query\", 2,",
          "714:                       SQLITE_UTF8 | SQLITE_DIRECTONLY,",
          "715:                       0, sha3QueryFunc, 0, 0);",
          "",
          "---------------"
        ],
        "ext/misc/spellfix.c||ext/misc/spellfix.c": [
          "File: ext/misc/spellfix.c -> ext/misc/spellfix.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2069:     if( pNew->zTableName==0 ){",
          "2070:       rc = SQLITE_NOMEM;",
          "2071:     }else{",
          "2072:       rc = sqlite3_declare_vtab(db,",
          "2073:            \"CREATE TABLE x(word,rank,distance,langid, \"",
          "2074:            \"score, matchlen, phonehash HIDDEN, \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2072:       sqlite3_vtab_config(db, SQLITE_INNOCUOUS);",
          "",
          "---------------"
        ],
        "ext/misc/sqlar.c||ext/misc/sqlar.c": [
          "File: ext/misc/sqlar.c -> ext/misc/sqlar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "111:   int rc = SQLITE_OK;",
          "112:   SQLITE_EXTENSION_INIT2(pApi);",
          "115:                                sqlarCompressFunc, 0, 0);",
          "116:   if( rc==SQLITE_OK ){",
          "118:                                  sqlarUncompressFunc, 0, 0);",
          "119:   }",
          "120:   return rc;",
          "",
          "[Removed Lines]",
          "114:   rc = sqlite3_create_function(db, \"sqlar_compress\", 1, SQLITE_UTF8, 0,",
          "117:     rc = sqlite3_create_function(db, \"sqlar_uncompress\", 2, SQLITE_UTF8, 0,",
          "",
          "[Added Lines]",
          "114:   rc = sqlite3_create_function(db, \"sqlar_compress\", 1,",
          "115:                                SQLITE_UTF8|SQLITE_INNOCUOUS, 0,",
          "118:     rc = sqlite3_create_function(db, \"sqlar_uncompress\", 2,",
          "119:                                  SQLITE_UTF8|SQLITE_INNOCUOUS, 0,",
          "",
          "---------------"
        ],
        "ext/misc/totype.c||ext/misc/totype.c": [
          "File: ext/misc/totype.c -> ext/misc/totype.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "503:   SQLITE_EXTENSION_INIT2(pApi);",
          "505:   rc = sqlite3_create_function(db, \"tointeger\", 1,",
          "507:         tointegerFunc, 0, 0);",
          "508:   if( rc==SQLITE_OK ){",
          "509:     rc = sqlite3_create_function(db, \"toreal\", 1,",
          "511:         torealFunc, 0, 0);",
          "512:   }",
          "513:   return rc;",
          "",
          "[Removed Lines]",
          "506:         SQLITE_UTF8 | SQLITE_DETERMINISTIC, 0,",
          "510:         SQLITE_UTF8 | SQLITE_DETERMINISTIC, 0,",
          "",
          "[Added Lines]",
          "506:         SQLITE_UTF8 | SQLITE_DETERMINISTIC | SQLITE_INNOCUOUS, 0,",
          "510:         SQLITE_UTF8 | SQLITE_DETERMINISTIC | SQLITE_INNOCUOUS, 0,",
          "",
          "---------------"
        ],
        "ext/misc/uuid.c||ext/misc/uuid.c": [
          "File: ext/misc/uuid.c -> ext/misc/uuid.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "217:   int rc = SQLITE_OK;",
          "218:   SQLITE_EXTENSION_INIT2(pApi);",
          "221:                                sqlite3UuidFunc, 0, 0);",
          "222:   if( rc==SQLITE_OK ){",
          "225:   }",
          "226:   if( rc==SQLITE_OK ){",
          "229:   }",
          "230:   return rc;",
          "231: }",
          "",
          "[Removed Lines]",
          "220:   rc = sqlite3_create_function(db, \"uuid\", 0, SQLITE_UTF8, 0,",
          "223:     rc = sqlite3_create_function(db, \"uuid_str\", 1, SQLITE_UTF8, 0,",
          "224:                                  sqlite3UuidStrFunc, 0, 0);",
          "227:     rc = sqlite3_create_function(db, \"uuid_blob\", 1, SQLITE_UTF8, 0,",
          "228:                                  sqlite3UuidBlobFunc, 0, 0);",
          "",
          "[Added Lines]",
          "220:   rc = sqlite3_create_function(db, \"uuid\", 0, SQLITE_UTF8|SQLITE_INNOCUOUS, 0,",
          "223:     rc = sqlite3_create_function(db, \"uuid_str\", 1,",
          "224:                        SQLITE_UTF8|SQLITE_INNOCUOUS|SQLITE_DETERMINISTIC,",
          "225:                        0, sqlite3UuidStrFunc, 0, 0);",
          "228:     rc = sqlite3_create_function(db, \"uuid_blob\", 1,",
          "229:                        SQLITE_UTF8|SQLITE_INNOCUOUS|SQLITE_DETERMINISTIC,",
          "230:                        0, sqlite3UuidBlobFunc, 0, 0);",
          "",
          "---------------"
        ],
        "ext/misc/wholenumber.c||ext/misc/wholenumber.c": [
          "File: ext/misc/wholenumber.c -> ext/misc/wholenumber.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:   pNew = *ppVtab = sqlite3_malloc( sizeof(*pNew) );",
          "51:   if( pNew==0 ) return SQLITE_NOMEM;",
          "52:   sqlite3_declare_vtab(db, \"CREATE TABLE x(value)\");",
          "53:   memset(pNew, 0, sizeof(*pNew));",
          "54:   return SQLITE_OK;",
          "55: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53:   sqlite3_vtab_config(db, SQLITE_VTAB_INNOCUOUS);",
          "",
          "---------------"
        ],
        "ext/misc/zipfile.c||ext/misc/zipfile.c": [
          "File: ext/misc/zipfile.c -> ext/misc/zipfile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "369:       zipfileDequote(pNew->zFile);",
          "370:     }",
          "371:   }",
          "373:   return rc;",
          "374: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "372:   sqlite3_vtab_config(db, SQLITE_VTAB_DIRECTONLY);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3d87ff312e617a26846d482b423163cad9c222513f33e128f0fe348dda27c7c9",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/dbpage.c||src/dbpage.c": [
          "File: src/dbpage.c -> src/dbpage.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:   DbpageTable *pTab = 0;",
          "74:   int rc = SQLITE_OK;",
          "76:   rc = sqlite3_declare_vtab(db,",
          "77:           \"CREATE TABLE x(pgno INTEGER PRIMARY KEY, data BLOB, schema HIDDEN)\");",
          "78:   if( rc==SQLITE_OK ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:   sqlite3_vtab_config(db, SQLITE_VTAB_DIRECTONLY);",
          "",
          "---------------"
        ],
        "src/dbstat.c||src/dbstat.c": [
          "File: src/dbstat.c -> src/dbstat.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "167:   }else{",
          "168:     iDb = 0;",
          "169:   }",
          "170:   rc = sqlite3_declare_vtab(db, zDbstatSchema);",
          "171:   if( rc==SQLITE_OK ){",
          "172:     pTab = (StatTable *)sqlite3_malloc64(sizeof(StatTable));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "170:   sqlite3_vtab_config(db, SQLITE_VTAB_DIRECTONLY);",
          "",
          "---------------"
        ],
        "src/pragma.c||src/pragma.c": [
          "File: src/pragma.c -> src/pragma.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1107: #endif",
          "1109:       if( sqlite3GetBoolean(zRight, 0) ){",
          "1111:       }else{",
          "1112:         db->flags &= ~mask;",
          "1113:         if( mask==SQLITE_DeferFKs ) db->nDeferredImmCons = 0;",
          "",
          "[Removed Lines]",
          "1110:         db->flags |= mask;",
          "",
          "[Added Lines]",
          "1110:         db->flags |= (mask & ~(SQLITE_TrustedSchema));",
          "",
          "---------------"
        ],
        "src/pragma.h||src/pragma.h": [
          "File: src/pragma.h -> src/pragma.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "620: #if !defined(SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS)",
          "621:  {/* zName:     */ \"user_version\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "620: #if !defined(SQLITE_OMIT_FLAG_PRAGMAS)",
          "621:  {/* zName:     */ \"trusted_schema\",",
          "626: #endif",
          "",
          "---------------"
        ],
        "tool/mkpragmatab.tcl||tool/mkpragmatab.tcl": [
          "File: tool/mkpragmatab.tcl -> tool/mkpragmatab.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "128:   ARG:  SQLITE_RecTriggers",
          "129:   IF:   !defined(SQLITE_OMIT_FLAG_PRAGMAS)",
          "131:   NAME: foreign_keys",
          "132:   TYPE: FLAG",
          "133:   ARG:  SQLITE_ForeignKeys",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "131:   NAME: trusted_schema",
          "132:   TYPE: FLAG",
          "133:   ARG:  SQLITE_TrustedSchema",
          "134:   IF:   !defined(SQLITE_OMIT_FLAG_PRAGMAS)",
          "",
          "---------------"
        ]
      }
    }
  ]
}