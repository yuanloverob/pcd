{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0a6873bfd65233d242fd17ec818ac57593f25540",
      "candidate_info": {
        "commit_hash": "0a6873bfd65233d242fd17ec818ac57593f25540",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/0a6873bfd65233d242fd17ec818ac57593f25540",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/main.c",
          "src/resolve.c",
          "src/shell.c.in",
          "src/sqlite.h.in",
          "src/sqliteInt.h",
          "src/test1.c"
        ],
        "message": "Add SQLITE_DBCONFIG options LEGACY_ALTER_TABLE, NO_DQS_SCHEMA, and NO_DQS.\n\nFossilOrigin-Name: 1fad20925efa70d0c242e9cba8fa55456fb07a81229c1068da84c6e27d0c0be8",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/main.c||src/main.c",
          "src/resolve.c||src/resolve.c",
          "src/shell.c.in||src/shell.c.in",
          "src/sqlite.h.in||src/sqlite.h.in",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/test1.c||src/test1.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 23e49f9984f74f242602c6e56bfc645585c7c86bcdd585c322ab0d8e20958d86",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/main.c||src/main.c": [
          "File: src/main.c -> src/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "845:         { SQLITE_DBCONFIG_DEFENSIVE,             SQLITE_Defensive      },",
          "846:         { SQLITE_DBCONFIG_WRITABLE_SCHEMA,       SQLITE_WriteSchema|",
          "847:                                                  SQLITE_NoSchemaError  },",
          "848:       };",
          "849:       unsigned int i;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "848:         { SQLITE_DBCONFIG_LEGACY_ALTER_TABLE,    SQLITE_LegacyAlter    },",
          "849:         { SQLITE_DBCONFIG_NO_DQS_SCHEMA,         SQLITE_NoDQSSchema    },",
          "850:         { SQLITE_DBCONFIG_NO_DQS,                SQLITE_NoDQS          },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3071:   db->nextPagesize = 0;",
          "3072:   db->nMaxSorterMmap = 0x7FFFFFFF;",
          "3073:   db->flags |= SQLITE_ShortColNames | SQLITE_EnableTrigger | SQLITE_CacheSpill",
          "3074: #if !defined(SQLITE_DEFAULT_AUTOMATIC_INDEX) || SQLITE_DEFAULT_AUTOMATIC_INDEX",
          "3075:                  | SQLITE_AutoIndex",
          "3076: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3077:                  | SQLITE_NoDQSSchema",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "477:   if( cnt==0 && zTab==0 ){",
          "478:     assert( pExpr->op==TK_ID );",
          "479:     if( ExprHasProperty(pExpr,EP_DblQuoted)",
          "481:     ){",
          "",
          "[Removed Lines]",
          "480:      && 0==(pTopNC->ncFlags&NC_NoDblQStr)",
          "",
          "[Added Lines]",
          "480:      && 0==(pTopNC->ncFlags&NC_NoDblQStr)",
          "481:      && 0==(db->flags & SQLITE_NoDQS)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1771:   sNC.pParse = pParse;",
          "1772:   sNC.pSrcList = &sSrc;",
          "1773:   sNC.ncFlags = type;",
          "1775:     sNC.ncFlags |= NC_NoDblQStr;",
          "1776:   }",
          "1777:   if( (rc = sqlite3ResolveExprNames(&sNC, pExpr))!=SQLITE_OK ) return rc;",
          "",
          "[Removed Lines]",
          "1774:   if( !pParse->db->init.busy && !sqlite3WritableSchema(pParse->db) ){",
          "",
          "[Added Lines]",
          "1775:   if( (pParse->db->flags & SQLITE_NoDQS)!=0",
          "1776:    || (!pParse->db->init.busy",
          "1777:         && !sqlite3WritableSchema(pParse->db)",
          "1778:         && (pParse->db->flags & SQLITE_NoDQSSchema)!=0",
          "1779:       )",
          "1780:   ){",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "7075:       const char *zName;",
          "7076:       int op;",
          "7077:     } aDbConfig[] = {",
          "7087:     };",
          "7088:     int ii, v;",
          "7089:     open_db(p, 0);",
          "",
          "[Removed Lines]",
          "7078:         { \"enable_fkey\",      SQLITE_DBCONFIG_ENABLE_FKEY            },",
          "7079:         { \"enable_trigger\",   SQLITE_DBCONFIG_ENABLE_TRIGGER         },",
          "7080:         { \"fts3_tokenizer\",   SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER  },",
          "7081:         { \"load_extension\",   SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION  },",
          "7082:         { \"no_ckpt_on_close\", SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE       },",
          "7083:         { \"enable_qpsg\",      SQLITE_DBCONFIG_ENABLE_QPSG            },",
          "7084:         { \"trigger_eqp\",      SQLITE_DBCONFIG_TRIGGER_EQP            },",
          "7085:         { \"reset_database\",   SQLITE_DBCONFIG_RESET_DATABASE         },",
          "7086:         { \"defensive\",        SQLITE_DBCONFIG_DEFENSIVE              },",
          "",
          "[Added Lines]",
          "7078:         { \"enable_fkey\",        SQLITE_DBCONFIG_ENABLE_FKEY           },",
          "7079:         { \"enable_trigger\",     SQLITE_DBCONFIG_ENABLE_TRIGGER        },",
          "7080:         { \"fts3_tokenizer\",     SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER },",
          "7081:         { \"load_extension\",     SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION },",
          "7082:         { \"no_ckpt_on_close\",   SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE      },",
          "7083:         { \"enable_qpsg\",        SQLITE_DBCONFIG_ENABLE_QPSG           },",
          "7084:         { \"trigger_eqp\",        SQLITE_DBCONFIG_TRIGGER_EQP           },",
          "7085:         { \"reset_database\",     SQLITE_DBCONFIG_RESET_DATABASE        },",
          "7086:         { \"defensive\",          SQLITE_DBCONFIG_DEFENSIVE             },",
          "7087:         { \"wriable_schema\",     SQLITE_DBCONFIG_WRITABLE_SCHEMA       },",
          "7088:         { \"legacy_alter_table\", SQLITE_DBCONFIG_LEGACY_ALTER_TABLE    },",
          "7089:         { \"no_dqs_schema\",      SQLITE_DBCONFIG_NO_DQS_SCHEMA         },",
          "7090:         { \"no_dqs\",             SQLITE_DBCONFIG_NO_DQS                },",
          "",
          "---------------"
        ],
        "src/sqlite.h.in||src/sqlite.h.in": [
          "File: src/sqlite.h.in -> src/sqlite.h.in"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h"
        ],
        "src/test1.c||src/test1.c": [
          "File: src/test1.c -> src/test1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7608:     const char *zName;",
          "7609:     int eVal;",
          "7610:   } aSetting[] = {",
          "7620:   };",
          "7621:   int i;",
          "7622:   int v;",
          "",
          "[Removed Lines]",
          "7611:     { \"FKEY\",            SQLITE_DBCONFIG_ENABLE_FKEY },",
          "7612:     { \"TRIGGER\",         SQLITE_DBCONFIG_ENABLE_TRIGGER },",
          "7613:     { \"FTS3_TOKENIZER\",  SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER },",
          "7614:     { \"LOAD_EXTENSION\",  SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION },",
          "7615:     { \"NO_CKPT_ON_CLOSE\",SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE },",
          "7616:     { \"QPSG\",            SQLITE_DBCONFIG_ENABLE_QPSG },",
          "7617:     { \"TRIGGER_EQP\",     SQLITE_DBCONFIG_TRIGGER_EQP },",
          "7618:     { \"RESET_DB\",        SQLITE_DBCONFIG_RESET_DATABASE },",
          "7619:     { \"DEFENSIVE\",       SQLITE_DBCONFIG_DEFENSIVE },",
          "",
          "[Added Lines]",
          "7611:     { \"FKEY\",               SQLITE_DBCONFIG_ENABLE_FKEY },",
          "7612:     { \"TRIGGER\",            SQLITE_DBCONFIG_ENABLE_TRIGGER },",
          "7613:     { \"FTS3_TOKENIZER\",     SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER },",
          "7614:     { \"LOAD_EXTENSION\",     SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION },",
          "7615:     { \"NO_CKPT_ON_CLOSE\",   SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE },",
          "7616:     { \"QPSG\",               SQLITE_DBCONFIG_ENABLE_QPSG },",
          "7617:     { \"TRIGGER_EQP\",        SQLITE_DBCONFIG_TRIGGER_EQP },",
          "7618:     { \"RESET_DB\",           SQLITE_DBCONFIG_RESET_DATABASE },",
          "7619:     { \"DEFENSIVE\",          SQLITE_DBCONFIG_DEFENSIVE },",
          "7620:     { \"WRITABLE_SCHEMA\",    SQLITE_DBCONFIG_WRITABLE_SCHEMA },",
          "7621:     { \"LEGACY_ALTER_TABLE\", SQLITE_DBCONFIG_LEGACY_ALTER_TABLE },",
          "7622:     { \"NO_DQS_SCHEMA\",      SQLITE_DBCONFIG_NO_DQS_SCHEMA },",
          "7623:     { \"NO_DQS\",             SQLITE_DBCONFIG_NO_DQS },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "35a38e0836e64f9df6ab487a6844724e94fadce3",
      "candidate_info": {
        "commit_hash": "35a38e0836e64f9df6ab487a6844724e94fadce3",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/35a38e0836e64f9df6ab487a6844724e94fadce3",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c"
        ],
        "message": "Fix a harmless compiler warning.\n\nFossilOrigin-Name: 63c67a54b4d3e501f3059dcdfc6bb50c6b8dad63a34eb773e4408d9e4e780d7a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 83c2adffbfb6dcdddb38ad9f888647b0e39fa24dc0bff344238e1f75a6c7d2ed",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c"
        ]
      }
    },
    {
      "candidate_hash": "25050f26206456c62f400bdd95215701095b00a0",
      "candidate_info": {
        "commit_hash": "25050f26206456c62f400bdd95215701095b00a0",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/25050f26206456c62f400bdd95215701095b00a0",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c"
        ],
        "message": "Use an unsigned integer to count free pages in btree.c:freePage2().\n\nFossilOrigin-Name: 8820408597341344b308277ce6ef41b47c7514d6c613520789b05ee52cbedae8",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 80704a16f6dbbeacc65fa36a3623df10292a28aeacf9e2c1d2891258479e3b89",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c"
        ]
      }
    },
    {
      "candidate_hash": "3a07548b0d40b1f08574914aa3a2af07fbbc9596",
      "candidate_info": {
        "commit_hash": "3a07548b0d40b1f08574914aa3a2af07fbbc9596",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3a07548b0d40b1f08574914aa3a2af07fbbc9596",
        "files": [
          "ext/fts5/test/fts5vocab.test",
          "ext/fts5/test/fts5vocab2.test",
          "manifest",
          "manifest.uuid",
          "test/e_select.test",
          "test/triggerF.test",
          "test/unionvtab.test",
          "test/window1.test"
        ],
        "message": "Remove unnecessary whitespace from testcase result strings.\n\nFossilOrigin-Name: ad70f03ceda74163903d247a975666b35fae722a27c48dd3efd31c1164b5627e",
        "before_after_code_files": [
          "ext/fts5/test/fts5vocab.test||ext/fts5/test/fts5vocab.test",
          "ext/fts5/test/fts5vocab2.test||ext/fts5/test/fts5vocab2.test",
          "manifest.uuid||manifest.uuid",
          "test/e_select.test||test/e_select.test",
          "test/triggerF.test||test/triggerF.test",
          "test/unionvtab.test||test/unionvtab.test",
          "test/window1.test||test/window1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/test/fts5vocab.test||ext/fts5/test/fts5vocab.test": [
          "File: ext/fts5/test/fts5vocab.test -> ext/fts5/test/fts5vocab.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:   3 cnt {} 0 {} 0",
          "80: }",
          "85: do_execsql_test 1.3 {",
          "86:   INSERT INTO t1 VALUES('x y z');",
          "",
          "[Removed Lines]",
          "82: do_execsql_test 1.2.1 { SELECT * FROM v1 } { }",
          "83: do_execsql_test 1.2.2 { SELECT * FROM v2 } { }",
          "",
          "[Added Lines]",
          "82: do_execsql_test 1.2.1 { SELECT * FROM v1 } {}",
          "83: do_execsql_test 1.2.2 { SELECT * FROM v2 } {}",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5vocab2.test||ext/fts5/test/fts5vocab2.test": [
          "File: ext/fts5/test/fts5vocab2.test -> ext/fts5/test/fts5vocab2.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "80: do_execsql_test 1.5 {",
          "81:   DELETE FROM t1;",
          "82:   SELECT * FROM v1;",
          "86: #-------------------------------------------------------------------------",
          "87: #",
          "",
          "[Removed Lines]",
          "83: } {",
          "84: }",
          "",
          "[Added Lines]",
          "83: } {}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "143: do_execsql_test 2.5 {",
          "144:   DELETE FROM t1;",
          "145:   SELECT * FROM v1;",
          "149: #-------------------------------------------------------------------------",
          "150: #",
          "",
          "[Removed Lines]",
          "146: } {",
          "147: }",
          "",
          "[Added Lines]",
          "145: } {}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "202: do_execsql_test 3.5 {",
          "203:   DELETE FROM t1;",
          "204:   SELECT * FROM v1;",
          "208: finish_test",
          "",
          "[Removed Lines]",
          "205: } {",
          "206: }",
          "",
          "[Added Lines]",
          "203: } {}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 83935b950619855fb3bf05486091804ac2a61fb993c6ec826c89f943264fabc3",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/e_select.test||test/e_select.test": [
          "File: test/e_select.test -> test/e_select.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "167:   0102.1  \"SELECT count(*), max(a) FROM t1 GROUP BY b HAVING count(*)=1\" {",
          "168:     1 a 1 c 1 b",
          "169:   }",
          "172:   1101.1  \"SELECT DISTINCT count(*), max(a) FROM t1 GROUP BY b\" {1 a 1 c 1 b}",
          "173:   1102.1  \"SELECT DISTINCT count(*), max(a) FROM t1",
          "",
          "[Removed Lines]",
          "170:   0102.2  \"SELECT count(*), max(a) FROM t1 GROUP BY b HAVING count(*)=2\" { }",
          "",
          "[Added Lines]",
          "170:   0102.2  \"SELECT count(*), max(a) FROM t1 GROUP BY b HAVING count(*)=2\" {}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "175:     1 a 1 c 1 b",
          "176:   }",
          "177:   1102.2  \"SELECT DISTINCT count(*), max(a) FROM t1",
          "181:   2101.1  \"SELECT ALL count(*), max(a) FROM t1 GROUP BY b\" {1 a 1 c 1 b}",
          "182:   2102.1  \"SELECT ALL count(*), max(a) FROM t1",
          "",
          "[Removed Lines]",
          "178:            GROUP BY b HAVING count(*)=2\" {",
          "179:   }",
          "",
          "[Added Lines]",
          "178:            GROUP BY b HAVING count(*)=2\" {}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "184:     1 a 1 c 1 b",
          "185:   }",
          "186:   2102.2  \"SELECT ALL count(*), max(a) FROM t1",
          "190:   0011.1  \"SELECT 1, 2, 3 WHERE 1 GROUP BY 2\" {1 2 3}",
          "191:   0012.1  \"SELECT 1, 2, 3 WHERE 0 GROUP BY 2 HAVING count(*)=1\" {}",
          "",
          "[Removed Lines]",
          "187:            GROUP BY b HAVING count(*)=2\" {",
          "188:   }",
          "",
          "[Added Lines]",
          "186:            GROUP BY b HAVING count(*)=2\" {}",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "204:   0112.1  \"SELECT count(*), max(a) FROM t1",
          "205:            WHERE a='c' GROUP BY b HAVING count(*)=1\" {1 c}",
          "206:   0112.2  \"SELECT count(*), max(a) FROM t1",
          "208:   1111.1  \"SELECT DISTINCT count(*), max(a) FROM t1 WHERE a<'c' GROUP BY b\"",
          "209:           {1 a 1 b}",
          "210:   1112.1  \"SELECT DISTINCT count(*), max(a) FROM t1 WHERE a>'a'",
          "",
          "[Removed Lines]",
          "207:            WHERE 0 GROUP BY b HAVING count(*)=2\" { }",
          "",
          "[Added Lines]",
          "205:            WHERE 0 GROUP BY b HAVING count(*)=2\" {}",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "212:     1 c 1 b",
          "213:   }",
          "214:   1112.2  \"SELECT DISTINCT count(*), max(a) FROM t1 WHERE 0",
          "218:   2111.1  \"SELECT ALL count(*), max(a) FROM t1 WHERE b>'one' GROUP BY b\"",
          "219:           {1 c 1 b}",
          "",
          "[Removed Lines]",
          "215:            GROUP BY b HAVING count(*)=2\" {",
          "216:   }",
          "",
          "[Added Lines]",
          "213:            GROUP BY b HAVING count(*)=2\" {}",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "222:     1 a 1 c",
          "223:   }",
          "224:   2112.2  \"SELECT ALL count(*), max(a) FROM t1",
          "226: }",
          "",
          "[Removed Lines]",
          "225:            WHERE 0 GROUP BY b HAVING count(*)=2\" { }",
          "",
          "[Added Lines]",
          "222:            WHERE 0 GROUP BY b HAVING count(*)=2\" {}",
          "",
          "---------------"
        ],
        "test/triggerF.test||test/triggerF.test": [
          "File: test/triggerF.test -> test/triggerF.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: foreach {tn sql log} {",
          "25:   2 {",
          "26:     CREATE TRIGGER trd AFTER DELETE ON t1 BEGIN",
          "",
          "[Removed Lines]",
          "23:   1 { } { }",
          "",
          "[Added Lines]",
          "23:   1 {} {}",
          "",
          "---------------"
        ],
        "test/unionvtab.test||test/unionvtab.test": [
          "File: test/unionvtab.test -> test/unionvtab.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "373: }",
          "374: do_execsql_test 4.3.4 {",
          "375:   SELECT * FROM sl WHERE rowid<-9223372036854775808",
          "378: do_execsql_test 4.4.1 {",
          "379:   SELECT * FROM sl WHERE rowid<9223372036854775807",
          "",
          "[Removed Lines]",
          "376: } { }",
          "",
          "[Added Lines]",
          "376: } {}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "394: }",
          "395: do_execsql_test 4.4.4 {",
          "396:   SELECT * FROM sl WHERE rowid>9223372036854775807",
          "399: #-------------------------------------------------------------------------",
          "400: # More than 8 source tables.",
          "",
          "[Removed Lines]",
          "397: } { }",
          "",
          "[Added Lines]",
          "397: } {}",
          "",
          "---------------"
        ],
        "test/window1.test||test/window1.test": [
          "File: test/window1.test -> test/window1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "591:   SELECT a, rank() OVER(ORDER BY b) FROM t1",
          "592:     INTERSECT",
          "593:   SELECT a, rank() OVER(ORDER BY b DESC) FROM t1;",
          "597: # 2018-12-06",
          "598: # https://www.sqlite.org/src/info/f09fcd17810f65f7",
          "",
          "[Removed Lines]",
          "594: } {",
          "595: }",
          "",
          "[Added Lines]",
          "594: } {}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "acd6bb5fe4667730463d5e434b6c14999257e02c",
      "candidate_info": {
        "commit_hash": "acd6bb5fe4667730463d5e434b6c14999257e02c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/acd6bb5fe4667730463d5e434b6c14999257e02c",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/sqliteInt.h"
        ],
        "message": "Improvements to the automatic compile-time selection of byte-order, as suggested on the mailing list by Seb Kemper.\n\nFossilOrigin-Name: b7aad929619f7043b1685a6477d50f6b4436e85511eb365eceae3dd4dbab571a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/sqliteInt.h||src/sqliteInt.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3e1b55f3ab85710ed81574904718205c7370b5f0b5a41029e961486d2e3f37c7",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "832: #ifndef SQLITE_BYTEORDER",
          "837: #   define SQLITE_BYTEORDER    1234",
          "839: #   define SQLITE_BYTEORDER    4321",
          "840: # else",
          "841: #   define SQLITE_BYTEORDER 0",
          "",
          "[Removed Lines]",
          "833: # if defined(i386)     || defined(__i386__)   || defined(_M_IX86) ||    \\",
          "834:      defined(__x86_64) || defined(__x86_64__) || defined(_M_X64)  ||    \\",
          "835:      defined(_M_AMD64) || defined(_M_ARM)     || defined(__x86)   ||    \\",
          "836:      defined(__arm__)  || defined(_M_ARM64)",
          "838: # elif defined(sparc)    || defined(__ppc__)",
          "",
          "[Added Lines]",
          "833: # if defined(i386)      || defined(__i386__)      || defined(_M_IX86) ||    \\",
          "834:      defined(__x86_64)  || defined(__x86_64__)    || defined(_M_X64)  ||    \\",
          "835:      defined(_M_AMD64)  || defined(_M_ARM)        || defined(__x86)   ||    \\",
          "836:      defined(__ARMEL__) || defined(__AARCH64EL__) || defined(_M_ARM64)",
          "838: # elif defined(sparc)     || defined(__ppc__) || \\",
          "839:        defined(__ARMEB__) || defined(__AARCH64EB__)",
          "",
          "---------------"
        ]
      }
    }
  ]
}