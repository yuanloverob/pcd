{
  "cve_id": "CVE-2019-11498",
  "cve_desc": "WavpackSetConfiguration64 in pack_utils.c in libwavpack.a in WavPack through 5.1.0 has a \"Conditional jump or move depends on uninitialised value\" condition, which might allow attackers to cause a denial of service (application crash) via a DFF file that lacks valid sample-rate data.",
  "repo": "dbry/WavPack",
  "patch_hash": "bc6cba3f552c44565f7f1e66dc1580189addb2b4",
  "patch_info": {
    "commit_hash": "bc6cba3f552c44565f7f1e66dc1580189addb2b4",
    "repo": "dbry/WavPack",
    "commit_url": "https://github.com/dbry/WavPack/commit/bc6cba3f552c44565f7f1e66dc1580189addb2b4",
    "files": [
      "cli/dsdiff.c"
    ],
    "message": "issue #67: make sure sample rate is specified and non-zero in DFF files",
    "before_after_code_files": [
      "cli/dsdiff.c||cli/dsdiff.c"
    ]
  },
  "patch_diff": {
    "cli/dsdiff.c||cli/dsdiff.c": [
      "File: cli/dsdiff.c -> cli/dsdiff.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "181:             if (!strncmp (prop_chunk, \"SND \", 4)) {",
      "182:                 char *cptr = prop_chunk + 4, *eptr = prop_chunk + dff_chunk_header.ckDataSize;",
      "183:                 uint16_t numChannels = 0, chansSpecified, chanMask = 0;",
      "186:                 while (eptr - cptr >= sizeof (dff_chunk_header)) {",
      "187:                     memcpy (&dff_chunk_header, cptr, sizeof (dff_chunk_header));",
      "",
      "[Removed Lines]",
      "184:                 uint32_t sampleRate;",
      "",
      "[Added Lines]",
      "184:                 uint32_t sampleRate = 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "280:         }",
      "281:         else if (!strncmp (dff_chunk_header.ckID, \"DSD \", 4)) {",
      "284:                 error_line (\"%s is not a valid .DFF file!\", infilename);",
      "285:                 return WAVPACK_SOFT_ERROR;",
      "286:             }",
      "",
      "[Removed Lines]",
      "283:             if (!config->num_channels) {",
      "",
      "[Added Lines]",
      "283:             if (!config->num_channels || !config->sample_rate) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4c0faba32fddbd0745cbfaf1e1aeb3da5d35b9fc",
      "candidate_info": {
        "commit_hash": "4c0faba32fddbd0745cbfaf1e1aeb3da5d35b9fc",
        "repo": "dbry/WavPack",
        "commit_url": "https://github.com/dbry/WavPack/commit/4c0faba32fddbd0745cbfaf1e1aeb3da5d35b9fc",
        "files": [
          "cli/dsdiff.c"
        ],
        "message": "issue #65: make sure DSDIFF files have a valid channel count",
        "before_after_code_files": [
          "cli/dsdiff.c||cli/dsdiff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "cli/dsdiff.c||cli/dsdiff.c"
          ],
          "candidate": [
            "cli/dsdiff.c||cli/dsdiff.c"
          ]
        }
      },
      "candidate_diff": {
        "cli/dsdiff.c||cli/dsdiff.c": [
          "File: cli/dsdiff.c -> cli/dsdiff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "181:             if (!strncmp (prop_chunk, \"SND \", 4)) {",
          "182:                 char *cptr = prop_chunk + 4, *eptr = prop_chunk + dff_chunk_header.ckDataSize;",
          "184:                 uint32_t sampleRate;",
          "186:                 while (eptr - cptr >= sizeof (dff_chunk_header)) {",
          "",
          "[Removed Lines]",
          "183:                 uint16_t numChannels, chansSpecified, chanMask = 0;",
          "",
          "[Added Lines]",
          "183:                 uint16_t numChannels = 0, chansSpecified, chanMask = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "205:                             chansSpecified = (int)(dff_chunk_header.ckDataSize - sizeof (numChannels)) / 4;",
          "208:                                 error_line (\"%s is not a valid .DFF file!\", infilename);",
          "209:                                 free (prop_chunk);",
          "210:                                 return WAVPACK_SOFT_ERROR;",
          "",
          "[Removed Lines]",
          "207:                             if (numChannels < chansSpecified || numChannels < 1) {",
          "",
          "[Added Lines]",
          "207:                             if (numChannels < chansSpecified || numChannels < 1 || numChannels > 256) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "279:             free (prop_chunk);",
          "280:         }",
          "281:         else if (!strncmp (dff_chunk_header.ckID, \"DSD \", 4)) {",
          "282:             total_samples = dff_chunk_header.ckDataSize / config->num_channels;",
          "283:             break;",
          "284:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "283:             if (!config->num_channels) {",
          "284:                 error_line (\"%s is not a valid .DFF file!\", infilename);",
          "285:                 return WAVPACK_SOFT_ERROR;",
          "286:             }",
          "",
          "---------------"
        ]
      }
    }
  ]
}