{
  "cve_id": "CVE-2019-19925",
  "cve_desc": "zipfileUpdate in ext/misc/zipfile.c in SQLite 3.30.1 mishandles a NULL pathname during an update of a ZIP archive.",
  "repo": "sqlite/sqlite",
  "patch_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
  "patch_info": {
    "commit_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/54d501092d88c0cf89bec4279951f548fb0b8618",
    "files": [
      "ext/misc/zipfile.c",
      "manifest",
      "manifest.uuid",
      "test/zipfile.test"
    ],
    "message": "Fix the zipfile extension so that INSERT works even if the pathname of the file being inserted is a NULL.  Bug discovered by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: a80f84b511231204658304226de3e075a55afc2e3f39ac063716f7a57f585c06",
    "before_after_code_files": [
      "ext/misc/zipfile.c||ext/misc/zipfile.c",
      "manifest.uuid||manifest.uuid",
      "test/zipfile.test||test/zipfile.test"
    ]
  },
  "patch_diff": {
    "ext/misc/zipfile.c||ext/misc/zipfile.c": [
      "File: ext/misc/zipfile.c -> ext/misc/zipfile.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1620:     if( rc==SQLITE_OK ){",
      "1621:       zPath = (const char*)sqlite3_value_text(apVal[2]);",
      "1622:       nPath = (int)strlen(zPath);",
      "1623:       mTime = zipfileGetTime(apVal[4]);",
      "1624:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1622:       if( zPath==0 ) zPath = \"\";",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: fccfb8a9ed3c1df9f23762bb8df6fdf36a21118899e3fae41f451169a5f2c08e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "test/zipfile.test||test/zipfile.test": [
      "File: test/zipfile.test -> test/zipfile.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "795:   } {. ./x1.txt ./x2.txt}",
      "796: }",
      "798: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "798: # 2019-12-18 Yongheng and Rui fuzzer",
      "799: #",
      "800: do_execsql_test 13.10 {",
      "801:   DROP TABLE IF EXISTS t0;",
      "802:   DROP TABLE IF EXISTS t1;",
      "803:   CREATE TABLE t0(a,b,c,d,e,f,g);",
      "804:   REPLACE INTO t0(c,b,f) VALUES(10,10,10);",
      "805:   CREATE VIRTUAL TABLE t1 USING zipfile('h.zip');",
      "806:   REPLACE INTO t1 SELECT * FROM t0;",
      "807:   SELECT quote(name),quote(mode),quote(mtime),quote(sz),quote(rawdata),",
      "808:          quote(data),quote(method) FROM t1;",
      "809: } {'' 10 10 2 X'3130' X'3130' 0}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4fc836546e035fc18a4bf66c3bb895dc5af10fa0",
      "candidate_info": {
        "commit_hash": "4fc836546e035fc18a4bf66c3bb895dc5af10fa0",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4fc836546e035fc18a4bf66c3bb895dc5af10fa0",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/in.test"
        ],
        "message": "Fix a bug introduced earlier today by check-in [88833a9c2849c959]. Ticket [29f635e0af71234b]\n\nFossilOrigin-Name: 6e7b4527d32cc1be0294614b9d7363d4b59cf654a954b86515b3f6888975ce73",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/in.test||test/in.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9490683ae883561fa347cbe54ebdd61188d849b4852d904b508250ba5d0807ef",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3132:     }",
          "3133:     bLhsReal = sqlite3ExprAffinity(pExpr->pLeft)==SQLITE_AFF_REAL;",
          "3134:     for(ii=0; ii<pList->nExpr; ii++){",
          "3136:       if( bLhsReal ){",
          "3137:         sqlite3VdbeAddOp4(v, OP_Affinity, r2, 1, 0, \"E\", P4_STATIC);",
          "3138:       }",
          "3139:       if( regCkNull && sqlite3ExprCanBeNull(pList->a[ii].pExpr) ){",
          "3140:         sqlite3VdbeAddOp3(v, OP_BitAnd, regCkNull, r2, regCkNull);",
          "",
          "[Removed Lines]",
          "3135:       r2 = sqlite3ExprCodeTemp(pParse, pList->a[ii].pExpr, &regToFree);",
          "",
          "[Added Lines]",
          "3136:         r2 = regToFree = sqlite3GetTempReg(pParse);",
          "3137:         sqlite3ExprCode(pParse, pList->a[ii].pExpr, r2);",
          "3139:       }else{",
          "3140:         r2 = sqlite3ExprCodeTemp(pParse, pList->a[ii].pExpr, &regToFree);",
          "",
          "---------------"
        ],
        "test/in.test||test/in.test": [
          "File: test/in.test -> test/in.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "763: # For the IN_INDEX_NOOP optimization, apply REAL affinity to the LHS",
          "764: # values prior to comparison if the RHS has REAL affinity.",
          "765: #",
          "766: do_execsql_test in-19.1 {",
          "767:   DROP TABLE IF EXISTS t0;",
          "768:   CREATE TABLE t0(c0 REAL UNIQUE);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "766: # Also ticket https://sqlite.org/src/info/29f635e0af71234b",
          "767: #",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "775: do_execsql_test in-19.3 {",
          "776:   SELECT c0 IN ('2070934912552030444',2,3) FROM t0;",
          "777: } {1}",
          "779: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "780: do_execsql_test in-19.4 {",
          "781:   DROP TABLE t0;",
          "782:   CREATE TABLE t0(c0 TEXT, c1 REAL, c2, PRIMARY KEY(c2, c0, c1));",
          "783:   CREATE INDEX i0 ON t0(c1 IN (c0));",
          "784:   INSERT INTO t0(c0, c2) VALUES (0, NULL) ON CONFLICT(c2, c1, c0) DO NOTHING;",
          "785:   PRAGMA integrity_check;",
          "786: } {ok}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "af94adf049218f9d3675fd796663aa3e021f7d88",
      "candidate_info": {
        "commit_hash": "af94adf049218f9d3675fd796663aa3e021f7d88",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/af94adf049218f9d3675fd796663aa3e021f7d88",
        "files": [
          "autoconf/Makefile.msc",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Update the autoconf makefile for MSVC.\n\nFossilOrigin-Name: 9455643eecb74c8ac93ad3b3566f30e380dd912cdce3de993da5af42973ac59c",
        "before_after_code_files": [
          "autoconf/Makefile.msc||autoconf/Makefile.msc",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "autoconf/Makefile.msc||autoconf/Makefile.msc": [
          "File: autoconf/Makefile.msc -> autoconf/Makefile.msc",
          "--- Hunk 1 ---",
          "[Context before]",
          "282: OPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_STMTVTAB=1",
          "283: OPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_DBPAGE_VTAB=1",
          "284: OPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_DBSTAT_VTAB=1",
          "286: OPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_DESERIALIZE=1",
          "287: !ENDIF",
          "288: OPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_COLUMN_METADATA=1",
          "",
          "[Removed Lines]",
          "285: OPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_INTROSPECTION_PRAGMAS=1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 73a82114733af2a316f20eb8578badef307d14286c6ec03197744a6793425161",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "30ad79aeb4cc1243817fdb3c1b0b51a61bbb5f97",
      "candidate_info": {
        "commit_hash": "30ad79aeb4cc1243817fdb3c1b0b51a61bbb5f97",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/30ad79aeb4cc1243817fdb3c1b0b51a61bbb5f97",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c"
        ],
        "message": "Improvements to the view-self-join optimization so that it works on all VIEWs, not just on Common Table Expressions.\n\nFossilOrigin-Name: d2fe370cafa9b11f6c3eb4e1c3be48d9d2610b9d2f9d9ebf9e50267f9079dfc0",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: cb1d06521de5918a2324a41e207b48c5e5149c23b927b9e3e1f3c3b38b82658e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5481:     if( pItem->pSelect==0 ) continue;",
          "5482:     if( pItem->fg.viaCoroutine ) continue;",
          "5483:     if( pItem->zName==0 ) continue;",
          "5485:     if( sqlite3_stricmp(pItem->zName, pThis->zName)!=0 ) continue;",
          "5486:     pS1 = pItem->pSelect;",
          "5490:       continue;",
          "",
          "[Removed Lines]",
          "5484:     if( sqlite3_stricmp(pItem->zDatabase, pThis->zDatabase)!=0 ) continue;",
          "5487:     if( pThis->pSelect->selId!=pS1->selId ){",
          "",
          "[Added Lines]",
          "5484:     assert( pItem->pTab!=0 );",
          "5485:     assert( pThis->pTab!=0 );",
          "5486:     if( pItem->pTab->pSchema!=pThis->pTab->pSchema ) continue;",
          "5489:     if( pItem->pTab->pSchema==0 && pThis->pSelect->selId!=pS1->selId ){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "76fd7be3a31d466202bc6ee9026d02150fcc12da",
      "candidate_info": {
        "commit_hash": "76fd7be3a31d466202bc6ee9026d02150fcc12da",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/76fd7be3a31d466202bc6ee9026d02150fcc12da",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c"
        ],
        "message": "Improved comments and extra testcase() macros on the serial-type computation logic in the OP_MakeRecord opcode.\n\nFossilOrigin-Name: 18bfb2179ce2c60cec8f5859a84b737731a5e53b28e35072cbb249f18b94262b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 2578e3c64b0a92ab92143f18d107a1a180bd6fa87243661930771c4c080f8098",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2943:         assert( pOp->p5==OPFLAG_NOCHNG_MAGIC || CORRUPT_DB );",
          "2944:         pRec->uTemp = 10;",
          "2945:       }else{",
          "2947:       }",
          "2948:       nHdr++;",
          "2949:     }else if( pRec->flags & (MEM_Int|MEM_IntReal) ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2969:         pRec->uTemp = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2958:         u = i;",
          "2959:       }",
          "2960:       nHdr++;",
          "2961:       if( u<=127 ){",
          "2962:         if( (i&1)==i && file_format>=4 ){",
          "2963:           pRec->uTemp = 8+(u32)u;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2984:       testcase( u==127 );               testcase( u==128 );",
          "2985:       testcase( u==32767 );             testcase( u==32768 );",
          "2986:       testcase( u==8388607 );           testcase( u==8388608 );",
          "2987:       testcase( u==2147483647 );        testcase( u==2147483648 );",
          "2988:       testcase( u==140737488355327LL ); testcase( u==140737488355328LL );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3a07548b0d40b1f08574914aa3a2af07fbbc9596",
      "candidate_info": {
        "commit_hash": "3a07548b0d40b1f08574914aa3a2af07fbbc9596",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3a07548b0d40b1f08574914aa3a2af07fbbc9596",
        "files": [
          "ext/fts5/test/fts5vocab.test",
          "ext/fts5/test/fts5vocab2.test",
          "manifest",
          "manifest.uuid",
          "test/e_select.test",
          "test/triggerF.test",
          "test/unionvtab.test",
          "test/window1.test"
        ],
        "message": "Remove unnecessary whitespace from testcase result strings.\n\nFossilOrigin-Name: ad70f03ceda74163903d247a975666b35fae722a27c48dd3efd31c1164b5627e",
        "before_after_code_files": [
          "ext/fts5/test/fts5vocab.test||ext/fts5/test/fts5vocab.test",
          "ext/fts5/test/fts5vocab2.test||ext/fts5/test/fts5vocab2.test",
          "manifest.uuid||manifest.uuid",
          "test/e_select.test||test/e_select.test",
          "test/triggerF.test||test/triggerF.test",
          "test/unionvtab.test||test/unionvtab.test",
          "test/window1.test||test/window1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/test/fts5vocab.test||ext/fts5/test/fts5vocab.test": [
          "File: ext/fts5/test/fts5vocab.test -> ext/fts5/test/fts5vocab.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:   3 cnt {} 0 {} 0",
          "80: }",
          "85: do_execsql_test 1.3 {",
          "86:   INSERT INTO t1 VALUES('x y z');",
          "",
          "[Removed Lines]",
          "82: do_execsql_test 1.2.1 { SELECT * FROM v1 } { }",
          "83: do_execsql_test 1.2.2 { SELECT * FROM v2 } { }",
          "",
          "[Added Lines]",
          "82: do_execsql_test 1.2.1 { SELECT * FROM v1 } {}",
          "83: do_execsql_test 1.2.2 { SELECT * FROM v2 } {}",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5vocab2.test||ext/fts5/test/fts5vocab2.test": [
          "File: ext/fts5/test/fts5vocab2.test -> ext/fts5/test/fts5vocab2.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "80: do_execsql_test 1.5 {",
          "81:   DELETE FROM t1;",
          "82:   SELECT * FROM v1;",
          "86: #-------------------------------------------------------------------------",
          "87: #",
          "",
          "[Removed Lines]",
          "83: } {",
          "84: }",
          "",
          "[Added Lines]",
          "83: } {}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "143: do_execsql_test 2.5 {",
          "144:   DELETE FROM t1;",
          "145:   SELECT * FROM v1;",
          "149: #-------------------------------------------------------------------------",
          "150: #",
          "",
          "[Removed Lines]",
          "146: } {",
          "147: }",
          "",
          "[Added Lines]",
          "145: } {}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "202: do_execsql_test 3.5 {",
          "203:   DELETE FROM t1;",
          "204:   SELECT * FROM v1;",
          "208: finish_test",
          "",
          "[Removed Lines]",
          "205: } {",
          "206: }",
          "",
          "[Added Lines]",
          "203: } {}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 83935b950619855fb3bf05486091804ac2a61fb993c6ec826c89f943264fabc3",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/e_select.test||test/e_select.test": [
          "File: test/e_select.test -> test/e_select.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "167:   0102.1  \"SELECT count(*), max(a) FROM t1 GROUP BY b HAVING count(*)=1\" {",
          "168:     1 a 1 c 1 b",
          "169:   }",
          "172:   1101.1  \"SELECT DISTINCT count(*), max(a) FROM t1 GROUP BY b\" {1 a 1 c 1 b}",
          "173:   1102.1  \"SELECT DISTINCT count(*), max(a) FROM t1",
          "",
          "[Removed Lines]",
          "170:   0102.2  \"SELECT count(*), max(a) FROM t1 GROUP BY b HAVING count(*)=2\" { }",
          "",
          "[Added Lines]",
          "170:   0102.2  \"SELECT count(*), max(a) FROM t1 GROUP BY b HAVING count(*)=2\" {}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "175:     1 a 1 c 1 b",
          "176:   }",
          "177:   1102.2  \"SELECT DISTINCT count(*), max(a) FROM t1",
          "181:   2101.1  \"SELECT ALL count(*), max(a) FROM t1 GROUP BY b\" {1 a 1 c 1 b}",
          "182:   2102.1  \"SELECT ALL count(*), max(a) FROM t1",
          "",
          "[Removed Lines]",
          "178:            GROUP BY b HAVING count(*)=2\" {",
          "179:   }",
          "",
          "[Added Lines]",
          "178:            GROUP BY b HAVING count(*)=2\" {}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "184:     1 a 1 c 1 b",
          "185:   }",
          "186:   2102.2  \"SELECT ALL count(*), max(a) FROM t1",
          "190:   0011.1  \"SELECT 1, 2, 3 WHERE 1 GROUP BY 2\" {1 2 3}",
          "191:   0012.1  \"SELECT 1, 2, 3 WHERE 0 GROUP BY 2 HAVING count(*)=1\" {}",
          "",
          "[Removed Lines]",
          "187:            GROUP BY b HAVING count(*)=2\" {",
          "188:   }",
          "",
          "[Added Lines]",
          "186:            GROUP BY b HAVING count(*)=2\" {}",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "204:   0112.1  \"SELECT count(*), max(a) FROM t1",
          "205:            WHERE a='c' GROUP BY b HAVING count(*)=1\" {1 c}",
          "206:   0112.2  \"SELECT count(*), max(a) FROM t1",
          "208:   1111.1  \"SELECT DISTINCT count(*), max(a) FROM t1 WHERE a<'c' GROUP BY b\"",
          "209:           {1 a 1 b}",
          "210:   1112.1  \"SELECT DISTINCT count(*), max(a) FROM t1 WHERE a>'a'",
          "",
          "[Removed Lines]",
          "207:            WHERE 0 GROUP BY b HAVING count(*)=2\" { }",
          "",
          "[Added Lines]",
          "205:            WHERE 0 GROUP BY b HAVING count(*)=2\" {}",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "212:     1 c 1 b",
          "213:   }",
          "214:   1112.2  \"SELECT DISTINCT count(*), max(a) FROM t1 WHERE 0",
          "218:   2111.1  \"SELECT ALL count(*), max(a) FROM t1 WHERE b>'one' GROUP BY b\"",
          "219:           {1 c 1 b}",
          "",
          "[Removed Lines]",
          "215:            GROUP BY b HAVING count(*)=2\" {",
          "216:   }",
          "",
          "[Added Lines]",
          "213:            GROUP BY b HAVING count(*)=2\" {}",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "222:     1 a 1 c",
          "223:   }",
          "224:   2112.2  \"SELECT ALL count(*), max(a) FROM t1",
          "226: }",
          "",
          "[Removed Lines]",
          "225:            WHERE 0 GROUP BY b HAVING count(*)=2\" { }",
          "",
          "[Added Lines]",
          "222:            WHERE 0 GROUP BY b HAVING count(*)=2\" {}",
          "",
          "---------------"
        ],
        "test/triggerF.test||test/triggerF.test": [
          "File: test/triggerF.test -> test/triggerF.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: foreach {tn sql log} {",
          "25:   2 {",
          "26:     CREATE TRIGGER trd AFTER DELETE ON t1 BEGIN",
          "",
          "[Removed Lines]",
          "23:   1 { } { }",
          "",
          "[Added Lines]",
          "23:   1 {} {}",
          "",
          "---------------"
        ],
        "test/unionvtab.test||test/unionvtab.test": [
          "File: test/unionvtab.test -> test/unionvtab.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "373: }",
          "374: do_execsql_test 4.3.4 {",
          "375:   SELECT * FROM sl WHERE rowid<-9223372036854775808",
          "378: do_execsql_test 4.4.1 {",
          "379:   SELECT * FROM sl WHERE rowid<9223372036854775807",
          "",
          "[Removed Lines]",
          "376: } { }",
          "",
          "[Added Lines]",
          "376: } {}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "394: }",
          "395: do_execsql_test 4.4.4 {",
          "396:   SELECT * FROM sl WHERE rowid>9223372036854775807",
          "399: #-------------------------------------------------------------------------",
          "400: # More than 8 source tables.",
          "",
          "[Removed Lines]",
          "397: } { }",
          "",
          "[Added Lines]",
          "397: } {}",
          "",
          "---------------"
        ],
        "test/window1.test||test/window1.test": [
          "File: test/window1.test -> test/window1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "591:   SELECT a, rank() OVER(ORDER BY b) FROM t1",
          "592:     INTERSECT",
          "593:   SELECT a, rank() OVER(ORDER BY b DESC) FROM t1;",
          "597: # 2018-12-06",
          "598: # https://www.sqlite.org/src/info/f09fcd17810f65f7",
          "",
          "[Removed Lines]",
          "594: } {",
          "595: }",
          "",
          "[Added Lines]",
          "594: } {}",
          "",
          "---------------"
        ]
      }
    }
  ]
}