{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8a4d96ac8227f39043735faa9e9a30e22818f5e8",
      "candidate_info": {
        "commit_hash": "8a4d96ac8227f39043735faa9e9a30e22818f5e8",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/8a4d96ac8227f39043735faa9e9a30e22818f5e8",
        "files": [
          "CHANGES",
          "NEWS",
          "README",
          "include/openssl/opensslv.h"
        ],
        "message": "Prepare for 1.1.0d release\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
        "before_after_code_files": [
          "include/openssl/opensslv.h||include/openssl/opensslv.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/opensslv.h||include/openssl/opensslv.h": [
          "File: include/openssl/opensslv.h -> include/openssl/opensslv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: # ifdef OPENSSL_FIPS",
          "45: # else",
          "47: # endif",
          "",
          "[Removed Lines]",
          "42: # define OPENSSL_VERSION_NUMBER  0x10100040L",
          "44: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0d-fips-dev  xx XXX xxxx\"",
          "46: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0d-dev  xx XXX xxxx\"",
          "",
          "[Added Lines]",
          "42: # define OPENSSL_VERSION_NUMBER  0x1010004fL",
          "44: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0d-fips  26 Jan 2017\"",
          "46: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0d  26 Jan 2017\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "81d5808064949e6f23c1eaac4b24f09c8b1255db",
      "candidate_info": {
        "commit_hash": "81d5808064949e6f23c1eaac4b24f09c8b1255db",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/81d5808064949e6f23c1eaac4b24f09c8b1255db",
        "files": [
          "crypto/ct/ct_policy.c"
        ],
        "message": "By default, allow SCT timestamps to be up to 5 minutes in the future\n\nAs requested in\nhttps://github.com/openssl/openssl/pull/1554#issuecomment-246371575.\n\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1554)\n(cherry picked from commit c22aa33e29ce162c672c9b2f0df591db977d4e9b)",
        "before_after_code_files": [
          "crypto/ct/ct_policy.c||crypto/ct/ct_policy.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ct/ct_policy.c||crypto/ct/ct_policy.c": [
          "File: crypto/ct/ct_policy.c -> crypto/ct/ct_policy.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: #include \"ct_locl.h\"",
          "20: CT_POLICY_EVAL_CTX *CT_POLICY_EVAL_CTX_new(void)",
          "21: {",
          "22:     CT_POLICY_EVAL_CTX *ctx = OPENSSL_zalloc(sizeof(CT_POLICY_EVAL_CTX));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: static const time_t SCT_CLOCK_DRIFT_TOLERANCE = 300;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27:     }",
          "31:     return ctx;",
          "32: }",
          "",
          "[Removed Lines]",
          "30:     ctx->epoch_time_in_ms = time(NULL) * 1000;",
          "",
          "[Added Lines]",
          "36:     ctx->epoch_time_in_ms = (time(NULL) + SCT_CLOCK_DRIFT_TOLERANCE) * 1000;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c08ce19e7972d0e85833b257d74f1e460c4a8b8e",
      "candidate_info": {
        "commit_hash": "c08ce19e7972d0e85833b257d74f1e460c4a8b8e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c08ce19e7972d0e85833b257d74f1e460c4a8b8e",
        "files": [
          "crypto/x509v3/v3_utl.c"
        ],
        "message": "Missing free item on push failure\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1905)\n(cherry picked from commit 2d13250fd695eba777fe7e2af4beb1b7d356bd8f)",
        "before_after_code_files": [
          "crypto/x509v3/v3_utl.c||crypto/x509v3/v3_utl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/x509v3/v3_utl.c||crypto/x509v3/v3_utl.c": [
          "File: crypto/x509v3/v3_utl.c -> crypto/x509v3/v3_utl.c"
        ]
      }
    },
    {
      "candidate_hash": "3588a2bd1f5b11e259417829518917609a7d0031",
      "candidate_info": {
        "commit_hash": "3588a2bd1f5b11e259417829518917609a7d0031",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/3588a2bd1f5b11e259417829518917609a7d0031",
        "files": [
          "util/libcrypto.num"
        ],
        "message": "Code health: make update\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2793)\n(cherry picked from commit 77baccd7fac7cf480e3a3981b7deae5ef3b812b9)",
        "before_after_code_files": [
          "util/libcrypto.num||util/libcrypto.num"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/libcrypto.num||util/libcrypto.num": [
          "File: util/libcrypto.num -> util/libcrypto.num",
          "--- Hunk 1 ---",
          "[Context before]",
          "153: X509_REVOKED_get_ext_count              154 1_1_0 EXIST::FUNCTION:",
          "154: BN_is_prime_fasttest_ex                 155 1_1_0 EXIST::FUNCTION:",
          "155: ERR_load_PKCS12_strings                 156 1_1_0 EXIST::FUNCTION:",
          "157: i2d_DHparams                            158 1_1_0 EXIST::FUNCTION:DH",
          "158: TS_VERIFY_CTX_set_store                 159 1_1_0 EXIST::FUNCTION:TS",
          "159: PKCS12_verify_mac                       160 1_1_0 EXIST::FUNCTION:",
          "",
          "[Removed Lines]",
          "156: EVP_sha384                              157 1_1_0 EXIST:!VMSVAX:FUNCTION:",
          "",
          "[Added Lines]",
          "156: EVP_sha384                              157 1_1_0 EXIST::FUNCTION:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1420: SRP_Calc_server_key                     1409 1_1_0 EXIST::FUNCTION:SRP",
          "1421: BN_mod_exp_simple                       1410 1_1_0 EXIST::FUNCTION:",
          "1422: BIO_set_ex_data                         1411 1_1_0 EXIST::FUNCTION:",
          "1424: X509_STORE_CTX_get_explicit_policy      1413 1_1_0 EXIST::FUNCTION:",
          "1425: EVP_DecodeBlock                         1414 1_1_0 EXIST::FUNCTION:",
          "1426: OCSP_REQ_CTX_http                       1415 1_1_0 EXIST::FUNCTION:OCSP",
          "",
          "[Removed Lines]",
          "1423: SHA512                                  1412 1_1_0 EXIST:!VMSVAX:FUNCTION:",
          "",
          "[Added Lines]",
          "1423: SHA512                                  1412 1_1_0 EXIST::FUNCTION:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1487: CRYPTO_mem_debug_free                   1475 1_1_0 EXIST::FUNCTION:CRYPTO_MDEBUG",
          "1488: d2i_OCSP_REQUEST                        1476 1_1_0 EXIST::FUNCTION:OCSP",
          "1489: ENGINE_get_cipher_engine                1477 1_1_0 EXIST::FUNCTION:ENGINE",
          "1491: TS_RESP_CTX_set_certs                   1479 1_1_0 EXIST::FUNCTION:TS",
          "1492: BN_MONT_CTX_free                        1480 1_1_0 EXIST::FUNCTION:",
          "1493: BN_GF2m_mod_solve_quad_arr              1481 1_1_0 EXIST::FUNCTION:EC2M",
          "",
          "[Removed Lines]",
          "1490: SHA384_Final                            1478 1_1_0 EXIST:!VMSVAX:FUNCTION:",
          "",
          "[Added Lines]",
          "1490: SHA384_Final                            1478 1_1_0 EXIST::FUNCTION:",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2829: X509_get_pubkey_parameters              2787 1_1_0 EXIST::FUNCTION:",
          "2830: PKCS12_setup_mac                        2788 1_1_0 EXIST::FUNCTION:",
          "2831: PEM_read_bio_PKCS7                      2789 1_1_0 EXIST::FUNCTION:",
          "2833: X509_VERIFY_PARAM_set1_host             2791 1_1_0 EXIST::FUNCTION:",
          "2834: OCSP_resp_find_status                   2792 1_1_0 EXIST::FUNCTION:OCSP",
          "2835: d2i_ASN1_T61STRING                      2793 1_1_0 EXIST::FUNCTION:",
          "",
          "[Removed Lines]",
          "2832: SHA512_Final                            2790 1_1_0 EXIST:!VMSVAX:FUNCTION:",
          "",
          "[Added Lines]",
          "2832: SHA512_Final                            2790 1_1_0 EXIST::FUNCTION:",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3010: ENGINE_get_finish_function              2965 1_1_0 EXIST::FUNCTION:ENGINE",
          "3011: EC_POINT_add                            2966 1_1_0 EXIST::FUNCTION:EC",
          "3012: EC_KEY_oct2key                          2967 1_1_0 EXIST::FUNCTION:EC",
          "3014: ASN1_UNIVERSALSTRING_new                2969 1_1_0 EXIST::FUNCTION:",
          "3015: EVP_PKEY_print_private                  2970 1_1_0 EXIST::FUNCTION:",
          "3016: ASN1_INTEGER_new                        2971 1_1_0 EXIST::FUNCTION:",
          "",
          "[Removed Lines]",
          "3013: SHA384_Init                             2968 1_1_0 EXIST:!VMSVAX:FUNCTION:",
          "",
          "[Added Lines]",
          "3013: SHA384_Init                             2968 1_1_0 EXIST::FUNCTION:",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3038: EVP_PKEY_new                            2992 1_1_0 EXIST::FUNCTION:",
          "3039: i2d_POLICYINFO                          2993 1_1_0 EXIST::FUNCTION:",
          "3040: BN_get_flags                            2994 1_1_0 EXIST::FUNCTION:",
          "3042: NCONF_get_string                        2996 1_1_0 EXIST::FUNCTION:",
          "3043: d2i_PROXY_CERT_INFO_EXTENSION           2997 1_1_0 EXIST::FUNCTION:",
          "3044: EC_POINT_point2buf                      2998 1_1_0 EXIST::FUNCTION:EC",
          "",
          "[Removed Lines]",
          "3041: SHA384                                  2995 1_1_0 EXIST:!VMSVAX:FUNCTION:",
          "",
          "[Added Lines]",
          "3041: SHA384                                  2995 1_1_0 EXIST::FUNCTION:",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3093: EVP_DecryptUpdate                       3046 1_1_0 EXIST::FUNCTION:",
          "3094: CAST_cbc_encrypt                        3047 1_1_0 EXIST::FUNCTION:CAST",
          "3095: BN_BLINDING_invert                      3048 1_1_0 EXIST::FUNCTION:",
          "3097: ESS_ISSUER_SERIAL_new                   3050 1_1_0 EXIST::FUNCTION:TS",
          "3098: PKCS12_SAFEBAG_get0_pkcs8               3051 1_1_0 EXIST::FUNCTION:",
          "3099: X509_get_ext_by_NID                     3052 1_1_0 EXIST::FUNCTION:",
          "",
          "[Removed Lines]",
          "3096: SHA512_Update                           3049 1_1_0 EXIST:!VMSVAX:FUNCTION:",
          "",
          "[Added Lines]",
          "3096: SHA512_Update                           3049 1_1_0 EXIST::FUNCTION:",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "3337: EVP_PKEY_CTX_free                       3290 1_1_0 EXIST::FUNCTION:",
          "3338: PBEPARAM_free                           3291 1_1_0 EXIST::FUNCTION:",
          "3339: NETSCAPE_SPKI_set_pubkey                3292 1_1_0 EXIST::FUNCTION:",
          "3341: X509_CRL_match                          3294 1_1_0 EXIST::FUNCTION:",
          "3342: i2s_ASN1_IA5STRING                      3295 1_1_0 EXIST::FUNCTION:",
          "3343: EC_KEY_get_default_method               3296 1_1_0 EXIST::FUNCTION:EC",
          "",
          "[Removed Lines]",
          "3340: EVP_sha512                              3293 1_1_0 EXIST:!VMSVAX:FUNCTION:",
          "",
          "[Added Lines]",
          "3340: EVP_sha512                              3293 1_1_0 EXIST::FUNCTION:",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3444: X509_OBJECT_retrieve_match              3396 1_1_0 EXIST::FUNCTION:",
          "3445: EVP_aes_128_ctr                         3397 1_1_0 EXIST::FUNCTION:",
          "3446: EVP_PBE_find                            3398 1_1_0 EXIST::FUNCTION:",
          "3448: ERR_add_error_vdata                     3400 1_1_0 EXIST::FUNCTION:",
          "3449: OCSP_REQUEST_get_ext                    3401 1_1_0 EXIST::FUNCTION:OCSP",
          "3450: NETSCAPE_SPKAC_new                      3402 1_1_0 EXIST::FUNCTION:",
          "",
          "[Removed Lines]",
          "3447: SHA512_Transform                        3399 1_1_0 EXIST:!VMSVAX:FUNCTION:",
          "",
          "[Added Lines]",
          "3447: SHA512_Transform                        3399 1_1_0 EXIST::FUNCTION:",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3676: TS_RESP_CTX_free                        3632 1_1_0 EXIST::FUNCTION:TS",
          "3677: d2i_PUBKEY                              3633 1_1_0 EXIST::FUNCTION:",
          "3678: ASYNC_cleanup_thread                    3634 1_1_0 EXIST::FUNCTION:",
          "3680: CRYPTO_cfb128_1_encrypt                 3636 1_1_0 EXIST::FUNCTION:",
          "3681: BIO_set_cipher                          3637 1_1_0 EXIST::FUNCTION:",
          "3682: PEM_read_PUBKEY                         3638 1_1_0 EXIST::FUNCTION:STDIO",
          "",
          "[Removed Lines]",
          "3679: SHA384_Update                           3635 1_1_0 EXIST:!VMSVAX:FUNCTION:",
          "",
          "[Added Lines]",
          "3679: SHA384_Update                           3635 1_1_0 EXIST::FUNCTION:",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "3951: d2i_OCSP_SINGLERESP                     3900 1_1_0 EXIST::FUNCTION:OCSP",
          "3952: EVP_CIPHER_CTX_num                      3901 1_1_0 EXIST::FUNCTION:",
          "3953: EVP_PKEY_verify_recover_init            3902 1_1_0 EXIST::FUNCTION:",
          "3955: TS_MSG_IMPRINT_set_msg                  3904 1_1_0 EXIST::FUNCTION:TS",
          "3956: CMS_unsigned_add1_attr                  3905 1_1_0 EXIST::FUNCTION:CMS",
          "3957: OPENSSL_LH_doall                        3906 1_1_0 EXIST::FUNCTION:",
          "",
          "[Removed Lines]",
          "3954: SHA512_Init                             3903 1_1_0 EXIST:!VMSVAX:FUNCTION:",
          "",
          "[Added Lines]",
          "3954: SHA512_Init                             3903 1_1_0 EXIST::FUNCTION:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3c9e644192256001cc04f3faa1249313b5b1b481",
      "candidate_info": {
        "commit_hash": "3c9e644192256001cc04f3faa1249313b5b1b481",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/3c9e644192256001cc04f3faa1249313b5b1b481",
        "files": [
          "engines/e_capi.c"
        ],
        "message": "engine/e_capi.c: more formatting and styling fixes.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(cherry picked from commit 8f0e5888ea4c577c5a1f0d667786da6376099c86)",
        "before_after_code_files": [
          "engines/e_capi.c||engines/e_capi.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "engines/e_capi.c||engines/e_capi.c": [
          "File: engines/e_capi.c -> engines/e_capi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "108: static void capi_addlasterror(void);",
          "109: static void capi_adderror(DWORD err);",
          "119:                                      HCERTSTORE hstore);",
          "123: static EVP_PKEY *capi_load_privkey(ENGINE *eng, const char *key_id,",
          "124:                                    UI_METHOD *ui_method, void *callback_data);",
          "",
          "[Removed Lines]",
          "111: static void CAPI_trace(CAPI_CTX * ctx, char *format, ...);",
          "113: static int capi_list_providers(CAPI_CTX * ctx, BIO *out);",
          "114: static int capi_list_containers(CAPI_CTX * ctx, BIO *out);",
          "115: int capi_list_certs(CAPI_CTX * ctx, BIO *out, char *storename);",
          "116: void capi_free_key(CAPI_KEY * key);",
          "118: static PCCERT_CONTEXT capi_find_cert(CAPI_CTX * ctx, const char *id,",
          "121: CAPI_KEY *capi_find_key(CAPI_CTX * ctx, const char *id);",
          "",
          "[Added Lines]",
          "111: static void CAPI_trace(CAPI_CTX *ctx, char *format, ...);",
          "113: static int capi_list_providers(CAPI_CTX *ctx, BIO *out);",
          "114: static int capi_list_containers(CAPI_CTX *ctx, BIO *out);",
          "115: int capi_list_certs(CAPI_CTX *ctx, BIO *out, char *storename);",
          "116: void capi_free_key(CAPI_KEY *key);",
          "118: static PCCERT_CONTEXT capi_find_cert(CAPI_CTX *ctx, const char *id,",
          "121: CAPI_KEY *capi_find_key(CAPI_CTX *ctx, const char *id);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "193: };",
          "195: static CAPI_CTX *capi_ctx_new(void);",
          "198:                                  int check);",
          "201: # define CAPI_CMD_LIST_CERTS             ENGINE_CMD_BASE",
          "202: # define CAPI_CMD_LOOKUP_CERT            (ENGINE_CMD_BASE + 1)",
          "",
          "[Removed Lines]",
          "196: static void capi_ctx_free(CAPI_CTX * ctx);",
          "197: static int capi_ctx_set_provname(CAPI_CTX * ctx, LPSTR pname, DWORD type,",
          "199: static int capi_ctx_set_provname_idx(CAPI_CTX * ctx, int idx);",
          "",
          "[Added Lines]",
          "196: static void capi_ctx_free(CAPI_CTX *ctx);",
          "197: static int capi_ctx_set_provname(CAPI_CTX *ctx, LPSTR pname, DWORD type,",
          "199: static int capi_ctx_set_provname_idx(CAPI_CTX *ctx, int idx);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "626: {",
          "627:     unsigned char *pubkey = NULL;",
          "628:     DWORD len;",
          "",
          "[Removed Lines]",
          "625: static EVP_PKEY *capi_get_pkey(ENGINE *eng, CAPI_KEY * key)",
          "",
          "[Added Lines]",
          "625: static EVP_PKEY *capi_get_pkey(ENGINE *eng, CAPI_KEY *key)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1050: }",
          "1051: # endif",
          "1054:                         va_list argptr)",
          "1055: {",
          "1056:     BIO *out;",
          "",
          "[Removed Lines]",
          "1053: static void capi_vtrace(CAPI_CTX * ctx, int level, char *format,",
          "",
          "[Added Lines]",
          "1053: static void capi_vtrace(CAPI_CTX *ctx, int level, char *format,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1066:     BIO_free(out);",
          "1067: }",
          "1070: {",
          "1071:     va_list args;",
          "1072:     va_start(args, format);",
          "",
          "[Removed Lines]",
          "1069: static void CAPI_trace(CAPI_CTX * ctx, char *format, ...)",
          "",
          "[Added Lines]",
          "1069: static void CAPI_trace(CAPI_CTX *ctx, char *format, ...)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1112:     return str;",
          "1113: }",
          "1116:                              DWORD idx)",
          "1117: {",
          "1118:     DWORD len, err;",
          "",
          "[Removed Lines]",
          "1115: static int capi_get_provname(CAPI_CTX * ctx, LPSTR * pname, DWORD * ptype,",
          "",
          "[Added Lines]",
          "1115: static int capi_get_provname(CAPI_CTX *ctx, LPSTR *pname, DWORD *ptype,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1154:     return 1;",
          "1155: }",
          "1158: {",
          "1159:     DWORD idx, ptype;",
          "1160:     int ret;",
          "",
          "[Removed Lines]",
          "1157: static int capi_list_providers(CAPI_CTX * ctx, BIO *out)",
          "",
          "[Added Lines]",
          "1157: static int capi_list_providers(CAPI_CTX *ctx, BIO *out)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1173:     return 1;",
          "1174: }",
          "1177: {",
          "1178:     int ret = 1;",
          "1179:     HCRYPTPROV hprov;",
          "",
          "[Removed Lines]",
          "1176: static int capi_list_containers(CAPI_CTX * ctx, BIO *out)",
          "",
          "[Added Lines]",
          "1176: static int capi_list_containers(CAPI_CTX *ctx, BIO *out)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1257:     return ret;",
          "1258: }",
          "1261:                                                PCCERT_CONTEXT cert)",
          "1262: {",
          "1263:     DWORD len;",
          "",
          "[Removed Lines]",
          "1260: static CRYPT_KEY_PROV_INFO *capi_get_prov_info(CAPI_CTX * ctx,",
          "",
          "[Added Lines]",
          "1260: static CRYPT_KEY_PROV_INFO *capi_get_prov_info(CAPI_CTX *ctx,",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1282:     return pinfo;",
          "1283: }",
          "1287: {",
          "1288:     char *provname = NULL, *contname = NULL;",
          "1289:     if (!pinfo) {",
          "",
          "[Removed Lines]",
          "1285: static void capi_dump_prov_info(CAPI_CTX * ctx, BIO *out,",
          "1286:                                 CRYPT_KEY_PROV_INFO * pinfo)",
          "",
          "[Added Lines]",
          "1285: static void capi_dump_prov_info(CAPI_CTX *ctx, BIO *out,",
          "1286:                                 CRYPT_KEY_PROV_INFO *pinfo)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1305:     OPENSSL_free(contname);",
          "1306: }",
          "1309: {",
          "1310:     LPWSTR wfname;",
          "1311:     DWORD dlen;",
          "",
          "[Removed Lines]",
          "1308: static char *capi_cert_get_fname(CAPI_CTX * ctx, PCCERT_CONTEXT cert)",
          "",
          "[Added Lines]",
          "1308: static char *capi_cert_get_fname(CAPI_CTX *ctx, PCCERT_CONTEXT cert)",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1330:     return NULL;",
          "1331: }",
          "1334: {",
          "1335:     X509 *x;",
          "1336:     const unsigned char *p;",
          "",
          "[Removed Lines]",
          "1333: static void capi_dump_cert(CAPI_CTX * ctx, BIO *out, PCCERT_CONTEXT cert)",
          "",
          "[Added Lines]",
          "1333: static void capi_dump_cert(CAPI_CTX *ctx, BIO *out, PCCERT_CONTEXT cert)",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1372:     X509_free(x);",
          "1373: }",
          "1376: {",
          "1377:     HCERTSTORE hstore;",
          "",
          "[Removed Lines]",
          "1375: static HCERTSTORE capi_open_store(CAPI_CTX * ctx, char *storename)",
          "",
          "[Added Lines]",
          "1375: static HCERTSTORE capi_open_store(CAPI_CTX *ctx, char *storename)",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1391:     return hstore;",
          "1392: }",
          "1395: {",
          "1396:     char *storename;",
          "1397:     int idx;",
          "",
          "[Removed Lines]",
          "1394: int capi_list_certs(CAPI_CTX * ctx, BIO *out, char *id)",
          "",
          "[Added Lines]",
          "1394: int capi_list_certs(CAPI_CTX *ctx, BIO *out, char *id)",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1429:     return ret;",
          "1430: }",
          "1433:                                      HCERTSTORE hstore)",
          "1434: {",
          "1435:     PCCERT_CONTEXT cert = NULL;",
          "",
          "[Removed Lines]",
          "1432: static PCCERT_CONTEXT capi_find_cert(CAPI_CTX * ctx, const char *id,",
          "",
          "[Added Lines]",
          "1432: static PCCERT_CONTEXT capi_find_cert(CAPI_CTX *ctx, const char *id,",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1460:     }",
          "1461: }",
          "1464:                               TCHAR *provname, DWORD ptype, DWORD keyspec)",
          "1465: {",
          "1466:     DWORD dwFlags = 0;",
          "",
          "[Removed Lines]",
          "1463: static CAPI_KEY *capi_get_key(CAPI_CTX * ctx, const TCHAR *contname,",
          "",
          "[Added Lines]",
          "1463: static CAPI_KEY *capi_get_key(CAPI_CTX *ctx, const TCHAR *contname,",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1508:     return NULL;",
          "1509: }",
          "1512: {",
          "1513:     CAPI_KEY *key = NULL;",
          "1514:     CRYPT_KEY_PROV_INFO *pinfo = NULL;",
          "",
          "[Removed Lines]",
          "1511: static CAPI_KEY *capi_get_cert_key(CAPI_CTX * ctx, PCCERT_CONTEXT cert)",
          "",
          "[Added Lines]",
          "1511: static CAPI_KEY *capi_get_cert_key(CAPI_CTX *ctx, PCCERT_CONTEXT cert)",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1536:     return key;",
          "1537: }",
          "1540: {",
          "1541:     PCCERT_CONTEXT cert;",
          "1542:     HCERTSTORE hstore;",
          "",
          "[Removed Lines]",
          "1539: CAPI_KEY *capi_find_key(CAPI_CTX * ctx, const char *id)",
          "",
          "[Added Lines]",
          "1539: CAPI_KEY *capi_find_key(CAPI_CTX *ctx, const char *id)",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1580:     return key;",
          "1581: }",
          "1584: {",
          "1585:     if (!key)",
          "1586:         return;",
          "",
          "[Removed Lines]",
          "1583: void capi_free_key(CAPI_KEY * key)",
          "",
          "[Added Lines]",
          "1583: void capi_free_key(CAPI_KEY *key)",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1611:     return ctx;",
          "1612: }",
          "1615: {",
          "1616:     CAPI_trace(ctx, \"Calling capi_ctx_free with %lx\\n\", ctx);",
          "1617:     if (!ctx)",
          "",
          "[Removed Lines]",
          "1614: static void capi_ctx_free(CAPI_CTX * ctx)",
          "",
          "[Added Lines]",
          "1614: static void capi_ctx_free(CAPI_CTX *ctx)",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1623:     OPENSSL_free(ctx);",
          "1624: }",
          "1627:                                  int check)",
          "1628: {",
          "1629:     LPSTR tmpcspname;",
          "",
          "[Removed Lines]",
          "1626: static int capi_ctx_set_provname(CAPI_CTX * ctx, LPSTR pname, DWORD type,",
          "",
          "[Added Lines]",
          "1626: static int capi_ctx_set_provname(CAPI_CTX *ctx, LPSTR pname, DWORD type,",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1662:     return 1;",
          "1663: }",
          "1666: {",
          "1667:     LPSTR pname;",
          "1668:     DWORD type;",
          "",
          "[Removed Lines]",
          "1665: static int capi_ctx_set_provname_idx(CAPI_CTX * ctx, int idx)",
          "",
          "[Added Lines]",
          "1665: static int capi_ctx_set_provname_idx(CAPI_CTX *ctx, int idx)",
          "",
          "---------------"
        ]
      }
    }
  ]
}