{
  "cve_id": "CVE-2022-23582",
  "cve_desc": "Tensorflow is an Open Source Machine Learning Framework. A malicious user can cause a denial of service by altering a `SavedModel` such that `TensorByteSize` would trigger `CHECK` failures. `TensorShape` constructor throws a `CHECK`-fail if shape is partial or has a number of elements that would overflow the size of an `int`. The `PartialTensorShape` constructor instead does not cause a `CHECK`-abort if the shape is partial, which is exactly what this function needs to be able to return `-1`. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "c2426bba00a01de6913738df8fa78e0215fcce02",
  "patch_info": {
    "commit_hash": "c2426bba00a01de6913738df8fa78e0215fcce02",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/c2426bba00a01de6913738df8fa78e0215fcce02",
    "files": [
      "tensorflow/core/framework/attr_value_util.cc"
    ],
    "message": "Use `PartialTensorShape` instead of `TensorShape`.\n\n`TensorShape` constructor throws a CHECK-fail if shape is partial/overflows which the other doesn't. We are only determining the number of elements in the shape and partial shape should be used as it returns negative number when needed.\n\nPiperOrigin-RevId: 409205384\nChange-Id: Ia56542ff9ec758f2c9ffc7e4dcc9fa7eecd86e7b",
    "before_after_code_files": [
      "tensorflow/core/framework/attr_value_util.cc||tensorflow/core/framework/attr_value_util.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/framework/attr_value_util.cc||tensorflow/core/framework/attr_value_util.cc": [
      "File: tensorflow/core/framework/attr_value_util.cc -> tensorflow/core/framework/attr_value_util.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "46: int64_t TensorByteSize(const TensorProto& t) {",
      "49:   return num_elems < 0 ? -1 : num_elems * DataTypeSize(t.dtype());",
      "50: }",
      "",
      "[Removed Lines]",
      "48:   int64_t num_elems = TensorShape(t.tensor_shape()).num_elements();",
      "",
      "[Added Lines]",
      "48:   int64_t num_elems = PartialTensorShape(t.tensor_shape()).num_elements();",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "69d7a7c1a2fbb07af656665cf23d7bfb4cab858b",
      "candidate_info": {
        "commit_hash": "69d7a7c1a2fbb07af656665cf23d7bfb4cab858b",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/69d7a7c1a2fbb07af656665cf23d7bfb4cab858b",
        "files": [
          "tensorflow/core/framework/attr_value_util.cc"
        ],
        "message": "Use `PartialTensorShape` instead of `TensorShape`.\n\n`TensorShape` constructor throws a CHECK-fail if shape is partial/overflows which the other doesn't. We are only determining the number of elements in the shape and partial shape should be used as it returns negative number when needed.\n\nPiperOrigin-RevId: 409205384\nChange-Id: Ia56542ff9ec758f2c9ffc7e4dcc9fa7eecd86e7b",
        "before_after_code_files": [
          "tensorflow/core/framework/attr_value_util.cc||tensorflow/core/framework/attr_value_util.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/framework/attr_value_util.cc||tensorflow/core/framework/attr_value_util.cc"
          ],
          "candidate": [
            "tensorflow/core/framework/attr_value_util.cc||tensorflow/core/framework/attr_value_util.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/framework/attr_value_util.cc||tensorflow/core/framework/attr_value_util.cc": [
          "File: tensorflow/core/framework/attr_value_util.cc -> tensorflow/core/framework/attr_value_util.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: int64 TensorByteSize(const TensorProto& t) {",
          "49:   return num_elems < 0 ? -1 : num_elems * DataTypeSize(t.dtype());",
          "50: }",
          "",
          "[Removed Lines]",
          "48:   int64 num_elems = TensorShape(t.tensor_shape()).num_elements();",
          "",
          "[Added Lines]",
          "48:   int64 num_elems = PartialTensorShape(t.tensor_shape()).num_elements();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e3c42a53596eb811d7aeb74d4ae195a8da92e1be",
      "candidate_info": {
        "commit_hash": "e3c42a53596eb811d7aeb74d4ae195a8da92e1be",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/e3c42a53596eb811d7aeb74d4ae195a8da92e1be",
        "files": [
          "tensorflow/core/framework/attr_value_util.cc"
        ],
        "message": "Use `PartialTensorShape` instead of `TensorShape`.\n\n`TensorShape` constructor throws a CHECK-fail if shape is partial/overflows which the other doesn't. We are only determining the number of elements in the shape and partial shape should be used as it returns negative number when needed.\n\nPiperOrigin-RevId: 409205384\nChange-Id: Ia56542ff9ec758f2c9ffc7e4dcc9fa7eecd86e7b",
        "before_after_code_files": [
          "tensorflow/core/framework/attr_value_util.cc||tensorflow/core/framework/attr_value_util.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/framework/attr_value_util.cc||tensorflow/core/framework/attr_value_util.cc"
          ],
          "candidate": [
            "tensorflow/core/framework/attr_value_util.cc||tensorflow/core/framework/attr_value_util.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/framework/attr_value_util.cc||tensorflow/core/framework/attr_value_util.cc": [
          "File: tensorflow/core/framework/attr_value_util.cc -> tensorflow/core/framework/attr_value_util.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: int64_t TensorByteSize(const TensorProto& t) {",
          "49:   return num_elems < 0 ? -1 : num_elems * DataTypeSize(t.dtype());",
          "50: }",
          "",
          "[Removed Lines]",
          "48:   int64_t num_elems = TensorShape(t.tensor_shape()).num_elements();",
          "",
          "[Added Lines]",
          "48:   int64_t num_elems = PartialTensorShape(t.tensor_shape()).num_elements();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4c9bf9cdd9e1a2b2c61ab14019cb0feb0a450b3e",
      "candidate_info": {
        "commit_hash": "4c9bf9cdd9e1a2b2c61ab14019cb0feb0a450b3e",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/4c9bf9cdd9e1a2b2c61ab14019cb0feb0a450b3e",
        "files": [
          "tensorflow/core/framework/attr_value_util.cc"
        ],
        "message": "Use `PartialTensorShape` instead of `TensorShape`.\n\n`TensorShape` constructor throws a CHECK-fail if shape is partial/overflows which the other doesn't. We are only determining the number of elements in the shape and partial shape should be used as it returns negative number when needed.\n\nPiperOrigin-RevId: 409205384\nChange-Id: Ia56542ff9ec758f2c9ffc7e4dcc9fa7eecd86e7b",
        "before_after_code_files": [
          "tensorflow/core/framework/attr_value_util.cc||tensorflow/core/framework/attr_value_util.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/framework/attr_value_util.cc||tensorflow/core/framework/attr_value_util.cc"
          ],
          "candidate": [
            "tensorflow/core/framework/attr_value_util.cc||tensorflow/core/framework/attr_value_util.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/framework/attr_value_util.cc||tensorflow/core/framework/attr_value_util.cc": [
          "File: tensorflow/core/framework/attr_value_util.cc -> tensorflow/core/framework/attr_value_util.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: int64 TensorByteSize(const TensorProto& t) {",
          "49:   return num_elems < 0 ? -1 : num_elems * DataTypeSize(t.dtype());",
          "50: }",
          "",
          "[Removed Lines]",
          "48:   int64 num_elems = TensorShape(t.tensor_shape()).num_elements();",
          "",
          "[Added Lines]",
          "48:   int64 num_elems = PartialTensorShape(t.tensor_shape()).num_elements();",
          "",
          "---------------"
        ]
      }
    }
  ]
}