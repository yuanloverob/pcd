{
  "cve_id": "CVE-2013-1439",
  "cve_desc": "The \"faster LJPEG decoder\" in libraw 0.13.x, 0.14.x, and 0.15.x before 0.15.4 allows context-dependent attackers to cause a denial of service (NULL pointer dereference) via a crafted photo file.",
  "repo": "LibRaw/LibRaw",
  "patch_hash": "11909cc59e712e09b508dda729b99aeaac2b29ad",
  "patch_info": {
    "commit_hash": "11909cc59e712e09b508dda729b99aeaac2b29ad",
    "repo": "LibRaw/LibRaw",
    "commit_url": "https://github.com/LibRaw/LibRaw/commit/11909cc59e712e09b508dda729b99aeaac2b29ad",
    "files": [
      "Changelog.txt",
      "Makefile.devel",
      "dcraw/dcraw.c",
      "internal/dcraw_common.cpp",
      "internal/dcraw_fileio.cpp",
      "libraw/libraw_version.h",
      "src/libraw_datastream.cpp"
    ],
    "message": "cumulated data checks patch",
    "before_after_code_files": [
      "Makefile.devel||Makefile.devel",
      "dcraw/dcraw.c||dcraw/dcraw.c",
      "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
      "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp",
      "libraw/libraw_version.h||libraw/libraw_version.h",
      "src/libraw_datastream.cpp||src/libraw_datastream.cpp"
    ]
  },
  "patch_diff": {
    "Makefile.devel||Makefile.devel": [
      "File: Makefile.devel -> Makefile.devel",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: CC=gcc",
      "6: CXX=g++",
      "8: # RawSpeed Support",
      "19: # LCMS support",
      "",
      "[Removed Lines]",
      "9: CFLAGS+=-DUSE_RAWSPEED -I../RawSpeed -I/usr/local/include/libxml2",
      "10: LDADD+=-L../RawSpeed/RawSpeed/release -lrawspeed -L/usr/local/include -ljpeg -lxml2",
      "11: RAWSPEED_DATA=../RawSpeed/data/cameras.xml",
      "14: CC=gcc48",
      "15: CXX=g++48",
      "16: CFLAGS+= -O4 -g -march=corei7 -mtune=corei7 -I. -pedantic  -Wno-long-long -Wno-overflow -msse4.2 -mfpmath=sse  -fopenmp",
      "",
      "[Added Lines]",
      "7: CFLAGS+= -O -g -I.",
      "10: #CFLAGS+=-DUSE_RAWSPEED -I../RawSpeed -I/usr/local/include/libxml2",
      "11: #LDADD+=-L../RawSpeed/RawSpeed/release -lrawspeed -L/usr/local/include -ljpeg -lxml2",
      "12: #RAWSPEED_DATA=../RawSpeed/data/cameras.xml",
      "15: #CC=gcc48",
      "16: #CXX=g++48",
      "17: #CFLAGS+= -O -g -I. -march=corei7 -mtune=corei7 -I. -pedantic  -Wno-long-long -Wno-overflow -msse4.2 -mfpmath=sse  -fopenmp",
      "",
      "---------------"
    ],
    "dcraw/dcraw.c||dcraw/dcraw.c": [
      "File: dcraw/dcraw.c -> dcraw/dcraw.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "877: {",
      "878:   int len, diff;",
      "880:   len = gethuff(huff);",
      "881:   if (len == 16 && (!dng_version || dng_version >= 0x1010000))",
      "882:     return -32768;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "880: #ifdef LIBRAW_LIBRARY_BUILD",
      "881:   if(!huff)",
      "882:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "883: #endif",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "891: {",
      "892:   int len, diff;",
      "894:   len = bits._gethuff_lj(buf,*huff,huff+1);",
      "895:   if (len == 16 && (!dng_version || dng_version >= 0x1010000))",
      "896:     return -32768;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "899:   if(!huff || !buf)",
      "900:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1010:   }",
      "1011: #endif",
      "1014:   if (!ljpeg_start (&jh, 0)) return;",
      "1015:   jwide = jh.wide * jh.clrs;",
      "1017: #ifdef LIBRAW_LIBRARY_BUILD",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1022: #ifdef LIBRAW_LIBRARY_BUILD",
      "1023:   if(jh.wide<1 || jh.high<1 || jh.clrs<1 || jh.bits <1)",
      "1024:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "1025: #endif",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1028:       }",
      "1030:   slices = slicesWcnt * jh.high;",
      "1031:   offset = (unsigned*)calloc(slices+1,sizeof(offset[0]));",
      "1033:   for(slice=0;slice<slices;slice++)",
      "1034:       {",
      "1035:           offset[slice] = (t_x + t_y * raw_width)| (t_s<<28);",
      "1036:           if((offset[slice] & 0x0fffffff) >= raw_width * raw_height)",
      "1037:               throw LIBRAW_EXCEPTION_IO_BADFILE;",
      "1038:           t_y++;",
      "1039:           if(t_y == jh.high)",
      "1040:               {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1042:   if(!slices)",
      "1043:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "1051:             {",
      "1052:               free(offset);",
      "1054:             }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1087:               pixno++;",
      "1088:               if (0 == --pixelsInSlice)",
      "1089:                   {",
      "1090:                       unsigned o = offset[slice++];",
      "1091:                       pixno = o & 0x0fffffff;",
      "1092:                       pixelsInSlice = slicesW[o>>28];",
      "1093:                   }",
      "1094:           }",
      "1095: #endif",
      "1096:       if (raw_width == 3984 && (col -= 2) < 0)",
      "1097:  col += (row--,raw_width);",
      "1098:       if (row >= 0) RAW(row,col) = val;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1107:                     if(slice > slices)",
      "1108:                       {",
      "1109:                         free(offset);",
      "1110:                         throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "1111:                       }",
      "1119:       if(row>raw_height)",
      "1120: #ifdef LIBRAW_LIBRARY_BUILD",
      "1121:       {",
      "1122:         free(offset);",
      "1123:         throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "1124:       }",
      "1125: #else",
      "1126:         longjmp (failure, 3);",
      "1127: #endif",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "6513:  break;",
      "6517:    num += getreal(type);",
      "6518:  black += num/len + 0.5;",
      "6519:  break;",
      "",
      "[Removed Lines]",
      "6516:  for (num=i=0; i < len; i++)",
      "",
      "[Added Lines]",
      "6549:  for (num=i=0; i < len && i < 65536; i++)",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "6646:   if (thumb_offset) {",
      "6647:     fseek (ifp, thumb_offset, SEEK_SET);",
      "6648:     if (ljpeg_start (&jh, 1)) {",
      "6652:     }",
      "6653:   }",
      "6654:   for (i=0; i < tiff_nifds; i++) {",
      "",
      "[Removed Lines]",
      "6649:       thumb_misc   = jh.bits;",
      "6650:       thumb_width  = jh.wide;",
      "6651:       thumb_height = jh.high;",
      "",
      "[Added Lines]",
      "6682:       if((unsigned)jh.bits<17 && (unsigned)jh.wide < 0x10000 && (unsigned)jh.high < 0x10000)",
      "6683:         {",
      "6684:           thumb_misc   = jh.bits;",
      "6685:           thumb_width  = jh.wide;",
      "6686:           thumb_height = jh.high;",
      "6687:         }",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "6656:  max_samp = tiff_ifd[i].samples;",
      "6657:     if (max_samp > 3) max_samp = 3;",
      "6658:     if ((tiff_ifd[i].comp != 6 || tiff_ifd[i].samples != 3) &&",
      "6660:  tiff_ifd[i].t_width*tiff_ifd[i].t_height > raw_width*raw_height) {",
      "6661:       raw_width     = tiff_ifd[i].t_width;",
      "6662:       raw_height    = tiff_ifd[i].t_height;",
      "",
      "[Removed Lines]",
      "6659:  (tiff_ifd[i].t_width | tiff_ifd[i].t_height) < 0x10000 &&",
      "",
      "[Added Lines]",
      "6695:         unsigned(tiff_ifd[i].t_width | tiff_ifd[i].t_height) < 0x10000 &&",
      "6696:         (unsigned)tiff_ifd[i].bps < 33 && (unsigned)tiff_ifd[i].samples < 13 &&",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "6743:       is_raw = 0;",
      "6744:   for (i=0; i < tiff_nifds; i++)",
      "6745:     if (i != raw && tiff_ifd[i].samples == max_samp &&",
      "6746:  tiff_ifd[i].t_width * tiff_ifd[i].t_height / SQR(tiff_ifd[i].bps+1) >",
      "6747:        thumb_width *       thumb_height / SQR(thumb_misc+1)",
      "6748:  && tiff_ifd[i].comp != 34892) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6783:         tiff_ifd[i].bps>0 && tiff_ifd[i].bps < 33 &&",
      "6784:        unsigned(tiff_ifd[i].t_width | tiff_ifd[i].t_height) < 0x10000 &&",
      "",
      "---------------"
    ],
    "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
      "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "611: {",
      "612:   int len, diff;",
      "614:   len = gethuff(huff);",
      "615:   if (len == 16 && (!dng_version || dng_version >= 0x1010000))",
      "616:     return -32768;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "614: #ifdef LIBRAW_LIBRARY_BUILD",
      "615:   if(!huff)",
      "616:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "617: #endif",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "625: {",
      "626:   int len, diff;",
      "628:   len = bits._gethuff_lj(buf,*huff,huff+1);",
      "629:   if (len == 16 && (!dng_version || dng_version >= 0x1010000))",
      "630:     return -32768;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "633:   if(!huff || !buf)",
      "634:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "744:   }",
      "745: #endif",
      "748:   if (!ljpeg_start (&jh, 0)) return;",
      "749:   jwide = jh.wide * jh.clrs;",
      "751: #ifdef LIBRAW_LIBRARY_BUILD",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "756: #ifdef LIBRAW_LIBRARY_BUILD",
      "757:   if(jh.wide<1 || jh.high<1 || jh.clrs<1 || jh.bits <1)",
      "758:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "759: #endif",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "762:       }",
      "764:   slices = slicesWcnt * jh.high;",
      "765:   offset = (unsigned*)calloc(slices+1,sizeof(offset[0]));",
      "767:   for(slice=0;slice<slices;slice++)",
      "768:       {",
      "769:           offset[slice] = (t_x + t_y * raw_width)| (t_s<<28);",
      "770:           if((offset[slice] & 0x0fffffff) >= raw_width * raw_height)",
      "771:               throw LIBRAW_EXCEPTION_IO_BADFILE;",
      "772:           t_y++;",
      "773:           if(t_y == jh.high)",
      "774:               {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "776:   if(!slices)",
      "777:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "785:             {",
      "786:               free(offset);",
      "788:             }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "821:               pixno++;",
      "822:               if (0 == --pixelsInSlice)",
      "823:                   {",
      "824:                       unsigned o = offset[slice++];",
      "825:                       pixno = o & 0x0fffffff;",
      "826:                       pixelsInSlice = slicesW[o>>28];",
      "827:                   }",
      "828:           }",
      "829: #endif",
      "830:       if (raw_width == 3984 && (col -= 2) < 0)",
      "831:  col += (row--,raw_width);",
      "832:       if (row >= 0) RAW(row,col) = val;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "841:                     if(slice > slices)",
      "842:                       {",
      "843:                         free(offset);",
      "844:                         throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "845:                       }",
      "853:       if(row>raw_height)",
      "854: #ifdef LIBRAW_LIBRARY_BUILD",
      "855:       {",
      "856:         free(offset);",
      "857:         throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "858:       }",
      "859: #else",
      "860:         longjmp (failure, 3);",
      "861: #endif",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1283:     if (tail[i]) nz++;",
      "1284:   return nz > 20;",
      "1285: }",
      "1287: void CLASS ppm_thumb()",
      "1288: {",
      "1289:   char *thumb;",
      "",
      "[Removed Lines]",
      "1286: #line 1557 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "1318: #line 1589 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2865:   jas_stream_close (in);",
      "2866: #endif",
      "2867: }",
      "2869: void CLASS crop_masked_pixels()",
      "2870: {",
      "2871:   int row, col;",
      "",
      "[Removed Lines]",
      "2868: #line 3846 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "2900: #line 3878 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2965:   RUN_CALLBACK(LIBRAW_PROGRESS_REMOVE_ZEROES,1,2);",
      "2966: #endif",
      "2967: }",
      "2969: void CLASS gamma_curve (double pwr, double ts, int mode, int imax)",
      "2970: {",
      "2971:   int i;",
      "",
      "[Removed Lines]",
      "2968: #line 4111 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "3000: #line 4143 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "4460:     fseek (ifp, save, SEEK_SET);",
      "4461:   }",
      "4462: }",
      "4464: void CLASS parse_makernote (int base, int uptag)",
      "4465: {",
      "4466:   static const uchar xlat[2][256] = {",
      "",
      "[Removed Lines]",
      "4463: #line 5610 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "4495: #line 5642 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "4975:     fseek (ifp, save, SEEK_SET);",
      "4976:   }",
      "4977: }",
      "4979: int CLASS parse_tiff_ifd (int base)",
      "4980: {",
      "4981:   unsigned entries, tag, type, len, plen=16, save;",
      "",
      "[Removed Lines]",
      "4978: #line 6130 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "5010: #line 6162 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "5362:  break;",
      "5366:    num += getreal(type);",
      "5367:  black += num/len + 0.5;",
      "5368:  break;",
      "",
      "[Removed Lines]",
      "5365:  for (num=i=0; i < len; i++)",
      "",
      "[Added Lines]",
      "5398:  for (num=i=0; i < len && i < 65536; i++)",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "5495:   if (thumb_offset) {",
      "5496:     fseek (ifp, thumb_offset, SEEK_SET);",
      "5497:     if (ljpeg_start (&jh, 1)) {",
      "5501:     }",
      "5502:   }",
      "5503:   for (i=0; i < tiff_nifds; i++) {",
      "",
      "[Removed Lines]",
      "5498:       thumb_misc   = jh.bits;",
      "5499:       thumb_width  = jh.wide;",
      "5500:       thumb_height = jh.high;",
      "",
      "[Added Lines]",
      "5531:       if((unsigned)jh.bits<17 && (unsigned)jh.wide < 0x10000 && (unsigned)jh.high < 0x10000)",
      "5532:         {",
      "5533:           thumb_misc   = jh.bits;",
      "5534:           thumb_width  = jh.wide;",
      "5535:           thumb_height = jh.high;",
      "5536:         }",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "5505:  max_samp = tiff_ifd[i].samples;",
      "5506:     if (max_samp > 3) max_samp = 3;",
      "5507:     if ((tiff_ifd[i].comp != 6 || tiff_ifd[i].samples != 3) &&",
      "5509:  tiff_ifd[i].t_width*tiff_ifd[i].t_height > raw_width*raw_height) {",
      "5510:       raw_width     = tiff_ifd[i].t_width;",
      "5511:       raw_height    = tiff_ifd[i].t_height;",
      "",
      "[Removed Lines]",
      "5508:  (tiff_ifd[i].t_width | tiff_ifd[i].t_height) < 0x10000 &&",
      "",
      "[Added Lines]",
      "5544:         unsigned(tiff_ifd[i].t_width | tiff_ifd[i].t_height) < 0x10000 &&",
      "5545:         (unsigned)tiff_ifd[i].bps < 33 && (unsigned)tiff_ifd[i].samples < 13 &&",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "5592:       is_raw = 0;",
      "5593:   for (i=0; i < tiff_nifds; i++)",
      "5594:     if (i != raw && tiff_ifd[i].samples == max_samp &&",
      "5595:  tiff_ifd[i].t_width * tiff_ifd[i].t_height / SQR(tiff_ifd[i].bps+1) >",
      "5596:        thumb_width *       thumb_height / SQR(thumb_misc+1)",
      "5597:  && tiff_ifd[i].comp != 34892) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5632:         tiff_ifd[i].bps>0 && tiff_ifd[i].bps < 33 &&",
      "5633:        unsigned(tiff_ifd[i].t_width | tiff_ifd[i].t_height) < 0x10000 &&",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "6233:     data_offset = get4();",
      "6234:   }",
      "6235: }",
      "6237: char * CLASS foveon_gets (int offset, char *str, int len)",
      "6238: {",
      "6239:   int i;",
      "",
      "[Removed Lines]",
      "6236: #line 7390 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "6275: #line 7429 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "6334:   }",
      "6335:   is_foveon = 1;",
      "6336: }",
      "6339:    All matrices are from Adobe DNG Converter unless otherwise noted.",
      "",
      "[Removed Lines]",
      "6337: #line 7493 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "6376: #line 7532 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "8981: }",
      "8985: void CLASS convert_to_rgb()",
      "8986: {",
      "8987: #ifndef LIBRAW_LIBRARY_BUILD",
      "",
      "[Removed Lines]",
      "8984: #line 10231 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "9023: #line 10270 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "9212:   if (flip & 1) col = iwidth  - 1 - col;",
      "9213:   return row * iwidth + col;",
      "9214: }",
      "9216: void CLASS tiff_set (ushort *ntag,",
      "9217:  ushort tag, ushort type, int count, int val)",
      "9218: {",
      "",
      "[Removed Lines]",
      "9215: #line 10487 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "9254: #line 10526 \"dcraw/dcraw.c\"",
      "",
      "---------------"
    ],
    "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp": [
      "File: internal/dcraw_fileio.cpp -> internal/dcraw_fileio.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "21:    for more information",
      "25: #include <math.h>",
      "26: #define CLASS LibRaw::",
      "27: #include \"libraw/libraw_types.h\"",
      "",
      "[Removed Lines]",
      "24: #line 3948 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "24: #line 3980 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "29: #include \"libraw/libraw.h\"",
      "30: #include \"internal/defines.h\"",
      "31: #include \"internal/var_defines.h\"",
      "34:    Seach from the current directory up to the root looking for",
      "35:    a \".badpixels\" file, and fix those pixels now.",
      "",
      "[Removed Lines]",
      "32: #line 3959 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "32: #line 3991 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "54: #endif",
      "55:   if (cfname)",
      "56:     fp = fopen (cfname, \"r\");",
      "58:   if (!fp)",
      "59:       {",
      "60: #ifdef LIBRAW_LIBRARY_BUILD",
      "",
      "[Removed Lines]",
      "57: #line 4009 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "57: #line 4041 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "154:   RUN_CALLBACK(LIBRAW_PROGRESS_DARK_FRAME,1,2);",
      "155: #endif",
      "156: }",
      "158: #ifndef NO_LCMS",
      "159: void CLASS apply_profile (const char *input, const char *output)",
      "160: {",
      "",
      "[Removed Lines]",
      "157: #line 10142 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "157: #line 10181 \"dcraw/dcraw.c\"",
      "",
      "---------------"
    ],
    "libraw/libraw_version.h||libraw/libraw_version.h": [
      "File: libraw/libraw_version.h -> libraw/libraw_version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "26: #define LIBRAW_MAJOR_VERSION  0",
      "27: #define LIBRAW_MINOR_VERSION  15",
      "29: #define LIBRAW_VERSION_TAIL   Release",
      "31: #define LIBRAW_SHLIB_CURRENT   9",
      "",
      "[Removed Lines]",
      "28: #define LIBRAW_PATCH_VERSION  3",
      "",
      "[Added Lines]",
      "28: #define LIBRAW_PATCH_VERSION  4",
      "",
      "---------------"
    ],
    "src/libraw_datastream.cpp||src/libraw_datastream.cpp": [
      "File: src/libraw_datastream.cpp -> src/libraw_datastream.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "65: LibRaw_byte_buffer *LibRaw_abstract_datastream::make_byte_buffer(unsigned int sz)",
      "66: {",
      "67:     LibRaw_byte_buffer *ret = new LibRaw_byte_buffer(sz);",
      "68:     read(ret->get_buffer(),sz,1);",
      "69:     return ret;",
      "70: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "67:   if(INT64(sz)>size())",
      "68:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "71:     if(!ret) // failed new should throw std::exception",
      "72:       throw LIBRAW_EXCEPTION_ALLOC;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "442: LibRaw_byte_buffer *LibRaw_buffer_datastream::make_byte_buffer(unsigned int sz)",
      "443: {",
      "444:     LibRaw_byte_buffer *ret = new LibRaw_byte_buffer(0);",
      "445:     if(streampos + sz > streamsize)",
      "446:         sz = streamsize - streampos;",
      "447:     ret->set_buffer(buf+streampos,sz);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "449:   if(INT64(sz)>size())",
      "450:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "453:     if(!ret) // failed new should throw std::exception",
      "454:       throw LIBRAW_EXCEPTION_ALLOC;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0efb7db51d7b3ffa361bbd928ec9c53f3fd45cd6",
      "candidate_info": {
        "commit_hash": "0efb7db51d7b3ffa361bbd928ec9c53f3fd45cd6",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/0efb7db51d7b3ffa361bbd928ec9c53f3fd45cd6",
        "files": [
          "Changelog.rus",
          "dcraw/dcraw.c",
          "internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp"
        ],
        "message": "avoid gcc 4.8 bug",
        "before_after_code_files": [
          "Changelog.rus||Changelog.rus",
          "dcraw/dcraw.c||dcraw/dcraw.c",
          "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
          ],
          "candidate": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
          ]
        }
      },
      "candidate_diff": {
        "Changelog.rus||Changelog.rus": [
          "File: Changelog.rus -> Changelog.rus",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:      Canon 100D (Rebel SL1), 700D (Rebel T5i)",
          "4:      Fujifilm: X20 \u0438 X100S,SL1000, HS50EXR",
          "",
          "[Removed Lines]",
          "1: \ufeff2013-05-18  Alex Tutubalin <lexa@lexa.ru>",
          "",
          "[Added Lines]",
          "1: \ufeff2013-05-20  Alex Tutubalin <lexa@lexa.ru>",
          "5: 2013-05-18  Alex Tutubalin <lexa@lexa.ru>",
          "",
          "---------------"
        ],
        "dcraw/dcraw.c||dcraw/dcraw.c": [
          "File: dcraw/dcraw.c -> dcraw/dcraw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2337: #define PREDICTOR (c ? (buf[c][y-1][x] + buf[c][y][x+1]) / 2 \\",
          "2338: : (buf[c][y-1][x+1] + 2*buf[c][y-1][x] + buf[c][y][x+1]) / 4)",
          "2340: void CLASS kodak_radc_load_raw()",
          "2341: {",
          "2342:   static const char src[] = {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2340: #ifdef __GNUC__",
          "2341: # if __GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)",
          "2342: # pragma GCC optimize(\"no-aggressive-loop-optimizations\")",
          "2343: # endif",
          "2344: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2813:     for (p=0; p < 127; p++)",
          "2814:       pad[p] = htonl(pad[p]);",
          "2815:   }",
          "2816:   while (len--)",
          "2818: #ifndef LIBRAW_NOTHREADS",
          "2819: #undef pad",
          "2820: #undef p",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2822: #if 1 // Avoid gcc 4.8 bug",
          "2823:   while (len--)",
          "2824:     {",
          "2826:       p++;",
          "2827:     }",
          "2828: #else",
          "2831: #endif",
          "",
          "---------------"
        ],
        "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
          "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "2067: #define PREDICTOR (c ? (buf[c][y-1][x] + buf[c][y][x+1]) / 2 \\",
          "2068: : (buf[c][y-1][x+1] + 2*buf[c][y-1][x] + buf[c][y][x+1]) / 4)",
          "2070: void CLASS kodak_radc_load_raw()",
          "2071: {",
          "2072:   static const char src[] = {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2070: #ifdef __GNUC__",
          "2071: # if __GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)",
          "2072: # pragma GCC optimize(\"no-aggressive-loop-optimizations\")",
          "2073: # endif",
          "2074: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2543:     for (p=0; p < 127; p++)",
          "2544:       pad[p] = htonl(pad[p]);",
          "2545:   }",
          "2546:   while (len--)",
          "2548: #ifndef LIBRAW_NOTHREADS",
          "2549: #undef pad",
          "2550: #undef p",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2552: #if 0 // Avoid gcc 4.8 bug",
          "2553:   while (len--)",
          "2554:     {",
          "2555:       pad[p & 127] = pad[(p+1) & 127] ^ pad[(p+65) & 127];",
          "2557:       p++;",
          "2558:     }",
          "2559: #else",
          "2562: #endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2879:   jas_stream_close (in);",
          "2880: #endif",
          "2881: }",
          "2883: void CLASS crop_masked_pixels()",
          "2884: {",
          "2885:   int row, col;",
          "",
          "[Removed Lines]",
          "2882: #line 3860 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "2897: #line 3875 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2979:   RUN_CALLBACK(LIBRAW_PROGRESS_REMOVE_ZEROES,1,2);",
          "2980: #endif",
          "2981: }",
          "2983: void CLASS gamma_curve (double pwr, double ts, int mode, int imax)",
          "2984: {",
          "2985:   int i;",
          "",
          "[Removed Lines]",
          "2982: #line 4125 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "2997: #line 4140 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4474:     fseek (ifp, save, SEEK_SET);",
          "4475:   }",
          "4476: }",
          "4478: void CLASS parse_makernote (int base, int uptag)",
          "4479: {",
          "4480:   static const uchar xlat[2][256] = {",
          "",
          "[Removed Lines]",
          "4477: #line 5624 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "4492: #line 5639 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4989:     fseek (ifp, save, SEEK_SET);",
          "4990:   }",
          "4991: }",
          "4993: int CLASS parse_tiff_ifd (int base)",
          "4994: {",
          "4995:   unsigned entries, tag, type, len, plen=16, save;",
          "",
          "[Removed Lines]",
          "4992: #line 6144 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "5007: #line 6159 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "6248:     data_offset = get4();",
          "6249:   }",
          "6250: }",
          "6252: char * CLASS foveon_gets (int offset, char *str, int len)",
          "6253: {",
          "6254:   int i;",
          "",
          "[Removed Lines]",
          "6251: #line 7405 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "6266: #line 7420 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "6349:   }",
          "6350:   is_foveon = 1;",
          "6351: }",
          "6354:    All matrices are from Adobe DNG Converter unless otherwise noted.",
          "",
          "[Removed Lines]",
          "6352: #line 7508 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "6367: #line 7523 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "8967: }",
          "8971: void CLASS convert_to_rgb()",
          "8972: {",
          "8973: #ifndef LIBRAW_LIBRARY_BUILD",
          "",
          "[Removed Lines]",
          "8970: #line 10217 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "8985: #line 10232 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "9198:   if (flip & 1) col = iwidth  - 1 - col;",
          "9199:   return row * iwidth + col;",
          "9200: }",
          "9202: void CLASS tiff_set (ushort *ntag,",
          "9203:  ushort tag, ushort type, int count, int val)",
          "9204: {",
          "",
          "[Removed Lines]",
          "9201: #line 10473 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "9216: #line 10488 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ],
        "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp": [
          "File: internal/dcraw_fileio.cpp -> internal/dcraw_fileio.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:    for more information",
          "25: #include <math.h>",
          "26: #define CLASS LibRaw::",
          "27: #include \"libraw/libraw_types.h\"",
          "",
          "[Removed Lines]",
          "24: #line 3962 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "24: #line 3977 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29: #include \"libraw/libraw.h\"",
          "30: #include \"internal/defines.h\"",
          "31: #include \"internal/var_defines.h\"",
          "34:    Seach from the current directory up to the root looking for",
          "35:    a \".badpixels\" file, and fix those pixels now.",
          "",
          "[Removed Lines]",
          "32: #line 3973 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "32: #line 3988 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "54: #endif",
          "55:   if (cfname)",
          "56:     fp = fopen (cfname, \"r\");",
          "58:   if (!fp)",
          "59:       {",
          "60: #ifdef LIBRAW_LIBRARY_BUILD",
          "",
          "[Removed Lines]",
          "57: #line 4023 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "57: #line 4038 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "154:   RUN_CALLBACK(LIBRAW_PROGRESS_DARK_FRAME,1,2);",
          "155: #endif",
          "156: }",
          "158: #ifndef NO_LCMS",
          "159: void CLASS apply_profile (const char *input, const char *output)",
          "160: {",
          "",
          "[Removed Lines]",
          "157: #line 10128 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "157: #line 10143 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e11e8350f6b41a3d65d3641a82eba6236b36cbcc",
      "candidate_info": {
        "commit_hash": "e11e8350f6b41a3d65d3641a82eba6236b36cbcc",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/e11e8350f6b41a3d65d3641a82eba6236b36cbcc",
        "files": [
          "Makefile.devel",
          "internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp"
        ],
        "message": "files regenerated",
        "before_after_code_files": [
          "Makefile.devel||Makefile.devel",
          "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Makefile.devel||Makefile.devel",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
          ],
          "candidate": [
            "Makefile.devel||Makefile.devel",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.devel||Makefile.devel": [
          "File: Makefile.devel -> Makefile.devel",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: RAWSPEED_DATA=../RawSpeed/data/cameras.xml",
          "16: CFLAGS+= -O4 -g -march=corei7 -mtune=corei7 -I. -pedantic  -Wno-long-long -Wno-overflow -msse4.2 -mfpmath=sse  -fopenmp",
          "",
          "[Removed Lines]",
          "14: CC=gcc46",
          "15: CXX=g++46",
          "",
          "[Added Lines]",
          "14: CC=gcc48",
          "15: CXX=g++48",
          "",
          "---------------"
        ],
        "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
          "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "6595:  { 13690,-5358,-1474,-3369,11600,1998,-132,1554,4395 } },",
          "6596:     { \"FUJIFILM HS3\", 0, 0,",
          "6597:  { 13690,-5358,-1474,-3369,11600,1998,-132,1554,4395 } },",
          "6598:     { \"FUJIFILM X100\", 0, 0,",
          "6599:  { 12161,-4457,-1069,-5034,12874,2400,-795,1724,6904 } },",
          "6600:     { \"FUJIFILM X10\", 0, 0,",
          "6601:  { 13509,-6199,-1254,-4430,12733,1865,-331,1441,5022 } },",
          "6602:     { \"FUJIFILM XF1\", 0, 0,",
          "6603:  { 13509,-6199,-1254,-4430,12733,1865,-331,1441,5022 } },",
          "6604:     { \"FUJIFILM X-Pro1\", 0, 0,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6598:  { \"FUJIFILM X100S\", 0, 0,",
          "6599:  { 10592,-4262,-1008,-3514,11355,2465,-870,2025,6386 } },",
          "6604:  { \"FUJIFILM X20\", 0, 0,",
          "6605:  { 11768,-4971,-1133,-4904,12927,2183,-480,1723,4605 } },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8104:       left_margin = 0;",
          "8105:       filters = 2;",
          "8106:     }",
          "8107:     if (fuji_layout) raw_width *= is_raw;",
          "8108:   } else if (!strcmp(model,\"RD175\")) {",
          "8109:     height = 986;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8111:  if(!strcmp(model,\"X20\"))",
          "8112:  {",
          "8113:   left_margin = 2;",
          "8114:   top_margin=2;",
          "8115:   width = 4030;",
          "8116:   height = 3010;",
          "8117:   raw_height = 3012;",
          "8118:   filters = 2;",
          "8119:  }",
          "8120:  if(!strcmp(model,\"X100S\"))",
          "8121:  {",
          "8122:   left_margin = 2;",
          "8123:   top_margin = 1;",
          "8124:   width = 4934;",
          "8125:   height = 3290;",
          "8126:   raw_height = 3295;",
          "8127:   filters = 2;",
          "8128:   data_offset +=8;",
          "8129:   load_raw = &CLASS unpacked_load_raw;",
          "8130:   load_flags = 0;",
          "8131:   maximum = 16383;",
          "8132:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8897: }",
          "8901: void CLASS convert_to_rgb()",
          "8902: {",
          "8903: #ifndef LIBRAW_LIBRARY_BUILD",
          "",
          "[Removed Lines]",
          "8900: #line 10147 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "8926: #line 10173 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "9128:   if (flip & 1) col = iwidth  - 1 - col;",
          "9129:   return row * iwidth + col;",
          "9130: }",
          "9132: void CLASS tiff_set (ushort *ntag,",
          "9133:  ushort tag, ushort type, int count, int val)",
          "9134: {",
          "",
          "[Removed Lines]",
          "9131: #line 10403 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "9157: #line 10429 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ],
        "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp": [
          "File: internal/dcraw_fileio.cpp -> internal/dcraw_fileio.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "154:   RUN_CALLBACK(LIBRAW_PROGRESS_DARK_FRAME,1,2);",
          "155: #endif",
          "156: }",
          "158: #ifndef NO_LCMS",
          "159: void CLASS apply_profile (const char *input, const char *output)",
          "160: {",
          "",
          "[Removed Lines]",
          "157: #line 10058 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "157: #line 10084 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4c921942e5790577f6313a3c942c5ac4a93ed277",
      "candidate_info": {
        "commit_hash": "4c921942e5790577f6313a3c942c5ac4a93ed277",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/4c921942e5790577f6313a3c942c5ac4a93ed277",
        "files": [
          "dcraw/dcraw.c",
          "internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp"
        ],
        "message": "merged early exit code",
        "before_after_code_files": [
          "dcraw/dcraw.c||dcraw/dcraw.c",
          "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
          ],
          "candidate": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
          ]
        }
      },
      "candidate_diff": {
        "dcraw/dcraw.c||dcraw/dcraw.c": [
          "File: dcraw/dcraw.c -> dcraw/dcraw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "9537:   }  else",
          "9540:   if (!model[0])",
          "9541:     sprintf (model, \"%dx%d\", width, height);",
          "9542:   if (filters == UINT_MAX) filters = 0x94949494;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9541:   if (!load_raw || height < 22 || width < 22 ||",
          "9542:  tiff_bps > 16 || tiff_samples > 4 || colors > 4 || colors < 1)",
          "9543:     {",
          "9544:       is_raw = 0;",
          "9545: #ifdef LIBRAW_LIBRARY_BUILD",
          "9546:       RUN_CALLBACK(LIBRAW_PROGRESS_IDENTIFY,1,2);",
          "9547: #endif",
          "9548:       return;",
          "9549:     }",
          "",
          "---------------"
        ],
        "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
          "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "4501:     fseek (ifp, save, SEEK_SET);",
          "4502:   }",
          "4503: }",
          "4505: void CLASS parse_makernote (int base, int uptag)",
          "4506: {",
          "4507:   static const uchar xlat[2][256] = {",
          "",
          "[Removed Lines]",
          "4504: #line 5642 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "4504: #line 5651 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5016:     fseek (ifp, save, SEEK_SET);",
          "5017:   }",
          "5018: }",
          "5020: int CLASS parse_tiff_ifd (int base)",
          "5021: {",
          "5022:   unsigned entries, tag, type, len, plen=16, save;",
          "",
          "[Removed Lines]",
          "5019: #line 6162 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "5019: #line 6171 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6281:     data_offset = get4();",
          "6282:   }",
          "6283: }",
          "6285: char * CLASS foveon_gets (int offset, char *str, int len)",
          "6286: {",
          "6287:   int i;",
          "",
          "[Removed Lines]",
          "6284: #line 7429 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "6284: #line 7438 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "6382:   }",
          "6383:   is_foveon = 1;",
          "6384: }",
          "6387:    All matrices are from Adobe DNG Converter unless otherwise noted.",
          "",
          "[Removed Lines]",
          "6385: #line 7532 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "6385: #line 7541 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "8382:   }  else",
          "8385:   if (!model[0])",
          "8386:     sprintf (model, \"%dx%d\", width, height);",
          "8387:   if (filters == UINT_MAX) filters = 0x94949494;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8386:   if (!load_raw || height < 22 || width < 22 ||",
          "8387:  tiff_bps > 16 || tiff_samples > 4 || colors > 4 || colors < 1)",
          "8388:     {",
          "8389:       is_raw = 0;",
          "8390: #ifdef LIBRAW_LIBRARY_BUILD",
          "8391:       RUN_CALLBACK(LIBRAW_PROGRESS_IDENTIFY,1,2);",
          "8392: #endif",
          "8393:       return;",
          "8394:     }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "9029: }",
          "9033: void CLASS convert_to_rgb()",
          "9034: {",
          "9035: #ifndef LIBRAW_LIBRARY_BUILD",
          "",
          "[Removed Lines]",
          "9032: #line 10270 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "9042: #line 10289 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "9260:   if (flip & 1) col = iwidth  - 1 - col;",
          "9261:   return row * iwidth + col;",
          "9262: }",
          "9264: void CLASS tiff_set (ushort *ntag,",
          "9265:  ushort tag, ushort type, int count, int val)",
          "9266: {",
          "",
          "[Removed Lines]",
          "9263: #line 10526 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "9273: #line 10545 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ],
        "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp": [
          "File: internal/dcraw_fileio.cpp -> internal/dcraw_fileio.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "154:   RUN_CALLBACK(LIBRAW_PROGRESS_DARK_FRAME,1,2);",
          "155: #endif",
          "156: }",
          "158: #ifndef NO_LCMS",
          "159: void CLASS apply_profile (const char *input, const char *output)",
          "160: {",
          "",
          "[Removed Lines]",
          "157: #line 10190 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "157: #line 10200 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "21651c8a39def0f7522d2159fc3a4d2bfad6106b",
      "candidate_info": {
        "commit_hash": "21651c8a39def0f7522d2159fc3a4d2bfad6106b",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/21651c8a39def0f7522d2159fc3a4d2bfad6106b",
        "files": [
          "INSTALL.CMAKE",
          "dcraw/dcraw.c",
          "internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp"
        ],
        "message": "merged master branch",
        "before_after_code_files": [
          "INSTALL.CMAKE||INSTALL.CMAKE",
          "dcraw/dcraw.c||dcraw/dcraw.c",
          "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
          ],
          "candidate": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
          ]
        }
      },
      "candidate_diff": {
        "INSTALL.CMAKE||INSTALL.CMAKE": [
          "File: INSTALL.CMAKE -> INSTALL.CMAKE",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:      b) If no folder is specified in -DENABLE_RAWSPEED switch:",
          "84:           ./RawSpeed (in LibRaw folder)",
          "89:   If CHECKOUT_RAWSPEED is enabled, code wil be checkout from remote repository",
          "92: -DENABLE_DCRAW_DEBUG=ON/OFF",
          "94:   Enables/disables support of additional debug traces from dcraw operations. Disabled by default",
          "",
          "[Removed Lines]",
          "85: <<<<<<< HEAD",
          "87: =======",
          "91: >>>>>>> 0eeff91... polish",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "dcraw/dcraw.c||dcraw/dcraw.c": [
          "File: dcraw/dcraw.c -> dcraw/dcraw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4219:       num += cam_rgb[i][j];",
          "4223:   }",
          "4224:   pseudoinverse (cam_rgb, inverse, colors);",
          "4225:   for (raw_color = i=0; i < 3; i++)",
          "",
          "[Removed Lines]",
          "4220:     for (j=0; j < 3; j++)",
          "4221:       cam_rgb[i][j] /= num;",
          "4222:     pre_mul[i] = 1 / num;",
          "",
          "[Added Lines]",
          "4220:     if(num > 0.00001)",
          "4221:       {",
          "4222:         for (j=0; j < 3; j++)",
          "4223:           cam_rgb[i][j] /= num;",
          "4224:         pre_mul[i] = 1 / num;",
          "4225:       }",
          "4226:     else",
          "4227:       {",
          "4228:         for (j=0; j < 3; j++)",
          "4229:           cam_rgb[i][j] = 0.0;",
          "4230:         pre_mul[i] = 1.0;",
          "4231:       }",
          "",
          "---------------"
        ],
        "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
          "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "3077:       num += cam_rgb[i][j];",
          "3081:   }",
          "3082:   pseudoinverse (cam_rgb, inverse, colors);",
          "3083:   for (raw_color = i=0; i < 3; i++)",
          "",
          "[Removed Lines]",
          "3078:     for (j=0; j < 3; j++)",
          "3079:       cam_rgb[i][j] /= num;",
          "3080:     pre_mul[i] = 1 / num;",
          "",
          "[Added Lines]",
          "3078:     if(num > 0.00001)",
          "3079:       {",
          "3080:         for (j=0; j < 3; j++)",
          "3081:           cam_rgb[i][j] /= num;",
          "3082:         pre_mul[i] = 1 / num;",
          "3083:       }",
          "3084:     else",
          "3085:       {",
          "3086:         for (j=0; j < 3; j++)",
          "3087:           cam_rgb[i][j] = 0.0;",
          "3088:         pre_mul[i] = 1.0;",
          "3089:       }",
          "",
          "---------------"
        ],
        "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp": [
          "File: internal/dcraw_fileio.cpp -> internal/dcraw_fileio.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "154:   RUN_CALLBACK(LIBRAW_PROGRESS_DARK_FRAME,1,2);",
          "155: #endif",
          "156: }",
          "158: #ifndef NO_LCMS",
          "159: void CLASS apply_profile (const char *input, const char *output)",
          "160: {",
          "",
          "[Removed Lines]",
          "157: #line 10181 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "157: #line 10190 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9f8c3cf9e4c3e2311d6fed15c8bcfe4b142cd228",
      "candidate_info": {
        "commit_hash": "9f8c3cf9e4c3e2311d6fed15c8bcfe4b142cd228",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/9f8c3cf9e4c3e2311d6fed15c8bcfe4b142cd228",
        "files": [
          "Changelog.txt",
          "Makefile.devel",
          "Makefile.dist",
          "configure.ac",
          "dcraw/dcraw.c",
          "internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp",
          "libraw/libraw.h",
          "src/libraw_datastream.cpp"
        ],
        "message": "OpenMP in lin_interpolate, -DUSE_JPEG8",
        "before_after_code_files": [
          "Makefile.devel||Makefile.devel",
          "Makefile.dist||Makefile.dist",
          "configure.ac||configure.ac",
          "dcraw/dcraw.c||dcraw/dcraw.c",
          "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp",
          "libraw/libraw.h||libraw/libraw.h",
          "src/libraw_datastream.cpp||src/libraw_datastream.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Makefile.devel||Makefile.devel",
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp",
            "src/libraw_datastream.cpp||src/libraw_datastream.cpp"
          ],
          "candidate": [
            "Makefile.devel||Makefile.devel",
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp",
            "src/libraw_datastream.cpp||src/libraw_datastream.cpp"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.devel||Makefile.devel": [
          "File: Makefile.devel -> Makefile.devel",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: # JPEG support for DNG",
          "31: CFLAGS+=-DUSE_JPEG -I/usr/local/include",
          "32: LDADD+=-L/usr/local/lib -ljpeg",
          "35: # Demosaic Pack GPL2:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: # LIBJPEG8:",
          "34: CFLAGS+=-DUSE_JPEG8",
          "",
          "---------------"
        ],
        "Makefile.dist||Makefile.dist": [
          "File: Makefile.dist -> Makefile.dist",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: # JPEG support for DNG",
          "13: CFLAGS+=-DUSE_JPEG -I/usr/local/include",
          "14: LDADD+=-L/usr/local/lib -ljpeg",
          "16: # LCMS support",
          "17: #CFLAGS+=-DUSE_LCMS -I/usr/local/include",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15: # LIBJPEG8:",
          "16: CFLAGS+=-DUSE_JPEG8",
          "",
          "---------------"
        ],
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:  esac],[jpeg=true])",
          "56: if test x$jpeg = xtrue; then",
          "58:                 [",
          "59:                         AC_CHECK_HEADERS([jpeglib.h], [",
          "60:                                 CPPFLAGS=\"$CPPFLAGS -DUSE_JPEG\"",
          "",
          "[Removed Lines]",
          "57:         AC_CHECK_LIB([jpeg], [jpeg_mem_src],",
          "",
          "[Added Lines]",
          "57:         AC_CHECK_LIB([jpeg], [jpeg_stdio_src],",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "65:         )",
          "66: fi",
          "69: # check for Jasper (JPEG2000) support",
          "70: AC_ARG_ENABLE([jasper],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68: if test x$jpeg = xtrue; then",
          "69:         AC_CHECK_LIB([jpeg], [jpeg_mem_src],",
          "70:                 [",
          "71:                         AC_CHECK_HEADERS([jpeglib.h], [",
          "72:                                 CPPFLAGS=\"$CPPFLAGS -DUSE_JPEG8\"",
          "73:                         ], AC_MSG_WARN([no jpeg8 headers found]))",
          "74:                 ],",
          "75:                 AC_MSG_WARN([libjpeg8 not found - disabling decoding JPEG data from memory buffer])",
          "76:         )",
          "77: fi",
          "",
          "---------------"
        ],
        "dcraw/dcraw.c||dcraw/dcraw.c": [
          "File: dcraw/dcraw.c -> dcraw/dcraw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4734:     }",
          "4735: }",
          "4737: void CLASS lin_interpolate()",
          "4738: {",
          "4739:   int code[16][16][32], size=16, *ip, sum[4];",
          "4743: #ifdef DCRAW_VERBOSE",
          "4744:   if (verbose) fprintf (stderr,_(\"Bilinear interpolation...\\n\"));",
          "",
          "[Removed Lines]",
          "4740:   int f, c, i, x, y, row, col, shift, color;",
          "4741:   ushort *pix;",
          "",
          "[Added Lines]",
          "4737: void CLASS lin_interpolate_loop(int code[16][16][32],int size)",
          "4738: {",
          "4739:   int row;",
          "4740: #if defined(LIBRAW_USE_OPENMP)",
          "4741: #pragma omp parallel default(shared)",
          "4742: #endif",
          "4743:   for (row=1; row < height-1; row++)",
          "4744:     {",
          "4745:       int col,*ip;",
          "4746:       ushort *pix;",
          "4747:       for (col=1; col < width-1; col++) {",
          "4748:         int i;",
          "4749:         int sum[4];",
          "4750:         pix = image[row*width+col];",
          "4751:         ip = code[row % size][col % size];",
          "4752:         memset (sum, 0, sizeof sum);",
          "4753:         for (i=*ip++; i--; ip+=3)",
          "4754:           sum[ip[2]] += pix[ip[0]] << ip[1];",
          "4755:         for (i=colors; --i; ip+=2)",
          "4756:           pix[ip[0]] = sum[ip[0]] * ip[1] >> 8;",
          "4757:       }",
          "4758:     }",
          "4759: }",
          "4764:   int f, c, x, y, row, col, shift, color;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4774: #ifdef LIBRAW_LIBRARY_BUILD",
          "4775:   RUN_CALLBACK(LIBRAW_PROGRESS_INTERPOLATE,1,3);",
          "4776: #endif",
          "4787: #ifdef LIBRAW_LIBRARY_BUILD",
          "4788:   RUN_CALLBACK(LIBRAW_PROGRESS_INTERPOLATE,2,3);",
          "4789: #endif",
          "",
          "[Removed Lines]",
          "4777:   for (row=1; row < height-1; row++)",
          "4778:     for (col=1; col < width-1; col++) {",
          "4779:       pix = image[row*width+col];",
          "4780:       ip = code[row % size][col % size];",
          "4781:       memset (sum, 0, sizeof sum);",
          "4782:       for (i=*ip++; i--; ip+=3)",
          "4783:  sum[ip[2]] += pix[ip[0]] << ip[1];",
          "4784:       for (i=colors; --i; ip+=2)",
          "4785:  pix[ip[0]] = sum[ip[0]] * ip[1] >> 8;",
          "4786:     }",
          "",
          "[Added Lines]",
          "4801:   lin_interpolate_loop(code,size);",
          "",
          "---------------"
        ],
        "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
          "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "3593:     }",
          "3594: }",
          "3596: void CLASS lin_interpolate()",
          "3597: {",
          "3598:   int code[16][16][32], size=16, *ip, sum[4];",
          "3602: #ifdef DCRAW_VERBOSE",
          "3603:   if (verbose) fprintf (stderr,_(\"Bilinear interpolation...\\n\"));",
          "",
          "[Removed Lines]",
          "3599:   int f, c, i, x, y, row, col, shift, color;",
          "3600:   ushort *pix;",
          "",
          "[Added Lines]",
          "3596: void CLASS lin_interpolate_loop(int code[16][16][32],int size)",
          "3597: {",
          "3598:   int row;",
          "3599: #if defined(LIBRAW_USE_OPENMP)",
          "3600: #pragma omp parallel default(shared)",
          "3601: #endif",
          "3602:   for (row=1; row < height-1; row++)",
          "3603:     {",
          "3604:       int col,*ip;",
          "3605:       ushort *pix;",
          "3606:       for (col=1; col < width-1; col++) {",
          "3607:         int i;",
          "3608:         int sum[4];",
          "3609:         pix = image[row*width+col];",
          "3610:         ip = code[row % size][col % size];",
          "3611:         memset (sum, 0, sizeof sum);",
          "3612:         for (i=*ip++; i--; ip+=3)",
          "3613:           sum[ip[2]] += pix[ip[0]] << ip[1];",
          "3614:         for (i=colors; --i; ip+=2)",
          "3615:           pix[ip[0]] = sum[ip[0]] * ip[1] >> 8;",
          "3616:       }",
          "3617:     }",
          "3618: }",
          "3623:   int f, c, x, y, row, col, shift, color;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3633: #ifdef LIBRAW_LIBRARY_BUILD",
          "3634:   RUN_CALLBACK(LIBRAW_PROGRESS_INTERPOLATE,1,3);",
          "3635: #endif",
          "3646: #ifdef LIBRAW_LIBRARY_BUILD",
          "3647:   RUN_CALLBACK(LIBRAW_PROGRESS_INTERPOLATE,2,3);",
          "3648: #endif",
          "",
          "[Removed Lines]",
          "3636:   for (row=1; row < height-1; row++)",
          "3637:     for (col=1; col < width-1; col++) {",
          "3638:       pix = image[row*width+col];",
          "3639:       ip = code[row % size][col % size];",
          "3640:       memset (sum, 0, sizeof sum);",
          "3641:       for (i=*ip++; i--; ip+=3)",
          "3642:  sum[ip[2]] += pix[ip[0]] << ip[1];",
          "3643:       for (i=colors; --i; ip+=2)",
          "3644:  pix[ip[0]] = sum[ip[0]] * ip[1] >> 8;",
          "3645:     }",
          "",
          "[Added Lines]",
          "3660:   lin_interpolate_loop(code,size);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4481:     fseek (ifp, save, SEEK_SET);",
          "4482:   }",
          "4483: }",
          "4485: void CLASS parse_makernote (int base, int uptag)",
          "4486: {",
          "4487:   static const uchar xlat[2][256] = {",
          "",
          "[Removed Lines]",
          "4484: #line 5630 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "4499: #line 5645 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4996:     fseek (ifp, save, SEEK_SET);",
          "4997:   }",
          "4998: }",
          "5000: int CLASS parse_tiff_ifd (int base)",
          "5001: {",
          "5002:   unsigned entries, tag, type, len, plen=16, save;",
          "",
          "[Removed Lines]",
          "4999: #line 6150 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "5014: #line 6165 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "6240:     data_offset = get4();",
          "6241:   }",
          "6242: }",
          "6244: char * CLASS foveon_gets (int offset, char *str, int len)",
          "6245: {",
          "6246:   int i;",
          "",
          "[Removed Lines]",
          "6243: #line 7396 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "6258: #line 7411 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "6341:   }",
          "6342:   is_foveon = 1;",
          "6343: }",
          "6346:    All matrices are from Adobe DNG Converter unless otherwise noted.",
          "",
          "[Removed Lines]",
          "6344: #line 7499 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "6359: #line 7514 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "8784: }",
          "8788: void CLASS convert_to_rgb()",
          "8789: {",
          "8790: #ifndef LIBRAW_LIBRARY_BUILD",
          "",
          "[Removed Lines]",
          "8787: #line 10033 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "8802: #line 10048 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "9015:   if (flip & 1) col = iwidth  - 1 - col;",
          "9016:   return row * iwidth + col;",
          "9017: }",
          "9019: void CLASS tiff_set (ushort *ntag,",
          "9020:  ushort tag, ushort type, int count, int val)",
          "9021: {",
          "",
          "[Removed Lines]",
          "9018: #line 10289 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "9033: #line 10304 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ],
        "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp": [
          "File: internal/dcraw_fileio.cpp -> internal/dcraw_fileio.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "154:   RUN_CALLBACK(LIBRAW_PROGRESS_DARK_FRAME,1,2);",
          "155: #endif",
          "156: }",
          "158: #ifndef NO_LCMS",
          "159: void CLASS apply_profile (const char *input, const char *output)",
          "160: {",
          "",
          "[Removed Lines]",
          "157: #line 9944 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "157: #line 9959 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ],
        "libraw/libraw.h||libraw/libraw.h": [
          "File: libraw/libraw.h -> libraw/libraw.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "208: #endif",
          "209:     void        pre_interpolate();",
          "210:     void        border_interpolate (int border);",
          "211:     void        lin_interpolate();",
          "212:     void        vng_interpolate();",
          "213:     void        ppg_interpolate();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "211:   virtual void lin_interpolate_loop(int code[16][16][32],int size);",
          "",
          "---------------"
        ],
        "src/libraw_datastream.cpp||src/libraw_datastream.cpp": [
          "File: src/libraw_datastream.cpp -> src/libraw_datastream.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "432: int LibRaw_buffer_datastream::jpeg_src(void *jpegdata)",
          "433: {",
          "435:   return -1;",
          "436: #else",
          "437:   j_decompress_ptr cinfo = (j_decompress_ptr) jpegdata;",
          "",
          "[Removed Lines]",
          "434: #ifdef NO_JPEG",
          "",
          "[Added Lines]",
          "434: #if defined(NO_JPEG) || !defined (USE_JPEG8)",
          "",
          "---------------"
        ]
      }
    }
  ]
}