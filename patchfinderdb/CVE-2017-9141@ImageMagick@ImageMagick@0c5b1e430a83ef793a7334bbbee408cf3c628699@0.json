{
  "cve_id": "CVE-2017-9141",
  "cve_desc": "In ImageMagick 7.0.5-7 Q16, a crafted file could trigger an assertion failure in the ResetImageProfileIterator function in MagickCore/profile.c because of missing checks in the ReadDDSImage function in coders/dds.c.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "0c5b1e430a83ef793a7334bbbee408cf3c628699",
  "patch_info": {
    "commit_hash": "0c5b1e430a83ef793a7334bbbee408cf3c628699",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/0c5b1e430a83ef793a7334bbbee408cf3c628699",
    "files": [
      "coders/dds.c"
    ],
    "message": "Added check to prevent image being 0x0 (reported in #489).",
    "before_after_code_files": [
      "coders/dds.c||coders/dds.c"
    ]
  },
  "patch_diff": {
    "coders/dds.c||coders/dds.c": [
      "File: coders/dds.c -> coders/dds.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1677:     }",
      "1684:   }",
      "1686:   if (dds_info.ddscaps2 & DDSCAPS2_CUBEMAP)",
      "1687:     cubemap = MagickTrue;",
      "1689:   if (dds_info.ddscaps2 & DDSCAPS2_VOLUME && dds_info.depth > 0)",
      "1690:     volume = MagickTrue;",
      "1692:   (void) SeekBlob(image, 128, SEEK_SET);",
      "",
      "[Removed Lines]",
      "1680:     Initialize image structure.",
      "1682:   if (ReadDDSInfo(image, &dds_info) != MagickTrue) {",
      "1683:     ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");",
      "",
      "[Added Lines]",
      "1680:     Initialize image structure.",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1775:       if (dds_info.ddscaps2 & DDSCAPS2_CUBEMAP_NEGATIVEZ) num_images++;",
      "1776:     }",
      "1778:   if (volume)",
      "1779:     num_images = dds_info.depth;",
      "1781:   for (n = 0; n < num_images; n++)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1778:     num_images = dds_info.depth;",
      "1780:   if (num_images < 1)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f176551f4e4172bf7696eea3f251ca02efe2b1c5",
      "candidate_info": {
        "commit_hash": "f176551f4e4172bf7696eea3f251ca02efe2b1c5",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/f176551f4e4172bf7696eea3f251ca02efe2b1c5",
        "files": [
          "coders/dds.c"
        ],
        "message": "Eliminate out-of-memory for DDS coder Credit Fuzz OSS",
        "before_after_code_files": [
          "coders/dds.c||coders/dds.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/dds.c||coders/dds.c"
          ],
          "candidate": [
            "coders/dds.c||coders/dds.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/dds.c||coders/dds.c": [
          "File: coders/dds.c -> coders/dds.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1792:     }",
          "1794:   if (volume)",
          "1797:   if (num_images < 1)",
          "1798:     ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");",
          "",
          "[Removed Lines]",
          "1795:     num_images = dds_info.depth;",
          "",
          "[Added Lines]",
          "1795:     num_images = dds_info.depth;",
          "",
          "---------------"
        ]
      }
    }
  ]
}