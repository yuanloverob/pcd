{
  "cve_id": "CVE-2014-6423",
  "cve_desc": "The tvb_raw_text_add function in epan/dissectors/packet-megaco.c in the MEGACO dissector in Wireshark 1.10.x before 1.10.10 and 1.12.x before 1.12.1 allows remote attackers to cause a denial of service (infinite loop) via an empty line.",
  "repo": "wireshark/wireshark",
  "patch_hash": "9112a099d7cc2cd924b7c667bf27f6e112b970c6",
  "patch_info": {
    "commit_hash": "9112a099d7cc2cd924b7c667bf27f6e112b970c6",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/9112a099d7cc2cd924b7c667bf27f6e112b970c6",
    "files": [
      "epan/dissectors/packet-megaco.c"
    ],
    "message": "Fix an infinite loop when the line has no length\n\nBug:10333\nChange-Id: Ia2dae94095dddf57e4c75792b5477b0eb37c29c9\nReviewed-on: https://code.wireshark.org/review/3343\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-megaco.c||epan/dissectors/packet-megaco.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-megaco.c||epan/dissectors/packet-megaco.c": [
      "File: epan/dissectors/packet-megaco.c -> epan/dissectors/packet-megaco.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3252:                             \"%s\", tvb_format_text_wsp(tvb,tvb_linebegin,",
      "3253:                                                       linelen));",
      "3254:         tvb_linebegin = tvb_lineend;",
      "3256: }",
      "",
      "[Removed Lines]",
      "3255:     } while ( tvb_lineend < tvb_len );",
      "",
      "[Added Lines]",
      "3255:     } while ( tvb_lineend < tvb_len && linelen > 0);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e915db7cc8c779368afef51c12241337b4d7beda",
      "candidate_info": {
        "commit_hash": "e915db7cc8c779368afef51c12241337b4d7beda",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/e915db7cc8c779368afef51c12241337b4d7beda",
        "files": [
          "epan/dissectors/packet-catapult-dct2000.c",
          "epan/dissectors/packet-http.c",
          "epan/dissectors/packet-irc.c",
          "epan/dissectors/packet-l1-events.c",
          "epan/dissectors/packet-ldss.c",
          "epan/dissectors/packet-megaco.c",
          "epan/dissectors/packet-memcache.c",
          "epan/dissectors/packet-mgcp.c",
          "epan/dissectors/packet-mrcpv2.c",
          "epan/dissectors/packet-msrp.c",
          "epan/dissectors/packet-multipart.c",
          "epan/dissectors/packet-rtsp.c",
          "epan/dissectors/packet-sdp.c",
          "epan/dissectors/packet-sip.c",
          "epan/dissectors/packet-sipfrag.c",
          "epan/dissectors/packet-text-media.c"
        ],
        "message": "Do not iterate over reported length when using tvb_find_line_end\n\nif captured length < reported length, this will trigger an infinite loop\n\nChange-Id: I6557b455e7bbff12658a934e5bb13a42c023e133\nReviewed-on: https://code.wireshark.org/review/7053\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-catapult-dct2000.c||epan/dissectors/packet-catapult-dct2000.c",
          "epan/dissectors/packet-http.c||epan/dissectors/packet-http.c",
          "epan/dissectors/packet-irc.c||epan/dissectors/packet-irc.c",
          "epan/dissectors/packet-l1-events.c||epan/dissectors/packet-l1-events.c",
          "epan/dissectors/packet-ldss.c||epan/dissectors/packet-ldss.c",
          "epan/dissectors/packet-megaco.c||epan/dissectors/packet-megaco.c",
          "epan/dissectors/packet-memcache.c||epan/dissectors/packet-memcache.c",
          "epan/dissectors/packet-mgcp.c||epan/dissectors/packet-mgcp.c",
          "epan/dissectors/packet-mrcpv2.c||epan/dissectors/packet-mrcpv2.c",
          "epan/dissectors/packet-msrp.c||epan/dissectors/packet-msrp.c",
          "epan/dissectors/packet-multipart.c||epan/dissectors/packet-multipart.c",
          "epan/dissectors/packet-rtsp.c||epan/dissectors/packet-rtsp.c",
          "epan/dissectors/packet-sdp.c||epan/dissectors/packet-sdp.c",
          "epan/dissectors/packet-sip.c||epan/dissectors/packet-sip.c",
          "epan/dissectors/packet-sipfrag.c||epan/dissectors/packet-sipfrag.c",
          "epan/dissectors/packet-text-media.c||epan/dissectors/packet-text-media.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-megaco.c||epan/dissectors/packet-megaco.c"
          ],
          "candidate": [
            "epan/dissectors/packet-megaco.c||epan/dissectors/packet-megaco.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-catapult-dct2000.c||epan/dissectors/packet-catapult-dct2000.c": [
          "File: epan/dissectors/packet-catapult-dct2000.c -> epan/dissectors/packet-catapult-dct2000.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1910:     tty_tree = proto_item_add_subtree(ti, ett_catapult_dct2000_tty);",
          "1915:         int linelen = tvb_find_line_end_unquoted(tvb, offset, -1, &next_offset);",
          "",
          "[Removed Lines]",
          "1913:     while (tvb_reported_length_remaining(tvb, offset) > 0) {",
          "",
          "[Added Lines]",
          "1913:     while (tvb_offset_exists(tvb, offset)) {",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-http.c||epan/dissectors/packet-http.c": [
          "File: epan/dissectors/packet-http.c -> epan/dissectors/packet-http.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "846:  while (tvb_reported_length_remaining(tvb, offset) > 0) {",
          "",
          "[Added Lines]",
          "846:  while (tvb_offset_exists(tvb, offset)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3426:   ti = proto_tree_add_item(tree, proto_message_http,",
          "3427:     tvb, 0, -1, ENC_NA);",
          "3428:   subtree = proto_item_add_subtree(ti, ett_message_http);",
          "3430:    len = tvb_find_line_end(tvb, offset,",
          "3431:      tvb_ensure_captured_length_remaining(tvb, offset),",
          "3432:      &next_offset, FALSE);",
          "",
          "[Removed Lines]",
          "3429:   while (tvb_reported_length_remaining(tvb, offset) > 0) {",
          "",
          "[Added Lines]",
          "3429:   while (tvb_offset_exists(tvb, offset)) {",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-irc.c||epan/dissectors/packet-irc.c": [
          "File: epan/dissectors/packet-irc.c -> epan/dissectors/packet-irc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "473:     {",
          "",
          "[Removed Lines]",
          "472:     while (tvb_reported_length_remaining(tvb, offset) > 0)",
          "",
          "[Added Lines]",
          "472:     while (tvb_offset_exists(tvb, offset))",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-l1-events.c||epan/dissectors/packet-l1-events.c": [
          "File: epan/dissectors/packet-l1-events.c -> epan/dissectors/packet-l1-events.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "83:    proto_item_append_text(ti, \": %s\", data_name);",
          "84:   subtree = proto_item_add_subtree(ti, ett_l1_events);",
          "",
          "[Removed Lines]",
          "86:   while (tvb_reported_length_remaining(tvb, offset) != 0) {",
          "",
          "[Added Lines]",
          "86:   while (tvb_offset_exists(tvb, offset)) {",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-ldss.c||epan/dissectors/packet-ldss.c": [
          "File: epan/dissectors/packet-ldss.c -> epan/dissectors/packet-ldss.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "514:    gint next_offset;",
          "515:    const guint8 *line;",
          "516:    int linelen;",
          "",
          "[Removed Lines]",
          "513:   while (offset < tvb_reported_length(tvb)) {",
          "",
          "[Added Lines]",
          "513:   while (tvb_offset_exists(tvb, offset)) {",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-megaco.c||epan/dissectors/packet-megaco.c": [
          "File: epan/dissectors/packet-megaco.c -> epan/dissectors/packet-megaco.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3227: static void tvb_raw_text_add(tvbuff_t *tvb, proto_tree *tree){",
          "3231:     tvb_linebegin = 0;",
          "3234:     proto_tree_add_text(tree, tvb, 0, -1,\"-------------- (RAW text output) ---------------\");",
          "",
          "[Removed Lines]",
          "3229:     gint tvb_linebegin,tvb_lineend,tvb_len,linelen;",
          "3232:     tvb_len = tvb_reported_length(tvb);",
          "",
          "[Added Lines]",
          "3229:     gint tvb_linebegin,tvb_lineend,linelen;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3239:                             \"%s\", tvb_format_text_wsp(tvb,tvb_linebegin,",
          "3240:                                                       linelen));",
          "3241:         tvb_linebegin = tvb_lineend;",
          "3243: }",
          "",
          "[Removed Lines]",
          "3242:     } while ( tvb_lineend < tvb_len && linelen > 0);",
          "",
          "[Added Lines]",
          "3241:     } while (tvb_offset_exists(tvb, tvb_lineend) && linelen > 0);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-memcache.c||epan/dissectors/packet-memcache.c": [
          "File: epan/dissectors/packet-memcache.c -> epan/dissectors/packet-memcache.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1003:   int            tokenlen;",
          "1008:     linelen = tvb_find_line_end (tvb, offset,",
          "1009:                                  tvb_ensure_length_remaining (tvb, offset), &next_offset,",
          "",
          "[Removed Lines]",
          "1006:   if (tvb_reported_length_remaining (tvb, offset) != 0) {",
          "",
          "[Added Lines]",
          "1006:   if (tvb_offset_exists (tvb, offset)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1054:   guint32       slabclass;",
          "1055:   guchar        response_chars[21];",
          "1059:     linelen = tvb_find_line_end (tvb, offset,",
          "1060:                                  tvb_ensure_length_remaining (tvb, offset), &next_offset,",
          "",
          "[Removed Lines]",
          "1057:   while (tvb_reported_length_remaining (tvb, offset) != 0) {",
          "",
          "[Added Lines]",
          "1057:   while (tvb_offset_exists (tvb, offset)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1172:     linelen = tvb_find_line_end (tvb, offset,",
          "1173:                                  tvb_ensure_length_remaining (tvb, offset), &next_offset,",
          "",
          "[Removed Lines]",
          "1170:   while (tvb_reported_length_remaining (tvb, offset) != 0) {",
          "",
          "[Added Lines]",
          "1170:   while (tvb_offset_exists (tvb, offset)) {",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-mgcp.c||epan/dissectors/packet-mgcp.c": [
          "File: epan/dissectors/packet-mgcp.c -> epan/dissectors/packet-mgcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "558: static void mgcp_raw_text_add(tvbuff_t *tvb, proto_tree *tree)",
          "559: {",
          "562:  tvb_linebegin = 0;",
          "565:  do",
          "566:  {",
          "",
          "[Removed Lines]",
          "560:  gint tvb_linebegin, tvb_lineend, tvb_len, linelen;",
          "563:  tvb_len = tvb_reported_length(tvb);",
          "",
          "[Added Lines]",
          "560:  gint tvb_linebegin, tvb_lineend, linelen;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "568:   linelen = tvb_lineend - tvb_linebegin;",
          "569:   proto_tree_add_format_text(tree, tvb, tvb_linebegin, linelen);",
          "570:   tvb_linebegin = tvb_lineend;",
          "572: }",
          "",
          "[Removed Lines]",
          "571:  } while (tvb_lineend < tvb_len);",
          "",
          "[Added Lines]",
          "570:  } while (tvb_offset_exists(tvb, tvb_lineend));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1150:                                        tvb_current_len);",
          "1151:    }",
          "1152:    tokennum++;",
          "1155:   switch (mgcp_type)",
          "1156:   {",
          "",
          "[Removed Lines]",
          "1153:   } while (tvb_current_offset < tvb_len && tvb_previous_offset < tvb_len && tokennum <= 3);",
          "",
          "[Added Lines]",
          "1152:   } while (tvb_current_offset < tvb_len && tvb_offset_exists(tvb, tvb_current_offset) && tvb_previous_offset < tvb_len && tokennum <= 3);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1419:   mgcp_param_tree = proto_item_add_subtree(mgcp_param_ti, ett_mgcp_param);",
          "1423:   {",
          "1424:    old_lineend = tvb_lineend;",
          "1425:    linelen = tvb_find_line_end(tvb, tvb_linebegin, -1, &tvb_lineend, FALSE);",
          "",
          "[Removed Lines]",
          "1422:   while (tvb_lineend < tvb_len)",
          "",
          "[Added Lines]",
          "1421:   while (tvb_offset_exists(tvb, tvb_lineend))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1790:   tvb_current_len = tvb_reported_length_remaining(tvb, tvb_linebegin);",
          "1791:   tvb_find_line_end(tvb, tvb_linebegin, tvb_current_len, &tvb_lineend, FALSE);",
          "1792:   tempchar = tvb_get_guint8(tvb, tvb_linebegin);",
          "",
          "[Removed Lines]",
          "1793:  } while (tempchar != '\\r' && tempchar != '\\n' && tvb_lineend <= maxoffset);",
          "",
          "[Added Lines]",
          "1792:  } while (tempchar != '\\r' && tempchar != '\\n' && tvb_lineend <= maxoffset && tvb_offset_exists(tvb, tvb_lineend));",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-mrcpv2.c||epan/dissectors/packet-mrcpv2.c": [
          "File: epan/dissectors/packet-mrcpv2.c -> epan/dissectors/packet-mrcpv2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "611:         content_length = 0;",
          "613:         {",
          "615:             offset = next_offset;",
          "",
          "[Removed Lines]",
          "612:         while (next_offset < tvb_len)",
          "",
          "[Added Lines]",
          "612:         while (tvb_offset_exists(tvb, next_offset))",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-msrp.c||epan/dissectors/packet-msrp.c": [
          "File: epan/dissectors/packet-msrp.c -> epan/dissectors/packet-msrp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "393: {",
          "394:     gint offset = start, next_offset, linelen;",
          "399:         linelen =  tvb_find_line_end(tvb, offset, -1, &next_offset, FALSE);",
          "",
          "[Removed Lines]",
          "396:     while (tvb_length_remaining(tvb, offset) > 0) {",
          "",
          "[Added Lines]",
          "396:     while (tvb_offset_exists(tvb, offset)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "589:             linelen = tvb_find_line_end(tvb, offset, -1, &next_offset, FALSE);",
          "",
          "[Removed Lines]",
          "586:         while (tvb_reported_length_remaining(tvb, offset) > 0 && offset < end_line_offset  ) {",
          "",
          "[Added Lines]",
          "586:         while (tvb_offset_exists(tvb, offset) && offset < end_line_offset  ) {",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-multipart.c||epan/dissectors/packet-multipart.c": [
          "File: epan/dissectors/packet-multipart.c -> epan/dissectors/packet-multipart.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "454: {",
          "455:     gint offset = start, next_offset, line_len, boundary_start;",
          "458:         boundary_start = offset;",
          "459:         if (((tvb_strneql(tvb, offset, (const guint8 *)\"--\", 2) == 0)",
          "460:                     && (tvb_strneql(tvb, offset + 2, boundary,  boundary_len) == 0)))",
          "",
          "[Removed Lines]",
          "457:     while (tvb_reported_length_remaining(tvb, offset + 2 + boundary_len) > 0) {",
          "",
          "[Added Lines]",
          "457:     while (tvb_offset_exists(tvb, offset + 2 + boundary_len)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "500: {",
          "501:     gint offset = start, next_offset, line_len, boundary_start;",
          "504:         line_len =  tvb_find_line_end(tvb, offset, -1, &next_offset, FALSE);",
          "505:         if (line_len == -1) {",
          "506:             return -1;",
          "",
          "[Removed Lines]",
          "503:     while (tvb_reported_length_remaining(tvb, offset + 2 + boundary_len) > 0) {",
          "",
          "[Added Lines]",
          "503:     while (tvb_offset_exists(tvb, offset + 2 + boundary_len)) {",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-rtsp.c||epan/dissectors/packet-rtsp.c": [
          "File: epan/dissectors/packet-rtsp.c -> epan/dissectors/packet-rtsp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "836:     while (tvb_reported_length_remaining(tvb, offset) != 0) {",
          "",
          "[Added Lines]",
          "836:     while (tvb_offset_exists(tvb, offset)) {",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-sdp.c||epan/dissectors/packet-sdp.c": [
          "File: epan/dissectors/packet-sdp.c -> epan/dissectors/packet-sdp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1977:     while (tvb_reported_length_remaining(tvb, offset) > 0) {",
          "",
          "[Added Lines]",
          "1977:     while (tvb_offset_exists(tvb, offset)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2330:     in_media_description = FALSE;",
          "",
          "[Removed Lines]",
          "2332:     while (tvb_reported_length_remaining(tvb, offset) > 0) {",
          "",
          "[Added Lines]",
          "2332:     while (tvb_offset_exists(tvb, offset)) {",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-sip.c||epan/dissectors/packet-sip.c": [
          "File: epan/dissectors/packet-sip.c -> epan/dissectors/packet-sip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2732:         if(tvb_reported_length_remaining(tvb, next_offset) <= 0){",
          "2733:             is_no_header_termination = TRUE;",
          "2734:         }else{",
          "2736:             {",
          "",
          "[Removed Lines]",
          "2735:             while ((c = tvb_get_guint8(tvb, next_offset)) == ' ' || c == '\\t')",
          "",
          "[Added Lines]",
          "2735:             while (tvb_offset_exists(tvb, next_offset) && ((c = tvb_get_guint8(tvb, next_offset)) == ' ' || c == '\\t'))",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-sipfrag.c||epan/dissectors/packet-sipfrag.c": [
          "File: epan/dissectors/packet-sipfrag.c -> epan/dissectors/packet-sipfrag.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:     sipfrag_tree = proto_item_add_subtree(ti, ett_sipfrag);",
          "69:     {",
          "71:         linelen = tvb_find_line_end_unquoted(tvb, offset, -1, &next_offset);",
          "",
          "[Removed Lines]",
          "68:     while (tvb_reported_length_remaining(tvb, offset) > 0)",
          "",
          "[Added Lines]",
          "68:     while (tvb_offset_exists(tvb, offset))",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-text-media.c||epan/dissectors/packet-text-media.c": [
          "File: epan/dissectors/packet-text-media.c -> epan/dissectors/packet-text-media.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:    proto_item_append_text(ti, \": %s\", data_name);",
          "99:   subtree = proto_item_add_subtree(ti, ett_text_lines);",
          "",
          "[Removed Lines]",
          "101:   while (tvb_reported_length_remaining(tvb, offset) != 0) {",
          "",
          "[Added Lines]",
          "101:   while (tvb_offset_exists(tvb, offset)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e1106646cda482be781836d2e752ca2586736d73",
      "candidate_info": {
        "commit_hash": "e1106646cda482be781836d2e752ca2586736d73",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/e1106646cda482be781836d2e752ca2586736d73",
        "files": [
          "epan/dissectors/packet-megaco.c"
        ],
        "message": "Overhaul the MEGACO dissector.\n\n1. Have megaco dissector display fields as their are \"interpreted\", not as raw data with \"interpretation\" as a subtree\n2. Replace/remove proto_tree_add_text\n3. Convert some \"numeric string fields\" into numeric values.\n4. Add some more dissection discovered while looking for sample captures.\n\nBug: 6732\nPing-Bug: 10909\nChange-Id: Ie051a8a16ef2355681a24be8789bae0971632cd1\nReviewed-on: https://code.wireshark.org/review/8382\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-megaco.c||epan/dissectors/packet-megaco.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-megaco.c||epan/dissectors/packet-megaco.c"
          ],
          "candidate": [
            "epan/dissectors/packet-megaco.c||epan/dissectors/packet-megaco.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-megaco.c||epan/dissectors/packet-megaco.c": [
          "File: epan/dissectors/packet-megaco.c -> epan/dissectors/packet-megaco.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "60: static int proto_megaco         = -1;",
          "63: static int hf_megaco_version        = -1;",
          "64: static int hf_megaco_transaction    = -1;",
          "65: static int hf_megaco_transid        = -1;",
          "66: static int hf_megaco_Context        = -1;",
          "68: static int hf_megaco_command        = -1;",
          "69: static int hf_megaco_termid         = -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63: static int hf_megaco_start          = -1;",
          "70: static int hf_megaco_command_optional = -1;",
          "71: static int hf_megaco_wildcard_response = -1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74: static int hf_megaco_modem_descriptor           = -1;",
          "75: static int hf_megaco_multiplex_descriptor       = -1;",
          "79: static int hf_megaco_audit_descriptor           = -1;",
          "81: static int hf_megaco_digitmap_descriptor        = -1;",
          "82: static int hf_megaco_statistics_descriptor      = -1;",
          "84: static int hf_megaco_topology_descriptor        = -1;",
          "85: static int hf_megaco_error_descriptor           = -1;",
          "90: static int hf_megaco_packages_descriptor        = -1;",
          "92: static int hf_megaco_Service_State              = -1;",
          "93: static int hf_megaco_Event_Buffer_Control       = -1;",
          "94: static int hf_megaco_mode                       = -1;",
          "",
          "[Removed Lines]",
          "91: static int hf_megaco_error_Frame                = -1;",
          "",
          "[Added Lines]",
          "79: static int hf_megaco_media_descriptor           = -1;",
          "80: static int hf_megaco_Local_descriptor           = -1;",
          "81: static int hf_megaco_events_descriptor          = -1;",
          "82: static int hf_megaco_signal_descriptor          = -1;",
          "87: static int hf_megaco_observedevents_descriptor  = -1;",
          "90: static int hf_megaco_error_code                 = -1;",
          "91: static int hf_megaco_error_string               = -1;",
          "92: static int hf_megaco_TerminationState_descriptor= -1;",
          "94: static int hf_megaco_LocalControl_descriptor    = -1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "96: static int hf_megaco_h324_muxtbl_in             = -1;",
          "97: static int hf_megaco_h324_muxtbl_out            = -1;",
          "98: static int hf_megaco_ds_dscp                    = -1;",
          "99: static int hf_megaco_h324_h223capr              = -1;",
          "100: static int hf_megaco_reserve_value              = -1;",
          "101: static int hf_megaco_streamid                   = -1;",
          "102: static int hf_megaco_requestid                  = -1;",
          "103: static int hf_megaco_pkgdname                   = -1;",
          "104: static int hf_megaco_mId                        = -1;",
          "106: static int hf_megaco_h223Capability             = -1;",
          "107: static int hf_megaco_audititem                  = -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103: static int hf_megaco_gm_saf                     = -1;",
          "104: static int hf_megaco_gm_sam                     = -1;",
          "105: static int hf_megaco_gm_spf                     = -1;",
          "106: static int hf_megaco_gm_spr                     = -1;",
          "107: static int hf_megaco_gm_esas                    = -1;",
          "108: static int hf_megaco_tman_pol                   = -1;",
          "109: static int hf_megaco_tman_sdr                   = -1;",
          "110: static int hf_megaco_tman_mbs                   = -1;",
          "111: static int hf_megaco_tman_pdr                   = -1;",
          "112: static int hf_megaco_tman_dvt                   = -1;",
          "113: static int hf_megaco_ipdc_realm                 = -1;",
          "120: static int hf_megaco_h245                       = -1;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "114: static int ett_megaco_command_line              = -1;",
          "115: static int ett_megaco_mediadescriptor           = -1;",
          "116: static int ett_megaco_descriptors               = -1;",
          "117: static int ett_megaco_TerminationState          = -1;",
          "118: static int ett_megaco_Localdescriptor           = -1;",
          "119: static int ett_megaco_Remotedescriptor          = -1;",
          "120: static int ett_megaco_LocalControldescriptor    = -1;",
          "121: static int ett_megaco_auditdescriptor           = -1;",
          "122: static int ett_megaco_eventsdescriptor          = -1;",
          "123: static int ett_megaco_observedeventsdescriptor  = -1;",
          "124: static int ett_megaco_observedevent             = -1;",
          "125: static int ett_megaco_packagesdescriptor        = -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "132: static int ett_megaco_raw_text                  = -1;",
          "133: static int ett_megaco_error_descriptor          = -1;",
          "140: static int ett_megaco_statisticsdescriptor      = -1;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "131: static gcp_hf_ett_t megaco_ctx_ids = {{-1,-1,-1,-1,-1,-1},{-1,-1,-1,-1}};",
          "133: static expert_field ei_megaco_errored_command = EI_INIT;",
          "134: static expert_field ei_megaco_error_descriptor_transaction_list = EI_INIT;",
          "135: static expert_field ei_megaco_parse_error = EI_INIT;",
          "136: static expert_field ei_megaco_audit_descriptor = EI_INIT;",
          "138: static dissector_handle_t megaco_text_handle;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "152: static expert_field ei_megaco_no_command = EI_INIT;",
          "153: static expert_field ei_megaco_no_descriptor = EI_INIT;",
          "157: static expert_field ei_megaco_signal_descriptor = EI_INIT;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "168: static gboolean global_megaco_raw_text = TRUE;",
          "169: static gboolean global_megaco_dissect_tree = TRUE;",
          "172: static gint megaco_tvb_skip_wsp(tvbuff_t *tvb, gint offset);",
          "173: static gint megaco_tvb_skip_wsp_return(tvbuff_t *tvb, gint offset);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "192: static const value_string megaco_context_vals[] = {",
          "193:    { CHOOSE_CONTEXT,       \"Choose one\"     },",
          "194:    { ALL_CONTEXTS,         \"All\"            },",
          "195:    { NULL_CONTEXT,         \"NULL\"           },",
          "197:    { 0,                    NULL }",
          "198: };",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "180: static void",
          "196: static void",
          "197: dissect_megaco_digitmapdescriptor(tvbuff_t *tvb, proto_tree *tree, gint tvb_RBRKT, gint tvb_previous_offset);",
          "198: static void",
          "203: dissect_megaco_topologydescriptor(tvbuff_t *tvb, proto_tree *tree, gint tvb_RBRKT, gint tvb_previous_offset);",
          "204: static void",
          "205: dissect_megaco_errordescriptor(tvbuff_t *tvb, proto_tree *tree, gint tvb_RBRKT, gint tvb_previous_offset);",
          "",
          "[Removed Lines]",
          "181: dissect_megaco_descriptors(tvbuff_t *tvb, proto_tree *tree, packet_info *pinfo, gint tvb_descriptors_start_offset, gint tvb_descriptors_end_offset);",
          "182: static void",
          "183: dissect_megaco_modemdescriptor(tvbuff_t *tvb, proto_tree *tree, gint tvb_RBRKT, gint tvb_previous_offset);",
          "184: static void",
          "185: dissect_megaco_multiplexdescriptor(tvbuff_t *tvb, proto_tree *tree, gint tvb_RBRKT, gint tvb_previous_offset);",
          "186: static void",
          "187: dissect_megaco_mediadescriptor(tvbuff_t *tvb, proto_tree *tree,packet_info *pinfo, gint tvb_RBRKT, gint tvb_previous_offset);",
          "188: static void",
          "189: dissect_megaco_eventsdescriptor(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, gint tvb_RBRKT, gint tvb_previous_offset);",
          "190: static void",
          "191: dissect_megaco_signaldescriptor(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, gint tvb_RBRKT, gint tvb_previous_offset);",
          "192: static void",
          "193: dissect_megaco_auditdescriptor(tvbuff_t *tvb, proto_tree *tree,packet_info *pinfo, gint tvb_RBRKT, gint tvb_previous_offset);",
          "194: static void",
          "195: dissect_megaco_servicechangedescriptor(tvbuff_t *tvb, proto_tree *tree, gint tvb_RBRKT, gint tvb_previous_offset);",
          "199: dissect_megaco_statisticsdescriptor(tvbuff_t *tvb, proto_tree *tree, gint tvb_RBRKT, gint tvb_previous_offset);",
          "200: static void",
          "201: dissect_megaco_observedeventsdescriptor(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, gint tvb_RBRKT, gint tvb_previous_offset);",
          "202: static void",
          "",
          "[Added Lines]",
          "211: dissect_megaco_descriptors(tvbuff_t *tvb, proto_tree *tree, packet_info *pinfo, gint tvb_descriptors_start_offset, gint tvb_descriptors_end_offset, proto_tree *top_tree);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "208: static void",
          "209: dissect_megaco_Localdescriptor(tvbuff_t *tvb, proto_tree *tree, packet_info *pinfo, gint tvb_next_offset, gint tvb_current_offset);",
          "210: static void",
          "212: static void",
          "213: dissect_megaco_Packagesdescriptor(tvbuff_t *tvb, proto_tree *tree, gint tvb_next_offset, gint tvb_current_offset);",
          "214: static void",
          "",
          "[Removed Lines]",
          "211: dissect_megaco_LocalControldescriptor(tvbuff_t *tvb, proto_tree *tree, packet_info *pinfo, gint tvb_next_offset, gint tvb_current_offset);",
          "",
          "[Added Lines]",
          "223: dissect_megaco_LocalControldescriptor(tvbuff_t *tvb, proto_tree *tree, packet_info *pinfo, gint tvb_next_offset, gint tvb_current_offset, proto_tree *top_tree);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "226: static gboolean keep_persistent_data = FALSE;",
          "",
          "[Removed Lines]",
          "228: static proto_tree *top_tree;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "305:     return(pi);",
          "306: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "319: static proto_item *",
          "320: my_proto_tree_add_uint(proto_tree *tree, int hfindex, tvbuff_t *tvb,",
          "321:              gint start, gint length, guint32 value)",
          "322: {",
          "323:     proto_item *pi;",
          "325:     pi = proto_tree_add_uint(tree, hfindex, tvb, start, 1, value);",
          "327:     proto_item_set_len(pi, length);",
          "329:     if (!global_megaco_dissect_tree) {",
          "330:         PROTO_ITEM_SET_HIDDEN(pi);",
          "331:     }",
          "333:     return(pi);",
          "334: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "313: {",
          "314:     gint        tvb_len, len;",
          "315:     gint        tvb_offset,tvb_current_offset,tvb_previous_offset,tvb_next_offset,tokenlen;",
          "317:     gint        tvb_command_start_offset, tvb_command_end_offset;",
          "318:     gint        tvb_descriptors_start_offset, tvb_descriptors_end_offset;",
          "319:     gint        tvb_transaction_end_offset;",
          "322:     guint8      word[7];",
          "323:     guint8      TermID[30];",
          "",
          "[Removed Lines]",
          "316:     gint        line_start_offset, ver_offset, ver_length, mId_offset, mId_length;",
          "320:     proto_tree  *megaco_tree, *message_tree, *message_body_tree, *megaco_context_tree, *megaco_tree_command_line, *ti, *sub_ti;",
          "",
          "[Added Lines]",
          "345:     gint        context_offset, context_length, save_offset, save_length;",
          "349:     proto_tree  *megaco_tree, *message_body_tree, *megaco_tree_command_line, *ti, *sub_ti;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "326:     guint       token_index=0;",
          "327:     guint32     dword;",
          "328:     guchar      needle;",
          "331:     gcp_msg_t      *msg       = NULL;",
          "332:     gcp_trx_t      *trx       = NULL;",
          "",
          "[Removed Lines]",
          "329:     guint8      first;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "334:     gcp_cmd_t      *cmd       = NULL;",
          "335:     gcp_term_t     *term      = NULL;",
          "336:     gcp_trx_type_t  trx_type  = GCP_TRX_NONE;",
          "338:     guint32         ctx_id    = 0;",
          "339:     gcp_cmd_type_t  cmd_type  = GCP_CMD_NONE;",
          "340:     gcp_wildcard_t  wild_term = GCP_WILDCARD_NONE;",
          "345:     tvb_len                     = tvb_reported_length(tvb);",
          "346:     megaco_tree                 = NULL;",
          "",
          "[Removed Lines]",
          "337:     guint32         trx_id    = 0;",
          "341:     proto_item     *hidden_item;",
          "343:     top_tree=tree;",
          "",
          "[Added Lines]",
          "365:     guint32         trx_id    = 0, pending_id;",
          "369:     gboolean        short_form;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "372:     tvb_offset = megaco_tvb_skip_wsp(tvb, tvb_offset);",
          "",
          "[Removed Lines]",
          "373:     line_start_offset = tvb_offset;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "379:     if(!tvb_get_nstringz0(tvb,tvb_offset,sizeof(word),word)) return;",
          "385:         gint8 ber_class;",
          "386:         gboolean pc;",
          "387:         gint32 tag;",
          "",
          "[Removed Lines]",
          "384:     if (g_ascii_strncasecmp(word, \"MEGACO\", 6) != 0 && tvb_get_guint8(tvb, tvb_offset ) != '!'){",
          "",
          "[Added Lines]",
          "408:     short_form = (tvb_get_guint8(tvb, tvb_offset ) == '!');",
          "410:     if (g_ascii_strncasecmp(word, \"MEGACO\", 6) != 0 && !short_form){",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "420:         return;",
          "421:     }",
          "424:     tvb_previous_offset++;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "449:     my_proto_tree_add_string(megaco_tree, hf_megaco_start, tvb, 0, tvb_previous_offset+1,",
          "450:                     tvb_get_string_enc(wmem_packet_scope(), tvb, 0, tvb_previous_offset, ENC_UTF_8|ENC_NA));",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "431:         tvb_current_offset++;",
          "432:     }",
          "438:     tvb_previous_offset = tvb_current_offset;",
          "439:     tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_previous_offset);",
          "",
          "[Removed Lines]",
          "434:     tokenlen = tvb_current_offset - tvb_previous_offset;",
          "435:     ver_offset = tvb_previous_offset;",
          "436:     ver_length = tokenlen;",
          "",
          "[Added Lines]",
          "463:     my_proto_tree_add_string(megaco_tree, hf_megaco_version, tvb, tvb_previous_offset, tvb_current_offset - tvb_previous_offset,",
          "464:                     tvb_get_string_enc(wmem_packet_scope(), tvb, tvb_previous_offset, tvb_current_offset - tvb_previous_offset, ENC_UTF_8|ENC_NA));",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "463:         return;",
          "464:     }",
          "467:     tvb_next_offset = megaco_tvb_skip_wsp(tvb, tvb_current_offset);",
          "490:     col_clear(pinfo->cinfo, COL_INFO);",
          "492:     do{",
          "493:     tvb_previous_offset = tvb_next_offset;",
          "",
          "[Removed Lines]",
          "466:     tokenlen = tvb_current_offset - tvb_previous_offset;",
          "472:     mId_offset = tvb_previous_offset;",
          "473:     mId_length = tokenlen;",
          "476:     tokenlen = tvb_next_offset - line_start_offset - 1;",
          "477:     ti = proto_tree_add_format_text(megaco_tree, tvb, line_start_offset, tokenlen);",
          "478:     message_tree = proto_item_add_subtree(ti, ett_megaco_message);",
          "479:     if (tree){",
          "480:         if(global_megaco_dissect_tree){",
          "481:             proto_tree_add_item(message_tree, hf_megaco_version,tvb, ver_offset, ver_length, ENC_UTF_8|ENC_NA);",
          "482:             proto_tree_add_item(message_tree, hf_megaco_mId,tvb, mId_offset, mId_length, ENC_UTF_8|ENC_NA);",
          "483:         }else{",
          "484:             hidden_item = proto_tree_add_item(message_tree, hf_megaco_version,tvb, ver_offset, ver_length, ENC_UTF_8|ENC_NA);",
          "485:             PROTO_ITEM_SET_HIDDEN(hidden_item);",
          "486:             hidden_item = proto_tree_add_item(message_tree, hf_megaco_mId,tvb, mId_offset, mId_length, ENC_UTF_8|ENC_NA);",
          "487:             PROTO_ITEM_SET_HIDDEN(hidden_item);",
          "488:         }",
          "489:     }",
          "491:     first = 1;",
          "",
          "[Added Lines]",
          "499:     my_proto_tree_add_string(megaco_tree, hf_megaco_mId, tvb, tvb_previous_offset, tvb_current_offset - tvb_previous_offset,",
          "500:                     tvb_get_string_enc(wmem_packet_scope(), tvb, tvb_previous_offset, tvb_current_offset - tvb_previous_offset, ENC_UTF_8|ENC_NA));",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "559:         case RESPONSEACKTOKEN:",
          "560:             tvb_LBRKT  = tvb_find_guint8(tvb, tvb_offset, tvb_transaction_end_offset, '{');",
          "561:             tvb_offset = tvb_LBRKT;",
          "570:             tvb_previous_offset = megaco_tvb_skip_wsp(tvb, tvb_offset+1);",
          "571:             tvb_current_offset = tvb_find_guint8(tvb, tvb_offset+1, tvb_len, '}');",
          "",
          "[Removed Lines]",
          "563:             message_body_tree = proto_tree_add_subtree(megaco_tree, tvb, tvb_previous_offset, tvb_offset-tvb_previous_offset,",
          "564:                 ett_megaco_message_body, NULL, tvb_format_text(tvb, tvb_previous_offset, tvb_offset-tvb_previous_offset+1));",
          "566:             my_proto_tree_add_string(message_body_tree, hf_megaco_transaction, tvb,",
          "567:                 tvb_previous_offset, tokenlen,",
          "568:                 \"TransactionResponseAck\" );",
          "",
          "[Added Lines]",
          "573:             save_offset = tvb_previous_offset;",
          "574:             save_length = tvb_current_offset-tvb_previous_offset;",
          "576:             my_proto_tree_add_string(megaco_tree, hf_megaco_transaction, tvb,",
          "577:                     save_offset, save_length, \"TransactionResponseAck\" );",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "574:             len = tvb_current_offset - tvb_previous_offset;",
          "590:             return;",
          "592:         case PENDINGTOKEN:",
          "",
          "[Removed Lines]",
          "576:             if (!first) {",
          "577:               col_append_str(pinfo->cinfo, COL_INFO, \" \");",
          "578:             }",
          "579:             col_append_fstr(pinfo->cinfo, COL_INFO, \"%s TransactionResponseAck\",",
          "580:                 tvb_format_text(tvb,tvb_previous_offset,len));",
          "582:             if(tree)",
          "583:                 my_proto_tree_add_string(message_body_tree, hf_megaco_transid, tvb,",
          "584:                 tvb_previous_offset, len,",
          "585:                 tvb_format_text(tvb,tvb_previous_offset,len));",
          "587:                 if(global_megaco_raw_text){",
          "588:                     tvb_raw_text_add(tvb, megaco_tree);",
          "589:                 }",
          "",
          "[Added Lines]",
          "585:             pending_id = (guint)strtoul(tvb_format_text(tvb,tvb_previous_offset,len),NULL,10);",
          "586:             col_append_sep_fstr(pinfo->cinfo, COL_INFO, \" \", \"%d TransactionResponseAck\", pending_id);",
          "588:             my_proto_tree_add_uint(megaco_tree, hf_megaco_transid, tvb, save_offset, save_length, pending_id);",
          "590:             if(global_megaco_raw_text){",
          "591:                 tvb_raw_text_add(tvb, megaco_tree);",
          "592:             }",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "595:             tvb_offset = megaco_tvb_skip_wsp(tvb, tvb_offset);",
          "596:             tvb_LBRKT  = tvb_find_guint8(tvb, tvb_offset, tvb_transaction_end_offset, '{');",
          "597:             tvb_current_offset = tvb_LBRKT;",
          "601:             tvb_current_offset  = megaco_tvb_skip_wsp_return(tvb, tvb_current_offset-1);",
          "602:             len = tvb_current_offset - tvb_offset;",
          "618:             return;",
          "621:         case REPLYTOKEN:",
          "622:             trx_type = GCP_TRX_REPLY;",
          "623:             tvb_LBRKT  = tvb_find_guint8(tvb, tvb_offset, tvb_transaction_end_offset, '{');",
          "632:             tvb_offset  = tvb_find_guint8(tvb, tvb_previous_offset, tvb_transaction_end_offset, '=')+1;",
          "633:             tvb_offset = megaco_tvb_skip_wsp(tvb, tvb_offset);",
          "634:             tvb_current_offset  = megaco_tvb_skip_wsp_return(tvb, tvb_LBRKT-1);",
          "635:             len = tvb_current_offset - tvb_offset;",
          "639:             trx_id = (guint)strtoul(tvb_format_text(tvb,tvb_offset,len),NULL,10);",
          "646:             tvb_offset = megaco_tvb_skip_wsp(tvb, tvb_LBRKT+1);",
          "",
          "[Removed Lines]",
          "598:             message_body_tree = proto_tree_add_subtree(megaco_tree, tvb, tvb_previous_offset, tvb_current_offset-tvb_previous_offset,",
          "599:                 ett_megaco_message_body, NULL, tvb_format_text(tvb, tvb_previous_offset, tvb_current_offset-tvb_previous_offset+1));",
          "603:             if (tree)",
          "604:                 my_proto_tree_add_string(message_body_tree, hf_megaco_transaction, tvb,",
          "605:                     tvb_previous_offset, tokenlen,",
          "606:                     \"Pending\" );",
          "608:             if (!first) {",
          "609:               col_append_str(pinfo->cinfo, COL_INFO, \" \");",
          "610:             }",
          "611:             col_append_fstr(pinfo->cinfo, COL_INFO, \"%s Pending\",",
          "612:                 tvb_format_text(tvb,tvb_offset,len));",
          "614:             if(tree)",
          "615:                 my_proto_tree_add_string(message_body_tree, hf_megaco_transid, tvb,",
          "616:                 tvb_offset, len,",
          "617:                 tvb_format_text(tvb,tvb_offset,len));",
          "624:             message_body_tree = proto_tree_add_subtree(megaco_tree, tvb, tvb_previous_offset, tvb_LBRKT-tvb_previous_offset,",
          "625:                     ett_megaco_message_body, NULL, tvb_format_text(tvb, tvb_previous_offset, tvb_LBRKT-tvb_previous_offset+1));",
          "627:             if (tree)",
          "628:                 my_proto_tree_add_string(message_body_tree, hf_megaco_transaction, tvb,",
          "629:                     tvb_previous_offset, tokenlen,",
          "630:                     \"Reply\" );",
          "637:             col_add_fstr(pinfo->cinfo, COL_INFO, \"%s Reply  \",",
          "638:                   tvb_format_text(tvb,tvb_offset,len));",
          "641:             if(tree)",
          "642:                 my_proto_tree_add_string(message_body_tree, hf_megaco_transid, tvb,",
          "643:                     tvb_offset, len, tvb_format_text(tvb,tvb_offset,len));",
          "",
          "[Added Lines]",
          "601:             save_offset = tvb_previous_offset;",
          "602:             save_length = tvb_current_offset-tvb_previous_offset;",
          "604:             my_proto_tree_add_string(megaco_tree, hf_megaco_transaction, tvb,",
          "605:                     save_offset, save_length, \"Reply\" );",
          "610:             pending_id = (guint)strtoul(tvb_format_text(tvb,tvb_offset,len),NULL,10);",
          "611:             col_append_sep_fstr(pinfo->cinfo, COL_INFO, \" \", \"%d Pending\", pending_id);",
          "613:             my_proto_tree_add_uint(megaco_tree, hf_megaco_transid, tvb, save_offset, save_length, pending_id);",
          "620:             save_offset = tvb_previous_offset;",
          "621:             save_length = tvb_LBRKT-tvb_previous_offset;",
          "623:             my_proto_tree_add_string(megaco_tree, hf_megaco_transaction, tvb,",
          "624:                     save_offset, save_length, \"Reply\" );",
          "632:             col_add_fstr(pinfo->cinfo, COL_INFO, \"%d Reply  \", trx_id);",
          "634:             my_proto_tree_add_uint(megaco_tree, hf_megaco_transid, tvb, save_offset, save_length, trx_id);",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "655:         case TRANSTOKEN:",
          "657:             trx_type = GCP_TRX_REQUEST;",
          "665:             tvb_offset  = tvb_find_guint8(tvb, tvb_offset, tvb_transaction_end_offset, '=')+1;",
          "666:             tvb_offset = megaco_tvb_skip_wsp(tvb, tvb_offset);",
          "667:             tvb_current_offset  = megaco_tvb_skip_wsp_return(tvb, tvb_current_offset-1);",
          "668:             len = tvb_current_offset - tvb_offset;",
          "674:             trx_id = (guint)strtoul(tvb_format_text(tvb,tvb_offset,len),NULL,10);",
          "679:             tvb_previous_offset = megaco_tvb_skip_wsp(tvb, tvb_LBRKT+1);",
          "681:             break;",
          "682:         default :",
          "685:                     \"Sorry, can't understand errorDescriptor / transactionList = %s, can't parse it pos %u\",",
          "686:                         tvb_format_text(tvb,tvb_previous_offset,2),tvb_previous_offset);",
          "687:             return;",
          "",
          "[Removed Lines]",
          "658:             message_body_tree = proto_tree_add_subtree(megaco_tree, tvb, tvb_previous_offset, tvb_current_offset-tvb_previous_offset,",
          "659:                     ett_megaco_message_body, NULL, tvb_format_text(tvb, tvb_previous_offset, tvb_current_offset-tvb_previous_offset+1));",
          "661:             if(tree)",
          "662:                 my_proto_tree_add_string(message_body_tree, hf_megaco_transaction, tvb,",
          "663:                     tvb_previous_offset, tokenlen,",
          "664:                     \"Request\" );",
          "669:             if (!first) {",
          "670:               col_append_str(pinfo->cinfo, COL_INFO, \" \");",
          "671:             }",
          "672:             col_append_fstr(pinfo->cinfo, COL_INFO, \"%s Request\",",
          "673:                   tvb_format_text(tvb,tvb_offset,len));",
          "675:             if(tree)",
          "676:                 my_proto_tree_add_string(message_body_tree, hf_megaco_transid, tvb, tvb_offset,len,",
          "677:                     tvb_format_text(tvb,tvb_offset,len));",
          "683:             ti = proto_tree_add_item(tree,proto_megaco,tvb, 0, -1, ENC_NA);",
          "684:             expert_add_info_format(pinfo, ti, &ei_megaco_error_descriptor_transaction_list,",
          "",
          "[Added Lines]",
          "649:             save_offset = tvb_previous_offset;",
          "650:             save_length = tvb_current_offset-tvb_previous_offset;",
          "651:             my_proto_tree_add_string(megaco_tree, hf_megaco_transaction, tvb,",
          "652:                     save_offset, save_length, \"Request\" );",
          "660:             col_append_sep_fstr(pinfo->cinfo, COL_INFO, \" \", \"%d Request\", trx_id);",
          "662:             my_proto_tree_add_uint(megaco_tree, hf_megaco_transid, tvb, save_offset, save_length, trx_id);",
          "668:             proto_tree_add_expert_format(tree, pinfo, &ei_megaco_error_descriptor_transaction_list, tvb, 0, -1,",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "710:         tvb_next_offset = tvb_find_guint8(tvb, tvb_previous_offset, tvb_transaction_end_offset, '{');",
          "716:         tvb_previous_offset = megaco_tvb_skip_wsp(tvb, tvb_previous_offset);",
          "717:         if (tvb_current_offset >= tvb_next_offset) {",
          "719:             return;",
          "720:         }",
          "721:         tvb_current_offset = tvb_next_offset;",
          "",
          "[Removed Lines]",
          "711:         ti = proto_tree_add_format_text(megaco_tree, tvb, tvb_previous_offset, tvb_next_offset-tvb_previous_offset+1);",
          "712:         megaco_context_tree = proto_item_add_subtree(ti, ett_megaco_context);",
          "714:         tvb_previous_offset = tvb_find_guint8(tvb, tvb_current_offset,",
          "715:             tvb_transaction_end_offset, '=')+1;",
          "718:             expert_add_info_format(pinfo, ti, &ei_megaco_parse_error, \"Parse error: Invalid offset\");",
          "",
          "[Added Lines]",
          "695:         context_offset = tvb_previous_offset;",
          "696:         context_length = tvb_next_offset-tvb_previous_offset+1;",
          "698:         tvb_previous_offset = tvb_find_guint8(tvb, tvb_current_offset, tvb_transaction_end_offset, '=')+1;",
          "702:             proto_tree_add_expert_format(megaco_tree, pinfo, &ei_megaco_parse_error,",
          "703:                                     tvb, context_offset, context_length, \"Parse error: Invalid offset\");",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "728:             tokenlen--;",
          "729:         }",
          "732:         switch ( tempchar ){",
          "733:         case '$':",
          "734:             ctx_id = CHOOSE_CONTEXT;",
          "739:             break;",
          "740:         case '*':",
          "741:             ctx_id = ALL_CONTEXTS;",
          "746:             break;",
          "747:         case '-':",
          "748:             ctx_id = NULL_CONTEXT;",
          "751:             break;",
          "752:         default:",
          "757:             ctx_id = (guint)strtoul(tvb_format_text(tvb, tvb_previous_offset, tokenlen),NULL,10);",
          "760:         }",
          "762:         ctx = gcp_ctx(msg,trx,ctx_id,keep_persistent_data);",
          "",
          "[Removed Lines]",
          "735:             my_proto_tree_add_string(megaco_context_tree, hf_megaco_Context, tvb,",
          "736:                 tvb_previous_offset, 1,",
          "737:                 \"Choose one\");",
          "738:             col_append_str(pinfo->cinfo, COL_INFO, \" |=Choose one\");",
          "742:             my_proto_tree_add_string(megaco_context_tree, hf_megaco_Context, tvb,",
          "743:                 tvb_previous_offset, 1,",
          "744:                 \"All\");",
          "745:             col_append_str(pinfo->cinfo, COL_INFO, \" |=All\");",
          "749:             proto_tree_add_text(megaco_context_tree, tvb, tvb_previous_offset, tokenlen, \"Context: NULL\" );",
          "750:             col_append_str(pinfo->cinfo, COL_INFO, \" |=NULL\");",
          "753:             my_proto_tree_add_string(megaco_context_tree, hf_megaco_Context, tvb,",
          "754:                 tvb_previous_offset, tokenlen,",
          "755:                 tvb_format_text(tvb, tvb_previous_offset,",
          "756:                 tokenlen));",
          "759:             col_append_fstr(pinfo->cinfo, COL_INFO, \" |=%s\",tvb_format_text(tvb, tvb_previous_offset,tokenlen));",
          "",
          "[Added Lines]",
          "730:         my_proto_tree_add_uint(megaco_tree, hf_megaco_Context, tvb, context_offset, context_length, ctx_id);",
          "731:         col_append_fstr(pinfo->cinfo, COL_INFO, \" |=%s\", val_to_str(ctx_id, megaco_context_vals, \"%d\"));",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "864:                     goto nextcontext;",
          "865:                 }",
          "871:                 sub_ti = proto_tree_add_item(megaco_tree,hf_megaco_command_line,tvb,tvb_command_start_offset,tokenlen, ENC_UTF_8|ENC_NA);",
          "872:                 megaco_tree_command_line = proto_item_add_subtree(sub_ti, ett_megaco_command_line);",
          "875:                 tvb_next_offset = tvb_command_start_offset + tokenlen;",
          "",
          "[Removed Lines]",
          "867:                 sub_ti = proto_tree_add_format_text(megaco_tree, tvb, tvb_command_start_offset, len+1);",
          "868:                 megaco_tree_command_line = proto_item_add_subtree(sub_ti, ett_megaco_command_line);",
          "",
          "[Added Lines]",
          "838:                 megaco_tree_command_line = proto_tree_add_subtree(megaco_tree, tvb, tvb_command_start_offset, len+1, ett_megaco_command_line, &sub_ti, \"Command: \");",
          "844:                 if (!global_megaco_dissect_tree) {",
          "845:                     PROTO_ITEM_SET_HIDDEN(sub_ti);",
          "846:                 }",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "918:                 }",
          "922:                 if ( tvb_get_guint8(tvb, tvb_command_start_offset ) == 'O'){",
          "925:                     tvb_command_start_offset = tvb_command_start_offset+2;",
          "927:                 }",
          "931:                 if ( tvb_get_guint8(tvb, tvb_command_start_offset ) == 'W'){",
          "934:                     tvb_command_start_offset = tvb_command_start_offset+2;",
          "936:                 }",
          "940:                 tvb_offset  = tvb_find_guint8(tvb, tvb_command_start_offset,",
          "941:                     tvb_transaction_end_offset, '=');",
          "942:                 if (tvb_offset == -1 ) {",
          "944:                     return;",
          "945:                 }",
          "946:                 tvb_offset = megaco_tvb_skip_wsp_return(tvb, tvb_offset -1);",
          "",
          "[Removed Lines]",
          "924:                     proto_tree_add_text(megaco_tree_command_line, tvb, tvb_command_start_offset, 2, \"O- indicates an optional command\" );",
          "933:                     proto_tree_add_text(megaco_tree_command_line, tvb, tvb_command_start_offset, 2, \"W- indicates a wildcarded response to a command\" );",
          "943:                     expert_add_info_format(pinfo, sub_ti, &ei_megaco_parse_error, \"Parse error: Missing \\\"=\\\"\");",
          "",
          "[Added Lines]",
          "896:                     proto_tree_add_item(megaco_tree_command_line, hf_megaco_command_optional, tvb, tvb_command_start_offset, 2, ENC_NA);",
          "904:                     proto_tree_add_item(megaco_tree_command_line, hf_megaco_wildcard_response, tvb, tvb_command_start_offset, 2, ENC_NA );",
          "911:                     proto_tree_add_expert_format(megaco_tree, pinfo, &ei_megaco_parse_error, tvb, tvb_command_start_offset, len+1, \"Parse error: Missing \\\"=\\\"\");",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "951:                     tempchar = tempchar - 0x20;",
          "953:                 if ( tempchar != 'E' ){",
          "958:                         switch ( tempchar ){",
          "",
          "[Removed Lines]",
          "956:                     if ( tvb_get_guint8(tvb, 0 ) == '!'){",
          "",
          "[Added Lines]",
          "923:                     if (short_form){",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "972:                                     default: cmd_type = GCP_CMD_NONE; break;",
          "973:                                 }",
          "978:                                 col_append_str(pinfo->cinfo, COL_INFO, \" AuditValue\");",
          "979:                                 break;",
          "981:                             case 'C':",
          "",
          "[Removed Lines]",
          "975:                                 my_proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "976:                                     tvb_command_start_offset, tokenlen,",
          "977:                                     \"AuditValue\");",
          "",
          "[Added Lines]",
          "942:                                 proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "943:                                     tvb_command_start_offset, tokenlen, \"AuditValue\");",
          "945:                                 proto_item_append_text(sub_ti, \"AuditValue\");",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "984:                                     case GCP_TRX_REPLY: cmd_type = GCP_CMD_AUDITCAP_REPLY; break;",
          "985:                                     default: cmd_type = GCP_CMD_NONE; break;",
          "986:                                 }",
          "990:                                 col_append_str(pinfo->cinfo, COL_INFO, \" AuditCapability\");",
          "991:                                 break;",
          "993:                             default:",
          "",
          "[Removed Lines]",
          "987:                                 my_proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "988:                                     tvb_command_start_offset, tokenlen,",
          "989:                                     \"AuditCapability\");",
          "",
          "[Added Lines]",
          "954:                                 proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "955:                                     tvb_command_start_offset, tokenlen, \"AuditCapability\");",
          "957:                                 proto_item_append_text(sub_ti, \"AuditCapability\");",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "997:                                     default: cmd_type = GCP_CMD_NONE; break;",
          "998:                                 }",
          "1003:                                 col_append_str(pinfo->cinfo, COL_INFO, \" Add\");",
          "1004:                                 break;",
          "1005:                             }",
          "1006:                             break;",
          "",
          "[Removed Lines]",
          "1000:                                 my_proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "1001:                                     tvb_command_start_offset, tokenlen,",
          "1002:                                     \"Add\");",
          "",
          "[Added Lines]",
          "967:                                 proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "968:                                     tvb_command_start_offset, tokenlen, \"Add\");",
          "970:                                 proto_item_append_text(sub_ti, \"Add\");",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "1010:                             tempchar = tvb_get_guint8(tvb, tvb_command_start_offset+1);",
          "1011:                             if(tempchar == 'E'){",
          "1015:                             }",
          "1016:                             cmd_type = GCP_CMD_NONE;",
          "1017:                             break;",
          "",
          "[Removed Lines]",
          "1012:                                 my_proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "1013:                                     tvb_command_start_offset, tokenlen,",
          "1014:                                     \"IEPSCall\");",
          "",
          "[Added Lines]",
          "979:                                 proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "980:                                     tvb_command_start_offset, tokenlen, \"IEPSCall\");",
          "981:                                 col_append_str(pinfo->cinfo, COL_INFO, \" IEPSCall\");",
          "982:                                 proto_item_append_text(sub_ti, \"IEPSCall\");",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1022:                                 default: cmd_type = GCP_CMD_NONE; break;",
          "1023:                             }",
          "1029:                             break;",
          "1031:                         case 'M':",
          "",
          "[Removed Lines]",
          "1025:                             my_proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "1026:                                 tvb_command_start_offset, tokenlen,",
          "1027:                                 \"Notify\");",
          "1028:                                 col_append_str(pinfo->cinfo, COL_INFO, \" Notify\");",
          "",
          "[Added Lines]",
          "993:                             proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "994:                                 tvb_command_start_offset, tokenlen, \"Notify\");",
          "995:                             col_append_str(pinfo->cinfo, COL_INFO, \" Notify\");",
          "996:                             proto_item_append_text(sub_ti, \"Notify\");",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1042:                                     default: cmd_type = GCP_CMD_NONE; break;",
          "1043:                                 }",
          "1048:                                 col_append_str(pinfo->cinfo, COL_INFO, \" Modify\");",
          "1049:                                 break;",
          "1051:                             case 'V':",
          "",
          "[Removed Lines]",
          "1045:                                 my_proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "1046:                                     tvb_command_start_offset, tokenlen,",
          "1047:                                     \"Modify\");",
          "",
          "[Added Lines]",
          "1013:                                 proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "1014:                                     tvb_command_start_offset, tokenlen, \"Modify\");",
          "1016:                                 proto_item_append_text(sub_ti, \"Modify\");",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1054:                                     case GCP_TRX_REPLY: cmd_type = GCP_CMD_MOVE_REPLY; break;",
          "1055:                                     default: cmd_type = GCP_CMD_NONE; break;",
          "1056:                                 }",
          "1060:                                 col_append_str(pinfo->cinfo, COL_INFO, \" Move\");",
          "1061:                                 break;",
          "1062:                             }",
          "1063:                             break;",
          "",
          "[Removed Lines]",
          "1057:                                 my_proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "1058:                                     tvb_command_start_offset, tokenlen,",
          "1059:                                     \"Move\");",
          "",
          "[Added Lines]",
          "1025:                                 proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "1026:                                     tvb_command_start_offset, tokenlen, \"Move\");",
          "1028:                                 proto_item_append_text(sub_ti, \"Move\");",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "1077:                             switch ( tempchar ){",
          "1078:                             case 'G':",
          "1082:                                 break;",
          "1083:                             case 'N':",
          "1087:                                 break;",
          "1088:                             case 'R':",
          "1092:                                 break;",
          "1093:                             case 'F':",
          "1097:                                 break;",
          "1098:                             }",
          "1099:                             break;",
          "",
          "[Removed Lines]",
          "1079:                                 my_proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "1080:                                     tvb_command_start_offset, tokenlen,",
          "1081:                                     \"Packages\");",
          "1084:                                 my_proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "1085:                                     tvb_command_start_offset, tokenlen,",
          "1086:                                     \"Pending\");",
          "1089:                                 my_proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "1090:                                     tvb_command_start_offset, tokenlen,",
          "1091:                                     \"Priority\");",
          "1094:                                 my_proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "1095:                                     tvb_command_start_offset, tokenlen,",
          "1096:                                     \"Profile\");",
          "",
          "[Added Lines]",
          "1047:                                 proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "1048:                                     tvb_command_start_offset, tokenlen, \"Packages\");",
          "1049:                                 col_append_str(pinfo->cinfo, COL_INFO, \" Packages\");",
          "1050:                                 proto_item_append_text(sub_ti, \"Packages\");",
          "1053:                                 proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "1054:                                     tvb_command_start_offset, tokenlen, \"Pending\");",
          "1055:                                 col_append_str(pinfo->cinfo, COL_INFO, \" Pending\");",
          "1056:                                 proto_item_append_text(sub_ti, \"Pending\");",
          "1059:                                 proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "1060:                                     tvb_command_start_offset, tokenlen, \"Priority\");",
          "1061:                                 col_append_str(pinfo->cinfo, COL_INFO, \" Priority\");",
          "1062:                                 proto_item_append_text(sub_ti, \"Priority\");",
          "1065:                                 proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "1066:                                     tvb_command_start_offset, tokenlen, \"Profile\");",
          "1067:                                 col_append_str(pinfo->cinfo, COL_INFO, \" Profile\");",
          "1068:                                 proto_item_append_text(sub_ti, \"Profile\");",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "1111:                                     case GCP_TRX_REPLY: cmd_type = GCP_CMD_SVCCHG_REPLY; break;",
          "1112:                                     default: cmd_type = GCP_CMD_NONE; break;",
          "1113:                                 }",
          "1117:                                 break;",
          "1119:                             default:",
          "",
          "[Removed Lines]",
          "1114:                                 my_proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "1115:                                     tvb_command_start_offset, tokenlen,",
          "1116:                                     \"ServiceChange\");",
          "",
          "[Added Lines]",
          "1086:                                 proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "1087:                                     tvb_command_start_offset, tokenlen, \"ServiceChange\");",
          "1088:                                 col_append_str(pinfo->cinfo, COL_INFO, \" ServiceChange\");",
          "1089:                                 proto_item_append_text(sub_ti, \"ServiceChange\");",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "1122:                                     case GCP_TRX_REPLY: cmd_type = GCP_CMD_SUB_REPLY; break;",
          "1123:                                     default: cmd_type = GCP_CMD_NONE; break;",
          "1124:                                 }",
          "1128:                                 col_append_str(pinfo->cinfo, COL_INFO, \" Subtract\");",
          "1129:                                 break;",
          "1130:                             }",
          "1131:                             break;",
          "1133:                         default:",
          "1134:                         {",
          "1137:                             tokenlen =  (tvb_RBRKT+1) - tvb_previous_offset;",
          "1142:                             return;",
          "1143:                         }",
          "1144:                         }",
          "",
          "[Removed Lines]",
          "1125:                                 my_proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "1126:                                     tvb_command_start_offset, tokenlen,",
          "1127:                                     \"Subtract\");",
          "1135:                             proto_item *item;",
          "1138:                             item = proto_tree_add_string(megaco_tree, hf_megaco_error_Frame, tvb,",
          "1139:                                                          tvb_previous_offset, tokenlen,",
          "1140:                                                          \"No Command detectable !\");",
          "1141:                             proto_item_append_text(item,\"[ tempchar 0x%x ]\", tempchar);",
          "",
          "[Added Lines]",
          "1098:                                 proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "1099:                                     tvb_command_start_offset, tokenlen, \"Subtract\");",
          "1101:                                 proto_item_append_text(sub_ti, \"Subtract\");",
          "1109:                             proto_item_append_text(sub_ti, \"<None> 0x%02x\", tempchar);",
          "1110:                             expert_add_info(pinfo, sub_ti, &ei_megaco_no_command);",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "1209:                         }",
          "1217:                     }",
          "1219:                     if (cmd_type == GCP_CMD_NONE && trx_type == GCP_TRX_REPLY) {",
          "",
          "[Removed Lines]",
          "1212:                         my_proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "1213:                             tvb_command_start_offset, tokenlen,",
          "1214:                             tvb_format_text(tvb, tvb_command_start_offset,",
          "1215:                             tokenlen));",
          "1216:                             col_append_fstr(pinfo->cinfo, COL_INFO, \" %s\",command);",
          "",
          "[Added Lines]",
          "1181:                         proto_tree_add_string(megaco_tree_command_line, hf_megaco_command, tvb,",
          "1182:                             tvb_command_start_offset, tokenlen, command);",
          "1183:                         col_append_fstr(pinfo->cinfo, COL_INFO, \" %s\", command);",
          "1184:                         proto_item_append_text(sub_ti, \" %s\", command);",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "1262:                         gcp_cmd_add_term(msg, trx, cmd, term, wild_term, keep_persistent_data);",
          "1268:                         break;",
          "1270:                     case '*':",
          "",
          "[Removed Lines]",
          "1265:                         my_proto_tree_add_string(megaco_tree_command_line, hf_megaco_termid, tvb,",
          "1266:                             tvb_offset, tokenlen,",
          "1267:                             TermID);",
          "",
          "[Added Lines]",
          "1233:                         proto_tree_add_string(megaco_tree_command_line, hf_megaco_termid, tvb,",
          "1234:                             tvb_offset, tokenlen, TermID);",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "1275:                         gcp_cmd_add_term(msg, trx, cmd, term, wild_term, keep_persistent_data);",
          "1278:                             tvb_offset, tokenlen,",
          "1279:                             \"WildCard all\");",
          "1280:                             col_append_str(pinfo->cinfo, COL_INFO, \"=*\");",
          "",
          "[Removed Lines]",
          "1277:                         my_proto_tree_add_string(megaco_tree_command_line, hf_megaco_termid, tvb,",
          "",
          "[Added Lines]",
          "1244:                         proto_tree_add_string(megaco_tree_command_line, hf_megaco_termid, tvb,",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "1289:                         gcp_cmd_add_term(msg, trx, cmd, term, wild_term, keep_persistent_data);",
          "1292:                             tvb_offset, tokenlen,",
          "1293:                             \"WildCard any\");",
          "1294:                             col_append_str(pinfo->cinfo, COL_INFO, \"=$\");",
          "",
          "[Removed Lines]",
          "1291:                         my_proto_tree_add_string(megaco_tree_command_line, hf_megaco_termid, tvb,",
          "",
          "[Added Lines]",
          "1258:                         proto_tree_add_string(megaco_tree_command_line, hf_megaco_termid, tvb,",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "1299:                     default:",
          "1302:                             tvb_offset, tokenlen,",
          "1303:                             tvb_format_text(tvb, tvb_offset,",
          "1304:                             tokenlen));",
          "",
          "[Removed Lines]",
          "1301:                         my_proto_tree_add_string(megaco_tree_command_line, hf_megaco_termid, tvb,",
          "",
          "[Added Lines]",
          "1268:                         proto_tree_add_string(megaco_tree_command_line, hf_megaco_termid, tvb,",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "1337:                 tempchar = tvb_get_guint8(tvb, tvb_command_start_offset);",
          "1339:                 if ( tempchar == 'E'|| tempchar == 'e'){",
          "1341:                 }",
          "1342:                 else {",
          "1344:                 }",
          "1345:             }",
          "1346:             RBRKT_counter = 0;",
          "",
          "[Removed Lines]",
          "1340:                     dissect_megaco_descriptors(tvb, megaco_tree, pinfo, tvb_command_start_offset-1,tvb_descriptors_end_offset);",
          "1343:                     dissect_megaco_descriptors(tvb, megaco_tree, pinfo, tvb_descriptors_start_offset,tvb_descriptors_end_offset);",
          "",
          "[Added Lines]",
          "1307:                     dissect_megaco_descriptors(tvb, megaco_tree_command_line, pinfo, tvb_command_start_offset-1,tvb_descriptors_end_offset, tree);",
          "1310:                     dissect_megaco_descriptors(tvb, megaco_tree_command_line, pinfo, tvb_descriptors_start_offset,tvb_descriptors_end_offset, tree);",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "1359:         }",
          "1361:         tvb_next_offset = tvb_transaction_end_offset;",
          "1364:     }",
          "1365:     while( tvb_transaction_end_offset < tvb_len - 2);",
          "",
          "[Removed Lines]",
          "1363:     first = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "1418:     return -1;",
          "1419: }",
          "1559: static void",
          "1560: dissect_megaco_modemdescriptor(tvbuff_t *tvb, proto_tree *megaco_tree_command_line,  gint tvb_RBRKT, gint tvb_previous_offset)",
          "1561: {",
          "",
          "[Removed Lines]",
          "1421: static void",
          "1422: dissect_megaco_descriptors(tvbuff_t *tvb, proto_tree *megaco_tree_command_line, packet_info *pinfo, gint tvb_descriptors_start_offset, gint tvb_descriptors_end_offset)",
          "1423: {",
          "1424:     gint        tvb_len, token_index, tvb_offset, temp_offset;",
          "1425:     gint        tvb_current_offset,tvb_previous_offset,tokenlen;",
          "1426:     gint        tvb_RBRKT, tvb_LBRKT;",
          "1428:     tvb_len     = tvb_reported_length(tvb);",
          "1431:     tvb_LBRKT = megaco_tvb_skip_wsp(tvb, tvb_descriptors_start_offset +1);",
          "1433:     tvb_previous_offset = tvb_LBRKT;",
          "1434:     tvb_RBRKT = tvb_descriptors_start_offset;",
          "1437:     do {",
          "1439:         tvb_RBRKT = tvb_find_guint8(tvb, tvb_RBRKT+1,",
          "1440:             tvb_len, '}');",
          "1441:         tvb_LBRKT = tvb_find_guint8(tvb, tvb_LBRKT,",
          "1442:             tvb_len, '{');",
          "1444:         tvb_current_offset  = tvb_find_guint8(tvb, tvb_previous_offset,",
          "1445:             tvb_len, ',');",
          "1447:         if (tvb_current_offset == -1 || tvb_current_offset > tvb_descriptors_end_offset){",
          "1448:             tvb_current_offset = tvb_descriptors_end_offset;",
          "1450:         }",
          "1451:         if (tvb_current_offset <= tvb_previous_offset) {",
          "1452:             expert_add_info_format(pinfo, megaco_tree_command_line, &ei_megaco_parse_error, \"Parse error: Invalid offset\");",
          "1453:             return;",
          "1454:         }",
          "1460:         if ( tvb_LBRKT > tvb_current_offset || tvb_LBRKT == -1 ){",
          "1462:             if ( tvb_current_offset > tvb_RBRKT ){",
          "1463:                 tvb_current_offset = tvb_RBRKT;",
          "1464:             }",
          "1466:             tvb_RBRKT = megaco_tvb_skip_wsp_return(tvb, tvb_current_offset-1)-1;",
          "1467:         }",
          "1470:         if ( (tvb_current_offset > tvb_LBRKT && tvb_LBRKT != -1)){",
          "1472:             while ( tvb_LBRKT != -1 && tvb_RBRKT > tvb_LBRKT ){",
          "1475:                 tvb_LBRKT  = tvb_find_guint8(tvb, tvb_LBRKT+1,",
          "1476:                     tvb_len, '{');",
          "1477:                 if ( tvb_LBRKT < tvb_RBRKT && tvb_LBRKT != -1)",
          "1478:                     tvb_RBRKT  = tvb_find_guint8(tvb, tvb_RBRKT+1,tvb_len, '}');",
          "1479:             }",
          "1481:         }",
          "1484:         for (tvb_offset=tvb_previous_offset; tvb_offset < tvb_descriptors_end_offset -1; tvb_offset++){",
          "1485:             if (!g_ascii_isalpha(tvb_get_guint8(tvb, tvb_offset ))){",
          "1486:                 break;",
          "1487:             }",
          "1488:         }",
          "1489:         tokenlen =  tvb_offset - tvb_previous_offset;",
          "1490:         token_index = find_megaco_descriptors_names(tvb, tvb_previous_offset, tokenlen);",
          "1491:         if (tvb_RBRKT > tvb_descriptors_end_offset) tvb_RBRKT = tvb_descriptors_end_offset;",
          "1492:         switch ( token_index ){",
          "1493:         case MEGACO_MODEM_TOKEN:",
          "1494:             dissect_megaco_modemdescriptor(tvb, megaco_tree_command_line, tvb_RBRKT, tvb_previous_offset);",
          "1495:             break;",
          "1496:         case MEGACO_MUX_TOKEN:",
          "1497:             dissect_megaco_multiplexdescriptor(tvb, megaco_tree_command_line, tvb_RBRKT, tvb_previous_offset);",
          "1498:             break;",
          "1499:         case MEGACO_MEDIA_TOKEN:",
          "1501:             temp_offset = tvb_find_guint8(tvb, tvb_previous_offset,tvb_descriptors_end_offset, '{');",
          "1502:             tokenlen =  temp_offset - tvb_previous_offset+1;",
          "1503:             proto_tree_add_format_text(megaco_tree_command_line, tvb, tvb_previous_offset, tokenlen);",
          "1505:             tvb_previous_offset = megaco_tvb_skip_wsp(tvb, temp_offset +1);",
          "1506:             dissect_megaco_mediadescriptor(tvb, megaco_tree_command_line, pinfo, tvb_RBRKT, tvb_previous_offset);",
          "1507:             break;",
          "1508:         case MEGACO_SIGNALS_TOKEN:",
          "1509:             dissect_megaco_signaldescriptor(tvb, pinfo, megaco_tree_command_line, tvb_RBRKT, tvb_previous_offset);",
          "1510:             break;",
          "1511:         case MEGACO_SERVICES_TOKEN:",
          "1512:             dissect_megaco_servicechangedescriptor(tvb, megaco_tree_command_line, tvb_RBRKT, tvb_previous_offset);",
          "1513:             break;",
          "1514:         case MEGACO_STATS_TOKEN:",
          "1515:             dissect_megaco_statisticsdescriptor(tvb, megaco_tree_command_line, tvb_RBRKT, tvb_previous_offset);",
          "1516:             break;",
          "1517:         case MEGACO_ERROR_TOKEN:",
          "1518:             dissect_megaco_errordescriptor(tvb, megaco_tree_command_line, tvb_RBRKT, tvb_previous_offset);",
          "1519:             break;",
          "1520:         case MEGACO_EVENTS_TOKEN:",
          "1521:             dissect_megaco_eventsdescriptor(tvb, pinfo, megaco_tree_command_line, tvb_RBRKT, tvb_previous_offset);",
          "1522:             break;",
          "1523:         case MEGACO_AUDIT_TOKEN:",
          "1524:             dissect_megaco_auditdescriptor(tvb, megaco_tree_command_line, pinfo, tvb_RBRKT, tvb_previous_offset);",
          "1525:             break;",
          "1526:         case MEGACO_DIGITMAP_TOKEN:",
          "1527:             dissect_megaco_digitmapdescriptor(tvb, megaco_tree_command_line, tvb_RBRKT, tvb_previous_offset);",
          "1528:             break;",
          "1529:         case MEGACO_OE_TOKEN:",
          "1531:             dissect_megaco_observedeventsdescriptor(tvb, pinfo, megaco_tree_command_line, tvb_RBRKT, tvb_previous_offset);",
          "1532:             break;",
          "1533:         case MEGACO_TOPOLOGY_TOKEN:",
          "1534:             dissect_megaco_topologydescriptor(tvb, megaco_tree_command_line, tvb_RBRKT, tvb_previous_offset);",
          "1535:             break;",
          "1536:         case MEGACO_PACKAGES_TOKEN:",
          "1537:             dissect_megaco_Packagesdescriptor(tvb, megaco_tree_command_line, tvb_RBRKT, tvb_previous_offset);",
          "1538:             break;",
          "1539:         default:",
          "1540:             tokenlen =  (tvb_RBRKT+1) - tvb_previous_offset;",
          "1541:             proto_tree_add_string(megaco_tree_command_line, hf_megaco_error_Frame, tvb,",
          "1542:                 tvb_previous_offset, tokenlen,",
          "1543:                 \"No Descriptor detectable !\");",
          "1544:             break;",
          "1545:         }",
          "1547:         tvb_current_offset      = tvb_find_guint8(tvb, tvb_RBRKT, tvb_len, ',');",
          "1548:         if (tvb_current_offset == -1 || tvb_descriptors_end_offset < tvb_current_offset){",
          "1549:             tvb_current_offset = tvb_descriptors_end_offset;",
          "1550:         }",
          "1551:         tvb_previous_offset = megaco_tvb_skip_wsp(tvb, tvb_current_offset+1);",
          "1552:         tvb_LBRKT = tvb_previous_offset;",
          "1553:         tvb_RBRKT = tvb_previous_offset;",
          "1555:     } while ( tvb_current_offset < tvb_descriptors_end_offset );",
          "1557: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "1642: }",
          "1644: static void",
          "1646: {",
          "1648:     gint    tokenlen, tvb_LBRKT, tvb_RBRKT;",
          "1650:     gint    mediaParm;",
          "1659:     while ( tvb_previous_offset < tvb_last_RBRKT){",
          "1661:         tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_previous_offset);",
          "",
          "[Removed Lines]",
          "1645: dissect_megaco_mediadescriptor(tvbuff_t *tvb, proto_tree *megaco_tree_command_line,packet_info *pinfo,  gint tvb_last_RBRKT, gint tvb_previous_offset)",
          "1649:     gint    tvb_next_offset, tvb_current_offset, tvb_offset,  equal_offset;",
          "1653:     proto_tree  *megaco_mediadescriptor_tree, *megaco_mediadescriptor_ti;",
          "1656:     megaco_mediadescriptor_tree = proto_tree_add_subtree(megaco_tree_command_line,tvb,tvb_previous_offset,tokenlen,",
          "1657:                                                          ett_megaco_mediadescriptor, NULL, \"Media Descriptor\");",
          "",
          "[Added Lines]",
          "1472: dissect_megaco_mediadescriptor(tvbuff_t *tvb, proto_tree *megaco_tree_command_line,packet_info *pinfo,  gint tvb_last_RBRKT,",
          "1473:                                 gint tvb_previous_offset, gint start_offset, proto_tree *top_tree)",
          "1477:     gint    tvb_next_offset, tvb_current_offset, tvb_offset, equal_offset, save_offset;",
          "1479:     guint   streamId;",
          "1481:     proto_tree  *megaco_mediadescriptor_tree;",
          "1482:     proto_item  *megaco_mediadescriptor_ti, *ti;",
          "1484:     megaco_mediadescriptor_ti = proto_tree_add_item(megaco_tree_command_line, hf_megaco_media_descriptor, tvb, start_offset, 1, ENC_NA);",
          "1485:     megaco_mediadescriptor_tree = proto_item_add_subtree(megaco_mediadescriptor_ti, ett_megaco_mediadescriptor);",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "1675:         tvb_RBRKT = tvb_next_offset;",
          "1677:         tokenlen = tvb_LBRKT - tvb_current_offset +1;",
          "1681:         switch ( mediaParm ){",
          "1682:         case MEGACO_LOCAL_TOKEN:",
          "1683:             tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_LBRKT+1);",
          "1685:                 tvb_RBRKT, tvb_current_offset);",
          "1686:             tvb_current_offset = tvb_RBRKT;",
          "1687:             break;",
          "1688:         case MEGACO_REMOTE_TOKEN:",
          "1689:             tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_LBRKT+1);",
          "1691:                 tvb_RBRKT, tvb_current_offset);",
          "1692:             tvb_current_offset = tvb_RBRKT;",
          "1693:             break;",
          "1694:         case MEGACO_LOCAL_CONTROL_TOKEN:",
          "1695:             tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_LBRKT+1);",
          "1698:             tvb_current_offset = tvb_RBRKT;",
          "1699:             break;",
          "1700:         case MEGACO_STREAM_TOKEN:",
          "1703:             equal_offset = tvb_find_guint8(tvb, tvb_previous_offset, tvb_last_RBRKT, '=');",
          "1704:             tvb_current_offset = megaco_tvb_skip_wsp(tvb, equal_offset+1);",
          "1705:             tvb_offset = megaco_tvb_skip_wsp_return(tvb, tvb_LBRKT-1);",
          "1706:             tokenlen =  tvb_offset - tvb_current_offset;",
          "1710:             tvb_previous_offset = tvb_LBRKT+1;",
          "1711:             continue;",
          "1712:         case MEGACO_TERMINATION_STATE_DESC:",
          "1713:             tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_LBRKT+1);",
          "1715:                 tvb_RBRKT, tvb_current_offset);",
          "1716:             tvb_current_offset = tvb_RBRKT;",
          "1717:             break;",
          "",
          "[Removed Lines]",
          "1678:         megaco_mediadescriptor_ti = proto_tree_add_format_text(megaco_tree_command_line,tvb,tvb_current_offset,",
          "1679:                 tokenlen);",
          "1684:             dissect_megaco_Localdescriptor(tvb,megaco_tree_command_line , pinfo,",
          "1690:             dissect_megaco_Localdescriptor(tvb,megaco_tree_command_line , pinfo,",
          "1696:             dissect_megaco_LocalControldescriptor(tvb,megaco_tree_command_line, pinfo ,",
          "1697:                 tvb_RBRKT, tvb_current_offset);",
          "1701:             megaco_mediadescriptor_tree = proto_item_add_subtree(megaco_mediadescriptor_ti, ett_megaco_mediadescriptor);",
          "1708:             proto_tree_add_string(megaco_mediadescriptor_tree, hf_megaco_streamid, tvb,",
          "1709:                 tvb_current_offset, tokenlen, tvb_format_text(tvb, tvb_current_offset,tokenlen));",
          "1714:             dissect_megaco_TerminationStatedescriptor(tvb,megaco_tree_command_line ,",
          "",
          "[Added Lines]",
          "1510:             dissect_megaco_Localdescriptor(tvb, megaco_mediadescriptor_tree, pinfo,",
          "1516:             dissect_megaco_Localdescriptor(tvb, megaco_mediadescriptor_tree, pinfo,",
          "1522:             dissect_megaco_LocalControldescriptor(tvb, megaco_mediadescriptor_tree, pinfo,",
          "1523:                 tvb_RBRKT, tvb_current_offset, top_tree);",
          "1527:             save_offset = tvb_current_offset;",
          "1533:             streamId = (guint)strtoul(tvb_format_text(tvb, tvb_current_offset,tokenlen),NULL,10);",
          "1534:             ti = proto_tree_add_uint(megaco_mediadescriptor_tree, hf_megaco_streamid, tvb,",
          "1535:                 save_offset, 1, streamId);",
          "1536:             proto_item_set_len(ti, tvb_offset-save_offset+tokenlen);",
          "1541:             dissect_megaco_TerminationStatedescriptor(tvb, megaco_mediadescriptor_tree,",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "1723:         if (tvb_next_offset > tvb_last_RBRKT) tvb_next_offset = tvb_last_RBRKT;",
          "1724:         if ( tvb_next_offset != -1 ){",
          "1725:             tokenlen = tvb_next_offset - tvb_RBRKT+1;",
          "1727:             tvb_previous_offset = tvb_next_offset+1;",
          "1731:             tvb_previous_offset = tvb_last_RBRKT;",
          "1732:         }",
          "1735: }",
          "1737: static void",
          "1739: {",
          "",
          "[Removed Lines]",
          "1726:             proto_tree_add_format_text(megaco_tree_command_line, tvb, tvb_RBRKT, tokenlen);",
          "1728:         }else{",
          "1730:             proto_tree_add_format_text(megaco_tree_command_line, tvb, tvb_RBRKT, 1);",
          "1738: dissect_megaco_h245(tvbuff_t *tvb, packet_info *pinfo, proto_tree *megaco_tree, gint offset, gint len, gchar *msg)",
          "1744:         offset, len, msg );",
          "",
          "[Added Lines]",
          "1556:         } else{",
          "1564:     proto_item_set_end(megaco_mediadescriptor_ti, tvb, tvb_previous_offset);",
          "1568: dissect_megaco_h245(tvbuff_t *tvb, packet_info *pinfo, proto_tree *megaco_tree, gint offset, gint len, proto_tree *top_tree)",
          "1572:     gchar *msg = tvb_format_text(tvb, offset, len);",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "1899: }",
          "1901: static void",
          "1903: {",
          "1905:     gint tokenlen, tvb_current_offset, tvb_next_offset, tvb_help_offset;",
          "1906:     gint tvb_events_end_offset, tvb_LBRKT;",
          "1909:     guint8 tempchar;",
          "1916:     tokenlen =  (tvb_RBRKT+1) - tvb_previous_offset;",
          "1923:     megaco_eventsdescriptor_tree = proto_item_add_subtree(megaco_eventsdescriptor_ti, ett_megaco_eventsdescriptor);",
          "1925:     tvb_current_offset = tvb_find_guint8(tvb, tvb_previous_offset, tvb_RBRKT, '=');",
          "",
          "[Removed Lines]",
          "1902: dissect_megaco_eventsdescriptor(tvbuff_t *tvb, packet_info *pinfo, proto_tree *megaco_tree_command_line,  gint tvb_RBRKT, gint tvb_previous_offset)",
          "1907:     proto_tree  *megaco_eventsdescriptor_tree, *megaco_eventsdescriptor_ti;",
          "1910:     gint requested_event_start_offset, requested_event_end_offset;",
          "1911:     proto_tree  *megaco_requestedevent_tree, *megaco_requestedevent_ti;",
          "1913:     requested_event_start_offset    = 0;",
          "1914:     requested_event_end_offset      = 0;",
          "1918:     megaco_eventsdescriptor_ti = proto_tree_add_format_text(megaco_tree_command_line, tvb, tvb_previous_offset, tokenlen);",
          "1921:     megaco_eventsdescriptor_ti = proto_tree_add_item(megaco_tree_command_line,hf_megaco_events_descriptor,tvb,tvb_previous_offset,tokenlen, ENC_UTF_8|ENC_NA);",
          "",
          "[Added Lines]",
          "1729: dissect_megaco_eventsdescriptor(tvbuff_t *tvb, packet_info *pinfo, proto_tree *megaco_tree_command_line,  gint tvb_RBRKT, gint tvb_previous_offset, proto_tree *top_tree)",
          "1734:     proto_tree  *megaco_eventsdescriptor_tree, *megaco_requestedevent_tree;",
          "1735:     proto_item  *megaco_eventsdescriptor_ti, *megaco_requestedevent_ti, *ti;",
          "1738:     gint requested_event_start_offset = 0,",
          "1739:          requested_event_end_offset = 0;",
          "1743:     megaco_eventsdescriptor_ti = proto_tree_add_item(megaco_tree_command_line,hf_megaco_events_descriptor,tvb,tvb_previous_offset, tokenlen, ENC_NA);",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "1933:         tokenlen =  tvb_help_offset - tvb_current_offset;",
          "1940:         tvb_events_end_offset   = tvb_RBRKT;",
          "",
          "[Removed Lines]",
          "1935:         proto_tree_add_string(megaco_eventsdescriptor_tree, hf_megaco_requestid, tvb,",
          "1936:             tvb_current_offset, tokenlen,",
          "1937:             tvb_format_text(tvb, tvb_current_offset,",
          "1938:             tokenlen));",
          "",
          "[Added Lines]",
          "1756:         ti = proto_tree_add_uint(megaco_eventsdescriptor_tree, hf_megaco_requestid, tvb,",
          "1757:             tvb_current_offset, 1,",
          "1758:             strtoul(tvb_format_text(tvb, tvb_current_offset, tokenlen), NULL, 10));",
          "1759:         proto_item_set_len(ti, tokenlen);",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "2012:                     dissect_megaco_digitmapdescriptor(tvb, megaco_requestedevent_tree, requested_event_end_offset, requested_event_start_offset);",
          "2013:                 }",
          "2014:                 else{",
          "2017:                     tokenlen =  requested_event_end_offset - requested_event_start_offset;",
          "2021:                     } else {",
          "2024:                     }",
          "2025:                 }",
          "",
          "[Removed Lines]",
          "2015:                     gchar *msg;",
          "2018:                     msg=tvb_format_text(tvb,requested_event_start_offset, tokenlen);",
          "2019:                     if(!strncmp(\"h245\", msg, 4)){",
          "2020:                         dissect_megaco_h245(tvb, pinfo, megaco_requestedevent_tree, requested_event_start_offset, tokenlen, msg);",
          "2022:                         proto_tree_add_text(megaco_requestedevent_tree, tvb, requested_event_start_offset, tokenlen,",
          "2023:                             \"%s\", msg);",
          "",
          "[Added Lines]",
          "1837:                     if(!tvb_strneql(tvb, requested_event_start_offset, \"h245\", 4)){",
          "1838:                         dissect_megaco_h245(tvb, pinfo, megaco_requestedevent_tree, requested_event_start_offset, tokenlen, top_tree);",
          "1840:                         proto_tree_add_format_text(megaco_requestedevent_tree, tvb, requested_event_start_offset, tokenlen);",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "2044: }",
          "2046: static void",
          "2048: {",
          "2050:     gint tokenlen, pkg_tokenlen, tvb_current_offset, tvb_next_offset, tvb_help_offset;",
          "2051:     gint tvb_signals_end_offset, tvb_signals_start_offset, tvb_LBRKT;",
          "2060:     tvb_signals_end_offset   = tvb_RBRKT;",
          "2061:     tvb_signals_start_offset = tvb_previous_offset;",
          "",
          "[Removed Lines]",
          "2047: dissect_megaco_signaldescriptor(tvbuff_t *tvb, packet_info *pinfo, proto_tree *megaco_tree_command_line,  gint tvb_RBRKT, gint tvb_previous_offset)",
          "2054:     gint requested_signal_start_offset, requested_signal_end_offset;",
          "2055:     proto_tree  *megaco_requestedsignal_tree, *megaco_requestedsignal_ti;",
          "2057:     requested_signal_start_offset   = 0;",
          "2058:     requested_signal_end_offset     = 0;",
          "",
          "[Added Lines]",
          "1864: dissect_megaco_signaldescriptor(tvbuff_t *tvb, packet_info *pinfo, proto_tree *megaco_tree_command_line,  gint tvb_RBRKT, gint tvb_previous_offset, proto_tree *top_tree)",
          "1869:     proto_tree  *megaco_signalsdescriptor_tree, *megaco_requestedsignal_tree;",
          "1870:     proto_item  *megaco_signalsdescriptor_ti, *megaco_requestedsignal_ti;",
          "1872:     gint requested_signal_start_offset = 0,",
          "1873:          requested_signal_end_offset = 0;",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "2072:       proto_tree_add_text(megaco_tree_command_line, tvb, tvb_signals_start_offset, tokenlen,",
          "2073:                 \"%s\", \"Empty Signal Descriptor\");",
          "",
          "[Added Lines]",
          "1887:       megaco_signalsdescriptor_ti = proto_tree_add_item(megaco_tree_command_line, hf_megaco_signal_descriptor, tvb, tvb_signals_start_offset, tokenlen, ENC_NA);",
          "1888:       expert_add_info(pinfo, megaco_signalsdescriptor_ti, &ei_megaco_signal_descriptor);",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "2080:     tvb_LBRKT = tvb_find_guint8(tvb, tvb_previous_offset, tvb_signals_end_offset, '{');",
          "2081:     tokenlen =  (tvb_LBRKT+1) - tvb_signals_start_offset;",
          "2087:     megaco_signalsdescriptor_tree = proto_item_add_subtree(megaco_signalsdescriptor_ti, ett_megaco_signalsdescriptor);",
          "2090:     tvb_current_offset = tvb_LBRKT;",
          "2091:     tvb_next_offset = megaco_tvb_skip_wsp(tvb, tvb_current_offset+1);",
          "",
          "[Removed Lines]",
          "2083:     proto_tree_add_format_text(megaco_tree_command_line, tvb, tvb_signals_start_offset, tokenlen);",
          "2086:     megaco_signalsdescriptor_ti = proto_tree_add_item(megaco_tree_command_line,hf_megaco_signal_descriptor,tvb,tvb_previous_offset,tokenlen, ENC_UTF_8|ENC_NA);",
          "",
          "[Added Lines]",
          "1898:     megaco_signalsdescriptor_ti = proto_tree_add_item(megaco_tree_command_line,hf_megaco_signal_descriptor,tvb,tvb_previous_offset,tokenlen, ENC_NA);",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "2154:                 tokenlen = pkg_tokenlen = tvb_RBRKT+1 - tvb_previous_offset;",
          "2155:             }",
          "2158:             megaco_requestedsignal_tree = proto_item_add_subtree(megaco_requestedsignal_ti, ett_megaco_requestedsignal);",
          "2162:             if ( tvb_help_offset < tvb_RBRKT && tvb_help_offset != -1 ){",
          "2165:                 requested_signal_start_offset = megaco_tvb_skip_wsp(tvb, requested_signal_start_offset +1);",
          "2166:                 requested_signal_end_offset = megaco_tvb_skip_wsp_return(tvb, requested_signal_end_offset-1);",
          "2168:                 tokenlen =  requested_signal_end_offset - requested_signal_start_offset;",
          "2173:                 } else {",
          "2176:                 }",
          "2179:             }",
          "2181:             tvb_current_offset  = tvb_find_guint8(tvb, tvb_RBRKT,",
          "",
          "[Removed Lines]",
          "2157:             megaco_requestedsignal_ti = proto_tree_add_format_text(megaco_tree_command_line, tvb, tvb_previous_offset, tokenlen);",
          "2160:             proto_tree_add_item(megaco_requestedsignal_tree,hf_megaco_pkgdname,tvb,tvb_previous_offset,pkg_tokenlen, ENC_UTF_8|ENC_NA);",
          "2163:                 gchar *msg;",
          "2170:                 msg=tvb_format_text(tvb,requested_signal_start_offset, tokenlen+1);",
          "2171:                 if(!strncmp(\"h245\", msg, 4)){",
          "2172:                     dissect_megaco_h245(tvb, pinfo, megaco_tree_command_line, requested_signal_start_offset, tokenlen, msg);",
          "2174:                     proto_tree_add_text(megaco_tree_command_line, tvb, requested_signal_start_offset, tokenlen,",
          "2175:                         \"%s\", msg);",
          "2178:                 proto_tree_add_format_text(megaco_tree_command_line, tvb, tvb_RBRKT, 1);",
          "",
          "[Added Lines]",
          "1968:             megaco_requestedsignal_ti = proto_tree_add_item(megaco_signalsdescriptor_tree,hf_megaco_pkgdname,tvb,tvb_previous_offset,pkg_tokenlen, ENC_UTF_8|ENC_NA);",
          "1977:                 if(!tvb_strneql(tvb, requested_signal_start_offset, \"h245\", 4)){",
          "1978:                     dissect_megaco_h245(tvb, pinfo,  megaco_requestedsignal_tree, requested_signal_start_offset, tokenlen, top_tree);",
          "1980:                     proto_tree_add_format_text( megaco_requestedsignal_tree, tvb, requested_signal_start_offset, tokenlen);",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "2190:             tvb_LBRKT = tvb_previous_offset;",
          "2191:             tvb_RBRKT = tvb_previous_offset;",
          "2195:         } while ( tvb_current_offset < tvb_signals_end_offset );",
          "2196:     }else{",
          "2199:     }",
          "",
          "[Removed Lines]",
          "2193:             proto_tree_add_format_text(megaco_tree_command_line, tvb, tvb_signals_end_offset, 1);",
          "2198:         proto_tree_add_format_text(megaco_tree_command_line, tvb, tvb_signals_end_offset, 1);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "2222:     }",
          "2223:     tokenlen = (tvb_stop + 1) - tvb_offset;",
          "2228:     megaco_auditdescriptor_tree = proto_item_add_subtree( megaco_auditdescriptor_ti, ett_megaco_auditdescriptor );",
          "2230:     tokenlen = tvb_next + 1 - tvb_offset;",
          "2234:     tvb_offset = tvb_next;",
          "2236:     while( tvb_offset < tvb_stop )",
          "2237:     {",
          "2249:             proto_tree_add_string(megaco_auditdescriptor_tree, hf_megaco_audititem, tvb,",
          "",
          "[Removed Lines]",
          "2225:     megaco_auditdescriptor_ti = proto_tree_add_none_format( megaco_tree, hf_megaco_audit_descriptor,",
          "2226:                                 tvb, tvb_offset, tokenlen, \"Audit descriptor\" );",
          "2232:     proto_tree_add_text( megaco_auditdescriptor_tree, tvb, tvb_offset, tokenlen, \"Audit token {\" );",
          "2240:                 {",
          "",
          "[Added Lines]",
          "2030:     megaco_auditdescriptor_ti = proto_tree_add_item( megaco_tree, hf_megaco_audit_descriptor, tvb, tvb_offset, tokenlen, ENC_NA);",
          "2041:         {",
          "2044:                 tvb_next = tvb_stop;",
          "2050:                 token_index = 0;",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "2444: static void",
          "2445: dissect_megaco_statisticsdescriptor(tvbuff_t *tvb, proto_tree *megaco_tree_command_line,  gint tvb_RBRKT, gint tvb_previous_offset)",
          "2446: {",
          "2448:     gint    tokenlen;",
          "2450:     tokenlen =  (tvb_RBRKT+1) - tvb_previous_offset;",
          "2456: }",
          "2457: static void",
          "2459: {",
          "2461:     gint tokenlen, pkg_tokenlen, tvb_current_offset, tvb_next_offset, tvb_help_offset;",
          "2462:     gint tvb_observedevents_end_offset, tvb_LBRKT;",
          "2465:     gint requested_event_start_offset, requested_event_end_offset, param_start_offset, param_end_offset;",
          "2468:     requested_event_start_offset    = 0;",
          "2469:     requested_event_end_offset  = 0;",
          "2472:     tvb_LBRKT = tvb_find_guint8(tvb, tvb_previous_offset, tvb_RBRKT, '{');",
          "2473:     tvb_next_offset = tvb_LBRKT;",
          "2474:     tokenlen =  (tvb_next_offset+1) - tvb_previous_offset;",
          "2482:     megaco_observedeventsdescriptor_tree = proto_item_add_subtree(megaco_observedeventsdescriptor_ti, ett_megaco_observedeventsdescriptor);",
          "2484:     tvb_current_offset = tvb_find_guint8(tvb, tvb_previous_offset, tvb_RBRKT, '=');",
          "",
          "[Removed Lines]",
          "2451:     proto_tree_add_string(megaco_tree_command_line, hf_megaco_statistics_descriptor, tvb,",
          "2452:                             tvb_previous_offset, tokenlen,",
          "2453:                             tvb_format_text(tvb, tvb_previous_offset,",
          "2454:                             tokenlen));",
          "2458: dissect_megaco_observedeventsdescriptor(tvbuff_t *tvb, packet_info *pinfo, proto_tree *megaco_tree_command_line,  gint tvb_RBRKT, gint tvb_previous_offset)",
          "2463:     proto_tree  *megaco_observedeventsdescriptor_tree, *megaco_observedeventsdescriptor_ti;",
          "2466:     proto_tree  *megaco_observedevent_tree, *megaco_observedevent_ti;",
          "2477:     megaco_observedeventsdescriptor_ti = proto_tree_add_item(megaco_tree_command_line,hf_megaco_observedevents_descriptor,tvb,tvb_previous_offset,tokenlen, ENC_UTF_8|ENC_NA);",
          "2478:     megaco_observedeventsdescriptor_tree = proto_item_add_subtree(megaco_observedeventsdescriptor_ti, ett_megaco_observedeventsdescriptor);",
          "2481:     megaco_observedeventsdescriptor_ti = proto_tree_add_format_text(megaco_tree_command_line, tvb, tvb_previous_offset, tokenlen);",
          "",
          "[Added Lines]",
          "2250:     proto_tree  *megaco_statisticsdescriptor_tree;",
          "2251:     proto_item  *megaco_statisticsdescriptor_ti;",
          "2252:     gint tvb_help_offset, param_start_offset, param_end_offset = 0;",
          "2256:     megaco_statisticsdescriptor_ti = proto_tree_add_item(megaco_tree_command_line,hf_megaco_statistics_descriptor,tvb,tvb_previous_offset,tokenlen, ENC_NA);",
          "2257:     megaco_statisticsdescriptor_tree = proto_item_add_subtree(megaco_statisticsdescriptor_ti, ett_megaco_statisticsdescriptor);",
          "2259:     tvb_help_offset = tvb_find_guint8(tvb, tvb_previous_offset+1, tvb_RBRKT, '{');",
          "2260:     do {",
          "2261:         param_start_offset = megaco_tvb_skip_wsp(tvb, tvb_help_offset+1);",
          "2263:         tvb_help_offset = tvb_find_guint8(tvb, tvb_help_offset+1, tvb_RBRKT, ',');",
          "2265:         if ( tvb_help_offset > tvb_RBRKT || tvb_help_offset == -1){",
          "2266:             tvb_help_offset = tvb_RBRKT;",
          "2267:             param_end_offset = megaco_tvb_skip_wsp_return(tvb, tvb_RBRKT-1);",
          "2268:             tokenlen =  param_end_offset - param_start_offset;",
          "2269:         } else {",
          "2270:             param_end_offset = megaco_tvb_skip_wsp(tvb, tvb_help_offset-1);",
          "2271:             tokenlen =  param_end_offset - param_start_offset+1;",
          "2272:         }",
          "2274:         proto_tree_add_format_text(megaco_statisticsdescriptor_tree, tvb,param_start_offset, tokenlen);",
          "2276:     } while ( tvb_help_offset < tvb_RBRKT );",
          "2280: dissect_megaco_observedeventsdescriptor(tvbuff_t *tvb, packet_info *pinfo, proto_tree *megaco_tree_command_line,  gint tvb_RBRKT, gint tvb_previous_offset, proto_tree *top_tree)",
          "2285:     proto_tree  *megaco_observedeventsdescriptor_tree, *megaco_observedevent_tree;",
          "2286:     proto_item  *megaco_observedeventsdescriptor_ti, *megaco_observedevent_ti, *ti;",
          "2297:     megaco_observedeventsdescriptor_ti = proto_tree_add_item(megaco_tree_command_line,hf_megaco_observedevents_descriptor,tvb,tvb_previous_offset,tokenlen, ENC_NA);",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "2492:         tokenlen =  tvb_help_offset - tvb_current_offset;",
          "2499:         tvb_observedevents_end_offset   = tvb_RBRKT;",
          "",
          "[Removed Lines]",
          "2494:         proto_tree_add_string(megaco_observedeventsdescriptor_tree, hf_megaco_requestid, tvb,",
          "2495:             tvb_current_offset, tokenlen,",
          "2496:             tvb_format_text(tvb, tvb_current_offset,",
          "2497:             tokenlen));",
          "",
          "[Added Lines]",
          "2310:         ti = proto_tree_add_uint(megaco_observedeventsdescriptor_tree, hf_megaco_requestid, tvb,",
          "2311:             tvb_current_offset, 1,",
          "2312:             strtoul(tvb_format_text(tvb, tvb_current_offset, tokenlen), NULL, 10));",
          "2313:         proto_item_set_len(ti, tokenlen);",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "2572:                 tvb_help_offset = requested_event_start_offset;",
          "2574:                 do {",
          "2577:                     param_start_offset = megaco_tvb_skip_wsp(tvb, tvb_help_offset+1);",
          "2579:                     tvb_help_offset = tvb_find_guint8(tvb, tvb_help_offset+1,requested_event_end_offset, ',');",
          "",
          "[Removed Lines]",
          "2575:                     gchar *msg;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "2585:                     param_end_offset = megaco_tvb_skip_wsp(tvb, tvb_help_offset-1);",
          "2587:                     tokenlen =  param_end_offset - param_start_offset+1;",
          "2591:                     } else {",
          "2594:                     }",
          "",
          "[Removed Lines]",
          "2588:                     msg=tvb_format_text(tvb,param_start_offset, tokenlen);",
          "2589:                     if(!strncmp(\"h245\", msg, 4)){",
          "2590:                         dissect_megaco_h245(tvb, pinfo, megaco_tree_command_line, param_start_offset, tokenlen, msg);",
          "2592:                         proto_tree_add_text(megaco_tree_command_line, tvb, param_start_offset, tokenlen,",
          "2593:                             \"%s\", msg);",
          "",
          "[Added Lines]",
          "2402:                     if(!tvb_strneql(tvb, param_start_offset, \"h245\", 4)){",
          "2403:                         dissect_megaco_h245(tvb, pinfo, megaco_tree_command_line, param_start_offset, tokenlen, top_tree);",
          "2405:                         proto_tree_add_format_text(megaco_tree_command_line, tvb, param_start_offset, tokenlen);",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "2614:             tvb_LBRKT = tvb_previous_offset;",
          "2615:             tvb_RBRKT = tvb_previous_offset;",
          "2619:         } while ( tvb_current_offset < tvb_observedevents_end_offset );",
          "2620:     }",
          "",
          "[Removed Lines]",
          "2617:             proto_tree_add_format_text(megaco_tree_command_line, tvb, tvb_observedevents_end_offset, 1);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "2639:     gint tokenlen, tvb_current_offset, tvb_next_offset, tvb_help_offset;",
          "2640:     gint tvb_packages_end_offset, tvb_LBRKT;",
          "2643:     tokenlen =  (tvb_RBRKT+1) - tvb_previous_offset;",
          "2645:     megaco_packagesdescriptor_ti = proto_tree_add_item(megaco_tree_command_line,hf_megaco_packages_descriptor,tvb,tvb_previous_offset,tokenlen, ENC_UTF_8|ENC_NA);",
          "2646:     megaco_packagesdescriptor_tree = proto_item_add_subtree(megaco_packagesdescriptor_ti, ett_megaco_packagesdescriptor);",
          "2650:     tvb_current_offset = tvb_find_guint8(tvb, tvb_previous_offset, tvb_RBRKT, '=');",
          "2651:     tvb_next_offset = tvb_find_guint8(tvb, tvb_previous_offset, tvb_RBRKT, '{');",
          "",
          "[Removed Lines]",
          "2641:     proto_tree  *megaco_packagesdescriptor_tree, *megaco_packagesdescriptor_ti;",
          "",
          "[Added Lines]",
          "2453:     proto_tree  *megaco_packagesdescriptor_tree;",
          "2454:     proto_item  *megaco_packagesdescriptor_ti, *ti;",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "2658:         tokenlen =  tvb_help_offset - tvb_current_offset;",
          "2665:         tvb_packages_end_offset   = tvb_RBRKT;",
          "",
          "[Removed Lines]",
          "2660:         proto_tree_add_string(megaco_packagesdescriptor_tree, hf_megaco_requestid, tvb,",
          "2661:             tvb_current_offset, tokenlen,",
          "2662:             tvb_format_text(tvb, tvb_current_offset,",
          "2663:             tokenlen));",
          "",
          "[Added Lines]",
          "2471:         ti = proto_tree_add_uint(megaco_packagesdescriptor_tree, hf_megaco_requestid, tvb,",
          "2472:             tvb_current_offset, 1,",
          "2473:             strtoul(tvb_format_text(tvb, tvb_current_offset, tokenlen), NULL, 10));",
          "2474:         proto_item_set_len(ti, tokenlen);",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "2826:     guint8              error[4];",
          "2827:     gint                tvb_current_offset;",
          "2828:     proto_item*         item;",
          "2831:     tvb_current_offset = tvb_find_guint8(tvb, tvb_previous_offset , tvb_RBRKT, '=');",
          "2832:     tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_current_offset +1);",
          "2841:     tokenlen =  (tvb_RBRKT) - tvb_previous_offset+1;",
          "2856: }",
          "2857: static void",
          "2858: dissect_megaco_TerminationStatedescriptor(tvbuff_t *tvb, proto_tree *megaco_mediadescriptor_tree,  gint tvb_next_offset, gint tvb_current_offset)",
          "",
          "[Removed Lines]",
          "2829:     proto_item*         hidden_item;",
          "2833:     tvb_get_nstringz0(tvb,tvb_current_offset,4,error);",
          "2834:     error_code = atoi(error);",
          "2835:     hidden_item = proto_tree_add_string(megaco_tree_command_line, hf_megaco_error_descriptor, tvb,",
          "2836:                             tvb_current_offset, 3,",
          "2837:                             tvb_format_text(tvb, tvb_current_offset,",
          "2838:                             3));",
          "2839:     PROTO_ITEM_SET_HIDDEN(hidden_item);",
          "2844:     proto_tree_add_string(megaco_tree_command_line, hf_megaco_error_descriptor, tvb,",
          "2845:                             tvb_previous_offset, tokenlen,",
          "2846:                             tvb_format_text(tvb, tvb_previous_offset,",
          "2847:                             tokenlen));",
          "2849:     item = proto_tree_add_text(megaco_tree_command_line, tvb, tvb_current_offset, 3,",
          "2850:         \"Error code: %s\",",
          "2851:         val_to_str(error_code, MEGACO_error_code_vals,",
          "2852:           \"Unknown (%u)\"));",
          "2854:     PROTO_ITEM_SET_GENERATED(item);",
          "",
          "[Added Lines]",
          "2640:     proto_tree*         error_tree;",
          "2647:     item = proto_tree_add_item(megaco_tree_command_line, hf_megaco_error_descriptor, tvb,",
          "2648:                             tvb_previous_offset, tokenlen, ENC_NA);",
          "2649:     error_tree = proto_item_add_subtree(item, ett_megaco_error_descriptor);",
          "2652:     tvb_get_nstringz0(tvb,tvb_current_offset,4,error);",
          "2653:     error_code = atoi(error);",
          "2654:     proto_tree_add_uint(error_tree, hf_megaco_error_code, tvb, tvb_current_offset, 3, error_code);",
          "2657:     tvb_previous_offset = tvb_find_guint8(tvb, tvb_current_offset, tvb_RBRKT, '\\\"');",
          "2658:     tvb_current_offset = tvb_find_guint8(tvb, tvb_previous_offset+1, tvb_RBRKT, '\\\"');",
          "2660:     tokenlen =  tvb_current_offset - tvb_previous_offset-1;",
          "2661:     proto_tree_add_item(error_tree, hf_megaco_error_string, tvb, tvb_previous_offset+1, tokenlen, ENC_UTF_8|ENC_NA);",
          "",
          "---------------",
          "--- Hunk 66 ---",
          "[Context before]",
          "2866:     tvb_offset = tvb_find_guint8(tvb, tvb_current_offset , tvb_next_offset, '=');",
          "2868:     tokenlen = tvb_next_offset - tvb_current_offset;",
          "2874:     megaco_TerminationState_tree = proto_item_add_subtree(megaco_TerminationState_ti, ett_megaco_TerminationState);",
          "2876:     while ( tvb_offset < tvb_next_offset && tvb_offset != -1 ){",
          "",
          "[Removed Lines]",
          "2870:     megaco_TerminationState_ti = proto_tree_add_item(megaco_mediadescriptor_tree,hf_megaco_TerminationState_descriptor,tvb,tvb_current_offset,tokenlen, ENC_UTF_8|ENC_NA);",
          "2871:     megaco_TerminationState_tree = proto_item_add_subtree(megaco_TerminationState_ti, ett_megaco_TerminationState);",
          "2873:     megaco_TerminationState_ti = proto_tree_add_format_text(megaco_mediadescriptor_tree, tvb, tvb_current_offset, tokenlen);",
          "",
          "[Added Lines]",
          "2675:     megaco_TerminationState_ti = proto_tree_add_item(megaco_mediadescriptor_tree,hf_megaco_TerminationState_descriptor,tvb,tvb_current_offset,tokenlen, ENC_NA);",
          "",
          "---------------",
          "--- Hunk 67 ---",
          "[Context before]",
          "2945:         tvb_offset = tvb_find_guint8(tvb, tvb_current_offset , tvb_next_offset, '=');",
          "2947:     }",
          "2949: }",
          "2951: static void",
          "",
          "[Removed Lines]",
          "2948:     proto_tree_add_format_text(megaco_mediadescriptor_tree, tvb, tvb_next_offset, 1);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 68 ---",
          "[Context before]",
          "2954:     gint tokenlen;",
          "2955:     tvbuff_t *next_tvb;",
          "2959:     tokenlen = tvb_next_offset - tvb_current_offset;",
          "2969:     if ( tokenlen > 3 ){",
          "2970:         next_tvb = tvb_new_subset_length(tvb, tvb_current_offset, tokenlen);",
          "2971:         call_dissector(sdp_handle, next_tvb, pinfo, megaco_localdescriptor_tree);",
          "",
          "[Removed Lines]",
          "2957:     proto_tree  *megaco_localdescriptor_tree, *megaco_localdescriptor_ti;",
          "2963:     megaco_localdescriptor_ti = proto_tree_add_item(megaco_mediadescriptor_tree,hf_megaco_Local_descriptor,tvb,tvb_current_offset,tokenlen, ENC_UTF_8|ENC_NA);",
          "2965:     megaco_localdescriptor_ti = proto_tree_add_format_text(megaco_mediadescriptor_tree, tvb, tvb_current_offset, tokenlen);",
          "2966:     megaco_localdescriptor_tree = proto_item_add_subtree(megaco_localdescriptor_ti, ett_megaco_Localdescriptor);",
          "2968:     tokenlen = tvb_next_offset - tvb_current_offset;",
          "",
          "[Added Lines]",
          "2760:     proto_tree  *megaco_localdescriptor_tree;",
          "2761:     proto_item  *megaco_localdescriptor_item;",
          "2765:     megaco_localdescriptor_item = proto_tree_add_item(megaco_mediadescriptor_tree, hf_megaco_Local_descriptor, tvb, tvb_current_offset, tokenlen, ENC_NA);",
          "2766:     megaco_localdescriptor_tree = proto_item_add_subtree(megaco_localdescriptor_item, ett_megaco_Localdescriptor);",
          "",
          "---------------",
          "--- Hunk 69 ---",
          "[Context before]",
          "2995: #define MEGACO_GM_ESPS              14",
          "2996: #define MEGACO_GM_LSP               15",
          "2997: #define MEGACO_GM_RSB               16",
          "2999: static const megaco_tokens_t megaco_localParam_names[] = {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2797: #define MEGACO_TMAN_POL             17",
          "2798: #define MEGACO_TMAN_SDR             18",
          "2799: #define MEGACO_TMAN_MBS             19",
          "2800: #define MEGACO_TMAN_PDR             20",
          "2801: #define MEGACO_TMAN_DVT             21",
          "2802: #define MEGACO_IPDC_REALM           22",
          "",
          "---------------",
          "--- Hunk 70 ---",
          "[Context before]",
          "3039: }",
          "3041: static void",
          "3043: {",
          "3044:     gint tokenlen;",
          "3045:     guint token_name_len;",
          "3047:     gint token_index = 0;",
          "3048:     gchar *msg;",
          "3049:     proto_item* item;",
          "3050:     guint8              code_str[3];",
          "3057:     tokenlen = tvb_next_offset - tvb_current_offset;",
          "3062:     while ( tvb_offset < tvb_next_offset && tvb_offset != -1 ){",
          "3064:         tvb_help_offset = tvb_current_offset;",
          "",
          "[Removed Lines]",
          "3042: dissect_megaco_LocalControldescriptor(tvbuff_t *tvb, proto_tree *megaco_mediadescriptor_tree, packet_info *pinfo,  gint tvb_next_offset, gint tvb_current_offset)",
          "3046:     gint tvb_offset,tvb_help_offset;",
          "3054:     tvb_offset      = 0;",
          "3059:     megaco_LocalControl_ti = proto_tree_add_item(megaco_mediadescriptor_tree,hf_megaco_LocalControl_descriptor,tvb,tvb_current_offset,tokenlen, ENC_UTF_8|ENC_NA);",
          "3060:     megaco_LocalControl_tree = proto_item_add_subtree(megaco_LocalControl_ti, ett_megaco_LocalControldescriptor);",
          "",
          "[Added Lines]",
          "2853: dissect_megaco_LocalControldescriptor(tvbuff_t *tvb, proto_tree *megaco_mediadescriptor_tree, packet_info *pinfo,  gint tvb_next_offset, gint tvb_current_offset, proto_tree *top_tree)",
          "2857:     gint tvb_offset = 0,tvb_help_offset;",
          "2863:     proto_tree  *megaco_LocalControl_tree;",
          "2864:     proto_item  *megaco_LocalControl_item;",
          "2868:     megaco_LocalControl_item = proto_tree_add_item(megaco_mediadescriptor_tree, hf_megaco_LocalControl_descriptor, tvb, tvb_current_offset, tokenlen, ENC_NA);",
          "2869:     megaco_LocalControl_tree = proto_item_add_subtree(megaco_LocalControl_item, ett_megaco_LocalControldescriptor);",
          "",
          "---------------",
          "--- Hunk 71 ---",
          "[Context before]",
          "3106:         switch ( token_index ){",
          "3111:                 tvb_format_text(tvb, tvb_current_offset,",
          "3112:                 tokenlen));",
          "3113:             col_append_fstr(pinfo->cinfo, COL_INFO, \" (Mode:%s)\",tvb_format_text(tvb, tvb_current_offset,tokenlen));",
          "",
          "[Removed Lines]",
          "3109:             proto_tree_add_string(megaco_mediadescriptor_tree, hf_megaco_mode, tvb,",
          "3110:                 tvb_current_offset, tokenlen,",
          "",
          "[Added Lines]",
          "2918:             proto_tree_add_string(megaco_LocalControl_tree, hf_megaco_mode, tvb,",
          "2919:                 tvb_help_offset, tvb_offset-tvb_help_offset,",
          "",
          "---------------",
          "--- Hunk 72 ---",
          "[Context before]",
          "3115:             break;",
          "3123:             tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_offset +1);",
          "3124:             break;",
          "3130:             tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_offset +1);",
          "3131:             break;",
          "3139:             tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_offset +1);",
          "3140:             tokenlen = tvb_offset - tvb_help_offset;",
          "",
          "[Removed Lines]",
          "3118:             proto_tree_add_string(megaco_mediadescriptor_tree, hf_megaco_reserve_value, tvb,",
          "3119:                     tvb_current_offset, tokenlen,",
          "3120:                     tvb_format_text(tvb, tvb_current_offset,",
          "3121:                     tokenlen));",
          "3126:             proto_tree_add_string(megaco_mediadescriptor_tree, hf_megaco_reserve_group, tvb,",
          "3127:                 tvb_current_offset, tokenlen,",
          "3128:                 tvb_format_text(tvb, tvb_current_offset,",
          "3129:                 tokenlen));",
          "3134:             proto_tree_add_string(megaco_mediadescriptor_tree, hf_megaco_h324_h223capr, tvb,",
          "3135:                 tvb_current_offset, tokenlen,",
          "3136:                 tvb_format_text(tvb, tvb_current_offset,",
          "3137:                 tokenlen));",
          "",
          "[Added Lines]",
          "2927:             proto_tree_add_string(megaco_LocalControl_tree, hf_megaco_reserve_value, tvb,",
          "2928:                     tvb_help_offset, tvb_offset-tvb_help_offset,",
          "2929:                     tvb_format_text(tvb, tvb_current_offset, tokenlen));",
          "2934:             proto_tree_add_string(megaco_LocalControl_tree, hf_megaco_reserve_group, tvb,",
          "2935:                 tvb_help_offset, tvb_offset-tvb_help_offset,",
          "2936:                 tvb_format_text(tvb, tvb_current_offset, tokenlen));",
          "2941:             proto_tree_add_string(megaco_LocalControl_tree, hf_megaco_h324_h223capr, tvb,",
          "2942:                 tvb_help_offset, tvb_offset-tvb_help_offset,",
          "2943:                 tvb_format_text(tvb, tvb_current_offset, tokenlen));",
          "",
          "---------------",
          "--- Hunk 73 ---",
          "[Context before]",
          "3153:             tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_offset +1);",
          "3155:             tokenlen = tvb_offset - tvb_help_offset;",
          "3160:             break;",
          "3162:         case MEGACO_H324_MUXTBL_OUT:",
          "3165:                 tvb_current_offset, tokenlen,",
          "3166:                 tvb_format_text(tvb, tvb_current_offset,",
          "3167:                 tokenlen));",
          "",
          "[Removed Lines]",
          "3148:             proto_tree_add_string(megaco_mediadescriptor_tree, hf_megaco_h324_muxtbl_in, tvb,",
          "3149:                 tvb_current_offset, tokenlen,",
          "3150:                 tvb_format_text(tvb, tvb_current_offset,",
          "3151:                 tokenlen));",
          "3156:             msg=tvb_format_text(tvb,tvb_help_offset, tokenlen);",
          "3158:             dissect_megaco_h245(tvb, pinfo, NULL, tvb_help_offset, tokenlen, msg);",
          "3164:             proto_tree_add_string(megaco_mediadescriptor_tree, hf_megaco_h324_muxtbl_out, tvb,",
          "",
          "[Added Lines]",
          "2954:             proto_tree_add_string(megaco_LocalControl_tree, hf_megaco_h324_muxtbl_in, tvb,",
          "2955:                 tvb_help_offset, tvb_offset-tvb_help_offset,",
          "2956:                 tvb_format_text(tvb, tvb_current_offset, tokenlen));",
          "2962:             dissect_megaco_h245(tvb, pinfo, NULL, tvb_help_offset, tokenlen, top_tree);",
          "2968:             proto_tree_add_string(megaco_LocalControl_tree, hf_megaco_h324_muxtbl_out, tvb,",
          "",
          "---------------",
          "--- Hunk 74 ---",
          "[Context before]",
          "3169:             tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_offset +1);",
          "3171:             tokenlen = tvb_offset - tvb_help_offset;",
          "3176:             break;",
          "3178:         case MEGACO_DS_DSCP:",
          "3184:             tvb_get_nstringz0(tvb,tvb_current_offset,3,code_str);",
          "3188:             tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_offset +1);",
          "3189:             break;",
          "3191:         case MEGACO_GM_SAF:",
          "3195:             tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_offset +1);",
          "3196:             break;",
          "3197:         case MEGACO_GM_SAM:",
          "3201:             tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_offset +1);",
          "3202:             break;",
          "3203:         case MEGACO_GM_SPF:",
          "3207:             tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_offset +1);",
          "3208:             break;",
          "3209:         case MEGACO_GM_SPR:",
          "3213:             tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_offset +1);",
          "3214:             break;",
          "3215:         case MEGACO_GM_ESAS:",
          "3219:             tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_offset +1);",
          "3220:             break;",
          "3221:         default:",
          "3222:             tokenlen = tvb_offset - tvb_help_offset;",
          "3224:             tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_offset +1);",
          "3226:             break;",
          "3227:         }",
          "3228:     }",
          "3229: }",
          "3232: static void tvb_raw_text_add(tvbuff_t *tvb, proto_tree *tree){",
          "3234:     gint tvb_linebegin,tvb_lineend,linelen;",
          "3236:     tvb_linebegin = 0;",
          "3247: }",
          "",
          "[Removed Lines]",
          "3172:             msg=tvb_format_text(tvb,tvb_help_offset, tokenlen);",
          "3174:             dissect_megaco_h245(tvb, pinfo, NULL, tvb_help_offset, tokenlen, msg);",
          "3179:             item = proto_tree_add_string(megaco_mediadescriptor_tree, hf_megaco_ds_dscp, tvb,",
          "3180:                 tvb_current_offset, tokenlen,",
          "3181:                 tvb_format_text(tvb, tvb_current_offset,",
          "3182:                 tokenlen));",
          "3185:             proto_item_append_text(item,\"[ %s ]\",",
          "3186:                                    val_to_str_ext((guint32)strtoul(code_str,NULL,16), &dscp_vals_ext,\"Unknown (%u)\"));",
          "3192:             tokenlen = tvb_offset - tvb_help_offset;",
          "3193:             item = proto_tree_add_format_text(megaco_mediadescriptor_tree, tvb, tvb_help_offset, tokenlen);",
          "3194:             proto_item_append_text(item,\" [Remote Source Address Filtering]\");",
          "3198:             tokenlen = tvb_offset - tvb_help_offset;",
          "3199:             item = proto_tree_add_format_text(megaco_mediadescriptor_tree, tvb, tvb_help_offset, tokenlen);",
          "3200:             proto_item_append_text(item,\" [Remote Source Address Mask]\");",
          "3204:             tokenlen = tvb_offset - tvb_help_offset;",
          "3205:             item = proto_tree_add_format_text(megaco_mediadescriptor_tree, tvb, tvb_help_offset, tokenlen);",
          "3206:             proto_item_append_text(item,\" [Remote Source Port Filtering]\");",
          "3210:             tokenlen = tvb_offset - tvb_help_offset;",
          "3211:             item = proto_tree_add_format_text(megaco_mediadescriptor_tree, tvb, tvb_help_offset, tokenlen);",
          "3212:             proto_item_append_text(item,\" [Remote Source Port Range]\");",
          "3216:             tokenlen = tvb_offset - tvb_help_offset;",
          "3217:             item = proto_tree_add_format_text(megaco_mediadescriptor_tree, tvb, tvb_help_offset, tokenlen);",
          "3218:             proto_item_append_text(item,\" [Explicit Source Address Setting]\");",
          "3223:             proto_tree_add_format_text(megaco_mediadescriptor_tree, tvb, tvb_help_offset, tokenlen);",
          "3238:     proto_tree_add_text(tree, tvb, 0, -1,\"-------------- (RAW text output) ---------------\");",
          "3240:     do {",
          "3241:         linelen = tvb_find_line_end(tvb,tvb_linebegin,-1,&tvb_lineend,FALSE);",
          "3242:         proto_tree_add_text(tree, tvb, tvb_linebegin, linelen,",
          "3243:                             \"%s\", tvb_format_text_wsp(tvb,tvb_linebegin,",
          "3244:                                                       linelen));",
          "3245:         tvb_linebegin = tvb_lineend;",
          "3246:     } while (tvb_offset_exists(tvb, tvb_lineend) && linelen > 0);",
          "",
          "[Added Lines]",
          "2977:             dissect_megaco_h245(tvb, pinfo, NULL, tvb_help_offset, tokenlen, top_tree);",
          "2983:             item = proto_tree_add_uint(megaco_LocalControl_tree, hf_megaco_ds_dscp, tvb,",
          "2984:                 tvb_help_offset, 1, strtoul(code_str,NULL,16));",
          "2985:             proto_item_set_len(item, tvb_offset-tvb_help_offset);",
          "2990:             proto_tree_add_string(megaco_LocalControl_tree, hf_megaco_gm_saf, tvb,",
          "2991:                 tvb_help_offset, tvb_offset-tvb_help_offset, tvb_format_text(tvb, tvb_current_offset, tokenlen));",
          "2995:             proto_tree_add_string(megaco_LocalControl_tree, hf_megaco_gm_sam, tvb,",
          "2996:                 tvb_help_offset, tvb_offset-tvb_help_offset, tvb_format_text(tvb, tvb_current_offset, tokenlen));",
          "3000:             proto_tree_add_string(megaco_LocalControl_tree, hf_megaco_gm_spf, tvb,",
          "3001:                 tvb_help_offset, tvb_offset-tvb_help_offset, tvb_format_text(tvb, tvb_current_offset, tokenlen));",
          "3005:             proto_tree_add_string(megaco_LocalControl_tree, hf_megaco_gm_spr, tvb,",
          "3006:                 tvb_help_offset, tvb_offset-tvb_help_offset, tvb_format_text(tvb, tvb_current_offset, tokenlen));",
          "3010:             proto_tree_add_string(megaco_LocalControl_tree, hf_megaco_gm_esas, tvb,",
          "3011:                 tvb_help_offset, tvb_offset-tvb_help_offset, tvb_format_text(tvb, tvb_current_offset, tokenlen));",
          "3012:             tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_offset +1);",
          "3013:             break;",
          "3014:         case MEGACO_TMAN_POL:",
          "3015:             proto_tree_add_string(megaco_LocalControl_tree, hf_megaco_tman_pol, tvb,",
          "3016:                 tvb_help_offset, tvb_offset-tvb_help_offset, tvb_format_text(tvb, tvb_current_offset, tokenlen));",
          "3017:             tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_offset +1);",
          "3018:             break;",
          "3019:         case MEGACO_TMAN_SDR:",
          "3020:             proto_tree_add_string(megaco_LocalControl_tree, hf_megaco_tman_sdr, tvb,",
          "3021:                 tvb_help_offset, tvb_offset-tvb_help_offset, tvb_format_text(tvb, tvb_current_offset, tokenlen));",
          "3022:             tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_offset +1);",
          "3023:             break;",
          "3024:         case MEGACO_TMAN_MBS:",
          "3025:             proto_tree_add_string(megaco_LocalControl_tree, hf_megaco_tman_mbs, tvb,",
          "3026:                 tvb_help_offset, tvb_offset-tvb_help_offset, tvb_format_text(tvb, tvb_current_offset, tokenlen));",
          "3027:             tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_offset +1);",
          "3028:             break;",
          "3029:         case MEGACO_TMAN_PDR:",
          "3030:             proto_tree_add_string(megaco_LocalControl_tree, hf_megaco_tman_pdr, tvb,",
          "3031:                 tvb_help_offset, tvb_offset-tvb_help_offset, tvb_format_text(tvb, tvb_current_offset, tokenlen));",
          "3032:             tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_offset +1);",
          "3033:             break;",
          "3034:         case MEGACO_TMAN_DVT:",
          "3035:             proto_tree_add_string(megaco_LocalControl_tree, hf_megaco_tman_dvt, tvb,",
          "3036:                 tvb_help_offset, tvb_offset-tvb_help_offset, tvb_format_text(tvb, tvb_current_offset, tokenlen));",
          "3039:         case MEGACO_IPDC_REALM:",
          "3040:             proto_tree_add_string(megaco_LocalControl_tree, hf_megaco_ipdc_realm, tvb,",
          "3041:                 tvb_help_offset, tvb_offset-tvb_help_offset, tvb_format_text(tvb, tvb_current_offset, tokenlen));",
          "3042:             tvb_current_offset = megaco_tvb_skip_wsp(tvb, tvb_offset +1);",
          "3043:             break;",
          "3047:             proto_tree_add_format_text(megaco_LocalControl_tree, tvb, tvb_help_offset, tokenlen);",
          "3055: static void",
          "3056: dissect_megaco_descriptors(tvbuff_t *tvb, proto_tree *megaco_command_tree, packet_info *pinfo, gint tvb_descriptors_start_offset, gint tvb_descriptors_end_offset, proto_tree *top_tree)",
          "3057: {",
          "3058:     gint        tvb_len, token_index, tvb_offset, temp_offset;",
          "3059:     gint        tvb_current_offset,tvb_previous_offset,save_offset,tokenlen;",
          "3060:     gint        tvb_RBRKT, tvb_LBRKT;",
          "3061:     proto_tree* descriptor_tree;",
          "3062:     proto_item* descriptor_item;",
          "3064:     tvb_len     = tvb_reported_length(tvb);",
          "3066:     descriptor_tree = proto_tree_add_subtree(megaco_command_tree, tvb, tvb_descriptors_start_offset,",
          "3067:                                             tvb_descriptors_end_offset-tvb_descriptors_start_offset, ett_megaco_descriptors, &descriptor_item, \"Descriptors\");",
          "3069:     tvb_LBRKT = megaco_tvb_skip_wsp(tvb, tvb_descriptors_start_offset +1);",
          "3071:     tvb_previous_offset = tvb_LBRKT;",
          "3072:     tvb_RBRKT = tvb_descriptors_start_offset;",
          "3075:     do {",
          "3077:         tvb_RBRKT = tvb_find_guint8(tvb, tvb_RBRKT+1,",
          "3078:             tvb_len, '}');",
          "3079:         tvb_LBRKT = tvb_find_guint8(tvb, tvb_LBRKT,",
          "3080:             tvb_len, '{');",
          "3082:         tvb_current_offset  = tvb_find_guint8(tvb, tvb_previous_offset,",
          "3083:             tvb_len, ',');",
          "3085:         if (tvb_current_offset == -1 || tvb_current_offset > tvb_descriptors_end_offset){",
          "3086:             tvb_current_offset = tvb_descriptors_end_offset;",
          "3088:         }",
          "3089:         if (tvb_current_offset <= tvb_previous_offset) {",
          "3090:             expert_add_info_format(pinfo, descriptor_item, &ei_megaco_parse_error, \"Parse error: Invalid offset\");",
          "3091:             return;",
          "3092:         }",
          "3096:         if ( tvb_LBRKT > tvb_current_offset || tvb_LBRKT == -1 ){",
          "3098:             if ( tvb_current_offset > tvb_RBRKT ){",
          "3099:                 tvb_current_offset = tvb_RBRKT;",
          "3100:             }",
          "3102:             tvb_RBRKT = megaco_tvb_skip_wsp_return(tvb, tvb_current_offset-1)-1;",
          "3103:         }",
          "3106:         if ( (tvb_current_offset > tvb_LBRKT && tvb_LBRKT != -1)){",
          "3108:             while ( tvb_LBRKT != -1 && tvb_RBRKT > tvb_LBRKT ){",
          "3111:                 tvb_LBRKT  = tvb_find_guint8(tvb, tvb_LBRKT+1,",
          "3112:                     tvb_len, '{');",
          "3113:                 if ( tvb_LBRKT < tvb_RBRKT && tvb_LBRKT != -1)",
          "3114:                     tvb_RBRKT  = tvb_find_guint8(tvb, tvb_RBRKT+1,tvb_len, '}');",
          "3115:             }",
          "3117:         }",
          "3120:         for (tvb_offset=tvb_previous_offset; tvb_offset < tvb_descriptors_end_offset -1; tvb_offset++){",
          "3121:             if (!g_ascii_isalpha(tvb_get_guint8(tvb, tvb_offset ))){",
          "3122:                 break;",
          "3123:             }",
          "3124:         }",
          "3125:         tokenlen =  tvb_offset - tvb_previous_offset;",
          "3126:         token_index = find_megaco_descriptors_names(tvb, tvb_previous_offset, tokenlen);",
          "3127:         if (tvb_RBRKT > tvb_descriptors_end_offset)",
          "3128:             tvb_RBRKT = tvb_descriptors_end_offset;",
          "3129:         switch ( token_index ){",
          "3130:         case MEGACO_MODEM_TOKEN:",
          "3131:             dissect_megaco_modemdescriptor(tvb, descriptor_tree, tvb_RBRKT, tvb_previous_offset);",
          "3132:             break;",
          "3133:         case MEGACO_MUX_TOKEN:",
          "3134:             dissect_megaco_multiplexdescriptor(tvb, descriptor_tree, tvb_RBRKT, tvb_previous_offset);",
          "3135:             break;",
          "3136:         case MEGACO_MEDIA_TOKEN:",
          "3138:             temp_offset = tvb_find_guint8(tvb, tvb_previous_offset,tvb_descriptors_end_offset, '{');",
          "3139:             tokenlen =  temp_offset - tvb_previous_offset+1;",
          "3140:             save_offset = tvb_previous_offset;",
          "3142:             tvb_previous_offset = megaco_tvb_skip_wsp(tvb, temp_offset +1);",
          "3143:             dissect_megaco_mediadescriptor(tvb, descriptor_tree, pinfo, tvb_RBRKT, tvb_previous_offset, save_offset, top_tree);",
          "3144:             break;",
          "3145:         case MEGACO_SIGNALS_TOKEN:",
          "3146:             dissect_megaco_signaldescriptor(tvb, pinfo, descriptor_tree, tvb_RBRKT, tvb_previous_offset, top_tree);",
          "3147:             break;",
          "3148:         case MEGACO_SERVICES_TOKEN:",
          "3149:             dissect_megaco_servicechangedescriptor(tvb, descriptor_tree, tvb_RBRKT, tvb_previous_offset);",
          "3150:             break;",
          "3151:         case MEGACO_STATS_TOKEN:",
          "3152:             dissect_megaco_statisticsdescriptor(tvb, descriptor_tree, tvb_RBRKT, tvb_previous_offset);",
          "3153:             break;",
          "3154:         case MEGACO_ERROR_TOKEN:",
          "3155:             dissect_megaco_errordescriptor(tvb, descriptor_tree, tvb_RBRKT, tvb_previous_offset);",
          "3156:             break;",
          "3157:         case MEGACO_EVENTS_TOKEN:",
          "3158:             dissect_megaco_eventsdescriptor(tvb, pinfo, descriptor_tree, tvb_RBRKT, tvb_previous_offset, top_tree);",
          "3159:             break;",
          "3160:         case MEGACO_AUDIT_TOKEN:",
          "3161:             dissect_megaco_auditdescriptor(tvb, descriptor_tree, pinfo, tvb_RBRKT, tvb_previous_offset);",
          "3162:             break;",
          "3163:         case MEGACO_DIGITMAP_TOKEN:",
          "3164:             dissect_megaco_digitmapdescriptor(tvb, descriptor_tree, tvb_RBRKT, tvb_previous_offset);",
          "3165:             break;",
          "3166:         case MEGACO_OE_TOKEN:",
          "3168:             dissect_megaco_observedeventsdescriptor(tvb, pinfo, descriptor_tree, tvb_RBRKT, tvb_previous_offset, top_tree);",
          "3169:             break;",
          "3170:         case MEGACO_TOPOLOGY_TOKEN:",
          "3171:             dissect_megaco_topologydescriptor(tvb, descriptor_tree, tvb_RBRKT, tvb_previous_offset);",
          "3172:             break;",
          "3173:         case MEGACO_PACKAGES_TOKEN:",
          "3174:             dissect_megaco_Packagesdescriptor(tvb, descriptor_tree, tvb_RBRKT, tvb_previous_offset);",
          "3175:             break;",
          "3176:         default:",
          "3177:             tokenlen =  (tvb_RBRKT+1) - tvb_previous_offset;",
          "3178:             proto_tree_add_expert(descriptor_tree, pinfo, &ei_megaco_no_descriptor, tvb, tvb_previous_offset, tokenlen);",
          "3179:             break;",
          "3180:         }",
          "3182:         tvb_current_offset      = tvb_find_guint8(tvb, tvb_RBRKT, tvb_len, ',');",
          "3183:         if (tvb_current_offset == -1 || tvb_descriptors_end_offset < tvb_current_offset){",
          "3184:             tvb_current_offset = tvb_descriptors_end_offset;",
          "3185:         }",
          "3186:         tvb_previous_offset = megaco_tvb_skip_wsp(tvb, tvb_current_offset+1);",
          "3187:         tvb_LBRKT = tvb_previous_offset;",
          "3188:         tvb_RBRKT = tvb_previous_offset;",
          "3190:     } while ( tvb_current_offset < tvb_descriptors_end_offset );",
          "3192: }",
          "3199:     proto_tree* text_tree;",
          "3203:     if (tree) {",
          "3204:         text_tree = proto_tree_add_subtree(tree, tvb, 0, -1, ett_megaco_raw_text, NULL, \"-------------- (RAW text output) ---------------\");",
          "3206:         do {",
          "3207:             linelen = tvb_find_line_end(tvb,tvb_linebegin,-1,&tvb_lineend,FALSE);",
          "3208:             proto_tree_add_format_wsp_text(text_tree, tvb, tvb_linebegin, linelen);",
          "3209:             tvb_linebegin = tvb_lineend;",
          "3210:         } while (tvb_offset_exists(tvb, tvb_lineend) && linelen > 0);",
          "3211:     }",
          "",
          "---------------",
          "--- Hunk 75 ---",
          "[Context before]",
          "3260: static gint megaco_tvb_skip_wsp(tvbuff_t* tvb, gint offset ){",
          "3261:     gint counter = offset;",
          "3267:     for(counter = offset; counter < end &&",
          "3270:     return (counter);",
          "3271: }",
          "3273: static gint megaco_tvb_skip_wsp_return(tvbuff_t* tvb, gint offset){",
          "3274:     gint counter = offset;",
          "3279:     for(counter = offset; counter > end &&",
          "3282:     counter++;",
          "3283:     return (counter);",
          "3284: }",
          "",
          "[Removed Lines]",
          "3262:     gint end,tvb_len;",
          "3263:     guint8 tempchar;",
          "3264:     tvb_len = tvb_reported_length(tvb);",
          "3265:     end = tvb_len;",
          "3268:         ((tempchar = tvb_get_guint8(tvb,counter)) == ' ' ||",
          "3269:         tempchar == '\\t' || tempchar == '\\n' || tempchar == '\\r'); counter++);",
          "3275:     gint end;",
          "3276:     guint8 tempchar;",
          "3277:     end = 0;",
          "3280:         ((tempchar = tvb_get_guint8(tvb,counter)) == ' ' ||",
          "3281:         tempchar == '\\t' || tempchar == '\\n' || tempchar == '\\r'); counter--);",
          "",
          "[Added Lines]",
          "3227:     gint end = tvb_reported_length(tvb);",
          "3230:         (g_ascii_isspace(tvb_get_guint8(tvb,counter))); counter++);",
          "3236:     gint end = 0;",
          "3239:         (g_ascii_isspace(tvb_get_guint8(tvb,counter))); counter--);",
          "",
          "---------------",
          "--- Hunk 76 ---",
          "[Context before]",
          "3312:     }",
          "3313: }",
          "3315: void",
          "3316: proto_register_megaco(void)",
          "3317: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3273: static void",
          "3274: megaco_fmt_content( gchar *result, guint32 context )",
          "3275: {",
          "3276:     switch(context)",
          "3277:     {",
          "3278:     case CHOOSE_CONTEXT:",
          "3279:     case ALL_CONTEXTS:",
          "3280:     case NULL_CONTEXT:",
          "3281:         g_strlcpy(result, val_to_str_const(context, megaco_context_vals, \"Unknown\"), ITEM_LABEL_LENGTH);",
          "3282:         break;",
          "3283:     default:",
          "3284:         g_snprintf( result, ITEM_LABEL_LENGTH, \"%d\", context);",
          "3285:     }",
          "3286: }",
          "",
          "---------------",
          "--- Hunk 77 ---",
          "[Context before]",
          "3329: #endif",
          "3330:         { &hf_megaco_command,",
          "3331:           { \"Command\", \"megaco.command\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3333:         { &hf_megaco_Context,",
          "3335:             \"Context ID of this message\", HFILL }},",
          "3336:         { &hf_megaco_digitmap_descriptor,",
          "3337:           { \"DigitMap Descriptor\", \"megaco.digitmap\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3338:             \"DigitMap Descriptor of the megaco Command\", HFILL }},",
          "3339:         { &hf_megaco_error_descriptor,",
          "3341:             \"Error Descriptor of the megaco Command\", HFILL }},",
          "3345:         { &hf_megaco_Event_Buffer_Control,",
          "3346:           { \"Event Buffer Control\", \"megaco.eventbuffercontrol\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3347:             \"Event Buffer Control in Termination State Descriptor\", HFILL }},",
          "3349:         { &hf_megaco_events_descriptor,",
          "3351:             \"Events Descriptor of the megaco Command\", HFILL }},",
          "3354:         { &hf_megaco_Local_descriptor,",
          "3356:             \"Local Descriptor in Media Descriptor\", HFILL }},",
          "3359:         { &hf_megaco_LocalControl_descriptor,",
          "3361:             \"Local Control Descriptor in Media Descriptor\", HFILL }},",
          "3364:         { &hf_megaco_media_descriptor,",
          "3366:             \"Media Descriptor of the megaco Command\", HFILL }},",
          "3368:         { &hf_megaco_modem_descriptor,",
          "3369:           { \"Modem Descriptor\", \"megaco.modem\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3370:             \"Modem Descriptor of the megaco Command\", HFILL }},",
          "",
          "[Removed Lines]",
          "3332:             \"Command of this message\", HFILL }},",
          "3334:           { \"Context\", \"megaco.context\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3340:           { \"ERROR Descriptor\", \"megaco.error\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3342:         { &hf_megaco_error_Frame,",
          "3343:           { \"ERROR frame\", \"megaco.error_frame\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3344:             \"Syntax error\", HFILL }},",
          "3348: #if 0",
          "3350:           { \"Events Descriptor\", \"megaco.events\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3352: #endif",
          "3353: #if 0",
          "3355:           { \"Local Descriptor\", \"megaco.localdescriptor\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3357: #endif",
          "3358: #if 0",
          "3360:           { \"Local Control Descriptor\", \"megaco.localcontroldescriptor\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3362: #endif",
          "3363: #if 0",
          "3365:           { \"Media Descriptor\", \"megaco.media\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3367: #endif",
          "",
          "[Added Lines]",
          "3305:             NULL, HFILL }},",
          "3306:         { &hf_megaco_command_optional,",
          "3307:           { \"Optional Command\", \"megaco.command_optional\", FT_NONE, BASE_NONE, NULL, 0x0,",
          "3308:             NULL, HFILL }},",
          "3309:         { &hf_megaco_wildcard_response,",
          "3310:           { \"Wildcarded response to a command\", \"megaco.wildcard_response\", FT_NONE, BASE_NONE, NULL, 0x0,",
          "3311:             NULL, HFILL }},",
          "3314:           { \"Context\", \"megaco.context\", FT_UINT32, BASE_CUSTOM, CF_FUNC(megaco_fmt_content), 0x0,",
          "3320:           { \"ERROR Descriptor\", \"megaco.error\", FT_NONE, BASE_NONE, NULL, 0x0,",
          "3322:         { &hf_megaco_error_code,",
          "3323:           { \"ERROR Code\", \"megaco.error_code\", FT_UINT32, BASE_DEC, VALS(MEGACO_error_code_vals), 0x0,",
          "3324:             \"Error Code of the megaco Command\", HFILL }},",
          "3325:         { &hf_megaco_error_string,",
          "3326:           { \"ERROR String\", \"megaco.error_string\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3327:             \"Error String of the megaco Command\", HFILL }},",
          "3332:           { \"Events Descriptor\", \"megaco.events\", FT_NONE, BASE_NONE, NULL, 0x0,",
          "3335:           { \"Local Descriptor\", \"megaco.localdescriptor\", FT_NONE, BASE_NONE, NULL, 0x0,",
          "3338:           { \"Local Control Descriptor\", \"megaco.localcontroldescriptor\", FT_NONE, BASE_NONE, NULL, 0x0,",
          "3341:           { \"Media Descriptor\", \"megaco.media\", FT_NONE, BASE_NONE, NULL, 0x0,",
          "",
          "---------------",
          "--- Hunk 78 ---",
          "[Context before]",
          "3374:         { &hf_megaco_multiplex_descriptor,",
          "3375:           { \"Multiplex Descriptor\", \"megaco.multiplex\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3376:             \"Multiplex Descriptor of the megaco Command\", HFILL }},",
          "3378:         { &hf_megaco_observedevents_descriptor,",
          "3380:             \"Observed Events Descriptor of the megaco Command\", HFILL }},",
          "3382:         { &hf_megaco_packages_descriptor,",
          "3383:           { \"Packages Descriptor\", \"megaco.packagesdescriptor\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3384:             NULL, HFILL }},",
          "",
          "[Removed Lines]",
          "3377: #if 0",
          "3379:           { \"Observed Events Descriptor\", \"megaco.observedevents\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3381: #endif",
          "",
          "[Added Lines]",
          "3353:           { \"Observed Events Descriptor\", \"megaco.observedevents\", FT_NONE, BASE_NONE, NULL, 0x0,",
          "",
          "---------------",
          "--- Hunk 79 ---",
          "[Context before]",
          "3400:           { \"h324/muxtbl_out\", \"megaco.h324_muxtbl_out\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3401:             NULL, HFILL }},",
          "3402:         { &hf_megaco_ds_dscp,",
          "3405:         { &hf_megaco_h324_h223capr,",
          "3406:           { \"h324/h223capr\", \"megaco.h324_h223capr\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3407:             NULL, HFILL }},",
          "",
          "[Removed Lines]",
          "3403:           { \"ds/dscp\", \"megaco.ds_dscp\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3404:             \"ds/dscp Differentiated Services Code Point\", HFILL }},",
          "",
          "[Added Lines]",
          "3376:           { \"Differentiated Services Code Point\", \"megaco.ds_dscp\", FT_UINT32, BASE_HEX|BASE_EXT_STRING, &dscp_vals_ext, 0x0,",
          "3377:             NULL, HFILL }},",
          "3378:         { &hf_megaco_gm_saf,",
          "3379:           { \"Remote Source Address Filtering\", \"megaco.gm_saf\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3380:             NULL, HFILL }},",
          "3381:         { &hf_megaco_gm_sam,",
          "3382:           { \"Remote Source Address Mask\", \"megaco.gm_sam\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3383:             NULL, HFILL }},",
          "3384:         { &hf_megaco_gm_spf,",
          "3385:           { \"Remote Source Port Filtering\", \"megaco.gm_spf\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3386:             NULL, HFILL }},",
          "3387:         { &hf_megaco_gm_spr,",
          "3388:           { \"Remote Source Port Range\", \"megaco.gm_spr\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3389:             NULL, HFILL }},",
          "3390:         { &hf_megaco_gm_esas,",
          "3391:           { \"Explicit Source Address Setting\", \"megaco.gm_esas\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3392:             NULL, HFILL }},",
          "3393:         { &hf_megaco_tman_pol,",
          "3394:           { \"Policing\", \"megaco.tman_pol\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3395:             NULL, HFILL }},",
          "3396:         { &hf_megaco_tman_sdr,",
          "3397:           { \"Sustainable Data Rate\", \"megaco.tman_sdr\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3398:             NULL, HFILL }},",
          "3399:         { &hf_megaco_tman_mbs,",
          "3400:           { \"Maximum Burst Rate\", \"megaco.tman_mbs\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3401:             NULL, HFILL }},",
          "3402:         { &hf_megaco_tman_pdr,",
          "3403:           { \"Peak Data Rate\", \"megaco.tman_pdr\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3404:             NULL, HFILL }},",
          "3405:         { &hf_megaco_tman_dvt,",
          "3406:           { \"Delay Variation Tolerance\", \"megaco.tman_dvt\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3407:             NULL, HFILL }},",
          "3408:         { &hf_megaco_ipdc_realm,",
          "3409:           { \"IP Realm Identifier\", \"megaco.ipdc_realm\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3410:             NULL, HFILL }},",
          "",
          "---------------",
          "--- Hunk 80 ---",
          "[Context before]",
          "3409:           { \"Reserve Value\", \"megaco.reservevalue\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3410:             \"Reserve Value on or off\", HFILL }},",
          "3411:         { &hf_megaco_requestid,",
          "3413:             \"RequestID in Events or Observedevents Descriptor\", HFILL }},",
          "3414: #if 0",
          "3415:         { &hf_megaco_servicechange_descriptor,",
          "",
          "[Removed Lines]",
          "3412:           { \"RequestID\", \"megaco.requestid\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "",
          "[Added Lines]",
          "3418:           { \"RequestID\", \"megaco.requestid\", FT_UINT32, BASE_DEC, NULL, 0x0,",
          "",
          "---------------",
          "--- Hunk 81 ---",
          "[Context before]",
          "3419:         { &hf_megaco_Service_State,",
          "3420:           { \"Service State\", \"megaco.servicestates\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3421:             \"Service States in Termination State Descriptor\", HFILL }},",
          "3423:         { &hf_megaco_signal_descriptor,",
          "3425:             \"Signal Descriptor of the megaco Command\", HFILL }},",
          "3427:         { &hf_megaco_statistics_descriptor,",
          "3429:             \"Statistics Descriptor of the megaco Command\", HFILL }},",
          "3430:         { &hf_megaco_streamid,",
          "3432:             \"StreamID in the Media Descriptor\", HFILL }},",
          "3433:         { &hf_megaco_termid,",
          "3434:           { \"Termination ID\", \"megaco.termid\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3435:             \"Termination ID of this Command\", HFILL }},",
          "3437:         { &hf_megaco_TerminationState_descriptor,",
          "3439:             \"Termination State Descriptor in Media Descriptor\", HFILL }},",
          "3441:         { &hf_megaco_topology_descriptor,",
          "3442:           { \"Topology Descriptor\", \"megaco.topology\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3443:             \"Topology Descriptor of the megaco Command\", HFILL }},",
          "",
          "[Removed Lines]",
          "3422: #if 0",
          "3424:           { \"Signal Descriptor\", \"megaco.signal\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3426: #endif",
          "3428:           { \"Statistics Descriptor\", \"megaco.statistics\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3431:           { \"StreamID\", \"megaco.streamid\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3436: #if 0",
          "3438:           { \"Termination State Descriptor\", \"megaco.terminationstate\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3440: #endif",
          "",
          "[Added Lines]",
          "3429:           { \"Signal Descriptor\", \"megaco.signal\", FT_NONE, BASE_NONE, NULL, 0x0,",
          "3432:           { \"Statistics Descriptor\", \"megaco.statistics\", FT_NONE, BASE_NONE, NULL, 0x0,",
          "3435:           { \"StreamID\", \"megaco.streamid\", FT_UINT32, BASE_DEC, NULL, 0x0,",
          "3441:           { \"Termination State Descriptor\", \"megaco.terminationstate\", FT_NONE, BASE_NONE, NULL, 0x0,",
          "",
          "---------------",
          "--- Hunk 82 ---",
          "[Context before]",
          "3445:           { \"Transaction\", \"megaco.transaction\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3446:             \"Message Originator\", HFILL }},",
          "3447:         { &hf_megaco_transid,",
          "3449:             \"Transaction ID of this message\", HFILL }},",
          "3450:         { &hf_megaco_mId,",
          "3451:           { \"MediagatewayID\", \"megaco.mId\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "",
          "[Removed Lines]",
          "3448:           { \"Transaction ID\", \"megaco.transid\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "",
          "[Added Lines]",
          "3450:           { \"Transaction ID\", \"megaco.transid\", FT_UINT32, BASE_DEC, NULL, 0x0,",
          "",
          "---------------",
          "--- Hunk 83 ---",
          "[Context before]",
          "3453:         { &hf_megaco_version,",
          "3454:           { \"Version\", \"megaco.version\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3455:             NULL, HFILL }},",
          "3457:         { &hf_megaco_h245,",
          "3459:             \"Embedded H.245 message\", HFILL }},",
          "3461:         { &hf_megaco_h223Capability,",
          "3462:           { \"h223Capability\", \"megaco.h245.h223Capability\", FT_NONE, BASE_NONE, NULL, 0,",
          "3463:             \"megaco.h245.H223Capability\", HFILL }},",
          "",
          "[Removed Lines]",
          "3456: #if 0",
          "3458:           { \"h245\", \"megaco.h245\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3460: #endif",
          "",
          "[Added Lines]",
          "3458:         { &hf_megaco_start,",
          "3459:           { \"Start token\", \"megaco.start_token\", FT_STRING, BASE_NONE, NULL, 0x0,",
          "3460:             NULL, HFILL }},",
          "3462:           { \"h245\", \"megaco.h245\", FT_NONE, BASE_NONE, NULL, 0x0,",
          "",
          "---------------",
          "--- Hunk 84 ---",
          "[Context before]",
          "3473:         &ett_megaco_context,",
          "3474:         &ett_megaco_command_line,",
          "3475:         &ett_megaco_descriptors,",
          "3476:         &ett_megaco_mediadescriptor,",
          "3477:         &ett_megaco_TerminationState,",
          "3478:         &ett_megaco_Remotedescriptor,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3479:         &ett_megaco_raw_text,",
          "3480:         &ett_megaco_error_descriptor,",
          "",
          "---------------",
          "--- Hunk 85 ---",
          "[Context before]",
          "3480:         &ett_megaco_LocalControldescriptor,",
          "3481:         &ett_megaco_auditdescriptor,",
          "3482:         &ett_megaco_eventsdescriptor,",
          "3483:         &ett_megaco_observedeventsdescriptor,",
          "3484:         &ett_megaco_observedevent,",
          "3485:         &ett_megaco_packagesdescriptor,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3488:         &ett_megaco_statisticsdescriptor,",
          "",
          "---------------",
          "--- Hunk 86 ---",
          "[Context before]",
          "3495:         { &ei_megaco_parse_error, { \"megaco.parse_error\", PI_MALFORMED, PI_ERROR, \"Parse error\", EXPFILL }},",
          "3496:         { &ei_megaco_error_descriptor_transaction_list, { \"megaco.error_descriptor_transaction_list.invalid\", PI_MALFORMED, PI_ERROR, \"Sorry, can't understand errorDescriptor / transactionList\", EXPFILL }},",
          "3497:         { &ei_megaco_audit_descriptor, { \"megaco.audit.malformed\", PI_MALFORMED, PI_ERROR, \"Badly constructed audit descriptor (no { )\", EXPFILL }},",
          "3498:     };",
          "3500:     module_t *megaco_module;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3504:         { &ei_megaco_signal_descriptor, { \"megaco.signal_descriptor.empty\", PI_PROTOCOL, PI_NOTE, \"Empty Signal Descriptor\", EXPFILL }},",
          "3505:         { &ei_megaco_no_command, { \"megaco.no_command\", PI_PROTOCOL, PI_WARN, \"No Command detectable\", EXPFILL }},",
          "3506:         { &ei_megaco_no_descriptor, { \"megaco.no_descriptor\", PI_PROTOCOL, PI_WARN, \"No Descriptor detectable\", EXPFILL }},",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "49633a28ae2a28d9514e2eaa472752e511801d44",
      "candidate_info": {
        "commit_hash": "49633a28ae2a28d9514e2eaa472752e511801d44",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/49633a28ae2a28d9514e2eaa472752e511801d44",
        "files": [
          "epan/dissectors/packet-megaco.c"
        ],
        "message": "Fix an infinite loop when the line has no length\n\nBug:10333\nChange-Id: Ia2dae94095dddf57e4c75792b5477b0eb37c29c9\nReviewed-on: https://code.wireshark.org/review/3345\nReviewed-by: Anders Broman <a.broman58@gmail.com>\nReviewed-on: https://code.wireshark.org/review/4423\nReviewed-by: Balint Reczey <balint@balintreczey.hu>\nTested-by: Balint Reczey <balint@balintreczey.hu>",
        "before_after_code_files": [
          "epan/dissectors/packet-megaco.c||epan/dissectors/packet-megaco.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-megaco.c||epan/dissectors/packet-megaco.c"
          ],
          "candidate": [
            "epan/dissectors/packet-megaco.c||epan/dissectors/packet-megaco.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-megaco.c||epan/dissectors/packet-megaco.c": [
          "File: epan/dissectors/packet-megaco.c -> epan/dissectors/packet-megaco.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3296:                             \"%s\", tvb_format_text_wsp(tvb,tvb_linebegin,",
          "3297:                                                       linelen));",
          "3298:         tvb_linebegin = tvb_lineend;",
          "3300: }",
          "",
          "[Removed Lines]",
          "3299:     } while ( tvb_lineend < tvb_len );",
          "",
          "[Added Lines]",
          "3299:     } while ( tvb_lineend < tvb_len && linelen > 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "feed72fdf9e7491c845551f546726e04c05ebba5",
      "candidate_info": {
        "commit_hash": "feed72fdf9e7491c845551f546726e04c05ebba5",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/feed72fdf9e7491c845551f546726e04c05ebba5",
        "files": [
          "epan/dissectors/packet-megaco.c"
        ],
        "message": "Fix an infinite loop when the line has no length\n\nBug:10333\nChange-Id: Ia2dae94095dddf57e4c75792b5477b0eb37c29c9\nReviewed-on: https://code.wireshark.org/review/3345\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-megaco.c||epan/dissectors/packet-megaco.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-megaco.c||epan/dissectors/packet-megaco.c"
          ],
          "candidate": [
            "epan/dissectors/packet-megaco.c||epan/dissectors/packet-megaco.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-megaco.c||epan/dissectors/packet-megaco.c": [
          "File: epan/dissectors/packet-megaco.c -> epan/dissectors/packet-megaco.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3294:                             \"%s\", tvb_format_text_wsp(tvb,tvb_linebegin,",
          "3295:                                                       linelen));",
          "3296:         tvb_linebegin = tvb_lineend;",
          "3298: }",
          "",
          "[Removed Lines]",
          "3297:     } while ( tvb_lineend < tvb_len );",
          "",
          "[Added Lines]",
          "3297:     } while ( tvb_lineend < tvb_len && linelen > 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6295e53eab0ab970d08a94972e3d099061988b2e",
      "candidate_info": {
        "commit_hash": "6295e53eab0ab970d08a94972e3d099061988b2e",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/6295e53eab0ab970d08a94972e3d099061988b2e",
        "files": [
          "epan/dissectors/packet-megaco.c"
        ],
        "message": "Fix an infinite loop when the line has no length\n\nBug:10333\nChange-Id: Ia2dae94095dddf57e4c75792b5477b0eb37c29c9\nReviewed-on: https://code.wireshark.org/review/3344\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-megaco.c||epan/dissectors/packet-megaco.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-megaco.c||epan/dissectors/packet-megaco.c"
          ],
          "candidate": [
            "epan/dissectors/packet-megaco.c||epan/dissectors/packet-megaco.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-megaco.c||epan/dissectors/packet-megaco.c": [
          "File: epan/dissectors/packet-megaco.c -> epan/dissectors/packet-megaco.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3244:                             \"%s\", tvb_format_text_wsp(tvb,tvb_linebegin,",
          "3245:                                                       linelen));",
          "3246:         tvb_linebegin = tvb_lineend;",
          "3248: }",
          "",
          "[Removed Lines]",
          "3247:     } while ( tvb_lineend < tvb_len );",
          "",
          "[Added Lines]",
          "3247:     } while ( tvb_lineend < tvb_len && linelen > 0);",
          "",
          "---------------"
        ]
      }
    }
  ]
}