{
  "cve_id": "CVE-2015-0216",
  "cve_desc": "access.php in the Lesson module in Moodle 2.8.x before 2.8.2 does not set the RISK_XSS bit for graders, which allows remote authenticated users to conduct cross-site scripting (XSS) attacks via crafted essay feedback.",
  "repo": "moodle/moodle",
  "patch_hash": "b9c86823c70a1cba20bca1c4b5b032ee1559e22d",
  "patch_info": {
    "commit_hash": "b9c86823c70a1cba20bca1c4b5b032ee1559e22d",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/b9c86823c70a1cba20bca1c4b5b032ee1559e22d",
    "files": [
      "mod/lesson/db/access.php",
      "mod/lesson/version.php"
    ],
    "message": "MDL-48034 mod_lesson: grade capability missing RISK_XSS",
    "before_after_code_files": [
      "mod/lesson/db/access.php||mod/lesson/db/access.php",
      "mod/lesson/version.php||mod/lesson/version.php"
    ]
  },
  "patch_diff": {
    "mod/lesson/db/access.php||mod/lesson/db/access.php": [
      "File: mod/lesson/db/access.php -> mod/lesson/db/access.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "56:     'mod/lesson:grade' => array(",
      "58:         'captype' => 'write',",
      "59:         'contextlevel' => CONTEXT_MODULE,",
      "60:         'archetypes' => array(",
      "",
      "[Removed Lines]",
      "57:         'riskbitmask' => RISK_SPAM,",
      "",
      "[Added Lines]",
      "57:         'riskbitmask' => RISK_SPAM | RISK_XSS,",
      "",
      "---------------"
    ],
    "mod/lesson/version.php||mod/lesson/version.php": [
      "File: mod/lesson/version.php -> mod/lesson/version.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: defined('MOODLE_INTERNAL') || die();",
      "28: $plugin->requires  = 2014110400;    // Requires this Moodle version",
      "29: $plugin->component = 'mod_lesson'; // Full name of the plugin (used for diagnostics)",
      "30: $plugin->cron      = 0;",
      "",
      "[Removed Lines]",
      "27: $plugin->version   = 2014122900;       // The current module version (Date: YYYYMMDDXX)",
      "",
      "[Added Lines]",
      "27: $plugin->version   = 2015010600;       // The current module version (Date: YYYYMMDDXX)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b69d512a906f9caf31a3a4f27c131454da50fc5c",
      "candidate_info": {
        "commit_hash": "b69d512a906f9caf31a3a4f27c131454da50fc5c",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/b69d512a906f9caf31a3a4f27c131454da50fc5c",
        "files": [
          "mod/lesson/db/access.php",
          "mod/lesson/grade.php",
          "mod/lesson/lang/en/lesson.php",
          "mod/lesson/lib.php",
          "mod/lesson/report.php",
          "mod/lesson/tabs.php",
          "mod/lesson/version.php"
        ],
        "message": "MDL-40286 mod_lesson: non-editing teacher should see Grade analysis",
        "before_after_code_files": [
          "mod/lesson/db/access.php||mod/lesson/db/access.php",
          "mod/lesson/grade.php||mod/lesson/grade.php",
          "mod/lesson/lang/en/lesson.php||mod/lesson/lang/en/lesson.php",
          "mod/lesson/lib.php||mod/lesson/lib.php",
          "mod/lesson/report.php||mod/lesson/report.php",
          "mod/lesson/tabs.php||mod/lesson/tabs.php",
          "mod/lesson/version.php||mod/lesson/version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mod/lesson/db/access.php||mod/lesson/db/access.php",
            "mod/lesson/version.php||mod/lesson/version.php"
          ],
          "candidate": [
            "mod/lesson/db/access.php||mod/lesson/db/access.php",
            "mod/lesson/version.php||mod/lesson/version.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/lesson/db/access.php||mod/lesson/db/access.php": [
          "File: mod/lesson/db/access.php -> mod/lesson/db/access.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:         )",
          "65:     ),",
          "67:     'mod/lesson:manage' => array(",
          "69:         'captype' => 'write',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68:     'mod/lesson:viewreports' => array(",
          "69:         'riskbitmask' => RISK_PERSONAL,",
          "70:         'captype' => 'read',",
          "71:         'contextlevel' => CONTEXT_MODULE,",
          "72:         'archetypes' => array(",
          "73:             'teacher' => CAP_ALLOW,",
          "74:             'editingteacher' => CAP_ALLOW,",
          "75:             'manager' => CAP_ALLOW",
          "76:         )",
          "77:     ),",
          "",
          "---------------"
        ],
        "mod/lesson/grade.php||mod/lesson/grade.php": [
          "File: mod/lesson/grade.php -> mod/lesson/grade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: $PAGE->set_url('/mod/lesson/grade.php', array('id'=>$cm->id));",
          "43:     redirect('report.php?id='.$cm->id);",
          "44: } else {",
          "45:     redirect('view.php?id='.$cm->id);",
          "",
          "[Removed Lines]",
          "42: if (has_capability('mod/lesson:edit', context_module::instance($cm->id))) {",
          "",
          "[Added Lines]",
          "42: if (has_capability('mod/lesson:viewreports', context_module::instance($cm->id))) {",
          "",
          "---------------"
        ],
        "mod/lesson/lang/en/lesson.php||mod/lesson/lang/en/lesson.php": [
          "File: mod/lesson/lang/en/lesson.php -> mod/lesson/lang/en/lesson.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "231: $string['lesson:edit'] = 'Edit a lesson activity';",
          "232: $string['lessonformating'] = 'Lesson formatting';",
          "233: $string['lesson:manage'] = 'Manage a lesson activity';",
          "234: $string['lessonmenu'] = 'Lesson menu';",
          "235: $string['lessonnotready'] = 'This lesson is not ready to be taken.  Please contact your {$a}.';",
          "236: $string['lessonnotready2'] = 'This lesson is not ready to be taken.';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "234: $string['lesson:viewreports'] = 'View lesson reports';",
          "",
          "---------------"
        ],
        "mod/lesson/lib.php||mod/lesson/lib.php": [
          "File: mod/lesson/lib.php -> mod/lesson/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "796:         $editnode->add(get_string('full', 'lesson'), $url);",
          "797:     }",
          "800:         $reportsnode = $lessonnode->add(get_string('reports', 'lesson'));",
          "801:         $url = new moodle_url('/mod/lesson/report.php', array('id'=>$PAGE->cm->id, 'action'=>'reportoverview'));",
          "802:         $reportsnode->add(get_string('overview', 'lesson'), $url);",
          "",
          "[Removed Lines]",
          "799:     if (has_capability('mod/lesson:manage', $PAGE->cm->context)) {",
          "",
          "[Added Lines]",
          "799:     if (has_capability('mod/lesson:viewreports', $PAGE->cm->context)) {",
          "",
          "---------------"
        ],
        "mod/lesson/report.php||mod/lesson/report.php": [
          "File: mod/lesson/report.php -> mod/lesson/report.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: require_login($course, false, $cm);",
          "40: $context = context_module::instance($cm->id);",
          "43: $ufields = user_picture::fields('u'); // These fields are enough",
          "44: $params = array(\"lessonid\" => $lesson->id);",
          "",
          "[Removed Lines]",
          "41: require_capability('mod/lesson:manage', $context);",
          "",
          "[Added Lines]",
          "41: require_capability('mod/lesson:viewreports', $context);",
          "",
          "---------------"
        ],
        "mod/lesson/tabs.php||mod/lesson/tabs.php": [
          "File: mod/lesson/tabs.php -> mod/lesson/tabs.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "51: $row[] = new tabobject('view', \"$CFG->wwwroot/mod/lesson/view.php?id=$cm->id\", get_string('preview', 'lesson'), get_string('previewlesson', 'lesson', format_string($lesson->name)));",
          "52: $row[] = new tabobject('edit', \"$CFG->wwwroot/mod/lesson/edit.php?id=$cm->id\", get_string('edit', 'lesson'), get_string('edita', 'moodle', format_string($lesson->name)));",
          "54: if (has_capability('mod/lesson:grade', $context)) {",
          "55:     $row[] = new tabobject('essay', \"$CFG->wwwroot/mod/lesson/essay.php?id=$cm->id\", get_string('manualgrading', 'lesson'));",
          "56: }",
          "",
          "[Removed Lines]",
          "53: $row[] = new tabobject('reports', \"$CFG->wwwroot/mod/lesson/report.php?id=$cm->id\", get_string('reports', 'lesson'), get_string('viewreports2', 'lesson', $attemptscount));",
          "",
          "[Added Lines]",
          "53: if (has_capability('mod/lesson:viewreports', $context)) {",
          "54:     $row[] = new tabobject('reports', \"$CFG->wwwroot/mod/lesson/report.php?id=$cm->id\", get_string('reports', 'lesson'),",
          "55:             get_string('viewreports2', 'lesson', $attemptscount));",
          "56: }",
          "",
          "---------------"
        ],
        "mod/lesson/version.php||mod/lesson/version.php": [
          "File: mod/lesson/version.php -> mod/lesson/version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: defined('MOODLE_INTERNAL') || die();",
          "28: $plugin->requires  = 2014110400;    // Requires this Moodle version",
          "29: $plugin->component = 'mod_lesson'; // Full name of the plugin (used for diagnostics)",
          "30: $plugin->cron      = 0;",
          "",
          "[Removed Lines]",
          "27: $plugin->version   = 2015010600;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "[Added Lines]",
          "27: $plugin->version   = 2015012300;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2e6b9f5c9bdaceea578511a645a0d12f5b3a72b4",
      "candidate_info": {
        "commit_hash": "2e6b9f5c9bdaceea578511a645a0d12f5b3a72b4",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/2e6b9f5c9bdaceea578511a645a0d12f5b3a72b4",
        "files": [
          "mod/lesson/db/install.xml",
          "mod/lesson/db/upgrade.php",
          "mod/lesson/version.php"
        ],
        "message": "MDL-48631 mod_lesson: tables 'grade' item have incorrect precision",
        "before_after_code_files": [
          "mod/lesson/db/upgrade.php||mod/lesson/db/upgrade.php",
          "mod/lesson/version.php||mod/lesson/version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mod/lesson/version.php||mod/lesson/version.php"
          ],
          "candidate": [
            "mod/lesson/version.php||mod/lesson/version.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/lesson/db/upgrade.php||mod/lesson/db/upgrade.php": [
          "File: mod/lesson/db/upgrade.php -> mod/lesson/db/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "125:         upgrade_mod_savepoint(true, 2014112300, 'lesson');",
          "126:     }",
          "127:     return true;",
          "128: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "128:     if ($oldversion < 2014122900) {",
          "131:         $table = new xmldb_table('lesson');",
          "132:         $field = new xmldb_field('grade', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, '0', 'conditions');",
          "135:         $dbman->change_field_precision($table, $field);",
          "138:         upgrade_mod_savepoint(true, 2014122900, 'lesson');",
          "139:     }",
          "",
          "---------------"
        ],
        "mod/lesson/version.php||mod/lesson/version.php": [
          "File: mod/lesson/version.php -> mod/lesson/version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: defined('MOODLE_INTERNAL') || die();",
          "28: $plugin->requires  = 2014110400;    // Requires this Moodle version",
          "29: $plugin->component = 'mod_lesson'; // Full name of the plugin (used for diagnostics)",
          "30: $plugin->cron      = 0;",
          "",
          "[Removed Lines]",
          "27: $plugin->version   = 2014112300;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "[Added Lines]",
          "27: $plugin->version   = 2014122900;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a2be9de182787610b71ac4c0c9a3f4c8bf79f486",
      "candidate_info": {
        "commit_hash": "a2be9de182787610b71ac4c0c9a3f4c8bf79f486",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/a2be9de182787610b71ac4c0c9a3f4c8bf79f486",
        "files": [
          "mod/lesson/classes/event/lesson_restarted.php",
          "mod/lesson/classes/event/lesson_resumed.php",
          "mod/lesson/lang/en/lesson.php",
          "mod/lesson/locallib.php",
          "mod/lesson/tests/events_test.php",
          "mod/lesson/version.php"
        ],
        "message": "Merge branch 'MDL-49430_m29v4' of git://github.com/sbourget/moodle\n\nConflicts:\n\tmod/lesson/version.php",
        "before_after_code_files": [
          "mod/lesson/classes/event/lesson_restarted.php||mod/lesson/classes/event/lesson_restarted.php",
          "mod/lesson/classes/event/lesson_resumed.php||mod/lesson/classes/event/lesson_resumed.php",
          "mod/lesson/lang/en/lesson.php||mod/lesson/lang/en/lesson.php",
          "mod/lesson/locallib.php||mod/lesson/locallib.php",
          "mod/lesson/tests/events_test.php||mod/lesson/tests/events_test.php",
          "mod/lesson/version.php||mod/lesson/version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mod/lesson/version.php||mod/lesson/version.php"
          ],
          "candidate": [
            "mod/lesson/version.php||mod/lesson/version.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/lesson/classes/event/lesson_restarted.php||mod/lesson/classes/event/lesson_restarted.php": [
          "File: mod/lesson/classes/event/lesson_restarted.php -> mod/lesson/classes/event/lesson_restarted.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "25: namespace mod_lesson\\event;",
          "27: defined('MOODLE_INTERNAL') || die();",
          "37: class lesson_restarted extends \\core\\event\\base {",
          "42:     protected function init() {",
          "43:         $this->data['objecttable'] = 'lesson';",
          "44:         $this->data['crud'] = 'u';",
          "45:         $this->data['edulevel'] = self::LEVEL_PARTICIPATING;",
          "46:     }",
          "53:     public static function get_name() {",
          "54:         return get_string('eventlessonrestarted', 'mod_lesson');",
          "55:     }",
          "62:     public function get_url() {",
          "63:         return new \\moodle_url('/mod/lesson/view.php', array('id' => $this->contextinstanceid));",
          "64:     }",
          "71:     public function get_description() {",
          "72:         return \"The user with id '$this->userid' abandoned their previous incomplete attempt \".",
          "73:                \"and started a new attempt on the lesson with course module id '$this->contextinstanceid'.\";",
          "74:     }",
          "75: }",
          "",
          "---------------"
        ],
        "mod/lesson/classes/event/lesson_resumed.php||mod/lesson/classes/event/lesson_resumed.php": [
          "File: mod/lesson/classes/event/lesson_resumed.php -> mod/lesson/classes/event/lesson_resumed.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "25: namespace mod_lesson\\event;",
          "27: defined('MOODLE_INTERNAL') || die();",
          "37: class lesson_resumed extends \\core\\event\\base {",
          "42:     protected function init() {",
          "43:         $this->data['objecttable'] = 'lesson';",
          "44:         $this->data['crud'] = 'u';",
          "45:         $this->data['edulevel'] = self::LEVEL_PARTICIPATING;",
          "46:     }",
          "53:     public static function get_name() {",
          "54:         return get_string('eventlessonresumed', 'mod_lesson');",
          "55:     }",
          "62:     public function get_url() {",
          "63:         return new \\moodle_url('/mod/lesson/view.php', array('id' => $this->contextinstanceid));",
          "64:     }",
          "71:     public function get_description() {",
          "72:         return \"The user with id '$this->userid' resumed their previous incomplete attempt on\".",
          "73:                \" the lesson with course module id '$this->contextinstanceid'.\";",
          "74:     }",
          "75: }",
          "",
          "---------------"
        ],
        "mod/lesson/lang/en/lesson.php||mod/lesson/lang/en/lesson.php": [
          "File: mod/lesson/lang/en/lesson.php -> mod/lesson/lang/en/lesson.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "182: $string['eventhighscoreadded'] = 'Highscore added';",
          "183: $string['eventhighscoresviewed'] = 'Highscores viewed';",
          "184: $string['eventlessonended'] = 'Lesson ended';",
          "185: $string['eventlessonstarted'] = 'Lesson started';",
          "186: $string['eventpagecreated'] = 'Page created';",
          "187: $string['eventpagemoved'] = 'Page moved';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "185: $string['eventlessonrestarted'] = 'Lesson restarted';",
          "186: $string['eventlessonresumed'] = 'Lesson resumed';",
          "",
          "---------------"
        ],
        "mod/lesson/locallib.php||mod/lesson/locallib.php": [
          "File: mod/lesson/locallib.php -> mod/lesson/locallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1267:     public function update_timer($restart=false, $continue=false, $endreached =false) {",
          "1268:         global $USER, $DB;",
          "1271:         $params = array(\"lessonid\" => $this->properties->id, \"userid\" => $USER->id);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1270:         $cm = get_coursemodule_from_instance('lesson', $this->properties->id, $this->properties->course);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1279:             if ($continue) {",
          "1281:                 $timer->starttime = time() - ($timer->lessontime - $timer->starttime);",
          "1282:             } else {",
          "1284:                 $timer->starttime = time();",
          "1285:             }",
          "1286:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1287:                 $event = \\mod_lesson\\event\\lesson_resumed::create(array(",
          "1288:                     'objectid' => $this->properties->id,",
          "1289:                     'context' => context_module::instance($cm->id),",
          "1290:                     'courseid' => $this->properties->course",
          "1291:                 ));",
          "1292:                 $event->trigger();",
          "1299:                 $event = \\mod_lesson\\event\\lesson_restarted::create(array(",
          "1300:                     'objectid' => $this->properties->id,",
          "1301:                     'context' => context_module::instance($cm->id),",
          "1302:                     'courseid' => $this->properties->course",
          "1303:                 ));",
          "1304:                 $event->trigger();",
          "",
          "---------------"
        ],
        "mod/lesson/tests/events_test.php||mod/lesson/tests/events_test.php": [
          "File: mod/lesson/tests/events_test.php -> mod/lesson/tests/events_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "289:         $this->assertEventContextNotUsed($event);",
          "290:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "295:     public function test_lesson_restarted() {",
          "298:         $this->lesson->start_timer();",
          "300:         $sink = $this->redirectEvents();",
          "301:         $this->lesson->update_timer(true);",
          "302:         $events = $sink->get_events();",
          "303:         $event = reset($events);",
          "306:         $this->assertInstanceOf('\\mod_lesson\\event\\lesson_restarted', $event);",
          "307:         $this->assertEquals(context_module::instance($this->lesson->properties()->cmid), $event->get_context());",
          "308:         $expected = array($this->course->id, 'lesson', 'start', 'view.php?id=' . $this->lesson->properties()->cmid,",
          "309:             $this->lesson->properties()->id, $this->lesson->properties()->cmid);",
          "310:         $this->assertEventContextNotUsed($event);",
          "311:         $this->assertDebuggingNotCalled();",
          "313:     }",
          "318:     public function test_lesson_resumed() {",
          "321:         $this->lesson->start_timer();",
          "323:         $sink = $this->redirectEvents();",
          "324:         $this->lesson->update_timer(true, true);",
          "325:         $events = $sink->get_events();",
          "326:         $event = reset($events);",
          "329:         $this->assertInstanceOf('\\mod_lesson\\event\\lesson_resumed', $event);",
          "330:         $this->assertEquals(context_module::instance($this->lesson->properties()->cmid), $event->get_context());",
          "331:         $expected = array($this->course->id, 'lesson', 'start', 'view.php?id=' . $this->lesson->properties()->cmid,",
          "332:             $this->lesson->properties()->id, $this->lesson->properties()->cmid);",
          "333:         $this->assertEventContextNotUsed($event);",
          "334:         $this->assertDebuggingNotCalled();",
          "336:     }",
          "",
          "---------------"
        ],
        "mod/lesson/version.php||mod/lesson/version.php": [
          "File: mod/lesson/version.php -> mod/lesson/version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: defined('MOODLE_INTERNAL') || die();",
          "28: $plugin->requires  = 2014110400;    // Requires this Moodle version",
          "29: $plugin->component = 'mod_lesson'; // Full name of the plugin (used for diagnostics)",
          "30: $plugin->cron      = 0;",
          "",
          "[Removed Lines]",
          "27: $plugin->version   = 2015032400;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "[Added Lines]",
          "27: $plugin->version   = 2015032401;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e0f7b963475929fec76d1e76335a52d625cf8438",
      "candidate_info": {
        "commit_hash": "e0f7b963475929fec76d1e76335a52d625cf8438",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/e0f7b963475929fec76d1e76335a52d625cf8438",
        "files": [
          "mod/lesson/classes/event/lesson_restarted.php",
          "mod/lesson/classes/event/lesson_resumed.php",
          "mod/lesson/lang/en/lesson.php",
          "mod/lesson/locallib.php",
          "mod/lesson/tests/events_test.php",
          "mod/lesson/version.php"
        ],
        "message": "MDL-49430 Lesson: Add restarted and resumed events",
        "before_after_code_files": [
          "mod/lesson/classes/event/lesson_restarted.php||mod/lesson/classes/event/lesson_restarted.php",
          "mod/lesson/classes/event/lesson_resumed.php||mod/lesson/classes/event/lesson_resumed.php",
          "mod/lesson/lang/en/lesson.php||mod/lesson/lang/en/lesson.php",
          "mod/lesson/locallib.php||mod/lesson/locallib.php",
          "mod/lesson/tests/events_test.php||mod/lesson/tests/events_test.php",
          "mod/lesson/version.php||mod/lesson/version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mod/lesson/version.php||mod/lesson/version.php"
          ],
          "candidate": [
            "mod/lesson/version.php||mod/lesson/version.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/lesson/classes/event/lesson_restarted.php||mod/lesson/classes/event/lesson_restarted.php": [
          "File: mod/lesson/classes/event/lesson_restarted.php -> mod/lesson/classes/event/lesson_restarted.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "25: namespace mod_lesson\\event;",
          "27: defined('MOODLE_INTERNAL') || die();",
          "37: class lesson_restarted extends \\core\\event\\base {",
          "42:     protected function init() {",
          "43:         $this->data['objecttable'] = 'lesson';",
          "44:         $this->data['crud'] = 'u';",
          "45:         $this->data['edulevel'] = self::LEVEL_PARTICIPATING;",
          "46:     }",
          "53:     public static function get_name() {",
          "54:         return get_string('eventlessonrestarted', 'mod_lesson');",
          "55:     }",
          "62:     public function get_url() {",
          "63:         return new \\moodle_url('/mod/lesson/view.php', array('id' => $this->contextinstanceid));",
          "64:     }",
          "71:     public function get_description() {",
          "72:         return \"The user with id '$this->userid' abandoned their previous incomplete attempt \".",
          "73:                \"and started a new attempt on the lesson with course module id '$this->contextinstanceid'.\";",
          "74:     }",
          "75: }",
          "",
          "---------------"
        ],
        "mod/lesson/classes/event/lesson_resumed.php||mod/lesson/classes/event/lesson_resumed.php": [
          "File: mod/lesson/classes/event/lesson_resumed.php -> mod/lesson/classes/event/lesson_resumed.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "25: namespace mod_lesson\\event;",
          "27: defined('MOODLE_INTERNAL') || die();",
          "37: class lesson_resumed extends \\core\\event\\base {",
          "42:     protected function init() {",
          "43:         $this->data['objecttable'] = 'lesson';",
          "44:         $this->data['crud'] = 'u';",
          "45:         $this->data['edulevel'] = self::LEVEL_PARTICIPATING;",
          "46:     }",
          "53:     public static function get_name() {",
          "54:         return get_string('eventlessonresumed', 'mod_lesson');",
          "55:     }",
          "62:     public function get_url() {",
          "63:         return new \\moodle_url('/mod/lesson/view.php', array('id' => $this->contextinstanceid));",
          "64:     }",
          "71:     public function get_description() {",
          "72:         return \"The user with id '$this->userid' resumed their previous incomplete attempt on\".",
          "73:                \" the lesson with course module id '$this->contextinstanceid'.\";",
          "74:     }",
          "75: }",
          "",
          "---------------"
        ],
        "mod/lesson/lang/en/lesson.php||mod/lesson/lang/en/lesson.php": [
          "File: mod/lesson/lang/en/lesson.php -> mod/lesson/lang/en/lesson.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "179: $string['eventhighscoreadded'] = 'Highscore added';",
          "180: $string['eventhighscoresviewed'] = 'Highscores viewed';",
          "181: $string['eventlessonended'] = 'Lesson ended';",
          "182: $string['eventlessonstarted'] = 'Lesson started';",
          "183: $string['eventpagecreated'] = 'Page created';",
          "184: $string['eventpageupdated'] = 'Page updated';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "182: $string['eventlessonrestarted'] = 'Lesson restarted';",
          "183: $string['eventlessonresumed'] = 'Lesson resumed';",
          "",
          "---------------"
        ],
        "mod/lesson/locallib.php||mod/lesson/locallib.php": [
          "File: mod/lesson/locallib.php -> mod/lesson/locallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1257:     public function update_timer($restart=false, $continue=false, $endreached =false) {",
          "1258:         global $USER, $DB;",
          "1261:         $params = array(\"lessonid\" => $this->properties->id, \"userid\" => $USER->id);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1260:         $cm = get_coursemodule_from_instance('lesson', $this->properties->id, $this->properties->course);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1269:             if ($continue) {",
          "1271:                 $timer->starttime = time() - ($timer->lessontime - $timer->starttime);",
          "1272:             } else {",
          "1274:                 $timer->starttime = time();",
          "1275:             }",
          "1276:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1277:                 $event = \\mod_lesson\\event\\lesson_resumed::create(array(",
          "1278:                     'objectid' => $this->properties->id,",
          "1279:                     'context' => context_module::instance($cm->id),",
          "1280:                     'courseid' => $this->properties->course",
          "1281:                 ));",
          "1282:                 $event->trigger();",
          "1289:                 $event = \\mod_lesson\\event\\lesson_restarted::create(array(",
          "1290:                     'objectid' => $this->properties->id,",
          "1291:                     'context' => context_module::instance($cm->id),",
          "1292:                     'courseid' => $this->properties->course",
          "1293:                 ));",
          "1294:                 $event->trigger();",
          "",
          "---------------"
        ],
        "mod/lesson/tests/events_test.php||mod/lesson/tests/events_test.php": [
          "File: mod/lesson/tests/events_test.php -> mod/lesson/tests/events_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "259:         $this->assertEventContextNotUsed($event);",
          "260:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "265:     public function test_lesson_restarted() {",
          "268:         $this->lesson->start_timer();",
          "270:         $sink = $this->redirectEvents();",
          "271:         $this->lesson->update_timer(true);",
          "272:         $events = $sink->get_events();",
          "273:         $event = reset($events);",
          "276:         $this->assertInstanceOf('\\mod_lesson\\event\\lesson_restarted', $event);",
          "277:         $this->assertEquals(context_module::instance($this->lesson->properties()->cmid), $event->get_context());",
          "278:         $expected = array($this->course->id, 'lesson', 'start', 'view.php?id=' . $this->lesson->properties()->cmid,",
          "279:             $this->lesson->properties()->id, $this->lesson->properties()->cmid);",
          "280:         $this->assertEventContextNotUsed($event);",
          "281:         $this->assertDebuggingNotCalled();",
          "283:     }",
          "288:     public function test_lesson_resumed() {",
          "291:         $this->lesson->start_timer();",
          "293:         $sink = $this->redirectEvents();",
          "294:         $this->lesson->update_timer(true, true);",
          "295:         $events = $sink->get_events();",
          "296:         $event = reset($events);",
          "299:         $this->assertInstanceOf('\\mod_lesson\\event\\lesson_resumed', $event);",
          "300:         $this->assertEquals(context_module::instance($this->lesson->properties()->cmid), $event->get_context());",
          "301:         $expected = array($this->course->id, 'lesson', 'start', 'view.php?id=' . $this->lesson->properties()->cmid,",
          "302:             $this->lesson->properties()->id, $this->lesson->properties()->cmid);",
          "303:         $this->assertEventContextNotUsed($event);",
          "304:         $this->assertDebuggingNotCalled();",
          "306:     }",
          "",
          "---------------"
        ],
        "mod/lesson/version.php||mod/lesson/version.php": [
          "File: mod/lesson/version.php -> mod/lesson/version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: defined('MOODLE_INTERNAL') || die();",
          "28: $plugin->requires  = 2014110400;    // Requires this Moodle version",
          "29: $plugin->component = 'mod_lesson'; // Full name of the plugin (used for diagnostics)",
          "30: $plugin->cron      = 0;",
          "",
          "[Removed Lines]",
          "27: $plugin->version   = 2015030401;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "[Added Lines]",
          "27: $plugin->version   = 2015031800;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8101328a6993d9a0dcf76c15f81f21fdf112d3ae",
      "candidate_info": {
        "commit_hash": "8101328a6993d9a0dcf76c15f81f21fdf112d3ae",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/8101328a6993d9a0dcf76c15f81f21fdf112d3ae",
        "files": [
          "mod/lesson/classes/event/question_answered.php",
          "mod/lesson/classes/event/question_viewed.php",
          "mod/lesson/lang/en/lesson.php",
          "mod/lesson/locallib.php",
          "mod/lesson/pagetypes/essay.php",
          "mod/lesson/pagetypes/matching.php",
          "mod/lesson/pagetypes/multichoice.php",
          "mod/lesson/pagetypes/numerical.php",
          "mod/lesson/pagetypes/shortanswer.php",
          "mod/lesson/pagetypes/truefalse.php",
          "mod/lesson/version.php"
        ],
        "message": "MDL-48883 Lesson: Add question viewed and answered events",
        "before_after_code_files": [
          "mod/lesson/classes/event/question_answered.php||mod/lesson/classes/event/question_answered.php",
          "mod/lesson/classes/event/question_viewed.php||mod/lesson/classes/event/question_viewed.php",
          "mod/lesson/lang/en/lesson.php||mod/lesson/lang/en/lesson.php",
          "mod/lesson/locallib.php||mod/lesson/locallib.php",
          "mod/lesson/pagetypes/essay.php||mod/lesson/pagetypes/essay.php",
          "mod/lesson/pagetypes/matching.php||mod/lesson/pagetypes/matching.php",
          "mod/lesson/pagetypes/multichoice.php||mod/lesson/pagetypes/multichoice.php",
          "mod/lesson/pagetypes/numerical.php||mod/lesson/pagetypes/numerical.php",
          "mod/lesson/pagetypes/shortanswer.php||mod/lesson/pagetypes/shortanswer.php",
          "mod/lesson/pagetypes/truefalse.php||mod/lesson/pagetypes/truefalse.php",
          "mod/lesson/version.php||mod/lesson/version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mod/lesson/version.php||mod/lesson/version.php"
          ],
          "candidate": [
            "mod/lesson/version.php||mod/lesson/version.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/lesson/classes/event/question_answered.php||mod/lesson/classes/event/question_answered.php": [
          "File: mod/lesson/classes/event/question_answered.php -> mod/lesson/classes/event/question_answered.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "25: namespace mod_lesson\\event;",
          "27: defined('MOODLE_INTERNAL') || die();",
          "43: class question_answered extends \\core\\event\\base {",
          "48:     protected function init() {",
          "49:         $this->data['objecttable'] = 'lesson_pages';",
          "50:         $this->data['crud'] = 'c';",
          "51:         $this->data['edulevel'] = self::LEVEL_PARTICIPATING;",
          "52:     }",
          "59:     public static function get_name() {",
          "60:         return get_string('eventquestionanswered', 'mod_lesson');",
          "61:     }",
          "68:     public function get_url() {",
          "69:         return new \\moodle_url('/mod/lesson/view.php', array('id' => $this->contextinstanceid, 'pageid' => $this->objectid));",
          "70:     }",
          "77:     public function get_description() {",
          "78:         return \"The user with id '$this->userid' has answered the \".$this->other['pagetype'] .",
          "79:             \" question with id '$this->objectid' in the lesson activity with course module id '$this->contextinstanceid'.\";",
          "80:     }",
          "88:     protected function validate_data() {",
          "89:         parent::validate_data();",
          "91:         if (!$this->contextlevel === CONTEXT_MODULE) {",
          "92:             throw new \\coding_exception('Context level must be CONTEXT_MODULE.');",
          "93:         }",
          "94:         if (!isset($this->other['pagetype'])) {",
          "95:             throw new \\coding_exception('The \\'pagetype\\' value must be set in other.');",
          "96:         }",
          "97:     }",
          "98: }",
          "",
          "---------------"
        ],
        "mod/lesson/classes/event/question_viewed.php||mod/lesson/classes/event/question_viewed.php": [
          "File: mod/lesson/classes/event/question_viewed.php -> mod/lesson/classes/event/question_viewed.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "25: namespace mod_lesson\\event;",
          "27: defined('MOODLE_INTERNAL') || die();",
          "43: class question_viewed extends \\core\\event\\base {",
          "48:     protected function init() {",
          "49:         $this->data['objecttable'] = 'lesson_pages';",
          "50:         $this->data['crud'] = 'r';",
          "51:         $this->data['edulevel'] = self::LEVEL_PARTICIPATING;",
          "52:     }",
          "59:     public static function get_name() {",
          "60:         return get_string('eventquestionviewed', 'mod_lesson');",
          "61:     }",
          "68:     public function get_url() {",
          "69:         return new \\moodle_url('/mod/lesson/view.php', array('id' => $this->contextinstanceid, 'pageid' => $this->objectid));",
          "70:     }",
          "77:     public function get_description() {",
          "78:         return \"The user with id '$this->userid' has viewed the \".$this->other['pagetype'] .",
          "79:             \" question with id '$this->objectid' in the lesson activity with course module id '$this->contextinstanceid'.\";",
          "80:     }",
          "88:     protected function validate_data() {",
          "89:         parent::validate_data();",
          "91:         if (!$this->contextlevel === CONTEXT_MODULE) {",
          "92:             throw new \\coding_exception('Context level must be CONTEXT_MODULE.');",
          "93:         }",
          "94:         if (!isset($this->other['pagetype'])) {",
          "95:             throw new \\coding_exception('The \\'pagetype\\' value must be set in other.');",
          "96:         }",
          "97:     }",
          "98: }",
          "",
          "---------------"
        ],
        "mod/lesson/lang/en/lesson.php||mod/lesson/lang/en/lesson.php": [
          "File: mod/lesson/lang/en/lesson.php -> mod/lesson/lang/en/lesson.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "181: $string['eventhighscoresviewed'] = 'Highscores viewed';",
          "182: $string['eventlessonended'] = 'Lesson ended';",
          "183: $string['eventlessonstarted'] = 'Lesson started';",
          "184: $string['false'] = 'False';",
          "185: $string['fileformat'] = 'File format';",
          "186: $string['finish'] = 'Finish';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "184: $string['eventquestionanswered'] = 'Question answered';",
          "185: $string['eventquestionviewed'] = 'Question viewed';",
          "",
          "---------------"
        ],
        "mod/lesson/locallib.php||mod/lesson/locallib.php": [
          "File: mod/lesson/locallib.php -> mod/lesson/locallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1995:     final public function record_attempt($context) {",
          "",
          "[Removed Lines]",
          "1996:         global $DB, $USER, $OUTPUT;",
          "",
          "[Added Lines]",
          "1996:         global $DB, $USER, $OUTPUT, $PAGE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2034:                 if (!$userisreviewing) {",
          "2035:                     if ($this->lesson->retake || (!$this->lesson->retake && $nretakes == 0)) {",
          "2037:                     }",
          "2038:                 }",
          "",
          "[Removed Lines]",
          "2036:                         $DB->insert_record(\"lesson_attempts\", $attempt);",
          "",
          "[Added Lines]",
          "2036:                         $attempt->id = $DB->insert_record(\"lesson_attempts\", $attempt);",
          "2038:                         $eventparams = array(",
          "2039:                             'context' => context_module::instance($PAGE->cm->id),",
          "2040:                             'objectid' => $this->properties->id,",
          "2041:                             'other' => array(",
          "2042:                                 'pagetype' => $this->get_typestring()",
          "2043:                                 )",
          "2044:                             );",
          "2045:                         $event = \\mod_lesson\\event\\question_answered::create($eventparams);",
          "2046:                         $event->add_record_snapshot('lesson_attempts', $attempt);",
          "2047:                         $event->trigger();",
          "",
          "---------------"
        ],
        "mod/lesson/pagetypes/essay.php||mod/lesson/pagetypes/essay.php": [
          "File: mod/lesson/pagetypes/essay.php -> mod/lesson/pagetypes/essay.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:             $data->answer = $essayinfo->answer;",
          "78:         }",
          "79:         $mform->set_data($data);",
          "80:         return $mform->display();",
          "81:     }",
          "82:     public function create_answers($properties) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:         $eventparams = array(",
          "83:             'context' => context_module::instance($PAGE->cm->id),",
          "84:             'objectid' => $this->properties->id,",
          "85:             'other' => array(",
          "86:                     'pagetype' => $this->get_typestring()",
          "87:                 )",
          "88:             );",
          "90:         $event = \\mod_lesson\\event\\question_viewed::create($eventparams);",
          "91:         $event->trigger();",
          "",
          "---------------"
        ],
        "mod/lesson/pagetypes/matching.php||mod/lesson/pagetypes/matching.php": [
          "File: mod/lesson/pagetypes/matching.php -> mod/lesson/pagetypes/matching.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:         $data->id = $PAGE->cm->id;",
          "55:         $data->pageid = $this->properties->id;",
          "56:         $mform->set_data($data);",
          "57:         return $mform->display();",
          "58:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59:         $eventparams = array(",
          "60:             'context' => context_module::instance($PAGE->cm->id),",
          "61:             'objectid' => $this->properties->id,",
          "62:             'other' => array(",
          "63:                     'pagetype' => $this->get_typestring()",
          "64:                 )",
          "65:             );",
          "67:         $event = \\mod_lesson\\event\\question_viewed::create($eventparams);",
          "68:         $event->trigger();",
          "",
          "---------------"
        ],
        "mod/lesson/pagetypes/multichoice.php||mod/lesson/pagetypes/multichoice.php": [
          "File: mod/lesson/pagetypes/multichoice.php -> mod/lesson/pagetypes/multichoice.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:         $data->id = $PAGE->cm->id;",
          "100:         $data->pageid = $this->properties->id;",
          "101:         $mform->set_data($data);",
          "102:         return $mform->display();",
          "103:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "104:         $eventparams = array(",
          "105:             'context' => context_module::instance($PAGE->cm->id),",
          "106:             'objectid' => $this->properties->id,",
          "107:             'other' => array(",
          "108:                     'pagetype' => $this->get_typestring()",
          "109:                 )",
          "110:             );",
          "112:         $event = \\mod_lesson\\event\\question_viewed::create($eventparams);",
          "113:         $event->trigger();",
          "",
          "---------------"
        ],
        "mod/lesson/pagetypes/numerical.php||mod/lesson/pagetypes/numerical.php": [
          "File: mod/lesson/pagetypes/numerical.php -> mod/lesson/pagetypes/numerical.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:             $data->answer = s($attempt->useranswer);",
          "58:         }",
          "59:         $mform->set_data($data);",
          "60:         return $mform->display();",
          "61:     }",
          "62:     public function check_answer() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62:         $eventparams = array(",
          "63:             'context' => context_module::instance($PAGE->cm->id),",
          "64:             'objectid' => $this->properties->id,",
          "65:             'other' => array(",
          "66:                     'pagetype' => $this->get_typestring()",
          "67:                 )",
          "68:             );",
          "70:         $event = \\mod_lesson\\event\\question_viewed::create($eventparams);",
          "71:         $event->trigger();",
          "",
          "---------------"
        ],
        "mod/lesson/pagetypes/shortanswer.php||mod/lesson/pagetypes/shortanswer.php": [
          "File: mod/lesson/pagetypes/shortanswer.php -> mod/lesson/pagetypes/shortanswer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:             $data->answer = s($attempt->useranswer);",
          "58:         }",
          "59:         $mform->set_data($data);",
          "60:         return $mform->display();",
          "61:     }",
          "62:     public function check_answer() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62:         $eventparams = array(",
          "63:             'context' => context_module::instance($PAGE->cm->id),",
          "64:             'objectid' => $this->properties->id,",
          "65:             'other' => array(",
          "66:                     'pagetype' => $this->get_typestring()",
          "67:                 )",
          "68:             );",
          "70:         $event = \\mod_lesson\\event\\question_viewed::create($eventparams);",
          "71:         $event->trigger();",
          "",
          "---------------"
        ],
        "mod/lesson/pagetypes/truefalse.php||mod/lesson/pagetypes/truefalse.php": [
          "File: mod/lesson/pagetypes/truefalse.php -> mod/lesson/pagetypes/truefalse.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:         $data->id = $PAGE->cm->id;",
          "62:         $data->pageid = $this->properties->id;",
          "63:         $mform->set_data($data);",
          "64:         return $mform->display();",
          "65:     }",
          "66:     public function check_answer() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66:         $eventparams = array(",
          "67:             'context' => context_module::instance($PAGE->cm->id),",
          "68:             'objectid' => $this->properties->id,",
          "69:             'other' => array(",
          "70:                     'pagetype' => $this->get_typestring()",
          "71:                 )",
          "72:             );",
          "74:         $event = \\mod_lesson\\event\\question_viewed::create($eventparams);",
          "75:         $event->trigger();",
          "",
          "---------------"
        ],
        "mod/lesson/version.php||mod/lesson/version.php": [
          "File: mod/lesson/version.php -> mod/lesson/version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: defined('MOODLE_INTERNAL') || die();",
          "28: $plugin->requires  = 2014110400;    // Requires this Moodle version",
          "29: $plugin->component = 'mod_lesson'; // Full name of the plugin (used for diagnostics)",
          "30: $plugin->cron      = 0;",
          "",
          "[Removed Lines]",
          "27: $plugin->version   = 2015012300;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "[Added Lines]",
          "27: $plugin->version   = 2015012301;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "---------------"
        ]
      }
    }
  ]
}