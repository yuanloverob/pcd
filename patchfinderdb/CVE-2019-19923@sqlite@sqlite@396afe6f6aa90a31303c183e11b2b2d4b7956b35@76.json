{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8fc4a11c94a7ef822d69f6a171583a3a3327f72a",
      "candidate_info": {
        "commit_hash": "8fc4a11c94a7ef822d69f6a171583a3a3327f72a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8fc4a11c94a7ef822d69f6a171583a3a3327f72a",
        "files": [
          "ext/fts3/fts3_unicode2.c",
          "ext/fts3/unicode/mkunicode.tcl",
          "ext/fts5/fts5_unicode2.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix harmless compiler warnings in the unicode2 logic of FTS3 and FTS5.\n\nFossilOrigin-Name: 703029ac6d24860230a8c30fcbf5e7e1da619e84f1cc9b9e65ebc74879a184d2",
        "before_after_code_files": [
          "ext/fts3/fts3_unicode2.c||ext/fts3/fts3_unicode2.c",
          "ext/fts3/unicode/mkunicode.tcl||ext/fts3/unicode/mkunicode.tcl",
          "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_unicode2.c||ext/fts3/fts3_unicode2.c": [
          "File: ext/fts3/fts3_unicode2.c -> ext/fts3/fts3_unicode2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "178:     62830, 62890, 62924, 62974, 63032, 63050, 63082, 63118,",
          "179:     63182, 63242, 63274, 63310, 63368, 63390,",
          "180:   };",
          "183:     '\\0',      'a',       'c',       'e',       'i',       'n',",
          "184:     'o',       'u',       'y',       'y',       'a',       'c',",
          "185:     'd',       'e',       'e',       'g',       'h',       'i',",
          "",
          "[Removed Lines]",
          "181: #define HIBIT ((char)0x80)",
          "182:   char aChar[] = {",
          "",
          "[Added Lines]",
          "181: #define HIBIT ((unsigned char)0x80)",
          "182:   unsigned char aChar[] = {",
          "",
          "---------------"
        ],
        "ext/fts3/unicode/mkunicode.tcl||ext/fts3/unicode/mkunicode.tcl": [
          "File: ext/fts3/unicode/mkunicode.tcl -> ext/fts3/unicode/mkunicode.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "63:   }",
          "64:   puts \"\"",
          "65:   puts \"  \\};\"",
          "68:   puts -nonewline \"    '\\\\0',      \"",
          "69:   set i 1",
          "70:   foreach c $aChar f $aFlag {",
          "",
          "[Removed Lines]",
          "66:   puts \"#define HIBIT ((char)0x80)\"",
          "67:   puts \"  char aChar\\[\\] = \\{\"",
          "",
          "[Added Lines]",
          "66:   puts \"#define HIBIT ((unsigned char)0x80)\"",
          "67:   puts \"  unsigned char aChar\\[\\] = \\{\"",
          "",
          "---------------"
        ],
        "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c": [
          "File: ext/fts5/fts5_unicode2.c -> ext/fts5/fts5_unicode2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:     62830, 62890, 62924, 62974, 63032, 63050, 63082, 63118,",
          "48:     63182, 63242, 63274, 63310, 63368, 63390,",
          "49:   };",
          "52:     '\\0',      'a',       'c',       'e',       'i',       'n',",
          "53:     'o',       'u',       'y',       'y',       'a',       'c',",
          "54:     'd',       'e',       'e',       'g',       'h',       'i',",
          "",
          "[Removed Lines]",
          "50: #define HIBIT ((char)0x80)",
          "51:   char aChar[] = {",
          "",
          "[Added Lines]",
          "50: #define HIBIT ((unsigned char)0x80)",
          "51:   unsigned char aChar[] = {",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 0465d2fc0d3f8beaa1b6b0bd7bd51d69a524f30d889c9402e7d02cc06164a310",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c01f41cfa63e413767101a0e71f54f888e446ab4",
      "candidate_info": {
        "commit_hash": "c01f41cfa63e413767101a0e71f54f888e446ab4",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/c01f41cfa63e413767101a0e71f54f888e446ab4",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c"
        ],
        "message": "Updates to a comment to keep it in alignment to the changes on this branch.\n\nFossilOrigin-Name: 7499f74351415e601eb48eff6b6fccd3a78d137f5ea9cd7cac46b904772966de",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9285899120dec24ff2944431ad455d7ae217ef408ae2f1a3e7bdfb897099028c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c"
        ]
      }
    },
    {
      "candidate_hash": "7c2321fdf38986cbf72e656aad204c2b10f5067d",
      "candidate_info": {
        "commit_hash": "7c2321fdf38986cbf72e656aad204c2b10f5067d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7c2321fdf38986cbf72e656aad204c2b10f5067d",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/vtab1.test",
          "test/vtabH.test"
        ],
        "message": "Update test cases so that they work with ICU enabled.\n\nFossilOrigin-Name: 408144a1832569ced8e04840f0dd36a3867405f36b13631b0f13c0f7b8a0fb01",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/vtab1.test||test/vtab1.test",
          "test/vtabH.test||test/vtabH.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 927cd7b4c52fae665e57fb6039c6829e339cff5ad5c405800cac3ee149ef5be1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/vtab1.test||test/vtab1.test": [
          "File: test/vtab1.test -> test/vtab1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1311:   CREATE VIRTUAL TABLE e6 USING echo(t6);",
          "1312: }",
          "1333: }",
          "1335: do_execsql_test 18.2.0 {  PRAGMA case_sensitive_like = ON }",
          "",
          "[Removed Lines]",
          "1314: foreach {tn sql res filter} {",
          "1315:   1.1 \"SELECT a FROM e6 WHERE b>'8James'\" {4 2 6 1 5}",
          "1316:     {xFilter {SELECT rowid, a, b FROM 't6' WHERE b > ?} 8James}",
          "1318:   1.2 \"SELECT a FROM e6 WHERE b>='8' AND b<'9'\" {3 4}",
          "1319:     {xFilter {SELECT rowid, a, b FROM 't6' WHERE b >= ? AND b < ?} 8 9}",
          "1321:   1.3 \"SELECT a FROM e6 WHERE b LIKE '8J%'\" {3 4}",
          "1322:     {xFilter {SELECT rowid, a, b FROM 't6' WHERE b >= ? AND b < ? AND b like ?} 8J 8k 8J%}",
          "1324:   1.4 \"SELECT a FROM e6 WHERE b LIKE '8j%'\" {3 4}",
          "1325:     {xFilter {SELECT rowid, a, b FROM 't6' WHERE b >= ? AND b < ? AND b like ?} 8J 8k 8j%}",
          "1327:   1.5 \"SELECT a FROM e6 WHERE b LIKE '8%'\" {3 4}",
          "1328:     {xFilter {SELECT rowid, a, b FROM 't6' WHERE b like ?} 8%}",
          "1329: } {",
          "1330:   set echo_module {}",
          "1331:   do_execsql_test 18.$tn.1 $sql $res",
          "1332:   do_test         18.$tn.2 { lrange $::echo_module 2 end } $filter",
          "",
          "[Added Lines]",
          "1314: ifcapable !icu {",
          "1315:   foreach {tn sql res filter} {",
          "1316:     1.1 \"SELECT a FROM e6 WHERE b>'8James'\" {4 2 6 1 5}",
          "1317:       {xFilter {SELECT rowid, a, b FROM 't6' WHERE b > ?} 8James}",
          "1319:     1.2 \"SELECT a FROM e6 WHERE b>='8' AND b<'9'\" {3 4}",
          "1320:       {xFilter {SELECT rowid, a, b FROM 't6' WHERE b >= ? AND b < ?} 8 9}",
          "1322:     1.3 \"SELECT a FROM e6 WHERE b LIKE '8J%'\" {3 4}",
          "1323:       {xFilter {SELECT rowid, a, b FROM 't6' WHERE b >= ? AND b < ? AND b like ?} 8J 8k 8J%}",
          "1325:     1.4 \"SELECT a FROM e6 WHERE b LIKE '8j%'\" {3 4}",
          "1326:       {xFilter {SELECT rowid, a, b FROM 't6' WHERE b >= ? AND b < ? AND b like ?} 8J 8k 8j%}",
          "1328:     1.5 \"SELECT a FROM e6 WHERE b LIKE '8%'\" {3 4}",
          "1329:       {xFilter {SELECT rowid, a, b FROM 't6' WHERE b like ?} 8%}",
          "1330:   } {",
          "1331:     set echo_module {}",
          "1332:     do_execsql_test 18.$tn.1 $sql $res",
          "1333:     do_test         18.$tn.2 { lrange $::echo_module 2 end } $filter",
          "1334:   }",
          "",
          "---------------"
        ],
        "test/vtabH.test||test/vtabH.test": [
          "File: test/vtabH.test -> test/vtabH.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:   CREATE VIRTUAL TABLE e6 USING echo(t6);",
          "31: }",
          "56:   }",
          "63: }",
          "",
          "[Removed Lines]",
          "33: foreach {tn sql expect} {",
          "34:   1 \"SELECT * FROM e6 WHERE b LIKE '8abc'\" {",
          "35:     xBestIndex",
          "36:        {SELECT rowid, a, b FROM 't6' WHERE b >= ? AND b < ? AND b like ?}",
          "37:     xFilter",
          "38:        {SELECT rowid, a, b FROM 't6' WHERE b >= ? AND b < ? AND b like ?}",
          "39:        8ABC 8abd 8abc",
          "40:   }",
          "42:   2 \"SELECT * FROM e6 WHERE b GLOB '8abc'\" {",
          "43:      xBestIndex",
          "44:        {SELECT rowid, a, b FROM 't6' WHERE b >= ? AND b < ? AND b glob ?}",
          "45:      xFilter",
          "46:        {SELECT rowid, a, b FROM 't6' WHERE b >= ? AND b < ? AND b glob ?}",
          "47:        8abc 8abd 8abc",
          "48:   }",
          "49:   3 \"SELECT * FROM e6 WHERE b LIKE '8e/'\" {",
          "50:     xBestIndex {SELECT rowid, a, b FROM 't6' WHERE b like ?}",
          "51:     xFilter {SELECT rowid, a, b FROM 't6' WHERE b like ?} 8e/",
          "52:   }",
          "53:   4 \"SELECT * FROM e6 WHERE b GLOB '8e/'\" {",
          "54:     xBestIndex {SELECT rowid, a, b FROM 't6' WHERE b glob ?}",
          "55:     xFilter {SELECT rowid, a, b FROM 't6' WHERE b glob ?} 8e/",
          "57: } {",
          "58:   do_test 1.$tn {",
          "59:     set echo_module {}",
          "60:     execsql $sql",
          "61:     set ::echo_module",
          "62:   } [list {*}$expect]",
          "",
          "[Added Lines]",
          "33: ifcapable !icu {",
          "34:   foreach {tn sql expect} {",
          "35:     1 \"SELECT * FROM e6 WHERE b LIKE '8abc'\" {",
          "36:       xBestIndex",
          "37:          {SELECT rowid, a, b FROM 't6' WHERE b >= ? AND b < ? AND b like ?}",
          "38:       xFilter",
          "39:          {SELECT rowid, a, b FROM 't6' WHERE b >= ? AND b < ? AND b like ?}",
          "40:          8ABC 8abd 8abc",
          "41:     }",
          "43:     2 \"SELECT * FROM e6 WHERE b GLOB '8abc'\" {",
          "44:        xBestIndex",
          "45:          {SELECT rowid, a, b FROM 't6' WHERE b >= ? AND b < ? AND b glob ?}",
          "46:        xFilter",
          "47:          {SELECT rowid, a, b FROM 't6' WHERE b >= ? AND b < ? AND b glob ?}",
          "48:          8abc 8abd 8abc",
          "49:     }",
          "50:     3 \"SELECT * FROM e6 WHERE b LIKE '8e/'\" {",
          "51:       xBestIndex {SELECT rowid, a, b FROM 't6' WHERE b like ?}",
          "52:       xFilter {SELECT rowid, a, b FROM 't6' WHERE b like ?} 8e/",
          "53:     }",
          "54:     4 \"SELECT * FROM e6 WHERE b GLOB '8e/'\" {",
          "55:       xBestIndex {SELECT rowid, a, b FROM 't6' WHERE b glob ?}",
          "56:       xFilter {SELECT rowid, a, b FROM 't6' WHERE b glob ?} 8e/",
          "57:     }",
          "58:   } {",
          "59:     do_test 1.$tn {",
          "60:       set echo_module {}",
          "61:       execsql $sql",
          "62:       set ::echo_module",
          "63:     } [list {*}$expect]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "546738f855d8c7e01c1d04b287040938ffeed81c",
      "candidate_info": {
        "commit_hash": "546738f855d8c7e01c1d04b287040938ffeed81c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/546738f855d8c7e01c1d04b287040938ffeed81c",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/nulls1.test"
        ],
        "message": "Further tests for the special null-handling on this branch.\n\nFossilOrigin-Name: 0dbbb51f4d39cafb01d625d65c12dcb232a9c1da7ed5a9397bf55cfea1b980d2",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/nulls1.test||test/nulls1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 09d660ecde723fb30f3bb3684bbb7f95825d78da6a6f33ddf57846054cd563e0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/nulls1.test||test/nulls1.test": [
          "File: test/nulls1.test -> test/nulls1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "201:   `--SEARCH TABLE t4 USING INDEX t4ab (a=?)",
          "202: }",
          "204: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "204: #-------------------------------------------------------------------------",
          "205: #",
          "206: do_execsql_test 6.0 {",
          "207:   CREATE TABLE t5(a, b, c);",
          "208:   WITH s(i) AS (",
          "209:     VALUES(1) UNION ALL SELECT i+1 FROM s WHERE i<200",
          "210:   )",
          "211:   INSERT INTO t5 SELECT i%2, CASE WHEN (i%10)==0 THEN NULL ELSE i END, i FROM s;",
          "212: }",
          "214: set res1 [db eval { SELECT a,b FROM t5 WHERE a=1 ORDER BY b NULLS LAST, c }]",
          "215: set res2 [db eval {",
          "216:   SELECT a,b FROM t5 WHERE a=1 ORDER BY b DESC NULLS FIRST, c DESC",
          "217: }]",
          "219: do_execsql_test 6.1.1 {",
          "220:   CREATE INDEX t5ab ON t5(a, b, c);",
          "221:   SELECT a,b FROM t5 WHERE a=1 ORDER BY b NULLS LAST, c;",
          "222: } $res1",
          "223: do_eqp_test 6.1.2 {",
          "224:   SELECT a,b FROM t5 WHERE a=1 ORDER BY b NULLS LAST, c;",
          "225: } {",
          "226:   QUERY PLAN",
          "227:   `--SEARCH TABLE t5 USING COVERING INDEX t5ab (a=?)",
          "228: }",
          "229: do_execsql_test 6.2.1 {",
          "230:   SELECT a,b FROM t5 WHERE a=1 ORDER BY b DESC NULLS FIRST, c DESC",
          "231: } $res2",
          "232: do_eqp_test 6.2.2 {",
          "233:   SELECT a,b FROM t5 WHERE a=1 ORDER BY b DESC NULLS FIRST, c DESC",
          "234: } {",
          "235:   QUERY PLAN",
          "236:   `--SEARCH TABLE t5 USING COVERING INDEX t5ab (a=?)",
          "237: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4ec3e820a00c5372972a0f1b143b2797b21ffb9f",
      "candidate_info": {
        "commit_hash": "4ec3e820a00c5372972a0f1b143b2797b21ffb9f",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4ec3e820a00c5372972a0f1b143b2797b21ffb9f",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/wherecode.c"
        ],
        "message": "Formatting change on a multi-line conditional, for improved clarity. No logic changes.\n\nFossilOrigin-Name: 7248e3476511ecd317f54edcfe1e87443bfdcc1b10c89c7734eefcabafec6c0b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/wherecode.c||src/wherecode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: bc751fb64d5b08e5ca4c85cd1c6fbf09590fa9dad7e176ba373082ea373655b5",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/wherecode.c||src/wherecode.c": [
          "File: src/wherecode.c -> src/wherecode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1308:       if( (pTerm->eOperator & WO_IN)!=0 ) iIn--;",
          "1309:       if( j<16 && (pLoop->u.vtab.omitMask>>j)&1 ){",
          "1310:         disableTerm(pLevel, pTerm);",
          "1313:       ){",
          "",
          "[Removed Lines]",
          "1311:       }else if( (pTerm->eOperator & WO_IN)!=0 &&",
          "1312:           sqlite3ExprVectorSize(pTerm->pExpr->pLeft)==1",
          "",
          "[Added Lines]",
          "1311:       }else if( (pTerm->eOperator & WO_IN)!=0",
          "1312:         && sqlite3ExprVectorSize(pTerm->pExpr->pLeft)==1",
          "",
          "---------------"
        ]
      }
    }
  ]
}