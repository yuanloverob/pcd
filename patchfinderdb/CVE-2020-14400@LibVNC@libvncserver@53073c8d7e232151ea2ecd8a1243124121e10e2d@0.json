{
  "cve_id": "CVE-2020-14400",
  "cve_desc": "An issue was discovered in LibVNCServer before 0.9.13. Byte-aligned data is accessed through uint16_t pointers in libvncserver/translate.c. NOTE: Third parties do not consider this to be a vulnerability as there is no known path of exploitation or cross of a trust boundary",
  "repo": "LibVNC/libvncserver",
  "patch_hash": "53073c8d7e232151ea2ecd8a1243124121e10e2d",
  "patch_info": {
    "commit_hash": "53073c8d7e232151ea2ecd8a1243124121e10e2d",
    "repo": "LibVNC/libvncserver",
    "commit_url": "https://github.com/LibVNC/libvncserver/commit/53073c8d7e232151ea2ecd8a1243124121e10e2d",
    "files": [
      "libvncserver/translate.c"
    ],
    "message": "libvncserver: fix pointer aliasing/alignment issue\n\nAccessing byte-aligned data through uint16_t pointers can cause crashes\non some platforms or reduce the performance. Therefore ensure a proper\nstack alignment.",
    "before_after_code_files": [
      "libvncserver/translate.c||libvncserver/translate.c"
    ]
  },
  "patch_diff": {
    "libvncserver/translate.c||libvncserver/translate.c": [
      "File: libvncserver/translate.c -> libvncserver/translate.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "360: static rfbBool",
      "361: rfbSetClientColourMapBGR233(rfbClientPtr cl)",
      "362: {",
      "366:     int i, len;",
      "367:     int r, g, b;",
      "",
      "[Removed Lines]",
      "363:     char buf[sz_rfbSetColourMapEntriesMsg + 256 * 3 * 2];",
      "364:     rfbSetColourMapEntriesMsg *scme = (rfbSetColourMapEntriesMsg *)buf;",
      "365:     uint16_t *rgb = (uint16_t *)(&buf[sz_rfbSetColourMapEntriesMsg]);",
      "",
      "[Added Lines]",
      "363:     union {",
      "364:         char bytes[sz_rfbSetColourMapEntriesMsg + 256 * 3 * 2];",
      "365:         rfbSetColourMapEntriesMsg msg;",
      "366:     } buf;",
      "367:     rfbSetColourMapEntriesMsg *scme = &buf.msg;",
      "368:     uint16_t *rgb = (uint16_t *)(&buf.bytes[sz_rfbSetColourMapEntriesMsg]);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "395:     len += 256 * 3 * 2;",
      "398:         rfbLogPerror(\"rfbSetClientColourMapBGR233: write\");",
      "399:         rfbCloseClient(cl);",
      "400:         return FALSE;",
      "",
      "[Removed Lines]",
      "397:     if (rfbWriteExact(cl, buf, len) < 0) {",
      "",
      "[Added Lines]",
      "400:     if (rfbWriteExact(cl, buf.bytes, len) < 0) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d79d9138568f3dda47a26633b496cce492cf8d52",
      "candidate_info": {
        "commit_hash": "d79d9138568f3dda47a26633b496cce492cf8d52",
        "repo": "LibVNC/libvncserver",
        "commit_url": "https://github.com/LibVNC/libvncserver/commit/d79d9138568f3dda47a26633b496cce492cf8d52",
        "files": [
          "examples/backchannel.c",
          "examples/camera.c",
          "examples/colourmaptest.c",
          "examples/cursors.c",
          "examples/example.c",
          "examples/filetransfer.c",
          "examples/fontsel.c",
          "examples/pnmshow.c",
          "examples/pnmshow24.c",
          "examples/repeater.c",
          "examples/simple.c",
          "examples/simple15.c",
          "examples/vncev.c",
          "examples/zippy.c"
        ],
        "message": "examples: use non-zero return code on error",
        "before_after_code_files": [
          "examples/backchannel.c||examples/backchannel.c",
          "examples/camera.c||examples/camera.c",
          "examples/colourmaptest.c||examples/colourmaptest.c",
          "examples/cursors.c||examples/cursors.c",
          "examples/example.c||examples/example.c",
          "examples/filetransfer.c||examples/filetransfer.c",
          "examples/fontsel.c||examples/fontsel.c",
          "examples/pnmshow.c||examples/pnmshow.c",
          "examples/pnmshow24.c||examples/pnmshow24.c",
          "examples/repeater.c||examples/repeater.c",
          "examples/simple.c||examples/simple.c",
          "examples/simple15.c||examples/simple15.c",
          "examples/vncev.c||examples/vncev.c",
          "examples/zippy.c||examples/zippy.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/LibVNC/libvncserver/pull/418"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/backchannel.c||examples/backchannel.c": [
          "File: examples/backchannel.c -> examples/backchannel.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "109:  server=rfbGetScreen(&argc,argv,400,300,8,3,4);",
          "110:  if(!server)",
          "112:  server->frameBuffer=(char*)malloc(400*300*4);",
          "113:  rfbInitServer(server);",
          "114:  rfbRunEventLoop(server,-1,FALSE);",
          "",
          "[Removed Lines]",
          "111:    return 0;",
          "",
          "[Added Lines]",
          "111:    return 1;",
          "",
          "---------------"
        ],
        "examples/camera.c||examples/camera.c": [
          "File: examples/camera.c -> examples/camera.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "152:   rfbScreenInfoPtr server=rfbGetScreen(&argc,argv,WIDTH,HEIGHT,8,3,BPP);",
          "153:   if(!server)",
          "155:   server->desktopName = \"Live Video Feed Example\";",
          "156:   server->frameBuffer=(char*)malloc(WIDTH*HEIGHT*BPP);",
          "157:   server->alwaysShared=(1==1);",
          "",
          "[Removed Lines]",
          "154:     return 0;",
          "",
          "[Added Lines]",
          "154:     return 1;",
          "",
          "---------------"
        ],
        "examples/colourmaptest.c||examples/colourmaptest.c": [
          "File: examples/colourmaptest.c -> examples/colourmaptest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:   rfbScreenInfoPtr server=rfbGetScreen(&argc,argv,256,256,8,1,1);",
          "10:   if(!server)",
          "12:   server->serverFormat.trueColour=FALSE;",
          "13:   server->colourMap.count=256;",
          "14:   server->colourMap.is16=FALSE;",
          "",
          "[Removed Lines]",
          "11:     return 0;",
          "",
          "[Added Lines]",
          "11:     return 1;",
          "",
          "---------------"
        ],
        "examples/cursors.c||examples/cursors.c": [
          "File: examples/cursors.c -> examples/cursors.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "324: {",
          "325:  rfbScreenInfoPtr rfbScreen = rfbGetScreen(&argc,argv,maxx,maxy,8,3,bpp);",
          "326:         if(!rfbScreen)",
          "329:  rfbScreen->desktopName = \"Cursor Test\";",
          "330:  rfbScreen->frameBuffer = (char*)malloc(maxx*maxy*bpp);",
          "",
          "[Removed Lines]",
          "327:           return 0;",
          "",
          "[Added Lines]",
          "327:           return 1;",
          "",
          "---------------"
        ],
        "examples/example.c||examples/example.c": [
          "File: examples/example.c -> examples/example.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "282: {",
          "283:   rfbScreenInfoPtr rfbScreen = rfbGetScreen(&argc,argv,maxx,maxy,8,3,bpp);",
          "284:   if(!rfbScreen)",
          "286:   rfbScreen->desktopName = \"LibVNCServer Example\";",
          "287:   rfbScreen->frameBuffer = (char*)malloc(maxx*maxy*bpp);",
          "288:   rfbScreen->alwaysShared = TRUE;",
          "",
          "[Removed Lines]",
          "285:     return 0;",
          "",
          "[Added Lines]",
          "285:     return 1;",
          "",
          "---------------"
        ],
        "examples/filetransfer.c||examples/filetransfer.c": [
          "File: examples/filetransfer.c -> examples/filetransfer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: {",
          "9:   rfbScreenInfoPtr server=rfbGetScreen(&argc,argv,400,300,8,3,4);",
          "10:   if(!server)",
          "12:   server->frameBuffer=(char*)malloc(400*300*4);",
          "13:   rfbRegisterTightVNCFileTransferExtension();",
          "14:   rfbInitServer(server);",
          "",
          "[Removed Lines]",
          "11:     return 0;",
          "",
          "[Added Lines]",
          "11:     return 1;",
          "",
          "---------------"
        ],
        "examples/fontsel.c||examples/fontsel.c": [
          "File: examples/fontsel.c -> examples/fontsel.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:   int i,j;",
          "51:   if(!s)",
          "54:   s->frameBuffer=(char*)malloc(640*480*3);",
          "55:   rfbInitServer(s);",
          "",
          "[Removed Lines]",
          "52:     return 0;",
          "",
          "[Added Lines]",
          "52:     return 1;",
          "",
          "---------------"
        ],
        "examples/pnmshow.c||examples/pnmshow.c": [
          "File: examples/pnmshow.c -> examples/pnmshow.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:   rfbScreen = rfbGetScreen(&argc,argv,paddedWidth,height,8,(bitsPerPixelInFile+7)/8,bytesPerPixel);",
          "68:   if(!rfbScreen)",
          "70:   if(argc>1)",
          "71:     rfbScreen->desktopName = argv[1];",
          "72:   else",
          "",
          "[Removed Lines]",
          "69:     return 0;",
          "",
          "[Added Lines]",
          "69:     return 1;",
          "",
          "---------------"
        ],
        "examples/pnmshow24.c||examples/pnmshow24.c": [
          "File: examples/pnmshow24.c -> examples/pnmshow24.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:   rfbScreen = rfbGetScreen(&argc,argv,paddedWidth,height,8,3,3);",
          "67:   if(!rfbScreen)",
          "69:   if(argc>1)",
          "70:     rfbScreen->desktopName = argv[1];",
          "71:   else",
          "",
          "[Removed Lines]",
          "68:     return 0;",
          "",
          "[Added Lines]",
          "68:     return 1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:   rfbScreen->frameBuffer = (char*)malloc(paddedWidth*3*height);",
          "81:   fread(rfbScreen->frameBuffer,width*3,height,in);",
          "82:   fclose(in);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81:   if(!rfbScreen->frameBuffer)",
          "82:     return 1;",
          "",
          "---------------"
        ],
        "examples/repeater.c||examples/repeater.c": [
          "File: examples/repeater.c -> examples/repeater.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:   rfbScreenInfoPtr server=rfbGetScreen(&argc,argv,400,300,5,3,2);",
          "37:   if(!server)",
          "39:   server->frameBuffer=(char*)malloc(400*300*2);",
          "40:   f=(uint16_t*)server->frameBuffer;",
          "41:   for(j=0;j<300;j++)",
          "",
          "[Removed Lines]",
          "38:     return 0;",
          "",
          "[Added Lines]",
          "38:     return 1;",
          "",
          "---------------"
        ],
        "examples/simple.c||examples/simple.c": [
          "File: examples/simple.c -> examples/simple.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: {",
          "5:   rfbScreenInfoPtr server=rfbGetScreen(&argc,argv,400,300,8,3,4);",
          "6:   if(!server)",
          "8:   server->frameBuffer=(char*)malloc(400*300*4);",
          "9:   rfbInitServer(server);",
          "10:   rfbRunEventLoop(server,-1,FALSE);",
          "",
          "[Removed Lines]",
          "7:     return 0;",
          "",
          "[Added Lines]",
          "7:     return 1;",
          "",
          "---------------"
        ],
        "examples/simple15.c||examples/simple15.c": [
          "File: examples/simple15.c -> examples/simple15.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:   rfbScreenInfoPtr server=rfbGetScreen(&argc,argv,400,300,5,3,2);",
          "12:   if(!server)",
          "14:   server->frameBuffer=(char*)malloc(400*300*2);",
          "15:   f=(uint16_t*)server->frameBuffer;",
          "16:   for(j=0;j<300;j++)",
          "",
          "[Removed Lines]",
          "13:     return 0;",
          "",
          "[Added Lines]",
          "13:     return 1;",
          "",
          "---------------"
        ],
        "examples/vncev.c||examples/vncev.c": [
          "File: examples/vncev.c -> examples/vncev.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "115: {",
          "116:    rfbScreenInfoPtr s=rfbGetScreen(&argc,argv,width,height,8,1,1);",
          "117:    if(!s)",
          "119:    s->colourMap.is16=FALSE;",
          "120:    s->colourMap.count=2;",
          "121:    s->colourMap.data.bytes=(unsigned char*)\"\\xd0\\xd0\\xd0\\x30\\x01\\xe0\";",
          "",
          "[Removed Lines]",
          "118:      return 0;",
          "",
          "[Added Lines]",
          "118:      return 1;",
          "",
          "---------------"
        ],
        "examples/zippy.c||examples/zippy.c": [
          "File: examples/zippy.c -> examples/zippy.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:         server = rfbGetScreen (&argc, argv, maxx, maxy, 8, 3, bpp);",
          "32:         if(!server)",
          "34:  server->desktopName = \"Zippy das wundersquirrel\\'s VNC server\";",
          "35:  server->frameBuffer = (char*)malloc(maxx*maxy*bpp);",
          "36:  server->alwaysShared = TRUE;",
          "",
          "[Removed Lines]",
          "33:           return 0;",
          "",
          "[Added Lines]",
          "33:           return 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e453a44ccdc642a8acfecf3533df69bdecdb4446",
      "candidate_info": {
        "commit_hash": "e453a44ccdc642a8acfecf3533df69bdecdb4446",
        "repo": "LibVNC/libvncserver",
        "commit_url": "https://github.com/LibVNC/libvncserver/commit/e453a44ccdc642a8acfecf3533df69bdecdb4446",
        "files": [
          "libvncserver/tight.c"
        ],
        "message": "libvncserver: tight: always free PNG palette\n\nIf unused (currently not the case due to disabled code), it's NULL\nanyway and free() will do nothing.",
        "before_after_code_files": [
          "libvncserver/tight.c||libvncserver/tight.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/LibVNC/libvncserver/pull/418"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libvncserver/tight.c||libvncserver/tight.c": [
          "File: libvncserver/tight.c -> libvncserver/tight.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1881:     png_write_end(png_ptr, NULL);",
          "1887:     png_destroy_write_struct(&png_ptr, &info_ptr);",
          "",
          "[Removed Lines]",
          "1883:     if (color_type == PNG_COLOR_TYPE_PALETTE) {",
          "1884:         pngFree(png_ptr, png_palette);",
          "1885:     }",
          "",
          "[Added Lines]",
          "1883:     pngFree(png_ptr, png_palette);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "23e5cbe6b090d7f22982aee909a6a618174d3c2d",
      "candidate_info": {
        "commit_hash": "23e5cbe6b090d7f22982aee909a6a618174d3c2d",
        "repo": "LibVNC/libvncserver",
        "commit_url": "https://github.com/LibVNC/libvncserver/commit/23e5cbe6b090d7f22982aee909a6a618174d3c2d",
        "files": [
          "libvncclient/rfbproto.c"
        ],
        "message": "libvncclient: fix pointer aliasing/alignment issue\n\nAccessing byte-aligned data through uint32_t pointers can cause crashes\non some platforms or reduce the performance. Therefore ensure a proper\nstack alignment.",
        "before_after_code_files": [
          "libvncclient/rfbproto.c||libvncclient/rfbproto.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/LibVNC/libvncserver/pull/418"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libvncclient/rfbproto.c||libvncclient/rfbproto.c": [
          "File: libvncclient/rfbproto.c -> libvncclient/rfbproto.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1151: SetFormatAndEncodings(rfbClient* client)",
          "1152: {",
          "1153:   rfbSetPixelFormatMsg spf;",
          "1158:   int len = 0;",
          "1159:   rfbBool requestCompressLevel = FALSE;",
          "1160:   rfbBool requestQualityLevel = FALSE;",
          "",
          "[Removed Lines]",
          "1154:   char buf[sz_rfbSetEncodingsMsg + MAX_ENCODINGS * 4];",
          "1156:   rfbSetEncodingsMsg *se = (rfbSetEncodingsMsg *)buf;",
          "1157:   uint32_t *encs = (uint32_t *)(&buf[sz_rfbSetEncodingsMsg]);",
          "",
          "[Added Lines]",
          "1154:   union {",
          "1155:     char bytes[sz_rfbSetEncodingsMsg + MAX_ENCODINGS*4];",
          "1156:     rfbSetEncodingsMsg msg;",
          "1157:   } buf;",
          "1159:   rfbSetEncodingsMsg *se = &buf.msg;",
          "1160:   uint32_t *encs = (uint32_t *)(&buf.bytes[sz_rfbSetEncodingsMsg]);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1355:   se->nEncodings = rfbClientSwap16IfLE(se->nEncodings);",
          "1359:   return TRUE;",
          "1360: }",
          "",
          "[Removed Lines]",
          "1357:   if (!WriteToRFBServer(client, buf, len)) return FALSE;",
          "",
          "[Added Lines]",
          "1360:   if (!WriteToRFBServer(client, buf.bytes, len)) return FALSE;",
          "",
          "---------------"
        ]
      }
    }
  ]
}