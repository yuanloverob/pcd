{
  "cve_id": "CVE-2017-1000380",
  "cve_desc": "sound/core/timer.c in the Linux kernel before 4.11.5 is vulnerable to a data race in the ALSA /dev/snd/timer driver resulting in local users being able to read information belonging to other users, i.e., uninitialized memory contents may be disclosed when a read and an ioctl happen at the same time.",
  "repo": "torvalds/linux",
  "patch_hash": "d11662f4f798b50d8c8743f433842c3e40fe3378",
  "patch_info": {
    "commit_hash": "d11662f4f798b50d8c8743f433842c3e40fe3378",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/d11662f4f798b50d8c8743f433842c3e40fe3378",
    "files": [
      "sound/core/timer.c"
    ],
    "message": "ALSA: timer: Fix race between read and ioctl\n\nThe read from ALSA timer device, the function snd_timer_user_tread(),\nmay access to an uninitialized struct snd_timer_user fields when the\nread is concurrently performed while the ioctl like\nsnd_timer_user_tselect() is invoked.  We have already fixed the races\namong ioctls via a mutex, but we seem to have forgotten the race\nbetween read vs ioctl.\n\nThis patch simply applies (more exactly extends the already applied\nrange of) tu->ioctl_lock in snd_timer_user_tread() for closing the\nrace window.\n\nReported-by: Alexander Potapenko <glider@google.com>\nTested-by: Alexander Potapenko <glider@google.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
    "before_after_code_files": [
      "sound/core/timer.c||sound/core/timer.c"
    ]
  },
  "patch_diff": {
    "sound/core/timer.c||sound/core/timer.c": [
      "File: sound/core/timer.c -> sound/core/timer.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1960:  tu = file->private_data;",
      "1961:  unit = tu->tread ? sizeof(struct snd_timer_tread) : sizeof(struct snd_timer_read);",
      "1962:  spin_lock_irq(&tu->qlock);",
      "1963:  while ((long)count - result >= unit) {",
      "1964:   while (!tu->qused) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1962:  mutex_lock(&tu->ioctl_lock);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1974:    add_wait_queue(&tu->qchange_sleep, &wait);",
      "1976:    spin_unlock_irq(&tu->qlock);",
      "1977:    schedule();",
      "1978:    spin_lock_irq(&tu->qlock);",
      "1980:    remove_wait_queue(&tu->qchange_sleep, &wait);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1978:    mutex_unlock(&tu->ioctl_lock);",
      "1980:    mutex_lock(&tu->ioctl_lock);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1994:   tu->qused--;",
      "1995:   spin_unlock_irq(&tu->qlock);",
      "1998:   if (tu->tread) {",
      "1999:    if (copy_to_user(buffer, &tu->tqueue[qhead],",
      "2000:       sizeof(struct snd_timer_tread)))",
      "",
      "[Removed Lines]",
      "1997:   mutex_lock(&tu->ioctl_lock);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2004:       sizeof(struct snd_timer_read)))",
      "2005:     err = -EFAULT;",
      "2006:   }",
      "2009:   spin_lock_irq(&tu->qlock);",
      "2010:   if (err < 0)",
      "",
      "[Removed Lines]",
      "2007:   mutex_unlock(&tu->ioctl_lock);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2014:  }",
      "2015:  _error:",
      "2016:  spin_unlock_irq(&tu->qlock);",
      "2017:  return result > 0 ? result : err;",
      "2018: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2018:  mutex_unlock(&tu->ioctl_lock);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3fa6993fef634e05d200d141a85df0b044572364",
      "candidate_info": {
        "commit_hash": "3fa6993fef634e05d200d141a85df0b044572364",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/3fa6993fef634e05d200d141a85df0b044572364",
        "files": [
          "sound/core/timer.c"
        ],
        "message": "ALSA: timer: Fix negative queue usage by racy accesses\n\nThe user timer tu->qused counter may go to a negative value when\nmultiple concurrent reads are performed since both the check and the\ndecrement of tu->qused are done in two individual locked contexts.\nThis results in bogus read outs, and the endless loop in the\nuser-space side.\n\nThe fix is to move the decrement of the tu->qused counter into the\nsame spinlock context as the zero-check of the counter.\n\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
        "before_after_code_files": [
          "sound/core/timer.c||sound/core/timer.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "sound/core/timer.c||sound/core/timer.c"
          ],
          "candidate": [
            "sound/core/timer.c||sound/core/timer.c"
          ]
        }
      },
      "candidate_diff": {
        "sound/core/timer.c||sound/core/timer.c": [
          "File: sound/core/timer.c -> sound/core/timer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1956:   qhead = tu->qhead++;",
          "1957:   tu->qhead %= tu->queue_size;",
          "1958:   spin_unlock_irq(&tu->qlock);",
          "1960:   if (tu->tread) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1958:   tu->qused--;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1968:   }",
          "1970:   spin_lock_irq(&tu->qlock);",
          "1972:   if (err < 0)",
          "1973:    goto _error;",
          "1974:   result += unit;",
          "",
          "[Removed Lines]",
          "1971:   tu->qused--;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}