{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "31c8b265591a0aaa462a1f3eb5770661aaac67db",
      "candidate_info": {
        "commit_hash": "31c8b265591a0aaa462a1f3eb5770661aaac67db",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/31c8b265591a0aaa462a1f3eb5770661aaac67db",
        "files": [
          "crypto/x509v3/v3_addr.c"
        ],
        "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
        "before_after_code_files": [
          "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
          ],
          "candidate": [
            "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
          "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "131: unsigned int v3_addr_get_afi(const IPAddressFamily *f)",
          "132: {",
          "137: }",
          "",
          "[Removed Lines]",
          "133:     return ((f != NULL &&",
          "134:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
          "135:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
          "136:             : 0);",
          "",
          "[Added Lines]",
          "133:     if (f == NULL",
          "134:             || f->addressFamily == NULL",
          "135:             || f->addressFamily->data == NULL",
          "136:             || f->addressFamily->length < 2)",
          "137:         return 0;",
          "138:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b23171744b01e473ebbfd6edad70c1c3825ffbcd",
      "candidate_info": {
        "commit_hash": "b23171744b01e473ebbfd6edad70c1c3825ffbcd",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b23171744b01e473ebbfd6edad70c1c3825ffbcd",
        "files": [
          "crypto/x509v3/v3_addr.c"
        ],
        "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)",
        "before_after_code_files": [
          "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
          ],
          "candidate": [
            "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
          "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
          "86: {",
          "91: }",
          "",
          "[Removed Lines]",
          "87:     return ((f != NULL &&",
          "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
          "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
          "90:             : 0);",
          "",
          "[Added Lines]",
          "87:     if (f == NULL",
          "88:             || f->addressFamily == NULL",
          "89:             || f->addressFamily->data == NULL",
          "90:             || f->addressFamily->length < 2)",
          "91:         return 0;",
          "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "38454902208c358ffaa140aef3077c2316f82b19",
      "candidate_info": {
        "commit_hash": "38454902208c358ffaa140aef3077c2316f82b19",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/38454902208c358ffaa140aef3077c2316f82b19",
        "files": [
          "crypto/asn1/ameth_lib.c",
          "crypto/evp/evp_err.c",
          "include/openssl/evp.h"
        ],
        "message": "Have EVP_PKEY_asn1_find_str() work more like EVP_PKEY_asn1_find()\n\nEVP_PKEY_asn1_find_str() would search through standard asn1 methods\nfirst, then those added by the application, which EVP_PKEY_asn1_find()\nworked the other way around.  Also, EVP_PKEY_asn1_find_str() didn't\nhandle aliases.\n\nThis change brings EVP_PKEY_asn1_find_str() closer to EVP_PKEY_asn1_find().\n\nFixes #5086\n\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\n(Merged from https://github.com/openssl/openssl/pull/5137)\n\n(cherry picked from commit 3bf0c3fe31d5339524dae671064cc5fe9e4bda38)",
        "before_after_code_files": [
          "crypto/asn1/ameth_lib.c||crypto/asn1/ameth_lib.c",
          "crypto/evp/evp_err.c||crypto/evp/evp_err.c",
          "include/openssl/evp.h||include/openssl/evp.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/ameth_lib.c||crypto/asn1/ameth_lib.c": [
          "File: crypto/asn1/ameth_lib.c -> crypto/asn1/ameth_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "143:                                                    const char *str, int len)",
          "144: {",
          "145:     int i;",
          "147:     if (len == -1)",
          "148:         len = strlen(str);",
          "149:     if (pe) {",
          "",
          "[Removed Lines]",
          "146:     const EVP_PKEY_ASN1_METHOD *ameth;",
          "",
          "[Added Lines]",
          "146:     const EVP_PKEY_ASN1_METHOD *ameth = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "163: #endif",
          "165:     }",
          "167:         ameth = EVP_PKEY_asn1_get0(i);",
          "168:         if (ameth->pkey_flags & ASN1_PKEY_ALIAS)",
          "169:             continue;",
          "172:             return ameth;",
          "173:     }",
          "174:     return NULL;",
          "",
          "[Removed Lines]",
          "166:     for (i = 0; i < EVP_PKEY_asn1_get_count(); i++) {",
          "170:         if (((int)strlen(ameth->pem_str) == len)",
          "171:             && (strncasecmp(ameth->pem_str, str, len) == 0))",
          "",
          "[Added Lines]",
          "167:     for (i = EVP_PKEY_asn1_get_count(); i-- > 0; ) {",
          "171:         if ((int)strlen(ameth->pem_str) == len",
          "172:             && strncasecmp(ameth->pem_str, str, len) == 0)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "177: int EVP_PKEY_asn1_add0(const EVP_PKEY_ASN1_METHOD *ameth)",
          "178: {",
          "179:     if (app_methods == NULL) {",
          "180:         app_methods = sk_EVP_PKEY_ASN1_METHOD_new(ameth_cmp);",
          "181:         if (app_methods == NULL)",
          "182:             return 0;",
          "183:     }",
          "184:     if (!sk_EVP_PKEY_ASN1_METHOD_push(app_methods, ameth))",
          "185:         return 0;",
          "186:     sk_EVP_PKEY_ASN1_METHOD_sort(app_methods);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "180:     EVP_PKEY_ASN1_METHOD tmp = { 0, };",
          "188:     tmp.pkey_id = ameth->pkey_id;",
          "189:     if (sk_EVP_PKEY_ASN1_METHOD_find(app_methods, &tmp) >= 0) {",
          "190:         EVPerr(EVP_F_EVP_PKEY_ASN1_ADD0,",
          "191:                EVP_R_PKEY_APPLICATION_ASN1_METHOD_ALREADY_REGISTERED);",
          "192:         return 0;",
          "193:     }",
          "",
          "---------------"
        ],
        "crypto/evp/evp_err.c||crypto/evp/evp_err.c": [
          "File: crypto/evp/evp_err.c -> crypto/evp/evp_err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "143:     {ERR_REASON(EVP_R_OPERATON_NOT_INITIALIZED), \"operaton not initialized\"},",
          "144:     {ERR_REASON(EVP_R_PARTIALLY_OVERLAPPING),",
          "145:      \"partially overlapping buffers\"},",
          "146:     {ERR_REASON(EVP_R_PKEY_ASN1_METHOD_ALREADY_REGISTERED),",
          "147:      \"pkey asn1 method already registered\"},",
          "148:     {ERR_REASON(EVP_R_PRIVATE_KEY_DECODE_ERROR), \"private key decode error\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "146:     {ERR_REASON(EVP_R_PKEY_APPLICATION_ASN1_METHOD_ALREADY_REGISTERED),",
          "147:      \"pkey application asn1 method already registered\"},",
          "",
          "---------------"
        ],
        "include/openssl/evp.h||include/openssl/evp.h": [
          "File: include/openssl/evp.h -> include/openssl/evp.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1570: # define EVP_R_OPERATION_NOT_SUPPORTED_FOR_THIS_KEYTYPE   150",
          "1571: # define EVP_R_OPERATON_NOT_INITIALIZED                   151",
          "1572: # define EVP_R_PARTIALLY_OVERLAPPING                      162",
          "1573: # define EVP_R_PKEY_ASN1_METHOD_ALREADY_REGISTERED        164",
          "1574: # define EVP_R_PRIVATE_KEY_DECODE_ERROR                   145",
          "1575: # define EVP_R_PRIVATE_KEY_ENCODE_ERROR                   146",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1573: # define EVP_R_PKEY_APPLICATION_ASN1_METHOD_ALREADY_REGISTERED 175",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0d13ed3a17e9a98678a1695921bb479294b4b210",
      "candidate_info": {
        "commit_hash": "0d13ed3a17e9a98678a1695921bb479294b4b210",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0d13ed3a17e9a98678a1695921bb479294b4b210",
        "files": [
          "util/mkdef.pl"
        ],
        "message": "util/mkdef.pl: handle line terminators correctly\n\nWhen parsing the header files, mkdef.pl didn't clear the line\nterminator properly.  In most cases, this didn't matter, but there\nwere moments when this caused parsing errors (such as CRLFs in certain\ncases).\n\nFixes #4267\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4304)\n\n(cherry picked from commit e66b62b86e7725bdace0f24a76baa61db9c763f8)",
        "before_after_code_files": [
          "util/mkdef.pl||util/mkdef.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/mkdef.pl||util/mkdef.pl": [
          "File: util/mkdef.pl -> util/mkdef.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "459:   print STDERR \"DEBUG: parsing ----------\\n\" if $debug;",
          "460:   while(<IN>) {",
          "461:    if($parens > 0) {",
          "462:     #Inside a DEPRECATEDIN",
          "463:     $stored_multiline .= $_;",
          "465:     print STDERR \"DEBUG: Continuing multiline DEPRECATEDIN: $stored_multiline\\n\" if $debug;",
          "466:     $parens = count_parens($stored_multiline);",
          "467:     if ($parens == 0) {",
          "",
          "[Removed Lines]",
          "464:     $stored_multiline =~ s|\\R$||; # Better chomp",
          "",
          "[Added Lines]",
          "461:    s|\\R$||; # Better chomp",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "875:        \\@current_algorithms);",
          "876:      } else {",
          "877:       $stored_multiline = $_;",
          "879:       print STDERR \"DEBUG: Found multiline DEPRECATEDIN starting with: $stored_multiline\\n\" if $debug;",
          "880:       next;",
          "881:      }",
          "",
          "[Removed Lines]",
          "878:       $stored_multiline =~ s|\\R$||;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6fb428f76c2fb039734694de9f7f8ab8f4d9f59c",
      "candidate_info": {
        "commit_hash": "6fb428f76c2fb039734694de9f7f8ab8f4d9f59c",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/6fb428f76c2fb039734694de9f7f8ab8f4d9f59c",
        "files": [
          "crypto/aes/asm/aesni-sha1-x86_64.pl",
          "crypto/aes/asm/aesni-sha256-x86_64.pl"
        ],
        "message": "aes/asm/aesni-sha*-x86_64.pl: add SHAEXT performance results.\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/3898)\n\n(cherry picked from commit 1843787173da9b07029d0863e236107b1dd4fdd7)",
        "before_after_code_files": [
          "crypto/aes/asm/aesni-sha1-x86_64.pl||crypto/aes/asm/aesni-sha1-x86_64.pl",
          "crypto/aes/asm/aesni-sha256-x86_64.pl||crypto/aes/asm/aesni-sha256-x86_64.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/aes/asm/aesni-sha1-x86_64.pl||crypto/aes/asm/aesni-sha1-x86_64.pl": [
          "File: crypto/aes/asm/aesni-sha1-x86_64.pl -> crypto/aes/asm/aesni-sha1-x86_64.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: # Haswell 4.43[+3.6(4.2)] 8.00(8.58) 4.55(5.21)  +75%(+65%)",
          "35: # Skylake 2.63[+3.5(4.1)] 6.17(6.69) 4.23(4.44)  +46%(+51%)",
          "36: # Bulldozer 5.77[+6.0] 11.72  6.37        +84%",
          "37: #",
          "38: #  AES-192-CBC",
          "39: # Westmere 4.51  9.81  6.80     +44%",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37: # Ryzen(**) 2.71[+1.93] 4.64  2.74        +69%",
          "38: # Goldmont(**) 3.82[+1.70] 5.52  4.20        +31%",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47: # Sandy Bridge 7.05  12.06(13.15) 7.12(7.72)  +69%(+70%)",
          "48: # Ivy Bridge 7.05  11.65  7.12        +64%",
          "49: # Haswell 6.19  9.76(10.34) 6.21(6.25)  +57%(+65%)",
          "51: # Bulldozer 8.00  13.95  8.25        +69%",
          "52: #",
          "53: # (*) There are two code paths: SSSE3 and AVX. See sha1-568.pl for",
          "54: # background information. Above numbers in parentheses are SSSE3",
          "55: # results collected on AVX-capable CPU, i.e. apply on OSes that",
          "56: # don't support AVX.",
          "57: #",
          "58: # Needless to mention that it makes no sense to implement \"stitched\"",
          "59: # *decrypt* subroutine. Because *both* AESNI-CBC decrypt and SHA1",
          "",
          "[Removed Lines]",
          "50: # Skylake 3.62  7.16(7.68) 4.56(4.76)  +57%(+61$)",
          "",
          "[Added Lines]",
          "52: # Skylake 3.62  7.16(7.68) 4.56(4.76)  +57%(+61%)",
          "54: # Ryzen(**) 3.71  5.64  3.72        +52%",
          "55: # Goldmont(**) 5.35  7.05  5.76        +22%",
          "61: # (**) SHAEXT results.",
          "",
          "---------------"
        ],
        "crypto/aes/asm/aesni-sha256-x86_64.pl||crypto/aes/asm/aesni-sha256-x86_64.pl": [
          "File: crypto/aes/asm/aesni-sha256-x86_64.pl -> crypto/aes/asm/aesni-sha256-x86_64.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: # for standalone AESNI-CBC encrypt, standalone SHA256, and stitched",
          "29: # subroutine:",
          "30: #",
          "37: #",
          "38: # (*) there are XOP, AVX1 and AVX2 code paths, meaning that",
          "39: # Westmere is omitted from loop, this is because gain was not",
          "40: # estimated high enough to justify the effort;",
          "41: # (**) these are EVP-free results, results obtained with 'speed",
          "42: # -evp aes-256-cbc-hmac-sha256' will vary by percent or two;",
          "44: $flavour = shift;",
          "45: $output  = shift;",
          "",
          "[Removed Lines]",
          "31: #   AES-128/-192/-256+SHA256 this(**)gain",
          "32: # Sandy Bridge     5.05/6.05/7.05+11.6  13.0 +28%/36%/43%",
          "33: # Ivy Bridge     5.05/6.05/7.05+10.3  11.6 +32%/41%/50%",
          "34: # Haswell     4.43/5.29/6.19+7.80  8.79 +39%/49%/59%",
          "35: # Skylake     2.62/3.14/3.62+7.70  8.10 +27%/34%/40%",
          "36: # Bulldozer     5.77/6.89/8.00+13.7  13.7 +42%/50%/58%",
          "",
          "[Added Lines]",
          "31: #   AES-128/-192/-256+SHA256   this(**) gain",
          "32: # Sandy Bridge     5.05/6.05/7.05+11.6     13.0 +28%/36%/43%",
          "33: # Ivy Bridge     5.05/6.05/7.05+10.3     11.6 +32%/41%/50%",
          "34: # Haswell     4.43/5.29/6.19+7.80     8.79 +39%/49%/59%",
          "35: # Skylake     2.62/3.14/3.62+7.70     8.10 +27%/34%/40%",
          "36: # Bulldozer     5.77/6.89/8.00+13.7     13.7 +42%/50%/58%",
          "37: # Ryzen(***)     2.71/-/3.71+2.05     2.74/-/3.73 +74%/-/54%",
          "38: # Goldmont(***)     3.82/-/5.35+4.16     4.73/-/5.94 +69%/-/60%",
          "45: # (***) these are SHAEXT results;",
          "",
          "---------------"
        ]
      }
    }
  ]
}