{
  "cve_id": "CVE-2015-0292",
  "cve_desc": "Integer underflow in the EVP_DecodeUpdate function in crypto/evp/encode.c in the base64-decoding implementation in OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h allows remote attackers to cause a denial of service (memory corruption) or possibly have unspecified other impact via crafted base64 data that triggers a buffer overflow.",
  "repo": "openssl/openssl",
  "patch_hash": "fce3821111e3307a599d2378f2cca2ef2097c6c4",
  "patch_info": {
    "commit_hash": "fce3821111e3307a599d2378f2cca2ef2097c6c4",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/fce3821111e3307a599d2378f2cca2ef2097c6c4",
    "files": [
      "crypto/evp/encode.c"
    ],
    "message": "evp: prevent underflow in base64 decoding\n\nThis patch resolves RT ticket #2608.\n\nThanks to Robert Dugal for originally spotting this, and to David\nRamos for noticing that the ball had been dropped.\n\nSigned-off-by: Geoff Thorpe <geoff@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/encode.c||crypto/evp/encode.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/encode.c||crypto/evp/encode.c": [
      "File: crypto/evp/encode.c -> crypto/evp/encode.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "324:     v=EVP_DecodeBlock(out,d,n);",
      "325:     n=0;",
      "326:     if (v < 0) { rv=0; goto end; }",
      "327:     ret+=(v-eof);",
      "328:     }",
      "329:    else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "327:     if (eof > v) { rv=-1; goto end; }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9febee02720902c195fe929ecfe06362c551422c",
      "candidate_info": {
        "commit_hash": "9febee02720902c195fe929ecfe06362c551422c",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/9febee02720902c195fe929ecfe06362c551422c",
        "files": [
          "crypto/evp/encode.c"
        ],
        "message": "evp: prevent underflow in base64 decoding\n\nThis patch resolves RT ticket #2608.\n\nThanks to Robert Dugal for originally spotting this, and to David\nRamos for noticing that the ball had been dropped.\n\nSigned-off-by: Geoff Thorpe <geoff@openssl.org>",
        "before_after_code_files": [
          "crypto/evp/encode.c||crypto/evp/encode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/evp/encode.c||crypto/evp/encode.c"
          ],
          "candidate": [
            "crypto/evp/encode.c||crypto/evp/encode.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/evp/encode.c||crypto/evp/encode.c": [
          "File: crypto/evp/encode.c -> crypto/evp/encode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "324:     v=EVP_DecodeBlock(out,d,n);",
          "325:     n=0;",
          "326:     if (v < 0) { rv=0; goto end; }",
          "327:     ret+=(v-eof);",
          "328:     }",
          "329:    else",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "327:     if (eof > v) { rv=-1; goto end; }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "84fe686173d519dfee5d264272beab666508fc57",
      "candidate_info": {
        "commit_hash": "84fe686173d519dfee5d264272beab666508fc57",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/84fe686173d519dfee5d264272beab666508fc57",
        "files": [
          "crypto/evp/encode.c"
        ],
        "message": "evp: prevent underflow in base64 decoding\n\nThis patch resolves RT ticket #2608.\n\nThanks to Robert Dugal for originally spotting this, and to David\nRamos for noticing that the ball had been dropped.\n\nSigned-off-by: Geoff Thorpe <geoff@openssl.org>",
        "before_after_code_files": [
          "crypto/evp/encode.c||crypto/evp/encode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/evp/encode.c||crypto/evp/encode.c"
          ],
          "candidate": [
            "crypto/evp/encode.c||crypto/evp/encode.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/evp/encode.c||crypto/evp/encode.c": [
          "File: crypto/evp/encode.c -> crypto/evp/encode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "324:     v=EVP_DecodeBlock(out,d,n);",
          "325:     n=0;",
          "326:     if (v < 0) { rv=0; goto end; }",
          "327:     ret+=(v-eof);",
          "328:     }",
          "329:    else",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "327:     if (eof > v) { rv=-1; goto end; }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d0666f289ac013094bbbf547bfbcd616199b7d2d",
      "candidate_info": {
        "commit_hash": "d0666f289ac013094bbbf547bfbcd616199b7d2d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/d0666f289ac013094bbbf547bfbcd616199b7d2d",
        "files": [
          "crypto/evp/encode.c"
        ],
        "message": "evp: prevent underflow in base64 decoding\n\nThis patch resolves RT ticket #2608.\n\nThanks to Robert Dugal for originally spotting this, and to David\nRamos for noticing that the ball had been dropped.\n\nSigned-off-by: Geoff Thorpe <geoff@openssl.org>",
        "before_after_code_files": [
          "crypto/evp/encode.c||crypto/evp/encode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/evp/encode.c||crypto/evp/encode.c"
          ],
          "candidate": [
            "crypto/evp/encode.c||crypto/evp/encode.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/evp/encode.c||crypto/evp/encode.c": [
          "File: crypto/evp/encode.c -> crypto/evp/encode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "324:     v=EVP_DecodeBlock(out,d,n);",
          "325:     n=0;",
          "326:     if (v < 0) { rv=0; goto end; }",
          "327:     ret+=(v-eof);",
          "328:     }",
          "329:    else",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "327:     if (eof > v) { rv=-1; goto end; }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "65402586c0d946cb0092f4a291eac60832655098",
      "candidate_info": {
        "commit_hash": "65402586c0d946cb0092f4a291eac60832655098",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/65402586c0d946cb0092f4a291eac60832655098",
        "files": [
          "crypto/evp/encode.c"
        ],
        "message": "evp: prevent underflow in base64 decoding\n\nThis patch resolves RT ticket #2608.\n\nThanks to Robert Dugal for originally spotting this, and to David\nRamos for noticing that the ball had been dropped.\n\nSigned-off-by: Geoff Thorpe <geoff@openssl.org>",
        "before_after_code_files": [
          "crypto/evp/encode.c||crypto/evp/encode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/evp/encode.c||crypto/evp/encode.c"
          ],
          "candidate": [
            "crypto/evp/encode.c||crypto/evp/encode.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/evp/encode.c||crypto/evp/encode.c": [
          "File: crypto/evp/encode.c -> crypto/evp/encode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "324:     v=EVP_DecodeBlock(out,d,n);",
          "325:     n=0;",
          "326:     if (v < 0) { rv=0; goto end; }",
          "327:     ret+=(v-eof);",
          "328:     }",
          "329:    else",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "327:     if (eof > v) { rv=-1; goto end; }",
          "",
          "---------------"
        ]
      }
    }
  ]
}