{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4b3a20dc7e66c6c0683a7a1b6521dbc5d287ac1b",
      "candidate_info": {
        "commit_hash": "4b3a20dc7e66c6c0683a7a1b6521dbc5d287ac1b",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/4b3a20dc7e66c6c0683a7a1b6521dbc5d287ac1b",
        "files": [
          "crypto/asn1/x_long.c"
        ],
        "message": "Fix faulty check of padding in x_long.c\n\nBug uncovered by test\n\n[extended tests]\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3120)",
        "before_after_code_files": [
          "crypto/asn1/x_long.c||crypto/asn1/x_long.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/x_long.c||crypto/asn1/x_long.c": [
          "File: crypto/asn1/x_long.c -> crypto/asn1/x_long.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "110:     unsigned long utmp = 0;",
          "111:     char *cp = (char *)pval;",
          "",
          "[Removed Lines]",
          "113:     if (len) {",
          "",
          "[Added Lines]",
          "113:     if (len > 1) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "120:         case 0xff:",
          "121:             cont++;",
          "122:             len--;",
          "124:             break;",
          "125:         case 0:",
          "126:             cont++;",
          "",
          "[Removed Lines]",
          "123:             neg = 1;",
          "",
          "[Added Lines]",
          "123:             neg = 0x80;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "139:             neg = 1;",
          "140:         else",
          "141:             neg = 0;",
          "142:     }",
          "143:     utmp = 0;",
          "144:     for (i = 0; i < len; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "142:     } else if (neg == (cont[0] & 0x80)) {",
          "143:         ASN1err(ASN1_F_LONG_C2I, ASN1_R_ILLEGAL_PADDING);",
          "144:         return 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dff827da751525b0e32ecb59a1d382b03f34a4de",
      "candidate_info": {
        "commit_hash": "dff827da751525b0e32ecb59a1d382b03f34a4de",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/dff827da751525b0e32ecb59a1d382b03f34a4de",
        "files": [
          "apps/s_cb.c"
        ],
        "message": "Make -xcert work again.\n\nWhen a certificate is prepended update the list pointer.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2628)\n(cherry picked from commit 52f4840cb237cc37cad5eac8328828cf3d3e1049)",
        "before_after_code_files": [
          "apps/s_cb.c||apps/s_cb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/s_cb.c||apps/s_cb.c": [
          "File: apps/s_cb.c -> apps/s_cb.c"
        ]
      }
    },
    {
      "candidate_hash": "1ec574ae25a754d88f810304be3bfcb7b23101a8",
      "candidate_info": {
        "commit_hash": "1ec574ae25a754d88f810304be3bfcb7b23101a8",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/1ec574ae25a754d88f810304be3bfcb7b23101a8",
        "files": [
          "CHANGES",
          "NEWS",
          "README",
          "include/openssl/opensslv.h"
        ],
        "message": "Prepare for 1.1.0d-dev\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
        "before_after_code_files": [
          "include/openssl/opensslv.h||include/openssl/opensslv.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/opensslv.h||include/openssl/opensslv.h": [
          "File: include/openssl/opensslv.h -> include/openssl/opensslv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: # ifdef OPENSSL_FIPS",
          "45: # else",
          "47: # endif",
          "",
          "[Removed Lines]",
          "42: # define OPENSSL_VERSION_NUMBER  0x1010003fL",
          "44: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0c-fips  10 Nov 2016\"",
          "46: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0c  10 Nov 2016\"",
          "",
          "[Added Lines]",
          "42: # define OPENSSL_VERSION_NUMBER  0x10100040L",
          "44: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0d-fips-dev  xx XXX xxxx\"",
          "46: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0d-dev  xx XXX xxxx\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e23a4e98a90c448a196aede3edeb7802ed0da121",
      "candidate_info": {
        "commit_hash": "e23a4e98a90c448a196aede3edeb7802ed0da121",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/e23a4e98a90c448a196aede3edeb7802ed0da121",
        "files": [
          "test/certs/embeddedSCTs1-key.pem",
          "test/ssl-tests/12-ct.conf",
          "test/ssl-tests/12-ct.conf.in"
        ],
        "message": "Add SSL tests for certificates with embedded SCTs\n\nThe only SSL tests prior to this tested using certificates with no\nembedded Signed Certificate Timestamps (SCTs), which meant they couldn't\nconfirm whether Certificate Transparency checks in \"strict\" mode were\nworking.\n\nThese tests reveal a bug in the validation of SCT timestamps, which is\nfixed by the next commit.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3260)",
        "before_after_code_files": [
          "test/certs/embeddedSCTs1-key.pem||test/certs/embeddedSCTs1-key.pem",
          "test/ssl-tests/12-ct.conf||test/ssl-tests/12-ct.conf",
          "test/ssl-tests/12-ct.conf.in||test/ssl-tests/12-ct.conf.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/certs/embeddedSCTs1-key.pem||test/certs/embeddedSCTs1-key.pem": [
          "File: test/certs/embeddedSCTs1-key.pem -> test/certs/embeddedSCTs1-key.pem",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: -----BEGIN RSA PRIVATE KEY-----",
          "2: MIICWwIBAAKBgQC+75jnwmh3rjhfdTJaDB0ym+3xj6r015a/BH634c4VyVui+A7k",
          "3: WL19uG+KSyUhkaeb1wDDjpwDibRc1NyaEgqyHgy0HNDnKAWkEM2cW9tdSSdyba8X",
          "4: EPYBhzd+olsaHjnu0LiBGdwVTcaPfajjDK8VijPmyVCfSgWwFAn/Xdh+tQIDAQAB",
          "5: AoGAK/daG0vt6Fkqy/hdrtSJSKUVRoGRmS2nnba4Qzlwzh1+x2kdbMFuaOu2a37g",
          "6: PvmeQclheKZ3EG1+Jb4yShwLcBCV6pkRJhOKuhvqGnjngr6uBH4gMCjpZVj7GDMf",
          "7: flYHhdJCs3Cz/TY0wKN3o1Fldil2DHR/AEOc1nImeSp5/EUCQQDjKS3W957kYtTU",
          "8: X5BeRjvg03Ug8tJq6IFuhTFvUJ+XQ5bAc0DmxAbQVKqRS7Wje59zTknVvS+MFdeQ",
          "9: pz4dGuV7AkEA1y0X2yarIls+0A/S1uwkvwRTIkfS+QwFJ1zVya8sApRdKAcidIzA",
          "10: b70hkKLilU9+LrXg5iZdFp8l752qJiw9jwJAXjItN/7mfH4fExGto+or2kbVQxxt",
          "11: 9LcFNPc2UJp2ExuL37HrL8YJrUnukOF8KJaSwBWuuFsC5GwKP4maUCdfEQJAUwBR",
          "12: 83c3DEmmMRvpeH4erpA8gTyzZN3+HvDwhpvLnjMcvBQEdnDUykVqbSBnxrCjO+Fs",
          "13: n1qtDczWFVf8Cj2GgQJAQ14Awx32Cn9sF+3M+sEVtlAf6CqiEbkYeYdSCbsplMmZ",
          "14: 1UoaxiwXY3z+B7epsRnnPR3KaceAlAxw2/zQJMFNOQ==",
          "15: -----END RSA PRIVATE KEY-----",
          "",
          "---------------"
        ],
        "test/ssl-tests/12-ct.conf||test/ssl-tests/12-ct.conf": [
          "File: test/ssl-tests/12-ct.conf -> test/ssl-tests/12-ct.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # Generated with generate_ssl_tests.pl",
          "9: # ===========================================================",
          "19: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "20: CipherString = DEFAULT",
          "21: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "24: CipherString = DEFAULT",
          "25: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "26: VerifyMode = Peer",
          "28: [test-0]",
          "29: ExpectedResult = Success",
          "33: CTValidation = Permissive",
          "36: # ===========================================================",
          "46: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "47: CipherString = DEFAULT",
          "48: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "51: CipherString = DEFAULT",
          "52: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "53: VerifyMode = Peer",
          "56: ExpectedClientAlert = HandshakeFailure",
          "57: ExpectedResult = ClientFail",
          "61: CTValidation = Strict",
          "64: # ===========================================================",
          "77: CipherString = DEFAULT",
          "81: CipherString = DEFAULT",
          "83: VerifyMode = Peer",
          "86: ExpectedResult = Success",
          "87: HandshakeMode = Resume",
          "88: ResumptionExpected = Yes",
          "93: CTValidation = Permissive",
          "96: # ===========================================================",
          "109: CipherString = DEFAULT",
          "113: CipherString = DEFAULT",
          "115: VerifyMode = Peer",
          "118: CipherString = DEFAULT",
          "119: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "120: VerifyMode = Peer",
          "123: ExpectedResult = Success",
          "124: HandshakeMode = Resume",
          "125: ResumptionExpected = Yes",
          "133: CTValidation = Strict",
          "",
          "[Removed Lines]",
          "3: num_tests = 4",
          "5: test-0 = 0-ct-permissive",
          "6: test-1 = 1-ct-strict",
          "7: test-2 = 2-ct-permissive-resumption",
          "8: test-3 = 3-ct-strict-resumption",
          "11: [0-ct-permissive]",
          "12: ssl_conf = 0-ct-permissive-ssl",
          "14: [0-ct-permissive-ssl]",
          "15: server = 0-ct-permissive-server",
          "16: client = 0-ct-permissive-client",
          "18: [0-ct-permissive-server]",
          "23: [0-ct-permissive-client]",
          "30: client = 0-ct-permissive-client-extra",
          "32: [0-ct-permissive-client-extra]",
          "38: [1-ct-strict]",
          "39: ssl_conf = 1-ct-strict-ssl",
          "41: [1-ct-strict-ssl]",
          "42: server = 1-ct-strict-server",
          "43: client = 1-ct-strict-client",
          "45: [1-ct-strict-server]",
          "50: [1-ct-strict-client]",
          "55: [test-1]",
          "58: client = 1-ct-strict-client-extra",
          "60: [1-ct-strict-client-extra]",
          "66: [2-ct-permissive-resumption]",
          "67: ssl_conf = 2-ct-permissive-resumption-ssl",
          "69: [2-ct-permissive-resumption-ssl]",
          "70: server = 2-ct-permissive-resumption-server",
          "71: client = 2-ct-permissive-resumption-client",
          "72: resume-server = 2-ct-permissive-resumption-server",
          "73: resume-client = 2-ct-permissive-resumption-client",
          "75: [2-ct-permissive-resumption-server]",
          "76: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "78: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "80: [2-ct-permissive-resumption-client]",
          "82: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "85: [test-2]",
          "89: client = 2-ct-permissive-resumption-client-extra",
          "90: resume-client = 2-ct-permissive-resumption-client-extra",
          "92: [2-ct-permissive-resumption-client-extra]",
          "98: [3-ct-strict-resumption]",
          "99: ssl_conf = 3-ct-strict-resumption-ssl",
          "101: [3-ct-strict-resumption-ssl]",
          "102: server = 3-ct-strict-resumption-server",
          "103: client = 3-ct-strict-resumption-client",
          "104: resume-server = 3-ct-strict-resumption-server",
          "105: resume-client = 3-ct-strict-resumption-resume-client",
          "107: [3-ct-strict-resumption-server]",
          "108: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "110: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "112: [3-ct-strict-resumption-client]",
          "114: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "117: [3-ct-strict-resumption-resume-client]",
          "122: [test-3]",
          "126: client = 3-ct-strict-resumption-client-extra",
          "127: resume-client = 3-ct-strict-resumption-resume-client-extra",
          "129: [3-ct-strict-resumption-client-extra]",
          "130: CTValidation = Permissive",
          "132: [3-ct-strict-resumption-resume-client-extra]",
          "",
          "[Added Lines]",
          "3: num_tests = 6",
          "5: test-0 = 0-ct-permissive-without-scts",
          "6: test-1 = 1-ct-permissive-with-scts",
          "7: test-2 = 2-ct-strict-without-scts",
          "8: test-3 = 3-ct-strict-with-scts",
          "9: test-4 = 4-ct-permissive-resumption",
          "10: test-5 = 5-ct-strict-resumption",
          "13: [0-ct-permissive-without-scts]",
          "14: ssl_conf = 0-ct-permissive-without-scts-ssl",
          "16: [0-ct-permissive-without-scts-ssl]",
          "17: server = 0-ct-permissive-without-scts-server",
          "18: client = 0-ct-permissive-without-scts-client",
          "20: [0-ct-permissive-without-scts-server]",
          "25: [0-ct-permissive-without-scts-client]",
          "32: client = 0-ct-permissive-without-scts-client-extra",
          "34: [0-ct-permissive-without-scts-client-extra]",
          "35: CTValidation = Permissive",
          "38: # ===========================================================",
          "40: [1-ct-permissive-with-scts]",
          "41: ssl_conf = 1-ct-permissive-with-scts-ssl",
          "43: [1-ct-permissive-with-scts-ssl]",
          "44: server = 1-ct-permissive-with-scts-server",
          "45: client = 1-ct-permissive-with-scts-client",
          "47: [1-ct-permissive-with-scts-server]",
          "48: Certificate = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1.pem",
          "49: CipherString = DEFAULT",
          "50: PrivateKey = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1-key.pem",
          "52: [1-ct-permissive-with-scts-client]",
          "53: CipherString = DEFAULT",
          "54: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1_issuer.pem",
          "55: VerifyMode = Peer",
          "57: [test-1]",
          "58: ExpectedResult = Success",
          "59: client = 1-ct-permissive-with-scts-client-extra",
          "61: [1-ct-permissive-with-scts-client-extra]",
          "67: [2-ct-strict-without-scts]",
          "68: ssl_conf = 2-ct-strict-without-scts-ssl",
          "70: [2-ct-strict-without-scts-ssl]",
          "71: server = 2-ct-strict-without-scts-server",
          "72: client = 2-ct-strict-without-scts-client",
          "74: [2-ct-strict-without-scts-server]",
          "79: [2-ct-strict-without-scts-client]",
          "84: [test-2]",
          "87: client = 2-ct-strict-without-scts-client-extra",
          "89: [2-ct-strict-without-scts-client-extra]",
          "95: [3-ct-strict-with-scts]",
          "96: ssl_conf = 3-ct-strict-with-scts-ssl",
          "98: [3-ct-strict-with-scts-ssl]",
          "99: server = 3-ct-strict-with-scts-server",
          "100: client = 3-ct-strict-with-scts-client",
          "102: [3-ct-strict-with-scts-server]",
          "103: Certificate = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1.pem",
          "105: PrivateKey = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1-key.pem",
          "107: [3-ct-strict-with-scts-client]",
          "109: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1_issuer.pem",
          "112: [test-3]",
          "113: ExpectedResult = Success",
          "114: client = 3-ct-strict-with-scts-client-extra",
          "116: [3-ct-strict-with-scts-client-extra]",
          "117: CTValidation = Strict",
          "120: # ===========================================================",
          "122: [4-ct-permissive-resumption]",
          "123: ssl_conf = 4-ct-permissive-resumption-ssl",
          "125: [4-ct-permissive-resumption-ssl]",
          "126: server = 4-ct-permissive-resumption-server",
          "127: client = 4-ct-permissive-resumption-client",
          "128: resume-server = 4-ct-permissive-resumption-server",
          "129: resume-client = 4-ct-permissive-resumption-client",
          "131: [4-ct-permissive-resumption-server]",
          "132: Certificate = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1.pem",
          "133: CipherString = DEFAULT",
          "134: PrivateKey = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1-key.pem",
          "136: [4-ct-permissive-resumption-client]",
          "137: CipherString = DEFAULT",
          "138: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1_issuer.pem",
          "139: VerifyMode = Peer",
          "141: [test-4]",
          "145: client = 4-ct-permissive-resumption-client-extra",
          "146: resume-client = 4-ct-permissive-resumption-client-extra",
          "148: [4-ct-permissive-resumption-client-extra]",
          "154: [5-ct-strict-resumption]",
          "155: ssl_conf = 5-ct-strict-resumption-ssl",
          "157: [5-ct-strict-resumption-ssl]",
          "158: server = 5-ct-strict-resumption-server",
          "159: client = 5-ct-strict-resumption-client",
          "160: resume-server = 5-ct-strict-resumption-server",
          "161: resume-client = 5-ct-strict-resumption-resume-client",
          "163: [5-ct-strict-resumption-server]",
          "164: Certificate = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1.pem",
          "166: PrivateKey = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1-key.pem",
          "168: [5-ct-strict-resumption-client]",
          "170: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1_issuer.pem",
          "173: [5-ct-strict-resumption-resume-client]",
          "178: [test-5]",
          "182: client = 5-ct-strict-resumption-client-extra",
          "183: resume-client = 5-ct-strict-resumption-resume-client-extra",
          "185: [5-ct-strict-resumption-client-extra]",
          "186: CTValidation = Strict",
          "188: [5-ct-strict-resumption-resume-client-extra]",
          "",
          "---------------"
        ],
        "test/ssl-tests/12-ct.conf.in||test/ssl-tests/12-ct.conf.in": [
          "File: test/ssl-tests/12-ct.conf.in -> test/ssl-tests/12-ct.conf.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: our @tests = (",
          "20:     {",
          "32:     {",
          "44:     },",
          "45:     {",
          "59:     {",
          "79:     },",
          "80: );",
          "",
          "[Removed Lines]",
          "19:     # Currently only have tests for certs without SCTs.",
          "21:  name => \"ct-permissive\",",
          "22:  server => { },",
          "23:  client => {",
          "24:           extra => {",
          "25:          \"CTValidation\" => \"Permissive\",",
          "26:      },",
          "27:  },",
          "28:  test => {",
          "29:      \"ExpectedResult\" => \"Success\",",
          "30:  },",
          "31:     },",
          "33:  name => \"ct-strict\",",
          "34:  server => { },",
          "35:  client => {",
          "36:           extra => {",
          "37:          \"CTValidation\" => \"Strict\",",
          "38:      },",
          "39:  },",
          "40:  test => {",
          "41:      \"ExpectedResult\" => \"ClientFail\",",
          "42:      \"ExpectedClientAlert\" => \"HandshakeFailure\",",
          "43:  },",
          "46:  name => \"ct-permissive-resumption\",",
          "47:  server => { },",
          "48:  client => {",
          "49:           extra => {",
          "50:          \"CTValidation\" => \"Permissive\",",
          "51:      },",
          "52:  },",
          "53:  test => {",
          "54:      \"HandshakeMode\" => \"Resume\",",
          "55:      \"ResumptionExpected\" => \"Yes\",",
          "56:      \"ExpectedResult\" => \"Success\",",
          "57:  },",
          "58:     },",
          "60:  name => \"ct-strict-resumption\",",
          "61:  server => { },",
          "62:  client => {",
          "63:           extra => {",
          "64:          \"CTValidation\" => \"Permissive\",",
          "65:      },",
          "66:  },",
          "67:  # SCTs are not present during resumption, so the resumption",
          "68:  # should succeed.",
          "69:  resume_client => {",
          "70:           extra => {",
          "71:          \"CTValidation\" => \"Strict\",",
          "72:      },",
          "73:  },",
          "74:  test => {",
          "75:      \"HandshakeMode\" => \"Resume\",",
          "76:      \"ResumptionExpected\" => \"Yes\",",
          "77:      \"ExpectedResult\" => \"Success\",",
          "78:  },",
          "",
          "[Added Lines]",
          "20:         name => \"ct-permissive-without-scts\",",
          "21:         server => { },",
          "22:         client => {",
          "23:             extra => {",
          "24:                 \"CTValidation\" => \"Permissive\",",
          "25:             },",
          "26:         },",
          "27:         test => {",
          "28:             \"ExpectedResult\" => \"Success\",",
          "29:         },",
          "30:     },",
          "31:     {",
          "32:         name => \"ct-permissive-with-scts\",",
          "33:         server => {",
          "34:             \"Certificate\" => test_pem(\"embeddedSCTs1.pem\"),",
          "35:             \"PrivateKey\"  => test_pem(\"embeddedSCTs1-key.pem\"),",
          "36:         },",
          "37:         client => {",
          "38:             \"VerifyCAFile\" => test_pem(\"embeddedSCTs1_issuer.pem\"),",
          "39:             extra => {",
          "40:                 \"CTValidation\" => \"Permissive\",",
          "41:             },",
          "42:         },",
          "43:         test => {",
          "44:             \"ExpectedResult\" => \"Success\",",
          "45:         },",
          "46:     },",
          "48:         name => \"ct-strict-without-scts\",",
          "49:         server => { },",
          "50:         client => {",
          "51:             extra => {",
          "52:                 \"CTValidation\" => \"Strict\",",
          "53:             },",
          "54:         },",
          "55:         test => {",
          "56:             \"ExpectedResult\" => \"ClientFail\",",
          "57:             \"ExpectedClientAlert\" => \"HandshakeFailure\",",
          "58:         },",
          "61:         name => \"ct-strict-with-scts\",",
          "62:         server => {",
          "63:             \"Certificate\" => test_pem(\"embeddedSCTs1.pem\"),",
          "64:             \"PrivateKey\"  => test_pem(\"embeddedSCTs1-key.pem\"),",
          "65:         },",
          "66:         client => {",
          "67:             \"VerifyCAFile\" => test_pem(\"embeddedSCTs1_issuer.pem\"),",
          "68:             extra => {",
          "69:                 \"CTValidation\" => \"Strict\",",
          "70:             },",
          "71:         },",
          "72:         test => {",
          "73:             \"ExpectedResult\" => \"Success\",",
          "74:         },",
          "75:     },",
          "76:     {",
          "77:         name => \"ct-permissive-resumption\",",
          "78:         server => {",
          "79:             \"Certificate\" => test_pem(\"embeddedSCTs1.pem\"),",
          "80:             \"PrivateKey\"  => test_pem(\"embeddedSCTs1-key.pem\"),",
          "81:         },",
          "82:         client => {",
          "83:             \"VerifyCAFile\" => test_pem(\"embeddedSCTs1_issuer.pem\"),",
          "84:             extra => {",
          "85:                 \"CTValidation\" => \"Permissive\",",
          "86:             },",
          "87:         },",
          "88:         test => {",
          "89:             \"HandshakeMode\" => \"Resume\",",
          "90:             \"ResumptionExpected\" => \"Yes\",",
          "91:             \"ExpectedResult\" => \"Success\",",
          "92:         },",
          "93:     },",
          "95:         name => \"ct-strict-resumption\",",
          "96:         server => {",
          "97:             \"Certificate\" => test_pem(\"embeddedSCTs1.pem\"),",
          "98:             \"PrivateKey\"  => test_pem(\"embeddedSCTs1-key.pem\"),",
          "99:         },",
          "100:         client => {",
          "101:             \"VerifyCAFile\" => test_pem(\"embeddedSCTs1_issuer.pem\"),",
          "102:             extra => {",
          "103:                 \"CTValidation\" => \"Strict\",",
          "104:             },",
          "105:         },",
          "106:         # SCTs are not present during resumption, so the resumption",
          "107:         # should succeed.",
          "108:         resume_client => {",
          "109:             extra => {",
          "110:                 \"CTValidation\" => \"Strict\",",
          "111:             },",
          "112:         },",
          "113:         test => {",
          "114:             \"HandshakeMode\" => \"Resume\",",
          "115:             \"ResumptionExpected\" => \"Yes\",",
          "116:             \"ExpectedResult\" => \"Success\",",
          "117:         },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b431b094330da3e54805c49fb262192e34bc3864",
      "candidate_info": {
        "commit_hash": "b431b094330da3e54805c49fb262192e34bc3864",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b431b094330da3e54805c49fb262192e34bc3864",
        "files": [
          "crypto/x509/x_all.c",
          "crypto/x509/x_crl.c"
        ],
        "message": "X509_CRL_digest() - ensure precomputed sha1 hash before returning it\n\nX509_CRL_digest() didn't check if the precomputed sha1 hash was actually\npresent.  This also makes sure there's an appropriate flag to check.\n\nReviewed-by: Kurt Roeckx <kurt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2314)\n(cherry picked from commit 6195848b2eea627c47f74b63eb2ba3dc3d5b6436)",
        "before_after_code_files": [
          "crypto/x509/x_all.c||crypto/x509/x_all.c",
          "crypto/x509/x_crl.c||crypto/x509/x_crl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/x509/x_all.c||crypto/x509/x_all.c": [
          "File: crypto/x509/x_all.c -> crypto/x509/x_all.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "377: int X509_CRL_digest(const X509_CRL *data, const EVP_MD *type,",
          "378:                     unsigned char *md, unsigned int *len)",
          "379: {",
          "382:         if (len != NULL)",
          "",
          "[Removed Lines]",
          "380:     if (type == EVP_sha1()) {",
          "",
          "[Added Lines]",
          "380:     if (type == EVP_sha1() && (data->flags & EXFLAG_SET) != 0) {",
          "",
          "---------------"
        ],
        "crypto/x509/x_crl.c||crypto/x509/x_crl.c": [
          "File: crypto/x509/x_crl.c -> crypto/x509/x_crl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "226:             if (crl->meth->crl_init(crl) == 0)",
          "227:                 return 0;",
          "228:         }",
          "229:         break;",
          "231:     case ASN1_OP_FREE_POST:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "230:         crl->flags |= EXFLAG_SET;",
          "",
          "---------------"
        ]
      }
    }
  ]
}