{
  "cve_id": "CVE-2021-20223",
  "cve_desc": "",
  "repo": "sqlite/sqlite",
  "patch_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
  "patch_info": {
    "commit_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "files": [
      "ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test",
      "manifest",
      "manifest.uuid"
    ],
    "message": "Prevent fts5 tokenizer unicode61 from considering '\\0' to be a token characters, even if other characters of class \"Cc\" are.\n\nFossilOrigin-Name: b7b7bde9b7a03665e3691c6d51118965f216d2dfb1617f138b9f9e60e418ed2f",
    "before_after_code_files": [
      "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test",
      "manifest.uuid||manifest.uuid"
    ]
  },
  "patch_diff": {
    "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c": [
      "File: ext/fts5/fts5_unicode2.c -> ext/fts5/fts5_unicode2.c"
    ],
    "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test": [
      "File: ext/fts5/test/fts5tok1.test -> ext/fts5/test/fts5tok1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "111:   SELECT * FROM t4;",
      "112: } {1 {SQL logic error}}",
      "115: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "114: #-------------------------------------------------------------------------",
      "115: # Embedded 0x00 characters.",
      "116: #",
      "117: reset_db",
      "118: do_execsql_test 3.1.0 {",
      "119:   CREATE VIRTUAL TABLE t1 USING fts5(z);",
      "120:   CREATE VIRTUAL TABLE tt USING fts5vocab(t1, 'instance');",
      "121:   INSERT INTO t1 VALUES('abc' || char(0) || 'def');",
      "122:   SELECT * FROM tt;",
      "123: } { abc 1 z 0 def 1 z 1 }",
      "124: do_execsql_test 3.1.1 {",
      "125:   SELECT hex(z) FROM t1;",
      "126: } {61626300646566}",
      "127: do_execsql_test 3.1.2 {",
      "128:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "129: } {}",
      "131: do_execsql_test 3.2.0 {",
      "132:   CREATE VIRTUAL TABLE t2 USING fts5(z,",
      "133:       tokenize=\"unicode61 categories 'L* N* Co Cc'\"",
      "134:   );",
      "135:   CREATE VIRTUAL TABLE tu USING fts5vocab(t2, 'instance');",
      "137:   INSERT INTO t2 VALUES('abc' || char(0) || 'def');",
      "138:   SELECT * FROM tu;",
      "139: } { abc 1 z 0 def 1 z 1 }",
      "141: do_execsql_test 3.2.1 {",
      "142:   SELECT hex(z) FROM t1;",
      "143: } {61626300646566}",
      "145: do_execsql_test 3.2.2 {",
      "146:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "147: } {}",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 0e7e113d9f2c929c1f8a85e2cfad8e2e60f0e8770212b5e5320fb2a2c42911f8",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "96e8eebf96fb2fe0f5ab91526fa6ea2b5486f559",
      "candidate_info": {
        "commit_hash": "96e8eebf96fb2fe0f5ab91526fa6ea2b5486f559",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/96e8eebf96fb2fe0f5ab91526fa6ea2b5486f559",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/os_unix.c"
        ],
        "message": "In the xAccess() method of the unix VFS, return true if the named object is a directory, regardless of what stat() reports as the st_size for the object.  Different filesystems report st_size differently for directories. Problem reported on the mailing list by Stefan Br\u00fcns.\n\nFossilOrigin-Name: c8c6dd0e6582ec9103d007b294c42bb1820be1fa7dab85d873b04e0b90571626",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/os_unix.c||src/os_unix.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 19c6240bdbb022b2af463e59d873280d0f2385bf30e22b9aad5fc9677a99f251",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/os_unix.c||src/os_unix.c": [
          "File: src/os_unix.c -> src/os_unix.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6260:   if( flags==SQLITE_ACCESS_EXISTS ){",
          "6261:     struct stat buf;",
          "6263:   }else{",
          "6265:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6263:                 (S_ISDIR(buf.st_mode) || buf.st_size>0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "62c94d0afe91f22fc1777ceadbc55f0ff2c941a9",
      "candidate_info": {
        "commit_hash": "62c94d0afe91f22fc1777ceadbc55f0ff2c941a9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/62c94d0afe91f22fc1777ceadbc55f0ff2c941a9",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbeaux.c"
        ],
        "message": "Add sqlite3BeginBenignMalloc() and EndBenignMalloc() calls to debugging function sqlite3VdbePrintOp().\n\nFossilOrigin-Name: 6f857d0e9e0893524c2f828a1a1600fefb6efeff12ecbc9bb1da106a5aff9c1c",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbeaux.c||src/vdbeaux.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 7cf93dc55c48c68731a1fe3ae3517fcfeb5c252bfa87e715a333c6194bcc0ace",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1836:   sqlite3 dummyDb;",
          "1837:   static const char *zFormat1 = \"%4d %-13s %4d %4d %4d %-13s %.2X %s\\n\";",
          "1838:   if( pOut==0 ) pOut = stdout;",
          "1839:   dummyDb.mallocFailed = 1;",
          "1840:   zP4 = sqlite3VdbeDisplayP4(&dummyDb, pOp);",
          "1841: #ifdef SQLITE_ENABLE_EXPLAIN_COMMENTS",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1839:   sqlite3BeginBenignMalloc();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1854:   fflush(pOut);",
          "1855:   sqlite3_free(zP4);",
          "1856:   sqlite3_free(zCom);",
          "1857: }",
          "1858: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1858:   sqlite3EndBenignMalloc();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "94acc2ef42e3e908dd0afb9ae2309a7236f4ecff",
      "candidate_info": {
        "commit_hash": "94acc2ef42e3e908dd0afb9ae2309a7236f4ecff",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/94acc2ef42e3e908dd0afb9ae2309a7236f4ecff",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/sqlite.h.in"
        ],
        "message": "Try again to fix the typo in the sqlite3_txn_state() documentation.\n\nFossilOrigin-Name: 6d1ab0403c2855b595f5d294305f41f56a7a93503f2a58d1b1d12431d480704e",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/sqlite.h.in||src/sqlite.h.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 23f7d01758cbcf22bd34e78fb8284c7af18f3059a03c4ff6ab3e556ca11fce19",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqlite.h.in||src/sqlite.h.in": [
          "File: src/sqlite.h.in -> src/sqlite.h.in"
        ]
      }
    },
    {
      "candidate_hash": "14c98a4f4016bb60679535e3d2d9fe6c49bfe04a",
      "candidate_info": {
        "commit_hash": "14c98a4f4016bb60679535e3d2d9fe6c49bfe04a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/14c98a4f4016bb60679535e3d2d9fe6c49bfe04a",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/where.c",
          "test/in6.test"
        ],
        "message": "At the end of the right-hand table loop of a LEFT JOIN that uses an IN operator in the ON clause, put the OP_IfNoHope operator after the OP_IfNotOpen operator, not before, to avoid a (harmless) uninitialized register reference.  Ticket [82b588d342d515d1]\n\nFossilOrigin-Name: 8b437b47266ec2d80d85eafcfdd6949556d6c28d9d67d5f43d89799f0f5b7bd0",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/where.c||src/where.c",
          "test/in6.test||test/in6.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ea914bec81c49625072fc9d23faa048300f3a0421e069d303b7203edcdfb3743",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/where.c||src/where.c": [
          "File: src/where.c -> src/where.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5336:         if( pIn->eEndLoopOp!=OP_Noop ){",
          "5337:           if( pIn->nPrefix ){",
          "5338:             assert( pLoop->wsFlags & WHERE_IN_EARLYOUT );",
          "5345:             if( pLevel->iLeftJoin ){",
          "",
          "[Removed Lines]",
          "5339:             if( (pLoop->wsFlags & WHERE_VIRTUALTABLE)==0 ){",
          "5340:               sqlite3VdbeAddOp4Int(v, OP_IfNoHope, pLevel->iIdxCur,",
          "5341:                   sqlite3VdbeCurrentAddr(v)+2+(pLevel->iLeftJoin!=0),",
          "5342:                   pIn->iBase, pIn->nPrefix);",
          "5343:               VdbeCoverage(v);",
          "5344:             }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5354:               sqlite3VdbeAddOp2(v, OP_IfNotOpen, pIn->iCur,",
          "5356:               );",
          "5357:               VdbeCoverage(v);",
          "5358:             }",
          "5359:           }",
          "5360:           sqlite3VdbeAddOp2(v, pIn->eEndLoopOp, pIn->iCur, pIn->addrInTop);",
          "5361:           VdbeCoverage(v);",
          "",
          "[Removed Lines]",
          "5355:                   sqlite3VdbeCurrentAddr(v) + 2",
          "",
          "[Added Lines]",
          "5349:                   sqlite3VdbeCurrentAddr(v) + 2 +",
          "5350:                      ((pLoop->wsFlags & WHERE_VIRTUALTABLE)==0)",
          "5354:             if( (pLoop->wsFlags & WHERE_VIRTUALTABLE)==0 ){",
          "5355:               sqlite3VdbeAddOp4Int(v, OP_IfNoHope, pLevel->iIdxCur,",
          "5356:                   sqlite3VdbeCurrentAddr(v)+2,",
          "5357:                   pIn->iBase, pIn->nPrefix);",
          "5358:               VdbeCoverage(v);",
          "5359:             }",
          "",
          "---------------"
        ],
        "test/in6.test||test/in6.test": [
          "File: test/in6.test -> test/in6.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:   ORDER BY +d;",
          "78: } {1 {} 2 {} 3 {} 4 {} 5 {} 8 {} 9 {}}",
          "80: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80: # 2020-03-16 ticket 82b588d342d515d1",
          "81: # Ensure that the IN-early-out optimization works with LEFT JOINs",
          "82: #",
          "83: reset_db",
          "84: do_execsql_test in6-3.100 {",
          "85:   CREATE TABLE t1(a);",
          "86:   INSERT INTO t1 VALUES(0);",
          "87:   CREATE TABLE t2(b, c, d);",
          "88:   INSERT INTO t2(b,c,d) VALUES(4,5,3),(4,5,4),(4,5,8);",
          "89:   CREATE INDEX t2bcd ON t2(b, c, d);",
          "90:   SELECT * FROM t1 LEFT JOIN t2 ON b=NULL AND c=5 AND d IN (2,3,4);",
          "91: } {0 {} {} {}}",
          "92: do_execsql_test in6-3.110 {",
          "93:   CREATE TABLE v0(v1);",
          "94:   CREATE TABLE v3(v5, v4);",
          "95:   INSERT INTO v0 VALUES(0);",
          "96:   CREATE INDEX v9 ON v3(v4, v4, v5);",
          "97:   SELECT quote(v5) FROM v0 LEFT JOIN v3 ON v4 = NULL AND v5 IN(0);",
          "98: } {NULL}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6aa7515c46f03f5e42843864cf732fbe0a0b284d",
      "candidate_info": {
        "commit_hash": "6aa7515c46f03f5e42843864cf732fbe0a0b284d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/6aa7515c46f03f5e42843864cf732fbe0a0b284d",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c",
          "test/fuzzdata8.db"
        ],
        "message": "Remove a NEVER() that turns out to be reachable.\n\nFossilOrigin-Name: 44e573ecd5c2b60107133d60c51f3a04a3f904e9c1cf926e9b8ea977c7acae8d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 98cea4a32ba558c137d71a5e373a6803d764d34c5640907371dcf6468ffb2e64",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1751:       nFrag = iFreeBlk - iEnd;",
          "1752:       if( iEnd>iFreeBlk ) return SQLITE_CORRUPT_PAGE(pPage);",
          "1753:       iEnd = iFreeBlk + get2byte(&data[iFreeBlk+2]);",
          "1755:         return SQLITE_CORRUPT_PAGE(pPage);",
          "1756:       }",
          "1757:       iSize = iEnd - iStart;",
          "",
          "[Removed Lines]",
          "1754:       if( NEVER(iEnd > pPage->pBt->usableSize) ){",
          "",
          "[Added Lines]",
          "1754:       if( iEnd > pPage->pBt->usableSize ){",
          "",
          "---------------"
        ]
      }
    }
  ]
}