{
  "cve_id": "CVE-2014-8541",
  "cve_desc": "libavcodec/mjpegdec.c in FFmpeg before 2.4.2 considers only dimension differences, and not bits-per-pixel differences, when determining whether an image size has changed, which allows remote attackers to cause a denial of service (out-of-bounds access) or possibly have unspecified other impact via crafted MJPEG data.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "5c378d6a6df8243f06c87962b873bd563e58cd39",
  "patch_info": {
    "commit_hash": "5c378d6a6df8243f06c87962b873bd563e58cd39",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/5c378d6a6df8243f06c87962b873bd563e58cd39",
    "files": [
      "libavcodec/mjpegdec.c"
    ],
    "message": "avcodec/mjpegdec: check bits per pixel for changes similar to dimensions\n\nFixes out of array accesses\nFixes: asan_heap-oob_16668e9_2_asan_heap-oob_16668e9_346_miss_congeniality_pegasus_mjpg.avi\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
    ]
  },
  "patch_diff": {
    "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c": [
      "File: libavcodec/mjpegdec.c -> libavcodec/mjpegdec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "245: int ff_mjpeg_decode_sof(MJpegDecodeContext *s)",
      "246: {",
      "248:     int h_count[MAX_COMPONENTS];",
      "249:     int v_count[MAX_COMPONENTS];",
      "",
      "[Removed Lines]",
      "247:     int len, nb_components, i, width, height, pix_fmt_id, ret;",
      "",
      "[Added Lines]",
      "247:     int len, nb_components, i, width, height, bits, pix_fmt_id, ret;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "255:     len     = get_bits(&s->gb, 16);",
      "256:     s->avctx->bits_per_raw_sample =",
      "259:     if (s->pegasus_rct)",
      "262:         s->rct  = 1;    // FIXME ugly",
      "264:     if(s->lossless && s->avctx->lowres){",
      "",
      "[Removed Lines]",
      "257:     s->bits = get_bits(&s->gb, 8);",
      "260:         s->bits = 9;",
      "261:     if (s->bits == 9 && !s->pegasus_rct)",
      "",
      "[Added Lines]",
      "257:     bits = get_bits(&s->gb, 8);",
      "260:         bits = 9;",
      "261:     if (bits == 9 && !s->pegasus_rct)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "291:             return AVERROR_INVALIDDATA;",
      "292:         }",
      "293:     }",
      "295:         avpriv_report_missing_feature(s->avctx,",
      "296:                                       \"JPEG-LS that is not <= 8 \"",
      "297:                                       \"bits/component or 16-bit gray\");",
      "",
      "[Removed Lines]",
      "294:     if (s->ls && !(s->bits <= 8 || nb_components == 1)) {",
      "",
      "[Added Lines]",
      "294:     if (s->ls && !(bits <= 8 || nb_components == 1)) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "339:     if (   width != s->width || height != s->height",
      "340:         || memcmp(s->h_count, h_count, sizeof(h_count))",
      "341:         || memcmp(s->v_count, v_count, sizeof(v_count))) {",
      "343:         s->width      = width;",
      "344:         s->height     = height;",
      "345:         memcpy(s->h_count, h_count, sizeof(h_count));",
      "346:         memcpy(s->v_count, v_count, sizeof(v_count));",
      "347:         s->interlaced = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "340:         || bits != s->bits",
      "346:         s->bits       = bits;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "49d69844f500e20708a86ae840e809538ba6c6ce",
      "candidate_info": {
        "commit_hash": "49d69844f500e20708a86ae840e809538ba6c6ce",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/49d69844f500e20708a86ae840e809538ba6c6ce",
        "files": [
          "libavcodec/mjpegdec.c"
        ],
        "message": "avcodec/mjpegdec: check bits per pixel for changes similar to dimensions\n\nFixes out of array accesses\nFixes: asan_heap-oob_16668e9_2_asan_heap-oob_16668e9_346_miss_congeniality_pegasus_mjpg.avi\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 5c378d6a6df8243f06c87962b873bd563e58cd39)\n\nConflicts:\n\n\tlibavcodec/mjpegdec.c\n(cherry picked from commit 94371a404c663c3dae3d542fa43951567ab67f82)\n\nConflicts:\n\n\tlibavcodec/mjpegdec.c",
        "before_after_code_files": [
          "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ],
          "candidate": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c": [
          "File: libavcodec/mjpegdec.c -> libavcodec/mjpegdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "213: int ff_mjpeg_decode_sof(MJpegDecodeContext *s)",
          "214: {",
          "216:     int h_count[MAX_COMPONENTS];",
          "217:     int v_count[MAX_COMPONENTS];",
          "",
          "[Removed Lines]",
          "215:     int len, nb_components, i, width, height, pix_fmt_id;",
          "",
          "[Added Lines]",
          "215:     int len, nb_components, i, width, height, bits, pix_fmt_id;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "223:     len     = get_bits(&s->gb, 16);",
          "226:     if (s->pegasus_rct)",
          "229:         s->rct  = 1;    // FIXME ugly",
          "232:         av_log(s->avctx, AV_LOG_ERROR, \"only 8 bits/component accepted\\n\");",
          "233:         return -1;",
          "234:     }",
          "",
          "[Removed Lines]",
          "224:     s->bits = get_bits(&s->gb, 8);",
          "227:         s->bits = 9;",
          "228:     if (s->bits == 9 && !s->pegasus_rct)",
          "231:     if (s->bits != 8 && !s->lossless) {",
          "",
          "[Added Lines]",
          "224:     bits = get_bits(&s->gb, 8);",
          "227:         bits = 9;",
          "228:     if (bits == 9 && !s->pegasus_rct)",
          "231:     if (bits != 8 && !s->lossless) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "259:             return AVERROR_INVALIDDATA;",
          "260:         }",
          "261:     }",
          "263:         avpriv_report_missing_feature(s->avctx,",
          "264:                                       \"JPEG-LS that is not <= 8 \"",
          "265:                                       \"bits/component or 16-bit gray\");",
          "",
          "[Removed Lines]",
          "262:     if (s->ls && !(s->bits <= 8 || nb_components == 1)) {",
          "",
          "[Added Lines]",
          "262:     if (s->ls && !(bits <= 8 || nb_components == 1)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "307:     if (   width != s->width || height != s->height",
          "308:         || memcmp(s->h_count, h_count, sizeof(h_count))",
          "309:         || memcmp(s->v_count, v_count, sizeof(v_count))) {",
          "311:         s->width      = width;",
          "312:         s->height     = height;",
          "313:         memcpy(s->h_count, h_count, sizeof(h_count));",
          "314:         memcpy(s->v_count, v_count, sizeof(v_count));",
          "315:         s->interlaced = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "308:         || bits != s->bits",
          "314:         s->bits       = bits;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9ec550c364835caaa928c361d009b75f25d774a9",
      "candidate_info": {
        "commit_hash": "9ec550c364835caaa928c361d009b75f25d774a9",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/9ec550c364835caaa928c361d009b75f25d774a9",
        "files": [
          "libavcodec/mjpegdec.c"
        ],
        "message": "avcodec/mjpegdec: check bits per pixel for changes similar to dimensions\n\nFixes out of array accesses\nFixes: asan_heap-oob_16668e9_2_asan_heap-oob_16668e9_346_miss_congeniality_pegasus_mjpg.avi\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 5c378d6a6df8243f06c87962b873bd563e58cd39)\n\nConflicts:\n\n\tlibavcodec/mjpegdec.c",
        "before_after_code_files": [
          "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ],
          "candidate": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c": [
          "File: libavcodec/mjpegdec.c -> libavcodec/mjpegdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "219: int ff_mjpeg_decode_sof(MJpegDecodeContext *s)",
          "220: {",
          "222:     int h_count[MAX_COMPONENTS];",
          "223:     int v_count[MAX_COMPONENTS];",
          "",
          "[Removed Lines]",
          "221:     int len, nb_components, i, width, height, pix_fmt_id;",
          "",
          "[Added Lines]",
          "221:     int len, nb_components, i, width, height, bits, pix_fmt_id;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "229:     len     = get_bits(&s->gb, 16);",
          "230:     s->avctx->bits_per_raw_sample =",
          "233:     if (s->pegasus_rct)",
          "236:         s->rct  = 1;    // FIXME ugly",
          "238:     if(s->lossless && s->avctx->lowres){",
          "",
          "[Removed Lines]",
          "231:     s->bits = get_bits(&s->gb, 8);",
          "234:         s->bits = 9;",
          "235:     if (s->bits == 9 && !s->pegasus_rct)",
          "",
          "[Added Lines]",
          "231:     bits = get_bits(&s->gb, 8);",
          "234:         bits = 9;",
          "235:     if (bits == 9 && !s->pegasus_rct)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "262:             return AVERROR_INVALIDDATA;",
          "263:         }",
          "264:     }",
          "266:         avpriv_report_missing_feature(s->avctx,",
          "267:                                       \"JPEG-LS that is not <= 8 \"",
          "268:                                       \"bits/component or 16-bit gray\");",
          "",
          "[Removed Lines]",
          "265:     if (s->ls && !(s->bits <= 8 || nb_components == 1)) {",
          "",
          "[Added Lines]",
          "265:     if (s->ls && !(bits <= 8 || nb_components == 1)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "310:     if (   width != s->width || height != s->height",
          "311:         || memcmp(s->h_count, h_count, sizeof(h_count))",
          "312:         || memcmp(s->v_count, v_count, sizeof(v_count))) {",
          "314:         s->width      = width;",
          "315:         s->height     = height;",
          "316:         memcpy(s->h_count, h_count, sizeof(h_count));",
          "317:         memcpy(s->v_count, v_count, sizeof(v_count));",
          "318:         s->interlaced = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "311:         || bits != s->bits",
          "317:         s->bits       = bits;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6f5c5051096a842d49b8ae3b10462a6098d4b890",
      "candidate_info": {
        "commit_hash": "6f5c5051096a842d49b8ae3b10462a6098d4b890",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/6f5c5051096a842d49b8ae3b10462a6098d4b890",
        "files": [
          "libavcodec/mjpegdec.c"
        ],
        "message": "avcodec/mjpegdec: check bits per pixel for changes similar to dimensions\n\nFixes out of array accesses\nFixes: asan_heap-oob_16668e9_2_asan_heap-oob_16668e9_346_miss_congeniality_pegasus_mjpg.avi\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 5c378d6a6df8243f06c87962b873bd563e58cd39)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ],
          "candidate": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c": [
          "File: libavcodec/mjpegdec.c -> libavcodec/mjpegdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "245: int ff_mjpeg_decode_sof(MJpegDecodeContext *s)",
          "246: {",
          "248:     int h_count[MAX_COMPONENTS];",
          "249:     int v_count[MAX_COMPONENTS];",
          "",
          "[Removed Lines]",
          "247:     int len, nb_components, i, width, height, pix_fmt_id, ret;",
          "",
          "[Added Lines]",
          "247:     int len, nb_components, i, width, height, bits, pix_fmt_id, ret;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "255:     len     = get_bits(&s->gb, 16);",
          "256:     s->avctx->bits_per_raw_sample =",
          "259:     if (s->pegasus_rct)",
          "262:         s->rct  = 1;    // FIXME ugly",
          "264:     if(s->lossless && s->avctx->lowres){",
          "",
          "[Removed Lines]",
          "257:     s->bits = get_bits(&s->gb, 8);",
          "260:         s->bits = 9;",
          "261:     if (s->bits == 9 && !s->pegasus_rct)",
          "",
          "[Added Lines]",
          "257:     bits = get_bits(&s->gb, 8);",
          "260:         bits = 9;",
          "261:     if (bits == 9 && !s->pegasus_rct)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "291:             return AVERROR_INVALIDDATA;",
          "292:         }",
          "293:     }",
          "295:         avpriv_report_missing_feature(s->avctx,",
          "296:                                       \"JPEG-LS that is not <= 8 \"",
          "297:                                       \"bits/component or 16-bit gray\");",
          "",
          "[Removed Lines]",
          "294:     if (s->ls && !(s->bits <= 8 || nb_components == 1)) {",
          "",
          "[Added Lines]",
          "294:     if (s->ls && !(bits <= 8 || nb_components == 1)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "339:     if (   width != s->width || height != s->height",
          "340:         || memcmp(s->h_count, h_count, sizeof(h_count))",
          "341:         || memcmp(s->v_count, v_count, sizeof(v_count))) {",
          "343:         s->width      = width;",
          "344:         s->height     = height;",
          "345:         memcpy(s->h_count, h_count, sizeof(h_count));",
          "346:         memcpy(s->v_count, v_count, sizeof(v_count));",
          "347:         s->interlaced = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "340:         || bits != s->bits",
          "346:         s->bits       = bits;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6287107eae40750f47ec3888c52fd94a9c697b38",
      "candidate_info": {
        "commit_hash": "6287107eae40750f47ec3888c52fd94a9c697b38",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/6287107eae40750f47ec3888c52fd94a9c697b38",
        "files": [
          "libavcodec/mjpegdec.c"
        ],
        "message": "avcodec/mjpegdec: check bits per pixel for changes similar to dimensions\n\nFixes out of array accesses\nFixes: asan_heap-oob_16668e9_2_asan_heap-oob_16668e9_346_miss_congeniality_pegasus_mjpg.avi\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 5c378d6a6df8243f06c87962b873bd563e58cd39)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ],
          "candidate": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c": [
          "File: libavcodec/mjpegdec.c -> libavcodec/mjpegdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "240: int ff_mjpeg_decode_sof(MJpegDecodeContext *s)",
          "241: {",
          "243:     int h_count[MAX_COMPONENTS];",
          "244:     int v_count[MAX_COMPONENTS];",
          "",
          "[Removed Lines]",
          "242:     int len, nb_components, i, width, height, pix_fmt_id, ret;",
          "",
          "[Added Lines]",
          "242:     int len, nb_components, i, width, height, bits, pix_fmt_id, ret;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "250:     len     = get_bits(&s->gb, 16);",
          "251:     s->avctx->bits_per_raw_sample =",
          "254:     if (s->pegasus_rct)",
          "257:         s->rct  = 1;    // FIXME ugly",
          "259:     if(s->lossless && s->avctx->lowres){",
          "",
          "[Removed Lines]",
          "252:     s->bits = get_bits(&s->gb, 8);",
          "255:         s->bits = 9;",
          "256:     if (s->bits == 9 && !s->pegasus_rct)",
          "",
          "[Added Lines]",
          "252:     bits = get_bits(&s->gb, 8);",
          "255:         bits = 9;",
          "256:     if (bits == 9 && !s->pegasus_rct)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "283:             return AVERROR_INVALIDDATA;",
          "284:         }",
          "285:     }",
          "287:         avpriv_report_missing_feature(s->avctx,",
          "288:                                       \"JPEG-LS that is not <= 8 \"",
          "289:                                       \"bits/component or 16-bit gray\");",
          "",
          "[Removed Lines]",
          "286:     if (s->ls && !(s->bits <= 8 || nb_components == 1)) {",
          "",
          "[Added Lines]",
          "286:     if (s->ls && !(bits <= 8 || nb_components == 1)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "331:     if (   width != s->width || height != s->height",
          "332:         || memcmp(s->h_count, h_count, sizeof(h_count))",
          "333:         || memcmp(s->v_count, v_count, sizeof(v_count))) {",
          "335:         s->width      = width;",
          "336:         s->height     = height;",
          "337:         memcpy(s->h_count, h_count, sizeof(h_count));",
          "338:         memcpy(s->v_count, v_count, sizeof(v_count));",
          "339:         s->interlaced = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "332:         || bits != s->bits",
          "338:         s->bits       = bits;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0ffa44340f247e5d24d006726ecc9c66c55dcf22",
      "candidate_info": {
        "commit_hash": "0ffa44340f247e5d24d006726ecc9c66c55dcf22",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/0ffa44340f247e5d24d006726ecc9c66c55dcf22",
        "files": [
          "libavcodec/mjpegdec.c"
        ],
        "message": "avcodec/mjpegdec: check bits per pixel for changes similar to dimensions\n\nFixes out of array accesses\nFixes: asan_heap-oob_16668e9_2_asan_heap-oob_16668e9_346_miss_congeniality_pegasus_mjpg.avi\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 5c378d6a6df8243f06c87962b873bd563e58cd39)\n\nConflicts:\n\n\tlibavcodec/mjpegdec.c\n(cherry picked from commit 94371a404c663c3dae3d542fa43951567ab67f82)\n\nConflicts:\n\n\tlibavcodec/mjpegdec.c",
        "before_after_code_files": [
          "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ],
          "candidate": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c": [
          "File: libavcodec/mjpegdec.c -> libavcodec/mjpegdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "212: int ff_mjpeg_decode_sof(MJpegDecodeContext *s)",
          "213: {",
          "215:     int h_count[MAX_COMPONENTS];",
          "216:     int v_count[MAX_COMPONENTS];",
          "",
          "[Removed Lines]",
          "214:     int len, nb_components, i, width, height, pix_fmt_id;",
          "",
          "[Added Lines]",
          "214:     int len, nb_components, i, width, height, bits, pix_fmt_id;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "222:     len     = get_bits(&s->gb, 16);",
          "225:     if (s->pegasus_rct)",
          "228:         s->rct  = 1;    // FIXME ugly",
          "231:         av_log(s->avctx, AV_LOG_ERROR, \"only 8 bits/component accepted\\n\");",
          "232:         return -1;",
          "233:     }",
          "",
          "[Removed Lines]",
          "223:     s->bits = get_bits(&s->gb, 8);",
          "226:         s->bits = 9;",
          "227:     if (s->bits == 9 && !s->pegasus_rct)",
          "230:     if (s->bits != 8 && !s->lossless) {",
          "",
          "[Added Lines]",
          "223:     bits = get_bits(&s->gb, 8);",
          "226:         bits = 9;",
          "227:     if (bits == 9 && !s->pegasus_rct)",
          "230:     if (bits != 8 && !s->lossless) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "258:             return AVERROR_INVALIDDATA;",
          "259:         }",
          "260:     }",
          "262:         av_log_missing_feature(s->avctx,",
          "263:                                \"For JPEG-LS anything except <= 8 bits/component\"",
          "264:                                \" or 16-bit gray\", 0);",
          "",
          "[Removed Lines]",
          "261:     if (s->ls && !(s->bits <= 8 || nb_components == 1)) {",
          "",
          "[Added Lines]",
          "261:     if (s->ls && !(bits <= 8 || nb_components == 1)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "303:     if (   width != s->width || height != s->height",
          "304:         || memcmp(s->h_count, h_count, sizeof(h_count))",
          "305:         || memcmp(s->v_count, v_count, sizeof(v_count))) {",
          "306:         av_freep(&s->qscale_table);",
          "308:         s->width      = width;",
          "309:         s->height     = height;",
          "310:         memcpy(s->h_count, h_count, sizeof(h_count));",
          "311:         memcpy(s->v_count, v_count, sizeof(v_count));",
          "312:         s->interlaced = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "304:         || bits != s->bits",
          "311:         s->bits       = bits;",
          "",
          "---------------"
        ]
      }
    }
  ]
}