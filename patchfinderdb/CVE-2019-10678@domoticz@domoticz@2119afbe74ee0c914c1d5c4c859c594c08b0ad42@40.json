{
  "cve_id": "CVE-2019-10678",
  "cve_desc": "Domoticz before 4.10579 neglects to categorize \\n and \\r as insecure argument options.",
  "repo": "domoticz/domoticz",
  "patch_hash": "2119afbe74ee0c914c1d5c4c859c594c08b0ad42",
  "patch_info": {
    "commit_hash": "2119afbe74ee0c914c1d5c4c859c594c08b0ad42",
    "repo": "domoticz/domoticz",
    "commit_url": "https://github.com/domoticz/domoticz/commit/2119afbe74ee0c914c1d5c4c859c594c08b0ad42",
    "files": [
      "main/Helper.cpp"
    ],
    "message": "Do not allow enters/returns in arguments (thanks to Fabio Carretto)",
    "before_after_code_files": [
      "main/Helper.cpp||main/Helper.cpp"
    ]
  },
  "patch_diff": {
    "main/Helper.cpp||main/Helper.cpp": [
      "File: main/Helper.cpp -> main/Helper.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "1014:  \"$\",",
      "1015:  \"<\",",
      "1016:  \">\",",
      "1017:  NULL",
      "1018: };",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1017:  \"\\n\",",
      "1018:  \"\\r\",",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3a7bedee58661833547d4f8d7a7aab22ac89dde9",
      "candidate_info": {
        "commit_hash": "3a7bedee58661833547d4f8d7a7aab22ac89dde9",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/3a7bedee58661833547d4f8d7a7aab22ac89dde9",
        "files": [
          "push/BasePush.cpp"
        ],
        "message": "Removed duplicate entry",
        "before_after_code_files": [
          "push/BasePush.cpp||push/BasePush.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "push/BasePush.cpp||push/BasePush.cpp": [
          "File: push/BasePush.cpp -> push/BasePush.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "292:   { pTypeEvohomeWater, sTypeEvohomeWater, \"Temperature,State,Status\" },",
          "293:   { pTypeEvohomeRelay, sTypeEvohomeRelay, \"Status\" },",
          "297:   { pTypeGeneralSwitch, sSwitchTypeX10, \"Status\" },",
          "298:   { pTypeGeneralSwitch, sSwitchTypeARC, \"Status\" },",
          "299:   { pTypeGeneralSwitch, sSwitchTypeAB400D, \"Status\" },",
          "",
          "[Removed Lines]",
          "295:   { pTypeGeneralSwitch, sSwitchTypeX10, \"Status\" },",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e32df707563b1bf922afd4cc2abc07d40e14f652",
      "candidate_info": {
        "commit_hash": "e32df707563b1bf922afd4cc2abc07d40e14f652",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/e32df707563b1bf922afd4cc2abc07d40e14f652",
        "files": [
          "hardware/Rtl433.cpp"
        ],
        "message": "RTL433, support for sensors reporting in Fahrenheit (Should fix #3088)",
        "before_after_code_files": [
          "hardware/Rtl433.cpp||hardware/Rtl433.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "hardware/Rtl433.cpp||hardware/Rtl433.cpp": [
          "File: hardware/Rtl433.cpp -> hardware/Rtl433.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "206:   tempC = (float)atof(data[\"temperature_C\"].c_str());",
          "207:   haveTemp = true;",
          "208:  }",
          "210:  if (FindField(data, \"humidity\"))",
          "211:  {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "209:  else if (FindField(data, \"temperature_F\"))",
          "210:  {",
          "211:   tempC = (float)ConvertToCelsius(atof(data[\"temperature_F\"].c_str()));",
          "212:   haveTemp = true;",
          "213:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "27933233fcdc28bf090f2aeb1eebcc506b986d6c",
      "candidate_info": {
        "commit_hash": "27933233fcdc28bf090f2aeb1eebcc506b986d6c",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/27933233fcdc28bf090f2aeb1eebcc506b986d6c",
        "files": [
          "hardware/plugins/Plugins.cpp"
        ],
        "message": "Add global variables to Paramaters dict",
        "before_after_code_files": [
          "hardware/plugins/Plugins.cpp||hardware/plugins/Plugins.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "hardware/plugins/Plugins.cpp||hardware/plugins/Plugins.cpp": [
          "File: hardware/plugins/Plugins.cpp -> hardware/plugins/Plugins.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: extern std::string szWWWFolder;",
          "35: extern std::string szStartupFolder;",
          "36: extern std::string szAppVersion;",
          "37: extern std::string szAppHash;",
          "38: extern std::string szAppDate;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: extern std::string szUserDataFolder;",
          "37: extern std::string szWebRoot;",
          "38: extern std::string dbasefile;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1130:      const char* pChar = sd[0].c_str();",
          "1131:      ADD_STRING_TO_DICT(pParamsDict, \"HomeFolder\", m_HomeFolder);",
          "1132:      ADD_STRING_TO_DICT(pParamsDict, \"StartupFolder\", szStartupFolder);",
          "1133:      ADD_STRING_TO_DICT(pParamsDict, \"Version\", m_Version);",
          "1134:      ADD_STRING_TO_DICT(pParamsDict, \"Author\", m_Author);",
          "1135:      ADD_STRING_TO_DICT(pParamsDict, \"Name\", sd[0]);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1136:      ADD_STRING_TO_DICT(pParamsDict, \"UserDataFolder\", szUserDataFolder);",
          "1137:      ADD_STRING_TO_DICT(pParamsDict, \"WebRoot\", szWebRoot);",
          "1138:      ADD_STRING_TO_DICT(pParamsDict, \"Database\", dbasefile);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e588266e3d4d25417ff35b58c51a85f37e073883",
      "candidate_info": {
        "commit_hash": "e588266e3d4d25417ff35b58c51a85f37e073883",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/e588266e3d4d25417ff35b58c51a85f37e073883",
        "files": [
          "hardware/plugins/Plugins.cpp",
          "main/WebServer.cpp",
          "notifications/NotificationHelper.cpp",
          "notifications/NotificationKodi.cpp",
          "www/app/DashboardController.js",
          "www/app/DeviceLightEdit.js",
          "www/app/LightsController.js",
          "www/html5.appcache",
          "www/images/Contact48_Off.png",
          "www/images/Contact48_On.png",
          "www/images/contact48.png",
          "www/images/contact48_open.png",
          "www/js/domoticzdevices.js",
          "www/views/device_light_edit.html"
        ],
        "message": "Renamed Contact icon (preparation for custom icon) Fixed possible counter icon issue",
        "before_after_code_files": [
          "hardware/plugins/Plugins.cpp||hardware/plugins/Plugins.cpp",
          "main/WebServer.cpp||main/WebServer.cpp",
          "notifications/NotificationHelper.cpp||notifications/NotificationHelper.cpp",
          "notifications/NotificationKodi.cpp||notifications/NotificationKodi.cpp",
          "www/app/DashboardController.js||www/app/DashboardController.js",
          "www/app/DeviceLightEdit.js||www/app/DeviceLightEdit.js",
          "www/app/LightsController.js||www/app/LightsController.js",
          "www/html5.appcache||www/html5.appcache",
          "www/js/domoticzdevices.js||www/js/domoticzdevices.js",
          "www/views/device_light_edit.html||www/views/device_light_edit.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "hardware/plugins/Plugins.cpp||hardware/plugins/Plugins.cpp": [
          "File: hardware/plugins/Plugins.cpp -> hardware/plugins/Plugins.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1946:     szTypeImage = \"doorbell48\";",
          "1947:     break;",
          "1948:    case STYPE_Contact:",
          "1950:     break;",
          "1951:    case STYPE_Blinds:",
          "1952:    case STYPE_BlindsPercentage:",
          "",
          "[Removed Lines]",
          "1949:     szTypeImage = \"contact48\";",
          "",
          "[Added Lines]",
          "1949:     szTypeImage = \"Contact48\";",
          "",
          "---------------"
        ],
        "main/WebServer.cpp||main/WebServer.cpp": [
          "File: main/WebServer.cpp -> main/WebServer.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "8941:       }",
          "8942:       else if (switchtype == STYPE_Contact)",
          "8943:       {",
          "8944:        root[\"result\"][ii][\"TypeImg\"] = \"contact\";",
          "8945:        bool bIsOn = IsLightSwitchOn(lstatus);",
          "8946:        if (bIsOn) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8944:        if (CustomImage == 0)",
          "8945:        {",
          "8946:         root[\"result\"][ii][\"Image\"] = \"Contact\";",
          "8947:        }",
          "",
          "---------------"
        ],
        "notifications/NotificationHelper.cpp||notifications/NotificationHelper.cpp": [
          "File: notifications/NotificationHelper.cpp -> notifications/NotificationHelper.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1018:       break;",
          "1019:      case STYPE_Contact:",
          "1020:       notValue = \"Open\";",
          "1022:       break;",
          "1023:      case STYPE_DoorContact:",
          "1024:       notValue = \"Open\";",
          "",
          "[Removed Lines]",
          "1021:       szExtraData += \"Image=contact48_open|\";",
          "",
          "[Added Lines]",
          "1021:       szExtraData += \"Image=Contact48_On|\";",
          "",
          "---------------"
        ],
        "notifications/NotificationKodi.cpp||notifications/NotificationKodi.cpp": [
          "File: notifications/NotificationKodi.cpp -> notifications/NotificationKodi.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "131:     szTypeImage = \"doorbell48\";",
          "132:     break;",
          "133:    case STYPE_Contact:",
          "135:     break;",
          "136:    case STYPE_Blinds:",
          "137:    case STYPE_BlindsPercentage:",
          "",
          "[Removed Lines]",
          "134:     szTypeImage = \"contact48\";",
          "",
          "[Added Lines]",
          "134:     szTypeImage = \"Contact48\";",
          "",
          "---------------"
        ],
        "www/app/DashboardController.js||www/app/DashboardController.js": [
          "File: www/app/DashboardController.js -> www/app/DashboardController.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "672:           }",
          "673:           else if (item.SwitchType == \"Contact\") {",
          "674:            if (item.Status == 'Closed') {",
          "676:            }",
          "677:            else {",
          "679:            }",
          "680:           }",
          "681:           else if ((item.SwitchType == \"Blinds\") || (item.SwitchType.indexOf(\"Venetian Blinds\") == 0)) {",
          "",
          "[Removed Lines]",
          "675:             img = '<a href=\"#/Devices/' + item.idx + '/Log\"><img src=\"images/contact48.png\" class=\"lcursor\" height=\"40\" width=\"40\"></a>';",
          "678:             img = '<a href=\"#/Devices/' + item.idx + '/Log\"><img src=\"images/contact48_open.png\" class=\"lcursor\" height=\"40\" width=\"40\"></a>';",
          "",
          "[Added Lines]",
          "675:             img = '<a href=\"#/Devices/' + item.idx + '/Log\"><img src=\"images/' + item.Image + '48_Off.png\" class=\"lcursor\" height=\"40\" width=\"40\"></a>';",
          "678:             img = '<a href=\"#/Devices/' + item.idx + '/Log\"><img src=\"images/' + item.Image + '48_On.png\" class=\"lcursor\" height=\"40\" width=\"40\"></a>';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2497:          }",
          "2498:          else if (item.SwitchType == \"Contact\") {",
          "2499:           if (item.Status == 'Closed') {",
          "2501:           }",
          "2502:           else {",
          "2504:           }",
          "2505:          }",
          "2506:          else if (item.SwitchType == \"Media Player\") {",
          "",
          "[Removed Lines]",
          "2500:            xhtm += '\\t      <td id=\"img\" class=\"img img1\"><a href=\"#/Devices/' + item.idx + '/Log\"><img src=\"images/contact48.png\" class=\"lcursor\" height=\"40\" width=\"40\"></a></td>\\n';",
          "2503:            xhtm += '\\t      <td id=\"img\" class=\"img img1\"><a href=\"#/Devices/' + item.idx + '/Log\"><img src=\"images/contact48_open.png\" class=\"lcursor\" height=\"40\" width=\"40\"></a></td>\\n';",
          "",
          "[Added Lines]",
          "2500:            xhtm += '\\t      <td id=\"img\" class=\"img img1\"><a href=\"#/Devices/' + item.idx + '/Log\"><img src=\"images/' + item.Image + '48_Off.png\" class=\"lcursor\" height=\"40\" width=\"40\"></a></td>\\n';",
          "2503:            xhtm += '\\t      <td id=\"img\" class=\"img img1\"><a href=\"#/Devices/' + item.idx + '/Log\"><img src=\"images/' + item.Image + '48_On.png\" class=\"lcursor\" height=\"40\" width=\"40\"></a></td>\\n';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3742:                                                 imagehtml = '<a href=\"#/Devices/' + item.idx + '/Log\"><img src=\"images/Water48_On.png\" class=\"lcursor\" height=\"40\" width=\"40\"></a></td>\\n';",
          "3743:            }",
          "3744:            else if (item.SwitchTypeVal == 3) {",
          "3746:            }",
          "3747:            else if (item.SwitchTypeVal == 4) {",
          "3748:                                                 imagehtml = '<a href=\"#/Devices/' + item.idx + '/Log\"><img src=\"images/PV48.png\" class=\"lcursor\" height=\"40\" width=\"40\"></a></td>\\n';",
          "",
          "[Removed Lines]",
          "3745:                                                 imagehtml = '<a href=\"#/Devices/' + item.idx + '/Log\"><img src=\"images/Counter48.png.png\" class=\"lcursor\" height=\"40\" width=\"40\"></a></td>\\n';",
          "",
          "[Added Lines]",
          "3745:                                                 imagehtml = '<a href=\"#/Devices/' + item.idx + '/Log\"><img src=\"images/Counter48.png\" class=\"lcursor\" height=\"40\" width=\"40\"></a></td>\\n';",
          "",
          "---------------"
        ],
        "www/app/DeviceLightEdit.js||www/app/DeviceLightEdit.js": [
          "File: www/app/DeviceLightEdit.js -> www/app/DeviceLightEdit.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:         },",
          "8:         controller: function ($element, domoticzApi) {",
          "9:             var vm = this;",
          "12:             vm.$onInit = function () {",
          "14:                 domoticzApi.sendRequest({",
          "15:                     type: 'custom_light_icons'",
          "16:                 }).then(function (data) {",
          "18:                         return {",
          "19:                             text: item.text,",
          "20:                             value: item.idx,",
          "",
          "[Removed Lines]",
          "10:             var icons = [];",
          "17:                     icons = (data.result || []).map(function (item) {",
          "",
          "[Added Lines]",
          "10:             var switch_icons = [];",
          "17:                     switch_icons = (data.result || []).map(function (item) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25:                     });",
          "27:                     $element.find('#icon-select').ddslick({",
          "29:                         width: 260,",
          "30:                         height: 390,",
          "31:                         selectText: 'Select Switch Icon',",
          "",
          "[Removed Lines]",
          "28:                         data: icons,",
          "",
          "[Added Lines]",
          "28:                         data: switch_icons,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "41:                 vm.ngModelCtrl.$render = function () {",
          "42:                     var value = vm.ngModelCtrl.$modelValue;",
          "45:                         if (item.value === value) {",
          "46:                             $element.find('#icon-select').ddslick('select', { index: index });",
          "47:                         }",
          "",
          "[Removed Lines]",
          "44:                     icons.forEach(function (item, index) {",
          "",
          "[Added Lines]",
          "44:                     switch_icons.forEach(function (item, index) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "468:         vm.isOffActionAvailable = isOffActionAvailable;",
          "469:         vm.isColorSettingsAvailable = isColorSettingsAvailable;",
          "470:         vm.isWhiteSettingsAvailable = isWhiteSettingsAvailable;",
          "472:         init();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "471:         vm.updateSwitchType = updateSwitchType;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "575:         }",
          "577:         function isSwitchIconAvailable() {",
          "579:         }",
          "581:         function isLevelsAvailable() {",
          "",
          "[Removed Lines]",
          "578:             return [0, 7, 17, 18].includes(vm.device.SwitchTypeVal);",
          "",
          "[Added Lines]",
          "579:             return [0, 2, 7, 17, 18].includes(vm.device.SwitchTypeVal);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "589:         function isWhiteSettingsAvailable() {",
          "590:             return vm.device.SubType === 'White';",
          "591:         }",
          "592:     });",
          "593: });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "594:         function updateSwitchType() {",
          "597:                     if (switchtype==0) {",
          "599:                     } else if (switchtype == 1) {",
          "601:                     } else if (switchtype == 2) {",
          "603:                     } else if (switchtype == 7) {",
          "605:                     } else if (switchtype == 9) {",
          "607:                     } else if (switchtype == 10) {",
          "609:                     } else if (switchtype == 11) {",
          "611:                     } else if (switchtype == 17) {",
          "613:                     } else if (switchtype == 18) {",
          "615:                     } else if (switchtype == 19) {",
          "617:                     } else if (switchtype == 20) {",
          "619:                     }",
          "621:      switch_icons.forEach(function (item, index) {",
          "622:       if (item.value === 0) {",
          "623:        item.imageSrc = 'images/' + imageSrc + '.png';",
          "624:       }",
          "625:      });",
          "628:         }",
          "",
          "---------------"
        ],
        "www/app/LightsController.js||www/app/LightsController.js": [
          "File: www/app/LightsController.js -> www/app/LightsController.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "425:         }",
          "426:         else if (item.SwitchType == \"Contact\") {",
          "427:          if (item.Status == 'Closed') {",
          "429:          }",
          "430:          else {",
          "432:          }",
          "433:         }",
          "434:         else if ((item.SwitchType == \"Blinds\") || (item.SwitchType.indexOf(\"Venetian Blinds\") == 0)) {",
          "",
          "[Removed Lines]",
          "428:           img = '<img src=\"images/contact48.png\" height=\"48\" width=\"48\">';",
          "431:           img = '<img src=\"images/contact48_open.png\" height=\"48\" width=\"48\">';",
          "",
          "[Added Lines]",
          "428:           img = '<img src=\"images/' + item.Image + '48_Off.png\" height=\"48\" width=\"48\">';",
          "431:           img = '<img src=\"images/' + item.Image + '48_On.png\" height=\"48\" width=\"48\">';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "998:        }",
          "999:        else if (item.SwitchType == \"Contact\") {",
          "1000:         if (item.Status == 'Closed') {",
          "1002:         }",
          "1003:         else {",
          "1005:         }",
          "1006:         bAddTimer = false;",
          "1007:        }",
          "",
          "[Removed Lines]",
          "1001:          xhtm += '\\t      <td id=\"img\"><img src=\"images/contact48.png\" height=\"48\" width=\"48\"></td>\\n';",
          "1004:          xhtm += '\\t      <td id=\"img\"><img src=\"images/contact48_open.png\" height=\"48\" width=\"48\"></td>\\n';",
          "",
          "[Added Lines]",
          "1001:          xhtm += '\\t      <td id=\"img\"><img src=\"images/' + item.Image + '48_Off.png\" height=\"48\" width=\"48\"></td>\\n';",
          "1004:          xhtm += '\\t      <td id=\"img\"><img src=\"images/' + item.Image + '48_On.png\" height=\"48\" width=\"48\"></td>\\n';",
          "",
          "---------------"
        ],
        "www/html5.appcache||www/html5.appcache": [
          "File: www/html5.appcache -> www/html5.appcache",
          "--- Hunk 1 ---",
          "[Context before]",
          "130: images/Computer48_On.png",
          "131: images/contact.png",
          "132: images/contact_open.png",
          "135: images/copy.png",
          "136: images/copy_hover.png",
          "137: images/counter.png",
          "",
          "[Removed Lines]",
          "133: images/contact48.png",
          "134: images/contact48_open.png",
          "",
          "[Added Lines]",
          "133: images/Contact48_Off.png",
          "134: images/Contact48_On.png",
          "",
          "---------------"
        ],
        "www/js/domoticzdevices.js||www/js/domoticzdevices.js": [
          "File: www/js/domoticzdevices.js -> www/js/domoticzdevices.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1336: function Contact(item) {",
          "1337:     if (arguments.length != 0) {",
          "1338:         this.parent.constructor(item);",
          "1342:         this.data = '';",
          "1343:         this.smallStatus = this.status;",
          "1344:         this.LogLink = this.onClick = \"window.location.href = '#/Devices/\" + this.index + \"/Log'\";",
          "",
          "[Removed Lines]",
          "1339:         if (item.CustomImage == 0) {",
          "1340:             this.image = (this.status == \"Closed\") ? \"images/contact48.png\" : this.image = \"images/contact48_open.png\";",
          "1341:         }",
          "",
          "[Added Lines]",
          "1339:   this.image = (this.status == \"Closed\") ? \"images/\" + item.Image + \"48_Off.png\" : \"images/\" + item.Image + \"48_On.png\";",
          "",
          "---------------"
        ],
        "www/views/device_light_edit.html||www/views/device_light_edit.html": [
          "File: www/views/device_light_edit.html -> www/views/device_light_edit.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:                             style=\"width:200px\"",
          "43:                             class=\"combobox ui-corner-all\"",
          "44:                             ng-options=\"item.value as item.label for item in ::vm.switchTypeOptions\"",
          "46:                     </select>",
          "47:                 </td>",
          "48:             </tr>",
          "",
          "[Removed Lines]",
          "45:                             ng-model=\"vm.device.SwitchTypeVal\">",
          "",
          "[Added Lines]",
          "45:                             ng-model=\"vm.device.SwitchTypeVal\"",
          "46:                             ng-change=\"vm.updateSwitchType()\">",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ca729a4cf34c194f1ee6d9828d18a9c81dd7d966",
      "candidate_info": {
        "commit_hash": "ca729a4cf34c194f1ee6d9828d18a9c81dd7d966",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/ca729a4cf34c194f1ee6d9828d18a9c81dd7d966",
        "files": [
          "hardware/plugins/PluginManager.cpp"
        ],
        "message": "Defined __STDC_FORMAT_MACROS (fixes compile error with GCC 8.2 #2924)",
        "before_after_code_files": [
          "hardware/plugins/PluginManager.cpp||hardware/plugins/PluginManager.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "hardware/plugins/PluginManager.cpp||hardware/plugins/PluginManager.cpp": [
          "File: hardware/plugins/PluginManager.cpp -> hardware/plugins/PluginManager.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: #ifdef ENABLE_PYTHON",
          "8: #include <tinyxml.h>",
          "9: #include <inttypes.h>",
          "11: #include \"PluginManager.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9: #define __STDC_FORMAT_MACROS",
          "",
          "---------------"
        ]
      }
    }
  ]
}