{
  "cve_id": "CVE-2016-6214",
  "cve_desc": "gd_tga.c in the GD Graphics Library (aka libgd) before 2.2.3 allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted TGA file.",
  "repo": "libgd/libgd",
  "patch_hash": "10ef1dca63d62433fda13309b4a228782db823f7",
  "patch_info": {
    "commit_hash": "10ef1dca63d62433fda13309b4a228782db823f7",
    "repo": "libgd/libgd",
    "commit_url": "https://github.com/libgd/libgd/commit/10ef1dca63d62433fda13309b4a228782db823f7",
    "files": [
      "src/gd_tga.c",
      "tests/tga/.gitignore",
      "tests/tga/CMakeLists.txt",
      "tests/tga/Makemodule.am",
      "tests/tga/bug00247a.c",
      "tests/tga/bug00247a.tga"
    ],
    "message": "Unsupported TGA bpp/alphabit combinations should error gracefully\n\nCurrently, only 24bpp without alphabits and 32bpp with 8 alphabits are\nreally supported. All other combinations will be rejected with a warning.",
    "before_after_code_files": [
      "src/gd_tga.c||src/gd_tga.c",
      "tests/tga/Makemodule.am||tests/tga/Makemodule.am",
      "tests/tga/bug00247a.c||tests/tga/bug00247a.c"
    ]
  },
  "patch_diff": {
    "src/gd_tga.c||src/gd_tga.c": [
      "File: src/gd_tga.c -> src/gd_tga.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "99:    if (tga->bits == TGA_BPP_24) {",
      "101:     bitmap_caret += 3;",
      "103:     register int a = tga->bitmap[bitmap_caret + 3];",
      "",
      "[Removed Lines]",
      "102:    } else if (tga->bits == TGA_BPP_32 || tga->alphabits) {",
      "",
      "[Added Lines]",
      "102:    } else if (tga->bits == TGA_BPP_32 && tga->alphabits) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "159:  printf(\"wxh: %i %i\\n\", tga->width, tga->height);",
      "160: #endif",
      "170:   return -1;",
      "172:  }",
      "174:  tga->ident = NULL;",
      "",
      "[Removed Lines]",
      "162:  switch(tga->bits) {",
      "163:  case 8:",
      "164:  case 16:",
      "165:  case 24:",
      "166:  case 32:",
      "167:   break;",
      "168:  default:",
      "169:   gd_error(\"bps %i not supported\", tga->bits);",
      "171:   break;",
      "",
      "[Added Lines]",
      "162:  if (!((tga->bits == TGA_BPP_24 && tga->alphabits == 0)",
      "163:   || (tga->bits == TGA_BPP_32 && tga->alphabits == 8)))",
      "164:  {",
      "165:   gd_error_ex(GD_WARNING, \"gd-tga: %u bits per pixel with %u alpha bits not supported\\n\",",
      "166:    tga->bits, tga->alphabits);",
      "",
      "---------------"
    ],
    "tests/tga/Makemodule.am||tests/tga/Makemodule.am": [
      "File: tests/tga/Makemodule.am -> tests/tga/Makemodule.am",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: libgd_test_programs += \\",
      "2:  tga/bug00084 \\",
      "3:  tga/bug00247 \\",
      "4:  tga/tga_null",
      "6: EXTRA_DIST += \\",
      "7:  tga/CMakeLists.txt \\",
      "8:  tga/bug00084.tga \\",
      "",
      "[Removed Lines]",
      "9:  tga/bug00247.tga",
      "",
      "[Added Lines]",
      "4:  tag/bug00247a \\",
      "10:  tga/bug00247.tga \\",
      "11:  tga/bug00247a.tga",
      "",
      "---------------"
    ],
    "tests/tga/bug00247a.c||tests/tga/bug00247a.c": [
      "File: tests/tga/bug00247a.c -> tests/tga/bug00247a.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2: We test that a 8bpp TGA file will be gracefully rejected by",
      "3: gdImageCreateFromTga().",
      "6: #include <stdio.h>",
      "8: #include \"gd.h\"",
      "9: #include \"gdtest.h\"",
      "11: int main(int argc, char **argv)",
      "12: {",
      "13:     gdImagePtr im;",
      "14:     FILE *fp = gdTestFileOpen(\"tga/bug00247a.tga\");",
      "15:     im = gdImageCreateFromTga(fp);",
      "16:     gdTestAssert(im == NULL);",
      "17:     fclose(fp);",
      "18:     return gdNumFailures();",
      "19: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "341aa68843ceceae9ba6e083431f14a07bd92308",
      "candidate_info": {
        "commit_hash": "341aa68843ceceae9ba6e083431f14a07bd92308",
        "repo": "libgd/libgd",
        "commit_url": "https://github.com/libgd/libgd/commit/341aa68843ceceae9ba6e083431f14a07bd92308",
        "files": [
          "src/gd_tga.c",
          "tests/tga/.gitignore",
          "tests/tga/CMakeLists.txt",
          "tests/tga/Makemodule.am",
          "tests/tga/bug00247a.c",
          "tests/tga/bug00247a.tga"
        ],
        "message": "Unsupported TGA bpp/alphabit combinations should error gracefully\n\nCurrently, only 24bpp without alphabits and 32bpp with 8 alphabits are\nreally supported. All other combinations will be rejected with a warning.\n\n(cherry picked from commit cb1a0b7e54e9aa118270c23a4a6fe560e4590dc9)",
        "before_after_code_files": [
          "src/gd_tga.c||src/gd_tga.c",
          "tests/tga/Makemodule.am||tests/tga/Makemodule.am",
          "tests/tga/bug00247a.c||tests/tga/bug00247a.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/gd_tga.c||src/gd_tga.c",
            "tests/tga/Makemodule.am||tests/tga/Makemodule.am",
            "tests/tga/bug00247a.c||tests/tga/bug00247a.c"
          ],
          "candidate": [
            "src/gd_tga.c||src/gd_tga.c",
            "tests/tga/Makemodule.am||tests/tga/Makemodule.am",
            "tests/tga/bug00247a.c||tests/tga/bug00247a.c"
          ]
        }
      },
      "candidate_diff": {
        "src/gd_tga.c||src/gd_tga.c": [
          "File: src/gd_tga.c -> src/gd_tga.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:    if (tga->bits == TGA_BPP_24) {",
          "101:     bitmap_caret += 3;",
          "103:     register int a = tga->bitmap[bitmap_caret + 3];",
          "",
          "[Removed Lines]",
          "102:    } else if (tga->bits == TGA_BPP_32 || tga->alphabits) {",
          "",
          "[Added Lines]",
          "102:    } else if (tga->bits == TGA_BPP_32 && tga->alphabits) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "159:  printf(\"wxh: %i %i\\n\", tga->width, tga->height);",
          "160: #endif",
          "170:   return -1;",
          "172:  }",
          "174:  tga->ident = NULL;",
          "",
          "[Removed Lines]",
          "162:  switch(tga->bits) {",
          "163:  case 8:",
          "164:  case 16:",
          "165:  case 24:",
          "166:  case 32:",
          "167:   break;",
          "168:  default:",
          "169:   gd_error(\"bps %i not supported\", tga->bits);",
          "171:   break;",
          "",
          "[Added Lines]",
          "162:  if (!((tga->bits == TGA_BPP_24 && tga->alphabits == 0)",
          "163:   || (tga->bits == TGA_BPP_32 && tga->alphabits == 8)))",
          "164:  {",
          "165:   gd_error_ex(GD_WARNING, \"gd-tga: %u bits per pixel with %u alpha bits not supported\\n\",",
          "166:    tga->bits, tga->alphabits);",
          "",
          "---------------"
        ],
        "tests/tga/Makemodule.am||tests/tga/Makemodule.am": [
          "File: tests/tga/Makemodule.am -> tests/tga/Makemodule.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: libgd_test_programs += \\",
          "2:  tga/bug00084 \\",
          "3:  tga/bug00247 \\",
          "4:  tga/tga_null",
          "6: EXTRA_DIST += \\",
          "7:  tga/CMakeLists.txt \\",
          "8:  tga/bug00084.tga \\",
          "",
          "[Removed Lines]",
          "9:  tga/bug00247.tga",
          "",
          "[Added Lines]",
          "4:  tga/bug00247a \\",
          "10:  tga/bug00247.tga \\",
          "11:  tga/bug00247a.tga",
          "",
          "---------------"
        ],
        "tests/tga/bug00247a.c||tests/tga/bug00247a.c": [
          "File: tests/tga/bug00247a.c -> tests/tga/bug00247a.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: We test that a 8bpp TGA file will be gracefully rejected by",
          "3: gdImageCreateFromTga().",
          "6: #include <stdio.h>",
          "8: #include \"gd.h\"",
          "9: #include \"gdtest.h\"",
          "11: int main(int argc, char **argv)",
          "12: {",
          "13:     gdImagePtr im;",
          "14:     FILE *fp = gdTestFileOpen(\"tga/bug00247a.tga\");",
          "15:     im = gdImageCreateFromTga(fp);",
          "16:     gdTestAssert(im == NULL);",
          "17:     fclose(fp);",
          "18:     return gdNumFailures();",
          "19: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "91d2611bba9e1affe0afc5f2481529becf4b8017",
      "candidate_info": {
        "commit_hash": "91d2611bba9e1affe0afc5f2481529becf4b8017",
        "repo": "libgd/libgd",
        "commit_url": "https://github.com/libgd/libgd/commit/91d2611bba9e1affe0afc5f2481529becf4b8017",
        "files": [
          "tests/tga/.gitignore",
          "tests/tga/CMakeLists.txt",
          "tests/tga/Makemodule.am",
          "tests/tga/bug00247.c",
          "tests/tga/bug00247.tga"
        ],
        "message": "Add tests for #247 (Courtesy of Machine Learning and Applications Group)",
        "before_after_code_files": [
          "tests/tga/Makemodule.am||tests/tga/Makemodule.am",
          "tests/tga/bug00247.c||tests/tga/bug00247.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "tests/tga/Makemodule.am||tests/tga/Makemodule.am"
          ],
          "candidate": [
            "tests/tga/Makemodule.am||tests/tga/Makemodule.am"
          ]
        }
      },
      "candidate_diff": {
        "tests/tga/Makemodule.am||tests/tga/Makemodule.am": [
          "File: tests/tga/Makemodule.am -> tests/tga/Makemodule.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: libgd_test_programs += \\",
          "2:  tga/bug00084 \\",
          "3:  tga/tga_null",
          "5: EXTRA_DIST += \\",
          "6:  tga/CMakeLists.txt \\",
          "",
          "[Removed Lines]",
          "7:  tga/bug00084.tga",
          "",
          "[Added Lines]",
          "3:  tga/bug00247 \\",
          "8:  tga/bug00084.tga \\",
          "9:  tga/bug00247.tga",
          "",
          "---------------"
        ],
        "tests/tga/bug00247.c||tests/tga/bug00247.c": [
          "File: tests/tga/bug00247.c -> tests/tga/bug00247.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #include <stdio.h>",
          "3: #include \"gd.h\"",
          "4: #include \"gdtest.h\"",
          "6: int main(int argc, char **argv)",
          "7: {",
          "8:     gdImagePtr im;",
          "9:     FILE *fp = gdTestFileOpen(\"tga/bug00247.tga\");",
          "10:     im = gdImageCreateFromTga(fp);",
          "11:     gdTestAssert(im == NULL);",
          "12:     fclose(fp);",
          "13:     return gdNumFailures();",
          "14: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2ea5232bfd021f85933385a1ad5a88e114fdcf80",
      "candidate_info": {
        "commit_hash": "2ea5232bfd021f85933385a1ad5a88e114fdcf80",
        "repo": "libgd/libgd",
        "commit_url": "https://github.com/libgd/libgd/commit/2ea5232bfd021f85933385a1ad5a88e114fdcf80",
        "files": [
          "tests/tga/.gitignore",
          "tests/tga/CMakeLists.txt",
          "tests/tga/Makemodule.am",
          "tests/tga/bug00248.c",
          "tests/tga/bug00248.tga"
        ],
        "message": "Tests for #248",
        "before_after_code_files": [
          "tests/tga/Makemodule.am||tests/tga/Makemodule.am",
          "tests/tga/bug00248.c||tests/tga/bug00248.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "tests/tga/Makemodule.am||tests/tga/Makemodule.am"
          ],
          "candidate": [
            "tests/tga/Makemodule.am||tests/tga/Makemodule.am"
          ]
        }
      },
      "candidate_diff": {
        "tests/tga/Makemodule.am||tests/tga/Makemodule.am": [
          "File: tests/tga/Makemodule.am -> tests/tga/Makemodule.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "2:  tga/bug00084 \\",
          "3:  tga/bug00247 \\",
          "4:  tga/bug00247a \\",
          "5:  tga/tga_null",
          "7: EXTRA_DIST += \\",
          "8:  tga/CMakeLists.txt \\",
          "9:  tga/bug00084.tga \\",
          "10:  tga/bug00247.tga \\",
          "",
          "[Removed Lines]",
          "11:  tga/bug00247a.tga",
          "",
          "[Added Lines]",
          "5:  tga/bug00248 \\",
          "12:  tga/bug00247a.tga \\",
          "13:  tga/bug00248.tga",
          "",
          "---------------"
        ],
        "tests/tga/bug00248.c||tests/tga/bug00248.c": [
          "File: tests/tga/bug00248.c -> tests/tga/bug00248.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #include <stdio.h>",
          "3: #include \"gd.h\"",
          "4: #include \"gdtest.h\"",
          "6: int main(int argc, char **argv)",
          "7: {",
          "8:     gdImagePtr im;",
          "9:     FILE *fp = gdTestFileOpen(\"tga/bug00248.tga\");",
          "10:     im = gdImageCreateFromTga(fp);",
          "11:     gdTestAssert(im == NULL);",
          "12:     fclose(fp);",
          "13:     return gdNumFailures();",
          "14: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}