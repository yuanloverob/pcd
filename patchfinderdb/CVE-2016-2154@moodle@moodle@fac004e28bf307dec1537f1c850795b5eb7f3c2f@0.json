{
  "cve_id": "CVE-2016-2154",
  "cve_desc": "admin/tool/monitor/lib.php in Event Monitor in Moodle 2.8.x before 2.8.11, 2.9.x before 2.9.5, and 3.0.x before 3.0.3 does not consider the moodle/course:viewhiddencourses capability, which allows remote authenticated users to discover hidden course names by subscribing to a rule.",
  "repo": "moodle/moodle",
  "patch_hash": "fac004e28bf307dec1537f1c850795b5eb7f3c2f",
  "patch_info": {
    "commit_hash": "fac004e28bf307dec1537f1c850795b5eb7f3c2f",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/fac004e28bf307dec1537f1c850795b5eb7f3c2f",
    "files": [
      "admin/tool/monitor/lib.php"
    ],
    "message": "MDL-51167 tool_monitor: fix too strict condition & minor cleanup",
    "before_after_code_files": [
      "admin/tool/monitor/lib.php||admin/tool/monitor/lib.php"
    ]
  },
  "patch_diff": {
    "admin/tool/monitor/lib.php||admin/tool/monitor/lib.php": [
      "File: admin/tool/monitor/lib.php -> admin/tool/monitor/lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "105:     }",
      "106:     if ($courses = get_user_capability_course('tool/monitor:subscribe', null, true, 'fullname, visible', $orderby)) {",
      "107:         foreach ($courses as $course) {",
      "112:             }",
      "113:         }",
      "114:     }",
      "",
      "[Removed Lines]",
      "108:             if ($course->visible === true || has_capability('moodle/course:viewhiddencourses',",
      "109:                     context_course::instance($course->id))) {",
      "110:                 $options[$course->id] = format_string($course->fullname, true,",
      "111:                     array('context' => context_course::instance($course->id)));",
      "",
      "[Added Lines]",
      "108:             $coursectx = context_course::instance($course->id);",
      "109:             if ($course->visible || has_capability('moodle/course:viewhiddencourses', $coursectx)) {",
      "110:                 $options[$course->id] = format_string($course->fullname, true, array('context' => $coursectx));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b324802f363fd06954d4ce187e85a0113c8c84e1",
      "candidate_info": {
        "commit_hash": "b324802f363fd06954d4ce187e85a0113c8c84e1",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/b324802f363fd06954d4ce187e85a0113c8c84e1",
        "files": [
          "admin/tool/monitor/lib.php"
        ],
        "message": "MDL-51167 tool_monitor: check course visibility and user capabilities",
        "before_after_code_files": [
          "admin/tool/monitor/lib.php||admin/tool/monitor/lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "admin/tool/monitor/lib.php||admin/tool/monitor/lib.php"
          ],
          "candidate": [
            "admin/tool/monitor/lib.php||admin/tool/monitor/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/tool/monitor/lib.php||admin/tool/monitor/lib.php": [
          "File: admin/tool/monitor/lib.php -> admin/tool/monitor/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:     if (has_capability('tool/monitor:subscribe', context_system::instance())) {",
          "104:         $options[0] = get_string('site');",
          "105:     }",
          "107:         foreach ($courses as $course) {",
          "110:         }",
          "111:     }",
          "",
          "[Removed Lines]",
          "106:     if ($courses = get_user_capability_course('tool/monitor:subscribe', null, true, 'fullname', $orderby)) {",
          "108:             $options[$course->id] = format_string($course->fullname, true,",
          "109:                 array('context' => context_course::instance($course->id)));",
          "",
          "[Added Lines]",
          "106:     if ($courses = get_user_capability_course('tool/monitor:subscribe', null, true, 'fullname, visible', $orderby)) {",
          "108:             if ($course->visible === true || has_capability('moodle/course:viewhiddencourses',",
          "109:                     context_course::instance($course->id))) {",
          "110:                 $options[$course->id] = format_string($course->fullname, true,",
          "111:                     array('context' => context_course::instance($course->id)));",
          "112:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0f510be763181210baa7885fbed661edd0d73680",
      "candidate_info": {
        "commit_hash": "0f510be763181210baa7885fbed661edd0d73680",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/0f510be763181210baa7885fbed661edd0d73680",
        "files": [
          "admin/tool/monitor/classes/output/managesubs/rules.php",
          "admin/tool/monitor/index.php",
          "admin/tool/monitor/lib.php"
        ],
        "message": "MDL-50039 tool_monitor: Additional checks for subscription.\n\nAdditional capability checks are now in place to stop unauthorised\nusers from accessing the event monitor subscription page.\n\nThanks to Eloy Lafuente for creating a gist with ideas of tackling\nNo site level capability to the rule subscription.",
        "before_after_code_files": [
          "admin/tool/monitor/classes/output/managesubs/rules.php||admin/tool/monitor/classes/output/managesubs/rules.php",
          "admin/tool/monitor/index.php||admin/tool/monitor/index.php",
          "admin/tool/monitor/lib.php||admin/tool/monitor/lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "admin/tool/monitor/lib.php||admin/tool/monitor/lib.php"
          ],
          "candidate": [
            "admin/tool/monitor/lib.php||admin/tool/monitor/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/tool/monitor/classes/output/managesubs/rules.php||admin/tool/monitor/classes/output/managesubs/rules.php": [
          "File: admin/tool/monitor/classes/output/managesubs/rules.php -> admin/tool/monitor/classes/output/managesubs/rules.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "215:             return false;",
          "216:         }",
          "224:         }",
          "225:         $url = new \\moodle_url('/admin/tool/monitor/index.php');",
          "227:         $select->set_label(get_string('selectacourse', 'tool_monitor'));",
          "228:         return $select;",
          "229:     }",
          "",
          "[Removed Lines]",
          "209:     public function get_user_courses_select() {",
          "210:         global $DB;",
          "213:         $numcourses = $DB->count_records('course');",
          "214:         if ($numcourses > COURSE_MAX_COURSES_PER_DROPDOWN) {",
          "217:         $orderby = 'visible DESC, sortorder ASC';",
          "218:         $options = array(0 => get_string('site'));",
          "219:         if ($courses = get_user_capability_course('tool/monitor:subscribe', null, true, 'fullname', $orderby)) {",
          "220:             foreach ($courses as $course) {",
          "221:                 $options[$course->id] = format_string($course->fullname, true,",
          "222:                     array('context' => \\context_course::instance($course->id)));",
          "223:             }",
          "226:         $select = new \\single_select($url, 'courseid', $options, $this->courseid);",
          "",
          "[Added Lines]",
          "210:     public function get_user_courses_select($choose = false) {",
          "211:         $options = tool_monitor_get_user_courses();",
          "213:         if (!$options) {",
          "216:         $selected = $this->courseid;",
          "217:         $nothing = array();",
          "218:         if ($choose) {",
          "219:             $selected = null;",
          "220:             $nothing = array('choosedots');",
          "223:         $select = new \\single_select($url, 'courseid', $options, $selected, $nothing);",
          "",
          "---------------"
        ],
        "admin/tool/monitor/index.php||admin/tool/monitor/index.php": [
          "File: admin/tool/monitor/index.php -> admin/tool/monitor/index.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: require_once(__DIR__ . '/../../../config.php');",
          "26: require_once($CFG->libdir.'/adminlib.php');",
          "28: $courseid = optional_param('courseid', 0, PARAM_INT);",
          "29: $action = optional_param('action', '', PARAM_ALPHA);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: require_once($CFG->dirroot . '/admin/tool/monitor/lib.php');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32: $subscriptionid = optional_param('subscriptionid', 0, PARAM_INT);",
          "33: $confirm = optional_param('confirm', false, PARAM_BOOL);",
          "36: if (empty($courseid)) {",
          "37:     require_login();",
          "38:     $context = context_system::instance();",
          "39: } else {",
          "41:     $course = get_course($courseid);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: $choose = false;",
          "42:     if (!has_capability('tool/monitor:subscribe', $context)) {",
          "44:         if (tool_monitor_get_user_courses()){",
          "46:             $choose = true;",
          "47:         } else {",
          "49:             print_error('rulenopermission', 'tool_monitor');",
          "50:         }",
          "51:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "59: $PAGE->set_pagelayout('report');",
          "60: $PAGE->set_title(get_string('managesubscriptions', 'tool_monitor'));",
          "61: $PAGE->set_heading(fullname($USER));",
          "65: if (!empty($action)) {",
          "",
          "[Removed Lines]",
          "62: $settingsnode = $PAGE->settingsnav->find('monitor', null)->make_active();",
          "",
          "[Added Lines]",
          "75: $settingsnode = $PAGE->settingsnav->find('monitor', null);",
          "76: if ($settingsnode) {",
          "77:     $settingsnode->make_active();",
          "78: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "108: $totalrules = \\tool_monitor\\rule_manager::count_rules_by_courseid($courseid);",
          "109: $rules = new \\tool_monitor\\output\\managesubs\\rules('toolmonitorrules', $indexurl, $courseid);",
          "120: $totalsubs = \\tool_monitor\\subscription_manager::count_user_subscriptions();",
          "123:     $subs = new \\tool_monitor\\output\\managesubs\\subs('toolmonitorsubs', $indexurl, $courseid);",
          "124:     echo $OUTPUT->heading(get_string('currentsubscriptions', 'tool_monitor'), 3);",
          "",
          "[Removed Lines]",
          "111: $usercourses = $rules->get_user_courses_select();",
          "112: if (!empty($usercourses)) {",
          "113:     echo $renderer->render($usercourses);",
          "114: } else {",
          "116:     echo $OUTPUT->notification(get_string('rulenopermission', 'tool_monitor'), 'notifyproblem');",
          "117: }",
          "121: if (!empty($totalsubs)) {",
          "",
          "[Added Lines]",
          "127: $usercourses = $rules->get_user_courses_select($choose);",
          "129: echo $renderer->render($usercourses);",
          "133: if (!empty($totalsubs) && !$choose) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "126: }",
          "133: $canmanagerules = has_capability('tool/monitor:managerules', $context);",
          "",
          "[Removed Lines]",
          "129: echo $OUTPUT->heading(get_string('rulescansubscribe', 'tool_monitor'), 3);",
          "130: echo $renderer->render($rules);",
          "",
          "[Added Lines]",
          "141: if (!$choose) {",
          "142:     echo $OUTPUT->heading(get_string('rulescansubscribe', 'tool_monitor'), 3);",
          "143:     echo $renderer->render($rules);",
          "144: }",
          "",
          "---------------"
        ],
        "admin/tool/monitor/lib.php||admin/tool/monitor/lib.php": [
          "File: admin/tool/monitor/lib.php -> admin/tool/monitor/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:     if (get_config('tool_monitor', 'enablemonitor') && $USER->id == $user->id) {",
          "88:         }",
          "89:     }",
          "90: }",
          "",
          "[Removed Lines]",
          "82:         $url = new moodle_url('/admin/tool/monitor/index.php');",
          "83:         $subsnode = navigation_node::create(get_string('managesubscriptions', 'tool_monitor'), $url,",
          "84:                 navigation_node::TYPE_SETTING, null, 'monitor', new pix_icon('i/settings', ''));",
          "86:         if (isset($subsnode) && !empty($navigation)) {",
          "87:             $navigation->add_node($subsnode);",
          "",
          "[Added Lines]",
          "83:         if ($courses = tool_monitor_get_user_courses()) {",
          "84:             $url = new moodle_url('/admin/tool/monitor/index.php');",
          "85:             $subsnode = navigation_node::create(get_string('managesubscriptions', 'tool_monitor'), $url,",
          "86:                     navigation_node::TYPE_SETTING, null, 'monitor', new pix_icon('i/settings', ''));",
          "88:             if (isset($subsnode) && !empty($navigation)) {",
          "89:                 $navigation->add_node($subsnode);",
          "90:             }",
          "100: function tool_monitor_get_user_courses() {",
          "101:     $orderby = 'visible DESC, sortorder ASC';",
          "102:     $options = array();",
          "103:     if (has_capability('tool/monitor:subscribe', context_system::instance())) {",
          "104:         $options[0] = get_string('site');",
          "105:     }",
          "106:     if ($courses = get_user_capability_course('tool/monitor:subscribe', null, true, 'fullname', $orderby)) {",
          "107:         foreach ($courses as $course) {",
          "108:             $options[$course->id] = format_string($course->fullname, true,",
          "109:                 array('context' => context_course::instance($course->id)));",
          "110:         }",
          "111:     }",
          "113:     if (count($options) < 1) {",
          "114:         return false;",
          "115:     } else {",
          "116:         return $options;",
          "117:     }",
          "118: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "406a0efd3720d3b9214508b2e47b8f4401061312",
      "candidate_info": {
        "commit_hash": "406a0efd3720d3b9214508b2e47b8f4401061312",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/406a0efd3720d3b9214508b2e47b8f4401061312",
        "files": [
          "admin/tool/monitor/lib.php"
        ],
        "message": "MDL-51167 tool_monitor: fix too strict condition & minor cleanup",
        "before_after_code_files": [
          "admin/tool/monitor/lib.php||admin/tool/monitor/lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "admin/tool/monitor/lib.php||admin/tool/monitor/lib.php"
          ],
          "candidate": [
            "admin/tool/monitor/lib.php||admin/tool/monitor/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/tool/monitor/lib.php||admin/tool/monitor/lib.php": [
          "File: admin/tool/monitor/lib.php -> admin/tool/monitor/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:     }",
          "106:     if ($courses = get_user_capability_course('tool/monitor:subscribe', null, true, 'fullname, visible', $orderby)) {",
          "107:         foreach ($courses as $course) {",
          "112:             }",
          "113:         }",
          "114:     }",
          "",
          "[Removed Lines]",
          "108:             if ($course->visible === true || has_capability('moodle/course:viewhiddencourses',",
          "109:                     context_course::instance($course->id))) {",
          "110:                 $options[$course->id] = format_string($course->fullname, true,",
          "111:                     array('context' => context_course::instance($course->id)));",
          "",
          "[Added Lines]",
          "108:             $coursectx = context_course::instance($course->id);",
          "109:             if ($course->visible || has_capability('moodle/course:viewhiddencourses', $coursectx)) {",
          "110:                 $options[$course->id] = format_string($course->fullname, true, array('context' => $coursectx));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "214950de2a4149f0efeabf62b0978901c1c68015",
      "candidate_info": {
        "commit_hash": "214950de2a4149f0efeabf62b0978901c1c68015",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/214950de2a4149f0efeabf62b0978901c1c68015",
        "files": [
          "admin/tool/monitor/lib.php"
        ],
        "message": "MDL-51167 tool_monitor: fix too strict condition & minor cleanup",
        "before_after_code_files": [
          "admin/tool/monitor/lib.php||admin/tool/monitor/lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "admin/tool/monitor/lib.php||admin/tool/monitor/lib.php"
          ],
          "candidate": [
            "admin/tool/monitor/lib.php||admin/tool/monitor/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/tool/monitor/lib.php||admin/tool/monitor/lib.php": [
          "File: admin/tool/monitor/lib.php -> admin/tool/monitor/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:     }",
          "106:     if ($courses = get_user_capability_course('tool/monitor:subscribe', null, true, 'fullname, visible', $orderby)) {",
          "107:         foreach ($courses as $course) {",
          "112:             }",
          "113:         }",
          "114:     }",
          "",
          "[Removed Lines]",
          "108:             if ($course->visible === true || has_capability('moodle/course:viewhiddencourses',",
          "109:                     context_course::instance($course->id))) {",
          "110:                 $options[$course->id] = format_string($course->fullname, true,",
          "111:                     array('context' => context_course::instance($course->id)));",
          "",
          "[Added Lines]",
          "108:             $coursectx = context_course::instance($course->id);",
          "109:             if ($course->visible || has_capability('moodle/course:viewhiddencourses', $coursectx)) {",
          "110:                 $options[$course->id] = format_string($course->fullname, true, array('context' => $coursectx));",
          "",
          "---------------"
        ]
      }
    }
  ]
}