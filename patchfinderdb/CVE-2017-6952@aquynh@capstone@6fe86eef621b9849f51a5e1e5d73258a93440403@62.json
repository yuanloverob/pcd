{
  "cve_id": "CVE-2017-6952",
  "cve_desc": "Integer overflow in the cs_winkernel_malloc function in winkernel_mm.c in Capstone 3.0.4 and earlier allows attackers to cause a denial of service (heap-based buffer overflow in a kernel driver) or possibly have unspecified other impact via a large value.",
  "repo": "aquynh/capstone",
  "patch_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
  "patch_info": {
    "commit_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/6fe86eef621b9849f51a5e1e5d73258a93440403",
    "files": [
      "windows/winkernel_mm.c"
    ],
    "message": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.",
    "before_after_code_files": [
      "windows/winkernel_mm.c||windows/winkernel_mm.c"
    ]
  },
  "patch_diff": {
    "windows/winkernel_mm.c||windows/winkernel_mm.c": [
      "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: #include \"winkernel_mm.h\"",
      "5: #include <ntddk.h>",
      "8: static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <Ntintsafe.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: #pragma prefast(suppress : 30030)  // Allocating executable POOL_TYPE memory",
      "38:  if (!block) {",
      "39:   return NULL;",
      "40:  }",
      "",
      "[Removed Lines]",
      "36:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "37:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
      "",
      "[Added Lines]",
      "37:  size_t number_of_bytes = 0;",
      "38:  CS_WINKERNEL_MEMBLOCK *block = NULL;",
      "42:  if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {",
      "43:   return NULL;",
      "44:  }",
      "45:  block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "46:    NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7c5c636e1599921e9e76c2b0ae606c9ca6dea8c0",
      "candidate_info": {
        "commit_hash": "7c5c636e1599921e9e76c2b0ae606c9ca6dea8c0",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/7c5c636e1599921e9e76c2b0ae606c9ca6dea8c0",
        "files": [
          "arch/X86/X86GenDisassemblerTables.inc"
        ],
        "message": "x86: Fix the operand encoding in the test instruction, issue #702",
        "before_after_code_files": [
          "arch/X86/X86GenDisassemblerTables.inc||arch/X86/X86GenDisassemblerTables.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86GenDisassemblerTables.inc||arch/X86/X86GenDisassemblerTables.inc": [
          "File: arch/X86/X86GenDisassemblerTables.inc -> arch/X86/X86GenDisassemblerTables.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "18833:   },",
          "18837:   },",
          "",
          "[Removed Lines]",
          "18835:     69,",
          "",
          "[Added Lines]",
          "18835:     73,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "18861:   },",
          "18865:   },",
          "",
          "[Removed Lines]",
          "18863:     69,",
          "",
          "[Added Lines]",
          "18863:     73,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "18889:   },",
          "18893:   },",
          "",
          "[Removed Lines]",
          "18891:     43,",
          "",
          "[Added Lines]",
          "18891:     76,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "18921:   },",
          "18925:   },",
          "",
          "[Removed Lines]",
          "18923:     88,",
          "",
          "[Added Lines]",
          "18923:     87,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "903aa237928b6459e6d2aca5eba0d3aa4f2293a0",
      "candidate_info": {
        "commit_hash": "903aa237928b6459e6d2aca5eba0d3aa4f2293a0",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/903aa237928b6459e6d2aca5eba0d3aa4f2293a0",
        "files": [
          "arch/AArch64/AArch64MappingInsn.inc"
        ],
        "message": "Fix BL, BLR group information",
        "before_after_code_files": [
          "arch/AArch64/AArch64MappingInsn.inc||arch/AArch64/AArch64MappingInsn.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/AArch64/AArch64MappingInsn.inc||arch/AArch64/AArch64MappingInsn.inc": [
          "File: arch/AArch64/AArch64MappingInsn.inc -> arch/AArch64/AArch64MappingInsn.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "532: {",
          "533:  AArch64_BL, ARM64_INS_BL,",
          "534: #ifndef CAPSTONE_DIET",
          "536: #endif",
          "537: },",
          "538: {",
          "539:  AArch64_BLR, ARM64_INS_BLR,",
          "540: #ifndef CAPSTONE_DIET",
          "542: #endif",
          "543: },",
          "544: {",
          "",
          "[Removed Lines]",
          "535:  { 0 }, { ARM64_REG_LR, 0 }, { ARM64_GRP_CALL, 0 }, 0, 0",
          "541:  { 0 }, { ARM64_REG_LR, 0 }, { ARM64_GRP_CALL, 0 }, 0, 0",
          "",
          "[Added Lines]",
          "535:  { 0 }, { ARM64_REG_LR, 0 }, { ARM64_GRP_JUMP, 0 }, 1, 0",
          "541:  { 0 }, { ARM64_REG_LR, 0 }, { ARM64_GRP_JUMP, 0 }, 1, 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "06012353a96ae4977bd64e3db61900f3877d3e6e",
      "candidate_info": {
        "commit_hash": "06012353a96ae4977bd64e3db61900f3877d3e6e",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/06012353a96ae4977bd64e3db61900f3877d3e6e",
        "files": [
          "arch/Sparc/SparcInstPrinter.c"
        ],
        "message": "sparc: fix relative branch target for Sparc64",
        "before_after_code_files": [
          "arch/Sparc/SparcInstPrinter.c||arch/Sparc/SparcInstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/Sparc/SparcInstPrinter.c||arch/Sparc/SparcInstPrinter.c": [
          "File: arch/Sparc/SparcInstPrinter.c -> arch/Sparc/SparcInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "165: static void printOperand(MCInst *MI, int opNum, SStream *O)",
          "166: {",
          "168:  unsigned reg;",
          "169:  MCOperand *MO = MCInst_getOperand(MI, opNum);",
          "",
          "[Removed Lines]",
          "167:  int Imm;",
          "",
          "[Added Lines]",
          "167:  int64_t Imm;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "200:   switch (MI->Opcode) {",
          "201:    case SP_CALL:",
          "204:     break;",
          "",
          "[Removed Lines]",
          "203:     Imm += (uint32_t)MI->address;",
          "",
          "[Added Lines]",
          "203:     Imm += MI->address;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "218:    case SP_BPFCCANT:",
          "219:    case SP_BPFCCNT:",
          "220:     Imm = SignExtend32(Imm, 19);",
          "222:     break;",
          "",
          "[Removed Lines]",
          "221:     Imm = (uint32_t)MI->address + Imm * 4;",
          "",
          "[Added Lines]",
          "221:     Imm = MI->address + Imm * 4;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "229:    case SP_FBCOND:",
          "230:    case SP_FBCONDA:",
          "231:     Imm = SignExtend32(Imm, 22);",
          "233:     break;",
          "",
          "[Removed Lines]",
          "232:     Imm = (uint32_t)MI->address + Imm * 4;",
          "",
          "[Added Lines]",
          "232:     Imm = MI->address + Imm * 4;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "258:    case SP_BPZnapn:",
          "259:    case SP_BPZnapt:",
          "260:     Imm = SignExtend32(Imm, 16);",
          "262:     break;",
          "263:   }",
          "277:   if (MI->csh->detail) {",
          "278:    if (MI->csh->doing_mem) {",
          "",
          "[Removed Lines]",
          "261:     Imm = (uint32_t)MI->address + Imm * 4;",
          "265:   if (Imm >= 0) {",
          "266:    if (Imm > HEX_THRESHOLD)",
          "267:     SStream_concat(O, \"0x%x\", Imm);",
          "268:    else",
          "269:     SStream_concat(O, \"%u\", Imm);",
          "270:   } else {",
          "271:    if (Imm < -HEX_THRESHOLD)",
          "272:     SStream_concat(O, \"-0x%x\", -Imm);",
          "273:    else",
          "274:     SStream_concat(O, \"-%u\", -Imm);",
          "275:   }",
          "",
          "[Added Lines]",
          "261:     Imm = MI->address + Imm * 4;",
          "265:   printInt64(O, Imm);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e2d9ada4eeaef061cdf4fa63d3ecb3bbf4bf104c",
      "candidate_info": {
        "commit_hash": "e2d9ada4eeaef061cdf4fa63d3ecb3bbf4bf104c",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/e2d9ada4eeaef061cdf4fa63d3ecb3bbf4bf104c",
        "files": [
          "cs.c"
        ],
        "message": "Update cs.c\n\nremove a dead code, suggested by @vit9696 on #867",
        "before_after_code_files": [
          "cs.c||cs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cs.c||cs.c": [
          "File: cs.c -> cs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "323: #ifndef CAPSTONE_DIET",
          "327:  mnem = insn->mnemonic;",
          "328:  for (sp = buffer; *sp; sp++) {",
          "329:   if (*sp == ' '|| *sp == '\\t')",
          "",
          "[Removed Lines]",
          "326:  sp = buffer;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "12ce2b31d7018586e589cd8fa72339f9bc230f05",
      "candidate_info": {
        "commit_hash": "12ce2b31d7018586e589cd8fa72339f9bc230f05",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/12ce2b31d7018586e589cd8fa72339f9bc230f05",
        "files": [
          "bindings/powershell/Out-UnmanagedDll.ps1",
          "bindings/powershell/README"
        ],
        "message": "Binding.PowerShell-Script\n\nAdded script to generate compressed DLL output & update for README",
        "before_after_code_files": [
          "bindings/powershell/Out-UnmanagedDll.ps1||bindings/powershell/Out-UnmanagedDll.ps1"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/powershell/Out-UnmanagedDll.ps1||bindings/powershell/Out-UnmanagedDll.ps1": [
          "File: bindings/powershell/Out-UnmanagedDll.ps1 -> bindings/powershell/Out-UnmanagedDll.ps1",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: function Out-UnmanagedDll",
          "2: {",
          "3:     [CmdletBinding()] Param (",
          "4:         [Parameter(Mandatory = $True)]",
          "5:         [String]",
          "6:         $FilePath",
          "7:     )",
          "9:     $Path = Resolve-Path $FilePath",
          "11:     if (! [IO.File]::Exists($Path))",
          "12:     {",
          "13:         Throw \"$Path does not exist.\"",
          "14:     }",
          "16:     $FileBytes = [System.IO.File]::ReadAllBytes($Path)",
          "18:     if (($FileBytes[0..1] | % {[Char]$_}) -join '' -cne 'MZ')",
          "19:     {",
          "20:         Throw \"$Path is not a valid executable.\"",
          "21:     }",
          "23:  # Encode",
          "24:     $Length = $FileBytes.Length",
          "25:     $CompressedStream = New-Object IO.MemoryStream",
          "26:     $DeflateStream = New-Object IO.Compression.DeflateStream ($CompressedStream, [IO.Compression.CompressionMode]::Compress)",
          "27:     $DeflateStream.Write($FileBytes, 0, $FileBytes.Length)",
          "28:     $DeflateStream.Dispose()",
          "29:     $CompressedFileBytes = $CompressedStream.ToArray()",
          "30:     $CompressedStream.Dispose()",
          "31:     $EncodedCompressedFile = [Convert]::ToBase64String($CompressedFileBytes)",
          "33:  # Decode",
          "34:  $Output = @\"",
          "35: `$EncodedCompressedFile = @'",
          "36: $EncodedCompressedFile",
          "37: '@",
          "38: `$Stream = new-object -TypeName System.IO.MemoryStream",
          "39: `$DeflateStream = New-Object IO.Compression.DeflateStream([IO.MemoryStream][Convert]::FromBase64String(`$EncodedCompressedFile),[IO.Compression.CompressionMode]::Decompress)",
          "40: `$buffer = New-Object Byte[]($Length)",
          "41: `$count = 0",
          "42: do",
          "43:     {",
          "44:         `$count = `$DeflateStream.Read(`$buffer, 0, 1024)",
          "45:         if (`$count -gt 0)",
          "46:             {",
          "47:                 `$Stream.Write(`$buffer, 0, `$count)",
          "48:             }",
          "49:     }",
          "50: While (`$count -gt 0)",
          "51: `$array = `$stream.ToArray()",
          "52: `$DeflateStream.Close()",
          "53: `$Stream.Close()",
          "54: Set-Content -value `$array -encoding byte -path `$DllPath",
          "55: \"@",
          "57:  Write-Output $Output",
          "58: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}