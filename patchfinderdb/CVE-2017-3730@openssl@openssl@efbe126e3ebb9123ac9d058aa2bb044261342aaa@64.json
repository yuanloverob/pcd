{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c62ee12574e661a111238954b07ea1d5f0786bec",
      "candidate_info": {
        "commit_hash": "c62ee12574e661a111238954b07ea1d5f0786bec",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c62ee12574e661a111238954b07ea1d5f0786bec",
        "files": [
          "crypto/mem.c"
        ],
        "message": "Removed ugly size_t less than zero check.\n\nCLA: trivial.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2674)\n\n(cherry picked from commit 5e1f879ab5a2bfdf2d58222f965f93fe1b511ce7)",
        "before_after_code_files": [
          "crypto/mem.c||crypto/mem.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/mem.c||crypto/mem.c": [
          "File: crypto/mem.c -> crypto/mem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:     if (malloc_impl != NULL && malloc_impl != CRYPTO_malloc)",
          "76:         return malloc_impl(num, file, line);",
          "79:         return NULL;",
          "81:     allow_customize = 0;",
          "",
          "[Removed Lines]",
          "78:     if (num <= 0)",
          "",
          "[Added Lines]",
          "78:     if (num == 0)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "936503cb0bc9c3bc08a070e0fc43bb112b1e9d02",
      "candidate_info": {
        "commit_hash": "936503cb0bc9c3bc08a070e0fc43bb112b1e9d02",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/936503cb0bc9c3bc08a070e0fc43bb112b1e9d02",
        "files": [
          "Configurations/unix-Makefile.tmpl"
        ],
        "message": "Unix Makefile: Some sed implementation truncate long lines.  Use perl instead.\n\nFixes #1781\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1813)\n(cherry picked from commit ebca7961a6bc2652ecb3cf6dda3f43943e2965d3)",
        "before_after_code_files": [
          "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl": [
          "File: Configurations/unix-Makefile.tmpl -> Configurations/unix-Makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "297: depend:",
          "298:  @: {- output_off() if $disabled{makedepend}; \"\" -}",
          "299:  @if egrep \"^# DO NOT DELETE THIS LINE\" Makefile >/dev/null && [ -z \"`find $(DEPS) -newer Makefile 2>/dev/null; exit 0`\" ]; then :; else \\",
          "301:      echo '# DO NOT DELETE THIS LINE -- make depend depends on it.'; \\",
          "302:      echo; \\",
          "303:      for f in $(DEPS); do \\",
          "",
          "[Removed Lines]",
          "300:    ( sed -e '/^# DO NOT DELETE THIS LINE.*/,$$d' < Makefile; \\",
          "",
          "[Added Lines]",
          "300:    ( $(PERL) -pe 'exit 0 if /^# DO NOT DELETE THIS LINE.*/' < Makefile; \\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c4fec137617c2002f6f8a76981a47ab79908f628",
      "candidate_info": {
        "commit_hash": "c4fec137617c2002f6f8a76981a47ab79908f628",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c4fec137617c2002f6f8a76981a47ab79908f628",
        "files": [
          "test/ssl-tests/17-renegotiate.conf",
          "test/ssl-tests/17-renegotiate.conf.in",
          "test/ssl-tests/18-dtls-renegotiate.conf",
          "test/ssl-tests/18-dtls-renegotiate.conf.in"
        ],
        "message": "Extend the test_ssl_new renegotiation tests to include client auth\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1983)",
        "before_after_code_files": [
          "test/ssl-tests/17-renegotiate.conf||test/ssl-tests/17-renegotiate.conf",
          "test/ssl-tests/17-renegotiate.conf.in||test/ssl-tests/17-renegotiate.conf.in",
          "test/ssl-tests/18-dtls-renegotiate.conf||test/ssl-tests/18-dtls-renegotiate.conf",
          "test/ssl-tests/18-dtls-renegotiate.conf.in||test/ssl-tests/18-dtls-renegotiate.conf.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/ssl-tests/17-renegotiate.conf||test/ssl-tests/17-renegotiate.conf": [
          "File: test/ssl-tests/17-renegotiate.conf -> test/ssl-tests/17-renegotiate.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # Generated with generate_ssl_tests.pl",
          "5: test-0 = 0-renegotiate-client-no-resume",
          "6: test-1 = 1-renegotiate-client-resume",
          "7: test-2 = 2-renegotiate-server-no-resume",
          "8: test-3 = 3-renegotiate-server-resume",
          "9: # ===========================================================",
          "11: [0-renegotiate-client-no-resume]",
          "",
          "[Removed Lines]",
          "3: num_tests = 4",
          "",
          "[Added Lines]",
          "3: num_tests = 6",
          "9: test-4 = 4-renegotiate-client-auth-require",
          "10: test-5 = 5-renegotiate-client-auth-once",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "112: ResumptionExpected = Yes",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117: # ===========================================================",
          "119: [4-renegotiate-client-auth-require]",
          "120: ssl_conf = 4-renegotiate-client-auth-require-ssl",
          "122: [4-renegotiate-client-auth-require-ssl]",
          "123: server = 4-renegotiate-client-auth-require-server",
          "124: client = 4-renegotiate-client-auth-require-client",
          "126: [4-renegotiate-client-auth-require-server]",
          "127: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "128: CipherString = DEFAULT",
          "129: MaxProtocol = TLSv1.2",
          "130: Options = NoResumptionOnRenegotiation",
          "131: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "132: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/root-cert.pem",
          "133: VerifyMode = Require",
          "135: [4-renegotiate-client-auth-require-client]",
          "136: Certificate = ${ENV::TEST_CERTS_DIR}/ee-client-chain.pem",
          "137: CipherString = DEFAULT",
          "138: PrivateKey = ${ENV::TEST_CERTS_DIR}/ee-key.pem",
          "139: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "140: VerifyMode = Peer",
          "142: [test-4]",
          "143: ExpectedResult = Success",
          "144: HandshakeMode = RenegotiateServer",
          "145: Method = TLS",
          "146: ResumptionExpected = No",
          "149: # ===========================================================",
          "151: [5-renegotiate-client-auth-once]",
          "152: ssl_conf = 5-renegotiate-client-auth-once-ssl",
          "154: [5-renegotiate-client-auth-once-ssl]",
          "155: server = 5-renegotiate-client-auth-once-server",
          "156: client = 5-renegotiate-client-auth-once-client",
          "158: [5-renegotiate-client-auth-once-server]",
          "159: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "160: CipherString = DEFAULT",
          "161: MaxProtocol = TLSv1.2",
          "162: Options = NoResumptionOnRenegotiation",
          "163: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "164: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/root-cert.pem",
          "165: VerifyMode = Once",
          "167: [5-renegotiate-client-auth-once-client]",
          "168: Certificate = ${ENV::TEST_CERTS_DIR}/ee-client-chain.pem",
          "169: CipherString = DEFAULT",
          "170: PrivateKey = ${ENV::TEST_CERTS_DIR}/ee-key.pem",
          "171: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "172: VerifyMode = Peer",
          "174: [test-5]",
          "175: ExpectedResult = Success",
          "176: HandshakeMode = RenegotiateServer",
          "177: Method = TLS",
          "178: ResumptionExpected = No",
          "",
          "---------------"
        ],
        "test/ssl-tests/17-renegotiate.conf.in||test/ssl-tests/17-renegotiate.conf.in": [
          "File: test/ssl-tests/17-renegotiate.conf.in -> test/ssl-tests/17-renegotiate.conf.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: package ssltests;",
          "18: our @tests = (",
          "19:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: my $dir_sep = $^O ne \"VMS\" ? \"/\" : \"\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64:             \"ExpectedResult\" => \"Success\"",
          "65:         }",
          "66:     },",
          "67: );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68:     {",
          "69:         name => \"renegotiate-client-auth-require\",",
          "70:         server => {",
          "71:             \"Options\" => \"NoResumptionOnRenegotiation\",",
          "72:             \"MaxProtocol\" => \"TLSv1.2\",",
          "73:             \"VerifyCAFile\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}root-cert.pem\",",
          "74:             \"VerifyMode\" => \"Require\",",
          "75:         },",
          "76:         client => {",
          "77:             \"Certificate\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-client-chain.pem\",",
          "78:             \"PrivateKey\"  => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-key.pem\"",
          "79:         },",
          "80:         test => {",
          "81:             \"Method\" => \"TLS\",",
          "82:             \"HandshakeMode\" => \"RenegotiateServer\",",
          "83:             \"ResumptionExpected\" => \"No\",",
          "84:             \"ExpectedResult\" => \"Success\"",
          "85:         }",
          "86:     },",
          "87:     {",
          "88:         name => \"renegotiate-client-auth-once\",",
          "89:         server => {",
          "90:             \"Options\" => \"NoResumptionOnRenegotiation\",",
          "91:             \"MaxProtocol\" => \"TLSv1.2\",",
          "92:             \"VerifyCAFile\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}root-cert.pem\",",
          "93:             \"VerifyMode\" => \"Once\",",
          "94:         },",
          "95:         client => {",
          "96:             \"Certificate\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-client-chain.pem\",",
          "97:             \"PrivateKey\"  => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-key.pem\"",
          "98:         },",
          "99:         test => {",
          "100:             \"Method\" => \"TLS\",",
          "101:             \"HandshakeMode\" => \"RenegotiateServer\",",
          "102:             \"ResumptionExpected\" => \"No\",",
          "103:             \"ExpectedResult\" => \"Success\"",
          "104:         }",
          "105:     }",
          "",
          "---------------"
        ],
        "test/ssl-tests/18-dtls-renegotiate.conf||test/ssl-tests/18-dtls-renegotiate.conf": [
          "File: test/ssl-tests/18-dtls-renegotiate.conf -> test/ssl-tests/18-dtls-renegotiate.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # Generated with generate_ssl_tests.pl",
          "5: test-0 = 0-renegotiate-client-no-resume",
          "6: test-1 = 1-renegotiate-client-resume",
          "7: test-2 = 2-renegotiate-server-resume",
          "8: # ===========================================================",
          "10: [0-renegotiate-client-no-resume]",
          "",
          "[Removed Lines]",
          "3: num_tests = 3",
          "",
          "[Added Lines]",
          "3: num_tests = 5",
          "8: test-3 = 3-renegotiate-client-auth-require",
          "9: test-4 = 4-renegotiate-client-auth-once",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "84: ResumptionExpected = No",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89: # ===========================================================",
          "91: [3-renegotiate-client-auth-require]",
          "92: ssl_conf = 3-renegotiate-client-auth-require-ssl",
          "94: [3-renegotiate-client-auth-require-ssl]",
          "95: server = 3-renegotiate-client-auth-require-server",
          "96: client = 3-renegotiate-client-auth-require-client",
          "98: [3-renegotiate-client-auth-require-server]",
          "99: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "100: CipherString = DEFAULT",
          "101: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "102: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/root-cert.pem",
          "103: VerifyMode = Require",
          "105: [3-renegotiate-client-auth-require-client]",
          "106: Certificate = ${ENV::TEST_CERTS_DIR}/ee-client-chain.pem",
          "107: CipherString = DEFAULT",
          "108: PrivateKey = ${ENV::TEST_CERTS_DIR}/ee-key.pem",
          "109: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "110: VerifyMode = Peer",
          "112: [test-3]",
          "113: ExpectedResult = Success",
          "114: HandshakeMode = RenegotiateServer",
          "115: Method = DTLS",
          "116: ResumptionExpected = No",
          "119: # ===========================================================",
          "121: [4-renegotiate-client-auth-once]",
          "122: ssl_conf = 4-renegotiate-client-auth-once-ssl",
          "124: [4-renegotiate-client-auth-once-ssl]",
          "125: server = 4-renegotiate-client-auth-once-server",
          "126: client = 4-renegotiate-client-auth-once-client",
          "128: [4-renegotiate-client-auth-once-server]",
          "129: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "130: CipherString = DEFAULT",
          "131: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "132: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/root-cert.pem",
          "133: VerifyMode = Once",
          "135: [4-renegotiate-client-auth-once-client]",
          "136: Certificate = ${ENV::TEST_CERTS_DIR}/ee-client-chain.pem",
          "137: CipherString = DEFAULT",
          "138: PrivateKey = ${ENV::TEST_CERTS_DIR}/ee-key.pem",
          "139: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "140: VerifyMode = Peer",
          "142: [test-4]",
          "143: ExpectedResult = Success",
          "144: HandshakeMode = RenegotiateServer",
          "145: Method = DTLS",
          "146: ResumptionExpected = No",
          "",
          "---------------"
        ],
        "test/ssl-tests/18-dtls-renegotiate.conf.in||test/ssl-tests/18-dtls-renegotiate.conf.in": [
          "File: test/ssl-tests/18-dtls-renegotiate.conf.in -> test/ssl-tests/18-dtls-renegotiate.conf.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: package ssltests;",
          "18: our @tests = (",
          "19:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: my $dir_sep = $^O ne \"VMS\" ? \"/\" : \"\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "60:             \"ExpectedResult\" => \"Success\"",
          "61:         }",
          "62:     },",
          "63: );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64:     {",
          "65:         name => \"renegotiate-client-auth-require\",",
          "66:         server => {",
          "67:             \"VerifyCAFile\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}root-cert.pem\",",
          "68:             \"VerifyMode\" => \"Require\",",
          "69:         },",
          "70:         client => {",
          "71:             \"Certificate\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-client-chain.pem\",",
          "72:             \"PrivateKey\"  => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-key.pem\"",
          "73:         },",
          "74:         test => {",
          "75:             \"Method\" => \"DTLS\",",
          "76:             \"HandshakeMode\" => \"RenegotiateServer\",",
          "77:             \"ResumptionExpected\" => \"No\",",
          "78:             \"ExpectedResult\" => \"Success\"",
          "79:         }",
          "80:     },",
          "81:     {",
          "82:         name => \"renegotiate-client-auth-once\",",
          "83:         server => {",
          "84:             \"VerifyCAFile\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}root-cert.pem\",",
          "85:             \"VerifyMode\" => \"Once\",",
          "86:         },",
          "87:         client => {",
          "88:             \"Certificate\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-client-chain.pem\",",
          "89:             \"PrivateKey\"  => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-key.pem\"",
          "90:         },",
          "91:         test => {",
          "92:             \"Method\" => \"DTLS\",",
          "93:             \"HandshakeMode\" => \"RenegotiateServer\",",
          "94:             \"ResumptionExpected\" => \"No\",",
          "95:             \"ExpectedResult\" => \"Success\"",
          "96:         }",
          "97:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b90348c7c57f2a6ba129fd2cb9a5889401fe3f91",
      "candidate_info": {
        "commit_hash": "b90348c7c57f2a6ba129fd2cb9a5889401fe3f91",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b90348c7c57f2a6ba129fd2cb9a5889401fe3f91",
        "files": [
          "demos/bio/server-cmod.c",
          "demos/bio/server-conf.c"
        ],
        "message": "Fixup BIO demos for OpenSSL 1.1.x\n\nCall SSL_CTX_new() before doing any configuration.\n(or call OPENSSL_ssl_init())\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 54d72ef0f019db383f8e98342b9b77c5da8541e5)",
        "before_after_code_files": [
          "demos/bio/server-cmod.c||demos/bio/server-cmod.c",
          "demos/bio/server-conf.c||demos/bio/server-conf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "demos/bio/server-cmod.c||demos/bio/server-cmod.c": [
          "File: demos/bio/server-cmod.c -> demos/bio/server-cmod.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:     SSL_CTX *ctx;",
          "28:     int ret = 1, i;",
          "30:     if (CONF_modules_load_file(\"cmod.cnf\", \"testapp\", 0) <= 0) {",
          "31:         fprintf(stderr, \"Error processing config file\\n\");",
          "32:         goto err;",
          "33:     }",
          "37:     if (SSL_CTX_config(ctx, \"server\") == 0) {",
          "38:         fprintf(stderr, \"Error configuring server.\\n\");",
          "39:         goto err;",
          "",
          "[Removed Lines]",
          "35:     ctx = SSL_CTX_new(TLS_server_method());",
          "",
          "[Added Lines]",
          "30:     ctx = SSL_CTX_new(TLS_server_method());",
          "",
          "---------------"
        ],
        "demos/bio/server-conf.c||demos/bio/server-conf.c": [
          "File: demos/bio/server-conf.c -> demos/bio/server-conf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:     char buf[512];",
          "35:     int ret = 1, i;",
          "38:     conf = NCONF_new(NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37:     ctx = SSL_CTX_new(TLS_server_method());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "52:         goto err;",
          "53:     }",
          "56:     cctx = SSL_CONF_CTX_new();",
          "57:     SSL_CONF_CTX_set_flags(cctx, SSL_CONF_FLAG_SERVER);",
          "58:     SSL_CONF_CTX_set_flags(cctx, SSL_CONF_FLAG_CERTIFICATE);",
          "",
          "[Removed Lines]",
          "55:     ctx = SSL_CTX_new(TLS_server_method());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "be31d57686a551261cfd5deb95c9553402942a43",
      "candidate_info": {
        "commit_hash": "be31d57686a551261cfd5deb95c9553402942a43",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/be31d57686a551261cfd5deb95c9553402942a43",
        "files": [
          "crypto/mem_sec.c"
        ],
        "message": "Prevent allocations of size 0 in sh_init.\n\nwhich are not possible with the default OPENSSL_zalloc, but are possible if\nthe user has installed their own allocator using CRYPTO_set_mem_functions. If\nthe 0-allocations succeeds, the secure heap code will later access\n(at least) the first byte of that space, which is technically an OOB\naccess. This could lead to problems with some custom allocators that only\nreturn a valid pointer for subsequent free()-ing, and do not expect that\nthe pointer is actually dereferenced.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2605)\n(cherry picked from commit 7f07149d25f8d7e00e9350ff2f064a4d25c1a13d)",
        "before_after_code_files": [
          "crypto/mem_sec.c||crypto/mem_sec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/mem_sec.c||crypto/mem_sec.c": [
          "File: crypto/mem_sec.c -> crypto/mem_sec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "356:     sh.minsize = minsize;",
          "357:     sh.bittable_size = (sh.arena_size / sh.minsize) * 2;",
          "359:     sh.freelist_size = -1;",
          "360:     for (i = sh.bittable_size; i; i >>= 1)",
          "361:         sh.freelist_size++;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "360:     if (sh.bittable_size >> 3 == 0)",
          "361:         goto err;",
          "",
          "---------------"
        ]
      }
    }
  ]
}