{
  "cve_id": "CVE-2018-17942",
  "cve_desc": "The convert_to_decimal function in vasnprintf.c in Gnulib before 2018-09-23 has a heap-based buffer overflow because memory is not allocated for a trailing '\\0' character during %f processing.",
  "repo": "coreutils/gnulib",
  "patch_hash": "278b4175c9d7dd47c1a3071554aac02add3b3c35",
  "patch_info": {
    "commit_hash": "278b4175c9d7dd47c1a3071554aac02add3b3c35",
    "repo": "coreutils/gnulib",
    "commit_url": "https://github.com/coreutils/gnulib/commit/278b4175c9d7dd47c1a3071554aac02add3b3c35",
    "files": [
      "ChangeLog",
      "lib/vasnprintf.c",
      "tests/test-vasnprintf.c"
    ],
    "message": "vasnprintf: Fix heap memory overrun bug.\n\nReported by Ben Pfaff <blp@cs.stanford.edu> in\n<https://lists.gnu.org/archive/html/bug-gnulib/2018-09/msg00107.html>.\n\n* lib/vasnprintf.c (convert_to_decimal): Allocate one more byte of\nmemory.\n* tests/test-vasnprintf.c (test_function): Add another test.",
    "before_after_code_files": [
      "lib/vasnprintf.c||lib/vasnprintf.c",
      "tests/test-vasnprintf.c||tests/test-vasnprintf.c"
    ]
  },
  "patch_diff": {
    "lib/vasnprintf.c||lib/vasnprintf.c": [
      "File: lib/vasnprintf.c -> lib/vasnprintf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "860:   size_t a_len = a.nlimbs;",
      "862:   size_t c_len = 9 * ((size_t)(a_len * (GMP_LIMB_BITS * 0.03345f)) + 1);",
      "864:   if (c_ptr != NULL)",
      "865:     {",
      "866:       char *d_ptr = c_ptr;",
      "",
      "[Removed Lines]",
      "863:   char *c_ptr = (char *) malloc (xsum (c_len, extra_zeroes));",
      "",
      "[Added Lines]",
      "865:   char *c_ptr = (char *) malloc (xsum (xsum (extra_zeroes, c_len), 1));",
      "",
      "---------------"
    ],
    "tests/test-vasnprintf.c||tests/test-vasnprintf.c": [
      "File: tests/test-vasnprintf.c -> tests/test-vasnprintf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "53:       ASSERT (result != NULL);",
      "54:       ASSERT (strcmp (result, \"12345\") == 0);",
      "55:       ASSERT (length == 5);",
      "57:         ASSERT (result != buf);",
      "58:       ASSERT (memcmp (buf + size, &\"DEADBEEF\"[size], 8 - size) == 0);",
      "59:       if (result != buf)",
      "",
      "[Removed Lines]",
      "56:       if (size < 6)",
      "",
      "[Added Lines]",
      "56:       if (size < 5 + 1)",
      "57:         ASSERT (result != buf);",
      "58:       ASSERT (memcmp (buf + size, &\"DEADBEEF\"[size], 8 - size) == 0);",
      "59:       if (result != buf)",
      "60:         free (result);",
      "61:     }",
      "64:   for (size = 0; size <= 8; size++)",
      "65:     {",
      "66:       size_t length;",
      "67:       char *result;",
      "69:       memcpy (buf, \"DEADBEEF\", 8);",
      "70:       length = size;",
      "71:       result = my_asnprintf (buf, &length, \"%2.0f\", 1.6314159265358979e+125);",
      "72:       ASSERT (result != NULL);",
      "73:       ASSERT (strcmp (result, \"163141592653589790215729350939528493057529598899734151772468186268423257777068536614838678161083520756952076273094236944990208\") == 0);",
      "74:       ASSERT (length == 126);",
      "75:       if (size < 126 + 1)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "976a1a0f7d5486433eeb9d9e4519c3d1434ec0ff",
      "candidate_info": {
        "commit_hash": "976a1a0f7d5486433eeb9d9e4519c3d1434ec0ff",
        "repo": "coreutils/gnulib",
        "commit_url": "https://github.com/coreutils/gnulib/commit/976a1a0f7d5486433eeb9d9e4519c3d1434ec0ff",
        "files": [
          "ChangeLog",
          "tests/test-vasnprintf.c"
        ],
        "message": "vasnprintf tests: Avoid test failure on HP-UX/hppa and IRIX.\n\n* tests/test-vasnprintf.c (test_function): Change the test added on\n2018-09-23 to check only the 18 most significant digits.",
        "before_after_code_files": [
          "tests/test-vasnprintf.c||tests/test-vasnprintf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tests/test-vasnprintf.c||tests/test-vasnprintf.c"
          ],
          "candidate": [
            "tests/test-vasnprintf.c||tests/test-vasnprintf.c"
          ]
        }
      },
      "candidate_diff": {
        "tests/test-vasnprintf.c||tests/test-vasnprintf.c": [
          "File: tests/test-vasnprintf.c -> tests/test-vasnprintf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:          163141592653589790215729350939528493057529598899734151772468186268423257777068536614838678161083520756952076273094236944990208",
          "75:          On Cygwin, the result is",
          "76:          163141592653589790215729350939528493057529600000000000000000000000000000000000000000000000000000000000000000000000000000000000",
          "78:       ASSERT (strlen (result) == 126);",
          "80:       ASSERT (length == 126);",
          "81:       if (size < 126 + 1)",
          "82:         ASSERT (result != buf);",
          "",
          "[Removed Lines]",
          "79:       ASSERT (memcmp (result, \"163141592653589790215729350939528493057529\", 42) == 0);",
          "",
          "[Added Lines]",
          "77:          On HP-UX 11.31 / hppa and IRIX 6.5, the result is",
          "78:          163141592653589790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
          "81:       ASSERT (memcmp (result, \"163141592653589790\", 18) == 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6c94689ebf6fa1c1c0c4df70a1d8b2c97f85b3e0",
      "candidate_info": {
        "commit_hash": "6c94689ebf6fa1c1c0c4df70a1d8b2c97f85b3e0",
        "repo": "coreutils/gnulib",
        "commit_url": "https://github.com/coreutils/gnulib/commit/6c94689ebf6fa1c1c0c4df70a1d8b2c97f85b3e0",
        "files": [
          "ChangeLog",
          "tests/test-vasnprintf.c"
        ],
        "message": "vasnprintf tests: Avoid test failure on Cygwin.\n\n* tests/test-vasnprintf.c (test_function): Change the test added on\n2018-09-23 to check only the 42 most significant digits.",
        "before_after_code_files": [
          "tests/test-vasnprintf.c||tests/test-vasnprintf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tests/test-vasnprintf.c||tests/test-vasnprintf.c"
          ],
          "candidate": [
            "tests/test-vasnprintf.c||tests/test-vasnprintf.c"
          ]
        }
      },
      "candidate_diff": {
        "tests/test-vasnprintf.c||tests/test-vasnprintf.c": [
          "File: tests/test-vasnprintf.c -> tests/test-vasnprintf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:       length = size;",
          "71:       result = my_asnprintf (buf, &length, \"%2.0f\", 1.6314159265358979e+125);",
          "72:       ASSERT (result != NULL);",
          "74:       ASSERT (length == 126);",
          "75:       if (size < 126 + 1)",
          "76:         ASSERT (result != buf);",
          "",
          "[Removed Lines]",
          "73:       ASSERT (strcmp (result, \"163141592653589790215729350939528493057529598899734151772468186268423257777068536614838678161083520756952076273094236944990208\") == 0);",
          "",
          "[Added Lines]",
          "74:          163141592653589790215729350939528493057529598899734151772468186268423257777068536614838678161083520756952076273094236944990208",
          "75:          On Cygwin, the result is",
          "76:          163141592653589790215729350939528493057529600000000000000000000000000000000000000000000000000000000000000000000000000000000000",
          "78:       ASSERT (strlen (result) == 126);",
          "79:       ASSERT (memcmp (result, \"163141592653589790215729350939528493057529\", 42) == 0);",
          "",
          "---------------"
        ]
      }
    }
  ]
}