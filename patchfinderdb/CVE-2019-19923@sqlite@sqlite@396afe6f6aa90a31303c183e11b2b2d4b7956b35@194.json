{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d6401e869baca759a169a58de148689785dc7907",
      "candidate_info": {
        "commit_hash": "d6401e869baca759a169a58de148689785dc7907",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d6401e869baca759a169a58de148689785dc7907",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/pcache1.c"
        ],
        "message": "Expand the size of the temporary page used during btree rebalancing by a few bytes, to avoid problems with small buffer overreads that can occur on corrupted database files.\n\nFossilOrigin-Name: 32754ca6f86da8165e274f98f35fc3df3aebd273e9da08387e2d0c3c89abda0f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/pcache1.c||src/pcache1.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 160b1e31c0f27257c06c2987af9ec3a64abfacb2150325b72e8ccd3d217b5baa",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/pcache1.c||src/pcache1.c": [
          "File: src/pcache1.c -> src/pcache1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "479: void *sqlite3PageMalloc(int sz){",
          "481: }",
          "",
          "[Removed Lines]",
          "480:   return pcache1Alloc(sz);",
          "",
          "[Added Lines]",
          "483:   return pcache1Alloc(sz + 32);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bd717a4d2e5797027b8203a6f68af24be78e4f93",
      "candidate_info": {
        "commit_hash": "bd717a4d2e5797027b8203a6f68af24be78e4f93",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/bd717a4d2e5797027b8203a6f68af24be78e4f93",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/where.c",
          "test/nulls1.test"
        ],
        "message": "Improve vdbe branch coverage of NULLS LAST code.\n\nFossilOrigin-Name: e8e9f77d52974f6ba0a536d05837b280a996745deb3a2169bb29379f10e49df4",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/where.c||src/where.c",
          "test/nulls1.test||test/nulls1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 96ff2ba9c4bb71d5f7c6f359986a76a5364b7ac3e1a612441543a9eabecf31df",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/where.c||src/where.c": [
          "File: src/where.c -> src/where.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5216:       VdbeCoverageIf(v, pLevel->op==OP_VNext);",
          "5217:       if( pLevel->regBignull ){",
          "5218:         sqlite3VdbeResolveLabel(v, pLevel->addrBignull);",
          "5220:         VdbeCoverage(v);",
          "5221:       }",
          "5222: #ifndef SQLITE_DISABLE_SKIPAHEAD_DISTINCT",
          "",
          "[Removed Lines]",
          "5219:         sqlite3VdbeAddOp2(v, OP_IfNotZero, pLevel->regBignull, pLevel->p2-1);",
          "",
          "[Added Lines]",
          "5219:         sqlite3VdbeAddOp2(v, OP_DecrJumpZero, pLevel->regBignull, pLevel->p2-1);",
          "",
          "---------------"
        ],
        "test/nulls1.test||test/nulls1.test": [
          "File: test/nulls1.test -> test/nulls1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "236:   `--SEARCH TABLE t5 USING COVERING INDEX t5ab (a=?)",
          "237: }",
          "240: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "239: #-------------------------------------------------------------------------",
          "240: do_execsql_test 7.0 {",
          "241:   CREATE TABLE t71(a, b, c);",
          "242:   CREATE INDEX t71abc ON t71(a, b, c);",
          "244:   SELECT * FROM t71 WHERE a=1 AND b=2 ORDER BY c NULLS LAST;",
          "245:   SELECT * FROM t71 WHERE a=1 AND b=2 ORDER BY c DESC NULLS FIRST;",
          "247:   SELECT * FROM t71 ORDER BY a NULLS LAST;",
          "248:   SELECT * FROM t71 ORDER BY a DESC NULLS FIRST;",
          "249: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1d4b25fa50f1109faefc756621584e234d2e92d7",
      "candidate_info": {
        "commit_hash": "1d4b25fa50f1109faefc756621584e234d2e92d7",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1d4b25fa50f1109faefc756621584e234d2e92d7",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c"
        ],
        "message": "Add missing VdbeCoverage() macros to new code in window.c.\n\nFossilOrigin-Name: 4f9b93e6cfa0b3b6ab8a126299c2b2a242f840453dc450e84d3df87576cf6cf8",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c02f77b1b4d025d4243f883d6f3a2b3abcaf4944e0209f641b62c576415343dc",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1313:   VdbeCoverageIf(v, eCond==0);",
          "1314:   VdbeCoverageIf(v, eCond==1);",
          "1315:   VdbeCoverageIf(v, eCond==2);",
          "1316:   sqlite3VdbeAddOp3(v, aOp[eCond], regZero, sqlite3VdbeCurrentAddr(v)+2, reg);",
          "1317:   VdbeCoverageNeverNullIf(v, eCond==0);",
          "1318:   VdbeCoverageNeverNullIf(v, eCond==1);",
          "1319:   VdbeCoverageNeverNullIf(v, eCond==2);",
          "1320:   sqlite3MayAbort(pParse);",
          "1321:   sqlite3VdbeAddOp2(v, OP_Halt, SQLITE_ERROR, OE_Abort);",
          "1322:   sqlite3VdbeAppendP4(v, (void*)azErr[eCond], P4_STATIC);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1316:   VdbeCoverageIf(v, eCond==3);",
          "1317:   VdbeCoverageIf(v, eCond==4);",
          "1322:   VdbeCoverageNeverNullIf(v, eCond==3);",
          "1323:   VdbeCoverageNeverNullIf(v, eCond==4);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1558:   }",
          "1560:   sqlite3VdbeAddOp3(v, OP_SeekGE, csr, lblBrk, pMWin->regStartRowid);",
          "1561:   addrNext = sqlite3VdbeCurrentAddr(v);",
          "1562:   sqlite3VdbeAddOp2(v, OP_Rowid, csr, regRowid);",
          "1563:   sqlite3VdbeAddOp3(v, OP_Gt, pMWin->regEndRowid, lblBrk, regRowid);",
          "1565:   if( pMWin->eExclude==TK_CURRENT ){",
          "1566:     sqlite3VdbeAddOp3(v, OP_Eq, regCRowid, lblNext, regRowid);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1565:   VdbeCoverage(v);",
          "1569:   VdbeCoverageNeverNull(v);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1587:   sqlite3VdbeResolveLabel(v, lblNext);",
          "1588:   sqlite3VdbeAddOp2(v, OP_Next, csr, addrNext);",
          "1589:   sqlite3VdbeJumpHere(v, addrNext-1);",
          "1590:   sqlite3VdbeJumpHere(v, addrNext+1);",
          "1591:   sqlite3ReleaseTempReg(pParse, regRowid);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1595:   VdbeCoverage(v);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1815:   sqlite3VdbeAddOp4(v, OP_String8, 0, regString, 0, \"\", P4_STATIC);",
          "1816:   addrGe = sqlite3VdbeAddOp3(v, OP_Ge, regString, 0, reg1);",
          "1817:   sqlite3VdbeAddOp3(v, arith, regVal, reg1, reg1);",
          "1818:   sqlite3VdbeJumpHere(v, addrGe);",
          "1819:   sqlite3VdbeAddOp3(v, op, reg2, lbl, reg1);",
          "1820:   sqlite3VdbeChangeP5(v, SQLITE_NULLEQ);",
          "1822:   sqlite3ReleaseTempReg(pParse, reg1);",
          "1823:   sqlite3ReleaseTempReg(pParse, reg2);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1824:   VdbeCoverage(v);",
          "1829:   VdbeCoverage(v);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1876:       }",
          "1877:     }else{",
          "1878:       addrIf = sqlite3VdbeAddOp3(v, OP_IfPos, regCountdown, 0, 1);",
          "1879:     }",
          "1880:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1888:       VdbeCoverage(v);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1922:   if( jumpOnEof ){",
          "1923:     sqlite3VdbeAddOp2(v, OP_Next, csr, sqlite3VdbeCurrentAddr(v)+2);",
          "1924:     ret = sqlite3VdbeAddOp0(v, OP_Goto);",
          "1925:   }else{",
          "1926:     sqlite3VdbeAddOp2(v, OP_Next, csr, sqlite3VdbeCurrentAddr(v)+1+bPeer);",
          "1927:     if( bPeer ){",
          "1928:       addrGoto = sqlite3VdbeAddOp0(v, OP_Goto);",
          "1929:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1934:     VdbeCoverage(v);",
          "1938:     VdbeCoverage(v);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2476:   sqlite3VdbeAddOp2(v, OP_NewRowid, csrWrite, regRowid);",
          "2477:   sqlite3VdbeAddOp3(v, OP_Insert, csrWrite, regRecord, regRowid);",
          "2478:   addrNe = sqlite3VdbeAddOp3(v, OP_Ne, pMWin->regOne, 0, regRowid);",
          "2481:   s.regArg = windowInitAccum(pParse, pMWin);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2491:   VdbeCoverage(v);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2492:   if( pMWin->eStart==pMWin->eEnd && regStart ){",
          "2493:     int op = ((pMWin->eStart==TK_FOLLOWING) ? OP_Ge : OP_Le);",
          "2494:     int addrGe = sqlite3VdbeAddOp3(v, op, regStart, 0, regEnd);",
          "2495:     windowAggFinal(&s, 0);",
          "2496:     sqlite3VdbeAddOp2(v, OP_Rewind, s.current.csr, 1);",
          "2497:     windowReturnOneRow(&s);",
          "2498:     sqlite3VdbeAddOp1(v, OP_ResetSorter, s.current.csr);",
          "2499:     sqlite3VdbeAddOp2(v, OP_Goto, 0, lblWhereEnd);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2508:     VdbeCoverage(v);",
          "2511:     VdbeCoverageNeverTaken(v);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2507:   if( pMWin->eStart!=TK_UNBOUNDED ){",
          "2508:     sqlite3VdbeAddOp2(v, OP_Rewind, s.start.csr, 1);",
          "2509:   }",
          "2510:   sqlite3VdbeAddOp2(v, OP_Rewind, s.current.csr, 1);",
          "2511:   sqlite3VdbeAddOp2(v, OP_Rewind, s.end.csr, 1);",
          "2512:   if( regPeer && pOrderBy ){",
          "2513:     sqlite3VdbeAddOp3(v, OP_Copy, regNewPeer, regPeer, pOrderBy->nExpr-1);",
          "2514:     sqlite3VdbeAddOp3(v, OP_Copy, regPeer, s.start.reg, pOrderBy->nExpr-1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2524:     VdbeCoverageNeverTaken(v);",
          "2527:   VdbeCoverageNeverTaken(v);",
          "2529:   VdbeCoverageNeverTaken(v);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2561:           sqlite3VdbeResolveLabel(v, lbl);",
          "2562:         }",
          "2563:       }else{",
          "2565:         windowCodeOp(&s, WINDOW_RETURN_ROW, 0, 0);",
          "2566:         windowCodeOp(&s, WINDOW_AGGINVERSE, regStart, 0);",
          "2567:         if( regEnd ) sqlite3VdbeJumpHere(v, addr);",
          "",
          "[Removed Lines]",
          "2564:         if( regEnd ) addr = sqlite3VdbeAddOp3(v, OP_IfPos, regEnd, 0, 1);",
          "",
          "[Added Lines]",
          "2582:         if( regEnd ){",
          "2583:           addr = sqlite3VdbeAddOp3(v, OP_IfPos, regEnd, 0, 1);",
          "2584:           VdbeCoverage(v);",
          "2585:         }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2580:   }",
          "2582:   addrEmpty = sqlite3VdbeAddOp1(v, OP_Rewind, csrWrite);",
          "2583:   if( pMWin->eEnd==TK_PRECEDING ){",
          "2584:     windowCodeOp(&s, WINDOW_AGGSTEP, regEnd, 0);",
          "2585:     windowCodeOp(&s, WINDOW_RETURN_ROW, 0, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2604:   VdbeCoverage(v);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "922b35801d8bdbb9365cbde7d44e66293f616e13",
      "candidate_info": {
        "commit_hash": "922b35801d8bdbb9365cbde7d44e66293f616e13",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/922b35801d8bdbb9365cbde7d44e66293f616e13",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/test_journal.c"
        ],
        "message": "Update an assert() in test_journal.c to take the new \"VACUUM INTO\" functionality into account.\n\nFossilOrigin-Name: 0e6249cb958a40ead0edf6e75a2c46e8657db3d358c5fe78a9dc0fa5ed7ad929",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/test_journal.c||src/test_journal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9d54a63d6e3cd47b483cf0ee868a5e7f638bcb0e3cbdeaecc667f293b87a3e99",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/test_journal.c||src/test_journal.c": [
          "File: src/test_journal.c -> src/test_journal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "564:       assert( pgno>p->nPage || sqlite3BitvecTest(p->pWritable, pgno) );",
          "565:     }",
          "566:   }",
          "",
          "[Removed Lines]",
          "563:       assert( pgno<=p->nPage || p->nSync>0 );",
          "",
          "[Added Lines]",
          "563:       assert( p->nPage==0 || pgno<=p->nPage || p->nSync>0 );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b854b767330306ae20b235186af8e75f3c368900",
      "candidate_info": {
        "commit_hash": "b854b767330306ae20b235186af8e75f3c368900",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b854b767330306ae20b235186af8e75f3c368900",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/altertab2.test"
        ],
        "message": "The ALTER TABLE command should not attempt to rename objects that are contained within an expression tree that has been optimized out because it is the other branch of an \"AND false\" expression. Ticket [533010b8cacebe82]\n\nFossilOrigin-Name: 04bd5cb73287f926f1ecf578998fa6ce1379474e86918c692eae5778d0817cef",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/altertab2.test||test/altertab2.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e82f235e7201a420149847cda630ac6f2fce5e3a4577b0ea4793f430d3dc1611",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "894:     return pRight;",
          "895:   }else if( pRight==0 ){",
          "896:     return pLeft;",
          "899:   }else if( ExprAlwaysFalse(pLeft) || ExprAlwaysFalse(pRight) ){",
          "900:     sqlite3ExprDelete(db, pLeft);",
          "901:     sqlite3ExprDelete(db, pRight);",
          "902:     return sqlite3ExprAlloc(db, TK_INTEGER, &sqlite3IntTokens[0], 0);",
          "",
          "[Removed Lines]",
          "897:   }else if( pParse->nErr || IN_RENAME_OBJECT ){",
          "898:     return sqlite3PExpr(pParse, TK_AND, pLeft, pRight);",
          "",
          "[Added Lines]",
          "898:     if( IN_RENAME_OBJECT ){",
          "899:       sqlite3RenameExprUnmap(pParse, pLeft);",
          "900:       sqlite3RenameExprUnmap(pParse, pRight);",
          "901:     }",
          "",
          "---------------"
        ],
        "test/altertab2.test||test/altertab2.test": [
          "File: test/altertab2.test -> test/altertab2.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "342:   CREATE TABLE t4(a, b);",
          "343:   CREATE VIEW v4 AS SELECT * FROM t4 WHERE (a=1 AND 0) OR b=2;",
          "344: }",
          "345: do_execsql_test 8.5 {",
          "346:   ALTER TABLE t4 RENAME a TO c;",
          "347:   SELECT sql FROM sqlite_master WHERE name = 'v4'",
          "350: finish_test",
          "",
          "[Removed Lines]",
          "348: } {{CREATE VIEW v4 AS SELECT * FROM t4 WHERE (c=1 AND 0) OR b=2}}",
          "",
          "[Added Lines]",
          "346: # Do not rename branches of an expression tree that is optimized out by",
          "347: # the AND optimization.",
          "348: #",
          "352: } {{CREATE VIEW v4 AS SELECT * FROM t4 WHERE (a=1 AND 0) OR b=2}}",
          "353: #                \"a\" is not renamed to \"c\" ---^",
          "355: # 2019-06-10 https://www.sqlite.org/src/info/533010b8cacebe82",
          "356: reset_db",
          "357: do_execsql_test 8.6 {",
          "358:   CREATE TABLE t0(c0);",
          "359:   CREATE INDEX i0 ON t0(LIKELIHOOD(1,2) AND 0);",
          "360:   ALTER TABLE t0 RENAME TO t1;",
          "361:   SELECT sql FROM sqlite_master WHERE name='i0';",
          "362: } {{CREATE INDEX i0 ON \"t1\"(LIKELIHOOD(1,2) AND 0)}}",
          "",
          "---------------"
        ]
      }
    }
  ]
}