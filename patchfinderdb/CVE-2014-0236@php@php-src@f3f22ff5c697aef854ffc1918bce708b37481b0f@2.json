{
  "cve_id": "CVE-2014-0236",
  "cve_desc": "file before 5.18, as used in the Fileinfo component in PHP before 5.6.0, allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a zero root_storage value in a CDF file, related to cdf.c and readcdf.c.",
  "repo": "php/php-src",
  "patch_hash": "f3f22ff5c697aef854ffc1918bce708b37481b0f",
  "patch_info": {
    "commit_hash": "f3f22ff5c697aef854ffc1918bce708b37481b0f",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/f3f22ff5c697aef854ffc1918bce708b37481b0f",
    "files": [
      "NEWS",
      "ext/fileinfo/libmagic/cdf.c",
      "ext/fileinfo/libmagic/cdf.h",
      "ext/fileinfo/libmagic/readcdf.c"
    ],
    "message": "Fixed bug #67329 fileinfo: NULL pointer deference flaw by processing certain CDF files",
    "before_after_code_files": [
      "ext/fileinfo/libmagic/cdf.c||ext/fileinfo/libmagic/cdf.c",
      "ext/fileinfo/libmagic/cdf.h||ext/fileinfo/libmagic/cdf.h",
      "ext/fileinfo/libmagic/readcdf.c||ext/fileinfo/libmagic/readcdf.c"
    ]
  },
  "patch_diff": {
    "ext/fileinfo/libmagic/cdf.c||ext/fileinfo/libmagic/cdf.c": [
      "File: ext/fileinfo/libmagic/cdf.c -> ext/fileinfo/libmagic/cdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: #include \"file.h\"",
      "37: #ifndef lint",
      "39: #endif",
      "41: #include <assert.h>",
      "",
      "[Removed Lines]",
      "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.53 2013/02/26 16:20:42 christos Exp $\")",
      "",
      "[Added Lines]",
      "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.55 2014/02/27 23:26:17 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "689: int",
      "690: cdf_read_short_stream(const cdf_info_t *info, const cdf_header_t *h,",
      "692: {",
      "693:  size_t i;",
      "694:  const cdf_directory_t *d;",
      "696:  for (i = 0; i < dir->dir_len; i++)",
      "697:   if (dir->dir_tab[i].d_type == CDF_DIR_TYPE_ROOT_STORAGE)",
      "698:    break;",
      "",
      "[Removed Lines]",
      "691:     const cdf_sat_t *sat, const cdf_dir_t *dir, cdf_stream_t *scn)",
      "",
      "[Added Lines]",
      "691:     const cdf_sat_t *sat, const cdf_dir_t *dir, cdf_stream_t *scn,",
      "692:     const cdf_directory_t **root)",
      "",
      "---------------"
    ],
    "ext/fileinfo/libmagic/cdf.h||ext/fileinfo/libmagic/cdf.h": [
      "File: ext/fileinfo/libmagic/cdf.h -> ext/fileinfo/libmagic/cdf.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "300: int cdf_read_ssat(const cdf_info_t *, const cdf_header_t *, const cdf_sat_t *,",
      "301:     cdf_sat_t *);",
      "302: int cdf_read_short_stream(const cdf_info_t *, const cdf_header_t *,",
      "304: int cdf_read_property_info(const cdf_stream_t *, const cdf_header_t *, uint32_t,",
      "305:     cdf_property_info_t **, size_t *, size_t *);",
      "306: int cdf_read_summary_info(const cdf_info_t *, const cdf_header_t *,",
      "",
      "[Removed Lines]",
      "303:     const cdf_sat_t *, const cdf_dir_t *, cdf_stream_t *);",
      "",
      "[Added Lines]",
      "303:     const cdf_sat_t *, const cdf_dir_t *, cdf_stream_t *,",
      "304:     const cdf_directory_t **);",
      "",
      "---------------"
    ],
    "ext/fileinfo/libmagic/readcdf.c||ext/fileinfo/libmagic/readcdf.c": [
      "File: ext/fileinfo/libmagic/readcdf.c -> ext/fileinfo/libmagic/readcdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "26: #include \"file.h\"",
      "28: #ifndef lint",
      "30: #endif",
      "32: #include <stdlib.h>",
      "",
      "[Removed Lines]",
      "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.37 2014/01/06 13:41:18 rrt Exp $\")",
      "",
      "[Added Lines]",
      "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.40 2014/03/06 15:23:33 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "77: # define strcasestr strstr",
      "78: #endif",
      "80: private const char *",
      "81: cdf_app_to_mime(const char *vbuf, const struct nv *nv)",
      "82: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "80: static const struct cv {",
      "81:  uint64_t clsid[2];",
      "82:  const char *mime;",
      "83: } clsid2mime[] = {",
      "84:  {",
      "85: #ifdef PHP_WIN32",
      "86:   { 0x00000000000c1084ui64, 0x46000000000000c0ui64 },",
      "87: #else",
      "88:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU },",
      "89: #endif",
      "90:   \"x-msi\",",
      "91:  }",
      "92: }, clsid2desc[] = {",
      "93:  {",
      "94: #ifdef PHP_WIN32",
      "95:   { 0x00000000000c1084ui64, 0x46000000000000c0ui64 },",
      "96: #else",
      "97:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU },",
      "98: #endif",
      "99:   \"MSI Installer\",",
      "100:  },",
      "101: };",
      "103: private const char *",
      "104: cdf_clsid_to_mime(const uint64_t clsid[2], const struct cv *cv)",
      "105: {",
      "106:  size_t i;",
      "107:  for (i = 0; cv[i].mime != NULL; i++) {",
      "108:   if (clsid[0] == cv[i].clsid[0] && clsid[1] == cv[i].clsid[1])",
      "109:    return cv[i].mime;",
      "110:  }",
      "111:  return NULL;",
      "112: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "96: private int",
      "97: cdf_file_property_info(struct magic_set *ms, const cdf_property_info_t *info,",
      "99: {",
      "100:         size_t i;",
      "101:         cdf_timestamp_t tp;",
      "",
      "[Removed Lines]",
      "98:     size_t count)",
      "",
      "[Added Lines]",
      "132:     size_t count, const cdf_directory_t *root_storage)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "108:  memset(&ts, 0, sizeof(ts));",
      "110:         for (i = 0; i < count; i++) {",
      "111:                 cdf_print_property_name(buf, sizeof(buf), info[i].pi_id);",
      "112:                 switch (info[i].pi_type) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "144:         if (!NOTMIME(ms) && root_storage)",
      "145:   str = cdf_clsid_to_mime(root_storage->d_storage_uuid, clsid2mime);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "163:                                                     buf, vbuf) == -1)",
      "164:                                                         return -1;",
      "165:                                         }",
      "167:         CDF_PROPERTY_NAME_OF_APPLICATION) {",
      "168:      str = cdf_app_to_mime(vbuf, app2mime);",
      "169:     }",
      "",
      "[Removed Lines]",
      "166:                                 } else if (info[i].pi_id ==",
      "",
      "[Added Lines]",
      "203:                                 } else if (str == NULL && info[i].pi_id ==",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "218: private int",
      "219: cdf_file_summary_info(struct magic_set *ms, const cdf_header_t *h,",
      "221: {",
      "222:         cdf_summary_info_header_t si;",
      "223:         cdf_property_info_t *info;",
      "",
      "[Removed Lines]",
      "220:     const cdf_stream_t *sst)",
      "",
      "[Added Lines]",
      "257:     const cdf_stream_t *sst, const cdf_directory_t *root_storage)",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "228:                 return -1;",
      "230:         if (NOTMIME(ms)) {",
      "231:                 if (file_printf(ms, \"Composite Document File V2 Document\")",
      "232:       == -1)",
      "233:                         return -1;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "268:   const char *str;",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "255:                                 return -2;",
      "256:                         break;",
      "257:                 }",
      "261:         free(info);",
      "263:         return m == -1 ? -2 : m;",
      "",
      "[Removed Lines]",
      "258:         }",
      "260:         m = cdf_file_property_info(ms, info, count);",
      "",
      "[Added Lines]",
      "297:   if (root_storage) {",
      "298:    str = cdf_clsid_to_mime(root_storage->d_storage_uuid, clsid2desc);",
      "299:    if (str)",
      "300:     if (file_printf(ms, \", %s\", str) == -1)",
      "301:      return -2;",
      "302:    }",
      "303:   }",
      "305:         m = cdf_file_property_info(ms, info, count, root_storage);",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "275:         int i;",
      "276:         const char *expn = \"\";",
      "277:         const char *corrupt = \"corrupt: \";",
      "279:         info.i_fd = fd;",
      "280:         info.i_buf = buf;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:         const cdf_directory_t *root_storage;",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "308:                 goto out2;",
      "309:         }",
      "312:                 expn = \"Cannot read short stream\";",
      "313:                 goto out3;",
      "314:         }",
      "",
      "[Removed Lines]",
      "311:         if ((i = cdf_read_short_stream(&info, &h, &sat, &dir, &sst)) == -1) {",
      "",
      "[Added Lines]",
      "357:         if ((i = cdf_read_short_stream(&info, &h, &sat, &dir, &sst,",
      "358:      &root_storage)) == -1) {",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "329: #ifdef CDF_DEBUG",
      "330:         cdf_dump_summary_info(&h, &scn);",
      "331: #endif",
      "334:  if (i == 0) {",
      "335:   const char *str = NULL;",
      "336:   cdf_directory_t *d;",
      "337:   char name[__arraycount(d->d_name)];",
      "338:   size_t j, k;",
      "340:    d = &dir.dir_tab[j];",
      "341:    for (k = 0; k < sizeof(name); k++)",
      "342:     name[k] = (char)cdf_tole2(d->d_name[k]);",
      "349:   }",
      "350:   if (NOTMIME(ms)) {",
      "351:    if (str != NULL) {",
      "",
      "[Removed Lines]",
      "332:         if ((i = cdf_file_summary_info(ms, &h, &scn)) < 0)",
      "333:                 expn = \"Can't expand summary_info\";",
      "339:   for (j = 0; j < dir.dir_len; j++) {",
      "343:    if (NOTMIME(ms))",
      "344:     str = cdf_app_to_mime(name, name2desc);",
      "345:    else",
      "346:     str = cdf_app_to_mime(name, name2mime);",
      "347:    if (str != NULL)",
      "348:     break;",
      "",
      "[Added Lines]",
      "379:         if ((i = cdf_file_summary_info(ms, &h, &scn, root_storage)) < 0)",
      "380:             expn = \"Can't expand summary_info\";",
      "388:   for (j = 0; str == NULL && j < dir.dir_len; j++) {",
      "392:    str = cdf_app_to_mime(name,",
      "393:        NOTMIME(ms) ? name2desc : name2mime);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "58c69746e585312f73163d749bd5613cd21c9a1b",
      "candidate_info": {
        "commit_hash": "58c69746e585312f73163d749bd5613cd21c9a1b",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/58c69746e585312f73163d749bd5613cd21c9a1b",
        "files": [
          "phpdbg_lexer.c",
          "phpdbg_lexer.l",
          "phpdbg_list.c"
        ],
        "message": "Fixed issue krakjoe/phpdbg#94 - List behavior is inconsistent",
        "before_after_code_files": [
          "phpdbg_lexer.c||phpdbg_lexer.c",
          "phpdbg_lexer.l||phpdbg_lexer.l",
          "phpdbg_list.c||phpdbg_list.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "phpdbg_lexer.c||phpdbg_lexer.c": [
          "File: phpdbg_lexer.c -> phpdbg_lexer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "379:   case '\\r':",
          "380:   case ' ': goto yy31;",
          "381:   case '\\n': goto yy34;",
          "383:   case '.':",
          "384:   case '1':",
          "385:   case '2':",
          "",
          "[Removed Lines]",
          "382:   case '#': goto yy54;",
          "",
          "[Added Lines]",
          "382:   case '#': goto yy55;",
          "383:   case '-': goto yy41;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "389:   case '6':",
          "390:   case '7':",
          "391:   case '8':",
          "395:   case 'D':",
          "397:   case 'E':",
          "399:   case 'F':",
          "401:   case 'I':",
          "402:   case 'i': goto yy37;",
          "403:   case 'N':",
          "405:   case 'O':",
          "407:   case 'T':",
          "409:   case 'Y':",
          "413:   default: goto yy39;",
          "414:   }",
          "415: yy31:",
          "",
          "[Removed Lines]",
          "392:   case '9': goto yy41;",
          "393:   case '0': goto yy44;",
          "394:   case ':': goto yy56;",
          "396:   case 'd': goto yy45;",
          "398:   case 'e': goto yy46;",
          "400:   case 'f': goto yy47;",
          "404:   case 'n': goto yy48;",
          "406:   case 'o': goto yy49;",
          "408:   case 't': goto yy50;",
          "410:   case 'y': goto yy51;",
          "411:   case 'Z': goto yy52;",
          "412:   case 'z': goto yy53;",
          "",
          "[Added Lines]",
          "393:   case '9': goto yy42;",
          "394:   case '0': goto yy45;",
          "395:   case ':': goto yy57;",
          "397:   case 'd': goto yy46;",
          "399:   case 'e': goto yy47;",
          "401:   case 'f': goto yy48;",
          "405:   case 'n': goto yy49;",
          "407:   case 'o': goto yy50;",
          "409:   case 't': goto yy51;",
          "411:   case 'y': goto yy52;",
          "412:   case 'Z': goto yy53;",
          "413:   case 'z': goto yy54;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "430:  goto restart;",
          "431: }",
          "433: yy34:",
          "434:   YYDEBUG(34, *YYCURSOR);",
          "435:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "432: #line 433 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "433: #line 434 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "443:   {",
          "444:  return 0;",
          "445: }",
          "447: yy36:",
          "448:   YYDEBUG(36, *YYCURSOR);",
          "449:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "446: #line 447 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "447: #line 448 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "452:   YYDEBUG(37, *YYCURSOR);",
          "453:   yyaccept = 0;",
          "454:   yych = *(YYMARKER = ++YYCURSOR);",
          "457:   goto yy40;",
          "458: yy38:",
          "459:   YYDEBUG(38, *YYCURSOR);",
          "",
          "[Removed Lines]",
          "455:   if (yych == 'F') goto yy105;",
          "456:   if (yych == 'f') goto yy105;",
          "",
          "[Added Lines]",
          "456:   if (yych == 'F') goto yy106;",
          "457:   if (yych == 'f') goto yy106;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "465:  yylval->len = yyleng;",
          "466:  return T_ID;",
          "467: }",
          "469: yy39:",
          "470:   YYDEBUG(39, *YYCURSOR);",
          "471:   yyaccept = 0;",
          "",
          "[Removed Lines]",
          "468: #line 469 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "469: #line 470 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "478:    goto yy39;",
          "479:   }",
          "480:   if (yych <= '9') goto yy38;",
          "482: yy41:",
          "483:   YYDEBUG(41, *YYCURSOR);",
          "484:   yyaccept = 1;",
          "485:   YYMARKER = ++YYCURSOR;",
          "486:   YYFILL(3);",
          "487:   yych = *YYCURSOR;",
          "489:   if (yybm[0+yych] & 32) {",
          "491:   }",
          "492:   if (yych <= 0x1F) {",
          "493:    if (yych <= '\\n') {",
          "495:     if (yych <= 0x08) goto yy39;",
          "496:    } else {",
          "497:     if (yych != '\\r') goto yy39;",
          "498:    }",
          "499:   } else {",
          "500:    if (yych <= '#') {",
          "502:     if (yych <= '\"') goto yy39;",
          "503:    } else {",
          "505:     goto yy39;",
          "506:    }",
          "507:   }",
          "510:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "511: #line 106 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "512:   {",
          "",
          "[Removed Lines]",
          "481:   goto yy61;",
          "488:   YYDEBUG(42, *YYCURSOR);",
          "490:    goto yy41;",
          "494:     if (yych <= 0x00) goto yy43;",
          "501:     if (yych <= ' ') goto yy43;",
          "504:     if (yych == ':') goto yy61;",
          "508: yy43:",
          "509:   YYDEBUG(43, *YYCURSOR);",
          "",
          "[Added Lines]",
          "482:   goto yy62;",
          "485:   yyaccept = 0;",
          "486:   yych = *(YYMARKER = ++YYCURSOR);",
          "487:   if (yybm[0+yych] & 32) {",
          "488:    goto yy42;",
          "489:   }",
          "490:   goto yy40;",
          "491: yy42:",
          "492:   YYDEBUG(42, *YYCURSOR);",
          "497:   YYDEBUG(43, *YYCURSOR);",
          "499:    goto yy42;",
          "503:     if (yych <= 0x00) goto yy44;",
          "510:     if (yych <= ' ') goto yy44;",
          "513:     if (yych == ':') goto yy62;",
          "517: yy44:",
          "518:   YYDEBUG(44, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "514:  yylval->num = atoi(yytext);",
          "515:  return T_DIGITS;",
          "516: }",
          "520:   yyaccept = 1;",
          "521:   yych = *(YYMARKER = ++YYCURSOR);",
          "522:   if (yybm[0+yych] & 32) {",
          "524:   }",
          "525:   if (yych <= 0x1F) {",
          "526:    if (yych <= '\\n') {",
          "528:     if (yych <= 0x08) goto yy40;",
          "530:    } else {",
          "532:     goto yy40;",
          "533:    }",
          "534:   } else {",
          "535:    if (yych <= '#') {",
          "537:     if (yych <= '\"') goto yy40;",
          "539:    } else {",
          "541:     goto yy40;",
          "542:    }",
          "543:   }",
          "551: yy46:",
          "552:   YYDEBUG(46, *YYCURSOR);",
          "553:   yyaccept = 0;",
          "554:   yych = *(YYMARKER = ++YYCURSOR);",
          "557:   goto yy40;",
          "558: yy47:",
          "559:   YYDEBUG(47, *YYCURSOR);",
          "560:   yyaccept = 0;",
          "561:   yych = *(YYMARKER = ++YYCURSOR);",
          "564:   goto yy40;",
          "565: yy48:",
          "566:   YYDEBUG(48, *YYCURSOR);",
          "567:   yyaccept = 0;",
          "568:   yych = *(YYMARKER = ++YYCURSOR);",
          "571:   goto yy40;",
          "572: yy49:",
          "573:   YYDEBUG(49, *YYCURSOR);",
          "574:   yyaccept = 0;",
          "575:   yych = *(YYMARKER = ++YYCURSOR);",
          "576:   if (yych <= 'N') {",
          "578:    if (yych <= 'M') goto yy40;",
          "580:   } else {",
          "581:    if (yych <= 'f') {",
          "582:     if (yych <= 'e') goto yy40;",
          "584:    } else {",
          "586:     goto yy40;",
          "587:    }",
          "588:   }",
          "596: yy51:",
          "597:   YYDEBUG(51, *YYCURSOR);",
          "598:   yyaccept = 0;",
          "599:   yych = *(YYMARKER = ++YYCURSOR);",
          "602:   goto yy40;",
          "603: yy52:",
          "604:   YYDEBUG(52, *YYCURSOR);",
          "605:   yyaccept = 0;",
          "606:   yych = *(YYMARKER = ++YYCURSOR);",
          "608:   goto yy40;",
          "609: yy53:",
          "610:   YYDEBUG(53, *YYCURSOR);",
          "611:   yyaccept = 0;",
          "612:   yych = *(YYMARKER = ++YYCURSOR);",
          "614:   goto yy40;",
          "615: yy54:",
          "616:   YYDEBUG(54, *YYCURSOR);",
          "618:   YYDEBUG(55, *YYCURSOR);",
          "619:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "620: #line 84 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "621:   {",
          "622:  return T_POUND;",
          "623: }",
          "629:   YYDEBUG(57, *YYCURSOR);",
          "630:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "631: #line 90 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "632:   {",
          "633:  return T_COLON;",
          "634: }",
          "639:   YYDEBUG(59, *YYCURSOR);",
          "640:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "641: #line 87 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "642:   {",
          "643:  return T_DCOLON;",
          "644: }",
          "648:   yyaccept = 0;",
          "649:   yych = *(YYMARKER = ++YYCURSOR);",
          "651:   goto yy40;",
          "656: yy62:",
          "657:   YYDEBUG(62, *YYCURSOR);",
          "658:   YYCURSOR = YYMARKER;",
          "659:   if (yyaccept <= 1) {",
          "660:    if (yyaccept <= 0) {",
          "661:     goto yy38;",
          "662:    } else {",
          "664:    }",
          "665:   } else {",
          "666:    if (yyaccept <= 2) {",
          "668:    } else {",
          "670:    }",
          "671:   }",
          "676:   YYDEBUG(64, *YYCURSOR);",
          "678:   YYDEBUG(65, *YYCURSOR);",
          "679:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "680: #line 78 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "681:   {",
          "",
          "[Removed Lines]",
          "517: #line 518 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "518: yy44:",
          "519:   YYDEBUG(44, *YYCURSOR);",
          "523:    goto yy41;",
          "527:     if (yych <= 0x00) goto yy43;",
          "529:     goto yy43;",
          "531:     if (yych == '\\r') goto yy43;",
          "536:     if (yych <= ' ') goto yy43;",
          "538:     goto yy43;",
          "540:     if (yych == 'x') goto yy101;",
          "544: yy45:",
          "545:   YYDEBUG(45, *YYCURSOR);",
          "546:   yyaccept = 0;",
          "547:   yych = *(YYMARKER = ++YYCURSOR);",
          "548:   if (yych == 'I') goto yy95;",
          "549:   if (yych == 'i') goto yy95;",
          "550:   goto yy40;",
          "555:   if (yych == 'N') goto yy90;",
          "556:   if (yych == 'n') goto yy90;",
          "562:   if (yych == 'A') goto yy87;",
          "563:   if (yych == 'a') goto yy87;",
          "569:   if (yych == 'O') goto yy83;",
          "570:   if (yych == 'o') goto yy83;",
          "577:    if (yych == 'F') goto yy82;",
          "579:    goto yy76;",
          "583:     goto yy82;",
          "585:     if (yych == 'n') goto yy76;",
          "589: yy50:",
          "590:   YYDEBUG(50, *YYCURSOR);",
          "591:   yyaccept = 0;",
          "592:   yych = *(YYMARKER = ++YYCURSOR);",
          "593:   if (yych == 'R') goto yy80;",
          "594:   if (yych == 'r') goto yy80;",
          "595:   goto yy40;",
          "600:   if (yych == 'E') goto yy75;",
          "601:   if (yych == 'e') goto yy75;",
          "607:   if (yych == 'E') goto yy72;",
          "613:   if (yych == 'e') goto yy60;",
          "617:   ++YYCURSOR;",
          "624: #line 625 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "625: yy56:",
          "626:   YYDEBUG(56, *YYCURSOR);",
          "627:   ++YYCURSOR;",
          "628:   if ((yych = *YYCURSOR) == ':') goto yy58;",
          "635: #line 636 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "636: yy58:",
          "637:   YYDEBUG(58, *YYCURSOR);",
          "638:   ++YYCURSOR;",
          "645: #line 646 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "646: yy60:",
          "647:   YYDEBUG(60, *YYCURSOR);",
          "650:   if (yych == 'n') goto yy66;",
          "652: yy61:",
          "653:   YYDEBUG(61, *YYCURSOR);",
          "654:   yych = *++YYCURSOR;",
          "655:   if (yych == '/') goto yy63;",
          "663:     goto yy43;",
          "667:     goto yy71;",
          "669:     goto yy104;",
          "672: yy63:",
          "673:   YYDEBUG(63, *YYCURSOR);",
          "674:   yych = *++YYCURSOR;",
          "675:   if (yych != '/') goto yy62;",
          "677:   ++YYCURSOR;",
          "",
          "[Added Lines]",
          "526: #line 527 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "527: yy45:",
          "528:   YYDEBUG(45, *YYCURSOR);",
          "532:    goto yy42;",
          "536:     if (yych <= 0x00) goto yy44;",
          "538:     goto yy44;",
          "540:     if (yych == '\\r') goto yy44;",
          "545:     if (yych <= ' ') goto yy44;",
          "547:     goto yy44;",
          "549:     if (yych == 'x') goto yy102;",
          "557:   if (yych == 'I') goto yy96;",
          "558:   if (yych == 'i') goto yy96;",
          "564:   if (yych == 'N') goto yy91;",
          "565:   if (yych == 'n') goto yy91;",
          "571:   if (yych == 'A') goto yy88;",
          "572:   if (yych == 'a') goto yy88;",
          "578:   if (yych == 'O') goto yy84;",
          "579:   if (yych == 'o') goto yy84;",
          "580:   goto yy40;",
          "581: yy50:",
          "582:   YYDEBUG(50, *YYCURSOR);",
          "583:   yyaccept = 0;",
          "584:   yych = *(YYMARKER = ++YYCURSOR);",
          "586:    if (yych == 'F') goto yy83;",
          "588:    goto yy77;",
          "592:     goto yy83;",
          "594:     if (yych == 'n') goto yy77;",
          "602:   if (yych == 'R') goto yy81;",
          "603:   if (yych == 'r') goto yy81;",
          "609:   if (yych == 'E') goto yy76;",
          "610:   if (yych == 'e') goto yy76;",
          "616:   if (yych == 'E') goto yy73;",
          "620:   yyaccept = 0;",
          "621:   yych = *(YYMARKER = ++YYCURSOR);",
          "622:   if (yych == 'e') goto yy61;",
          "623:   goto yy40;",
          "624: yy55:",
          "626:   ++YYCURSOR;",
          "627:   YYDEBUG(56, *YYCURSOR);",
          "633: #line 634 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "634: yy57:",
          "636:   ++YYCURSOR;",
          "637:   if ((yych = *YYCURSOR) == ':') goto yy59;",
          "638:   YYDEBUG(58, *YYCURSOR);",
          "644: #line 645 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "645: yy59:",
          "647:   ++YYCURSOR;",
          "648:   YYDEBUG(60, *YYCURSOR);",
          "654: #line 655 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "655: yy61:",
          "656:   YYDEBUG(61, *YYCURSOR);",
          "659:   if (yych == 'n') goto yy67;",
          "663:   yych = *++YYCURSOR;",
          "664:   if (yych == '/') goto yy64;",
          "665: yy63:",
          "666:   YYDEBUG(63, *YYCURSOR);",
          "672:     goto yy44;",
          "676:     goto yy72;",
          "678:     goto yy105;",
          "681: yy64:",
          "683:   yych = *++YYCURSOR;",
          "684:   if (yych != '/') goto yy63;",
          "686:   ++YYCURSOR;",
          "687:   YYDEBUG(66, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "684:  yylval->len = yyleng;",
          "685:  return T_PROTO;",
          "686: }",
          "690:   yyaccept = 0;",
          "691:   yych = *(YYMARKER = ++YYCURSOR);",
          "692:   if (yych != 'd') goto yy40;",
          "694:   yyaccept = 0;",
          "695:   yych = *(YYMARKER = ++YYCURSOR);",
          "696:   if (yych != '_') goto yy40;",
          "699:   yyaccept = 0;",
          "700:   yych = *(YYMARKER = ++YYCURSOR);",
          "701:   if (yybm[0+yych] & 64) {",
          "703:   }",
          "704:   goto yy40;",
          "707:   yyaccept = 2;",
          "708:   YYMARKER = ++YYCURSOR;",
          "709:   YYFILL(3);",
          "710:   yych = *YYCURSOR;",
          "712:   if (yybm[0+yych] & 64) {",
          "714:   }",
          "715:   if (yych <= 0x1F) {",
          "716:    if (yych <= '\\n') {",
          "718:     if (yych <= 0x08) goto yy39;",
          "719:    } else {",
          "720:     if (yych != '\\r') goto yy39;",
          "721:    }",
          "722:   } else {",
          "723:    if (yych <= '#') {",
          "725:     if (yych <= '\"') goto yy39;",
          "726:    } else {",
          "728:     goto yy39;",
          "729:    }",
          "730:   }",
          "733:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "734: #line 118 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "735:   {",
          "",
          "[Removed Lines]",
          "687: #line 688 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "688: yy66:",
          "689:   YYDEBUG(66, *YYCURSOR);",
          "693:   YYDEBUG(67, *YYCURSOR);",
          "697: yy68:",
          "698:   YYDEBUG(68, *YYCURSOR);",
          "702:    goto yy69;",
          "705: yy69:",
          "706:   YYDEBUG(69, *YYCURSOR);",
          "711:   YYDEBUG(70, *YYCURSOR);",
          "713:    goto yy69;",
          "717:     if (yych <= 0x00) goto yy71;",
          "724:     if (yych <= ' ') goto yy71;",
          "727:     if (yych == ':') goto yy61;",
          "731: yy71:",
          "732:   YYDEBUG(71, *YYCURSOR);",
          "",
          "[Added Lines]",
          "696: #line 697 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "697: yy67:",
          "698:   YYDEBUG(67, *YYCURSOR);",
          "702:   YYDEBUG(68, *YYCURSOR);",
          "706: yy69:",
          "707:   YYDEBUG(69, *YYCURSOR);",
          "711:    goto yy70;",
          "714: yy70:",
          "715:   YYDEBUG(70, *YYCURSOR);",
          "720:   YYDEBUG(71, *YYCURSOR);",
          "722:    goto yy70;",
          "726:     if (yych <= 0x00) goto yy72;",
          "733:     if (yych <= ' ') goto yy72;",
          "736:     if (yych == ':') goto yy62;",
          "740: yy72:",
          "741:   YYDEBUG(72, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "738:  yylval->len = yyleng;",
          "739:  return T_OPCODE;",
          "740: }",
          "744:   yyaccept = 0;",
          "745:   yych = *(YYMARKER = ++YYCURSOR);",
          "746:   if (yych != 'N') goto yy40;",
          "748:   yyaccept = 0;",
          "749:   yych = *(YYMARKER = ++YYCURSOR);",
          "750:   if (yych != 'D') goto yy40;",
          "752:   yyaccept = 0;",
          "753:   yych = *(YYMARKER = ++YYCURSOR);",
          "755:   goto yy40;",
          "758:   yyaccept = 0;",
          "759:   yych = *(YYMARKER = ++YYCURSOR);",
          "761:   if (yych != 's') goto yy40;",
          "764:   yyaccept = 0;",
          "765:   yych = *(YYMARKER = ++YYCURSOR);",
          "766:   if (yych <= '\\f') {",
          "767:    if (yych <= 0x08) goto yy40;",
          "768:    if (yych >= '\\v') goto yy40;",
          "769:   } else {",
          "771:    if (yych != ' ') goto yy40;",
          "772:   }",
          "775:   ++YYCURSOR;",
          "776:   YYFILL(1);",
          "777:   yych = *YYCURSOR;",
          "779:   if (yych <= '\\f') {",
          "782:   } else {",
          "785:   }",
          "788:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "789: #line 94 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "790:   {",
          "",
          "[Removed Lines]",
          "741: #line 742 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "742: yy72:",
          "743:   YYDEBUG(72, *YYCURSOR);",
          "747:   YYDEBUG(73, *YYCURSOR);",
          "751:   YYDEBUG(74, *YYCURSOR);",
          "754:   if (yych == '_') goto yy68;",
          "756: yy75:",
          "757:   YYDEBUG(75, *YYCURSOR);",
          "760:   if (yych == 'S') goto yy76;",
          "762: yy76:",
          "763:   YYDEBUG(76, *YYCURSOR);",
          "770:    if (yych <= '\\r') goto yy77;",
          "773: yy77:",
          "774:   YYDEBUG(77, *YYCURSOR);",
          "778:   YYDEBUG(78, *YYCURSOR);",
          "780:    if (yych <= 0x08) goto yy79;",
          "781:    if (yych <= '\\n') goto yy77;",
          "783:    if (yych <= '\\r') goto yy77;",
          "784:    if (yych == ' ') goto yy77;",
          "786: yy79:",
          "787:   YYDEBUG(79, *YYCURSOR);",
          "",
          "[Added Lines]",
          "750: #line 751 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "751: yy73:",
          "752:   YYDEBUG(73, *YYCURSOR);",
          "756:   YYDEBUG(74, *YYCURSOR);",
          "760:   YYDEBUG(75, *YYCURSOR);",
          "763:   if (yych == '_') goto yy69;",
          "765: yy76:",
          "766:   YYDEBUG(76, *YYCURSOR);",
          "769:   if (yych == 'S') goto yy77;",
          "771: yy77:",
          "772:   YYDEBUG(77, *YYCURSOR);",
          "779:    if (yych <= '\\r') goto yy78;",
          "782: yy78:",
          "783:   YYDEBUG(78, *YYCURSOR);",
          "787:   YYDEBUG(79, *YYCURSOR);",
          "789:    if (yych <= 0x08) goto yy80;",
          "790:    if (yych <= '\\n') goto yy78;",
          "792:    if (yych <= '\\r') goto yy78;",
          "793:    if (yych == ' ') goto yy78;",
          "795: yy80:",
          "796:   YYDEBUG(80, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "792:  yylval->num = 1;",
          "793:  return T_TRUTHY;",
          "794: }",
          "802: yy81:",
          "803:   YYDEBUG(81, *YYCURSOR);",
          "804:   yyaccept = 0;",
          "805:   yych = *(YYMARKER = ++YYCURSOR);",
          "809: yy82:",
          "810:   YYDEBUG(82, *YYCURSOR);",
          "811:   yyaccept = 0;",
          "812:   yych = *(YYMARKER = ++YYCURSOR);",
          "815: yy83:",
          "816:   YYDEBUG(83, *YYCURSOR);",
          "817:   yyaccept = 0;",
          "818:   yych = *(YYMARKER = ++YYCURSOR);",
          "819:   if (yych <= '\\f') {",
          "820:    if (yych <= 0x08) goto yy40;",
          "821:    if (yych >= '\\v') goto yy40;",
          "822:   } else {",
          "824:    if (yych != ' ') goto yy40;",
          "825:   }",
          "828:   ++YYCURSOR;",
          "829:   YYFILL(1);",
          "830:   yych = *YYCURSOR;",
          "832:   if (yych <= '\\f') {",
          "835:   } else {",
          "838:   }",
          "841:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "842: #line 100 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "843:   {",
          "",
          "[Removed Lines]",
          "795: #line 796 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "796: yy80:",
          "797:   YYDEBUG(80, *YYCURSOR);",
          "798:   yyaccept = 0;",
          "799:   yych = *(YYMARKER = ++YYCURSOR);",
          "800:   if (yych == 'U') goto yy81;",
          "801:   if (yych != 'u') goto yy40;",
          "806:   if (yych == 'E') goto yy76;",
          "807:   if (yych == 'e') goto yy76;",
          "808:   goto yy40;",
          "813:   if (yych == 'F') goto yy83;",
          "814:   if (yych != 'f') goto yy40;",
          "823:    if (yych <= '\\r') goto yy84;",
          "826: yy84:",
          "827:   YYDEBUG(84, *YYCURSOR);",
          "831:   YYDEBUG(85, *YYCURSOR);",
          "833:    if (yych <= 0x08) goto yy86;",
          "834:    if (yych <= '\\n') goto yy84;",
          "836:    if (yych <= '\\r') goto yy84;",
          "837:    if (yych == ' ') goto yy84;",
          "839: yy86:",
          "840:   YYDEBUG(86, *YYCURSOR);",
          "",
          "[Added Lines]",
          "804: #line 805 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "809:   if (yych == 'U') goto yy82;",
          "810:   if (yych != 'u') goto yy40;",
          "815:   if (yych == 'E') goto yy77;",
          "816:   if (yych == 'e') goto yy77;",
          "817:   goto yy40;",
          "822:   if (yych == 'F') goto yy84;",
          "823:   if (yych != 'f') goto yy40;",
          "824: yy84:",
          "825:   YYDEBUG(84, *YYCURSOR);",
          "826:   yyaccept = 0;",
          "827:   yych = *(YYMARKER = ++YYCURSOR);",
          "832:    if (yych <= '\\r') goto yy85;",
          "835: yy85:",
          "836:   YYDEBUG(85, *YYCURSOR);",
          "840:   YYDEBUG(86, *YYCURSOR);",
          "842:    if (yych <= 0x08) goto yy87;",
          "843:    if (yych <= '\\n') goto yy85;",
          "845:    if (yych <= '\\r') goto yy85;",
          "846:    if (yych == ' ') goto yy85;",
          "848: yy87:",
          "849:   YYDEBUG(87, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "845:  yylval->num = 0;",
          "846:  return T_FALSY;",
          "847: }",
          "855: yy88:",
          "856:   YYDEBUG(88, *YYCURSOR);",
          "857:   yyaccept = 0;",
          "858:   yych = *(YYMARKER = ++YYCURSOR);",
          "861: yy89:",
          "862:   YYDEBUG(89, *YYCURSOR);",
          "863:   yyaccept = 0;",
          "864:   yych = *(YYMARKER = ++YYCURSOR);",
          "868: yy90:",
          "869:   YYDEBUG(90, *YYCURSOR);",
          "870:   yyaccept = 0;",
          "871:   yych = *(YYMARKER = ++YYCURSOR);",
          "874: yy91:",
          "875:   YYDEBUG(91, *YYCURSOR);",
          "876:   yyaccept = 0;",
          "877:   yych = *(YYMARKER = ++YYCURSOR);",
          "880: yy92:",
          "881:   YYDEBUG(92, *YYCURSOR);",
          "882:   yyaccept = 0;",
          "883:   yych = *(YYMARKER = ++YYCURSOR);",
          "886: yy93:",
          "887:   YYDEBUG(93, *YYCURSOR);",
          "888:   yyaccept = 0;",
          "889:   yych = *(YYMARKER = ++YYCURSOR);",
          "892: yy94:",
          "893:   YYDEBUG(94, *YYCURSOR);",
          "894:   yyaccept = 0;",
          "895:   yych = *(YYMARKER = ++YYCURSOR);",
          "899: yy95:",
          "900:   YYDEBUG(95, *YYCURSOR);",
          "901:   yyaccept = 0;",
          "902:   yych = *(YYMARKER = ++YYCURSOR);",
          "905: yy96:",
          "906:   YYDEBUG(96, *YYCURSOR);",
          "907:   yyaccept = 0;",
          "908:   yych = *(YYMARKER = ++YYCURSOR);",
          "911: yy97:",
          "912:   YYDEBUG(97, *YYCURSOR);",
          "913:   yyaccept = 0;",
          "914:   yych = *(YYMARKER = ++YYCURSOR);",
          "917: yy98:",
          "918:   YYDEBUG(98, *YYCURSOR);",
          "919:   yyaccept = 0;",
          "920:   yych = *(YYMARKER = ++YYCURSOR);",
          "923: yy99:",
          "924:   YYDEBUG(99, *YYCURSOR);",
          "925:   yyaccept = 0;",
          "926:   yych = *(YYMARKER = ++YYCURSOR);",
          "929: yy100:",
          "930:   YYDEBUG(100, *YYCURSOR);",
          "931:   yyaccept = 0;",
          "932:   yych = *(YYMARKER = ++YYCURSOR);",
          "936: yy101:",
          "937:   YYDEBUG(101, *YYCURSOR);",
          "938:   yyaccept = 0;",
          "939:   yych = *(YYMARKER = ++YYCURSOR);",
          "943:   goto yy40;",
          "944: yy102:",
          "945:   YYDEBUG(102, *YYCURSOR);",
          "946:   yyaccept = 3;",
          "947:   YYMARKER = ++YYCURSOR;",
          "948:   YYFILL(3);",
          "949:   yych = *YYCURSOR;",
          "951:   if (yybm[0+yych] & 128) {",
          "953:   }",
          "954:   if (yych <= 0x1F) {",
          "955:    if (yych <= '\\n') {",
          "957:     if (yych <= 0x08) goto yy39;",
          "958:    } else {",
          "959:     if (yych != '\\r') goto yy39;",
          "960:    }",
          "961:   } else {",
          "962:    if (yych <= '#') {",
          "964:     if (yych <= '\"') goto yy39;",
          "965:    } else {",
          "967:     goto yy39;",
          "968:    }",
          "969:   }",
          "972:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "973: #line 112 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "974:   {",
          "",
          "[Removed Lines]",
          "848: #line 849 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "849: yy87:",
          "850:   YYDEBUG(87, *YYCURSOR);",
          "851:   yyaccept = 0;",
          "852:   yych = *(YYMARKER = ++YYCURSOR);",
          "853:   if (yych == 'L') goto yy88;",
          "854:   if (yych != 'l') goto yy40;",
          "859:   if (yych == 'S') goto yy89;",
          "860:   if (yych != 's') goto yy40;",
          "865:   if (yych == 'E') goto yy83;",
          "866:   if (yych == 'e') goto yy83;",
          "867:   goto yy40;",
          "872:   if (yych == 'A') goto yy91;",
          "873:   if (yych != 'a') goto yy40;",
          "878:   if (yych == 'B') goto yy92;",
          "879:   if (yych != 'b') goto yy40;",
          "884:   if (yych == 'L') goto yy93;",
          "885:   if (yych != 'l') goto yy40;",
          "890:   if (yych == 'E') goto yy94;",
          "891:   if (yych != 'e') goto yy40;",
          "896:   if (yych == 'D') goto yy76;",
          "897:   if (yych == 'd') goto yy76;",
          "898:   goto yy40;",
          "903:   if (yych == 'S') goto yy96;",
          "904:   if (yych != 's') goto yy40;",
          "909:   if (yych == 'A') goto yy97;",
          "910:   if (yych != 'a') goto yy40;",
          "915:   if (yych == 'B') goto yy98;",
          "916:   if (yych != 'b') goto yy40;",
          "921:   if (yych == 'L') goto yy99;",
          "922:   if (yych != 'l') goto yy40;",
          "927:   if (yych == 'E') goto yy100;",
          "928:   if (yych != 'e') goto yy40;",
          "933:   if (yych == 'D') goto yy83;",
          "934:   if (yych == 'd') goto yy83;",
          "935:   goto yy40;",
          "940:   if (yybm[0+yych] & 128) {",
          "941:    goto yy102;",
          "942:   }",
          "950:   YYDEBUG(103, *YYCURSOR);",
          "952:    goto yy102;",
          "956:     if (yych <= 0x00) goto yy104;",
          "963:     if (yych <= ' ') goto yy104;",
          "966:     if (yych == ':') goto yy61;",
          "970: yy104:",
          "971:   YYDEBUG(104, *YYCURSOR);",
          "",
          "[Added Lines]",
          "857: #line 858 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "862:   if (yych == 'L') goto yy89;",
          "863:   if (yych != 'l') goto yy40;",
          "868:   if (yych == 'S') goto yy90;",
          "869:   if (yych != 's') goto yy40;",
          "874:   if (yych == 'E') goto yy84;",
          "875:   if (yych == 'e') goto yy84;",
          "876:   goto yy40;",
          "881:   if (yych == 'A') goto yy92;",
          "882:   if (yych != 'a') goto yy40;",
          "887:   if (yych == 'B') goto yy93;",
          "888:   if (yych != 'b') goto yy40;",
          "893:   if (yych == 'L') goto yy94;",
          "894:   if (yych != 'l') goto yy40;",
          "899:   if (yych == 'E') goto yy95;",
          "900:   if (yych != 'e') goto yy40;",
          "905:   if (yych == 'D') goto yy77;",
          "906:   if (yych == 'd') goto yy77;",
          "907:   goto yy40;",
          "912:   if (yych == 'S') goto yy97;",
          "913:   if (yych != 's') goto yy40;",
          "918:   if (yych == 'A') goto yy98;",
          "919:   if (yych != 'a') goto yy40;",
          "924:   if (yych == 'B') goto yy99;",
          "925:   if (yych != 'b') goto yy40;",
          "930:   if (yych == 'L') goto yy100;",
          "931:   if (yych != 'l') goto yy40;",
          "936:   if (yych == 'E') goto yy101;",
          "937:   if (yych != 'e') goto yy40;",
          "942:   if (yych == 'D') goto yy84;",
          "943:   if (yych == 'd') goto yy84;",
          "947:   yyaccept = 0;",
          "948:   yych = *(YYMARKER = ++YYCURSOR);",
          "949:   if (yybm[0+yych] & 128) {",
          "950:    goto yy103;",
          "951:   }",
          "952:   goto yy40;",
          "953: yy103:",
          "954:   YYDEBUG(103, *YYCURSOR);",
          "959:   YYDEBUG(104, *YYCURSOR);",
          "961:    goto yy103;",
          "965:     if (yych <= 0x00) goto yy105;",
          "972:     if (yych <= ' ') goto yy105;",
          "975:     if (yych == ':') goto yy62;",
          "979: yy105:",
          "980:   YYDEBUG(105, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "976:  yylval->addr = strtoul(yytext, 0, 16);",
          "977:  return T_ADDR;",
          "978: }",
          "982:   yyaccept = 0;",
          "983:   yych = *(YYMARKER = ++YYCURSOR);",
          "984:   if (yych <= '\\f') {",
          "985:    if (yych <= 0x08) goto yy40;",
          "986:    if (yych >= '\\v') goto yy40;",
          "987:   } else {",
          "989:    if (yych != ' ') goto yy40;",
          "990:   }",
          "993:   ++YYCURSOR;",
          "994:   YYFILL(1);",
          "995:   yych = *YYCURSOR;",
          "997:   if (yych <= '\\f') {",
          "1000:   } else {",
          "1003:   }",
          "1006:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "1007: #line 72 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "1008:   {",
          "",
          "[Removed Lines]",
          "979: #line 980 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "980: yy105:",
          "981:   YYDEBUG(105, *YYCURSOR);",
          "988:    if (yych <= '\\r') goto yy106;",
          "991: yy106:",
          "992:   YYDEBUG(106, *YYCURSOR);",
          "996:   YYDEBUG(107, *YYCURSOR);",
          "998:    if (yych <= 0x08) goto yy108;",
          "999:    if (yych <= '\\n') goto yy106;",
          "1001:    if (yych <= '\\r') goto yy106;",
          "1002:    if (yych == ' ') goto yy106;",
          "1004: yy108:",
          "1005:   YYDEBUG(108, *YYCURSOR);",
          "",
          "[Added Lines]",
          "988: #line 989 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "989: yy106:",
          "990:   YYDEBUG(106, *YYCURSOR);",
          "997:    if (yych <= '\\r') goto yy107;",
          "1000: yy107:",
          "1001:   YYDEBUG(107, *YYCURSOR);",
          "1005:   YYDEBUG(108, *YYCURSOR);",
          "1007:    if (yych <= 0x08) goto yy109;",
          "1008:    if (yych <= '\\n') goto yy107;",
          "1010:    if (yych <= '\\r') goto yy107;",
          "1011:    if (yych == ' ') goto yy107;",
          "1013: yy109:",
          "1014:   YYDEBUG(109, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1010:  phpdbg_init_param(yylval, EMPTY_PARAM);",
          "1011:  return T_IF;",
          "1012: }",
          "1014:  }",
          "1016: yyc_RAW:",
          "",
          "[Removed Lines]",
          "1013: #line 1014 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "1022: #line 1023 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1049:     64,  64,  64,  64,  64,  64,  64,  64,",
          "1050:     64,  64,  64,  64,  64,  64,  64,  64,",
          "1051:   };",
          "1053:   YYFILL(2);",
          "1054:   yych = *YYCURSOR;",
          "1055:   if (yybm[0+yych] & 32) {",
          "1057:   }",
          "1063:   ++YYCURSOR;",
          "1064:   YYFILL(1);",
          "1065:   yych = *YYCURSOR;",
          "1067:   if (yybm[0+yych] & 32) {",
          "1069:   }",
          "1075:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "1076: #line 132 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "1077:   {",
          "",
          "[Removed Lines]",
          "1052:   YYDEBUG(109, *YYCURSOR);",
          "1056:    goto yy111;",
          "1058:   if (yych <= 0x00) goto yy116;",
          "1059:   if (yych == '\\n') goto yy114;",
          "1060:   goto yy117;",
          "1061: yy111:",
          "1062:   YYDEBUG(111, *YYCURSOR);",
          "1066:   YYDEBUG(112, *YYCURSOR);",
          "1068:    goto yy111;",
          "1070:   if (yych <= 0x00) goto yy113;",
          "1071:   if (yych == '\\n') goto yy119;",
          "1072:   goto yy117;",
          "1073: yy113:",
          "1074:   YYDEBUG(113, *YYCURSOR);",
          "",
          "[Added Lines]",
          "1061:   YYDEBUG(110, *YYCURSOR);",
          "1065:    goto yy112;",
          "1067:   if (yych <= 0x00) goto yy117;",
          "1068:   if (yych == '\\n') goto yy115;",
          "1069:   goto yy118;",
          "1070: yy112:",
          "1071:   YYDEBUG(112, *YYCURSOR);",
          "1075:   YYDEBUG(113, *YYCURSOR);",
          "1077:    goto yy112;",
          "1079:   if (yych <= 0x00) goto yy114;",
          "1080:   if (yych == '\\n') goto yy120;",
          "1081:   goto yy118;",
          "1082: yy114:",
          "1083:   YYDEBUG(114, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1080:  yylval->len = yyleng;",
          "1081:  return T_INPUT;",
          "1082: }",
          "1086:   ++YYCURSOR;",
          "1087:   if (yybm[0+(yych = *YYCURSOR)] & 128) {",
          "1089:   }",
          "1092:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "1093: #line 68 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "1094:   {",
          "1095:  return 0;",
          "1096: }",
          "1102: yy117:",
          "1103:   YYDEBUG(117, *YYCURSOR);",
          "1104:   ++YYCURSOR;",
          "1105:   YYFILL(1);",
          "1106:   yych = *YYCURSOR;",
          "1108:   if (yybm[0+yych] & 64) {",
          "1110:   }",
          "1114:   ++YYCURSOR;",
          "1115:   YYFILL(1);",
          "1116:   yych = *YYCURSOR;",
          "1118:   if (yybm[0+yych] & 128) {",
          "1120:   }",
          "1122:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "1123: #line 139 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "1124:   {",
          "",
          "[Removed Lines]",
          "1083: #line 1084 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "1084: yy114:",
          "1085:   YYDEBUG(114, *YYCURSOR);",
          "1088:    goto yy119;",
          "1090: yy115:",
          "1091:   YYDEBUG(115, *YYCURSOR);",
          "1097: #line 1098 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "1098: yy116:",
          "1099:   YYDEBUG(116, *YYCURSOR);",
          "1100:   yych = *++YYCURSOR;",
          "1101:   goto yy115;",
          "1107:   YYDEBUG(118, *YYCURSOR);",
          "1109:    goto yy117;",
          "1111:   goto yy113;",
          "1112: yy119:",
          "1113:   YYDEBUG(119, *YYCURSOR);",
          "1117:   YYDEBUG(120, *YYCURSOR);",
          "1119:    goto yy119;",
          "1121:   YYDEBUG(121, *YYCURSOR);",
          "",
          "[Added Lines]",
          "1092: #line 1093 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "1093: yy115:",
          "1094:   YYDEBUG(115, *YYCURSOR);",
          "1097:    goto yy120;",
          "1099: yy116:",
          "1100:   YYDEBUG(116, *YYCURSOR);",
          "1106: #line 1107 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "1109:   yych = *++YYCURSOR;",
          "1110:   goto yy116;",
          "1111: yy118:",
          "1112:   YYDEBUG(118, *YYCURSOR);",
          "1116:   YYDEBUG(119, *YYCURSOR);",
          "1118:    goto yy118;",
          "1120:   goto yy114;",
          "1121: yy120:",
          "1122:   YYDEBUG(120, *YYCURSOR);",
          "1126:   YYDEBUG(121, *YYCURSOR);",
          "1128:    goto yy120;",
          "1130:   YYDEBUG(122, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1127:  goto restart;",
          "1128: }",
          "1130:  }",
          "1131: }",
          "1132: #line 168 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "",
          "[Removed Lines]",
          "1129: #line 1130 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "1138: #line 1139 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------"
        ],
        "phpdbg_lexer.l||phpdbg_lexer.l": [
          "File: phpdbg_lexer.l -> phpdbg_lexer.l",
          "--- Hunk 1 ---",
          "[Context before]",
          "57: T_RUN       'run'",
          "58: T_RUN_SHORT \"r\"",
          "59: WS          [ \\r\\n\\t]+",
          "61: ID          [^ \\r\\n\\t:#\\000]+",
          "62: ADDR        [0][x][a-fA-F0-9]+",
          "63: OPCODE      (ZEND_|zend_)([A-Za-z])+",
          "",
          "[Removed Lines]",
          "60: DIGITS      [0-9\\.]+",
          "",
          "[Added Lines]",
          "60: DIGITS      [-]?[0-9\\.]+",
          "",
          "---------------"
        ],
        "phpdbg_list.c||phpdbg_list.c": [
          "File: phpdbg_list.c -> phpdbg_list.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "145:   return;",
          "146:  }",
          "148:  while (php_stream_gets(stream, buffer, sizeof(buffer)) != NULL) {",
          "149:   long linelen = strlen(buffer);",
          "151:   ++line;",
          "155:    if (!highlight) {",
          "156:     phpdbg_write(\"%05ld: %s\", line, buffer);",
          "157:    } else {",
          "",
          "[Removed Lines]",
          "153:   if (!offset || offset <= line) {",
          "",
          "[Added Lines]",
          "148:  if (offset < 0) {",
          "149:   count += offset;",
          "150:   offset = 0;",
          "151:  }",
          "158:   if (offset <= line) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "167:    }",
          "168:   }",
          "171:    break;",
          "172:  }",
          "174:  php_stream_close(stream);",
          "",
          "[Removed Lines]",
          "170:   if ((count + (offset - 1)) == line)",
          "",
          "[Added Lines]",
          "174:   if (count > 0 && count + offset - 1 < line) {",
          "176:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "04908509573ef599b20fa815083cce093b675541",
      "candidate_info": {
        "commit_hash": "04908509573ef599b20fa815083cce093b675541",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/04908509573ef599b20fa815083cce093b675541",
        "files": [
          "travis/ci.sh"
        ],
        "message": "remove phpdbg directory from source tree on travis",
        "before_after_code_files": [
          "travis/ci.sh||travis/ci.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "travis/ci.sh||travis/ci.sh": [
          "File: travis/ci.sh -> travis/ci.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/usr/bin/env sh",
          "2: git clone https://github.com/php/php-src",
          "3: cd php-src/sapi",
          "4: git clone https://github.com/krakjoe/phpdbg.git",
          "5: cd ../",
          "6: ./buildconf --force",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: rm -rf phpdbg",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "336b5f59b6c4ff023f5e79a39eabd284ac7f1e66",
      "candidate_info": {
        "commit_hash": "336b5f59b6c4ff023f5e79a39eabd284ac7f1e66",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/336b5f59b6c4ff023f5e79a39eabd284ac7f1e66",
        "files": [
          "ext/standard/basic_functions.c",
          "ext/standard/tests/general_functions/putenv.phpt"
        ],
        "message": "Fixed bug #67399 (putenv with empty variable may lead to crash)",
        "before_after_code_files": [
          "ext/standard/basic_functions.c||ext/standard/basic_functions.c",
          "ext/standard/tests/general_functions/putenv.phpt||ext/standard/tests/general_functions/putenv.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ext/standard/basic_functions.c||ext/standard/basic_functions.c": [
          "File: ext/standard/basic_functions.c -> ext/standard/basic_functions.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4043: {",
          "4044:  char *setting;",
          "4045:  int setting_len;",
          "4047:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &setting, &setting_len) == FAILURE) {",
          "4048:   return;",
          "4049:  }",
          "4054: #ifdef PHP_WIN32",
          "4058: #endif",
          "4070: #ifdef PHP_WIN32",
          "4078:   }",
          "4079: #endif",
          "4087: #if defined(PHP_WIN32)",
          "4090: #else",
          "4092: #endif",
          "4095:   }",
          "4097: #if HAVE_UNSETENV",
          "4102: #else",
          "4103: # ifndef PHP_WIN32",
          "4105: # else",
          "4107: #  if _MSC_VER < 1500",
          "4111: #  else",
          "4113: #  endif",
          "4114: # endif",
          "4115: #endif",
          "4117: #ifdef HAVE_TZSET",
          "4127:   }",
          "4128:  }",
          "4132: }",
          "4134: #endif",
          "",
          "[Removed Lines]",
          "4051:  if (setting_len) {",
          "4052:   char *p, **env;",
          "4053:   putenv_entry pe;",
          "4055:   char *value = NULL;",
          "4056:   int equals = 0;",
          "4057:   int error_code;",
          "4060:   pe.putenv_string = estrndup(setting, setting_len);",
          "4061:   pe.key = estrndup(setting, setting_len);",
          "4064: #ifdef PHP_WIN32",
          "4065:    equals = 1;",
          "4066: #endif",
          "4067:   }",
          "4069:   pe.key_len = strlen(pe.key);",
          "4071:   if (equals) {",
          "4072:    if (pe.key_len < setting_len - 1) {",
          "4073:     value = p + 1;",
          "4074:    } else {",
          "4076:     value = p;",
          "4077:    }",
          "4081:   zend_hash_del(&BG(putenv_ht), pe.key, pe.key_len+1);",
          "4084:   pe.previous_value = NULL;",
          "4085:   for (env = environ; env != NULL && *env != NULL; env++) {",
          "4089:     pe.previous_value = estrdup(*env);",
          "4091:     pe.previous_value = *env;",
          "4093:     break;",
          "4094:    }",
          "4099:    unsetenv(pe.putenv_string);",
          "4100:   }",
          "4106:   error_code = SetEnvironmentVariable(pe.key, value);",
          "4109:   if (error_code != 0 ||",
          "4110:    (error_code == 0 && GetLastError() == ERROR_ENVVAR_NOT_FOUND)) {",
          "4116:    zend_hash_add(&BG(putenv_ht), pe.key, pe.key_len + 1, (void **) &pe, sizeof(putenv_entry), NULL);",
          "4118:    if (!strncmp(pe.key, \"TZ\", pe.key_len)) {",
          "4119:     tzset();",
          "4120:    }",
          "4121: #endif",
          "4122:    RETURN_TRUE;",
          "4123:   } else {",
          "4124:    efree(pe.putenv_string);",
          "4125:    efree(pe.key);",
          "4126:    RETURN_FALSE;",
          "4130:  php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid parameter syntax\");",
          "4131:  RETURN_FALSE;",
          "",
          "[Added Lines]",
          "4046:  char *p, **env;",
          "4047:  putenv_entry pe;",
          "4048: #ifdef PHP_WIN32",
          "4049:  char *value = NULL;",
          "4050:  int equals = 0;",
          "4051:  int error_code;",
          "4052: #endif",
          "4058:     if(setting_len == 0 || setting[0] == '=') {",
          "4059:      php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid parameter syntax\");",
          "4060:      RETURN_FALSE;",
          "4061:     }",
          "4063:  pe.putenv_string = estrndup(setting, setting_len);",
          "4064:  pe.key = estrndup(setting, setting_len);",
          "4068:   equals = 1;",
          "4070:  }",
          "4072:  pe.key_len = strlen(pe.key);",
          "4074:  if (equals) {",
          "4075:   if (pe.key_len < setting_len - 1) {",
          "4076:    value = p + 1;",
          "4077:   } else {",
          "4079:    value = p;",
          "4081:  }",
          "4084:  zend_hash_del(&BG(putenv_ht), pe.key, pe.key_len+1);",
          "4087:  pe.previous_value = NULL;",
          "4088:  for (env = environ; env != NULL && *env != NULL; env++) {",
          "4092:    pe.previous_value = estrdup(*env);",
          "4094:    pe.previous_value = *env;",
          "4096:    break;",
          "4098:  }",
          "4102:   unsetenv(pe.putenv_string);",
          "4103:  }",
          "4109:  error_code = SetEnvironmentVariable(pe.key, value);",
          "4112:  if (error_code != 0 ||",
          "4113:   (error_code == 0 && GetLastError() == ERROR_ENVVAR_NOT_FOUND)) {",
          "4119:   zend_hash_add(&BG(putenv_ht), pe.key, pe.key_len + 1, (void **) &pe, sizeof(putenv_entry), NULL);",
          "4121:   if (!strncmp(pe.key, \"TZ\", pe.key_len)) {",
          "4122:    tzset();",
          "4124: #endif",
          "4125:   RETURN_TRUE;",
          "4126:  } else {",
          "4127:   efree(pe.putenv_string);",
          "4128:   efree(pe.key);",
          "4129:   RETURN_FALSE;",
          "",
          "---------------"
        ],
        "ext/standard/tests/general_functions/putenv.phpt||ext/standard/tests/general_functions/putenv.phpt": [
          "File: ext/standard/tests/general_functions/putenv.phpt -> ext/standard/tests/general_functions/putenv.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: var_dump(putenv($var_name));",
          "16: var_dump(getenv($var_name));",
          "18: echo \"Done\\n\";",
          "19: ?>",
          "20: --EXPECTF--",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: var_dump(putenv(\"=123\"));",
          "19: var_dump(putenv(\"\"));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25: string(0) \"\"",
          "26: bool(true)",
          "27: bool(false)",
          "28: Done",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: Warning: putenv(): Invalid parameter syntax in %s on line %d",
          "33: bool(false)",
          "35: Warning: putenv(): Invalid parameter syntax in %s on line %d",
          "36: bool(false)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a8076b9312e3acb74e214e914273fcf040eebe7a",
      "candidate_info": {
        "commit_hash": "a8076b9312e3acb74e214e914273fcf040eebe7a",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/a8076b9312e3acb74e214e914273fcf040eebe7a",
        "files": [
          "win32/build/config.w32"
        ],
        "message": "explicitly PHP_ANALYZER=no when no known keyword was passed",
        "before_after_code_files": [
          "win32/build/config.w32||win32/build/config.w32"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "win32/build/config.w32||win32/build/config.w32": [
          "File: win32/build/config.w32 -> win32/build/config.w32",
          "--- Hunk 1 ---",
          "[Context before]",
          "474:   pvscfg.WriteLine(\"preprocessor = visualcpp\");",
          "475:   pvscfg.WriteLine(\"language = C\");",
          "476:  }",
          "477: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "477: } else {",
          "478:  PHP_ANALYZER = \"no\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e9668d4ce8512838d92b05aa47da02c85a37c486",
      "candidate_info": {
        "commit_hash": "e9668d4ce8512838d92b05aa47da02c85a37c486",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/e9668d4ce8512838d92b05aa47da02c85a37c486",
        "files": [
          "phpdbg.c",
          "phpdbg.h",
          "phpdbg_cmd.c",
          "phpdbg_prompt.c"
        ],
        "message": "buffer input to repeat commands",
        "before_after_code_files": [
          "phpdbg.c||phpdbg.c",
          "phpdbg.h||phpdbg.h",
          "phpdbg_cmd.c||phpdbg_cmd.c",
          "phpdbg_prompt.c||phpdbg_prompt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "phpdbg.c||phpdbg.c": [
          "File: phpdbg.c -> phpdbg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:  pg->exec = NULL;",
          "63:  pg->exec_len = 0;",
          "64:  pg->ops = NULL;",
          "65:  pg->vmret = 0;",
          "66:  pg->bp_count = 0;",
          "68:  pg->flags = PHPDBG_DEFAULT_FLAGS;",
          "69:  pg->oplog = NULL;",
          "70:  pg->io[PHPDBG_STDIN] = NULL;",
          "71:  pg->io[PHPDBG_STDOUT] = NULL;",
          "72:  pg->io[PHPDBG_STDERR] = NULL;",
          "74:  pg->frame.num = 0;",
          "",
          "[Removed Lines]",
          "67:  pg->lcmd = NULL;",
          "73:  memset(&pg->lparam, 0, sizeof(phpdbg_param_t));",
          "",
          "[Added Lines]",
          "64:  pg->buffer = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "184:  zend_hash_destroy(&PHPDBG_G(watchpoints));",
          "185:  zend_llist_destroy(&PHPDBG_G(watchlist_mem));",
          "187:  if (PHPDBG_G(exec)) {",
          "188:   efree(PHPDBG_G(exec));",
          "189:   PHPDBG_G(exec) = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "186:  if (PHPDBG_G(buffer)) {",
          "187:   efree(PHPDBG_G(buffer));",
          "188:   PHPDBG_G(buffer) = NULL;",
          "189:  }",
          "",
          "---------------"
        ],
        "phpdbg.h||phpdbg.h": [
          "File: phpdbg.h -> phpdbg.h"
        ],
        "phpdbg_cmd.c||phpdbg_cmd.c": [
          "File: phpdbg_cmd.c -> phpdbg_cmd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "858: #endif",
          "859:  }",
          "861:  return buffer;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "861:  if (buffer && isspace(*buffer)) {",
          "862:   char *trimmed = buffer;",
          "863:   while (isspace(*trimmed))",
          "864:    trimmed++;",
          "866:   trimmed = estrdup(trimmed);",
          "867:   efree(buffer);",
          "868:   buffer = trimmed;",
          "869:  }",
          "871:  if (buffer && strlen(buffer)) {",
          "872:   if (PHPDBG_G(buffer)) {",
          "873:    efree(PHPDBG_G(buffer));",
          "874:   }",
          "875:   PHPDBG_G(buffer) = estrdup(buffer);",
          "876:  } else {",
          "877:   if (PHPDBG_G(buffer)) {",
          "878:    buffer = estrdup(PHPDBG_G(buffer));",
          "879:   }",
          "880:  }",
          "",
          "---------------"
        ],
        "phpdbg_prompt.c||phpdbg_prompt.c": [
          "File: phpdbg_prompt.c -> phpdbg_prompt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1028:    if (yyparse(&stack, scanner) <= 0) {",
          "1029:     switch (ret = phpdbg_stack_execute(&stack, &why TSRMLS_CC)) {",
          "1030:      case FAILURE:",
          "1032:        if (phpdbg_call_register(&stack TSRMLS_CC) == FAILURE) {",
          "1033:         if (why) {",
          "1034:          phpdbg_error(\"%s\", why);",
          "1035:         }",
          "1036:        }",
          "1039:       if (why) {",
          "1040:        free(why);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1031:       if (!(PHPDBG_G(flags) & PHPDBG_IS_QUITTING)) {",
          "1037:       }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1066:    phpdbg_destroy_input(&input TSRMLS_CC);",
          "1068:   } while ((input = phpdbg_read_input(NULL TSRMLS_CC)));",
          "1080:  }",
          "1082: out:",
          "",
          "[Removed Lines]",
          "1070:   if (!input)",
          "1071:    goto last;",
          "1073:  } else {",
          "1074: last:",
          "1075:   if (PHPDBG_G(lcmd)) {",
          "1076:    ret = PHPDBG_G(lcmd)->handler(",
          "1077:      &PHPDBG_G(lparam) TSRMLS_CC);",
          "1078:    goto out;",
          "1079:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}