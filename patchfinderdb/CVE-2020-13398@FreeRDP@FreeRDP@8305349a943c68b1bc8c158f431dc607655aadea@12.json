{
  "cve_id": "CVE-2020-13398",
  "cve_desc": "An issue was discovered in FreeRDP before 2.1.1. An out-of-bounds (OOB) write vulnerability has been detected in crypto_rsa_common in libfreerdp/crypto/crypto.c.",
  "repo": "FreeRDP/FreeRDP",
  "patch_hash": "8305349a943c68b1bc8c158f431dc607655aadea",
  "patch_info": {
    "commit_hash": "8305349a943c68b1bc8c158f431dc607655aadea",
    "repo": "FreeRDP/FreeRDP",
    "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/8305349a943c68b1bc8c158f431dc607655aadea",
    "files": [
      "libfreerdp/crypto/crypto.c"
    ],
    "message": "Fixed  GHSL-2020-102 heap overflow\n\n(cherry picked from commit 197b16cc15a12813c2e4fa2d6ae9cd9c4a57e581)",
    "before_after_code_files": [
      "libfreerdp/crypto/crypto.c||libfreerdp/crypto/crypto.c"
    ]
  },
  "patch_diff": {
    "libfreerdp/crypto/crypto.c||libfreerdp/crypto/crypto.c": [
      "File: libfreerdp/crypto/crypto.c -> libfreerdp/crypto/crypto.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "96: static int crypto_rsa_common(const BYTE* input, int length, UINT32 key_length, const BYTE* modulus,",
      "97:                              const BYTE* exponent, int exponent_size, BYTE* output)",
      "98: {",
      "100:  int output_length = -1;",
      "107:  if (!input_reverse)",
      "108:   return -1;",
      "",
      "[Removed Lines]",
      "99:  BN_CTX* ctx;",
      "101:  BYTE* input_reverse;",
      "102:  BYTE* modulus_reverse;",
      "103:  BYTE* exponent_reverse;",
      "104:  BIGNUM *mod, *exp, *x, *y;",
      "105:  input_reverse = (BYTE*)malloc(2 * key_length + exponent_size);",
      "",
      "[Added Lines]",
      "99:  BN_CTX* ctx = NULL;",
      "101:  BYTE* input_reverse = NULL;",
      "102:  BYTE* modulus_reverse = NULL;",
      "103:  BYTE* exponent_reverse = NULL;",
      "104:  BIGNUM* mod = NULL;",
      "105:  BIGNUM* exp = NULL;",
      "106:  BIGNUM* x = NULL;",
      "107:  BIGNUM* y = NULL;",
      "108:  size_t bufferSize = 2 * key_length + exponent_size;",
      "110:  if (!input || (length < 0) || (exponent_size < 0) || !modulus || !exponent || !output)",
      "111:   return -1;",
      "113:  if (length > bufferSize)",
      "114:   bufferSize = length;",
      "116:  input_reverse = (BYTE*)calloc(bufferSize, 1);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "131:  if (!(y = BN_new()))",
      "132:   goto fail_bn_y;",
      "138:  output_length = BN_bn2bin(y, output);",
      "139:  crypto_reverse(output, output_length);",
      "142:   memset(output + output_length, 0, key_length - output_length);",
      "144:  BN_free(y);",
      "145: fail_bn_y:",
      "146:  BN_clear_free(x);",
      "",
      "[Removed Lines]",
      "134:  BN_bin2bn(modulus_reverse, key_length, mod);",
      "135:  BN_bin2bn(exponent_reverse, exponent_size, exp);",
      "136:  BN_bin2bn(input_reverse, length, x);",
      "137:  BN_mod_exp(y, x, exp, mod, ctx);",
      "141:  if (output_length < (int)key_length)",
      "",
      "[Added Lines]",
      "145:  if (!BN_bin2bn(modulus_reverse, key_length, mod))",
      "146:   goto fail;",
      "148:  if (!BN_bin2bn(exponent_reverse, exponent_size, exp))",
      "149:   goto fail;",
      "150:  if (!BN_bin2bn(input_reverse, length, x))",
      "151:   goto fail;",
      "152:  if (BN_mod_exp(y, x, exp, mod, ctx) != 1)",
      "153:   goto fail;",
      "155:  if (output_length < 0)",
      "156:   goto fail;",
      "159:  if (output_length < key_length)",
      "162: fail:",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "96621d4f459dd2b3f8b5dbe812c7aa2f1a5859f3",
      "candidate_info": {
        "commit_hash": "96621d4f459dd2b3f8b5dbe812c7aa2f1a5859f3",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/96621d4f459dd2b3f8b5dbe812c7aa2f1a5859f3",
        "files": [
          "CMakeLists.txt",
          "config.h.in",
          "libfreerdp/codec/interleaved.c"
        ],
        "message": "Always require aligned memory for interleaved codec.\n\n(cherry picked from commit 20c11fb7178462a8ba36b4fdbfb3e2a03197356f)",
        "before_after_code_files": [
          "config.h.in||config.h.in",
          "libfreerdp/codec/interleaved.c||libfreerdp/codec/interleaved.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "config.h.in||config.h.in": [
          "File: config.h.in -> config.h.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #cmakedefine HAVE_EXECINFO_H",
          "30: #cmakedefine SWRESAMPLE_FOUND",
          "31: #cmakedefine AVRESAMPLE_FOUND",
          "",
          "[Removed Lines]",
          "29: #cmakedefine HAVE_ALIGNED_REQUIRED",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "libfreerdp/codec/interleaved.c||libfreerdp/codec/interleaved.c": [
          "File: libfreerdp/codec/interleaved.c -> libfreerdp/codec/interleaved.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "272: #define WHITE_PIXEL 0xFFFF",
          "273: #define DESTWRITEPIXEL(_buf, _pix) write_pixel_16(_buf, _pix)",
          "274: #define DESTREADPIXEL(_pix, _buf) _pix = ((UINT16*)(_buf))[0]",
          "276: #define SRCREADPIXEL(_pix, _buf) _pix = (_buf)[0] | ((_buf)[1] << 8)",
          "280: #define DESTNEXTPIXEL(_buf) _buf += 2",
          "281: #define SRCNEXTPIXEL(_buf) _buf += 2",
          "282: #define WRITEFGBGIMAGE WriteFgBgImage16to16",
          "",
          "[Removed Lines]",
          "275: #ifdef HAVE_ALIGNED_REQUIRED",
          "277: #else",
          "278: #define SRCREADPIXEL(_pix, _buf) _pix = ((UINT16*)(_buf))[0]",
          "279: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9b473e03d0d2e9fb88e6e021862f40648224be96",
      "candidate_info": {
        "commit_hash": "9b473e03d0d2e9fb88e6e021862f40648224be96",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/9b473e03d0d2e9fb88e6e021862f40648224be96",
        "files": [
          "channels/rdpgfx/client/rdpgfx_main.c"
        ],
        "message": "fix typo in GFX logs\n\n(cherry picked from commit a79635fd1c9e12c4ea543f461f03c0dd83d5e063)",
        "before_after_code_files": [
          "channels/rdpgfx/client/rdpgfx_main.c||channels/rdpgfx/client/rdpgfx_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "channels/rdpgfx/client/rdpgfx_main.c||channels/rdpgfx/client/rdpgfx_main.c": [
          "File: channels/rdpgfx/client/rdpgfx_main.c -> channels/rdpgfx/client/rdpgfx_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "605:   monitor = &(pdu.monitorDefArray[index]);",
          "606:   DEBUG_RDPGFX(gfx->log,",
          "607:                \"RecvResetGraphicsPdu: monitor left:%\" PRIi32 \" top:%\" PRIi32 \" right:%\" PRIi32",
          "609:                monitor->left, monitor->top, monitor->right, monitor->bottom, monitor->flags);",
          "610:  }",
          "",
          "[Removed Lines]",
          "608:                \" left:%\" PRIi32 \" flags:0x%\" PRIx32 \"\",",
          "",
          "[Added Lines]",
          "608:                \" bottom:%\" PRIi32 \" flags:0x%\" PRIx32 \"\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "70903cc04eb65c5b8a3a443377d952346bd3d8e5",
      "candidate_info": {
        "commit_hash": "70903cc04eb65c5b8a3a443377d952346bd3d8e5",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/70903cc04eb65c5b8a3a443377d952346bd3d8e5",
        "files": [
          "server/proxy/freerdp_proxy.c"
        ],
        "message": "server: proxy: print version and buildconfig on startup\n\n(cherry picked from commit f0fe17d94364087136354284543573bf54da162f)",
        "before_after_code_files": [
          "server/proxy/freerdp_proxy.c||server/proxy/freerdp_proxy.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "server/proxy/freerdp_proxy.c||server/proxy/freerdp_proxy.c": [
          "File: server/proxy/freerdp_proxy.c -> server/proxy/freerdp_proxy.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: #include \"pf_log.h\"",
          "25: #include \"pf_modules.h\"",
          "27: #include <freerdp/build-config.h>",
          "28: #include <winpr/collections.h>",
          "29: #include <stdlib.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: #include <freerdp/version.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "85:  char* config_path = \"config.ini\";",
          "86:  int status = -1;",
          "88:  if (argc >= 2)",
          "89:   config_path = argv[1];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89:  WLog_INFO(TAG, \"freerdp-proxy version info:\");",
          "90:  WLog_INFO(TAG, \"\\tFreeRDP version: %s\", FREERDP_VERSION_FULL);",
          "91:  WLog_INFO(TAG, \"\\tGit commit: %s\", GIT_REVISION);",
          "92:  WLog_DBG(TAG, \"\\tBuild config: %s\", freerdp_get_build_config());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f25c2f265ee5dbd107a45ada7aaa49a12c643203",
      "candidate_info": {
        "commit_hash": "f25c2f265ee5dbd107a45ada7aaa49a12c643203",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/f25c2f265ee5dbd107a45ada7aaa49a12c643203",
        "files": [
          "libfreerdp/codec/rfx_rlgr.c"
        ],
        "message": "Fixed undefined behaviour in rfx decoder\n\n(cherry picked from commit ef611d34d61c6590429c17db5c97f0a9a33147e8)",
        "before_after_code_files": [
          "libfreerdp/codec/rfx_rlgr.c||libfreerdp/codec/rfx_rlgr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libfreerdp/codec/rfx_rlgr.c||libfreerdp/codec/rfx_rlgr.c": [
          "File: libfreerdp/codec/rfx_rlgr.c -> libfreerdp/codec/rfx_rlgr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "282:     break;",
          "284:    bs->mask = ((1 << kr) - 1);",
          "286:    BitStream_Shift(bs, kr);",
          "",
          "[Removed Lines]",
          "285:    code = (UINT16)((bs->accumulator >> (32 - kr)) & bs->mask);",
          "",
          "[Added Lines]",
          "285:    if (kr > 0)",
          "286:     code = (UINT16)((bs->accumulator >> (32 - kr)) & bs->mask);",
          "287:    else",
          "288:     code = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "390:     break;",
          "392:    bs->mask = ((1 << kr) - 1);",
          "394:    BitStream_Shift(bs, kr);",
          "",
          "[Removed Lines]",
          "393:    code = (UINT16)((bs->accumulator >> (32 - kr)) & bs->mask);",
          "",
          "[Added Lines]",
          "396:    if (kr > 0)",
          "397:     code = (UINT16)((bs->accumulator >> (32 - kr)) & bs->mask);",
          "398:    else",
          "399:     code = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "477:      break;",
          "479:     bs->mask = ((1 << nIdx) - 1);",
          "481:     BitStream_Shift(bs, nIdx);",
          "483:     val2 = code - val1;",
          "",
          "[Removed Lines]",
          "480:     val1 = ((bs->accumulator >> (32 - nIdx)) & bs->mask);",
          "",
          "[Added Lines]",
          "486:     if (nIdx > 0)",
          "487:      val1 = ((bs->accumulator >> (32 - nIdx)) & bs->mask);",
          "488:     else",
          "489:      val1 = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "47c456c39f2ce53c85c938089fa52da4a7aa0913",
      "candidate_info": {
        "commit_hash": "47c456c39f2ce53c85c938089fa52da4a7aa0913",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/47c456c39f2ce53c85c938089fa52da4a7aa0913",
        "files": [
          "libfreerdp/core/info.c"
        ],
        "message": "Rewritten rdp_recv_logon_info_v2 to remove unaligned access\n\n(cherry picked from commit 66d182a84bed7bf19b6a99d71a4e4c7c6856f583)",
        "before_after_code_files": [
          "libfreerdp/core/info.c||libfreerdp/core/info.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libfreerdp/core/info.c||libfreerdp/core/info.c": [
          "File: libfreerdp/core/info.c -> libfreerdp/core/info.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1115:  UINT32 Size;",
          "1116:  UINT32 cbDomain;",
          "1117:  UINT32 cbUserName;",
          "1123:  WINPR_UNUSED(rdp);",
          "1124:  ZeroMemory(info, sizeof(*info));",
          "",
          "[Removed Lines]",
          "1118:  union {",
          "1119:   BYTE* bp;",
          "1120:   WCHAR* wp;",
          "1121:  } ptrconv;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1142:  if (cbDomain)",
          "1143:  {",
          "1144:   if ((cbDomain % 2) || (cbDomain > 52))",
          "1145:   {",
          "1146:    WLog_ERR(TAG, \"protocol error: invalid cbDomain value: %\" PRIu32 \"\", cbDomain);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1140:   WCHAR domain[26] = { 0 };",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1153:    goto fail;",
          "1154:   }",
          "1159:   {",
          "1160:    WLog_ERR(TAG, \"protocol error: Domain field must be null terminated\");",
          "1161:    goto fail;",
          "1162:   }",
          "1165:   {",
          "1166:    WLog_ERR(TAG, \"failed to convert the Domain string\");",
          "1167:    goto fail;",
          "1168:   }",
          "1169:  }",
          "",
          "[Removed Lines]",
          "1156:   ptrconv.bp = Stream_Pointer(s);",
          "1158:   if (ptrconv.bp[cbDomain - 1] || ptrconv.bp[cbDomain - 2])",
          "1164:   if (ConvertFromUnicode(CP_UTF8, 0, ptrconv.wp, -1, &info->domain, 0, NULL, FALSE) < 1)",
          "",
          "[Added Lines]",
          "1153:   memcpy(domain, Stream_Pointer(s), cbDomain);",
          "1156:   if (domain[cbDomain / sizeof(WCHAR) - 1])",
          "1162:   if (ConvertFromUnicode(CP_UTF8, 0, domain, -1, &info->domain, 0, NULL, FALSE) < 1)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1179:  if (cbUserName)",
          "1180:  {",
          "1181:   if ((cbUserName % 2) || cbUserName < 2 || cbUserName > 512)",
          "1182:   {",
          "1183:    WLog_ERR(TAG, \"protocol error: invalid cbUserName value: %\" PRIu32 \"\", cbUserName);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1177:   WCHAR user[256] = { 0 };",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1190:    goto fail;",
          "1191:   }",
          "1196:   {",
          "1197:    WLog_ERR(TAG, \"protocol error: UserName field must be null terminated\");",
          "1198:    goto fail;",
          "1199:   }",
          "1202:   {",
          "1203:    WLog_ERR(TAG, \"failed to convert the Domain string\");",
          "1204:    goto fail;",
          "1205:   }",
          "1206:  }",
          "1209:  WLog_DBG(TAG, \"LogonInfoV2: SessionId: 0x%08\" PRIX32 \" UserName: [%s] Domain: [%s]\",",
          "1210:           info->sessionId, info->username, info->domain);",
          "1211:  return TRUE;",
          "",
          "[Removed Lines]",
          "1193:   ptrconv.bp = Stream_Pointer(s);",
          "1195:   if (ptrconv.wp[cbUserName / 2 - 1])",
          "1201:   if (ConvertFromUnicode(CP_UTF8, 0, ptrconv.wp, -1, &info->username, 0, NULL, FALSE) < 1)",
          "",
          "[Added Lines]",
          "1191:   memcpy(user, Stream_Pointer(s), cbUserName);",
          "1194:   if (user[cbUserName / sizeof(WCHAR) - 1])",
          "1200:   if (ConvertFromUnicode(CP_UTF8, 0, user, -1, &info->username, 0, NULL, FALSE) < 1)",
          "",
          "---------------"
        ]
      }
    }
  ]
}