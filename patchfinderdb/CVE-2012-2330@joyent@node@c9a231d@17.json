{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e221cd4a53160c87a1a021916c9a865d53783be2",
      "candidate_info": {
        "commit_hash": "e221cd4a53160c87a1a021916c9a865d53783be2",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e221cd4a53160c87a1a021916c9a865d53783be2",
        "files": [
          "deps/uv/include/uv-private/uv-unix.h",
          "deps/uv/include/uv-private/uv-win.h",
          "deps/uv/include/uv.h",
          "deps/uv/src/unix/error.c",
          "deps/uv/src/unix/linux.c",
          "deps/uv/src/unix/pipe.c",
          "deps/uv/src/unix/process.c",
          "deps/uv/src/unix/stream.c",
          "deps/uv/src/uv-common.c",
          "deps/uv/src/win/error.c",
          "deps/uv/src/win/fs.c",
          "deps/uv/src/win/process.c",
          "deps/uv/test/test-list.h",
          "deps/uv/test/test-spawn.c"
        ],
        "message": "uv: upgrade to aea5db5da1",
        "before_after_code_files": [
          "deps/uv/include/uv-private/uv-unix.h||deps/uv/include/uv-private/uv-unix.h",
          "deps/uv/include/uv-private/uv-win.h||deps/uv/include/uv-private/uv-win.h",
          "deps/uv/include/uv.h||deps/uv/include/uv.h",
          "deps/uv/src/unix/error.c||deps/uv/src/unix/error.c",
          "deps/uv/src/unix/linux.c||deps/uv/src/unix/linux.c",
          "deps/uv/src/unix/pipe.c||deps/uv/src/unix/pipe.c",
          "deps/uv/src/unix/process.c||deps/uv/src/unix/process.c",
          "deps/uv/src/unix/stream.c||deps/uv/src/unix/stream.c",
          "deps/uv/src/uv-common.c||deps/uv/src/uv-common.c",
          "deps/uv/src/win/error.c||deps/uv/src/win/error.c",
          "deps/uv/src/win/fs.c||deps/uv/src/win/fs.c",
          "deps/uv/src/win/process.c||deps/uv/src/win/process.c",
          "deps/uv/test/test-list.h||deps/uv/test/test-list.h",
          "deps/uv/test/test-spawn.c||deps/uv/test/test-spawn.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/include/uv-private/uv-unix.h||deps/uv/include/uv-private/uv-unix.h": [
          "File: deps/uv/include/uv-private/uv-unix.h -> deps/uv/include/uv-private/uv-unix.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #include <netinet/tcp.h>",
          "34: #include <arpa/inet.h>",
          "35: #include <netdb.h>",
          "36: #include <termios.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: #include <pwd.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44: typedef int uv_file;",
          "47: typedef void* uv_lib_t;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48: typedef gid_t uv_gid_t;",
          "49: typedef uid_t uv_uid_t;",
          "",
          "---------------"
        ],
        "deps/uv/include/uv-private/uv-win.h||deps/uv/include/uv-private/uv-win.h": [
          "File: deps/uv/include/uv-private/uv-win.h -> deps/uv/include/uv-private/uv-win.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "138: typedef int uv_file;",
          "141: typedef HMODULE uv_lib_t;",
          "142: #define UV_DYNAMIC FAR WINAPI",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "141: typedef unsigned char uv_uid_t;",
          "142: typedef unsigned char uv_gid_t;",
          "",
          "---------------"
        ],
        "deps/uv/include/uv.h||deps/uv/include/uv.h": [
          "File: deps/uv/include/uv.h -> deps/uv/include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1058: UV_EXTERN int uv_spawn(uv_loop_t*, uv_process_t*,",
          "1059:     uv_process_options_t options);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1063: enum uv_process_flags {",
          "1064:   UV_PROCESS_SETUID = (1 << 0),",
          "1065:   UV_PROCESS_SETGID = (1 << 1),",
          "1066:   UV_PROCESS_WINDOWS_VERBATIM_ARGUMENTS = (1 << 2)",
          "1067: };",
          "1070: typedef struct uv_process_options2_s {",
          "1073:   char** args;",
          "1074:   char** env;",
          "1075:   char* cwd;",
          "1076:   unsigned int flags;",
          "1077:   uv_pipe_t* stdin_stream;",
          "1078:   uv_pipe_t* stdout_stream;",
          "1079:   uv_pipe_t* stderr_stream;",
          "1080:   uv_uid_t uid;",
          "1081:   uv_gid_t gid;",
          "1082: } uv_process_options2_t;",
          "1085: UV_EXTERN int uv_spawn2(uv_loop_t*, uv_process_t*,",
          "1086:     uv_process_options2_t options);",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/error.c||deps/uv/src/unix/error.c": [
          "File: deps/uv/src/unix/error.c -> deps/uv/src/unix/error.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:     case EBADF: return UV_EBADF;",
          "69:     case EPIPE: return UV_EPIPE;",
          "70:     case EAGAIN: return UV_EAGAIN;",
          "71:     case ECONNRESET: return UV_ECONNRESET;",
          "72:     case EFAULT: return UV_EFAULT;",
          "73:     case EMFILE: return UV_EMFILE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71: #if EWOULDBLOCK != EAGAIN",
          "72:     case EWOULDBLOCK: return UV_EAGAIN;",
          "73: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "91:     case EBUSY: return UV_EBUSY;",
          "92:     case ENOTEMPTY: return UV_ENOTEMPTY;",
          "93:     case ENOSPC: return UV_ENOSPC;",
          "94:     default: return UV_UNKNOWN;",
          "95:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:     case ENOMEM: return UV_ENOMEM;",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/linux.c||deps/uv/src/unix/linux.c": [
          "File: deps/uv/src/unix/linux.c -> deps/uv/src/unix/linux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "271:          | IN_MODIFY",
          "272:          | IN_DELETE",
          "273:          | IN_DELETE_SELF",
          "274:          | IN_MOVED_FROM",
          "275:          | IN_MOVED_TO;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "274:          | IN_MOVE_SELF",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/pipe.c||deps/uv/src/unix/pipe.c": [
          "File: deps/uv/src/unix/pipe.c -> deps/uv/src/unix/pipe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "255:   sockfd = uv__accept(pipe->fd, (struct sockaddr *)&saddr, sizeof saddr);",
          "256:   if (sockfd == -1) {",
          "260:       uv__set_sys_error(pipe->loop, errno);",
          "261:     }",
          "262:   } else {",
          "263:     pipe->accepted_fd = sockfd;",
          "264:     pipe->connection_cb((uv_stream_t*)pipe, 0);",
          "265:     if (pipe->accepted_fd == sockfd) {",
          "267:       ev_io_stop(pipe->loop->ev, &pipe->read_watcher);",
          "268:     }",
          "269:   }",
          "",
          "[Removed Lines]",
          "257:     if (errno == EAGAIN || errno == EWOULDBLOCK) {",
          "258:       assert(0 && \"EAGAIN on uv__accept(pipefd)\");",
          "259:     } else {",
          "",
          "[Added Lines]",
          "257:     if (errno != EAGAIN && errno != EWOULDBLOCK) {",
          "259:       pipe->connection_cb((uv_stream_t*)pipe, -1);",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/process.c||deps/uv/src/unix/process.c": [
          "File: deps/uv/src/unix/process.c -> deps/uv/src/unix/process.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "161: # define SPAWN_WAIT_EXEC 1",
          "162: #endif",
          "",
          "[Removed Lines]",
          "164: int uv_spawn(uv_loop_t* loop, uv_process_t* process,",
          "165:     uv_process_options_t options) {",
          "",
          "[Added Lines]",
          "164: int uv_spawn2(uv_loop_t* loop, uv_process_t* process,",
          "165:     uv_process_options2_t options) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "179:   pid_t pid;",
          "180:   int flags;",
          "182:   uv__handle_init(loop, (uv_handle_t*)process, UV_PROCESS);",
          "183:   loop->counters.process_init++;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "182:   assert(options.file != NULL);",
          "183:   assert(!(options.flags & ~(UV_PROCESS_WINDOWS_VERBATIM_ARGUMENTS |",
          "184:                              UV_PROCESS_SETGID |",
          "185:                              UV_PROCESS_SETUID)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "268:       _exit(127);",
          "269:     }",
          "271:     environ = options.env;",
          "273:     execvp(options.file, options.args);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "277:     if ((options.flags & UV_PROCESS_SETGID) && setgid(options.gid)) {",
          "278:       perror(\"setgid()\");",
          "279:       _exit(127);",
          "280:     }",
          "282:     if ((options.flags & UV_PROCESS_SETUID) && setuid(options.uid)) {",
          "283:       perror(\"setuid()\");",
          "284:       _exit(127);",
          "285:     }",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/stream.c||deps/uv/src/unix/stream.c": [
          "File: deps/uv/src/unix/stream.c -> deps/uv/src/unix/stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "176:     fd = uv__accept(stream->fd, (struct sockaddr*)&addr, sizeof addr);",
          "178:     if (fd < 0) {",
          "181:         return;",
          "182:       } else if (errno == EMFILE) {",
          "",
          "[Removed Lines]",
          "179:       if (errno == EAGAIN) {",
          "",
          "[Added Lines]",
          "179:       if (errno == EAGAIN || errno == EWOULDBLOCK) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "416:   }",
          "418:   if (n < 0) {",
          "421:       req->error = errno;",
          "422:       stream->write_queue_size -= uv__write_req_size(req);",
          "",
          "[Removed Lines]",
          "419:     if (errno != EAGAIN) {",
          "",
          "[Added Lines]",
          "419:     if (errno != EAGAIN && errno != EWOULDBLOCK) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "563:     if (nread < 0) {",
          "567:         if (stream->flags & UV_READING) {",
          "568:           ev_io_start(ev, &stream->read_watcher);",
          "",
          "[Removed Lines]",
          "565:       if (errno == EAGAIN) {",
          "",
          "[Added Lines]",
          "565:       if (errno == EAGAIN || errno == EWOULDBLOCK) {",
          "",
          "---------------"
        ],
        "deps/uv/src/uv-common.c||deps/uv/src/uv-common.c": [
          "File: deps/uv/src/uv-common.c -> deps/uv/src/uv-common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "262:   return uv__tcp_connect6(req, handle, address, cb);",
          "263: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "268: int uv_spawn(uv_loop_t* loop, uv_process_t* process,",
          "269:     uv_process_options_t options) {",
          "270:   uv_process_options2_t options2;",
          "272:   options2.exit_cb = options.exit_cb;",
          "273:   options2.file = options.file;",
          "274:   options2.args = options.args;",
          "275:   options2.cwd = options.cwd;",
          "276:   options2.env = options.env;",
          "277:   options2.stdin_stream = options.stdin_stream;",
          "278:   options2.stdout_stream = options.stdout_stream;",
          "279:   options2.stderr_stream = options.stderr_stream;",
          "281:   options2.flags = 0;",
          "282:   if (options.windows_verbatim_arguments) {",
          "283:     options2.flags |= UV_PROCESS_WINDOWS_VERBATIM_ARGUMENTS;",
          "284:   }",
          "288:   return uv_spawn2(loop, process, options2);",
          "289: }",
          "",
          "---------------"
        ],
        "deps/uv/src/win/error.c||deps/uv/src/win/error.c": [
          "File: deps/uv/src/win/error.c -> deps/uv/src/win/error.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:   switch (sys_errno) {",
          "69:     case ERROR_SUCCESS:                     return UV_OK;",
          "70:     case ERROR_FILE_NOT_FOUND:              return UV_ENOENT;",
          "71:     case ERROR_PATH_NOT_FOUND:              return UV_ENOENT;",
          "72:     case ERROR_ACCESS_DENIED:               return UV_EPERM;",
          "73:     case ERROR_NOACCESS:                    return UV_EACCES;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:     case ERROR_INVALID_NAME:                return UV_ENOENT;",
          "72:     case ERROR_MOD_NOT_FOUND:               return UV_ENOENT;",
          "",
          "---------------"
        ],
        "deps/uv/src/win/fs.c||deps/uv/src/win/fs.c": [
          "File: deps/uv/src/win/fs.c -> deps/uv/src/win/fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "913:       fs__fsync(req, (uv_file)req->arg0);",
          "914:       break;",
          "915:     case UV_FS_FTRUNCATE:",
          "917:       break;",
          "918:     case UV_FS_SENDFILE:",
          "919:       fs__sendfile(req,",
          "",
          "[Removed Lines]",
          "916:       fs__ftruncate(req, (uv_file)req->arg0, (off_t)req->stat.st_atime);",
          "",
          "[Added Lines]",
          "916:       fs__ftruncate(req, (uv_file)req->arg0, req->stat.st_atime);",
          "",
          "---------------"
        ],
        "deps/uv/src/win/process.c||deps/uv/src/win/process.c": [
          "File: deps/uv/src/win/process.c -> deps/uv/src/win/process.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "860: }",
          "865:   int err = 0, keep_child_stdio_open = 0;",
          "866:   wchar_t* path = NULL;",
          "867:   int size;",
          "",
          "[Removed Lines]",
          "863: int uv_spawn(uv_loop_t* loop, uv_process_t* process,",
          "864:     uv_process_options_t options) {",
          "",
          "[Added Lines]",
          "863: int uv_spawn2(uv_loop_t* loop, uv_process_t* process,",
          "864:     uv_process_options2_t options) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "872:   STARTUPINFOW startup;",
          "873:   PROCESS_INFORMATION info;",
          "877:     return -1;",
          "878:   }",
          "880:   uv_process_init(loop, process);",
          "882:   process->exit_cb = options.exit_cb;",
          "883:   UTF8_TO_UTF16(options.file, application);",
          "884:   arguments = options.args ? make_program_args(options.args,",
          "886:   env = options.env ? make_program_env(options.env) : NULL;",
          "888:   if (options.cwd) {",
          "",
          "[Removed Lines]",
          "875:   if (!options.file) {",
          "876:     uv__set_artificial_error(loop, UV_EINVAL);",
          "885:       options.windows_verbatim_arguments) : NULL;",
          "",
          "[Added Lines]",
          "875:   if (options.flags & (UV_PROCESS_SETGID | UV_PROCESS_SETUID)) {",
          "876:     uv__set_sys_error(loop, UV_ENOTSUP);",
          "880:   assert(options.file != NULL);",
          "881:   assert(!(options.flags & ~(UV_PROCESS_WINDOWS_VERBATIM_ARGUMENTS |",
          "882:                              UV_PROCESS_SETGID |",
          "883:                              UV_PROCESS_SETUID)));",
          "890:       options.flags & UV_PROCESS_WINDOWS_VERBATIM_ARGUMENTS) : NULL;",
          "",
          "---------------"
        ],
        "deps/uv/test/test-list.h||deps/uv/test/test-list.h": [
          "File: deps/uv/test/test-list.h -> deps/uv/test/test-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "110: TEST_DECLARE   (spawn_stdin)",
          "111: TEST_DECLARE   (spawn_and_kill)",
          "112: TEST_DECLARE   (spawn_and_ping)",
          "113: TEST_DECLARE   (kill)",
          "114: TEST_DECLARE   (fs_file_noent)",
          "115: TEST_DECLARE   (fs_file_nametoolong)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "113: TEST_DECLARE   (spawn_setuid_fails)",
          "114: TEST_DECLARE   (spawn_setgid_fails)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133: TEST_DECLARE   (fs_event_no_callback_on_close)",
          "134: TEST_DECLARE   (fs_event_immediate_close)",
          "135: TEST_DECLARE   (fs_event_close_with_pending_event)",
          "137: TEST_DECLARE   (fs_readdir_empty_dir)",
          "138: TEST_DECLARE   (fs_readdir_file)",
          "139: TEST_DECLARE   (fs_open_dir)",
          "",
          "[Removed Lines]",
          "136: TEST_DECLARE   (fs_event_close_in_callback);",
          "",
          "[Added Lines]",
          "138: TEST_DECLARE   (fs_event_close_in_callback)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "147: TEST_DECLARE   (listen_with_simultaneous_accepts)",
          "148: TEST_DECLARE   (listen_no_simultaneous_accepts)",
          "149: TEST_DECLARE   (fs_stat_root)",
          "150: #endif",
          "151: HELPER_DECLARE (tcp4_echo_server)",
          "152: HELPER_DECLARE (tcp6_echo_server)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "152: #else",
          "153: TEST_DECLARE   (spawn_setuid_setgid)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "289:   TEST_ENTRY  (spawn_stdin)",
          "290:   TEST_ENTRY  (spawn_and_kill)",
          "291:   TEST_ENTRY  (spawn_and_ping)",
          "292:   TEST_ENTRY  (kill)",
          "293: #ifdef _WIN32",
          "294:   TEST_ENTRY  (spawn_detect_pipe_name_collisions_on_windows)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "296:   TEST_ENTRY  (spawn_setuid_fails)",
          "297:   TEST_ENTRY  (spawn_setgid_fails)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "297:   TEST_ENTRY  (listen_with_simultaneous_accepts)",
          "298:   TEST_ENTRY  (listen_no_simultaneous_accepts)",
          "299:   TEST_ENTRY  (fs_stat_root)",
          "300: #endif",
          "302:   TEST_ENTRY  (fs_file_noent)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "306: #else",
          "307:   TEST_ENTRY  (spawn_setuid_setgid)",
          "",
          "---------------"
        ],
        "deps/uv/test/test-spawn.c||deps/uv/test/test-spawn.c": [
          "File: deps/uv/test/test-spawn.c -> deps/uv/test/test-spawn.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: static uv_process_t process;",
          "31: static uv_timer_t timer;",
          "32: static uv_process_options_t options;",
          "33: static char exepath[1024];",
          "34: static size_t exepath_size = 1024;",
          "35: static char* args[3];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: static uv_process_options2_t options2;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55: }",
          "58: static void kill_cb(uv_process_t* process, int exit_status, int term_signal) {",
          "59:   uv_err_t err;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59: static void exit_cb_failure_expected(uv_process_t* process, int exit_status,",
          "60:     int term_signal) {",
          "61:   printf(\"exit_cb\\n\");",
          "62:   exit_cb_called++;",
          "63:   ASSERT(exit_status == 127);",
          "64:   ASSERT(term_signal == 0);",
          "65:   uv_close((uv_handle_t*)process, close_cb);",
          "66: }",
          "69: static void exit_cb_unexpected(uv_process_t* process, int exit_status,",
          "70:     int term_signal) {",
          "71:   ASSERT(0 && \"should not have been called\");",
          "72: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "116:   options.file = exepath;",
          "117:   options.args = args;",
          "118:   options.exit_cb = exit_cb;",
          "119: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "136:   options.windows_verbatim_arguments = 0;",
          "137: }",
          "140: static void init_process_options2(char* test, uv_exit_cb exit_cb) {",
          "142:   int r = uv_exepath(exepath, &exepath_size);",
          "143:   ASSERT(r == 0);",
          "144:   exepath[exepath_size] = '\\0';",
          "145:   args[0] = exepath;",
          "146:   args[1] = test;",
          "147:   args[2] = NULL;",
          "148:   options2.file = exepath;",
          "149:   options2.args = args;",
          "150:   options2.exit_cb = exit_cb;",
          "151:   options2.flags = 0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "466:   return 0;",
          "467: }",
          "468: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "503: #ifndef _WIN32",
          "504: TEST_IMPL(spawn_setuid_setgid) {",
          "505:   int r;",
          "508:   uv_uid_t uid = getuid();",
          "509:   if (uid != 0) {",
          "510:     fprintf(stderr, \"spawn_setuid_setgid skipped: not root\\n\");",
          "511:     return 0;",
          "512:   }",
          "514:   init_process_options2(\"spawn_helper1\", exit_cb);",
          "517:   struct passwd* pw;",
          "518:   pw = getpwnam(\"nobody\");",
          "519:   ASSERT(pw != NULL);",
          "520:   options2.uid = pw->pw_uid;",
          "521:   options2.gid = pw->pw_gid;",
          "522:   options2.flags = UV_PROCESS_SETUID | UV_PROCESS_SETGID;",
          "524:   r = uv_spawn2(uv_default_loop(), &process, options2);",
          "525:   ASSERT(r == 0);",
          "527:   r = uv_run(uv_default_loop());",
          "528:   ASSERT(r == 0);",
          "530:   ASSERT(exit_cb_called == 1);",
          "531:   ASSERT(close_cb_called == 1);",
          "533:   return 0;",
          "534: }",
          "535: #endif",
          "538: #ifndef _WIN32",
          "539: TEST_IMPL(spawn_setuid_fails) {",
          "540:   int r;",
          "543:   uv_uid_t uid = getuid();",
          "544:   if (uid == 0) {",
          "545:     struct passwd* pw;",
          "546:     pw = getpwnam(\"nobody\");",
          "547:     ASSERT(pw != NULL);",
          "548:     r = setuid(pw->pw_uid);",
          "549:     ASSERT(r == 0);",
          "550:   }",
          "552:   init_process_options2(\"spawn_helper1\", exit_cb_failure_expected);",
          "554:   options2.flags |= UV_PROCESS_SETUID;",
          "555:   options2.uid = (uv_uid_t) -42424242;",
          "557:   r = uv_spawn2(uv_default_loop(), &process, options2);",
          "558:   ASSERT(r == 0);",
          "560:   r = uv_run(uv_default_loop());",
          "561:   ASSERT(r == 0);",
          "563:   ASSERT(exit_cb_called == 1);",
          "564:   ASSERT(close_cb_called == 1);",
          "566:   return 0;",
          "567: }",
          "570: TEST_IMPL(spawn_setgid_fails) {",
          "571:   int r;",
          "574:   uv_uid_t uid = getuid();",
          "575:   if (uid == 0) {",
          "576:     struct passwd* pw;",
          "577:     pw = getpwnam(\"nobody\");",
          "578:     ASSERT(pw != NULL);",
          "579:     r = setuid(pw->pw_uid);",
          "580:     ASSERT(r == 0);",
          "581:   }",
          "583:   init_process_options2(\"spawn_helper1\", exit_cb_failure_expected);",
          "585:   options2.flags |= UV_PROCESS_SETGID;",
          "586:   options2.gid = (uv_gid_t) -42424242;",
          "588:   r = uv_spawn2(uv_default_loop(), &process, options2);",
          "589:   ASSERT(r == 0);",
          "591:   r = uv_run(uv_default_loop());",
          "592:   ASSERT(r == 0);",
          "594:   ASSERT(exit_cb_called == 1);",
          "595:   ASSERT(close_cb_called == 1);",
          "597:   return 0;",
          "598: }",
          "599: #endif",
          "602: #ifdef _WIN32",
          "603: TEST_IMPL(spawn_setuid_fails) {",
          "604:   int r;",
          "606:   init_process_options2(\"spawn_helper1\", exit_cb_unexpected);",
          "608:   options2.flags |= UV_PROCESS_SETUID;",
          "609:   options2.uid = (uv_uid_t) -42424242;",
          "611:   r = uv_spawn2(uv_default_loop(), &process, options2);",
          "612:   ASSERT(r == -1);",
          "614:   r = uv_run(uv_default_loop());",
          "615:   ASSERT(r == 0);",
          "617:   ASSERT(close_cb_called == 0);",
          "619:   return 0;",
          "620: }",
          "623: TEST_IMPL(spawn_setgid_fails) {",
          "624:   int r;",
          "626:   init_process_options2(\"spawn_helper1\", exit_cb_unexpected);",
          "628:   options2.flags |= UV_PROCESS_SETGID;",
          "629:   options2.gid = (uv_gid_t) -42424242;",
          "631:   r = uv_spawn2(uv_default_loop(), &process, options2);",
          "632:   ASSERT(r == -1);",
          "634:   r = uv_run(uv_default_loop());",
          "635:   ASSERT(r == 0);",
          "637:   ASSERT(close_cb_called == 0);",
          "639:   return 0;",
          "640: }",
          "641: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "74a2528bd71ced1061aee2ae7f171d7c446a7bfd",
      "candidate_info": {
        "commit_hash": "74a2528bd71ced1061aee2ae7f171d7c446a7bfd",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/74a2528bd71ced1061aee2ae7f171d7c446a7bfd",
        "files": [
          "src/node_version.h"
        ],
        "message": "Now working on v0.6.11",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #define NODE_MAJOR_VERSION 0",
          "30: #define NODE_MINOR_VERSION 6",
          "34: #ifndef NODE_STRINGIFY",
          "35: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "31: #define NODE_PATCH_VERSION 10",
          "32: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "[Added Lines]",
          "31: #define NODE_PATCH_VERSION 11",
          "32: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "93cefab1a3a40a5693217c9ce43380a1e1cfad4e",
      "candidate_info": {
        "commit_hash": "93cefab1a3a40a5693217c9ce43380a1e1cfad4e",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/93cefab1a3a40a5693217c9ce43380a1e1cfad4e",
        "files": [
          "test/simple/test-child-process-kill-throw.js"
        ],
        "message": "Set errno in fake-failing child-process kill test",
        "before_after_code_files": [
          "test/simple/test-child-process-kill-throw.js||test/simple/test-child-process-kill-throw.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-child-process-kill-throw.js||test/simple/test-child-process-kill-throw.js": [
          "File: test/simple/test-child-process-kill-throw.js -> test/simple/test-child-process-kill-throw.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:   var error = {};",
          "32:   child.on('exit', function() {",
          "33:     child._internal = {",
          "35:     };",
          "36:     child.once('error', function(err) {",
          "37:       error = err;",
          "",
          "[Removed Lines]",
          "34:       kill: function() { return -1; }",
          "",
          "[Added Lines]",
          "34:       kill: function() {",
          "35:         global.errno = 42;",
          "36:         return -1;",
          "37:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e4afb2f724f0a42c946ded3805f6827f8ed3868c",
      "candidate_info": {
        "commit_hash": "e4afb2f724f0a42c946ded3805f6827f8ed3868c",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e4afb2f724f0a42c946ded3805f6827f8ed3868c",
        "files": [
          "lib/tty.js"
        ],
        "message": "tty: emit 'unknown' key event if key sequence not found\n\nAdd key.code and key.sequence -mad props go out to @TooTallNate",
        "before_after_code_files": [
          "lib/tty.js||litty.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/tty.js||litty.js": [
          "File: lib/tty.js -> litty.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "154:     }",
          "155:   }",
          "157:   if (s === '\\r' || s === '\\n') {",
          "159:     key.name = 'enter';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "210:     key.ctrl = !!(modifier & 4);",
          "211:     key.meta = !!(modifier & 10);",
          "212:     key.shift = !!(modifier & 1);",
          "215:     switch (code) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "307:       case '[Z': key.name = 'tab'; key.shift = true; break;",
          "309:     }",
          "310:   } else if (s.length > 1 && s[0] !== '\\x1b') {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5a5e128165e85e15843f21d4ca01c8765323b030",
      "candidate_info": {
        "commit_hash": "5a5e128165e85e15843f21d4ca01c8765323b030",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/5a5e128165e85e15843f21d4ca01c8765323b030",
        "files": [
          "common.gypi",
          "node.gyp"
        ],
        "message": "build: link with -rdynamic, not -Wl,--export-dynamic\n\nThe system linker on SunOS doesn't understand --export-dynamic.",
        "before_after_code_files": [
          "common.gypi||common.gypi",
          "node.gyp||node.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "common.gypi||common.gypi": [
          "File: common.gypi -> common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "148:       [ 'OS==\"linux\" or OS==\"freebsd\" or OS==\"openbsd\" or OS==\"solaris\"', {",
          "149:         'cflags': [ '-Wall', '-pthread', ],",
          "150:         'cflags_cc': [ '-fno-rtti', '-fno-exceptions' ],",
          "152:         'conditions': [",
          "153:           [ 'target_arch==\"ia32\"', {",
          "154:             'cflags': [ '-m32' ],",
          "",
          "[Removed Lines]",
          "151:         'ldflags': [ '-pthread', ],",
          "",
          "[Added Lines]",
          "151:         'ldflags': [ '-pthread', '-rdynamic' ],",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "158:             'cflags': [ '-m64' ],",
          "159:             'ldflags': [ '-m64' ],",
          "160:           }],",
          "164:           [ 'OS==\"solaris\"', {",
          "165:             'cflags': [ '-pthreads' ],",
          "166:             'ldflags': [ '-pthreads' ],",
          "",
          "[Removed Lines]",
          "161:           [ 'OS==\"linux\"', {",
          "162:             'ldflags': [ '-rdynamic' ],",
          "163:           }],",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "node.gyp||node.gyp": [
          "File: node.gyp -> node.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "206:             'src/node_signal_watcher.cc',",
          "207:             'src/node_io_watcher.cc',",
          "208:           ],",
          "210:         }],",
          "211:         [ 'OS==\"mac\"', {",
          "212:           'libraries': [ '-framework Carbon' ],",
          "",
          "[Removed Lines]",
          "209:           'ldflags': [ '-Wl,--export-dynamic' ],",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}