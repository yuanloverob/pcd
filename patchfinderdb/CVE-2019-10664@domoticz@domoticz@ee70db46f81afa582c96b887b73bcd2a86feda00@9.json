{
  "cve_id": "CVE-2019-10664",
  "cve_desc": "Domoticz before 4.10578 allows SQL Injection via the idx parameter in CWebServer::GetFloorplanImage in WebServer.cpp.",
  "repo": "domoticz/domoticz",
  "patch_hash": "ee70db46f81afa582c96b887b73bcd2a86feda00",
  "patch_info": {
    "commit_hash": "ee70db46f81afa582c96b887b73bcd2a86feda00",
    "repo": "domoticz/domoticz",
    "commit_url": "https://github.com/domoticz/domoticz/commit/ee70db46f81afa582c96b887b73bcd2a86feda00",
    "files": [
      "main/WebServer.cpp"
    ],
    "message": "Fixed possible SQL Injection Vulnerability (Thanks to Fabio Carretto!)",
    "before_after_code_files": [
      "main/WebServer.cpp||main/WebServer.cpp"
    ]
  },
  "patch_diff": {
    "main/WebServer.cpp||main/WebServer.cpp": [
      "File: main/WebServer.cpp -> main/WebServer.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10772:     return;",
      "10773:    }",
      "10774:    std::vector<std::vector<std::string> > result;",
      "10776:    if (result.empty())",
      "10777:     return;",
      "10778:    reply::set_content(&rep, result[0][0].begin(), result[0][0].end());",
      "",
      "[Removed Lines]",
      "10775:    result = m_sql.safe_queryBlob(\"SELECT Image FROM Floorplans WHERE ID=%s\", idx.c_str());",
      "",
      "[Added Lines]",
      "10775:    result = m_sql.safe_queryBlob(\"SELECT Image FROM Floorplans WHERE ID=%d\", atol(idx.c_str()));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4299924c0a052857c21a6e9152542afb9e6d69ca",
      "candidate_info": {
        "commit_hash": "4299924c0a052857c21a6e9152542afb9e6d69ca",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/4299924c0a052857c21a6e9152542afb9e6d69ca",
        "files": [
          "hardware/plugins/Plugins.cpp"
        ],
        "message": "BugFix: UDP connections without a protocol specified crashed when writing data",
        "before_after_code_files": [
          "hardware/plugins/Plugins.cpp||hardware/plugins/Plugins.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "hardware/plugins/Plugins.cpp||hardware/plugins/Plugins.cpp": [
          "File: hardware/plugins/Plugins.cpp -> hardware/plugins/Plugins.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1432:    }",
          "1433:   }",
          "1435:   std::vector<byte> vWriteData = pConnection->pProtocol->ProcessOutbound(pMessage);",
          "1436:   WriteDebugBuffer(vWriteData, false);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1436:   if (!pConnection->pProtocol)",
          "1437:   {",
          "1438:    pConnection->pProtocol = new CPluginProtocol();",
          "1439:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "92c100800f74d2aa6685f326b91f50650d500128",
      "candidate_info": {
        "commit_hash": "92c100800f74d2aa6685f326b91f50650d500128",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/92c100800f74d2aa6685f326b91f50650d500128",
        "files": [
          "History.txt",
          "msbuild/domoticz.vcxproj",
          "www/app/DashboardController.js",
          "www/app/LightsController.js"
        ],
        "message": "Fixed: Selector selected color",
        "before_after_code_files": [
          "msbuild/domoticz.vcxproj||msbuild/domoticz.vcxproj",
          "www/app/DashboardController.js||www/app/DashboardController.js",
          "www/app/LightsController.js||www/app/LightsController.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "msbuild/domoticz.vcxproj||msbuild/domoticz.vcxproj": [
          "File: msbuild/domoticz.vcxproj -> msbuild/domoticz.vcxproj",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:     <ProjectGuid>{6AD96441-5B2C-467B-AAB6-A1B8368D503A}</ProjectGuid>",
          "15:     <Keyword>Win32Proj</Keyword>",
          "16:     <RootNamespace>domoticz</RootNamespace>",
          "18:   </PropertyGroup>",
          "19:   <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />",
          "20:   <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">",
          "21:     <ConfigurationType>Application</ConfigurationType>",
          "22:     <UseDebugLibraries>true</UseDebugLibraries>",
          "23:     <CharacterSet>MultiByte</CharacterSet>",
          "25:   </PropertyGroup>",
          "26:   <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">",
          "27:     <ConfigurationType>Application</ConfigurationType>",
          "",
          "[Removed Lines]",
          "17:     <WindowsTargetPlatformVersion>10.0.17763.0</WindowsTargetPlatformVersion>",
          "24:     <PlatformToolset>v141</PlatformToolset>",
          "",
          "[Added Lines]",
          "17:     <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>",
          "24:     <PlatformToolset>v142</PlatformToolset>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1435:   <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />",
          "1436:   <ImportGroup Label=\"ExtensionTargets\">",
          "1437:   </ImportGroup>",
          "",
          "[Removed Lines]",
          "1438: </Project>",
          "",
          "[Added Lines]",
          "1438: </Project>",
          "",
          "---------------"
        ],
        "www/app/DashboardController.js||www/app/DashboardController.js": [
          "File: www/app/DashboardController.js -> www/app/DashboardController.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "481:               }",
          "482:               xhtm += '<button type=\"button\" class=\"btn btn-small ';",
          "483:               if ((index * 10) == item.LevelInt) {",
          "485:               }",
          "486:               else {",
          "487:                xhtm += 'btn-default\"';",
          "",
          "[Removed Lines]",
          "484:                xhtm += 'btn-info\"';",
          "",
          "[Added Lines]",
          "484:                xhtm += 'btn-danger\"';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "937:               }",
          "938:               xhtm += '<button type=\"button\" class=\"btn btn-small ';",
          "939:               if ((index * 10) == item.LevelInt) {",
          "941:               }",
          "942:               else {",
          "943:                xhtm += 'btn-default\"';",
          "",
          "[Removed Lines]",
          "940:                xhtm += 'btn-info\"';",
          "",
          "[Added Lines]",
          "940:                xhtm += 'btn-danger\"';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2364:             }",
          "2365:             xhtm += '<button type=\"button\" class=\"btn btn-small ';",
          "2366:             if ((index * 10) == item.LevelInt) {",
          "2368:             }",
          "2369:             else {",
          "2370:              xhtm += 'btn-default\"';",
          "",
          "[Removed Lines]",
          "2367:              xhtm += 'btn-info\"';",
          "",
          "[Added Lines]",
          "2367:              xhtm += 'btn-danger\"';",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2752:             }",
          "2753:             xhtm += '<button type=\"button\" class=\"btn btn-small ';",
          "2754:             if ((index * 10) == item.LevelInt) {",
          "2756:             }",
          "2757:             else {",
          "2758:              xhtm += 'btn-default\"';",
          "",
          "[Removed Lines]",
          "2755:              xhtm += 'btn-info\"';",
          "",
          "[Added Lines]",
          "2755:              xhtm += 'btn-danger\"';",
          "",
          "---------------"
        ],
        "www/app/LightsController.js||www/app/LightsController.js": [
          "File: www/app/LightsController.js -> www/app/LightsController.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "740:             }",
          "741:             xhtm += '<button type=\"button\" class=\"btn btn-small ';",
          "742:             if ((index * 10) == item.LevelInt) {",
          "744:             }",
          "745:             else {",
          "746:              xhtm += 'btn-default\"';",
          "",
          "[Removed Lines]",
          "743:              xhtm += 'btn-info\"';",
          "",
          "[Added Lines]",
          "743:              xhtm += 'btn-danger\"';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1317:           }",
          "1318:           xhtm += '<button type=\"button\" class=\"btn btn-small ';",
          "1319:           if ((index * 10) == item.LevelInt) {",
          "1321:           }",
          "1322:           else {",
          "1323:            xhtm += 'btn-default\"';",
          "",
          "[Removed Lines]",
          "1320:            xhtm += 'btn-info\"';",
          "",
          "[Added Lines]",
          "1320:            xhtm += 'btn-danger\"';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "48b5ccc980412d2107bbc8d64d88222dcaa6fd4e",
      "candidate_info": {
        "commit_hash": "48b5ccc980412d2107bbc8d64d88222dcaa6fd4e",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/48b5ccc980412d2107bbc8d64d88222dcaa6fd4e",
        "files": [
          "hardware/XiaomiGateway.cpp"
        ],
        "message": "XiaomiGateway, correcting label names",
        "before_after_code_files": [
          "hardware/XiaomiGateway.cpp||hardware/XiaomiGateway.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "hardware/XiaomiGateway.cpp||hardware/XiaomiGateway.cpp": [
          "File: hardware/XiaomiGateway.cpp -> hardware/XiaomiGateway.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1280:        float temp = (float)atof(temperature.c_str()) / 100.0f;",
          "1281:        int hum = atoi(humidity.c_str()) / 100;",
          "1283:       }",
          "1284:       else if ((!temperature.empty()) && (!humidity.empty()))",
          "1285:       {",
          "1287:        float temp = (float)atof(temperature.c_str()) / 100.0f;",
          "1288:        int hum = atoi(humidity.c_str()) / 100;",
          "1290:       }",
          "1291:       else if (temperature != \"\") {",
          "1292:        float temp = (float)atof(temperature.c_str())/100.0f;",
          "",
          "[Removed Lines]",
          "1282:        TrueGateway->InsertUpdateTempHumPressure(sid.c_str(), \"Xiaomi Pressure\", temp, hum, pressure, battery);",
          "1289:        TrueGateway->InsertUpdateTempHum(sid.c_str(), \"Xiaomi Pressure\", temp, hum, battery);",
          "",
          "[Added Lines]",
          "1282:        TrueGateway->InsertUpdateTempHumPressure(sid.c_str(), \"Xiaomi TempHumBaro\", temp, hum, pressure, battery);",
          "1289:        TrueGateway->InsertUpdateTempHum(sid.c_str(), \"Xiaomi TempHum\", temp, hum, battery);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5e7a20aa2eb654fea7befa17e1f7c7a0b2d61d85",
      "candidate_info": {
        "commit_hash": "5e7a20aa2eb654fea7befa17e1f7c7a0b2d61d85",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/5e7a20aa2eb654fea7befa17e1f7c7a0b2d61d85",
        "files": [
          "hardware/plugins/Plugins.cpp"
        ],
        "message": "Bug Fix: UTF characters in plugin files caused crash",
        "before_after_code_files": [
          "hardware/plugins/Plugins.cpp||hardware/plugins/Plugins.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "hardware/plugins/Plugins.cpp||hardware/plugins/Plugins.cpp": [
          "File: hardware/plugins/Plugins.cpp -> hardware/plugins/Plugins.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "671:     if (PyObject_HasAttrString(pExcept, \"text\"))",
          "672:     {",
          "673:      PyObject*  pString = PyObject_GetAttrString(pValue, \"text\");",
          "676:      Py_XDECREF(pString);",
          "678:     }",
          "679:     else",
          "680:     {",
          "",
          "[Removed Lines]",
          "674:      PyBytesObject* pBytes = (PyBytesObject*)PyUnicode_AsASCIIString(pString);",
          "675:      _log.Log(LOG_ERROR, \"(%s) Error Line '%s'\", m_Name.c_str(), pBytes->ob_sval);",
          "677:      Py_XDECREF(pBytes);",
          "",
          "[Added Lines]",
          "674:      std::string  sUTF = PyUnicode_AsUTF8(pString);",
          "675:      _log.Log(LOG_ERROR, \"(%s) Error Line '%s'\", m_Name.c_str(), sUTF.c_str());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "929f23ec1f35142257e1e7812b5ce56fb95beb80",
      "candidate_info": {
        "commit_hash": "929f23ec1f35142257e1e7812b5ce56fb95beb80",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/929f23ec1f35142257e1e7812b5ce56fb95beb80",
        "files": [
          "main/mainworker.cpp"
        ],
        "message": "Preventing Mainworker to kill application if a thread takes a long time to complete (fixes issue #3011)",
        "before_after_code_files": [
          "main/mainworker.cpp||main/mainworker.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "main/mainworker.cpp||main/mainworker.cpp": [
          "File: main/mainworker.cpp -> main/mainworker.cpp"
        ]
      }
    }
  ]
}