{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1b8055a18387ed93987df868f87df62b713922c1",
      "candidate_info": {
        "commit_hash": "1b8055a18387ed93987df868f87df62b713922c1",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/1b8055a18387ed93987df868f87df62b713922c1",
        "files": [
          "crypto/init.c"
        ],
        "message": "Fix the effect of no-dso in crypto/init.c\n\nWhen configured no-dso, there are no DSO_{whatever} macros defined.\nTherefore, before checking those, you have to check if OPENSSL_NO_DSO\nis defined.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1902)\n(cherry picked from commit 6e290a25c2cbdc26119c0866c20d9292f9e64dd8)",
        "before_after_code_files": [
          "crypto/init.c||crypto/init.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/init.c||crypto/init.c": [
          "File: crypto/init.c -> crypto/init.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:     OPENSSL_cpuid_setup();",
          "82:     base_inited = 1;",
          "85: # ifdef DSO_WIN32",
          "86:     {",
          "87:         HMODULE handle = NULL;",
          "",
          "[Removed Lines]",
          "84: #ifndef OPENSSL_USE_NODELETE",
          "",
          "[Added Lines]",
          "84: #if !defined(OPENSSL_NO_DSO) && !defined(OPENSSL_USE_NODELETE)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "604: {",
          "605:     OPENSSL_INIT_STOP *newhand;",
          "608:     {",
          "609:         union {",
          "610:             void *sym;",
          "",
          "[Removed Lines]",
          "607: #ifndef OPENSSL_USE_NODELETE",
          "",
          "[Added Lines]",
          "607: #if !defined(OPENSSL_NO_DSO) && !defined(OPENSSL_USE_NODELETE)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0e3200b59d2de69e2a577eb269c5e65d2a3dfa11",
      "candidate_info": {
        "commit_hash": "0e3200b59d2de69e2a577eb269c5e65d2a3dfa11",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0e3200b59d2de69e2a577eb269c5e65d2a3dfa11",
        "files": [
          "ssl/record/ssl3_record.c"
        ],
        "message": "Replace div-spoiler hack with simpler code, GH#1027,2253.\n\nThis is 1.1.0-specific 8f77fab82486c19ab48eee07718e190f76e6ea9a redux.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
        "before_after_code_files": [
          "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
          "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1212:     unsigned mac_end = rec->length;",
          "1213:     unsigned mac_start = mac_end - md_size;",
          "1218:     unsigned scan_start = 0;",
          "1219:     unsigned i, j;",
          "1221:     unsigned rotate_offset;",
          "1223:     OPENSSL_assert(rec->orig_len >= md_size);",
          "",
          "[Removed Lines]",
          "1220:     unsigned div_spoiler;",
          "",
          "[Added Lines]",
          "1214:     unsigned in_mac;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1231:     if (rec->orig_len > md_size + 255 + 1)",
          "1232:         scan_start = rec->orig_len - (md_size + 255 + 1);",
          "1245:     memset(rotated_mac, 0, md_size);",
          "1246:     for (i = scan_start, j = 0; i < rec->orig_len; i++) {",
          "1249:         unsigned char b = rec->data[i];",
          "1251:         j &= constant_time_lt(j, md_size);",
          "1252:     }",
          "",
          "[Removed Lines]",
          "1241:     div_spoiler = md_size >> 1;",
          "1242:     div_spoiler <<= (sizeof(div_spoiler) - 1) * 8;",
          "1243:     rotate_offset = (div_spoiler + mac_start - scan_start) % md_size;",
          "1247:         unsigned char mac_started = constant_time_ge_8(i, mac_start);",
          "1248:         unsigned char mac_ended = constant_time_ge_8(i, mac_end);",
          "1250:         rotated_mac[j++] |= b & mac_started & ~mac_ended;",
          "",
          "[Added Lines]",
          "1234:     in_mac = 0;",
          "1235:     rotate_offset = 0;",
          "1238:         unsigned mac_started = constant_time_eq(i, mac_start);",
          "1239:         unsigned mac_ended = constant_time_lt(i, mac_end);",
          "1242:         in_mac |= mac_started;",
          "1243:         in_mac &= mac_ended;",
          "1244:         rotate_offset |= j & mac_started;",
          "1245:         rotated_mac[j++] |= b & in_mac;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "89d0853a7fe12d6ae79d148425717fed740ae136",
      "candidate_info": {
        "commit_hash": "89d0853a7fe12d6ae79d148425717fed740ae136",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/89d0853a7fe12d6ae79d148425717fed740ae136",
        "files": [
          "test/ssl-tests/01-simple.conf",
          "test/ssl-tests/01-simple.conf.in"
        ],
        "message": "Add server signature algorithm bug test.\n\nAdd a client authentication signature algorithm to simple\nssl test and a server signature algorithm. Since we don't\ndo client auth this should have no effect. However if we\nuse client auth signature algorithms by mistake this will\nabort the handshake with a no shared signature algorithms\nerror.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2297)",
        "before_after_code_files": [
          "test/ssl-tests/01-simple.conf||test/ssl-tests/01-simple.conf",
          "test/ssl-tests/01-simple.conf.in||test/ssl-tests/01-simple.conf.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/ssl-tests/01-simple.conf||test/ssl-tests/01-simple.conf": [
          "File: test/ssl-tests/01-simple.conf -> test/ssl-tests/01-simple.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # Generated with generate_ssl_tests.pl",
          "5: test-0 = 0-default",
          "7: # ===========================================================",
          "9: [0-default]",
          "",
          "[Removed Lines]",
          "3: num_tests = 2",
          "6: test-1 = 1-verify-cert",
          "",
          "[Added Lines]",
          "3: num_tests = 3",
          "6: test-1 = 1-Server signature algorithms bug",
          "7: test-2 = 2-verify-cert",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30: # ===========================================================",
          "40: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "41: CipherString = DEFAULT",
          "42: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "45: CipherString = DEFAULT",
          "46: VerifyMode = Peer",
          "48: [test-1]",
          "49: ExpectedClientAlert = UnknownCA",
          "50: ExpectedResult = ClientFail",
          "",
          "[Removed Lines]",
          "32: [1-verify-cert]",
          "33: ssl_conf = 1-verify-cert-ssl",
          "35: [1-verify-cert-ssl]",
          "36: server = 1-verify-cert-server",
          "37: client = 1-verify-cert-client",
          "39: [1-verify-cert-server]",
          "44: [1-verify-cert-client]",
          "",
          "[Added Lines]",
          "33: [1-Server signature algorithms bug]",
          "34: ssl_conf = 1-Server signature algorithms bug-ssl",
          "36: [1-Server signature algorithms bug-ssl]",
          "37: server = 1-Server signature algorithms bug-server",
          "38: client = 1-Server signature algorithms bug-client",
          "40: [1-Server signature algorithms bug-server]",
          "43: ClientSignatureAlgorithms = ECDSA+SHA256",
          "46: [1-Server signature algorithms bug-client]",
          "48: SignatureAlgorithms = RSA+SHA256",
          "49: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "53: ExpectedResult = Success",
          "56: # ===========================================================",
          "58: [2-verify-cert]",
          "59: ssl_conf = 2-verify-cert-ssl",
          "61: [2-verify-cert-ssl]",
          "62: server = 2-verify-cert-server",
          "63: client = 2-verify-cert-client",
          "65: [2-verify-cert-server]",
          "66: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "67: CipherString = DEFAULT",
          "68: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "70: [2-verify-cert-client]",
          "71: CipherString = DEFAULT",
          "72: VerifyMode = Peer",
          "74: [test-2]",
          "",
          "---------------"
        ],
        "test/ssl-tests/01-simple.conf.in||test/ssl-tests/01-simple.conf.in": [
          "File: test/ssl-tests/01-simple.conf.in -> test/ssl-tests/01-simple.conf.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:         test   => { \"ExpectedResult\" => \"Success\" },",
          "20:     },",
          "22:     {",
          "23:         name => \"verify-cert\",",
          "24:         server => { },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22:     {",
          "23:         name => \"Server signature algorithms bug\",",
          "24:         # Should have no effect as we aren't doing client auth",
          "25:         server => { \"ClientSignatureAlgorithms\" => \"ECDSA+SHA256\" },",
          "26:         client => { \"SignatureAlgorithms\" => \"RSA+SHA256\" },",
          "27:         test   => { \"ExpectedResult\" => \"Success\" },",
          "28:     },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2ac9a5e7cf9d720c35a13d52e12d0c50ce2d2f14",
      "candidate_info": {
        "commit_hash": "2ac9a5e7cf9d720c35a13d52e12d0c50ce2d2f14",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/2ac9a5e7cf9d720c35a13d52e12d0c50ce2d2f14",
        "files": [
          "CHANGES",
          "crypto/o_time.c"
        ],
        "message": "Code cleanup: remove the VMS specific reimplementation of gmtime\n\nThis reimplementation was necessary before VMS C V7.1.  Since that's\nthe minimum version we support in this OpenSSL version, the\nreimplementation is no longer needed.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2762)\n(cherry picked from commit 9d70ac97d9d8720e6ed280609c844da403b80440)",
        "before_after_code_files": [
          "crypto/o_time.c||crypto/o_time.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/o_time.c||crypto/o_time.c": [
          "File: crypto/o_time.c -> crypto/o_time.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: #include <string.h>",
          "12: #include <openssl/crypto.h>",
          "50: struct tm *OPENSSL_gmtime(const time_t *timer, struct tm *result)",
          "51: {",
          "52:     struct tm *ts = NULL;",
          "55:     if (gmtime_r(timer, result) == NULL)",
          "56:         return NULL;",
          "57:     ts = result;",
          "59:     ts = gmtime(timer);",
          "60:     if (ts == NULL)",
          "61:         return NULL;",
          "63:     memcpy(result, ts, sizeof(struct tm));",
          "64:     ts = result;",
          "215: #endif",
          "216:     return ts;",
          "217: }",
          "",
          "[Removed Lines]",
          "14: #ifdef OPENSSL_SYS_VMS",
          "15: # if __CRTL_VER >= 70000000 && \\",
          "16:      (defined _POSIX_C_SOURCE || !defined _ANSI_C_SOURCE)",
          "17: #  define VMS_GMTIME_OK",
          "18: # endif",
          "19: # ifndef VMS_GMTIME_OK",
          "20: #  include <libdtdef.h>",
          "21: #  include <lib$routines.h>",
          "22: #  include <lnmdef.h>",
          "23: #  include <starlet.h>",
          "24: #  include <descrip.h>",
          "25: #  include <stdlib.h>",
          "33: # define __NEW_STARLET 1",
          "35: # if (defined(__alpha) || defined(__ia64))",
          "36: #  include <iledef.h>",
          "37: # else",
          "41: #  pragma __nomember_alignment",
          "46: } ILE3;",
          "54: #if defined(OPENSSL_THREADS) && !defined(OPENSSL_SYS_WIN32) && (!defined(OPENSSL_SYS_VMS) || defined(gmtime_r)) && !defined(OPENSSL_SYS_MACOSX)",
          "58: #elif !defined(OPENSSL_SYS_VMS) || defined(VMS_GMTIME_OK)",
          "65: #endif",
          "66: #if defined( OPENSSL_SYS_VMS) && !defined( VMS_GMTIME_OK)",
          "67:     if (ts == NULL) {",
          "68:         static $DESCRIPTOR(tabnam, \"LNM$DCL_LOGICAL\");",
          "69:         static $DESCRIPTOR(lognam, \"SYS$TIMEZONE_DIFFERENTIAL\");",
          "70:         char logvalue[256];",
          "71:         unsigned int reslen = 0;",
          "72: # if __INITIAL_POINTER_SIZE == 64",
          "73:         ILEB_64 itemlist[2], *pitem;",
          "74: # else",
          "75:         ILE3 itemlist[2], *pitem;",
          "76: # endif",
          "77:         int status;",
          "78:         time_t t;",
          "84:         pitem = itemlist;",
          "86: # if __INITIAL_POINTER_SIZE == 64",
          "87:         pitem->ileb_64$w_mbo = 1;",
          "88:         pitem->ileb_64$w_code = LNM$_STRING;",
          "89:         pitem->ileb_64$l_mbmo = -1;",
          "90:         pitem->ileb_64$q_length = sizeof (logvalue);",
          "91:         pitem->ileb_64$pq_bufaddr = logvalue;",
          "92:         pitem->ileb_64$pq_retlen_addr = (unsigned __int64 *) &reslen;",
          "93:         pitem++;",
          "95:         pitem->ileb_64$q_length = pitem->ileb_64$w_code = 0;",
          "96: # else",
          "97:         pitem->ile3$w_length = sizeof (logvalue);",
          "98:         pitem->ile3$w_code = LNM$_STRING;",
          "99:         pitem->ile3$ps_bufaddr = logvalue;",
          "100:         pitem->ile3$ps_retlen_addr = (unsigned short int *) &reslen;",
          "101:         pitem++;",
          "103:         pitem->ile3$w_length = pitem->ile3$w_code = 0;",
          "104: # endif",
          "108:         status = sys$trnlnm(0, &tabnam, &lognam, 0, itemlist);",
          "109:         if (!(status & 1))",
          "110:             return NULL;",
          "111:         logvalue[reslen] = '\\0';",
          "113:         t = *timer;",
          "127: # if __CRTL_VER < 70000000 || defined _VMS_V6_SOURCE",
          "129:         status = atoi(logvalue);",
          "132:         t -= status;",
          "133: # endif",
          "141:         {",
          "144:                if I remember correctly, which is November 17, 1858.",
          "145:                Furthermore, time is measure in tenths of microseconds",
          "146:                and stored in quadwords (64 bit integers).  unix_epoch",
          "147:                below is January 1st 1970 expressed as a VMS time.  The",
          "148:                following code was used to get this number:",
          "150:                #include <stdio.h>",
          "151:                #include <stdlib.h>",
          "152:                #include <lib$routines.h>",
          "153:                #include <starlet.h>",
          "155:                main()",
          "156:                {",
          "157:                  unsigned long systime[2];",
          "158:                  unsigned short epoch_values[7] =",
          "159:                    { 1970, 1, 1, 0, 0, 0, 0 };",
          "161:                  lib$cvt_vectim(epoch_values, systime);",
          "163:                  printf(\"%u %u\", systime[0], systime[1]);",
          "164:                }",
          "166:             unsigned long unix_epoch[2] = { 1273708544, 8164711 };",
          "167:             unsigned long deltatime[2];",
          "168:             unsigned long systime[2];",
          "169:             struct vms_vectime {",
          "170:                 short year, month, day, hour, minute, second, centi_second;",
          "171:             } time_values;",
          "172:             long operation;",
          "180:             operation = LIB$K_DELTA_SECONDS;",
          "181:             status = lib$cvt_to_internal_time(&operation, &t, deltatime);",
          "187:             status = lib$add_times(unix_epoch, deltatime, systime);",
          "190:             status = sys$numtim(&time_values, systime);",
          "193:             result->tm_sec = time_values.second;",
          "194:             result->tm_min = time_values.minute;",
          "195:             result->tm_hour = time_values.hour;",
          "196:             result->tm_mday = time_values.day;",
          "197:             result->tm_mon = time_values.month - 1;",
          "198:             result->tm_year = time_values.year - 1900;",
          "200:             operation = LIB$K_DAY_OF_WEEK;",
          "201:             status = lib$cvt_from_internal_time(&operation,",
          "202:                                                 &result->tm_wday, systime);",
          "203:             result->tm_wday %= 7;",
          "205:             operation = LIB$K_DAY_OF_YEAR;",
          "206:             status = lib$cvt_from_internal_time(&operation,",
          "207:                                                 &result->tm_yday, systime);",
          "208:             result->tm_yday--;",
          "212:             ts = result;",
          "213:         }",
          "214:     }",
          "",
          "[Added Lines]",
          "18: #if defined(OPENSSL_THREADS) && !defined(OPENSSL_SYS_WIN32) && !defined(OPENSSL_SYS_MACOSX)",
          "22: #else",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "177b4225baac56336e04fd97d0c993fd45d3e45e",
      "candidate_info": {
        "commit_hash": "177b4225baac56336e04fd97d0c993fd45d3e45e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/177b4225baac56336e04fd97d0c993fd45d3e45e",
        "files": [
          "ssl/t1_lib.c"
        ],
        "message": "Use TLSEXT_KEYNAME_LENGTH in tls_decrypt_ticket.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2618)\n(cherry picked from commit 57b0d651f052ed86528da916397acbcce035fb21)",
        "before_after_code_files": [
          "ssl/t1_lib.c||ssl/t1_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/t1_lib.c||ssl/t1_lib.c": [
          "File: ssl/t1_lib.c -> ssl/t1_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3151:     }",
          "3156:     sdec = OPENSSL_malloc(eticklen);",
          "3157:     if (sdec == NULL || EVP_DecryptUpdate(ctx, sdec, &slen, p, eticklen) <= 0) {",
          "3158:         EVP_CIPHER_CTX_free(ctx);",
          "",
          "[Removed Lines]",
          "3154:     p = etick + 16 + EVP_CIPHER_CTX_iv_length(ctx);",
          "3155:     eticklen -= 16 + EVP_CIPHER_CTX_iv_length(ctx);",
          "",
          "[Added Lines]",
          "3154:     p = etick + TLSEXT_KEYNAME_LENGTH + EVP_CIPHER_CTX_iv_length(ctx);",
          "3155:     eticklen -= TLSEXT_KEYNAME_LENGTH + EVP_CIPHER_CTX_iv_length(ctx);",
          "",
          "---------------"
        ]
      }
    }
  ]
}