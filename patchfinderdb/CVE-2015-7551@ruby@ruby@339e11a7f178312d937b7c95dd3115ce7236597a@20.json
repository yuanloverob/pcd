{
  "cve_id": "CVE-2015-7551",
  "cve_desc": "The Fiddle::Handle implementation in ext/fiddle/handle.c in Ruby before 2.0.0-p648, 2.1 before 2.1.8, and 2.2 before 2.2.4, as distributed in Apple OS X before 10.11.4 and other products, mishandles tainting, which allows context-dependent attackers to execute arbitrary code or cause a denial of service (application crash) via a crafted string, related to the DL module and the libffi library.  NOTE: this vulnerability exists because of a CVE-2009-5147 regression.",
  "repo": "ruby/ruby",
  "patch_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
  "patch_info": {
    "commit_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
    "repo": "ruby/ruby",
    "commit_url": "https://github.com/ruby/ruby/commit/339e11a7f178312d937b7c95dd3115ce7236597a",
    "files": [
      "ChangeLog",
      "ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb",
      "version.h"
    ],
    "message": "merge revision(s): 53153 and 23405@ruby_1_9_1\n\n\t* ext/fiddle/handle.c: check tainted string arguments.\n\t  Patch provided by tenderlove and nobu.\n\n\t* test/fiddle/test_handle.rb (class TestHandle): add test for above.\n\n\t* ext/dl/handle.c (rb_dlhandle_initialize): prohibits DL::dlopen\n\t  with a tainted name of library.\n\t  Patch by sheepman <sheepman AT sheepman.sakura.ne.jp>.\n\n\t* ext/dl/handle.c (rb_dlhandle_sym): ditto\n\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53156 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
    "before_after_code_files": [
      "ext/fiddle/handle.c||ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb",
      "version.h||version.h"
    ]
  },
  "patch_diff": {
    "ext/fiddle/handle.c||ext/fiddle/handle.c": [
      "File: ext/fiddle/handle.c -> ext/fiddle/handle.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #include <ruby.h>",
      "2: #include <fiddle.h>",
      "4: VALUE rb_cHandle;",
      "6: struct dl_handle {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4: #define SafeStringValueCStr(v) (rb_check_safe_obj(rb_string_value(&v)), StringValueCStr(v))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "143:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "144:  break;",
      "145:       case 1:",
      "147:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "148:  break;",
      "149:       case 2:",
      "151:  cflag = NUM2INT(flag);",
      "152:  break;",
      "153:       default:",
      "",
      "[Removed Lines]",
      "146:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "150:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "",
      "[Added Lines]",
      "148:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "152:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "263:     return PTR2NUM(fiddle_handle);",
      "264: }",
      "",
      "[Removed Lines]",
      "266: static VALUE fiddle_handle_sym(void *handle, const char *symbol);",
      "",
      "[Added Lines]",
      "268: static VALUE fiddle_handle_sym(void *handle, VALUE symbol);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "282:  rb_raise(rb_eFiddleError, \"closed handle\");",
      "283:     }",
      "286: }",
      "288: #ifndef RTLD_NEXT",
      "",
      "[Removed Lines]",
      "285:     return fiddle_handle_sym(fiddle_handle->ptr, StringValueCStr(sym));",
      "",
      "[Added Lines]",
      "287:     return fiddle_handle_sym(fiddle_handle->ptr, sym);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "305: static VALUE",
      "306: rb_fiddle_handle_s_sym(VALUE self, VALUE sym)",
      "307: {",
      "309: }",
      "311: static VALUE",
      "313: {",
      "314: #if defined(HAVE_DLERROR)",
      "315:     const char *err;",
      "",
      "[Removed Lines]",
      "308:     return fiddle_handle_sym(RTLD_NEXT, StringValueCStr(sym));",
      "312: fiddle_handle_sym(void *handle, const char *name)",
      "",
      "[Added Lines]",
      "310:     return fiddle_handle_sym(RTLD_NEXT, sym);",
      "314: fiddle_handle_sym(void *handle, VALUE symbol)",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "318: # define CHECK_DLERROR",
      "319: #endif",
      "320:     void (*func)();",
      "322:     rb_secure(2);",
      "323: #ifdef HAVE_DLERROR",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:     const char *name = SafeStringValueCStr(symbol);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "367:     }",
      "368: #endif",
      "369:     if( !func ){",
      "371:     }",
      "373:     return PTR2NUM(func);",
      "",
      "[Removed Lines]",
      "370:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%s\\\"\", name);",
      "",
      "[Added Lines]",
      "373:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%\"PRIsVALUE\"\\\"\", symbol);",
      "",
      "---------------"
    ],
    "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb": [
      "File: test/fiddle/test_handle.rb -> test/fiddle/test_handle.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "11:     include Test::Unit::Assertions",
      "13:     def test_to_i",
      "14:       handle = Fiddle::Handle.new(LIBC_SO)",
      "15:       assert_kind_of Integer, handle.to_i",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13:     def test_safe_handle_open",
      "14:       t = Thread.new do",
      "15:         $SAFE = 1",
      "16:         Fiddle::Handle.new(LIBC_SO.taint)",
      "17:       end",
      "18:       assert_raise(SecurityError) { t.value }",
      "19:     end",
      "21:     def test_safe_function_lookup",
      "22:       t = Thread.new do",
      "23:         h = Fiddle::Handle.new(LIBC_SO)",
      "24:         $SAFE = 1",
      "25:         h[\"qsort\".taint]",
      "26:       end",
      "27:       assert_raise(SecurityError) { t.value }",
      "28:     end",
      "",
      "---------------"
    ],
    "version.h||version.h": [
      "File: version.h -> version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #define RUBY_VERSION \"2.1.8\"",
      "2: #define RUBY_RELEASE_DATE \"2015-12-16\"",
      "5: #define RUBY_RELEASE_YEAR 2015",
      "6: #define RUBY_RELEASE_MONTH 12",
      "",
      "[Removed Lines]",
      "3: #define RUBY_PATCHLEVEL 438",
      "",
      "[Added Lines]",
      "3: #define RUBY_PATCHLEVEL 439",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "83c5b533e36761141ed4dbd9db28e74520cb0ffd",
      "candidate_info": {
        "commit_hash": "83c5b533e36761141ed4dbd9db28e74520cb0ffd",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/83c5b533e36761141ed4dbd9db28e74520cb0ffd",
        "files": [
          "ChangeLog",
          "parse.y",
          "test/ruby/test_literal.rb",
          "version.h"
        ],
        "message": "merge revision(s) r48484: [Backport #10524]\n\n\t* parse.y (symbol_list): fix the node type of literal symbol list\n\t  with no interpolation.  [ruby-core:66343]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49368 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "parse.y||parse.y",
          "test/ruby/test_literal.rb||test/ruby/test_literal.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "parse.y||parse.y": [
          "File: parse.y -> parse.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "4033:       {",
          "4035:    $2 = evstr2dstr($2);",
          "4037:    $$ = list_append($1, $2);",
          "4039:    $$ = dispatch2(symbols_add, $1, $2);",
          "",
          "[Removed Lines]",
          "4036:    nd_set_type($2, NODE_DSYM);",
          "",
          "[Added Lines]",
          "4036:    if (nd_type($2) == NODE_DSTR) {",
          "4037:        nd_set_type($2, NODE_DSYM);",
          "4038:    }",
          "4039:    else {",
          "4040:        nd_set_type($2, NODE_LIT);",
          "4041:        $2->nd_lit = rb_str_intern($2->nd_lit);",
          "4042:    }",
          "",
          "---------------"
        ],
        "test/ruby/test_literal.rb||test/ruby/test_literal.rb": [
          "File: test/ruby/test_literal.rb -> test/ruby/test_literal.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "434:     }",
          "435:   end",
          "437: end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "437:   def test_symbol_list",
          "438:     assert_equal([:foo, :bar], %i[foo bar])",
          "439:     assert_equal([:\"\\\"foo\"], %i[\"foo])",
          "441:     x = 10",
          "442:     assert_equal([:foo, :b10], %I[foo b#{x}])",
          "443:     assert_equal([:\"\\\"foo10\"], %I[\"foo#{x}])",
          "445:     assert_ruby_status([\"--disable-gems\", \"--dump=parsetree\"], \"%I[foo bar]\")",
          "446:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "2: #define RUBY_RELEASE_DATE \"2015-01-22\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 1",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 281",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 282",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6f97605fe308a98855f964e03a5faddde3ed5867",
      "candidate_info": {
        "commit_hash": "6f97605fe308a98855f964e03a5faddde3ed5867",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/6f97605fe308a98855f964e03a5faddde3ed5867",
        "files": [
          "ChangeLog",
          "test/ruby/test_file_exhaustive.rb",
          "version.h",
          "win32/file.c"
        ],
        "message": "merge revision(s) 49618,49640: [Backport #10858]\n\n\t* win32/file.c (rb_file_expand_path_internal): do not make invalid\n\t  (or ADS) path if the path has a drive letter, the result also\n\t  should have be under it.  [ruby-core:68130] [Bug #10858]\n\n\t* win32/file.c (rb_file_expand_path_internal): neither the drive\n\t  of base directory nor the current drive are involved in the\n\t  result if different than the drive of path.\n\t  [ruby-core:68130] [Bug #10858]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@50669 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "test/ruby/test_file_exhaustive.rb||test/ruby/test_file_exhaustive.rb",
          "version.h||version.h",
          "win32/file.c||win32/file.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "test/ruby/test_file_exhaustive.rb||test/ruby/test_file_exhaustive.rb": [
          "File: test/ruby/test_file_exhaustive.rb -> test/ruby/test_file_exhaustive.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "447:       assert_equal(@file, File.expand_path(@file + \"::$DATA\"))",
          "448:       assert_match(/\\Ac:\\//i, File.expand_path('c:'), '[ruby-core:31591]')",
          "449:       assert_match(/\\Ac:\\//i, File.expand_path('c:foo', 'd:/bar'))",
          "450:       assert_match(%r'\\Ac:/bar/foo\\z'i, File.expand_path('c:foo', 'c:/bar'))",
          "451:     end",
          "452:     if DRIVE",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "450:       assert_match(/\\Ae:\\//i, File.expand_path('e:foo', 'd:/bar'))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "784:     assert_equal(\"#{Dir.pwd}/a/b/c\", File.expand_path(obj))",
          "785:   end",
          "787:   def test_basename",
          "788:     assert_equal(File.basename(@file).sub(/\\.test$/, \"\"), File.basename(@file, \".test\"))",
          "789:     assert_equal(\"\", s = File.basename(\"\"))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "788:   def test_expand_path_with_drive_letter",
          "789:     bug10858 = '[ruby-core:68130] [Bug #10858]'",
          "790:     assert_match(%r'/bar/foo\\z'i, File.expand_path('z:foo', 'bar'), bug10858)",
          "791:     assert_equal('z:/bar/foo', File.expand_path('z:foo', '/bar'), bug10858)",
          "792:   end if DRIVE",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "2: #define RUBY_RELEASE_DATE \"2015-05-29\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 5",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 360",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 361",
          "",
          "---------------"
        ],
        "win32/file.c||win32/file.c": [
          "File: win32/file.c -> win32/file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "415:  else {",
          "417:      path_drive = wpath_pos[0];",
          "418:  }",
          "419:     }",
          "420:     else if (abs_mode == 0 && wpath_len >= 2 && wpath_pos[0] == L'~') {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "418:      wpath_pos += 2;",
          "419:      wpath_len -= 2;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "507:     if (!ignore_dir && path_drive && dir_drive) {",
          "515:      ignore_dir = 1;",
          "516:      wdir_len = 0;",
          "517:  }",
          "518:     }",
          "",
          "[Removed Lines]",
          "508:  if (towupper(path_drive) == towupper(dir_drive)) {",
          "510:      wpath_pos += 2;",
          "511:      wpath_len -= 2;",
          "512:  }",
          "513:  else {",
          "",
          "[Added Lines]",
          "510:  if (towupper(path_drive) != towupper(dir_drive)) {",
          "514:      dir_drive = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "544:  buffer_pos[0] = L'\\\\';",
          "545:  buffer_pos++;",
          "546:     }",
          "548:     if (wdir_len) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "545:     else if (!dir_drive && path_drive) {",
          "548:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5464a9474ab4b39ff41842084db64d3093108121",
      "candidate_info": {
        "commit_hash": "5464a9474ab4b39ff41842084db64d3093108121",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/5464a9474ab4b39ff41842084db64d3093108121",
        "files": [
          "ChangeLog",
          "ext/tk/lib/tkextlib/blt/tree.rb",
          "version.h"
        ],
        "message": "merge revision(s) 54020: [Backport #11890]\n\n\t* ext/tk/lib/tkextlib/blt/tree.rb: fix method name typo.\n\t[ruby-core:72510] [Bug #11890] The patch provided by Akira Matsuda.\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@54279 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "ext/tk/lib/tkextlib/blt/tree.rb||ext/tk/lib/tkextlib/blt/tree.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/tk/lib/tkextlib/blt/tree.rb||ext/tk/lib/tkextlib/blt/tree.rb": [
          "File: ext/tk/lib/tkextlib/blt/tree.rb -> ext/tk/lib/tkextlib/blt/tree.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "635:       }",
          "636:     end",
          "639:       if name",
          "640:         @path = @id = name",
          "641:       else",
          "",
          "[Removed Lines]",
          "638:     def initialzie(name = nil)",
          "",
          "[Added Lines]",
          "638:     def initialize(name = nil)",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.9\"",
          "2: #define RUBY_RELEASE_DATE \"2016-03-25\"",
          "5: #define RUBY_RELEASE_YEAR 2016",
          "6: #define RUBY_RELEASE_MONTH 3",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 476",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 477",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2b0014ca250ba6defec37420025ede253d485063",
      "candidate_info": {
        "commit_hash": "2b0014ca250ba6defec37420025ede253d485063",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/2b0014ca250ba6defec37420025ede253d485063",
        "files": [
          "ChangeLog",
          "io.c",
          "test/ruby/test_io.rb",
          "version.h"
        ],
        "message": "merge revision(s) 53329: [Backport #11885]\n\n\t* io.c (io_getpartial): remove unused kwarg from template\n\n\t* test/ruby/test_io.rb (test_readpartial_bad_args): new\n\t  [Bug #11885]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53926 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "io.c||io.c",
          "test/ruby/test_io.rb||test/ruby/test_io.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "io.c||io.c": [
          "File: io.c -> io.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2419:     long n, len;",
          "2420:     struct read_internal_arg arg;",
          "2424:     if ((len = NUM2LONG(length)) < 0) {",
          "2425:  rb_raise(rb_eArgError, \"negative length %ld given\", len);",
          "",
          "[Removed Lines]",
          "2422:     rb_scan_args(argc, argv, \"11:\", &length, &str, NULL);",
          "",
          "[Added Lines]",
          "2422:     rb_scan_args(argc, argv, \"11\", &length, &str);",
          "",
          "---------------"
        ],
        "test/ruby/test_io.rb||test/ruby/test_io.rb": [
          "File: test/ruby/test_io.rb -> test/ruby/test_io.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "2997:     t.kill",
          "2998:   end",
          "3000:   def test_sysread_unlocktmp_ensure",
          "3001:     bug8669 = '[ruby-core:56121] [Bug #8669]'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3000:   def test_readpartial_bad_args",
          "3001:     IO.pipe do |r, w|",
          "3002:       w.write '.'",
          "3003:       buf = String.new",
          "3004:       assert_raise(ArgumentError) { r.readpartial(1, buf, exception: false) }",
          "3005:       assert_raise(TypeError) { r.readpartial(1, exception: false) }",
          "3006:       assert_equal [[r],[],[]], IO.select([r], nil, nil, 1)",
          "3007:       assert_equal '.', r.readpartial(1)",
          "3008:     end",
          "3009:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.9\"",
          "2: #define RUBY_RELEASE_DATE \"2016-02-25\"",
          "5: #define RUBY_RELEASE_YEAR 2016",
          "6: #define RUBY_RELEASE_MONTH 2",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 447",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 448",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "26eb8e4b4e39aee7c1e4e9c061c9c17daaafc78b",
      "candidate_info": {
        "commit_hash": "26eb8e4b4e39aee7c1e4e9c061c9c17daaafc78b",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/26eb8e4b4e39aee7c1e4e9c061c9c17daaafc78b",
        "files": [
          "ChangeLog",
          "re.c",
          "string.c",
          "test/ruby/test_m17n.rb",
          "version.h"
        ],
        "message": "merge revision(s) 51470: [Backport #11413]\n\n\t* re.c (rb_memsearch): should match only char boundaries in wide\n\t  character encodings.  [ruby-core:70220] [Bug #11413]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@51615 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "re.c||re.c",
          "string.c||string.c",
          "test/ruby/test_m17n.rb||test/ruby/test_m17n.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "re.c||re.c": [
          "File: re.c -> re.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "223:     return -1;",
          "224: }",
          "226: long",
          "227: rb_memsearch(const void *x0, long m, const void *y0, long n, rb_encoding *enc)",
          "228: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "226: static inline long",
          "227: rb_memsearch_wchar(const unsigned char *xs, long m, const unsigned char *ys, long n)",
          "228: {",
          "229:     const unsigned char *x = xs, x0 = *xs, *y = ys;",
          "230:     enum {char_size = 2};",
          "232:     for (n -= m; n > 0; n -= char_size, y += char_size) {",
          "233:  if (x0 == *y && memcmp(x+1, y+1, m-1) == 0)",
          "234:      return y - ys;",
          "235:     }",
          "236:     return -1;",
          "237: }",
          "239: static inline long",
          "240: rb_memsearch_qchar(const unsigned char *xs, long m, const unsigned char *ys, long n)",
          "241: {",
          "242:     const unsigned char *x = xs, x0 = *xs, *y = ys;",
          "243:     enum {char_size = 4};",
          "245:     for (n -= m; n > 0; n -= char_size, y += char_size) {",
          "246:  if (x0 == *y && memcmp(x+1, y+1, m-1) == 0)",
          "247:      return y - ys;",
          "248:     }",
          "249:     return -1;",
          "250: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "243:  else",
          "244:      return -1;",
          "245:     }",
          "248:     }",
          "251:     }",
          "254:     }",
          "255: }",
          "257: #define REG_LITERAL FL_USER5",
          "",
          "[Removed Lines]",
          "246:     else if (m <= SIZEOF_VALUE) {",
          "247:  return rb_memsearch_ss(x0, m, y0, n);",
          "249:     else if (enc == rb_utf8_encoding()){",
          "250:  return rb_memsearch_qs_utf8(x0, m, y0, n);",
          "252:     else {",
          "253:  return rb_memsearch_qs(x0, m, y0, n);",
          "",
          "[Added Lines]",
          "272:     else if (rb_enc_mbminlen(enc) == 1) {",
          "273:  if (m <= SIZEOF_VALUE) {",
          "274:      return rb_memsearch_ss(x0, m, y0, n);",
          "275:  }",
          "276:  else if (enc == rb_utf8_encoding()){",
          "277:      return rb_memsearch_qs_utf8(x0, m, y0, n);",
          "278:  }",
          "280:     else if (rb_enc_mbminlen(enc) == 2) {",
          "281:  return rb_memsearch_wchar(x0, m, y0, n);",
          "283:     else if (rb_enc_mbminlen(enc) == 4) {",
          "284:  return rb_memsearch_qchar(x0, m, y0, n);",
          "286:     return rb_memsearch_qs(x0, m, y0, n);",
          "",
          "---------------"
        ],
        "string.c||string.c": [
          "File: string.c -> string.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6213:     }",
          "6215:     enc = STR_ENC_GET(str);",
          "6221:  split_type = awk;",
          "6222:     }",
          "6223:     else {",
          "6225:  if (RB_TYPE_P(spat, T_STRING)) {",
          "6226:      rb_encoding *enc2 = STR_ENC_GET(spat);",
          "",
          "[Removed Lines]",
          "6216:     if (NIL_P(spat)) {",
          "6217:  if (!NIL_P(rb_fs)) {",
          "6218:      spat = rb_fs;",
          "6219:      goto fs_set;",
          "6220:  }",
          "6224:       fs_set:",
          "",
          "[Added Lines]",
          "6216:     if (NIL_P(spat) && NIL_P(spat = rb_fs)) {",
          "",
          "---------------"
        ],
        "test/ruby/test_m17n.rb||test/ruby/test_m17n.rb": [
          "File: test/ruby/test_m17n.rb -> test/ruby/test_m17n.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1226:     each_encoding(\"abc,def\", \",\", \"abc\", \"def\") do |str, sep, *expected|",
          "1227:       assert_equal(expected, str.split(sep, -1))",
          "1228:     end",
          "1229:   end",
          "1231:   def test_nonascii_method_name",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1229:     each_encoding(\"abc\\0def\", \"\\0\", \"abc\", \"def\") do |str, sep, *expected|",
          "1230:       assert_equal(expected, str.split(sep, -1))",
          "1231:     end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "2: #define RUBY_RELEASE_DATE \"2015-08-17\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 8",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 397",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 398",
          "",
          "---------------"
        ]
      }
    }
  ]
}