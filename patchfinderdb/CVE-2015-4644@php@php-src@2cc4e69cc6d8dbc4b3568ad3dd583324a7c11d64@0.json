{
  "cve_id": "CVE-2015-4644",
  "cve_desc": "The php_pgsql_meta_data function in pgsql.c in the PostgreSQL (aka pgsql) extension in PHP before 5.4.42, 5.5.x before 5.5.26, and 5.6.x before 5.6.10 does not validate token extraction for table names, which might allow remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a crafted name.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2015-1352.",
  "repo": "php/php-src",
  "patch_hash": "2cc4e69cc6d8dbc4b3568ad3dd583324a7c11d64",
  "patch_info": {
    "commit_hash": "2cc4e69cc6d8dbc4b3568ad3dd583324a7c11d64",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/2cc4e69cc6d8dbc4b3568ad3dd583324a7c11d64",
    "files": [
      "ext/pgsql/pg_insert_002.phpt",
      "ext/pgsql/pgsql.c"
    ],
    "message": "Fixed Bug #69667 segfault in php_pgsql_meta_data\n\nIncomplete fix for #68741",
    "before_after_code_files": [
      "ext/pgsql/pg_insert_002.phpt||ext/pgsql/pg_insert_002.phpt",
      "ext/pgsql/pgsql.c||ext/pgsql/pgsql.c"
    ]
  },
  "patch_diff": {
    "ext/pgsql/pg_insert_002.phpt||ext/pgsql/pg_insert_002.phpt": [
      "File: ext/pgsql/pg_insert_002.phpt -> ext/pgsql/pg_insert_002.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: PostgreSQL pg_select() - basic test using schema",
      "3: --SKIPIF--",
      "4: <?php include(\"skipif.inc\"); ?>",
      "5: --FILE--",
      "6: <?php",
      "8: include('config.inc');",
      "10: $conn = pg_connect($conn_str);",
      "12: foreach (array('', '.', '..') as $table) {",
      "13:  var_dump(pg_insert($conn, '',  array('id' => 1, 'id2' => 1)));",
      "14: }",
      "15: ?>",
      "16: Done",
      "17: --EXPECTF--",
      "19: Warning: pg_insert(): The table name must be specified in %s on line %d",
      "20: bool(false)",
      "22: Warning: pg_insert(): The table name must be specified in %s on line %d",
      "23: bool(false)",
      "25: Warning: pg_insert(): The table name must be specified in %s on line %d",
      "26: bool(false)",
      "27: Done",
      "",
      "---------------"
    ],
    "ext/pgsql/pgsql.c||ext/pgsql/pgsql.c": [
      "File: ext/pgsql/pgsql.c -> ext/pgsql/pgsql.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "5121:  src = estrdup(table_name);",
      "5122:  tmp_name = php_strtok_r(src, \".\", &tmp_name2);",
      "5124:  if (!tmp_name2 || !*tmp_name2) {",
      "5126:   tmp_name2 = tmp_name;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5123:  if (!tmp_name) {",
      "5124:   efree(src);",
      "5125:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"The table name must be specified\");",
      "5126:   return FAILURE;",
      "5127:  }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "6131: static inline void build_tablename(smart_str *querystr, PGconn *pg_link, const char *table)",
      "6132: {",
      "6134:  size_t len;",
      "",
      "[Removed Lines]",
      "6133:  char *table_copy, *escaped, *token, *tmp;",
      "",
      "[Added Lines]",
      "6137:  char *table_copy, *escaped, *tmp;",
      "6138:  const char *token;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f93d24aa673f0d06fc8ecb5bdb211d7e82440f21",
      "candidate_info": {
        "commit_hash": "f93d24aa673f0d06fc8ecb5bdb211d7e82440f21",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/f93d24aa673f0d06fc8ecb5bdb211d7e82440f21",
        "files": [
          "ext/pgsql/pg_insert_002.phpt",
          "ext/pgsql/pgsql.c"
        ],
        "message": "Fixed Bug #69667 segfault in php_pgsql_meta_data\n\nIncomplete fix for #68741",
        "before_after_code_files": [
          "ext/pgsql/pg_insert_002.phpt||ext/pgsql/pg_insert_002.phpt",
          "ext/pgsql/pgsql.c||ext/pgsql/pgsql.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "ext/pgsql/pg_insert_002.phpt||ext/pgsql/pg_insert_002.phpt",
            "ext/pgsql/pgsql.c||ext/pgsql/pgsql.c"
          ],
          "candidate": [
            "ext/pgsql/pg_insert_002.phpt||ext/pgsql/pg_insert_002.phpt",
            "ext/pgsql/pgsql.c||ext/pgsql/pgsql.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/pgsql/pg_insert_002.phpt||ext/pgsql/pg_insert_002.phpt": [
          "File: ext/pgsql/pg_insert_002.phpt -> ext/pgsql/pg_insert_002.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: PostgreSQL pg_select() - basic test using schema",
          "3: --SKIPIF--",
          "4: <?php include(\"skipif.inc\"); ?>",
          "5: --FILE--",
          "6: <?php",
          "8: include('config.inc');",
          "10: $conn = pg_connect($conn_str);",
          "12: foreach (array('', '.', '..') as $table) {",
          "13:  var_dump(pg_insert($conn, '',  array('id' => 1, 'id2' => 1)));",
          "14: }",
          "15: ?>",
          "16: Done",
          "17: --EXPECTF--",
          "19: Warning: pg_insert(): The table name must be specified in %s on line %d",
          "20: bool(false)",
          "22: Warning: pg_insert(): The table name must be specified in %s on line %d",
          "23: bool(false)",
          "25: Warning: pg_insert(): The table name must be specified in %s on line %d",
          "26: bool(false)",
          "27: Done",
          "",
          "---------------"
        ],
        "ext/pgsql/pgsql.c||ext/pgsql/pgsql.c": [
          "File: ext/pgsql/pgsql.c -> ext/pgsql/pgsql.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5104:  src = estrdup(table_name);",
          "5105:  tmp_name = php_strtok_r(src, \".\", &tmp_name2);",
          "5107:  if (!tmp_name2 || !*tmp_name2) {",
          "5109:   tmp_name2 = tmp_name;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5106:  if (!tmp_name) {",
          "5107:   efree(src);",
          "5108:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"The table name must be specified\");",
          "5109:   return FAILURE;",
          "5110:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6112: static inline void build_tablename(smart_str *querystr, PGconn *pg_link, const char *table)",
          "6113: {",
          "6115:  size_t len;",
          "",
          "[Removed Lines]",
          "6114:  char *table_copy, *escaped, *token, *tmp;",
          "",
          "[Added Lines]",
          "6118:  char *table_copy, *escaped, *tmp;",
          "6119:  const char *token;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "545b364d560b9550f853bd8dd5ab1641225a03c2",
      "candidate_info": {
        "commit_hash": "545b364d560b9550f853bd8dd5ab1641225a03c2",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/545b364d560b9550f853bd8dd5ab1641225a03c2",
        "files": [
          "ext/dom/document.c",
          "ext/fileinfo/fileinfo.c",
          "ext/hash/hash.c",
          "ext/mysqlnd/mysqlnd.c",
          "ext/openssl/xp_ssl.c",
          "ext/pgsql/pgsql.c",
          "ext/standard/mail.c",
          "ext/standard/pack.c",
          "ext/zip/php_zip.c",
          "ext/zip/zip_stream.c"
        ],
        "message": "remove TSRMLS_*\n\neither remains or merged in from PHP5",
        "before_after_code_files": [
          "ext/dom/document.c||ext/dom/document.c",
          "ext/fileinfo/fileinfo.c||ext/fileinfo/fileinfo.c",
          "ext/hash/hash.c||ext/hash/hash.c",
          "ext/mysqlnd/mysqlnd.c||ext/mysqlnd/mysqlnd.c",
          "ext/openssl/xp_ssl.c||ext/openssl/xp_ssl.c",
          "ext/pgsql/pgsql.c||ext/pgsql/pgsql.c",
          "ext/standard/mail.c||ext/standard/mail.c",
          "ext/standard/pack.c||ext/standard/pack.c",
          "ext/zip/php_zip.c||ext/zip/php_zip.c",
          "ext/zip/zip_stream.c||ext/zip/zip_stream.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/pgsql/pgsql.c||ext/pgsql/pgsql.c"
          ],
          "candidate": [
            "ext/pgsql/pgsql.c||ext/pgsql/pgsql.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/dom/document.c||ext/dom/document.c": [
          "File: ext/dom/document.c -> ext/dom/document.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1811:    php_error_docref(NULL, E_WARNING, \"Invalid Schema file source\");",
          "1812:    RETURN_FALSE;",
          "1813:   }",
          "1815:   if (!valid_file) {",
          "1816:    php_error_docref(NULL, E_WARNING, \"Invalid Schema file source\");",
          "1817:    RETURN_FALSE;",
          "",
          "[Removed Lines]",
          "1814:   valid_file = _dom_get_valid_file_path(source, resolved_path, MAXPATHLEN  TSRMLS_CC);",
          "",
          "[Added Lines]",
          "1814:   valid_file = _dom_get_valid_file_path(source, resolved_path, MAXPATHLEN );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1911:    php_error_docref(NULL, E_WARNING, \"Invalid RelaxNG file source\");",
          "1912:    RETURN_FALSE;",
          "1913:   }",
          "1915:   if (!valid_file) {",
          "1916:    php_error_docref(NULL, E_WARNING, \"Invalid RelaxNG file source\");",
          "1917:    RETURN_FALSE;",
          "",
          "[Removed Lines]",
          "1914:   valid_file = _dom_get_valid_file_path(source, resolved_path, MAXPATHLEN  TSRMLS_CC);",
          "",
          "[Added Lines]",
          "1914:   valid_file = _dom_get_valid_file_path(source, resolved_path, MAXPATHLEN );",
          "",
          "---------------"
        ],
        "ext/fileinfo/fileinfo.c||ext/fileinfo/fileinfo.c": [
          "File: ext/fileinfo/fileinfo.c -> ext/fileinfo/fileinfo.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "528:     goto clean;",
          "529:    }",
          "530:    if (CHECK_NULL_PATH(buffer, buffer_len)) {",
          "532:     RETVAL_FALSE;",
          "533:     goto clean;",
          "534:    }",
          "",
          "[Removed Lines]",
          "531:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid path\");",
          "",
          "[Added Lines]",
          "531:     php_error_docref(NULL, E_WARNING, \"Invalid path\");",
          "",
          "---------------"
        ],
        "ext/hash/hash.c||ext/hash/hash.c": [
          "File: ext/hash/hash.c -> ext/hash/hash.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "137:  }",
          "138:  if (isfilename) {",
          "139:   if (CHECK_NULL_PATH(data, data_len)) {",
          "141:    RETURN_FALSE;",
          "142:   }",
          "143:   stream = php_stream_open_wrapper_ex(data, \"rb\", REPORT_ERRORS, NULL, DEFAULT_CONTEXT);",
          "",
          "[Removed Lines]",
          "140:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid path\");",
          "",
          "[Added Lines]",
          "140:    php_error_docref(NULL, E_WARNING, \"Invalid path\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "256:  }",
          "257:  if (isfilename) {",
          "258:   if (CHECK_NULL_PATH(data, data_len)) {",
          "260:    RETURN_FALSE;",
          "261:   }",
          "262:   stream = php_stream_open_wrapper_ex(data, \"rb\", REPORT_ERRORS, NULL, DEFAULT_CONTEXT);",
          "",
          "[Removed Lines]",
          "259:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid path\");",
          "",
          "[Added Lines]",
          "259:    php_error_docref(NULL, E_WARNING, \"Invalid path\");",
          "",
          "---------------"
        ],
        "ext/mysqlnd/mysqlnd.c||ext/mysqlnd/mysqlnd.c": [
          "File: ext/mysqlnd/mysqlnd.c -> ext/mysqlnd/mysqlnd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "519: close_conn:",
          "520:  CONN_SET_STATE(conn, CONN_QUIT_SENT);",
          "522:  SET_CLIENT_ERROR(*conn->error_info, CR_SERVER_GONE_ERROR, UNKNOWN_SQLSTATE, mysqlnd_server_gone);",
          "523:  PACKET_FREE(auth_packet);",
          "524:  DBG_RETURN(ret);",
          "",
          "[Removed Lines]",
          "521:  conn->m->send_close(conn TSRMLS_CC);",
          "",
          "[Added Lines]",
          "521:  conn->m->send_close(conn);",
          "",
          "---------------"
        ],
        "ext/openssl/xp_ssl.c||ext/openssl/xp_ssl.c": [
          "File: ext/openssl/xp_ssl.c -> ext/openssl/xp_ssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1946:    timeout = &sslsock->s.timeout;",
          "1947:   }",
          "1950:    sslsock->s.is_blocked = 0;",
          "1951:   }",
          "",
          "[Removed Lines]",
          "1949:   if (timeout && php_set_sock_blocking(sslsock->s.socket, 0 TSRMLS_CC) == SUCCESS) {",
          "",
          "[Added Lines]",
          "1949:   if (timeout && php_set_sock_blocking(sslsock->s.socket, 0) == SUCCESS) {",
          "",
          "---------------"
        ],
        "ext/pgsql/pgsql.c||ext/pgsql/pgsql.c": [
          "File: ext/pgsql/pgsql.c -> ext/pgsql/pgsql.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5506:  tmp_name = php_strtok_r(src, \".\", &tmp_name2);",
          "5507:  if (!tmp_name) {",
          "5508:   efree(src);",
          "5510:   return FAILURE;",
          "5511:  }",
          "5512:  if (!tmp_name2 || !*tmp_name2) {",
          "",
          "[Removed Lines]",
          "5509:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"The table name must be specified\");",
          "",
          "[Added Lines]",
          "5509:   php_error_docref(NULL, E_WARNING, \"The table name must be specified\");",
          "",
          "---------------"
        ],
        "ext/standard/mail.c||ext/standard/mail.c": [
          "File: ext/standard/mail.c -> ext/standard/mail.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "331:  }",
          "333:  if (hdr && php_mail_detect_multiple_crlf(hdr)) {",
          "335:   MAIL_RET(0);",
          "336:  }",
          "",
          "[Removed Lines]",
          "334:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Multiple or malformed newlines found in additional_header\");",
          "",
          "[Added Lines]",
          "334:   php_error_docref(NULL, E_WARNING, \"Multiple or malformed newlines found in additional_header\");",
          "",
          "---------------"
        ],
        "ext/standard/pack.c||ext/standard/pack.c": [
          "File: ext/standard/pack.c -> ext/standard/pack.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "700:   }",
          "702:   if (size != 0 && size != -1 && size < 0) {",
          "704:    zval_dtor(return_value);",
          "705:    RETURN_FALSE;",
          "706:   }",
          "",
          "[Removed Lines]",
          "703:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Type %c: integer overflow\", type);",
          "",
          "[Added Lines]",
          "703:    php_error_docref(NULL, E_WARNING, \"Type %c: integer overflow\", type);",
          "",
          "---------------"
        ],
        "ext/zip/php_zip.c||ext/zip/php_zip.c": [
          "File: ext/zip/php_zip.c -> ext/zip/php_zip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2293:  ZIP_FROM_OBJECT(intern, this);",
          "2296:    &name, &name_len, &comp_method, &comp_flags) == FAILURE) {",
          "2297:   return;",
          "2298:  }",
          "2300:  if (name_len < 1) {",
          "2302:  }",
          "2304:  idx = zip_name_locate(intern, name, 0);",
          "",
          "[Removed Lines]",
          "2295:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"sl|l\",",
          "2301:   php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"Empty string as entry name\");",
          "",
          "[Added Lines]",
          "2295:  if (zend_parse_parameters(ZEND_NUM_ARGS(), \"sl|l\",",
          "2301:   php_error_docref(NULL, E_NOTICE, \"Empty string as entry name\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2330:  ZIP_FROM_OBJECT(intern, this);",
          "2333:    &index, &comp_method, &comp_flags) == FAILURE) {",
          "2334:   return;",
          "2335:  }",
          "",
          "[Removed Lines]",
          "2332:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"ll|l\",",
          "",
          "[Added Lines]",
          "2332:  if (zend_parse_parameters(ZEND_NUM_ARGS(), \"ll|l\",",
          "",
          "---------------"
        ],
        "ext/zip/zip_stream.c||ext/zip/zip_stream.c": [
          "File: ext/zip/zip_stream.c -> ext/zip/zip_stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:    zip_error_t *err;",
          "62:    err = zip_file_get_error(self->zf);",
          "63:    stream->eof = 1;",
          "65:    zip_error_fini(err);",
          "66: #endif",
          "67:    return 0;",
          "",
          "[Removed Lines]",
          "64:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Zip stream error: %s\", zip_error_strerror(err));",
          "",
          "[Added Lines]",
          "64:    php_error_docref(NULL, E_WARNING, \"Zip stream error: %s\", zip_error_strerror(err));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "716fe10d97454b6dfe8b2c1c3e0e3e64369ec92d",
      "candidate_info": {
        "commit_hash": "716fe10d97454b6dfe8b2c1c3e0e3e64369ec92d",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/716fe10d97454b6dfe8b2c1c3e0e3e64369ec92d",
        "files": [
          "ext/pgsql/pg_insert_002.phpt"
        ],
        "message": "fix new test",
        "before_after_code_files": [
          "ext/pgsql/pg_insert_002.phpt||ext/pgsql/pg_insert_002.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/pgsql/pg_insert_002.phpt||ext/pgsql/pg_insert_002.phpt"
          ],
          "candidate": [
            "ext/pgsql/pg_insert_002.phpt||ext/pgsql/pg_insert_002.phpt"
          ]
        }
      },
      "candidate_diff": {
        "ext/pgsql/pg_insert_002.phpt||ext/pgsql/pg_insert_002.phpt": [
          "File: ext/pgsql/pg_insert_002.phpt -> ext/pgsql/pg_insert_002.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: $conn = pg_connect($conn_str);",
          "12: foreach (array('', '.', '..') as $table) {",
          "14: }",
          "15: ?>",
          "16: Done",
          "",
          "[Removed Lines]",
          "13:  var_dump(pg_insert($conn, '',  array('id' => 1, 'id2' => 1)));",
          "",
          "[Added Lines]",
          "13:  var_dump(pg_insert($conn, $table,  array('id' => 1, 'id2' => 1)));",
          "",
          "---------------"
        ]
      }
    }
  ]
}