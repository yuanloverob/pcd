{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2b13cd99d30c78d4ca13380fcb9484ad1aba829f",
      "candidate_info": {
        "commit_hash": "2b13cd99d30c78d4ca13380fcb9484ad1aba829f",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/2b13cd99d30c78d4ca13380fcb9484ad1aba829f",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c"
        ],
        "message": "Early detection of SQLITE_TOOBIG when processing nested queries.\n\nFossilOrigin-Name: 5d85d80ef8b216639244c6f4e6a2c0050af3cf9c3998f372bae4a19c0430f2fd",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b2ce5ed175cb5029ac07392ae371c86eeec23c74624aad007dee51cf359f3eeb",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4797:   pTab->nRowLogEst = 200; assert( 200==sqlite3LogEst(1048576) );",
          "4798:   pTab->tabFlags |= TF_Ephemeral;",
          "4801: }",
          "",
          "[Removed Lines]",
          "4800:   return SQLITE_OK;",
          "",
          "[Added Lines]",
          "4800:   return pParse->rc;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5102cf8df5147aa9f230334d4d0d5b4555957943",
      "candidate_info": {
        "commit_hash": "5102cf8df5147aa9f230334d4d0d5b4555957943",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/5102cf8df5147aa9f230334d4d0d5b4555957943",
        "files": [
          "ext/rtree/rtree.c",
          "ext/rtree/rtree1.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Early detection and reporting of too few columns in an rtree CREATE VIRTUAL TABLE statement.\n\nFossilOrigin-Name: ef73107f475e40e6bdd8b722e96992070f81fd2b7a3cb718ec8f251c89ca3e81",
        "before_after_code_files": [
          "ext/rtree/rtree.c||ext/rtree/rtree.c",
          "ext/rtree/rtree1.test||ext/rtree/rtree1.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/rtree/rtree.c||ext/rtree/rtree.c": [
          "File: ext/rtree/rtree.c -> ext/rtree/rtree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3706:   };",
          "3711:     return SQLITE_ERROR;",
          "3712:   }",
          "",
          "[Removed Lines]",
          "3709:   if( argc>RTREE_MAX_AUX_COLUMN+3 ){",
          "",
          "[Added Lines]",
          "3709:   if( argc<6 || argc>RTREE_MAX_AUX_COLUMN+3 ){",
          "",
          "---------------"
        ],
        "ext/rtree/rtree1.test||ext/rtree/rtree1.test": [
          "File: ext/rtree/rtree1.test -> ext/rtree/rtree1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "113:   catchsql { DROP TABLE t1 }",
          "114: }",
          "116: # Like execsql except display output as integer where that can be",
          "117: # done without loss of information.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "115: do_catchsql_test rtree-1.3.1000 {",
          "116:   CREATE VIRTUAL TABLE t1000 USING rtree;",
          "117: } {1 {Too few columns for an rtree table}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 97fb5a72f91a44d579466e67c33aa862384c4d1c95c2010cf4ae9dbd172bbcfb",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "94c7ab5038510e3eb84920f5ef2b0ec704d7b470",
      "candidate_info": {
        "commit_hash": "94c7ab5038510e3eb84920f5ef2b0ec704d7b470",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/94c7ab5038510e3eb84920f5ef2b0ec704d7b470",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/test_vfs.c"
        ],
        "message": "In the test_vfs.c VFS, if a Tcl xWrite script returns \"SQLITE_OMIT\", silently omit the write() call.\n\nFossilOrigin-Name: 8b5a621e2ee3bb9d7d4f905217872e7e59153be9477aaa626cea287d56710b5b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/test_vfs.c||src/test_vfs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e859d3184606dd453b9fc4ee388922d7be4b61aad84a66ac82107935ffd56f3a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/test_vfs.c||src/test_vfs.c": [
          "File: src/test_vfs.c -> src/test_vfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "235:     { SQLITE_BUSY,     \"SQLITE_BUSY\"   },",
          "236:     { SQLITE_READONLY, \"SQLITE_READONLY\"   },",
          "237:     { SQLITE_READONLY_CANTINIT, \"SQLITE_READONLY_CANTINIT\"   },",
          "238:   };",
          "240:   const char *z;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "238:     { -1,              \"SQLITE_OMIT\"   },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "382:         Tcl_NewWideIntObj(iOfst), Tcl_NewIntObj(iAmt)",
          "383:     );",
          "384:     tvfsResultCode(p, &rc);",
          "385:   }",
          "387:   if( rc==SQLITE_OK && tvfsInjectFullerr(p) ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "386:     if( rc<0 ) return SQLITE_OK;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e6a9efb976daf2814b6abfd8e54692ffa9aa78ff",
      "candidate_info": {
        "commit_hash": "e6a9efb976daf2814b6abfd8e54692ffa9aa78ff",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e6a9efb976daf2814b6abfd8e54692ffa9aa78ff",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c"
        ],
        "message": "Ensure that the btree cursor is correctly set up prior to backing it up as part of a delete operation on a divider cell in an index.\n\nFossilOrigin-Name: a3ea1a822d3a110f4f186f2fc8550f435c8c98635d058096b7be9d4df7066b8b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: d59567dda231e7ffec437d5e055676cf42d791196406cdc696cafa2583eb483b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "8772:   if( !pPage->leaf ){",
          "8773:     rc = sqlite3BtreePrevious(pCur, 0);",
          "8774:     assert( rc!=SQLITE_DONE );",
          "8775:     if( rc ) return rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8773:     pCur->skipNext = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3e534eac193a746a6f2e71796c7ad31c5d93016b",
      "candidate_info": {
        "commit_hash": "3e534eac193a746a6f2e71796c7ad31c5d93016b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3e534eac193a746a6f2e71796c7ad31c5d93016b",
        "files": [
          "ext/fts3/fts3.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Improved shadow table corruption detection in the matchinfo() function of FTS3.\n\nFossilOrigin-Name: 567be3bb1e8b6477f3bf1c7b4cd6ec066fba69d0dcf8785632e244ce25db639f",
        "before_after_code_files": [
          "ext/fts3/fts3.c||ext/fts3/fts3.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3.c||ext/fts3/fts3.c": [
          "File: ext/fts3/fts3.c -> ext/fts3/fts3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5603:   if( pExpr ){",
          "5604:     Fts3Phrase *pPhrase = pExpr->pPhrase;",
          "5605:     if( pPhrase && pPhrase->doclist.pList ){",
          "",
          "[Removed Lines]",
          "5602: static void fts3EvalUpdateCounts(Fts3Expr *pExpr){",
          "",
          "[Added Lines]",
          "5602: static void fts3EvalUpdateCounts(Fts3Expr *pExpr, int nCol){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5607:       char *p = pPhrase->doclist.pList;",
          "5609:       assert( *p );",
          "5611:         u8 c = 0;",
          "5612:         int iCnt = 0;",
          "5613:         while( 0xFE & (*p | c) ){",
          "",
          "[Removed Lines]",
          "5610:       while( 1 ){",
          "",
          "[Added Lines]",
          "5610:       do{",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5623:         if( *p==0x00 ) break;",
          "5624:         p++;",
          "5625:         p += fts3GetVarint32(p, &iCol);",
          "5627:     }",
          "5631:   }",
          "5632: }",
          "",
          "[Removed Lines]",
          "5626:       }",
          "5629:     fts3EvalUpdateCounts(pExpr->pLeft);",
          "5630:     fts3EvalUpdateCounts(pExpr->pRight);",
          "",
          "[Added Lines]",
          "5626:       }while( iCol<nCol );",
          "5629:     fts3EvalUpdateCounts(pExpr->pLeft, nCol);",
          "5630:     fts3EvalUpdateCounts(pExpr->pRight, nCol);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5697:       );",
          "5699:       if( rc==SQLITE_OK && pCsr->isEof==0 ){",
          "5701:       }",
          "5702:     }",
          "",
          "[Removed Lines]",
          "5700:         fts3EvalUpdateCounts(pRoot);",
          "",
          "[Added Lines]",
          "5700:         fts3EvalUpdateCounts(pRoot, pTab->nColumn);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 473626d5579dd19023abccaf7c1822ac0c883a0b98904837ea096fa16e4f41c4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}