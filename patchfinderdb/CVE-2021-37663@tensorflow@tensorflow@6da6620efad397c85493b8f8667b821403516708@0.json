{
  "cve_id": "CVE-2021-37663",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions due to incomplete validation in `tf.raw_ops.QuantizeV2`, an attacker can trigger undefined behavior via binding a reference to a null pointer or can access data outside the bounds of heap allocated arrays. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/quantize_op.cc#L59) has some validation but does not check that `min_range` and `max_range` both have the same non-zero number of elements. If `axis` is provided (i.e., not `-1`), then validation should check that it is a value in range for the rank of `input` tensor and then the lengths of `min_range` and `max_range` inputs match the `axis` dimension of the `input` tensor. We have patched the issue in GitHub commit 6da6620efad397c85493b8f8667b821403516708. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "6da6620efad397c85493b8f8667b821403516708",
  "patch_info": {
    "commit_hash": "6da6620efad397c85493b8f8667b821403516708",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/6da6620efad397c85493b8f8667b821403516708",
    "files": [
      "tensorflow/core/kernels/quantize_op.cc"
    ],
    "message": "Secure tf.raw_ops.QuantizeV2\n\nValidate size and shape of min_range and max_range\nEnsure axis is within input dims limits\n\nPiperOrigin-RevId: 387232799\nChange-Id: I36975281f7b5758e9e31a8dcc73fe610ef456318",
    "before_after_code_files": [
      "tensorflow/core/kernels/quantize_op.cc||tensorflow/core/kernels/quantize_op.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/quantize_op.cc||tensorflow/core/kernels/quantize_op.cc": [
      "File: tensorflow/core/kernels/quantize_op.cc -> tensorflow/core/kernels/quantize_op.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "114:     int num_slices = 1;",
      "115:     if (axis_ > -1) {",
      "116:       num_slices = input.dim_size(axis_);",
      "117:     }",
      "119:     const TensorShape& minmax_shape = ctx->input(1).shape();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "116:       OP_REQUIRES(",
      "117:           ctx, input.dims() > axis_,",
      "118:           errors::InvalidArgument(",
      "119:               \"Axis is on a zero-based index, so its value must always be less \"",
      "120:               \"than number of input's dims, but given axis value was \",",
      "121:               axis_, \" and input's dims was \", input.dims()));",
      "123:       OP_REQUIRES(ctx, input_min_range.dims() == 1,",
      "124:                   errors::InvalidArgument(",
      "125:                       \"If axis is specified, min_range must be a 1-D tensor \"",
      "126:                       \"whose size matches the axis dimension of the input and \"",
      "127:                       \"output tensors, but min_range dims are \",",
      "128:                       input_min_range.dims()));",
      "129:       OP_REQUIRES(ctx, input_min_range.dim_size(0) == num_slices,",
      "130:                   errors::InvalidArgument(",
      "131:                       \"If axis is specified, min_range must be a 1-D tensor \"",
      "132:                       \"whose size matches the axis dimension of the input and \"",
      "133:                       \"output tensors, but min_range is a 1-D tensor of size \",",
      "134:                       input_min_range.dim_size(0),",
      "135:                       \" and input's axis dimension is of size \", num_slices));",
      "136:       OP_REQUIRES(ctx, input_max_range.dims() == 1,",
      "137:                   errors::InvalidArgument(",
      "138:                       \"If axis is specified, max_range must be a 1-D tensor \"",
      "139:                       \"whose size matches the axis dimension of the input and \"",
      "140:                       \"output tensors, but max_range dims are \",",
      "141:                       input_max_range.dims()));",
      "142:       OP_REQUIRES(ctx, input_max_range.dim_size(0) == num_slices,",
      "143:                   errors::InvalidArgument(",
      "144:                       \"If axis is specified, max_range must be a 1-D tensor \"",
      "145:                       \"whose size matches the axis dimension of the input and \"",
      "146:                       \"output tensors, but max_range is a 1-D tensor of size \",",
      "147:                       input_max_range.dim_size(0),",
      "148:                       \" and input's axis dimension is of size \", num_slices));",
      "149:     } else {",
      "150:       OP_REQUIRES(ctx, input_min_range.NumElements() == 1,",
      "151:                   errors::InvalidArgument(",
      "152:                       \"If axis is not specified, min_range must contain a \"",
      "153:                       \"single float element, but it contains \",",
      "154:                       input_min_range.NumElements(), \" elements\"));",
      "155:       OP_REQUIRES(ctx, input_max_range.NumElements() == 1,",
      "156:                   errors::InvalidArgument(",
      "157:                       \"If axis is not specified, max_range must contain a \"",
      "158:                       \"single float element, but it contains \",",
      "159:                       input_max_range.NumElements(), \" elements\"));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "30e51929f5e39910a1530e9e69e9adbd5804217b",
      "candidate_info": {
        "commit_hash": "30e51929f5e39910a1530e9e69e9adbd5804217b",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/30e51929f5e39910a1530e9e69e9adbd5804217b",
        "files": [
          "tensorflow/core/kernels/quantize_op.cc"
        ],
        "message": "Secure tf.raw_ops.QuantizeV2\n\nValidate size and shape of min_range and max_range\nEnsure axis is within input dims limits\n\nPiperOrigin-RevId: 387232799\nChange-Id: I36975281f7b5758e9e31a8dcc73fe610ef456318",
        "before_after_code_files": [
          "tensorflow/core/kernels/quantize_op.cc||tensorflow/core/kernels/quantize_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/quantize_op.cc||tensorflow/core/kernels/quantize_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/quantize_op.cc||tensorflow/core/kernels/quantize_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/quantize_op.cc||tensorflow/core/kernels/quantize_op.cc": [
          "File: tensorflow/core/kernels/quantize_op.cc -> tensorflow/core/kernels/quantize_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:     int num_slices = 1;",
          "115:     if (axis_ > -1) {",
          "116:       num_slices = input.dim_size(axis_);",
          "117:     }",
          "119:     const TensorShape& minmax_shape = ctx->input(1).shape();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "116:       OP_REQUIRES(",
          "117:           ctx, input.dims() > axis_,",
          "118:           errors::InvalidArgument(",
          "119:               \"Axis is on a zero-based index, so its value must always be less \"",
          "120:               \"than number of input's dims, but given axis value was \",",
          "121:               axis_, \" and input's dims was \", input.dims()));",
          "123:       OP_REQUIRES(ctx, input_min_range.dims() == 1,",
          "124:                   errors::InvalidArgument(",
          "125:                       \"If axis is specified, min_range must be a 1-D tensor \"",
          "126:                       \"whose size matches the axis dimension of the input and \"",
          "127:                       \"output tensors, but min_range dims are \",",
          "128:                       input_min_range.dims()));",
          "129:       OP_REQUIRES(ctx, input_min_range.dim_size(0) == num_slices,",
          "130:                   errors::InvalidArgument(",
          "131:                       \"If axis is specified, min_range must be a 1-D tensor \"",
          "132:                       \"whose size matches the axis dimension of the input and \"",
          "133:                       \"output tensors, but min_range is a 1-D tensor of size \",",
          "134:                       input_min_range.dim_size(0),",
          "135:                       \" and input's axis dimension is of size \", num_slices));",
          "136:       OP_REQUIRES(ctx, input_max_range.dims() == 1,",
          "137:                   errors::InvalidArgument(",
          "138:                       \"If axis is specified, max_range must be a 1-D tensor \"",
          "139:                       \"whose size matches the axis dimension of the input and \"",
          "140:                       \"output tensors, but max_range dims are \",",
          "141:                       input_max_range.dims()));",
          "142:       OP_REQUIRES(ctx, input_max_range.dim_size(0) == num_slices,",
          "143:                   errors::InvalidArgument(",
          "144:                       \"If axis is specified, max_range must be a 1-D tensor \"",
          "145:                       \"whose size matches the axis dimension of the input and \"",
          "146:                       \"output tensors, but max_range is a 1-D tensor of size \",",
          "147:                       input_max_range.dim_size(0),",
          "148:                       \" and input's axis dimension is of size \", num_slices));",
          "149:     } else {",
          "150:       OP_REQUIRES(ctx, input_min_range.NumElements() == 1,",
          "151:                   errors::InvalidArgument(",
          "152:                       \"If axis is not specified, min_range must contain a \"",
          "153:                       \"single float element, but it contains \",",
          "154:                       input_min_range.NumElements(), \" elements\"));",
          "155:       OP_REQUIRES(ctx, input_max_range.NumElements() == 1,",
          "156:                   errors::InvalidArgument(",
          "157:                       \"If axis is not specified, max_range must contain a \"",
          "158:                       \"single float element, but it contains \",",
          "159:                       input_max_range.NumElements(), \" elements\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ab483b42dcc830ebb5e73fb455752e7bfe4a0de7",
      "candidate_info": {
        "commit_hash": "ab483b42dcc830ebb5e73fb455752e7bfe4a0de7",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/ab483b42dcc830ebb5e73fb455752e7bfe4a0de7",
        "files": [
          "tensorflow/core/kernels/quantize_op.cc"
        ],
        "message": "Secure tf.raw_ops.QuantizeV2\n\nValidate size and shape of min_range and max_range\nEnsure axis is within input dims limits\n\nPiperOrigin-RevId: 387232799\nChange-Id: I36975281f7b5758e9e31a8dcc73fe610ef456318",
        "before_after_code_files": [
          "tensorflow/core/kernels/quantize_op.cc||tensorflow/core/kernels/quantize_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/quantize_op.cc||tensorflow/core/kernels/quantize_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/quantize_op.cc||tensorflow/core/kernels/quantize_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/quantize_op.cc||tensorflow/core/kernels/quantize_op.cc": [
          "File: tensorflow/core/kernels/quantize_op.cc -> tensorflow/core/kernels/quantize_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:     int num_slices = 1;",
          "115:     if (axis_ > -1) {",
          "116:       num_slices = input.dim_size(axis_);",
          "117:     }",
          "119:     const TensorShape& minmax_shape = ctx->input(1).shape();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "116:       OP_REQUIRES(",
          "117:           ctx, input.dims() > axis_,",
          "118:           errors::InvalidArgument(",
          "119:               \"Axis is on a zero-based index, so its value must always be less \"",
          "120:               \"than number of input's dims, but given axis value was \",",
          "121:               axis_, \" and input's dims was \", input.dims()));",
          "123:       OP_REQUIRES(ctx, input_min_range.dims() == 1,",
          "124:                   errors::InvalidArgument(",
          "125:                       \"If axis is specified, min_range must be a 1-D tensor \"",
          "126:                       \"whose size matches the axis dimension of the input and \"",
          "127:                       \"output tensors, but min_range dims are \",",
          "128:                       input_min_range.dims()));",
          "129:       OP_REQUIRES(ctx, input_min_range.dim_size(0) == num_slices,",
          "130:                   errors::InvalidArgument(",
          "131:                       \"If axis is specified, min_range must be a 1-D tensor \"",
          "132:                       \"whose size matches the axis dimension of the input and \"",
          "133:                       \"output tensors, but min_range is a 1-D tensor of size \",",
          "134:                       input_min_range.dim_size(0),",
          "135:                       \" and input's axis dimension is of size \", num_slices));",
          "136:       OP_REQUIRES(ctx, input_max_range.dims() == 1,",
          "137:                   errors::InvalidArgument(",
          "138:                       \"If axis is specified, max_range must be a 1-D tensor \"",
          "139:                       \"whose size matches the axis dimension of the input and \"",
          "140:                       \"output tensors, but max_range dims are \",",
          "141:                       input_max_range.dims()));",
          "142:       OP_REQUIRES(ctx, input_max_range.dim_size(0) == num_slices,",
          "143:                   errors::InvalidArgument(",
          "144:                       \"If axis is specified, max_range must be a 1-D tensor \"",
          "145:                       \"whose size matches the axis dimension of the input and \"",
          "146:                       \"output tensors, but max_range is a 1-D tensor of size \",",
          "147:                       input_max_range.dim_size(0),",
          "148:                       \" and input's axis dimension is of size \", num_slices));",
          "149:     } else {",
          "150:       OP_REQUIRES(ctx, input_min_range.NumElements() == 1,",
          "151:                   errors::InvalidArgument(",
          "152:                       \"If axis is not specified, min_range must contain a \"",
          "153:                       \"single float element, but it contains \",",
          "154:                       input_min_range.NumElements(), \" elements\"));",
          "155:       OP_REQUIRES(ctx, input_max_range.NumElements() == 1,",
          "156:                   errors::InvalidArgument(",
          "157:                       \"If axis is not specified, max_range must contain a \"",
          "158:                       \"single float element, but it contains \",",
          "159:                       input_max_range.NumElements(), \" elements\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e77697ba0929f222cda0a50072e2c753007eb723",
      "candidate_info": {
        "commit_hash": "e77697ba0929f222cda0a50072e2c753007eb723",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/e77697ba0929f222cda0a50072e2c753007eb723",
        "files": [
          "tensorflow/core/kernels/quantize_op.cc"
        ],
        "message": "Secure tf.raw_ops.QuantizeV2\n\nValidate size and shape of min_range and max_range\nEnsure axis is within input dims limits\n\nPiperOrigin-RevId: 387232799\nChange-Id: I36975281f7b5758e9e31a8dcc73fe610ef456318",
        "before_after_code_files": [
          "tensorflow/core/kernels/quantize_op.cc||tensorflow/core/kernels/quantize_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/quantize_op.cc||tensorflow/core/kernels/quantize_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/quantize_op.cc||tensorflow/core/kernels/quantize_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/quantize_op.cc||tensorflow/core/kernels/quantize_op.cc": [
          "File: tensorflow/core/kernels/quantize_op.cc -> tensorflow/core/kernels/quantize_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:     int num_slices = 1;",
          "115:     if (axis_ > -1) {",
          "116:       num_slices = input.dim_size(axis_);",
          "117:     }",
          "119:     const TensorShape& minmax_shape = ctx->input(1).shape();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "116:       OP_REQUIRES(",
          "117:           ctx, input.dims() > axis_,",
          "118:           errors::InvalidArgument(",
          "119:               \"Axis is on a zero-based index, so its value must always be less \"",
          "120:               \"than number of input's dims, but given axis value was \",",
          "121:               axis_, \" and input's dims was \", input.dims()));",
          "123:       OP_REQUIRES(ctx, input_min_range.dims() == 1,",
          "124:                   errors::InvalidArgument(",
          "125:                       \"If axis is specified, min_range must be a 1-D tensor \"",
          "126:                       \"whose size matches the axis dimension of the input and \"",
          "127:                       \"output tensors, but min_range dims are \",",
          "128:                       input_min_range.dims()));",
          "129:       OP_REQUIRES(ctx, input_min_range.dim_size(0) == num_slices,",
          "130:                   errors::InvalidArgument(",
          "131:                       \"If axis is specified, min_range must be a 1-D tensor \"",
          "132:                       \"whose size matches the axis dimension of the input and \"",
          "133:                       \"output tensors, but min_range is a 1-D tensor of size \",",
          "134:                       input_min_range.dim_size(0),",
          "135:                       \" and input's axis dimension is of size \", num_slices));",
          "136:       OP_REQUIRES(ctx, input_max_range.dims() == 1,",
          "137:                   errors::InvalidArgument(",
          "138:                       \"If axis is specified, max_range must be a 1-D tensor \"",
          "139:                       \"whose size matches the axis dimension of the input and \"",
          "140:                       \"output tensors, but max_range dims are \",",
          "141:                       input_max_range.dims()));",
          "142:       OP_REQUIRES(ctx, input_max_range.dim_size(0) == num_slices,",
          "143:                   errors::InvalidArgument(",
          "144:                       \"If axis is specified, max_range must be a 1-D tensor \"",
          "145:                       \"whose size matches the axis dimension of the input and \"",
          "146:                       \"output tensors, but max_range is a 1-D tensor of size \",",
          "147:                       input_max_range.dim_size(0),",
          "148:                       \" and input's axis dimension is of size \", num_slices));",
          "149:     } else {",
          "150:       OP_REQUIRES(ctx, input_min_range.NumElements() == 1,",
          "151:                   errors::InvalidArgument(",
          "152:                       \"If axis is not specified, min_range must contain a \"",
          "153:                       \"single float element, but it contains \",",
          "154:                       input_min_range.NumElements(), \" elements\"));",
          "155:       OP_REQUIRES(ctx, input_max_range.NumElements() == 1,",
          "156:                   errors::InvalidArgument(",
          "157:                       \"If axis is not specified, max_range must contain a \"",
          "158:                       \"single float element, but it contains \",",
          "159:                       input_max_range.NumElements(), \" elements\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e4cb9e7a7de8a55b4e3867d7d7e73f71612bbb24",
      "candidate_info": {
        "commit_hash": "e4cb9e7a7de8a55b4e3867d7d7e73f71612bbb24",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/e4cb9e7a7de8a55b4e3867d7d7e73f71612bbb24",
        "files": [
          "tensorflow/core/kernels/quantize_op.cc"
        ],
        "message": "Secure tf.raw_ops.QuantizeV2\n\nValidate size and shape of min_range and max_range\nEnsure axis is within input dims limits\n\nPiperOrigin-RevId: 387232799\nChange-Id: I36975281f7b5758e9e31a8dcc73fe610ef456318",
        "before_after_code_files": [
          "tensorflow/core/kernels/quantize_op.cc||tensorflow/core/kernels/quantize_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/quantize_op.cc||tensorflow/core/kernels/quantize_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/quantize_op.cc||tensorflow/core/kernels/quantize_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/quantize_op.cc||tensorflow/core/kernels/quantize_op.cc": [
          "File: tensorflow/core/kernels/quantize_op.cc -> tensorflow/core/kernels/quantize_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:     int num_slices = 1;",
          "115:     if (axis_ > -1) {",
          "116:       num_slices = input.dim_size(axis_);",
          "117:     }",
          "119:     const TensorShape& minmax_shape = ctx->input(1).shape();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "116:       OP_REQUIRES(",
          "117:           ctx, input.dims() > axis_,",
          "118:           errors::InvalidArgument(",
          "119:               \"Axis is on a zero-based index, so its value must always be less \"",
          "120:               \"than number of input's dims, but given axis value was \",",
          "121:               axis_, \" and input's dims was \", input.dims()));",
          "123:       OP_REQUIRES(ctx, input_min_range.dims() == 1,",
          "124:                   errors::InvalidArgument(",
          "125:                       \"If axis is specified, min_range must be a 1-D tensor \"",
          "126:                       \"whose size matches the axis dimension of the input and \"",
          "127:                       \"output tensors, but min_range dims are \",",
          "128:                       input_min_range.dims()));",
          "129:       OP_REQUIRES(ctx, input_min_range.dim_size(0) == num_slices,",
          "130:                   errors::InvalidArgument(",
          "131:                       \"If axis is specified, min_range must be a 1-D tensor \"",
          "132:                       \"whose size matches the axis dimension of the input and \"",
          "133:                       \"output tensors, but min_range is a 1-D tensor of size \",",
          "134:                       input_min_range.dim_size(0),",
          "135:                       \" and input's axis dimension is of size \", num_slices));",
          "136:       OP_REQUIRES(ctx, input_max_range.dims() == 1,",
          "137:                   errors::InvalidArgument(",
          "138:                       \"If axis is specified, max_range must be a 1-D tensor \"",
          "139:                       \"whose size matches the axis dimension of the input and \"",
          "140:                       \"output tensors, but max_range dims are \",",
          "141:                       input_max_range.dims()));",
          "142:       OP_REQUIRES(ctx, input_max_range.dim_size(0) == num_slices,",
          "143:                   errors::InvalidArgument(",
          "144:                       \"If axis is specified, max_range must be a 1-D tensor \"",
          "145:                       \"whose size matches the axis dimension of the input and \"",
          "146:                       \"output tensors, but max_range is a 1-D tensor of size \",",
          "147:                       input_max_range.dim_size(0),",
          "148:                       \" and input's axis dimension is of size \", num_slices));",
          "149:     } else {",
          "150:       OP_REQUIRES(ctx, input_min_range.NumElements() == 1,",
          "151:                   errors::InvalidArgument(",
          "152:                       \"If axis is not specified, min_range must contain a \"",
          "153:                       \"single float element, but it contains \",",
          "154:                       input_min_range.NumElements(), \" elements\"));",
          "155:       OP_REQUIRES(ctx, input_max_range.NumElements() == 1,",
          "156:                   errors::InvalidArgument(",
          "157:                       \"If axis is not specified, max_range must contain a \"",
          "158:                       \"single float element, but it contains \",",
          "159:                       input_max_range.NumElements(), \" elements\"));",
          "",
          "---------------"
        ]
      }
    }
  ]
}