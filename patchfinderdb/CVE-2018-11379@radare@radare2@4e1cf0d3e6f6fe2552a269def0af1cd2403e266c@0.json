{
  "cve_id": "CVE-2018-11379",
  "cve_desc": "The get_debug_info() function in radare2 2.5.0 allows remote attackers to cause a denial of service (heap-based out-of-bounds read and application crash) via a crafted PE file.",
  "repo": "radare/radare2",
  "patch_hash": "4e1cf0d3e6f6fe2552a269def0af1cd2403e266c",
  "patch_info": {
    "commit_hash": "4e1cf0d3e6f6fe2552a269def0af1cd2403e266c",
    "repo": "radare/radare2",
    "commit_url": "https://github.com/radare/radare2/commit/4e1cf0d3e6f6fe2552a269def0af1cd2403e266c",
    "files": [
      "libr/bin/format/pe/pe.c"
    ],
    "message": "Fix crash in pe",
    "before_after_code_files": [
      "libr/bin/format/pe/pe.c||libr/bin/format/pe/pe.c"
    ]
  },
  "patch_diff": {
    "libr/bin/format/pe/pe.c||libr/bin/format/pe/pe.c": [
      "File: libr/bin/format/pe/pe.c -> libr/bin/format/pe/pe.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2733: static void get_nb10(ut8* dbg_data, SCV_NB10_HEADER* res) {",
      "2734:  const int nb10sz = 16;",
      "2737: }",
      "2739: static int get_debug_info(struct PE_(r_bin_pe_obj_t)* bin, PE_(image_debug_directory_entry)* dbg_dir_entry, ut8* dbg_data, int dbg_data_len, SDebugInfo* res) {",
      "",
      "[Removed Lines]",
      "2735:  memcpy (res, dbg_data, nb10sz);",
      "2736:  res->file_name = (ut8*) strdup ((const char*) dbg_data + nb10sz);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2772:    res->file_name[sizeof (res->file_name) - 1] = 0;",
      "2773:    rsds_hdr.free ((struct SCV_RSDS_HEADER*) &rsds_hdr);",
      "2774:   } else if (strncmp ((const char*) dbg_data, \"NB10\", 4) == 0) {",
      "2776:    init_cv_nb10_header (&nb10_hdr);",
      "2777:    get_nb10 (dbg_data, &nb10_hdr);",
      "2778:    snprintf (res->guidstr, sizeof (res->guidstr),",
      "2779:     \"%x%x\", nb10_hdr.timestamp, nb10_hdr.age);",
      "2782:    res->file_name[sizeof (res->file_name) - 1] = 0;",
      "2783:    nb10_hdr.free ((struct SCV_NB10_HEADER*) &nb10_hdr);",
      "2784:   } else {",
      "",
      "[Removed Lines]",
      "2775:    SCV_NB10_HEADER nb10_hdr;",
      "2780:    strncpy (res->file_name, (const char*)",
      "2781:     nb10_hdr.file_name, sizeof(res->file_name) - 1);",
      "",
      "[Added Lines]",
      "2775:    if (dbg_data_len < 20) {",
      "2776:     eprintf (\"Truncated NB10 entry, not enough data to parse\\n\");",
      "2777:     return 0;",
      "2778:    }",
      "2779:    SCV_NB10_HEADER nb10_hdr = {{0}};",
      "2784:    res->file_name[0] = 0;",
      "2785:    if (nb10_hdr.file_name) {",
      "2786:     strncpy (res->file_name, (const char*)",
      "2787:       nb10_hdr.file_name, sizeof (res->file_name) - 1);",
      "2788:    }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4eec87cdf6bea84584706efeac7a40ed7153e132",
      "candidate_info": {
        "commit_hash": "4eec87cdf6bea84584706efeac7a40ed7153e132",
        "repo": "radare/radare2",
        "commit_url": "https://github.com/radare/radare2/commit/4eec87cdf6bea84584706efeac7a40ed7153e132",
        "files": [
          "libr/bin/format/pe/pe.c",
          "libr/core/cmd_help.c",
          "libr/core/cmd_print.c",
          "libr/debug/p/native/linux/linux_debug.c",
          "shlr/grub/fs/hfs.c",
          "shlr/grub/fs/hfsplus.c"
        ],
        "message": "More warnings fixed",
        "before_after_code_files": [
          "libr/bin/format/pe/pe.c||libr/bin/format/pe/pe.c",
          "libr/core/cmd_help.c||libr/core/cmd_help.c",
          "libr/core/cmd_print.c||libr/core/cmd_print.c",
          "libr/debug/p/native/linux/linux_debug.c||libr/debug/p/native/linux/linux_debug.c",
          "shlr/grub/fs/hfs.c||shlr/grufs/hfs.c",
          "shlr/grub/fs/hfsplus.c||shlr/grufs/hfsplus.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libr/bin/format/pe/pe.c||libr/bin/format/pe/pe.c"
          ],
          "candidate": [
            "libr/bin/format/pe/pe.c||libr/bin/format/pe/pe.c"
          ]
        }
      },
      "candidate_diff": {
        "libr/bin/format/pe/pe.c||libr/bin/format/pe/pe.c": [
          "File: libr/bin/format/pe/pe.c -> libr/bin/format/pe/pe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2766:  return true;",
          "2767: }",
          "2770:  const int nb10sz = 16;",
          "2773: }",
          "2775: static int get_debug_info(struct PE_(r_bin_pe_obj_t)* bin, PE_(image_debug_directory_entry)* dbg_dir_entry, ut8* dbg_data, int dbg_data_len, SDebugInfo* res) {",
          "",
          "[Removed Lines]",
          "2769: static void get_nb10(ut8* dbg_data, SCV_NB10_HEADER* res) {",
          "",
          "[Added Lines]",
          "2769: static void get_nb10(ut8* dbg_data, int dbg_data_len, SCV_NB10_HEADER* res) {",
          "2771:  if (dbg_data_len < nb10sz) {",
          "2772:   return;",
          "2773:  }",
          "2774:  memcpy (res, dbg_data, nb10sz);",
          "2775:  res->file_name = (ut8*) strdup ((const char*) dbg_data + nb10sz);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2814:    }",
          "2815:    SCV_NB10_HEADER nb10_hdr = {{0}};",
          "2816:    init_cv_nb10_header (&nb10_hdr);",
          "2818:    snprintf (res->guidstr, sizeof (res->guidstr),",
          "2819:     \"%x%x\", nb10_hdr.timestamp, nb10_hdr.age);",
          "2820:    res->file_name[0] = 0;",
          "",
          "[Removed Lines]",
          "2817:    get_nb10 (dbg_data, &nb10_hdr);",
          "",
          "[Added Lines]",
          "2820:    get_nb10 (dbg_data, dbg_data_len, &nb10_hdr);",
          "",
          "---------------"
        ],
        "libr/core/cmd_help.c||libr/core/cmd_help.c": [
          "File: libr/core/cmd_help.c -> libr/core/cmd_help.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "498:     r_str_bits64 (out, n);",
          "499:     f = d = core->num->fvalue;",
          "503:     if (isnan (f) && signbit (f)) {",
          "504:      f = -f;",
          "",
          "[Removed Lines]",
          "500:     memcpy (&f, &n, sizeof(f));",
          "501:     memcpy (&d, &n, sizeof(d));",
          "",
          "[Added Lines]",
          "500:     memcpy (&f, &n, sizeof (f));",
          "501:     memcpy (&d, &n, sizeof (d));",
          "",
          "---------------"
        ],
        "libr/core/cmd_print.c||libr/core/cmd_print.c": [
          "File: libr/core/cmd_print.c -> libr/core/cmd_print.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3675: static int cmd_print(void *data, const char *input) {",
          "3676:  RCore *core = (RCore *) data;",
          "3678:  ut8* block;",
          "3679:  ut32 tbs = core->blocksize;",
          "3680:  ut64 n, off, from, to, at, ate, piece;",
          "3681:  ut64 tmpseek = UT64_MAX;",
          "3682:  const int addrbytes = core->io->addrbytes;",
          "3684:  n = off = from = to = at = ate = piece = 0;",
          "3686:  r_print_init_rowoffsets (core->print);",
          "",
          "[Removed Lines]",
          "3677:  int w, p, i, l, len, ret;",
          "3683:  w = p = i = l = len = ret = 0;",
          "",
          "[Added Lines]",
          "3677:  int i, l, len, ret;",
          "3683:  i = l = len = ret = 0;",
          "",
          "---------------"
        ],
        "libr/debug/p/native/linux/linux_debug.c||libr/debug/p/native/linux/linux_debug.c": [
          "File: libr/debug/p/native/linux/linux_debug.c -> libr/debug/p/native/linux/linux_debug.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "125:    eprintf (\"[+] SIGNAL %d errno=%d addr=0x%08\"PFMT64x",
          "126:     \" code=%d ret=%d\\n\",",
          "127:     siginfo.si_signo, siginfo.si_errno,",
          "129:   }",
          "130:   return true;",
          "131:  }",
          "",
          "[Removed Lines]",
          "128:     (ut64)siginfo.si_addr, siginfo.si_code, ret);",
          "",
          "[Added Lines]",
          "128:     (ut64)(size_t)siginfo.si_addr, siginfo.si_code, ret);",
          "",
          "---------------"
        ],
        "shlr/grub/fs/hfs.c||shlr/grufs/hfs.c": [
          "File: shlr/grub/fs/hfs.c -> shlr/grufs/hfs.c"
        ],
        "shlr/grub/fs/hfsplus.c||shlr/grufs/hfsplus.c": [
          "File: shlr/grub/fs/hfsplus.c -> shlr/grufs/hfsplus.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #include <grub/fshelp.h>",
          "30: #include <grub/hfs.h>",
          "31: #include <grub/charset.h>",
          "33: #define GRUB_HFSPLUS_MAGIC 0x482B",
          "34: #define GRUB_HFSPLUSX_MAGIC 0x4858",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}