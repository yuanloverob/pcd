{
  "cve_id": "CVE-2015-3395",
  "cve_desc": "The msrle_decode_pal4 function in msrledec.c in Libav before 10.7 and 11.x before 11.4 and FFmpeg before 2.0.7, 2.2.x before 2.2.15, 2.4.x before 2.4.8, 2.5.x before 2.5.6, and 2.6.x before 2.6.2 allows remote attackers to have unspecified impact via a crafted image, related to a pixel pointer, which triggers an out-of-bounds array access.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "f7e1367f58263593e6cee3c282f7277d7ee9d553",
  "patch_info": {
    "commit_hash": "f7e1367f58263593e6cee3c282f7277d7ee9d553",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/f7e1367f58263593e6cee3c282f7277d7ee9d553",
    "files": [
      "libavcodec/msrledec.c"
    ],
    "message": "avcodec/msrledec: restructure msrle_decode_pal4() based on the line number instead of the pixel pointer\n\nFixes out of array access\nFixes: da14e86d8462be6493eab16bc2d40f88/asan_heap-oob_204cfd2_528_cov_340150052_COMPRESS.BMP\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavcodec/msrledec.c||libavcodec/msrledec.c"
    ]
  },
  "patch_diff": {
    "libavcodec/msrledec.c||libavcodec/msrledec.c": [
      "File: libavcodec/msrledec.c -> libavcodec/msrledec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "37:     unsigned char extra_byte, odd_pixel;",
      "38:     unsigned char stream_byte;",
      "39:     unsigned int pixel_ptr = 0;",
      "43:     int i;",
      "46:         if (bytestream2_get_bytes_left(gb) <= 0) {",
      "47:             av_log(avctx, AV_LOG_ERROR,",
      "50:             return AVERROR_INVALIDDATA;",
      "51:         }",
      "52:         rle_code = stream_byte = bytestream2_get_byteu(gb);",
      "",
      "[Removed Lines]",
      "40:     int row_dec = pic->linesize[0];",
      "41:     int row_ptr = (avctx->height - 1) * row_dec;",
      "42:     int frame_size = row_dec * avctx->height;",
      "45:     while (row_ptr >= 0) {",
      "48:                    \"MS RLE: bytestream overrun, %d rows left\\n\",",
      "49:                    row_ptr);",
      "",
      "[Added Lines]",
      "40:     int line = avctx->height - 1;",
      "43:     while (line >= 0 && pixel_ptr <= avctx->width) {",
      "46:                    \"MS RLE: bytestream overrun, %dx%d left\\n\",",
      "47:                    avctx->width - pixel_ptr, line);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "55:             stream_byte = bytestream2_get_byte(gb);",
      "56:             if (stream_byte == 0) {",
      "59:                 pixel_ptr = 0;",
      "60:             } else if (stream_byte == 1) {",
      "",
      "[Removed Lines]",
      "58:                 row_ptr -= row_dec;",
      "",
      "[Added Lines]",
      "56:                 line--;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "65:                 stream_byte = bytestream2_get_byte(gb);",
      "66:                 pixel_ptr += stream_byte;",
      "67:                 stream_byte = bytestream2_get_byte(gb);",
      "69:             } else {",
      "71:                 odd_pixel =  stream_byte & 1;",
      "72:                 rle_code = (stream_byte + 1) / 2;",
      "73:                 extra_byte = rle_code & 0x01;",
      "75:                     bytestream2_get_bytes_left(gb) < rle_code) {",
      "76:                     av_log(avctx, AV_LOG_ERROR,",
      "77:                            \"MS RLE: frame/stream ptr just went out of bounds (copy)\\n\");",
      "",
      "[Removed Lines]",
      "68:                 row_ptr -= stream_byte * row_dec;",
      "74:                 if (row_ptr + pixel_ptr + stream_byte > frame_size ||",
      "",
      "[Added Lines]",
      "71:                 if (pixel_ptr + 2*rle_code - odd_pixel > avctx->width ||",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "82:                     if (pixel_ptr >= avctx->width)",
      "83:                         break;",
      "84:                     stream_byte = bytestream2_get_byteu(gb);",
      "86:                     pixel_ptr++;",
      "87:                     if (i + 1 == rle_code && odd_pixel)",
      "88:                         break;",
      "89:                     if (pixel_ptr >= avctx->width)",
      "90:                         break;",
      "92:                     pixel_ptr++;",
      "93:                 }",
      "",
      "[Removed Lines]",
      "85:                     pic->data[0][row_ptr + pixel_ptr] = stream_byte >> 4;",
      "91:                     pic->data[0][row_ptr + pixel_ptr] = stream_byte & 0x0F;",
      "",
      "[Added Lines]",
      "82:                     pic->data[0][line * pic->linesize[0] + pixel_ptr] = stream_byte >> 4;",
      "88:                     pic->data[0][line * pic->linesize[0] + pixel_ptr] = stream_byte & 0x0F;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "98:             }",
      "99:         } else {",
      "102:                 av_log(avctx, AV_LOG_ERROR,",
      "103:                        \"MS RLE: frame ptr just went out of bounds (run)\\n\");",
      "104:                 return AVERROR_INVALIDDATA;",
      "",
      "[Removed Lines]",
      "101:             if (row_ptr + pixel_ptr + stream_byte > frame_size) {",
      "",
      "[Added Lines]",
      "98:             if (pixel_ptr + rle_code > avctx->width + 1) {",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "108:                 if (pixel_ptr >= avctx->width)",
      "109:                     break;",
      "110:                 if ((i & 1) == 0)",
      "112:                 else",
      "114:                 pixel_ptr++;",
      "115:             }",
      "116:         }",
      "",
      "[Removed Lines]",
      "111:                     pic->data[0][row_ptr + pixel_ptr] = stream_byte >> 4;",
      "113:                     pic->data[0][row_ptr + pixel_ptr] = stream_byte & 0x0F;",
      "",
      "[Added Lines]",
      "108:                     pic->data[0][line * pic->linesize[0] + pixel_ptr] = stream_byte >> 4;",
      "110:                     pic->data[0][line * pic->linesize[0] + pixel_ptr] = stream_byte & 0x0F;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "539172c85b13796fe5ce2a7482f436b6e9b33cf6",
      "candidate_info": {
        "commit_hash": "539172c85b13796fe5ce2a7482f436b6e9b33cf6",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/539172c85b13796fe5ce2a7482f436b6e9b33cf6",
        "files": [
          "libavcodec/msrledec.c"
        ],
        "message": "avcodec/msrledec: restructure msrle_decode_pal4() based on the line number instead of the pixel pointer\n\nFixes out of array access\nFixes: da14e86d8462be6493eab16bc2d40f88/asan_heap-oob_204cfd2_528_cov_340150052_COMPRESS.BMP\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit f7e1367f58263593e6cee3c282f7277d7ee9d553)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/msrledec.c||libavcodec/msrledec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/msrledec.c||libavcodec/msrledec.c"
          ],
          "candidate": [
            "libavcodec/msrledec.c||libavcodec/msrledec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/msrledec.c||libavcodec/msrledec.c": [
          "File: libavcodec/msrledec.c -> libavcodec/msrledec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:     unsigned char extra_byte, odd_pixel;",
          "38:     unsigned char stream_byte;",
          "39:     unsigned int pixel_ptr = 0;",
          "43:     int i;",
          "46:         if (bytestream2_get_bytes_left(gb) <= 0) {",
          "47:             av_log(avctx, AV_LOG_ERROR,",
          "50:             return AVERROR_INVALIDDATA;",
          "51:         }",
          "52:         rle_code = stream_byte = bytestream2_get_byteu(gb);",
          "",
          "[Removed Lines]",
          "40:     int row_dec = pic->linesize[0];",
          "41:     int row_ptr = (avctx->height - 1) * row_dec;",
          "42:     int frame_size = row_dec * avctx->height;",
          "45:     while (row_ptr >= 0) {",
          "48:                    \"MS RLE: bytestream overrun, %d rows left\\n\",",
          "49:                    row_ptr);",
          "",
          "[Added Lines]",
          "40:     int line = avctx->height - 1;",
          "43:     while (line >= 0 && pixel_ptr <= avctx->width) {",
          "46:                    \"MS RLE: bytestream overrun, %dx%d left\\n\",",
          "47:                    avctx->width - pixel_ptr, line);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55:             stream_byte = bytestream2_get_byte(gb);",
          "56:             if (stream_byte == 0) {",
          "59:                 pixel_ptr = 0;",
          "60:             } else if (stream_byte == 1) {",
          "",
          "[Removed Lines]",
          "58:                 row_ptr -= row_dec;",
          "",
          "[Added Lines]",
          "56:                 line--;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "65:                 stream_byte = bytestream2_get_byte(gb);",
          "66:                 pixel_ptr += stream_byte;",
          "67:                 stream_byte = bytestream2_get_byte(gb);",
          "69:             } else {",
          "71:                 odd_pixel =  stream_byte & 1;",
          "72:                 rle_code = (stream_byte + 1) / 2;",
          "73:                 extra_byte = rle_code & 0x01;",
          "75:                     bytestream2_get_bytes_left(gb) < rle_code) {",
          "76:                     av_log(avctx, AV_LOG_ERROR,",
          "77:                            \"MS RLE: frame/stream ptr just went out of bounds (copy)\\n\");",
          "",
          "[Removed Lines]",
          "68:                 row_ptr -= stream_byte * row_dec;",
          "74:                 if (row_ptr + pixel_ptr + stream_byte > frame_size ||",
          "",
          "[Added Lines]",
          "71:                 if (pixel_ptr + 2*rle_code - odd_pixel > avctx->width ||",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "82:                     if (pixel_ptr >= avctx->width)",
          "83:                         break;",
          "84:                     stream_byte = bytestream2_get_byteu(gb);",
          "86:                     pixel_ptr++;",
          "87:                     if (i + 1 == rle_code && odd_pixel)",
          "88:                         break;",
          "89:                     if (pixel_ptr >= avctx->width)",
          "90:                         break;",
          "92:                     pixel_ptr++;",
          "93:                 }",
          "",
          "[Removed Lines]",
          "85:                     pic->data[0][row_ptr + pixel_ptr] = stream_byte >> 4;",
          "91:                     pic->data[0][row_ptr + pixel_ptr] = stream_byte & 0x0F;",
          "",
          "[Added Lines]",
          "82:                     pic->data[0][line * pic->linesize[0] + pixel_ptr] = stream_byte >> 4;",
          "88:                     pic->data[0][line * pic->linesize[0] + pixel_ptr] = stream_byte & 0x0F;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "98:             }",
          "99:         } else {",
          "102:                 av_log(avctx, AV_LOG_ERROR,",
          "103:                        \"MS RLE: frame ptr just went out of bounds (run)\\n\");",
          "104:                 return AVERROR_INVALIDDATA;",
          "",
          "[Removed Lines]",
          "101:             if (row_ptr + pixel_ptr + stream_byte > frame_size) {",
          "",
          "[Added Lines]",
          "98:             if (pixel_ptr + rle_code > avctx->width + 1) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "108:                 if (pixel_ptr >= avctx->width)",
          "109:                     break;",
          "110:                 if ((i & 1) == 0)",
          "112:                 else",
          "114:                 pixel_ptr++;",
          "115:             }",
          "116:         }",
          "",
          "[Removed Lines]",
          "111:                     pic->data[0][row_ptr + pixel_ptr] = stream_byte >> 4;",
          "113:                     pic->data[0][row_ptr + pixel_ptr] = stream_byte & 0x0F;",
          "",
          "[Added Lines]",
          "108:                     pic->data[0][line * pic->linesize[0] + pixel_ptr] = stream_byte >> 4;",
          "110:                     pic->data[0][line * pic->linesize[0] + pixel_ptr] = stream_byte & 0x0F;",
          "",
          "---------------"
        ]
      }
    }
  ]
}