{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ebacf25ae33639257665c929f3a3a08c3618dfdb",
      "candidate_info": {
        "commit_hash": "ebacf25ae33639257665c929f3a3a08c3618dfdb",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ebacf25ae33639257665c929f3a3a08c3618dfdb",
        "files": [
          "apps/speed.c"
        ],
        "message": "Fix speed command for alternation of ciphers and digests.\n\nCLA: trivial\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3487)\n\n(cherry picked from commit 9ae4e664da0692f27bfe0d1a34db29ed815203c8)",
        "before_after_code_files": [
          "apps/speed.c||apps/speed.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/speed.c||apps/speed.c": [
          "File: apps/speed.c -> apps/speed.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1378:             usertime = 0;",
          "1379:             break;",
          "1380:         case OPT_EVP:",
          "1381:             evp_cipher = EVP_get_cipherbyname(opt_arg());",
          "1382:             if (evp_cipher == NULL)",
          "1383:                 evp_md = EVP_get_digestbyname(opt_arg());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1381:             evp_md = NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "603e5170161bd71d2341c34fdcca24d191964c0d",
      "candidate_info": {
        "commit_hash": "603e5170161bd71d2341c34fdcca24d191964c0d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/603e5170161bd71d2341c34fdcca24d191964c0d",
        "files": [
          "apps/opt.c",
          "apps/rehash.c",
          "ssl/ssl_ciph.c"
        ],
        "message": "Fix ctype arguments.\n\nCast arguments to the various ctype functions to unsigned char to match their\ndocumentation.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4203)\n\n(cherry picked from commit 00dfbaad88a69ed8294d6039bf5f7d722f72bf39)",
        "before_after_code_files": [
          "apps/opt.c||apps/opt.c",
          "apps/rehash.c||apps/rehash.c",
          "ssl/ssl_ciph.c||ssl/ssl_ciph.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/opt.c||apps/opt.c": [
          "File: apps/opt.c -> apps/opt.c"
        ],
        "apps/rehash.c||apps/rehash.c": [
          "File: apps/rehash.c -> apps/rehash.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "306:     if (q != NULL) {",
          "307:         for (q++; *q != '\\0'; q++) {",
          "309:                 return 1;",
          "310:         }",
          "311:     }",
          "",
          "[Removed Lines]",
          "308:             if (!isdigit(*q))",
          "",
          "[Added Lines]",
          "308:             if (!isdigit((unsigned char)*q))",
          "",
          "---------------"
        ],
        "ssl/ssl_ciph.c||ssl/ssl_ciph.c": [
          "File: ssl/ssl_ciph.c -> ssl/ssl_ciph.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1036:                    ((ch >= 'a') && (ch <= 'z')) ||",
          "1037:                    (ch == '-') || (ch == '.') || (ch == '='))",
          "1038: #else",
          "1040: #endif",
          "1041:             {",
          "1042:                 ch = *(++l);",
          "",
          "[Removed Lines]",
          "1039:             while (isalnum(ch) || (ch == '-') || (ch == '.') || (ch == '='))",
          "",
          "[Added Lines]",
          "1039:             while (isalnum((unsigned char)ch) || (ch == '-') || (ch == '.')",
          "1040:                    || (ch == '='))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e29ae5b356f40f7410d367b25d4e65e0dde0aeef",
      "candidate_info": {
        "commit_hash": "e29ae5b356f40f7410d367b25d4e65e0dde0aeef",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/e29ae5b356f40f7410d367b25d4e65e0dde0aeef",
        "files": [
          "apps/apps.c"
        ],
        "message": "app_isdir() cleanup\n\nI think it's better to use `GetFileAttributes` to obtain the attributes\nof a file than `FindFirstFile`. If the input name contains `*`, this\nfunction should return failure rather than check whether the first match\nhappens to be a file or a directory.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\n(Merged from https://github.com/openssl/openssl/pull/3991)\n\n(cherry picked from commit 5bd051a0dcd4f04bc9ea197f74b34612b3fcca84)",
        "before_after_code_files": [
          "apps/apps.c||apps/apps.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/apps.c||apps/apps.c": [
          "File: apps/apps.c -> apps/apps.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2255: #ifdef _WIN32",
          "2256: int app_isdir(const char *name)",
          "2257: {",
          "2260: # if defined(UNICODE) || defined(_UNICODE)",
          "2261:     size_t i, len_0 = strlen(name) + 1;",
          "2264:         return -1;",
          "2266: #  if !defined(_WIN32_WCE) || _WIN32_WCE>=101",
          "2269: #  endif",
          "2270:         for (i = 0; i < len_0; i++)",
          "2274: # else",
          "2276: # endif",
          "2278:         return -1;",
          "2281: }",
          "2282: #else",
          "2283: # include <sys/stat.h>",
          "",
          "[Removed Lines]",
          "2258:     HANDLE hList;",
          "2259:     WIN32_FIND_DATA FileData;",
          "2263:     if (len_0 > OSSL_NELEM(FileData.cFileName))",
          "2267:     if (!MultiByteToWideChar",
          "2268:         (CP_ACP, 0, name, len_0, FileData.cFileName, len_0))",
          "2271:             FileData.cFileName[i] = (WCHAR)name[i];",
          "2273:     hList = FindFirstFile(FileData.cFileName, &FileData);",
          "2275:     hList = FindFirstFile(name, &FileData);",
          "2277:     if (hList == INVALID_HANDLE_VALUE)",
          "2279:     FindClose(hList);",
          "2280:     return ((FileData.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY) != 0);",
          "",
          "[Added Lines]",
          "2258:     DWORD attr;",
          "2261:     WCHAR tempname[MAX_PATH];",
          "2263:     if (len_0 > MAX_PATH)",
          "2267:     if (!MultiByteToWideChar(CP_ACP, 0, name, len_0, tempname, MAX_PATH))",
          "2270:             tempname[i] = (WCHAR)name[i];",
          "2272:     attr = GetFileAttributes(tempname);",
          "2274:     attr = GetFileAttributes(name);",
          "2276:     if (attr == INVALID_FILE_ATTRIBUTES)",
          "2278:     return ((attr & FILE_ATTRIBUTE_DIRECTORY) != 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d8adfdcd2e5de23f3e1d1a1d10c2fda6f4a65c4a",
      "candidate_info": {
        "commit_hash": "d8adfdcd2e5de23f3e1d1a1d10c2fda6f4a65c4a",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/d8adfdcd2e5de23f3e1d1a1d10c2fda6f4a65c4a",
        "files": [
          "doc/crypto/OPENSSL_VERSION_NUMBER.pod",
          "doc/ssl/ssl.pod",
          "include/openssl/opensslv.h"
        ],
        "message": "Add OPENSSL_VERSION_AT_LEAST\n\nadded macro to create version number\nuse the macro to build OPENSSL_VERSION_AT_LEAST(maj,min,fix) so that\ncustomers of libssl (such as ruby-openssl) do not need to be so aware of\nopenssl version numbers.\nincludes updates to ssl(7) and OPENSSL_VERSION_NUMBER(3) man page\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/5212)\n(cherry picked from commit 3c5a61dd0f9d9a9eac098419bcaf47d1c296ca81)",
        "before_after_code_files": [
          "include/openssl/opensslv.h||include/openssl/opensslv.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/opensslv.h||include/openssl/opensslv.h": [
          "File: include/openssl/opensslv.h -> include/openssl/opensslv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0h-dev  xx XXX xxxx\"",
          "47: # endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49: #define OPENSSL_MAKE_VERSION(maj,min,fix,patch) ((0x10000000L)+((maj&0xff)<<20)+((min&0xff)<<12)+((fix&0xff)<<4)+patch)",
          "52: #define OPENSSL_VERSION_AT_LEAST(maj,min) (OPENSSL_MAKE_VERSION(maj,min, 0, 0) >= OPENSSL_VERSION_NUMBER)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a50c4aa6d7b02c1e5703da61d0c9302f8a7f0e45",
      "candidate_info": {
        "commit_hash": "a50c4aa6d7b02c1e5703da61d0c9302f8a7f0e45",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/a50c4aa6d7b02c1e5703da61d0c9302f8a7f0e45",
        "files": [
          "Configurations/unix-Makefile.tmpl"
        ],
        "message": "Turn on error sensitivity in the \"tar\" target\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4179)\n\n(cherry picked from commit 34a5b7d727204eb990acd44899d457245ac94d7c)",
        "before_after_code_files": [
          "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl": [
          "File: Configurations/unix-Makefile.tmpl -> Configurations/unix-Makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "652: TAR_COMMAND=$(TAR) $(TARFLAGS) --owner 0 --group 0 -cvf -",
          "653: PREPARE_CMD=:",
          "654: tar:",
          "655:  TMPDIR=/var/tmp/openssl-copy.$$$$; \\",
          "656:  DISTDIR=$(NAME); \\",
          "657:  mkdir -p $$TMPDIR/$$DISTDIR; \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "655:  set -e; \\",
          "",
          "---------------"
        ]
      }
    }
  ]
}