{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6ebe9e0c1d28e82c5b49a9c8bbd166f6f296fd56",
      "candidate_info": {
        "commit_hash": "6ebe9e0c1d28e82c5b49a9c8bbd166f6f296fd56",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/6ebe9e0c1d28e82c5b49a9c8bbd166f6f296fd56",
        "files": [
          "deps/v8/src/mips/lithium-codegen-mips.cc",
          "deps/v8/src/version.cc"
        ],
        "message": "Upgrade V8 to 3.9.24.7",
        "before_after_code_files": [
          "deps/v8/src/mips/lithium-codegen-mips.cc||deps/v8/src/mips/lithium-codegen-mips.cc",
          "deps/v8/src/version.cc||deps/v8/src/version.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/src/mips/lithium-codegen-mips.cc||deps/v8/src/mips/lithium-codegen-mips.cc": [
          "File: deps/v8/src/mips/lithium-codegen-mips.cc -> deps/v8/src/mips/lithium-codegen-mips.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "4505:   }",
          "4510:   if (has_elements) {",
          "4511:     __ LoadHeapObject(source, elements);",
          "4512:     for (int i = 0; i < FixedArray::kHeaderSize; i += kPointerSize) {",
          "4513:       __ lw(a2, FieldMemOperand(source, i));",
          "4514:       __ sw(a2, FieldMemOperand(result, elements_offset + i));",
          "4515:     }",
          "4533:     } else {",
          "4536:     }",
          "4537:   }",
          "4538: }",
          "",
          "[Removed Lines]",
          "4509:   ASSERT(!has_elements || elements->IsFixedArray());",
          "4516:   }",
          "4519:   ASSERT(!has_elements || elements->IsFixedArray());",
          "4520:   int elements_length = has_elements ? elements->length() : 0;",
          "4521:   for (int i = 0; i < elements_length; i++) {",
          "4522:     int total_offset = elements_offset + FixedArray::OffsetOfElementAt(i);",
          "4523:     Handle<Object> value = JSObject::GetElement(object, i);",
          "4524:     if (value->IsJSObject()) {",
          "4525:       Handle<JSObject> value_object = Handle<JSObject>::cast(value);",
          "4526:       __ Addu(a2, result, Operand(*offset));",
          "4527:       __ sw(a2, FieldMemOperand(result, total_offset));",
          "4528:       __ LoadHeapObject(source, value_object);",
          "4529:       EmitDeepCopy(value_object, result, source, offset);",
          "4530:     } else if (value->IsHeapObject()) {",
          "4531:       __ LoadHeapObject(a2, Handle<HeapObject>::cast(value));",
          "4532:       __ sw(a2, FieldMemOperand(result, total_offset));",
          "4534:       __ li(a2, Operand(value));",
          "4535:       __ sw(a2, FieldMemOperand(result, total_offset));",
          "",
          "[Added Lines]",
          "4517:     int elements_length = has_elements ? elements->length() : 0;",
          "4518:     if (elements->IsFixedDoubleArray()) {",
          "4519:       Handle<FixedDoubleArray> double_array =",
          "4520:           Handle<FixedDoubleArray>::cast(elements);",
          "4521:       for (int i = 0; i < elements_length; i++) {",
          "4522:         int64_t value = double_array->get_representation(i);",
          "4524:         int32_t value_low = value & 0xFFFFFFFF;",
          "4525:         int32_t value_high = value >> 32;",
          "4526:         int total_offset =",
          "4527:             elements_offset + FixedDoubleArray::OffsetOfElementAt(i);",
          "4528:         __ li(a2, Operand(value_low));",
          "4529:         __ sw(a2, FieldMemOperand(result, total_offset));",
          "4530:         __ li(a2, Operand(value_high));",
          "4531:         __ sw(a2, FieldMemOperand(result, total_offset + 4));",
          "4532:       }",
          "4533:     } else if (elements->IsFixedArray()) {",
          "4534:       for (int i = 0; i < elements_length; i++) {",
          "4535:         int total_offset = elements_offset + FixedArray::OffsetOfElementAt(i);",
          "4536:         Handle<Object> value = JSObject::GetElement(object, i);",
          "4537:         if (value->IsJSObject()) {",
          "4538:           Handle<JSObject> value_object = Handle<JSObject>::cast(value);",
          "4539:           __ Addu(a2, result, Operand(*offset));",
          "4540:           __ sw(a2, FieldMemOperand(result, total_offset));",
          "4541:           __ LoadHeapObject(source, value_object);",
          "4542:           EmitDeepCopy(value_object, result, source, offset);",
          "4543:         } else if (value->IsHeapObject()) {",
          "4544:           __ LoadHeapObject(a2, Handle<HeapObject>::cast(value));",
          "4545:           __ sw(a2, FieldMemOperand(result, total_offset));",
          "4546:         } else {",
          "4547:           __ li(a2, Operand(value));",
          "4548:           __ sw(a2, FieldMemOperand(result, total_offset));",
          "4549:         }",
          "4550:       }",
          "4552:       UNREACHABLE();",
          "",
          "---------------"
        ],
        "deps/v8/src/version.cc||deps/v8/src/version.cc": [
          "File: deps/v8/src/version.cc -> deps/v8/src/version.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #define MAJOR_VERSION     3",
          "36: #define MINOR_VERSION     9",
          "37: #define BUILD_NUMBER      24",
          "41: #define IS_CANDIDATE_VERSION 0",
          "",
          "[Removed Lines]",
          "38: #define PATCH_LEVEL       6",
          "",
          "[Added Lines]",
          "38: #define PATCH_LEVEL       7",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8752ceef13a3c6478fee54b089fbfea1e3d8313c",
      "candidate_info": {
        "commit_hash": "8752ceef13a3c6478fee54b089fbfea1e3d8313c",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/8752ceef13a3c6478fee54b089fbfea1e3d8313c",
        "files": [
          "test/simple/test-repl-autolibs.js"
        ],
        "message": "test: make repl-autolibs check that the callback was invoked",
        "before_after_code_files": [
          "test/simple/test-repl-autolibs.js||test/simple/test-repl-autolibs.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-repl-autolibs.js||test/simple/test-repl-autolibs.js": [
          "File: test/simple/test-repl-autolibs.js -> test/simple/test-repl-autolibs.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: test1();",
          "46: function test1(){",
          "47:   putIn.write = function (data) {",
          "48:     if (data.length) {",
          "50:       assert.equal(data, util.inspect(require('fs'), null, null, false) + '\\n');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47:   var gotWrite = false;",
          "49:     gotWrite = true;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53:       test2();",
          "54:     }",
          "55:   };",
          "56:   putIn.run(['fs']);",
          "57: }",
          "59: function test2(){",
          "60:   putIn.write = function(data) {",
          "61:     if (data.length) {",
          "63:       assert.equal(data.indexOf('A different'), 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58:   assert(!gotWrite);",
          "60:   assert(gotWrite);",
          "64:   var gotWrite = false;",
          "66:     gotWrite = true;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "67:   };",
          "68:   var val = {};",
          "69:   global.url = val;",
          "70:   putIn.run(['url']);",
          "71: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:   assert(!gotWrite);",
          "78:   assert(gotWrite);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0fd28345392c2a16dfe143d2467ab14a236ce3c3",
      "candidate_info": {
        "commit_hash": "0fd28345392c2a16dfe143d2467ab14a236ce3c3",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/0fd28345392c2a16dfe143d2467ab14a236ce3c3",
        "files": [
          "deps/uv/src/unix/timer.c",
          "deps/uv/src/uv-common.h",
          "deps/uv/test/runner.c",
          "deps/uv/test/test-ipc-send-recv.c",
          "deps/uv/test/test-list.h",
          "deps/uv/test/test-pipe-bind-error.c",
          "deps/uv/test/test-timer.c"
        ],
        "message": "deps: upgrade libuv to 2ec0986",
        "before_after_code_files": [
          "deps/uv/src/unix/timer.c||deps/uv/src/unix/timer.c",
          "deps/uv/src/uv-common.h||deps/uv/src/uv-common.h",
          "deps/uv/test/runner.c||deps/uv/test/runner.c",
          "deps/uv/test/test-ipc-send-recv.c||deps/uv/test/test-ipc-send-recv.c",
          "deps/uv/test/test-list.h||deps/uv/test/test-list.h",
          "deps/uv/test/test-pipe-bind-error.c||deps/uv/test/test-pipe-bind-error.c",
          "deps/uv/test/test-timer.c||deps/uv/test/test-timer.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/src/unix/timer.c||deps/uv/src/unix/timer.c": [
          "File: deps/uv/src/unix/timer.c -> deps/uv/src/unix/timer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "52: }",
          "61:   timer->timer_cb = cb;",
          "",
          "[Removed Lines]",
          "55: int uv_timer_start(uv_timer_t* timer, uv_timer_cb cb, int64_t timeout,",
          "56:     int64_t repeat) {",
          "57:   if (uv__is_active(timer)) {",
          "58:     return -1;",
          "59:   }",
          "",
          "[Added Lines]",
          "55: int uv_timer_start(uv_timer_t* timer,",
          "56:                    uv_timer_cb cb,",
          "57:                    int64_t timeout,",
          "58:                    int64_t repeat) {",
          "59:   if (uv__is_active(timer))",
          "60:     uv_timer_stop(timer);",
          "",
          "---------------"
        ],
        "deps/uv/src/uv-common.h||deps/uv/src/uv-common.h": [
          "File: deps/uv/src/uv-common.h -> deps/uv/src/uv-common.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "156: UNUSED static void uv__handle_start(uv_handle_t* h) {",
          "157:   if (h->flags & UV__ACTIVE) return;",
          "159:   h->flags |= UV__ACTIVE;",
          "161: }",
          "162: #define uv__handle_start(h) uv__handle_start((uv_handle_t*)(h))",
          "164: UNUSED static void uv__handle_stop(uv_handle_t* h) {",
          "165:   if (!(h->flags & UV__ACTIVE)) return;",
          "168:   h->flags &= ~UV__ACTIVE;",
          "169: }",
          "170: #define uv__handle_stop(h) uv__handle_stop((uv_handle_t*)(h))",
          "",
          "[Removed Lines]",
          "158:   if (!(h->flags & UV__REF)) return;",
          "160:   uv__active_handle_add(h);",
          "166:   if (!(h->flags & UV__REF)) return;",
          "167:   uv__active_handle_rm(h);",
          "",
          "[Added Lines]",
          "158:   if (h->flags & UV__REF) uv__active_handle_add(h);",
          "165:   if (h->flags & UV__REF) uv__active_handle_rm(h);",
          "",
          "---------------"
        ],
        "deps/uv/test/runner.c||deps/uv/test/runner.c": [
          "File: deps/uv/test/runner.c -> deps/uv/test/runner.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include <string.h>",
          "24: #include \"runner.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #include <stdio.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "92:   main_proc = NULL;",
          "93:   process_count = 0;",
          "96:   for (task = TASKS; task->main; task++) {",
          "97:     if (task->is_helper && strcmp(test, task->process_name) == 0) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "96: #ifndef _WIN32",
          "98:   remove(TEST_PIPENAME);",
          "99: #endif",
          "",
          "---------------"
        ],
        "deps/uv/test/test-ipc-send-recv.c||deps/uv/test/test-ipc-send-recv.c": [
          "File: deps/uv/test/test-ipc-send-recv.c -> deps/uv/test/test-ipc-send-recv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:   r = uv_pipe_init(uv_default_loop(), &ctx.send.pipe, 1);",
          "121:   ASSERT(r == 0);",
          "128:   r = uv_pipe_bind(&ctx.send.pipe, TEST_PIPENAME);",
          "129:   ASSERT(r == 0);",
          "",
          "[Removed Lines]",
          "123: #ifndef _WIN32",
          "125:   remove(TEST_PIPENAME);",
          "126: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/test/test-list.h||deps/uv/test/test-list.h": [
          "File: deps/uv/test/test-list.h -> deps/uv/test/test-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "77: TEST_DECLARE   (error_message)",
          "78: TEST_DECLARE   (timer)",
          "79: TEST_DECLARE   (timer_again)",
          "80: TEST_DECLARE   (idle_starvation)",
          "81: TEST_DECLARE   (loop_handles)",
          "82: TEST_DECLARE   (get_loadavg)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80: TEST_DECLARE   (timer_start_twice)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "267:   TEST_ENTRY  (timer)",
          "268:   TEST_ENTRY  (timer_again)",
          "270:   TEST_ENTRY  (idle_starvation)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "270:   TEST_ENTRY  (timer_start_twice)",
          "",
          "---------------"
        ],
        "deps/uv/test/test-pipe-bind-error.c||deps/uv/test/test-pipe-bind-error.c": [
          "File: deps/uv/test/test-pipe-bind-error.c -> deps/uv/test/test-pipe-bind-error.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #ifdef _WIN32",
          "29: # define BAD_PIPENAME \"bad-pipe\"",
          "31: #else",
          "32: # define BAD_PIPENAME \"/path/to/unix/socket/that/really/should/not/be/there\"",
          "34: #endif",
          "",
          "[Removed Lines]",
          "30: # define UNLINK_PIPE(name)",
          "33: # define UNLINK_PIPE(name) remove(name)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47:   uv_pipe_t server1, server2;",
          "48:   int r;",
          "52:   r = uv_pipe_init(uv_default_loop(), &server1, 0);",
          "53:   ASSERT(r == 0);",
          "54:   r = uv_pipe_bind(&server1, TEST_PIPENAME);",
          "",
          "[Removed Lines]",
          "50:   UNLINK_PIPE(TEST_PIPENAME);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/test/test-timer.c||deps/uv/test/test-timer.c": [
          "File: deps/uv/test/test-timer.c -> deps/uv/test/test-timer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:   printf(\"ONCE_CLOSE_CB\\n\");",
          "37:   ASSERT(handle != NULL);",
          "39:   once_close_cb_called++;",
          "40: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38:   ASSERT(!uv_is_active(handle));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:   ASSERT(handle != NULL);",
          "47:   ASSERT(status == 0);",
          "49:   once_cb_called++;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:   ASSERT(!uv_is_active((uv_handle_t*)handle));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "70:   ASSERT(handle != NULL);",
          "71:   ASSERT(status == 0);",
          "73:   repeat_cb_called++;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74:   ASSERT(uv_is_active((uv_handle_t*)handle));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "129:   return 0;",
          "130: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "136: TEST_IMPL(timer_start_twice) {",
          "137:   uv_timer_t once;",
          "138:   int r;",
          "140:   r = uv_timer_init(uv_default_loop(), &once);",
          "141:   ASSERT(r == 0);",
          "142:   r = uv_timer_start(&once, never_cb, 86400 * 1000, 0);",
          "143:   ASSERT(r == 0);",
          "144:   r = uv_timer_start(&once, once_cb, 10, 0);",
          "145:   ASSERT(r == 0);",
          "146:   r = uv_run(uv_default_loop());",
          "147:   ASSERT(r == 0);",
          "149:   ASSERT(once_cb_called == 1);",
          "151:   return 0;",
          "152: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c56d1559fc45375283cc9a616abf73b2e453d77e",
      "candidate_info": {
        "commit_hash": "c56d1559fc45375283cc9a616abf73b2e453d77e",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/c56d1559fc45375283cc9a616abf73b2e453d77e",
        "files": [
          "test/fixtures/fork2.js",
          "test/simple/test-child-process-fork2.js"
        ],
        "message": "test: use the new net.listen(backlog=x) API",
        "before_after_code_files": [
          "test/fixtures/fork2.js||test/fixtures/fork2.js",
          "test/simple/test-child-process-fork2.js||test/simple/test-child-process-fork2.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/fixtures/fork2.js||test/fixtures/fork2.js": [
          "File: test/fixtures/fork2.js -> test/fixtures/fork2.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "16:     process.send({ childConnections: connections });",
          "17:   });",
          "23:     process.send({ gotHandle: true });",
          "24:   });",
          "25: });",
          "",
          "[Removed Lines]",
          "20:   server._backlog = 9;",
          "22:   server.listen(serverHandle, function() {",
          "",
          "[Added Lines]",
          "19:   server.listen(serverHandle, /* backlog */ 9, function() {",
          "",
          "---------------"
        ],
        "test/simple/test-child-process-fork2.js||test/simple/test-child-process-fork2.js": [
          "File: test/simple/test-child-process-fork2.js -> test/simple/test-child-process-fork2.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:   c.destroy();",
          "37: });",
          "43:   console.log('PARENT send child server handle');",
          "44:   n.send({ hello: 'world' }, server._handle);",
          "45: });",
          "",
          "[Removed Lines]",
          "40: server._backlog = 9;",
          "42: server.listen(common.PORT, function() {",
          "",
          "[Added Lines]",
          "39: server.listen(common.PORT, /* backlog */ 9, function() {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1e425e3fa774fefd3553ecaa6f0ac35f9b0a1355",
      "candidate_info": {
        "commit_hash": "1e425e3fa774fefd3553ecaa6f0ac35f9b0a1355",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/1e425e3fa774fefd3553ecaa6f0ac35f9b0a1355",
        "files": [
          "doc/api/http.markdown",
          "lib/http.js",
          "test/simple/test-http-1.0.js",
          "test/simple/test-http-date-header.js",
          "test/simple/test-http-max-headers-count.js"
        ],
        "message": "Generate Date headers on responses when not already present.",
        "before_after_code_files": [
          "lib/http.js||lihttp.js",
          "test/simple/test-http-1.0.js||test/simple/test-http-1.0.js",
          "test/simple/test-http-date-header.js||test/simple/test-http-date-header.js",
          "test/simple/test-http-max-headers-count.js||test/simple/test-http-max-headers-count.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/http.js||lihttp.js": [
          "File: lib/http.js -> lihttp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "226: var closeExpression = /close/i;",
          "227: var chunkExpression = /chunk/i;",
          "228: var contentLengthExpression = /Content-Length/i;",
          "229: var expectExpression = /Expect/i;",
          "230: var continueExpression = /100-continue/i;",
          "234: function IncomingMessage(socket) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "383:   this.chunkedEncoding = false;",
          "384:   this.shouldKeepAlive = true;",
          "385:   this.useChunkedEncodingByDefault = true;",
          "387:   this._hasBody = true;",
          "388:   this._trailer = '';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "473:   var sentConnectionHeader = false;",
          "474:   var sentContentLengthHeader = false;",
          "475:   var sentTransferEncodingHeader = false;",
          "476:   var sentExpect = false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "499:     } else if (contentLengthExpression.test(field)) {",
          "500:       sentContentLengthHeader = true;",
          "502:     } else if (expectExpression.test(field)) {",
          "503:       sentExpect = true;",
          "504:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "529:     }",
          "530:   }",
          "533:   if (sentConnectionHeader === false) {",
          "534:     if (this.shouldKeepAlive &&",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "817:   if (req.method === 'HEAD') this._hasBody = false;",
          "819:   if (req.httpVersionMajor < 1 || req.httpVersionMinor < 1) {",
          "820:     this.useChunkedEncodingByDefault = false;",
          "821:     this.shouldKeepAlive = false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-http-1.0.js||test/simple/test-http-1.0.js": [
          "File: test/simple/test-http-1.0.js -> test/simple/test-http-1.0.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "104:     assert.equal('1.0', req.httpVersion);",
          "105:     assert.equal(1, req.httpVersionMajor);",
          "106:     assert.equal(0, req.httpVersionMinor);",
          "107:     res.writeHead(200, {'Content-Type': 'text/plain'});",
          "108:     res.write('Hello, '); res._send('');",
          "109:     res.write('world!'); res._send('');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "107:     res.sendDate = false;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "140:     assert.equal('1.1', req.httpVersion);",
          "141:     assert.equal(1, req.httpVersionMajor);",
          "142:     assert.equal(1, req.httpVersionMinor);",
          "143:     res.writeHead(200, {'Content-Type': 'text/plain'});",
          "144:     res.write('Hello, '); res._send('');",
          "145:     res.write('world!'); res._send('');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "144:     res.sendDate = false;",
          "",
          "---------------"
        ],
        "test/simple/test-http-date-header.js||test/simple/test-http-date-header.js": [
          "File: test/simple/test-http-date-header.js -> test/simple/test-http-date-header.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: var common = require(\"../common\");",
          "2: var assert = require('assert');",
          "3: var http = require(\"http\");",
          "5: var testResBody = \"other stuff!\\n\";",
          "7: var server = http.createServer(function(req, res) {",
          "8:   assert.ok(! (\"date\" in req.headers),",
          "9:     \"Request headers contained a Date.\"",
          "10:   );",
          "11:   res.writeHead(200, {",
          "12:     'Content-Type' : 'text/plain',",
          "13:   });",
          "14:   res.end(testResBody);",
          "15: });",
          "16: server.listen(common.PORT);",
          "19: server.addListener(\"listening\", function() {",
          "20:   var options = {",
          "21:     port: common.PORT,",
          "22:     path: \"/\",",
          "23:     method: \"GET\"",
          "24:   }",
          "25:   var req = http.request(options, function (res) {",
          "26:     assert.ok(\"date\" in res.headers,",
          "27:       \"Response headers didn't contain a Date.\"",
          "28:     );",
          "29:     res.addListener('end', function () {",
          "30:       server.close();",
          "31:       process.exit();",
          "32:     });",
          "33:   });",
          "34:   req.end();",
          "35: });",
          "",
          "---------------"
        ],
        "test/simple/test-http-max-headers-count.js||test/simple/test-http-max-headers-count.js": [
          "File: test/simple/test-http-max-headers-count.js -> test/simple/test-http-max-headers-count.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "56:   var maxAndExpected = [ // for client",
          "57:     [20, 20],",
          "58:     [1200, 1200],",
          "60:   ];",
          "61:   doRequest();",
          "",
          "[Removed Lines]",
          "59:     [0, N + 2], // Connection and Transfer-Encoding",
          "",
          "[Added Lines]",
          "59:     [0, N + 3], // Connection, Date and Transfer-Encoding",
          "",
          "---------------"
        ]
      }
    }
  ]
}