{
  "cve_id": "CVE-2016-4563",
  "cve_desc": "The TraceStrokePolygon function in MagickCore/draw.c in ImageMagick before 6.9.4-0 and 7.x before 7.0.1-2 mishandles the relationship between the BezierQuantum value and certain strokes data, which allows remote attackers to cause a denial of service (buffer overflow and application crash) or possibly have unspecified other impact via a crafted file.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "726812fa2fa7ce16bcf58f6e115f65427a1c0950",
  "patch_info": {
    "commit_hash": "726812fa2fa7ce16bcf58f6e115f65427a1c0950",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/726812fa2fa7ce16bcf58f6e115f65427a1c0950",
    "files": [
      "ChangeLog",
      "MagickCore/draw.c"
    ],
    "message": "Prevent buffer overflow in magick/draw.c",
    "before_after_code_files": [
      "MagickCore/draw.c||MagickCore/draw.c"
    ]
  },
  "patch_diff": {
    "MagickCore/draw.c||MagickCore/draw.c": [
      "File: MagickCore/draw.c -> MagickCore/draw.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1417:   MagickStatusType",
      "1418:     status;",
      "1421:   assert(image->signature == MagickCoreSignature);",
      "1422:   if (image->debug != MagickFalse)",
      "1423:     (void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\",image->filename);",
      "",
      "[Removed Lines]",
      "1420:   assert(image != (Image *) NULL);",
      "",
      "[Added Lines]",
      "1420:   assert(image != (Image *) NULL);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1541:       {",
      "1542:         offset-=length;",
      "1543:         n++;",
      "1545:         continue;",
      "1546:       }",
      "1547:     if (offset < length)",
      "",
      "[Removed Lines]",
      "1544:         length=scale*(draw_info->dash_pattern[n]+0.5);",
      "",
      "[Added Lines]",
      "1544:         length=scale*(draw_info->dash_pattern[n]+0.5);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1794:         image->filename);",
      "1795:     }",
      "1796:   graphic_context[n]=CloneDrawInfo((ImageInfo *) NULL,draw_info);",
      "1798:   if ((image->page.width == 0) || (image->page.height == 0))",
      "1799:     {",
      "1800:       graphic_context[n]->viewbox.width=image->columns;",
      "",
      "[Removed Lines]",
      "1797:   graphic_context[n]->viewbox=image->page;",
      "",
      "[Added Lines]",
      "1797:   graphic_context[n]->viewbox=image->page;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2104:             ssize_t",
      "2105:               style;",
      "2108:             style=ParseCommandOption(MagickStyleOptions,MagickFalse,token);",
      "2109:             if (style == -1)",
      "2110:               status=MagickFalse;",
      "",
      "[Removed Lines]",
      "2107:             GetNextToken(q,&q,extent,token);",
      "",
      "[Added Lines]",
      "2107:             GetNextToken(q,&q,extent,token);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2353:                   break;",
      "2354:                 }",
      "2355:                 (void) CopyMagickString(token,p,(size_t) (q-p-4+1));",
      "2357:                   graphic_context[n]->affine.ry*segment.y1+",
      "2358:                   graphic_context[n]->affine.tx;",
      "2359:                 bounds.y1=graphic_context[n]->affine.rx*segment.x1+",
      "",
      "[Removed Lines]",
      "2356:                 bounds.x1=graphic_context[n]->affine.sx*segment.x1+",
      "",
      "[Added Lines]",
      "2356:                 bounds.x1=graphic_context[n]->affine.sx*segment.x1+",
      "2357:                   graphic_context[n]->affine.ry*segment.y1+",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "4608:     }",
      "4609:     default:",
      "4610:     {",
      "4612:         mid,",
      "4613:         scale;",
      "",
      "[Removed Lines]",
      "4611:       double",
      "",
      "[Added Lines]",
      "4612:       double",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "4643:           MagickBooleanType",
      "4644:             closed_path;",
      "4647:             Draw strokes while respecting line cap/join attributes.",
      "4649:           for (i=0; primitive_info[i].primitive != UndefinedPrimitive; i++) ;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "4744:   MagickStatusType",
      "4745:     status;",
      "4747:   PrimitiveInfo",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "4860:   ImageInfo",
      "4864:     Initialize draw attributes.",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "4925:   option=GetImageOption(clone_info,\"kerning\");",
      "4926:   if (option != (const char *) NULL)",
      "4927:     draw_info->kerning=StringToDouble(option,(char **) NULL);",
      "4929:   if (option != (const char *) NULL)",
      "4930:     (void) QueryColorCompliance(option,AllCompliance,&draw_info->stroke,",
      "4931:       exception);",
      "",
      "[Removed Lines]",
      "4928:   option=GetImageOption(clone_info,\"stroke\");",
      "",
      "[Added Lines]",
      "4929:   option=GetImageOption(clone_info,\"stroke\");",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "6021:       }",
      "6022:     else",
      "6023:       {",
      "6035:         box_p[4]=box_p[1];",
      "6036:         box_q[4]=box_q[1];",
      "6037:       }",
      "",
      "[Removed Lines]",
      "6024:         box_p[2].x=polygon_primitive[n].point.x+offset.x;",
      "6025:         box_p[2].y=polygon_primitive[n].point.y+offset.y;",
      "6026:         box_p[3].x=polygon_primitive[i].point.x+offset.x;",
      "6027:         box_p[3].y=polygon_primitive[i].point.y+offset.y;",
      "6028:         box_q[2].x=polygon_primitive[n].point.x-offset.x;",
      "6029:         box_q[2].y=polygon_primitive[n].point.y-offset.y;",
      "6030:         box_q[3].x=polygon_primitive[i].point.x-offset.x;",
      "6031:         box_q[3].y=polygon_primitive[i].point.y-offset.y;",
      "6032:       }",
      "6033:     if (fabs((double) (slope.p-slope.q)) < MagickEpsilon)",
      "6034:       {",
      "",
      "[Added Lines]",
      "6025:         box_p[2].x=polygon_primitive[n].point.x+offset.x;",
      "6026:         box_p[2].y=polygon_primitive[n].point.y+offset.y;",
      "6027:         box_p[3].x=polygon_primitive[i].point.x+offset.x;",
      "6028:         box_p[3].y=polygon_primitive[i].point.y+offset.y;",
      "6029:         box_q[2].x=polygon_primitive[n].point.x-offset.x;",
      "6030:         box_q[2].y=polygon_primitive[n].point.y-offset.y;",
      "6031:         box_q[3].x=polygon_primitive[i].point.x-offset.x;",
      "6032:         box_q[3].y=polygon_primitive[i].point.y-offset.y;",
      "6033:       }",
      "6034:     if (fabs((double) (slope.p-slope.q)) < MagickEpsilon)",
      "6035:       {",
      "6036:         box_p[4]=box_p[1];",
      "6037:         box_q[4]=box_q[1];",
      "6038:       }",
      "6039:     else",
      "6040:       {",
      "6041:         box_p[4].x=(double) ((slope.p*box_p[0].x-box_p[0].y-slope.q*box_p[3].x+",
      "6042:           box_p[3].y)/(slope.p-slope.q));",
      "6043:         box_p[4].y=(double) (slope.p*(box_p[4].x-box_p[0].x)+box_p[0].y);",
      "6044:         box_q[4].x=(double) ((slope.p*box_q[0].x-box_q[0].y-slope.q*box_q[3].x+",
      "6045:           box_q[3].y)/(slope.p-slope.q));",
      "6046:         box_q[4].y=(double) (slope.p*(box_q[4].x-box_q[0].x)+box_q[0].y);",
      "6047:       }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fc0f1249300d84ccb63b81a9dd87245d6ed34806",
      "candidate_info": {
        "commit_hash": "fc0f1249300d84ccb63b81a9dd87245d6ed34806",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/fc0f1249300d84ccb63b81a9dd87245d6ed34806",
        "files": [
          "MagickCore/coder.c",
          "MagickCore/color.c",
          "MagickCore/configure.c",
          "MagickCore/delegate.c",
          "MagickCore/draw.c",
          "MagickCore/locale.c",
          "MagickCore/log.c",
          "MagickCore/magic.c",
          "MagickCore/policy.c",
          "MagickCore/type.c",
          "coders/svg.c"
        ],
        "message": "Use correct extent value when calling GetMagickToken.",
        "before_after_code_files": [
          "MagickCore/coder.c||MagickCore/coder.c",
          "MagickCore/color.c||MagickCore/color.c",
          "MagickCore/configure.c||MagickCore/configure.c",
          "MagickCore/delegate.c||MagickCore/delegate.c",
          "MagickCore/draw.c||MagickCore/draw.c",
          "MagickCore/locale.c||MagickCore/locale.c",
          "MagickCore/log.c||MagickCore/log.c",
          "MagickCore/magic.c||MagickCore/magic.c",
          "MagickCore/policy.c||MagickCore/policy.c",
          "MagickCore/type.c||MagickCore/type.c",
          "coders/svg.c||coders/svg.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MagickCore/draw.c||MagickCore/draw.c"
          ],
          "candidate": [
            "MagickCore/draw.c||MagickCore/draw.c"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/coder.c||MagickCore/coder.c": [
          "File: MagickCore/coder.c -> MagickCore/coder.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "776:     for (j=(ssize_t) strlen(coder_info[i]->magick); j <= 11; j++)",
          "777:       (void) FormatLocaleFile(file,\" \");",
          "778:     if (coder_info[i]->name != (char *) NULL)",
          "780:     (void) FormatLocaleFile(file,\"\\n\");",
          "781:   }",
          "782:   coder_info=(const CoderInfo **) RelinquishMagickMemory((void *) coder_info);",
          "",
          "[Removed Lines]",
          "779:       (void) FormatLocaleFile(file,\"%s\",coder_info[i]->name);",
          "",
          "[Added Lines]",
          "779:       (void) FormatLocaleFile(file,\"%s\",coder_info[i]->name);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "819: static MagickBooleanType LoadCoderCache(SplayTreeInfo *coder_cache,",
          "820:   const char *xml,const char *filename,const size_t depth,",
          "821:   ExceptionInfo *exception)",
          "822: {",
          "823:   char",
          "824:     keyword[MagickPathExtent],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "822: {",
          "823:   char",
          "824:     keyword[MagickPathExtent],",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "830:   CoderInfo",
          "833:   MagickStatusType",
          "834:     status;",
          "839:   (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),",
          "840:     \"Loading coder configuration file \\\"%s\\\" ...\",filename);",
          "",
          "[Removed Lines]",
          "837:     Load the coder map file.",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "844:   coder_info=(CoderInfo *) NULL;",
          "845:   token=AcquireString(xml);",
          "846:   for (q=(char *) xml; *q != '\\0'; )",
          "849:       Interpret XML.",
          "",
          "[Removed Lines]",
          "847:   {",
          "",
          "[Added Lines]",
          "851:   {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "853:       break;",
          "854:     (void) CopyMagickString(keyword,token,MagickPathExtent);",
          "855:     if (LocaleNCompare(keyword,\"<!DOCTYPE\",9) == 0)",
          "858:           Doctype element.",
          "",
          "[Removed Lines]",
          "856:       {",
          "",
          "[Added Lines]",
          "860:       {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "864:     if (LocaleNCompare(keyword,\"<!--\",4) == 0)",
          "865:       {",
          "869:         while ((LocaleNCompare(q,\"->\",2) != 0) && (*q != '\\0'))",
          "871:         continue;",
          "872:       }",
          "873:     if (LocaleCompare(keyword,\"<include\") == 0)",
          "",
          "[Removed Lines]",
          "867:           Comment element.",
          "870:           GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Added Lines]",
          "871:           Comment element.",
          "874:           GetMagickToken(q,&q,extent,token);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "926:         coder_info->exempt=MagickFalse;",
          "927:         coder_info->signature=MagickCoreSignature;",
          "928:         continue;",
          "930:     if (coder_info == (CoderInfo *) NULL)",
          "931:       continue;",
          "934:         status=AddValueToSplayTree(coder_cache,ConstantString(",
          "935:           coder_info->magick),coder_info);",
          "936:         if (status == MagickFalse)",
          "",
          "[Removed Lines]",
          "929:       }",
          "932:     if (LocaleCompare(keyword,\"/>\") == 0)",
          "933:       {",
          "",
          "[Added Lines]",
          "933:       }",
          "936:     if (LocaleCompare(keyword,\"/>\") == 0)",
          "937:       {",
          "",
          "---------------"
        ],
        "MagickCore/color.c||MagickCore/color.c": [
          "File: MagickCore/color.c -> MagickCore/color.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1950:       }",
          "1951:     path=color_info[i]->path;",
          "1952:     (void) FormatLocaleFile(file,\"%-21.21s \",color_info[i]->name);",
          "1954:     (void) FormatLocaleFile(file,\"%-45.45s \",tuple);",
          "1955:     if ((color_info[i]->compliance & SVGCompliance) != 0)",
          "1956:       (void) FormatLocaleFile(file,\"SVG \");",
          "",
          "[Removed Lines]",
          "1953:     GetColorTuple(&color_info[i]->color,MagickFalse,tuple);",
          "",
          "[Added Lines]",
          "1953:     GetColorTuple(&color_info[i]->color,MagickFalse,tuple);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1993: %    o filename:  The color list filename.",
          "1994: %",
          "1995: %    o depth: depth of <include /> statements.",
          "1996: %",
          "1997: %    o exception: return any errors or warnings in this structure.",
          "1998: %",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1996: %",
          "1997: %    o exception: return any errors or warnings in this structure.",
          "1998: %",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2003: {",
          "2004:   char",
          "2005:     keyword[MagickPathExtent],",
          "2008:   ColorInfo",
          "2014:   MagickStatusType",
          "",
          "[Removed Lines]",
          "2011:   const char",
          "",
          "[Added Lines]",
          "2015:     status;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2018:     Load the color map file.",
          "2020:   (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),",
          "2022:   if (xml == (char *) NULL)",
          "2023:     return(MagickFalse);",
          "2024:   status=MagickTrue;",
          "",
          "[Removed Lines]",
          "2021:     \"Loading color file \\\"%s\\\" ...\",filename);",
          "",
          "[Added Lines]",
          "2025:   if (xml == (char *) NULL)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2027:   for (q=(char *) xml; *q != '\\0'; )",
          "2028:   {",
          "2032:     GetMagickToken(q,&q,MagickPathExtent,token);",
          "2033:     if (*token == '\\0')",
          "",
          "[Removed Lines]",
          "2030:       Interpret XML.",
          "",
          "[Added Lines]",
          "2034:       Interpret XML.",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2039:           Doctype element.",
          "2042:           GetMagickToken(q,&q,MagickPathExtent,token);",
          "2043:         continue;",
          "2045:     if (LocaleNCompare(keyword,\"<!--\",4) == 0)",
          "2046:       {",
          "",
          "[Removed Lines]",
          "2041:         while ((LocaleNCompare(q,\"]>\",2) != 0) && (*q != '\\0'))",
          "2044:       }",
          "",
          "[Added Lines]",
          "2045:         while ((LocaleNCompare(q,\"]>\",2) != 0) && (*q != '\\0'))",
          "2048:       }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2100:           Color element.",
          "2103:         if (color_info == (ColorInfo *) NULL)",
          "2104:           ThrowFatalException(ResourceLimitFatalError,\"MemoryAllocationFailed\");",
          "2107:         color_info->exempt=MagickFalse;",
          "2108:         color_info->signature=MagickCoreSignature;",
          "2109:         continue;",
          "",
          "[Removed Lines]",
          "2102:         color_info=(ColorInfo *) AcquireMagickMemory(sizeof(*color_info));",
          "2105:         (void) ResetMagickMemory(color_info,0,sizeof(*color_info));",
          "2106:         color_info->path=ConstantString(filename);",
          "",
          "[Added Lines]",
          "2106:         color_info=(ColorInfo *) AcquireMagickMemory(sizeof(*color_info));",
          "2109:         (void) ResetMagickMemory(color_info,0,sizeof(*color_info));",
          "2110:         color_info->path=ConstantString(filename);",
          "",
          "---------------"
        ],
        "MagickCore/configure.c||MagickCore/configure.c": [
          "File: MagickCore/configure.c -> MagickCore/configure.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1109:     (void) FormatLocaleFile(file,\"%s\",name);",
          "1110:     for (j=(ssize_t) strlen(name); j <= 13; j++)",
          "1111:       (void) FormatLocaleFile(file,\" \");",
          "1113:     value=\"unknown\";",
          "1114:     if (configure_info[i]->value != (char *) NULL)",
          "1115:       value=configure_info[i]->value;",
          "",
          "[Removed Lines]",
          "1112:     (void) FormatLocaleFile(file,\" \");",
          "",
          "[Added Lines]",
          "1112:     (void) FormatLocaleFile(file,\" \");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1152: %    o depth: depth of <include /> statements.",
          "1153: %",
          "1154: %    o exception: return any errors or warnings in this structure.",
          "1155: %",
          "1157: static MagickBooleanType LoadConfigureCache(LinkedListInfo *configure_cache,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1155: %",
          "1157: static MagickBooleanType LoadConfigureCache(LinkedListInfo *configure_cache,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1159:   ExceptionInfo *exception)",
          "1160: {",
          "1161:   char",
          "1165:   ConfigureInfo",
          "1171:   MagickStatusType",
          "",
          "[Removed Lines]",
          "1162:     keyword[MagickPathExtent],",
          "1168:   const char",
          "",
          "[Added Lines]",
          "1165:   ConfigureInfo",
          "1172:     status;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1175:     Load the configure map file.",
          "1177:   (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),",
          "1179:   status=MagickTrue;",
          "1180:   configure_info=(ConfigureInfo *) NULL;",
          "1181:   token=AcquireString((char *) xml);",
          "",
          "[Removed Lines]",
          "1178:     \"Loading configure file \\\"%s\\\" ...\",filename);",
          "",
          "[Added Lines]",
          "1182:   status=MagickTrue;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1185:       Interpret XML.",
          "1188:     if (*token == '\\0')",
          "1189:       break;",
          "1190:     (void) CopyMagickString(keyword,token,MagickPathExtent);",
          "",
          "[Removed Lines]",
          "1187:     GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Added Lines]",
          "1191:     GetMagickToken(q,&q,extent,token);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1196:         while ((LocaleNCompare(q,\"]>\",2) != 0) && (*q != '\\0'))",
          "1197:           GetMagickToken(q,&q,MagickPathExtent,token);",
          "1199:       }",
          "1200:     if (LocaleNCompare(keyword,\"<!--\",4) == 0)",
          "1203:           Comment element.",
          "",
          "[Removed Lines]",
          "1198:         continue;",
          "1201:       {",
          "",
          "[Added Lines]",
          "1202:         continue;",
          "1205:       {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1260:           ThrowFatalException(ResourceLimitFatalError,\"MemoryAllocationFailed\");",
          "1261:         (void) ResetMagickMemory(configure_info,0,sizeof(*configure_info));",
          "1262:         configure_info->path=ConstantString(filename);",
          "1264:         configure_info->signature=MagickCoreSignature;",
          "1265:         continue;",
          "1268:       continue;",
          "1269:     if (LocaleCompare(keyword,\"/>\") == 0)",
          "1270:       {",
          "",
          "[Removed Lines]",
          "1263:         configure_info->exempt=MagickFalse;",
          "1266:       }",
          "1267:     if (configure_info == (ConfigureInfo *) NULL)",
          "",
          "[Added Lines]",
          "1267:         configure_info->exempt=MagickFalse;",
          "1270:       }",
          "1271:     if (configure_info == (ConfigureInfo *) NULL)",
          "",
          "---------------"
        ],
        "MagickCore/delegate.c||MagickCore/delegate.c": [
          "File: MagickCore/delegate.c -> MagickCore/delegate.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1461:     StripString(commands[0]);",
          "1462:     (void) FormatLocaleFile(file,\"\\\"%s\\\"\\n\",commands[0]);",
          "1463:     for (j=1; commands[j] != (char *) NULL; j++)",
          "1465:       StripString(commands[j]);",
          "1466:       (void) FormatLocaleFile(file,\"                     \\\"%s\\\"\\n\",commands[j]);",
          "1467:     }",
          "",
          "[Removed Lines]",
          "1464:     {",
          "",
          "[Added Lines]",
          "1464:     {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1504: %",
          "1505: %    o depth: depth of <include /> statements.",
          "1506: %",
          "1507: %    o exception: return any errors or warnings in this structure.",
          "1508: %",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1507: %    o exception: return any errors or warnings in this structure.",
          "1508: %",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1514:   char",
          "1515:     keyword[MagickPathExtent],",
          "1518:   const char",
          "1521:   DelegateInfo",
          "1524:   MagickStatusType",
          "1525:     status;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1530:   (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),",
          "1531:     \"Loading delegate configuration file \\\"%s\\\" ...\",filename);",
          "1533:     return(MagickFalse);",
          "1534:   status=MagickTrue;",
          "1535:   delegate_info=(DelegateInfo *) NULL;",
          "",
          "[Removed Lines]",
          "1532:   if (xml == (const char *) NULL)",
          "",
          "[Added Lines]",
          "1536:     return(MagickFalse);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1538:   {",
          "1540:       Interpret XML.",
          "1542:     GetMagickToken(q,&q,MagickPathExtent,token);",
          "1543:     if (*token == '\\0')",
          "1544:       break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1549:           Doctype element.",
          "1551:         while ((LocaleNCompare(q,\"]>\",2) != 0) && (*q != '\\0'))",
          "1553:         continue;",
          "1554:       }",
          "1556:       {",
          "1558:           Comment element.",
          "",
          "[Removed Lines]",
          "1552:           GetMagickToken(q,&q,MagickPathExtent,token);",
          "1555:     if (LocaleNCompare(keyword,\"<!--\",4) == 0)",
          "",
          "[Added Lines]",
          "1556:           GetMagickToken(q,&q,extent,token);",
          "1559:     if (LocaleNCompare(keyword,\"<!--\",4) == 0)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1612:         delegate_info=(DelegateInfo *) AcquireMagickMemory(",
          "1613:           sizeof(*delegate_info));",
          "1615:           ThrowFatalException(ResourceLimitFatalError,\"MemoryAllocationFailed\");",
          "1616:         (void) ResetMagickMemory(delegate_info,0,sizeof(*delegate_info));",
          "1619:         delegate_info->signature=MagickCoreSignature;",
          "1620:         continue;",
          "1621:       }",
          "",
          "[Removed Lines]",
          "1614:         if (delegate_info == (DelegateInfo *) NULL)",
          "1617:         delegate_info->path=ConstantString(filename);",
          "1618:         delegate_info->thread_support=MagickTrue;",
          "",
          "[Added Lines]",
          "1618:         if (delegate_info == (DelegateInfo *) NULL)",
          "1621:         delegate_info->path=ConstantString(filename);",
          "1622:         delegate_info->thread_support=MagickTrue;",
          "",
          "---------------"
        ],
        "MagickCore/draw.c||MagickCore/draw.c": [
          "File: MagickCore/draw.c -> MagickCore/draw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1714:     point;",
          "1716:   PrimitiveInfo",
          "1719:   PrimitiveType",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1784:   primitive_info=(PrimitiveInfo *) AcquireQuantumMemory((size_t) number_points,",
          "1785:     sizeof(*primitive_info));",
          "1786:   if (primitive_info == (PrimitiveInfo *) NULL)",
          "1787:     {",
          "1788:       primitive=DestroyString(primitive);",
          "1789:       for ( ; n >= 0; n--)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1788:     {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1792:       ThrowBinaryException(ResourceLimitError,\"MemoryAllocationFailed\",",
          "1793:         image->filename);",
          "1794:     }",
          "1796:   graphic_context[n]->viewbox=image->page;",
          "1797:   if ((image->page.width == 0) || (image->page.height == 0))",
          "1798:     {",
          "",
          "[Removed Lines]",
          "1795:   graphic_context[n]=CloneDrawInfo((ImageInfo *) NULL,draw_info);",
          "",
          "[Added Lines]",
          "1797:   graphic_context[n]->viewbox=image->page;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1817:           Comment.",
          "1819:         while ((*q != '\\n') && (*q != '\\0'))",
          "1821:         continue;",
          "1823:     p=q-strlen(keyword)-1;",
          "1825:     current=graphic_context[n]->affine;",
          "1827:     switch (*keyword)",
          "1829:       case ';':",
          "1831:       case 'a':",
          "1833:       {",
          "1835:           {",
          "1837:             affine.sx=StringToDouble(token,(char **) NULL);",
          "1839:             if (*token == ',')",
          "1841:             affine.rx=StringToDouble(token,(char **) NULL);",
          "1842:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "1843:             if (*token == ',')",
          "",
          "[Removed Lines]",
          "1820:           q++;",
          "1822:       }",
          "1824:     primitive_type=UndefinedPrimitive;",
          "1826:     GetAffineMatrix(&affine);",
          "1828:     {",
          "1830:         break;",
          "1832:       case 'A':",
          "1834:         if (LocaleCompare(\"affine\",keyword) == 0)",
          "1836:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "1838:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "1840:               GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Added Lines]",
          "1822:           q++;",
          "1824:       }",
          "1826:     primitive_type=UndefinedPrimitive;",
          "1828:     GetAffineMatrix(&affine);",
          "1830:     {",
          "1832:         break;",
          "1834:       case 'A':",
          "1836:         if (LocaleCompare(\"affine\",keyword) == 0)",
          "1838:             GetMagickToken(q,&q,extent,token);",
          "1840:             GetMagickToken(q,&q,extent,token);",
          "1842:               GetMagickToken(q,&q,extent,token);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1864:           }",
          "1865:         if (LocaleCompare(\"arc\",keyword) == 0)",
          "1866:           {",
          "1868:             break;",
          "1869:           }",
          "1870:         status=MagickFalse;",
          "",
          "[Removed Lines]",
          "1867:             primitive_type=ArcPrimitive;",
          "",
          "[Added Lines]",
          "1869:             primitive_type=ArcPrimitive;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1880:           }",
          "1881:         if (LocaleCompare(\"border-color\",keyword) == 0)",
          "1882:           {",
          "1884:             (void) QueryColorCompliance(token,AllCompliance,",
          "1885:               &graphic_context[n]->border_color,exception);",
          "1886:             break;",
          "",
          "[Removed Lines]",
          "1883:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Added Lines]",
          "1885:             GetMagickToken(q,&q,extent,token);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1891:       case 'c':",
          "1892:       case 'C':",
          "1893:       {",
          "1895:           {",
          "1897:               Create clip mask.",
          "",
          "[Removed Lines]",
          "1894:         if (LocaleCompare(\"clip-path\",keyword) == 0)",
          "",
          "[Added Lines]",
          "1896:         if (LocaleCompare(\"clip-path\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1905:         if (LocaleCompare(\"clip-rule\",keyword) == 0)",
          "1906:           {",
          "1907:             ssize_t",
          "1910:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "1911:             fill_rule=ParseCommandOption(MagickFillRuleOptions,MagickFalse,",
          "",
          "[Removed Lines]",
          "1908:               fill_rule;",
          "",
          "[Added Lines]",
          "1910:               fill_rule;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1946:             primitive_type=CirclePrimitive;",
          "1947:             break;",
          "1948:           }",
          "1950:           {",
          "1951:             primitive_type=ColorPrimitive;",
          "1952:             break;",
          "",
          "[Removed Lines]",
          "1949:         if (LocaleCompare(\"color\",keyword) == 0)",
          "",
          "[Added Lines]",
          "1951:         if (LocaleCompare(\"color\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1957:       case 'd':",
          "1958:       case 'D':",
          "1959:       {",
          "1961:           {",
          "1962:             ssize_t",
          "1963:               decorate;",
          "",
          "[Removed Lines]",
          "1960:         if (LocaleCompare(\"decorate\",keyword) == 0)",
          "",
          "[Added Lines]",
          "1962:         if (LocaleCompare(\"decorate\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1966:             decorate=ParseCommandOption(MagickDecorateOptions,MagickFalse,",
          "1967:               token);",
          "1968:             if (decorate == -1)",
          "1970:             else",
          "1971:               graphic_context[n]->decorate=(DecorationType) decorate;",
          "1972:             break;",
          "",
          "[Removed Lines]",
          "1969:               status=MagickFalse;",
          "",
          "[Added Lines]",
          "1971:               status=MagickFalse;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1988:             if (direction == -1)",
          "1989:               status=MagickFalse;",
          "1990:             else",
          "1992:             break;",
          "1993:           }",
          "1994:         status=MagickFalse;",
          "",
          "[Removed Lines]",
          "1991:               graphic_context[n]->direction=(DirectionType) direction;",
          "",
          "[Added Lines]",
          "1993:               graphic_context[n]->direction=(DirectionType) direction;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2000:         if (LocaleCompare(\"ellipse\",keyword) == 0)",
          "2001:           {",
          "2002:             primitive_type=EllipsePrimitive;",
          "2004:           }",
          "2005:         if (LocaleCompare(\"encoding\",keyword) == 0)",
          "2006:           {",
          "",
          "[Removed Lines]",
          "2003:             break;",
          "",
          "[Added Lines]",
          "2005:             break;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2027:                   &graphic_context[n]->fill,exception);",
          "2028:                 if (status == MagickFalse)",
          "2029:                   {",
          "2033:                     pattern_info=AcquireImageInfo();",
          "",
          "[Removed Lines]",
          "2030:                     ImageInfo",
          "",
          "[Added Lines]",
          "2032:                     ImageInfo",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2038:                     CatchException(exception);",
          "2039:                     pattern_info=DestroyImageInfo(pattern_info);",
          "2040:                   }",
          "2042:             break;",
          "2043:           }",
          "2044:         if (LocaleCompare(\"fill-opacity\",keyword) == 0)",
          "",
          "[Removed Lines]",
          "2041:               }",
          "",
          "[Added Lines]",
          "2043:               }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2049:               factor*StringToDouble(token,(char **) NULL);",
          "2050:             break;",
          "2051:           }",
          "2053:           {",
          "2054:             ssize_t",
          "2055:               fill_rule;",
          "",
          "[Removed Lines]",
          "2052:         if (LocaleCompare(\"fill-rule\",keyword) == 0)",
          "",
          "[Added Lines]",
          "2054:         if (LocaleCompare(\"fill-rule\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2058:             fill_rule=ParseCommandOption(MagickFillRuleOptions,MagickFalse,",
          "2059:               token);",
          "2060:             if (fill_rule == -1)",
          "2062:             else",
          "2063:               graphic_context[n]->fill_rule=(FillRule) fill_rule;",
          "2064:             break;",
          "2065:           }",
          "2066:         if (LocaleCompare(\"font\",keyword) == 0)",
          "2068:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "2069:             (void) CloneString(&graphic_context[n]->font,token);",
          "2070:             if (LocaleCompare(\"none\",token) == 0)",
          "",
          "[Removed Lines]",
          "2061:               status=MagickFalse;",
          "2067:           {",
          "",
          "[Added Lines]",
          "2063:               status=MagickFalse;",
          "2069:           {",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2073:             break;",
          "2074:           }",
          "2075:         if (LocaleCompare(\"font-family\",keyword) == 0)",
          "2077:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "2078:             (void) CloneString(&graphic_context[n]->family,token);",
          "2079:             break;",
          "",
          "[Removed Lines]",
          "2076:           {",
          "",
          "[Added Lines]",
          "2078:           {",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2086:           }",
          "2087:         if (LocaleCompare(\"font-stretch\",keyword) == 0)",
          "2088:           {",
          "2090:               stretch;",
          "2092:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "2089:             ssize_t",
          "",
          "[Added Lines]",
          "2091:             ssize_t",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2099:           }",
          "2100:         if (LocaleCompare(\"font-style\",keyword) == 0)",
          "2101:           {",
          "2103:               style;",
          "2105:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "2102:             ssize_t",
          "",
          "[Added Lines]",
          "2104:             ssize_t",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2115:             ssize_t",
          "2116:               weight;",
          "2119:             weight=ParseCommandOption(MagickWeightOptions,MagickFalse,",
          "2120:               token);",
          "2121:             if (weight == -1)",
          "",
          "[Removed Lines]",
          "2118:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Added Lines]",
          "2120:             GetMagickToken(q,&q,extent,token);",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "2123:             graphic_context[n]->weight=(size_t) weight;",
          "2124:             break;",
          "2125:           }",
          "2127:         break;",
          "2128:       }",
          "2129:       case 'g':",
          "",
          "[Removed Lines]",
          "2126:         status=MagickFalse;",
          "",
          "[Added Lines]",
          "2128:         status=MagickFalse;",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "2143:             gravity=ParseCommandOption(MagickGravityOptions,MagickFalse,token);",
          "2144:             if (gravity == -1)",
          "2145:               status=MagickFalse;",
          "2147:               graphic_context[n]->gravity=(GravityType) gravity;",
          "2148:             break;",
          "2149:           }",
          "",
          "[Removed Lines]",
          "2146:             else",
          "",
          "[Added Lines]",
          "2148:             else",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "2153:       case 'i':",
          "2154:       case 'I':",
          "2155:       {",
          "2157:           {",
          "2158:             ssize_t",
          "2159:               compose;",
          "2161:             primitive_type=ImagePrimitive;",
          "2162:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "2164:             if (compose == -1)",
          "2165:               status=MagickFalse;",
          "2166:             else",
          "",
          "[Removed Lines]",
          "2156:         if (LocaleCompare(\"image\",keyword) == 0)",
          "2163:             compose=ParseCommandOption(MagickComposeOptions,MagickFalse,token);",
          "",
          "[Added Lines]",
          "2158:         if (LocaleCompare(\"image\",keyword) == 0)",
          "2165:             compose=ParseCommandOption(MagickComposeOptions,MagickFalse,token);",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "2173:             graphic_context[n]->interline_spacing=StringToDouble(token,",
          "2174:               (char **) NULL);",
          "2175:             break;",
          "2177:         if (LocaleCompare(\"interword-spacing\",keyword) == 0)",
          "2178:           {",
          "2179:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "2176:           }",
          "",
          "[Added Lines]",
          "2178:           }",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "2194:             break;",
          "2195:           }",
          "2196:         status=MagickFalse;",
          "2198:       }",
          "2199:       case 'l':",
          "2200:       case 'L':",
          "2201:       {",
          "2203:           primitive_type=LinePrimitive;",
          "2204:         else",
          "2205:           status=MagickFalse;",
          "",
          "[Removed Lines]",
          "2197:         break;",
          "2202:         if (LocaleCompare(\"line\",keyword) == 0)",
          "",
          "[Added Lines]",
          "2199:         break;",
          "2204:         if (LocaleCompare(\"line\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "2236:             break;",
          "2237:           }",
          "2238:         if (LocaleCompare(\"point\",keyword) == 0)",
          "2240:             primitive_type=PointPrimitive;",
          "2241:             break;",
          "2242:           }",
          "",
          "[Removed Lines]",
          "2239:           {",
          "",
          "[Added Lines]",
          "2241:           {",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "2268:                     n=0;",
          "2269:                     break;",
          "2270:                   }",
          "2272:                   if (LocaleCompare(graphic_context[n]->clip_mask,",
          "2273:                       graphic_context[n-1]->clip_mask) != 0)",
          "2274:                     (void) SetImageMask(image,ReadPixelMask,(Image *) NULL,",
          "2275:                       exception);",
          "2276:                 graphic_context[n]=DestroyDrawInfo(graphic_context[n]);",
          "2278:                 break;",
          "2279:               }",
          "2280:             if (LocaleCompare(\"pattern\",token) == 0)",
          "2282:             status=MagickFalse;",
          "2283:             break;",
          "2285:         if (LocaleCompare(\"push\",keyword) == 0)",
          "2286:           {",
          "2287:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "2288:             if (LocaleCompare(\"clip-path\",token) == 0)",
          "2289:               {",
          "2290:                 char",
          "2293:                 GetMagickToken(q,&q,MagickPathExtent,token);",
          "2294:                 (void) FormatLocaleString(name,MagickPathExtent,\"%s\",token);",
          "",
          "[Removed Lines]",
          "2271:                 if (graphic_context[n]->clip_mask != (char *) NULL)",
          "2277:                 n--;",
          "2281:               break;",
          "2284:           }",
          "2291:                   name[MagickPathExtent];",
          "",
          "[Added Lines]",
          "2273:                 if (graphic_context[n]->clip_mask != (char *) NULL)",
          "2279:                 n--;",
          "2283:               break;",
          "2286:           }",
          "2293:                   name[MagickPathExtent];",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "2301:                   if (LocaleCompare(token,\"clip-path\") != 0)",
          "2302:                     continue;",
          "2303:                   break;",
          "2305:                 (void) CopyMagickString(token,p,(size_t) (q-p-4+1));",
          "2307:                 GetMagickToken(q,&q,MagickPathExtent,token);",
          "2309:               }",
          "2311:               {",
          "2313:                   key[2*MagickPathExtent],",
          "2315:                   type[MagickPathExtent];",
          "2317:                 SegmentInfo",
          "2321:                 (void) CopyMagickString(name,token,MagickPathExtent);",
          "2322:                 GetMagickToken(q,&q,MagickPathExtent,token);",
          "2323:                 (void) CopyMagickString(type,token,MagickPathExtent);",
          "2325:                 segment.x1=StringToDouble(token,(char **) NULL);",
          "2327:                 if (*token == ',')",
          "2328:                   GetMagickToken(q,&q,MagickPathExtent,token);",
          "2329:                 segment.y1=StringToDouble(token,(char **) NULL);",
          "2331:                 if (*token == ',')",
          "2332:                   GetMagickToken(q,&q,MagickPathExtent,token);",
          "2334:                 GetMagickToken(q,&q,MagickPathExtent,token);",
          "2335:                 if (*token == ',')",
          "2336:                   GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "2304:                 }",
          "2306:                 (void) SetImageArtifact(image,name,token);",
          "2308:                 break;",
          "2310:             if (LocaleCompare(\"gradient\",token) == 0)",
          "2312:                 char",
          "2314:                   name[MagickPathExtent],",
          "2318:                   segment;",
          "2320:                 GetMagickToken(q,&q,MagickPathExtent,token);",
          "2324:                 GetMagickToken(q,&q,MagickPathExtent,token);",
          "2326:                 GetMagickToken(q,&q,MagickPathExtent,token);",
          "2330:                 GetMagickToken(q,&q,MagickPathExtent,token);",
          "2333:                 segment.x2=StringToDouble(token,(char **) NULL);",
          "",
          "[Added Lines]",
          "2306:                 }",
          "2308:                 (void) SetImageArtifact(image,name,token);",
          "2310:                 break;",
          "2312:             if (LocaleCompare(\"gradient\",token) == 0)",
          "2314:                 char",
          "2316:                   name[MagickPathExtent],",
          "2320:                   segment;",
          "2322:                 GetMagickToken(q,&q,extent,token);",
          "2326:                 GetMagickToken(q,&q,extent,token);",
          "2328:                 GetMagickToken(q,&q,extent,token);",
          "2332:                 GetMagickToken(q,&q,extent,token);",
          "2335:                 segment.x2=StringToDouble(token,(char **) NULL);",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "2359:                   graphic_context[n]->affine.sy*segment.y1+",
          "2360:                   graphic_context[n]->affine.ty;",
          "2361:                 bounds.x2=graphic_context[n]->affine.sx*segment.x2+",
          "2363:                   graphic_context[n]->affine.tx;",
          "2364:                 bounds.y2=graphic_context[n]->affine.rx*segment.x2+",
          "2365:                   graphic_context[n]->affine.sy*segment.y2+",
          "",
          "[Removed Lines]",
          "2362:                   graphic_context[n]->affine.ry*segment.y2+",
          "",
          "[Added Lines]",
          "2364:                   graphic_context[n]->affine.ry*segment.y2+",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "2371:                 (void) FormatLocaleString(key,MagickPathExtent,\"%s-geometry\",name);",
          "2372:                 (void) FormatLocaleString(geometry,MagickPathExtent,",
          "2373:                   \"%gx%g%+.15g%+.15g\",",
          "2375:                   MagickMax(fabs(bounds.y2-bounds.y1+1.0),1.0),",
          "2377:                 (void) SetImageArtifact(image,key,geometry);",
          "2378:                 GetMagickToken(q,&q,MagickPathExtent,token);",
          "2380:               }",
          "2382:               {",
          "2383:                 char",
          "2385:                   name[MagickPathExtent];",
          "2387:                 RectangleInfo",
          "2388:                   pattern_bounds;",
          "2390:                 GetMagickToken(q,&q,MagickPathExtent,token);",
          "2392:                 GetMagickToken(q,&q,MagickPathExtent,token);",
          "2393:                 pattern_bounds.x=(ssize_t) ceil(StringToDouble(token,",
          "2394:                   (char **) NULL)-0.5);",
          "2395:                 GetMagickToken(q,&q,MagickPathExtent,token);",
          "2397:                   GetMagickToken(q,&q,MagickPathExtent,token);",
          "2398:                 pattern_bounds.y=(ssize_t) ceil(StringToDouble(token,",
          "2400:                 GetMagickToken(q,&q,MagickPathExtent,token);",
          "2401:                 if (*token == ',')",
          "2402:                   GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "2374:                   MagickMax(fabs(bounds.x2-bounds.x1+1.0),1.0),",
          "2376:                   bounds.x1,bounds.y1);",
          "2379:                 break;",
          "2381:             if (LocaleCompare(\"pattern\",token) == 0)",
          "2384:                   key[2*MagickPathExtent],",
          "2391:                 (void) CopyMagickString(name,token,MagickPathExtent);",
          "2396:                 if (*token == ',')",
          "2399:                   (char **) NULL)-0.5);",
          "",
          "[Added Lines]",
          "2376:                   MagickMax(fabs(bounds.x2-bounds.x1+1.0),1.0),",
          "2378:                   bounds.x1,bounds.y1);",
          "2381:                 break;",
          "2383:             if (LocaleCompare(\"pattern\",token) == 0)",
          "2386:                   key[2*MagickPathExtent],",
          "2393:                 (void) CopyMagickString(name,token,MagickPathExtent);",
          "2398:                 if (*token == ',')",
          "2401:                   (char **) NULL)-0.5);",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "2411:                 {",
          "2412:                   GetMagickToken(q,&q,MagickPathExtent,token);",
          "2413:                   if (LocaleCompare(token,\"pop\") != 0)",
          "2415:                   GetMagickToken(q,(const char **) NULL,MagickPathExtent,token);",
          "2416:                   if (LocaleCompare(token,\"pattern\") != 0)",
          "2417:                     continue;",
          "",
          "[Removed Lines]",
          "2414:                     continue;",
          "",
          "[Added Lines]",
          "2416:                     continue;",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "2448:               }",
          "2449:             if (LocaleCompare(\"defs\",token) == 0)",
          "2450:               break;",
          "2452:             break;",
          "2453:           }",
          "2454:         status=MagickFalse;",
          "",
          "[Removed Lines]",
          "2451:             status=MagickFalse;",
          "",
          "[Added Lines]",
          "2453:             status=MagickFalse;",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "2469:             affine.sx=cos(DegreesToRadians(fmod((double) angle,360.0)));",
          "2470:             affine.rx=sin(DegreesToRadians(fmod((double) angle,360.0)));",
          "2471:             affine.ry=(-sin(DegreesToRadians(fmod((double) angle,360.0))));",
          "2473:             break;",
          "2475:         if (LocaleCompare(\"roundRectangle\",keyword) == 0)",
          "2477:             primitive_type=RoundRectanglePrimitive;",
          "2478:             break;",
          "2479:           }",
          "2480:         status=MagickFalse;",
          "2481:         break;",
          "2483:       case 's':",
          "2484:       case 'S':",
          "2485:       {",
          "2486:         if (LocaleCompare(\"scale\",keyword) == 0)",
          "2487:           {",
          "2488:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "2490:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "2491:             if (*token == ',')",
          "2492:               GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "2472:             affine.sy=cos(DegreesToRadians(fmod((double) angle,360.0)));",
          "2474:           }",
          "2476:           {",
          "2482:       }",
          "2489:             affine.sx=StringToDouble(token,(char **) NULL);",
          "",
          "[Added Lines]",
          "2474:             affine.sy=cos(DegreesToRadians(fmod((double) angle,360.0)));",
          "2476:           }",
          "2478:           {",
          "2484:       }",
          "2491:             affine.sx=StringToDouble(token,(char **) NULL);",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "2509:           }",
          "2510:         if (LocaleCompare(\"stop-color\",keyword) == 0)",
          "2511:           {",
          "2513:               stop_color;",
          "2515:             number_stops++;",
          "2517:               stops=(StopInfo *) AcquireQuantumMemory(2,sizeof(*stops));",
          "2518:             else if (number_stops > 2)",
          "2519:               stops=(StopInfo *) ResizeQuantumMemory(stops,number_stops,",
          "2520:                 sizeof(*stops));",
          "2521:             if (stops == (StopInfo *) NULL)",
          "2523:                 (void) ThrowMagickException(exception,GetMagickModule(),",
          "2524:                   ResourceLimitError,\"MemoryAllocationFailed\",\"`%s'\",",
          "2525:                   image->filename);",
          "",
          "[Removed Lines]",
          "2512:             PixelInfo",
          "2516:             if (number_stops == 1)",
          "2522:               {",
          "",
          "[Added Lines]",
          "2514:             PixelInfo",
          "2518:             if (number_stops == 1)",
          "2524:               {",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "2546:                   &graphic_context[n]->stroke,exception);",
          "2547:                 if (status == MagickFalse)",
          "2548:                   {",
          "2552:                     pattern_info=AcquireImageInfo();",
          "",
          "[Removed Lines]",
          "2549:                     ImageInfo",
          "",
          "[Added Lines]",
          "2551:                     ImageInfo",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "2562:           }",
          "2563:         if (LocaleCompare(\"stroke-antialias\",keyword) == 0)",
          "2564:           {",
          "2566:             graphic_context[n]->stroke_antialias=",
          "2568:             break;",
          "2569:           }",
          "2571:           {",
          "2573:               graphic_context[n]->dash_pattern=(double *)",
          "2574:                 RelinquishMagickMemory(graphic_context[n]->dash_pattern);",
          "2575:             if (IsPoint(q) != MagickFalse)",
          "",
          "[Removed Lines]",
          "2565:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "2567:               StringToLong(token) != 0 ? MagickTrue : MagickFalse;",
          "2570:         if (LocaleCompare(\"stroke-dasharray\",keyword) == 0)",
          "2572:             if (graphic_context[n]->dash_pattern != (double *) NULL)",
          "",
          "[Added Lines]",
          "2567:             GetMagickToken(q,&q,extent,token);",
          "2569:               StringToLong(token) != 0 ? MagickTrue : MagickFalse;",
          "2572:         if (LocaleCompare(\"stroke-dasharray\",keyword) == 0)",
          "2574:             if (graphic_context[n]->dash_pattern != (double *) NULL)",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "2583:                   GetMagickToken(r,&r,MagickPathExtent,token);",
          "2584:                 for (x=0; IsPoint(token) != MagickFalse; x++)",
          "2585:                 {",
          "2587:                   if (*token == ',')",
          "2589:                 }",
          "2590:                 graphic_context[n]->dash_pattern=(double *)",
          "2591:                   AcquireQuantumMemory((size_t) (2UL*x+1UL),",
          "",
          "[Removed Lines]",
          "2586:                   GetMagickToken(r,&r,MagickPathExtent,token);",
          "2588:                     GetMagickToken(r,&r,MagickPathExtent,token);",
          "",
          "[Added Lines]",
          "2588:                   GetMagickToken(r,&r,extent,token);",
          "2590:                     GetMagickToken(r,&r,extent,token);",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "2596:                       ResourceLimitError,\"MemoryAllocationFailed\",\"`%s'\",",
          "2597:                       image->filename);",
          "2598:                     break;",
          "2600:                 for (j=0; j < x; j++)",
          "2601:                 {",
          "2602:                   GetMagickToken(q,&q,MagickPathExtent,token);",
          "2603:                   if (*token == ',')",
          "2605:                   graphic_context[n]->dash_pattern[j]=StringToDouble(token,",
          "2606:                     (char **) NULL);",
          "2607:                 }",
          "",
          "[Removed Lines]",
          "2599:                   }",
          "2604:                     GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Added Lines]",
          "2601:                   }",
          "2606:                     GetMagickToken(q,&q,extent,token);",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "2611:                       graphic_context[n]->dash_pattern[j-x];",
          "2612:                 graphic_context[n]->dash_pattern[j]=0.0;",
          "2613:                 break;",
          "2615:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "2616:             break;",
          "2617:           }",
          "",
          "[Removed Lines]",
          "2614:               }",
          "",
          "[Added Lines]",
          "2616:               }",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "2624:           }",
          "2625:         if (LocaleCompare(\"stroke-linecap\",keyword) == 0)",
          "2626:           {",
          "2628:               linecap;",
          "2630:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "2627:             ssize_t",
          "",
          "[Added Lines]",
          "2629:             ssize_t",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "2635:               graphic_context[n]->linecap=(LineCap) linecap;",
          "2636:             break;",
          "2637:           }",
          "2639:           {",
          "2640:             ssize_t",
          "2641:               linejoin;",
          "2643:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "2645:               token);",
          "2646:             if (linejoin == -1)",
          "2647:               status=MagickFalse;",
          "",
          "[Removed Lines]",
          "2638:         if (LocaleCompare(\"stroke-linejoin\",keyword) == 0)",
          "2644:             linejoin=ParseCommandOption(MagickLineJoinOptions,MagickFalse,",
          "",
          "[Added Lines]",
          "2640:         if (LocaleCompare(\"stroke-linejoin\",keyword) == 0)",
          "2646:             linejoin=ParseCommandOption(MagickLineJoinOptions,MagickFalse,",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "2649:               graphic_context[n]->linejoin=(LineJoin) linejoin;",
          "2650:             break;",
          "2651:           }",
          "2653:           {",
          "2654:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "2655:             graphic_context[n]->miterlimit=StringToUnsignedLong(token);",
          "",
          "[Removed Lines]",
          "2652:         if (LocaleCompare(\"stroke-miterlimit\",keyword) == 0)",
          "",
          "[Added Lines]",
          "2654:         if (LocaleCompare(\"stroke-miterlimit\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "2670:               (char **) NULL);",
          "2671:             break;",
          "2672:           }",
          "2674:         break;",
          "2675:       }",
          "2676:       case 't':",
          "",
          "[Removed Lines]",
          "2673:         status=MagickFalse;",
          "",
          "[Added Lines]",
          "2675:         status=MagickFalse;",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "2683:           }",
          "2684:         if (LocaleCompare(\"text-align\",keyword) == 0)",
          "2685:           {",
          "2687:               align;",
          "2689:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "2686:             ssize_t",
          "",
          "[Added Lines]",
          "2688:             ssize_t",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "2693:             else",
          "2694:               graphic_context[n]->align=(AlignType) align;",
          "2695:             break;",
          "2697:         if (LocaleCompare(\"text-anchor\",keyword) == 0)",
          "2698:           {",
          "2699:             ssize_t",
          "2700:               align;",
          "2702:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "2704:             if (align == -1)",
          "2705:               status=MagickFalse;",
          "2706:             else",
          "2707:               graphic_context[n]->align=(AlignType) align;",
          "2708:             break;",
          "2709:           }",
          "2711:           {",
          "2713:             graphic_context[n]->text_antialias=",
          "2715:             break;",
          "2716:           }",
          "2717:         if (LocaleCompare(\"text-undercolor\",keyword) == 0)",
          "",
          "[Removed Lines]",
          "2696:           }",
          "2703:             align=ParseCommandOption(MagickAlignOptions,MagickFalse,token);",
          "2710:         if (LocaleCompare(\"text-antialias\",keyword) == 0)",
          "2712:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "2714:               StringToLong(token) != 0 ? MagickTrue : MagickFalse;",
          "",
          "[Added Lines]",
          "2698:           }",
          "2705:             align=ParseCommandOption(MagickAlignOptions,MagickFalse,token);",
          "2712:         if (LocaleCompare(\"text-antialias\",keyword) == 0)",
          "2714:             GetMagickToken(q,&q,extent,token);",
          "2716:               StringToLong(token) != 0 ? MagickTrue : MagickFalse;",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "2723:           }",
          "2724:         if (LocaleCompare(\"translate\",keyword) == 0)",
          "2725:           {",
          "2727:             affine.tx=StringToDouble(token,(char **) NULL);",
          "2728:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "2730:               GetMagickToken(q,&q,MagickPathExtent,token);",
          "2732:             break;",
          "2733:           }",
          "2735:         break;",
          "2737:       case 'v':",
          "2738:       case 'V':",
          "2740:         if (LocaleCompare(\"viewbox\",keyword) == 0)",
          "2742:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "2743:             graphic_context[n]->viewbox.x=(ssize_t) ceil(StringToDouble(token,",
          "2744:               (char **) NULL)-0.5);",
          "",
          "[Removed Lines]",
          "2726:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "2729:             if (*token == ',')",
          "2731:             affine.ty=StringToDouble(token,(char **) NULL);",
          "2734:         status=MagickFalse;",
          "2736:       }",
          "2739:       {",
          "2741:           {",
          "",
          "[Added Lines]",
          "2728:             GetMagickToken(q,&q,extent,token);",
          "2731:             if (*token == ',')",
          "2733:             affine.ty=StringToDouble(token,(char **) NULL);",
          "2736:         status=MagickFalse;",
          "2738:       }",
          "2741:       {",
          "2743:           {",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "2803:         if (image->debug != MagickFalse)",
          "2804:           (void) LogMagickEvent(DrawEvent,GetMagickModule(),\"  %.*s\",",
          "2805:             (int) (q-p),p);",
          "2807:       }",
          "2809:       Parse the primitive attributes.",
          "2811:     i=0;",
          "2813:     primitive_info[0].point.x=0.0;",
          "2815:     for (x=0; *q != '\\0'; x++)",
          "2816:     {",
          "",
          "[Removed Lines]",
          "2806:         continue;",
          "2812:     j=0;",
          "2814:     primitive_info[0].point.y=0.0;",
          "",
          "[Added Lines]",
          "2808:         continue;",
          "2814:     j=0;",
          "2816:     primitive_info[0].point.y=0.0;",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "2891:         radius=hypot((double) alpha,(double) beta);",
          "2892:         length*=5;",
          "2893:         length+=2*((size_t) ceil((double) MagickPI*radius))+6*BezierQuantum+360;",
          "2895:       }",
          "2896:       case BezierPrimitive:",
          "2897:       {",
          "",
          "[Removed Lines]",
          "2894:         break;",
          "",
          "[Added Lines]",
          "2896:         break;",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "3068:         i=(ssize_t) (j+primitive_info[j].coordinates);",
          "3069:         break;",
          "3070:       }",
          "3072:       {",
          "3073:         i=(ssize_t) (j+TracePath(primitive_info+j,token));",
          "3074:         break;",
          "",
          "[Removed Lines]",
          "3071:       case PathPrimitive:",
          "",
          "[Added Lines]",
          "3073:       case PathPrimitive:",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "3084:             status=MagickFalse;",
          "3085:             break;",
          "3086:           }",
          "3088:         method=ParseCommandOption(MagickMethodOptions,MagickFalse,token);",
          "3089:         if (method == -1)",
          "3090:           status=MagickFalse;",
          "",
          "[Removed Lines]",
          "3087:         GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Added Lines]",
          "3089:         GetMagickToken(q,&q,extent,token);",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "3095:       case TextPrimitive:",
          "3096:       {",
          "3097:         if (primitive_info[j].coordinates != 1)",
          "3099:             status=MagickFalse;",
          "3100:             break;",
          "3101:           }",
          "",
          "[Removed Lines]",
          "3098:           {",
          "",
          "[Added Lines]",
          "3100:           {",
          "",
          "---------------"
        ],
        "MagickCore/locale.c||MagickCore/locale.c": [
          "File: MagickCore/locale.c -> MagickCore/locale.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1083:         (void) FormatLocaleFile(file,\"Tag/Message\\n\");",
          "1084:         (void) FormatLocaleFile(file,",
          "1085:           \"-------------------------------------------------\"",
          "1087:       }",
          "1088:     path=locale_info[i]->path;",
          "1089:     (void) FormatLocaleFile(file,\"%s\\n\",locale_info[i]->tag);",
          "",
          "[Removed Lines]",
          "1086:           \"------------------------------\\n\");",
          "",
          "[Added Lines]",
          "1086:           \"------------------------------\\n\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1174:   ExceptionInfo *exception)",
          "1175: {",
          "1176:   char",
          "1177:     keyword[MagickLocaleExtent],",
          "1178:     message[MagickLocaleExtent],",
          "1179:     tag[MagickLocaleExtent],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1177:     keyword[MagickLocaleExtent],",
          "1178:     message[MagickLocaleExtent],",
          "1179:     tag[MagickLocaleExtent],",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1188:   LocaleInfo",
          "1191:   MagickStatusType",
          "1192:     status;",
          "1194:   register char",
          "1198:     Read the locale configure file.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1194:   register char",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1204:   status=MagickTrue;",
          "1205:   locale_info=(LocaleInfo *) NULL;",
          "1209:   fatal_handler=SetFatalErrorHandler(LocaleFatalErrorHandler);",
          "1210:   token=AcquireString(xml);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1217:     if (*token == '\\0')",
          "1218:       break;",
          "1219:     (void) CopyMagickString(keyword,token,MagickLocaleExtent);",
          "1221:       {",
          "1223:           Doctype element.",
          "",
          "[Removed Lines]",
          "1220:     if (LocaleNCompare(keyword,\"<!DOCTYPE\",9) == 0)",
          "",
          "[Added Lines]",
          "1224:     if (LocaleNCompare(keyword,\"<!DOCTYPE\",9) == 0)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1231:         continue;",
          "1232:       }",
          "1233:     if (LocaleNCompare(keyword,\"<!--\",4) == 0)",
          "1236:           Comment element.",
          "1238:         while ((LocaleNCompare(q,\"->\",2) != 0) && (*q != '\\0'))",
          "1239:         {",
          "1240:           GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "1234:       {",
          "",
          "[Added Lines]",
          "1238:       {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1281:                     (void) CopyMagickString(path,token,MagickPathExtent);",
          "1282:                   else",
          "1283:                     (void) ConcatenateMagickString(path,token,MagickPathExtent);",
          "1285:                   if (file_xml != (char *) NULL)",
          "1286:                     {",
          "1288:                         depth+1,exception);",
          "1289:                       file_xml=DestroyString(file_xml);",
          "1290:                     }",
          "",
          "[Removed Lines]",
          "1284:                   file_xml=FileToXML(path,~0UL);",
          "1287:                       status&=LoadLocaleCache(locale_cache,file_xml,path,locale,",
          "",
          "[Added Lines]",
          "1288:                   file_xml=FileToXML(path,~0UL);",
          "1291:                       status&=LoadLocaleCache(locale_cache,file_xml,path,locale,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1306:             continue;",
          "1307:           GetMagickToken(q,&q,MagickPathExtent,token);",
          "1308:         }",
          "1310:       }",
          "1311:     if (LocaleCompare(keyword,\"</locale>\") == 0)",
          "1313:         ChopLocaleComponents(tag,1);",
          "1314:         (void) ConcatenateMagickString(tag,\"/\",MagickLocaleExtent);",
          "1315:         continue;",
          "",
          "[Removed Lines]",
          "1309:         continue;",
          "1312:       {",
          "",
          "[Added Lines]",
          "1313:         continue;",
          "1316:       {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1368:         (void) ConcatenateMagickString(tag,\"/\",MagickLocaleExtent);",
          "1369:         continue;",
          "1370:       }",
          "1372:       {",
          "1374:           Subpath element.",
          "",
          "[Removed Lines]",
          "1371:     if (*keyword == '<')",
          "",
          "[Added Lines]",
          "1375:     if (*keyword == '<')",
          "",
          "---------------"
        ],
        "MagickCore/log.c||MagickCore/log.c": [
          "File: MagickCore/log.c -> MagickCore/log.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1395:   const char *function,const size_t line,const char *format,...)",
          "1396: {",
          "1397:   va_list",
          "1400:   MagickBooleanType",
          "1401:     status;",
          "",
          "[Removed Lines]",
          "1398:     operands;",
          "",
          "[Added Lines]",
          "1398:     operands;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1436: %",
          "1437: %    o exception: return any errors or warnings in this structure.",
          "1438: %",
          "1440: static MagickBooleanType LoadLogCache(LinkedListInfo *log_cache,const char *xml,",
          "1441:   const char *filename,const size_t depth,ExceptionInfo *exception)",
          "1442: {",
          "1443:   char",
          "1444:     keyword[MagickPathExtent],",
          "1447:   const char",
          "1450:   LogInfo",
          "1453:   MagickStatusType",
          "1454:     status;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1440: static MagickBooleanType LoadLogCache(LinkedListInfo *log_cache,const char *xml,",
          "1441:   const char *filename,const size_t depth,ExceptionInfo *exception)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1459:   if (xml == (const char *) NULL)",
          "1460:     return(MagickFalse);",
          "1462:   token=AcquireString((const char *) xml);",
          "1463:   for (q=(const char *) xml; *q != '\\0'; )",
          "1464:   {",
          "",
          "[Removed Lines]",
          "1461:   status=MagickTrue;",
          "",
          "[Added Lines]",
          "1465:   token=AcquireString(xml);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1468:     GetMagickToken(q,&q,MagickPathExtent,token);",
          "1469:     if (*token == '\\0')",
          "1471:     (void) CopyMagickString(keyword,token,MagickPathExtent);",
          "1472:     if (LocaleNCompare(keyword,\"<!DOCTYPE\",9) == 0)",
          "1473:       {",
          "",
          "[Removed Lines]",
          "1470:       break;",
          "",
          "[Added Lines]",
          "1474:       break;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1478:           GetMagickToken(q,&q,MagickPathExtent,token);",
          "1479:         continue;",
          "1480:       }",
          "1482:       {",
          "1486:         while ((LocaleNCompare(q,\"->\",2) != 0) && (*q != '\\0'))",
          "1487:           GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "1481:     if (LocaleNCompare(keyword,\"<!--\",4) == 0)",
          "1484:           Comment element.",
          "",
          "[Added Lines]",
          "1485:     if (LocaleNCompare(keyword,\"<!--\",4) == 0)",
          "1488:           Comment element.",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1538:         log_info=(LogInfo *) AcquireMagickMemory(sizeof(*log_info));",
          "1539:         if (log_info == (LogInfo *) NULL)",
          "1540:           ThrowFatalException(ResourceLimitFatalError,\"MemoryAllocationFailed\");",
          "1542:         log_info->path=ConstantString(filename);",
          "1543:         GetTimerInfo((TimerInfo *) &log_info->timer);",
          "1546:       }",
          "1547:     if (log_info == (LogInfo *) NULL)",
          "1548:       continue;",
          "",
          "[Removed Lines]",
          "1541:         (void) ResetMagickMemory(log_info,0,sizeof(*log_info));",
          "1544:         log_info->signature=MagickCoreSignature;",
          "1545:         continue;",
          "",
          "[Added Lines]",
          "1545:         (void) ResetMagickMemory(log_info,0,sizeof(*log_info));",
          "1548:         log_info->signature=MagickCoreSignature;",
          "1549:         continue;",
          "",
          "---------------"
        ],
        "MagickCore/magic.c||MagickCore/magic.c": [
          "File: MagickCore/magic.c -> MagickCore/magic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "797:             (void) FormatLocaleFile(file,\"\\\\%03o\",(unsigned int)",
          "798:               ((unsigned char) magic_info[i]->target[j]));",
          "799:       }",
          "801:   }",
          "802:   (void) fflush(file);",
          "803:   magic_info=(const MagicInfo **) RelinquishMagickMemory((void *) magic_info);",
          "",
          "[Removed Lines]",
          "800:     (void) FormatLocaleFile(file,\"\\n\");",
          "",
          "[Added Lines]",
          "800:     (void) FormatLocaleFile(file,\"\\n\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "840:   const char *xml,const char *filename,const size_t depth,",
          "841:   ExceptionInfo *exception)",
          "842: {",
          "843:   char",
          "844:     keyword[MagickPathExtent],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "843:   char",
          "844:     keyword[MagickPathExtent],",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "850:   MagicInfo",
          "853:   MagickStatusType",
          "854:     status;",
          "857:     Load the magic map file.",
          "859:   (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),",
          "860:     \"Loading magic configure file \\\"%s\\\" ...\",filename);",
          "861:   if (xml == (char *) NULL)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "856:   size_t",
          "862:   (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "865:   token=AcquireString(xml);",
          "866:   for (q=(char *) xml; *q != '\\0'; )",
          "867:   {",
          "869:       Interpret XML.",
          "871:     GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "874:     (void) CopyMagickString(keyword,token,MagickPathExtent);",
          "875:     if (LocaleNCompare(keyword,\"<!DOCTYPE\",9) == 0)",
          "876:       {",
          "878:           Doctype element.",
          "880:         while ((LocaleNCompare(q,\"]>\",2) != 0) && (*q != '\\0'))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "885:       {",
          "887:           Comment element.",
          "889:         while ((LocaleNCompare(q,\"->\",2) != 0) && (*q != '\\0'))",
          "890:           GetMagickToken(q,&q,MagickPathExtent,token);",
          "892:       }",
          "893:     if (LocaleCompare(keyword,\"<include\") == 0)",
          "894:       {",
          "",
          "[Removed Lines]",
          "891:         continue;",
          "",
          "[Added Lines]",
          "895:         continue;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "947:         magic_info->signature=MagickCoreSignature;",
          "948:         continue;",
          "949:       }",
          "951:       continue;",
          "952:     if (LocaleCompare(keyword,\"/>\") == 0)",
          "955:           NULL,magic_info);",
          "956:         if (status == MagickFalse)",
          "957:           (void) ThrowMagickException(exception,GetMagickModule(),",
          "",
          "[Removed Lines]",
          "950:     if (magic_info == (MagicInfo *) NULL)",
          "953:       {",
          "954:         status=InsertValueInSortedLinkedList(magic_cache,CompareMagickInfoSize,",
          "",
          "[Added Lines]",
          "954:     if (magic_info == (MagicInfo *) NULL)",
          "957:       {",
          "958:         status=InsertValueInSortedLinkedList(magic_cache,CompareMagickInfoSize,",
          "",
          "---------------"
        ],
        "MagickCore/policy.c||MagickCore/policy.c": [
          "File: MagickCore/policy.c -> MagickCore/policy.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "705:         if (policy_info[i]->pattern != (char *) NULL)",
          "706:           (void) FormatLocaleFile(file,\"    pattern: %s\\n\",",
          "707:             policy_info[i]->pattern);",
          "709:   }",
          "710:   policy_info=(const PolicyInfo **) RelinquishMagickMemory((void *)",
          "711:     policy_info);",
          "",
          "[Removed Lines]",
          "708:       }",
          "",
          "[Added Lines]",
          "708:       }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "748: static MagickBooleanType LoadPolicyCache(LinkedListInfo *policy_cache,",
          "749:   const char *xml,const char *filename,const size_t depth,",
          "750:   ExceptionInfo *exception)",
          "751: {",
          "752:   char",
          "753:     keyword[MagickPathExtent],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "751: {",
          "752:   char",
          "753:     keyword[MagickPathExtent],",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "759:   MagickStatusType",
          "760:     status;",
          "762:   PolicyInfo",
          "768:   (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),",
          "769:     \"Loading policy file \\\"%s\\\" ...\",filename);",
          "",
          "[Removed Lines]",
          "766:     Load the policy map file.",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "773:   policy_info=(PolicyInfo *) NULL;",
          "774:   token=AcquireString(xml);",
          "775:   for (q=(const char *) xml; *q != '\\0'; )",
          "778:       Interpret XML.",
          "",
          "[Removed Lines]",
          "776:   {",
          "",
          "[Added Lines]",
          "780:   {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "782:       break;",
          "783:     (void) CopyMagickString(keyword,token,MagickPathExtent);",
          "784:     if (LocaleNCompare(keyword,\"<!DOCTYPE\",9) == 0)",
          "787:           Docdomain element.",
          "",
          "[Removed Lines]",
          "785:       {",
          "",
          "[Added Lines]",
          "789:       {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "793:     if (LocaleNCompare(keyword,\"<!--\",4) == 0)",
          "794:       {",
          "798:         while ((LocaleNCompare(q,\"->\",2) != 0) && (*q != '\\0'))",
          "800:         continue;",
          "801:       }",
          "802:     if (LocaleCompare(keyword,\"<include\") == 0)",
          "",
          "[Removed Lines]",
          "796:           Comment element.",
          "799:           GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Added Lines]",
          "800:           Comment element.",
          "803:           GetMagickToken(q,&q,extent,token);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "854:         policy_info->path=ConstantString(filename);",
          "855:         policy_info->exempt=MagickFalse;",
          "856:         policy_info->signature=MagickCoreSignature;",
          "858:       }",
          "859:     if (policy_info == (PolicyInfo *) NULL)",
          "862:       {",
          "863:         status=AppendValueToLinkedList(policy_cache,policy_info);",
          "864:         if (status == MagickFalse)",
          "",
          "[Removed Lines]",
          "857:         continue;",
          "860:       continue;",
          "861:     if (LocaleCompare(keyword,\"/>\") == 0)",
          "",
          "[Added Lines]",
          "861:         continue;",
          "864:       continue;",
          "865:     if (LocaleCompare(keyword,\"/>\") == 0)",
          "",
          "---------------"
        ],
        "MagickCore/type.c||MagickCore/type.c": [
          "File: MagickCore/type.c -> MagickCore/type.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1003:     (void) FormatLocaleFile(file,\"    style: %s\\n\",style);",
          "1004:     (void) FormatLocaleFile(file,\"    stretch: %s\\n\",stretch);",
          "1005:     (void) FormatLocaleFile(file,\"    weight: %s\\n\",weight);",
          "1007:   }",
          "1008:   (void) fflush(file);",
          "1009:   type_info=(const TypeInfo **) RelinquishMagickMemory((void *) type_info);",
          "",
          "[Removed Lines]",
          "1006:     (void) FormatLocaleFile(file,\"    glyphs: %s\\n\",glyphs);",
          "",
          "[Added Lines]",
          "1006:     (void) FormatLocaleFile(file,\"    glyphs: %s\\n\",glyphs);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1083: static MagickBooleanType LoadTypeCache(SplayTreeInfo *type_cache,",
          "1084:   const char *xml,const char *filename,const size_t depth,",
          "1085:   ExceptionInfo *exception)",
          "1086: {",
          "1087:   char",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1085:   ExceptionInfo *exception)",
          "1086: {",
          "1087:   char",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1095:   MagickStatusType",
          "1096:     status;",
          "1098:   TypeInfo",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1101:   TypeInfo",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1108:   status=MagickTrue;",
          "1109:   type_info=(TypeInfo *) NULL;",
          "1110:   token=AcquireString(xml);",
          "1113:     Determine the Ghostscript font path.",
          "",
          "[Removed Lines]",
          "1111: #if defined(MAGICKCORE_WINDOWS_SUPPORT)",
          "",
          "[Added Lines]",
          "1115: #if defined(MAGICKCORE_WINDOWS_SUPPORT)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1118: #endif",
          "1119:   for (q=(char *) xml; *q != '\\0'; )",
          "1120:   {",
          "1122:       Interpret XML.",
          "1124:     GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1127:     (void) CopyMagickString(keyword,token,MagickPathExtent);",
          "1128:     if (LocaleNCompare(keyword,\"<!DOCTYPE\",9) == 0)",
          "1129:       {",
          "1131:           Doctype element.",
          "1133:         while ((LocaleNCompare(q,\"]>\",2) != 0) && (*q != '\\0'))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1138:       {",
          "1140:           Comment element.",
          "1142:         while ((LocaleNCompare(q,\"->\",2) != 0) && (*q != '\\0'))",
          "1143:           GetMagickToken(q,&q,MagickPathExtent,token);",
          "1145:       }",
          "1146:     if (LocaleCompare(keyword,\"<include\") == 0)",
          "1147:       {",
          "",
          "[Removed Lines]",
          "1144:         continue;",
          "",
          "[Added Lines]",
          "1148:         continue;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1203:         (void) ResetMagickMemory(type_info,0,sizeof(*type_info));",
          "1204:         type_info->path=ConstantString(filename);",
          "1205:         type_info->signature=MagickCoreSignature;",
          "1207:       }",
          "1208:     if (type_info == (TypeInfo *) NULL)",
          "1211:       {",
          "1212:         status=AddValueToSplayTree(type_cache,type_info->name,type_info);",
          "1213:         if (status == MagickFalse)",
          "",
          "[Removed Lines]",
          "1206:         continue;",
          "1209:       continue;",
          "1210:     if (LocaleCompare(keyword,\"/>\") == 0)",
          "",
          "[Added Lines]",
          "1210:         continue;",
          "1213:       continue;",
          "1214:     if (LocaleCompare(keyword,\"/>\") == 0)",
          "",
          "---------------"
        ],
        "coders/svg.c||coders/svg.c": [
          "File: coders/svg.c -> coders/svg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3634:   PrimitiveType",
          "3635:     primitive_type;",
          "3638:     x;",
          "3640:   register ssize_t",
          "3641:     i;",
          "3646:   SVGInfo",
          "3647:     svg_info;",
          "",
          "[Removed Lines]",
          "3637:   register ssize_t",
          "3643:   size_t",
          "3644:     length;",
          "",
          "[Added Lines]",
          "3637:   register ssize_t",
          "3638:     x;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3689:     Allocate primitive info memory.",
          "3691:   number_points=2047;",
          "3692:   primitive_info=(PrimitiveInfo *) AcquireQuantumMemory(number_points,",
          "3693:     sizeof(*primitive_info));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3690:   number_points=2047;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3696:   GetAffineMatrix(&affine);",
          "3697:   token=AcquireString(value);",
          "3698:   active=MagickFalse;",
          "3700:   status=MagickTrue;",
          "3701:   for (q=(const char *) value; *q != '\\0'; )",
          "3702:   {",
          "",
          "[Removed Lines]",
          "3699:   n=0;",
          "",
          "[Added Lines]",
          "3699:   n=0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3732:     primitive_type=UndefinedPrimitive;",
          "3733:     switch (*keyword)",
          "3734:     {",
          "3736:         break;",
          "3738:       case 'A':",
          "3740:         if (LocaleCompare(\"affine\",keyword) == 0)",
          "3742:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "3744:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "3746:               GetMagickToken(q,&q,MagickPathExtent,token);",
          "3748:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "3750:               GetMagickToken(q,&q,MagickPathExtent,token);",
          "3752:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "3754:               GetMagickToken(q,&q,MagickPathExtent,token);",
          "3756:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "3757:             if (*token == ',')",
          "3758:               GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "3735:       case ';':",
          "3737:       case 'a':",
          "3739:       {",
          "3741:           {",
          "3743:             affine.sx=StringToDouble(token,(char **) NULL);",
          "3745:             if (*token == ',')",
          "3747:             affine.rx=StringToDouble(token,(char **) NULL);",
          "3749:             if (*token == ',')",
          "3751:             affine.ry=StringToDouble(token,(char **) NULL);",
          "3753:             if (*token == ',')",
          "3755:             affine.sy=StringToDouble(token,(char **) NULL);",
          "",
          "[Added Lines]",
          "3735:       case ';':",
          "3737:       case 'a':",
          "3739:       {",
          "3741:           {",
          "3743:             affine.sx=StringToDouble(token,(char **) NULL);",
          "3745:             if (*token == ',')",
          "3747:             affine.rx=StringToDouble(token,(char **) NULL);",
          "3749:             if (*token == ',')",
          "3751:             affine.ry=StringToDouble(token,(char **) NULL);",
          "3753:             if (*token == ',')",
          "3755:             affine.sy=StringToDouble(token,(char **) NULL);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3763:             affine.ty=StringToDouble(token,(char **) NULL);",
          "3764:             break;",
          "3765:           }",
          "3767:           {",
          "3768:             primitive_type=AlphaPrimitive;",
          "3769:             break;",
          "",
          "[Removed Lines]",
          "3766:         if (LocaleCompare(\"alpha\",keyword) == 0)",
          "",
          "[Added Lines]",
          "3766:         if (LocaleCompare(\"alpha\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3792:             break;",
          "3793:           }",
          "3794:         status=MagickFalse;",
          "3796:       }",
          "3797:       case 'c':",
          "3798:       case 'C':",
          "",
          "[Removed Lines]",
          "3795:         break;",
          "",
          "[Added Lines]",
          "3795:         break;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3800:         if (LocaleCompare(\"clip-path\",keyword) == 0)",
          "3801:           {",
          "3802:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "3804:               \"clip-path:url(#%s);\",token);",
          "3805:             (void) WriteBlobString(image,message);",
          "3806:             break;",
          "",
          "[Removed Lines]",
          "3803:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "3803:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "3808:         if (LocaleCompare(\"clip-rule\",keyword) == 0)",
          "3809:           {",
          "3810:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "3812:               \"clip-rule:%s;\",token);",
          "3813:             (void) WriteBlobString(image,message);",
          "3814:             break;",
          "",
          "[Removed Lines]",
          "3811:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "3811:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3832:             break;",
          "3833:           }",
          "3834:         status=MagickFalse;",
          "3836:       }",
          "3837:       case 'd':",
          "3838:       case 'D':",
          "",
          "[Removed Lines]",
          "3835:         break;",
          "",
          "[Added Lines]",
          "3835:         break;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3857:             break;",
          "3858:           }",
          "3859:         status=MagickFalse;",
          "3861:       }",
          "3862:       case 'f':",
          "3863:       case 'F':",
          "",
          "[Removed Lines]",
          "3860:         break;",
          "",
          "[Added Lines]",
          "3860:         break;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "3865:         if (LocaleCompare(\"fill\",keyword) == 0)",
          "3866:           {",
          "3867:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "3869:               token);",
          "3870:             (void) WriteBlobString(image,message);",
          "3871:             break;",
          "",
          "[Removed Lines]",
          "3868:             (void) FormatLocaleString(message,MagickPathExtent,\"fill:%s;\",",
          "",
          "[Added Lines]",
          "3868:             (void) FormatLocaleString(message,MagickPathExtent,\"fill:%s;\",",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "3873:         if (LocaleCompare(\"fill-rule\",keyword) == 0)",
          "3874:           {",
          "3875:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "3877:               \"fill-rule:%s;\",token);",
          "3878:             (void) WriteBlobString(image,message);",
          "3879:             break;",
          "",
          "[Removed Lines]",
          "3876:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "3876:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "3881:         if (LocaleCompare(\"fill-alpha\",keyword) == 0)",
          "3882:           {",
          "3883:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "3885:               \"fill-alpha:%s;\",token);",
          "3886:             (void) WriteBlobString(image,message);",
          "3887:             break;",
          "",
          "[Removed Lines]",
          "3884:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "3884:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "3889:         if (LocaleCompare(\"font-family\",keyword) == 0)",
          "3890:           {",
          "3891:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "3893:               \"font-family:%s;\",token);",
          "3894:             (void) WriteBlobString(image,message);",
          "3895:             break;",
          "",
          "[Removed Lines]",
          "3892:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "3892:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "3897:         if (LocaleCompare(\"font-stretch\",keyword) == 0)",
          "3898:           {",
          "3899:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "3901:               \"font-stretch:%s;\",token);",
          "3902:             (void) WriteBlobString(image,message);",
          "3903:             break;",
          "",
          "[Removed Lines]",
          "3900:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "3900:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "3905:         if (LocaleCompare(\"font-style\",keyword) == 0)",
          "3906:           {",
          "3907:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "3909:               \"font-style:%s;\",token);",
          "3910:             (void) WriteBlobString(image,message);",
          "3911:             break;",
          "",
          "[Removed Lines]",
          "3908:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "3908:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "3913:         if (LocaleCompare(\"font-size\",keyword) == 0)",
          "3914:           {",
          "3915:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "3917:               \"font-size:%s;\",token);",
          "3918:             (void) WriteBlobString(image,message);",
          "3919:             break;",
          "",
          "[Removed Lines]",
          "3916:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "3916:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "3927:             break;",
          "3928:           }",
          "3929:         status=MagickFalse;",
          "3931:       }",
          "3932:       case 'g':",
          "3933:       case 'G':",
          "3934:       {",
          "3936:           {",
          "3937:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "3938:             break;",
          "",
          "[Removed Lines]",
          "3930:         break;",
          "3935:         if (LocaleCompare(\"gradient-units\",keyword) == 0)",
          "",
          "[Added Lines]",
          "3930:         break;",
          "3935:         if (LocaleCompare(\"gradient-units\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "3940:         if (LocaleCompare(\"text-align\",keyword) == 0)",
          "3941:           {",
          "3942:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "3944:               \"text-align %s \",token);",
          "3945:             (void) WriteBlobString(image,message);",
          "3946:             break;",
          "",
          "[Removed Lines]",
          "3943:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "3943:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "3954:             break;",
          "3955:           }",
          "3956:         status=MagickFalse;",
          "3958:       }",
          "3959:       case 'i':",
          "3960:       case 'I':",
          "",
          "[Removed Lines]",
          "3957:         break;",
          "",
          "[Added Lines]",
          "3957:         break;",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "3977:             break;",
          "3978:           }",
          "3979:         status=MagickFalse;",
          "3981:       }",
          "3982:       case 'o':",
          "3983:       case 'O':",
          "",
          "[Removed Lines]",
          "3980:         break;",
          "",
          "[Added Lines]",
          "3980:         break;",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "4011:             primitive_type=PolylinePrimitive;",
          "4012:             break;",
          "4013:           }",
          "4015:           {",
          "4016:             primitive_type=PolygonPrimitive;",
          "4017:             break;",
          "",
          "[Removed Lines]",
          "4014:         if (LocaleCompare(\"polygon\",keyword) == 0)",
          "",
          "[Added Lines]",
          "4014:         if (LocaleCompare(\"polygon\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "4048:               {",
          "4049:                 (void) WriteBlobString(image,\"</pattern>\\n\");",
          "4050:                 break;",
          "4052:             if (LocaleCompare(\"defs\",token) == 0)",
          "4053:             (void) WriteBlobString(image,\"</g>\\n\");",
          "4055:           }",
          "4056:         if (LocaleCompare(\"push\",keyword) == 0)",
          "4057:           {",
          "",
          "[Removed Lines]",
          "4051:               }",
          "4054:             break;",
          "",
          "[Added Lines]",
          "4051:               }",
          "4054:             break;",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "4064:                 (void) WriteBlobString(image,message);",
          "4065:                 break;",
          "4066:               }",
          "4068:               {",
          "4070:                 break;",
          "4072:             if (LocaleCompare(\"gradient\",token) == 0)",
          "4073:               {",
          "4075:                 (void) CopyMagickString(name,token,MagickPathExtent);",
          "4077:                 (void) CopyMagickString(type,token,MagickPathExtent);",
          "4078:                 GetMagickToken(q,&q,MagickPathExtent,token);",
          "4080:                 svg_info.element.cx=StringToDouble(token,(char **) NULL);",
          "4082:                 if (*token == ',')",
          "4083:                   GetMagickToken(q,&q,MagickPathExtent,token);",
          "4084:                 svg_info.segment.y1=StringToDouble(token,(char **) NULL);",
          "4086:                 GetMagickToken(q,&q,MagickPathExtent,token);",
          "4088:                   GetMagickToken(q,&q,MagickPathExtent,token);",
          "4089:                 svg_info.segment.x2=StringToDouble(token,(char **) NULL);",
          "4090:                 svg_info.element.major=StringToDouble(token,",
          "",
          "[Removed Lines]",
          "4067:             if (LocaleCompare(\"defs\",token) == 0)",
          "4069:                 (void) WriteBlobString(image,\"<defs>\\n\");",
          "4071:               }",
          "4074:                 GetMagickToken(q,&q,MagickPathExtent,token);",
          "4076:                 GetMagickToken(q,&q,MagickPathExtent,token);",
          "4079:                 svg_info.segment.x1=StringToDouble(token,(char **) NULL);",
          "4081:                 GetMagickToken(q,&q,MagickPathExtent,token);",
          "4085:                 svg_info.element.cy=StringToDouble(token,(char **) NULL);",
          "4087:                 if (*token == ',')",
          "",
          "[Added Lines]",
          "4067:             if (LocaleCompare(\"defs\",token) == 0)",
          "4069:                 (void) WriteBlobString(image,\"<defs>\\n\");",
          "4071:               }",
          "4074:                 GetMagickToken(q,&q,extent,token);",
          "4076:                 GetMagickToken(q,&q,extent,token);",
          "4079:                 svg_info.segment.x1=StringToDouble(token,(char **) NULL);",
          "4081:                 GetMagickToken(q,&q,extent,token);",
          "4085:                 svg_info.element.cy=StringToDouble(token,(char **) NULL);",
          "4087:                 if (*token == ',')",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "4094:                   GetMagickToken(q,&q,MagickPathExtent,token);",
          "4095:                 svg_info.segment.y2=StringToDouble(token,(char **) NULL);",
          "4096:                 svg_info.element.minor=StringToDouble(token,",
          "4098:                 (void) FormatLocaleString(message,MagickPathExtent,",
          "4100:                   \"y2=\\\"%g\\\">\\n\",type,name,svg_info.segment.x1,",
          "4101:                   svg_info.segment.y1,svg_info.segment.x2,svg_info.segment.y2);",
          "4102:                 if (LocaleCompare(type,\"radial\") == 0)",
          "",
          "[Removed Lines]",
          "4097:                   (char **) NULL);",
          "4099:                   \"<%sGradient id=\\\"%s\\\" x1=\\\"%g\\\" y1=\\\"%g\\\" x2=\\\"%g\\\" \"",
          "",
          "[Added Lines]",
          "4097:                   (char **) NULL);",
          "4099:                   \"<%sGradient id=\\\"%s\\\" x1=\\\"%g\\\" y1=\\\"%g\\\" x2=\\\"%g\\\" \"",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "4122:                 if (active)",
          "4123:                   {",
          "4124:                     AffineToTransform(image,&affine);",
          "4126:                   }",
          "4128:                 active=MagickTrue;",
          "4130:             if (LocaleCompare(\"pattern\",token) == 0)",
          "4132:                 GetMagickToken(q,&q,MagickPathExtent,token);",
          "4134:                 GetMagickToken(q,&q,MagickPathExtent,token);",
          "4136:                 GetMagickToken(q,&q,MagickPathExtent,token);",
          "4137:                 if (*token == ',')",
          "4139:                 svg_info.bounds.y=StringToDouble(token,(char **) NULL);",
          "4141:                 if (*token == ',')",
          "4142:                   GetMagickToken(q,&q,MagickPathExtent,token);",
          "4143:                 svg_info.bounds.width=StringToDouble(token,",
          "",
          "[Removed Lines]",
          "4125:                     active=MagickFalse;",
          "4127:                 (void) WriteBlobString(image,\"<g style=\\\"\");",
          "4129:               }",
          "4131:               {",
          "4133:                 (void) CopyMagickString(name,token,MagickPathExtent);",
          "4135:                 svg_info.bounds.x=StringToDouble(token,(char **) NULL);",
          "4138:                   GetMagickToken(q,&q,MagickPathExtent,token);",
          "4140:                 GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Added Lines]",
          "4125:                     active=MagickFalse;",
          "4127:                 (void) WriteBlobString(image,\"<g style=\\\"\");",
          "4129:               }",
          "4131:               {",
          "4133:                 (void) CopyMagickString(name,token,MagickPathExtent);",
          "4135:                 svg_info.bounds.x=StringToDouble(token,(char **) NULL);",
          "4138:                   GetMagickToken(q,&q,extent,token);",
          "4140:                 GetMagickToken(q,&q,extent,token);",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "4168:             primitive_type=RectanglePrimitive;",
          "4169:             break;",
          "4170:           }",
          "4172:           {",
          "4173:             primitive_type=RoundRectanglePrimitive;",
          "4174:             break;",
          "",
          "[Removed Lines]",
          "4171:         if (LocaleCompare(\"roundRectangle\",keyword) == 0)",
          "",
          "[Added Lines]",
          "4171:         if (LocaleCompare(\"roundRectangle\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "4182:             break;",
          "4183:           }",
          "4184:         status=MagickFalse;",
          "4186:       }",
          "4188:       case 'S':",
          "4190:         if (LocaleCompare(\"scale\",keyword) == 0)",
          "4191:           {",
          "4192:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "4193:             affine.sx=StringToDouble(token,(char **) NULL);",
          "4194:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "4196:               GetMagickToken(q,&q,MagickPathExtent,token);",
          "4197:             affine.sy=StringToDouble(token,(char **) NULL);",
          "4198:             break;",
          "",
          "[Removed Lines]",
          "4185:         break;",
          "4187:       case 's':",
          "4189:       {",
          "4195:             if (*token == ',')",
          "",
          "[Added Lines]",
          "4185:         break;",
          "4187:       case 's':",
          "4189:       {",
          "4195:             if (*token == ',')",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "4200:         if (LocaleCompare(\"skewX\",keyword) == 0)",
          "4201:           {",
          "4202:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "4204:               token);",
          "4205:             (void) WriteBlobString(image,message);",
          "4206:             break;",
          "",
          "[Removed Lines]",
          "4203:             (void) FormatLocaleString(message,MagickPathExtent,\"skewX(%s) \",",
          "",
          "[Added Lines]",
          "4203:             (void) FormatLocaleString(message,MagickPathExtent,\"skewX(%s) \",",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "4211:             (void) FormatLocaleString(message,MagickPathExtent,\"skewY(%s) \",",
          "4212:               token);",
          "4213:             (void) WriteBlobString(image,message);",
          "4215:           }",
          "4217:           {",
          "4218:             char",
          "4219:               color[MagickPathExtent];",
          "",
          "[Removed Lines]",
          "4214:             break;",
          "4216:         if (LocaleCompare(\"stop-color\",keyword) == 0)",
          "",
          "[Added Lines]",
          "4214:             break;",
          "4216:         if (LocaleCompare(\"stop-color\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "4221:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "4222:             (void) CopyMagickString(color,token,MagickPathExtent);",
          "4223:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "4225:               \"  <stop offset=\\\"%s\\\" stop-color=\\\"%s\\\" />\\n\",token,color);",
          "4226:             (void) WriteBlobString(image,message);",
          "4227:             break;",
          "",
          "[Removed Lines]",
          "4224:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "4224:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "4229:         if (LocaleCompare(\"stroke\",keyword) == 0)",
          "4230:           {",
          "4231:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "4233:               token);",
          "4234:             (void) WriteBlobString(image,message);",
          "4235:             break;",
          "",
          "[Removed Lines]",
          "4232:             (void) FormatLocaleString(message,MagickPathExtent,\"stroke:%s;\",",
          "",
          "[Added Lines]",
          "4232:             (void) FormatLocaleString(message,MagickPathExtent,\"stroke:%s;\",",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "4243:             break;",
          "4244:           }",
          "4245:         if (LocaleCompare(\"stroke-dasharray\",keyword) == 0)",
          "4247:             if (IsPoint(q))",
          "4249:                 ssize_t",
          "4250:                   k;",
          "4253:                 GetMagickToken(p,&p,MagickPathExtent,token);",
          "4254:                 for (k=0; IsPoint(token); k++)",
          "4255:                   GetMagickToken(p,&p,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "4246:           {",
          "4248:               {",
          "4252:                 p=q;",
          "",
          "[Added Lines]",
          "4246:           {",
          "4248:               {",
          "4252:                 p=q;",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "4257:                 for (j=0; j < k; j++)",
          "4258:                 {",
          "4259:                   GetMagickToken(q,&q,MagickPathExtent,token);",
          "4261:                     token);",
          "4262:                   (void) WriteBlobString(image,message);",
          "4263:                 }",
          "",
          "[Removed Lines]",
          "4260:                   (void) FormatLocaleString(message,MagickPathExtent,\"%s \",",
          "",
          "[Added Lines]",
          "4260:                   (void) FormatLocaleString(message,MagickPathExtent,\"%s \",",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "4265:                 break;",
          "4266:               }",
          "4267:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "4269:               \"stroke-dasharray:%s;\",token);",
          "4270:             (void) WriteBlobString(image,message);",
          "4271:             break;",
          "",
          "[Removed Lines]",
          "4268:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "4268:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "4273:         if (LocaleCompare(\"stroke-dashoffset\",keyword) == 0)",
          "4274:           {",
          "4275:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "4277:               \"stroke-dashoffset:%s;\",token);",
          "4278:             (void) WriteBlobString(image,message);",
          "4279:             break;",
          "",
          "[Removed Lines]",
          "4276:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "4276:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "4281:         if (LocaleCompare(\"stroke-linecap\",keyword) == 0)",
          "4282:           {",
          "4283:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "4285:               \"stroke-linecap:%s;\",token);",
          "4286:             (void) WriteBlobString(image,message);",
          "4287:             break;",
          "",
          "[Removed Lines]",
          "4284:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "4284:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "4289:         if (LocaleCompare(\"stroke-linejoin\",keyword) == 0)",
          "4290:           {",
          "4291:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "4293:               \"stroke-linejoin:%s;\",token);",
          "4294:             (void) WriteBlobString(image,message);",
          "4295:             break;",
          "",
          "[Removed Lines]",
          "4292:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "4292:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "4297:         if (LocaleCompare(\"stroke-miterlimit\",keyword) == 0)",
          "4298:           {",
          "4299:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "4301:               \"stroke-miterlimit:%s;\",token);",
          "4302:             (void) WriteBlobString(image,message);",
          "4303:             break;",
          "",
          "[Removed Lines]",
          "4300:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "4300:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "4305:         if (LocaleCompare(\"stroke-opacity\",keyword) == 0)",
          "4306:           {",
          "4307:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "4309:               \"stroke-opacity:%s;\",token);",
          "4310:             (void) WriteBlobString(image,message);",
          "4311:             break;",
          "",
          "[Removed Lines]",
          "4308:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "4308:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "4324:       case 't':",
          "4325:       case 'T':",
          "4326:       {",
          "4328:           {",
          "4329:             primitive_type=TextPrimitive;",
          "4330:             break;",
          "",
          "[Removed Lines]",
          "4327:         if (LocaleCompare(\"text\",keyword) == 0)",
          "",
          "[Added Lines]",
          "4327:         if (LocaleCompare(\"text\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "4337:             (void) WriteBlobString(image,message);",
          "4338:             break;",
          "4339:           }",
          "4341:           {",
          "4343:             break;",
          "4345:         if (LocaleCompare(\"translate\",keyword) == 0)",
          "4346:           {",
          "4347:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "4340:         if (LocaleCompare(\"tspan\",keyword) == 0)",
          "4342:             primitive_type=TextPrimitive;",
          "4344:           }",
          "",
          "[Added Lines]",
          "4340:         if (LocaleCompare(\"tspan\",keyword) == 0)",
          "4342:             primitive_type=TextPrimitive;",
          "4344:           }",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "4353:             break;",
          "4354:           }",
          "4355:         status=MagickFalse;",
          "4357:       }",
          "4360:       {",
          "4363:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "4366:             GetMagickToken(q,&q,MagickPathExtent,token);",
          "4367:             if (*token == ',')",
          "4368:               GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "4356:         break;",
          "4358:       case 'v':",
          "4359:       case 'V':",
          "4361:         if (LocaleCompare(\"viewbox\",keyword) == 0)",
          "4362:           {",
          "4364:             if (*token == ',')",
          "4365:               GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Added Lines]",
          "4356:         break;",
          "4358:       case 'v':",
          "4359:       case 'V':",
          "4361:         if (LocaleCompare(\"viewbox\",keyword) == 0)",
          "4362:           {",
          "4364:             if (*token == ',')",
          "4365:               GetMagickToken(q,&q,extent,token);",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "4391:     i=0;",
          "4392:     j=0;",
          "4394:     {",
          "4396:         Define points.",
          "4398:       if (IsPoint(q) == MagickFalse)",
          "4400:       GetMagickToken(q,&q,MagickPathExtent,token);",
          "4402:       GetMagickToken(q,&q,MagickPathExtent,token);",
          "4403:       if (*token == ',')",
          "4404:         GetMagickToken(q,&q,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "4393:     for (x=0; *q != '\\0'; x++)",
          "4399:         break;",
          "4401:       point.x=StringToDouble(token,(char **) NULL);",
          "",
          "[Added Lines]",
          "4393:     for (x=0; *q != '\\0'; x++)",
          "4399:         break;",
          "4401:       point.x=StringToDouble(token,(char **) NULL);",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "4595:             status=MagickFalse;",
          "4596:             break;",
          "4597:           }",
          "4599:       }",
          "4600:       case PathPrimitive:",
          "4601:       {",
          "",
          "[Removed Lines]",
          "4598:         break;",
          "",
          "[Added Lines]",
          "4598:         break;",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "4626:         break;",
          "4627:       }",
          "4628:       case AlphaPrimitive:",
          "4630:       {",
          "4631:         if (primitive_info[j].coordinates != 1)",
          "4632:           {",
          "",
          "[Removed Lines]",
          "4629:       case ColorPrimitive:",
          "",
          "[Added Lines]",
          "4629:       case ColorPrimitive:",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "4649:       case TextPrimitive:",
          "4650:       {",
          "4651:         register char",
          "4654:         if (primitive_info[j].coordinates != 1)",
          "4655:           {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "4672:         (void) WriteBlobString(image,\"</text>\\n\");",
          "4673:         break;",
          "4674:       }",
          "4676:       {",
          "4677:         if (primitive_info[j].coordinates != 2)",
          "4678:           {",
          "",
          "[Removed Lines]",
          "4675:       case ImagePrimitive:",
          "",
          "[Added Lines]",
          "4675:       case ImagePrimitive:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8bedb4edca01599dfd0612cb0daa35b09c67d736",
      "candidate_info": {
        "commit_hash": "8bedb4edca01599dfd0612cb0daa35b09c67d736",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/8bedb4edca01599dfd0612cb0daa35b09c67d736",
        "files": [
          "ImageMagick-7.0.0-0/enhance.c",
          "MagickCore/channel.c",
          "MagickCore/coder.c",
          "MagickCore/color.c",
          "MagickCore/configure.c",
          "MagickCore/delegate.c",
          "MagickCore/draw.c",
          "MagickCore/enhance.c",
          "MagickCore/geometry.c",
          "MagickCore/locale.c",
          "MagickCore/log.c",
          "MagickCore/magic.c",
          "MagickCore/methods.h",
          "MagickCore/morphology.c",
          "MagickCore/nt-feature.c",
          "MagickCore/option.c",
          "MagickCore/policy.c",
          "MagickCore/threshold.c",
          "MagickCore/token.c",
          "MagickCore/token.h",
          "MagickCore/type.c",
          "MagickWand/convert.c",
          "MagickWand/drawing-wand.c",
          "MagickWand/mogrify.c",
          "MagickWand/operation.c",
          "coders/svg.c"
        ],
        "message": "Change GetTokenLexeme() to GetNextToken()",
        "before_after_code_files": [
          "ImageMagick-7.0.0-0/enhance.c||ImageMagick-7.0.0-0/enhance.c",
          "MagickCore/channel.c||MagickCore/channel.c",
          "MagickCore/coder.c||MagickCore/coder.c",
          "MagickCore/color.c||MagickCore/color.c",
          "MagickCore/configure.c||MagickCore/configure.c",
          "MagickCore/delegate.c||MagickCore/delegate.c",
          "MagickCore/draw.c||MagickCore/draw.c",
          "MagickCore/enhance.c||MagickCore/enhance.c",
          "MagickCore/geometry.c||MagickCore/geometry.c",
          "MagickCore/locale.c||MagickCore/locale.c",
          "MagickCore/log.c||MagickCore/log.c",
          "MagickCore/magic.c||MagickCore/magic.c",
          "MagickCore/methods.h||MagickCore/methods.h",
          "MagickCore/morphology.c||MagickCore/morphology.c",
          "MagickCore/nt-feature.c||MagickCore/nt-feature.c",
          "MagickCore/option.c||MagickCore/option.c",
          "MagickCore/policy.c||MagickCore/policy.c",
          "MagickCore/threshold.c||MagickCore/threshold.c",
          "MagickCore/token.c||MagickCore/token.c",
          "MagickCore/token.h||MagickCore/token.h",
          "MagickCore/type.c||MagickCore/type.c",
          "MagickWand/convert.c||MagickWand/convert.c",
          "MagickWand/drawing-wand.c||MagickWand/drawing-wand.c",
          "MagickWand/mogrify.c||MagickWand/mogrify.c",
          "MagickWand/operation.c||MagickWand/operation.c",
          "coders/svg.c||coders/svg.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MagickCore/draw.c||MagickCore/draw.c"
          ],
          "candidate": [
            "MagickCore/draw.c||MagickCore/draw.c"
          ]
        }
      },
      "candidate_diff": {
        "ImageMagick-7.0.0-0/enhance.c||ImageMagick-7.0.0-0/enhance.c": [
          "File: ImageMagick-7.0.0-0/enhance.c -> ImageMagick-7.0.0-0/enhance.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "579:       slope=GetXMLTreeChild(sop,\"Slope\");",
          "581:         {",
          "583:           p=(const char *) content;",
          "584:           for (i=0; (*p != '\\0') && (i < 3); i++)",
          "585:           {",
          "",
          "[Removed Lines]",
          "580:       if (slope != (XMLTreeInfo *) NULL)",
          "582:           content=GetXMLTreeContent(slope);",
          "",
          "[Added Lines]",
          "580:       if (slope != (XMLTreeInfo *) NULL)",
          "582:           content=GetXMLTreeContent(slope);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "609:           }",
          "610:         }",
          "611:       offset=GetXMLTreeChild(sop,\"Offset\");",
          "613:         {",
          "615:           p=(const char *) content;",
          "616:           for (i=0; (*p != '\\0') && (i < 3); i++)",
          "617:           {",
          "",
          "[Removed Lines]",
          "612:       if (offset != (XMLTreeInfo *) NULL)",
          "614:           content=GetXMLTreeContent(offset);",
          "",
          "[Added Lines]",
          "612:       if (offset != (XMLTreeInfo *) NULL)",
          "614:           content=GetXMLTreeContent(offset);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "642:           }",
          "643:         }",
          "644:       power=GetXMLTreeChild(sop,\"Power\");",
          "646:         {",
          "648:           p=(const char *) content;",
          "649:           for (i=0; (*p != '\\0') && (i < 3); i++)",
          "650:           {",
          "",
          "[Removed Lines]",
          "645:       if (power != (XMLTreeInfo *) NULL)",
          "647:           content=GetXMLTreeContent(power);",
          "",
          "[Added Lines]",
          "645:       if (power != (XMLTreeInfo *) NULL)",
          "647:           content=GetXMLTreeContent(power);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "679:     {",
          "680:       XMLTreeInfo",
          "683:       saturation=GetXMLTreeChild(sat,\"Saturation\");",
          "684:       if (saturation != (XMLTreeInfo *) NULL)",
          "685:         {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "MagickCore/channel.c||MagickCore/channel.c": [
          "File: MagickCore/channel.c -> MagickCore/channel.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "243:   channel_mask=UndefinedChannel;",
          "244:   pixel=0.0;",
          "245:   p=(char *) expression;",
          "247:   channel_op=ExtractChannelOp;",
          "248:   for (channels=0; *token != '\\0'; )",
          "249:   {",
          "",
          "[Removed Lines]",
          "246:   GetMagickToken(p,&p,MagickPathExtent,token);",
          "",
          "[Added Lines]",
          "246:   GetNextToken(p,&p,MagickPathExtent,token);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "257:     {",
          "258:       case ',':",
          "259:       {",
          "261:         break;",
          "262:       }",
          "263:       case '|':",
          "",
          "[Removed Lines]",
          "260:         GetMagickToken(p,&p,MagickPathExtent,token);",
          "",
          "[Added Lines]",
          "260:         GetNextToken(p,&p,MagickPathExtent,token);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "266:           source_image=GetNextImageInList(source_image);",
          "267:         else",
          "268:           source_image=GetFirstImageInList(source_image);",
          "270:         break;",
          "271:       }",
          "272:       case ';':",
          "",
          "[Removed Lines]",
          "269:         GetMagickToken(p,&p,MagickPathExtent,token);",
          "",
          "[Added Lines]",
          "269:         GetNextToken(p,&p,MagickPathExtent,token);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "291:           }",
          "292:         AppendImageToList(&destination_image,canvas);",
          "293:         destination_image=GetLastImageInList(destination_image);",
          "295:         channels=0;",
          "296:         destination_channel=RedPixelChannel;",
          "297:         channel_mask=UndefinedChannel;",
          "",
          "[Removed Lines]",
          "294:         GetMagickToken(p,&p,MagickPathExtent,token);",
          "",
          "[Added Lines]",
          "294:         GetNextToken(p,&p,MagickPathExtent,token);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "310:       }",
          "311:     source_channel=(PixelChannel) i;",
          "312:     channel_op=ExtractChannelOp;",
          "314:     if (*token == '<')",
          "315:       {",
          "316:         channel_op=ExchangeChannelOp;",
          "318:       }",
          "319:     if (*token == '=')",
          "320:       {",
          "321:         if (channel_op != ExchangeChannelOp)",
          "322:           channel_op=AssignChannelOp;",
          "324:       }",
          "325:     if (*token == '>')",
          "326:       {",
          "327:         if (channel_op != ExchangeChannelOp)",
          "328:           channel_op=TransferChannelOp;",
          "330:       }",
          "331:     switch (channel_op)",
          "332:     {",
          "333:       case AssignChannelOp:",
          "334:       {",
          "335:         pixel=StringToDoubleInterval(token,(double) QuantumRange+1.0);",
          "337:         break;",
          "338:       }",
          "339:       case ExchangeChannelOp:",
          "",
          "[Removed Lines]",
          "313:     GetMagickToken(p,&p,MagickPathExtent,token);",
          "317:         GetMagickToken(p,&p,MagickPathExtent,token);",
          "323:         GetMagickToken(p,&p,MagickPathExtent,token);",
          "329:         GetMagickToken(p,&p,MagickPathExtent,token);",
          "336:         GetMagickToken(p,&p,MagickPathExtent,token);",
          "",
          "[Added Lines]",
          "313:     GetNextToken(p,&p,MagickPathExtent,token);",
          "317:         GetNextToken(p,&p,MagickPathExtent,token);",
          "323:         GetNextToken(p,&p,MagickPathExtent,token);",
          "329:         GetNextToken(p,&p,MagickPathExtent,token);",
          "336:         GetNextToken(p,&p,MagickPathExtent,token);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "383:         if (((channels >= 1)  || (destination_channel >= 1)) &&",
          "384:             (IsGrayColorspace(destination_image->colorspace) != MagickFalse))",
          "385:           (void) SetImageColorspace(destination_image,sRGBColorspace,exception);",
          "387:         break;",
          "388:       }",
          "389:       default:",
          "",
          "[Removed Lines]",
          "386:         GetMagickToken(p,&p,MagickPathExtent,token);",
          "",
          "[Added Lines]",
          "386:         GetNextToken(p,&p,MagickPathExtent,token);",
          "",
          "---------------"
        ],
        "MagickCore/coder.c||MagickCore/coder.c": [
          "File: MagickCore/coder.c -> MagickCore/coder.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "840:     Load the coder map file.",
          "842:   (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),",
          "843:     \"Loading coder configuration file \\\"%s\\\" ...\",filename);",
          "844:   if (xml == (const char *) NULL)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "848:   token=AcquireString(xml);",
          "849:   extent=strlen(token)+MagickPathExtent;",
          "850:   for (q=(char *) xml; *q != '\\0'; )",
          "853:       Interpret XML.",
          "",
          "[Removed Lines]",
          "851:   {",
          "",
          "[Added Lines]",
          "851:   {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "857:       break;",
          "858:     (void) CopyMagickString(keyword,token,MagickPathExtent);",
          "859:     if (LocaleNCompare(keyword,\"<!DOCTYPE\",9) == 0)",
          "862:           Doctype element.",
          "",
          "[Removed Lines]",
          "860:       {",
          "",
          "[Added Lines]",
          "860:       {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "868:     if (LocaleNCompare(keyword,\"<!--\",4) == 0)",
          "869:       {",
          "873:         while ((LocaleNCompare(q,\"->\",2) != 0) && (*q != '\\0'))",
          "875:         continue;",
          "876:       }",
          "877:     if (LocaleCompare(keyword,\"<include\") == 0)",
          "",
          "[Removed Lines]",
          "871:           Comment element.",
          "874:           GetMagickToken(q,&q,extent,token);",
          "",
          "[Added Lines]",
          "871:           Comment element.",
          "874:           GetNextToken(q,&q,extent,token);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "930:         coder_info->exempt=MagickFalse;",
          "931:         coder_info->signature=MagickCoreSignature;",
          "932:         continue;",
          "934:     if (coder_info == (CoderInfo *) NULL)",
          "935:       continue;",
          "938:         status=AddValueToSplayTree(coder_cache,ConstantString(",
          "939:           coder_info->magick),coder_info);",
          "940:         if (status == MagickFalse)",
          "",
          "[Removed Lines]",
          "933:       }",
          "936:     if (LocaleCompare(keyword,\"/>\") == 0)",
          "937:       {",
          "",
          "[Added Lines]",
          "933:       }",
          "936:     if (LocaleCompare(keyword,\"/>\") == 0)",
          "937:       {",
          "",
          "---------------"
        ],
        "MagickCore/color.c||MagickCore/color.c": [
          "File: MagickCore/color.c -> MagickCore/color.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2014:   MagickStatusType",
          "2017:   size_t",
          "2018:     extent;",
          "",
          "[Removed Lines]",
          "2015:     status;",
          "",
          "[Added Lines]",
          "2015:     status;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2023:   (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),",
          "2024:     \"Loading color file \\\"%s\\\" ...\",filename);",
          "2026:     return(MagickFalse);",
          "2027:   status=MagickTrue;",
          "2028:   color_info=(ColorInfo *) NULL;",
          "",
          "[Removed Lines]",
          "2025:   if (xml == (char *) NULL)",
          "",
          "[Added Lines]",
          "2025:   if (xml == (char *) NULL)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2031:   for (q=(char *) xml; *q != '\\0'; )",
          "2032:   {",
          "2036:     GetMagickToken(q,&q,extent,token);",
          "2037:     if (*token == '\\0')",
          "",
          "[Removed Lines]",
          "2034:       Interpret XML.",
          "",
          "[Added Lines]",
          "2034:       Interpret XML.",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2043:           Doctype element.",
          "2046:           GetMagickToken(q,&q,extent,token);",
          "2047:         continue;",
          "2049:     if (LocaleNCompare(keyword,\"<!--\",4) == 0)",
          "2050:       {",
          "",
          "[Removed Lines]",
          "2045:         while ((LocaleNCompare(q,\"]>\",2) != 0) && (*q != '\\0'))",
          "2048:       }",
          "",
          "[Added Lines]",
          "2045:         while ((LocaleNCompare(q,\"]>\",2) != 0) && (*q != '\\0'))",
          "2048:       }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2104:           Color element.",
          "2107:         if (color_info == (ColorInfo *) NULL)",
          "2108:           ThrowFatalException(ResourceLimitFatalError,\"MemoryAllocationFailed\");",
          "2111:         color_info->exempt=MagickFalse;",
          "2112:         color_info->signature=MagickCoreSignature;",
          "2113:         continue;",
          "",
          "[Removed Lines]",
          "2106:         color_info=(ColorInfo *) AcquireMagickMemory(sizeof(*color_info));",
          "2109:         (void) ResetMagickMemory(color_info,0,sizeof(*color_info));",
          "2110:         color_info->path=ConstantString(filename);",
          "",
          "[Added Lines]",
          "2106:         color_info=(ColorInfo *) AcquireMagickMemory(sizeof(*color_info));",
          "2109:         (void) ResetMagickMemory(color_info,0,sizeof(*color_info));",
          "2110:         color_info->path=ConstantString(filename);",
          "",
          "---------------"
        ],
        "MagickCore/configure.c||MagickCore/configure.c": [
          "File: MagickCore/configure.c -> MagickCore/configure.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1171:   MagickStatusType",
          "1174:   size_t",
          "1175:     extent;",
          "",
          "[Removed Lines]",
          "1172:     status;",
          "",
          "[Added Lines]",
          "1172:     status;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1180:   (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),",
          "1181:     \"Loading configure file \\\"%s\\\" ...\",filename);",
          "1183:   configure_info=(ConfigureInfo *) NULL;",
          "1184:   token=AcquireString(xml);",
          "1185:   extent=strlen(token)+MagickPathExtent;",
          "",
          "[Removed Lines]",
          "1182:   status=MagickTrue;",
          "",
          "[Added Lines]",
          "1182:   status=MagickTrue;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1189:       Interpret XML.",
          "1192:     if (*token == '\\0')",
          "1193:       break;",
          "1194:     (void) CopyMagickString(keyword,token,MagickPathExtent);",
          "",
          "[Removed Lines]",
          "1191:     GetMagickToken(q,&q,extent,token);",
          "",
          "[Added Lines]",
          "1191:     GetNextToken(q,&q,extent,token);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1200:         while ((LocaleNCompare(q,\"]>\",2) != 0) && (*q != '\\0'))",
          "1201:           GetMagickToken(q,&q,extent,token);",
          "1203:       }",
          "1204:     if (LocaleNCompare(keyword,\"<!--\",4) == 0)",
          "1207:           Comment element.",
          "",
          "[Removed Lines]",
          "1202:         continue;",
          "1205:       {",
          "",
          "[Added Lines]",
          "1202:         continue;",
          "1205:       {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1264:           ThrowFatalException(ResourceLimitFatalError,\"MemoryAllocationFailed\");",
          "1265:         (void) ResetMagickMemory(configure_info,0,sizeof(*configure_info));",
          "1266:         configure_info->path=ConstantString(filename);",
          "1268:         configure_info->signature=MagickCoreSignature;",
          "1269:         continue;",
          "1272:       continue;",
          "1273:     if (LocaleCompare(keyword,\"/>\") == 0)",
          "1274:       {",
          "",
          "[Removed Lines]",
          "1267:         configure_info->exempt=MagickFalse;",
          "1270:       }",
          "1271:     if (configure_info == (ConfigureInfo *) NULL)",
          "",
          "[Added Lines]",
          "1267:         configure_info->exempt=MagickFalse;",
          "1270:       }",
          "1271:     if (configure_info == (ConfigureInfo *) NULL)",
          "",
          "---------------"
        ],
        "MagickCore/delegate.c||MagickCore/delegate.c": [
          "File: MagickCore/delegate.c -> MagickCore/delegate.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1524:   MagickStatusType",
          "1525:     status;",
          "1527:   size_t",
          "1528:     extent;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1533:   (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),",
          "1534:     \"Loading delegate configuration file \\\"%s\\\" ...\",filename);",
          "1535:   if (xml == (const char *) NULL)",
          "1537:   status=MagickTrue;",
          "1538:   delegate_info=(DelegateInfo *) NULL;",
          "1539:   token=AcquireString(xml);",
          "",
          "[Removed Lines]",
          "1536:     return(MagickFalse);",
          "",
          "[Added Lines]",
          "1536:     return(MagickFalse);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1542:   {",
          "1544:       Interpret XML.",
          "1546:     GetMagickToken(q,&q,extent,token);",
          "1547:     if (*token == '\\0')",
          "1548:       break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1553:           Doctype element.",
          "1555:         while ((LocaleNCompare(q,\"]>\",2) != 0) && (*q != '\\0'))",
          "1557:         continue;",
          "1558:       }",
          "1560:       {",
          "1562:           Comment element.",
          "",
          "[Removed Lines]",
          "1556:           GetMagickToken(q,&q,extent,token);",
          "1559:     if (LocaleNCompare(keyword,\"<!--\",4) == 0)",
          "",
          "[Added Lines]",
          "1556:           GetNextToken(q,&q,extent,token);",
          "1559:     if (LocaleNCompare(keyword,\"<!--\",4) == 0)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1616:         delegate_info=(DelegateInfo *) AcquireMagickMemory(",
          "1617:           sizeof(*delegate_info));",
          "1619:           ThrowFatalException(ResourceLimitFatalError,\"MemoryAllocationFailed\");",
          "1620:         (void) ResetMagickMemory(delegate_info,0,sizeof(*delegate_info));",
          "1623:         delegate_info->signature=MagickCoreSignature;",
          "1624:         continue;",
          "1625:       }",
          "",
          "[Removed Lines]",
          "1618:         if (delegate_info == (DelegateInfo *) NULL)",
          "1621:         delegate_info->path=ConstantString(filename);",
          "1622:         delegate_info->thread_support=MagickTrue;",
          "",
          "[Added Lines]",
          "1618:         if (delegate_info == (DelegateInfo *) NULL)",
          "1621:         delegate_info->path=ConstantString(filename);",
          "1622:         delegate_info->thread_support=MagickTrue;",
          "",
          "---------------"
        ],
        "MagickCore/draw.c||MagickCore/draw.c": [
          "File: MagickCore/draw.c -> MagickCore/draw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1794:         image->filename);",
          "1795:     }",
          "1796:   graphic_context[n]=CloneDrawInfo((ImageInfo *) NULL,draw_info);",
          "1798:   if ((image->page.width == 0) || (image->page.height == 0))",
          "1799:     {",
          "1800:       graphic_context[n]->viewbox.width=image->columns;",
          "",
          "[Removed Lines]",
          "1797:   graphic_context[n]->viewbox=image->page;",
          "",
          "[Added Lines]",
          "1797:   graphic_context[n]->viewbox=image->page;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1819:           Comment.",
          "1821:         while ((*q != '\\n') && (*q != '\\0'))",
          "1823:         continue;",
          "1825:     p=q-strlen(keyword)-1;",
          "1827:     current=graphic_context[n]->affine;",
          "1829:     switch (*keyword)",
          "1831:       case ';':",
          "1833:       case 'a':",
          "1835:       {",
          "1837:           {",
          "1839:             affine.sx=StringToDouble(token,(char **) NULL);",
          "1841:             if (*token == ',')",
          "1843:             affine.rx=StringToDouble(token,(char **) NULL);",
          "1844:             GetMagickToken(q,&q,extent,token);",
          "1845:             if (*token == ',')",
          "",
          "[Removed Lines]",
          "1822:           q++;",
          "1824:       }",
          "1826:     primitive_type=UndefinedPrimitive;",
          "1828:     GetAffineMatrix(&affine);",
          "1830:     {",
          "1832:         break;",
          "1834:       case 'A':",
          "1836:         if (LocaleCompare(\"affine\",keyword) == 0)",
          "1838:             GetMagickToken(q,&q,extent,token);",
          "1840:             GetMagickToken(q,&q,extent,token);",
          "1842:               GetMagickToken(q,&q,extent,token);",
          "",
          "[Added Lines]",
          "1822:           q++;",
          "1824:       }",
          "1826:     primitive_type=UndefinedPrimitive;",
          "1828:     GetAffineMatrix(&affine);",
          "1830:     {",
          "1832:         break;",
          "1834:       case 'A':",
          "1836:         if (LocaleCompare(\"affine\",keyword) == 0)",
          "1838:             GetNextToken(q,&q,extent,token);",
          "1840:             GetNextToken(q,&q,extent,token);",
          "1842:               GetNextToken(q,&q,extent,token);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1866:           }",
          "1867:         if (LocaleCompare(\"arc\",keyword) == 0)",
          "1868:           {",
          "1870:             break;",
          "1871:           }",
          "1872:         status=MagickFalse;",
          "",
          "[Removed Lines]",
          "1869:             primitive_type=ArcPrimitive;",
          "",
          "[Added Lines]",
          "1869:             primitive_type=ArcPrimitive;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1882:           }",
          "1883:         if (LocaleCompare(\"border-color\",keyword) == 0)",
          "1884:           {",
          "1886:             (void) QueryColorCompliance(token,AllCompliance,",
          "1887:               &graphic_context[n]->border_color,exception);",
          "1888:             break;",
          "",
          "[Removed Lines]",
          "1885:             GetMagickToken(q,&q,extent,token);",
          "",
          "[Added Lines]",
          "1885:             GetNextToken(q,&q,extent,token);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1893:       case 'c':",
          "1894:       case 'C':",
          "1895:       {",
          "1897:           {",
          "1899:               Create clip mask.",
          "",
          "[Removed Lines]",
          "1896:         if (LocaleCompare(\"clip-path\",keyword) == 0)",
          "",
          "[Added Lines]",
          "1896:         if (LocaleCompare(\"clip-path\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1907:         if (LocaleCompare(\"clip-rule\",keyword) == 0)",
          "1908:           {",
          "1909:             ssize_t",
          "1912:             GetMagickToken(q,&q,extent,token);",
          "1913:             fill_rule=ParseCommandOption(MagickFillRuleOptions,MagickFalse,",
          "",
          "[Removed Lines]",
          "1910:               fill_rule;",
          "",
          "[Added Lines]",
          "1910:               fill_rule;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1948:             primitive_type=CirclePrimitive;",
          "1949:             break;",
          "1950:           }",
          "1952:           {",
          "1953:             primitive_type=ColorPrimitive;",
          "1954:             break;",
          "",
          "[Removed Lines]",
          "1951:         if (LocaleCompare(\"color\",keyword) == 0)",
          "",
          "[Added Lines]",
          "1951:         if (LocaleCompare(\"color\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1959:       case 'd':",
          "1960:       case 'D':",
          "1961:       {",
          "1963:           {",
          "1964:             ssize_t",
          "1965:               decorate;",
          "",
          "[Removed Lines]",
          "1962:         if (LocaleCompare(\"decorate\",keyword) == 0)",
          "",
          "[Added Lines]",
          "1962:         if (LocaleCompare(\"decorate\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1968:             decorate=ParseCommandOption(MagickDecorateOptions,MagickFalse,",
          "1969:               token);",
          "1970:             if (decorate == -1)",
          "1972:             else",
          "1973:               graphic_context[n]->decorate=(DecorationType) decorate;",
          "1974:             break;",
          "",
          "[Removed Lines]",
          "1971:               status=MagickFalse;",
          "",
          "[Added Lines]",
          "1971:               status=MagickFalse;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1990:             if (direction == -1)",
          "1991:               status=MagickFalse;",
          "1992:             else",
          "1994:             break;",
          "1995:           }",
          "1996:         status=MagickFalse;",
          "",
          "[Removed Lines]",
          "1993:               graphic_context[n]->direction=(DirectionType) direction;",
          "",
          "[Added Lines]",
          "1993:               graphic_context[n]->direction=(DirectionType) direction;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2002:         if (LocaleCompare(\"ellipse\",keyword) == 0)",
          "2003:           {",
          "2004:             primitive_type=EllipsePrimitive;",
          "2006:           }",
          "2007:         if (LocaleCompare(\"encoding\",keyword) == 0)",
          "2008:           {",
          "",
          "[Removed Lines]",
          "2005:             break;",
          "",
          "[Added Lines]",
          "2005:             break;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2029:                   &graphic_context[n]->fill,exception);",
          "2030:                 if (status == MagickFalse)",
          "2031:                   {",
          "2035:                     pattern_info=AcquireImageInfo();",
          "",
          "[Removed Lines]",
          "2032:                     ImageInfo",
          "",
          "[Added Lines]",
          "2032:                     ImageInfo",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2040:                     CatchException(exception);",
          "2041:                     pattern_info=DestroyImageInfo(pattern_info);",
          "2042:                   }",
          "2044:             break;",
          "2045:           }",
          "2046:         if (LocaleCompare(\"fill-opacity\",keyword) == 0)",
          "",
          "[Removed Lines]",
          "2043:               }",
          "",
          "[Added Lines]",
          "2043:               }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2051:               factor*StringToDouble(token,(char **) NULL);",
          "2052:             break;",
          "2053:           }",
          "2055:           {",
          "2056:             ssize_t",
          "2057:               fill_rule;",
          "",
          "[Removed Lines]",
          "2054:         if (LocaleCompare(\"fill-rule\",keyword) == 0)",
          "",
          "[Added Lines]",
          "2054:         if (LocaleCompare(\"fill-rule\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2060:             fill_rule=ParseCommandOption(MagickFillRuleOptions,MagickFalse,",
          "2061:               token);",
          "2062:             if (fill_rule == -1)",
          "2064:             else",
          "2065:               graphic_context[n]->fill_rule=(FillRule) fill_rule;",
          "2066:             break;",
          "2067:           }",
          "2068:         if (LocaleCompare(\"font\",keyword) == 0)",
          "2070:             GetMagickToken(q,&q,extent,token);",
          "2071:             (void) CloneString(&graphic_context[n]->font,token);",
          "2072:             if (LocaleCompare(\"none\",token) == 0)",
          "",
          "[Removed Lines]",
          "2063:               status=MagickFalse;",
          "2069:           {",
          "",
          "[Added Lines]",
          "2063:               status=MagickFalse;",
          "2069:           {",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2075:             break;",
          "2076:           }",
          "2077:         if (LocaleCompare(\"font-family\",keyword) == 0)",
          "2079:             GetMagickToken(q,&q,extent,token);",
          "2080:             (void) CloneString(&graphic_context[n]->family,token);",
          "2081:             break;",
          "",
          "[Removed Lines]",
          "2078:           {",
          "",
          "[Added Lines]",
          "2078:           {",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2088:           }",
          "2089:         if (LocaleCompare(\"font-stretch\",keyword) == 0)",
          "2090:           {",
          "2092:               stretch;",
          "2094:             GetMagickToken(q,&q,extent,token);",
          "",
          "[Removed Lines]",
          "2091:             ssize_t",
          "",
          "[Added Lines]",
          "2091:             ssize_t",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2101:           }",
          "2102:         if (LocaleCompare(\"font-style\",keyword) == 0)",
          "2103:           {",
          "2105:               style;",
          "2107:             GetMagickToken(q,&q,extent,token);",
          "",
          "[Removed Lines]",
          "2104:             ssize_t",
          "",
          "[Added Lines]",
          "2104:             ssize_t",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2117:             ssize_t",
          "2118:               weight;",
          "2121:             weight=ParseCommandOption(MagickWeightOptions,MagickFalse,",
          "2122:               token);",
          "2123:             if (weight == -1)",
          "",
          "[Removed Lines]",
          "2120:             GetMagickToken(q,&q,extent,token);",
          "",
          "[Added Lines]",
          "2120:             GetNextToken(q,&q,extent,token);",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2125:             graphic_context[n]->weight=(size_t) weight;",
          "2126:             break;",
          "2127:           }",
          "2129:         break;",
          "2130:       }",
          "2131:       case 'g':",
          "",
          "[Removed Lines]",
          "2128:         status=MagickFalse;",
          "",
          "[Added Lines]",
          "2128:         status=MagickFalse;",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2145:             gravity=ParseCommandOption(MagickGravityOptions,MagickFalse,token);",
          "2146:             if (gravity == -1)",
          "2147:               status=MagickFalse;",
          "2149:               graphic_context[n]->gravity=(GravityType) gravity;",
          "2150:             break;",
          "2151:           }",
          "",
          "[Removed Lines]",
          "2148:             else",
          "",
          "[Added Lines]",
          "2148:             else",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "2155:       case 'i':",
          "2156:       case 'I':",
          "2157:       {",
          "2159:           {",
          "2160:             ssize_t",
          "2161:               compose;",
          "2163:             primitive_type=ImagePrimitive;",
          "2164:             GetMagickToken(q,&q,extent,token);",
          "2166:             if (compose == -1)",
          "2167:               status=MagickFalse;",
          "2168:             else",
          "",
          "[Removed Lines]",
          "2158:         if (LocaleCompare(\"image\",keyword) == 0)",
          "2165:             compose=ParseCommandOption(MagickComposeOptions,MagickFalse,token);",
          "",
          "[Added Lines]",
          "2158:         if (LocaleCompare(\"image\",keyword) == 0)",
          "2165:             compose=ParseCommandOption(MagickComposeOptions,MagickFalse,token);",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "2175:             graphic_context[n]->interline_spacing=StringToDouble(token,",
          "2176:               (char **) NULL);",
          "2177:             break;",
          "2179:         if (LocaleCompare(\"interword-spacing\",keyword) == 0)",
          "2180:           {",
          "2181:             GetMagickToken(q,&q,extent,token);",
          "",
          "[Removed Lines]",
          "2178:           }",
          "",
          "[Added Lines]",
          "2178:           }",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "2196:             break;",
          "2197:           }",
          "2198:         status=MagickFalse;",
          "2200:       }",
          "2201:       case 'l':",
          "2202:       case 'L':",
          "2203:       {",
          "2205:           primitive_type=LinePrimitive;",
          "2206:         else",
          "2207:           status=MagickFalse;",
          "",
          "[Removed Lines]",
          "2199:         break;",
          "2204:         if (LocaleCompare(\"line\",keyword) == 0)",
          "",
          "[Added Lines]",
          "2199:         break;",
          "2204:         if (LocaleCompare(\"line\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "2238:             break;",
          "2239:           }",
          "2240:         if (LocaleCompare(\"point\",keyword) == 0)",
          "2242:             primitive_type=PointPrimitive;",
          "2243:             break;",
          "2244:           }",
          "",
          "[Removed Lines]",
          "2241:           {",
          "",
          "[Added Lines]",
          "2241:           {",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "2270:                     n=0;",
          "2271:                     break;",
          "2272:                   }",
          "2274:                   if (LocaleCompare(graphic_context[n]->clip_mask,",
          "2275:                       graphic_context[n-1]->clip_mask) != 0)",
          "2276:                     (void) SetImageMask(image,ReadPixelMask,(Image *) NULL,",
          "2277:                       exception);",
          "2278:                 graphic_context[n]=DestroyDrawInfo(graphic_context[n]);",
          "2280:                 break;",
          "2281:               }",
          "2282:             if (LocaleCompare(\"pattern\",token) == 0)",
          "2284:             status=MagickFalse;",
          "2285:             break;",
          "2287:         if (LocaleCompare(\"push\",keyword) == 0)",
          "2288:           {",
          "2289:             GetMagickToken(q,&q,extent,token);",
          "2290:             if (LocaleCompare(\"clip-path\",token) == 0)",
          "2291:               {",
          "2292:                 char",
          "2295:                 GetMagickToken(q,&q,extent,token);",
          "2296:                 (void) FormatLocaleString(name,MagickPathExtent,\"%s\",token);",
          "",
          "[Removed Lines]",
          "2273:                 if (graphic_context[n]->clip_mask != (char *) NULL)",
          "2279:                 n--;",
          "2283:               break;",
          "2286:           }",
          "2293:                   name[MagickPathExtent];",
          "",
          "[Added Lines]",
          "2273:                 if (graphic_context[n]->clip_mask != (char *) NULL)",
          "2279:                 n--;",
          "2283:               break;",
          "2286:           }",
          "2293:                   name[MagickPathExtent];",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "2303:                   if (LocaleCompare(token,\"clip-path\") != 0)",
          "2304:                     continue;",
          "2305:                   break;",
          "2307:                 (void) CopyMagickString(token,p,(size_t) (q-p-4+1));",
          "2309:                 GetMagickToken(q,&q,extent,token);",
          "2311:               }",
          "2313:               {",
          "2315:                   key[2*MagickPathExtent],",
          "2317:                   type[MagickPathExtent];",
          "2319:                 SegmentInfo",
          "2323:                 (void) CopyMagickString(name,token,MagickPathExtent);",
          "2324:                 GetMagickToken(q,&q,extent,token);",
          "2325:                 (void) CopyMagickString(type,token,MagickPathExtent);",
          "2327:                 segment.x1=StringToDouble(token,(char **) NULL);",
          "2329:                 if (*token == ',')",
          "2330:                   GetMagickToken(q,&q,extent,token);",
          "2331:                 segment.y1=StringToDouble(token,(char **) NULL);",
          "2333:                 if (*token == ',')",
          "2334:                   GetMagickToken(q,&q,extent,token);",
          "2336:                 GetMagickToken(q,&q,extent,token);",
          "2337:                 if (*token == ',')",
          "2338:                   GetMagickToken(q,&q,extent,token);",
          "",
          "[Removed Lines]",
          "2306:                 }",
          "2308:                 (void) SetImageArtifact(image,name,token);",
          "2310:                 break;",
          "2312:             if (LocaleCompare(\"gradient\",token) == 0)",
          "2314:                 char",
          "2316:                   name[MagickPathExtent],",
          "2320:                   segment;",
          "2322:                 GetMagickToken(q,&q,extent,token);",
          "2326:                 GetMagickToken(q,&q,extent,token);",
          "2328:                 GetMagickToken(q,&q,extent,token);",
          "2332:                 GetMagickToken(q,&q,extent,token);",
          "2335:                 segment.x2=StringToDouble(token,(char **) NULL);",
          "",
          "[Added Lines]",
          "2306:                 }",
          "2308:                 (void) SetImageArtifact(image,name,token);",
          "2310:                 break;",
          "2312:             if (LocaleCompare(\"gradient\",token) == 0)",
          "2314:                 char",
          "2316:                   name[MagickPathExtent],",
          "2320:                   segment;",
          "2322:                 GetNextToken(q,&q,extent,token);",
          "2326:                 GetNextToken(q,&q,extent,token);",
          "2328:                 GetNextToken(q,&q,extent,token);",
          "2332:                 GetNextToken(q,&q,extent,token);",
          "2335:                 segment.x2=StringToDouble(token,(char **) NULL);",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "2361:                   graphic_context[n]->affine.sy*segment.y1+",
          "2362:                   graphic_context[n]->affine.ty;",
          "2363:                 bounds.x2=graphic_context[n]->affine.sx*segment.x2+",
          "2365:                   graphic_context[n]->affine.tx;",
          "2366:                 bounds.y2=graphic_context[n]->affine.rx*segment.x2+",
          "2367:                   graphic_context[n]->affine.sy*segment.y2+",
          "",
          "[Removed Lines]",
          "2364:                   graphic_context[n]->affine.ry*segment.y2+",
          "",
          "[Added Lines]",
          "2364:                   graphic_context[n]->affine.ry*segment.y2+",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "2373:                 (void) FormatLocaleString(key,MagickPathExtent,\"%s-geometry\",name);",
          "2374:                 (void) FormatLocaleString(geometry,MagickPathExtent,",
          "2375:                   \"%gx%g%+.15g%+.15g\",",
          "2377:                   MagickMax(fabs(bounds.y2-bounds.y1+1.0),1.0),",
          "2379:                 (void) SetImageArtifact(image,key,geometry);",
          "2380:                 GetMagickToken(q,&q,extent,token);",
          "2382:               }",
          "2384:               {",
          "2385:                 char",
          "2387:                   name[MagickPathExtent];",
          "2389:                 RectangleInfo",
          "2390:                   pattern_bounds;",
          "2392:                 GetMagickToken(q,&q,extent,token);",
          "2394:                 GetMagickToken(q,&q,extent,token);",
          "2395:                 pattern_bounds.x=(ssize_t) ceil(StringToDouble(token,",
          "2396:                   (char **) NULL)-0.5);",
          "2397:                 GetMagickToken(q,&q,extent,token);",
          "2399:                   GetMagickToken(q,&q,extent,token);",
          "2400:                 pattern_bounds.y=(ssize_t) ceil(StringToDouble(token,",
          "2402:                 GetMagickToken(q,&q,extent,token);",
          "2403:                 if (*token == ',')",
          "2404:                   GetMagickToken(q,&q,extent,token);",
          "",
          "[Removed Lines]",
          "2376:                   MagickMax(fabs(bounds.x2-bounds.x1+1.0),1.0),",
          "2378:                   bounds.x1,bounds.y1);",
          "2381:                 break;",
          "2383:             if (LocaleCompare(\"pattern\",token) == 0)",
          "2386:                   key[2*MagickPathExtent],",
          "2393:                 (void) CopyMagickString(name,token,MagickPathExtent);",
          "2398:                 if (*token == ',')",
          "2401:                   (char **) NULL)-0.5);",
          "",
          "[Added Lines]",
          "2376:                   MagickMax(fabs(bounds.x2-bounds.x1+1.0),1.0),",
          "2378:                   bounds.x1,bounds.y1);",
          "2381:                 break;",
          "2383:             if (LocaleCompare(\"pattern\",token) == 0)",
          "2386:                   key[2*MagickPathExtent],",
          "2393:                 (void) CopyMagickString(name,token,MagickPathExtent);",
          "2398:                 if (*token == ',')",
          "2401:                   (char **) NULL)-0.5);",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "2413:                 {",
          "2414:                   GetMagickToken(q,&q,extent,token);",
          "2415:                   if (LocaleCompare(token,\"pop\") != 0)",
          "2417:                   GetMagickToken(q,(const char **) NULL,extent,token);",
          "2418:                   if (LocaleCompare(token,\"pattern\") != 0)",
          "2419:                     continue;",
          "",
          "[Removed Lines]",
          "2416:                     continue;",
          "",
          "[Added Lines]",
          "2416:                     continue;",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "2450:               }",
          "2451:             if (LocaleCompare(\"defs\",token) == 0)",
          "2452:               break;",
          "2454:             break;",
          "2455:           }",
          "2456:         status=MagickFalse;",
          "",
          "[Removed Lines]",
          "2453:             status=MagickFalse;",
          "",
          "[Added Lines]",
          "2453:             status=MagickFalse;",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "2471:             affine.sx=cos(DegreesToRadians(fmod((double) angle,360.0)));",
          "2472:             affine.rx=sin(DegreesToRadians(fmod((double) angle,360.0)));",
          "2473:             affine.ry=(-sin(DegreesToRadians(fmod((double) angle,360.0))));",
          "2475:             break;",
          "2477:         if (LocaleCompare(\"roundRectangle\",keyword) == 0)",
          "2479:             primitive_type=RoundRectanglePrimitive;",
          "2480:             break;",
          "2481:           }",
          "2482:         status=MagickFalse;",
          "2483:         break;",
          "2485:       case 's':",
          "2486:       case 'S':",
          "2487:       {",
          "2488:         if (LocaleCompare(\"scale\",keyword) == 0)",
          "2489:           {",
          "2490:             GetMagickToken(q,&q,extent,token);",
          "2492:             GetMagickToken(q,&q,extent,token);",
          "2493:             if (*token == ',')",
          "2494:               GetMagickToken(q,&q,extent,token);",
          "",
          "[Removed Lines]",
          "2474:             affine.sy=cos(DegreesToRadians(fmod((double) angle,360.0)));",
          "2476:           }",
          "2478:           {",
          "2484:       }",
          "2491:             affine.sx=StringToDouble(token,(char **) NULL);",
          "",
          "[Added Lines]",
          "2474:             affine.sy=cos(DegreesToRadians(fmod((double) angle,360.0)));",
          "2476:           }",
          "2478:           {",
          "2484:       }",
          "2491:             affine.sx=StringToDouble(token,(char **) NULL);",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "2511:           }",
          "2512:         if (LocaleCompare(\"stop-color\",keyword) == 0)",
          "2513:           {",
          "2515:               stop_color;",
          "2517:             number_stops++;",
          "2519:               stops=(StopInfo *) AcquireQuantumMemory(2,sizeof(*stops));",
          "2520:             else if (number_stops > 2)",
          "2521:               stops=(StopInfo *) ResizeQuantumMemory(stops,number_stops,",
          "2522:                 sizeof(*stops));",
          "2523:             if (stops == (StopInfo *) NULL)",
          "2525:                 (void) ThrowMagickException(exception,GetMagickModule(),",
          "2526:                   ResourceLimitError,\"MemoryAllocationFailed\",\"`%s'\",",
          "2527:                   image->filename);",
          "",
          "[Removed Lines]",
          "2514:             PixelInfo",
          "2518:             if (number_stops == 1)",
          "2524:               {",
          "",
          "[Added Lines]",
          "2514:             PixelInfo",
          "2518:             if (number_stops == 1)",
          "2524:               {",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "2548:                   &graphic_context[n]->stroke,exception);",
          "2549:                 if (status == MagickFalse)",
          "2550:                   {",
          "2554:                     pattern_info=AcquireImageInfo();",
          "",
          "[Removed Lines]",
          "2551:                     ImageInfo",
          "",
          "[Added Lines]",
          "2551:                     ImageInfo",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "2564:           }",
          "2565:         if (LocaleCompare(\"stroke-antialias\",keyword) == 0)",
          "2566:           {",
          "2568:             graphic_context[n]->stroke_antialias=",
          "2570:             break;",
          "2571:           }",
          "2573:           {",
          "2575:               graphic_context[n]->dash_pattern=(double *)",
          "2576:                 RelinquishMagickMemory(graphic_context[n]->dash_pattern);",
          "2577:             if (IsPoint(q) != MagickFalse)",
          "",
          "[Removed Lines]",
          "2567:             GetMagickToken(q,&q,extent,token);",
          "2569:               StringToLong(token) != 0 ? MagickTrue : MagickFalse;",
          "2572:         if (LocaleCompare(\"stroke-dasharray\",keyword) == 0)",
          "2574:             if (graphic_context[n]->dash_pattern != (double *) NULL)",
          "",
          "[Added Lines]",
          "2567:             GetNextToken(q,&q,extent,token);",
          "2569:               StringToLong(token) != 0 ? MagickTrue : MagickFalse;",
          "2572:         if (LocaleCompare(\"stroke-dasharray\",keyword) == 0)",
          "2574:             if (graphic_context[n]->dash_pattern != (double *) NULL)",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "2585:                   GetMagickToken(r,&r,extent,token);",
          "2586:                 for (x=0; IsPoint(token) != MagickFalse; x++)",
          "2587:                 {",
          "2589:                   if (*token == ',')",
          "2591:                 }",
          "2592:                 graphic_context[n]->dash_pattern=(double *)",
          "2593:                   AcquireQuantumMemory((size_t) (2UL*x+1UL),",
          "",
          "[Removed Lines]",
          "2588:                   GetMagickToken(r,&r,extent,token);",
          "2590:                     GetMagickToken(r,&r,extent,token);",
          "",
          "[Added Lines]",
          "2588:                   GetNextToken(r,&r,extent,token);",
          "2590:                     GetNextToken(r,&r,extent,token);",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "2598:                       ResourceLimitError,\"MemoryAllocationFailed\",\"`%s'\",",
          "2599:                       image->filename);",
          "2600:                     break;",
          "2602:                 for (j=0; j < x; j++)",
          "2603:                 {",
          "2604:                   GetMagickToken(q,&q,extent,token);",
          "2605:                   if (*token == ',')",
          "2607:                   graphic_context[n]->dash_pattern[j]=StringToDouble(token,",
          "2608:                     (char **) NULL);",
          "2609:                 }",
          "",
          "[Removed Lines]",
          "2601:                   }",
          "2606:                     GetMagickToken(q,&q,extent,token);",
          "",
          "[Added Lines]",
          "2601:                   }",
          "2606:                     GetNextToken(q,&q,extent,token);",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "2613:                       graphic_context[n]->dash_pattern[j-x];",
          "2614:                 graphic_context[n]->dash_pattern[j]=0.0;",
          "2615:                 break;",
          "2617:             GetMagickToken(q,&q,extent,token);",
          "2618:             break;",
          "2619:           }",
          "",
          "[Removed Lines]",
          "2616:               }",
          "",
          "[Added Lines]",
          "2616:               }",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "2626:           }",
          "2627:         if (LocaleCompare(\"stroke-linecap\",keyword) == 0)",
          "2628:           {",
          "2630:               linecap;",
          "2632:             GetMagickToken(q,&q,extent,token);",
          "",
          "[Removed Lines]",
          "2629:             ssize_t",
          "",
          "[Added Lines]",
          "2629:             ssize_t",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "2637:               graphic_context[n]->linecap=(LineCap) linecap;",
          "2638:             break;",
          "2639:           }",
          "2641:           {",
          "2642:             ssize_t",
          "2643:               linejoin;",
          "2645:             GetMagickToken(q,&q,extent,token);",
          "2647:               token);",
          "2648:             if (linejoin == -1)",
          "2649:               status=MagickFalse;",
          "",
          "[Removed Lines]",
          "2640:         if (LocaleCompare(\"stroke-linejoin\",keyword) == 0)",
          "2646:             linejoin=ParseCommandOption(MagickLineJoinOptions,MagickFalse,",
          "",
          "[Added Lines]",
          "2640:         if (LocaleCompare(\"stroke-linejoin\",keyword) == 0)",
          "2646:             linejoin=ParseCommandOption(MagickLineJoinOptions,MagickFalse,",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "2651:               graphic_context[n]->linejoin=(LineJoin) linejoin;",
          "2652:             break;",
          "2653:           }",
          "2655:           {",
          "2656:             GetMagickToken(q,&q,extent,token);",
          "2657:             graphic_context[n]->miterlimit=StringToUnsignedLong(token);",
          "",
          "[Removed Lines]",
          "2654:         if (LocaleCompare(\"stroke-miterlimit\",keyword) == 0)",
          "",
          "[Added Lines]",
          "2654:         if (LocaleCompare(\"stroke-miterlimit\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "2672:               (char **) NULL);",
          "2673:             break;",
          "2674:           }",
          "2676:         break;",
          "2677:       }",
          "2678:       case 't':",
          "",
          "[Removed Lines]",
          "2675:         status=MagickFalse;",
          "",
          "[Added Lines]",
          "2675:         status=MagickFalse;",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "2685:           }",
          "2686:         if (LocaleCompare(\"text-align\",keyword) == 0)",
          "2687:           {",
          "2689:               align;",
          "2691:             GetMagickToken(q,&q,extent,token);",
          "",
          "[Removed Lines]",
          "2688:             ssize_t",
          "",
          "[Added Lines]",
          "2688:             ssize_t",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "2695:             else",
          "2696:               graphic_context[n]->align=(AlignType) align;",
          "2697:             break;",
          "2699:         if (LocaleCompare(\"text-anchor\",keyword) == 0)",
          "2700:           {",
          "2701:             ssize_t",
          "2702:               align;",
          "2704:             GetMagickToken(q,&q,extent,token);",
          "2706:             if (align == -1)",
          "2707:               status=MagickFalse;",
          "2708:             else",
          "2709:               graphic_context[n]->align=(AlignType) align;",
          "2710:             break;",
          "2711:           }",
          "2713:           {",
          "2715:             graphic_context[n]->text_antialias=",
          "2717:             break;",
          "2718:           }",
          "2719:         if (LocaleCompare(\"text-undercolor\",keyword) == 0)",
          "",
          "[Removed Lines]",
          "2698:           }",
          "2705:             align=ParseCommandOption(MagickAlignOptions,MagickFalse,token);",
          "2712:         if (LocaleCompare(\"text-antialias\",keyword) == 0)",
          "2714:             GetMagickToken(q,&q,extent,token);",
          "2716:               StringToLong(token) != 0 ? MagickTrue : MagickFalse;",
          "",
          "[Added Lines]",
          "2698:           }",
          "2705:             align=ParseCommandOption(MagickAlignOptions,MagickFalse,token);",
          "2712:         if (LocaleCompare(\"text-antialias\",keyword) == 0)",
          "2714:             GetNextToken(q,&q,extent,token);",
          "2716:               StringToLong(token) != 0 ? MagickTrue : MagickFalse;",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "2725:           }",
          "2726:         if (LocaleCompare(\"translate\",keyword) == 0)",
          "2727:           {",
          "2729:             affine.tx=StringToDouble(token,(char **) NULL);",
          "2730:             GetMagickToken(q,&q,extent,token);",
          "2732:               GetMagickToken(q,&q,extent,token);",
          "2734:             break;",
          "2735:           }",
          "2737:         break;",
          "2739:       case 'v':",
          "2740:       case 'V':",
          "2742:         if (LocaleCompare(\"viewbox\",keyword) == 0)",
          "2744:             GetMagickToken(q,&q,extent,token);",
          "2745:             graphic_context[n]->viewbox.x=(ssize_t) ceil(StringToDouble(token,",
          "2746:               (char **) NULL)-0.5);",
          "",
          "[Removed Lines]",
          "2728:             GetMagickToken(q,&q,extent,token);",
          "2731:             if (*token == ',')",
          "2733:             affine.ty=StringToDouble(token,(char **) NULL);",
          "2736:         status=MagickFalse;",
          "2738:       }",
          "2741:       {",
          "2743:           {",
          "",
          "[Added Lines]",
          "2728:             GetNextToken(q,&q,extent,token);",
          "2731:             if (*token == ',')",
          "2733:             affine.ty=StringToDouble(token,(char **) NULL);",
          "2736:         status=MagickFalse;",
          "2738:       }",
          "2741:       {",
          "2743:           {",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "2805:         if (image->debug != MagickFalse)",
          "2806:           (void) LogMagickEvent(DrawEvent,GetMagickModule(),\"  %.*s\",",
          "2807:             (int) (q-p),p);",
          "2809:       }",
          "2811:       Parse the primitive attributes.",
          "2813:     i=0;",
          "2815:     primitive_info[0].point.x=0.0;",
          "2817:     for (x=0; *q != '\\0'; x++)",
          "2818:     {",
          "",
          "[Removed Lines]",
          "2808:         continue;",
          "2814:     j=0;",
          "2816:     primitive_info[0].point.y=0.0;",
          "",
          "[Added Lines]",
          "2808:         continue;",
          "2814:     j=0;",
          "2816:     primitive_info[0].point.y=0.0;",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "2893:         radius=hypot((double) alpha,(double) beta);",
          "2894:         length*=5;",
          "2895:         length+=2*((size_t) ceil((double) MagickPI*radius))+6*BezierQuantum+360;",
          "2897:       }",
          "2898:       case BezierPrimitive:",
          "2899:       {",
          "",
          "[Removed Lines]",
          "2896:         break;",
          "",
          "[Added Lines]",
          "2896:         break;",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "3070:         i=(ssize_t) (j+primitive_info[j].coordinates);",
          "3071:         break;",
          "3072:       }",
          "3074:       {",
          "3075:         i=(ssize_t) (j+TracePath(primitive_info+j,token));",
          "3076:         break;",
          "",
          "[Removed Lines]",
          "3073:       case PathPrimitive:",
          "",
          "[Added Lines]",
          "3073:       case PathPrimitive:",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "3086:             status=MagickFalse;",
          "3087:             break;",
          "3088:           }",
          "3090:         method=ParseCommandOption(MagickMethodOptions,MagickFalse,token);",
          "3091:         if (method == -1)",
          "3092:           status=MagickFalse;",
          "",
          "[Removed Lines]",
          "3089:         GetMagickToken(q,&q,extent,token);",
          "",
          "[Added Lines]",
          "3089:         GetNextToken(q,&q,extent,token);",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "3097:       case TextPrimitive:",
          "3098:       {",
          "3099:         if (primitive_info[j].coordinates != 1)",
          "3101:             status=MagickFalse;",
          "3102:             break;",
          "3103:           }",
          "",
          "[Removed Lines]",
          "3100:           {",
          "",
          "[Added Lines]",
          "3100:           {",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "5389:   for (p=path; *p != '\\0'; )",
          "5390:   {",
          "5391:     while (isspace((int) ((unsigned char) *p)) != 0)",
          "5393:     if (*p == '\\0')",
          "5395:     last_attribute=attribute;",
          "5397:     switch (attribute)",
          "5399:       case 'a':",
          "5401:       {",
          "5403:           large_arc,",
          "5407:           angle;",
          "5409:         PointInfo",
          "5413:           Compute arc points.",
          "5415:         do",
          "5417:           GetMagickToken(p,&p,MagickPathExtent,token);",
          "5419:             GetMagickToken(p,&p,MagickPathExtent,token);",
          "5420:           arc.x=StringToDouble(token,(char **) NULL);",
          "5421:           GetMagickToken(p,&p,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "5392:       p++;",
          "5394:       break;",
          "5396:     attribute=(int) (*p++);",
          "5398:     {",
          "5400:       case 'A':",
          "5402:         MagickBooleanType",
          "5404:           sweep;",
          "5406:         double",
          "5410:           arc;",
          "5416:         {",
          "5418:           if (*token == ',')",
          "",
          "[Added Lines]",
          "5392:       p++;",
          "5394:       break;",
          "5396:     attribute=(int) (*p++);",
          "5398:     {",
          "5400:       case 'A':",
          "5402:         MagickBooleanType",
          "5404:           sweep;",
          "5406:         double",
          "5410:           arc;",
          "5416:         {",
          "5418:           if (*token == ',')",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "5440:           x=StringToDouble(token,(char **) NULL);",
          "5441:           GetMagickToken(p,&p,MagickPathExtent,token);",
          "5442:           if (*token == ',')",
          "5444:           y=StringToDouble(token,(char **) NULL);",
          "5446:           end.y=(double) (attribute == (int) 'A' ? y : point.y+y);",
          "5448:           q+=q->coordinates;",
          "5450:           while (isspace((int) ((unsigned char) *p)) != 0)",
          "5451:             p++;",
          "5452:           if (*p == ',')",
          "",
          "[Removed Lines]",
          "5443:             GetMagickToken(p,&p,MagickPathExtent,token);",
          "5445:           end.x=(double) (attribute == (int) 'A' ? x : point.x+x);",
          "5447:           TraceArcPath(q,point,end,arc,angle,large_arc,sweep);",
          "5449:           point=end;",
          "",
          "[Added Lines]",
          "5443:             GetNextToken(p,&p,MagickPathExtent,token);",
          "5445:           end.x=(double) (attribute == (int) 'A' ? x : point.x+x);",
          "5447:           TraceArcPath(q,point,end,arc,angle,large_arc,sweep);",
          "5449:           point=end;",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "5465:           points[0]=point;",
          "5466:           for (i=1; i < 4; i++)",
          "5467:           {",
          "5469:             if (*token == ',')",
          "5471:             x=StringToDouble(token,(char **) NULL);",
          "5472:             GetMagickToken(p,&p,MagickPathExtent,token);",
          "5473:             if (*token == ',')",
          "",
          "[Removed Lines]",
          "5468:             GetMagickToken(p,&p,MagickPathExtent,token);",
          "5470:               GetMagickToken(p,&p,MagickPathExtent,token);",
          "",
          "[Added Lines]",
          "5468:             GetNextToken(p,&p,MagickPathExtent,token);",
          "5470:               GetNextToken(p,&p,MagickPathExtent,token);",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "5480:           for (i=0; i < 4; i++)",
          "5481:             (q+i)->point=points[i];",
          "5482:           TraceBezier(q,4);",
          "5484:           point=end;",
          "5486:         break;",
          "5488:       case 'H':",
          "5490:       {",
          "5491:         do",
          "5492:         {",
          "",
          "[Removed Lines]",
          "5483:           q+=q->coordinates;",
          "5485:         } while (IsPoint(p) != MagickFalse);",
          "5487:       }",
          "5489:       case 'h':",
          "",
          "[Added Lines]",
          "5483:           q+=q->coordinates;",
          "5485:         } while (IsPoint(p) != MagickFalse);",
          "5487:       }",
          "5489:       case 'h':",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "5507:         {",
          "5508:           GetMagickToken(p,&p,MagickPathExtent,token);",
          "5509:           if (*token == ',')",
          "5511:           x=StringToDouble(token,(char **) NULL);",
          "5513:           if (*token == ',')",
          "5515:           y=StringToDouble(token,(char **) NULL);",
          "5517:           point.y=(double) (attribute == (int) 'L' ? y : point.y+y);",
          "5518:           TracePoint(q,point);",
          "5519:           q+=q->coordinates;",
          "",
          "[Removed Lines]",
          "5510:             GetMagickToken(p,&p,MagickPathExtent,token);",
          "5512:           GetMagickToken(p,&p,MagickPathExtent,token);",
          "5514:             GetMagickToken(p,&p,MagickPathExtent,token);",
          "5516:           point.x=(double) (attribute == (int) 'L' ? x : point.x+x);",
          "",
          "[Added Lines]",
          "5510:             GetNextToken(p,&p,MagickPathExtent,token);",
          "5512:           GetNextToken(p,&p,MagickPathExtent,token);",
          "5514:             GetNextToken(p,&p,MagickPathExtent,token);",
          "5516:           point.x=(double) (attribute == (int) 'L' ? x : point.x+x);",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "5541:             GetMagickToken(p,&p,MagickPathExtent,token);",
          "5542:           y=StringToDouble(token,(char **) NULL);",
          "5543:           point.x=(double) (attribute == (int) 'M' ? x : point.x+x);",
          "5545:           if (i == 0)",
          "5547:           i++;",
          "5549:           q+=q->coordinates;",
          "5551:             {",
          "5552:               TracePoint(q,point);",
          "5553:               q+=q->coordinates;",
          "",
          "[Removed Lines]",
          "5544:           point.y=(double) (attribute == (int) 'M' ? y : point.y+y);",
          "5546:             start=point;",
          "5548:           TracePoint(q,point);",
          "5550:           if ((i != 0) && (attribute == (int) 'M'))",
          "",
          "[Added Lines]",
          "5544:           point.y=(double) (attribute == (int) 'M' ? y : point.y+y);",
          "5546:             start=point;",
          "5548:           TracePoint(q,point);",
          "5550:           if ((i != 0) && (attribute == (int) 'M'))",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "5576:             y=StringToDouble(token,(char **) NULL);",
          "5577:             if (*p == ',')",
          "5578:               p++;",
          "5580:             end.y=(double) (attribute == (int) 'Q' ? y : point.y+y);",
          "5582:           }",
          "5584:             (q+i)->point=points[i];",
          "5586:           q+=q->coordinates;",
          "5587:           point=end;",
          "5588:         } while (IsPoint(p) != MagickFalse);",
          "",
          "[Removed Lines]",
          "5579:             end.x=(double) (attribute == (int) 'Q' ? x : point.x+x);",
          "5581:             points[i]=end;",
          "5583:           for (i=0; i < 3; i++)",
          "5585:           TraceBezier(q,3);",
          "",
          "[Added Lines]",
          "5579:             end.x=(double) (attribute == (int) 'Q' ? x : point.x+x);",
          "5581:             points[i]=end;",
          "5583:           for (i=0; i < 3; i++)",
          "5585:           TraceBezier(q,3);",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "5616:             points[i]=end;",
          "5617:           }",
          "5618:           if (strchr(\"CcSs\",last_attribute) == (char *) NULL)",
          "5620:               points[0]=point;",
          "5622:             }",
          "5624:             (q+i)->point=points[i];",
          "5626:           q+=q->coordinates;",
          "5627:           point=end;",
          "5628:         } while (IsPoint(p) != MagickFalse);",
          "",
          "[Removed Lines]",
          "5619:             {",
          "5621:               points[1]=point;",
          "5623:           for (i=0; i < 4; i++)",
          "5625:           TraceBezier(q,4);",
          "",
          "[Added Lines]",
          "5619:             {",
          "5621:               points[1]=point;",
          "5623:           for (i=0; i < 4; i++)",
          "5625:           TraceBezier(q,4);",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "5646:               GetMagickToken(p,&p,MagickPathExtent,token);",
          "5647:             x=StringToDouble(token,(char **) NULL);",
          "5648:             GetMagickToken(p,&p,MagickPathExtent,token);",
          "5650:               GetMagickToken(p,&p,MagickPathExtent,token);",
          "5652:             end.x=(double) (attribute == (int) 'T' ? x : point.x+x);",
          "5653:             end.y=(double) (attribute == (int) 'T' ? y : point.y+y);",
          "5654:             points[i]=end;",
          "",
          "[Removed Lines]",
          "5649:             if (*token == ',')",
          "5651:             y=StringToDouble(token,(char **) NULL);",
          "",
          "[Added Lines]",
          "5649:             if (*token == ',')",
          "5651:             y=StringToDouble(token,(char **) NULL);",
          "",
          "---------------"
        ],
        "MagickCore/enhance.c||MagickCore/enhance.c": [
          "File: MagickCore/enhance.c -> MagickCore/enhance.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "579:       slope=GetXMLTreeChild(sop,\"Slope\");",
          "581:         {",
          "583:           p=(const char *) content;",
          "584:           for (i=0; (*p != '\\0') && (i < 3); i++)",
          "585:           {",
          "",
          "[Removed Lines]",
          "580:       if (slope != (XMLTreeInfo *) NULL)",
          "582:           content=GetXMLTreeContent(slope);",
          "",
          "[Added Lines]",
          "580:       if (slope != (XMLTreeInfo *) NULL)",
          "582:           content=GetXMLTreeContent(slope);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "609:           }",
          "610:         }",
          "611:       offset=GetXMLTreeChild(sop,\"Offset\");",
          "613:         {",
          "615:           p=(const char *) content;",
          "616:           for (i=0; (*p != '\\0') && (i < 3); i++)",
          "617:           {",
          "",
          "[Removed Lines]",
          "612:       if (offset != (XMLTreeInfo *) NULL)",
          "614:           content=GetXMLTreeContent(offset);",
          "",
          "[Added Lines]",
          "612:       if (offset != (XMLTreeInfo *) NULL)",
          "614:           content=GetXMLTreeContent(offset);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "642:           }",
          "643:         }",
          "644:       power=GetXMLTreeChild(sop,\"Power\");",
          "646:         {",
          "648:           p=(const char *) content;",
          "649:           for (i=0; (*p != '\\0') && (i < 3); i++)",
          "650:           {",
          "",
          "[Removed Lines]",
          "645:       if (power != (XMLTreeInfo *) NULL)",
          "647:           content=GetXMLTreeContent(power);",
          "",
          "[Added Lines]",
          "645:       if (power != (XMLTreeInfo *) NULL)",
          "647:           content=GetXMLTreeContent(power);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "679:     {",
          "680:       XMLTreeInfo",
          "683:       saturation=GetXMLTreeChild(sat,\"Saturation\");",
          "684:       if (saturation != (XMLTreeInfo *) NULL)",
          "685:         {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "MagickCore/geometry.c||MagickCore/geometry.c": [
          "File: MagickCore/geometry.c -> MagickCore/geometry.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "747:   MagickStatusType",
          "748:     flags;",
          "751:     i;",
          "753:   GetAffineMatrix(affine_matrix);",
          "754:   flags=NoValue;",
          "755:   p=(char *) geometry;",
          "",
          "[Removed Lines]",
          "750:   register ssize_t",
          "",
          "[Added Lines]",
          "750:   register ssize_t",
          "",
          "---------------"
        ],
        "MagickCore/locale.c||MagickCore/locale.c": [
          "File: MagickCore/locale.c -> MagickCore/locale.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1197:   size_t",
          "1198:     extent;",
          "1201:     Read the locale configure file.",
          "1203:   (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1208:   locale_info=(LocaleInfo *) NULL;",
          "1212:   fatal_handler=SetFatalErrorHandler(LocaleFatalErrorHandler);",
          "1213:   token=AcquireString(xml);",
          "1214:   extent=strlen(token)+MagickPathExtent;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1221:     if (*token == '\\0')",
          "1222:       break;",
          "1223:     (void) CopyMagickString(keyword,token,MagickLocaleExtent);",
          "1225:       {",
          "1227:           Doctype element.",
          "",
          "[Removed Lines]",
          "1224:     if (LocaleNCompare(keyword,\"<!DOCTYPE\",9) == 0)",
          "",
          "[Added Lines]",
          "1224:     if (LocaleNCompare(keyword,\"<!DOCTYPE\",9) == 0)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1235:         continue;",
          "1236:       }",
          "1237:     if (LocaleNCompare(keyword,\"<!--\",4) == 0)",
          "1240:           Comment element.",
          "1242:         while ((LocaleNCompare(q,\"->\",2) != 0) && (*q != '\\0'))",
          "1243:         {",
          "1244:           GetMagickToken(q,&q,extent,token);",
          "",
          "[Removed Lines]",
          "1238:       {",
          "",
          "[Added Lines]",
          "1238:       {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1285:                     (void) CopyMagickString(path,token,MagickPathExtent);",
          "1286:                   else",
          "1287:                     (void) ConcatenateMagickString(path,token,MagickPathExtent);",
          "1289:                   if (file_xml != (char *) NULL)",
          "1290:                     {",
          "1292:                         depth+1,exception);",
          "1293:                       file_xml=DestroyString(file_xml);",
          "1294:                     }",
          "",
          "[Removed Lines]",
          "1288:                   file_xml=FileToXML(path,~0UL);",
          "1291:                       status&=LoadLocaleCache(locale_cache,file_xml,path,locale,",
          "",
          "[Added Lines]",
          "1288:                   file_xml=FileToXML(path,~0UL);",
          "1291:                       status&=LoadLocaleCache(locale_cache,file_xml,path,locale,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1310:             continue;",
          "1311:           GetMagickToken(q,&q,extent,token);",
          "1312:         }",
          "1314:       }",
          "1315:     if (LocaleCompare(keyword,\"</locale>\") == 0)",
          "1317:         ChopLocaleComponents(tag,1);",
          "1318:         (void) ConcatenateMagickString(tag,\"/\",MagickLocaleExtent);",
          "1319:         continue;",
          "",
          "[Removed Lines]",
          "1313:         continue;",
          "1316:       {",
          "",
          "[Added Lines]",
          "1313:         continue;",
          "1316:       {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1372:         (void) ConcatenateMagickString(tag,\"/\",MagickLocaleExtent);",
          "1373:         continue;",
          "1374:       }",
          "1376:       {",
          "1378:           Subpath element.",
          "",
          "[Removed Lines]",
          "1375:     if (*keyword == '<')",
          "",
          "[Added Lines]",
          "1375:     if (*keyword == '<')",
          "",
          "---------------"
        ],
        "MagickCore/log.c||MagickCore/log.c": [
          "File: MagickCore/log.c -> MagickCore/log.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1453:   MagickStatusType",
          "1454:     status;",
          "1456:   size_t",
          "1457:     extent;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1462:   if (xml == (const char *) NULL)",
          "1463:     return(MagickFalse);",
          "1464:   status=MagickTrue;",
          "1466:   extent=strlen(token)+MagickPathExtent;",
          "1467:   for (q=(const char *) xml; *q != '\\0'; )",
          "1468:   {",
          "",
          "[Removed Lines]",
          "1465:   token=AcquireString(xml);",
          "",
          "[Added Lines]",
          "1465:   token=AcquireString(xml);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1472:     GetMagickToken(q,&q,extent,token);",
          "1473:     if (*token == '\\0')",
          "1475:     (void) CopyMagickString(keyword,token,MagickPathExtent);",
          "1476:     if (LocaleNCompare(keyword,\"<!DOCTYPE\",9) == 0)",
          "1477:       {",
          "",
          "[Removed Lines]",
          "1474:       break;",
          "",
          "[Added Lines]",
          "1474:       break;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1482:           GetMagickToken(q,&q,extent,token);",
          "1483:         continue;",
          "1484:       }",
          "1486:       {",
          "1490:         while ((LocaleNCompare(q,\"->\",2) != 0) && (*q != '\\0'))",
          "1491:           GetMagickToken(q,&q,extent,token);",
          "",
          "[Removed Lines]",
          "1485:     if (LocaleNCompare(keyword,\"<!--\",4) == 0)",
          "1488:           Comment element.",
          "",
          "[Added Lines]",
          "1485:     if (LocaleNCompare(keyword,\"<!--\",4) == 0)",
          "1488:           Comment element.",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1542:         log_info=(LogInfo *) AcquireMagickMemory(sizeof(*log_info));",
          "1543:         if (log_info == (LogInfo *) NULL)",
          "1544:           ThrowFatalException(ResourceLimitFatalError,\"MemoryAllocationFailed\");",
          "1546:         log_info->path=ConstantString(filename);",
          "1547:         GetTimerInfo((TimerInfo *) &log_info->timer);",
          "1550:       }",
          "1551:     if (log_info == (LogInfo *) NULL)",
          "1552:       continue;",
          "",
          "[Removed Lines]",
          "1545:         (void) ResetMagickMemory(log_info,0,sizeof(*log_info));",
          "1548:         log_info->signature=MagickCoreSignature;",
          "1549:         continue;",
          "",
          "[Added Lines]",
          "1545:         (void) ResetMagickMemory(log_info,0,sizeof(*log_info));",
          "1548:         log_info->signature=MagickCoreSignature;",
          "1549:         continue;",
          "",
          "---------------"
        ],
        "MagickCore/magic.c||MagickCore/magic.c": [
          "File: MagickCore/magic.c -> MagickCore/magic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "860:     Load the magic map file.",
          "863:     \"Loading magic configure file \\\"%s\\\" ...\",filename);",
          "864:   if (xml == (char *) NULL)",
          "865:     return(MagickFalse);",
          "",
          "[Removed Lines]",
          "862:   (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),",
          "",
          "[Added Lines]",
          "862:   (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "869:   extent=strlen(token)+MagickPathExtent;",
          "870:   for (q=(char *) xml; *q != '\\0'; )",
          "871:   {",
          "873:       Interpret XML.",
          "875:     GetMagickToken(q,&q,extent,token);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "878:     (void) CopyMagickString(keyword,token,MagickPathExtent);",
          "879:     if (LocaleNCompare(keyword,\"<!DOCTYPE\",9) == 0)",
          "880:       {",
          "882:           Doctype element.",
          "884:         while ((LocaleNCompare(q,\"]>\",2) != 0) && (*q != '\\0'))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "889:       {",
          "891:           Comment element.",
          "893:         while ((LocaleNCompare(q,\"->\",2) != 0) && (*q != '\\0'))",
          "894:           GetMagickToken(q,&q,extent,token);",
          "896:       }",
          "897:     if (LocaleCompare(keyword,\"<include\") == 0)",
          "898:       {",
          "",
          "[Removed Lines]",
          "895:         continue;",
          "",
          "[Added Lines]",
          "895:         continue;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "951:         magic_info->signature=MagickCoreSignature;",
          "952:         continue;",
          "953:       }",
          "955:       continue;",
          "956:     if (LocaleCompare(keyword,\"/>\") == 0)",
          "959:           NULL,magic_info);",
          "960:         if (status == MagickFalse)",
          "961:           (void) ThrowMagickException(exception,GetMagickModule(),",
          "",
          "[Removed Lines]",
          "954:     if (magic_info == (MagicInfo *) NULL)",
          "957:       {",
          "958:         status=InsertValueInSortedLinkedList(magic_cache,CompareMagickInfoSize,",
          "",
          "[Added Lines]",
          "954:     if (magic_info == (MagicInfo *) NULL)",
          "957:       {",
          "958:         status=InsertValueInSortedLinkedList(magic_cache,CompareMagickInfoSize,",
          "",
          "---------------"
        ],
        "MagickCore/methods.h||MagickCore/methods.h": [
          "File: MagickCore/methods.h -> MagickCore/methods.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "505: #define GetMagickResource  PrependMagickMethod(GetMagickResource)",
          "506: #define GetMagickSeekableStream  PrependMagickMethod(GetMagickSeekableStream)",
          "507: #define GetMagickThreadSupport  PrependMagickMethod(GetMagickThreadSupport)",
          "509: #define GetMagickVersion  PrependMagickMethod(GetMagickVersion)",
          "510: #define GetMagicList  PrependMagickMethod(GetMagicList)",
          "511: #define GetMagicName  PrependMagickMethod(GetMagicName)",
          "",
          "[Removed Lines]",
          "508: #define GetMagickToken  PrependMagickMethod(GetMagickToken)",
          "",
          "[Added Lines]",
          "508: #define GetNextToken  PrependMagickMethod(GetNextToken)",
          "",
          "---------------"
        ],
        "MagickCore/morphology.c||MagickCore/morphology.c": [
          "File: MagickCore/morphology.c -> MagickCore/morphology.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "299:       p=(const char *) kernel_string;",
          "300:       while ((isspace((int) ((unsigned char) *p)) != 0) || (*p == '\\''))",
          "302:       for (i=0; p < end; i++)",
          "304:         GetMagickToken(p,&p,MagickPathExtent,token);",
          "305:         if (*token == ',')",
          "306:           GetMagickToken(p,&p,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "303:       {",
          "",
          "[Added Lines]",
          "303:       {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "320:     return(DestroyKernelInfo(kernel));",
          "321:   kernel->minimum=MagickMaximumValue;",
          "322:   kernel->maximum=(-MagickMaximumValue);",
          "324:   for (i=0; (i < (ssize_t) (kernel->width*kernel->height)) && (p < end); i++)",
          "326:     GetMagickToken(p,&p,MagickPathExtent,token);",
          "327:     if (*token == ',')",
          "328:       GetMagickToken(p,&p,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "323:   kernel->negative_range = kernel->positive_range = 0.0;",
          "325:   {",
          "",
          "[Added Lines]",
          "323:   kernel->negative_range = kernel->positive_range = 0.0;",
          "325:   {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "338:       Minimize(kernel->minimum, kernel->values[i]);",
          "339:       Maximize(kernel->maximum, kernel->values[i]);",
          "340:     }",
          "344:   GetMagickToken(p,&p,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "341:   }",
          "",
          "[Added Lines]",
          "341:   }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "393:     flags;",
          "395:   ssize_t",
          "399:   GetMagickToken(kernel_string,&p,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "396:     type;",
          "",
          "[Added Lines]",
          "396:     type;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "509:       kernel_cache=FileToString(kernel_string+1,~0UL,exception);",
          "510:       if (kernel_cache == (char *) NULL)",
          "511:         return((KernelInfo *) NULL);",
          "513:     }",
          "514:   kernel=NULL;",
          "515:   while (GetMagickToken(p,(const char **) NULL,MagickPathExtent,token), *token != '\\0')",
          "",
          "[Removed Lines]",
          "512:       p=(const char *) kernel_cache;",
          "",
          "[Added Lines]",
          "512:       p=(const char *) kernel_cache;",
          "",
          "---------------"
        ],
        "MagickCore/nt-feature.c||MagickCore/nt-feature.c": [
          "File: MagickCore/nt-feature.c -> MagickCore/nt-feature.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "423:              (LocaleCompare(type_info->name, \"Wingdings-3\") == 0 ) )",
          "424:           type_info->encoding=ConstantString(\"AppleRoman\");",
          "428:         for (q=value_name; *q != '\\0'; )",
          "429:           {",
          "",
          "[Removed Lines]",
          "426:         family_extent=value_name;",
          "",
          "[Added Lines]",
          "426:         family_extent=value_name;",
          "",
          "---------------"
        ],
        "MagickCore/option.c||MagickCore/option.c": [
          "File: MagickCore/option.c -> MagickCore/option.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2758: %  ParsePixelChannelOption() parses a string and returns an enumerated pixel",
          "2759: %  channel type(s).",
          "2760: %",
          "2762: %",
          "2763: %      ssize_t ParsePixelChannelOption(const char *channels)",
          "2764: %",
          "",
          "[Removed Lines]",
          "2761: %  The format of the ParsePixelChannelOption method is:",
          "",
          "[Added Lines]",
          "2761: %  The format of the ParsePixelChannelOption method is:",
          "",
          "---------------"
        ],
        "MagickCore/policy.c||MagickCore/policy.c": [
          "File: MagickCore/policy.c -> MagickCore/policy.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "769:     Load the policy map file.",
          "771:   (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),",
          "772:     \"Loading policy file \\\"%s\\\" ...\",filename);",
          "773:   if (xml == (char *) NULL)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "777:   token=AcquireString(xml);",
          "778:   extent=strlen(token)+MagickPathExtent;",
          "779:   for (q=(const char *) xml; *q != '\\0'; )",
          "782:       Interpret XML.",
          "",
          "[Removed Lines]",
          "780:   {",
          "",
          "[Added Lines]",
          "780:   {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "786:       break;",
          "787:     (void) CopyMagickString(keyword,token,MagickPathExtent);",
          "788:     if (LocaleNCompare(keyword,\"<!DOCTYPE\",9) == 0)",
          "791:           Docdomain element.",
          "",
          "[Removed Lines]",
          "789:       {",
          "",
          "[Added Lines]",
          "789:       {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "797:     if (LocaleNCompare(keyword,\"<!--\",4) == 0)",
          "798:       {",
          "802:         while ((LocaleNCompare(q,\"->\",2) != 0) && (*q != '\\0'))",
          "804:         continue;",
          "805:       }",
          "806:     if (LocaleCompare(keyword,\"<include\") == 0)",
          "",
          "[Removed Lines]",
          "800:           Comment element.",
          "803:           GetMagickToken(q,&q,extent,token);",
          "",
          "[Added Lines]",
          "800:           Comment element.",
          "803:           GetNextToken(q,&q,extent,token);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "858:         policy_info->path=ConstantString(filename);",
          "859:         policy_info->exempt=MagickFalse;",
          "860:         policy_info->signature=MagickCoreSignature;",
          "862:       }",
          "863:     if (policy_info == (PolicyInfo *) NULL)",
          "866:       {",
          "867:         status=AppendValueToLinkedList(policy_cache,policy_info);",
          "868:         if (status == MagickFalse)",
          "",
          "[Removed Lines]",
          "861:         continue;",
          "864:       continue;",
          "865:     if (LocaleCompare(keyword,\"/>\") == 0)",
          "",
          "[Added Lines]",
          "861:         continue;",
          "864:       continue;",
          "865:     if (LocaleCompare(keyword,\"/>\") == 0)",
          "",
          "---------------"
        ],
        "MagickCore/threshold.c||MagickCore/threshold.c": [
          "File: MagickCore/threshold.c -> MagickCore/threshold.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1346:       break;",
          "1347:     token[p-threshold_map]=(*p);",
          "1348:     p++;",
          "1350:   token[p-threshold_map]='\\0';",
          "1352:   if (map == (ThresholdMap *) NULL)",
          "1353:     {",
          "1354:       (void) ThrowMagickException(exception,GetMagickModule(),OptionError,",
          "",
          "[Removed Lines]",
          "1349:   }",
          "1351:   map=GetThresholdMap(token,exception);",
          "",
          "[Added Lines]",
          "1349:   }",
          "1351:   map=GetThresholdMap(token,exception);",
          "",
          "---------------"
        ],
        "MagickCore/token.c||MagickCore/token.c": [
          "File: MagickCore/token.c -> MagickCore/token.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "141: }",
          "145: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",
          "146: %                                                                             %",
          "147: %                                                                             %",
          "148: %                                                                             %",
          "149: +   G e t M a g i c k T o k e n                                               %",
          "151: %                                                                             %",
          "152: %                                                                             %",
          "154: %",
          "155: %  GetMagickToken() gets a token from the token stream.  A token is defined as",
          "157: %  sequence delimited with quotes (.e.g \"Quote me\"), or a sequence enclosed in",
          "159: %  separator characters: ':', '=', ',', and ';'.",
          "160: %",
          "161: %  The format of the GetMagickToken method is:",
          "",
          "[Removed Lines]",
          "150: %                                                                             %",
          "153: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",
          "156: %  a sequence of characters delimited by whitespace (e.g. clip-path), a",
          "158: %  parenthesis (e.g. rgb(0,0,0)).  GetMagickToken() also recognizes these",
          "",
          "[Added Lines]",
          "150: %                                                                             %",
          "153: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",
          "156: %  a sequence of characters delimited by whitespace (e.g. clip-path), a",
          "158: %  parenthesis (e.g. rgb(0,0,0)).  GetNextToken() also recognizes these",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "169: %",
          "170: %    o end: point to the end of the token sequence.",
          "171: %",
          "173: %",
          "174: %    o token: copy the token to this buffer.",
          "175: %",
          "",
          "[Removed Lines]",
          "172: %    o extent: maximum extent of the token.",
          "",
          "[Added Lines]",
          "172: %    o extent: maximum extent of the token.",
          "",
          "---------------"
        ],
        "MagickCore/token.h||MagickCore/token.h": [
          "File: MagickCore/token.h -> MagickCore/token.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: extern MagickExport void",
          "45: #if defined(__cplusplus) || defined(c_plusplus)",
          "46: }",
          "",
          "[Removed Lines]",
          "43:   GetMagickToken(const char *,const char **,const size_t,char *);",
          "",
          "[Added Lines]",
          "43:   GetNextToken(const char *,const char **,const size_t,char *);",
          "",
          "---------------"
        ],
        "MagickCore/type.c||MagickCore/type.c": [
          "File: MagickCore/type.c -> MagickCore/type.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1112:   type_info=(TypeInfo *) NULL;",
          "1113:   token=AcquireString(xml);",
          "1114:   extent=strlen(token)+MagickPathExtent;",
          "1117:     Determine the Ghostscript font path.",
          "",
          "[Removed Lines]",
          "1115: #if defined(MAGICKCORE_WINDOWS_SUPPORT)",
          "",
          "[Added Lines]",
          "1115: #if defined(MAGICKCORE_WINDOWS_SUPPORT)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1122: #endif",
          "1123:   for (q=(char *) xml; *q != '\\0'; )",
          "1124:   {",
          "1126:       Interpret XML.",
          "1128:     GetMagickToken(q,&q,extent,token);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1131:     (void) CopyMagickString(keyword,token,MagickPathExtent);",
          "1132:     if (LocaleNCompare(keyword,\"<!DOCTYPE\",9) == 0)",
          "1133:       {",
          "1135:           Doctype element.",
          "1137:         while ((LocaleNCompare(q,\"]>\",2) != 0) && (*q != '\\0'))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1142:       {",
          "1144:           Comment element.",
          "1146:         while ((LocaleNCompare(q,\"->\",2) != 0) && (*q != '\\0'))",
          "1147:           GetMagickToken(q,&q,extent,token);",
          "1149:       }",
          "1150:     if (LocaleCompare(keyword,\"<include\") == 0)",
          "1151:       {",
          "",
          "[Removed Lines]",
          "1148:         continue;",
          "",
          "[Added Lines]",
          "1148:         continue;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1207:         (void) ResetMagickMemory(type_info,0,sizeof(*type_info));",
          "1208:         type_info->path=ConstantString(filename);",
          "1209:         type_info->signature=MagickCoreSignature;",
          "1211:       }",
          "1212:     if (type_info == (TypeInfo *) NULL)",
          "1215:       {",
          "1216:         status=AddValueToSplayTree(type_cache,type_info->name,type_info);",
          "1217:         if (status == MagickFalse)",
          "",
          "[Removed Lines]",
          "1210:         continue;",
          "1213:       continue;",
          "1214:     if (LocaleCompare(keyword,\"/>\") == 0)",
          "",
          "[Added Lines]",
          "1210:         continue;",
          "1213:       continue;",
          "1214:     if (LocaleCompare(keyword,\"/>\") == 0)",
          "",
          "---------------"
        ],
        "MagickWand/convert.c||MagickWand/convert.c": [
          "File: MagickWand/convert.c -> MagickWand/convert.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2210:               op;",
          "2212:             i++;",
          "2214:               ThrowConvertException(OptionError,\"MissingArgument\",option);",
          "2215:             GetMagickToken(argv[i],(const char **) NULL,MagickPathExtent,token);",
          "2216:             op=ParseCommandOption(MagickMorphologyOptions,MagickFalse,token);",
          "",
          "[Removed Lines]",
          "2213:             if (i == (ssize_t) argc)",
          "",
          "[Added Lines]",
          "2213:             if (i == (ssize_t) argc)",
          "",
          "---------------"
        ],
        "MagickWand/drawing-wand.c||MagickWand/drawing-wand.c": [
          "File: MagickWand/drawing-wand.c -> MagickWand/drawing-wand.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6379:   child=GetXMLTreeChild(xml_info,\"decorate\");",
          "6380:   if (child != (XMLTreeInfo *) NULL)",
          "6381:     {",
          "6383:       if (value != (const char *) NULL)",
          "6385:           MagickDecorateOptions,MagickFalse,value);",
          "6386:     }",
          "6388:   if (child != (XMLTreeInfo *) NULL)",
          "6390:   child=GetXMLTreeChild(xml_info,\"fill\");",
          "6391:   if (child != (XMLTreeInfo *) NULL)",
          "6392:     {",
          "",
          "[Removed Lines]",
          "6382:       value=GetXMLTreeContent(child);",
          "6384:         CurrentContext->decorate=(DecorationType) ParseCommandOption(",
          "6387:   child=GetXMLTreeChild(xml_info,\"encoding\");",
          "6389:     (void) CloneString(&CurrentContext->encoding,GetXMLTreeContent(child));",
          "",
          "[Added Lines]",
          "6382:       value=GetXMLTreeContent(child);",
          "6384:         CurrentContext->decorate=(DecorationType) ParseCommandOption(",
          "6387:   child=GetXMLTreeChild(xml_info,\"encoding\");",
          "6389:     (void) CloneString(&CurrentContext->encoding,GetXMLTreeContent(child));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6395:         (void) QueryColorCompliance(value,AllCompliance,&CurrentContext->fill,",
          "6396:           wand->exception);",
          "6397:     }",
          "6399:   if (child != (XMLTreeInfo *) NULL)",
          "6401:       value=GetXMLTreeContent(child);",
          "6402:       if (value != (const char *) NULL)",
          "6403:         CurrentContext->fill.alpha=(double) ClampToQuantum(QuantumRange*",
          "",
          "[Removed Lines]",
          "6398:   child=GetXMLTreeChild(xml_info,\"fill-opacity\");",
          "6400:     {",
          "",
          "[Added Lines]",
          "6398:   child=GetXMLTreeChild(xml_info,\"fill-opacity\");",
          "6400:     {",
          "",
          "---------------"
        ],
        "MagickWand/mogrify.c||MagickWand/mogrify.c": [
          "File: MagickWand/mogrify.c -> MagickWand/mogrify.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "491:     Read string, to determine number of arguments needed,",
          "493:   p=arguments;",
          "494:   x=0;",
          "495:   while( *p != '\\0' )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "536:     return( (Image *) NULL);",
          "537:   }",
          "538:   (void) ResetMagickMemory(sparse_arguments,0,number_arguments*",
          "540:   p=arguments;",
          "541:   x=0;",
          "542:   while( *p != '\\0' && x < number_arguments ) {",
          "",
          "[Removed Lines]",
          "539:     sizeof(*sparse_arguments));",
          "",
          "[Added Lines]",
          "539:     sizeof(*sparse_arguments));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "547:       (void) ThrowMagickException(exception,GetMagickModule(),",
          "548:             OptionError, \"InvalidArgument\", \"'%s': %s\", \"sparse-color\",",
          "549:             \"Color found, instead of X-coord\");",
          "551:       break;",
          "552:     }",
          "553:     sparse_arguments[x++]=StringToDouble(token,(char **) NULL);",
          "",
          "[Removed Lines]",
          "550:       error = MagickTrue;",
          "",
          "[Added Lines]",
          "550:       error = MagickTrue;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "567:     if ( (color_from_image ) {",
          "571:     else",
          "572: #endif",
          "573:     {",
          "",
          "[Removed Lines]",
          "570:     }",
          "",
          "[Added Lines]",
          "570:     }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "590:             (image->alpha_trait != UndefinedPixelTrait))",
          "591:           sparse_arguments[x++] = QuantumScale*color.alpha;",
          "592:       }",
          "596:         if ((GetPixelRedTraits(image) & UpdatePixelTrait) != 0)",
          "",
          "[Removed Lines]",
          "593:       else {",
          "",
          "[Added Lines]",
          "593:       else {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "598:           while ( token[0] == ',' ) GetMagickToken(p,&p,MagickPathExtent,token);",
          "599:           if ( token[0] == '\\0' || isalpha((int)token[0]) || token[0] == '#' )",
          "600:             break;",
          "603:         }",
          "604:         if ((GetPixelGreenTraits(image) & UpdatePixelTrait) != 0)",
          "",
          "[Removed Lines]",
          "601:           sparse_arguments[x++]=StringToDouble(token,(char **) NULL);",
          "",
          "[Added Lines]",
          "601:           sparse_arguments[x++]=StringToDouble(token,(char **) NULL);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "606:           while ( token[0] == ',' ) GetMagickToken(p,&p,MagickPathExtent,token);",
          "607:           if ( token[0] == '\\0' || isalpha((int)token[0]) || token[0] == '#' )",
          "608:             break;",
          "611:         }",
          "612:         if ((GetPixelBlueTraits(image) & UpdatePixelTrait) != 0)",
          "",
          "[Removed Lines]",
          "609:           sparse_arguments[x++]=StringToDouble(token,(char **) NULL);",
          "",
          "[Added Lines]",
          "609:           sparse_arguments[x++]=StringToDouble(token,(char **) NULL);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "615:           if ( token[0] == '\\0' || isalpha((int)token[0]) || token[0] == '#' )",
          "616:             break;",
          "617:           sparse_arguments[x++]=StringToDouble(token,(char **) NULL);",
          "619:         }",
          "620:         if (((GetPixelBlackTraits(image) & UpdatePixelTrait) != 0) &&",
          "621:             (image->colorspace == CMYKColorspace))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "624:           if ( token[0] == '\\0' || isalpha((int)token[0]) || token[0] == '#' )",
          "625:             break;",
          "626:           sparse_arguments[x++]=StringToDouble(token,(char **) NULL);",
          "628:         }",
          "629:         if (((GetPixelAlphaTraits(image) & UpdatePixelTrait) != 0) &&",
          "630:             (image->alpha_trait != UndefinedPixelTrait))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1404:               }",
          "1405:             args=InterpretImageProperties(mogrify_info,*image,argv[i+2],",
          "1406:               exception);",
          "1408:               break;",
          "1410:             for (x=0; *p != '\\0'; x++)",
          "1411:             {",
          "1412:               GetMagickToken(p,&p,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "1407:             if (args == (char *) NULL)",
          "1409:             p=(char *) args;",
          "",
          "[Added Lines]",
          "1407:             if (args == (char *) NULL)",
          "1409:             p=(char *) args;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1419:             if (arguments == (double *) NULL)",
          "1420:               ThrowWandFatalException(ResourceLimitFatalError,",
          "1421:                 \"MemoryAllocationFailed\",(*image)->filename);",
          "1423:               sizeof(*arguments));",
          "1425:             for (x=0; (x < (ssize_t) number_arguments) && (*p != '\\0'); x++)",
          "1426:             {",
          "1427:               GetMagickToken(p,&p,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "1422:             (void) ResetMagickMemory(arguments,0,number_arguments*",
          "1424:             p=(char *) args;",
          "",
          "[Added Lines]",
          "1422:             (void) ResetMagickMemory(arguments,0,number_arguments*",
          "1424:             p=(char *) args;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1707:               MagickFalse,argv[i+1]);",
          "1708:             arguments=InterpretImageProperties(mogrify_info,*image,argv[i+2],",
          "1709:               exception);",
          "1711:               break;",
          "1713:             for (x=0; *p != '\\0'; x++)",
          "1714:             {",
          "1715:               GetMagickToken(p,&p,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "1710:             if (arguments == (char *) NULL)",
          "1712:             p=(char *) arguments;",
          "",
          "[Added Lines]",
          "1710:             if (arguments == (char *) NULL)",
          "1712:             p=(char *) arguments;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1722:             if (parameters == (double *) NULL)",
          "1723:               ThrowWandFatalException(ResourceLimitFatalError,",
          "1724:                 \"MemoryAllocationFailed\",(*image)->filename);",
          "1726:               sizeof(*parameters));",
          "1728:             for (x=0; (x < (ssize_t) number_parameters) && (*p != '\\0'); x++)",
          "1729:             {",
          "1730:               GetMagickToken(p,&p,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "1725:             (void) ResetMagickMemory(parameters,0,number_parameters*",
          "1727:             p=(char *) arguments;",
          "",
          "[Added Lines]",
          "1725:             (void) ResetMagickMemory(parameters,0,number_parameters*",
          "1727:             p=(char *) arguments;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2000:             if ((isalpha((int) *token) != 0) || ((*token == '#') != 0))",
          "2001:               (void) QueryColorCompliance(token,AllCompliance,",
          "2003:             else",
          "2004:               (void) QueryColorCompliance(\"#000000\",AllCompliance,",
          "2005:                 &black_point,exception);",
          "2006:             if (isalpha((int) token[0]) || (token[0] == '#'))",
          "2007:               GetMagickToken(p,&p,MagickPathExtent,token);",
          "2008:             if (*token == '\\0')",
          "2010:             else",
          "2011:               {",
          "",
          "[Removed Lines]",
          "2002:                 &black_point,exception);",
          "",
          "[Added Lines]",
          "2002:                 &black_point,exception);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2237:             ssize_t",
          "2238:               iterations;",
          "2241:               Morphological Image Operation",
          "2243:             (void) SyncImageSettings(mogrify_info,*image,exception);",
          "2245:             GetMagickToken(p,&p,MagickPathExtent,token);",
          "2247:               MagickMorphologyOptions,MagickFalse,token);",
          "2248:             iterations=1L;",
          "2249:             GetMagickToken(p,&p,MagickPathExtent,token);",
          "",
          "[Removed Lines]",
          "2244:             p=argv[i+1];",
          "2246:             method=(MorphologyMethod) ParseCommandOption(",
          "",
          "[Added Lines]",
          "2244:             p=argv[i+1];",
          "2246:             method=(MorphologyMethod) ParseCommandOption(",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "5458:             KernelInfo",
          "5462:               op;",
          "5464:             i++;",
          "",
          "[Removed Lines]",
          "5461:             ssize_t",
          "",
          "[Added Lines]",
          "5461:             ssize_t",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "8549:               Polynomial image.",
          "8552:             args=InterpretImageProperties(mogrify_info,*images,argv[i+1],",
          "8554:             if (args == (char *) NULL)",
          "8555:               break;",
          "8556:             p=(char *) args;",
          "",
          "[Removed Lines]",
          "8551:             (void) SyncImageSettings(mogrify_info,*images,exception);",
          "8553:               exception);",
          "",
          "[Added Lines]",
          "8551:             (void) SyncImageSettings(mogrify_info,*images,exception);",
          "8553:               exception);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "8563:             number_arguments=(size_t) x;",
          "8564:             arguments=(double *) AcquireQuantumMemory(number_arguments,",
          "8565:               sizeof(*arguments));",
          "8567:               ThrowWandFatalException(ResourceLimitFatalError,",
          "8569:             (void) ResetMagickMemory(arguments,0,number_arguments*",
          "8570:               sizeof(*arguments));",
          "8571:             p=(char *) args;",
          "",
          "[Removed Lines]",
          "8566:             if (arguments == (double *) NULL)",
          "8568:                 \"MemoryAllocationFailed\",(*images)->filename);",
          "",
          "[Added Lines]",
          "8566:             if (arguments == (double *) NULL)",
          "8568:                 \"MemoryAllocationFailed\",(*images)->filename);",
          "",
          "---------------"
        ],
        "MagickWand/operation.c||MagickWand/operation.c": [
          "File: MagickWand/operation.c -> MagickWand/operation.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "234:     Read string, to determine number of arguments needed,",
          "237:   x=0;",
          "238:   while( *p != '\\0' )",
          "239:   {",
          "",
          "[Removed Lines]",
          "236:   p=arguments;",
          "",
          "[Added Lines]",
          "236:   p=arguments;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "265:   }",
          "266:   (void) ResetMagickMemory(sparse_arguments,0,number_arguments*",
          "267:     sizeof(*sparse_arguments));",
          "269:   x=0;",
          "270:   while( *p != '\\0' && x < number_arguments ) {",
          "",
          "[Removed Lines]",
          "268:   p=arguments;",
          "",
          "[Added Lines]",
          "268:   p=arguments;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "276:             OptionError, \"InvalidArgument\", \"'%s': %s\", \"sparse-color\",",
          "277:             \"Color found, instead of X-coord\");",
          "278:       error=MagickTrue;",
          "280:     }",
          "281:     sparse_arguments[x++]=StringToDouble(token,(char **) NULL);",
          "",
          "[Removed Lines]",
          "279:       break;",
          "",
          "[Added Lines]",
          "279:       break;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "287:             OptionError, \"InvalidArgument\", \"'%s': %s\", \"sparse-color\",",
          "288:             \"Color found, instead of Y-coord\");",
          "289:       error=MagickTrue;",
          "291:     }",
          "292:     sparse_arguments[x++]=StringToDouble(token,(char **) NULL);",
          "",
          "[Removed Lines]",
          "290:       break;",
          "",
          "[Added Lines]",
          "290:       break;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "311:         sparse_arguments[x++] = QuantumScale*color.alpha;",
          "312:     }",
          "313:     else {",
          "316:       if ((GetPixelRedTraits(image) & UpdatePixelTrait) != 0)",
          "317:         {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "319:         if ( token[0] == '\\0' || isalpha((int)token[0]) || token[0] == '#' )",
          "320:           break;",
          "321:         sparse_arguments[x++]=StringToDouble(token,(char **) NULL);",
          "323:       }",
          "324:       if ((GetPixelGreenTraits(image) & UpdatePixelTrait) != 0)",
          "325:         {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "327:         if ( token[0] == '\\0' || isalpha((int)token[0]) || token[0] == '#' )",
          "328:           break;",
          "329:         sparse_arguments[x++]=StringToDouble(token,(char **) NULL);",
          "331:       }",
          "332:       if ((GetPixelBlueTraits(image) & UpdatePixelTrait) != 0)",
          "333:         {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "336:           break;",
          "337:         sparse_arguments[x++]=StringToDouble(token,(char **) NULL);",
          "340:       if (((GetPixelBlackTraits(image) & UpdatePixelTrait) != 0) &&",
          "341:           (image->colorspace == CMYKColorspace))",
          "342:         {",
          "",
          "[Removed Lines]",
          "339:       }",
          "",
          "[Added Lines]",
          "339:       }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "345:           break;",
          "346:         sparse_arguments[x++]=StringToDouble(token,(char **) NULL);",
          "349:       if (((GetPixelAlphaTraits(image) & UpdatePixelTrait) != 0) &&",
          "350:           image->alpha_trait != UndefinedPixelTrait)",
          "351:         {",
          "",
          "[Removed Lines]",
          "348:       }",
          "",
          "[Added Lines]",
          "348:       }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2653:           p=(const char *) arg1;",
          "2655:           if ((isalpha((int) *token) != 0) || ((*token == '#') != 0))",
          "2657:                       &black_point,_exception);",
          "2658:           else",
          "2659:             (void) QueryColorCompliance(\"#000000\",AllCompliance,",
          "2660:                       &black_point,_exception);",
          "2661:           if (isalpha((int) token[0]) || (token[0] == '#'))",
          "2662:             GetMagickToken(p,&p,MagickPathExtent,token);",
          "2663:           if (*token == '\\0')",
          "2665:           else",
          "",
          "[Removed Lines]",
          "2656:             (void) QueryColorCompliance(token,AllCompliance,",
          "",
          "[Added Lines]",
          "2656:             (void) QueryColorCompliance(token,AllCompliance,",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2820:           KernelInfo",
          "2823:           ssize_t",
          "2824:             iterations;",
          "2826:           p=arg1;",
          "2828:           parse=ParseCommandOption(MagickMorphologyOptions,MagickFalse,token);",
          "2830:             CLIWandExceptArgBreak(OptionError,\"UnrecognizedFunction\",option,",
          "2831:               arg1);",
          "2832:           iterations=1L;",
          "",
          "[Removed Lines]",
          "2827:           GetMagickToken(p,&p,MagickPathExtent,token);",
          "2829:           if ( parse < 0 )",
          "",
          "[Added Lines]",
          "2827:           GetNextToken(p,&p,MagickPathExtent,token);",
          "2829:           if ( parse < 0 )",
          "",
          "---------------"
        ],
        "coders/svg.c||coders/svg.c": [
          "File: coders/svg.c -> coders/svg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "300:   double",
          "301:     value;",
          "303:   (void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\",string);",
          "304:   assert(string != (const char *) NULL);",
          "305:   p=(const char *) string;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "323:             return(0.0);",
          "324:           return(svg_info->view_box.height*value/100.0);",
          "325:         }",
          "327:       beta=value-svg_info->view_box.height;",
          "328:       return(hypot(alpha,beta)/sqrt(2.0)/100.0);",
          "329:     }",
          "",
          "[Removed Lines]",
          "326:       alpha=value-svg_info->view_box.width;",
          "",
          "[Added Lines]",
          "326:       alpha=value-svg_info->view_box.width;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1318:                 {",
          "1319:                   case 'M':",
          "1320:                   case 'm':",
          "1322:                     if (LocaleCompare(keyword,\"matrix\") == 0)",
          "1324:                         p=(const char *) value;",
          "1326:                         affine.sx=StringToDouble(value,(char **) NULL);",
          "1328:                         if (*token == ',')",
          "1330:                         affine.rx=StringToDouble(token,(char **) NULL);",
          "1332:                         if (*token == ',')",
          "1334:                         affine.ry=StringToDouble(token,(char **) NULL);",
          "1336:                         if (*token == ',')",
          "1338:                         affine.sy=StringToDouble(token,(char **) NULL);",
          "1340:                         if (*token == ',')",
          "1342:                         affine.tx=StringToDouble(token,(char **) NULL);",
          "1343:                         GetMagickToken(p,&p,MagickPathExtent,token);",
          "1344:                         if (*token == ',')",
          "",
          "[Removed Lines]",
          "1321:                   {",
          "1323:                       {",
          "1325:                         GetMagickToken(p,&p,MagickPathExtent,token);",
          "1327:                         GetMagickToken(p,&p,MagickPathExtent,token);",
          "1329:                           GetMagickToken(p,&p,MagickPathExtent,token);",
          "1331:                         GetMagickToken(p,&p,MagickPathExtent,token);",
          "1333:                           GetMagickToken(p,&p,MagickPathExtent,token);",
          "1335:                         GetMagickToken(p,&p,MagickPathExtent,token);",
          "1337:                           GetMagickToken(p,&p,MagickPathExtent,token);",
          "1339:                         GetMagickToken(p,&p,MagickPathExtent,token);",
          "1341:                           GetMagickToken(p,&p,MagickPathExtent,token);",
          "",
          "[Added Lines]",
          "1321:                   {",
          "1323:                       {",
          "1325:                         GetNextToken(p,&p,MagickPathExtent,token);",
          "1327:                         GetNextToken(p,&p,MagickPathExtent,token);",
          "1329:                           GetNextToken(p,&p,MagickPathExtent,token);",
          "1331:                         GetNextToken(p,&p,MagickPathExtent,token);",
          "1333:                           GetNextToken(p,&p,MagickPathExtent,token);",
          "1335:                         GetNextToken(p,&p,MagickPathExtent,token);",
          "1337:                           GetNextToken(p,&p,MagickPathExtent,token);",
          "1339:                         GetNextToken(p,&p,MagickPathExtent,token);",
          "1341:                           GetNextToken(p,&p,MagickPathExtent,token);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1937:                 {",
          "1938:                   case 'M':",
          "1939:                   case 'm':",
          "1941:                     if (LocaleCompare(keyword,\"matrix\") == 0)",
          "1943:                         p=(const char *) value;",
          "1945:                         affine.sx=StringToDouble(value,(char **) NULL);",
          "1947:                         if (*token == ',')",
          "1949:                         affine.rx=StringToDouble(token,(char **) NULL);",
          "1951:                         if (*token == ',')",
          "1953:                         affine.ry=StringToDouble(token,(char **) NULL);",
          "1955:                         if (*token == ',')",
          "1957:                         affine.sy=StringToDouble(token,(char **) NULL);",
          "1959:                         if (*token == ',')",
          "1961:                         affine.tx=StringToDouble(token,(char **) NULL);",
          "1962:                         GetMagickToken(p,&p,MagickPathExtent,token);",
          "1963:                         if (*token == ',')",
          "",
          "[Removed Lines]",
          "1940:                   {",
          "1942:                       {",
          "1944:                         GetMagickToken(p,&p,MagickPathExtent,token);",
          "1946:                         GetMagickToken(p,&p,MagickPathExtent,token);",
          "1948:                           GetMagickToken(p,&p,MagickPathExtent,token);",
          "1950:                         GetMagickToken(p,&p,MagickPathExtent,token);",
          "1952:                           GetMagickToken(p,&p,MagickPathExtent,token);",
          "1954:                         GetMagickToken(p,&p,MagickPathExtent,token);",
          "1956:                           GetMagickToken(p,&p,MagickPathExtent,token);",
          "1958:                         GetMagickToken(p,&p,MagickPathExtent,token);",
          "1960:                           GetMagickToken(p,&p,MagickPathExtent,token);",
          "",
          "[Added Lines]",
          "1940:                   {",
          "1942:                       {",
          "1944:                         GetNextToken(p,&p,MagickPathExtent,token);",
          "1946:                         GetNextToken(p,&p,MagickPathExtent,token);",
          "1948:                           GetNextToken(p,&p,MagickPathExtent,token);",
          "1950:                         GetNextToken(p,&p,MagickPathExtent,token);",
          "1952:                           GetNextToken(p,&p,MagickPathExtent,token);",
          "1954:                         GetNextToken(p,&p,MagickPathExtent,token);",
          "1956:                           GetNextToken(p,&p,MagickPathExtent,token);",
          "1958:                         GetNextToken(p,&p,MagickPathExtent,token);",
          "1960:                           GetNextToken(p,&p,MagickPathExtent,token);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1974:                       {",
          "1975:                         double",
          "1976:                           angle,",
          "1978:                           y;",
          "1980:                         p=(const char *) value;",
          "1982:                         angle=StringToDouble(value,(char **) NULL);",
          "1984:                         if (*token == ',')",
          "1986:                         x=StringToDouble(token,(char **) NULL);",
          "1987:                         GetMagickToken(p,&p,MagickPathExtent,token);",
          "1988:                         if (*token == ',')",
          "",
          "[Removed Lines]",
          "1977:                           x,",
          "1981:                         GetMagickToken(p,&p,MagickPathExtent,token);",
          "1983:                         GetMagickToken(p,&p,MagickPathExtent,token);",
          "1985:                           GetMagickToken(p,&p,MagickPathExtent,token);",
          "",
          "[Added Lines]",
          "1977:                           x,",
          "1981:                         GetNextToken(p,&p,MagickPathExtent,token);",
          "1983:                         GetNextToken(p,&p,MagickPathExtent,token);",
          "1985:                           GetNextToken(p,&p,MagickPathExtent,token);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2084:             {",
          "2085:               (void) CloneString(&svg_info->vertices,value);",
          "2086:               break;",
          "2088:           if (LocaleCompare(keyword,\"viewBox\") == 0)",
          "2090:               p=(const char *) value;",
          "2092:               svg_info->view_box.x=StringToDouble(token,(char **) NULL);",
          "2094:               if (*token == ',')",
          "2096:               svg_info->view_box.y=StringToDouble(token,(char **) NULL);",
          "2097:               GetMagickToken(p,&p,MagickPathExtent,token);",
          "2098:               if (*token == ',')",
          "2099:                 GetMagickToken(p,&p,MagickPathExtent,token);",
          "2101:                 (char **) NULL);",
          "2103:                 svg_info->bounds.width=svg_info->view_box.width;",
          "2104:               GetMagickToken(p,&p,MagickPathExtent,token);",
          "2105:               if (*token == ',')",
          "",
          "[Removed Lines]",
          "2087:             }",
          "2089:             {",
          "2091:               GetMagickToken(p,&p,MagickPathExtent,token);",
          "2093:               GetMagickToken(p,&p,MagickPathExtent,token);",
          "2095:                 GetMagickToken(p,&p,MagickPathExtent,token);",
          "2100:               svg_info->view_box.width=StringToDouble(token,",
          "2102:               if (svg_info->bounds.width == 0)",
          "",
          "[Added Lines]",
          "2087:             }",
          "2089:             {",
          "2091:               GetNextToken(p,&p,MagickPathExtent,token);",
          "2093:               GetNextToken(p,&p,MagickPathExtent,token);",
          "2095:                 GetNextToken(p,&p,MagickPathExtent,token);",
          "2100:               svg_info->view_box.width=StringToDouble(token,",
          "2102:               if (svg_info->bounds.width == 0)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3696:   token=AcquireString(value);",
          "3697:   extent=strlen(token)+MagickPathExtent;",
          "3698:   active=MagickFalse;",
          "3700:   status=MagickTrue;",
          "3701:   for (q=(const char *) value; *q != '\\0'; )",
          "3702:   {",
          "",
          "[Removed Lines]",
          "3699:   n=0;",
          "",
          "[Added Lines]",
          "3699:   n=0;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "3732:     primitive_type=UndefinedPrimitive;",
          "3733:     switch (*keyword)",
          "3734:     {",
          "3736:         break;",
          "3738:       case 'A':",
          "3740:         if (LocaleCompare(\"affine\",keyword) == 0)",
          "3742:             GetMagickToken(q,&q,extent,token);",
          "3744:             GetMagickToken(q,&q,extent,token);",
          "3746:               GetMagickToken(q,&q,extent,token);",
          "3748:             GetMagickToken(q,&q,extent,token);",
          "3750:               GetMagickToken(q,&q,extent,token);",
          "3752:             GetMagickToken(q,&q,extent,token);",
          "3754:               GetMagickToken(q,&q,extent,token);",
          "3756:             GetMagickToken(q,&q,extent,token);",
          "3757:             if (*token == ',')",
          "3758:               GetMagickToken(q,&q,extent,token);",
          "",
          "[Removed Lines]",
          "3735:       case ';':",
          "3737:       case 'a':",
          "3739:       {",
          "3741:           {",
          "3743:             affine.sx=StringToDouble(token,(char **) NULL);",
          "3745:             if (*token == ',')",
          "3747:             affine.rx=StringToDouble(token,(char **) NULL);",
          "3749:             if (*token == ',')",
          "3751:             affine.ry=StringToDouble(token,(char **) NULL);",
          "3753:             if (*token == ',')",
          "3755:             affine.sy=StringToDouble(token,(char **) NULL);",
          "",
          "[Added Lines]",
          "3735:       case ';':",
          "3737:       case 'a':",
          "3739:       {",
          "3741:           {",
          "3743:             affine.sx=StringToDouble(token,(char **) NULL);",
          "3745:             if (*token == ',')",
          "3747:             affine.rx=StringToDouble(token,(char **) NULL);",
          "3749:             if (*token == ',')",
          "3751:             affine.ry=StringToDouble(token,(char **) NULL);",
          "3753:             if (*token == ',')",
          "3755:             affine.sy=StringToDouble(token,(char **) NULL);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3763:             affine.ty=StringToDouble(token,(char **) NULL);",
          "3764:             break;",
          "3765:           }",
          "3767:           {",
          "3768:             primitive_type=AlphaPrimitive;",
          "3769:             break;",
          "",
          "[Removed Lines]",
          "3766:         if (LocaleCompare(\"alpha\",keyword) == 0)",
          "",
          "[Added Lines]",
          "3766:         if (LocaleCompare(\"alpha\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3792:             break;",
          "3793:           }",
          "3794:         status=MagickFalse;",
          "3796:       }",
          "3797:       case 'c':",
          "3798:       case 'C':",
          "",
          "[Removed Lines]",
          "3795:         break;",
          "",
          "[Added Lines]",
          "3795:         break;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "3800:         if (LocaleCompare(\"clip-path\",keyword) == 0)",
          "3801:           {",
          "3802:             GetMagickToken(q,&q,extent,token);",
          "3804:               \"clip-path:url(#%s);\",token);",
          "3805:             (void) WriteBlobString(image,message);",
          "3806:             break;",
          "",
          "[Removed Lines]",
          "3803:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "3803:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "3808:         if (LocaleCompare(\"clip-rule\",keyword) == 0)",
          "3809:           {",
          "3810:             GetMagickToken(q,&q,extent,token);",
          "3812:               \"clip-rule:%s;\",token);",
          "3813:             (void) WriteBlobString(image,message);",
          "3814:             break;",
          "",
          "[Removed Lines]",
          "3811:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "3811:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "3832:             break;",
          "3833:           }",
          "3834:         status=MagickFalse;",
          "3836:       }",
          "3837:       case 'd':",
          "3838:       case 'D':",
          "",
          "[Removed Lines]",
          "3835:         break;",
          "",
          "[Added Lines]",
          "3835:         break;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "3857:             break;",
          "3858:           }",
          "3859:         status=MagickFalse;",
          "3861:       }",
          "3862:       case 'f':",
          "3863:       case 'F':",
          "",
          "[Removed Lines]",
          "3860:         break;",
          "",
          "[Added Lines]",
          "3860:         break;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "3865:         if (LocaleCompare(\"fill\",keyword) == 0)",
          "3866:           {",
          "3867:             GetMagickToken(q,&q,extent,token);",
          "3869:               token);",
          "3870:             (void) WriteBlobString(image,message);",
          "3871:             break;",
          "",
          "[Removed Lines]",
          "3868:             (void) FormatLocaleString(message,MagickPathExtent,\"fill:%s;\",",
          "",
          "[Added Lines]",
          "3868:             (void) FormatLocaleString(message,MagickPathExtent,\"fill:%s;\",",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "3873:         if (LocaleCompare(\"fill-rule\",keyword) == 0)",
          "3874:           {",
          "3875:             GetMagickToken(q,&q,extent,token);",
          "3877:               \"fill-rule:%s;\",token);",
          "3878:             (void) WriteBlobString(image,message);",
          "3879:             break;",
          "",
          "[Removed Lines]",
          "3876:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "3876:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "3881:         if (LocaleCompare(\"fill-alpha\",keyword) == 0)",
          "3882:           {",
          "3883:             GetMagickToken(q,&q,extent,token);",
          "3885:               \"fill-alpha:%s;\",token);",
          "3886:             (void) WriteBlobString(image,message);",
          "3887:             break;",
          "",
          "[Removed Lines]",
          "3884:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "3884:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "3889:         if (LocaleCompare(\"font-family\",keyword) == 0)",
          "3890:           {",
          "3891:             GetMagickToken(q,&q,extent,token);",
          "3893:               \"font-family:%s;\",token);",
          "3894:             (void) WriteBlobString(image,message);",
          "3895:             break;",
          "",
          "[Removed Lines]",
          "3892:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "3892:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "3897:         if (LocaleCompare(\"font-stretch\",keyword) == 0)",
          "3898:           {",
          "3899:             GetMagickToken(q,&q,extent,token);",
          "3901:               \"font-stretch:%s;\",token);",
          "3902:             (void) WriteBlobString(image,message);",
          "3903:             break;",
          "",
          "[Removed Lines]",
          "3900:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "3900:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "3905:         if (LocaleCompare(\"font-style\",keyword) == 0)",
          "3906:           {",
          "3907:             GetMagickToken(q,&q,extent,token);",
          "3909:               \"font-style:%s;\",token);",
          "3910:             (void) WriteBlobString(image,message);",
          "3911:             break;",
          "",
          "[Removed Lines]",
          "3908:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "3908:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "3913:         if (LocaleCompare(\"font-size\",keyword) == 0)",
          "3914:           {",
          "3915:             GetMagickToken(q,&q,extent,token);",
          "3917:               \"font-size:%s;\",token);",
          "3918:             (void) WriteBlobString(image,message);",
          "3919:             break;",
          "",
          "[Removed Lines]",
          "3916:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "3916:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "3927:             break;",
          "3928:           }",
          "3929:         status=MagickFalse;",
          "3931:       }",
          "3932:       case 'g':",
          "3933:       case 'G':",
          "3934:       {",
          "3936:           {",
          "3937:             GetMagickToken(q,&q,extent,token);",
          "3938:             break;",
          "",
          "[Removed Lines]",
          "3930:         break;",
          "3935:         if (LocaleCompare(\"gradient-units\",keyword) == 0)",
          "",
          "[Added Lines]",
          "3930:         break;",
          "3935:         if (LocaleCompare(\"gradient-units\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "3940:         if (LocaleCompare(\"text-align\",keyword) == 0)",
          "3941:           {",
          "3942:             GetMagickToken(q,&q,extent,token);",
          "3944:               \"text-align %s \",token);",
          "3945:             (void) WriteBlobString(image,message);",
          "3946:             break;",
          "",
          "[Removed Lines]",
          "3943:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "3943:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "3954:             break;",
          "3955:           }",
          "3956:         status=MagickFalse;",
          "3958:       }",
          "3959:       case 'i':",
          "3960:       case 'I':",
          "",
          "[Removed Lines]",
          "3957:         break;",
          "",
          "[Added Lines]",
          "3957:         break;",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "3977:             break;",
          "3978:           }",
          "3979:         status=MagickFalse;",
          "3981:       }",
          "3982:       case 'o':",
          "3983:       case 'O':",
          "",
          "[Removed Lines]",
          "3980:         break;",
          "",
          "[Added Lines]",
          "3980:         break;",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "4011:             primitive_type=PolylinePrimitive;",
          "4012:             break;",
          "4013:           }",
          "4015:           {",
          "4016:             primitive_type=PolygonPrimitive;",
          "4017:             break;",
          "",
          "[Removed Lines]",
          "4014:         if (LocaleCompare(\"polygon\",keyword) == 0)",
          "",
          "[Added Lines]",
          "4014:         if (LocaleCompare(\"polygon\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "4048:               {",
          "4049:                 (void) WriteBlobString(image,\"</pattern>\\n\");",
          "4050:                 break;",
          "4052:             if (LocaleCompare(\"defs\",token) == 0)",
          "4053:             (void) WriteBlobString(image,\"</g>\\n\");",
          "4055:           }",
          "4056:         if (LocaleCompare(\"push\",keyword) == 0)",
          "4057:           {",
          "",
          "[Removed Lines]",
          "4051:               }",
          "4054:             break;",
          "",
          "[Added Lines]",
          "4051:               }",
          "4054:             break;",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "4064:                 (void) WriteBlobString(image,message);",
          "4065:                 break;",
          "4066:               }",
          "4068:               {",
          "4070:                 break;",
          "4072:             if (LocaleCompare(\"gradient\",token) == 0)",
          "4073:               {",
          "4075:                 (void) CopyMagickString(name,token,MagickPathExtent);",
          "4077:                 (void) CopyMagickString(type,token,MagickPathExtent);",
          "4078:                 GetMagickToken(q,&q,extent,token);",
          "4080:                 svg_info.element.cx=StringToDouble(token,(char **) NULL);",
          "4082:                 if (*token == ',')",
          "4083:                   GetMagickToken(q,&q,extent,token);",
          "4084:                 svg_info.segment.y1=StringToDouble(token,(char **) NULL);",
          "4086:                 GetMagickToken(q,&q,extent,token);",
          "4088:                   GetMagickToken(q,&q,extent,token);",
          "4089:                 svg_info.segment.x2=StringToDouble(token,(char **) NULL);",
          "4090:                 svg_info.element.major=StringToDouble(token,",
          "",
          "[Removed Lines]",
          "4067:             if (LocaleCompare(\"defs\",token) == 0)",
          "4069:                 (void) WriteBlobString(image,\"<defs>\\n\");",
          "4071:               }",
          "4074:                 GetMagickToken(q,&q,extent,token);",
          "4076:                 GetMagickToken(q,&q,extent,token);",
          "4079:                 svg_info.segment.x1=StringToDouble(token,(char **) NULL);",
          "4081:                 GetMagickToken(q,&q,extent,token);",
          "4085:                 svg_info.element.cy=StringToDouble(token,(char **) NULL);",
          "4087:                 if (*token == ',')",
          "",
          "[Added Lines]",
          "4067:             if (LocaleCompare(\"defs\",token) == 0)",
          "4069:                 (void) WriteBlobString(image,\"<defs>\\n\");",
          "4071:               }",
          "4074:                 GetNextToken(q,&q,extent,token);",
          "4076:                 GetNextToken(q,&q,extent,token);",
          "4079:                 svg_info.segment.x1=StringToDouble(token,(char **) NULL);",
          "4081:                 GetNextToken(q,&q,extent,token);",
          "4085:                 svg_info.element.cy=StringToDouble(token,(char **) NULL);",
          "4087:                 if (*token == ',')",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "4094:                   GetMagickToken(q,&q,extent,token);",
          "4095:                 svg_info.segment.y2=StringToDouble(token,(char **) NULL);",
          "4096:                 svg_info.element.minor=StringToDouble(token,",
          "4098:                 (void) FormatLocaleString(message,MagickPathExtent,",
          "4100:                   \"y2=\\\"%g\\\">\\n\",type,name,svg_info.segment.x1,",
          "4101:                   svg_info.segment.y1,svg_info.segment.x2,svg_info.segment.y2);",
          "4102:                 if (LocaleCompare(type,\"radial\") == 0)",
          "",
          "[Removed Lines]",
          "4097:                   (char **) NULL);",
          "4099:                   \"<%sGradient id=\\\"%s\\\" x1=\\\"%g\\\" y1=\\\"%g\\\" x2=\\\"%g\\\" \"",
          "",
          "[Added Lines]",
          "4097:                   (char **) NULL);",
          "4099:                   \"<%sGradient id=\\\"%s\\\" x1=\\\"%g\\\" y1=\\\"%g\\\" x2=\\\"%g\\\" \"",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "4122:                 if (active)",
          "4123:                   {",
          "4124:                     AffineToTransform(image,&affine);",
          "4126:                   }",
          "4128:                 active=MagickTrue;",
          "4130:             if (LocaleCompare(\"pattern\",token) == 0)",
          "4132:                 GetMagickToken(q,&q,extent,token);",
          "4134:                 GetMagickToken(q,&q,extent,token);",
          "4136:                 GetMagickToken(q,&q,extent,token);",
          "4137:                 if (*token == ',')",
          "4139:                 svg_info.bounds.y=StringToDouble(token,(char **) NULL);",
          "4141:                 if (*token == ',')",
          "4142:                   GetMagickToken(q,&q,extent,token);",
          "4143:                 svg_info.bounds.width=StringToDouble(token,",
          "",
          "[Removed Lines]",
          "4125:                     active=MagickFalse;",
          "4127:                 (void) WriteBlobString(image,\"<g style=\\\"\");",
          "4129:               }",
          "4131:               {",
          "4133:                 (void) CopyMagickString(name,token,MagickPathExtent);",
          "4135:                 svg_info.bounds.x=StringToDouble(token,(char **) NULL);",
          "4138:                   GetMagickToken(q,&q,extent,token);",
          "4140:                 GetMagickToken(q,&q,extent,token);",
          "",
          "[Added Lines]",
          "4125:                     active=MagickFalse;",
          "4127:                 (void) WriteBlobString(image,\"<g style=\\\"\");",
          "4129:               }",
          "4131:               {",
          "4133:                 (void) CopyMagickString(name,token,MagickPathExtent);",
          "4135:                 svg_info.bounds.x=StringToDouble(token,(char **) NULL);",
          "4138:                   GetNextToken(q,&q,extent,token);",
          "4140:                 GetNextToken(q,&q,extent,token);",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "4168:             primitive_type=RectanglePrimitive;",
          "4169:             break;",
          "4170:           }",
          "4172:           {",
          "4173:             primitive_type=RoundRectanglePrimitive;",
          "4174:             break;",
          "",
          "[Removed Lines]",
          "4171:         if (LocaleCompare(\"roundRectangle\",keyword) == 0)",
          "",
          "[Added Lines]",
          "4171:         if (LocaleCompare(\"roundRectangle\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "4182:             break;",
          "4183:           }",
          "4184:         status=MagickFalse;",
          "4186:       }",
          "4188:       case 'S':",
          "4190:         if (LocaleCompare(\"scale\",keyword) == 0)",
          "4191:           {",
          "4192:             GetMagickToken(q,&q,extent,token);",
          "4193:             affine.sx=StringToDouble(token,(char **) NULL);",
          "4194:             GetMagickToken(q,&q,extent,token);",
          "4196:               GetMagickToken(q,&q,extent,token);",
          "4197:             affine.sy=StringToDouble(token,(char **) NULL);",
          "4198:             break;",
          "",
          "[Removed Lines]",
          "4185:         break;",
          "4187:       case 's':",
          "4189:       {",
          "4195:             if (*token == ',')",
          "",
          "[Added Lines]",
          "4185:         break;",
          "4187:       case 's':",
          "4189:       {",
          "4195:             if (*token == ',')",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "4200:         if (LocaleCompare(\"skewX\",keyword) == 0)",
          "4201:           {",
          "4202:             GetMagickToken(q,&q,extent,token);",
          "4204:               token);",
          "4205:             (void) WriteBlobString(image,message);",
          "4206:             break;",
          "",
          "[Removed Lines]",
          "4203:             (void) FormatLocaleString(message,MagickPathExtent,\"skewX(%s) \",",
          "",
          "[Added Lines]",
          "4203:             (void) FormatLocaleString(message,MagickPathExtent,\"skewX(%s) \",",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "4211:             (void) FormatLocaleString(message,MagickPathExtent,\"skewY(%s) \",",
          "4212:               token);",
          "4213:             (void) WriteBlobString(image,message);",
          "4215:           }",
          "4217:           {",
          "4218:             char",
          "4219:               color[MagickPathExtent];",
          "",
          "[Removed Lines]",
          "4214:             break;",
          "4216:         if (LocaleCompare(\"stop-color\",keyword) == 0)",
          "",
          "[Added Lines]",
          "4214:             break;",
          "4216:         if (LocaleCompare(\"stop-color\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "4221:             GetMagickToken(q,&q,extent,token);",
          "4222:             (void) CopyMagickString(color,token,MagickPathExtent);",
          "4223:             GetMagickToken(q,&q,extent,token);",
          "4225:               \"  <stop offset=\\\"%s\\\" stop-color=\\\"%s\\\" />\\n\",token,color);",
          "4226:             (void) WriteBlobString(image,message);",
          "4227:             break;",
          "",
          "[Removed Lines]",
          "4224:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "4224:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "4229:         if (LocaleCompare(\"stroke\",keyword) == 0)",
          "4230:           {",
          "4231:             GetMagickToken(q,&q,extent,token);",
          "4233:               token);",
          "4234:             (void) WriteBlobString(image,message);",
          "4235:             break;",
          "",
          "[Removed Lines]",
          "4232:             (void) FormatLocaleString(message,MagickPathExtent,\"stroke:%s;\",",
          "",
          "[Added Lines]",
          "4232:             (void) FormatLocaleString(message,MagickPathExtent,\"stroke:%s;\",",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "4243:             break;",
          "4244:           }",
          "4245:         if (LocaleCompare(\"stroke-dasharray\",keyword) == 0)",
          "4247:             if (IsPoint(q))",
          "4249:                 ssize_t",
          "4250:                   k;",
          "4253:                 GetMagickToken(p,&p,extent,token);",
          "4254:                 for (k=0; IsPoint(token); k++)",
          "4255:                   GetMagickToken(p,&p,extent,token);",
          "",
          "[Removed Lines]",
          "4246:           {",
          "4248:               {",
          "4252:                 p=q;",
          "",
          "[Added Lines]",
          "4246:           {",
          "4248:               {",
          "4252:                 p=q;",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "4257:                 for (j=0; j < k; j++)",
          "4258:                 {",
          "4259:                   GetMagickToken(q,&q,extent,token);",
          "4261:                     token);",
          "4262:                   (void) WriteBlobString(image,message);",
          "4263:                 }",
          "",
          "[Removed Lines]",
          "4260:                   (void) FormatLocaleString(message,MagickPathExtent,\"%s \",",
          "",
          "[Added Lines]",
          "4260:                   (void) FormatLocaleString(message,MagickPathExtent,\"%s \",",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "4265:                 break;",
          "4266:               }",
          "4267:             GetMagickToken(q,&q,extent,token);",
          "4269:               \"stroke-dasharray:%s;\",token);",
          "4270:             (void) WriteBlobString(image,message);",
          "4271:             break;",
          "",
          "[Removed Lines]",
          "4268:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "4268:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "4273:         if (LocaleCompare(\"stroke-dashoffset\",keyword) == 0)",
          "4274:           {",
          "4275:             GetMagickToken(q,&q,extent,token);",
          "4277:               \"stroke-dashoffset:%s;\",token);",
          "4278:             (void) WriteBlobString(image,message);",
          "4279:             break;",
          "",
          "[Removed Lines]",
          "4276:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "4276:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "4281:         if (LocaleCompare(\"stroke-linecap\",keyword) == 0)",
          "4282:           {",
          "4283:             GetMagickToken(q,&q,extent,token);",
          "4285:               \"stroke-linecap:%s;\",token);",
          "4286:             (void) WriteBlobString(image,message);",
          "4287:             break;",
          "",
          "[Removed Lines]",
          "4284:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "4284:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "4289:         if (LocaleCompare(\"stroke-linejoin\",keyword) == 0)",
          "4290:           {",
          "4291:             GetMagickToken(q,&q,extent,token);",
          "4293:               \"stroke-linejoin:%s;\",token);",
          "4294:             (void) WriteBlobString(image,message);",
          "4295:             break;",
          "",
          "[Removed Lines]",
          "4292:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "4292:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "4297:         if (LocaleCompare(\"stroke-miterlimit\",keyword) == 0)",
          "4298:           {",
          "4299:             GetMagickToken(q,&q,extent,token);",
          "4301:               \"stroke-miterlimit:%s;\",token);",
          "4302:             (void) WriteBlobString(image,message);",
          "4303:             break;",
          "",
          "[Removed Lines]",
          "4300:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "4300:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "4305:         if (LocaleCompare(\"stroke-opacity\",keyword) == 0)",
          "4306:           {",
          "4307:             GetMagickToken(q,&q,extent,token);",
          "4309:               \"stroke-opacity:%s;\",token);",
          "4310:             (void) WriteBlobString(image,message);",
          "4311:             break;",
          "",
          "[Removed Lines]",
          "4308:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "[Added Lines]",
          "4308:             (void) FormatLocaleString(message,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "4324:       case 't':",
          "4325:       case 'T':",
          "4326:       {",
          "4328:           {",
          "4329:             primitive_type=TextPrimitive;",
          "4330:             break;",
          "",
          "[Removed Lines]",
          "4327:         if (LocaleCompare(\"text\",keyword) == 0)",
          "",
          "[Added Lines]",
          "4327:         if (LocaleCompare(\"text\",keyword) == 0)",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "4337:             (void) WriteBlobString(image,message);",
          "4338:             break;",
          "4339:           }",
          "4341:           {",
          "4343:             break;",
          "4345:         if (LocaleCompare(\"translate\",keyword) == 0)",
          "4346:           {",
          "4347:             GetMagickToken(q,&q,extent,token);",
          "",
          "[Removed Lines]",
          "4340:         if (LocaleCompare(\"tspan\",keyword) == 0)",
          "4342:             primitive_type=TextPrimitive;",
          "4344:           }",
          "",
          "[Added Lines]",
          "4340:         if (LocaleCompare(\"tspan\",keyword) == 0)",
          "4342:             primitive_type=TextPrimitive;",
          "4344:           }",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "4353:             break;",
          "4354:           }",
          "4355:         status=MagickFalse;",
          "4357:       }",
          "4360:       {",
          "4363:             GetMagickToken(q,&q,extent,token);",
          "4366:             GetMagickToken(q,&q,extent,token);",
          "4367:             if (*token == ',')",
          "4368:               GetMagickToken(q,&q,extent,token);",
          "",
          "[Removed Lines]",
          "4356:         break;",
          "4358:       case 'v':",
          "4359:       case 'V':",
          "4361:         if (LocaleCompare(\"viewbox\",keyword) == 0)",
          "4362:           {",
          "4364:             if (*token == ',')",
          "4365:               GetMagickToken(q,&q,extent,token);",
          "",
          "[Added Lines]",
          "4356:         break;",
          "4358:       case 'v':",
          "4359:       case 'V':",
          "4361:         if (LocaleCompare(\"viewbox\",keyword) == 0)",
          "4362:           {",
          "4364:             if (*token == ',')",
          "4365:               GetNextToken(q,&q,extent,token);",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "4391:     i=0;",
          "4392:     j=0;",
          "4394:     {",
          "4396:         Define points.",
          "4398:       if (IsPoint(q) == MagickFalse)",
          "4400:       GetMagickToken(q,&q,extent,token);",
          "4402:       GetMagickToken(q,&q,extent,token);",
          "4403:       if (*token == ',')",
          "4404:         GetMagickToken(q,&q,extent,token);",
          "",
          "[Removed Lines]",
          "4393:     for (x=0; *q != '\\0'; x++)",
          "4399:         break;",
          "4401:       point.x=StringToDouble(token,(char **) NULL);",
          "",
          "[Added Lines]",
          "4393:     for (x=0; *q != '\\0'; x++)",
          "4399:         break;",
          "4401:       point.x=StringToDouble(token,(char **) NULL);",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "4595:             status=MagickFalse;",
          "4596:             break;",
          "4597:           }",
          "4599:       }",
          "4600:       case PathPrimitive:",
          "4601:       {",
          "",
          "[Removed Lines]",
          "4598:         break;",
          "",
          "[Added Lines]",
          "4598:         break;",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "4626:         break;",
          "4627:       }",
          "4628:       case AlphaPrimitive:",
          "4630:       {",
          "4631:         if (primitive_info[j].coordinates != 1)",
          "4632:           {",
          "",
          "[Removed Lines]",
          "4629:       case ColorPrimitive:",
          "",
          "[Added Lines]",
          "4629:       case ColorPrimitive:",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "4649:       case TextPrimitive:",
          "4650:       {",
          "4651:         register char",
          "4654:         if (primitive_info[j].coordinates != 1)",
          "4655:           {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "4672:         (void) WriteBlobString(image,\"</text>\\n\");",
          "4673:         break;",
          "4674:       }",
          "4676:       {",
          "4677:         if (primitive_info[j].coordinates != 2)",
          "4678:           {",
          "",
          "[Removed Lines]",
          "4675:       case ImagePrimitive:",
          "",
          "[Added Lines]",
          "4675:       case ImagePrimitive:",
          "",
          "---------------"
        ]
      }
    }
  ]
}