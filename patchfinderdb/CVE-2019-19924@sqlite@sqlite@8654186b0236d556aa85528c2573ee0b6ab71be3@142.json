{
  "cve_id": "CVE-2019-19924",
  "cve_desc": "SQLite 3.30.1 mishandles certain parser-tree rewriting, related to expr.c, vdbeaux.c, and window.c. This is caused by incorrect sqlite3WindowRewrite() error handling.",
  "repo": "sqlite/sqlite",
  "patch_hash": "8654186b0236d556aa85528c2573ee0b6ab71be3",
  "patch_info": {
    "commit_hash": "8654186b0236d556aa85528c2573ee0b6ab71be3",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/8654186b0236d556aa85528c2573ee0b6ab71be3",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/expr.c",
      "src/vdbeaux.c",
      "src/window.c"
    ],
    "message": "When an error occurs while rewriting the parser tree for window functions in the sqlite3WindowRewrite() routine, make sure that pParse->nErr is set, and make sure that this shuts down any subsequent code generation that might depend on the transformations that were implemented.  This fixes a problem discovered by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: e2bddcd4c55ba3cbe0130332679ff4b048630d0ced9a8899982edb5a3569ba7f",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/expr.c||src/expr.c",
      "src/vdbeaux.c||src/vdbeaux.c",
      "src/window.c||src/window.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 4417c5bf0aabb34ed174f01afd981c924ae965a42128719d8d6735536631d12f",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/expr.c||src/expr.c": [
      "File: src/expr.c -> src/expr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "376:   int addr;",
      "377:   CollSeq *p4;",
      "379:   if( isCommuted ){",
      "380:     p4 = sqlite3BinaryCompareCollSeq(pParse, pRight, pLeft);",
      "381:   }else{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "379:   if( pParse->nErr ) return 0;",
      "",
      "---------------"
    ],
    "src/vdbeaux.c||src/vdbeaux.c": [
      "File: src/vdbeaux.c -> src/vdbeaux.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1304: static void vdbeVComment(Vdbe *p, const char *zFormat, va_list ap){",
      "1305:   assert( p->nOp>0 || p->aOp==0 );",
      "1307:   if( p->nOp ){",
      "1308:     assert( p->aOp );",
      "1309:     sqlite3DbFree(p->db, p->aOp[p->nOp-1].zComment);",
      "",
      "[Removed Lines]",
      "1306:   assert( p->aOp==0 || p->aOp[p->nOp-1].zComment==0 || p->db->mallocFailed );",
      "",
      "[Added Lines]",
      "1306:   assert( p->aOp==0 || p->aOp[p->nOp-1].zComment==0 || p->db->mallocFailed",
      "1307:           || p->pParse->nErr>0 );",
      "",
      "---------------"
    ],
    "src/window.c||src/window.c": [
      "File: src/window.c -> src/window.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "935:     pTab = sqlite3DbMallocZero(db, sizeof(Table));",
      "936:     if( pTab==0 ){",
      "938:     }",
      "940:     p->pSrc = 0;",
      "",
      "[Removed Lines]",
      "937:       return SQLITE_NOMEM;",
      "",
      "[Added Lines]",
      "937:       return sqlite3ErrorToParser(db, SQLITE_NOMEM);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1039:     sqlite3DbFree(db, pTab);",
      "1040:   }",
      "1042:   return rc;",
      "1043: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1042:   if( rc && pParse->nErr==0 ){",
      "1043:     assert( pParse->db->mallocFailed );",
      "1044:     return sqlite3ErrorToParser(pParse->db, SQLITE_NOMEM);",
      "1045:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "166bc383e274b40662991db0612498b038a0cbab",
      "candidate_info": {
        "commit_hash": "166bc383e274b40662991db0612498b038a0cbab",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/166bc383e274b40662991db0612498b038a0cbab",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c"
        ],
        "message": "Minor changes to help ensure the pointer returned by sqlite3VdbeGetOp() is not used after it becomes invalid.\n\nFossilOrigin-Name: 346bdd49fb93aa58e8bd14250974d8c0c32cc7e8317c8b12da1fa44db10d8a3a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c422afb507dc875751e6a72e4ba5f4f0793097c0de4533c1600311f689e76ed7",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c"
        ]
      }
    },
    {
      "candidate_hash": "bc4974c81bd4cda9900185a655b577f19a894e03",
      "candidate_info": {
        "commit_hash": "bc4974c81bd4cda9900185a655b577f19a894e03",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/bc4974c81bd4cda9900185a655b577f19a894e03",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/fkey.c"
        ],
        "message": "The SET DEFAULT and SET NULL conflict resolution actions for foreign key constraints should cause an error when they appear on a generated column.\n\nFossilOrigin-Name: b47513d2b32b61ba42c1e9b59287d28f6fee231e6c65de2a3aa19effbbaf1e7f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/fkey.c||src/fkey.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 0a2eb949f8a759e5745d9468c8183d3c0b4b30e0fa2a14b3062620eb9e1d5c1d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/fkey.c||src/fkey.c": [
          "File: src/fkey.c -> src/fkey.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1269:             sqlite3ExprAlloc(db, TK_ID, &tNew, 0),",
          "1270:             sqlite3ExprAlloc(db, TK_ID, &tToCol, 0));",
          "1271:         }else if( action==OE_SetDflt ){",
          "1273:           if( pDflt ){",
          "1274:             pNew = sqlite3ExprDup(db, pDflt, 0);",
          "1275:           }else{",
          "",
          "[Removed Lines]",
          "1272:           Expr *pDflt = pFKey->pFrom->aCol[iFromCol].pDflt;",
          "",
          "[Added Lines]",
          "1272:           Column *pCol = pFKey->pFrom->aCol + iFromCol;",
          "1273:           Expr *pDflt;",
          "1274:           if( pCol->colFlags & COLFLAG_GENERATED ){",
          "1275:             testcase( pCol->colFlags & COLFLAG_VIRTUAL );",
          "1276:             testcase( pCol->colFlags & COLFLAG_STORED );",
          "1277:             pDflt = 0;",
          "1278:           }else{",
          "1279:             pDflt = pCol->pDflt;",
          "1280:           }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a1698993e6c84613e873929693f7886e151f30d9",
      "candidate_info": {
        "commit_hash": "a1698993e6c84613e873929693f7886e151f30d9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a1698993e6c84613e873929693f7886e151f30d9",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c"
        ],
        "message": "Futher improvements to LEFT JOIN strength reduction.\n\nFossilOrigin-Name: 8a39167bd2d46496f7484cfec371e4bad22da882209b01da9459c4ed5877da25",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/expr.c||src/expr.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/expr.c||src/expr.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 548082dfab5d9484279ccc11cd2833ac131b54b7481372b576d7c28bbb3294ea",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5234:   if( p==0 ) return 0;",
          "5235:   if( p->op==TK_NOTNULL ){",
          "5236:     p = p->pLeft;",
          "5240:   }",
          "5241:   w.xExprCallback = impliesNotNullRow;",
          "5242:   w.xSelectCallback = 0;",
          "",
          "[Removed Lines]",
          "5237:   }else if( p->op==TK_AND ){",
          "5238:     if( sqlite3ExprImpliesNonNullRow(p->pLeft, iTab) ) return 1;",
          "5239:     p = p->pRight;",
          "",
          "[Added Lines]",
          "5237:   }else{",
          "5238:     while( p->op==TK_AND ){",
          "5239:       if( sqlite3ExprImpliesNonNullRow(p->pLeft, iTab) ) return 1;",
          "5240:       p = p->pRight;",
          "5241:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "55700bcd7255b15861fec4a0c4ab24eda965420d",
      "candidate_info": {
        "commit_hash": "55700bcd7255b15861fec4a0c4ab24eda965420d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/55700bcd7255b15861fec4a0c4ab24eda965420d",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/func.c"
        ],
        "message": "Remove code in the round() SQL function that became unreachable due to the optimization of check-in [e95138f5f4febde5]\n\nFossilOrigin-Name: b141bae3f6d16c0ebb59dac9b02086a4370839e71ade34004f647b09b1083d1d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/func.c||src/func.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 67a68af5578f08d2be2e48cf4fd12a6cf35a09c47d259deda81950f7ee1f02f7",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/func.c||src/func.c": [
          "File: src/func.c -> src/func.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "397:       sqlite3_result_error_nomem(context);",
          "398:       return;",
          "399:     }",
          "404:     sqlite3_free(zBuf);",
          "405:   }",
          "406:   sqlite3_result_double(context, r);",
          "",
          "[Removed Lines]",
          "400:     if( sqlite3AtoF(zBuf, &r, sqlite3Strlen30(zBuf), SQLITE_UTF8)<=0 ){",
          "401:       assert( sqlite3_strglob(\"*Inf\", zBuf)==0 );",
          "402:       r = zBuf[0]=='-' ? -HUGE_VAL : +HUGE_VAL;",
          "403:     }",
          "",
          "[Added Lines]",
          "400:     sqlite3AtoF(zBuf, &r, sqlite3Strlen30(zBuf), SQLITE_UTF8);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "725b1cfc53d19b4de268df83f3d83c0d96a51810",
      "candidate_info": {
        "commit_hash": "725b1cfc53d19b4de268df83f3d83c0d96a51810",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/725b1cfc53d19b4de268df83f3d83c0d96a51810",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c",
          "test/window6.test"
        ],
        "message": "Fix a problem with window frames that use \"BETWEEN <start> AND 0 PRECEDING\".\n\nFossilOrigin-Name: 7927b6b023502e990d23f30251b5b0918b547726b863bfb6747dcd7f1f71d19a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c",
          "test/window6.test||test/window6.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/window.c||src/window.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/window.c||src/window.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a063f7c426d1ac066bf05cc03288f49b1c92e06a8cb2bc271cce9bd3022a74ea",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2013:   return pRet;",
          "2014: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2024: static int windowExprGtZero(Parse *pParse, Expr *pExpr){",
          "2025:   int ret = 0;",
          "2026:   sqlite3 *db = pParse->db;",
          "2027:   sqlite3_value *pVal = 0;",
          "2028:   sqlite3ValueFromExpr(db, pExpr, db->enc, SQLITE_AFF_NUMERIC, &pVal);",
          "2029:   if( pVal && sqlite3_value_int(pVal)>0 ){",
          "2030:     ret = 1;",
          "2031:   }",
          "2032:   sqlite3ValueFree(pVal);",
          "2033:   return ret;",
          "2034: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2408:   switch( pMWin->eStart ){",
          "2418:       }",
          "2419:       break;",
          "2421:     case TK_UNBOUNDED:",
          "2422:       if( windowCacheFrame(pMWin)==0 ){",
          "2423:         if( pMWin->eEnd==TK_PRECEDING ){",
          "2425:         }else{",
          "2426:           s.eDelete = WINDOW_RETURN_ROW;",
          "2427:         }",
          "",
          "[Removed Lines]",
          "2409:     case TK_FOLLOWING: {",
          "2410:       if( pMWin->eType!=TK_RANGE ){",
          "2411:         sqlite3 *db = pParse->db;",
          "2412:         sqlite3_value *pVal = 0;",
          "2413:         sqlite3ValueFromExpr(db,pMWin->pStart,db->enc,SQLITE_AFF_NUMERIC,&pVal);",
          "2414:         if( pVal && sqlite3_value_int(pVal)>0 ){",
          "2415:           s.eDelete = WINDOW_RETURN_ROW;",
          "2416:         }",
          "2417:         sqlite3ValueFree(pVal);",
          "2420:     }",
          "2424:           s.eDelete = WINDOW_AGGSTEP;",
          "",
          "[Added Lines]",
          "2429:     case TK_FOLLOWING:",
          "2430:       if( pMWin->eType!=TK_RANGE && windowExprGtZero(pParse, pMWin->pStart) ){",
          "2431:         s.eDelete = WINDOW_RETURN_ROW;",
          "2437:           if( pMWin->eType!=TK_RANGE && windowExprGtZero(pParse, pMWin->pEnd) ){",
          "2438:             s.eDelete = WINDOW_AGGSTEP;",
          "2439:           }",
          "",
          "---------------"
        ],
        "test/window6.test||test/window6.test": [
          "File: test/window6.test -> test/window6.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "337:   25 {} 90    30 thirty 150   30 thirty 150   50 {} 200",
          "338: }",
          "340: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "340: do_execsql_test 11.3.1 {",
          "341:   SELECT a, sum(a) OVER win FROM t1",
          "342:   WINDOW win AS (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)",
          "343: } {",
          "344:   10 10 15 25 20 45 20 65 25 90 30 120 30 150 50 200",
          "345: }",
          "346: do_execsql_test 11.3.2 {",
          "347:   SELECT a, sum(a) OVER win FROM t1",
          "348:   WINDOW win AS (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 0 FOLLOWING)",
          "349: } {",
          "350:   10 10 15 25 20 45 20 65 25 90 30 120 30 150 50 200",
          "351: }",
          "352: do_execsql_test 11.3.3 {",
          "353:   SELECT a, sum(a) OVER win FROM t1",
          "354:   WINDOW win AS (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING)",
          "355: } {",
          "356:   10 10 15 25 20 45 20 65 25 90 30 120 30 150 50 200",
          "357: }",
          "359: do_execsql_test 11.4.1 {",
          "360:   SELECT y, group_concat(y, '.') OVER win FROM t3",
          "361:   WINDOW win AS (",
          "362:     ORDER BY y RANGE BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING",
          "363:   );",
          "364: } {",
          "365:   fifteen fifteen",
          "366:   ten     fifteen.ten",
          "367:   thirty  fifteen.ten.thirty",
          "368: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}