{
  "cve_id": "CVE-2019-20807",
  "cve_desc": "In Vim before 8.1.0881, users can circumvent the rvim restricted mode and execute arbitrary OS commands via scripting interfaces (e.g., Python, Ruby, or Lua).",
  "repo": "vim/vim",
  "patch_hash": "8c62a08faf89663e5633dc5036cd8695c80f1075",
  "patch_info": {
    "commit_hash": "8c62a08faf89663e5633dc5036cd8695c80f1075",
    "repo": "vim/vim",
    "commit_url": "https://github.com/vim/vim/commit/8c62a08faf89663e5633dc5036cd8695c80f1075",
    "files": [
      "runtime/doc/starting.txt",
      "src/evalfunc.c",
      "src/ex_cmds.c",
      "src/ex_docmd.c",
      "src/if_perl.xs",
      "src/testdir/Make_all.mak",
      "src/testdir/test_restricted.vim",
      "src/version.c"
    ],
    "message": "patch 8.1.0881: can execute shell commands in rvim through interfaces\n\nProblem:    Can execute shell commands in rvim through interfaces.\nSolution:   Disable using interfaces in restricted mode. Allow for writing\n            file with writefile(), histadd() and a few others.",
    "before_after_code_files": [
      "src/evalfunc.c||src/evalfunc.c",
      "src/ex_cmds.c||src/ex_cmds.c",
      "src/ex_docmd.c||src/ex_docmd.c",
      "src/if_perl.xs||src/if_perl.xs",
      "src/testdir/Make_all.mak||src/testdir/Make_all.mak",
      "src/testdir/test_restricted.vim||src/testdir/test_restricted.vim",
      "src/version.c||src/version.c"
    ]
  },
  "patch_diff": {
    "src/evalfunc.c||src/evalfunc.c": [
      "File: src/evalfunc.c -> src/evalfunc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "6817: #endif",
      "6819:     rettv->vval.v_number = FALSE;",
      "6821:  return;",
      "6822: #ifdef FEAT_CMDHIST",
      "",
      "[Removed Lines]",
      "6820:     if (check_restricted() || check_secure())",
      "",
      "[Added Lines]",
      "6820:     if (check_secure())",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "7898:     char_u *str;",
      "7899:     char_u buf[NUMBUFLEN];",
      "7901:     str = tv_get_string_buf(&argvars[0], buf);",
      "7902:     do_luaeval(str, argvars + 1, rettv);",
      "7903: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7901:     if (check_restricted() || check_secure())",
      "7902:  return;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "8644:     char_u *str;",
      "8645:     char_u buf[NUMBUFLEN];",
      "8647:     str = tv_get_string_buf(&argvars[0], buf);",
      "8648:     do_mzeval(str, rettv);",
      "8649: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8650:     if (check_restricted() || check_secure())",
      "8651:  return;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "8932:     char_u *str;",
      "8933:     char_u buf[NUMBUFLEN];",
      "8935:     if (p_pyx == 0)",
      "8936:  p_pyx = 3;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8940:     if (check_restricted() || check_secure())",
      "8941:  return;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "8950:     char_u *str;",
      "8951:     char_u buf[NUMBUFLEN];",
      "8953:     if (p_pyx == 0)",
      "8954:  p_pyx = 2;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8961:     if (check_restricted() || check_secure())",
      "8962:  return;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "8965:     static void",
      "8966: f_pyxeval(typval_T *argvars, typval_T *rettv)",
      "8967: {",
      "8968: # if defined(FEAT_PYTHON) && defined(FEAT_PYTHON3)",
      "8969:     init_pyxversion();",
      "8970:     if (p_pyx == 2)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8979:     if (check_restricted() || check_secure())",
      "8980:  return;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "10819:     typval_T *varp;",
      "10820:     char_u nbuf[NUMBUFLEN];",
      "10823:  return;",
      "10825:     varname = tv_get_string_chk(&argvars[1]);",
      "",
      "[Removed Lines]",
      "10822:     if (check_restricted() || check_secure())",
      "",
      "[Added Lines]",
      "10836:     if (check_secure())",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "11342:     rettv->vval.v_number = 0;",
      "11345:  return;",
      "11347:     tp = find_tabpage((int)tv_get_number_chk(&argvars[0], NULL));",
      "",
      "[Removed Lines]",
      "11344:     if (check_restricted() || check_secure())",
      "",
      "[Added Lines]",
      "11358:     if (check_secure())",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "14714:     blob_T *blob = NULL;",
      "14716:     rettv->vval.v_number = -1;",
      "14718:  return;",
      "14720:     if (argvars[0].v_type == VAR_LIST)",
      "",
      "[Removed Lines]",
      "14717:     if (check_restricted() || check_secure())",
      "",
      "[Added Lines]",
      "14731:     if (check_secure())",
      "",
      "---------------"
    ],
    "src/ex_cmds.c||src/ex_cmds.c": [
      "File: src/ex_cmds.c -> src/ex_cmds.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4775: {",
      "4776:     if (restricted)",
      "4777:     {",
      "4779:  return TRUE;",
      "4780:     }",
      "4781:     return FALSE;",
      "",
      "[Removed Lines]",
      "4778:  emsg(_(\"E145: Shell commands not allowed in rvim\"));",
      "",
      "[Added Lines]",
      "4778:  emsg(_(\"E145: Shell commands and some functionality not allowed in rvim\"));",
      "",
      "---------------"
    ],
    "src/ex_docmd.c||src/ex_docmd.c": [
      "File: src/ex_docmd.c -> src/ex_docmd.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2007: #ifdef HAVE_SANDBOX",
      "2008:  if (sandbox != 0 && !(ea.argt & SBOXOK))",
      "2009:  {",
      "2011:      errormsg = _(e_sandbox);",
      "2012:      goto doend;",
      "2013:  }",
      "2014: #endif",
      "2015:  if (!curbuf->b_p_ma && (ea.argt & MODIFY))",
      "2016:  {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2015:  if (restricted != 0 && (ea.argt & RESTRICT))",
      "2016:  {",
      "2017:      errormsg = _(\"E981: Command not allowed in rvim\");",
      "2018:      goto doend;",
      "2019:  }",
      "",
      "---------------"
    ],
    "src/if_perl.xs||src/if_perl.xs": [
      "File: src/if_perl.xs -> src/if_perl.xs",
      "--- Hunk 1 ---",
      "[Context before]",
      "971: #ifdef DYNAMIC_PERL",
      "972: static char *e_noperl = N_(\"Sorry, this command is disabled: the Perl library could not be loaded.\");",
      "973: #endif",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "974: static char *e_perlsandbox = N_(\"E299: Perl evaluation forbidden in sandbox without the Safe module\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1019:  vim_free(script);",
      "1020:     }",
      "1024:     {",
      "1025:  safe = perl_get_sv(\"VIM::safe\", FALSE);",
      "1027:  if (safe == NULL || !SvTRUE(safe))",
      "1029:  else",
      "1030: # endif",
      "1031:  {",
      "",
      "[Removed Lines]",
      "1022: #ifdef HAVE_SANDBOX",
      "1023:     if (sandbox)",
      "1028:      emsg(_(\"E299: Perl evaluation forbidden in sandbox without the Safe module\"));",
      "",
      "[Added Lines]",
      "1023:     if (sandbox || secure)",
      "1028:      emsg(_(e_perlsandbox));",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1037:  }",
      "1038:     }",
      "1039:     else",
      "1041:  perl_eval_sv(sv, G_DISCARD | G_NOARGS);",
      "1043:     SvREFCNT_dec(sv);",
      "",
      "[Removed Lines]",
      "1040: #endif",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1298:  ENTER;",
      "1299:  SAVETMPS;",
      "1303:  {",
      "1304:      safe = get_sv(\"VIM::safe\", FALSE);",
      "1306:      if (safe == NULL || !SvTRUE(safe))",
      "1308:      else",
      "1309: # endif",
      "1310:      {",
      "",
      "[Removed Lines]",
      "1301: #ifdef HAVE_SANDBOX",
      "1302:  if (sandbox)",
      "1307:   emsg(_(\"E299: Perl evaluation forbidden in sandbox without the Safe module\"));",
      "",
      "[Added Lines]",
      "1300:  if (sandbox || secure)",
      "1305:   emsg(_(e_perlsandbox));",
      "",
      "---------------"
    ],
    "src/testdir/Make_all.mak||src/testdir/Make_all.mak": [
      "File: src/testdir/Make_all.mak -> src/testdir/Make_all.mak",
      "--- Hunk 1 ---",
      "[Context before]",
      "213:  test_regexp_utf8 \\",
      "214:  test_registers \\",
      "215:  test_reltime \\",
      "216:  test_retab \\",
      "217:  test_ruby \\",
      "218:  test_scriptnames \\",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:  test_restricted \\",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "375:  test_quotestar.res \\",
      "376:  test_regex_char_classes.res \\",
      "377:  test_registers.res \\",
      "378:  test_retab.res \\",
      "379:  test_ruby.res \\",
      "380:  test_scriptnames.res \\",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "379:  test_restricted.res \\",
      "",
      "---------------"
    ],
    "src/testdir/test_restricted.vim||src/testdir/test_restricted.vim": [
      "File: src/testdir/test_restricted.vim -> src/testdir/test_restricted.vim",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: \" Test for \"rvim\" or \"vim -Z\"",
      "3: source shared.vim",
      "5: func Test_restricted()",
      "6:   let cmd = GetVimCommand('Xrestricted')",
      "7:   if cmd == ''",
      "8:     return",
      "9:   endif",
      "11:   call writefile([",
      "12:  \\ \"silent !ls\",",
      "13:  \\ \"call writefile([v:errmsg], 'Xrestrout')\",",
      "14:  \\ \"qa!\",",
      "15:  \\ ], 'Xrestricted')",
      "16:   call system(cmd . ' -Z')",
      "17:   call assert_match('E145:', join(readfile('Xrestrout')))",
      "19:   call delete('Xrestricted')",
      "20:   call delete('Xrestrout')",
      "21: endfunc",
      "23: func Run_restricted_test(ex_cmd, error)",
      "24:   let cmd = GetVimCommand('Xrestricted')",
      "25:   if cmd == ''",
      "26:     return",
      "27:   endif",
      "29:   call writefile([",
      "30:  \\ a:ex_cmd,",
      "31:  \\ \"call writefile([v:errmsg], 'Xrestrout')\",",
      "32:  \\ \"qa!\",",
      "33:  \\ ], 'Xrestricted')",
      "34:   call system(cmd . ' -Z')",
      "35:   call assert_match(a:error, join(readfile('Xrestrout')))",
      "37:   call delete('Xrestricted')",
      "38:   call delete('Xrestrout')",
      "39: endfunc",
      "41: func Test_restricted_lua()",
      "42:   if !has('lua')",
      "43:     throw 'Skipped: Lua is not supported'",
      "44:   endif",
      "45:   call Run_restricted_test('lua print(\"Hello, Vim!\")', 'E981:')",
      "46:   call Run_restricted_test('luado return \"hello\"', 'E981:')",
      "47:   call Run_restricted_test('luafile somefile', 'E981:')",
      "48:   call Run_restricted_test('call luaeval(\"expression\")', 'E145:')",
      "49: endfunc",
      "51: func Test_restricted_mzscheme()",
      "52:   if !has('mzscheme')",
      "53:     throw 'Skipped: MzScheme is not supported'",
      "54:   endif",
      "55:   call Run_restricted_test('mzscheme statement', 'E981:')",
      "56:   call Run_restricted_test('mzfile somefile', 'E981:')",
      "57:   call Run_restricted_test('call mzeval(\"expression\")', 'E145:')",
      "58: endfunc",
      "60: func Test_restricted_perl()",
      "61:   if !has('perl')",
      "62:     throw 'Skipped: Perl is not supported'",
      "63:   endif",
      "64:   \" TODO: how to make Safe mode fail?",
      "65:   \" call Run_restricted_test('perl system(\"ls\")', 'E981:')",
      "66:   \" call Run_restricted_test('perldo system(\"hello\")', 'E981:')",
      "67:   \" call Run_restricted_test('perlfile somefile', 'E981:')",
      "68:   \" call Run_restricted_test('call perleval(\"system(\\\"ls\\\")\")', 'E145:')",
      "69: endfunc",
      "71: func Test_restricted_python()",
      "72:   if !has('python')",
      "73:     throw 'Skipped: Python is not supported'",
      "74:   endif",
      "75:   call Run_restricted_test('python print \"hello\"', 'E981:')",
      "76:   call Run_restricted_test('pydo return \"hello\"', 'E981:')",
      "77:   call Run_restricted_test('pyfile somefile', 'E981:')",
      "78:   call Run_restricted_test('call pyeval(\"expression\")', 'E145:')",
      "79: endfunc",
      "81: func Test_restricted_python3()",
      "82:   if !has('python3')",
      "83:     throw 'Skipped: Python3 is not supported'",
      "84:   endif",
      "85:   call Run_restricted_test('py3 print \"hello\"', 'E981:')",
      "86:   call Run_restricted_test('py3do return \"hello\"', 'E981:')",
      "87:   call Run_restricted_test('py3file somefile', 'E981:')",
      "88:   call Run_restricted_test('call py3eval(\"expression\")', 'E145:')",
      "89: endfunc",
      "91: func Test_restricted_ruby()",
      "92:   if !has('ruby')",
      "93:     throw 'Skipped: Ruby is not supported'",
      "94:   endif",
      "95:   call Run_restricted_test('ruby print \"Hello\"', 'E981:')",
      "96:   call Run_restricted_test('rubydo print \"Hello\"', 'E981:')",
      "97:   call Run_restricted_test('rubyfile somefile', 'E981:')",
      "98: endfunc",
      "100: func Test_restricted_tcl()",
      "101:   if !has('tcl')",
      "102:     throw 'Skipped: Tcl is not supported'",
      "103:   endif",
      "104:   call Run_restricted_test('tcl puts \"Hello\"', 'E981:')",
      "105:   call Run_restricted_test('tcldo puts \"Hello\"', 'E981:')",
      "106:   call Run_restricted_test('tclfile somefile', 'E981:')",
      "107: endfunc",
      "",
      "---------------"
    ],
    "src/version.c||src/version.c": [
      "File: src/version.c -> src/version.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "784: static int included_patches[] =",
      "787:     880,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "787:     881,",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8071cb2c646c9d38dcd4e3ccd377dce07705f031",
      "candidate_info": {
        "commit_hash": "8071cb2c646c9d38dcd4e3ccd377dce07705f031",
        "repo": "vim/vim",
        "commit_url": "https://github.com/vim/vim/commit/8071cb2c646c9d38dcd4e3ccd377dce07705f031",
        "files": [
          "src/evalfunc.c",
          "src/ex_cmds.h",
          "src/ex_docmd.c",
          "src/ex_getln.c",
          "src/syntax.c",
          "src/usercmd.c",
          "src/version.c"
        ],
        "message": "patch 8.1.1667: flags for Ex commands may clash with other symbols\n\nProblem:    Flags for Ex commands may clash with other symbols.\nSolution:   Prepend with EX_.",
        "before_after_code_files": [
          "src/evalfunc.c||src/evalfunc.c",
          "src/ex_cmds.h||src/ex_cmds.h",
          "src/ex_docmd.c||src/ex_docmd.c",
          "src/ex_getln.c||src/ex_getln.c",
          "src/syntax.c||src/syntax.c",
          "src/usercmd.c||src/usercmd.c",
          "src/version.c||src/version.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/evalfunc.c||src/evalfunc.c",
            "src/ex_docmd.c||src/ex_docmd.c",
            "src/version.c||src/version.c"
          ],
          "candidate": [
            "src/evalfunc.c||src/evalfunc.c",
            "src/ex_docmd.c||src/ex_docmd.c",
            "src/version.c||src/version.c"
          ]
        }
      },
      "candidate_diff": {
        "src/evalfunc.c||src/evalfunc.c": [
          "File: src/evalfunc.c -> src/evalfunc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3547:     memset(&eap, 0, sizeof(eap));",
          "3548:     eap.cmd = cmdstr;",
          "3549:     eap.arg = cmdstr;",
          "3551:     eap.usefilter = FALSE;",
          "3552:     eap.nextcmd = NULL;",
          "3553:     eap.cmdidx = CMD_USER;",
          "",
          "[Removed Lines]",
          "3550:     eap.argt |= NOSPC;",
          "",
          "[Added Lines]",
          "3550:     eap.argt |= EX_NOSPC;",
          "",
          "---------------"
        ],
        "src/ex_cmds.h||src/ex_cmds.h": [
          "File: src/ex_cmds.h -> src/ex_cmds.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "64: #ifndef DO_DECLARE_EXCMD",
          "",
          "[Removed Lines]",
          "30: #ifdef RANGE",
          "31: # undef RANGE   // SASC on Amiga defines it",
          "32: #endif",
          "34: #define RANGE  0x001 // allow a linespecs",
          "35: #define BANG  0x002 // allow a ! after the command name",
          "36: #define EXTRA  0x004 // allow extra args after command name",
          "37: #define XFILE  0x008 // expand wildcards in extra part",
          "38: #define NOSPC  0x010 // no spaces allowed in the extra part",
          "39: #define DFLALL  0x020 // default file range is 1,$",
          "40: #define WHOLEFOLD 0x040 // extend range to include whole fold also",
          "42: #define NEEDARG  0x080 // argument required",
          "43: #define TRLBAR  0x100 // check for trailing vertical bar",
          "44: #define REGSTR  0x200 // allow \"x for register designation",
          "45: #define COUNT  0x400 // allow count in argument, after command",
          "46: #define NOTRLCOM 0x800 // no trailing comment allowed",
          "47: #define ZEROR        0x1000 // zero line number allowed",
          "48: #define USECTRLV       0x2000 // do not remove CTRL-V from argument",
          "49: #define EDITCMD        0x4000 // allow \"+command\" argument",
          "50: #define BUFNAME        0x8000 // accepts buffer name",
          "51: #define BUFUNL       0x10000L // accepts unlisted buffer too",
          "52: #define ARGOPT       0x20000L // allow \"++opt=val\" argument",
          "53: #define SBOXOK       0x40000L // allowed in the sandbox",
          "54: #define CMDWIN       0x80000L // allowed in cmdline window; when missing",
          "57: #define MODIFY       0x100000L // forbidden in non-'modifiable' buffer",
          "58: #define EXFLAGS      0x200000L // allow flags after count in argument",
          "59: #define RESTRICT     0x400000L // forbidden in restricted mode",
          "60: #define FILES (XFILE | EXTRA) // multiple extra files allowed",
          "61: #define WORD1 (EXTRA | NOSPC) // one extra word allowed",
          "62: #define FILE1 (FILES | NOSPC) // 1 file allowed, defaults to current file",
          "",
          "[Added Lines]",
          "30: #define EX_RANGE 0x001 // allow a linespecs",
          "31: #define EX_BANG  0x002 // allow a ! after the command name",
          "32: #define EX_EXTRA 0x004 // allow extra args after command name",
          "33: #define EX_XFILE 0x008 // expand wildcards in extra part",
          "34: #define EX_NOSPC 0x010 // no spaces allowed in the extra part",
          "35: #define EX_DFLALL 0x020 // default file range is 1,$",
          "36: #define EX_WHOLEFOLD 0x040 // extend range to include whole fold also",
          "38: #define EX_NEEDARG 0x080 // argument required",
          "39: #define EX_TRLBAR 0x100 // check for trailing vertical bar",
          "40: #define EX_REGSTR 0x200 // allow \"x for register designation",
          "41: #define EX_COUNT 0x400 // allow count in argument, after command",
          "42: #define EX_NOTRLCOM 0x800 // no trailing comment allowed",
          "43: #define EX_ZEROR       0x1000 // zero line number allowed",
          "44: #define EX_CTRLV       0x2000 // do not remove CTRL-V from argument",
          "45: #define EX_CMDARG      0x4000 // allow \"+command\" argument",
          "46: #define EX_BUFNAME     0x8000 // accepts buffer name",
          "47: #define EX_BUFUNL     0x10000 // accepts unlisted buffer too",
          "48: #define EX_ARGOPT     0x20000 // allow \"++opt=val\" argument",
          "49: #define EX_SBOXOK     0x40000 // allowed in the sandbox",
          "50: #define EX_CMDWIN     0x80000 // allowed in cmdline window; when missing",
          "53: #define EX_MODIFY    0x100000 // forbidden in non-'modifiable' buffer",
          "54: #define EX_FLAGS     0x200000 // allow flags after count in argument",
          "55: #define EX_RESTRICT  0x400000 // forbidden in restricted mode",
          "56: #define EX_FILES (EX_XFILE | EX_EXTRA) // multiple extra files allowed",
          "57: #define EX_FILE1 (EX_FILES | EX_NOSPC) // 1 file, defaults to current file",
          "58: #define EX_WORD1 (EX_EXTRA | EX_NOSPC) // one extra word allowed",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99: #ifdef DO_DECLARE_EXCMD",
          "102: typedef void (*ex_func_T) (exarg_T *eap);",
          "",
          "[Removed Lines]",
          "96: #ifdef EX",
          "97: # undef EX     // just in case",
          "98: #endif",
          "100: # define EX(a, b, c, d, e)  {(char_u *)b, c, (long_u)(d), e}",
          "",
          "[Added Lines]",
          "93: # define EXCMD(a, b, c, d, e)  {(char_u *)b, c, (long_u)(d), e}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "109:     cmd_addr_T cmd_addr_type; // flag for address type",
          "110: } cmdnames[] =",
          "111: #else",
          "113: enum CMD_index",
          "114: #endif",
          "115: {",
          "118:    ADDR_LINES),",
          "121:    ADDR_NONE),",
          "124:    ADDR_NONE),",
          "127:    ADDR_NONE),",
          "130:    ADDR_OTHER),",
          "133:    ADDR_OTHER),",
          "136:    ADDR_OTHER),",
          "139:    ADDR_NONE),",
          "142:    ADDR_ARGUMENTS),",
          "145:    ADDR_ARGUMENTS),",
          "148:    ADDR_ARGUMENTS),",
          "151:    ADDR_ARGUMENTS),",
          "154:    ADDR_NONE),",
          "157:    ADDR_NONE),",
          "160:    ADDR_ARGUMENTS),",
          "163:    ADDR_NONE),",
          "166:    ADDR_NONE),",
          "169:    ADDR_NONE),",
          "172:    ADDR_NONE),",
          "175:    ADDR_BUFFERS),",
          "178:    ADDR_OTHER),",
          "181:    ADDR_OTHER),",
          "184:    ADDR_NONE),",
          "187:    ADDR_BUFFERS),",
          "190:    ADDR_NONE),",
          "193:    ADDR_NONE),",
          "196:    ADDR_OTHER),",
          "199:    ADDR_OTHER),",
          "202:    ADDR_OTHER),",
          "205:    ADDR_OTHER),",
          "208:    ADDR_NONE),",
          "211:    ADDR_OTHER),",
          "214:    ADDR_OTHER),",
          "217:    ADDR_NONE),",
          "220:    ADDR_NONE),",
          "223:    ADDR_NONE),",
          "226:    ADDR_NONE),",
          "229:    ADDR_NONE),",
          "232:    ADDR_NONE),",
          "235:    ADDR_BUFFERS),",
          "238:    ADDR_LOADED_BUFFERS),",
          "241:    ADDR_BUFFERS),",
          "244:    ADDR_LINES),",
          "247:    ADDR_UNSIGNED),",
          "250:    ADDR_UNSIGNED),",
          "253:    ADDR_NONE),",
          "256:    ADDR_NONE),",
          "259:    ADDR_UNSIGNED),",
          "262:    ADDR_OTHER),",
          "265:    ADDR_NONE),",
          "268:    ADDR_NONE),",
          "271:    ADDR_UNSIGNED),",
          "274:    ADDR_LINES),",
          "277:    ADDR_NONE),",
          "280:    ADDR_OTHER),",
          "283:    ADDR_UNSIGNED),",
          "286:    ADDR_UNSIGNED),",
          "289:    ADDR_NONE),",
          "292:    ADDR_QUICKFIX),",
          "295:    ADDR_NONE),",
          "298:    ADDR_NONE),",
          "301:    ADDR_QUICKFIX_VALID),",
          "304:    ADDR_LINES),",
          "307:    ADDR_NONE),",
          "310:    ADDR_NONE),",
          "313:    ADDR_QUICKFIX_VALID),",
          "316:    ADDR_UNSIGNED),",
          "319:    ADDR_NONE),",
          "322:    ADDR_OTHER),",
          "325:    ADDR_NONE),",
          "328:    ADDR_NONE),",
          "331:    ADDR_NONE),",
          "334:    ADDR_NONE),",
          "337:    ADDR_OTHER),",
          "340:    ADDR_UNSIGNED),",
          "343:    ADDR_NONE),",
          "346:    ADDR_UNSIGNED),",
          "349:    ADDR_WINDOWS),",
          "352:    ADDR_NONE),",
          "355:    ADDR_NONE),",
          "358:    ADDR_NONE),",
          "361:    ADDR_OTHER),",
          "364:    ADDR_UNSIGNED),",
          "367:    ADDR_UNSIGNED),",
          "370:    ADDR_UNSIGNED),",
          "373:    ADDR_NONE),",
          "376:    ADDR_NONE),",
          "379:    ADDR_OTHER),",
          "382:    ADDR_LINES),",
          "385:    ADDR_UNSIGNED),",
          "388:    ADDR_NONE),",
          "391:    ADDR_NONE),",
          "394:    ADDR_NONE),",
          "397:    ADDR_NONE),",
          "400:    ADDR_NONE),",
          "403:    ADDR_NONE),",
          "406:    ADDR_NONE),",
          "409:    ADDR_OTHER),",
          "412:    ADDR_UNSIGNED),",
          "415:    ADDR_OTHER),",
          "418:    ADDR_NONE),",
          "421:    ADDR_UNSIGNED),",
          "424:    ADDR_NONE),",
          "427:    ADDR_NONE),",
          "430:    ADDR_NONE),",
          "433:    ADDR_NONE),",
          "436:    ADDR_NONE),",
          "439:    ADDR_OTHER),",
          "442:    ADDR_LINES),",
          "445:    ADDR_NONE),",
          "448:    ADDR_NONE),",
          "451:    ADDR_OTHER),",
          "454:    ADDR_NONE),",
          "457:    ADDR_NONE),",
          "460:    ADDR_NONE),",
          "463:    ADDR_NONE),",
          "466:    ADDR_LINES),",
          "469:    ADDR_NONE),",
          "472:    ADDR_NONE),",
          "475:    ADDR_LINES),",
          "478:    ADDR_NONE),",
          "481:    ADDR_NONE),",
          "484:    ADDR_NONE),",
          "487:    ADDR_LINES),",
          "490:    ADDR_LINES),",
          "493:    ADDR_NONE),",
          "496:    ADDR_NONE),",
          "499:    ADDR_NONE),",
          "502:    ADDR_LINES),",
          "505:    ADDR_LINES),",
          "508:    ADDR_NONE),",
          "511:    ADDR_NONE),",
          "514:    ADDR_NONE),",
          "517:    ADDR_NONE),",
          "520:    ADDR_NONE),",
          "523:    ADDR_NONE),",
          "526:    ADDR_NONE),",
          "529:    ADDR_NONE),",
          "532:    ADDR_NONE),",
          "535:    ADDR_OTHER),",
          "538:    ADDR_NONE),",
          "541:    ADDR_NONE),",
          "544:    ADDR_NONE),",
          "547:    ADDR_NONE),",
          "550:    ADDR_NONE),",
          "553:    ADDR_NONE),",
          "556:    ADDR_NONE),",
          "559:    ADDR_NONE),",
          "562:    ADDR_LINES),",
          "565:    ADDR_NONE),",
          "568:    ADDR_OTHER),",
          "571:    ADDR_NONE),",
          "574:    ADDR_NONE),",
          "577:    ADDR_NONE),",
          "580:    ADDR_OTHER),",
          "583:    ADDR_NONE),",
          "586:    ADDR_NONE),",
          "589:    ADDR_NONE),",
          "592:    ADDR_NONE),",
          "595:    ADDR_LINES),",
          "598:    ADDR_LINES),",
          "601:    ADDR_LINES),",
          "604:    ADDR_LINES),",
          "607:    ADDR_LINES),",
          "610:    ADDR_NONE),",
          "613:    ADDR_NONE),",
          "616:    ADDR_LINES),",
          "619:    ADDR_OTHER),",
          "622:    ADDR_OTHER),",
          "625:    ADDR_OTHER),",
          "628:    ADDR_NONE),",
          "631:    ADDR_NONE),",
          "634:    ADDR_NONE),",
          "637:    ADDR_OTHER),",
          "640:    ADDR_NONE),",
          "643:    ADDR_NONE),",
          "646:    ADDR_NONE),",
          "649:    ADDR_LINES),",
          "652:    ADDR_NONE),",
          "655:    ADDR_WINDOWS),",
          "658:    ADDR_NONE),",
          "661:    ADDR_LINES),",
          "664:    ADDR_NONE),",
          "667:    ADDR_NONE),",
          "670:    ADDR_NONE),",
          "673:    ADDR_LINES),",
          "676:    ADDR_LINES),",
          "679:    ADDR_NONE),",
          "682:    ADDR_NONE),",
          "685:    ADDR_OTHER),",
          "688:    ADDR_NONE),",
          "691:    ADDR_NONE),",
          "694:    ADDR_OTHER),",
          "697:    ADDR_NONE),",
          "700:    ADDR_LINES),",
          "703:    ADDR_LINES),",
          "706:    ADDR_NONE),",
          "709:    ADDR_NONE),",
          "712:    ADDR_NONE),",
          "715:    ADDR_LINES),",
          "718:    ADDR_NONE),",
          "721:    ADDR_LINES),",
          "724:    ADDR_NONE),",
          "727:    ADDR_NONE),",
          "730:    ADDR_NONE),",
          "733:    ADDR_NONE),",
          "736:    ADDR_LINES),",
          "739:    ADDR_UNSIGNED),",
          "742:    ADDR_UNSIGNED),",
          "745:    ADDR_NONE),",
          "748:    ADDR_UNSIGNED),",
          "751:    ADDR_NONE),",
          "754:    ADDR_NONE),",
          "757:    ADDR_OTHER),",
          "760:    ADDR_NONE),",
          "763:    ADDR_UNSIGNED),",
          "766:    ADDR_NONE),",
          "769:    ADDR_OTHER),",
          "772:    ADDR_UNSIGNED),",
          "775:    ADDR_UNSIGNED),",
          "778:    ADDR_NONE),",
          "781:    ADDR_NONE),",
          "784:    ADDR_NONE),",
          "787:    ADDR_OTHER),",
          "790:    ADDR_NONE),",
          "793:    ADDR_QUICKFIX_VALID),",
          "796:    ADDR_LINES),",
          "799:    ADDR_NONE),",
          "802:    ADDR_NONE),",
          "805:    ADDR_NONE),",
          "808:    ADDR_NONE),",
          "811:    ADDR_QUICKFIX_VALID),",
          "814:    ADDR_UNSIGNED),",
          "817:    ADDR_NONE),",
          "820:    ADDR_OTHER),",
          "823:    ADDR_NONE),",
          "826:    ADDR_OTHER),",
          "829:    ADDR_OTHER),",
          "832:    ADDR_NONE),",
          "835:    ADDR_UNSIGNED),",
          "838:    ADDR_QUICKFIX),",
          "841:    ADDR_UNSIGNED),",
          "844:    ADDR_NONE),",
          "847:    ADDR_NONE),",
          "850:    ADDR_NONE),",
          "853:    ADDR_NONE),",
          "856:    ADDR_NONE),",
          "859:    ADDR_UNSIGNED),",
          "862:    ADDR_UNSIGNED),",
          "865:    ADDR_UNSIGNED),",
          "868:    ADDR_NONE),",
          "871:    ADDR_NONE),",
          "874:    ADDR_NONE),",
          "877:    ADDR_NONE),",
          "880:    ADDR_UNSIGNED),",
          "883:    ADDR_OTHER),",
          "886:    ADDR_UNSIGNED),",
          "889:    ADDR_OTHER),",
          "892:    ADDR_UNSIGNED),",
          "895:    ADDR_NONE),",
          "898:    ADDR_NONE),",
          "901:    ADDR_LINES),",
          "904:    ADDR_LINES),",
          "907:    ADDR_LINES),",
          "910:    ADDR_OTHER),",
          "913:    ADDR_OTHER),",
          "916:    ADDR_OTHER),",
          "919:    ADDR_NONE),",
          "922:    ADDR_LINES),",
          "925:    ADDR_LINES),",
          "928:    ADDR_NONE),",
          "931:    ADDR_NONE),",
          "934:    ADDR_NONE),",
          "937:    ADDR_NONE),",
          "940:    ADDR_OTHER),",
          "943:    ADDR_OTHER),",
          "946:    ADDR_NONE),",
          "949:    ADDR_OTHER),",
          "952:    ADDR_NONE),",
          "955:    ADDR_NONE),",
          "958:    ADDR_NONE),",
          "961:    ADDR_NONE),",
          "964:    ADDR_NONE),",
          "967:    ADDR_NONE),",
          "970:    ADDR_LINES),",
          "973:    ADDR_LINES),",
          "976:    ADDR_OTHER),",
          "979:    ADDR_NONE),",
          "982:    ADDR_NONE),",
          "985:    ADDR_NONE),",
          "988:    ADDR_OTHER),",
          "991:    ADDR_NONE),",
          "994:    ADDR_NONE),",
          "997:    ADDR_OTHER),",
          "1000:    ADDR_NONE),",
          "1003:    ADDR_OTHER),",
          "1006:    ADDR_NONE),",
          "1009:    ADDR_NONE),",
          "1012:    ADDR_NONE),",
          "1015:    ADDR_NONE),",
          "1018:    ADDR_OTHER),",
          "1021:    ADDR_NONE),",
          "1024:    ADDR_LINES),",
          "1027:    ADDR_LINES),",
          "1030:    ADDR_NONE),",
          "1033:    ADDR_NONE),",
          "1036:    ADDR_LINES),",
          "1039:    ADDR_NONE),",
          "1042:    ADDR_NONE),",
          "1045:    ADDR_NONE),",
          "1048:    ADDR_OTHER),",
          "1051:    ADDR_WINDOWS),",
          "1054:    ADDR_NONE),",
          "1057:    ADDR_OTHER),",
          "1060:    ADDR_NONE),",
          "1063:    ADDR_NONE),",
          "1066:    ADDR_NONE),",
          "1069:    ADDR_NONE),",
          "1072:    ADDR_LINES),",
          "1075:    ADDR_NONE),",
          "1078:    ADDR_NONE),",
          "1081:    ADDR_NONE),",
          "1084:    ADDR_LINES),",
          "1087:    ADDR_LINES),",
          "1090:    ADDR_NONE),",
          "1093:    ADDR_OTHER),",
          "1096:    ADDR_NONE),",
          "1099:    ADDR_OTHER),",
          "1102:    ADDR_NONE),",
          "1105:    ADDR_OTHER),",
          "1108:    ADDR_NONE),",
          "1111:    ADDR_NONE),",
          "1114:    ADDR_NONE),",
          "1117:    ADDR_NONE),",
          "1120:    ADDR_LINES),",
          "1123:    ADDR_OTHER),",
          "1126:    ADDR_OTHER),",
          "1129:    ADDR_OTHER),",
          "1132:    ADDR_NONE),",
          "1135:    ADDR_NONE),",
          "1138:    ADDR_OTHER),",
          "1141:    ADDR_OTHER),",
          "1144:    ADDR_OTHER),",
          "1147:    ADDR_NONE),",
          "1150:    ADDR_LINES),",
          "1153:    ADDR_NONE),",
          "1156:    ADDR_LINES),",
          "1159:    ADDR_LINES),",
          "1162:    ADDR_LINES),",
          "1165:    ADDR_LINES),",
          "1168:    ADDR_LINES),",
          "1171:    ADDR_LINES),",
          "1174:    ADDR_LINES),",
          "1177:    ADDR_LINES),",
          "1180:    ADDR_LINES),",
          "1183:    ADDR_LINES),",
          "1186:    ADDR_LINES),",
          "1189:    ADDR_WINDOWS),",
          "1192:    ADDR_NONE),",
          "1195:    ADDR_NONE),",
          "1198:    ADDR_LINES),",
          "1201:    ADDR_NONE),",
          "1204:    ADDR_NONE),",
          "1207:    ADDR_NONE),",
          "1210:    ADDR_NONE),",
          "1213:    ADDR_NONE),",
          "1216:    ADDR_NONE),",
          "1219:    ADDR_NONE),",
          "1222:    ADDR_OTHER),",
          "1225:    ADDR_LINES),",
          "1228:    ADDR_NONE),",
          "1231:    ADDR_NONE),",
          "1234:    ADDR_LINES),",
          "1237:    ADDR_NONE),",
          "1240:    ADDR_NONE),",
          "1243:    ADDR_LINES),",
          "1246:    ADDR_LINES),",
          "1249:    ADDR_LINES),",
          "1252:    ADDR_NONE),",
          "1255:    ADDR_NONE),",
          "1258:    ADDR_LINES),",
          "1261:    ADDR_OTHER),",
          "1264:    ADDR_ARGUMENTS),",
          "1267:    ADDR_OTHER),",
          "1270:    ADDR_NONE),",
          "1273:    ADDR_NONE),",
          "1276:    ADDR_BUFFERS),",
          "1279:    ADDR_OTHER),",
          "1282:    ADDR_OTHER),",
          "1285:    ADDR_NONE),",
          "1288:    ADDR_NONE),",
          "1291:    ADDR_OTHER),",
          "1294:    ADDR_OTHER),",
          "1297:    ADDR_OTHER),",
          "1300:    ADDR_NONE),",
          "1303:    ADDR_OTHER),",
          "1306:    ADDR_NONE),",
          "1309:    ADDR_NONE),",
          "1312:    ADDR_NONE),",
          "1315:    ADDR_NONE),",
          "1318:    ADDR_NONE),",
          "1321:    ADDR_NONE),",
          "1324:    ADDR_NONE),",
          "1327:    ADDR_OTHER),",
          "1330:    ADDR_NONE),",
          "1333:    ADDR_NONE),",
          "1336:    ADDR_NONE),",
          "1339:    ADDR_OTHER),",
          "1342:    ADDR_NONE),",
          "1345:    ADDR_OTHER),",
          "1348:    ADDR_NONE),",
          "1351:    ADDR_LINES),",
          "1354:    ADDR_NONE),",
          "1357:    ADDR_NONE),",
          "1360:    ADDR_OTHER),",
          "1363:    ADDR_OTHER),",
          "1366:    ADDR_LINES),",
          "1369:    ADDR_NONE),",
          "1372:    ADDR_OTHER),",
          "1375:    ADDR_NONE),",
          "1378:    ADDR_LINES),",
          "1381:    ADDR_OTHER),",
          "1384:    ADDR_OTHER),",
          "1387:    ADDR_NONE),",
          "1390:    ADDR_NONE),",
          "1393:    ADDR_NONE),",
          "1396:    ADDR_OTHER),",
          "1399:    ADDR_OTHER),",
          "1402:    ADDR_OTHER),",
          "1405:    ADDR_NONE),",
          "1408:    ADDR_NONE),",
          "1411:    ADDR_OTHER),",
          "1414:    ADDR_NONE),",
          "1417:    ADDR_NONE),",
          "1420:    ADDR_NONE),",
          "1423:    ADDR_NONE),",
          "1426:    ADDR_NONE),",
          "1429:    ADDR_NONE),",
          "1432:    ADDR_OTHER),",
          "1435:    ADDR_NONE),",
          "1438:    ADDR_NONE),",
          "1441:    ADDR_NONE),",
          "1444:    ADDR_OTHER),",
          "1447:    ADDR_NONE),",
          "1450:    ADDR_NONE),",
          "1453:    ADDR_NONE),",
          "1456:    ADDR_NONE),",
          "1459:    ADDR_NONE),",
          "1462:    ADDR_LINES),",
          "1465:    ADDR_OTHER),",
          "1468:    ADDR_OTHER),",
          "1471:    ADDR_NONE),",
          "1474:    ADDR_NONE),",
          "1477:    ADDR_TABS),",
          "1480:    ADDR_TABS),",
          "1483:    ADDR_TABS),",
          "1486:    ADDR_TABS),",
          "1489:    ADDR_NONE),",
          "1492:    ADDR_TABS),",
          "1495:    ADDR_NONE),",
          "1498:    ADDR_TABS),",
          "1501:    ADDR_TABS),",
          "1504:    ADDR_TABS),",
          "1507:    ADDR_TABS_RELATIVE),",
          "1510:    ADDR_TABS_RELATIVE),",
          "1513:    ADDR_NONE),",
          "1516:    ADDR_NONE),",
          "1519:    ADDR_NONE),",
          "1522:    ADDR_NONE),",
          "1525:    ADDR_LINES),",
          "1528:    ADDR_LINES),",
          "1531:    ADDR_LINES),",
          "1534:    ADDR_NONE),",
          "1537:    ADDR_LINES),",
          "1540:    ADDR_OTHER),",
          "1543:    ADDR_NONE),",
          "1546:    ADDR_NONE),",
          "1549:    ADDR_NONE),",
          "1552:    ADDR_OTHER),",
          "1555:    ADDR_OTHER),",
          "1558:    ADDR_OTHER),",
          "1561:    ADDR_OTHER),",
          "1564:    ADDR_NONE),",
          "1567:    ADDR_NONE),",
          "1570:    ADDR_OTHER),",
          "1573:    ADDR_NONE),",
          "1576:    ADDR_NONE),",
          "1579:    ADDR_OTHER),",
          "1582:    ADDR_OTHER),",
          "1585:    ADDR_NONE),",
          "1588:    ADDR_NONE),",
          "1591:    ADDR_NONE),",
          "1594:    ADDR_NONE),",
          "1597:    ADDR_OTHER),",
          "1600:    ADDR_NONE),",
          "1603:    ADDR_NONE),",
          "1606:    ADDR_NONE),",
          "1609:    ADDR_OTHER),",
          "1612:    ADDR_NONE),",
          "1615:    ADDR_NONE),",
          "1618:    ADDR_NONE),",
          "1621:    ADDR_NONE),",
          "1624:    ADDR_NONE),",
          "1627:    ADDR_LINES),",
          "1630:    ADDR_LINES),",
          "1633:    ADDR_NONE),",
          "1636:    ADDR_OTHER),",
          "1639:    ADDR_NONE),",
          "1642:    ADDR_NONE),",
          "1645:    ADDR_NONE),",
          "1648:    ADDR_OTHER),",
          "1651:    ADDR_OTHER),",
          "1654:    ADDR_NONE),",
          "1657:    ADDR_NONE),",
          "1660:    ADDR_NONE),",
          "1663:    ADDR_OTHER),",
          "1666:    ADDR_NONE),",
          "1669:    ADDR_OTHER),",
          "1672:    ADDR_OTHER),",
          "1675:    ADDR_OTHER),",
          "1678:    ADDR_NONE),",
          "1681:    ADDR_NONE),",
          "1684:    ADDR_LINES),",
          "1687:    ADDR_OTHER),",
          "1690:    ADDR_NONE),",
          "1693:    ADDR_NONE),",
          "1696:    ADDR_NONE),",
          "1699:    ADDR_OTHER),",
          "1702:    ADDR_WINDOWS),",
          "1705:    ADDR_NONE),",
          "1708:    ADDR_OTHER),",
          "1711:    ADDR_OTHER),",
          "1714:    ADDR_LINES),",
          "1717:    ADDR_NONE),",
          "1720:    ADDR_NONE),",
          "1723:    ADDR_NONE),",
          "1726:    ADDR_LINES),",
          "1729:    ADDR_NONE),",
          "1732:    ADDR_NONE),",
          "1735:    ADDR_NONE),",
          "1738:    ADDR_OTHER),",
          "1741:    ADDR_NONE),",
          "1744:    ADDR_OTHER),",
          "1747:    ADDR_NONE),",
          "1750:    ADDR_NONE),",
          "1753:    ADDR_NONE),",
          "1756:    ADDR_LINES),",
          "1759:    ADDR_LINES),",
          "1764:    ADDR_LINES),",
          "1767:    ADDR_LINES),",
          "1770:    ADDR_LINES),",
          "1773:    ADDR_LINES),",
          "1776:    ADDR_LINES),",
          "1779:    ADDR_LINES),",
          "1782:    ADDR_LINES),",
          "1785:    ADDR_LINES),",
          "1788:    ADDR_OTHER),",
          "1791:    ADDR_LINES),",
          "1794:    ADDR_NONE),",
          "1797:    ADDR_LINES),",
          "1799: #ifndef DO_DECLARE_EXCMD",
          "",
          "[Removed Lines]",
          "112: # define EX(a, b, c, d, e)  a",
          "116: EX(CMD_append,  \"append\", ex_append,",
          "117:    BANG|RANGE|ZEROR|TRLBAR|CMDWIN|MODIFY,",
          "119: EX(CMD_abbreviate, \"abbreviate\", ex_abbreviate,",
          "120:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "122: EX(CMD_abclear,  \"abclear\", ex_abclear,",
          "123:    EXTRA|TRLBAR|CMDWIN,",
          "125: EX(CMD_aboveleft, \"aboveleft\", ex_wrongmodifier,",
          "126:    NEEDARG|EXTRA|NOTRLCOM,",
          "128: EX(CMD_all,  \"all\",  ex_all,",
          "129:    BANG|RANGE|COUNT|TRLBAR,",
          "131: EX(CMD_amenu,  \"amenu\", ex_menu,",
          "132:    RANGE|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "134: EX(CMD_anoremenu, \"anoremenu\", ex_menu,",
          "135:    RANGE|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "137: EX(CMD_args,  \"args\",  ex_args,",
          "138:    BANG|FILES|EDITCMD|ARGOPT|TRLBAR,",
          "140: EX(CMD_argadd,  \"argadd\", ex_argadd,",
          "141:    BANG|RANGE|ZEROR|FILES|TRLBAR,",
          "143: EX(CMD_argdelete, \"argdelete\", ex_argdelete,",
          "144:    BANG|RANGE|FILES|TRLBAR,",
          "146: EX(CMD_argdo,  \"argdo\", ex_listdo,",
          "147:    BANG|NEEDARG|EXTRA|NOTRLCOM|RANGE|DFLALL,",
          "149: EX(CMD_argedit,  \"argedit\", ex_argedit,",
          "150:    BANG|NEEDARG|RANGE|ZEROR|FILES|EDITCMD|ARGOPT|TRLBAR,",
          "152: EX(CMD_argglobal, \"argglobal\", ex_args,",
          "153:    BANG|FILES|EDITCMD|ARGOPT|TRLBAR,",
          "155: EX(CMD_arglocal, \"arglocal\", ex_args,",
          "156:    BANG|FILES|EDITCMD|ARGOPT|TRLBAR,",
          "158: EX(CMD_argument, \"argument\", ex_argument,",
          "159:    BANG|RANGE|COUNT|EXTRA|EDITCMD|ARGOPT|TRLBAR,",
          "161: EX(CMD_ascii,  \"ascii\", do_ascii,",
          "162:    TRLBAR|SBOXOK|CMDWIN,",
          "164: EX(CMD_autocmd,  \"autocmd\", ex_autocmd,",
          "165:    BANG|EXTRA|NOTRLCOM|USECTRLV|CMDWIN,",
          "167: EX(CMD_augroup,  \"augroup\", ex_autocmd,",
          "168:    BANG|WORD1|TRLBAR|CMDWIN,",
          "170: EX(CMD_aunmenu,  \"aunmenu\", ex_menu,",
          "171:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "173: EX(CMD_buffer,  \"buffer\", ex_buffer,",
          "174:    BANG|RANGE|BUFNAME|BUFUNL|COUNT|EXTRA|EDITCMD|TRLBAR,",
          "176: EX(CMD_bNext,  \"bNext\", ex_bprevious,",
          "177:    BANG|RANGE|COUNT|EDITCMD|TRLBAR,",
          "179: EX(CMD_ball,  \"ball\",  ex_buffer_all,",
          "180:    RANGE|COUNT|TRLBAR,",
          "182: EX(CMD_badd,  \"badd\",  ex_edit,",
          "183:    NEEDARG|FILE1|EDITCMD|TRLBAR|CMDWIN,",
          "185: EX(CMD_bdelete,  \"bdelete\", ex_bunload,",
          "186:    BANG|RANGE|BUFNAME|COUNT|EXTRA|TRLBAR,",
          "188: EX(CMD_behave,  \"behave\", ex_behave,",
          "189:    BANG|NEEDARG|WORD1|TRLBAR|CMDWIN,",
          "191: EX(CMD_belowright, \"belowright\", ex_wrongmodifier,",
          "192:    NEEDARG|EXTRA|NOTRLCOM,",
          "194: EX(CMD_bfirst,  \"bfirst\", ex_brewind,",
          "195:    BANG|RANGE|EDITCMD|TRLBAR,",
          "197: EX(CMD_blast,  \"blast\", ex_blast,",
          "198:    BANG|RANGE|EDITCMD|TRLBAR,",
          "200: EX(CMD_bmodified, \"bmodified\", ex_bmodified,",
          "201:    BANG|RANGE|COUNT|EDITCMD|TRLBAR,",
          "203: EX(CMD_bnext,  \"bnext\", ex_bnext,",
          "204:    BANG|RANGE|COUNT|EDITCMD|TRLBAR,",
          "206: EX(CMD_botright, \"botright\", ex_wrongmodifier,",
          "207:    NEEDARG|EXTRA|NOTRLCOM,",
          "209: EX(CMD_bprevious, \"bprevious\", ex_bprevious,",
          "210:    BANG|RANGE|COUNT|EDITCMD|TRLBAR,",
          "212: EX(CMD_brewind,  \"brewind\", ex_brewind,",
          "213:    BANG|RANGE|EDITCMD|TRLBAR,",
          "215: EX(CMD_break,  \"break\", ex_break,",
          "216:    TRLBAR|SBOXOK|CMDWIN,",
          "218: EX(CMD_breakadd, \"breakadd\", ex_breakadd,",
          "219:    EXTRA|TRLBAR|CMDWIN,",
          "221: EX(CMD_breakdel, \"breakdel\", ex_breakdel,",
          "222:    EXTRA|TRLBAR|CMDWIN,",
          "224: EX(CMD_breaklist, \"breaklist\", ex_breaklist,",
          "225:    EXTRA|TRLBAR|CMDWIN,",
          "227: EX(CMD_browse,  \"browse\", ex_wrongmodifier,",
          "228:    NEEDARG|EXTRA|NOTRLCOM|CMDWIN,",
          "230: EX(CMD_buffers,  \"buffers\", buflist_list,",
          "231:    BANG|EXTRA|TRLBAR|CMDWIN,",
          "233: EX(CMD_bufdo,  \"bufdo\", ex_listdo,",
          "234:    BANG|NEEDARG|EXTRA|NOTRLCOM|RANGE|DFLALL,",
          "236: EX(CMD_bunload,  \"bunload\", ex_bunload,",
          "237:    BANG|RANGE|BUFNAME|COUNT|EXTRA|TRLBAR,",
          "239: EX(CMD_bwipeout, \"bwipeout\", ex_bunload,",
          "240:    BANG|RANGE|BUFNAME|BUFUNL|COUNT|EXTRA|TRLBAR,",
          "242: EX(CMD_change,  \"change\", ex_change,",
          "243:    BANG|WHOLEFOLD|RANGE|COUNT|TRLBAR|CMDWIN|MODIFY,",
          "245: EX(CMD_cNext,  \"cNext\", ex_cnext,",
          "246:    RANGE|COUNT|TRLBAR|BANG,",
          "248: EX(CMD_cNfile,  \"cNfile\", ex_cnext,",
          "249:    RANGE|COUNT|TRLBAR|BANG,",
          "251: EX(CMD_cabbrev,  \"cabbrev\", ex_abbreviate,",
          "252:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "254: EX(CMD_cabclear, \"cabclear\", ex_abclear,",
          "255:    EXTRA|TRLBAR|CMDWIN,",
          "257: EX(CMD_cabove,  \"cabove\", ex_cbelow,",
          "258:    RANGE|COUNT|TRLBAR,",
          "260: EX(CMD_caddbuffer, \"caddbuffer\", ex_cbuffer,",
          "261:    RANGE|WORD1|TRLBAR,",
          "263: EX(CMD_caddexpr, \"caddexpr\", ex_cexpr,",
          "264:    NEEDARG|WORD1|NOTRLCOM|TRLBAR,",
          "266: EX(CMD_caddfile, \"caddfile\", ex_cfile,",
          "267:    TRLBAR|FILE1,",
          "269: EX(CMD_cafter,  \"cafter\", ex_cbelow,",
          "270:    RANGE|COUNT|TRLBAR,",
          "272: EX(CMD_call,  \"call\",  ex_call,",
          "273:    RANGE|NEEDARG|EXTRA|NOTRLCOM|SBOXOK|CMDWIN,",
          "275: EX(CMD_catch,  \"catch\", ex_catch,",
          "276:    EXTRA|SBOXOK|CMDWIN,",
          "278: EX(CMD_cbuffer,  \"cbuffer\", ex_cbuffer,",
          "279:    BANG|RANGE|WORD1|TRLBAR,",
          "281: EX(CMD_cbefore,  \"cbefore\", ex_cbelow,",
          "282:    RANGE|COUNT|TRLBAR,",
          "284: EX(CMD_cbelow,  \"cbelow\", ex_cbelow,",
          "285:    RANGE|COUNT|TRLBAR,",
          "287: EX(CMD_cbottom,  \"cbottom\", ex_cbottom,",
          "288:    TRLBAR,",
          "290: EX(CMD_cc,  \"cc\",  ex_cc,",
          "291:    RANGE|COUNT|TRLBAR|BANG,",
          "293: EX(CMD_cclose,  \"cclose\", ex_cclose,",
          "294:    TRLBAR,",
          "296: EX(CMD_cd,  \"cd\",  ex_cd,",
          "297:    BANG|FILE1|TRLBAR|CMDWIN,",
          "299: EX(CMD_cdo,  \"cdo\",  ex_listdo,",
          "300:    BANG|NEEDARG|EXTRA|NOTRLCOM|RANGE|DFLALL,",
          "302: EX(CMD_center,  \"center\", ex_align,",
          "303:    TRLBAR|RANGE|WHOLEFOLD|EXTRA|CMDWIN|MODIFY,",
          "305: EX(CMD_cexpr,  \"cexpr\", ex_cexpr,",
          "306:    NEEDARG|WORD1|NOTRLCOM|TRLBAR|BANG,",
          "308: EX(CMD_cfile,  \"cfile\", ex_cfile,",
          "309:    TRLBAR|FILE1|BANG,",
          "311: EX(CMD_cfdo,  \"cfdo\",  ex_listdo,",
          "312:    BANG|NEEDARG|EXTRA|NOTRLCOM|RANGE|DFLALL,",
          "314: EX(CMD_cfirst,  \"cfirst\", ex_cc,",
          "315:    RANGE|COUNT|TRLBAR|BANG,",
          "317: EX(CMD_cgetfile, \"cgetfile\", ex_cfile,",
          "318:    TRLBAR|FILE1,",
          "320: EX(CMD_cgetbuffer, \"cgetbuffer\", ex_cbuffer,",
          "321:    RANGE|WORD1|TRLBAR,",
          "323: EX(CMD_cgetexpr, \"cgetexpr\", ex_cexpr,",
          "324:    NEEDARG|WORD1|NOTRLCOM|TRLBAR,",
          "326: EX(CMD_chdir,  \"chdir\", ex_cd,",
          "327:    BANG|FILE1|TRLBAR|CMDWIN,",
          "329: EX(CMD_changes,  \"changes\", ex_changes,",
          "330:    TRLBAR|CMDWIN,",
          "332: EX(CMD_checkpath, \"checkpath\", ex_checkpath,",
          "333:    TRLBAR|BANG|CMDWIN,",
          "335: EX(CMD_checktime, \"checktime\", ex_checktime,",
          "336:    RANGE|BUFNAME|COUNT|EXTRA|TRLBAR,",
          "338: EX(CMD_chistory, \"chistory\", qf_history,",
          "339:    RANGE|COUNT|TRLBAR,",
          "341: EX(CMD_clist,  \"clist\", qf_list,",
          "342:    BANG|EXTRA|TRLBAR|CMDWIN,",
          "344: EX(CMD_clast,  \"clast\", ex_cc,",
          "345:    RANGE|COUNT|TRLBAR|BANG,",
          "347: EX(CMD_close,  \"close\", ex_close,",
          "348:    BANG|RANGE|COUNT|TRLBAR|CMDWIN,",
          "350: EX(CMD_clearjumps, \"clearjumps\", ex_clearjumps,",
          "351:    TRLBAR|CMDWIN,",
          "353: EX(CMD_cmap,  \"cmap\",  ex_map,",
          "354:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "356: EX(CMD_cmapclear, \"cmapclear\", ex_mapclear,",
          "357:    EXTRA|TRLBAR|CMDWIN,",
          "359: EX(CMD_cmenu,  \"cmenu\", ex_menu,",
          "360:    RANGE|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "362: EX(CMD_cnext,  \"cnext\", ex_cnext,",
          "363:    RANGE|COUNT|TRLBAR|BANG,",
          "365: EX(CMD_cnewer,  \"cnewer\", qf_age,",
          "366:    RANGE|COUNT|TRLBAR,",
          "368: EX(CMD_cnfile,  \"cnfile\", ex_cnext,",
          "369:    RANGE|COUNT|TRLBAR|BANG,",
          "371: EX(CMD_cnoremap, \"cnoremap\", ex_map,",
          "372:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "374: EX(CMD_cnoreabbrev, \"cnoreabbrev\", ex_abbreviate,",
          "375:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "377: EX(CMD_cnoremenu, \"cnoremenu\", ex_menu,",
          "378:    RANGE|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "380: EX(CMD_copy,  \"copy\",  ex_copymove,",
          "381:    RANGE|WHOLEFOLD|EXTRA|TRLBAR|CMDWIN|MODIFY,",
          "383: EX(CMD_colder,  \"colder\", qf_age,",
          "384:    RANGE|COUNT|TRLBAR,",
          "386: EX(CMD_colorscheme, \"colorscheme\", ex_colorscheme,",
          "387:    WORD1|TRLBAR|CMDWIN,",
          "389: EX(CMD_command,  \"command\", ex_command,",
          "390:    EXTRA|BANG|NOTRLCOM|USECTRLV|CMDWIN,",
          "392: EX(CMD_comclear, \"comclear\", ex_comclear,",
          "393:    TRLBAR|CMDWIN,",
          "395: EX(CMD_compiler, \"compiler\", ex_compiler,",
          "396:    BANG|TRLBAR|WORD1|CMDWIN,",
          "398: EX(CMD_continue, \"continue\", ex_continue,",
          "399:    TRLBAR|SBOXOK|CMDWIN,",
          "401: EX(CMD_confirm,  \"confirm\", ex_wrongmodifier,",
          "402:    NEEDARG|EXTRA|NOTRLCOM|CMDWIN,",
          "404: EX(CMD_const,  \"const\", ex_const,",
          "405:    EXTRA|NOTRLCOM|SBOXOK|CMDWIN,",
          "407: EX(CMD_copen,  \"copen\", ex_copen,",
          "408:    RANGE|COUNT|TRLBAR,",
          "410: EX(CMD_cprevious, \"cprevious\", ex_cnext,",
          "411:    RANGE|COUNT|TRLBAR|BANG,",
          "413: EX(CMD_cpfile,  \"cpfile\", ex_cnext,",
          "414:    RANGE|COUNT|TRLBAR|BANG,",
          "416: EX(CMD_cquit,  \"cquit\", ex_cquit,",
          "417:    TRLBAR|BANG,",
          "419: EX(CMD_crewind,  \"crewind\", ex_cc,",
          "420:    RANGE|COUNT|TRLBAR|BANG,",
          "422: EX(CMD_cscope,  \"cscope\", ex_cscope,",
          "423:    EXTRA|NOTRLCOM|XFILE,",
          "425: EX(CMD_cstag,  \"cstag\", ex_cstag,",
          "426:    BANG|TRLBAR|WORD1,",
          "428: EX(CMD_cunmap,  \"cunmap\", ex_unmap,",
          "429:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "431: EX(CMD_cunabbrev, \"cunabbrev\", ex_abbreviate,",
          "432:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "434: EX(CMD_cunmenu,  \"cunmenu\", ex_menu,",
          "435:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "437: EX(CMD_cwindow,  \"cwindow\", ex_cwindow,",
          "438:    RANGE|COUNT|TRLBAR,",
          "440: EX(CMD_delete,  \"delete\", ex_operators,",
          "441:    RANGE|WHOLEFOLD|REGSTR|COUNT|TRLBAR|CMDWIN|MODIFY,",
          "443: EX(CMD_delmarks, \"delmarks\", ex_delmarks,",
          "444:    BANG|EXTRA|TRLBAR|CMDWIN,",
          "446: EX(CMD_debug,  \"debug\", ex_debug,",
          "447:    NEEDARG|EXTRA|NOTRLCOM|SBOXOK|CMDWIN,",
          "449: EX(CMD_debuggreedy, \"debuggreedy\", ex_debuggreedy,",
          "450:    RANGE|ZEROR|TRLBAR|CMDWIN,",
          "452: EX(CMD_delcommand, \"delcommand\", ex_delcommand,",
          "453:    NEEDARG|WORD1|TRLBAR|CMDWIN,",
          "455: EX(CMD_delfunction, \"delfunction\", ex_delfunction,",
          "456:    BANG|NEEDARG|WORD1|CMDWIN,",
          "458: EX(CMD_display,  \"display\", ex_display,",
          "459:    EXTRA|NOTRLCOM|TRLBAR|SBOXOK|CMDWIN,",
          "461: EX(CMD_diffupdate, \"diffupdate\", ex_diffupdate,",
          "462:    BANG|TRLBAR,",
          "464: EX(CMD_diffget,  \"diffget\", ex_diffgetput,",
          "465:    RANGE|EXTRA|TRLBAR|MODIFY,",
          "467: EX(CMD_diffoff,  \"diffoff\", ex_diffoff,",
          "468:    BANG|TRLBAR,",
          "470: EX(CMD_diffpatch, \"diffpatch\", ex_diffpatch,",
          "471:    EXTRA|FILE1|TRLBAR|MODIFY,",
          "473: EX(CMD_diffput,  \"diffput\", ex_diffgetput,",
          "474:    RANGE|EXTRA|TRLBAR,",
          "476: EX(CMD_diffsplit, \"diffsplit\", ex_diffsplit,",
          "477:    EXTRA|FILE1|TRLBAR,",
          "479: EX(CMD_diffthis, \"diffthis\", ex_diffthis,",
          "480:    TRLBAR,",
          "482: EX(CMD_digraphs, \"digraphs\", ex_digraphs,",
          "483:    BANG|EXTRA|TRLBAR|CMDWIN,",
          "485: EX(CMD_djump,  \"djump\", ex_findpat,",
          "486:    BANG|RANGE|DFLALL|WHOLEFOLD|EXTRA,",
          "488: EX(CMD_dlist,  \"dlist\", ex_findpat,",
          "489:    BANG|RANGE|DFLALL|WHOLEFOLD|EXTRA|CMDWIN,",
          "491: EX(CMD_doautocmd, \"doautocmd\", ex_doautocmd,",
          "492:    EXTRA|TRLBAR|CMDWIN,",
          "494: EX(CMD_doautoall, \"doautoall\", ex_doautoall,",
          "495:    EXTRA|TRLBAR|CMDWIN,",
          "497: EX(CMD_drop,  \"drop\",  ex_drop,",
          "498:    FILES|EDITCMD|NEEDARG|ARGOPT|TRLBAR,",
          "500: EX(CMD_dsearch,  \"dsearch\", ex_findpat,",
          "501:    BANG|RANGE|DFLALL|WHOLEFOLD|EXTRA|CMDWIN,",
          "503: EX(CMD_dsplit,  \"dsplit\", ex_findpat,",
          "504:    BANG|RANGE|DFLALL|WHOLEFOLD|EXTRA,",
          "506: EX(CMD_edit,  \"edit\",  ex_edit,",
          "507:    BANG|FILE1|EDITCMD|ARGOPT|TRLBAR,",
          "509: EX(CMD_earlier,  \"earlier\", ex_later,",
          "510:    TRLBAR|EXTRA|NOSPC|CMDWIN,",
          "512: EX(CMD_echo,  \"echo\",  ex_echo,",
          "513:    EXTRA|NOTRLCOM|SBOXOK|CMDWIN,",
          "515: EX(CMD_echoerr,  \"echoerr\", ex_execute,",
          "516:    EXTRA|NOTRLCOM|SBOXOK|CMDWIN,",
          "518: EX(CMD_echohl,  \"echohl\", ex_echohl,",
          "519:    EXTRA|TRLBAR|SBOXOK|CMDWIN,",
          "521: EX(CMD_echomsg,  \"echomsg\", ex_execute,",
          "522:    EXTRA|NOTRLCOM|SBOXOK|CMDWIN,",
          "524: EX(CMD_echon,  \"echon\", ex_echo,",
          "525:    EXTRA|NOTRLCOM|SBOXOK|CMDWIN,",
          "527: EX(CMD_else,  \"else\",  ex_else,",
          "528:    TRLBAR|SBOXOK|CMDWIN,",
          "530: EX(CMD_elseif,  \"elseif\", ex_else,",
          "531:    EXTRA|NOTRLCOM|SBOXOK|CMDWIN,",
          "533: EX(CMD_emenu,  \"emenu\", ex_emenu,",
          "534:    NEEDARG|EXTRA|TRLBAR|NOTRLCOM|RANGE|CMDWIN,",
          "536: EX(CMD_endif,  \"endif\", ex_endif,",
          "537:    TRLBAR|SBOXOK|CMDWIN,",
          "539: EX(CMD_endfunction, \"endfunction\", ex_endfunction,",
          "540:    TRLBAR|CMDWIN,",
          "542: EX(CMD_endfor,  \"endfor\", ex_endwhile,",
          "543:    TRLBAR|SBOXOK|CMDWIN,",
          "545: EX(CMD_endtry,  \"endtry\", ex_endtry,",
          "546:    TRLBAR|SBOXOK|CMDWIN,",
          "548: EX(CMD_endwhile, \"endwhile\", ex_endwhile,",
          "549:    TRLBAR|SBOXOK|CMDWIN,",
          "551: EX(CMD_enew,  \"enew\",  ex_edit,",
          "552:    BANG|TRLBAR,",
          "554: EX(CMD_ex,  \"ex\",  ex_edit,",
          "555:    BANG|FILE1|EDITCMD|ARGOPT|TRLBAR,",
          "557: EX(CMD_execute,  \"execute\", ex_execute,",
          "558:    EXTRA|NOTRLCOM|SBOXOK|CMDWIN,",
          "560: EX(CMD_exit,  \"exit\",  ex_exit,",
          "561:    RANGE|WHOLEFOLD|BANG|FILE1|ARGOPT|DFLALL|TRLBAR|CMDWIN,",
          "563: EX(CMD_exusage,  \"exusage\", ex_exusage,",
          "564:    TRLBAR,",
          "566: EX(CMD_file,  \"file\",  ex_file,",
          "567:    RANGE|ZEROR|BANG|FILE1|TRLBAR,",
          "569: EX(CMD_files,  \"files\", buflist_list,",
          "570:    BANG|EXTRA|TRLBAR|CMDWIN,",
          "572: EX(CMD_filetype, \"filetype\", ex_filetype,",
          "573:    EXTRA|TRLBAR|CMDWIN,",
          "575: EX(CMD_filter,  \"filter\", ex_wrongmodifier,",
          "576:    BANG|NEEDARG|EXTRA|NOTRLCOM,",
          "578: EX(CMD_find,  \"find\",  ex_find,",
          "579:    RANGE|BANG|FILE1|EDITCMD|ARGOPT|TRLBAR,",
          "581: EX(CMD_finally,  \"finally\", ex_finally,",
          "582:    TRLBAR|SBOXOK|CMDWIN,",
          "584: EX(CMD_finish,  \"finish\", ex_finish,",
          "585:    TRLBAR|SBOXOK|CMDWIN,",
          "587: EX(CMD_first,  \"first\", ex_rewind,",
          "588:    EXTRA|BANG|EDITCMD|ARGOPT|TRLBAR,",
          "590: EX(CMD_fixdel,  \"fixdel\", do_fixdel,",
          "591:    TRLBAR|CMDWIN,",
          "593: EX(CMD_fold,  \"fold\",  ex_fold,",
          "594:    RANGE|WHOLEFOLD|TRLBAR|SBOXOK|CMDWIN,",
          "596: EX(CMD_foldclose, \"foldclose\", ex_foldopen,",
          "597:    RANGE|BANG|WHOLEFOLD|TRLBAR|SBOXOK|CMDWIN,",
          "599: EX(CMD_folddoopen, \"folddoopen\", ex_folddo,",
          "600:    RANGE|DFLALL|NEEDARG|EXTRA|NOTRLCOM,",
          "602: EX(CMD_folddoclosed, \"folddoclosed\", ex_folddo,",
          "603:    RANGE|DFLALL|NEEDARG|EXTRA|NOTRLCOM,",
          "605: EX(CMD_foldopen, \"foldopen\", ex_foldopen,",
          "606:    RANGE|BANG|WHOLEFOLD|TRLBAR|SBOXOK|CMDWIN,",
          "608: EX(CMD_for,  \"for\",  ex_while,",
          "609:    EXTRA|NOTRLCOM|SBOXOK|CMDWIN,",
          "611: EX(CMD_function, \"function\", ex_function,",
          "612:    EXTRA|BANG|SBOXOK|CMDWIN,",
          "614: EX(CMD_global,  \"global\", ex_global,",
          "615:    RANGE|WHOLEFOLD|BANG|EXTRA|DFLALL|SBOXOK|CMDWIN,",
          "617: EX(CMD_goto,  \"goto\",  ex_goto,",
          "618:    RANGE|COUNT|TRLBAR|SBOXOK|CMDWIN,",
          "620: EX(CMD_grep,  \"grep\",  ex_make,",
          "621:    RANGE|BANG|NEEDARG|EXTRA|NOTRLCOM|TRLBAR|XFILE,",
          "623: EX(CMD_grepadd,  \"grepadd\", ex_make,",
          "624:    RANGE|BANG|NEEDARG|EXTRA|NOTRLCOM|TRLBAR|XFILE,",
          "626: EX(CMD_gui,  \"gui\",  ex_gui,",
          "627:    BANG|FILES|EDITCMD|ARGOPT|TRLBAR|CMDWIN,",
          "629: EX(CMD_gvim,  \"gvim\",  ex_gui,",
          "630:    BANG|FILES|EDITCMD|ARGOPT|TRLBAR|CMDWIN,",
          "632: EX(CMD_help,  \"help\",  ex_help,",
          "633:    BANG|EXTRA|NOTRLCOM,",
          "635: EX(CMD_helpclose, \"helpclose\", ex_helpclose,",
          "636:    RANGE|COUNT|TRLBAR,",
          "638: EX(CMD_helpfind, \"helpfind\", ex_helpfind,",
          "639:    EXTRA|NOTRLCOM,",
          "641: EX(CMD_helpgrep, \"helpgrep\", ex_helpgrep,",
          "642:    EXTRA|NOTRLCOM|NEEDARG,",
          "644: EX(CMD_helptags, \"helptags\", ex_helptags,",
          "645:    NEEDARG|FILES|TRLBAR|CMDWIN,",
          "647: EX(CMD_hardcopy, \"hardcopy\", ex_hardcopy,",
          "648:    RANGE|COUNT|EXTRA|TRLBAR|DFLALL|BANG,",
          "650: EX(CMD_highlight, \"highlight\", ex_highlight,",
          "651:    BANG|EXTRA|TRLBAR|SBOXOK|CMDWIN,",
          "653: EX(CMD_hide,  \"hide\",  ex_hide,",
          "654:    BANG|RANGE|COUNT|EXTRA|TRLBAR,",
          "656: EX(CMD_history,  \"history\", ex_history,",
          "657:    EXTRA|TRLBAR|CMDWIN,",
          "659: EX(CMD_insert,  \"insert\", ex_append,",
          "660:    BANG|RANGE|TRLBAR|CMDWIN|MODIFY,",
          "662: EX(CMD_iabbrev,  \"iabbrev\", ex_abbreviate,",
          "663:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "665: EX(CMD_iabclear, \"iabclear\", ex_abclear,",
          "666:    EXTRA|TRLBAR|CMDWIN,",
          "668: EX(CMD_if,  \"if\",  ex_if,",
          "669:    EXTRA|NOTRLCOM|SBOXOK|CMDWIN,",
          "671: EX(CMD_ijump,  \"ijump\", ex_findpat,",
          "672:    BANG|RANGE|DFLALL|WHOLEFOLD|EXTRA,",
          "674: EX(CMD_ilist,  \"ilist\", ex_findpat,",
          "675:    BANG|RANGE|DFLALL|WHOLEFOLD|EXTRA|CMDWIN,",
          "677: EX(CMD_imap,  \"imap\",  ex_map,",
          "678:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "680: EX(CMD_imapclear, \"imapclear\", ex_mapclear,",
          "681:    EXTRA|TRLBAR|CMDWIN,",
          "683: EX(CMD_imenu,  \"imenu\", ex_menu,",
          "684:    RANGE|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "686: EX(CMD_inoremap, \"inoremap\", ex_map,",
          "687:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "689: EX(CMD_inoreabbrev, \"inoreabbrev\", ex_abbreviate,",
          "690:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "692: EX(CMD_inoremenu, \"inoremenu\", ex_menu,",
          "693:    RANGE|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "695: EX(CMD_intro,  \"intro\", ex_intro,",
          "696:    TRLBAR|CMDWIN,",
          "698: EX(CMD_isearch,  \"isearch\", ex_findpat,",
          "699:    BANG|RANGE|DFLALL|WHOLEFOLD|EXTRA|CMDWIN,",
          "701: EX(CMD_isplit,  \"isplit\", ex_findpat,",
          "702:    BANG|RANGE|DFLALL|WHOLEFOLD|EXTRA,",
          "704: EX(CMD_iunmap,  \"iunmap\", ex_unmap,",
          "705:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "707: EX(CMD_iunabbrev, \"iunabbrev\", ex_abbreviate,",
          "708:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "710: EX(CMD_iunmenu,  \"iunmenu\", ex_menu,",
          "711:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "713: EX(CMD_join,  \"join\",  ex_join,",
          "714:    BANG|RANGE|WHOLEFOLD|COUNT|EXFLAGS|TRLBAR|CMDWIN|MODIFY,",
          "716: EX(CMD_jumps,  \"jumps\", ex_jumps,",
          "717:    TRLBAR|CMDWIN,",
          "719: EX(CMD_k,  \"k\",  ex_mark,",
          "720:    RANGE|WORD1|TRLBAR|SBOXOK|CMDWIN,",
          "722: EX(CMD_keepmarks, \"keepmarks\", ex_wrongmodifier,",
          "723:    NEEDARG|EXTRA|NOTRLCOM,",
          "725: EX(CMD_keepjumps, \"keepjumps\", ex_wrongmodifier,",
          "726:    NEEDARG|EXTRA|NOTRLCOM,",
          "728: EX(CMD_keeppatterns, \"keeppatterns\", ex_wrongmodifier,",
          "729:    NEEDARG|EXTRA|NOTRLCOM,",
          "731: EX(CMD_keepalt,  \"keepalt\", ex_wrongmodifier,",
          "732:    NEEDARG|EXTRA|NOTRLCOM,",
          "734: EX(CMD_list,  \"list\",  ex_print,",
          "735:    RANGE|WHOLEFOLD|COUNT|EXFLAGS|TRLBAR|CMDWIN,",
          "737: EX(CMD_lNext,  \"lNext\", ex_cnext,",
          "738:    RANGE|COUNT|TRLBAR|BANG,",
          "740: EX(CMD_lNfile,  \"lNfile\", ex_cnext,",
          "741:    RANGE|COUNT|TRLBAR|BANG,",
          "743: EX(CMD_last,  \"last\",  ex_last,",
          "744:    EXTRA|BANG|EDITCMD|ARGOPT|TRLBAR,",
          "746: EX(CMD_labove,  \"labove\", ex_cbelow,",
          "747:    RANGE|COUNT|TRLBAR,",
          "749: EX(CMD_language, \"language\", ex_language,",
          "750:    EXTRA|TRLBAR|CMDWIN,",
          "752: EX(CMD_laddexpr, \"laddexpr\", ex_cexpr,",
          "753:    NEEDARG|WORD1|NOTRLCOM|TRLBAR,",
          "755: EX(CMD_laddbuffer, \"laddbuffer\", ex_cbuffer,",
          "756:    RANGE|WORD1|TRLBAR,",
          "758: EX(CMD_laddfile, \"laddfile\", ex_cfile,",
          "759:    TRLBAR|FILE1,",
          "761: EX(CMD_lafter,  \"lafter\", ex_cbelow,",
          "762:    RANGE|COUNT|TRLBAR,",
          "764: EX(CMD_later,  \"later\", ex_later,",
          "765:    TRLBAR|EXTRA|NOSPC|CMDWIN,",
          "767: EX(CMD_lbuffer,  \"lbuffer\", ex_cbuffer,",
          "768:    BANG|RANGE|WORD1|TRLBAR,",
          "770: EX(CMD_lbefore,  \"lbefore\", ex_cbelow,",
          "771:    RANGE|COUNT|TRLBAR,",
          "773: EX(CMD_lbelow,  \"lbelow\", ex_cbelow,",
          "774:    RANGE|COUNT|TRLBAR,",
          "776: EX(CMD_lbottom,  \"lbottom\", ex_cbottom,",
          "777:    TRLBAR,",
          "779: EX(CMD_lcd,  \"lcd\",  ex_cd,",
          "780:    BANG|FILE1|TRLBAR|CMDWIN,",
          "782: EX(CMD_lchdir,  \"lchdir\", ex_cd,",
          "783:    BANG|FILE1|TRLBAR|CMDWIN,",
          "785: EX(CMD_lclose,  \"lclose\", ex_cclose,",
          "786:    RANGE|COUNT|TRLBAR,",
          "788: EX(CMD_lcscope,  \"lcscope\", ex_cscope,",
          "789:    EXTRA|NOTRLCOM|XFILE,",
          "791: EX(CMD_ldo,  \"ldo\",  ex_listdo,",
          "792:    BANG|NEEDARG|EXTRA|NOTRLCOM|RANGE|DFLALL,",
          "794: EX(CMD_left,  \"left\",  ex_align,",
          "795:    TRLBAR|RANGE|WHOLEFOLD|EXTRA|CMDWIN|MODIFY,",
          "797: EX(CMD_leftabove, \"leftabove\", ex_wrongmodifier,",
          "798:    NEEDARG|EXTRA|NOTRLCOM,",
          "800: EX(CMD_let,  \"let\",  ex_let,",
          "801:    EXTRA|NOTRLCOM|SBOXOK|CMDWIN,",
          "803: EX(CMD_lexpr,  \"lexpr\", ex_cexpr,",
          "804:    NEEDARG|WORD1|NOTRLCOM|TRLBAR|BANG,",
          "806: EX(CMD_lfile,  \"lfile\", ex_cfile,",
          "807:    TRLBAR|FILE1|BANG,",
          "809: EX(CMD_lfdo,  \"lfdo\",  ex_listdo,",
          "810:    BANG|NEEDARG|EXTRA|NOTRLCOM|RANGE|DFLALL,",
          "812: EX(CMD_lfirst,  \"lfirst\", ex_cc,",
          "813:    RANGE|COUNT|TRLBAR|BANG,",
          "815: EX(CMD_lgetfile, \"lgetfile\", ex_cfile,",
          "816:    TRLBAR|FILE1,",
          "818: EX(CMD_lgetbuffer, \"lgetbuffer\", ex_cbuffer,",
          "819:    RANGE|WORD1|TRLBAR,",
          "821: EX(CMD_lgetexpr, \"lgetexpr\", ex_cexpr,",
          "822:    NEEDARG|WORD1|NOTRLCOM|TRLBAR,",
          "824: EX(CMD_lgrep,  \"lgrep\", ex_make,",
          "825:    RANGE|BANG|NEEDARG|EXTRA|NOTRLCOM|TRLBAR|XFILE,",
          "827: EX(CMD_lgrepadd, \"lgrepadd\", ex_make,",
          "828:    RANGE|BANG|NEEDARG|EXTRA|NOTRLCOM|TRLBAR|XFILE,",
          "830: EX(CMD_lhelpgrep, \"lhelpgrep\", ex_helpgrep,",
          "831:    EXTRA|NOTRLCOM|NEEDARG,",
          "833: EX(CMD_lhistory, \"lhistory\", qf_history,",
          "834:    RANGE|COUNT|TRLBAR,",
          "836: EX(CMD_ll,  \"ll\",  ex_cc,",
          "837:    RANGE|COUNT|TRLBAR|BANG,",
          "839: EX(CMD_llast,  \"llast\", ex_cc,",
          "840:    RANGE|COUNT|TRLBAR|BANG,",
          "842: EX(CMD_llist,  \"llist\", qf_list,",
          "843:    BANG|EXTRA|TRLBAR|CMDWIN,",
          "845: EX(CMD_lmap,  \"lmap\",  ex_map,",
          "846:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "848: EX(CMD_lmapclear, \"lmapclear\", ex_mapclear,",
          "849:    EXTRA|TRLBAR|CMDWIN,",
          "851: EX(CMD_lmake,  \"lmake\", ex_make,",
          "852:    BANG|EXTRA|NOTRLCOM|TRLBAR|XFILE,",
          "854: EX(CMD_lnoremap, \"lnoremap\", ex_map,",
          "855:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "857: EX(CMD_lnext,  \"lnext\", ex_cnext,",
          "858:    RANGE|COUNT|TRLBAR|BANG,",
          "860: EX(CMD_lnewer,  \"lnewer\", qf_age,",
          "861:    RANGE|COUNT|TRLBAR,",
          "863: EX(CMD_lnfile,  \"lnfile\", ex_cnext,",
          "864:    RANGE|COUNT|TRLBAR|BANG,",
          "866: EX(CMD_loadview, \"loadview\", ex_loadview,",
          "867:    FILE1|TRLBAR,",
          "869: EX(CMD_loadkeymap, \"loadkeymap\", ex_loadkeymap,",
          "870:    CMDWIN,",
          "872: EX(CMD_lockmarks, \"lockmarks\", ex_wrongmodifier,",
          "873:    NEEDARG|EXTRA|NOTRLCOM,",
          "875: EX(CMD_lockvar,  \"lockvar\", ex_lockvar,",
          "876:    BANG|EXTRA|NEEDARG|SBOXOK|CMDWIN,",
          "878: EX(CMD_lolder,  \"lolder\", qf_age,",
          "879:    RANGE|COUNT|TRLBAR,",
          "881: EX(CMD_lopen,  \"lopen\", ex_copen,",
          "882:    RANGE|COUNT|TRLBAR,",
          "884: EX(CMD_lprevious, \"lprevious\", ex_cnext,",
          "885:    RANGE|COUNT|TRLBAR|BANG,",
          "887: EX(CMD_lpfile,  \"lpfile\", ex_cnext,",
          "888:    RANGE|COUNT|TRLBAR|BANG,",
          "890: EX(CMD_lrewind,  \"lrewind\", ex_cc,",
          "891:    RANGE|COUNT|TRLBAR|BANG,",
          "893: EX(CMD_ltag,  \"ltag\", ex_tag,",
          "894:    TRLBAR|BANG|WORD1,",
          "896: EX(CMD_lunmap,  \"lunmap\", ex_unmap,",
          "897:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "899: EX(CMD_lua,  \"lua\",  ex_lua,",
          "900:    RANGE|EXTRA|NEEDARG|CMDWIN|RESTRICT,",
          "902: EX(CMD_luado,  \"luado\", ex_luado,",
          "903:    RANGE|DFLALL|EXTRA|NEEDARG|CMDWIN|RESTRICT,",
          "905: EX(CMD_luafile,  \"luafile\", ex_luafile,",
          "906:    RANGE|FILE1|NEEDARG|CMDWIN|RESTRICT,",
          "908: EX(CMD_lvimgrep, \"lvimgrep\", ex_vimgrep,",
          "909:    RANGE|BANG|NEEDARG|EXTRA|NOTRLCOM|TRLBAR|XFILE,",
          "911: EX(CMD_lvimgrepadd, \"lvimgrepadd\", ex_vimgrep,",
          "912:    RANGE|BANG|NEEDARG|EXTRA|NOTRLCOM|TRLBAR|XFILE,",
          "914: EX(CMD_lwindow,  \"lwindow\", ex_cwindow,",
          "915:    RANGE|COUNT|TRLBAR,",
          "917: EX(CMD_ls,  \"ls\",  buflist_list,",
          "918:    BANG|EXTRA|TRLBAR|CMDWIN,",
          "920: EX(CMD_move,  \"move\",  ex_copymove,",
          "921:    RANGE|WHOLEFOLD|EXTRA|TRLBAR|CMDWIN|MODIFY,",
          "923: EX(CMD_mark,  \"mark\",  ex_mark,",
          "924:    RANGE|WORD1|TRLBAR|SBOXOK|CMDWIN,",
          "926: EX(CMD_make,  \"make\",  ex_make,",
          "927:    BANG|EXTRA|NOTRLCOM|TRLBAR|XFILE,",
          "929: EX(CMD_map,  \"map\",  ex_map,",
          "930:    BANG|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "932: EX(CMD_mapclear, \"mapclear\", ex_mapclear,",
          "933:    EXTRA|BANG|TRLBAR|CMDWIN,",
          "935: EX(CMD_marks,  \"marks\", do_marks,",
          "936:    EXTRA|TRLBAR|CMDWIN,",
          "938: EX(CMD_match,  \"match\", ex_match,",
          "939:    RANGE|EXTRA|CMDWIN,",
          "941: EX(CMD_menu,  \"menu\",  ex_menu,",
          "942:    RANGE|ZEROR|BANG|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "944: EX(CMD_menutranslate, \"menutranslate\", ex_menutranslate,",
          "945:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "947: EX(CMD_messages, \"messages\", ex_messages,",
          "948:    EXTRA|TRLBAR|RANGE|CMDWIN,",
          "950: EX(CMD_mkexrc,  \"mkexrc\", ex_mkrc,",
          "951:    BANG|FILE1|TRLBAR|CMDWIN,",
          "953: EX(CMD_mksession, \"mksession\", ex_mkrc,",
          "954:    BANG|FILE1|TRLBAR,",
          "956: EX(CMD_mkspell,  \"mkspell\", ex_mkspell,",
          "957:    BANG|NEEDARG|EXTRA|NOTRLCOM|TRLBAR|XFILE,",
          "959: EX(CMD_mkvimrc,  \"mkvimrc\", ex_mkrc,",
          "960:    BANG|FILE1|TRLBAR|CMDWIN,",
          "962: EX(CMD_mkview,  \"mkview\", ex_mkrc,",
          "963:    BANG|FILE1|TRLBAR,",
          "965: EX(CMD_mode,  \"mode\",  ex_mode,",
          "966:    WORD1|TRLBAR|CMDWIN,",
          "968: EX(CMD_mzscheme, \"mzscheme\", ex_mzscheme,",
          "969:    RANGE|EXTRA|DFLALL|NEEDARG|CMDWIN|SBOXOK|RESTRICT,",
          "971: EX(CMD_mzfile,  \"mzfile\", ex_mzfile,",
          "972:    RANGE|FILE1|NEEDARG|CMDWIN|RESTRICT,",
          "974: EX(CMD_next,  \"next\",  ex_next,",
          "975:    RANGE|BANG|FILES|EDITCMD|ARGOPT|TRLBAR,",
          "977: EX(CMD_nbkey,  \"nbkey\", ex_nbkey,",
          "978:    EXTRA|NEEDARG,",
          "980: EX(CMD_nbclose,  \"nbclose\", ex_nbclose,",
          "981:    TRLBAR|CMDWIN,",
          "983: EX(CMD_nbstart,  \"nbstart\", ex_nbstart,",
          "984:    WORD1|TRLBAR|CMDWIN,",
          "986: EX(CMD_new,  \"new\",  ex_splitview,",
          "987:    BANG|FILE1|RANGE|EDITCMD|ARGOPT|TRLBAR,",
          "989: EX(CMD_nmap,  \"nmap\",  ex_map,",
          "990:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "992: EX(CMD_nmapclear, \"nmapclear\", ex_mapclear,",
          "993:    EXTRA|TRLBAR|CMDWIN,",
          "995: EX(CMD_nmenu,  \"nmenu\", ex_menu,",
          "996:    RANGE|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "998: EX(CMD_nnoremap, \"nnoremap\", ex_map,",
          "999:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1001: EX(CMD_nnoremenu, \"nnoremenu\", ex_menu,",
          "1002:    RANGE|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1004: EX(CMD_noremap,  \"noremap\", ex_map,",
          "1005:    BANG|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1007: EX(CMD_noautocmd, \"noautocmd\", ex_wrongmodifier,",
          "1008:    NEEDARG|EXTRA|NOTRLCOM,",
          "1010: EX(CMD_nohlsearch, \"nohlsearch\", ex_nohlsearch,",
          "1011:    TRLBAR|SBOXOK|CMDWIN,",
          "1013: EX(CMD_noreabbrev, \"noreabbrev\", ex_abbreviate,",
          "1014:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1016: EX(CMD_noremenu, \"noremenu\", ex_menu,",
          "1017:    RANGE|ZEROR|BANG|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1019: EX(CMD_noswapfile, \"noswapfile\", ex_wrongmodifier,",
          "1020:    NEEDARG|EXTRA|NOTRLCOM,",
          "1022: EX(CMD_normal,  \"normal\", ex_normal,",
          "1023:    RANGE|BANG|EXTRA|NEEDARG|NOTRLCOM|USECTRLV|SBOXOK|CMDWIN,",
          "1025: EX(CMD_number,  \"number\", ex_print,",
          "1026:    RANGE|WHOLEFOLD|COUNT|EXFLAGS|TRLBAR|CMDWIN,",
          "1028: EX(CMD_nunmap,  \"nunmap\", ex_unmap,",
          "1029:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1031: EX(CMD_nunmenu,  \"nunmenu\", ex_menu,",
          "1032:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1034: EX(CMD_open,  \"open\",  ex_open,",
          "1035:    RANGE|BANG|EXTRA,",
          "1037: EX(CMD_oldfiles, \"oldfiles\", ex_oldfiles,",
          "1038:    BANG|TRLBAR|SBOXOK|CMDWIN,",
          "1040: EX(CMD_omap,  \"omap\",  ex_map,",
          "1041:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1043: EX(CMD_omapclear, \"omapclear\", ex_mapclear,",
          "1044:    EXTRA|TRLBAR|CMDWIN,",
          "1046: EX(CMD_omenu,  \"omenu\", ex_menu,",
          "1047:    RANGE|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1049: EX(CMD_only,  \"only\",  ex_only,",
          "1050:    BANG|RANGE|COUNT|TRLBAR,",
          "1052: EX(CMD_onoremap, \"onoremap\", ex_map,",
          "1053:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1055: EX(CMD_onoremenu, \"onoremenu\", ex_menu,",
          "1056:    RANGE|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1058: EX(CMD_options,  \"options\", ex_options,",
          "1059:    TRLBAR,",
          "1061: EX(CMD_ounmap,  \"ounmap\", ex_unmap,",
          "1062:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1064: EX(CMD_ounmenu,  \"ounmenu\", ex_menu,",
          "1065:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1067: EX(CMD_ownsyntax, \"ownsyntax\", ex_ownsyntax,",
          "1068:    EXTRA|NOTRLCOM|SBOXOK|CMDWIN,",
          "1070: EX(CMD_print,  \"print\", ex_print,",
          "1071:    RANGE|WHOLEFOLD|COUNT|EXFLAGS|TRLBAR|CMDWIN|SBOXOK,",
          "1073: EX(CMD_packadd,  \"packadd\", ex_packadd,",
          "1074:    BANG|FILE1|NEEDARG|TRLBAR|SBOXOK|CMDWIN,",
          "1076: EX(CMD_packloadall, \"packloadall\", ex_packloadall,",
          "1077:    BANG|TRLBAR|SBOXOK|CMDWIN,",
          "1079: EX(CMD_pclose,  \"pclose\", ex_pclose,",
          "1080:    BANG|TRLBAR,",
          "1082: EX(CMD_perl,  \"perl\",  ex_perl,",
          "1083:    RANGE|EXTRA|DFLALL|NEEDARG|SBOXOK|CMDWIN,",
          "1085: EX(CMD_perldo,  \"perldo\", ex_perldo,",
          "1086:    RANGE|EXTRA|DFLALL|NEEDARG|CMDWIN,",
          "1088: EX(CMD_pedit,  \"pedit\", ex_pedit,",
          "1089:    BANG|FILE1|EDITCMD|ARGOPT|TRLBAR,",
          "1091: EX(CMD_pop,  \"pop\",  ex_tag,",
          "1092:    RANGE|BANG|COUNT|TRLBAR|ZEROR,",
          "1094: EX(CMD_popup,  \"popup\", ex_popup,",
          "1095:    NEEDARG|EXTRA|BANG|TRLBAR|NOTRLCOM|CMDWIN,",
          "1097: EX(CMD_ppop,  \"ppop\",  ex_ptag,",
          "1098:    RANGE|BANG|COUNT|TRLBAR|ZEROR,",
          "1100: EX(CMD_preserve, \"preserve\", ex_preserve,",
          "1101:    TRLBAR,",
          "1103: EX(CMD_previous, \"previous\", ex_previous,",
          "1104:    EXTRA|RANGE|COUNT|BANG|EDITCMD|ARGOPT|TRLBAR,",
          "1106: EX(CMD_promptfind, \"promptfind\", gui_mch_find_dialog,",
          "1107:    EXTRA|NOTRLCOM|CMDWIN,",
          "1109: EX(CMD_promptrepl, \"promptrepl\", gui_mch_replace_dialog,",
          "1110:    EXTRA|NOTRLCOM|CMDWIN,",
          "1112: EX(CMD_profile,  \"profile\", ex_profile,",
          "1113:    BANG|EXTRA|TRLBAR|CMDWIN,",
          "1115: EX(CMD_profdel,  \"profdel\", ex_breakdel,",
          "1116:    EXTRA|TRLBAR|CMDWIN,",
          "1118: EX(CMD_psearch,  \"psearch\", ex_psearch,",
          "1119:    BANG|RANGE|WHOLEFOLD|DFLALL|EXTRA,",
          "1121: EX(CMD_ptag,  \"ptag\",  ex_ptag,",
          "1122:    RANGE|BANG|WORD1|TRLBAR|ZEROR,",
          "1124: EX(CMD_ptNext,  \"ptNext\", ex_ptag,",
          "1125:    RANGE|BANG|TRLBAR|ZEROR,",
          "1127: EX(CMD_ptfirst,  \"ptfirst\", ex_ptag,",
          "1128:    RANGE|BANG|TRLBAR|ZEROR,",
          "1130: EX(CMD_ptjump,  \"ptjump\", ex_ptag,",
          "1131:    BANG|TRLBAR|WORD1,",
          "1133: EX(CMD_ptlast,  \"ptlast\", ex_ptag,",
          "1134:    BANG|TRLBAR,",
          "1136: EX(CMD_ptnext,  \"ptnext\", ex_ptag,",
          "1137:    RANGE|BANG|TRLBAR|ZEROR,",
          "1139: EX(CMD_ptprevious, \"ptprevious\", ex_ptag,",
          "1140:    RANGE|BANG|TRLBAR|ZEROR,",
          "1142: EX(CMD_ptrewind, \"ptrewind\", ex_ptag,",
          "1143:    RANGE|BANG|TRLBAR|ZEROR,",
          "1145: EX(CMD_ptselect, \"ptselect\", ex_ptag,",
          "1146:    BANG|TRLBAR|WORD1,",
          "1148: EX(CMD_put,  \"put\",  ex_put,",
          "1149:    RANGE|WHOLEFOLD|BANG|REGSTR|TRLBAR|ZEROR|CMDWIN|MODIFY,",
          "1151: EX(CMD_pwd,  \"pwd\",  ex_pwd,",
          "1152:    TRLBAR|CMDWIN,",
          "1154: EX(CMD_python,  \"python\", ex_python,",
          "1155:    RANGE|EXTRA|NEEDARG|CMDWIN|RESTRICT,",
          "1157: EX(CMD_pydo,  \"pydo\",  ex_pydo,",
          "1158:    RANGE|DFLALL|EXTRA|NEEDARG|CMDWIN|RESTRICT,",
          "1160: EX(CMD_pyfile,  \"pyfile\", ex_pyfile,",
          "1161:    RANGE|FILE1|NEEDARG|CMDWIN|RESTRICT,",
          "1163: EX(CMD_py3,  \"py3\",  ex_py3,",
          "1164:    RANGE|EXTRA|NEEDARG|CMDWIN|RESTRICT,",
          "1166: EX(CMD_py3do,  \"py3do\", ex_py3do,",
          "1167:    RANGE|DFLALL|EXTRA|NEEDARG|CMDWIN|RESTRICT,",
          "1169: EX(CMD_python3,  \"python3\", ex_py3,",
          "1170:    RANGE|EXTRA|NEEDARG|CMDWIN|RESTRICT,",
          "1172: EX(CMD_py3file,  \"py3file\", ex_py3file,",
          "1173:    RANGE|FILE1|NEEDARG|CMDWIN|RESTRICT,",
          "1175: EX(CMD_pyx,  \"pyx\",  ex_pyx,",
          "1176:    RANGE|EXTRA|NEEDARG|CMDWIN|RESTRICT,",
          "1178: EX(CMD_pyxdo,  \"pyxdo\", ex_pyxdo,",
          "1179:    RANGE|DFLALL|EXTRA|NEEDARG|CMDWIN|RESTRICT,",
          "1181: EX(CMD_pythonx,  \"pythonx\", ex_pyx,",
          "1182:    RANGE|EXTRA|NEEDARG|CMDWIN|RESTRICT,",
          "1184: EX(CMD_pyxfile,  \"pyxfile\", ex_pyxfile,",
          "1185:    RANGE|FILE1|NEEDARG|CMDWIN|RESTRICT,",
          "1187: EX(CMD_quit,  \"quit\",  ex_quit,",
          "1188:    BANG|RANGE|COUNT|TRLBAR|CMDWIN,",
          "1190: EX(CMD_quitall,  \"quitall\", ex_quit_all,",
          "1191:    BANG|TRLBAR,",
          "1193: EX(CMD_qall,  \"qall\",  ex_quit_all,",
          "1194:    BANG|TRLBAR|CMDWIN,",
          "1196: EX(CMD_read,  \"read\",  ex_read,",
          "1197:    BANG|RANGE|WHOLEFOLD|FILE1|ARGOPT|TRLBAR|ZEROR|CMDWIN|MODIFY,",
          "1199: EX(CMD_recover,  \"recover\", ex_recover,",
          "1200:    BANG|FILE1|TRLBAR,",
          "1202: EX(CMD_redo,  \"redo\",  ex_redo,",
          "1203:    TRLBAR|CMDWIN,",
          "1205: EX(CMD_redir,  \"redir\", ex_redir,",
          "1206:    BANG|FILES|TRLBAR|CMDWIN,",
          "1208: EX(CMD_redraw,  \"redraw\", ex_redraw,",
          "1209:    BANG|TRLBAR|CMDWIN,",
          "1211: EX(CMD_redrawstatus, \"redrawstatus\", ex_redrawstatus,",
          "1212:    BANG|TRLBAR|CMDWIN,",
          "1214: EX(CMD_redrawtabline, \"redrawtabline\", ex_redrawtabline,",
          "1215:    TRLBAR|CMDWIN,",
          "1217: EX(CMD_registers, \"registers\", ex_display,",
          "1218:    EXTRA|NOTRLCOM|TRLBAR|CMDWIN,",
          "1220: EX(CMD_resize,  \"resize\", ex_resize,",
          "1221:    RANGE|TRLBAR|WORD1|CMDWIN,",
          "1223: EX(CMD_retab,  \"retab\", ex_retab,",
          "1224:    TRLBAR|RANGE|WHOLEFOLD|DFLALL|BANG|WORD1|CMDWIN|MODIFY,",
          "1226: EX(CMD_return,  \"return\", ex_return,",
          "1227:    EXTRA|NOTRLCOM|SBOXOK|CMDWIN,",
          "1229: EX(CMD_rewind,  \"rewind\", ex_rewind,",
          "1230:    EXTRA|BANG|EDITCMD|ARGOPT|TRLBAR,",
          "1232: EX(CMD_right,  \"right\", ex_align,",
          "1233:    TRLBAR|RANGE|WHOLEFOLD|EXTRA|CMDWIN|MODIFY,",
          "1235: EX(CMD_rightbelow, \"rightbelow\", ex_wrongmodifier,",
          "1236:    NEEDARG|EXTRA|NOTRLCOM,",
          "1238: EX(CMD_runtime,  \"runtime\", ex_runtime,",
          "1239:    BANG|NEEDARG|FILES|TRLBAR|SBOXOK|CMDWIN,",
          "1241: EX(CMD_ruby,  \"ruby\",  ex_ruby,",
          "1242:    RANGE|EXTRA|NEEDARG|CMDWIN|RESTRICT,",
          "1244: EX(CMD_rubydo,  \"rubydo\", ex_rubydo,",
          "1245:    RANGE|DFLALL|EXTRA|NEEDARG|CMDWIN|RESTRICT,",
          "1247: EX(CMD_rubyfile, \"rubyfile\", ex_rubyfile,",
          "1248:    RANGE|FILE1|NEEDARG|CMDWIN|RESTRICT,",
          "1250: EX(CMD_rundo,  \"rundo\", ex_rundo,",
          "1251:    NEEDARG|FILE1,",
          "1253: EX(CMD_rviminfo, \"rviminfo\", ex_viminfo,",
          "1254:    BANG|FILE1|TRLBAR|CMDWIN,",
          "1256: EX(CMD_substitute, \"substitute\", do_sub,",
          "1257:    RANGE|WHOLEFOLD|EXTRA|CMDWIN,",
          "1259: EX(CMD_sNext,  \"sNext\", ex_previous,",
          "1260:    EXTRA|RANGE|COUNT|BANG|EDITCMD|ARGOPT|TRLBAR,",
          "1262: EX(CMD_sargument, \"sargument\", ex_argument,",
          "1263:    BANG|RANGE|COUNT|EXTRA|EDITCMD|ARGOPT|TRLBAR,",
          "1265: EX(CMD_sall,  \"sall\",  ex_all,",
          "1266:    BANG|RANGE|COUNT|TRLBAR,",
          "1268: EX(CMD_sandbox,  \"sandbox\", ex_wrongmodifier,",
          "1269:    NEEDARG|EXTRA|NOTRLCOM,",
          "1271: EX(CMD_saveas,  \"saveas\", ex_write,",
          "1272:    BANG|FILE1|ARGOPT|CMDWIN|TRLBAR,",
          "1274: EX(CMD_sbuffer,  \"sbuffer\", ex_buffer,",
          "1275:    BANG|RANGE|BUFNAME|BUFUNL|COUNT|EXTRA|EDITCMD|TRLBAR,",
          "1277: EX(CMD_sbNext,  \"sbNext\", ex_bprevious,",
          "1278:    RANGE|COUNT|EDITCMD|TRLBAR,",
          "1280: EX(CMD_sball,  \"sball\", ex_buffer_all,",
          "1281:    RANGE|COUNT|EDITCMD|TRLBAR,",
          "1283: EX(CMD_sbfirst,  \"sbfirst\", ex_brewind,",
          "1284:    EDITCMD|TRLBAR,",
          "1286: EX(CMD_sblast,  \"sblast\", ex_blast,",
          "1287:    EDITCMD|TRLBAR,",
          "1289: EX(CMD_sbmodified, \"sbmodified\", ex_bmodified,",
          "1290:    RANGE|COUNT|EDITCMD|TRLBAR,",
          "1292: EX(CMD_sbnext,  \"sbnext\", ex_bnext,",
          "1293:    RANGE|COUNT|EDITCMD|TRLBAR,",
          "1295: EX(CMD_sbprevious, \"sbprevious\", ex_bprevious,",
          "1296:    RANGE|COUNT|EDITCMD|TRLBAR,",
          "1298: EX(CMD_sbrewind, \"sbrewind\", ex_brewind,",
          "1299:    EDITCMD|TRLBAR,",
          "1301: EX(CMD_scriptnames, \"scriptnames\", ex_scriptnames,",
          "1302:    BANG|RANGE|COUNT|TRLBAR|CMDWIN,",
          "1304: EX(CMD_scriptencoding, \"scriptencoding\", ex_scriptencoding,",
          "1305:    WORD1|TRLBAR|CMDWIN,",
          "1307: EX(CMD_scriptversion, \"scriptversion\", ex_scriptversion,",
          "1308:    WORD1|TRLBAR|CMDWIN,",
          "1310: EX(CMD_scscope,  \"scscope\", ex_scscope,",
          "1311:    EXTRA|NOTRLCOM,",
          "1313: EX(CMD_set,  \"set\",  ex_set,",
          "1314:    TRLBAR|EXTRA|CMDWIN|SBOXOK,",
          "1316: EX(CMD_setfiletype, \"setfiletype\", ex_setfiletype,",
          "1317:    TRLBAR|EXTRA|NEEDARG|CMDWIN,",
          "1319: EX(CMD_setglobal, \"setglobal\", ex_set,",
          "1320:    TRLBAR|EXTRA|CMDWIN|SBOXOK,",
          "1322: EX(CMD_setlocal, \"setlocal\", ex_set,",
          "1323:    TRLBAR|EXTRA|CMDWIN|SBOXOK,",
          "1325: EX(CMD_sfind,  \"sfind\", ex_splitview,",
          "1326:    BANG|FILE1|RANGE|EDITCMD|ARGOPT|TRLBAR,",
          "1328: EX(CMD_sfirst,  \"sfirst\", ex_rewind,",
          "1329:    EXTRA|BANG|EDITCMD|ARGOPT|TRLBAR,",
          "1331: EX(CMD_shell,  \"shell\", ex_shell,",
          "1332:    TRLBAR|CMDWIN,",
          "1334: EX(CMD_simalt,  \"simalt\", ex_simalt,",
          "1335:    NEEDARG|WORD1|TRLBAR|CMDWIN,",
          "1337: EX(CMD_sign,  \"sign\",  ex_sign,",
          "1338:    NEEDARG|RANGE|EXTRA|CMDWIN,",
          "1340: EX(CMD_silent,  \"silent\", ex_wrongmodifier,",
          "1341:    NEEDARG|EXTRA|BANG|NOTRLCOM|SBOXOK|CMDWIN,",
          "1343: EX(CMD_sleep,  \"sleep\", ex_sleep,",
          "1344:    RANGE|COUNT|EXTRA|TRLBAR|CMDWIN,",
          "1346: EX(CMD_slast,  \"slast\", ex_last,",
          "1347:    EXTRA|BANG|EDITCMD|ARGOPT|TRLBAR,",
          "1349: EX(CMD_smagic,  \"smagic\", ex_submagic,",
          "1350:    RANGE|WHOLEFOLD|EXTRA|CMDWIN,",
          "1352: EX(CMD_smap,  \"smap\",  ex_map,",
          "1353:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1355: EX(CMD_smapclear, \"smapclear\", ex_mapclear,",
          "1356:    EXTRA|TRLBAR|CMDWIN,",
          "1358: EX(CMD_smenu,  \"smenu\", ex_menu,",
          "1359:    RANGE|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1361: EX(CMD_snext,  \"snext\", ex_next,",
          "1362:    RANGE|BANG|FILES|EDITCMD|ARGOPT|TRLBAR,",
          "1364: EX(CMD_snomagic, \"snomagic\", ex_submagic,",
          "1365:    RANGE|WHOLEFOLD|EXTRA|CMDWIN,",
          "1367: EX(CMD_snoremap, \"snoremap\", ex_map,",
          "1368:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1370: EX(CMD_snoremenu, \"snoremenu\", ex_menu,",
          "1371:    RANGE|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1373: EX(CMD_source,  \"source\", ex_source,",
          "1374:    BANG|FILE1|TRLBAR|SBOXOK|CMDWIN,",
          "1376: EX(CMD_sort,  \"sort\",  ex_sort,",
          "1377:    RANGE|DFLALL|WHOLEFOLD|BANG|EXTRA|NOTRLCOM|MODIFY,",
          "1379: EX(CMD_split,  \"split\", ex_splitview,",
          "1380:    BANG|FILE1|RANGE|EDITCMD|ARGOPT|TRLBAR,",
          "1382: EX(CMD_spellgood, \"spellgood\", ex_spell,",
          "1383:    BANG|RANGE|NEEDARG|EXTRA|TRLBAR,",
          "1385: EX(CMD_spelldump, \"spelldump\", ex_spelldump,",
          "1386:    BANG|TRLBAR,",
          "1388: EX(CMD_spellinfo, \"spellinfo\", ex_spellinfo,",
          "1389:    TRLBAR,",
          "1391: EX(CMD_spellrepall, \"spellrepall\", ex_spellrepall,",
          "1392:    TRLBAR,",
          "1394: EX(CMD_spellundo, \"spellundo\", ex_spell,",
          "1395:    BANG|RANGE|NEEDARG|EXTRA|TRLBAR,",
          "1397: EX(CMD_spellwrong, \"spellwrong\", ex_spell,",
          "1398:    BANG|RANGE|NEEDARG|EXTRA|TRLBAR,",
          "1400: EX(CMD_sprevious, \"sprevious\", ex_previous,",
          "1401:    EXTRA|RANGE|COUNT|BANG|EDITCMD|ARGOPT|TRLBAR,",
          "1403: EX(CMD_srewind,  \"srewind\", ex_rewind,",
          "1404:    EXTRA|BANG|EDITCMD|ARGOPT|TRLBAR,",
          "1406: EX(CMD_stop,  \"stop\",  ex_stop,",
          "1407:    TRLBAR|BANG|CMDWIN,",
          "1409: EX(CMD_stag,  \"stag\",  ex_stag,",
          "1410:    RANGE|BANG|WORD1|TRLBAR|ZEROR,",
          "1412: EX(CMD_startinsert, \"startinsert\", ex_startinsert,",
          "1413:    BANG|TRLBAR|CMDWIN,",
          "1415: EX(CMD_startgreplace, \"startgreplace\", ex_startinsert,",
          "1416:    BANG|TRLBAR|CMDWIN,",
          "1418: EX(CMD_startreplace, \"startreplace\", ex_startinsert,",
          "1419:    BANG|TRLBAR|CMDWIN,",
          "1421: EX(CMD_stopinsert, \"stopinsert\", ex_stopinsert,",
          "1422:    BANG|TRLBAR|CMDWIN,",
          "1424: EX(CMD_stjump,  \"stjump\", ex_stag,",
          "1425:    BANG|TRLBAR|WORD1,",
          "1427: EX(CMD_stselect, \"stselect\", ex_stag,",
          "1428:    BANG|TRLBAR|WORD1,",
          "1430: EX(CMD_sunhide,  \"sunhide\", ex_buffer_all,",
          "1431:    RANGE|COUNT|TRLBAR,",
          "1433: EX(CMD_sunmap,  \"sunmap\", ex_unmap,",
          "1434:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1436: EX(CMD_sunmenu,  \"sunmenu\", ex_menu,",
          "1437:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1439: EX(CMD_suspend,  \"suspend\", ex_stop,",
          "1440:    TRLBAR|BANG|CMDWIN,",
          "1442: EX(CMD_sview,  \"sview\", ex_splitview,",
          "1443:    BANG|FILE1|RANGE|EDITCMD|ARGOPT|TRLBAR,",
          "1445: EX(CMD_swapname, \"swapname\", ex_swapname,",
          "1446:    TRLBAR|CMDWIN,",
          "1448: EX(CMD_syntax,  \"syntax\", ex_syntax,",
          "1449:    EXTRA|NOTRLCOM|CMDWIN,",
          "1451: EX(CMD_syntime,  \"syntime\", ex_syntime,",
          "1452:    NEEDARG|WORD1|TRLBAR|CMDWIN,",
          "1454: EX(CMD_syncbind, \"syncbind\", ex_syncbind,",
          "1455:    TRLBAR,",
          "1457: EX(CMD_smile,  \"smile\", ex_smile,",
          "1458:    TRLBAR|CMDWIN|SBOXOK,",
          "1460: EX(CMD_t,  \"t\",  ex_copymove,",
          "1461:    RANGE|WHOLEFOLD|EXTRA|TRLBAR|CMDWIN|MODIFY,",
          "1463: EX(CMD_tNext,  \"tNext\", ex_tag,",
          "1464:    RANGE|BANG|TRLBAR|ZEROR,",
          "1466: EX(CMD_tag,  \"tag\",  ex_tag,",
          "1467:    RANGE|BANG|WORD1|TRLBAR|ZEROR,",
          "1469: EX(CMD_tags,  \"tags\",  do_tags,",
          "1470:    TRLBAR|CMDWIN,",
          "1472: EX(CMD_tab,  \"tab\",  ex_wrongmodifier,",
          "1473:    NEEDARG|EXTRA|NOTRLCOM,",
          "1475: EX(CMD_tabclose, \"tabclose\", ex_tabclose,",
          "1476:    BANG|RANGE|ZEROR|EXTRA|NOSPC|TRLBAR|CMDWIN,",
          "1478: EX(CMD_tabdo,  \"tabdo\", ex_listdo,",
          "1479:    NEEDARG|EXTRA|NOTRLCOM|RANGE|DFLALL,",
          "1481: EX(CMD_tabedit,  \"tabedit\", ex_splitview,",
          "1482:    BANG|FILE1|RANGE|ZEROR|EDITCMD|ARGOPT|TRLBAR,",
          "1484: EX(CMD_tabfind,  \"tabfind\", ex_splitview,",
          "1485:    BANG|FILE1|RANGE|ZEROR|EDITCMD|ARGOPT|NEEDARG|TRLBAR,",
          "1487: EX(CMD_tabfirst, \"tabfirst\", ex_tabnext,",
          "1488:    TRLBAR,",
          "1490: EX(CMD_tabmove,  \"tabmove\", ex_tabmove,",
          "1491:    RANGE|ZEROR|EXTRA|NOSPC|TRLBAR,",
          "1493: EX(CMD_tablast,  \"tablast\", ex_tabnext,",
          "1494:    TRLBAR,",
          "1496: EX(CMD_tabnext,  \"tabnext\", ex_tabnext,",
          "1497:    RANGE|ZEROR|EXTRA|NOSPC|TRLBAR,",
          "1499: EX(CMD_tabnew,  \"tabnew\", ex_splitview,",
          "1500:    BANG|FILE1|RANGE|ZEROR|EDITCMD|ARGOPT|TRLBAR,",
          "1502: EX(CMD_tabonly,  \"tabonly\", ex_tabonly,",
          "1503:    BANG|RANGE|ZEROR|EXTRA|NOSPC|TRLBAR|CMDWIN,",
          "1505: EX(CMD_tabprevious, \"tabprevious\", ex_tabnext,",
          "1506:    RANGE|ZEROR|EXTRA|NOSPC|TRLBAR,",
          "1508: EX(CMD_tabNext,  \"tabNext\", ex_tabnext,",
          "1509:    RANGE|ZEROR|EXTRA|NOSPC|TRLBAR,",
          "1511: EX(CMD_tabrewind, \"tabrewind\", ex_tabnext,",
          "1512:    TRLBAR,",
          "1514: EX(CMD_tabs,  \"tabs\",  ex_tabs,",
          "1515:    TRLBAR|CMDWIN,",
          "1517: EX(CMD_tcd,  \"tcd\",  ex_cd,",
          "1518:    BANG|FILE1|TRLBAR|CMDWIN,",
          "1520: EX(CMD_tchdir,  \"tchdir\", ex_cd,",
          "1521:    BANG|FILE1|TRLBAR|CMDWIN,",
          "1523: EX(CMD_tcl,  \"tcl\",  ex_tcl,",
          "1524:    RANGE|EXTRA|NEEDARG|CMDWIN|RESTRICT,",
          "1526: EX(CMD_tcldo,  \"tcldo\", ex_tcldo,",
          "1527:    RANGE|DFLALL|EXTRA|NEEDARG|CMDWIN|RESTRICT,",
          "1529: EX(CMD_tclfile,  \"tclfile\", ex_tclfile,",
          "1530:    RANGE|FILE1|NEEDARG|CMDWIN|RESTRICT,",
          "1532: EX(CMD_tearoff,  \"tearoff\", ex_tearoff,",
          "1533:    NEEDARG|EXTRA|TRLBAR|NOTRLCOM|CMDWIN,",
          "1535: EX(CMD_terminal, \"terminal\", ex_terminal,",
          "1536:    RANGE|BANG|FILES|CMDWIN,",
          "1538: EX(CMD_tfirst,  \"tfirst\", ex_tag,",
          "1539:    RANGE|BANG|TRLBAR|ZEROR,",
          "1541: EX(CMD_throw,  \"throw\", ex_throw,",
          "1542:    EXTRA|NEEDARG|SBOXOK|CMDWIN,",
          "1544: EX(CMD_tjump,  \"tjump\", ex_tag,",
          "1545:    BANG|TRLBAR|WORD1,",
          "1547: EX(CMD_tlast,  \"tlast\", ex_tag,",
          "1548:    BANG|TRLBAR,",
          "1550: EX(CMD_tlmenu,  \"tlmenu\", ex_menu,",
          "1551:    RANGE|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1553: EX(CMD_tlnoremenu, \"tlnoremenu\", ex_menu,",
          "1554:    RANGE|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1556: EX(CMD_tlunmenu, \"tlunmenu\", ex_menu,",
          "1557:    RANGE|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1559: EX(CMD_tmenu,  \"tmenu\", ex_menu,",
          "1560:    RANGE|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1562: EX(CMD_tmap,  \"tmap\",  ex_map,",
          "1563:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1565: EX(CMD_tmapclear, \"tmapclear\", ex_mapclear,",
          "1566:    EXTRA|TRLBAR|CMDWIN,",
          "1568: EX(CMD_tnext,  \"tnext\", ex_tag,",
          "1569:    RANGE|BANG|TRLBAR|ZEROR,",
          "1571: EX(CMD_tnoremap, \"tnoremap\", ex_map,",
          "1572:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1574: EX(CMD_topleft,  \"topleft\", ex_wrongmodifier,",
          "1575:    NEEDARG|EXTRA|NOTRLCOM,",
          "1577: EX(CMD_tprevious, \"tprevious\", ex_tag,",
          "1578:    RANGE|BANG|TRLBAR|ZEROR,",
          "1580: EX(CMD_trewind,  \"trewind\", ex_tag,",
          "1581:    RANGE|BANG|TRLBAR|ZEROR,",
          "1583: EX(CMD_try,  \"try\",  ex_try,",
          "1584:    TRLBAR|SBOXOK|CMDWIN,",
          "1586: EX(CMD_tselect,  \"tselect\", ex_tag,",
          "1587:    BANG|TRLBAR|WORD1,",
          "1589: EX(CMD_tunmenu,  \"tunmenu\", ex_menu,",
          "1590:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1592: EX(CMD_tunmap,  \"tunmap\", ex_unmap,",
          "1593:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1595: EX(CMD_undo,  \"undo\",  ex_undo,",
          "1596:    RANGE|COUNT|ZEROR|TRLBAR|CMDWIN,",
          "1598: EX(CMD_undojoin, \"undojoin\", ex_undojoin,",
          "1599:    TRLBAR|CMDWIN,",
          "1601: EX(CMD_undolist, \"undolist\", ex_undolist,",
          "1602:    TRLBAR|CMDWIN,",
          "1604: EX(CMD_unabbreviate, \"unabbreviate\", ex_abbreviate,",
          "1605:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1607: EX(CMD_unhide,  \"unhide\", ex_buffer_all,",
          "1608:    RANGE|COUNT|TRLBAR,",
          "1610: EX(CMD_unlet,  \"unlet\", ex_unlet,",
          "1611:    BANG|EXTRA|NEEDARG|SBOXOK|CMDWIN,",
          "1613: EX(CMD_unlockvar, \"unlockvar\", ex_lockvar,",
          "1614:    BANG|EXTRA|NEEDARG|SBOXOK|CMDWIN,",
          "1616: EX(CMD_unmap,  \"unmap\", ex_unmap,",
          "1617:    BANG|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1619: EX(CMD_unmenu,  \"unmenu\", ex_menu,",
          "1620:    BANG|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1622: EX(CMD_unsilent, \"unsilent\", ex_wrongmodifier,",
          "1623:    NEEDARG|EXTRA|NOTRLCOM|SBOXOK|CMDWIN,",
          "1625: EX(CMD_update,  \"update\", ex_update,",
          "1626:    RANGE|WHOLEFOLD|BANG|FILE1|ARGOPT|DFLALL|TRLBAR,",
          "1628: EX(CMD_vglobal,  \"vglobal\", ex_global,",
          "1629:    RANGE|WHOLEFOLD|EXTRA|DFLALL|CMDWIN,",
          "1631: EX(CMD_version,  \"version\", ex_version,",
          "1632:    EXTRA|TRLBAR|CMDWIN,",
          "1634: EX(CMD_verbose,  \"verbose\", ex_wrongmodifier,",
          "1635:    NEEDARG|RANGE|EXTRA|NOTRLCOM|SBOXOK|CMDWIN,",
          "1637: EX(CMD_vertical, \"vertical\", ex_wrongmodifier,",
          "1638:    NEEDARG|EXTRA|NOTRLCOM,",
          "1640: EX(CMD_visual,  \"visual\", ex_edit,",
          "1641:    BANG|FILE1|EDITCMD|ARGOPT|TRLBAR,",
          "1643: EX(CMD_view,  \"view\",  ex_edit,",
          "1644:    BANG|FILE1|EDITCMD|ARGOPT|TRLBAR,",
          "1646: EX(CMD_vimgrep,  \"vimgrep\", ex_vimgrep,",
          "1647:    RANGE|BANG|NEEDARG|EXTRA|NOTRLCOM|TRLBAR|XFILE,",
          "1649: EX(CMD_vimgrepadd, \"vimgrepadd\", ex_vimgrep,",
          "1650:    RANGE|BANG|NEEDARG|EXTRA|NOTRLCOM|TRLBAR|XFILE,",
          "1652: EX(CMD_viusage,  \"viusage\", ex_viusage,",
          "1653:    TRLBAR,",
          "1655: EX(CMD_vmap,  \"vmap\",  ex_map,",
          "1656:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1658: EX(CMD_vmapclear, \"vmapclear\", ex_mapclear,",
          "1659:    EXTRA|TRLBAR|CMDWIN,",
          "1661: EX(CMD_vmenu,  \"vmenu\", ex_menu,",
          "1662:    RANGE|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1664: EX(CMD_vnoremap, \"vnoremap\", ex_map,",
          "1665:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1667: EX(CMD_vnew,  \"vnew\",  ex_splitview,",
          "1668:    BANG|FILE1|RANGE|EDITCMD|ARGOPT|TRLBAR,",
          "1670: EX(CMD_vnoremenu, \"vnoremenu\", ex_menu,",
          "1671:    RANGE|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1673: EX(CMD_vsplit,  \"vsplit\", ex_splitview,",
          "1674:    BANG|FILE1|RANGE|EDITCMD|ARGOPT|TRLBAR,",
          "1676: EX(CMD_vunmap,  \"vunmap\", ex_unmap,",
          "1677:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1679: EX(CMD_vunmenu,  \"vunmenu\", ex_menu,",
          "1680:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1682: EX(CMD_write,  \"write\", ex_write,",
          "1683:    RANGE|WHOLEFOLD|BANG|FILE1|ARGOPT|DFLALL|TRLBAR|CMDWIN,",
          "1685: EX(CMD_wNext,  \"wNext\", ex_wnext,",
          "1686:    RANGE|WHOLEFOLD|BANG|FILE1|ARGOPT|TRLBAR,",
          "1688: EX(CMD_wall,  \"wall\",  do_wqall,",
          "1689:    BANG|TRLBAR|CMDWIN,",
          "1691: EX(CMD_while,  \"while\", ex_while,",
          "1692:    EXTRA|NOTRLCOM|SBOXOK|CMDWIN,",
          "1694: EX(CMD_winsize,  \"winsize\", ex_winsize,",
          "1695:    EXTRA|NEEDARG|TRLBAR,",
          "1697: EX(CMD_wincmd,  \"wincmd\", ex_wincmd,",
          "1698:    NEEDARG|WORD1|RANGE|CMDWIN,",
          "1700: EX(CMD_windo,  \"windo\", ex_listdo,",
          "1701:    NEEDARG|EXTRA|NOTRLCOM|RANGE|DFLALL,",
          "1703: EX(CMD_winpos,  \"winpos\", ex_winpos,",
          "1704:    EXTRA|TRLBAR|CMDWIN,",
          "1706: EX(CMD_wnext,  \"wnext\", ex_wnext,",
          "1707:    RANGE|BANG|FILE1|ARGOPT|TRLBAR,",
          "1709: EX(CMD_wprevious, \"wprevious\", ex_wnext,",
          "1710:    RANGE|BANG|FILE1|ARGOPT|TRLBAR,",
          "1712: EX(CMD_wq,  \"wq\",  ex_exit,",
          "1713:    RANGE|WHOLEFOLD|BANG|FILE1|ARGOPT|DFLALL|TRLBAR,",
          "1715: EX(CMD_wqall,  \"wqall\", do_wqall,",
          "1716:    BANG|FILE1|ARGOPT|TRLBAR,",
          "1718: EX(CMD_wundo,  \"wundo\", ex_wundo,",
          "1719:    BANG|NEEDARG|FILE1,",
          "1721: EX(CMD_wviminfo, \"wviminfo\", ex_viminfo,",
          "1722:    BANG|FILE1|TRLBAR|CMDWIN,",
          "1724: EX(CMD_xit,  \"xit\",  ex_exit,",
          "1725:    RANGE|WHOLEFOLD|BANG|FILE1|ARGOPT|DFLALL|TRLBAR|CMDWIN,",
          "1727: EX(CMD_xall,  \"xall\",  do_wqall,",
          "1728:    BANG|TRLBAR,",
          "1730: EX(CMD_xmap,  \"xmap\",  ex_map,",
          "1731:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1733: EX(CMD_xmapclear, \"xmapclear\", ex_mapclear,",
          "1734:    EXTRA|TRLBAR|CMDWIN,",
          "1736: EX(CMD_xmenu,  \"xmenu\", ex_menu,",
          "1737:    RANGE|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1739: EX(CMD_xnoremap, \"xnoremap\", ex_map,",
          "1740:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1742: EX(CMD_xnoremenu, \"xnoremenu\", ex_menu,",
          "1743:    RANGE|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1745: EX(CMD_xrestore, \"xrestore\", ex_xrestore,",
          "1746:    EXTRA|TRLBAR|CMDWIN,",
          "1748: EX(CMD_xunmap,  \"xunmap\", ex_unmap,",
          "1749:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1751: EX(CMD_xunmenu,  \"xunmenu\", ex_menu,",
          "1752:    EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN,",
          "1754: EX(CMD_yank,  \"yank\",  ex_operators,",
          "1755:    RANGE|WHOLEFOLD|REGSTR|COUNT|TRLBAR|CMDWIN,",
          "1757: EX(CMD_z,  \"z\",  ex_z,",
          "1758:    RANGE|WHOLEFOLD|EXTRA|EXFLAGS|TRLBAR|CMDWIN,",
          "1762: EX(CMD_bang,  \"!\",  ex_bang,",
          "1763:    RANGE|WHOLEFOLD|BANG|FILES|CMDWIN,",
          "1765: EX(CMD_pound,  \"#\",  ex_print,",
          "1766:    RANGE|WHOLEFOLD|COUNT|EXFLAGS|TRLBAR|CMDWIN,",
          "1768: EX(CMD_and,  \"&\",  do_sub,",
          "1769:    RANGE|WHOLEFOLD|EXTRA|CMDWIN|MODIFY,",
          "1771: EX(CMD_star,  \"*\",  ex_at,",
          "1772:    RANGE|WHOLEFOLD|EXTRA|TRLBAR|CMDWIN,",
          "1774: EX(CMD_lshift,  \"<\",  ex_operators,",
          "1775:    RANGE|WHOLEFOLD|COUNT|EXFLAGS|TRLBAR|CMDWIN|MODIFY,",
          "1777: EX(CMD_equal,  \"=\",  ex_equal,",
          "1778:    RANGE|TRLBAR|DFLALL|EXFLAGS|CMDWIN,",
          "1780: EX(CMD_rshift,  \">\",  ex_operators,",
          "1781:    RANGE|WHOLEFOLD|COUNT|EXFLAGS|TRLBAR|CMDWIN|MODIFY,",
          "1783: EX(CMD_at,  \"@\",  ex_at,",
          "1784:    RANGE|WHOLEFOLD|EXTRA|TRLBAR|CMDWIN,",
          "1786: EX(CMD_Next,  \"Next\",  ex_previous,",
          "1787:    EXTRA|RANGE|COUNT|BANG|EDITCMD|ARGOPT|TRLBAR,",
          "1789: EX(CMD_Print,  \"Print\", ex_print,",
          "1790:    RANGE|WHOLEFOLD|COUNT|EXFLAGS|TRLBAR|CMDWIN,",
          "1792: EX(CMD_X,  \"X\",  ex_X,",
          "1793:    TRLBAR,",
          "1795: EX(CMD_tilde,  \"~\",  do_sub,",
          "1796:    RANGE|WHOLEFOLD|EXTRA|CMDWIN|MODIFY,",
          "",
          "[Added Lines]",
          "105: # define EXCMD(a, b, c, d, e)  a",
          "109: EXCMD(CMD_append,  \"append\", ex_append,",
          "110:    EX_BANG|EX_RANGE|EX_ZEROR|EX_TRLBAR|EX_CMDWIN|EX_MODIFY,",
          "112: EXCMD(CMD_abbreviate, \"abbreviate\", ex_abbreviate,",
          "113:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "115: EXCMD(CMD_abclear,  \"abclear\", ex_abclear,",
          "116:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "118: EXCMD(CMD_aboveleft, \"aboveleft\", ex_wrongmodifier,",
          "119:    EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM,",
          "121: EXCMD(CMD_all,  \"all\",  ex_all,",
          "122:    EX_BANG|EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "124: EXCMD(CMD_amenu,  \"amenu\", ex_menu,",
          "125:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "127: EXCMD(CMD_anoremenu, \"anoremenu\", ex_menu,",
          "128:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "130: EXCMD(CMD_args,  \"args\",  ex_args,",
          "131:    EX_BANG|EX_FILES|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "133: EXCMD(CMD_argadd,  \"argadd\", ex_argadd,",
          "134:    EX_BANG|EX_RANGE|EX_ZEROR|EX_FILES|EX_TRLBAR,",
          "136: EXCMD(CMD_argdelete, \"argdelete\", ex_argdelete,",
          "137:    EX_BANG|EX_RANGE|EX_FILES|EX_TRLBAR,",
          "139: EXCMD(CMD_argdo,  \"argdo\", ex_listdo,",
          "140:    EX_BANG|EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM|EX_RANGE|EX_DFLALL,",
          "142: EXCMD(CMD_argedit,  \"argedit\", ex_argedit,",
          "143:    EX_BANG|EX_NEEDARG|EX_RANGE|EX_ZEROR|EX_FILES|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "145: EXCMD(CMD_argglobal, \"argglobal\", ex_args,",
          "146:    EX_BANG|EX_FILES|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "148: EXCMD(CMD_arglocal, \"arglocal\", ex_args,",
          "149:    EX_BANG|EX_FILES|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "151: EXCMD(CMD_argument, \"argument\", ex_argument,",
          "152:    EX_BANG|EX_RANGE|EX_COUNT|EX_EXTRA|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "154: EXCMD(CMD_ascii,  \"ascii\", do_ascii,",
          "155:    EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "157: EXCMD(CMD_autocmd,  \"autocmd\", ex_autocmd,",
          "158:    EX_BANG|EX_EXTRA|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "160: EXCMD(CMD_augroup,  \"augroup\", ex_autocmd,",
          "161:    EX_BANG|EX_WORD1|EX_TRLBAR|EX_CMDWIN,",
          "163: EXCMD(CMD_aunmenu,  \"aunmenu\", ex_menu,",
          "164:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "166: EXCMD(CMD_buffer,  \"buffer\", ex_buffer,",
          "167:    EX_BANG|EX_RANGE|EX_BUFNAME|EX_BUFUNL|EX_COUNT|EX_EXTRA|EX_CMDARG|EX_TRLBAR,",
          "169: EXCMD(CMD_bNext,  \"bNext\", ex_bprevious,",
          "170:    EX_BANG|EX_RANGE|EX_COUNT|EX_CMDARG|EX_TRLBAR,",
          "172: EXCMD(CMD_ball,  \"ball\",  ex_buffer_all,",
          "173:    EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "175: EXCMD(CMD_badd,  \"badd\",  ex_edit,",
          "176:    EX_NEEDARG|EX_FILE1|EX_CMDARG|EX_TRLBAR|EX_CMDWIN,",
          "178: EXCMD(CMD_bdelete,  \"bdelete\", ex_bunload,",
          "179:    EX_BANG|EX_RANGE|EX_BUFNAME|EX_COUNT|EX_EXTRA|EX_TRLBAR,",
          "181: EXCMD(CMD_behave,  \"behave\", ex_behave,",
          "182:    EX_BANG|EX_NEEDARG|EX_WORD1|EX_TRLBAR|EX_CMDWIN,",
          "184: EXCMD(CMD_belowright, \"belowright\", ex_wrongmodifier,",
          "185:    EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM,",
          "187: EXCMD(CMD_bfirst,  \"bfirst\", ex_brewind,",
          "188:    EX_BANG|EX_RANGE|EX_CMDARG|EX_TRLBAR,",
          "190: EXCMD(CMD_blast,  \"blast\", ex_blast,",
          "191:    EX_BANG|EX_RANGE|EX_CMDARG|EX_TRLBAR,",
          "193: EXCMD(CMD_bmodified, \"bmodified\", ex_bmodified,",
          "194:    EX_BANG|EX_RANGE|EX_COUNT|EX_CMDARG|EX_TRLBAR,",
          "196: EXCMD(CMD_bnext,  \"bnext\", ex_bnext,",
          "197:    EX_BANG|EX_RANGE|EX_COUNT|EX_CMDARG|EX_TRLBAR,",
          "199: EXCMD(CMD_botright, \"botright\", ex_wrongmodifier,",
          "200:    EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM,",
          "202: EXCMD(CMD_bprevious, \"bprevious\", ex_bprevious,",
          "203:    EX_BANG|EX_RANGE|EX_COUNT|EX_CMDARG|EX_TRLBAR,",
          "205: EXCMD(CMD_brewind,  \"brewind\", ex_brewind,",
          "206:    EX_BANG|EX_RANGE|EX_CMDARG|EX_TRLBAR,",
          "208: EXCMD(CMD_break,  \"break\", ex_break,",
          "209:    EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "211: EXCMD(CMD_breakadd, \"breakadd\", ex_breakadd,",
          "212:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "214: EXCMD(CMD_breakdel, \"breakdel\", ex_breakdel,",
          "215:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "217: EXCMD(CMD_breaklist, \"breaklist\", ex_breaklist,",
          "218:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "220: EXCMD(CMD_browse,  \"browse\", ex_wrongmodifier,",
          "221:    EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM|EX_CMDWIN,",
          "223: EXCMD(CMD_buffers,  \"buffers\", buflist_list,",
          "224:    EX_BANG|EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "226: EXCMD(CMD_bufdo,  \"bufdo\", ex_listdo,",
          "227:    EX_BANG|EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM|EX_RANGE|EX_DFLALL,",
          "229: EXCMD(CMD_bunload,  \"bunload\", ex_bunload,",
          "230:    EX_BANG|EX_RANGE|EX_BUFNAME|EX_COUNT|EX_EXTRA|EX_TRLBAR,",
          "232: EXCMD(CMD_bwipeout, \"bwipeout\", ex_bunload,",
          "233:    EX_BANG|EX_RANGE|EX_BUFNAME|EX_BUFUNL|EX_COUNT|EX_EXTRA|EX_TRLBAR,",
          "235: EXCMD(CMD_change,  \"change\", ex_change,",
          "236:    EX_BANG|EX_WHOLEFOLD|EX_RANGE|EX_COUNT|EX_TRLBAR|EX_CMDWIN|EX_MODIFY,",
          "238: EXCMD(CMD_cNext,  \"cNext\", ex_cnext,",
          "239:    EX_RANGE|EX_COUNT|EX_TRLBAR|EX_BANG,",
          "241: EXCMD(CMD_cNfile,  \"cNfile\", ex_cnext,",
          "242:    EX_RANGE|EX_COUNT|EX_TRLBAR|EX_BANG,",
          "244: EXCMD(CMD_cabbrev,  \"cabbrev\", ex_abbreviate,",
          "245:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "247: EXCMD(CMD_cabclear, \"cabclear\", ex_abclear,",
          "248:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "250: EXCMD(CMD_cabove,  \"cabove\", ex_cbelow,",
          "251:    EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "253: EXCMD(CMD_caddbuffer, \"caddbuffer\", ex_cbuffer,",
          "254:    EX_RANGE|EX_WORD1|EX_TRLBAR,",
          "256: EXCMD(CMD_caddexpr, \"caddexpr\", ex_cexpr,",
          "257:    EX_NEEDARG|EX_WORD1|EX_NOTRLCOM|EX_TRLBAR,",
          "259: EXCMD(CMD_caddfile, \"caddfile\", ex_cfile,",
          "260:    EX_TRLBAR|EX_FILE1,",
          "262: EXCMD(CMD_cafter,  \"cafter\", ex_cbelow,",
          "263:    EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "265: EXCMD(CMD_call,  \"call\",  ex_call,",
          "266:    EX_RANGE|EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM|EX_SBOXOK|EX_CMDWIN,",
          "268: EXCMD(CMD_catch,  \"catch\", ex_catch,",
          "269:    EX_EXTRA|EX_SBOXOK|EX_CMDWIN,",
          "271: EXCMD(CMD_cbuffer,  \"cbuffer\", ex_cbuffer,",
          "272:    EX_BANG|EX_RANGE|EX_WORD1|EX_TRLBAR,",
          "274: EXCMD(CMD_cbefore,  \"cbefore\", ex_cbelow,",
          "275:    EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "277: EXCMD(CMD_cbelow,  \"cbelow\", ex_cbelow,",
          "278:    EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "280: EXCMD(CMD_cbottom,  \"cbottom\", ex_cbottom,",
          "281:    EX_TRLBAR,",
          "283: EXCMD(CMD_cc,  \"cc\",  ex_cc,",
          "284:    EX_RANGE|EX_COUNT|EX_TRLBAR|EX_BANG,",
          "286: EXCMD(CMD_cclose,  \"cclose\", ex_cclose,",
          "287:    EX_TRLBAR,",
          "289: EXCMD(CMD_cd,  \"cd\",  ex_cd,",
          "290:    EX_BANG|EX_FILE1|EX_TRLBAR|EX_CMDWIN,",
          "292: EXCMD(CMD_cdo,  \"cdo\",  ex_listdo,",
          "293:    EX_BANG|EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM|EX_RANGE|EX_DFLALL,",
          "295: EXCMD(CMD_center,  \"center\", ex_align,",
          "296:    EX_TRLBAR|EX_RANGE|EX_WHOLEFOLD|EX_EXTRA|EX_CMDWIN|EX_MODIFY,",
          "298: EXCMD(CMD_cexpr,  \"cexpr\", ex_cexpr,",
          "299:    EX_NEEDARG|EX_WORD1|EX_NOTRLCOM|EX_TRLBAR|EX_BANG,",
          "301: EXCMD(CMD_cfile,  \"cfile\", ex_cfile,",
          "302:    EX_TRLBAR|EX_FILE1|EX_BANG,",
          "304: EXCMD(CMD_cfdo,  \"cfdo\",  ex_listdo,",
          "305:    EX_BANG|EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM|EX_RANGE|EX_DFLALL,",
          "307: EXCMD(CMD_cfirst,  \"cfirst\", ex_cc,",
          "308:    EX_RANGE|EX_COUNT|EX_TRLBAR|EX_BANG,",
          "310: EXCMD(CMD_cgetfile, \"cgetfile\", ex_cfile,",
          "311:    EX_TRLBAR|EX_FILE1,",
          "313: EXCMD(CMD_cgetbuffer, \"cgetbuffer\", ex_cbuffer,",
          "314:    EX_RANGE|EX_WORD1|EX_TRLBAR,",
          "316: EXCMD(CMD_cgetexpr, \"cgetexpr\", ex_cexpr,",
          "317:    EX_NEEDARG|EX_WORD1|EX_NOTRLCOM|EX_TRLBAR,",
          "319: EXCMD(CMD_chdir,  \"chdir\", ex_cd,",
          "320:    EX_BANG|EX_FILE1|EX_TRLBAR|EX_CMDWIN,",
          "322: EXCMD(CMD_changes,  \"changes\", ex_changes,",
          "323:    EX_TRLBAR|EX_CMDWIN,",
          "325: EXCMD(CMD_checkpath, \"checkpath\", ex_checkpath,",
          "326:    EX_TRLBAR|EX_BANG|EX_CMDWIN,",
          "328: EXCMD(CMD_checktime, \"checktime\", ex_checktime,",
          "329:    EX_RANGE|EX_BUFNAME|EX_COUNT|EX_EXTRA|EX_TRLBAR,",
          "331: EXCMD(CMD_chistory, \"chistory\", qf_history,",
          "332:    EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "334: EXCMD(CMD_clist,  \"clist\", qf_list,",
          "335:    EX_BANG|EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "337: EXCMD(CMD_clast,  \"clast\", ex_cc,",
          "338:    EX_RANGE|EX_COUNT|EX_TRLBAR|EX_BANG,",
          "340: EXCMD(CMD_close,  \"close\", ex_close,",
          "341:    EX_BANG|EX_RANGE|EX_COUNT|EX_TRLBAR|EX_CMDWIN,",
          "343: EXCMD(CMD_clearjumps, \"clearjumps\", ex_clearjumps,",
          "344:    EX_TRLBAR|EX_CMDWIN,",
          "346: EXCMD(CMD_cmap,  \"cmap\",  ex_map,",
          "347:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "349: EXCMD(CMD_cmapclear, \"cmapclear\", ex_mapclear,",
          "350:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "352: EXCMD(CMD_cmenu,  \"cmenu\", ex_menu,",
          "353:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "355: EXCMD(CMD_cnext,  \"cnext\", ex_cnext,",
          "356:    EX_RANGE|EX_COUNT|EX_TRLBAR|EX_BANG,",
          "358: EXCMD(CMD_cnewer,  \"cnewer\", qf_age,",
          "359:    EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "361: EXCMD(CMD_cnfile,  \"cnfile\", ex_cnext,",
          "362:    EX_RANGE|EX_COUNT|EX_TRLBAR|EX_BANG,",
          "364: EXCMD(CMD_cnoremap, \"cnoremap\", ex_map,",
          "365:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "367: EXCMD(CMD_cnoreabbrev, \"cnoreabbrev\", ex_abbreviate,",
          "368:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "370: EXCMD(CMD_cnoremenu, \"cnoremenu\", ex_menu,",
          "371:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "373: EXCMD(CMD_copy,  \"copy\",  ex_copymove,",
          "374:    EX_RANGE|EX_WHOLEFOLD|EX_EXTRA|EX_TRLBAR|EX_CMDWIN|EX_MODIFY,",
          "376: EXCMD(CMD_colder,  \"colder\", qf_age,",
          "377:    EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "379: EXCMD(CMD_colorscheme, \"colorscheme\", ex_colorscheme,",
          "380:    EX_WORD1|EX_TRLBAR|EX_CMDWIN,",
          "382: EXCMD(CMD_command,  \"command\", ex_command,",
          "383:    EX_EXTRA|EX_BANG|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "385: EXCMD(CMD_comclear, \"comclear\", ex_comclear,",
          "386:    EX_TRLBAR|EX_CMDWIN,",
          "388: EXCMD(CMD_compiler, \"compiler\", ex_compiler,",
          "389:    EX_BANG|EX_TRLBAR|EX_WORD1|EX_CMDWIN,",
          "391: EXCMD(CMD_continue, \"continue\", ex_continue,",
          "392:    EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "394: EXCMD(CMD_confirm,  \"confirm\", ex_wrongmodifier,",
          "395:    EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM|EX_CMDWIN,",
          "397: EXCMD(CMD_const,  \"const\", ex_const,",
          "398:    EX_EXTRA|EX_NOTRLCOM|EX_SBOXOK|EX_CMDWIN,",
          "400: EXCMD(CMD_copen,  \"copen\", ex_copen,",
          "401:    EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "403: EXCMD(CMD_cprevious, \"cprevious\", ex_cnext,",
          "404:    EX_RANGE|EX_COUNT|EX_TRLBAR|EX_BANG,",
          "406: EXCMD(CMD_cpfile,  \"cpfile\", ex_cnext,",
          "407:    EX_RANGE|EX_COUNT|EX_TRLBAR|EX_BANG,",
          "409: EXCMD(CMD_cquit,  \"cquit\", ex_cquit,",
          "410:    EX_TRLBAR|EX_BANG,",
          "412: EXCMD(CMD_crewind,  \"crewind\", ex_cc,",
          "413:    EX_RANGE|EX_COUNT|EX_TRLBAR|EX_BANG,",
          "415: EXCMD(CMD_cscope,  \"cscope\", ex_cscope,",
          "416:    EX_EXTRA|EX_NOTRLCOM|EX_XFILE,",
          "418: EXCMD(CMD_cstag,  \"cstag\", ex_cstag,",
          "419:    EX_BANG|EX_TRLBAR|EX_WORD1,",
          "421: EXCMD(CMD_cunmap,  \"cunmap\", ex_unmap,",
          "422:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "424: EXCMD(CMD_cunabbrev, \"cunabbrev\", ex_abbreviate,",
          "425:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "427: EXCMD(CMD_cunmenu,  \"cunmenu\", ex_menu,",
          "428:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "430: EXCMD(CMD_cwindow,  \"cwindow\", ex_cwindow,",
          "431:    EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "433: EXCMD(CMD_delete,  \"delete\", ex_operators,",
          "434:    EX_RANGE|EX_WHOLEFOLD|EX_REGSTR|EX_COUNT|EX_TRLBAR|EX_CMDWIN|EX_MODIFY,",
          "436: EXCMD(CMD_delmarks, \"delmarks\", ex_delmarks,",
          "437:    EX_BANG|EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "439: EXCMD(CMD_debug,  \"debug\", ex_debug,",
          "440:    EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM|EX_SBOXOK|EX_CMDWIN,",
          "442: EXCMD(CMD_debuggreedy, \"debuggreedy\", ex_debuggreedy,",
          "443:    EX_RANGE|EX_ZEROR|EX_TRLBAR|EX_CMDWIN,",
          "445: EXCMD(CMD_delcommand, \"delcommand\", ex_delcommand,",
          "446:    EX_NEEDARG|EX_WORD1|EX_TRLBAR|EX_CMDWIN,",
          "448: EXCMD(CMD_delfunction, \"delfunction\", ex_delfunction,",
          "449:    EX_BANG|EX_NEEDARG|EX_WORD1|EX_CMDWIN,",
          "451: EXCMD(CMD_display,  \"display\", ex_display,",
          "452:    EX_EXTRA|EX_NOTRLCOM|EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "454: EXCMD(CMD_diffupdate, \"diffupdate\", ex_diffupdate,",
          "455:    EX_BANG|EX_TRLBAR,",
          "457: EXCMD(CMD_diffget,  \"diffget\", ex_diffgetput,",
          "458:    EX_RANGE|EX_EXTRA|EX_TRLBAR|EX_MODIFY,",
          "460: EXCMD(CMD_diffoff,  \"diffoff\", ex_diffoff,",
          "461:    EX_BANG|EX_TRLBAR,",
          "463: EXCMD(CMD_diffpatch, \"diffpatch\", ex_diffpatch,",
          "464:    EX_EXTRA|EX_FILE1|EX_TRLBAR|EX_MODIFY,",
          "466: EXCMD(CMD_diffput,  \"diffput\", ex_diffgetput,",
          "467:    EX_RANGE|EX_EXTRA|EX_TRLBAR,",
          "469: EXCMD(CMD_diffsplit, \"diffsplit\", ex_diffsplit,",
          "470:    EX_EXTRA|EX_FILE1|EX_TRLBAR,",
          "472: EXCMD(CMD_diffthis, \"diffthis\", ex_diffthis,",
          "473:    EX_TRLBAR,",
          "475: EXCMD(CMD_digraphs, \"digraphs\", ex_digraphs,",
          "476:    EX_BANG|EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "478: EXCMD(CMD_djump,  \"djump\", ex_findpat,",
          "479:    EX_BANG|EX_RANGE|EX_DFLALL|EX_WHOLEFOLD|EX_EXTRA,",
          "481: EXCMD(CMD_dlist,  \"dlist\", ex_findpat,",
          "482:    EX_BANG|EX_RANGE|EX_DFLALL|EX_WHOLEFOLD|EX_EXTRA|EX_CMDWIN,",
          "484: EXCMD(CMD_doautocmd, \"doautocmd\", ex_doautocmd,",
          "485:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "487: EXCMD(CMD_doautoall, \"doautoall\", ex_doautoall,",
          "488:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "490: EXCMD(CMD_drop,  \"drop\",  ex_drop,",
          "491:    EX_FILES|EX_CMDARG|EX_NEEDARG|EX_ARGOPT|EX_TRLBAR,",
          "493: EXCMD(CMD_dsearch,  \"dsearch\", ex_findpat,",
          "494:    EX_BANG|EX_RANGE|EX_DFLALL|EX_WHOLEFOLD|EX_EXTRA|EX_CMDWIN,",
          "496: EXCMD(CMD_dsplit,  \"dsplit\", ex_findpat,",
          "497:    EX_BANG|EX_RANGE|EX_DFLALL|EX_WHOLEFOLD|EX_EXTRA,",
          "499: EXCMD(CMD_edit,  \"edit\",  ex_edit,",
          "500:    EX_BANG|EX_FILE1|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "502: EXCMD(CMD_earlier,  \"earlier\", ex_later,",
          "503:    EX_TRLBAR|EX_EXTRA|EX_NOSPC|EX_CMDWIN,",
          "505: EXCMD(CMD_echo,  \"echo\",  ex_echo,",
          "506:    EX_EXTRA|EX_NOTRLCOM|EX_SBOXOK|EX_CMDWIN,",
          "508: EXCMD(CMD_echoerr,  \"echoerr\", ex_execute,",
          "509:    EX_EXTRA|EX_NOTRLCOM|EX_SBOXOK|EX_CMDWIN,",
          "511: EXCMD(CMD_echohl,  \"echohl\", ex_echohl,",
          "512:    EX_EXTRA|EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "514: EXCMD(CMD_echomsg,  \"echomsg\", ex_execute,",
          "515:    EX_EXTRA|EX_NOTRLCOM|EX_SBOXOK|EX_CMDWIN,",
          "517: EXCMD(CMD_echon,  \"echon\", ex_echo,",
          "518:    EX_EXTRA|EX_NOTRLCOM|EX_SBOXOK|EX_CMDWIN,",
          "520: EXCMD(CMD_else,  \"else\",  ex_else,",
          "521:    EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "523: EXCMD(CMD_elseif,  \"elseif\", ex_else,",
          "524:    EX_EXTRA|EX_NOTRLCOM|EX_SBOXOK|EX_CMDWIN,",
          "526: EXCMD(CMD_emenu,  \"emenu\", ex_emenu,",
          "527:    EX_NEEDARG|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_RANGE|EX_CMDWIN,",
          "529: EXCMD(CMD_endif,  \"endif\", ex_endif,",
          "530:    EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "532: EXCMD(CMD_endfunction, \"endfunction\", ex_endfunction,",
          "533:    EX_TRLBAR|EX_CMDWIN,",
          "535: EXCMD(CMD_endfor,  \"endfor\", ex_endwhile,",
          "536:    EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "538: EXCMD(CMD_endtry,  \"endtry\", ex_endtry,",
          "539:    EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "541: EXCMD(CMD_endwhile, \"endwhile\", ex_endwhile,",
          "542:    EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "544: EXCMD(CMD_enew,  \"enew\",  ex_edit,",
          "545:    EX_BANG|EX_TRLBAR,",
          "547: EXCMD(CMD_ex,  \"ex\",  ex_edit,",
          "548:    EX_BANG|EX_FILE1|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "550: EXCMD(CMD_execute,  \"execute\", ex_execute,",
          "551:    EX_EXTRA|EX_NOTRLCOM|EX_SBOXOK|EX_CMDWIN,",
          "553: EXCMD(CMD_exit,  \"exit\",  ex_exit,",
          "554:    EX_RANGE|EX_WHOLEFOLD|EX_BANG|EX_FILE1|EX_ARGOPT|EX_DFLALL|EX_TRLBAR|EX_CMDWIN,",
          "556: EXCMD(CMD_exusage,  \"exusage\", ex_exusage,",
          "557:    EX_TRLBAR,",
          "559: EXCMD(CMD_file,  \"file\",  ex_file,",
          "560:    EX_RANGE|EX_ZEROR|EX_BANG|EX_FILE1|EX_TRLBAR,",
          "562: EXCMD(CMD_files,  \"files\", buflist_list,",
          "563:    EX_BANG|EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "565: EXCMD(CMD_filetype, \"filetype\", ex_filetype,",
          "566:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "568: EXCMD(CMD_filter,  \"filter\", ex_wrongmodifier,",
          "569:    EX_BANG|EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM,",
          "571: EXCMD(CMD_find,  \"find\",  ex_find,",
          "572:    EX_RANGE|EX_BANG|EX_FILE1|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "574: EXCMD(CMD_finally,  \"finally\", ex_finally,",
          "575:    EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "577: EXCMD(CMD_finish,  \"finish\", ex_finish,",
          "578:    EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "580: EXCMD(CMD_first,  \"first\", ex_rewind,",
          "581:    EX_EXTRA|EX_BANG|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "583: EXCMD(CMD_fixdel,  \"fixdel\", do_fixdel,",
          "584:    EX_TRLBAR|EX_CMDWIN,",
          "586: EXCMD(CMD_fold,  \"fold\",  ex_fold,",
          "587:    EX_RANGE|EX_WHOLEFOLD|EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "589: EXCMD(CMD_foldclose, \"foldclose\", ex_foldopen,",
          "590:    EX_RANGE|EX_BANG|EX_WHOLEFOLD|EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "592: EXCMD(CMD_folddoopen, \"folddoopen\", ex_folddo,",
          "593:    EX_RANGE|EX_DFLALL|EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM,",
          "595: EXCMD(CMD_folddoclosed, \"folddoclosed\", ex_folddo,",
          "596:    EX_RANGE|EX_DFLALL|EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM,",
          "598: EXCMD(CMD_foldopen, \"foldopen\", ex_foldopen,",
          "599:    EX_RANGE|EX_BANG|EX_WHOLEFOLD|EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "601: EXCMD(CMD_for,  \"for\",  ex_while,",
          "602:    EX_EXTRA|EX_NOTRLCOM|EX_SBOXOK|EX_CMDWIN,",
          "604: EXCMD(CMD_function, \"function\", ex_function,",
          "605:    EX_EXTRA|EX_BANG|EX_SBOXOK|EX_CMDWIN,",
          "607: EXCMD(CMD_global,  \"global\", ex_global,",
          "608:    EX_RANGE|EX_WHOLEFOLD|EX_BANG|EX_EXTRA|EX_DFLALL|EX_SBOXOK|EX_CMDWIN,",
          "610: EXCMD(CMD_goto,  \"goto\",  ex_goto,",
          "611:    EX_RANGE|EX_COUNT|EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "613: EXCMD(CMD_grep,  \"grep\",  ex_make,",
          "614:    EX_RANGE|EX_BANG|EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM|EX_TRLBAR|EX_XFILE,",
          "616: EXCMD(CMD_grepadd,  \"grepadd\", ex_make,",
          "617:    EX_RANGE|EX_BANG|EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM|EX_TRLBAR|EX_XFILE,",
          "619: EXCMD(CMD_gui,  \"gui\",  ex_gui,",
          "620:    EX_BANG|EX_FILES|EX_CMDARG|EX_ARGOPT|EX_TRLBAR|EX_CMDWIN,",
          "622: EXCMD(CMD_gvim,  \"gvim\",  ex_gui,",
          "623:    EX_BANG|EX_FILES|EX_CMDARG|EX_ARGOPT|EX_TRLBAR|EX_CMDWIN,",
          "625: EXCMD(CMD_help,  \"help\",  ex_help,",
          "626:    EX_BANG|EX_EXTRA|EX_NOTRLCOM,",
          "628: EXCMD(CMD_helpclose, \"helpclose\", ex_helpclose,",
          "629:    EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "631: EXCMD(CMD_helpfind, \"helpfind\", ex_helpfind,",
          "632:    EX_EXTRA|EX_NOTRLCOM,",
          "634: EXCMD(CMD_helpgrep, \"helpgrep\", ex_helpgrep,",
          "635:    EX_EXTRA|EX_NOTRLCOM|EX_NEEDARG,",
          "637: EXCMD(CMD_helptags, \"helptags\", ex_helptags,",
          "638:    EX_NEEDARG|EX_FILES|EX_TRLBAR|EX_CMDWIN,",
          "640: EXCMD(CMD_hardcopy, \"hardcopy\", ex_hardcopy,",
          "641:    EX_RANGE|EX_COUNT|EX_EXTRA|EX_TRLBAR|EX_DFLALL|EX_BANG,",
          "643: EXCMD(CMD_highlight, \"highlight\", ex_highlight,",
          "644:    EX_BANG|EX_EXTRA|EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "646: EXCMD(CMD_hide,  \"hide\",  ex_hide,",
          "647:    EX_BANG|EX_RANGE|EX_COUNT|EX_EXTRA|EX_TRLBAR,",
          "649: EXCMD(CMD_history,  \"history\", ex_history,",
          "650:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "652: EXCMD(CMD_insert,  \"insert\", ex_append,",
          "653:    EX_BANG|EX_RANGE|EX_TRLBAR|EX_CMDWIN|EX_MODIFY,",
          "655: EXCMD(CMD_iabbrev,  \"iabbrev\", ex_abbreviate,",
          "656:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "658: EXCMD(CMD_iabclear, \"iabclear\", ex_abclear,",
          "659:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "661: EXCMD(CMD_if,  \"if\",  ex_if,",
          "662:    EX_EXTRA|EX_NOTRLCOM|EX_SBOXOK|EX_CMDWIN,",
          "664: EXCMD(CMD_ijump,  \"ijump\", ex_findpat,",
          "665:    EX_BANG|EX_RANGE|EX_DFLALL|EX_WHOLEFOLD|EX_EXTRA,",
          "667: EXCMD(CMD_ilist,  \"ilist\", ex_findpat,",
          "668:    EX_BANG|EX_RANGE|EX_DFLALL|EX_WHOLEFOLD|EX_EXTRA|EX_CMDWIN,",
          "670: EXCMD(CMD_imap,  \"imap\",  ex_map,",
          "671:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "673: EXCMD(CMD_imapclear, \"imapclear\", ex_mapclear,",
          "674:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "676: EXCMD(CMD_imenu,  \"imenu\", ex_menu,",
          "677:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "679: EXCMD(CMD_inoremap, \"inoremap\", ex_map,",
          "680:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "682: EXCMD(CMD_inoreabbrev, \"inoreabbrev\", ex_abbreviate,",
          "683:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "685: EXCMD(CMD_inoremenu, \"inoremenu\", ex_menu,",
          "686:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "688: EXCMD(CMD_intro,  \"intro\", ex_intro,",
          "689:    EX_TRLBAR|EX_CMDWIN,",
          "691: EXCMD(CMD_isearch,  \"isearch\", ex_findpat,",
          "692:    EX_BANG|EX_RANGE|EX_DFLALL|EX_WHOLEFOLD|EX_EXTRA|EX_CMDWIN,",
          "694: EXCMD(CMD_isplit,  \"isplit\", ex_findpat,",
          "695:    EX_BANG|EX_RANGE|EX_DFLALL|EX_WHOLEFOLD|EX_EXTRA,",
          "697: EXCMD(CMD_iunmap,  \"iunmap\", ex_unmap,",
          "698:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "700: EXCMD(CMD_iunabbrev, \"iunabbrev\", ex_abbreviate,",
          "701:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "703: EXCMD(CMD_iunmenu,  \"iunmenu\", ex_menu,",
          "704:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "706: EXCMD(CMD_join,  \"join\",  ex_join,",
          "707:    EX_BANG|EX_RANGE|EX_WHOLEFOLD|EX_COUNT|EX_FLAGS|EX_TRLBAR|EX_CMDWIN|EX_MODIFY,",
          "709: EXCMD(CMD_jumps,  \"jumps\", ex_jumps,",
          "710:    EX_TRLBAR|EX_CMDWIN,",
          "712: EXCMD(CMD_k,  \"k\",  ex_mark,",
          "713:    EX_RANGE|EX_WORD1|EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "715: EXCMD(CMD_keepmarks, \"keepmarks\", ex_wrongmodifier,",
          "716:    EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM,",
          "718: EXCMD(CMD_keepjumps, \"keepjumps\", ex_wrongmodifier,",
          "719:    EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM,",
          "721: EXCMD(CMD_keeppatterns, \"keeppatterns\", ex_wrongmodifier,",
          "722:    EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM,",
          "724: EXCMD(CMD_keepalt,  \"keepalt\", ex_wrongmodifier,",
          "725:    EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM,",
          "727: EXCMD(CMD_list,  \"list\",  ex_print,",
          "728:    EX_RANGE|EX_WHOLEFOLD|EX_COUNT|EX_FLAGS|EX_TRLBAR|EX_CMDWIN,",
          "730: EXCMD(CMD_lNext,  \"lNext\", ex_cnext,",
          "731:    EX_RANGE|EX_COUNT|EX_TRLBAR|EX_BANG,",
          "733: EXCMD(CMD_lNfile,  \"lNfile\", ex_cnext,",
          "734:    EX_RANGE|EX_COUNT|EX_TRLBAR|EX_BANG,",
          "736: EXCMD(CMD_last,  \"last\",  ex_last,",
          "737:    EX_EXTRA|EX_BANG|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "739: EXCMD(CMD_labove,  \"labove\", ex_cbelow,",
          "740:    EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "742: EXCMD(CMD_language, \"language\", ex_language,",
          "743:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "745: EXCMD(CMD_laddexpr, \"laddexpr\", ex_cexpr,",
          "746:    EX_NEEDARG|EX_WORD1|EX_NOTRLCOM|EX_TRLBAR,",
          "748: EXCMD(CMD_laddbuffer, \"laddbuffer\", ex_cbuffer,",
          "749:    EX_RANGE|EX_WORD1|EX_TRLBAR,",
          "751: EXCMD(CMD_laddfile, \"laddfile\", ex_cfile,",
          "752:    EX_TRLBAR|EX_FILE1,",
          "754: EXCMD(CMD_lafter,  \"lafter\", ex_cbelow,",
          "755:    EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "757: EXCMD(CMD_later,  \"later\", ex_later,",
          "758:    EX_TRLBAR|EX_EXTRA|EX_NOSPC|EX_CMDWIN,",
          "760: EXCMD(CMD_lbuffer,  \"lbuffer\", ex_cbuffer,",
          "761:    EX_BANG|EX_RANGE|EX_WORD1|EX_TRLBAR,",
          "763: EXCMD(CMD_lbefore,  \"lbefore\", ex_cbelow,",
          "764:    EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "766: EXCMD(CMD_lbelow,  \"lbelow\", ex_cbelow,",
          "767:    EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "769: EXCMD(CMD_lbottom,  \"lbottom\", ex_cbottom,",
          "770:    EX_TRLBAR,",
          "772: EXCMD(CMD_lcd,  \"lcd\",  ex_cd,",
          "773:    EX_BANG|EX_FILE1|EX_TRLBAR|EX_CMDWIN,",
          "775: EXCMD(CMD_lchdir,  \"lchdir\", ex_cd,",
          "776:    EX_BANG|EX_FILE1|EX_TRLBAR|EX_CMDWIN,",
          "778: EXCMD(CMD_lclose,  \"lclose\", ex_cclose,",
          "779:    EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "781: EXCMD(CMD_lcscope,  \"lcscope\", ex_cscope,",
          "782:    EX_EXTRA|EX_NOTRLCOM|EX_XFILE,",
          "784: EXCMD(CMD_ldo,  \"ldo\",  ex_listdo,",
          "785:    EX_BANG|EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM|EX_RANGE|EX_DFLALL,",
          "787: EXCMD(CMD_left,  \"left\",  ex_align,",
          "788:    EX_TRLBAR|EX_RANGE|EX_WHOLEFOLD|EX_EXTRA|EX_CMDWIN|EX_MODIFY,",
          "790: EXCMD(CMD_leftabove, \"leftabove\", ex_wrongmodifier,",
          "791:    EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM,",
          "793: EXCMD(CMD_let,  \"let\",  ex_let,",
          "794:    EX_EXTRA|EX_NOTRLCOM|EX_SBOXOK|EX_CMDWIN,",
          "796: EXCMD(CMD_lexpr,  \"lexpr\", ex_cexpr,",
          "797:    EX_NEEDARG|EX_WORD1|EX_NOTRLCOM|EX_TRLBAR|EX_BANG,",
          "799: EXCMD(CMD_lfile,  \"lfile\", ex_cfile,",
          "800:    EX_TRLBAR|EX_FILE1|EX_BANG,",
          "802: EXCMD(CMD_lfdo,  \"lfdo\",  ex_listdo,",
          "803:    EX_BANG|EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM|EX_RANGE|EX_DFLALL,",
          "805: EXCMD(CMD_lfirst,  \"lfirst\", ex_cc,",
          "806:    EX_RANGE|EX_COUNT|EX_TRLBAR|EX_BANG,",
          "808: EXCMD(CMD_lgetfile, \"lgetfile\", ex_cfile,",
          "809:    EX_TRLBAR|EX_FILE1,",
          "811: EXCMD(CMD_lgetbuffer, \"lgetbuffer\", ex_cbuffer,",
          "812:    EX_RANGE|EX_WORD1|EX_TRLBAR,",
          "814: EXCMD(CMD_lgetexpr, \"lgetexpr\", ex_cexpr,",
          "815:    EX_NEEDARG|EX_WORD1|EX_NOTRLCOM|EX_TRLBAR,",
          "817: EXCMD(CMD_lgrep,  \"lgrep\", ex_make,",
          "818:    EX_RANGE|EX_BANG|EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM|EX_TRLBAR|EX_XFILE,",
          "820: EXCMD(CMD_lgrepadd, \"lgrepadd\", ex_make,",
          "821:    EX_RANGE|EX_BANG|EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM|EX_TRLBAR|EX_XFILE,",
          "823: EXCMD(CMD_lhelpgrep, \"lhelpgrep\", ex_helpgrep,",
          "824:    EX_EXTRA|EX_NOTRLCOM|EX_NEEDARG,",
          "826: EXCMD(CMD_lhistory, \"lhistory\", qf_history,",
          "827:    EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "829: EXCMD(CMD_ll,  \"ll\",  ex_cc,",
          "830:    EX_RANGE|EX_COUNT|EX_TRLBAR|EX_BANG,",
          "832: EXCMD(CMD_llast,  \"llast\", ex_cc,",
          "833:    EX_RANGE|EX_COUNT|EX_TRLBAR|EX_BANG,",
          "835: EXCMD(CMD_llist,  \"llist\", qf_list,",
          "836:    EX_BANG|EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "838: EXCMD(CMD_lmap,  \"lmap\",  ex_map,",
          "839:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "841: EXCMD(CMD_lmapclear, \"lmapclear\", ex_mapclear,",
          "842:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "844: EXCMD(CMD_lmake,  \"lmake\", ex_make,",
          "845:    EX_BANG|EX_EXTRA|EX_NOTRLCOM|EX_TRLBAR|EX_XFILE,",
          "847: EXCMD(CMD_lnoremap, \"lnoremap\", ex_map,",
          "848:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "850: EXCMD(CMD_lnext,  \"lnext\", ex_cnext,",
          "851:    EX_RANGE|EX_COUNT|EX_TRLBAR|EX_BANG,",
          "853: EXCMD(CMD_lnewer,  \"lnewer\", qf_age,",
          "854:    EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "856: EXCMD(CMD_lnfile,  \"lnfile\", ex_cnext,",
          "857:    EX_RANGE|EX_COUNT|EX_TRLBAR|EX_BANG,",
          "859: EXCMD(CMD_loadview, \"loadview\", ex_loadview,",
          "860:    EX_FILE1|EX_TRLBAR,",
          "862: EXCMD(CMD_loadkeymap, \"loadkeymap\", ex_loadkeymap,",
          "863:    EX_CMDWIN,",
          "865: EXCMD(CMD_lockmarks, \"lockmarks\", ex_wrongmodifier,",
          "866:    EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM,",
          "868: EXCMD(CMD_lockvar,  \"lockvar\", ex_lockvar,",
          "869:    EX_BANG|EX_EXTRA|EX_NEEDARG|EX_SBOXOK|EX_CMDWIN,",
          "871: EXCMD(CMD_lolder,  \"lolder\", qf_age,",
          "872:    EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "874: EXCMD(CMD_lopen,  \"lopen\", ex_copen,",
          "875:    EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "877: EXCMD(CMD_lprevious, \"lprevious\", ex_cnext,",
          "878:    EX_RANGE|EX_COUNT|EX_TRLBAR|EX_BANG,",
          "880: EXCMD(CMD_lpfile,  \"lpfile\", ex_cnext,",
          "881:    EX_RANGE|EX_COUNT|EX_TRLBAR|EX_BANG,",
          "883: EXCMD(CMD_lrewind,  \"lrewind\", ex_cc,",
          "884:    EX_RANGE|EX_COUNT|EX_TRLBAR|EX_BANG,",
          "886: EXCMD(CMD_ltag,  \"ltag\", ex_tag,",
          "887:    EX_TRLBAR|EX_BANG|EX_WORD1,",
          "889: EXCMD(CMD_lunmap,  \"lunmap\", ex_unmap,",
          "890:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "892: EXCMD(CMD_lua,  \"lua\",  ex_lua,",
          "893:    EX_RANGE|EX_EXTRA|EX_NEEDARG|EX_CMDWIN|EX_RESTRICT,",
          "895: EXCMD(CMD_luado,  \"luado\", ex_luado,",
          "896:    EX_RANGE|EX_DFLALL|EX_EXTRA|EX_NEEDARG|EX_CMDWIN|EX_RESTRICT,",
          "898: EXCMD(CMD_luafile,  \"luafile\", ex_luafile,",
          "899:    EX_RANGE|EX_FILE1|EX_NEEDARG|EX_CMDWIN|EX_RESTRICT,",
          "901: EXCMD(CMD_lvimgrep, \"lvimgrep\", ex_vimgrep,",
          "902:    EX_RANGE|EX_BANG|EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM|EX_TRLBAR|EX_XFILE,",
          "904: EXCMD(CMD_lvimgrepadd, \"lvimgrepadd\", ex_vimgrep,",
          "905:    EX_RANGE|EX_BANG|EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM|EX_TRLBAR|EX_XFILE,",
          "907: EXCMD(CMD_lwindow,  \"lwindow\", ex_cwindow,",
          "908:    EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "910: EXCMD(CMD_ls,  \"ls\",  buflist_list,",
          "911:    EX_BANG|EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "913: EXCMD(CMD_move,  \"move\",  ex_copymove,",
          "914:    EX_RANGE|EX_WHOLEFOLD|EX_EXTRA|EX_TRLBAR|EX_CMDWIN|EX_MODIFY,",
          "916: EXCMD(CMD_mark,  \"mark\",  ex_mark,",
          "917:    EX_RANGE|EX_WORD1|EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "919: EXCMD(CMD_make,  \"make\",  ex_make,",
          "920:    EX_BANG|EX_EXTRA|EX_NOTRLCOM|EX_TRLBAR|EX_XFILE,",
          "922: EXCMD(CMD_map,  \"map\",  ex_map,",
          "923:    EX_BANG|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "925: EXCMD(CMD_mapclear, \"mapclear\", ex_mapclear,",
          "926:    EX_EXTRA|EX_BANG|EX_TRLBAR|EX_CMDWIN,",
          "928: EXCMD(CMD_marks,  \"marks\", do_marks,",
          "929:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "931: EXCMD(CMD_match,  \"match\", ex_match,",
          "932:    EX_RANGE|EX_EXTRA|EX_CMDWIN,",
          "934: EXCMD(CMD_menu,  \"menu\",  ex_menu,",
          "935:    EX_RANGE|EX_ZEROR|EX_BANG|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "937: EXCMD(CMD_menutranslate, \"menutranslate\", ex_menutranslate,",
          "938:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "940: EXCMD(CMD_messages, \"messages\", ex_messages,",
          "941:    EX_EXTRA|EX_TRLBAR|EX_RANGE|EX_CMDWIN,",
          "943: EXCMD(CMD_mkexrc,  \"mkexrc\", ex_mkrc,",
          "944:    EX_BANG|EX_FILE1|EX_TRLBAR|EX_CMDWIN,",
          "946: EXCMD(CMD_mksession, \"mksession\", ex_mkrc,",
          "947:    EX_BANG|EX_FILE1|EX_TRLBAR,",
          "949: EXCMD(CMD_mkspell,  \"mkspell\", ex_mkspell,",
          "950:    EX_BANG|EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM|EX_TRLBAR|EX_XFILE,",
          "952: EXCMD(CMD_mkvimrc,  \"mkvimrc\", ex_mkrc,",
          "953:    EX_BANG|EX_FILE1|EX_TRLBAR|EX_CMDWIN,",
          "955: EXCMD(CMD_mkview,  \"mkview\", ex_mkrc,",
          "956:    EX_BANG|EX_FILE1|EX_TRLBAR,",
          "958: EXCMD(CMD_mode,  \"mode\",  ex_mode,",
          "959:    EX_WORD1|EX_TRLBAR|EX_CMDWIN,",
          "961: EXCMD(CMD_mzscheme, \"mzscheme\", ex_mzscheme,",
          "962:    EX_RANGE|EX_EXTRA|EX_DFLALL|EX_NEEDARG|EX_CMDWIN|EX_SBOXOK|EX_RESTRICT,",
          "964: EXCMD(CMD_mzfile,  \"mzfile\", ex_mzfile,",
          "965:    EX_RANGE|EX_FILE1|EX_NEEDARG|EX_CMDWIN|EX_RESTRICT,",
          "967: EXCMD(CMD_next,  \"next\",  ex_next,",
          "968:    EX_RANGE|EX_BANG|EX_FILES|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "970: EXCMD(CMD_nbkey,  \"nbkey\", ex_nbkey,",
          "971:    EX_EXTRA|EX_NEEDARG,",
          "973: EXCMD(CMD_nbclose,  \"nbclose\", ex_nbclose,",
          "974:    EX_TRLBAR|EX_CMDWIN,",
          "976: EXCMD(CMD_nbstart,  \"nbstart\", ex_nbstart,",
          "977:    EX_WORD1|EX_TRLBAR|EX_CMDWIN,",
          "979: EXCMD(CMD_new,  \"new\",  ex_splitview,",
          "980:    EX_BANG|EX_FILE1|EX_RANGE|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "982: EXCMD(CMD_nmap,  \"nmap\",  ex_map,",
          "983:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "985: EXCMD(CMD_nmapclear, \"nmapclear\", ex_mapclear,",
          "986:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "988: EXCMD(CMD_nmenu,  \"nmenu\", ex_menu,",
          "989:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "991: EXCMD(CMD_nnoremap, \"nnoremap\", ex_map,",
          "992:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "994: EXCMD(CMD_nnoremenu, \"nnoremenu\", ex_menu,",
          "995:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "997: EXCMD(CMD_noremap,  \"noremap\", ex_map,",
          "998:    EX_BANG|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1000: EXCMD(CMD_noautocmd, \"noautocmd\", ex_wrongmodifier,",
          "1001:    EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM,",
          "1003: EXCMD(CMD_nohlsearch, \"nohlsearch\", ex_nohlsearch,",
          "1004:    EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "1006: EXCMD(CMD_noreabbrev, \"noreabbrev\", ex_abbreviate,",
          "1007:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1009: EXCMD(CMD_noremenu, \"noremenu\", ex_menu,",
          "1010:    EX_RANGE|EX_ZEROR|EX_BANG|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1012: EXCMD(CMD_noswapfile, \"noswapfile\", ex_wrongmodifier,",
          "1013:    EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM,",
          "1015: EXCMD(CMD_normal,  \"normal\", ex_normal,",
          "1016:    EX_RANGE|EX_BANG|EX_EXTRA|EX_NEEDARG|EX_NOTRLCOM|EX_CTRLV|EX_SBOXOK|EX_CMDWIN,",
          "1018: EXCMD(CMD_number,  \"number\", ex_print,",
          "1019:    EX_RANGE|EX_WHOLEFOLD|EX_COUNT|EX_FLAGS|EX_TRLBAR|EX_CMDWIN,",
          "1021: EXCMD(CMD_nunmap,  \"nunmap\", ex_unmap,",
          "1022:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1024: EXCMD(CMD_nunmenu,  \"nunmenu\", ex_menu,",
          "1025:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1027: EXCMD(CMD_open,  \"open\",  ex_open,",
          "1028:    EX_RANGE|EX_BANG|EX_EXTRA,",
          "1030: EXCMD(CMD_oldfiles, \"oldfiles\", ex_oldfiles,",
          "1031:    EX_BANG|EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "1033: EXCMD(CMD_omap,  \"omap\",  ex_map,",
          "1034:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1036: EXCMD(CMD_omapclear, \"omapclear\", ex_mapclear,",
          "1037:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "1039: EXCMD(CMD_omenu,  \"omenu\", ex_menu,",
          "1040:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1042: EXCMD(CMD_only,  \"only\",  ex_only,",
          "1043:    EX_BANG|EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "1045: EXCMD(CMD_onoremap, \"onoremap\", ex_map,",
          "1046:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1048: EXCMD(CMD_onoremenu, \"onoremenu\", ex_menu,",
          "1049:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1051: EXCMD(CMD_options,  \"options\", ex_options,",
          "1052:    EX_TRLBAR,",
          "1054: EXCMD(CMD_ounmap,  \"ounmap\", ex_unmap,",
          "1055:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1057: EXCMD(CMD_ounmenu,  \"ounmenu\", ex_menu,",
          "1058:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1060: EXCMD(CMD_ownsyntax, \"ownsyntax\", ex_ownsyntax,",
          "1061:    EX_EXTRA|EX_NOTRLCOM|EX_SBOXOK|EX_CMDWIN,",
          "1063: EXCMD(CMD_print,  \"print\", ex_print,",
          "1064:    EX_RANGE|EX_WHOLEFOLD|EX_COUNT|EX_FLAGS|EX_TRLBAR|EX_CMDWIN|EX_SBOXOK,",
          "1066: EXCMD(CMD_packadd,  \"packadd\", ex_packadd,",
          "1067:    EX_BANG|EX_FILE1|EX_NEEDARG|EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "1069: EXCMD(CMD_packloadall, \"packloadall\", ex_packloadall,",
          "1070:    EX_BANG|EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "1072: EXCMD(CMD_pclose,  \"pclose\", ex_pclose,",
          "1073:    EX_BANG|EX_TRLBAR,",
          "1075: EXCMD(CMD_perl,  \"perl\",  ex_perl,",
          "1076:    EX_RANGE|EX_EXTRA|EX_DFLALL|EX_NEEDARG|EX_SBOXOK|EX_CMDWIN,",
          "1078: EXCMD(CMD_perldo,  \"perldo\", ex_perldo,",
          "1079:    EX_RANGE|EX_EXTRA|EX_DFLALL|EX_NEEDARG|EX_CMDWIN,",
          "1081: EXCMD(CMD_pedit,  \"pedit\", ex_pedit,",
          "1082:    EX_BANG|EX_FILE1|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "1084: EXCMD(CMD_pop,  \"pop\",  ex_tag,",
          "1085:    EX_RANGE|EX_BANG|EX_COUNT|EX_TRLBAR|EX_ZEROR,",
          "1087: EXCMD(CMD_popup,  \"popup\", ex_popup,",
          "1088:    EX_NEEDARG|EX_EXTRA|EX_BANG|EX_TRLBAR|EX_NOTRLCOM|EX_CMDWIN,",
          "1090: EXCMD(CMD_ppop,  \"ppop\",  ex_ptag,",
          "1091:    EX_RANGE|EX_BANG|EX_COUNT|EX_TRLBAR|EX_ZEROR,",
          "1093: EXCMD(CMD_preserve, \"preserve\", ex_preserve,",
          "1094:    EX_TRLBAR,",
          "1096: EXCMD(CMD_previous, \"previous\", ex_previous,",
          "1097:    EX_EXTRA|EX_RANGE|EX_COUNT|EX_BANG|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "1099: EXCMD(CMD_promptfind, \"promptfind\", gui_mch_find_dialog,",
          "1100:    EX_EXTRA|EX_NOTRLCOM|EX_CMDWIN,",
          "1102: EXCMD(CMD_promptrepl, \"promptrepl\", gui_mch_replace_dialog,",
          "1103:    EX_EXTRA|EX_NOTRLCOM|EX_CMDWIN,",
          "1105: EXCMD(CMD_profile,  \"profile\", ex_profile,",
          "1106:    EX_BANG|EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "1108: EXCMD(CMD_profdel,  \"profdel\", ex_breakdel,",
          "1109:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "1111: EXCMD(CMD_psearch,  \"psearch\", ex_psearch,",
          "1112:    EX_BANG|EX_RANGE|EX_WHOLEFOLD|EX_DFLALL|EX_EXTRA,",
          "1114: EXCMD(CMD_ptag,  \"ptag\",  ex_ptag,",
          "1115:    EX_RANGE|EX_BANG|EX_WORD1|EX_TRLBAR|EX_ZEROR,",
          "1117: EXCMD(CMD_ptNext,  \"ptNext\", ex_ptag,",
          "1118:    EX_RANGE|EX_BANG|EX_TRLBAR|EX_ZEROR,",
          "1120: EXCMD(CMD_ptfirst,  \"ptfirst\", ex_ptag,",
          "1121:    EX_RANGE|EX_BANG|EX_TRLBAR|EX_ZEROR,",
          "1123: EXCMD(CMD_ptjump,  \"ptjump\", ex_ptag,",
          "1124:    EX_BANG|EX_TRLBAR|EX_WORD1,",
          "1126: EXCMD(CMD_ptlast,  \"ptlast\", ex_ptag,",
          "1127:    EX_BANG|EX_TRLBAR,",
          "1129: EXCMD(CMD_ptnext,  \"ptnext\", ex_ptag,",
          "1130:    EX_RANGE|EX_BANG|EX_TRLBAR|EX_ZEROR,",
          "1132: EXCMD(CMD_ptprevious, \"ptprevious\", ex_ptag,",
          "1133:    EX_RANGE|EX_BANG|EX_TRLBAR|EX_ZEROR,",
          "1135: EXCMD(CMD_ptrewind, \"ptrewind\", ex_ptag,",
          "1136:    EX_RANGE|EX_BANG|EX_TRLBAR|EX_ZEROR,",
          "1138: EXCMD(CMD_ptselect, \"ptselect\", ex_ptag,",
          "1139:    EX_BANG|EX_TRLBAR|EX_WORD1,",
          "1141: EXCMD(CMD_put,  \"put\",  ex_put,",
          "1142:    EX_RANGE|EX_WHOLEFOLD|EX_BANG|EX_REGSTR|EX_TRLBAR|EX_ZEROR|EX_CMDWIN|EX_MODIFY,",
          "1144: EXCMD(CMD_pwd,  \"pwd\",  ex_pwd,",
          "1145:    EX_TRLBAR|EX_CMDWIN,",
          "1147: EXCMD(CMD_python,  \"python\", ex_python,",
          "1148:    EX_RANGE|EX_EXTRA|EX_NEEDARG|EX_CMDWIN|EX_RESTRICT,",
          "1150: EXCMD(CMD_pydo,  \"pydo\",  ex_pydo,",
          "1151:    EX_RANGE|EX_DFLALL|EX_EXTRA|EX_NEEDARG|EX_CMDWIN|EX_RESTRICT,",
          "1153: EXCMD(CMD_pyfile,  \"pyfile\", ex_pyfile,",
          "1154:    EX_RANGE|EX_FILE1|EX_NEEDARG|EX_CMDWIN|EX_RESTRICT,",
          "1156: EXCMD(CMD_py3,  \"py3\",  ex_py3,",
          "1157:    EX_RANGE|EX_EXTRA|EX_NEEDARG|EX_CMDWIN|EX_RESTRICT,",
          "1159: EXCMD(CMD_py3do,  \"py3do\", ex_py3do,",
          "1160:    EX_RANGE|EX_DFLALL|EX_EXTRA|EX_NEEDARG|EX_CMDWIN|EX_RESTRICT,",
          "1162: EXCMD(CMD_python3,  \"python3\", ex_py3,",
          "1163:    EX_RANGE|EX_EXTRA|EX_NEEDARG|EX_CMDWIN|EX_RESTRICT,",
          "1165: EXCMD(CMD_py3file,  \"py3file\", ex_py3file,",
          "1166:    EX_RANGE|EX_FILE1|EX_NEEDARG|EX_CMDWIN|EX_RESTRICT,",
          "1168: EXCMD(CMD_pyx,  \"pyx\",  ex_pyx,",
          "1169:    EX_RANGE|EX_EXTRA|EX_NEEDARG|EX_CMDWIN|EX_RESTRICT,",
          "1171: EXCMD(CMD_pyxdo,  \"pyxdo\", ex_pyxdo,",
          "1172:    EX_RANGE|EX_DFLALL|EX_EXTRA|EX_NEEDARG|EX_CMDWIN|EX_RESTRICT,",
          "1174: EXCMD(CMD_pythonx,  \"pythonx\", ex_pyx,",
          "1175:    EX_RANGE|EX_EXTRA|EX_NEEDARG|EX_CMDWIN|EX_RESTRICT,",
          "1177: EXCMD(CMD_pyxfile,  \"pyxfile\", ex_pyxfile,",
          "1178:    EX_RANGE|EX_FILE1|EX_NEEDARG|EX_CMDWIN|EX_RESTRICT,",
          "1180: EXCMD(CMD_quit,  \"quit\",  ex_quit,",
          "1181:    EX_BANG|EX_RANGE|EX_COUNT|EX_TRLBAR|EX_CMDWIN,",
          "1183: EXCMD(CMD_quitall,  \"quitall\", ex_quit_all,",
          "1184:    EX_BANG|EX_TRLBAR,",
          "1186: EXCMD(CMD_qall,  \"qall\",  ex_quit_all,",
          "1187:    EX_BANG|EX_TRLBAR|EX_CMDWIN,",
          "1189: EXCMD(CMD_read,  \"read\",  ex_read,",
          "1190:    EX_BANG|EX_RANGE|EX_WHOLEFOLD|EX_FILE1|EX_ARGOPT|EX_TRLBAR|EX_ZEROR|EX_CMDWIN|EX_MODIFY,",
          "1192: EXCMD(CMD_recover,  \"recover\", ex_recover,",
          "1193:    EX_BANG|EX_FILE1|EX_TRLBAR,",
          "1195: EXCMD(CMD_redo,  \"redo\",  ex_redo,",
          "1196:    EX_TRLBAR|EX_CMDWIN,",
          "1198: EXCMD(CMD_redir,  \"redir\", ex_redir,",
          "1199:    EX_BANG|EX_FILES|EX_TRLBAR|EX_CMDWIN,",
          "1201: EXCMD(CMD_redraw,  \"redraw\", ex_redraw,",
          "1202:    EX_BANG|EX_TRLBAR|EX_CMDWIN,",
          "1204: EXCMD(CMD_redrawstatus, \"redrawstatus\", ex_redrawstatus,",
          "1205:    EX_BANG|EX_TRLBAR|EX_CMDWIN,",
          "1207: EXCMD(CMD_redrawtabline, \"redrawtabline\", ex_redrawtabline,",
          "1208:    EX_TRLBAR|EX_CMDWIN,",
          "1210: EXCMD(CMD_registers, \"registers\", ex_display,",
          "1211:    EX_EXTRA|EX_NOTRLCOM|EX_TRLBAR|EX_CMDWIN,",
          "1213: EXCMD(CMD_resize,  \"resize\", ex_resize,",
          "1214:    EX_RANGE|EX_TRLBAR|EX_WORD1|EX_CMDWIN,",
          "1216: EXCMD(CMD_retab,  \"retab\", ex_retab,",
          "1217:    EX_TRLBAR|EX_RANGE|EX_WHOLEFOLD|EX_DFLALL|EX_BANG|EX_WORD1|EX_CMDWIN|EX_MODIFY,",
          "1219: EXCMD(CMD_return,  \"return\", ex_return,",
          "1220:    EX_EXTRA|EX_NOTRLCOM|EX_SBOXOK|EX_CMDWIN,",
          "1222: EXCMD(CMD_rewind,  \"rewind\", ex_rewind,",
          "1223:    EX_EXTRA|EX_BANG|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "1225: EXCMD(CMD_right,  \"right\", ex_align,",
          "1226:    EX_TRLBAR|EX_RANGE|EX_WHOLEFOLD|EX_EXTRA|EX_CMDWIN|EX_MODIFY,",
          "1228: EXCMD(CMD_rightbelow, \"rightbelow\", ex_wrongmodifier,",
          "1229:    EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM,",
          "1231: EXCMD(CMD_runtime,  \"runtime\", ex_runtime,",
          "1232:    EX_BANG|EX_NEEDARG|EX_FILES|EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "1234: EXCMD(CMD_ruby,  \"ruby\",  ex_ruby,",
          "1235:    EX_RANGE|EX_EXTRA|EX_NEEDARG|EX_CMDWIN|EX_RESTRICT,",
          "1237: EXCMD(CMD_rubydo,  \"rubydo\", ex_rubydo,",
          "1238:    EX_RANGE|EX_DFLALL|EX_EXTRA|EX_NEEDARG|EX_CMDWIN|EX_RESTRICT,",
          "1240: EXCMD(CMD_rubyfile, \"rubyfile\", ex_rubyfile,",
          "1241:    EX_RANGE|EX_FILE1|EX_NEEDARG|EX_CMDWIN|EX_RESTRICT,",
          "1243: EXCMD(CMD_rundo,  \"rundo\", ex_rundo,",
          "1244:    EX_NEEDARG|EX_FILE1,",
          "1246: EXCMD(CMD_rviminfo, \"rviminfo\", ex_viminfo,",
          "1247:    EX_BANG|EX_FILE1|EX_TRLBAR|EX_CMDWIN,",
          "1249: EXCMD(CMD_substitute, \"substitute\", do_sub,",
          "1250:    EX_RANGE|EX_WHOLEFOLD|EX_EXTRA|EX_CMDWIN,",
          "1252: EXCMD(CMD_sNext,  \"sNext\", ex_previous,",
          "1253:    EX_EXTRA|EX_RANGE|EX_COUNT|EX_BANG|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "1255: EXCMD(CMD_sargument, \"sargument\", ex_argument,",
          "1256:    EX_BANG|EX_RANGE|EX_COUNT|EX_EXTRA|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "1258: EXCMD(CMD_sall,  \"sall\",  ex_all,",
          "1259:    EX_BANG|EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "1261: EXCMD(CMD_sandbox,  \"sandbox\", ex_wrongmodifier,",
          "1262:    EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM,",
          "1264: EXCMD(CMD_saveas,  \"saveas\", ex_write,",
          "1265:    EX_BANG|EX_FILE1|EX_ARGOPT|EX_CMDWIN|EX_TRLBAR,",
          "1267: EXCMD(CMD_sbuffer,  \"sbuffer\", ex_buffer,",
          "1268:    EX_BANG|EX_RANGE|EX_BUFNAME|EX_BUFUNL|EX_COUNT|EX_EXTRA|EX_CMDARG|EX_TRLBAR,",
          "1270: EXCMD(CMD_sbNext,  \"sbNext\", ex_bprevious,",
          "1271:    EX_RANGE|EX_COUNT|EX_CMDARG|EX_TRLBAR,",
          "1273: EXCMD(CMD_sball,  \"sball\", ex_buffer_all,",
          "1274:    EX_RANGE|EX_COUNT|EX_CMDARG|EX_TRLBAR,",
          "1276: EXCMD(CMD_sbfirst,  \"sbfirst\", ex_brewind,",
          "1277:    EX_CMDARG|EX_TRLBAR,",
          "1279: EXCMD(CMD_sblast,  \"sblast\", ex_blast,",
          "1280:    EX_CMDARG|EX_TRLBAR,",
          "1282: EXCMD(CMD_sbmodified, \"sbmodified\", ex_bmodified,",
          "1283:    EX_RANGE|EX_COUNT|EX_CMDARG|EX_TRLBAR,",
          "1285: EXCMD(CMD_sbnext,  \"sbnext\", ex_bnext,",
          "1286:    EX_RANGE|EX_COUNT|EX_CMDARG|EX_TRLBAR,",
          "1288: EXCMD(CMD_sbprevious, \"sbprevious\", ex_bprevious,",
          "1289:    EX_RANGE|EX_COUNT|EX_CMDARG|EX_TRLBAR,",
          "1291: EXCMD(CMD_sbrewind, \"sbrewind\", ex_brewind,",
          "1292:    EX_CMDARG|EX_TRLBAR,",
          "1294: EXCMD(CMD_scriptnames, \"scriptnames\", ex_scriptnames,",
          "1295:    EX_BANG|EX_RANGE|EX_COUNT|EX_TRLBAR|EX_CMDWIN,",
          "1297: EXCMD(CMD_scriptencoding, \"scriptencoding\", ex_scriptencoding,",
          "1298:    EX_WORD1|EX_TRLBAR|EX_CMDWIN,",
          "1300: EXCMD(CMD_scriptversion, \"scriptversion\", ex_scriptversion,",
          "1301:    EX_WORD1|EX_TRLBAR|EX_CMDWIN,",
          "1303: EXCMD(CMD_scscope,  \"scscope\", ex_scscope,",
          "1304:    EX_EXTRA|EX_NOTRLCOM,",
          "1306: EXCMD(CMD_set,  \"set\",  ex_set,",
          "1307:    EX_TRLBAR|EX_EXTRA|EX_CMDWIN|EX_SBOXOK,",
          "1309: EXCMD(CMD_setfiletype, \"setfiletype\", ex_setfiletype,",
          "1310:    EX_TRLBAR|EX_EXTRA|EX_NEEDARG|EX_CMDWIN,",
          "1312: EXCMD(CMD_setglobal, \"setglobal\", ex_set,",
          "1313:    EX_TRLBAR|EX_EXTRA|EX_CMDWIN|EX_SBOXOK,",
          "1315: EXCMD(CMD_setlocal, \"setlocal\", ex_set,",
          "1316:    EX_TRLBAR|EX_EXTRA|EX_CMDWIN|EX_SBOXOK,",
          "1318: EXCMD(CMD_sfind,  \"sfind\", ex_splitview,",
          "1319:    EX_BANG|EX_FILE1|EX_RANGE|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "1321: EXCMD(CMD_sfirst,  \"sfirst\", ex_rewind,",
          "1322:    EX_EXTRA|EX_BANG|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "1324: EXCMD(CMD_shell,  \"shell\", ex_shell,",
          "1325:    EX_TRLBAR|EX_CMDWIN,",
          "1327: EXCMD(CMD_simalt,  \"simalt\", ex_simalt,",
          "1328:    EX_NEEDARG|EX_WORD1|EX_TRLBAR|EX_CMDWIN,",
          "1330: EXCMD(CMD_sign,  \"sign\",  ex_sign,",
          "1331:    EX_NEEDARG|EX_RANGE|EX_EXTRA|EX_CMDWIN,",
          "1333: EXCMD(CMD_silent,  \"silent\", ex_wrongmodifier,",
          "1334:    EX_NEEDARG|EX_EXTRA|EX_BANG|EX_NOTRLCOM|EX_SBOXOK|EX_CMDWIN,",
          "1336: EXCMD(CMD_sleep,  \"sleep\", ex_sleep,",
          "1337:    EX_RANGE|EX_COUNT|EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "1339: EXCMD(CMD_slast,  \"slast\", ex_last,",
          "1340:    EX_EXTRA|EX_BANG|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "1342: EXCMD(CMD_smagic,  \"smagic\", ex_submagic,",
          "1343:    EX_RANGE|EX_WHOLEFOLD|EX_EXTRA|EX_CMDWIN,",
          "1345: EXCMD(CMD_smap,  \"smap\",  ex_map,",
          "1346:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1348: EXCMD(CMD_smapclear, \"smapclear\", ex_mapclear,",
          "1349:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "1351: EXCMD(CMD_smenu,  \"smenu\", ex_menu,",
          "1352:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1354: EXCMD(CMD_snext,  \"snext\", ex_next,",
          "1355:    EX_RANGE|EX_BANG|EX_FILES|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "1357: EXCMD(CMD_snomagic, \"snomagic\", ex_submagic,",
          "1358:    EX_RANGE|EX_WHOLEFOLD|EX_EXTRA|EX_CMDWIN,",
          "1360: EXCMD(CMD_snoremap, \"snoremap\", ex_map,",
          "1361:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1363: EXCMD(CMD_snoremenu, \"snoremenu\", ex_menu,",
          "1364:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1366: EXCMD(CMD_source,  \"source\", ex_source,",
          "1367:    EX_BANG|EX_FILE1|EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "1369: EXCMD(CMD_sort,  \"sort\",  ex_sort,",
          "1370:    EX_RANGE|EX_DFLALL|EX_WHOLEFOLD|EX_BANG|EX_EXTRA|EX_NOTRLCOM|EX_MODIFY,",
          "1372: EXCMD(CMD_split,  \"split\", ex_splitview,",
          "1373:    EX_BANG|EX_FILE1|EX_RANGE|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "1375: EXCMD(CMD_spellgood, \"spellgood\", ex_spell,",
          "1376:    EX_BANG|EX_RANGE|EX_NEEDARG|EX_EXTRA|EX_TRLBAR,",
          "1378: EXCMD(CMD_spelldump, \"spelldump\", ex_spelldump,",
          "1379:    EX_BANG|EX_TRLBAR,",
          "1381: EXCMD(CMD_spellinfo, \"spellinfo\", ex_spellinfo,",
          "1382:    EX_TRLBAR,",
          "1384: EXCMD(CMD_spellrepall, \"spellrepall\", ex_spellrepall,",
          "1385:    EX_TRLBAR,",
          "1387: EXCMD(CMD_spellundo, \"spellundo\", ex_spell,",
          "1388:    EX_BANG|EX_RANGE|EX_NEEDARG|EX_EXTRA|EX_TRLBAR,",
          "1390: EXCMD(CMD_spellwrong, \"spellwrong\", ex_spell,",
          "1391:    EX_BANG|EX_RANGE|EX_NEEDARG|EX_EXTRA|EX_TRLBAR,",
          "1393: EXCMD(CMD_sprevious, \"sprevious\", ex_previous,",
          "1394:    EX_EXTRA|EX_RANGE|EX_COUNT|EX_BANG|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "1396: EXCMD(CMD_srewind,  \"srewind\", ex_rewind,",
          "1397:    EX_EXTRA|EX_BANG|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "1399: EXCMD(CMD_stop,  \"stop\",  ex_stop,",
          "1400:    EX_TRLBAR|EX_BANG|EX_CMDWIN,",
          "1402: EXCMD(CMD_stag,  \"stag\",  ex_stag,",
          "1403:    EX_RANGE|EX_BANG|EX_WORD1|EX_TRLBAR|EX_ZEROR,",
          "1405: EXCMD(CMD_startinsert, \"startinsert\", ex_startinsert,",
          "1406:    EX_BANG|EX_TRLBAR|EX_CMDWIN,",
          "1408: EXCMD(CMD_startgreplace, \"startgreplace\", ex_startinsert,",
          "1409:    EX_BANG|EX_TRLBAR|EX_CMDWIN,",
          "1411: EXCMD(CMD_startreplace, \"startreplace\", ex_startinsert,",
          "1412:    EX_BANG|EX_TRLBAR|EX_CMDWIN,",
          "1414: EXCMD(CMD_stopinsert, \"stopinsert\", ex_stopinsert,",
          "1415:    EX_BANG|EX_TRLBAR|EX_CMDWIN,",
          "1417: EXCMD(CMD_stjump,  \"stjump\", ex_stag,",
          "1418:    EX_BANG|EX_TRLBAR|EX_WORD1,",
          "1420: EXCMD(CMD_stselect, \"stselect\", ex_stag,",
          "1421:    EX_BANG|EX_TRLBAR|EX_WORD1,",
          "1423: EXCMD(CMD_sunhide,  \"sunhide\", ex_buffer_all,",
          "1424:    EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "1426: EXCMD(CMD_sunmap,  \"sunmap\", ex_unmap,",
          "1427:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1429: EXCMD(CMD_sunmenu,  \"sunmenu\", ex_menu,",
          "1430:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1432: EXCMD(CMD_suspend,  \"suspend\", ex_stop,",
          "1433:    EX_TRLBAR|EX_BANG|EX_CMDWIN,",
          "1435: EXCMD(CMD_sview,  \"sview\", ex_splitview,",
          "1436:    EX_BANG|EX_FILE1|EX_RANGE|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "1438: EXCMD(CMD_swapname, \"swapname\", ex_swapname,",
          "1439:    EX_TRLBAR|EX_CMDWIN,",
          "1441: EXCMD(CMD_syntax,  \"syntax\", ex_syntax,",
          "1442:    EX_EXTRA|EX_NOTRLCOM|EX_CMDWIN,",
          "1444: EXCMD(CMD_syntime,  \"syntime\", ex_syntime,",
          "1445:    EX_NEEDARG|EX_WORD1|EX_TRLBAR|EX_CMDWIN,",
          "1447: EXCMD(CMD_syncbind, \"syncbind\", ex_syncbind,",
          "1448:    EX_TRLBAR,",
          "1450: EXCMD(CMD_smile,  \"smile\", ex_smile,",
          "1451:    EX_TRLBAR|EX_CMDWIN|EX_SBOXOK,",
          "1453: EXCMD(CMD_t,  \"t\",  ex_copymove,",
          "1454:    EX_RANGE|EX_WHOLEFOLD|EX_EXTRA|EX_TRLBAR|EX_CMDWIN|EX_MODIFY,",
          "1456: EXCMD(CMD_tNext,  \"tNext\", ex_tag,",
          "1457:    EX_RANGE|EX_BANG|EX_TRLBAR|EX_ZEROR,",
          "1459: EXCMD(CMD_tag,  \"tag\",  ex_tag,",
          "1460:    EX_RANGE|EX_BANG|EX_WORD1|EX_TRLBAR|EX_ZEROR,",
          "1462: EXCMD(CMD_tags,  \"tags\",  do_tags,",
          "1463:    EX_TRLBAR|EX_CMDWIN,",
          "1465: EXCMD(CMD_tab,  \"tab\",  ex_wrongmodifier,",
          "1466:    EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM,",
          "1468: EXCMD(CMD_tabclose, \"tabclose\", ex_tabclose,",
          "1469:    EX_BANG|EX_RANGE|EX_ZEROR|EX_EXTRA|EX_NOSPC|EX_TRLBAR|EX_CMDWIN,",
          "1471: EXCMD(CMD_tabdo,  \"tabdo\", ex_listdo,",
          "1472:    EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM|EX_RANGE|EX_DFLALL,",
          "1474: EXCMD(CMD_tabedit,  \"tabedit\", ex_splitview,",
          "1475:    EX_BANG|EX_FILE1|EX_RANGE|EX_ZEROR|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "1477: EXCMD(CMD_tabfind,  \"tabfind\", ex_splitview,",
          "1478:    EX_BANG|EX_FILE1|EX_RANGE|EX_ZEROR|EX_CMDARG|EX_ARGOPT|EX_NEEDARG|EX_TRLBAR,",
          "1480: EXCMD(CMD_tabfirst, \"tabfirst\", ex_tabnext,",
          "1481:    EX_TRLBAR,",
          "1483: EXCMD(CMD_tabmove,  \"tabmove\", ex_tabmove,",
          "1484:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_NOSPC|EX_TRLBAR,",
          "1486: EXCMD(CMD_tablast,  \"tablast\", ex_tabnext,",
          "1487:    EX_TRLBAR,",
          "1489: EXCMD(CMD_tabnext,  \"tabnext\", ex_tabnext,",
          "1490:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_NOSPC|EX_TRLBAR,",
          "1492: EXCMD(CMD_tabnew,  \"tabnew\", ex_splitview,",
          "1493:    EX_BANG|EX_FILE1|EX_RANGE|EX_ZEROR|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "1495: EXCMD(CMD_tabonly,  \"tabonly\", ex_tabonly,",
          "1496:    EX_BANG|EX_RANGE|EX_ZEROR|EX_EXTRA|EX_NOSPC|EX_TRLBAR|EX_CMDWIN,",
          "1498: EXCMD(CMD_tabprevious, \"tabprevious\", ex_tabnext,",
          "1499:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_NOSPC|EX_TRLBAR,",
          "1501: EXCMD(CMD_tabNext,  \"tabNext\", ex_tabnext,",
          "1502:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_NOSPC|EX_TRLBAR,",
          "1504: EXCMD(CMD_tabrewind, \"tabrewind\", ex_tabnext,",
          "1505:    EX_TRLBAR,",
          "1507: EXCMD(CMD_tabs,  \"tabs\",  ex_tabs,",
          "1508:    EX_TRLBAR|EX_CMDWIN,",
          "1510: EXCMD(CMD_tcd,  \"tcd\",  ex_cd,",
          "1511:    EX_BANG|EX_FILE1|EX_TRLBAR|EX_CMDWIN,",
          "1513: EXCMD(CMD_tchdir,  \"tchdir\", ex_cd,",
          "1514:    EX_BANG|EX_FILE1|EX_TRLBAR|EX_CMDWIN,",
          "1516: EXCMD(CMD_tcl,  \"tcl\",  ex_tcl,",
          "1517:    EX_RANGE|EX_EXTRA|EX_NEEDARG|EX_CMDWIN|EX_RESTRICT,",
          "1519: EXCMD(CMD_tcldo,  \"tcldo\", ex_tcldo,",
          "1520:    EX_RANGE|EX_DFLALL|EX_EXTRA|EX_NEEDARG|EX_CMDWIN|EX_RESTRICT,",
          "1522: EXCMD(CMD_tclfile,  \"tclfile\", ex_tclfile,",
          "1523:    EX_RANGE|EX_FILE1|EX_NEEDARG|EX_CMDWIN|EX_RESTRICT,",
          "1525: EXCMD(CMD_tearoff,  \"tearoff\", ex_tearoff,",
          "1526:    EX_NEEDARG|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CMDWIN,",
          "1528: EXCMD(CMD_terminal, \"terminal\", ex_terminal,",
          "1529:    EX_RANGE|EX_BANG|EX_FILES|EX_CMDWIN,",
          "1531: EXCMD(CMD_tfirst,  \"tfirst\", ex_tag,",
          "1532:    EX_RANGE|EX_BANG|EX_TRLBAR|EX_ZEROR,",
          "1534: EXCMD(CMD_throw,  \"throw\", ex_throw,",
          "1535:    EX_EXTRA|EX_NEEDARG|EX_SBOXOK|EX_CMDWIN,",
          "1537: EXCMD(CMD_tjump,  \"tjump\", ex_tag,",
          "1538:    EX_BANG|EX_TRLBAR|EX_WORD1,",
          "1540: EXCMD(CMD_tlast,  \"tlast\", ex_tag,",
          "1541:    EX_BANG|EX_TRLBAR,",
          "1543: EXCMD(CMD_tlmenu,  \"tlmenu\", ex_menu,",
          "1544:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1546: EXCMD(CMD_tlnoremenu, \"tlnoremenu\", ex_menu,",
          "1547:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1549: EXCMD(CMD_tlunmenu, \"tlunmenu\", ex_menu,",
          "1550:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1552: EXCMD(CMD_tmenu,  \"tmenu\", ex_menu,",
          "1553:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1555: EXCMD(CMD_tmap,  \"tmap\",  ex_map,",
          "1556:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1558: EXCMD(CMD_tmapclear, \"tmapclear\", ex_mapclear,",
          "1559:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "1561: EXCMD(CMD_tnext,  \"tnext\", ex_tag,",
          "1562:    EX_RANGE|EX_BANG|EX_TRLBAR|EX_ZEROR,",
          "1564: EXCMD(CMD_tnoremap, \"tnoremap\", ex_map,",
          "1565:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1567: EXCMD(CMD_topleft,  \"topleft\", ex_wrongmodifier,",
          "1568:    EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM,",
          "1570: EXCMD(CMD_tprevious, \"tprevious\", ex_tag,",
          "1571:    EX_RANGE|EX_BANG|EX_TRLBAR|EX_ZEROR,",
          "1573: EXCMD(CMD_trewind,  \"trewind\", ex_tag,",
          "1574:    EX_RANGE|EX_BANG|EX_TRLBAR|EX_ZEROR,",
          "1576: EXCMD(CMD_try,  \"try\",  ex_try,",
          "1577:    EX_TRLBAR|EX_SBOXOK|EX_CMDWIN,",
          "1579: EXCMD(CMD_tselect,  \"tselect\", ex_tag,",
          "1580:    EX_BANG|EX_TRLBAR|EX_WORD1,",
          "1582: EXCMD(CMD_tunmenu,  \"tunmenu\", ex_menu,",
          "1583:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1585: EXCMD(CMD_tunmap,  \"tunmap\", ex_unmap,",
          "1586:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1588: EXCMD(CMD_undo,  \"undo\",  ex_undo,",
          "1589:    EX_RANGE|EX_COUNT|EX_ZEROR|EX_TRLBAR|EX_CMDWIN,",
          "1591: EXCMD(CMD_undojoin, \"undojoin\", ex_undojoin,",
          "1592:    EX_TRLBAR|EX_CMDWIN,",
          "1594: EXCMD(CMD_undolist, \"undolist\", ex_undolist,",
          "1595:    EX_TRLBAR|EX_CMDWIN,",
          "1597: EXCMD(CMD_unabbreviate, \"unabbreviate\", ex_abbreviate,",
          "1598:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1600: EXCMD(CMD_unhide,  \"unhide\", ex_buffer_all,",
          "1601:    EX_RANGE|EX_COUNT|EX_TRLBAR,",
          "1603: EXCMD(CMD_unlet,  \"unlet\", ex_unlet,",
          "1604:    EX_BANG|EX_EXTRA|EX_NEEDARG|EX_SBOXOK|EX_CMDWIN,",
          "1606: EXCMD(CMD_unlockvar, \"unlockvar\", ex_lockvar,",
          "1607:    EX_BANG|EX_EXTRA|EX_NEEDARG|EX_SBOXOK|EX_CMDWIN,",
          "1609: EXCMD(CMD_unmap,  \"unmap\", ex_unmap,",
          "1610:    EX_BANG|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1612: EXCMD(CMD_unmenu,  \"unmenu\", ex_menu,",
          "1613:    EX_BANG|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1615: EXCMD(CMD_unsilent, \"unsilent\", ex_wrongmodifier,",
          "1616:    EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM|EX_SBOXOK|EX_CMDWIN,",
          "1618: EXCMD(CMD_update, \"update\", ex_update,",
          "1619:    EX_RANGE|EX_WHOLEFOLD|EX_BANG|EX_FILE1|EX_ARGOPT|EX_DFLALL|EX_TRLBAR,",
          "1621: EXCMD(CMD_vglobal, \"vglobal\", ex_global,",
          "1622:    EX_RANGE|EX_WHOLEFOLD|EX_EXTRA|EX_DFLALL|EX_CMDWIN,",
          "1624: EXCMD(CMD_version, \"version\", ex_version,",
          "1625:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "1627: EXCMD(CMD_verbose, \"verbose\", ex_wrongmodifier,",
          "1628:    EX_NEEDARG|EX_RANGE|EX_EXTRA|EX_NOTRLCOM|EX_SBOXOK|EX_CMDWIN,",
          "1630: EXCMD(CMD_vertical, \"vertical\", ex_wrongmodifier,",
          "1631:    EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM,",
          "1633: EXCMD(CMD_visual, \"visual\", ex_edit,",
          "1634:    EX_BANG|EX_FILE1|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "1636: EXCMD(CMD_view,  \"view\",  ex_edit,",
          "1637:    EX_BANG|EX_FILE1|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "1639: EXCMD(CMD_vimgrep, \"vimgrep\", ex_vimgrep,",
          "1640:    EX_RANGE|EX_BANG|EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM|EX_TRLBAR|EX_XFILE,",
          "1642: EXCMD(CMD_vimgrepadd, \"vimgrepadd\", ex_vimgrep,",
          "1643:    EX_RANGE|EX_BANG|EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM|EX_TRLBAR|EX_XFILE,",
          "1645: EXCMD(CMD_viusage, \"viusage\", ex_viusage,",
          "1646:    EX_TRLBAR,",
          "1648: EXCMD(CMD_vmap,  \"vmap\",  ex_map,",
          "1649:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1651: EXCMD(CMD_vmapclear, \"vmapclear\", ex_mapclear,",
          "1652:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "1654: EXCMD(CMD_vmenu, \"vmenu\", ex_menu,",
          "1655:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1657: EXCMD(CMD_vnoremap, \"vnoremap\", ex_map,",
          "1658:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1660: EXCMD(CMD_vnew,  \"vnew\",  ex_splitview,",
          "1661:    EX_BANG|EX_FILE1|EX_RANGE|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "1663: EXCMD(CMD_vnoremenu, \"vnoremenu\", ex_menu,",
          "1664:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1666: EXCMD(CMD_vsplit, \"vsplit\", ex_splitview,",
          "1667:    EX_BANG|EX_FILE1|EX_RANGE|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "1669: EXCMD(CMD_vunmap, \"vunmap\", ex_unmap,",
          "1670:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1672: EXCMD(CMD_vunmenu, \"vunmenu\", ex_menu,",
          "1673:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1675: EXCMD(CMD_write, \"write\", ex_write,",
          "1676:    EX_RANGE|EX_WHOLEFOLD|EX_BANG|EX_FILE1|EX_ARGOPT|EX_DFLALL|EX_TRLBAR|EX_CMDWIN,",
          "1678: EXCMD(CMD_wNext, \"wNext\", ex_wnext,",
          "1679:    EX_RANGE|EX_WHOLEFOLD|EX_BANG|EX_FILE1|EX_ARGOPT|EX_TRLBAR,",
          "1681: EXCMD(CMD_wall,  \"wall\",  do_wqall,",
          "1682:    EX_BANG|EX_TRLBAR|EX_CMDWIN,",
          "1684: EXCMD(CMD_while, \"while\", ex_while,",
          "1685:    EX_EXTRA|EX_NOTRLCOM|EX_SBOXOK|EX_CMDWIN,",
          "1687: EXCMD(CMD_winsize, \"winsize\", ex_winsize,",
          "1688:    EX_EXTRA|EX_NEEDARG|EX_TRLBAR,",
          "1690: EXCMD(CMD_wincmd, \"wincmd\", ex_wincmd,",
          "1691:    EX_NEEDARG|EX_WORD1|EX_RANGE|EX_CMDWIN,",
          "1693: EXCMD(CMD_windo, \"windo\", ex_listdo,",
          "1694:    EX_NEEDARG|EX_EXTRA|EX_NOTRLCOM|EX_RANGE|EX_DFLALL,",
          "1696: EXCMD(CMD_winpos, \"winpos\", ex_winpos,",
          "1697:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "1699: EXCMD(CMD_wnext, \"wnext\", ex_wnext,",
          "1700:    EX_RANGE|EX_BANG|EX_FILE1|EX_ARGOPT|EX_TRLBAR,",
          "1702: EXCMD(CMD_wprevious, \"wprevious\", ex_wnext,",
          "1703:    EX_RANGE|EX_BANG|EX_FILE1|EX_ARGOPT|EX_TRLBAR,",
          "1705: EXCMD(CMD_wq,  \"wq\",  ex_exit,",
          "1706:    EX_RANGE|EX_WHOLEFOLD|EX_BANG|EX_FILE1|EX_ARGOPT|EX_DFLALL|EX_TRLBAR,",
          "1708: EXCMD(CMD_wqall, \"wqall\", do_wqall,",
          "1709:    EX_BANG|EX_FILE1|EX_ARGOPT|EX_TRLBAR,",
          "1711: EXCMD(CMD_wundo, \"wundo\", ex_wundo,",
          "1712:    EX_BANG|EX_NEEDARG|EX_FILE1,",
          "1714: EXCMD(CMD_wviminfo, \"wviminfo\", ex_viminfo,",
          "1715:    EX_BANG|EX_FILE1|EX_TRLBAR|EX_CMDWIN,",
          "1717: EXCMD(CMD_xit,  \"xit\",  ex_exit,",
          "1718:    EX_RANGE|EX_WHOLEFOLD|EX_BANG|EX_FILE1|EX_ARGOPT|EX_DFLALL|EX_TRLBAR|EX_CMDWIN,",
          "1720: EXCMD(CMD_xall,  \"xall\",  do_wqall,",
          "1721:    EX_BANG|EX_TRLBAR,",
          "1723: EXCMD(CMD_xmap,  \"xmap\",  ex_map,",
          "1724:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1726: EXCMD(CMD_xmapclear, \"xmapclear\", ex_mapclear,",
          "1727:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "1729: EXCMD(CMD_xmenu, \"xmenu\", ex_menu,",
          "1730:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1732: EXCMD(CMD_xnoremap, \"xnoremap\", ex_map,",
          "1733:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1735: EXCMD(CMD_xnoremenu, \"xnoremenu\", ex_menu,",
          "1736:    EX_RANGE|EX_ZEROR|EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1738: EXCMD(CMD_xrestore, \"xrestore\", ex_xrestore,",
          "1739:    EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "1741: EXCMD(CMD_xunmap, \"xunmap\", ex_unmap,",
          "1742:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1744: EXCMD(CMD_xunmenu, \"xunmenu\", ex_menu,",
          "1745:    EX_EXTRA|EX_TRLBAR|EX_NOTRLCOM|EX_CTRLV|EX_CMDWIN,",
          "1747: EXCMD(CMD_yank,  \"yank\",  ex_operators,",
          "1748:    EX_RANGE|EX_WHOLEFOLD|EX_REGSTR|EX_COUNT|EX_TRLBAR|EX_CMDWIN,",
          "1750: EXCMD(CMD_z,  \"z\",  ex_z,",
          "1751:    EX_RANGE|EX_WHOLEFOLD|EX_EXTRA|EX_FLAGS|EX_TRLBAR|EX_CMDWIN,",
          "1755: EXCMD(CMD_bang,  \"!\",  ex_bang,",
          "1756:    EX_RANGE|EX_WHOLEFOLD|EX_BANG|EX_FILES|EX_CMDWIN,",
          "1758: EXCMD(CMD_pound, \"#\",  ex_print,",
          "1759:    EX_RANGE|EX_WHOLEFOLD|EX_COUNT|EX_FLAGS|EX_TRLBAR|EX_CMDWIN,",
          "1761: EXCMD(CMD_and,  \"&\",  do_sub,",
          "1762:    EX_RANGE|EX_WHOLEFOLD|EX_EXTRA|EX_CMDWIN|EX_MODIFY,",
          "1764: EXCMD(CMD_star,  \"*\",  ex_at,",
          "1765:    EX_RANGE|EX_WHOLEFOLD|EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "1767: EXCMD(CMD_lshift, \"<\",  ex_operators,",
          "1768:    EX_RANGE|EX_WHOLEFOLD|EX_COUNT|EX_FLAGS|EX_TRLBAR|EX_CMDWIN|EX_MODIFY,",
          "1770: EXCMD(CMD_equal, \"=\",  ex_equal,",
          "1771:    EX_RANGE|EX_TRLBAR|EX_DFLALL|EX_FLAGS|EX_CMDWIN,",
          "1773: EXCMD(CMD_rshift, \">\",  ex_operators,",
          "1774:    EX_RANGE|EX_WHOLEFOLD|EX_COUNT|EX_FLAGS|EX_TRLBAR|EX_CMDWIN|EX_MODIFY,",
          "1776: EXCMD(CMD_at,  \"@\",  ex_at,",
          "1777:    EX_RANGE|EX_WHOLEFOLD|EX_EXTRA|EX_TRLBAR|EX_CMDWIN,",
          "1779: EXCMD(CMD_Next,  \"Next\",  ex_previous,",
          "1780:    EX_EXTRA|EX_RANGE|EX_COUNT|EX_BANG|EX_CMDARG|EX_ARGOPT|EX_TRLBAR,",
          "1782: EXCMD(CMD_Print, \"Print\", ex_print,",
          "1783:    EX_RANGE|EX_WHOLEFOLD|EX_COUNT|EX_FLAGS|EX_TRLBAR|EX_CMDWIN,",
          "1785: EXCMD(CMD_X,  \"X\",  ex_X,",
          "1786:    EX_TRLBAR,",
          "1788: EXCMD(CMD_tilde, \"~\",  do_sub,",
          "1789:    EX_RANGE|EX_WHOLEFOLD|EX_EXTRA|EX_CMDWIN|EX_MODIFY,",
          "1792: #undef EXCMD",
          "",
          "---------------"
        ],
        "src/ex_docmd.c||src/ex_docmd.c": [
          "File: src/ex_docmd.c -> src/ex_docmd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1844:  if (*ea.cmd == '|' || (exmode_active && ea.line1 != ea.line2))",
          "1845:  {",
          "1846:      ea.cmdidx = CMD_print;",
          "1848:      if ((errormsg = invalid_range(&ea)) == NULL)",
          "1849:      {",
          "1850:   correct_range(&ea);",
          "",
          "[Removed Lines]",
          "1847:      ea.argt = RANGE+COUNT+TRLBAR;",
          "",
          "[Added Lines]",
          "1847:      ea.argt = EX_RANGE+EX_COUNT+EX_TRLBAR;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1976:     if (!ea.skip)",
          "1977:     {",
          "1978: #ifdef HAVE_SANDBOX",
          "1980:  {",
          "1982:      errormsg = _(e_sandbox);",
          "1983:      goto doend;",
          "1984:  }",
          "1985: #endif",
          "1987:  {",
          "1988:      errormsg = _(\"E981: Command not allowed in rvim\");",
          "1989:      goto doend;",
          "1990:  }",
          "1992:  {",
          "1994:      errormsg = _(e_modifiable);",
          "1995:      goto doend;",
          "1996:  }",
          "1999:   && !IS_USER_CMDIDX(ea.cmdidx))",
          "2000:  {",
          "",
          "[Removed Lines]",
          "1979:  if (sandbox != 0 && !(ea.argt & SBOXOK))",
          "1986:  if (restricted != 0 && (ea.argt & RESTRICT))",
          "1991:  if (!curbuf->b_p_ma && (ea.argt & MODIFY))",
          "1998:  if (text_locked() && !(ea.argt & CMDWIN)",
          "",
          "[Added Lines]",
          "1979:  if (sandbox != 0 && !(ea.argt & EX_SBOXOK))",
          "1986:  if (restricted != 0 && (ea.argt & EX_RESTRICT))",
          "1991:  if (!curbuf->b_p_ma && (ea.argt & EX_MODIFY))",
          "1998:  if (text_locked() && !(ea.argt & EX_CMDWIN)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2011:   && ea.cmdidx != CMD_checktime",
          "2012:   && ea.cmdidx != CMD_edit",
          "2013:   && ea.cmdidx != CMD_file",
          "",
          "[Removed Lines]",
          "2010:  if (!(ea.argt & CMDWIN)",
          "",
          "[Added Lines]",
          "2010:  if (!(ea.argt & EX_CMDWIN)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2015:   && curbuf_locked())",
          "2016:      goto doend;",
          "2019:  {",
          "2021:      errormsg = _(e_norange);",
          "",
          "[Removed Lines]",
          "2018:  if (!ni && !(ea.argt & RANGE) && ea.addr_count > 0)",
          "",
          "[Added Lines]",
          "2018:  if (!ni && !(ea.argt & EX_RANGE) && ea.addr_count > 0)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2023:  }",
          "2024:     }",
          "2027:     {",
          "2028:  errormsg = _(e_nobang);",
          "2029:  goto doend;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2026:     if (!ni && !(ea.argt & EX_BANG) && ea.forceit) // no <!> allowed",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2037:     {",
          "",
          "[Removed Lines]",
          "2036:     if (!ea.skip && !ni && (ea.argt & RANGE))",
          "",
          "[Added Lines]",
          "2036:     if (!ea.skip && !ni && (ea.argt & EX_RANGE))",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2068:     correct_range(&ea);",
          "2070: #ifdef FEAT_FOLDING",
          "2072:      && ea.addr_type == ADDR_LINES)",
          "2073:     {",
          "",
          "[Removed Lines]",
          "2071:     if (((ea.argt & WHOLEFOLD) || ea.addr_count >= 2) && !global_busy",
          "",
          "[Added Lines]",
          "2071:     if (((ea.argt & EX_WHOLEFOLD) || ea.addr_count >= 2) && !global_busy",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2109:  while (ea.arg[0] == '+' && ea.arg[1] == '+')",
          "2110:      if (getargopt(&ea) == FAIL && !ni)",
          "2111:      {",
          "",
          "[Removed Lines]",
          "2108:     if (ea.argt & ARGOPT)",
          "",
          "[Added Lines]",
          "2108:     if (ea.argt & EX_ARGOPT)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2165:  ea.do_ecmd_cmd = getargcmd(&ea.arg);",
          "2172:  separate_nextcmd(&ea);",
          "",
          "[Removed Lines]",
          "2164:     if ((ea.argt & EDITCMD) && !ea.usefilter)",
          "2171:     if ((ea.argt & TRLBAR) && !ea.usefilter)",
          "",
          "[Added Lines]",
          "2164:     if ((ea.argt & EX_CMDARG) && !ea.usefilter)",
          "2171:     if ((ea.argt & EX_TRLBAR) && !ea.usefilter)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2201:  }",
          "2202:     }",
          "2205:     {",
          "2206:  buf_T     *buf;",
          "",
          "[Removed Lines]",
          "2204:     if ((ea.argt & DFLALL) && ea.addr_count == 0)",
          "",
          "[Added Lines]",
          "2204:     if ((ea.argt & EX_DFLALL) && ea.addr_count == 0)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2251:      case ADDR_NONE:",
          "2252:      case ADDR_UNSIGNED:",
          "2253:      case ADDR_QUICKFIX:",
          "2255:   break;",
          "2256:  }",
          "2257:     }",
          "2261:      && *ea.arg != NUL",
          "2263:      && (!IS_USER_CMDIDX(ea.cmdidx) || *ea.arg != '=')",
          "2265:     {",
          "2266: #ifndef FEAT_CLIPBOARD",
          "",
          "[Removed Lines]",
          "2254:   iemsg(_(\"INTERNAL: Cannot use DFLALL with ADDR_NONE, ADDR_UNSIGNED or ADDR_QUICKFIX\"));",
          "2260:     if (       (ea.argt & REGSTR)",
          "2264:      && !((ea.argt & COUNT) && VIM_ISDIGIT(*ea.arg)))",
          "",
          "[Added Lines]",
          "2254:   iemsg(_(\"INTERNAL: Cannot use EX_DFLALL with ADDR_NONE, ADDR_UNSIGNED or ADDR_QUICKFIX\"));",
          "2260:     if (       (ea.argt & EX_REGSTR)",
          "2264:      && !((ea.argt & EX_COUNT) && VIM_ISDIGIT(*ea.arg)))",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2288:     }",
          "2296:          || VIM_ISWHITE(*p)))",
          "2297:     {",
          "2298:  n = getdigits(&ea.arg);",
          "2299:  ea.arg = skipwhite(ea.arg);",
          "2301:  {",
          "2302:      errormsg = _(e_zerocount);",
          "2303:      goto doend;",
          "",
          "[Removed Lines]",
          "2294:     if ((ea.argt & COUNT) && VIM_ISDIGIT(*ea.arg)",
          "2295:      && (!(ea.argt & BUFNAME) || *(p = skipdigits(ea.arg)) == NUL",
          "2300:  if (n <= 0 && !ni && (ea.argt & ZEROR) == 0)",
          "",
          "[Added Lines]",
          "2294:     if ((ea.argt & EX_COUNT) && VIM_ISDIGIT(*ea.arg)",
          "2295:      && (!(ea.argt & EX_BUFNAME) || *(p = skipdigits(ea.arg)) == NUL",
          "2300:  if (n <= 0 && !ni && (ea.argt & EX_ZEROR) == 0)",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2328:  get_flags(&ea);",
          "2332:     {",
          "2333:  errormsg = _(e_trailing);",
          "2334:  goto doend;",
          "2335:     }",
          "2338:     {",
          "2339:  errormsg = _(e_argreq);",
          "2340:  goto doend;",
          "",
          "[Removed Lines]",
          "2327:     if (ea.argt & EXFLAGS)",
          "2330:     if (!ni && !(ea.argt & EXTRA) && *ea.arg != NUL",
          "2331:      && *ea.arg != '\"' && (*ea.arg != '|' || (ea.argt & TRLBAR) == 0))",
          "2337:     if (!ni && (ea.argt & NEEDARG) && *ea.arg == NUL)",
          "",
          "[Added Lines]",
          "2327:     if (ea.argt & EX_FLAGS)",
          "2329:     if (!ni && !(ea.argt & EX_EXTRA) && *ea.arg != NUL",
          "2330:      && *ea.arg != '\"' && (*ea.arg != '|' || (ea.argt & EX_TRLBAR) == 0))",
          "2337:     if (!ni && (ea.argt & EX_NEEDARG) && *ea.arg == NUL)",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2435:     }",
          "2436: #endif",
          "2439:     {",
          "2440:  if (expand_filename(&ea, cmdlinep, &errormsg) == FAIL)",
          "2441:      goto doend;",
          "",
          "[Removed Lines]",
          "2438:     if (ea.argt & XFILE)",
          "",
          "[Added Lines]",
          "2438:     if (ea.argt & EX_XFILE)",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2449:      && !IS_USER_CMDIDX(ea.cmdidx))",
          "2450:     {",
          "",
          "[Removed Lines]",
          "2448:     if ((ea.argt & BUFNAME) && *ea.arg != NUL && ea.addr_count == 0",
          "",
          "[Added Lines]",
          "2448:     if ((ea.argt & EX_BUFNAME) && *ea.arg != NUL && ea.addr_count == 0",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2462:      while (p > ea.arg && VIM_ISWHITE(p[-1]))",
          "2463:   --p;",
          "2464:  }",
          "2466:         FALSE, FALSE);",
          "2468:      goto doend;",
          "",
          "[Removed Lines]",
          "2465:  ea.line2 = buflist_findpat(ea.arg, p, (ea.argt & BUFUNL) != 0,",
          "",
          "[Added Lines]",
          "2465:  ea.line2 = buflist_findpat(ea.arg, p, (ea.argt & EX_BUFUNL) != 0,",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "3528:     }",
          "3532:     {",
          "3534:  p = arg + 1;",
          "",
          "[Removed Lines]",
          "3531:     if ((ea.argt & EDITCMD) && !usefilter && *arg == '+')",
          "",
          "[Added Lines]",
          "3531:     if ((ea.argt & EX_CMDARG) && !usefilter && *arg == '+')",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "3550:     {",
          "3551:  p = arg;",
          "",
          "[Removed Lines]",
          "3549:     if ((ea.argt & TRLBAR) && !usefilter)",
          "",
          "[Added Lines]",
          "3549:     if ((ea.argt & EX_TRLBAR) && !usefilter)",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "3559:   if (p[1] != NUL)",
          "3560:       ++p;",
          "3561:      }",
          "3563:       || *p == '|' || *p == '\\n')",
          "3564:      {",
          "3565:   if (*(p - 1) != '\\\\')",
          "",
          "[Removed Lines]",
          "3562:      else if ( (*p == '\"' && !(ea.argt & NOTRLCOM))",
          "",
          "[Added Lines]",
          "3562:      else if ( (*p == '\"' && !(ea.argt & EX_NOTRLCOM))",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "3573:  }",
          "3574:     }",
          "3579:  return NULL;",
          "",
          "[Removed Lines]",
          "3577:     if (!(ea.argt & EXTRA) && *arg != NUL &&",
          "3578:         vim_strchr((char_u *)\"|\\\"\", *arg) == NULL)",
          "",
          "[Added Lines]",
          "3576:     if (!(ea.argt & EX_EXTRA) && *arg != NUL",
          "3577:       && vim_strchr((char_u *)\"|\\\"\", *arg) == NULL)",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "3597:  }",
          "3598:     }",
          "3601:     {",
          "3602:  int c;",
          "3603:  int in_quote = FALSE;",
          "",
          "[Removed Lines]",
          "3600:     if (ea.argt & XFILE)",
          "",
          "[Added Lines]",
          "3600:     if (ea.argt & EX_XFILE)",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "3631:      else if (c == '|' || c == '\\n' || c == '\"' || (VIM_ISWHITE(c)",
          "3632: #ifdef SPACE_IN_FILENAME",
          "3634: #endif",
          "3635:       ))",
          "3636:      {",
          "",
          "[Removed Lines]",
          "3633:       && (!(ea.argt & NOSPC) || usefilter)",
          "",
          "[Added Lines]",
          "3633:      && (!(ea.argt & EX_NOSPC) || usefilter)",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "4001:  case CMD_USER_BUF:",
          "4002:      if (compl != EXPAND_NOTHING)",
          "4003:      {",
          "4006:   {",
          "4007: #ifdef FEAT_MENU",
          "4008:       if (compl == EXPAND_MENUS)",
          "",
          "[Removed Lines]",
          "4005:   if (!(ea.argt & XFILE))",
          "",
          "[Added Lines]",
          "4005:   if (!(ea.argt & EX_XFILE))",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "4652:      || eap->line1 > eap->line2)",
          "4653:  return _(e_invrange);",
          "4656:     {",
          "4657:  switch (eap->addr_type)",
          "4658:  {",
          "",
          "[Removed Lines]",
          "4655:     if (eap->argt & RANGE)",
          "",
          "[Added Lines]",
          "4655:     if (eap->argt & EX_RANGE)",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "4738:     static void",
          "4739: correct_range(exarg_T *eap)",
          "4740: {",
          "4742:     {",
          "4743:  if (eap->line1 == 0)",
          "4744:      eap->line1 = 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4741:     if (!(eap->argt & EX_ZEROR))     // zero in range not allowed",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "4947:   && eap->cmdidx != CMD_make",
          "4948:   && eap->cmdidx != CMD_terminal",
          "4949: #ifndef UNIX",
          "4951: #endif",
          "4952:   )",
          "4953:  {",
          "",
          "[Removed Lines]",
          "4950:   && !(eap->argt & NOSPC)",
          "",
          "[Added Lines]",
          "4950:   && !(eap->argt & EX_NOSPC)",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "5003:     {",
          "",
          "[Removed Lines]",
          "5002:     if ((eap->argt & NOSPC) && !eap->usefilter)",
          "",
          "[Added Lines]",
          "5002:     if ((eap->argt & EX_NOSPC) && !eap->usefilter)",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "5150:     {",
          "5151:  if (*p == Ctrl_V)",
          "5152:  {",
          "5155:      else",
          "",
          "[Removed Lines]",
          "5153:      if (eap->argt & (USECTRLV | XFILE))",
          "",
          "[Added Lines]",
          "5153:      if (eap->argt & (EX_CTRLV | EX_XFILE))",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "5162: #ifdef FEAT_EVAL",
          "5165:  {",
          "5166:      p += 2;",
          "5167:      (void)skip_expr(&p);",
          "",
          "[Removed Lines]",
          "5164:  else if (p[0] == '`' && p[1] == '=' && (eap->argt & XFILE))",
          "",
          "[Added Lines]",
          "5164:  else if (p[0] == '`' && p[1] == '=' && (eap->argt & EX_XFILE))",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "5175:       && ((eap->cmdidx != CMD_at && eap->cmdidx != CMD_star)",
          "5176:    || p != eap->arg)",
          "5177:       && (eap->cmdidx != CMD_redir",
          "",
          "[Removed Lines]",
          "5174:  else if ((*p == '\"' && !(eap->argt & NOTRLCOM)",
          "",
          "[Added Lines]",
          "5174:  else if ((*p == '\"' && !(eap->argt & EX_NOTRLCOM)",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "5179:   || *p == '|' || *p == '\\n')",
          "5180:  {",
          "5185:      if ((vim_strchr(p_cpo, CPO_BAR) == NULL",
          "5187:      {",
          "5189:   --p;",
          "",
          "[Removed Lines]",
          "5186:          || !(eap->argt & USECTRLV)) && *(p - 1) == '\\\\')",
          "",
          "[Added Lines]",
          "5186:          || !(eap->argt & EX_CTRLV)) && *(p - 1) == '\\\\')",
          "",
          "---------------"
        ],
        "src/ex_getln.c||src/ex_getln.c": [
          "File: src/ex_getln.c -> src/ex_getln.c"
        ],
        "src/syntax.c||src/syntax.c": [
          "File: src/syntax.c -> src/syntax.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4813:     separate_nextcmd(eap);",
          "4814:     if (*eap->arg == '<' || *eap->arg == '$' || mch_isFullName(eap->arg))",
          "4815:     {",
          "",
          "[Removed Lines]",
          "4812:     eap->argt |= (XFILE | NOSPC);",
          "",
          "[Added Lines]",
          "4812:     eap->argt |= (EX_XFILE | EX_NOSPC);",
          "",
          "---------------"
        ],
        "src/usercmd.c||src/usercmd.c": [
          "File: src/usercmd.c -> src/usercmd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "421:      len = 4;",
          "423:      {",
          "424:   msg_putchar('!');",
          "425:   --len;",
          "426:      }",
          "428:      {",
          "429:   msg_putchar('\"');",
          "430:   --len;",
          "",
          "[Removed Lines]",
          "422:      if (a & BANG)",
          "427:      if (a & REGSTR)",
          "",
          "[Added Lines]",
          "422:      if (a & EX_BANG)",
          "427:      if (a & EX_REGSTR)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "434:   msg_putchar('b');",
          "435:   --len;",
          "436:      }",
          "438:      {",
          "439:   msg_putchar('|');",
          "440:   --len;",
          "",
          "[Removed Lines]",
          "437:      if (a & TRLBAR)",
          "",
          "[Added Lines]",
          "437:      if (a & EX_TRLBAR)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "456:      len = 0;",
          "460:      {",
          "466:      }",
          "468:      do {",
          "",
          "[Removed Lines]",
          "459:      switch ((int)(a & (EXTRA|NOSPC|NEEDARG)))",
          "461:   case 0:       IObuff[len++] = '0'; break;",
          "462:   case (EXTRA):      IObuff[len++] = '*'; break;",
          "463:   case (EXTRA|NOSPC):     IObuff[len++] = '?'; break;",
          "464:   case (EXTRA|NEEDARG):     IObuff[len++] = '+'; break;",
          "465:   case (EXTRA|NOSPC|NEEDARG): IObuff[len++] = '1'; break;",
          "",
          "[Added Lines]",
          "459:      switch ((int)(a & (EX_EXTRA|EX_NOSPC|EX_NEEDARG)))",
          "461:   case 0:    IObuff[len++] = '0'; break;",
          "462:   case (EX_EXTRA):  IObuff[len++] = '*'; break;",
          "463:   case (EX_EXTRA|EX_NOSPC): IObuff[len++] = '?'; break;",
          "464:   case (EX_EXTRA|EX_NEEDARG): IObuff[len++] = '+'; break;",
          "465:   case (EX_EXTRA|EX_NOSPC|EX_NEEDARG): IObuff[len++] = '1'; break;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "470:      } while (len < 5 - over);",
          "474:      {",
          "476:   {",
          "478:       sprintf((char *)IObuff + len, \"%ldc\", cmd->uc_def);",
          "479:       len += (int)STRLEN(IObuff + len);",
          "480:   }",
          "482:       IObuff[len++] = '%';",
          "483:   else if (cmd->uc_def >= 0)",
          "484:   {",
          "",
          "[Removed Lines]",
          "473:      if (a & (RANGE|COUNT))",
          "475:   if (a & COUNT)",
          "481:   else if (a & DFLALL)",
          "",
          "[Added Lines]",
          "473:      if (a & (EX_RANGE|EX_COUNT))",
          "475:   if (a & EX_COUNT)",
          "481:   else if (a & EX_DFLALL)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1319:      quote = 1;",
          "1321:  switch (quote)",
          "",
          "[Removed Lines]",
          "1318:  if ((eap->argt & NOSPC) && quote == 2)",
          "",
          "[Added Lines]",
          "1318:  if ((eap->argt & EX_NOSPC) && quote == 2)",
          "",
          "---------------"
        ],
        "src/version.c||src/version.c": [
          "File: src/version.c -> src/version.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "778: static int included_patches[] =",
          "781:     1666,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "781:     1667,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5a6698169d10833abad88c98e5a332ddde5d110d",
      "candidate_info": {
        "commit_hash": "5a6698169d10833abad88c98e5a332ddde5d110d",
        "repo": "vim/vim",
        "commit_url": "https://github.com/vim/vim/commit/5a6698169d10833abad88c98e5a332ddde5d110d",
        "files": [
          "src/testdir/test_restricted.vim",
          "src/version.c"
        ],
        "message": "patch 8.1.0896: tests for restricted mode no run for MS-Windows GUI\n\nProblem:    Tests for restricted mode no run for MS-Windows GUI.\nSolution:   Make tests also work in MS-Windows GUI.",
        "before_after_code_files": [
          "src/testdir/test_restricted.vim||src/testdir/test_restricted.vim",
          "src/version.c||src/version.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/testdir/test_restricted.vim||src/testdir/test_restricted.vim",
            "src/version.c||src/version.c"
          ],
          "candidate": [
            "src/testdir/test_restricted.vim||src/testdir/test_restricted.vim",
            "src/version.c||src/version.c"
          ]
        }
      },
      "candidate_diff": {
        "src/testdir/test_restricted.vim||src/testdir/test_restricted.vim": [
          "File: src/testdir/test_restricted.vim -> src/testdir/test_restricted.vim",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: source shared.vim",
          "10: func Test_restricted()",
          "26: endfunc",
          "28: func Run_restricted_test(ex_cmd, error)",
          "",
          "[Removed Lines]",
          "5: if has('win32') && has('gui')",
          "6:   \" Win32 GUI shows a dialog instead of displaying the error in the last line.",
          "7:   finish",
          "8: endif",
          "11:   let cmd = GetVimCommand('Xrestricted')",
          "12:   if cmd == ''",
          "13:     return",
          "14:   endif",
          "16:   call writefile([",
          "17:  \\ \"silent !ls\",",
          "18:  \\ \"call writefile([v:errmsg], 'Xrestrout')\",",
          "19:  \\ \"qa!\",",
          "20:  \\ ], 'Xrestricted')",
          "21:   call system(cmd . ' -Z')",
          "22:   call assert_match('E145:', join(readfile('Xrestrout')))",
          "24:   call delete('Xrestricted')",
          "25:   call delete('Xrestrout')",
          "",
          "[Added Lines]",
          "5: \"if has('win32') && has('gui')",
          "6: \"  \" Win32 GUI shows a dialog instead of displaying the error in the last line.",
          "7: \"  finish",
          "8: \"endif",
          "11:   call Run_restricted_test('!ls', 'E145:')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31:     return",
          "32:   endif",
          "34:   call writefile([",
          "38:  \\ ], 'Xrestricted')",
          "39:   call system(cmd . ' -Z')",
          "40:   call assert_match(a:error, join(readfile('Xrestrout')))",
          "",
          "[Removed Lines]",
          "35:  \\ a:ex_cmd,",
          "36:  \\ \"call writefile([v:errmsg], 'Xrestrout')\",",
          "37:  \\ \"qa!\",",
          "",
          "[Added Lines]",
          "20:   \" Use a VimEnter autocommand to avoid that the error message is displayed in",
          "21:   \" a dialog with an OK button.",
          "23:  \\ \"func Init()\",",
          "24:  \\ \"  silent! \" . a:ex_cmd,",
          "25:  \\ \"  call writefile([v:errmsg], 'Xrestrout')\",",
          "26:  \\ \"  qa!\",",
          "27:  \\ \"endfunc\",",
          "28:  \\ \"au VimEnter * call Init()\",",
          "",
          "---------------"
        ],
        "src/version.c||src/version.c": [
          "File: src/version.c -> src/version.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "784: static int included_patches[] =",
          "787:     895,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "787:     896,",
          "",
          "---------------"
        ]
      }
    }
  ]
}