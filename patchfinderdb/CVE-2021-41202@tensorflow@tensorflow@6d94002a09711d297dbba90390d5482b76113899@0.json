{
  "cve_id": "CVE-2021-41202",
  "cve_desc": "TensorFlow is an open source platform for machine learning. In affected versions while calculating the size of the output within the `tf.range` kernel, there is a conditional statement of type `int64 = condition ? int64 : double`. Due to C++ implicit conversion rules, both branches of the condition will be cast to `double` and the result would be truncated before the assignment. This result in overflows. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "6d94002a09711d297dbba90390d5482b76113899",
  "patch_info": {
    "commit_hash": "6d94002a09711d297dbba90390d5482b76113899",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/6d94002a09711d297dbba90390d5482b76113899",
    "files": [
      "tensorflow/core/kernels/sequence_ops.cc",
      "tensorflow/python/kernel_tests/init_ops_test.py"
    ],
    "message": "Merge pull request #51359 from yongtang:46913-range-overflow\n\nPiperOrigin-RevId: 391529518\nChange-Id: Ie3db4ae6d3c0f3dc88404e1dbdc22f7d03cbeb3b",
    "before_after_code_files": [
      "tensorflow/core/kernels/sequence_ops.cc||tensorflow/core/kernels/sequence_ops.cc",
      "tensorflow/python/kernel_tests/init_ops_test.py||tensorflow/python/kernel_tests/init_ops_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/sequence_ops.cc||tensorflow/core/kernels/sequence_ops.cc": [
      "File: tensorflow/core/kernels/sequence_ops.cc -> tensorflow/core/kernels/sequence_ops.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "71:           errors::InvalidArgument(",
      "72:               \"Requires start >= limit when delta < 0: \", start, \"/\", limit));",
      "73:     }",
      "78:     Tensor* out = nullptr;",
      "79:     OP_REQUIRES_OK(context,",
      "80:                    context->allocate_output(0, TensorShape({size}), &out));",
      "",
      "[Removed Lines]",
      "74:     int64_t size = (std::is_integral<T>::value",
      "75:                         ? ((std::abs(limit - start) + std::abs(delta) - 1) /",
      "76:                            std::abs(delta))",
      "77:                         : std::ceil(std::abs((limit - start) / delta)));",
      "",
      "[Added Lines]",
      "74:     int64_t size = 0;",
      "75:     if (std::is_integral<T>::value) {",
      "76:       size = static_cast<int64>(",
      "77:           (std::abs(limit - start) + std::abs(delta) - 1) / std::abs(delta));",
      "78:     } else {",
      "79:       size = static_cast<int64>(std::ceil(std::abs((limit - start) / delta)));",
      "80:     }",
      "",
      "---------------"
    ],
    "tensorflow/python/kernel_tests/init_ops_test.py||tensorflow/python/kernel_tests/init_ops_test.py": [
      "File: tensorflow/python/kernel_tests/init_ops_test.py -> tensorflow/python/kernel_tests/init_ops_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "24: from tensorflow.python.framework import constant_op",
      "25: from tensorflow.python.framework import dtypes",
      "26: from tensorflow.python.framework import ops",
      "27: from tensorflow.python.framework import random_seed",
      "28: from tensorflow.python.framework import test_util",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "26: from tensorflow.python.framework import errors_impl",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "542:         constant_op.constant(4, dtype=dtypes.int32), dtype=dtypes.int64)",
      "543:     self.assertAllEqual(self.evaluate(tf_ans), np.array([0, 1, 2, 3]))",
      "546: # TODO(vrv): move to sequence_ops_test?",
      "547: class LinSpaceTest(test.TestCase):",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "546:   def testLargeLimits(self):",
      "547:     # Test case for GitHub issue 46913.",
      "548:     with self.session():",
      "549:       with self.assertRaises(errors_impl.ResourceExhaustedError):",
      "550:         v = math_ops.range(0, 9223372036854775807)",
      "551:         self.evaluate(v)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bff2f49a6d5e1d2f6eac55db42105b24a76badc2",
      "candidate_info": {
        "commit_hash": "bff2f49a6d5e1d2f6eac55db42105b24a76badc2",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/bff2f49a6d5e1d2f6eac55db42105b24a76badc2",
        "files": [
          "tensorflow/core/kernels/sequence_ops.cc",
          "tensorflow/python/kernel_tests/init_ops_test.py"
        ],
        "message": "Fix overflow/crash in tf.range when limits is large\n\nThis PR tries to address the issue raised in 46913 where\ntf.range (and implicitly tf.keras.layers.RepeatVector)\nwill overflow/crash when limits is large.\n\nThe reason of the overflow is that while calculating\nthe size within the kernel, the conditional statements\ncomes with `int64 = cond ? int64 : double` will implicitly\nconvert to double first and then cast back to int64, causing\nthe overflow and crash.\n\nThis PR fixes the issue by casting to int64 in both selections\nwithin the conditional statements first.\n\nThis PR fixes 46913.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>",
        "before_after_code_files": [
          "tensorflow/core/kernels/sequence_ops.cc||tensorflow/core/kernels/sequence_ops.cc",
          "tensorflow/python/kernel_tests/init_ops_test.py||tensorflow/python/kernel_tests/init_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/tensorflow/tensorflow/pull/51359"
        ],
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/sequence_ops.cc||tensorflow/core/kernels/sequence_ops.cc",
            "tensorflow/python/kernel_tests/init_ops_test.py||tensorflow/python/kernel_tests/init_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/sequence_ops.cc||tensorflow/core/kernels/sequence_ops.cc",
            "tensorflow/python/kernel_tests/init_ops_test.py||tensorflow/python/kernel_tests/init_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/sequence_ops.cc||tensorflow/core/kernels/sequence_ops.cc": [
          "File: tensorflow/core/kernels/sequence_ops.cc -> tensorflow/core/kernels/sequence_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:               \"Requires start >= limit when delta < 0: \", start, \"/\", limit));",
          "73:     }",
          "74:     int64_t size = (std::is_integral<T>::value",
          "78:     Tensor* out = nullptr;",
          "79:     OP_REQUIRES_OK(context,",
          "80:                    context->allocate_output(0, TensorShape({size}), &out));",
          "",
          "[Removed Lines]",
          "75:                         ? ((std::abs(limit - start) + std::abs(delta) - 1) /",
          "76:                            std::abs(delta))",
          "77:                         : std::ceil(std::abs((limit - start) / delta)));",
          "",
          "[Added Lines]",
          "75:                         ? static_cast<int64>(",
          "76:                             (std::abs(limit - start) + std::abs(delta) - 1) /",
          "77:                               std::abs(delta))",
          "78:                         : static_cast<int64>(",
          "79:                             std::ceil(std::abs((limit - start) / delta))));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/init_ops_test.py||tensorflow/python/kernel_tests/init_ops_test.py": [
          "File: tensorflow/python/kernel_tests/init_ops_test.py -> tensorflow/python/kernel_tests/init_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: from tensorflow.python.framework import constant_op",
          "25: from tensorflow.python.framework import dtypes",
          "26: from tensorflow.python.framework import ops",
          "27: from tensorflow.python.framework import random_seed",
          "28: from tensorflow.python.framework import test_util",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: from tensorflow.python.framework import errors_impl",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "542:         constant_op.constant(4, dtype=dtypes.int32), dtype=dtypes.int64)",
          "543:     self.assertAllEqual(self.evaluate(tf_ans), np.array([0, 1, 2, 3]))",
          "546: # TODO(vrv): move to sequence_ops_test?",
          "547: class LinSpaceTest(test.TestCase):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "546:   def testLargeLimits(self):",
          "547:     # Test case for GitHub issue 46913.",
          "548:     with self.session():",
          "549:       with self.assertRaises(errors_impl.ResourceExhaustedError):",
          "550:         v = math_ops.range(0, 9223372036854775807)",
          "551:         self.evaluate(v)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "89b5fa3b220fcddb4087fe3a904c5c5e69e1281d",
      "candidate_info": {
        "commit_hash": "89b5fa3b220fcddb4087fe3a904c5c5e69e1281d",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/89b5fa3b220fcddb4087fe3a904c5c5e69e1281d",
        "files": [
          "tensorflow/core/kernels/sequence_ops.cc"
        ],
        "message": "Convert conditional statement to if..else.. to address review feedback\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>",
        "before_after_code_files": [
          "tensorflow/core/kernels/sequence_ops.cc||tensorflow/core/kernels/sequence_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/tensorflow/tensorflow/pull/51359"
        ],
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/sequence_ops.cc||tensorflow/core/kernels/sequence_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/sequence_ops.cc||tensorflow/core/kernels/sequence_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/sequence_ops.cc||tensorflow/core/kernels/sequence_ops.cc": [
          "File: tensorflow/core/kernels/sequence_ops.cc -> tensorflow/core/kernels/sequence_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:           errors::InvalidArgument(",
          "72:               \"Requires start >= limit when delta < 0: \", start, \"/\", limit));",
          "73:     }",
          "80:     Tensor* out = nullptr;",
          "81:     OP_REQUIRES_OK(context,",
          "82:                    context->allocate_output(0, TensorShape({size}), &out));",
          "",
          "[Removed Lines]",
          "74:     int64_t size = (std::is_integral<T>::value",
          "75:                         ? static_cast<int64>(",
          "76:                             (std::abs(limit - start) + std::abs(delta) - 1) /",
          "77:                               std::abs(delta))",
          "78:                         : static_cast<int64>(",
          "79:                             std::ceil(std::abs((limit - start) / delta))));",
          "",
          "[Added Lines]",
          "74:     int64_t size = 0;",
          "75:     if (std::is_integral<T>::value) {",
          "76:       size = static_cast<int64>(",
          "77:         (std::abs(limit - start) + std::abs(delta) - 1) / std::abs(delta));",
          "78:     } else {",
          "79:       size = static_cast<int64>(",
          "80:         std::ceil(std::abs((limit - start) / delta)));",
          "81:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4238eb14862f05dcad79a4a37a392a1a068de308",
      "candidate_info": {
        "commit_hash": "4238eb14862f05dcad79a4a37a392a1a068de308",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/4238eb14862f05dcad79a4a37a392a1a068de308",
        "files": [
          "tensorflow/core/kernels/sequence_ops.cc",
          "tensorflow/python/kernel_tests/init_ops_test.py"
        ],
        "message": "Merge pull request #51359 from yongtang:46913-range-overflow\n\nPiperOrigin-RevId: 391529518\nChange-Id: Ie3db4ae6d3c0f3dc88404e1dbdc22f7d03cbeb3b",
        "before_after_code_files": [
          "tensorflow/core/kernels/sequence_ops.cc||tensorflow/core/kernels/sequence_ops.cc",
          "tensorflow/python/kernel_tests/init_ops_test.py||tensorflow/python/kernel_tests/init_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/sequence_ops.cc||tensorflow/core/kernels/sequence_ops.cc",
            "tensorflow/python/kernel_tests/init_ops_test.py||tensorflow/python/kernel_tests/init_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/sequence_ops.cc||tensorflow/core/kernels/sequence_ops.cc",
            "tensorflow/python/kernel_tests/init_ops_test.py||tensorflow/python/kernel_tests/init_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/sequence_ops.cc||tensorflow/core/kernels/sequence_ops.cc": [
          "File: tensorflow/core/kernels/sequence_ops.cc -> tensorflow/core/kernels/sequence_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:           errors::InvalidArgument(",
          "72:               \"Requires start >= limit when delta < 0: \", start, \"/\", limit));",
          "73:     }",
          "80:     Tensor* out = nullptr;",
          "81:     OP_REQUIRES_OK(context, context->allocate_output(0, shape, &out));",
          "82:     auto flat = out->flat<T>();",
          "",
          "[Removed Lines]",
          "74:     int64 size = (std::is_integral<T>::value",
          "75:                       ? ((std::abs(limit - start) + std::abs(delta) - 1) /",
          "76:                          std::abs(delta))",
          "77:                       : std::ceil(std::abs((limit - start) / delta)));",
          "78:     TensorShape shape;",
          "79:     OP_REQUIRES_OK(context, shape.AddDimWithStatus(size));",
          "",
          "[Added Lines]",
          "74:     int64 size = 0;",
          "75:     if (std::is_integral<T>::value) {",
          "76:       size = static_cast<int64>(",
          "77:           (std::abs(limit - start) + std::abs(delta) - 1) / std::abs(delta));",
          "78:     } else {",
          "79:       size = static_cast<int64>(std::ceil(std::abs((limit - start) / delta)));",
          "80:     }",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/init_ops_test.py||tensorflow/python/kernel_tests/init_ops_test.py": [
          "File: tensorflow/python/kernel_tests/init_ops_test.py -> tensorflow/python/kernel_tests/init_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: from tensorflow.python.framework import constant_op",
          "25: from tensorflow.python.framework import dtypes",
          "26: from tensorflow.python.framework import ops",
          "27: from tensorflow.python.framework import random_seed",
          "28: from tensorflow.python.framework import test_util",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: from tensorflow.python.framework import errors_impl",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "541:     tf_ans = math_ops.range(",
          "542:         constant_op.constant(4, dtype=dtypes.int32), dtype=dtypes.int64)",
          "543:     self.assertAllEqual(self.evaluate(tf_ans), np.array([0, 1, 2, 3]))",
          "545:  def testLargeStarts(self):",
          "546:     # Test case for GitHub issue 46899.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "545: <<<<<<< HEAD",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "548:       with self.assertRaises(errors_impl.InternalError):",
          "549:         v = math_ops.range(start=-1e+38, limit=1)",
          "550:         self.evaluate(v)",
          "552: # TODO(vrv): move to sequence_ops_test?",
          "553: class LinSpaceTest(test.TestCase):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "553: =======",
          "555:   def testLargeLimits(self):",
          "556:     # Test case for GitHub issue 46913.",
          "557:     with self.session():",
          "558:       with self.assertRaises(errors_impl.ResourceExhaustedError):",
          "559:         v = math_ops.range(0, 9223372036854775807)",
          "560:         self.evaluate(v)",
          "562: >>>>>>> 6d94002a097 (Merge pull request #51359 from yongtang:46913-range-overflow)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c9c43a727809726a7d645fbd481096991e8b423c",
      "candidate_info": {
        "commit_hash": "c9c43a727809726a7d645fbd481096991e8b423c",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/c9c43a727809726a7d645fbd481096991e8b423c",
        "files": [
          "tensorflow/core/kernels/sequence_ops.cc",
          "tensorflow/python/kernel_tests/init_ops_test.py"
        ],
        "message": "Merge pull request #51359 from yongtang:46913-range-overflow\n\nPiperOrigin-RevId: 391529518\nChange-Id: Ie3db4ae6d3c0f3dc88404e1dbdc22f7d03cbeb3b",
        "before_after_code_files": [
          "tensorflow/core/kernels/sequence_ops.cc||tensorflow/core/kernels/sequence_ops.cc",
          "tensorflow/python/kernel_tests/init_ops_test.py||tensorflow/python/kernel_tests/init_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/sequence_ops.cc||tensorflow/core/kernels/sequence_ops.cc",
            "tensorflow/python/kernel_tests/init_ops_test.py||tensorflow/python/kernel_tests/init_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/sequence_ops.cc||tensorflow/core/kernels/sequence_ops.cc",
            "tensorflow/python/kernel_tests/init_ops_test.py||tensorflow/python/kernel_tests/init_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/sequence_ops.cc||tensorflow/core/kernels/sequence_ops.cc": [
          "File: tensorflow/core/kernels/sequence_ops.cc -> tensorflow/core/kernels/sequence_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:           errors::InvalidArgument(",
          "72:               \"Requires start >= limit when delta < 0: \", start, \"/\", limit));",
          "73:     }",
          "80:     Tensor* out = nullptr;",
          "81:     OP_REQUIRES_OK(context, context->allocate_output(0, shape, &out));",
          "82:     auto flat = out->flat<T>();",
          "",
          "[Removed Lines]",
          "74:     int64 size = (std::is_integral<T>::value",
          "75:                       ? ((std::abs(limit - start) + std::abs(delta) - 1) /",
          "76:                          std::abs(delta))",
          "77:                       : std::ceil(std::abs((limit - start) / delta)));",
          "78:     TensorShape shape;",
          "79:     OP_REQUIRES_OK(context, shape.AddDimWithStatus(size));",
          "",
          "[Added Lines]",
          "74:     int64 size = 0;",
          "75:     if (std::is_integral<T>::value) {",
          "76:       size = static_cast<int64>(",
          "77:           (std::abs(limit - start) + std::abs(delta) - 1) / std::abs(delta));",
          "78:     } else {",
          "79:       size = static_cast<int64>(std::ceil(std::abs((limit - start) / delta)));",
          "80:     }",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/init_ops_test.py||tensorflow/python/kernel_tests/init_ops_test.py": [
          "File: tensorflow/python/kernel_tests/init_ops_test.py -> tensorflow/python/kernel_tests/init_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: from tensorflow.python.framework import constant_op",
          "25: from tensorflow.python.framework import dtypes",
          "26: from tensorflow.python.framework import ops",
          "27: from tensorflow.python.framework import random_seed",
          "28: from tensorflow.python.framework import test_util",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: from tensorflow.python.framework import errors_impl",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "549:         v = math_ops.range(start=-1e+38, limit=1)",
          "550:         self.evaluate(v)",
          "552: # TODO(vrv): move to sequence_ops_test?",
          "553: class LinSpaceTest(test.TestCase):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "553:   def testLargeLimits(self):",
          "554:     # Test case for GitHub issue 46913.",
          "555:     with self.session():",
          "556:       with self.assertRaises(errors_impl.ResourceExhaustedError):",
          "557:         v = math_ops.range(0, 9223372036854775807)",
          "558:         self.evaluate(v)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e31103194b8a617dd68b2cf6de6ccd26374280d1",
      "candidate_info": {
        "commit_hash": "e31103194b8a617dd68b2cf6de6ccd26374280d1",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/e31103194b8a617dd68b2cf6de6ccd26374280d1",
        "files": [
          "tensorflow/core/kernels/sequence_ops.cc",
          "tensorflow/python/kernel_tests/init_ops_test.py"
        ],
        "message": "Merge pull request #51359 from yongtang:46913-range-overflow\n\nPiperOrigin-RevId: 391529518\nChange-Id: Ie3db4ae6d3c0f3dc88404e1dbdc22f7d03cbeb3b",
        "before_after_code_files": [
          "tensorflow/core/kernels/sequence_ops.cc||tensorflow/core/kernels/sequence_ops.cc",
          "tensorflow/python/kernel_tests/init_ops_test.py||tensorflow/python/kernel_tests/init_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/sequence_ops.cc||tensorflow/core/kernels/sequence_ops.cc",
            "tensorflow/python/kernel_tests/init_ops_test.py||tensorflow/python/kernel_tests/init_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/sequence_ops.cc||tensorflow/core/kernels/sequence_ops.cc",
            "tensorflow/python/kernel_tests/init_ops_test.py||tensorflow/python/kernel_tests/init_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/sequence_ops.cc||tensorflow/core/kernels/sequence_ops.cc": [
          "File: tensorflow/core/kernels/sequence_ops.cc -> tensorflow/core/kernels/sequence_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:           errors::InvalidArgument(",
          "72:               \"Requires start >= limit when delta < 0: \", start, \"/\", limit));",
          "73:     }",
          "80:     Tensor* out = nullptr;",
          "81:     OP_REQUIRES_OK(context, context->allocate_output(0, shape, &out));",
          "82:     auto flat = out->flat<T>();",
          "",
          "[Removed Lines]",
          "74:     int64 size = (std::is_integral<T>::value",
          "75:                       ? ((std::abs(limit - start) + std::abs(delta) - 1) /",
          "76:                          std::abs(delta))",
          "77:                       : std::ceil(std::abs((limit - start) / delta)));",
          "78:     TensorShape shape;",
          "79:     OP_REQUIRES_OK(context, shape.AddDimWithStatus(size));",
          "",
          "[Added Lines]",
          "74:     int64 size = 0;",
          "75:     if (std::is_integral<T>::value) {",
          "76:       size = static_cast<int64>(",
          "77:           (std::abs(limit - start) + std::abs(delta) - 1) / std::abs(delta));",
          "78:     } else {",
          "79:       size = static_cast<int64>(std::ceil(std::abs((limit - start) / delta)));",
          "80:     }",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/init_ops_test.py||tensorflow/python/kernel_tests/init_ops_test.py": [
          "File: tensorflow/python/kernel_tests/init_ops_test.py -> tensorflow/python/kernel_tests/init_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: from tensorflow.python.framework import constant_op",
          "25: from tensorflow.python.framework import dtypes",
          "26: from tensorflow.python.framework import ops",
          "27: from tensorflow.python.framework import random_seed",
          "28: from tensorflow.python.framework import test_util",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: from tensorflow.python.framework import errors_impl",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "549:         v = math_ops.range(start=-1e+38, limit=1)",
          "550:         self.evaluate(v)",
          "552: # TODO(vrv): move to sequence_ops_test?",
          "553: class LinSpaceTest(test.TestCase):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "553:   def testLargeLimits(self):",
          "554:     # Test case for GitHub issue 46913.",
          "555:     with self.session():",
          "556:       with self.assertRaises(errors_impl.ResourceExhaustedError):",
          "557:         v = math_ops.range(0, 9223372036854775807)",
          "558:         self.evaluate(v)",
          "",
          "---------------"
        ]
      }
    }
  ]
}