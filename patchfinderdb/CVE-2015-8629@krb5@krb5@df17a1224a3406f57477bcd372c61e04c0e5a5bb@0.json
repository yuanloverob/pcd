{
  "cve_id": "CVE-2015-8629",
  "cve_desc": "The xdr_nullstring function in lib/kadm5/kadm_rpc_xdr.c in kadmind in MIT Kerberos 5 (aka krb5) before 1.13.4 and 1.14.x before 1.14.1 does not verify whether '\\0' characters exist as expected, which allows remote authenticated users to obtain sensitive information or cause a denial of service (out-of-bounds read) via a crafted string.",
  "repo": "krb5/krb5",
  "patch_hash": "df17a1224a3406f57477bcd372c61e04c0e5a5bb",
  "patch_info": {
    "commit_hash": "df17a1224a3406f57477bcd372c61e04c0e5a5bb",
    "repo": "krb5/krb5",
    "commit_url": "https://github.com/krb5/krb5/commit/df17a1224a3406f57477bcd372c61e04c0e5a5bb",
    "files": [
      "src/lib/kadm5/kadm_rpc_xdr.c"
    ],
    "message": "Verify decoded kadmin C strings [CVE-2015-8629]\n\nIn xdr_nullstring(), check that the decoded string is terminated with\na zero byte and does not contain any internal zero bytes.\n\nCVE-2015-8629:\n\nIn all versions of MIT krb5, an authenticated attacker can cause\nkadmind to read beyond the end of allocated memory by sending a string\nwithout a terminating zero byte.  Information leakage may be possible\nfor an attacker with permission to modify the database.\n\n    CVSSv2 Vector: AV:N/AC:H/Au:S/C:P/I:N/A:N/E:POC/RL:OF/RC:C\n\nticket: 8341 (new)\ntarget_version: 1.14-next\ntarget_version: 1.13-next\ntags: pullup",
    "before_after_code_files": [
      "src/lib/kadm5/kadm_rpc_xdr.c||src/lib/kadm5/kadm_rpc_xdr.c"
    ]
  },
  "patch_diff": {
    "src/lib/kadm5/kadm_rpc_xdr.c||src/lib/kadm5/kadm_rpc_xdr.c": [
      "File: src/lib/kadm5/kadm_rpc_xdr.c -> src/lib/kadm5/kadm_rpc_xdr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "64:       return FALSE;",
      "65:         }",
      "66:    }",
      "69:      case XDR_ENCODE:",
      "70:    if (size != 0)",
      "",
      "[Removed Lines]",
      "67:    return (xdr_opaque(xdrs, *objp, size));",
      "",
      "[Added Lines]",
      "67:    if (!xdr_opaque(xdrs, *objp, size))",
      "68:     return FALSE;",
      "70:    if ((*objp)[size - 1] != '\\0')",
      "71:     return FALSE;",
      "72:    if (memchr(*objp, '\\0', size - 1) != NULL)",
      "73:     return FALSE;",
      "74:    return TRUE;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "54a9a01c6a923d604cd06f321b8381ebc5cb42d8",
      "candidate_info": {
        "commit_hash": "54a9a01c6a923d604cd06f321b8381ebc5cb42d8",
        "repo": "krb5/krb5",
        "commit_url": "https://github.com/krb5/krb5/commit/54a9a01c6a923d604cd06f321b8381ebc5cb42d8",
        "files": [
          "src/lib/kadm5/kadm_rpc_xdr.c"
        ],
        "message": "Verify decoded kadmin C strings [CVE-2015-8629]\n\nIn xdr_nullstring(), check that the decoded string is terminated with\na zero byte and does not contain any internal zero bytes.\n\nCVE-2015-8629:\n\nIn all versions of MIT krb5, an authenticated attacker can cause\nkadmind to read beyond the end of allocated memory by sending a string\nwithout a terminating zero byte.  Information leakage may be possible\nfor an attacker with permission to modify the database.\n\n    CVSSv2 Vector: AV:N/AC:H/Au:S/C:P/I:N/A:N/E:POC/RL:OF/RC:C\n\n(cherry picked from commit df17a1224a3406f57477bcd372c61e04c0e5a5bb)\n\nticket: 8341\nversion_fixed: 1.14.1",
        "before_after_code_files": [
          "src/lib/kadm5/kadm_rpc_xdr.c||src/lib/kadm5/kadm_rpc_xdr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/kadm5/kadm_rpc_xdr.c||src/lib/kadm5/kadm_rpc_xdr.c"
          ],
          "candidate": [
            "src/lib/kadm5/kadm_rpc_xdr.c||src/lib/kadm5/kadm_rpc_xdr.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/kadm5/kadm_rpc_xdr.c||src/lib/kadm5/kadm_rpc_xdr.c": [
          "File: src/lib/kadm5/kadm_rpc_xdr.c -> src/lib/kadm5/kadm_rpc_xdr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:       return FALSE;",
          "65:         }",
          "66:    }",
          "69:      case XDR_ENCODE:",
          "70:    if (size != 0)",
          "",
          "[Removed Lines]",
          "67:    return (xdr_opaque(xdrs, *objp, size));",
          "",
          "[Added Lines]",
          "67:    if (!xdr_opaque(xdrs, *objp, size))",
          "68:     return FALSE;",
          "70:    if ((*objp)[size - 1] != '\\0')",
          "71:     return FALSE;",
          "72:    if (memchr(*objp, '\\0', size - 1) != NULL)",
          "73:     return FALSE;",
          "74:    return TRUE;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6e84bedf362f1d7f36d850774bbac6f3dee21ecd",
      "candidate_info": {
        "commit_hash": "6e84bedf362f1d7f36d850774bbac6f3dee21ecd",
        "repo": "krb5/krb5",
        "commit_url": "https://github.com/krb5/krb5/commit/6e84bedf362f1d7f36d850774bbac6f3dee21ecd",
        "files": [
          "src/lib/kadm5/kadm_rpc_xdr.c"
        ],
        "message": "Verify decoded kadmin C strings [CVE-2015-8629]\n\nIn xdr_nullstring(), check that the decoded string is terminated with\na zero byte and does not contain any internal zero bytes.\n\nCVE-2015-8629:\n\nIn all versions of MIT krb5, an authenticated attacker can cause\nkadmind to read beyond the end of allocated memory by sending a string\nwithout a terminating zero byte.  Information leakage may be possible\nfor an attacker with permission to modify the database.\n\n    CVSSv2 Vector: AV:N/AC:H/Au:S/C:P/I:N/A:N/E:POC/RL:OF/RC:C\n\n(cherry picked from commit df17a1224a3406f57477bcd372c61e04c0e5a5bb)\n\nticket: 8341\nversion_fixed: 1.13.4\ntags: -pullup\nstatus: resolved",
        "before_after_code_files": [
          "src/lib/kadm5/kadm_rpc_xdr.c||src/lib/kadm5/kadm_rpc_xdr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/kadm5/kadm_rpc_xdr.c||src/lib/kadm5/kadm_rpc_xdr.c"
          ],
          "candidate": [
            "src/lib/kadm5/kadm_rpc_xdr.c||src/lib/kadm5/kadm_rpc_xdr.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/kadm5/kadm_rpc_xdr.c||src/lib/kadm5/kadm_rpc_xdr.c": [
          "File: src/lib/kadm5/kadm_rpc_xdr.c -> src/lib/kadm5/kadm_rpc_xdr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:       return FALSE;",
          "65:         }",
          "66:    }",
          "69:      case XDR_ENCODE:",
          "70:    if (size != 0)",
          "",
          "[Removed Lines]",
          "67:    return (xdr_opaque(xdrs, *objp, size));",
          "",
          "[Added Lines]",
          "67:    if (!xdr_opaque(xdrs, *objp, size))",
          "68:     return FALSE;",
          "70:    if ((*objp)[size - 1] != '\\0')",
          "71:     return FALSE;",
          "72:    if (memchr(*objp, '\\0', size - 1) != NULL)",
          "73:     return FALSE;",
          "74:    return TRUE;",
          "",
          "---------------"
        ]
      }
    }
  ]
}