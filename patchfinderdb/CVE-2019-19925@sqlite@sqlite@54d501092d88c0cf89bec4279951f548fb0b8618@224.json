{
  "cve_id": "CVE-2019-19925",
  "cve_desc": "zipfileUpdate in ext/misc/zipfile.c in SQLite 3.30.1 mishandles a NULL pathname during an update of a ZIP archive.",
  "repo": "sqlite/sqlite",
  "patch_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
  "patch_info": {
    "commit_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/54d501092d88c0cf89bec4279951f548fb0b8618",
    "files": [
      "ext/misc/zipfile.c",
      "manifest",
      "manifest.uuid",
      "test/zipfile.test"
    ],
    "message": "Fix the zipfile extension so that INSERT works even if the pathname of the file being inserted is a NULL.  Bug discovered by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: a80f84b511231204658304226de3e075a55afc2e3f39ac063716f7a57f585c06",
    "before_after_code_files": [
      "ext/misc/zipfile.c||ext/misc/zipfile.c",
      "manifest.uuid||manifest.uuid",
      "test/zipfile.test||test/zipfile.test"
    ]
  },
  "patch_diff": {
    "ext/misc/zipfile.c||ext/misc/zipfile.c": [
      "File: ext/misc/zipfile.c -> ext/misc/zipfile.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1620:     if( rc==SQLITE_OK ){",
      "1621:       zPath = (const char*)sqlite3_value_text(apVal[2]);",
      "1622:       nPath = (int)strlen(zPath);",
      "1623:       mTime = zipfileGetTime(apVal[4]);",
      "1624:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1622:       if( zPath==0 ) zPath = \"\";",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: fccfb8a9ed3c1df9f23762bb8df6fdf36a21118899e3fae41f451169a5f2c08e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "test/zipfile.test||test/zipfile.test": [
      "File: test/zipfile.test -> test/zipfile.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "795:   } {. ./x1.txt ./x2.txt}",
      "796: }",
      "798: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "798: # 2019-12-18 Yongheng and Rui fuzzer",
      "799: #",
      "800: do_execsql_test 13.10 {",
      "801:   DROP TABLE IF EXISTS t0;",
      "802:   DROP TABLE IF EXISTS t1;",
      "803:   CREATE TABLE t0(a,b,c,d,e,f,g);",
      "804:   REPLACE INTO t0(c,b,f) VALUES(10,10,10);",
      "805:   CREATE VIRTUAL TABLE t1 USING zipfile('h.zip');",
      "806:   REPLACE INTO t1 SELECT * FROM t0;",
      "807:   SELECT quote(name),quote(mode),quote(mtime),quote(sz),quote(rawdata),",
      "808:          quote(data),quote(method) FROM t1;",
      "809: } {'' 10 10 2 X'3130' X'3130' 0}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8aa706e748e0392e0b1a432f2f750bce1e457e54",
      "candidate_info": {
        "commit_hash": "8aa706e748e0392e0b1a432f2f750bce1e457e54",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8aa706e748e0392e0b1a432f2f750bce1e457e54",
        "files": [
          "ext/fts3/fts3_write.c",
          "manifest",
          "manifest.uuid",
          "test/fts3corrupt4.test"
        ],
        "message": "Fix a buffer overread that could occur in fts3 with corrupt %_stat records.\n\nFossilOrigin-Name: e01fdbf9f700e1bd9dd5283c65547d10d26ce4f4506d3cfef9e1087aecdc2305",
        "before_after_code_files": [
          "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c",
          "manifest.uuid||manifest.uuid",
          "test/fts3corrupt4.test||test/fts3corrupt4.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c": [
          "File: ext/fts3/fts3_write.c -> ext/fts3/fts3_write.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4850:   const int nHint = pHint->n;",
          "4851:   int i;",
          "4854:   while( i>0 && (pHint->a[i-1] & 0x80) ) i--;",
          "4855:   while( i>0 && (pHint->a[i-1] & 0x80) ) i--;",
          "4857:   pHint->n = i;",
          "4858:   i += sqlite3Fts3GetVarint(&pHint->a[i], piAbsLevel);",
          "4859:   i += fts3GetVarint32(&pHint->a[i], pnInput);",
          "4860:   if( i!=nHint ) return FTS_CORRUPT_VTAB;",
          "4862:   return SQLITE_OK;",
          "",
          "[Removed Lines]",
          "4853:   i = pHint->n-2;",
          "",
          "[Added Lines]",
          "4853:   i = pHint->n-1;",
          "4854:   if( (pHint->a[i] & 0x80) ) return FTS_CORRUPT_VTAB;",
          "4856:   if( i==0 ) return FTS_CORRUPT_VTAB;",
          "4857:   i--;",
          "4863:   assert( i<=nHint );",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 96b6a76da09a94182414ec1a56da91728c37329d2b55f889e433054ca21605ce",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts3corrupt4.test||test/fts3corrupt4.test": [
          "File: test/fts3corrupt4.test -> test/fts3corrupt4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "5767:   UPDATE t1 SET b=((- '' )) WHERE a MATCH '0*t';",
          "5768: } {1 {database disk image is malformed}}",
          "5771: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5770: #-------------------------------------------------------------------------",
          "5771: #",
          "5772: reset_db",
          "5773: do_catchsql_test 32.0 {",
          "5774:   CREATE VIRTUAL TABLE f USING fts3(a,b,tokenize=icu);",
          "5775:   CREATE TABLE 'f_docsize'(docid INTEGER PRIMARY KEY, size BLOB);",
          "5776:   CREATE TABLE 'f_stat'(id INTEGER PRIMARY KEY, value BLOB);",
          "5777:   INSERT INTO f VALUES (1, '1234');",
          "5778:   INSERT INTO f_stat VALUES (1,x'0000000165656565db6569746565c5c52bc5c5c53e3a003bc502ffffffffc5c5c53e3a003bc502fffffffffb8b2afbfb6565f0740100650000000165656565db6569746565c5c52bc5c5c53e3a003bc502ffffffffc5c5c53e3a003b8b00c5c5c5c5c5bfc5');",
          "5779:   INSERT INTO f(f) VALUES ('merge=198,49');",
          "5780: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "01325a3f756501a8929c0642eb69734667f24289",
      "candidate_info": {
        "commit_hash": "01325a3f756501a8929c0642eb69734667f24289",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/01325a3f756501a8929c0642eb69734667f24289",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c"
        ],
        "message": "Fix an issue (discovered by OSSFuzz) in the enhanced OP_Concat operator from check-in [713caa382cf7dd] earlier today.\n\nFossilOrigin-Name: 3e897702f8f789fe5119b9042fb93eca3fbfcc44564fbfa66c65628725b1157d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ece481695fc3c959c3eba0fb485cdda43a10b06d17259b0121e15bfc5e8e8b9f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1476:   }",
          "1477:   if( (flags1 & (MEM_Str|MEM_Blob))==0 ){",
          "1478:     if( sqlite3VdbeMemStringify(pIn1,encoding,0) ) goto no_mem;",
          "1479:   }else if( (flags1 & MEM_Zero)!=0 ){",
          "1480:     if( sqlite3VdbeMemExpandBlob(pIn1) ) goto no_mem;",
          "1481:   }",
          "1482:   flags2 = pIn2->flags;",
          "1483:   if( (flags2 & (MEM_Str|MEM_Blob))==0 ){",
          "1484:     if( sqlite3VdbeMemStringify(pIn2,encoding,0) ) goto no_mem;",
          "1485:   }else if( (flags2 & MEM_Zero)!=0 ){",
          "1486:     if( sqlite3VdbeMemExpandBlob(pIn2) ) goto no_mem;",
          "1487:   }",
          "1488:   nByte = pIn1->n + pIn2->n;",
          "1489:   if( nByte>db->aLimit[SQLITE_LIMIT_LENGTH] ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1479:     flags1 = pIn1->flags & ~MEM_Str;",
          "1482:     flags1 = pIn1->flags & ~MEM_Str;",
          "1487:     flags2 = pIn2->flags & ~MEM_Str;",
          "1490:     flags2 = pIn2->flags & ~MEM_Str;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c7f3373ec7db12a1f6b7c1656d75d4c2630c8425",
      "candidate_info": {
        "commit_hash": "c7f3373ec7db12a1f6b7c1656d75d4c2630c8425",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/c7f3373ec7db12a1f6b7c1656d75d4c2630c8425",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/build.c",
          "test/sqllimits1.test"
        ],
        "message": "Fix a problem caused by a small SQLITE_LIMIT_LENGTH value and a CREATE TABLE with a very large name.\n\nFossilOrigin-Name: 9b5d408864920b302f2d21abcae1d90f1e0cd68b18262136554ba0e6219d6025",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/build.c||src/build.c",
          "test/sqllimits1.test||test/sqllimits1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8820408597341344b308277ce6ef41b47c7514d6c613520789b05ee52cbedae8",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3222:     for(pLoop=pTab->pIndex, n=1; pLoop; pLoop=pLoop->pNext, n++){}",
          "3223:     zName = sqlite3MPrintf(db, \"sqlite_autoindex_%s_%d\", pTab->zName, n);",
          "3224:     if( zName==0 ){",
          "3225:       goto exit_create_index;",
          "3226:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3225:       if( db->mallocFailed==0 ) pParse->rc = SQLITE_TOOBIG;",
          "3226:       pParse->nErr++;",
          "",
          "---------------"
        ],
        "test/sqllimits1.test||test/sqllimits1.test": [
          "File: test/sqllimits1.test -> test/sqllimits1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "889: foreach {key value} [array get saved] {",
          "890:   catch {set $key $value}",
          "891: }",
          "892: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "893: #-------------------------------------------------------------------------",
          "894: # At one point the following caused an assert() to fail.",
          "895: #",
          "896: sqlite3_limit db SQLITE_LIMIT_LENGTH 10000",
          "897: set nm [string repeat x 10000]",
          "898: do_catchsql_test sqllimits1-17.1 \"",
          "899:   CREATE TABLE $nm (x PRIMARY KEY)",
          "900: \" {1 {string or blob too big}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "95da9d5d46a1df00053191dfce9758dbda434e07",
      "candidate_info": {
        "commit_hash": "95da9d5d46a1df00053191dfce9758dbda434e07",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/95da9d5d46a1df00053191dfce9758dbda434e07",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/loadext.c",
          "src/sqlite3ext.h"
        ],
        "message": "Add the new sqlite3_drop_modules() interface to the loadable extension mechanism.\n\nFossilOrigin-Name: 658bd51623787be4ca87b066a051d119f39056286e223afef3691629cf1ab0e1",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/loadext.c||src/loadext.c",
          "src/sqlite3ext.h||src/sqlite3ext.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 511da0815673ca4a176aa61dc23a8231b2ab77e8363fc184a78b6e17dba64d49",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/loadext.c||src/loadext.c": [
          "File: src/loadext.c -> src/loadext.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "461: #endif",
          "463:   sqlite3_stmt_isexplain,",
          "465: };",
          "",
          "[Removed Lines]",
          "464:   sqlite3_value_frombind",
          "",
          "[Added Lines]",
          "464:   sqlite3_value_frombind,",
          "466:   sqlite3_drop_modules,",
          "",
          "---------------"
        ],
        "src/sqlite3ext.h||src/sqlite3ext.h": [
          "File: src/sqlite3ext.h -> src/sqlite3ext.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "323:   int (*stmt_isexplain)(sqlite3_stmt*);",
          "324:   int (*value_frombind)(sqlite3_value*);",
          "325: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "326:   int (*drop_modules)(sqlite3*,const char**);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "615: #define sqlite3_stmt_isexplain         sqlite3_api->isexplain",
          "616: #define sqlite3_value_frombind         sqlite3_api->frombind",
          "619: #if !defined(SQLITE_CORE) && !defined(SQLITE_OMIT_LOAD_EXTENSION)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "620: #define sqlite3_drop_modules           sqlite3_api->drop_modules",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0814acd98177fab44df29ebd24595a93c63eb68d",
      "candidate_info": {
        "commit_hash": "0814acd98177fab44df29ebd24595a93c63eb68d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/0814acd98177fab44df29ebd24595a93c63eb68d",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c",
          "test/zeroblob.test"
        ],
        "message": "Do not accidently truncate zeroblob values when doing an arithmetic operation.  Fix for ticket [bb4bdb9f7f654b0bb9f34cfba].\n\nFossilOrigin-Name: 13f6942eb0da2d92a0830f18640ce64208bd0cd6ff6d0c97e4a4c57ac3d65ba6",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c",
          "test/zeroblob.test||test/zeroblob.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 98b3b97573ccb3d986d1552f97f96e15088a598945923adcac77010c1e8b7fe4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "385: static u16 SQLITE_NOINLINE computeNumericType(Mem *pMem){",
          "386:   assert( (pMem->flags & (MEM_Int|MEM_Real))==0 );",
          "387:   assert( (pMem->flags & (MEM_Str|MEM_Blob))!=0 );",
          "388:   if( sqlite3AtoF(pMem->z, &pMem->u.r, pMem->n, pMem->enc)==0 ){",
          "389:     return 0;",
          "390:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "388:   ExpandBlob(pMem);",
          "",
          "---------------"
        ],
        "test/zeroblob.test||test/zeroblob.test": [
          "File: test/zeroblob.test -> test/zeroblob.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "317: sqlite3_finalize $stmt",
          "319: test_restore_config_pagecache",
          "320: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "319: # 2019-01-25 https://sqlite.org/src/tktview/bb4bdb9f7f654b0bb9f34cfbac",
          "320: # Zeroblob truncated by an index on expression",
          "321: #",
          "322: do_execsql_test 13.100 {",
          "323:   DROP TABLE IF EXISTS t1;",
          "324:   CREATE TABLE t1(a,b,c);",
          "325:   CREATE INDEX t1bbc ON t1(b, b+c);",
          "326:   INSERT INTO t1(a,b,c) VALUES(1,zeroblob(8),3);",
          "327:   SELECT a, quote(b), length(b), c FROM t1;",
          "328: } {1 X'0000000000000000' 8 3}",
          "",
          "---------------"
        ]
      }
    }
  ]
}