{
  "cve_id": "CVE-2015-0278",
  "cve_desc": "libuv before 0.10.34 does not properly drop group privileges, which allows context-dependent attackers to gain privileges via unspecified vectors.",
  "repo": "libuv/libuv",
  "patch_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
  "patch_info": {
    "commit_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
    "repo": "libuv/libuv",
    "commit_url": "https://github.com/libuv/libuv/commit/66ab38918c911bcff025562cf06237d7fedaba0c",
    "files": [
      "src/unix/process.c"
    ],
    "message": "unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093",
    "before_after_code_files": [
      "src/unix/process.c||src/unix/process.c"
    ]
  },
  "patch_diff": {
    "src/unix/process.c||src/unix/process.c": [
      "File: src/unix/process.c -> src/unix/process.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "330:     _exit(127);",
      "331:   }",
      "333:   if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid)) {",
      "334:     uv__write_int(error_fd, -errno);",
      "335:     perror(\"setgid()\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "333:   if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {",
      "341:     SAVE_ERRNO(setgroups(0, NULL));",
      "342:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a87619ce63ad464be65c9543040a90e3843f7171",
      "candidate_info": {
        "commit_hash": "a87619ce63ad464be65c9543040a90e3843f7171",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/a87619ce63ad464be65c9543040a90e3843f7171",
        "files": [
          "src/unix/getaddrinfo.c",
          "src/uv-common.c",
          "src/win/getaddrinfo.c"
        ],
        "message": "unix, windows: move includes for EAI constants",
        "before_after_code_files": [
          "src/unix/getaddrinfo.c||src/unix/getaddrinfo.c",
          "src/uv-common.c||src/uv-common.c",
          "src/win/getaddrinfo.c||src/win/getaddrinfo.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/unix/getaddrinfo.c||src/unix/getaddrinfo.c": [
          "File: src/unix/getaddrinfo.c -> src/unix/getaddrinfo.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #include <stdlib.h>",
          "34: #include <string.h>",
          "37: int uv__getaddrinfo_translate_error(int sys_err) {",
          "38:   switch (sys_err) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37: #include <netdb.h>",
          "",
          "---------------"
        ],
        "src/uv-common.c||src/uv-common.c": [
          "File: src/uv-common.c -> src/uv-common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #endif",
          "42: #define XX(uc, lc) case UV_##uc: return sizeof(uv_##lc##_t);",
          "44: size_t uv_handle_size(uv_handle_type type) {",
          "",
          "[Removed Lines]",
          "36: #if !defined(_WIN32)",
          "37: # include <sys/types.h>",
          "38: # include <sys/socket.h>",
          "39: # include <netdb.h>",
          "40: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/win/getaddrinfo.c||src/win/getaddrinfo.c": [
          "File: src/win/getaddrinfo.c -> src/win/getaddrinfo.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #include \"internal.h\"",
          "27: #include \"req-inl.h\"",
          "30: int uv__getaddrinfo_translate_error(int sys_err) {",
          "31:   switch (sys_err) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: #include <winsock2.h>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "652d5c9e4532fc01c8eebed5303eaf27618b963b",
      "candidate_info": {
        "commit_hash": "652d5c9e4532fc01c8eebed5303eaf27618b963b",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/652d5c9e4532fc01c8eebed5303eaf27618b963b",
        "files": [
          "ChangeLog",
          "src/version.c"
        ],
        "message": "Now working on v0.11.6",
        "before_after_code_files": [
          "src/version.c||src/version.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/version.c||src/version.c": [
          "File: src/version.c -> src/version.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #define UV_VERSION_MAJOR 0",
          "33: #define UV_VERSION_MINOR 11",
          "38: #define UV_VERSION  ((UV_VERSION_MAJOR << 16) | \\",
          "",
          "[Removed Lines]",
          "34: #define UV_VERSION_PATCH 5",
          "35: #define UV_VERSION_IS_RELEASE 1",
          "",
          "[Added Lines]",
          "34: #define UV_VERSION_PATCH 6",
          "35: #define UV_VERSION_IS_RELEASE 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d4f904b0e784d9e2cbd55415faae1180cfa0f298",
      "candidate_info": {
        "commit_hash": "d4f904b0e784d9e2cbd55415faae1180cfa0f298",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/d4f904b0e784d9e2cbd55415faae1180cfa0f298",
        "files": [
          "src/heap-inl.h"
        ],
        "message": "heap: fix node removal",
        "before_after_code_files": [
          "src/heap-inl.h||src/heap-inl.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/heap-inl.h||src/heap-inl.h": [
          "File: src/heap-inl.h -> src/heap-inl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "220:   for (;;) {",
          "221:     smallest = child;",
          "223:       smallest = child->left;",
          "225:       smallest = child->right;",
          "226:     if (smallest == child)",
          "227:       break;",
          "",
          "[Removed Lines]",
          "222:     if (child->left != NULL && less_than(smallest, child))",
          "224:     if (child->right != NULL && less_than(smallest, child))",
          "",
          "[Added Lines]",
          "222:     if (child->left != NULL && less_than(child->left, smallest))",
          "224:     if (child->right != NULL && less_than(child->right, smallest))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b13941cf17c9e59c992c8f1431ca0059ad97f0ad",
      "candidate_info": {
        "commit_hash": "b13941cf17c9e59c992c8f1431ca0059ad97f0ad",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/b13941cf17c9e59c992c8f1431ca0059ad97f0ad",
        "files": [
          "Makefile.am"
        ],
        "message": "build: dtrace shouldn't break out of tree builds\n\nFixes #848.",
        "before_after_code_files": [
          "Makefile.am||Makefile.am"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.am||Makefile.am": [
          "File: Makefile.am -> Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "200: if DTRACE_NEEDS_OBJECTS",
          "201: libuv_la_SOURCES += src/unix/uv-dtrace.d",
          "202: libuv_la_DEPENDENCIES = src/unix/uv-dtrace.o",
          "204: CLEANFILES += src/unix/uv-dtrace.o src/unix/uv-dtrace.lo",
          "205: endif",
          "207: SUFFIXES = .d",
          "209: include/uv-dtrace.h: src/unix/uv-dtrace.d",
          "212: src/unix/uv-dtrace.o: src/unix/uv-dtrace.d ${libuv_la_OBJECTS}",
          "214: .d.o:",
          "216:   `grep '^pic_object' ${top_builddir}/*.lo | cut -f 2 -d\\'`",
          "217:  $(AM_V_GEN)printf %s\\\\n \\",
          "219:   '# Generated by libtool (GNU libtool) 2.4' \\",
          "220:   '# libtool wants a .lo not a .o' \\",
          "221:   \"pic_object='uv-dtrace.o'\" \\",
          "222:   \"non_pic_object='uv-dtrace.o'\" \\",
          "",
          "[Removed Lines]",
          "203: libuv_la_LIBADD = src/unix/uv-dtrace.lo",
          "210:  $(AM_V_GEN)$(DTRACE) $(DTRACEFLAGS) -h -xnolibs -s $< -o $@",
          "215:  $(AM_V_GEN)$(DTRACE) $(DTRACEFLAGS) -G -o $@ -s $< \\",
          "218:   '# $(patsubst %.o, %.lo, $@) - a libtool object file' \\",
          "223:  > $(patsubst %.o, %.lo, $@)",
          "",
          "[Added Lines]",
          "203: libuv_la_LIBADD = uv-dtrace.lo",
          "210:  $(AM_V_GEN)$(DTRACE) $(DTRACEFLAGS) -h -xnolibs -s $< -o $(top_srcdir)/$@",
          "214: # It's ok to specify the output here, because we have 1 .d file, and we process",
          "215: # every created .o, most projects don't need to include more than one .d",
          "217:  $(AM_V_GEN)$(DTRACE) $(DTRACEFLAGS) -G -o $(top_builddir)/uv-dtrace.o -s $< \\",
          "220:   '# ${top_builddir}/uv-dtrace.lo - a libtool object file' \\",
          "225:  > ${top_builddir}/uv-dtrace.lo",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4bace4d67c13c5007f89061ca9a24d7ca9e417dc",
      "candidate_info": {
        "commit_hash": "4bace4d67c13c5007f89061ca9a24d7ca9e417dc",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/4bace4d67c13c5007f89061ca9a24d7ca9e417dc",
        "files": [
          "include/uv-unix.h",
          "src/unix/udp.c"
        ],
        "message": "unix: use struct sockaddr_storage for target UDP addr",
        "before_after_code_files": [
          "include/uv-unix.h||include/uv-unix.h",
          "src/unix/udp.c||src/unix/udp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/uv-unix.h||include/uv-unix.h": [
          "File: include/uv-unix.h -> include/uv-unix.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "214: #define UV_UDP_SEND_PRIVATE_FIELDS                                            \\",
          "215:   void* queue[2];                                                             \\",
          "217:   unsigned int nbufs;                                                         \\",
          "218:   uv_buf_t* bufs;                                                             \\",
          "219:   ssize_t status;                                                             \\",
          "",
          "[Removed Lines]",
          "216:   struct sockaddr_in6 addr;                                                   \\",
          "",
          "[Added Lines]",
          "216:   struct sockaddr_storage addr;                                               \\",
          "",
          "---------------"
        ],
        "src/unix/udp.c||src/unix/udp.c": [
          "File: src/unix/udp.c -> src/unix/udp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:     memset(&h, 0, sizeof h);",
          "106:     h.msg_name = &req->addr;",
          "108:       sizeof(struct sockaddr_in6) : sizeof(struct sockaddr_in));",
          "109:     h.msg_iov = (struct iovec*) req->bufs;",
          "110:     h.msg_iovlen = req->nbufs;",
          "",
          "[Removed Lines]",
          "107:     h.msg_namelen = (req->addr.sin6_family == AF_INET6 ?",
          "",
          "[Added Lines]",
          "107:     h.msg_namelen = (req->addr.ss_family == AF_INET6 ?",
          "",
          "---------------"
        ]
      }
    }
  ]
}