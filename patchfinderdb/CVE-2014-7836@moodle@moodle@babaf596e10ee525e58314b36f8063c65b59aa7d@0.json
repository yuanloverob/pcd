{
  "cve_id": "CVE-2014-7836",
  "cve_desc": "Multiple cross-site request forgery (CSRF) vulnerabilities in the LTI module in Moodle through 2.4.11, 2.5.x before 2.5.9, 2.6.x before 2.6.6, and 2.7.x before 2.7.3 allow remote attackers to hijack the authentication of arbitrary users for a (1) mod/lti/request_tool.php or (2) mod/lti/instructor_edit_tool_type.php request.",
  "repo": "moodle/moodle",
  "patch_hash": "babaf596e10ee525e58314b36f8063c65b59aa7d",
  "patch_info": {
    "commit_hash": "babaf596e10ee525e58314b36f8063c65b59aa7d",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/babaf596e10ee525e58314b36f8063c65b59aa7d",
    "files": [
      "mod/lti/instructor_edit_tool_type.php",
      "mod/lti/request_tool.php",
      "mod/lti/return.php"
    ],
    "message": "MDL-47924 mod_lti: Fixing missing sesskey checkings\n\nAlso fixing a missing capability checking.",
    "before_after_code_files": [
      "mod/lti/instructor_edit_tool_type.php||mod/lti/instructor_edit_tool_type.php",
      "mod/lti/request_tool.php||mod/lti/request_tool.php",
      "mod/lti/return.php||mod/lti/return.php"
    ]
  },
  "patch_diff": {
    "mod/lti/instructor_edit_tool_type.php||mod/lti/instructor_edit_tool_type.php": [
      "File: mod/lti/instructor_edit_tool_type.php -> mod/lti/instructor_edit_tool_type.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "36: $action = optional_param('action', null, PARAM_TEXT);",
      "37: $typeid = optional_param('typeid', null, PARAM_INT);",
      "39: require_capability('mod/lti:addcoursetool', context_course::instance($courseid));",
      "41: if (!empty($typeid)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "39: require_sesskey();",
      "",
      "---------------"
    ],
    "mod/lti/request_tool.php||mod/lti/request_tool.php": [
      "File: mod/lti/request_tool.php -> mod/lti/request_tool.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "37: require_login($course);",
      "39: require_capability('mod/lti:requesttooladd', context_course::instance($lti->course));",
      "41: $baseurl = lti_get_domain_from_url($lti->toolurl);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "39: require_sesskey();",
      "",
      "---------------"
    ],
    "mod/lti/return.php||mod/lti/return.php": [
      "File: mod/lti/return.php -> mod/lti/return.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "75:     echo htmlspecialchars($errormsg);",
      "80:         echo '<br /><br />';",
      "82:         $links = new stdClass();",
      "91:             $links->admin_request_url = $adminrequesturl->out(false);",
      "92:             echo get_string('lti_launch_error_tool_request', 'lti', $links);",
      "93:         }",
      "94:     }",
      "",
      "[Removed Lines]",
      "77:     $canaddtools = has_capability('mod/lti:addcoursetool', context_course::instance($courseid));",
      "79:     if ($unsigned == 1 && $canaddtools) {",
      "83:         $coursetooleditor = new moodle_url('/mod/lti/instructor_edit_tool_type.php',",
      "84:             array('course' => $courseid, 'action' => 'add'));",
      "85:         $links->course_tool_editor = $coursetooleditor->out(false);",
      "87:         echo get_string('lti_launch_error_unsigned_help', 'lti', $links);",
      "89:         if (!empty($lti)) {",
      "90:             $adminrequesturl = new moodle_url('/mod/lti/request_tool.php', array('instanceid' => $lti->id));",
      "",
      "[Added Lines]",
      "77:     if ($unsigned == 1) {",
      "79:         $contextcourse = context_course::instance($courseid);",
      "83:         if (has_capability('mod/lti:addcoursetool', $contextcourse)) {",
      "84:             $coursetooleditor = new moodle_url('/mod/lti/instructor_edit_tool_type.php',",
      "85:                 array('course' => $courseid, 'action' => 'add', 'sesskey' => sesskey()));",
      "86:             $links->course_tool_editor = $coursetooleditor->out(false);",
      "88:             echo get_string('lti_launch_error_unsigned_help', 'lti', $links);",
      "89:         }",
      "91:         if (!empty($lti) && has_capability('mod/lti:requesttooladd', $contextcourse)) {",
      "92:             $adminrequesturl = new moodle_url('/mod/lti/request_tool.php', array('instanceid' => $lti->id, 'sesskey' => sesskey()));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bac38b11ab95862a831c6e6e60c03caf64eda599",
      "candidate_info": {
        "commit_hash": "bac38b11ab95862a831c6e6e60c03caf64eda599",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/bac38b11ab95862a831c6e6e60c03caf64eda599",
        "files": [
          "mod/lti/instructor_edit_tool_type.php",
          "mod/lti/request_tool.php",
          "mod/lti/return.php"
        ],
        "message": "MDL-47924 mod_lti: Fixing missing sesskey checkings\n\nAlso fixing a missing capability checking.",
        "before_after_code_files": [
          "mod/lti/instructor_edit_tool_type.php||mod/lti/instructor_edit_tool_type.php",
          "mod/lti/request_tool.php||mod/lti/request_tool.php",
          "mod/lti/return.php||mod/lti/return.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "mod/lti/instructor_edit_tool_type.php||mod/lti/instructor_edit_tool_type.php",
            "mod/lti/request_tool.php||mod/lti/request_tool.php",
            "mod/lti/return.php||mod/lti/return.php"
          ],
          "candidate": [
            "mod/lti/instructor_edit_tool_type.php||mod/lti/instructor_edit_tool_type.php",
            "mod/lti/request_tool.php||mod/lti/request_tool.php",
            "mod/lti/return.php||mod/lti/return.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/lti/instructor_edit_tool_type.php||mod/lti/instructor_edit_tool_type.php": [
          "File: mod/lti/instructor_edit_tool_type.php -> mod/lti/instructor_edit_tool_type.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: $action = optional_param('action', null, PARAM_TEXT);",
          "37: $typeid = optional_param('typeid', null, PARAM_INT);",
          "39: require_capability('mod/lti:addcoursetool', context_course::instance($courseid));",
          "41: if (!empty($typeid)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39: require_sesskey();",
          "",
          "---------------"
        ],
        "mod/lti/request_tool.php||mod/lti/request_tool.php": [
          "File: mod/lti/request_tool.php -> mod/lti/request_tool.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: require_login($course);",
          "39: require_capability('mod/lti:requesttooladd', context_course::instance($lti->course));",
          "41: $baseurl = lti_get_domain_from_url($lti->toolurl);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39: require_sesskey();",
          "",
          "---------------"
        ],
        "mod/lti/return.php||mod/lti/return.php": [
          "File: mod/lti/return.php -> mod/lti/return.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:     echo htmlspecialchars($errormsg);",
          "80:         echo '<br /><br />';",
          "82:         $links = new stdClass();",
          "90:             $links->admin_request_url = $adminrequesturl->out(false);",
          "91:             echo get_string('lti_launch_error_tool_request', 'lti', $links);",
          "92:         }",
          "93:     }",
          "",
          "[Removed Lines]",
          "77:     $canaddtools = has_capability('mod/lti:addcoursetool', context_course::instance($courseid));",
          "79:     if ($unsigned == 1 && $canaddtools) {",
          "83:         $coursetooleditor = new moodle_url('/mod/lti/instructor_edit_tool_type.php', array('course' => $courseid, 'action' => 'add'));",
          "84:         $links->course_tool_editor = $coursetooleditor->out(false);",
          "86:         echo get_string('lti_launch_error_unsigned_help', 'lti', $links);",
          "88:         if (!empty($lti)) {",
          "89:             $adminrequesturl = new moodle_url('/mod/lti/request_tool.php', array('instanceid' => $lti->id));",
          "",
          "[Added Lines]",
          "77:     if ($unsigned == 1) {",
          "79:         $contextcourse = context_course::instance($courseid);",
          "83:         if (has_capability('mod/lti:addcoursetool', $contextcourse)) {",
          "84:             $coursetooleditor = new moodle_url('/mod/lti/instructor_edit_tool_type.php',",
          "85:                 array('course' => $courseid, 'action' => 'add', 'sesskey' => sesskey()));",
          "86:             $links->course_tool_editor = $coursetooleditor->out(false);",
          "88:             echo get_string('lti_launch_error_unsigned_help', 'lti', $links);",
          "89:         }",
          "91:         if (!empty($lti) && has_capability('mod/lti:requesttooladd', $contextcourse)) {",
          "92:             $adminrequesturl = new moodle_url('/mod/lti/request_tool.php', array('instanceid' => $lti->id, 'sesskey' => sesskey()));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "75d7e25198eeb6255963e2e46212d89b14e05dd7",
      "candidate_info": {
        "commit_hash": "75d7e25198eeb6255963e2e46212d89b14e05dd7",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/75d7e25198eeb6255963e2e46212d89b14e05dd7",
        "files": [
          "mod/lti/instructor_edit_tool_type.php",
          "mod/lti/request_tool.php",
          "mod/lti/return.php"
        ],
        "message": "MDL-47924 mod_lti: Fixing missing sesskey checkings\n\nAlso fixing a missing capability checking.",
        "before_after_code_files": [
          "mod/lti/instructor_edit_tool_type.php||mod/lti/instructor_edit_tool_type.php",
          "mod/lti/request_tool.php||mod/lti/request_tool.php",
          "mod/lti/return.php||mod/lti/return.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "mod/lti/instructor_edit_tool_type.php||mod/lti/instructor_edit_tool_type.php",
            "mod/lti/request_tool.php||mod/lti/request_tool.php",
            "mod/lti/return.php||mod/lti/return.php"
          ],
          "candidate": [
            "mod/lti/instructor_edit_tool_type.php||mod/lti/instructor_edit_tool_type.php",
            "mod/lti/request_tool.php||mod/lti/request_tool.php",
            "mod/lti/return.php||mod/lti/return.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/lti/instructor_edit_tool_type.php||mod/lti/instructor_edit_tool_type.php": [
          "File: mod/lti/instructor_edit_tool_type.php -> mod/lti/instructor_edit_tool_type.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: $action = optional_param('action', null, PARAM_TEXT);",
          "38: $typeid = optional_param('typeid', null, PARAM_INT);",
          "40: require_capability('mod/lti:addcoursetool', context_course::instance($courseid));",
          "42: if (!empty($typeid)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40: require_sesskey();",
          "",
          "---------------"
        ],
        "mod/lti/request_tool.php||mod/lti/request_tool.php": [
          "File: mod/lti/request_tool.php -> mod/lti/request_tool.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: require_login($course);",
          "40: require_capability('mod/lti:requesttooladd', context_course::instance($lti->course));",
          "42: $baseurl = lti_get_domain_from_url($lti->toolurl);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40: require_sesskey();",
          "",
          "---------------"
        ],
        "mod/lti/return.php||mod/lti/return.php": [
          "File: mod/lti/return.php -> mod/lti/return.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:     echo htmlspecialchars($errormsg);",
          "81:         echo '<br /><br />';",
          "83:         $links = new stdClass();",
          "91:             $links->admin_request_url = $adminrequesturl->out(false);",
          "92:             echo get_string('lti_launch_error_tool_request', 'lti', $links);",
          "93:         }",
          "94:     }",
          "",
          "[Removed Lines]",
          "78:     $canaddtools = has_capability('mod/lti:addcoursetool', context_course::instance($courseid));",
          "80:     if ($unsigned == 1 && $canaddtools) {",
          "84:         $coursetooleditor = new moodle_url('/mod/lti/instructor_edit_tool_type.php', array('course' => $courseid, 'action' => 'add'));",
          "85:         $links->course_tool_editor = $coursetooleditor->out(false);",
          "87:         echo get_string('lti_launch_error_unsigned_help', 'lti', $links);",
          "89:         if (!empty($lti)) {",
          "90:             $adminrequesturl = new moodle_url('/mod/lti/request_tool.php', array('instanceid' => $lti->id));",
          "",
          "[Added Lines]",
          "78:     if ($unsigned == 1) {",
          "80:         $contextcourse = context_course::instance($courseid);",
          "84:         if (has_capability('mod/lti:addcoursetool', $contextcourse)) {",
          "85:             $coursetooleditor = new moodle_url('/mod/lti/instructor_edit_tool_type.php',",
          "86:                 array('course' => $courseid, 'action' => 'add', 'sesskey' => sesskey()));",
          "87:             $links->course_tool_editor = $coursetooleditor->out(false);",
          "89:             echo get_string('lti_launch_error_unsigned_help', 'lti', $links);",
          "90:         }",
          "92:         if (!empty($lti) && has_capability('mod/lti:requesttooladd', $contextcourse)) {",
          "93:             $adminrequesturl = new moodle_url('/mod/lti/request_tool.php', array('instanceid' => $lti->id, 'sesskey' => sesskey()));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "48ea41c48f3dcf28fb40fe0b0a1f0c4c0453d34d",
      "candidate_info": {
        "commit_hash": "48ea41c48f3dcf28fb40fe0b0a1f0c4c0453d34d",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/48ea41c48f3dcf28fb40fe0b0a1f0c4c0453d34d",
        "files": [
          "mod/lti/instructor_edit_tool_type.php",
          "mod/lti/request_tool.php",
          "mod/lti/return.php"
        ],
        "message": "MDL-47924 mod_lti: Fixing missing sesskey checking\n\nAlso fixing a missing capability checking.",
        "before_after_code_files": [
          "mod/lti/instructor_edit_tool_type.php||mod/lti/instructor_edit_tool_type.php",
          "mod/lti/request_tool.php||mod/lti/request_tool.php",
          "mod/lti/return.php||mod/lti/return.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "mod/lti/instructor_edit_tool_type.php||mod/lti/instructor_edit_tool_type.php",
            "mod/lti/request_tool.php||mod/lti/request_tool.php",
            "mod/lti/return.php||mod/lti/return.php"
          ],
          "candidate": [
            "mod/lti/instructor_edit_tool_type.php||mod/lti/instructor_edit_tool_type.php",
            "mod/lti/request_tool.php||mod/lti/request_tool.php",
            "mod/lti/return.php||mod/lti/return.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/lti/instructor_edit_tool_type.php||mod/lti/instructor_edit_tool_type.php": [
          "File: mod/lti/instructor_edit_tool_type.php -> mod/lti/instructor_edit_tool_type.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: $action = optional_param('action', null, PARAM_TEXT);",
          "38: $typeid = optional_param('typeid', null, PARAM_INT);",
          "40: require_capability('mod/lti:addcoursetool', context_course::instance($courseid));",
          "42: if (!empty($typeid)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40: require_sesskey();",
          "",
          "---------------"
        ],
        "mod/lti/request_tool.php||mod/lti/request_tool.php": [
          "File: mod/lti/request_tool.php -> mod/lti/request_tool.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: require_login($course);",
          "38: require_capability('mod/lti:requesttooladd', context_course::instance($lti->course));",
          "40: $baseurl = lti_get_domain_from_url($lti->toolurl);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38: require_sesskey();",
          "",
          "---------------"
        ],
        "mod/lti/return.php||mod/lti/return.php": [
          "File: mod/lti/return.php -> mod/lti/return.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:     echo htmlspecialchars($errormsg);",
          "67:         echo '<br /><br />';",
          "69:         $links = new stdClass();",
          "79:     }",
          "81:     echo $OUTPUT->footer();",
          "",
          "[Removed Lines]",
          "64:     $canaddtools = has_capability('mod/lti:addcoursetool', context_course::instance($courseid));",
          "66:     if ($unsigned == 1 && $canaddtools) {",
          "70:         $coursetooleditor = new moodle_url('/mod/lti/instructor_edit_tool_type.php', array('course' => $courseid, 'action' => 'add'));",
          "71:         $links->course_tool_editor = $coursetooleditor->out(false);",
          "73:         $adminrequesturl = new moodle_url('/mod/lti/request_tool.php', array('instanceid' => $instanceid));",
          "74:         $links->admin_request_url = $adminrequesturl->out(false);",
          "76:         echo get_string('lti_launch_error_unsigned_help', 'lti', $links);",
          "78:         echo get_string('lti_launch_error_tool_request', 'lti', $links);",
          "",
          "[Added Lines]",
          "64:     if ($unsigned == 1) {",
          "68:         $coursecontext = context_course::instance($courseid);",
          "70:         if (has_capability('mod/lti:addcoursetool', $coursecontext)) {",
          "71:             $coursetooleditor = new moodle_url('/mod/lti/instructor_edit_tool_type.php',",
          "72:                 array('course' => $courseid, 'action' => 'add', 'sesskey' => sesskey()));",
          "73:             $links->course_tool_editor = $coursetooleditor->out(false);",
          "75:             echo get_string('lti_launch_error_unsigned_help', 'lti', $links);",
          "76:         }",
          "78:         if (has_capability('mod/lti:requesttooladd', $coursecontext)) {",
          "79:             $adminrequesturl = new moodle_url('/mod/lti/request_tool.php',",
          "80:                 array('instanceid' => $instanceid, 'sesskey' => sesskey()));",
          "81:             $links->admin_request_url = $adminrequesturl->out(false);",
          "83:             echo get_string('lti_launch_error_tool_request', 'lti', $links);",
          "84:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}