{
  "cve_id": "CVE-2015-3159",
  "cve_desc": "The abrt-action-install-debuginfo-to-abrt-cache help program in Automatic Bug Reporting Tool (ABRT) does not properly handle the process environment before invoking abrt-action-install-debuginfo, which allows local users to gain privileges.",
  "repo": "abrt/abrt",
  "patch_hash": "9a4100678fea4d60ec93d35f4c5de2e9ad054f3a",
  "patch_info": {
    "commit_hash": "9a4100678fea4d60ec93d35f4c5de2e9ad054f3a",
    "repo": "abrt/abrt",
    "commit_url": "https://github.com/abrt/abrt/commit/9a4100678fea4d60ec93d35f4c5de2e9ad054f3a",
    "files": [
      "src/plugins/abrt-action-install-debuginfo-to-abrt-cache.c"
    ],
    "message": "a-a-i-d-t-a-cache: sanitize umask\n\nWe cannot trust anything when running suided program.\n\nRelated: #1216962\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>",
    "before_after_code_files": [
      "src/plugins/abrt-action-install-debuginfo-to-abrt-cache.c||src/plugins/abrt-action-install-debuginfo-to-abrt-cache.c"
    ]
  },
  "patch_diff": {
    "src/plugins/abrt-action-install-debuginfo-to-abrt-cache.c||src/plugins/abrt-action-install-debuginfo-to-abrt-cache.c": [
      "File: src/plugins/abrt-action-install-debuginfo-to-abrt-cache.c -> src/plugins/abrt-action-install-debuginfo-to-abrt-cache.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "182:         if (u != 0)",
      "183:             strcpy(path_env, \"PATH=/usr/bin:/bin:\"BIN_DIR);",
      "184:         putenv(path_env);",
      "185:     }",
      "187:     execvp(EXECUTABLE, (char **)args);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "187:         umask(0022);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d6e2f6f128cef4c21cb80941ae674c9842681aa7",
      "candidate_info": {
        "commit_hash": "d6e2f6f128cef4c21cb80941ae674c9842681aa7",
        "repo": "abrt/abrt",
        "commit_url": "https://github.com/abrt/abrt/commit/d6e2f6f128cef4c21cb80941ae674c9842681aa7",
        "files": [
          "src/hooks/abrt-hook-ccpp.c"
        ],
        "message": "ccpp: open file for dump_fd_info with O_EXCL\n\nTo avoid possible races.\n\nRelated: #1211835\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>",
        "before_after_code_files": [
          "src/hooks/abrt-hook-ccpp.c||src/hooks/abrt-hook-ccpp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/abrt/abrt/pull/950"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/hooks/abrt-hook-ccpp.c||src/hooks/abrt-hook-ccpp.c": [
          "File: src/hooks/abrt-hook-ccpp.c -> src/hooks/abrt-hook-ccpp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "400: static bool dump_fd_info(const char *dest_filename, char *source_filename, int source_base_ofs, uid_t uid, gid_t gid)",
          "401: {",
          "403:     if (!fp)",
          "404:         return false;",
          "",
          "[Removed Lines]",
          "402:     FILE *fp = fopen(dest_filename, \"w\");",
          "",
          "[Added Lines]",
          "402:     FILE *fp = fopen(dest_filename, \"wx\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7269a2cc88735aee0d1fa62491b9efe73ab5c6e8",
      "candidate_info": {
        "commit_hash": "7269a2cc88735aee0d1fa62491b9efe73ab5c6e8",
        "repo": "abrt/abrt",
        "commit_url": "https://github.com/abrt/abrt/commit/7269a2cc88735aee0d1fa62491b9efe73ab5c6e8",
        "files": [
          "src/hooks/abrt-hook-ccpp.c"
        ],
        "message": "ccpp: revert the UID/GID changes if user core fails\n\nThanks Florian Weimer <fweimer@redhat.com>\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>",
        "before_after_code_files": [
          "src/hooks/abrt-hook-ccpp.c||src/hooks/abrt-hook-ccpp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/abrt/abrt/pull/950"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/hooks/abrt-hook-ccpp.c||src/hooks/abrt-hook-ccpp.c": [
          "File: src/hooks/abrt-hook-ccpp.c -> src/hooks/abrt-hook-ccpp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "351:         return -1;",
          "352:     }",
          "357:     if (strcmp(core_basename, \"core\") == 0)",
          "358:     {",
          "",
          "[Removed Lines]",
          "354:     xsetegid(get_fsgid());",
          "355:     xseteuid(fsuid);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "462:     {",
          "465:     }",
          "467:     xsetegid(0);",
          "468:     xseteuid(0);",
          "471:      || !S_ISREG(sb.st_mode)",
          "472:      || sb.st_nlink != 1",
          "473:      || sb.st_uid != fsuid",
          "474:     ) {",
          "479:         goto user_core_fail;",
          "480:     }",
          "481:     if (ftruncate(user_core_fd, 0) != 0) {",
          "",
          "[Removed Lines]",
          "450:     if (newcon != NULL && setfscreatecon_raw(newcon) < 0)",
          "451:     {",
          "452:         perror_msg(\"setfscreatecon_raw(%s)\", newcon);",
          "453:         return -1;",
          "454:     }",
          "456:     struct stat sb;",
          "457:     errno = 0;",
          "461:     if (newcon != NULL && setfscreatecon_raw(NULL) < 0)",
          "463:         error_msg(\"setfscreatecon_raw(NULL)\");",
          "464:         goto user_core_fail;",
          "469:     if (user_core_fd < 0",
          "470:      || fstat(user_core_fd, &sb) != 0",
          "475:         if (user_core_fd < 0)",
          "476:             perror_msg(\"Can't open '%s' at '%s'\", core_basename, user_pwd);",
          "477:         else",
          "478:             perror_msg(\"'%s' at '%s' is not a regular file with link count 1 owned by UID(%d)\", core_basename, user_pwd, fsuid);",
          "",
          "[Added Lines]",
          "446:     int user_core_fd = -1;",
          "447:     int selinux_fail = 1;",
          "452:     xsetegid(get_fsgid());",
          "453:     xseteuid(fsuid);",
          "457:     if (/* SELinux is disabled  */ newcon == NULL",
          "458:      || /* or the call succeeds */ setfscreatecon_raw(newcon) >= 0)",
          "465:         if (user_core_fd < 0)",
          "466:             perror_msg(\"Can't open '%s' at '%s'\", core_basename, user_pwd);",
          "469:         if (newcon != NULL && setfscreatecon_raw(NULL) < 0)",
          "470:             perror_msg(\"setfscreatecon_raw(NULL)\");",
          "471:         else",
          "472:             selinux_fail = 0;",
          "474:     else",
          "475:         perror_msg(\"setfscreatecon_raw(%s)\", newcon);",
          "483:     if (user_core_fd < 0 || selinux_fail)",
          "484:         goto user_core_fail;",
          "486:     struct stat sb;",
          "487:     if (fstat(user_core_fd, &sb) != 0",
          "492:         perror_msg(\"'%s' at '%s' is not a regular file with link count 1 owned by UID(%d)\", core_basename, user_pwd, fsuid);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "28ce40d8db91c1926a95f21ef19a980a8af88471",
      "candidate_info": {
        "commit_hash": "28ce40d8db91c1926a95f21ef19a980a8af88471",
        "repo": "abrt/abrt",
        "commit_url": "https://github.com/abrt/abrt/commit/28ce40d8db91c1926a95f21ef19a980a8af88471",
        "files": [
          "src/hooks/abrt-hook-ccpp.c"
        ],
        "message": "ccpp: check for overflow in abrt coredump path creation\n\nThis issue was discovered by Florian Weimer of Red Hat Product Security.\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>",
        "before_after_code_files": [
          "src/hooks/abrt-hook-ccpp.c||src/hooks/abrt-hook-ccpp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/abrt/abrt/pull/950"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/hooks/abrt-hook-ccpp.c||src/hooks/abrt-hook-ccpp.c": [
          "File: src/hooks/abrt-hook-ccpp.c -> src/hooks/abrt-hook-ccpp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "673:         int abrt_core_fd = xopen3(path, O_WRONLY | O_CREAT | O_TRUNC, 0600);",
          "674:         off_t core_size = copyfd_eof(STDIN_FILENO, abrt_core_fd, COPYFD_SPARSE);",
          "675:         if (core_size < 0 || fsync(abrt_core_fd) != 0)",
          "",
          "[Removed Lines]",
          "672:         snprintf(path, sizeof(path), \"%s/%s-coredump\", g_settings_dump_location, last_slash);",
          "",
          "[Added Lines]",
          "672:         if (snprintf(path, sizeof(path), \"%s/%s-coredump\", g_settings_dump_location, last_slash) >= sizeof(path))",
          "673:             error_msg_and_die(\"Error saving '%s': truncated long file path\", path);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2f948bdc09aa346616852a421ce1af2e03b39997",
      "candidate_info": {
        "commit_hash": "2f948bdc09aa346616852a421ce1af2e03b39997",
        "repo": "abrt/abrt",
        "commit_url": "https://github.com/abrt/abrt/commit/2f948bdc09aa346616852a421ce1af2e03b39997",
        "files": [
          "src/hooks/abrt-hook-ccpp.c"
        ],
        "message": "ccpp: create dump directory without parents\n\nThis patch makes the code more robust.\nThis patch ensures that abrt-hook-ccpp never creates the dump location.\n\nRelated: #1211835\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>",
        "before_after_code_files": [
          "src/hooks/abrt-hook-ccpp.c||src/hooks/abrt-hook-ccpp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/abrt/abrt/pull/950"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/hooks/abrt-hook-ccpp.c||src/hooks/abrt-hook-ccpp.c": [
          "File: src/hooks/abrt-hook-ccpp.c -> src/hooks/abrt-hook-ccpp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "681:     if (dd)",
          "682:     {",
          "683:         char *rootdir = get_rootdir(pid);",
          "",
          "[Removed Lines]",
          "680:     dd = dd_create_skeleton(path, fsuid, DEFAULT_DUMP_DIR_MODE);",
          "",
          "[Added Lines]",
          "680:     dd = dd_create_skeleton(path, fsuid, DEFAULT_DUMP_DIR_MODE, /*no flags*/0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4f2c1ddd3e3b81d2d5146b883115371f1cada9f9",
      "candidate_info": {
        "commit_hash": "4f2c1ddd3e3b81d2d5146b883115371f1cada9f9",
        "repo": "abrt/abrt",
        "commit_url": "https://github.com/abrt/abrt/commit/4f2c1ddd3e3b81d2d5146b883115371f1cada9f9",
        "files": [
          "src/hooks/abrt-hook-ccpp.c"
        ],
        "message": "ccpp: do not read data from root directories\n\nUsers are allowed to modify /proc/[pid]/root to any directory by running\ntheir own MOUNT namespace.\n\nRelated: #1211835\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>",
        "before_after_code_files": [
          "src/hooks/abrt-hook-ccpp.c||src/hooks/abrt-hook-ccpp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/abrt/abrt/pull/950"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/hooks/abrt-hook-ccpp.c||src/hooks/abrt-hook-ccpp.c": [
          "File: src/hooks/abrt-hook-ccpp.c -> src/hooks/abrt-hook-ccpp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "678:     {",
          "679:         char *rootdir = get_rootdir(pid);",
          "683:         char source_filename[sizeof(\"/proc/%lu/somewhat_long_name\") + sizeof(long)*3];",
          "684:         int source_base_ofs = sprintf(source_filename, \"/proc/%lu/smaps\", (long)pid);",
          "",
          "[Removed Lines]",
          "681:         dd_create_basic_files(dd, fsuid, (rootdir && strcmp(rootdir, \"/\") != 0) ? rootdir : NULL);",
          "",
          "[Added Lines]",
          "681:         dd_create_basic_files(dd, fsuid, NULL);",
          "",
          "---------------"
        ]
      }
    }
  ]
}