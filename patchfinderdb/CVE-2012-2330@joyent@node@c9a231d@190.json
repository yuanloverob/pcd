{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2efa3ae64f1c713d90ea094f465695fd075db08f",
      "candidate_info": {
        "commit_hash": "2efa3ae64f1c713d90ea094f465695fd075db08f",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/2efa3ae64f1c713d90ea094f465695fd075db08f",
        "files": [
          "tools/install.py"
        ],
        "message": "installer: reapply b21c8e0b, honor --without-npm\n\nThis bug was already fixed in the v0.8 branch but git skips the patch when\nmerging v0.8 into master. Reapply it manually.\n\nFixes #3961.",
        "before_after_code_files": [
          "tools/install.py||tools/install.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/install.py||tools/install.py": [
          "File: tools/install.py -> tools/install.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "143:   # with dtrace support now (oracle's \"unbreakable\" linux)",
          "144:   action(['src/node.d'], 'lib/dtrace/')",
          "148: def run(args):",
          "149:   global dst_dir, node_prefix, target_defaults, variables",
          "",
          "[Removed Lines]",
          "146:   if variables.get('node_install_npm'): npm_files(action)",
          "",
          "[Added Lines]",
          "146:   if 'true' == variables.get('node_install_npm'): npm_files(action)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ed093f1314807f55a472838eb82bb532768b0e79",
      "candidate_info": {
        "commit_hash": "ed093f1314807f55a472838eb82bb532768b0e79",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/ed093f1314807f55a472838eb82bb532768b0e79",
        "files": [
          "deps/uv/include/uv-private/uv-darwin.h",
          "deps/uv/include/uv-private/uv-unix.h",
          "deps/uv/include/uv-private/uv-win.h",
          "deps/uv/include/uv.h",
          "deps/uv/src/unix/core.c",
          "deps/uv/src/unix/internal.h",
          "deps/uv/src/unix/linux/syscalls.c",
          "deps/uv/src/unix/linux/syscalls.h",
          "deps/uv/src/unix/process.c",
          "deps/uv/src/unix/stream.c",
          "deps/uv/src/win/core.c",
          "deps/uv/src/win/signal.c",
          "deps/uv/src/win/tty.c"
        ],
        "message": "uv: upgrade to 564e7c7",
        "before_after_code_files": [
          "deps/uv/include/uv-private/uv-darwin.h||deps/uv/include/uv-private/uv-darwin.h",
          "deps/uv/include/uv-private/uv-unix.h||deps/uv/include/uv-private/uv-unix.h",
          "deps/uv/include/uv-private/uv-win.h||deps/uv/include/uv-private/uv-win.h",
          "deps/uv/include/uv.h||deps/uv/include/uv.h",
          "deps/uv/src/unix/core.c||deps/uv/src/unix/core.c",
          "deps/uv/src/unix/internal.h||deps/uv/src/unix/internal.h",
          "deps/uv/src/unix/linux/syscalls.c||deps/uv/src/unix/linux/syscalls.c",
          "deps/uv/src/unix/linux/syscalls.h||deps/uv/src/unix/linux/syscalls.h",
          "deps/uv/src/unix/process.c||deps/uv/src/unix/process.c",
          "deps/uv/src/unix/stream.c||deps/uv/src/unix/stream.c",
          "deps/uv/src/win/core.c||deps/uv/src/win/core.c",
          "deps/uv/src/win/signal.c||deps/uv/src/win/signal.c",
          "deps/uv/src/win/tty.c||deps/uv/src/win/tty.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/include/uv-private/uv-darwin.h||deps/uv/include/uv-private/uv-darwin.h": [
          "File: deps/uv/include/uv-private/uv-darwin.h -> deps/uv/include/uv-private/uv-darwin.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:   int fflags;                                                                 \\",
          "35:   int fd;                                                                     \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37: #define UV_STREAM_PRIVATE_PLATFORM_FIELDS                                     \\",
          "38:   void* select;                                                               \\",
          "",
          "---------------"
        ],
        "deps/uv/include/uv-private/uv-unix.h||deps/uv/include/uv-private/uv-unix.h": [
          "File: deps/uv/include/uv-private/uv-unix.h -> deps/uv/include/uv-private/uv-unix.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "80: #endif",
          "83: typedef struct {",
          "84:   char* base;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82: #ifndef UV_STREAM_PRIVATE_PLATFORM_FIELDS",
          "84: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "178:   int delayed_error;                                                          \\",
          "179:   int accepted_fd;                                                            \\",
          "180:   int fd;                                                                     \\",
          "182: #define UV_TCP_PRIVATE_FIELDS                                                 \\",
          "183:   uv_idle_t* idle_handle;  /* for UV_TCP_SINGLE_ACCEPT handles */             \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "185:   UV_STREAM_PRIVATE_PLATFORM_FIELDS                                           \\",
          "",
          "---------------"
        ],
        "deps/uv/include/uv-private/uv-win.h||deps/uv/include/uv-private/uv-win.h": [
          "File: deps/uv/include/uv-private/uv-win.h -> deps/uv/include/uv-private/uv-win.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "66: #define SIGHUP                1",
          "67: #define SIGKILL               9",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68: #define SIGWINCH             28",
          "",
          "---------------"
        ],
        "deps/uv/include/uv.h||deps/uv/include/uv.h": [
          "File: deps/uv/include/uv.h -> deps/uv/include/uv.h"
        ],
        "deps/uv/src/unix/core.c||deps/uv/src/unix/core.c": [
          "File: deps/uv/src/unix/core.c -> deps/uv/src/unix/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: #ifdef __APPLE__",
          "52: #endif",
          "54: #ifdef __FreeBSD__",
          "55: # include <sys/sysctl.h>",
          "56: # include <sys/wait.h>",
          "57: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52: # include <sys/filio.h>",
          "53: # include <sys/ioctl.h>",
          "58: # include <sys/filio.h>",
          "59: # include <sys/ioctl.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "460:   while (1) {",
          "461: #if __linux__",
          "464:     if (no_accept4)",
          "465:       goto skip;",
          "",
          "[Removed Lines]",
          "462:     static int no_accept4;",
          "",
          "[Added Lines]",
          "466:     static __read_mostly int no_accept4;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "503: }",
          "508: int uv__nonblock(int fd, int set) {",
          "509:   int r;",
          "",
          "[Removed Lines]",
          "506: #if __linux__",
          "",
          "[Added Lines]",
          "510: #if defined(__linux__) || defined(__FreeBSD__) || defined(__APPLE__)",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/internal.h||deps/uv/src/unix/internal.h": [
          "File: deps/uv/src/unix/internal.h -> deps/uv/src/unix/internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #include <assert.h>",
          "32: # define inline __inline",
          "33: #endif",
          "",
          "[Removed Lines]",
          "31: #if __STRICT_ANSI__",
          "",
          "[Added Lines]",
          "31: #if defined(__GNUC__)",
          "32: # define __read_mostly __attribute__((__section__(\".data.read_mostly\")))",
          "33: #else",
          "34: # define __read_mostly",
          "35: #endif",
          "37: #if defined(__STRICT_ANSI__)",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/linux/syscalls.c||deps/uv/src/unix/linux/syscalls.c": [
          "File: deps/uv/src/unix/linux/syscalls.c -> deps/uv/src/unix/linux/syscalls.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "247: }",
          "251: #if __NR_epoll_create",
          "253: #else",
          "254:   return errno = ENOSYS, -1;",
          "255: #endif",
          "",
          "[Removed Lines]",
          "250: int uv__epoll_create(void) {",
          "252:   return syscall(__NR_epoll_create);",
          "",
          "[Added Lines]",
          "250: int uv__epoll_create(int size) {",
          "252:   return syscall(__NR_epoll_create, size);",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/linux/syscalls.h||deps/uv/src/unix/linux/syscalls.h": [
          "File: deps/uv/src/unix/linux/syscalls.h -> deps/uv/src/unix/linux/syscalls.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "90: int uv__accept4(int fd, struct sockaddr* addr, socklen_t* addrlen, int flags);",
          "91: int uv__eventfd(unsigned int count);",
          "93: int uv__epoll_create1(int flags);",
          "94: int uv__epoll_ctl(int epfd, int op, int fd, struct uv__epoll_event *ev);",
          "95: int uv__epoll_wait(int epfd,",
          "",
          "[Removed Lines]",
          "92: int uv__epoll_create(void);",
          "",
          "[Added Lines]",
          "92: int uv__epoll_create(int size);",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/process.c||deps/uv/src/unix/process.c": [
          "File: deps/uv/src/unix/process.c -> deps/uv/src/unix/process.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "118: int uv__make_socketpair(int fds[2], int flags) {",
          "119: #if __linux__",
          "120:   if (socketpair(AF_UNIX, SOCK_STREAM | UV__SOCK_CLOEXEC | flags, 0, fds) == 0)",
          "121:     return 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "120:   static __read_mostly int no_cloexec;",
          "122:   if (no_cloexec)",
          "123:     goto skip;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "126:   if (errno != EINVAL)",
          "127:     return -1;",
          "128: #endif",
          "130:   if (socketpair(AF_UNIX, SOCK_STREAM, 0, fds))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "134:   no_cloexec = 1;",
          "136: skip:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "145: int uv__make_pipe(int fds[2], int flags) {",
          "146: #if __linux__",
          "147:   if (uv__pipe2(fds, flags | UV__O_CLOEXEC) == 0)",
          "148:     return 0;",
          "150:   if (errno != ENOSYS)",
          "151:     return -1;",
          "152: #endif",
          "154:   if (pipe(fds))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "156:   static __read_mostly int no_pipe2;",
          "158:   if (no_pipe2)",
          "159:     goto skip;",
          "167:   no_pipe2 = 1;",
          "169: skip:",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/stream.c||deps/uv/src/unix/stream.c": [
          "File: deps/uv/src/unix/stream.c -> deps/uv/src/unix/stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: #include <sys/un.h>",
          "35: #include <unistd.h>",
          "38: static void uv__stream_connect(uv_stream_t*);",
          "39: static void uv__write(uv_stream_t* stream);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37: #if defined(__APPLE__)",
          "38: # include <sys/event.h>",
          "39: # include <sys/time.h>",
          "40: # include <sys/select.h>",
          "43: #define EV_ERROR_ORIG 0x4000",
          "46: typedef struct uv__stream_select_s uv__stream_select_t;",
          "48: struct uv__stream_select_s {",
          "49:   uv_stream_t* stream;",
          "50:   uv_thread_t thread;",
          "51:   uv_sem_t sem;",
          "52:   uv_mutex_t mutex;",
          "53:   uv_async_t async;",
          "54:   int events;",
          "55:   int fake_fd;",
          "56: };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "69:   ngx_queue_init(&stream->write_completed_queue);",
          "70:   stream->write_queue_size = 0;",
          "72:   uv__io_init(&stream->read_watcher, uv__stream_io, -1, 0);",
          "73:   uv__io_init(&stream->write_watcher, uv__stream_io, -1, 0);",
          "74: }",
          "77: int uv__stream_open(uv_stream_t* stream, int fd, int flags) {",
          "78:   socklen_t yes;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "93: #if defined(__APPLE__)",
          "94:   stream->select = NULL;",
          "102: #if defined(__APPLE__)",
          "103: void uv__stream_osx_select(void* arg) {",
          "104:   uv_stream_t* stream;",
          "105:   uv__stream_select_t* s;",
          "106:   fd_set read;",
          "107:   fd_set write;",
          "108:   fd_set error;",
          "109:   struct timeval timeout;",
          "110:   int events;",
          "111:   int fd;",
          "112:   int r;",
          "114:   stream = arg;",
          "115:   s = stream->select;",
          "116:   fd = stream->fd;",
          "118:   while (1) {",
          "120:     if (uv_sem_trywait(&s->sem) == 0) break;",
          "123:     FD_ZERO(&read);",
          "124:     FD_ZERO(&write);",
          "125:     FD_ZERO(&error);",
          "126:     FD_SET(fd, &read);",
          "127:     FD_SET(fd, &write);",
          "128:     FD_SET(fd, &error);",
          "130:     timeout.tv_sec = 0;",
          "132:     r = select(fd + 1, &read, &write, &error, &timeout);",
          "133:     if (r == -1) {",
          "134:       if (errno == EINTR) continue;",
          "136:       abort();",
          "137:     }",
          "140:     if (r == 0) continue;",
          "143:     events = 0;",
          "144:     if (FD_ISSET(fd, &read)) events |= UV__IO_READ;",
          "145:     if (FD_ISSET(fd, &write)) events |= UV__IO_WRITE;",
          "146:     if (FD_ISSET(fd, &error)) events |= UV__IO_ERROR;",
          "148:     uv_mutex_lock(&s->mutex);",
          "149:     s->events |= events;",
          "150:     uv_mutex_unlock(&s->mutex);",
          "152:     if (events != 0) uv_async_send(&s->async);",
          "153:   }",
          "154: }",
          "157: void uv__stream_osx_select_cb(uv_async_t* handle, int status) {",
          "158:   uv_stream_t* stream;",
          "159:   uv__stream_select_t* s;",
          "160:   int events;",
          "162:   s = container_of(handle, uv__stream_select_t, async);",
          "163:   stream = s->stream;",
          "166:   uv_mutex_lock(&s->mutex);",
          "167:   events = s->events;",
          "168:   s->events = 0;",
          "169:   uv_mutex_unlock(&s->mutex);",
          "172:   if ((events & UV__IO_READ) && uv__io_active(&stream->read_watcher)) {",
          "173:     uv__stream_io(stream->loop, &stream->read_watcher, UV__IO_READ);",
          "174:   }",
          "175:   if ((events & UV__IO_WRITE) && uv__io_active(&stream->write_watcher)) {",
          "176:     uv__stream_io(stream->loop, &stream->write_watcher, UV__IO_WRITE);",
          "177:   }",
          "178:   if (events & UV__IO_ERROR) {",
          "180:     uv__stream_io(stream->loop, NULL, UV__IO_ERROR);",
          "181:   }",
          "182: }",
          "185: void uv__stream_osx_cb_close(uv_handle_t* async) {",
          "187:   free(container_of(async, uv__stream_select_t, async));",
          "188: }",
          "191: int uv__stream_try_select(uv_stream_t* stream, int fd) {",
          "197:   int kq;",
          "198:   int ret;",
          "199:   struct kevent filter[1];",
          "200:   struct kevent events[1];",
          "201:   struct timespec timeout;",
          "202:   uv__stream_select_t* s;",
          "204:   kq = kqueue();",
          "205:   if (kq < 0) {",
          "206:     fprintf(stderr, \"(libuv) Failed to create kqueue (%d)\\n\", errno);",
          "207:     abort();",
          "208:   }",
          "210:   EV_SET(&filter[0], fd, EVFILT_READ, EV_ADD | EV_ENABLE, 0, 0, 0);",
          "213:   timeout.tv_sec = 0;",
          "214:   timeout.tv_nsec = 1;",
          "216:   ret = kevent(kq, filter, 1, events, 1, &timeout);",
          "217:   close(kq);",
          "218:   if (ret < 1) return -1;",
          "219:   if ((events[0].flags & EV_ERROR_ORIG) == 0 || events[0].data != EINVAL) {",
          "220:     return -1;",
          "221:   }",
          "224:   s = malloc(sizeof(*s));",
          "225:   if (s == NULL) {",
          "227:     abort();",
          "228:   }",
          "230:   if (uv_async_init(stream->loop,",
          "231:                     &s->async,",
          "232:                     uv__stream_osx_select_cb)) {",
          "233:     return -1;",
          "234:   }",
          "235:   s->async.flags |= UV__HANDLE_INTERNAL;",
          "236:   uv__handle_unref((uv_handle_t*) &s->async);",
          "238:   if (uv_sem_init(&s->sem, 0)) goto fatal1;",
          "239:   if (uv_mutex_init(&s->mutex)) goto fatal2;",
          "242:   s->fake_fd = socket(AF_UNIX, SOCK_STREAM, 0);",
          "243:   if (s->fake_fd == -1) goto fatal3;",
          "245:   if (uv_thread_create(&s->thread, uv__stream_osx_select, stream)) {",
          "246:     goto fatal4;",
          "247:   }",
          "249:   s->stream = stream;",
          "250:   stream->select = s;",
          "252:   return 0;",
          "254: fatal4:",
          "255:   close(s->fake_fd);",
          "256: fatal3:",
          "257:   uv_mutex_destroy(&s->mutex);",
          "258: fatal2:",
          "259:   uv_sem_destroy(&s->sem);",
          "260: fatal1:",
          "261:   uv_close((uv_handle_t*) &s->async, uv__stream_osx_cb_close);",
          "263:   free(s);",
          "264:   return -1;",
          "265: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "102:     }",
          "103:   }",
          "106:   uv__io_set(&stream->read_watcher, uv__stream_io, fd, UV__IO_READ);",
          "107:   uv__io_set(&stream->write_watcher, uv__stream_io, fd, UV__IO_WRITE);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "297: #if defined(__APPLE__)",
          "298:   if (uv__stream_try_select(stream, fd) == 0) {",
          "300:     fd = ((uv__stream_select_t*) stream->select)->fake_fd;",
          "301:   }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "982: void uv__stream_close(uv_stream_t* handle) {",
          "983:   uv_read_stop(handle);",
          "984:   uv__io_stop(handle->loop, &handle->write_watcher);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1182: #if defined(__APPLE__)",
          "1184:   if (handle->select != NULL) {",
          "1185:     uv__stream_select_t* s;",
          "1187:     s = handle->select;",
          "1189:     uv_sem_post(&s->sem);",
          "1190:     uv_thread_join(&s->thread);",
          "1191:     uv_sem_destroy(&s->sem);",
          "1192:     uv_mutex_destroy(&s->mutex);",
          "1193:     close(s->fake_fd);",
          "1194:     uv_close((uv_handle_t*) &s->async, uv__stream_osx_cb_close);",
          "1196:     handle->select = NULL;",
          "1197:   }",
          "",
          "---------------"
        ],
        "deps/uv/src/win/core.c||deps/uv/src/win/core.c": [
          "File: deps/uv/src/win/core.c -> deps/uv/src/win/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:     uv_fatal_error(GetLastError(), \"CreateIoCompletionPort\");",
          "74:   }",
          "76:   uv_update_time(loop);",
          "78:   ngx_queue_init(&loop->handle_queue);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "78:   loop->time = 0;",
          "",
          "---------------"
        ],
        "deps/uv/src/win/signal.c||deps/uv/src/win/signal.c": [
          "File: deps/uv/src/win/signal.c -> deps/uv/src/win/signal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "169:     case SIGHUP:",
          "170:       return uv__signal_register_control_handler();",
          "172:     case SIGILL:",
          "173:     case SIGABRT_COMPAT:",
          "174:     case SIGFPE:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "172:     case SIGWINCH:",
          "174:       return uv_ok_;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "193:       uv__signal_unregister_control_handler();",
          "194:       return;",
          "196:     case SIGILL:",
          "197:     case SIGABRT_COMPAT:",
          "198:     case SIGFPE:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "200:     case SIGWINCH:",
          "202:       return;",
          "",
          "---------------"
        ],
        "deps/uv/src/win/tty.c||deps/uv/src/win/tty.c": [
          "File: deps/uv/src/win/tty.c -> deps/uv/src/win/tty.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "83: static CRITICAL_SECTION uv_tty_output_lock;",
          "86: void uv_console_init() {",
          "87:   InitializeCriticalSection(&uv_tty_output_lock);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "85: static HANDLE uv_tty_output_handle = INVALID_HANDLE_VALUE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "113:       return -1;",
          "114:     }",
          "118:     EnterCriticalSection(&uv_tty_output_lock);",
          "119:     uv_tty_update_virtual_window(&screen_buffer_info);",
          "120:     LeaveCriticalSection(&uv_tty_output_lock);",
          "121:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "125:     uv_tty_output_handle = handle;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "513:       }",
          "514:       records_left--;",
          "517:       if (handle->last_input_record.EventType != KEY_EVENT) {",
          "518:         continue;",
          "519:       }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "528:       if (handle->last_input_record.EventType == WINDOW_BUFFER_SIZE_EVENT) {",
          "529:         CONSOLE_SCREEN_BUFFER_INFO info;",
          "530:         if (uv_tty_output_handle == INVALID_HANDLE_VALUE)",
          "531:           continue;",
          "532:         if (!GetConsoleScreenBufferInfo(uv_tty_output_handle, &info))",
          "533:           continue;",
          "534:         uv_tty_update_virtual_window(&info);",
          "535:         continue;",
          "536:       }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "837: static void uv_tty_update_virtual_window(CONSOLE_SCREEN_BUFFER_INFO* info) {",
          "839:   uv_tty_virtual_width = info->dwSize.X;",
          "842:   if (uv_tty_virtual_offset == -1) {",
          "",
          "[Removed Lines]",
          "838:   uv_tty_virtual_height = info->srWindow.Bottom - info->srWindow.Top + 1;",
          "",
          "[Added Lines]",
          "860:   int old_virtual_width = uv_tty_virtual_width;",
          "861:   int old_virtual_height = uv_tty_virtual_height;",
          "864:   uv_tty_virtual_height = info->srWindow.Bottom - info->srWindow.Top + 1;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "854:   if (uv_tty_virtual_offset < 0) {",
          "855:     uv_tty_virtual_offset = 0;",
          "856:   }",
          "857: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "885:   if (old_virtual_width != -1 && old_virtual_height != -1 &&",
          "886:       (uv_tty_virtual_width != old_virtual_width ||",
          "887:        uv_tty_virtual_height != old_virtual_height)) {",
          "888:     uv__signal_dispatch(SIGWINCH);",
          "889:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0965d2d9f61f12ea807e81024fc37fe8d29a5a27",
      "candidate_info": {
        "commit_hash": "0965d2d9f61f12ea807e81024fc37fe8d29a5a27",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/0965d2d9f61f12ea807e81024fc37fe8d29a5a27",
        "files": [
          "tools/js2c.py"
        ],
        "message": "js2c: fix to support files other than ones ending with 2 char extensions\n\nPreviously this was basically hard-coded for *.js files, but now we\nneed to include the 'config.gypi' file in there as well.",
        "before_after_code_files": [
          "tools/js2c.py||tools/js2c.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/js2c.py||tools/js2c.py": [
          "File: tools/js2c.py -> tools/js2c.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "288:     lines = ExpandMacros(lines, macros)",
          "289:     lines = CompressScript(lines, do_jsmin)",
          "290:     data = ToCArray(s, lines)",
          "292:     if delay: id = id[:-6]",
          "293:     if delay:",
          "294:       delay_ids.append((id, len(lines)))",
          "",
          "[Removed Lines]",
          "291:     id = (os.path.split(str(s))[1])[:-3]",
          "",
          "[Added Lines]",
          "291:     id = os.path.basename(str(s)).split('.')[0]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "025f53c306d91968b292051404aebb8bf2adb458",
      "candidate_info": {
        "commit_hash": "025f53c306d91968b292051404aebb8bf2adb458",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/025f53c306d91968b292051404aebb8bf2adb458",
        "files": [
          "lib/console.js",
          "test/simple/test-console-instance.js"
        ],
        "message": "console: refactor the console module to be reusable\n\nSo that multiple instances can be created pointing\nto different writable streams.\n\nThis is needed for #3876.",
        "before_after_code_files": [
          "lib/console.js||liconsole.js",
          "test/simple/test-console-instance.js||test/simple/test-console-instance.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/console.js||liconsole.js": [
          "File: lib/console.js -> liconsole.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: var util = require('util');",
          "26: };",
          "34: };",
          "42: };",
          "48: };",
          "53:   if (!time) {",
          "54:     throw new Error('No such label: ' + label);",
          "55:   }",
          "56:   var duration = Date.now() - time;",
          "58: };",
          "64:   var err = new Error;",
          "65:   err.name = 'Trace';",
          "66:   err.message = label || '';",
          "67:   Error.captureStackTrace(err, arguments.callee);",
          "69: };",
          "73:   if (!expression) {",
          "74:     var arr = Array.prototype.slice.call(arguments, 1);",
          "75:     require('assert').ok(false, util.format.apply(this, arr));",
          "76:   }",
          "77: };",
          "",
          "[Removed Lines]",
          "24: exports.log = function() {",
          "25:   process.stdout.write(util.format.apply(this, arguments) + '\\n');",
          "29: exports.info = exports.log;",
          "32: exports.warn = function() {",
          "33:   process.stderr.write(util.format.apply(this, arguments) + '\\n');",
          "37: exports.error = exports.warn;",
          "40: exports.dir = function(object) {",
          "41:   process.stdout.write(util.inspect(object) + '\\n');",
          "45: var times = {};",
          "46: exports.time = function(label) {",
          "47:   times[label] = Date.now();",
          "51: exports.timeEnd = function(label) {",
          "52:   var time = times[label];",
          "57:   exports.log('%s: %dms', label, duration);",
          "61: exports.trace = function(label) {",
          "68:   console.error(err.stack);",
          "72: exports.assert = function(expression) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-console-instance.js||test/simple/test-console-instance.js": [
          "File: test/simple/test-console-instance.js -> test/simple/test-console-instance.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: var common = require('../common');",
          "24: var assert = require('assert');",
          "25: var Stream = require('stream');",
          "26: var Console = require('console').Console;",
          "27: var called = false;",
          "31: process.stdout.write = process.stderr.write = function() {",
          "32:   throw new Error('write() should not be called!');",
          "33: };",
          "36: assert.equal('function', typeof Console);",
          "40: assert.throws(function () {",
          "41:   new Console();",
          "42: }, /Console expects a writable stream/);",
          "44: var out = new Stream();",
          "45: var err = new Stream();",
          "46: out.writable = err.writable = true;",
          "47: out.write = err.write = function(d) {};",
          "49: var c = new Console(out, err);",
          "51: out.write = err.write = function(d) {",
          "52:   assert.equal(d, 'test\\n');",
          "53:   called = true;",
          "54: };",
          "56: assert(!called);",
          "57: c.log('test');",
          "58: assert(called);",
          "60: called = false;",
          "61: c.error('test');",
          "62: assert(called);",
          "64: out.write = function(d) {",
          "65:   assert.equal('{ foo: 1 }\\n', d);",
          "66:   called = true;",
          "67: };",
          "69: called = false;",
          "70: c.dir({ foo: 1 });",
          "71: assert(called);",
          "74: called = 0;",
          "75: out.write = function(d) {",
          "76:   called++;",
          "77:   assert.equal(d, called + ' ' + (called - 1) + ' [ 1, 2, 3 ]\\n');",
          "78: };",
          "79: [1, 2, 3].forEach(c.log);",
          "80: assert.equal(3, called);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "606a9339891a68144c6047356480f199ce04ae4c",
      "candidate_info": {
        "commit_hash": "606a9339891a68144c6047356480f199ce04ae4c",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/606a9339891a68144c6047356480f199ce04ae4c",
        "files": [
          "node.gyp"
        ],
        "message": "build: set `process.platform` to \"sunos\" on SunOS\n\ngyp sets it to \"solaris\" by default, but versions of node v0.6.x and\nolder would report \"sunos\". Let's keep things consistent.\n\nFixes #3944.",
        "before_after_code_files": [
          "node.gyp||node.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "node.gyp||node.gyp": [
          "File: node.gyp -> node.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "227:             '-lkstat',",
          "228:             '-lumem',",
          "229:           ],",
          "230:         }],",
          "231:       ],",
          "232:       'msvs-settings': {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "230:           'defines!': [",
          "231:             'PLATFORM=\"solaris\"',",
          "232:           ],",
          "233:           'defines': [",
          "234:             # we need to use node's preferred \"sunos\"",
          "235:             # rather than gyp's preferred \"solaris\"",
          "236:             'PLATFORM=\"sunos\"',",
          "237:           ],",
          "",
          "---------------"
        ]
      }
    }
  ]
}