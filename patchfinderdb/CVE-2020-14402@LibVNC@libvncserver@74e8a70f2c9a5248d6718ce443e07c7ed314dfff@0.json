{
  "cve_id": "CVE-2020-14402",
  "cve_desc": "An issue was discovered in LibVNCServer before 0.9.13. libvncserver/corre.c allows out-of-bounds access via encodings.",
  "repo": "LibVNC/libvncserver",
  "patch_hash": "74e8a70f2c9a5248d6718ce443e07c7ed314dfff",
  "patch_info": {
    "commit_hash": "74e8a70f2c9a5248d6718ce443e07c7ed314dfff",
    "repo": "LibVNC/libvncserver",
    "commit_url": "https://github.com/LibVNC/libvncserver/commit/74e8a70f2c9a5248d6718ce443e07c7ed314dfff",
    "files": [
      "libvncserver/corre.c",
      "libvncserver/hextile.c",
      "libvncserver/rre.c"
    ],
    "message": "libvncserver: encodings: prevent OOB accesses",
    "before_after_code_files": [
      "libvncserver/corre.c||libvncserver/corre.c",
      "libvncserver/hextile.c||libvncserver/hextile.c",
      "libvncserver/rre.c||libvncserver/rre.c"
    ]
  },
  "patch_diff": {
    "libvncserver/corre.c||libvncserver/corre.c": [
      "File: libvncserver/corre.c -> libvncserver/corre.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "233:             seg = data+(j*w);                                                 \\",
      "234:             if (seg[x] != cl) {break;}                                        \\",
      "235:             i = x;                                                            \\",
      "237:             i -= 1;                                                           \\",
      "238:             if (j == y) vx = hx = i;                                          \\",
      "239:             if (i < vx) vx = i;                                               \\",
      "",
      "[Removed Lines]",
      "236:             while ((seg[i] == cl) && (i < w)) i += 1;                         \\",
      "",
      "[Added Lines]",
      "236:             while ((i < w) && (seg[i] == cl)) i += 1;                         \\",
      "",
      "---------------"
    ],
    "libvncserver/hextile.c||libvncserver/hextile.c": [
      "File: libvncserver/hextile.c -> libvncserver/hextile.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "224:                     seg = data+(j*w);                                           \\",
      "225:                     if (seg[x] != cl2) {break;}                                 \\",
      "226:                     i = x;                                                      \\",
      "228:                     i -= 1;                                                     \\",
      "229:                     if (j == y) vx = hx = i;                                    \\",
      "230:                     if (i < vx) vx = i;                                         \\",
      "",
      "[Removed Lines]",
      "227:                     while ((seg[i] == cl2) && (i < w)) i += 1;                  \\",
      "",
      "[Added Lines]",
      "227:                     while ((i < w) && (seg[i] == cl2)) i += 1;                  \\",
      "",
      "---------------"
    ],
    "libvncserver/rre.c||libvncserver/rre.c": [
      "File: libvncserver/rre.c -> libvncserver/rre.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "200:             seg = data+(j*w);                                                 \\",
      "201:             if (seg[x] != cl) {break;}                                        \\",
      "202:             i = x;                                                            \\",
      "204:             i -= 1;                                                           \\",
      "205:             if (j == y) vx = hx = i;                                          \\",
      "206:             if (i < vx) vx = i;                                               \\",
      "",
      "[Removed Lines]",
      "203:             while ((seg[i] == cl) && (i < w)) i += 1;                         \\",
      "",
      "[Added Lines]",
      "203:             while ((i < w) && (seg[i] == cl)) i += 1;                         \\",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4616de68e664a8136b16c3003d33ba37d0438df3",
      "candidate_info": {
        "commit_hash": "4616de68e664a8136b16c3003d33ba37d0438df3",
        "repo": "LibVNC/libvncserver",
        "commit_url": "https://github.com/LibVNC/libvncserver/commit/4616de68e664a8136b16c3003d33ba37d0438df3",
        "files": [
          "libvncserver/cargs.c",
          "libvncserver/cursor.c",
          "libvncserver/font.c",
          "libvncserver/main.c",
          "libvncserver/rfbregion.c",
          "libvncserver/rfbserver.c",
          "libvncserver/selbox.c",
          "libvncserver/tight.c",
          "libvncserver/websockets.c"
        ],
        "message": "libvncserver: handle memory allocation failures",
        "before_after_code_files": [
          "libvncserver/cargs.c||libvncserver/cargs.c",
          "libvncserver/cursor.c||libvncserver/cursor.c",
          "libvncserver/font.c||libvncserver/font.c",
          "libvncserver/main.c||libvncserver/main.c",
          "libvncserver/rfbregion.c||libvncserver/rfbregion.c",
          "libvncserver/rfbserver.c||libvncserver/rfbserver.c",
          "libvncserver/selbox.c||libvncserver/selbox.c",
          "libvncserver/tight.c||libvncserver/tight.c",
          "libvncserver/websockets.c||libvncserver/websockets.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/LibVNC/libvncserver/pull/416"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libvncserver/cargs.c||libvncserver/cargs.c": [
          "File: libvncserver/cargs.c -> libvncserver/cargs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "125:      sscanf(argv[++i],\"%d.%d\", &rfbScreen->protocolMajorVersion, &rfbScreen->protocolMinorVersion);",
          "127:      char **passwds = malloc(sizeof(char**)*2);",
          "129:   rfbUsage();",
          "130:   return FALSE;",
          "131:      }",
          "132:      passwds[0] = argv[++i];",
          "",
          "[Removed Lines]",
          "128:      if (i + 1 >= *argc) {",
          "",
          "[Added Lines]",
          "128:      if (!passwds || i + 1 >= *argc) {",
          "130:   free(passwds);",
          "",
          "---------------"
        ],
        "libvncserver/cursor.c||libvncserver/cursor.c": [
          "File: libvncserver/cursor.c -> libvncserver/cursor.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "258:    char* cp;",
          "259:    unsigned char bit;",
          "261:    cursor->cleanup=TRUE;",
          "262:    cursor->width=width;",
          "263:    cursor->height=height;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "261:    if (!cursor)",
          "262:        return NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "265:    cursor->foreRed=cursor->foreGreen=cursor->foreBlue=0xffff;",
          "267:    cursor->source = (unsigned char*)calloc(w,height);",
          "268:    cursor->cleanupSource = TRUE;",
          "269:    for(j=0,cp=cursorString;j<height;j++)",
          "270:       for(i=0,bit=0x80;i<width;i++,bit=(bit&1)?0x80:bit>>1,cp++)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "271:    if (!cursor->source) {",
          "272:        free(cursor);",
          "273:        return NULL;",
          "274:    }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "273:    if(maskString) {",
          "274:       cursor->mask = (unsigned char*)calloc(w,height);",
          "275:       for(j=0,cp=maskString;j<height;j++)",
          "276:  for(i=0,bit=0x80;i<width;i++,bit=(bit&1)?0x80:bit>>1,cp++)",
          "277:    if(*cp!=' ') cursor->mask[j*w+i/8]|=bit;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "282:       if (!cursor->mask) {",
          "283:           free(cursor->source);",
          "284:           free(cursor);",
          "285:           return NULL;",
          "286:       }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "288:    char* mask=(char*)calloc(w,height);",
          "289:    unsigned char c;",
          "291:    for(j=0;j<height;j++)",
          "292:      for(i=w-1;i>=0;i--) {",
          "293:  c=source[j*w+i];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "303:    if (!mask)",
          "304:        return NULL;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "313:  int i,j,currentError=0,maskStride=(width+7)/8;",
          "314:  unsigned char* result=(unsigned char*)calloc(maskStride,height);",
          "316:  for(j=0;j<height;j++)",
          "317:   for(i=0;i<width;i++) {",
          "318:    int right,middle,left;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "331:  if (!error || !result) {",
          "332:   free(error);",
          "333:   free(result);",
          "334:   return NULL;",
          "335:  }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "380:    if(cursor->source && cursor->cleanupSource)",
          "381:        free(cursor->source);",
          "382:    cursor->source=(unsigned char*)calloc(w,cursor->height);",
          "383:    cursor->cleanupSource=TRUE;",
          "385:    if(format->bigEndian) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "404:    if(!cursor->source)",
          "405:        return;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "449:    if(cursor->richSource && cursor->cleanupRichSource)",
          "450:        free(cursor->richSource);",
          "451:    cp=cursor->richSource=(unsigned char*)calloc(cursor->width*bpp,cursor->height);",
          "452:    cursor->cleanupRichSource=TRUE;",
          "454:    if(format->bigEndian) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "475:    if(!cp)",
          "476:        return;",
          "",
          "---------------"
        ],
        "libvncserver/font.c||libvncserver/font.c": [
          "File: libvncserver/font.c -> libvncserver/font.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "170:   if(!f) return NULL;",
          "172:   p=(rfbFontDataPtr)malloc(sizeof(rfbFontData));",
          "173:   p->data=(unsigned char*)malloc(4096);",
          "175:     free(p->data);",
          "176:     free(p);",
          "177:     fclose(f);",
          "178:     return NULL;",
          "179:   }",
          "180:   fclose(f);",
          "182:   for(i=0;i<256;i++) {",
          "",
          "[Removed Lines]",
          "174:   if(1!=fread(p->data,4096,1,f)) {",
          "181:   p->metaData=(int*)malloc(256*5*sizeof(int));",
          "",
          "[Added Lines]",
          "173:   if(!p) {",
          "174:       fclose(f);",
          "175:       return NULL;",
          "176:   }",
          "179:   p->metaData=(int*)malloc(256*5*sizeof(int));",
          "180:   if(!p->data || !p->metaData || 1!=fread(p->data,4096,1,f)) {",
          "182:     free(p->metaData);",
          "",
          "---------------"
        ],
        "libvncserver/main.c||libvncserver/main.c": [
          "File: libvncserver/main.c -> libvncserver/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "172:    return FALSE;",
          "174:  extData = calloc(sizeof(rfbExtensionData),1);",
          "175:  extData->extension = extension;",
          "176:  extData->data = data;",
          "177:  extData->next = cl->extensions;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "175:  if(!extData)",
          "176:   return FALSE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "889:  int bytesPerPixel)",
          "890: {",
          "891:    rfbScreenInfoPtr screen=calloc(sizeof(rfbScreenInfo),1);",
          "893:    if (! logMutex_initialized) {",
          "894:      INIT_MUTEX(logMutex);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "894:    if (!screen)",
          "895:        return NULL;",
          "",
          "---------------"
        ],
        "libvncserver/rfbregion.c||libvncserver/rfbregion.c": [
          "File: libvncserver/rfbregion.c -> libvncserver/rfbregion.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: static sraSpan *",
          "34: sraSpanCreate(int start, int end, const sraSpanList *subspan) {",
          "35:   sraSpan *item = (sraSpan*)malloc(sizeof(sraSpan));",
          "36:   item->_next = item->_prev = NULL;",
          "37:   item->start = start;",
          "38:   item->end = end;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36:   if (!item) return NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "117: static sraSpanList *",
          "118: sraSpanListCreate(void) {",
          "119:   sraSpanList *item = (sraSpanList*)malloc(sizeof(sraSpanList));",
          "120:   item->front._next = &(item->back);",
          "121:   item->front._prev = NULL;",
          "122:   item->back._prev = &(item->front);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "121:   if (!item) return NULL;",
          "",
          "---------------"
        ],
        "libvncserver/rfbserver.c||libvncserver/rfbserver.c": [
          "File: libvncserver/rfbserver.c -> libvncserver/rfbserver.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "168: {",
          "169:   rfbClientIteratorPtr i =",
          "170:     (rfbClientIteratorPtr)malloc(sizeof(struct rfbClientIterator));",
          "174:   return i;",
          "175: }",
          "",
          "[Removed Lines]",
          "171:   i->next = NULL;",
          "172:   i->screen = rfbScreen;",
          "173:   i->closedToo = FALSE;",
          "",
          "[Added Lines]",
          "171:   if(i) {",
          "172:     i->next = NULL;",
          "173:     i->screen = rfbScreen;",
          "174:     i->closedToo = FALSE;",
          "175:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "179: {",
          "180:   rfbClientIteratorPtr i =",
          "181:     (rfbClientIteratorPtr)malloc(sizeof(struct rfbClientIterator));",
          "185:   return i;",
          "186: }",
          "",
          "[Removed Lines]",
          "182:   i->next = NULL;",
          "183:   i->screen = rfbScreen;",
          "184:   i->closedToo = TRUE;",
          "",
          "[Added Lines]",
          "184:   if(i) {",
          "185:     i->next = NULL;",
          "186:     i->screen = rfbScreen;",
          "187:     i->closedToo = TRUE;",
          "188:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "309:     cl = (rfbClientPtr)calloc(sizeof(rfbClientRec),1);",
          "311:     cl->screen = rfbScreen;",
          "312:     cl->sock = sock;",
          "313:     cl->viewOnly = FALSE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "315:     if (!cl)",
          "316:         return NULL;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "719:     rfbLog(\"rfbClientSendString(\\\"%s\\\")\\n\", reason);",
          "721:     buf = (char *)malloc(4 + len);",
          "729:     rfbCloseClient(cl);",
          "730: }",
          "",
          "[Removed Lines]",
          "722:     ((uint32_t *)buf)[0] = Swap32IfLE(len);",
          "723:     memcpy(buf + 4, reason, len);",
          "725:     if (rfbWriteExact(cl, buf, 4 + len) < 0)",
          "726:         rfbLogPerror(\"rfbClientSendString: write\");",
          "727:     free(buf);",
          "",
          "[Added Lines]",
          "729:     if (buf) {",
          "730:         ((uint32_t *)buf)[0] = Swap32IfLE(len);",
          "731:         memcpy(buf + 4, reason, len);",
          "733:         if (rfbWriteExact(cl, buf, 4 + len) < 0)",
          "734:             rfbLogPerror(\"rfbClientSendString: write\");",
          "735:         free(buf);",
          "736:     }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "744:     rfbLog(\"rfbClientConnFailed(\\\"%s\\\")\\n\", reason);",
          "746:     buf = (char *)malloc(8 + len);",
          "755:     rfbCloseClient(cl);",
          "756: }",
          "",
          "[Removed Lines]",
          "747:     ((uint32_t *)buf)[0] = Swap32IfLE(rfbConnFailed);",
          "748:     ((uint32_t *)buf)[1] = Swap32IfLE(len);",
          "749:     memcpy(buf + 8, reason, len);",
          "751:     if (rfbWriteExact(cl, buf, 8 + len) < 0)",
          "752:         rfbLogPerror(\"rfbClientConnFailed: write\");",
          "753:     free(buf);",
          "",
          "[Added Lines]",
          "756:     if (buf) {",
          "757:         ((uint32_t *)buf)[0] = Swap32IfLE(rfbConnFailed);",
          "758:         ((uint32_t *)buf)[1] = Swap32IfLE(len);",
          "759:         memcpy(buf + 8, reason, len);",
          "761:         if (rfbWriteExact(cl, buf, 8 + len) < 0)",
          "762:             rfbLogPerror(\"rfbClientConnFailed: write\");",
          "763:         free(buf);",
          "764:     }",
          "",
          "---------------"
        ],
        "libvncserver/selbox.c||libvncserver/selbox.c": [
          "File: libvncserver/selbox.c -> libvncserver/selbox.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "245:    selData.okY = y2-border;",
          "247:    frameBufferBackup = (char*)malloc(bpp*(x2-x1)*(y2-y1));",
          "249:    selData.state = SELECTING;",
          "250:    selData.screen = rfbScreen;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "248:    if (!frameBufferBackup)",
          "249:        return(-1);",
          "",
          "---------------"
        ],
        "libvncserver/tight.c||libvncserver/tight.c": [
          "File: libvncserver/tight.c -> libvncserver/tight.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1864:     png_write_info(png_ptr, info_ptr);",
          "1865:     buf = malloc(w * 3);",
          "1866:     for (dy = 0; dy < h; dy++)",
          "1867:     {",
          "1868: #if 0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1866:     if (buf == NULL)",
          "1867:     {",
          "1868:         pngFree(png_ptr, png_palette);",
          "1869:         png_destroy_write_struct(&png_ptr, &info_ptr);",
          "1870:         return FALSE;",
          "1871:     }",
          "",
          "---------------"
        ],
        "libvncserver/websockets.c||libvncserver/websockets.c": [
          "File: libvncserver/websockets.c -> libvncserver/websockets.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "331:     free(buf);",
          "333:     wsctx = calloc(1, sizeof(ws_ctx_t));",
          "334:     wsctx->encode = webSocketsEncodeHybi;",
          "335:     wsctx->decode = webSocketsDecodeHybi;",
          "336:     wsctx->ctxInfo.readFunc = ws_read;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "334:     if (!wsctx) {",
          "335:         rfbErr(\"webSocketsHandshake: could not allocate memory for context\\n\");",
          "336:         return FALSE;",
          "337:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "05767eb3f9a90076b786bc439a8d7afa72baf45d",
      "candidate_info": {
        "commit_hash": "05767eb3f9a90076b786bc439a8d7afa72baf45d",
        "repo": "LibVNC/libvncserver",
        "commit_url": "https://github.com/LibVNC/libvncserver/commit/05767eb3f9a90076b786bc439a8d7afa72baf45d",
        "files": [
          "common/vncauth.c"
        ],
        "message": "common/vncauth: handle memory allocation failure",
        "before_after_code_files": [
          "common/vncauth.c||common/vncauth.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/LibVNC/libvncserver/pull/416"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "common/vncauth.c||common/vncauth.c": [
          "File: common/vncauth.c -> common/vncauth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "127:     unsigned char *passwd = (unsigned char *)malloc(9);",
          "128:     int out_len;",
          "131:  free(passwd);",
          "132:  return NULL;",
          "133:     }",
          "",
          "[Removed Lines]",
          "130:     if ((fp = fopen(fname,\"r\")) == NULL) {",
          "",
          "[Added Lines]",
          "130:     if (!passwd || (fp = fopen(fname,\"r\")) == NULL) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dcc16be17f4cddf752e6fb26511bb26a4ce220f0",
      "candidate_info": {
        "commit_hash": "dcc16be17f4cddf752e6fb26511bb26a4ce220f0",
        "repo": "LibVNC/libvncserver",
        "commit_url": "https://github.com/LibVNC/libvncserver/commit/dcc16be17f4cddf752e6fb26511bb26a4ce220f0",
        "files": [
          "libvncserver/rfbserver.c"
        ],
        "message": "libvncserver: rfbserver: init file size field",
        "before_after_code_files": [
          "libvncserver/rfbserver.c||libvncserver/rfbserver.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/LibVNC/libvncserver/pull/416"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libvncserver/rfbserver.c||libvncserver/rfbserver.c": [
          "File: libvncserver/rfbserver.c -> libvncserver/rfbserver.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1732:               length = strlen(buffer);",
          "1733:               if (DB) rfbLog(\"rfbProcessFileTransfer() buffer is now: \\\"%s\\\"\\n\", buffer);",
          "1734:             }",
          "1735:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1735:         } else {",
          "1736:             statbuf.st_size = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "38e98ee61d74f5f5ab4aa4c77146faad1962d6d0",
      "candidate_info": {
        "commit_hash": "38e98ee61d74f5f5ab4aa4c77146faad1962d6d0",
        "repo": "LibVNC/libvncserver",
        "commit_url": "https://github.com/LibVNC/libvncserver/commit/38e98ee61d74f5f5ab4aa4c77146faad1962d6d0",
        "files": [
          "libvncserver/rfbregion.c",
          "libvncserver/rfbserver.c"
        ],
        "message": "libvncserver: add missing NULL pointer checks",
        "before_after_code_files": [
          "libvncserver/rfbregion.c||libvncserver/rfbregion.c",
          "libvncserver/rfbserver.c||libvncserver/rfbserver.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/LibVNC/libvncserver/pull/416"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libvncserver/rfbregion.c||libvncserver/rfbregion.c": [
          "File: libvncserver/rfbregion.c -> libvncserver/rfbregion.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "52: static void",
          "53: sraSpanInsertAfter(sraSpan *newspan, sraSpan *after) {",
          "58: }",
          "60: static void",
          "61: sraSpanInsertBefore(sraSpan *newspan, sraSpan *before) {",
          "66: }",
          "68: static void",
          "69: sraSpanRemove(sraSpan *span) {",
          "72: }",
          "74: static void",
          "",
          "[Removed Lines]",
          "54:   newspan->_next = after->_next;",
          "55:   newspan->_prev = after;",
          "56:   after->_next->_prev = newspan;",
          "57:   after->_next = newspan;",
          "62:   newspan->_next = before;",
          "63:   newspan->_prev = before->_prev;",
          "64:   before->_prev->_next = newspan;",
          "65:   before->_prev = newspan;",
          "70:   span->_prev->_next = span->_next;",
          "71:   span->_next->_prev = span->_prev;",
          "",
          "[Added Lines]",
          "54:   if(newspan && after) {",
          "55:     newspan->_next = after->_next;",
          "56:     newspan->_prev = after;",
          "57:     after->_next->_prev = newspan;",
          "58:     after->_next = newspan;",
          "59:   }",
          "64:   if(newspan && before) {",
          "65:     newspan->_next = before;",
          "66:     newspan->_prev = before->_prev;",
          "67:     before->_prev->_next = newspan;",
          "68:     before->_prev = newspan;",
          "69:   }",
          "74:   if(span) {",
          "75:     span->_prev->_next = span->_next;",
          "76:     span->_next->_prev = span->_prev;",
          "77:   }",
          "",
          "---------------"
        ],
        "libvncserver/rfbserver.c||libvncserver/rfbserver.c": [
          "File: libvncserver/rfbserver.c -> libvncserver/rfbserver.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "207: rfbClientPtr",
          "208: rfbClientIteratorNext(rfbClientIteratorPtr i)",
          "209: {",
          "210:   if(i->next == 0) {",
          "211:     LOCK(rfbClientListMutex);",
          "212:     i->next = i->screen->clientHead;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "210:   if (!i)",
          "211:     return NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "231: void",
          "232: rfbReleaseClientIterator(rfbClientIteratorPtr iterator)",
          "233: {",
          "235:   free(iterator);",
          "236: }",
          "",
          "[Removed Lines]",
          "234:   if(iterator->next) rfbDecrClientRef(iterator->next);",
          "",
          "[Added Lines]",
          "236:   if(iterator && iterator->next) rfbDecrClientRef(iterator->next);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1330f96a6488bb435ed16698ef81c63e7d0c79d4",
      "candidate_info": {
        "commit_hash": "1330f96a6488bb435ed16698ef81c63e7d0c79d4",
        "repo": "LibVNC/libvncserver",
        "commit_url": "https://github.com/LibVNC/libvncserver/commit/1330f96a6488bb435ed16698ef81c63e7d0c79d4",
        "files": [
          "examples/colourmaptest.c",
          "examples/cursors.c",
          "examples/example.c",
          "examples/fontsel.c",
          "examples/pnmshow.c",
          "examples/repeater.c",
          "examples/rotatetemplate.c",
          "examples/simple15.c",
          "examples/vncev.c"
        ],
        "message": "examples: check for memory allocation failures",
        "before_after_code_files": [
          "examples/colourmaptest.c||examples/colourmaptest.c",
          "examples/cursors.c||examples/cursors.c",
          "examples/example.c||examples/example.c",
          "examples/fontsel.c||examples/fontsel.c",
          "examples/pnmshow.c||examples/pnmshow.c",
          "examples/repeater.c||examples/repeater.c",
          "examples/rotatetemplate.c||examples/rotatetemplate.c",
          "examples/simple15.c||examples/simple15.c",
          "examples/vncev.c||examples/vncev.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/LibVNC/libvncserver/pull/416"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/colourmaptest.c||examples/colourmaptest.c": [
          "File: examples/colourmaptest.c -> examples/colourmaptest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:   server->colourMap.data.bytes=bytes;",
          "25:   server->frameBuffer=(char*)malloc(256*256);",
          "26:   for(i=0;i<256*256;i++)",
          "27:      server->frameBuffer[i]=(i/256);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26:   if(!server->frameBuffer)",
          "27:       return 1;",
          "",
          "---------------"
        ],
        "examples/cursors.c||examples/cursors.c": [
          "File: examples/cursors.c -> examples/cursors.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:  c=rfbMakeXCursor(w,h,bitmap,bitmap);",
          "180:  c->xhot = 16; c->yhot = 24;",
          "183:  for(j=0;j<h;j++) {",
          "184:   for(i=0;i<w;i++) {",
          "185:    c->richSource[j*w*bpp+i*bpp+0]=i*0xff/w;",
          "",
          "[Removed Lines]",
          "182:  c->richSource = (char*)malloc(w*h*bpp);",
          "",
          "[Added Lines]",
          "182:  c->richSource = (unsigned char*)malloc(w*h*bpp);",
          "183:  if (!c->richSource) return;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "218:  c=rfbMakeXCursor(w,h,bitmap,bitmap);",
          "219:  c->xhot = 5; c->yhot = 7;",
          "222:  for(j=0;j<h;j++) {",
          "223:   for(i=0;i<w;i++) {",
          "224:    c->richSource[j*w*bpp+i*bpp+0]=0xff;",
          "",
          "[Removed Lines]",
          "221:  c->richSource = (char*)malloc(w*h*bpp);",
          "",
          "[Added Lines]",
          "223:  c->richSource = (unsigned char*)malloc(w*h*bpp);",
          "224:  if(!c->richSource) return;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "250:   return;",
          "252:  c->alphaSource = (unsigned char*)malloc(c->width*c->height);",
          "254:  for(j=0;j<c->height;j++)",
          "255:   for(i=0;i<c->width;i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "256:  if (!c->alphaSource) return;",
          "",
          "---------------"
        ],
        "examples/example.c||examples/example.c": [
          "File: examples/example.c -> examples/example.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "265:   c->xhot = 16; c->yhot = 24;",
          "267:   c->richSource = (unsigned char*)malloc(w*h*bpp);",
          "268:   c->cleanupRichSource = TRUE;",
          "269:   for(j=0;j<h;j++) {",
          "270:     for(i=0;i<w;i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "268:   if(!c->richSource)",
          "269:       return;",
          "",
          "---------------"
        ],
        "examples/fontsel.c||examples/fontsel.c": [
          "File: examples/fontsel.c -> examples/fontsel.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:     return 0;",
          "54:   s->frameBuffer=(char*)malloc(640*480*3);",
          "55:   rfbInitServer(s);",
          "57:   for(j=0;j<480;j++)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55:   if(!s->frameBuffer)",
          "56:       return 1;",
          "",
          "---------------"
        ],
        "examples/pnmshow.c||examples/pnmshow.c": [
          "File: examples/pnmshow.c -> examples/pnmshow.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:   rfbScreen->frameBuffer = (char*)malloc(paddedWidth*bytesPerPixel*height);",
          "82:   fread(rfbScreen->frameBuffer,width*bitsPerPixelInFile/8,height,in);",
          "83:   fclose(in);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:   if(!rfbScreen->frameBuffer)",
          "83:       exit(1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "87:    rfbScreen->colourMap.count=256;",
          "88:    rfbScreen->colourMap.is16=FALSE;",
          "89:    rfbScreen->colourMap.data.bytes=malloc(256*3);",
          "90:    for(i=0;i<256;i++)",
          "91:     memset(rfbScreen->colourMap.data.bytes+3*i,i,3);",
          "92:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92:    if(!rfbScreen->colourMap.data.bytes)",
          "93:     exit(1);",
          "",
          "---------------"
        ],
        "examples/repeater.c||examples/repeater.c": [
          "File: examples/repeater.c -> examples/repeater.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:   if(!server)",
          "38:     return 0;",
          "39:   server->frameBuffer=(char*)malloc(400*300*2);",
          "40:   f=(uint16_t*)server->frameBuffer;",
          "41:   for(j=0;j<300;j++)",
          "42:     for(i=0;i<400;i++)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:   if(!server->frameBuffer)",
          "41:       return 1;",
          "",
          "---------------"
        ],
        "examples/rotatetemplate.c||examples/rotatetemplate.c": [
          "File: examples/rotatetemplate.c -> examples/rotatetemplate.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:  OUT_T* buffer = (OUT_T*)screen->frameBuffer;",
          "7:  int i, j, w = screen->width, h = screen->height;",
          "8:  OUT_T* newBuffer = (OUT_T*)malloc(w * h * sizeof(OUT_T));",
          "10:  for (j = 0; j < h; j++)",
          "11:   for (i = 0; i < w; i++)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9:  if (!newBuffer) return;",
          "",
          "---------------"
        ],
        "examples/simple15.c||examples/simple15.c": [
          "File: examples/simple15.c -> examples/simple15.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:   if(!server)",
          "13:     return 0;",
          "14:   server->frameBuffer=(char*)malloc(400*300*2);",
          "15:   f=(uint16_t*)server->frameBuffer;",
          "16:   for(j=0;j<300;j++)",
          "17:     for(i=0;i<400;i++)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15:   if(!server->frameBuffer)",
          "16:     return 1;",
          "",
          "---------------"
        ],
        "examples/vncev.c||examples/vncev.c": [
          "File: examples/vncev.c -> examples/vncev.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "56:     j=j*16+k;",
          "57:   if(keys[j&0x3ff]) {",
          "58:      char* x=(char*)malloc(1+strlen(keys[j&0x3ff])+1+strlen(buffer+strlen(\"#define \")));",
          "59:      strcpy(x,keys[j&0x3ff]);",
          "60:      strcat(x,\",\");",
          "61:      strcat(x,buffer+strlen(\"#define \"));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59:      if(!x) {",
          "60:        memset(keys,0,0x400*sizeof(char*));",
          "61:        fclose(keysyms);",
          "62:        return;",
          "63:      }",
          "",
          "---------------"
        ]
      }
    }
  ]
}