{
  "cve_id": "CVE-2015-2686",
  "cve_desc": "net/socket.c in the Linux kernel 3.19 before 3.19.3 does not validate certain range data for (1) sendto and (2) recvfrom system calls, which allows local users to gain privileges by leveraging a subsystem that uses the copy_from_iter function in the iov_iter interface, as demonstrated by the Bluetooth subsystem.",
  "repo": "torvalds/linux",
  "patch_hash": "4de930efc23b92ddf88ce91c405ee645fe6e27ea",
  "patch_info": {
    "commit_hash": "4de930efc23b92ddf88ce91c405ee645fe6e27ea",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/4de930efc23b92ddf88ce91c405ee645fe6e27ea",
    "files": [
      "net/socket.c"
    ],
    "message": "net: validate the range we feed to iov_iter_init() in sys_sendto/sys_recvfrom\n\nCc: stable@vger.kernel.org # v3.19\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "before_after_code_files": [
      "net/socket.c||net/socket.c"
    ]
  },
  "patch_diff": {
    "net/socket.c||net/socket.c": [
      "File: net/socket.c -> net/socket.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1703:  if (len > INT_MAX)",
      "1704:   len = INT_MAX;",
      "1705:  sock = sockfd_lookup_light(fd, &err, &fput_needed);",
      "1706:  if (!sock)",
      "1707:   goto out;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1705:  if (unlikely(!access_ok(VERIFY_READ, buff, len)))",
      "1706:   return -EFAULT;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1761:  if (size > INT_MAX)",
      "1762:   size = INT_MAX;",
      "1763:  sock = sockfd_lookup_light(fd, &err, &fput_needed);",
      "1764:  if (!sock)",
      "1765:   goto out;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1765:  if (unlikely(!access_ok(VERIFY_WRITE, ubuf, size)))",
      "1766:   return -EFAULT;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "602bd0e90e14c0b50246b361290dbbbe551ada98",
      "candidate_info": {
        "commit_hash": "602bd0e90e14c0b50246b361290dbbbe551ada98",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/602bd0e90e14c0b50246b361290dbbbe551ada98",
        "files": [
          "net/socket.c"
        ],
        "message": "net: switch sendto() and recvfrom() to import_single_range()\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
        "before_after_code_files": [
          "net/socket.c||net/socket.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "net/socket.c||net/socket.c"
          ],
          "candidate": [
            "net/socket.c||net/socket.c"
          ]
        }
      },
      "candidate_diff": {
        "net/socket.c||net/socket.c": [
          "File: net/socket.c -> net/socket.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1650:  struct iovec iov;",
          "1651:  int fput_needed;",
          "1657:  sock = sockfd_lookup_light(fd, &err, &fput_needed);",
          "1658:  if (!sock)",
          "1659:   goto out;",
          "1663:  msg.msg_name = NULL;",
          "1665:  msg.msg_control = NULL;",
          "1666:  msg.msg_controllen = 0;",
          "1667:  msg.msg_namelen = 0;",
          "",
          "[Removed Lines]",
          "1653:  if (len > INT_MAX)",
          "1654:   len = INT_MAX;",
          "1655:  if (unlikely(!access_ok(VERIFY_READ, buff, len)))",
          "1656:   return -EFAULT;",
          "1661:  iov.iov_base = buff;",
          "1662:  iov.iov_len = len;",
          "1664:  iov_iter_init(&msg.msg_iter, WRITE, &iov, 1, len);",
          "",
          "[Added Lines]",
          "1653:  err = import_single_range(WRITE, buff, len, &iov, &msg.msg_iter);",
          "1654:  if (unlikely(err))",
          "1655:   return err;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1675:  if (sock->file->f_flags & O_NONBLOCK)",
          "1676:   flags |= MSG_DONTWAIT;",
          "1677:  msg.msg_flags = flags;",
          "1680: out_put:",
          "1681:  fput_light(sock->file, fput_needed);",
          "",
          "[Removed Lines]",
          "1678:  err = sock_sendmsg(sock, &msg, len);",
          "",
          "[Added Lines]",
          "1674:  err = sock_sendmsg(sock, &msg, iov_iter_count(&msg.msg_iter));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1710:  int err, err2;",
          "1711:  int fput_needed;",
          "1717:  sock = sockfd_lookup_light(fd, &err, &fput_needed);",
          "1718:  if (!sock)",
          "1719:   goto out;",
          "1721:  msg.msg_control = NULL;",
          "1722:  msg.msg_controllen = 0;",
          "1727:  msg.msg_name = addr ? (struct sockaddr *)&address : NULL;",
          "1729:  msg.msg_namelen = 0;",
          "1730:  if (sock->file->f_flags & O_NONBLOCK)",
          "1731:   flags |= MSG_DONTWAIT;",
          "1734:  if (err >= 0 && addr != NULL) {",
          "1735:   err2 = move_addr_to_user(&address,",
          "",
          "[Removed Lines]",
          "1713:  if (size > INT_MAX)",
          "1714:   size = INT_MAX;",
          "1715:  if (unlikely(!access_ok(VERIFY_WRITE, ubuf, size)))",
          "1716:   return -EFAULT;",
          "1723:  iov.iov_len = size;",
          "1724:  iov.iov_base = ubuf;",
          "1725:  iov_iter_init(&msg.msg_iter, READ, &iov, 1, size);",
          "1732:  err = sock_recvmsg(sock, &msg, size, flags);",
          "",
          "[Added Lines]",
          "1709:  err = import_single_range(READ, ubuf, size, &iov, &msg.msg_iter);",
          "1710:  if (unlikely(err))",
          "1711:   return err;",
          "1724:  err = sock_recvmsg(sock, &msg, iov_iter_count(&msg.msg_iter), flags);",
          "",
          "---------------"
        ]
      }
    }
  ]
}