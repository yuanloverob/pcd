{
  "cve_id": "CVE-2020-1914",
  "cve_desc": "A logic vulnerability when handling the SaveGeneratorLong instruction in Facebook Hermes prior to commit b2021df620824627f5a8c96615edbd1eb7fdddfc allows attackers to potentially read out of bounds or theoretically execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.",
  "repo": "facebook/hermes",
  "patch_hash": "b2021df620824627f5a8c96615edbd1eb7fdddfc",
  "patch_info": {
    "commit_hash": "b2021df620824627f5a8c96615edbd1eb7fdddfc",
    "repo": "facebook/hermes",
    "commit_url": "https://github.com/facebook/hermes/commit/b2021df620824627f5a8c96615edbd1eb7fdddfc",
    "files": [
      "include/hermes/VM/Interpreter.h",
      "lib/VM/Interpreter-slowpaths.cpp",
      "lib/VM/Interpreter.cpp",
      "test/hermes/es6/generator.js"
    ],
    "message": "Fix CVE-2020-1914 by using NEXTINST for SaveGeneratorLong\n\nSummary:\nIf `SaveGeneratorLong` was emitted, it would accidentally jump to the\nwrong next instruction, based on how long SaveGenerator was.\n\nMake a callout function to handle the common case, and handle the dispatch\nwithin each case of the interpreter loop.\n\nFixes CVE-2020-1914\n\nReviewed By: neildhar\n\nDifferential Revision: D24024242\n\nfbshipit-source-id: 3bcb88daa740f0d50e91771a49eb212551ce8bd8",
    "before_after_code_files": [
      "include/hermes/VM/Interpreter.h||include/hermes/VM/Interpreter.h",
      "lib/VM/Interpreter-slowpaths.cpp||lib/VM/Interpreter-slowpaths.cpp",
      "lib/VM/Interpreter.cpp||lib/VM/Interpreter.cpp",
      "test/hermes/es6/generator.js||test/hermes/es6/generator.js"
    ]
  },
  "patch_diff": {
    "include/hermes/VM/Interpreter.h||include/hermes/VM/Interpreter.h": [
      "File: include/hermes/VM/Interpreter.h -> include/hermes/VM/Interpreter.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "37:       Handle<Environment> envHandle,",
      "38:       NativeArgs args);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "43:   static void saveGenerator(",
      "44:       Runtime *runtime,",
      "45:       PinnedHermesValue *frameRegs,",
      "46:       const Inst *resumeIP);",
      "",
      "---------------"
    ],
    "lib/VM/Interpreter-slowpaths.cpp||lib/VM/Interpreter-slowpaths.cpp": [
      "File: lib/VM/Interpreter-slowpaths.cpp -> lib/VM/Interpreter-slowpaths.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: #include \"JSLib/JSLibInternal.h\"",
      "10: #include \"hermes/VM/Casting.h\"",
      "11: #include \"hermes/VM/Interpreter.h\"",
      "12: #include \"hermes/VM/StringPrimitive.h\"",
      "14: #include \"Interpreter-internal.h\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "12: #include \"hermes/VM/StackFrame-inline.h\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "18: namespace hermes {",
      "19: namespace vm {",
      "21: ExecutionStatus Interpreter::caseDirectEval(",
      "22:     Runtime *runtime,",
      "23:     PinnedHermesValue *frameRegs,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: void Interpreter::saveGenerator(",
      "23:     Runtime *runtime,",
      "24:     PinnedHermesValue *frameRegs,",
      "25:     const Inst *resumeIP) {",
      "26:   auto *innerFn = vmcast<GeneratorInnerFunction>(FRAME.getCalleeClosure());",
      "27:   innerFn->saveStack(runtime);",
      "28:   innerFn->setNextIP(resumeIP);",
      "29:   innerFn->setState(GeneratorInnerFunction::State::SuspendedYield);",
      "30: }",
      "",
      "---------------"
    ],
    "lib/VM/Interpreter.cpp||lib/VM/Interpreter.cpp": [
      "File: lib/VM/Interpreter.cpp -> lib/VM/Interpreter.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "1002: #endif // NDEBUG",
      "1004:   LLVM_DEBUG(dbgs() << \"interpretFunction() called\\n\");",
      "1006:   ScopedNativeDepthTracker depthTracker{runtime};",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1008: #define DONT_CAPTURE_IP(expr)      \\",
      "1009:   do {                             \\",
      "1010:     NoAllocScope noAlloc(runtime); \\",
      "1011:     (void)expr;                    \\",
      "1012:   } while (false)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1798:       }",
      "1800:       CASE(SaveGenerator) {",
      "1803:       }",
      "1804:       CASE(SaveGeneratorLong) {",
      "1807:       }",
      "1820:       CASE(StartGenerator) {",
      "1821:         auto *innerFn = vmcast<GeneratorInnerFunction>(",
      "1822:             runtime->getCurrentFrame().getCalleeClosure());",
      "",
      "[Removed Lines]",
      "1801:         nextIP = IPADD(ip->iSaveGenerator.op1);",
      "1802:         goto doSaveGen;",
      "1805:         nextIP = IPADD(ip->iSaveGeneratorLong.op1);",
      "1806:         goto doSaveGen;",
      "1809:     doSaveGen : {",
      "1810:       auto *innerFn = vmcast<GeneratorInnerFunction>(",
      "1811:           runtime->getCurrentFrame().getCalleeClosure());",
      "1813:       innerFn->saveStack(runtime);",
      "1814:       innerFn->setNextIP(nextIP);",
      "1815:       innerFn->setState(GeneratorInnerFunction::State::SuspendedYield);",
      "1816:       ip = NEXTINST(SaveGenerator);",
      "1817:       DISPATCH;",
      "1818:     }",
      "",
      "[Added Lines]",
      "1811:         DONT_CAPTURE_IP(",
      "1812:             saveGenerator(runtime, frameRegs, IPADD(ip->iSaveGenerator.op1)));",
      "1813:         ip = NEXTINST(SaveGenerator);",
      "1814:         DISPATCH;",
      "1817:         DONT_CAPTURE_IP(saveGenerator(",
      "1818:             runtime, frameRegs, IPADD(ip->iSaveGeneratorLong.op1)));",
      "1819:         ip = NEXTINST(SaveGeneratorLong);",
      "1820:         DISPATCH;",
      "",
      "---------------"
    ],
    "test/hermes/es6/generator.js||test/hermes/es6/generator.js": [
      "File: test/hermes/es6/generator.js -> test/hermes/es6/generator.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "354: iterator.return(123);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "359: function* saveGeneratorLong() {",
      "360:     yield* [1];",
      "362:     [].push(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,",
      "363:     0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,",
      "364:     0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,",
      "365:     0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,",
      "366:     0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,",
      "367:     0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,",
      "368:     0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);",
      "369: }",
      "370: print(saveGeneratorLong().next().value);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fab359f00e0266c47892fc258f5c33146445bfb4",
      "candidate_info": {
        "commit_hash": "fab359f00e0266c47892fc258f5c33146445bfb4",
        "repo": "facebook/hermes",
        "commit_url": "https://github.com/facebook/hermes/commit/fab359f00e0266c47892fc258f5c33146445bfb4",
        "files": [
          "include/hermes/VM/StackFrame-inline.h",
          "include/hermes/VM/StackFrame.h",
          "lib/VM/Interpreter-slowpaths.cpp",
          "lib/VM/Interpreter.cpp",
          "lib/VM/JSLib/HermesBuiltin.cpp",
          "lib/VM/JSLib/Intl.cpp",
          "lib/VM/JSLib/Proxy.cpp",
          "lib/VM/Profiler/SamplingProfilerPosix.cpp",
          "lib/VM/Runtime.cpp"
        ],
        "message": "Remove getCalleeClosure\n\nSummary:\n`getCalleeClosure` seems prone to being used incorrectly. Most places\nthat call `getCalleeClosure` immediately `vmcast` the result to some\nsubclass of `Callable`, so we should just replace those calls with\n`getCalleeClosureUnsafe`, which is clear that the operation is unsafe\nand saves us a branch. Some other places immediately feed the result\ninto `dyn_vmcast_or_null`, which also adds an extra branch.\n\nGiven that, this diff removes `getCalleeClosure` entirely, and makes\nthe behaviour at the call sites more explicit.\n\nReviewed By: tmikov\n\nDifferential Revision: D30918025\n\nfbshipit-source-id: 64dbe7f6c942482c69616d3a2cc013e4cf629488",
        "before_after_code_files": [
          "include/hermes/VM/StackFrame-inline.h||include/hermes/VM/StackFrame-inline.h",
          "include/hermes/VM/StackFrame.h||include/hermes/VM/StackFrame.h",
          "lib/VM/Interpreter-slowpaths.cpp||lib/VM/Interpreter-slowpaths.cpp",
          "lib/VM/Interpreter.cpp||lib/VM/Interpreter.cpp",
          "lib/VM/JSLib/HermesBuiltin.cpp||lib/VM/JSLib/HermesBuiltin.cpp",
          "lib/VM/JSLib/Intl.cpp||lib/VM/JSLib/Intl.cpp",
          "lib/VM/JSLib/Proxy.cpp||lib/VM/JSLib/Proxy.cpp",
          "lib/VM/Profiler/SamplingProfilerPosix.cpp||lib/VM/Profiler/SamplingProfilerPosix.cpp",
          "lib/VM/Runtime.cpp||lib/VM/Runtime.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/VM/Interpreter-slowpaths.cpp||lib/VM/Interpreter-slowpaths.cpp",
            "lib/VM/Interpreter.cpp||lib/VM/Interpreter.cpp"
          ],
          "candidate": [
            "lib/VM/Interpreter-slowpaths.cpp||lib/VM/Interpreter-slowpaths.cpp",
            "lib/VM/Interpreter.cpp||lib/VM/Interpreter.cpp"
          ]
        }
      },
      "candidate_diff": {
        "include/hermes/VM/StackFrame-inline.h||include/hermes/VM/StackFrame-inline.h": [
          "File: include/hermes/VM/StackFrame-inline.h -> include/hermes/VM/StackFrame-inline.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:   }",
          "39: }",
          "46: template <bool isConst>",
          "47: inline Handle<Environment> StackFramePtrT<isConst>::getDebugEnvironmentHandle()",
          "48:     const {",
          "",
          "[Removed Lines]",
          "41: template <bool isConst>",
          "42: inline Callable *StackFramePtrT<isConst>::getCalleeClosure() const {",
          "43:   return dyn_vmcast<Callable>(getCalleeClosureOrCBRef());",
          "44: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "include/hermes/VM/StackFrame.h||include/hermes/VM/StackFrame.h": [
          "File: include/hermes/VM/StackFrame.h -> include/hermes/VM/StackFrame.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "180:   inline Handle<Callable> getCalleeClosureHandleUnsafe() const;",
          "",
          "[Removed Lines]",
          "184:   Callable *getCalleeClosure() const;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/VM/Interpreter-slowpaths.cpp||lib/VM/Interpreter-slowpaths.cpp": [
          "File: lib/VM/Interpreter-slowpaths.cpp -> lib/VM/Interpreter-slowpaths.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:     Runtime *runtime,",
          "26:     PinnedHermesValue *frameRegs,",
          "27:     const Inst *resumeIP) {",
          "29:   innerFn->saveStack(runtime);",
          "30:   innerFn->setNextIP(resumeIP);",
          "31:   innerFn->setState(GeneratorInnerFunction::State::SuspendedYield);",
          "",
          "[Removed Lines]",
          "28:   auto *innerFn = vmcast<GeneratorInnerFunction>(FRAME.getCalleeClosure());",
          "",
          "[Added Lines]",
          "28:   auto *innerFn =",
          "29:       vmcast<GeneratorInnerFunction>(FRAME.getCalleeClosureUnsafe());",
          "",
          "---------------"
        ],
        "lib/VM/Interpreter.cpp||lib/VM/Interpreter.cpp": [
          "File: lib/VM/Interpreter.cpp -> lib/VM/Interpreter.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "156:   }",
          "158:   auto generatorFunction = runtime->makeHandle(vmcast<JSGeneratorFunction>(",
          "161:   auto prototypeProp = JSObject::getNamed_RJS(",
          "162:       generatorFunction,",
          "",
          "[Removed Lines]",
          "159:       runtime->getCurrentFrame().getCalleeClosure()));",
          "",
          "[Added Lines]",
          "159:       runtime->getCurrentFrame().getCalleeClosureUnsafe()));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1731:       CASE(CompleteGenerator) {",
          "1732:         auto *innerFn = vmcast<GeneratorInnerFunction>(",
          "1734:         innerFn->setState(GeneratorInnerFunction::State::Completed);",
          "1735:         ip = NEXTINST(CompleteGenerator);",
          "1736:         DISPATCH;",
          "",
          "[Removed Lines]",
          "1733:             runtime->getCurrentFrame().getCalleeClosure());",
          "",
          "[Added Lines]",
          "1733:             runtime->getCurrentFrame().getCalleeClosureUnsafe());",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1752:       CASE(StartGenerator) {",
          "1753:         auto *innerFn = vmcast<GeneratorInnerFunction>(",
          "1755:         if (innerFn->getState() ==",
          "1756:             GeneratorInnerFunction::State::SuspendedStart) {",
          "1757:           nextIP = NEXTINST(StartGenerator);",
          "",
          "[Removed Lines]",
          "1754:             runtime->getCurrentFrame().getCalleeClosure());",
          "",
          "[Added Lines]",
          "1754:             runtime->getCurrentFrame().getCalleeClosureUnsafe());",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1767:       CASE(ResumeGenerator) {",
          "1768:         auto *innerFn = vmcast<GeneratorInnerFunction>(",
          "1770:         O1REG(ResumeGenerator) = innerFn->getResult().unboxToHV(runtime);",
          "1771:         O2REG(ResumeGenerator) = HermesValue::encodeBoolValue(",
          "1772:             innerFn->getAction() == GeneratorInnerFunction::Action::Return);",
          "",
          "[Removed Lines]",
          "1769:             runtime->getCurrentFrame().getCalleeClosure());",
          "",
          "[Added Lines]",
          "1769:             runtime->getCurrentFrame().getCalleeClosureUnsafe());",
          "",
          "---------------"
        ],
        "lib/VM/JSLib/HermesBuiltin.cpp||lib/VM/JSLib/HermesBuiltin.cpp": [
          "File: lib/VM/JSLib/HermesBuiltin.cpp -> lib/VM/JSLib/HermesBuiltin.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "233: CallResult<HermesValue>",
          "234: hermesBuiltinGeneratorSetDelegated(void *, Runtime *runtime, NativeArgs args) {",
          "237:   if (!gen) {",
          "238:     return runtime->raiseTypeError(",
          "239:         \"generatorSetDelegated can only be called as part of yield*\");",
          "",
          "[Removed Lines]",
          "235:   auto *gen = dyn_vmcast_or_null<GeneratorInnerFunction>(",
          "236:       runtime->getCurrentFrame().getPreviousFrame().getCalleeClosure());",
          "",
          "[Added Lines]",
          "235:   auto *gen = dyn_vmcast<GeneratorInnerFunction>(",
          "236:       runtime->getCurrentFrame().getPreviousFrame().getCalleeClosureOrCBRef());",
          "",
          "---------------"
        ],
        "lib/VM/JSLib/Intl.cpp||lib/VM/JSLib/Intl.cpp": [
          "File: lib/VM/JSLib/Intl.cpp -> lib/VM/JSLib/Intl.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "680: CallResult<HermesValue>",
          "681: intlCollatorCompare(void *, Runtime *runtime, NativeArgs args) {",
          "684:   PseudoHandle<DecoratedObject> collatorHandle =",
          "",
          "[Removed Lines]",
          "682:   PseudoHandle<Callable> cc =",
          "683:       createPseudoHandle(runtime->getCurrentFrame()->getCalleeClosure());",
          "685:       getCollator(PseudoHandle<NativeFunction>::vmcast(std::move(cc)), runtime);",
          "",
          "[Added Lines]",
          "682:   auto *nf = vmcast<NativeFunction>(",
          "683:       runtime->getCurrentFrame()->getCalleeClosureUnsafe());",
          "685:       getCollator(createPseudoHandle(nf), runtime);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "968: CallResult<HermesValue>",
          "969: intlDateTimeFormatFormat(void *, Runtime *runtime, NativeArgs args) {",
          "",
          "[Removed Lines]",
          "970:   PseudoHandle<Callable> cc =",
          "971:       createPseudoHandle(runtime->getCurrentFrame()->getCalleeClosure());",
          "972:   PseudoHandle<DecoratedObject> dateTimeFormatHandle = getDateTimeFormat(",
          "973:       PseudoHandle<NativeFunction>::vmcast(std::move(cc)), runtime);",
          "",
          "[Added Lines]",
          "970:   auto *nf = vmcast<NativeFunction>(",
          "971:       runtime->getCurrentFrame()->getCalleeClosureUnsafe());",
          "972:   PseudoHandle<DecoratedObject> dateTimeFormatHandle =",
          "973:       getDateTimeFormat(createPseudoHandle(nf), runtime);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1248: CallResult<HermesValue>",
          "1249: intlNumberFormatFormat(void *, Runtime *runtime, NativeArgs args) {",
          "",
          "[Removed Lines]",
          "1250:   PseudoHandle<Callable> cc =",
          "1251:       createPseudoHandle(runtime->getCurrentFrame()->getCalleeClosure());",
          "1252:   PseudoHandle<DecoratedObject> numberFormatHandle = getNumberFormat(",
          "1253:       PseudoHandle<NativeFunction>::vmcast(std::move(cc)), runtime);",
          "",
          "[Added Lines]",
          "1250:   auto *nf = vmcast<NativeFunction>(",
          "1251:       runtime->getCurrentFrame()->getCalleeClosureUnsafe());",
          "1252:   PseudoHandle<DecoratedObject> numberFormatHandle =",
          "1253:       getNumberFormat(createPseudoHandle(nf), runtime);",
          "",
          "---------------"
        ],
        "lib/VM/JSLib/Proxy.cpp||lib/VM/JSLib/Proxy.cpp": [
          "File: lib/VM/JSLib/Proxy.cpp -> lib/VM/JSLib/Proxy.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "103: CallResult<HermesValue>",
          "104: proxyRevocationSteps(void *, Runtime *runtime, NativeArgs args) {",
          "108:   HermesValue proxyVal =",
          "109:       getRevocableProxySlot(revoker, runtime).unboxToHV(runtime);",
          "",
          "[Removed Lines]",
          "106:   auto cc = runtime->getCurrentFrame()->getCalleeClosure();",
          "107:   auto revoker = vmcast<NativeFunction>(cc);",
          "",
          "[Added Lines]",
          "106:   auto revoker = vmcast<NativeFunction>(",
          "107:       runtime->getCurrentFrame()->getCalleeClosureUnsafe());",
          "",
          "---------------"
        ],
        "lib/VM/Profiler/SamplingProfilerPosix.cpp||lib/VM/Profiler/SamplingProfilerPosix.cpp": [
          "File: lib/VM/Profiler/SamplingProfilerPosix.cpp -> lib/VM/Profiler/SamplingProfilerPosix.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "255:         registerDomain(module->getDomainForSamplingProfiler());",
          "256:     } else if (",
          "257:         auto *nativeFunction =",
          "259:       frameStorage.kind = vmisa<FinalizableNativeFunction>(nativeFunction)",
          "260:           ? StackFrame::FrameKind::FinalizableNativeFunction",
          "261:           : StackFrame::FrameKind::NativeFunction;",
          "",
          "[Removed Lines]",
          "258:             dyn_vmcast_or_null<NativeFunction>(frame.getCalleeClosure())) {",
          "",
          "[Added Lines]",
          "258:             dyn_vmcast<NativeFunction>(frame.getCalleeClosureUnsafe())) {",
          "",
          "---------------"
        ],
        "lib/VM/Runtime.cpp||lib/VM/Runtime.cpp": [
          "File: lib/VM/Runtime.cpp -> lib/VM/Runtime.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1733:   unsigned i = 0;",
          "1734:   for (StackFramePtr sf : getStackFrames()) {",
          "1735:     OS << i++ << \" \";",
          "1737:       OS << cellKindStr(closure->getKind()) << \" \";",
          "1738:     }",
          "1739:     if (auto *cb = sf.getCalleeCodeBlock()) {",
          "",
          "[Removed Lines]",
          "1736:     if (auto *closure = sf.getCalleeClosure()) {",
          "",
          "[Added Lines]",
          "1736:     if (auto *closure = dyn_vmcast<Callable>(sf.getCalleeClosureOrCBRef())) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "379760bbc5a27802917ac9e7847da356df9c9660",
      "candidate_info": {
        "commit_hash": "379760bbc5a27802917ac9e7847da356df9c9660",
        "repo": "facebook/hermes",
        "commit_url": "https://github.com/facebook/hermes/commit/379760bbc5a27802917ac9e7847da356df9c9660",
        "files": [
          "include/hermes/VM/Interpreter.h",
          "lib/VM/Interpreter-slowpaths.cpp",
          "lib/VM/Interpreter.cpp",
          "test/hermes/es6/generator.js"
        ],
        "message": "Fix CVE-2020-1914 by using NEXTINST for SaveGeneratorLong\n\nSummary:\nIf `SaveGeneratorLong` was emitted, it would accidentally jump to the\nwrong next instruction, based on how long SaveGenerator was.\n\nMake a callout function to handle the common case, and handle the dispatch\nwithin each case of the interpreter loop.\n\nFixes CVE-2020-1914\n\nReviewed By: neildhar\n\nDifferential Revision: D24024242\n\nfbshipit-source-id: 3bcb88daa740f0d50e91771a49eb212551ce8bd8",
        "before_after_code_files": [
          "include/hermes/VM/Interpreter.h||include/hermes/VM/Interpreter.h",
          "lib/VM/Interpreter-slowpaths.cpp||lib/VM/Interpreter-slowpaths.cpp",
          "lib/VM/Interpreter.cpp||lib/VM/Interpreter.cpp",
          "test/hermes/es6/generator.js||test/hermes/es6/generator.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "include/hermes/VM/Interpreter.h||include/hermes/VM/Interpreter.h",
            "lib/VM/Interpreter-slowpaths.cpp||lib/VM/Interpreter-slowpaths.cpp",
            "lib/VM/Interpreter.cpp||lib/VM/Interpreter.cpp",
            "test/hermes/es6/generator.js||test/hermes/es6/generator.js"
          ],
          "candidate": [
            "include/hermes/VM/Interpreter.h||include/hermes/VM/Interpreter.h",
            "lib/VM/Interpreter-slowpaths.cpp||lib/VM/Interpreter-slowpaths.cpp",
            "lib/VM/Interpreter.cpp||lib/VM/Interpreter.cpp",
            "test/hermes/es6/generator.js||test/hermes/es6/generator.js"
          ]
        }
      },
      "candidate_diff": {
        "include/hermes/VM/Interpreter.h||include/hermes/VM/Interpreter.h": [
          "File: include/hermes/VM/Interpreter.h -> include/hermes/VM/Interpreter.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:       Handle<Environment> envHandle,",
          "38:       NativeArgs args);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43:   static void saveGenerator(",
          "44:       Runtime *runtime,",
          "45:       PinnedHermesValue *frameRegs,",
          "46:       const Inst *resumeIP);",
          "",
          "---------------"
        ],
        "lib/VM/Interpreter-slowpaths.cpp||lib/VM/Interpreter-slowpaths.cpp": [
          "File: lib/VM/Interpreter-slowpaths.cpp -> lib/VM/Interpreter-slowpaths.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: #include \"JSLib/JSLibInternal.h\"",
          "10: #include \"hermes/VM/Casting.h\"",
          "11: #include \"hermes/VM/Interpreter.h\"",
          "12: #include \"hermes/VM/StringPrimitive.h\"",
          "14: #include \"Interpreter-internal.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: #include \"hermes/VM/StackFrame-inline.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "18: namespace hermes {",
          "19: namespace vm {",
          "21: ExecutionStatus Interpreter::caseDirectEval(",
          "22:     Runtime *runtime,",
          "23:     PinnedHermesValue *frameRegs,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: void Interpreter::saveGenerator(",
          "23:     Runtime *runtime,",
          "24:     PinnedHermesValue *frameRegs,",
          "25:     const Inst *resumeIP) {",
          "26:   auto *innerFn = vmcast<GeneratorInnerFunction>(FRAME.getCalleeClosure());",
          "27:   innerFn->saveStack(runtime);",
          "28:   innerFn->setNextIP(resumeIP);",
          "29:   innerFn->setState(GeneratorInnerFunction::State::SuspendedYield);",
          "30: }",
          "",
          "---------------"
        ],
        "lib/VM/Interpreter.cpp||lib/VM/Interpreter.cpp": [
          "File: lib/VM/Interpreter.cpp -> lib/VM/Interpreter.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1002: #endif // NDEBUG",
          "1004:   LLVM_DEBUG(dbgs() << \"interpretFunction() called\\n\");",
          "1006:   ScopedNativeDepthTracker depthTracker{runtime};",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1008: #define DONT_CAPTURE_IP(expr)      \\",
          "1009:   do {                             \\",
          "1010:     NoAllocScope noAlloc(runtime); \\",
          "1011:     (void)expr;                    \\",
          "1012:   } while (false)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1798:       }",
          "1800:       CASE(SaveGenerator) {",
          "1803:       }",
          "1804:       CASE(SaveGeneratorLong) {",
          "1807:       }",
          "1820:       CASE(StartGenerator) {",
          "1821:         auto *innerFn = vmcast<GeneratorInnerFunction>(",
          "1822:             runtime->getCurrentFrame().getCalleeClosure());",
          "",
          "[Removed Lines]",
          "1801:         nextIP = IPADD(ip->iSaveGenerator.op1);",
          "1802:         goto doSaveGen;",
          "1805:         nextIP = IPADD(ip->iSaveGeneratorLong.op1);",
          "1806:         goto doSaveGen;",
          "1809:     doSaveGen : {",
          "1810:       auto *innerFn = vmcast<GeneratorInnerFunction>(",
          "1811:           runtime->getCurrentFrame().getCalleeClosure());",
          "1813:       innerFn->saveStack(runtime);",
          "1814:       innerFn->setNextIP(nextIP);",
          "1815:       innerFn->setState(GeneratorInnerFunction::State::SuspendedYield);",
          "1816:       ip = NEXTINST(SaveGenerator);",
          "1817:       DISPATCH;",
          "1818:     }",
          "",
          "[Added Lines]",
          "1811:         DONT_CAPTURE_IP(",
          "1812:             saveGenerator(runtime, frameRegs, IPADD(ip->iSaveGenerator.op1)));",
          "1813:         ip = NEXTINST(SaveGenerator);",
          "1814:         DISPATCH;",
          "1817:         DONT_CAPTURE_IP(saveGenerator(",
          "1818:             runtime, frameRegs, IPADD(ip->iSaveGeneratorLong.op1)));",
          "1819:         ip = NEXTINST(SaveGeneratorLong);",
          "1820:         DISPATCH;",
          "",
          "---------------"
        ],
        "test/hermes/es6/generator.js||test/hermes/es6/generator.js": [
          "File: test/hermes/es6/generator.js -> test/hermes/es6/generator.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "354: iterator.return(123);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "359: function* saveGeneratorLong() {",
          "360:     yield* [1];",
          "362:     [].push(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,",
          "363:     0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,",
          "364:     0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,",
          "365:     0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,",
          "366:     0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,",
          "367:     0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,",
          "368:     0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);",
          "369: }",
          "370: print(saveGeneratorLong().next().value);",
          "",
          "---------------"
        ]
      }
    }
  ]
}