{
  "cve_id": "CVE-2022-32323",
  "cve_desc": "AutoTrace v0.40.0 was discovered to contain a heap overflow via the ReadImage function at input-bmp.c:660.",
  "repo": "autotrace/autotrace",
  "patch_hash": "2b44c173027736c64b3f379bd154c41bab745423",
  "patch_info": {
    "commit_hash": "2b44c173027736c64b3f379bd154c41bab745423",
    "repo": "autotrace/autotrace",
    "commit_url": "https://github.com/autotrace/autotrace/commit/2b44c173027736c64b3f379bd154c41bab745423",
    "files": [
      "src/input-bmp.c"
    ],
    "message": "Merge pull request #72 from lemenkov/misleading_indentation\n\nMisleading indentation",
    "before_after_code_files": [
      "src/input-bmp.c||src/input-bmp.c"
    ]
  },
  "patch_diff": {
    "src/input-bmp.c||src/input-bmp.c": [
      "File: src/input-bmp.c -> src/input-bmp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "640:       {",
      "641:         temp = image + (ypos * rowstride);",
      "642:         for (xpos = 0; xpos < width; ++xpos) {",
      "656:       }",
      "657:     }",
      "658:     break;",
      "",
      "[Removed Lines]",
      "643:      px32 = ToL(&row_buf[xpos * 4]);",
      "644:      unsigned char red = *(temp++) = ((px32 & masks[0].mask) >> masks[0].shiftin) * 255.0 / masks[0].max_value + 0.5;",
      "645:      unsigned char green = *(temp++) = ((px32 & masks[1].mask) >> masks[1].shiftin) * 255.0 / masks[1].max_value + 0.5;",
      "646:      unsigned char blue = *(temp++) = ((px32 & masks[2].mask) >> masks[2].shiftin) * 255.0 / masks[2].max_value + 0.5;",
      "650:     }",
      "652:     if (ypos == 0)",
      "653:      break;",
      "",
      "[Added Lines]",
      "643:    px32 = ToL(&row_buf[xpos * 4]);",
      "644:    unsigned char red = *(temp++) = ((px32 & masks[0].mask) >> masks[0].shiftin) * 255.0 / masks[0].max_value + 0.5;",
      "645:    unsigned char green = *(temp++) = ((px32 & masks[1].mask) >> masks[1].shiftin) * 255.0 / masks[1].max_value + 0.5;",
      "646:    unsigned char blue = *(temp++) = ((px32 & masks[2].mask) >> masks[2].shiftin) * 255.0 / masks[2].max_value + 0.5;",
      "650:  }",
      "652:  if (ypos == 0)",
      "653:    break;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "669:         }",
      "671:       }",
      "672:     }",
      "673:     break;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "671:  if (ypos == 0)",
      "672:    break;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "679:         temp = image + (ypos * rowstride);",
      "680:         for (xpos = 0; xpos < width; ++xpos)",
      "681:         {",
      "695:       }",
      "696:     }",
      "697:     break;",
      "",
      "[Removed Lines]",
      "682:      rgb = ToS(&row_buf[xpos * 2]);",
      "689:     }",
      "691:     if (ypos == 0)",
      "692:      break;",
      "",
      "[Added Lines]",
      "686:    rgb = ToS(&row_buf[xpos * 2]);",
      "693:  }",
      "695:  if (ypos == 0)",
      "696:    break;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a943ffb87ba93b9cb6f0c2d5b42dd98f4967216a",
      "candidate_info": {
        "commit_hash": "a943ffb87ba93b9cb6f0c2d5b42dd98f4967216a",
        "repo": "autotrace/autotrace",
        "commit_url": "https://github.com/autotrace/autotrace/commit/a943ffb87ba93b9cb6f0c2d5b42dd98f4967216a",
        "files": [
          "src/input-bmp.c"
        ],
        "message": "Misleading indentation\n\nSigned-off-by: Peter Lemenkov <lemenkov@gmail.com>",
        "before_after_code_files": [
          "src/input-bmp.c||src/input-bmp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/autotrace/autotrace/pull/72"
        ],
        "olp_code_files": {
          "patch": [
            "src/input-bmp.c||src/input-bmp.c"
          ],
          "candidate": [
            "src/input-bmp.c||src/input-bmp.c"
          ]
        }
      },
      "candidate_diff": {
        "src/input-bmp.c||src/input-bmp.c": [
          "File: src/input-bmp.c -> src/input-bmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "640:       {",
          "641:         temp = image + (ypos * rowstride);",
          "642:         for (xpos = 0; xpos < width; ++xpos) {",
          "656:       }",
          "657:     }",
          "658:     break;",
          "",
          "[Removed Lines]",
          "643:      px32 = ToL(&row_buf[xpos * 4]);",
          "644:      unsigned char red = *(temp++) = ((px32 & masks[0].mask) >> masks[0].shiftin) * 255.0 / masks[0].max_value + 0.5;",
          "645:      unsigned char green = *(temp++) = ((px32 & masks[1].mask) >> masks[1].shiftin) * 255.0 / masks[1].max_value + 0.5;",
          "646:      unsigned char blue = *(temp++) = ((px32 & masks[2].mask) >> masks[2].shiftin) * 255.0 / masks[2].max_value + 0.5;",
          "650:     }",
          "652:     if (ypos == 0)",
          "653:      break;",
          "",
          "[Added Lines]",
          "643:    px32 = ToL(&row_buf[xpos * 4]);",
          "644:    unsigned char red = *(temp++) = ((px32 & masks[0].mask) >> masks[0].shiftin) * 255.0 / masks[0].max_value + 0.5;",
          "645:    unsigned char green = *(temp++) = ((px32 & masks[1].mask) >> masks[1].shiftin) * 255.0 / masks[1].max_value + 0.5;",
          "646:    unsigned char blue = *(temp++) = ((px32 & masks[2].mask) >> masks[2].shiftin) * 255.0 / masks[2].max_value + 0.5;",
          "650:  }",
          "652:  if (ypos == 0)",
          "653:    break;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "669:         }",
          "671:       }",
          "672:     }",
          "673:     break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "671:  if (ypos == 0)",
          "672:    break;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "679:         temp = image + (ypos * rowstride);",
          "680:         for (xpos = 0; xpos < width; ++xpos)",
          "681:         {",
          "695:       }",
          "696:     }",
          "697:     break;",
          "",
          "[Removed Lines]",
          "682:      rgb = ToS(&row_buf[xpos * 2]);",
          "689:     }",
          "691:     if (ypos == 0)",
          "692:      break;",
          "",
          "[Added Lines]",
          "686:    rgb = ToS(&row_buf[xpos * 2]);",
          "693:  }",
          "695:  if (ypos == 0)",
          "696:    break;",
          "",
          "---------------"
        ]
      }
    }
  ]
}