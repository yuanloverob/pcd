{
  "cve_id": "CVE-2021-3756",
  "cve_desc": "libmysofa is vulnerable to Heap-based Buffer Overflow",
  "repo": "hoene/libmysofa",
  "patch_hash": "890400ebd092c574707d0c132124f8ff047e20e1",
  "patch_info": {
    "commit_hash": "890400ebd092c574707d0c132124f8ff047e20e1",
    "repo": "hoene/libmysofa",
    "commit_url": "https://github.com/hoene/libmysofa/commit/890400ebd092c574707d0c132124f8ff047e20e1",
    "files": [
      "src/hdf/dataobject.c"
    ],
    "message": "Fix for issue 163",
    "before_after_code_files": [
      "src/hdf/dataobject.c||src/hdf/dataobject.c"
    ]
  },
  "patch_diff": {
    "src/hdf/dataobject.c||src/hdf/dataobject.c": [
      "File: src/hdf/dataobject.c -> src/hdf/dataobject.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "500:       store = ftell(reader->fhd);",
      "501:       if (fseek(reader->fhd, data_address, SEEK_SET) < 0)",
      "502:         return errno; // LCOV_EXCL_LINE",
      "510:       }",
      "511:       err = fread(data->data, 1, data_size, reader->fhd);",
      "512:       if (err != data_size)",
      "513:         return MYSOFA_READ_ERROR; // LCOV_EXCL_LINE",
      "",
      "[Removed Lines]",
      "503:       if (!data->data) {",
      "504:         if (data_size > 0x10000000)",
      "505:           return MYSOFA_INVALID_FORMAT;",
      "506:         data->data_len = data_size;",
      "507:         data->data = calloc(1, data_size);",
      "508:         if (!data->data)",
      "509:           return MYSOFA_NO_MEMORY; // LCOV_EXCL_LINE",
      "",
      "[Added Lines]",
      "503:       if (data->data) {",
      "504:         free(data->data);",
      "505:         data->data = NULL;",
      "507:       if (data_size > 0x10000000)",
      "508:         return MYSOFA_INVALID_FORMAT;",
      "509:       data->data_len = data_size;",
      "510:       data->data = calloc(1, data_size);",
      "511:       if (!data->data)",
      "512:         return MYSOFA_NO_MEMORY; // LCOV_EXCL_LINE",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "af59f7a5d9a0c6e1e01f14b6f96f3a638f62453b",
      "candidate_info": {
        "commit_hash": "af59f7a5d9a0c6e1e01f14b6f96f3a638f62453b",
        "repo": "hoene/libmysofa",
        "commit_url": "https://github.com/hoene/libmysofa/commit/af59f7a5d9a0c6e1e01f14b6f96f3a638f62453b",
        "files": [
          "CMakeLists.txt",
          "tests/fail-issue-163.sofa",
          "tests/notcrashed.sh"
        ],
        "message": "Added failing test with issue 163",
        "before_after_code_files": [
          "tests/notcrashed.sh||tests/notcrashed.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hoene/libmysofa/pull/166"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/notcrashed.sh||tests/notcrashed.sh": [
          "File: tests/notcrashed.sh -> tests/notcrashed.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/bin/sh",
          "3: ../build/src/mysofa2json \"$1\".sofa >/dev/null 2>/dev/null",
          "4: ret=$?",
          "5: if [ \"$ret\" -ge 128 ]; then",
          "7:      echo mysofa2json crashed with $ret opening$1.sofa",
          "8:             exit $ret",
          "10: fi",
          "11: echo good",
          "12: exit 0",
          "",
          "[Removed Lines]",
          "6:    if [ \"$ret\" -ge 128 ]; then",
          "9:    fi",
          "",
          "[Added Lines]",
          "2: test -f \"$1\".sofa || exit 128",
          "",
          "---------------"
        ]
      }
    }
  ]
}