{
  "cve_id": "CVE-2017-12932",
  "cve_desc": "ext/standard/var_unserializer.re in PHP 7.0.x through 7.0.22 and 7.1.x through 7.1.8 is prone to a heap use after free while unserializing untrusted data, related to improper use of the hash API for key deletion in a situation with an invalid array size. Exploitation of this issue can have an unspecified impact on the integrity of PHP.",
  "repo": "php/php-src",
  "patch_hash": "1a23ebc1fff59bf480ca92963b36eba5c1b904c4",
  "patch_info": {
    "commit_hash": "1a23ebc1fff59bf480ca92963b36eba5c1b904c4",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/1a23ebc1fff59bf480ca92963b36eba5c1b904c4",
    "files": [
      "NEWS",
      "ext/standard/tests/serialize/bug74103.phpt",
      "ext/standard/tests/serialize/bug75054.phpt",
      "ext/standard/var_unserializer.c",
      "ext/standard/var_unserializer.re"
    ],
    "message": "Fixed bug #74103 and bug #75054\n\nDirectly fail unserialization when trying to acquire an r/R\nreference to an UNDEF HT slot. Previously this left an UNDEF and\nlater deleted the index/key from the HT.\n\nWhat actually caused the issue here is a combination of two\nfactors: First, the key deletion was performed using the hash API,\nrather than the symtable API, such that the element was not actually\nremoved if it used an integral string key. Second, a subsequent\ndeletion operation, while collecting trailing UNDEF ranges, would\nmark the element as available for reuse (leaving a corrupted HT\nstate with nNumOfElemnts > nNumUsed).\n\nFix this by failing early and dropping the deletion code.",
    "before_after_code_files": [
      "ext/standard/tests/serialize/bug74103.phpt||ext/standard/tests/serialize/bug74103.phpt",
      "ext/standard/tests/serialize/bug75054.phpt||ext/standard/tests/serialize/bug75054.phpt",
      "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
      "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
    ]
  },
  "patch_diff": {
    "ext/standard/tests/serialize/bug74103.phpt||ext/standard/tests/serialize/bug74103.phpt": [
      "File: ext/standard/tests/serialize/bug74103.phpt -> ext/standard/tests/serialize/bug74103.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Bug #74103: heap-use-after-free when unserializing invalid array size",
      "3: --FILE--",
      "4: <?php",
      "5: var_dump(unserialize('a:7:{i:0;i:04;s:1:\"a\";i:2;i:00009617006;i:4;s:1:\"a\";i:4;s:1:\"a\";R:5;s:1:\"7\";R:3;s:1:\"a\";R:5;;s:18;}}'));",
      "6: ?>",
      "7: --EXPECTF--",
      "8: Notice: unserialize(): Error at offset 68 of 100 bytes in %s on line %d",
      "9: bool(false)",
      "",
      "---------------"
    ],
    "ext/standard/tests/serialize/bug75054.phpt||ext/standard/tests/serialize/bug75054.phpt": [
      "File: ext/standard/tests/serialize/bug75054.phpt -> ext/standard/tests/serialize/bug75054.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Bug #75054: A Denial of Service Vulnerability was found when performing deserialization",
      "3: --FILE--",
      "4: <?php",
      "5: $poc = 'a:9:{i:0;s:4:\"0000\";i:0;s:4:\"0000\";i:0;R:2;s:4:\"5003\";R:2;s:4:\"0000\";R:2;s:4:\"0000\";R:2;s:4:\"';",
      "6: $poc .= \"\\x06\";",
      "7: $poc .= '000\";R:2;s:4:\"0000\";d:0;s:4:\"0000\";a:9:{s:4:\"0000\";';",
      "8: var_dump(unserialize($poc));",
      "9: ?>",
      "10: --EXPECTF--",
      "11: Notice: unserialize(): Error at offset 43 of 145 bytes in %s on line %d",
      "12: bool(false)",
      "",
      "---------------"
    ],
    "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
      "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "405:    return 0;",
      "406:   }",
      "418:   zval_dtor(&key);",
      "420:   if (elements && *(*p-1) != ';' && *(*p-1) != '}') {",
      "",
      "[Removed Lines]",
      "408:   if (UNEXPECTED(Z_ISUNDEF_P(data))) {",
      "409:    if (Z_TYPE(key) == IS_LONG) {",
      "410:     zend_hash_index_del(ht, Z_LVAL(key));",
      "411:    } else {",
      "412:     zend_hash_del_ind(ht, Z_STR(key));",
      "413:    }",
      "414:   } else {",
      "415:    var_push_dtor(var_hash, data);",
      "416:   }",
      "",
      "[Added Lines]",
      "408:   var_push_dtor(var_hash, data);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "581:  start = cursor;",
      "585: {",
      "586:  YYCTYPE yych;",
      "587:  static const unsigned char yybm[] = {",
      "",
      "[Removed Lines]",
      "584: #line 585 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "575: #line 576 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "622:  yych = *YYCURSOR;",
      "623:  switch (yych) {",
      "624:  case 'C':",
      "626:  case 'N': goto yy5;",
      "633:  case 'o': goto yy12;",
      "638:  }",
      "639: yy2:",
      "642: yy3:",
      "644:  { return 0; }",
      "646: yy4:",
      "647:  yych = *(YYMARKER = ++YYCURSOR);",
      "649:  goto yy3;",
      "650: yy5:",
      "651:  yych = *++YYCURSOR;",
      "653:  goto yy3;",
      "654: yy6:",
      "655:  yych = *(YYMARKER = ++YYCURSOR);",
      "657:  goto yy3;",
      "658: yy7:",
      "659:  yych = *(YYMARKER = ++YYCURSOR);",
      "661:  goto yy3;",
      "662: yy8:",
      "663:  yych = *(YYMARKER = ++YYCURSOR);",
      "665:  goto yy3;",
      "666: yy9:",
      "667:  yych = *(YYMARKER = ++YYCURSOR);",
      "669:  goto yy3;",
      "670: yy10:",
      "671:  yych = *(YYMARKER = ++YYCURSOR);",
      "673:  goto yy3;",
      "674: yy11:",
      "675:  yych = *(YYMARKER = ++YYCURSOR);",
      "677:  goto yy3;",
      "678: yy12:",
      "679:  yych = *(YYMARKER = ++YYCURSOR);",
      "681:  goto yy3;",
      "682: yy13:",
      "683:  yych = *(YYMARKER = ++YYCURSOR);",
      "685:  goto yy3;",
      "686: yy14:",
      "687:  ++YYCURSOR;",
      "689:  {",
      "691:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
      "693: }",
      "698: yy17:",
      "699:  yych = *++YYCURSOR;",
      "700:  if (yybm[0+yych] & 128) {",
      "702:  }",
      "704: yy18:",
      "705:  YYCURSOR = YYMARKER;",
      "706:  goto yy3;",
      "707: yy19:",
      "708:  yych = *++YYCURSOR;",
      "711:  }",
      "712:  goto yy18;",
      "720:  if (yych <= '/') goto yy18;",
      "722:  yych = *++YYCURSOR;",
      "841:   }",
      "858:   }",
      "861:  }",
      "868:  }",
      "872:  }",
      "879:  yych = *++YYCURSOR;",
      "880:  if (yych <= ',') {",
      "882:  } else {",
      "884:   if (yych <= '/') goto yy18;",
      "886:   goto yy18;",
      "887:  }",
      "889:  yych = *++YYCURSOR;",
      "890:  if (yych <= '/') goto yy18;",
      "893:  ++YYCURSOR;",
      "894:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
      "895:  yych = *YYCURSOR;",
      "896:  if (yych <= '/') goto yy18;",
      "899:  yych = *++YYCURSOR;",
      "901:  ++YYCURSOR;",
      "917:  if (yych <= '/') goto yy18;",
      "918:  if (yych <= '9') goto yy34;",
      "919:  goto yy18;",
      "921:  yych = *++YYCURSOR;",
      "922:  if (yych <= '/') goto yy18;",
      "923:  if (yych >= ':') goto yy18;",
      "925:  ++YYCURSOR;",
      "926:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
      "927:  yych = *YYCURSOR;",
      "928:  if (yych <= '/') goto yy18;",
      "931:  yych = *++YYCURSOR;",
      "933:  ++YYCURSOR;",
      "950:  }",
      "954:  }",
      "960:  yych = *++YYCURSOR;",
      "962:  if (yych <= '/') goto yy18;",
      "964:  goto yy18;",
      "966:  yych = *++YYCURSOR;",
      "967:  if (yych <= '/') goto yy18;",
      "968:  if (yych >= ':') goto yy18;",
      "970:  ++YYCURSOR;",
      "971:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
      "972:  yych = *YYCURSOR;",
      "973:  if (yych <= '/') goto yy18;",
      "976:  yych = *++YYCURSOR;",
      "978:  ++YYCURSOR;",
      "1017:  if (yych <= '/') goto yy18;",
      "1019:  goto yy18;",
      "1021:  yych = *++YYCURSOR;",
      "1022:  if (yych <= '/') goto yy18;",
      "1023:  if (yych >= ':') goto yy18;",
      "1025:  ++YYCURSOR;",
      "1026:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
      "1027:  yych = *YYCURSOR;",
      "1028:  if (yych <= '/') goto yy18;",
      "1031:  yych = *++YYCURSOR;",
      "1033:  ++YYCURSOR;",
      "1035:  {",
      "1052:   return 0;",
      "1053:  }",
      "1057:   return 0;",
      "1058:  }",
      "1064:  return 1;",
      "1065: }",
      "1087:  yych = *++YYCURSOR;",
      "1089:  goto yy18;",
      "1100:  yych = *++YYCURSOR;",
      "1102:  goto yy18;",
      "1109:  ++YYCURSOR;",
      "1136:  ++YYCURSOR;",
      "1137:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
      "1138:  yych = *YYCURSOR;",
      "1139:  if (yych <= ';') {",
      "1140:   if (yych <= '/') goto yy18;",
      "1142:   if (yych <= ':') goto yy18;",
      "1143:  } else {",
      "1144:   if (yych <= 'E') {",
      "1145:    if (yych <= 'D') goto yy18;",
      "1147:   } else {",
      "1149:    goto yy18;",
      "1150:   }",
      "1151:  }",
      "1153:  ++YYCURSOR;",
      "1155:  {",
      "1156: #if SIZEOF_ZEND_LONG == 4",
      "1157: use_double:",
      "",
      "[Removed Lines]",
      "625:  case 'O': goto yy13;",
      "627:  case 'R': goto yy2;",
      "628:  case 'S': goto yy10;",
      "629:  case 'a': goto yy11;",
      "630:  case 'b': goto yy6;",
      "631:  case 'd': goto yy8;",
      "632:  case 'i': goto yy7;",
      "634:  case 'r': goto yy4;",
      "635:  case 's': goto yy9;",
      "636:  case '}': goto yy14;",
      "637:  default: goto yy16;",
      "640:  yych = *(YYMARKER = ++YYCURSOR);",
      "641:  if (yych == ':') goto yy95;",
      "643: #line 962 \"ext/standard/var_unserializer.re\"",
      "645: #line 646 \"ext/standard/var_unserializer.c\"",
      "648:  if (yych == ':') goto yy89;",
      "652:  if (yych == ';') goto yy87;",
      "656:  if (yych == ':') goto yy83;",
      "660:  if (yych == ':') goto yy77;",
      "664:  if (yych == ':') goto yy53;",
      "668:  if (yych == ':') goto yy46;",
      "672:  if (yych == ':') goto yy39;",
      "676:  if (yych == ':') goto yy32;",
      "680:  if (yych == ':') goto yy25;",
      "684:  if (yych == ':') goto yy17;",
      "688: #line 956 \"ext/standard/var_unserializer.re\"",
      "694: #line 695 \"ext/standard/var_unserializer.c\"",
      "695: yy16:",
      "696:  yych = *++YYCURSOR;",
      "697:  goto yy3;",
      "701:   goto yy20;",
      "703:  if (yych == '+') goto yy19;",
      "709:  if (yybm[0+yych] & 128) {",
      "710:   goto yy20;",
      "713: yy20:",
      "714:  ++YYCURSOR;",
      "715:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
      "716:  yych = *YYCURSOR;",
      "717:  if (yybm[0+yych] & 128) {",
      "718:   goto yy20;",
      "719:  }",
      "721:  if (yych >= ';') goto yy18;",
      "723:  if (yych != '\"') goto yy18;",
      "724:  ++YYCURSOR;",
      "725: #line 804 \"ext/standard/var_unserializer.re\"",
      "726:  {",
      "727:  size_t len, len2, len3, maxlen;",
      "728:  zend_long elements;",
      "729:  char *str;",
      "730:  zend_string *class_name;",
      "731:  zend_class_entry *ce;",
      "732:  int incomplete_class = 0;",
      "734:  int custom_object = 0;",
      "736:  zval user_func;",
      "737:  zval retval;",
      "738:  zval args[1];",
      "740:     if (!var_hash) return 0;",
      "741:  if (*start == 'C') {",
      "742:   custom_object = 1;",
      "743:  }",
      "745:  len2 = len = parse_uiv(start + 2);",
      "746:  maxlen = max - YYCURSOR;",
      "747:  if (maxlen < len || len == 0) {",
      "749:   return 0;",
      "750:  }",
      "752:  str = (char*)YYCURSOR;",
      "754:  YYCURSOR += len;",
      "756:  if (*(YYCURSOR) != '\"') {",
      "758:   return 0;",
      "759:  }",
      "760:  if (*(YYCURSOR+1) != ':') {",
      "762:   return 0;",
      "763:  }",
      "765:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
      "766:  if (len3 != len)",
      "767:  {",
      "769:   return 0;",
      "770:  }",
      "772:  class_name = zend_string_init(str, len, 0);",
      "774:  do {",
      "775:   if(!unserialize_allowed_class(class_name, classes)) {",
      "776:    incomplete_class = 1;",
      "777:    ce = PHP_IC_ENTRY;",
      "778:    break;",
      "779:   }",
      "782:   BG(serialize_lock)++;",
      "783:   ce = zend_lookup_class(class_name);",
      "784:   if (ce) {",
      "785:    BG(serialize_lock)--;",
      "786:    if (EG(exception)) {",
      "787:     zend_string_release(class_name);",
      "788:     return 0;",
      "789:    }",
      "790:    break;",
      "791:   }",
      "792:   BG(serialize_lock)--;",
      "794:   if (EG(exception)) {",
      "795:    zend_string_release(class_name);",
      "796:    return 0;",
      "797:   }",
      "800:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
      "801:    incomplete_class = 1;",
      "802:    ce = PHP_IC_ENTRY;",
      "803:    break;",
      "804:   }",
      "807:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
      "809:   ZVAL_STR_COPY(&args[0], class_name);",
      "810:   BG(serialize_lock)++;",
      "811:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
      "812:    BG(serialize_lock)--;",
      "813:    if (EG(exception)) {",
      "814:     zend_string_release(class_name);",
      "815:     zval_ptr_dtor(&user_func);",
      "816:     zval_ptr_dtor(&args[0]);",
      "817:     return 0;",
      "818:    }",
      "819:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
      "820:    incomplete_class = 1;",
      "821:    ce = PHP_IC_ENTRY;",
      "822:    zval_ptr_dtor(&user_func);",
      "823:    zval_ptr_dtor(&args[0]);",
      "824:    break;",
      "825:   }",
      "826:   BG(serialize_lock)--;",
      "827:   zval_ptr_dtor(&retval);",
      "828:   if (EG(exception)) {",
      "829:    zend_string_release(class_name);",
      "830:    zval_ptr_dtor(&user_func);",
      "831:    zval_ptr_dtor(&args[0]);",
      "832:    return 0;",
      "833:   }",
      "836:   BG(serialize_lock)++;",
      "837:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
      "838:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
      "839:    incomplete_class = 1;",
      "840:    ce = PHP_IC_ENTRY;",
      "842:   BG(serialize_lock)--;",
      "844:   zval_ptr_dtor(&user_func);",
      "845:   zval_ptr_dtor(&args[0]);",
      "846:   break;",
      "847:  } while (1);",
      "851:  if (custom_object) {",
      "852:   int ret;",
      "854:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
      "856:   if (ret && incomplete_class) {",
      "857:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
      "859:   zend_string_release(class_name);",
      "860:   return ret;",
      "863:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
      "865:  if (elements < 0) {",
      "866:     zend_string_release(class_name);",
      "867:     return 0;",
      "870:  if (incomplete_class) {",
      "871:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
      "873:  zend_string_release(class_name);",
      "875:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
      "876: }",
      "877: #line 878 \"ext/standard/var_unserializer.c\"",
      "878: yy25:",
      "881:   if (yych != '+') goto yy18;",
      "883:   if (yych <= '-') goto yy26;",
      "885:   if (yych <= '9') goto yy27;",
      "888: yy26:",
      "891:  if (yych >= ':') goto yy18;",
      "892: yy27:",
      "897:  if (yych <= '9') goto yy27;",
      "898:  if (yych >= ';') goto yy18;",
      "900:  if (yych != '\"') goto yy18;",
      "902: #line 793 \"ext/standard/var_unserializer.re\"",
      "903:  {",
      "904:  zend_long elements;",
      "905:     if (!var_hash) return 0;",
      "907:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
      "908:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
      "909:   return 0;",
      "910:  }",
      "911:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
      "912: }",
      "913: #line 914 \"ext/standard/var_unserializer.c\"",
      "914: yy32:",
      "915:  yych = *++YYCURSOR;",
      "916:  if (yych == '+') goto yy33;",
      "920: yy33:",
      "924: yy34:",
      "929:  if (yych <= '9') goto yy34;",
      "930:  if (yych >= ';') goto yy18;",
      "932:  if (yych != '{') goto yy18;",
      "934: #line 769 \"ext/standard/var_unserializer.re\"",
      "935:  {",
      "936:  zend_long elements = parse_iv(start + 2);",
      "939:     if (!var_hash) return 0;",
      "941:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
      "942:   return 0;",
      "943:  }",
      "945:  array_init_size(rval, elements);",
      "946:  if (elements) {",
      "949:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
      "952:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
      "953:   return 0;",
      "956:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
      "957: }",
      "958: #line 959 \"ext/standard/var_unserializer.c\"",
      "959: yy39:",
      "961:  if (yych == '+') goto yy40;",
      "963:  if (yych <= '9') goto yy41;",
      "965: yy40:",
      "969: yy41:",
      "974:  if (yych <= '9') goto yy41;",
      "975:  if (yych >= ';') goto yy18;",
      "977:  if (yych != '\"') goto yy18;",
      "979: #line 735 \"ext/standard/var_unserializer.re\"",
      "980:  {",
      "981:  size_t len, maxlen;",
      "982:  zend_string *str;",
      "984:  len = parse_uiv(start + 2);",
      "985:  maxlen = max - YYCURSOR;",
      "986:  if (maxlen < len) {",
      "988:   return 0;",
      "989:  }",
      "991:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
      "992:   return 0;",
      "993:  }",
      "995:  if (*(YYCURSOR) != '\"') {",
      "996:   zend_string_free(str);",
      "998:   return 0;",
      "999:  }",
      "1001:  if (*(YYCURSOR + 1) != ';') {",
      "1002:   efree(str);",
      "1004:   return 0;",
      "1005:  }",
      "1007:  YYCURSOR += 2;",
      "1010:  ZVAL_STR(rval, str);",
      "1011:  return 1;",
      "1012: }",
      "1013: #line 1014 \"ext/standard/var_unserializer.c\"",
      "1014: yy46:",
      "1015:  yych = *++YYCURSOR;",
      "1016:  if (yych == '+') goto yy47;",
      "1018:  if (yych <= '9') goto yy48;",
      "1020: yy47:",
      "1024: yy48:",
      "1029:  if (yych <= '9') goto yy48;",
      "1030:  if (yych >= ';') goto yy18;",
      "1032:  if (yych != '\"') goto yy18;",
      "1034: #line 703 \"ext/standard/var_unserializer.re\"",
      "1036:  size_t len, maxlen;",
      "1037:  char *str;",
      "1039:  len = parse_uiv(start + 2);",
      "1040:  maxlen = max - YYCURSOR;",
      "1041:  if (maxlen < len) {",
      "1043:   return 0;",
      "1044:  }",
      "1046:  str = (char*)YYCURSOR;",
      "1048:  YYCURSOR += len;",
      "1050:  if (*(YYCURSOR) != '\"') {",
      "1055:  if (*(YYCURSOR + 1) != ';') {",
      "1060:  YYCURSOR += 2;",
      "1063:  ZVAL_STRINGL(rval, str, len);",
      "1066: #line 1067 \"ext/standard/var_unserializer.c\"",
      "1067: yy53:",
      "1068:  yych = *++YYCURSOR;",
      "1069:  if (yych <= '/') {",
      "1070:   if (yych <= ',') {",
      "1071:    if (yych == '+') goto yy57;",
      "1072:    goto yy18;",
      "1073:   } else {",
      "1074:    if (yych <= '-') goto yy55;",
      "1075:    if (yych <= '.') goto yy60;",
      "1076:    goto yy18;",
      "1077:   }",
      "1078:  } else {",
      "1079:   if (yych <= 'I') {",
      "1080:    if (yych <= '9') goto yy58;",
      "1081:    if (yych <= 'H') goto yy18;",
      "1082:    goto yy56;",
      "1083:   } else {",
      "1084:    if (yych != 'N') goto yy18;",
      "1085:   }",
      "1086:  }",
      "1088:  if (yych == 'A') goto yy76;",
      "1090: yy55:",
      "1091:  yych = *++YYCURSOR;",
      "1092:  if (yych <= '/') {",
      "1093:   if (yych == '.') goto yy60;",
      "1094:   goto yy18;",
      "1095:  } else {",
      "1096:   if (yych <= '9') goto yy58;",
      "1097:   if (yych != 'I') goto yy18;",
      "1098:  }",
      "1099: yy56:",
      "1101:  if (yych == 'N') goto yy72;",
      "1103: yy57:",
      "1104:  yych = *++YYCURSOR;",
      "1105:  if (yych == '.') goto yy60;",
      "1106:  if (yych <= '/') goto yy18;",
      "1107:  if (yych >= ':') goto yy18;",
      "1108: yy58:",
      "1110:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
      "1111:  yych = *YYCURSOR;",
      "1112:  if (yych <= ':') {",
      "1113:   if (yych <= '.') {",
      "1114:    if (yych <= '-') goto yy18;",
      "1115:    goto yy70;",
      "1116:   } else {",
      "1117:    if (yych <= '/') goto yy18;",
      "1118:    if (yych <= '9') goto yy58;",
      "1119:    goto yy18;",
      "1120:   }",
      "1121:  } else {",
      "1122:   if (yych <= 'E') {",
      "1123:    if (yych <= ';') goto yy63;",
      "1124:    if (yych <= 'D') goto yy18;",
      "1125:    goto yy65;",
      "1126:   } else {",
      "1127:    if (yych == 'e') goto yy65;",
      "1128:    goto yy18;",
      "1129:   }",
      "1130:  }",
      "1131: yy60:",
      "1132:  yych = *++YYCURSOR;",
      "1133:  if (yych <= '/') goto yy18;",
      "1134:  if (yych >= ':') goto yy18;",
      "1135: yy61:",
      "1141:   if (yych <= '9') goto yy61;",
      "1146:    goto yy65;",
      "1148:    if (yych == 'e') goto yy65;",
      "1152: yy63:",
      "1154: #line 694 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "616:  case 'O': goto yy4;",
      "618:  case 'R': goto yy6;",
      "619:  case 'S': goto yy7;",
      "620:  case 'a': goto yy8;",
      "621:  case 'b': goto yy9;",
      "622:  case 'd': goto yy10;",
      "623:  case 'i': goto yy11;",
      "625:  case 'r': goto yy13;",
      "626:  case 's': goto yy14;",
      "627:  case '}': goto yy15;",
      "628:  default: goto yy2;",
      "631:  ++YYCURSOR;",
      "633: #line 951 \"ext/standard/var_unserializer.re\"",
      "635: #line 636 \"ext/standard/var_unserializer.c\"",
      "638:  if (yych == ':') goto yy17;",
      "642:  if (yych == ';') goto yy19;",
      "646:  if (yych == ':') goto yy21;",
      "650:  if (yych == ':') goto yy22;",
      "654:  if (yych == ':') goto yy23;",
      "658:  if (yych == ':') goto yy24;",
      "662:  if (yych == ':') goto yy25;",
      "666:  if (yych == ':') goto yy26;",
      "670:  if (yych == ':') goto yy27;",
      "674:  if (yych == ':') goto yy28;",
      "677:  yych = *(YYMARKER = ++YYCURSOR);",
      "678:  if (yych == ':') goto yy29;",
      "679:  goto yy3;",
      "680: yy15:",
      "682: #line 945 \"ext/standard/var_unserializer.re\"",
      "688: #line 689 \"ext/standard/var_unserializer.c\"",
      "692:   goto yy31;",
      "694:  if (yych == '+') goto yy30;",
      "699:  ++YYCURSOR;",
      "700: #line 629 \"ext/standard/var_unserializer.re\"",
      "701:  {",
      "703:  ZVAL_NULL(rval);",
      "704:  return 1;",
      "705: }",
      "706: #line 707 \"ext/standard/var_unserializer.c\"",
      "707: yy21:",
      "709:  if (yych <= ',') {",
      "710:   if (yych == '+') goto yy33;",
      "711:   goto yy18;",
      "712:  } else {",
      "713:   if (yych <= '-') goto yy33;",
      "714:   if (yych <= '/') goto yy18;",
      "715:   if (yych <= '9') goto yy34;",
      "716:   goto yy18;",
      "718: yy22:",
      "719:  yych = *++YYCURSOR;",
      "720:  if (yych == '+') goto yy36;",
      "721:  if (yych <= '/') goto yy18;",
      "722:  if (yych <= '9') goto yy37;",
      "724: yy23:",
      "725:  yych = *++YYCURSOR;",
      "726:  if (yych == '+') goto yy39;",
      "728:  if (yych <= '9') goto yy40;",
      "729:  goto yy18;",
      "730: yy24:",
      "732:  if (yych <= '/') goto yy18;",
      "733:  if (yych <= '1') goto yy42;",
      "734:  goto yy18;",
      "735: yy25:",
      "736:  yych = *++YYCURSOR;",
      "737:  if (yych <= '/') {",
      "738:   if (yych <= ',') {",
      "739:    if (yych == '+') goto yy43;",
      "740:    goto yy18;",
      "741:   } else {",
      "742:    if (yych <= '-') goto yy44;",
      "743:    if (yych <= '.') goto yy45;",
      "744:    goto yy18;",
      "746:  } else {",
      "747:   if (yych <= 'I') {",
      "748:    if (yych <= '9') goto yy46;",
      "749:    if (yych <= 'H') goto yy18;",
      "750:    goto yy48;",
      "751:   } else {",
      "752:    if (yych == 'N') goto yy49;",
      "753:    goto yy18;",
      "756: yy26:",
      "757:  yych = *++YYCURSOR;",
      "758:  if (yych <= ',') {",
      "759:   if (yych == '+') goto yy50;",
      "760:   goto yy18;",
      "761:  } else {",
      "762:   if (yych <= '-') goto yy50;",
      "763:   if (yych <= '/') goto yy18;",
      "764:   if (yych <= '9') goto yy51;",
      "765:   goto yy18;",
      "767: yy27:",
      "768:  yych = *++YYCURSOR;",
      "769:  if (yych <= ',') {",
      "770:   if (yych == '+') goto yy53;",
      "771:   goto yy18;",
      "772:  } else {",
      "773:   if (yych <= '-') goto yy53;",
      "774:   if (yych <= '/') goto yy18;",
      "775:   if (yych <= '9') goto yy54;",
      "776:   goto yy18;",
      "778: yy28:",
      "781:   if (yych == '+') goto yy56;",
      "782:   goto yy18;",
      "784:   if (yych <= '-') goto yy56;",
      "786:   if (yych <= '9') goto yy57;",
      "789: yy29:",
      "791:  if (yych == '+') goto yy59;",
      "793:  if (yych <= '9') goto yy60;",
      "794:  goto yy18;",
      "795: yy30:",
      "796:  yych = *++YYCURSOR;",
      "797:  if (yybm[0+yych] & 128) {",
      "798:   goto yy31;",
      "799:  }",
      "800:  goto yy18;",
      "801: yy31:",
      "805:  if (yybm[0+yych] & 128) {",
      "806:   goto yy31;",
      "807:  }",
      "809:  if (yych <= ':') goto yy62;",
      "810:  goto yy18;",
      "811: yy33:",
      "813:  if (yych <= '/') goto yy18;",
      "814:  if (yych >= ':') goto yy18;",
      "815: yy34:",
      "817:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
      "818:  yych = *YYCURSOR;",
      "821:  if (yych == ';') goto yy63;",
      "823: yy36:",
      "827: yy37:",
      "832:  if (yych <= '9') goto yy37;",
      "833:  if (yych <= ':') goto yy65;",
      "834:  goto yy18;",
      "835: yy39:",
      "837:  if (yych <= '/') goto yy18;",
      "838:  if (yych >= ':') goto yy18;",
      "839: yy40:",
      "841:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
      "842:  yych = *YYCURSOR;",
      "843:  if (yych <= '/') goto yy18;",
      "844:  if (yych <= '9') goto yy40;",
      "845:  if (yych <= ':') goto yy66;",
      "846:  goto yy18;",
      "847: yy42:",
      "848:  yych = *++YYCURSOR;",
      "849:  if (yych == ';') goto yy67;",
      "850:  goto yy18;",
      "851: yy43:",
      "852:  yych = *++YYCURSOR;",
      "853:  if (yych == '.') goto yy45;",
      "854:  if (yych <= '/') goto yy18;",
      "855:  if (yych <= '9') goto yy46;",
      "856:  goto yy18;",
      "857: yy44:",
      "858:  yych = *++YYCURSOR;",
      "859:  if (yych <= '/') {",
      "860:   if (yych != '.') goto yy18;",
      "861:  } else {",
      "862:   if (yych <= '9') goto yy46;",
      "863:   if (yych == 'I') goto yy48;",
      "864:   goto yy18;",
      "866: yy45:",
      "867:  yych = *++YYCURSOR;",
      "868:  if (yych <= '/') goto yy18;",
      "869:  if (yych <= '9') goto yy69;",
      "870:  goto yy18;",
      "871: yy46:",
      "872:  ++YYCURSOR;",
      "873:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
      "874:  yych = *YYCURSOR;",
      "875:  if (yych <= ':') {",
      "876:   if (yych <= '.') {",
      "877:    if (yych <= '-') goto yy18;",
      "878:    goto yy69;",
      "879:   } else {",
      "880:    if (yych <= '/') goto yy18;",
      "881:    if (yych <= '9') goto yy46;",
      "882:    goto yy18;",
      "883:   }",
      "884:  } else {",
      "885:   if (yych <= 'E') {",
      "886:    if (yych <= ';') goto yy71;",
      "887:    if (yych <= 'D') goto yy18;",
      "888:    goto yy73;",
      "889:   } else {",
      "890:    if (yych == 'e') goto yy73;",
      "891:    goto yy18;",
      "892:   }",
      "894: yy48:",
      "895:  yych = *++YYCURSOR;",
      "896:  if (yych == 'N') goto yy74;",
      "897:  goto yy18;",
      "898: yy49:",
      "899:  yych = *++YYCURSOR;",
      "900:  if (yych == 'A') goto yy75;",
      "901:  goto yy18;",
      "902: yy50:",
      "905:  if (yych >= ':') goto yy18;",
      "906: yy51:",
      "907:  ++YYCURSOR;",
      "908:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
      "909:  yych = *YYCURSOR;",
      "910:  if (yych <= '/') goto yy18;",
      "911:  if (yych <= '9') goto yy51;",
      "912:  if (yych == ';') goto yy76;",
      "914: yy53:",
      "918: yy54:",
      "923:  if (yych <= '9') goto yy54;",
      "924:  if (yych <= ':') goto yy78;",
      "925:  goto yy18;",
      "926: yy56:",
      "928:  if (yych <= '/') goto yy18;",
      "929:  if (yych >= ':') goto yy18;",
      "930: yy57:",
      "932:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
      "933:  yych = *YYCURSOR;",
      "935:  if (yych <= '9') goto yy57;",
      "936:  if (yych == ';') goto yy79;",
      "938: yy59:",
      "942: yy60:",
      "947:  if (yych <= '9') goto yy60;",
      "948:  if (yych <= ':') goto yy81;",
      "949:  goto yy18;",
      "950: yy62:",
      "952:  if (yych == '\"') goto yy82;",
      "953:  goto yy18;",
      "954: yy63:",
      "956: #line 580 \"ext/standard/var_unserializer.re\"",
      "958:  zend_long id;",
      "961:  if (!var_hash) return 0;",
      "963:  id = parse_iv(start + 2) - 1;",
      "964:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
      "968:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
      "972:  if (Z_ISREF_P(rval_ref)) {",
      "973:   ZVAL_COPY(rval, rval_ref);",
      "974:  } else {",
      "975:   ZVAL_NEW_REF(rval_ref, rval_ref);",
      "976:   ZVAL_COPY(rval, rval_ref);",
      "977:  }",
      "981: #line 982 \"ext/standard/var_unserializer.c\"",
      "982: yy65:",
      "984:  if (yych == '\"') goto yy84;",
      "986: yy66:",
      "988:  if (yych == '{') goto yy86;",
      "990: yy67:",
      "992: #line 635 \"ext/standard/var_unserializer.re\"",
      "993:  {",
      "995:  ZVAL_BOOL(rval, parse_iv(start + 2));",
      "996:  return 1;",
      "997: }",
      "998: #line 999 \"ext/standard/var_unserializer.c\"",
      "999: yy69:",
      "1005:   if (yych <= '9') goto yy69;",
      "1010:    goto yy73;",
      "1012:    if (yych == 'e') goto yy73;",
      "1016: yy71:",
      "1018: #line 683 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1160:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
      "1161:  return 1;",
      "1162: }",
      "1165:  yych = *++YYCURSOR;",
      "1166:  if (yych <= ',') {",
      "1168:  } else {",
      "1170:   if (yych <= '/') goto yy18;",
      "1172:   goto yy18;",
      "1173:  }",
      "1175:  yych = *++YYCURSOR;",
      "1191:  goto yy18;",
      "1193:  yych = *++YYCURSOR;",
      "1196:  goto yy18;",
      "1198:  ++YYCURSOR;",
      "1210:   } else {",
      "1213:   }",
      "1214:  }",
      "1219:  yych = *++YYCURSOR;",
      "1221:  ++YYCURSOR;",
      "1223:  {",
      "1234:  }",
      "1236:  return 1;",
      "1237: }",
      "1240:  yych = *++YYCURSOR;",
      "1242:  goto yy18;",
      "1258:  ++YYCURSOR;",
      "1266:  {",
      "1272:  }",
      "1281:    }",
      "1284:   }",
      "1290: }",
      "1298:  ++YYCURSOR;",
      "1300:  {",
      "1303:  return 1;",
      "1304: }",
      "1307:  ++YYCURSOR;",
      "1309:  {",
      "1313: }",
      "1316:  yych = *++YYCURSOR;",
      "1317:  if (yych <= ',') {",
      "1319:  } else {",
      "1321:   if (yych <= '/') goto yy18;",
      "1324:  }",
      "1330:  ++YYCURSOR;",
      "1331:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
      "1332:  yych = *YYCURSOR;",
      "1333:  if (yych <= '/') goto yy18;",
      "1336:  ++YYCURSOR;",
      "1338:  {",
      "1346:   return 0;",
      "1347:  }",
      "1350:   return 0;",
      "1351:  }",
      "1356:  }",
      "1360:  return 1;",
      "1361: }",
      "1373: yy96:",
      "1374:  yych = *++YYCURSOR;",
      "1375:  if (yych <= '/') goto yy18;",
      "1377: yy97:",
      "1378:  ++YYCURSOR;",
      "1386:  {",
      "1404:  } else {",
      "1407:  }",
      "1409:  return 1;",
      "1410: }",
      "1412: }",
      "1416:  return 0;",
      "",
      "[Removed Lines]",
      "1163: #line 1164 \"ext/standard/var_unserializer.c\"",
      "1164: yy65:",
      "1167:   if (yych != '+') goto yy18;",
      "1169:   if (yych <= '-') goto yy66;",
      "1171:   if (yych <= '9') goto yy67;",
      "1174: yy66:",
      "1176:  if (yych <= ',') {",
      "1177:   if (yych == '+') goto yy69;",
      "1178:   goto yy18;",
      "1179:  } else {",
      "1180:   if (yych <= '-') goto yy69;",
      "1181:   if (yych <= '/') goto yy18;",
      "1182:   if (yych >= ':') goto yy18;",
      "1183:  }",
      "1184: yy67:",
      "1185:  ++YYCURSOR;",
      "1186:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
      "1187:  yych = *YYCURSOR;",
      "1188:  if (yych <= '/') goto yy18;",
      "1189:  if (yych <= '9') goto yy67;",
      "1190:  if (yych == ';') goto yy63;",
      "1192: yy69:",
      "1194:  if (yych <= '/') goto yy18;",
      "1195:  if (yych <= '9') goto yy67;",
      "1197: yy70:",
      "1199:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
      "1200:  yych = *YYCURSOR;",
      "1201:  if (yych <= ';') {",
      "1202:   if (yych <= '/') goto yy18;",
      "1203:   if (yych <= '9') goto yy70;",
      "1204:   if (yych <= ':') goto yy18;",
      "1205:   goto yy63;",
      "1206:  } else {",
      "1207:   if (yych <= 'E') {",
      "1208:    if (yych <= 'D') goto yy18;",
      "1209:    goto yy65;",
      "1211:    if (yych == 'e') goto yy65;",
      "1212:    goto yy18;",
      "1215: yy72:",
      "1216:  yych = *++YYCURSOR;",
      "1217:  if (yych != 'F') goto yy18;",
      "1218: yy73:",
      "1220:  if (yych != ';') goto yy18;",
      "1222: #line 678 \"ext/standard/var_unserializer.re\"",
      "1226:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
      "1227:   ZVAL_DOUBLE(rval, php_get_nan());",
      "1228:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
      "1229:   ZVAL_DOUBLE(rval, php_get_inf());",
      "1230:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
      "1231:   ZVAL_DOUBLE(rval, -php_get_inf());",
      "1232:  } else {",
      "1233:   ZVAL_NULL(rval);",
      "1238: #line 1239 \"ext/standard/var_unserializer.c\"",
      "1239: yy76:",
      "1241:  if (yych == 'N') goto yy73;",
      "1243: yy77:",
      "1244:  yych = *++YYCURSOR;",
      "1245:  if (yych <= ',') {",
      "1246:   if (yych != '+') goto yy18;",
      "1247:  } else {",
      "1248:   if (yych <= '-') goto yy78;",
      "1249:   if (yych <= '/') goto yy18;",
      "1250:   if (yych <= '9') goto yy79;",
      "1251:   goto yy18;",
      "1252:  }",
      "1253: yy78:",
      "1254:  yych = *++YYCURSOR;",
      "1255:  if (yych <= '/') goto yy18;",
      "1256:  if (yych >= ':') goto yy18;",
      "1257: yy79:",
      "1259:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
      "1260:  yych = *YYCURSOR;",
      "1261:  if (yych <= '/') goto yy18;",
      "1262:  if (yych <= '9') goto yy79;",
      "1263:  if (yych != ';') goto yy18;",
      "1264:  ++YYCURSOR;",
      "1265: #line 652 \"ext/standard/var_unserializer.re\"",
      "1267: #if SIZEOF_ZEND_LONG == 4",
      "1268:  int digits = YYCURSOR - start - 3;",
      "1270:  if (start[2] == '-' || start[2] == '+') {",
      "1271:   digits--;",
      "1275:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
      "1276:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
      "1277:    int cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
      "1279:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
      "1280:     goto use_double;",
      "1282:   } else {",
      "1283:    goto use_double;",
      "1285:  }",
      "1286: #endif",
      "1288:  ZVAL_LONG(rval, parse_iv(start + 2));",
      "1289:  return 1;",
      "1291: #line 1292 \"ext/standard/var_unserializer.c\"",
      "1292: yy83:",
      "1293:  yych = *++YYCURSOR;",
      "1294:  if (yych <= '/') goto yy18;",
      "1295:  if (yych >= '2') goto yy18;",
      "1296:  yych = *++YYCURSOR;",
      "1297:  if (yych != ';') goto yy18;",
      "1299: #line 646 \"ext/standard/var_unserializer.re\"",
      "1302:  ZVAL_BOOL(rval, parse_iv(start + 2));",
      "1305: #line 1306 \"ext/standard/var_unserializer.c\"",
      "1306: yy87:",
      "1308: #line 640 \"ext/standard/var_unserializer.re\"",
      "1311:  ZVAL_NULL(rval);",
      "1312:  return 1;",
      "1314: #line 1315 \"ext/standard/var_unserializer.c\"",
      "1315: yy89:",
      "1318:   if (yych != '+') goto yy18;",
      "1320:   if (yych <= '-') goto yy90;",
      "1322:   if (yych <= '9') goto yy91;",
      "1323:   goto yy18;",
      "1325: yy90:",
      "1326:  yych = *++YYCURSOR;",
      "1327:  if (yych <= '/') goto yy18;",
      "1328:  if (yych >= ':') goto yy18;",
      "1329: yy91:",
      "1334:  if (yych <= '9') goto yy91;",
      "1335:  if (yych != ';') goto yy18;",
      "1337: #line 615 \"ext/standard/var_unserializer.re\"",
      "1339:  zend_long id;",
      "1342:  if (!var_hash) return 0;",
      "1344:  id = parse_iv(start + 2) - 1;",
      "1345:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
      "1349:  if (rval_ref == rval) {",
      "1353:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
      "1354:   ZVAL_UNDEF(rval);",
      "1355:   return 1;",
      "1358:  ZVAL_COPY(rval, rval_ref);",
      "1362: #line 1363 \"ext/standard/var_unserializer.c\"",
      "1363: yy95:",
      "1364:  yych = *++YYCURSOR;",
      "1365:  if (yych <= ',') {",
      "1366:   if (yych != '+') goto yy18;",
      "1367:  } else {",
      "1368:   if (yych <= '-') goto yy96;",
      "1369:   if (yych <= '/') goto yy18;",
      "1370:   if (yych <= '9') goto yy97;",
      "1371:   goto yy18;",
      "1372:  }",
      "1376:  if (yych >= ':') goto yy18;",
      "1379:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
      "1380:  yych = *YYCURSOR;",
      "1381:  if (yych <= '/') goto yy18;",
      "1382:  if (yych <= '9') goto yy97;",
      "1383:  if (yych != ';') goto yy18;",
      "1384:  ++YYCURSOR;",
      "1385: #line 589 \"ext/standard/var_unserializer.re\"",
      "1387:  zend_long id;",
      "1390:  if (!var_hash) return 0;",
      "1392:  id = parse_iv(start + 2) - 1;",
      "1393:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
      "1394:   return 0;",
      "1395:  }",
      "1397:  zval_ptr_dtor(rval);",
      "1398:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
      "1399:   ZVAL_UNDEF(rval);",
      "1400:   return 1;",
      "1401:  }",
      "1402:  if (Z_ISREF_P(rval_ref)) {",
      "1403:   ZVAL_COPY(rval, rval_ref);",
      "1405:   ZVAL_NEW_REF(rval_ref, rval_ref);",
      "1406:   ZVAL_COPY(rval, rval_ref);",
      "1411: #line 1412 \"ext/standard/var_unserializer.c\"",
      "1413: #line 964 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1027: #line 1028 \"ext/standard/var_unserializer.c\"",
      "1028: yy73:",
      "1031:   if (yych == '+') goto yy88;",
      "1032:   goto yy18;",
      "1034:   if (yych <= '-') goto yy88;",
      "1036:   if (yych <= '9') goto yy89;",
      "1039: yy74:",
      "1041:  if (yych == 'F') goto yy91;",
      "1043: yy75:",
      "1045:  if (yych == 'N') goto yy91;",
      "1047: yy76:",
      "1049: #line 641 \"ext/standard/var_unserializer.re\"",
      "1050:  {",
      "1051: #if SIZEOF_ZEND_LONG == 4",
      "1052:  int digits = YYCURSOR - start - 3;",
      "1054:  if (start[2] == '-' || start[2] == '+') {",
      "1055:   digits--;",
      "1056:  }",
      "1059:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
      "1060:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
      "1061:    int cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
      "1063:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
      "1064:     goto use_double;",
      "1065:    }",
      "1067:    goto use_double;",
      "1070: #endif",
      "1072:  ZVAL_LONG(rval, parse_iv(start + 2));",
      "1073:  return 1;",
      "1074: }",
      "1075: #line 1076 \"ext/standard/var_unserializer.c\"",
      "1076: yy78:",
      "1078:  if (yych == '\"') goto yy92;",
      "1079:  goto yy18;",
      "1080: yy79:",
      "1082: #line 605 \"ext/standard/var_unserializer.re\"",
      "1084:  zend_long id;",
      "1087:  if (!var_hash) return 0;",
      "1089:  id = parse_iv(start + 2) - 1;",
      "1090:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
      "1091:   return 0;",
      "1092:  }",
      "1094:  if (rval_ref == rval) {",
      "1095:   return 0;",
      "1098:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
      "1099:   return 0;",
      "1100:  }",
      "1102:  ZVAL_COPY(rval, rval_ref);",
      "1106: #line 1107 \"ext/standard/var_unserializer.c\"",
      "1107: yy81:",
      "1109:  if (yych == '\"') goto yy94;",
      "1111: yy82:",
      "1113: #line 793 \"ext/standard/var_unserializer.re\"",
      "1115:  size_t len, len2, len3, maxlen;",
      "1116:  zend_long elements;",
      "1117:  char *str;",
      "1118:  zend_string *class_name;",
      "1119:  zend_class_entry *ce;",
      "1120:  int incomplete_class = 0;",
      "1122:  int custom_object = 0;",
      "1124:  zval user_func;",
      "1125:  zval retval;",
      "1126:  zval args[1];",
      "1128:     if (!var_hash) return 0;",
      "1129:  if (*start == 'C') {",
      "1130:   custom_object = 1;",
      "1133:  len2 = len = parse_uiv(start + 2);",
      "1134:  maxlen = max - YYCURSOR;",
      "1135:  if (maxlen < len || len == 0) {",
      "1137:   return 0;",
      "1138:  }",
      "1140:  str = (char*)YYCURSOR;",
      "1142:  YYCURSOR += len;",
      "1144:  if (*(YYCURSOR) != '\"') {",
      "1146:   return 0;",
      "1147:  }",
      "1148:  if (*(YYCURSOR+1) != ':') {",
      "1150:   return 0;",
      "1151:  }",
      "1153:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
      "1154:  if (len3 != len)",
      "1155:  {",
      "1157:   return 0;",
      "1158:  }",
      "1160:  class_name = zend_string_init(str, len, 0);",
      "1162:  do {",
      "1163:   if(!unserialize_allowed_class(class_name, classes)) {",
      "1164:    incomplete_class = 1;",
      "1165:    ce = PHP_IC_ENTRY;",
      "1166:    break;",
      "1167:   }",
      "1170:   BG(serialize_lock)++;",
      "1171:   ce = zend_lookup_class(class_name);",
      "1172:   if (ce) {",
      "1173:    BG(serialize_lock)--;",
      "1174:    if (EG(exception)) {",
      "1175:     zend_string_release(class_name);",
      "1176:     return 0;",
      "1178:    break;",
      "1180:   BG(serialize_lock)--;",
      "1182:   if (EG(exception)) {",
      "1183:    zend_string_release(class_name);",
      "1184:    return 0;",
      "1185:   }",
      "1188:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
      "1189:    incomplete_class = 1;",
      "1190:    ce = PHP_IC_ENTRY;",
      "1191:    break;",
      "1192:   }",
      "1195:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
      "1197:   ZVAL_STR_COPY(&args[0], class_name);",
      "1198:   BG(serialize_lock)++;",
      "1199:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
      "1200:    BG(serialize_lock)--;",
      "1201:    if (EG(exception)) {",
      "1202:     zend_string_release(class_name);",
      "1203:     zval_ptr_dtor(&user_func);",
      "1204:     zval_ptr_dtor(&args[0]);",
      "1205:     return 0;",
      "1206:    }",
      "1207:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
      "1208:    incomplete_class = 1;",
      "1209:    ce = PHP_IC_ENTRY;",
      "1210:    zval_ptr_dtor(&user_func);",
      "1211:    zval_ptr_dtor(&args[0]);",
      "1212:    break;",
      "1213:   }",
      "1214:   BG(serialize_lock)--;",
      "1215:   zval_ptr_dtor(&retval);",
      "1216:   if (EG(exception)) {",
      "1217:    zend_string_release(class_name);",
      "1218:    zval_ptr_dtor(&user_func);",
      "1219:    zval_ptr_dtor(&args[0]);",
      "1220:    return 0;",
      "1221:   }",
      "1224:   BG(serialize_lock)++;",
      "1225:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
      "1226:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
      "1227:    incomplete_class = 1;",
      "1228:    ce = PHP_IC_ENTRY;",
      "1229:   }",
      "1230:   BG(serialize_lock)--;",
      "1232:   zval_ptr_dtor(&user_func);",
      "1233:   zval_ptr_dtor(&args[0]);",
      "1234:   break;",
      "1235:  } while (1);",
      "1239:  if (custom_object) {",
      "1240:   int ret;",
      "1242:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
      "1244:   if (ret && incomplete_class) {",
      "1245:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
      "1246:   }",
      "1247:   zend_string_release(class_name);",
      "1248:   return ret;",
      "1249:  }",
      "1251:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
      "1253:  if (elements < 0) {",
      "1254:     zend_string_release(class_name);",
      "1255:     return 0;",
      "1256:  }",
      "1258:  if (incomplete_class) {",
      "1259:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
      "1260:  }",
      "1261:  zend_string_release(class_name);",
      "1263:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
      "1265: #line 1266 \"ext/standard/var_unserializer.c\"",
      "1266: yy84:",
      "1268: #line 724 \"ext/standard/var_unserializer.re\"",
      "1270:  size_t len, maxlen;",
      "1271:  zend_string *str;",
      "1273:  len = parse_uiv(start + 2);",
      "1274:  maxlen = max - YYCURSOR;",
      "1275:  if (maxlen < len) {",
      "1277:   return 0;",
      "1278:  }",
      "1280:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
      "1281:   return 0;",
      "1282:  }",
      "1284:  if (*(YYCURSOR) != '\"') {",
      "1285:   zend_string_free(str);",
      "1287:   return 0;",
      "1288:  }",
      "1290:  if (*(YYCURSOR + 1) != ';') {",
      "1291:   efree(str);",
      "1293:   return 0;",
      "1294:  }",
      "1296:  YYCURSOR += 2;",
      "1299:  ZVAL_STR(rval, str);",
      "1302: #line 1303 \"ext/standard/var_unserializer.c\"",
      "1303: yy86:",
      "1305: #line 758 \"ext/standard/var_unserializer.re\"",
      "1307:  zend_long elements = parse_iv(start + 2);",
      "1310:     if (!var_hash) return 0;",
      "1312:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
      "1313:   return 0;",
      "1314:  }",
      "1316:  array_init_size(rval, elements);",
      "1317:  if (elements) {",
      "1320:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
      "1321:  }",
      "1323:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
      "1324:   return 0;",
      "1325:  }",
      "1327:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
      "1329: #line 1330 \"ext/standard/var_unserializer.c\"",
      "1330: yy88:",
      "1333:   if (yych == '+') goto yy96;",
      "1334:   goto yy18;",
      "1336:   if (yych <= '-') goto yy96;",
      "1338:   if (yych >= ':') goto yy18;",
      "1340: yy89:",
      "1345:  if (yych <= '9') goto yy89;",
      "1346:  if (yych == ';') goto yy71;",
      "1347:  goto yy18;",
      "1348: yy91:",
      "1349:  yych = *++YYCURSOR;",
      "1350:  if (yych == ';') goto yy97;",
      "1351:  goto yy18;",
      "1352: yy92:",
      "1354: #line 782 \"ext/standard/var_unserializer.re\"",
      "1356:  zend_long elements;",
      "1357:     if (!var_hash) return 0;",
      "1359:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
      "1360:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
      "1361:   return 0;",
      "1362:  }",
      "1363:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
      "1364: }",
      "1365: #line 1366 \"ext/standard/var_unserializer.c\"",
      "1366: yy94:",
      "1367:  ++YYCURSOR;",
      "1368: #line 692 \"ext/standard/var_unserializer.re\"",
      "1369:  {",
      "1370:  size_t len, maxlen;",
      "1371:  char *str;",
      "1373:  len = parse_uiv(start + 2);",
      "1374:  maxlen = max - YYCURSOR;",
      "1375:  if (maxlen < len) {",
      "1380:  str = (char*)YYCURSOR;",
      "1382:  YYCURSOR += len;",
      "1384:  if (*(YYCURSOR) != '\"') {",
      "1389:  if (*(YYCURSOR + 1) != ';') {",
      "1391:   return 0;",
      "1394:  YYCURSOR += 2;",
      "1397:  ZVAL_STRINGL(rval, str, len);",
      "1400: #line 1401 \"ext/standard/var_unserializer.c\"",
      "1404:  if (yych <= '9') goto yy89;",
      "1405:  goto yy18;",
      "1408: #line 667 \"ext/standard/var_unserializer.re\"",
      "1412:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
      "1413:   ZVAL_DOUBLE(rval, php_get_nan());",
      "1414:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
      "1415:   ZVAL_DOUBLE(rval, php_get_inf());",
      "1416:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
      "1417:   ZVAL_DOUBLE(rval, -php_get_inf());",
      "1419:   ZVAL_NULL(rval);",
      "1424: #line 1425 \"ext/standard/var_unserializer.c\"",
      "1426: #line 953 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------"
    ],
    "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
      "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
      "--- Hunk 1 ---",
      "[Context before]",
      "409:    return 0;",
      "410:   }",
      "422:   zval_dtor(&key);",
      "424:   if (elements && *(*p-1) != ';' && *(*p-1) != '}') {",
      "",
      "[Removed Lines]",
      "412:   if (UNEXPECTED(Z_ISUNDEF_P(data))) {",
      "413:    if (Z_TYPE(key) == IS_LONG) {",
      "414:     zend_hash_index_del(ht, Z_LVAL(key));",
      "415:    } else {",
      "416:     zend_hash_del_ind(ht, Z_STR(key));",
      "417:    }",
      "418:   } else {",
      "419:    var_push_dtor(var_hash, data);",
      "420:   }",
      "",
      "[Added Lines]",
      "412:   var_push_dtor(var_hash, data);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "597:   return 0;",
      "598:  }",
      "601:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
      "604:  }",
      "605:  if (Z_ISREF_P(rval_ref)) {",
      "606:   ZVAL_COPY(rval, rval_ref);",
      "607:  } else {",
      "",
      "[Removed Lines]",
      "600:  zval_ptr_dtor(rval);",
      "602:   ZVAL_UNDEF(rval);",
      "603:   return 1;",
      "",
      "[Added Lines]",
      "592:   return 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "628:  }",
      "630:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
      "633:  }",
      "635:  ZVAL_COPY(rval, rval_ref);",
      "",
      "[Removed Lines]",
      "631:   ZVAL_UNDEF(rval);",
      "632:   return 1;",
      "",
      "[Added Lines]",
      "621:   return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8d8e94936959eb2466ec77d1e537427f92650363",
      "candidate_info": {
        "commit_hash": "8d8e94936959eb2466ec77d1e537427f92650363",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/8d8e94936959eb2466ec77d1e537427f92650363",
        "files": [
          "ext/standard/tests/serialize/bug70963.phpt",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Merge branch 'PHP-7.0' into PHP-7.1",
        "before_after_code_files": [
          "ext/standard/tests/serialize/bug70963.phpt||ext/standard/tests/serialize/bug70963.phpt",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "ext/standard/tests/serialize/bug70963.phpt||ext/standard/tests/serialize/bug70963.phpt": [
          "File: ext/standard/tests/serialize/bug70963.phpt -> ext/standard/tests/serialize/bug70963.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: var_dump(unserialize('a:2:{i:0;O:9:\"exception\":1:{s:16:\"'.\"\\0\".'Exception'.\"\\0\".'trace\";s:4:\"test\";}i:1;r:3;}'));",
          "7: ?>",
          "8: --EXPECTF--",
          "10:   [0]=>",
          "11:   object(Exception)#%d (6) {",
          "12:     [\"message\":protected]=>",
          "",
          "[Removed Lines]",
          "9: array(1) {",
          "",
          "[Added Lines]",
          "9: array(2) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22:     [\"previous\":\"Exception\":private]=>",
          "23:     NULL",
          "24:   }",
          "25: }",
          "27:   [0]=>",
          "28:   object(Exception)#%d (6) {",
          "29:     [\"message\":protected]=>",
          "",
          "[Removed Lines]",
          "26: array(1) {",
          "",
          "[Added Lines]",
          "25:   [1]=>",
          "26:   string(4) \"test\"",
          "28: array(2) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "39:     [\"previous\":\"Exception\":private]=>",
          "40:     NULL",
          "41:   }",
          "42: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:   [1]=>",
          "45:   string(4) \"test\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "71: #define VAR_ENTRIES_MAX 1024",
          "72: #define VAR_ENTRIES_DBG 0",
          "74: typedef struct {",
          "75:  zval *data[VAR_ENTRIES_MAX];",
          "76:  zend_long used_slots;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "75: #define VAR_WAKEUP_FLAG 1",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "139:         (*var_hashx)->last_dtor = var_hash;",
          "140:     }",
          "141:     ZVAL_UNDEF(&var_hash->data[var_hash->used_slots]);",
          "142:     return &var_hash->data[var_hash->used_slots++];",
          "143: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "145:  Z_ACCESS_FLAGS(var_hash->data[var_hash->used_slots]) = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "186:  zend_long i;",
          "187:  var_entries *var_hash = (*var_hashx)->first;",
          "188:  var_dtor_entries *var_dtor_hash = (*var_hashx)->first_dtor;",
          "189: #if VAR_ENTRIES_DBG",
          "190:  fprintf(stderr, \"var_destroy(%ld)\\n\", var_hash?var_hash->used_slots:-1L);",
          "191: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "193:  zend_bool wakeup_failed = 0;",
          "194:  zval wakeup_name;",
          "195:  ZVAL_UNDEF(&wakeup_name);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "199:  while (var_dtor_hash) {",
          "200:   for (i = 0; i < var_dtor_hash->used_slots; i++) {",
          "201: #if VAR_ENTRIES_DBG",
          "202:    fprintf(stderr, \"var_destroy dtor(%p, %ld)\\n\", var_dtor_hash->data[i], Z_REFCOUNT_P(var_dtor_hash->data[i]));",
          "203: #endif",
          "205:   }",
          "206:   next = var_dtor_hash->next;",
          "207:   efree_size(var_dtor_hash, sizeof(var_dtor_entries));",
          "208:   var_dtor_hash = next;",
          "209:  }",
          "210: }",
          "",
          "[Removed Lines]",
          "204:    zval_ptr_dtor(&var_dtor_hash->data[i]);",
          "",
          "[Added Lines]",
          "209:    zval *zv = &var_dtor_hash->data[i];",
          "215:    if (Z_ACCESS_FLAGS_P(zv) == VAR_WAKEUP_FLAG) {",
          "216:     if (!wakeup_failed) {",
          "217:      zval retval;",
          "218:      if (Z_ISUNDEF(wakeup_name)) {",
          "219:       ZVAL_STRINGL(&wakeup_name, \"__wakeup\", sizeof(\"__wakeup\") - 1);",
          "220:      }",
          "222:      BG(serialize_lock)++;",
          "223:      if (call_user_function_ex(CG(function_table), zv, &wakeup_name, &retval, 0, 0, 1, NULL) == FAILURE || Z_ISUNDEF(retval)) {",
          "224:       wakeup_failed = 1;",
          "225:       GC_FLAGS(Z_OBJ_P(zv)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "226:      }",
          "227:      BG(serialize_lock)--;",
          "229:      zval_ptr_dtor(&retval);",
          "230:     } else {",
          "231:      GC_FLAGS(Z_OBJ_P(zv)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "232:     }",
          "233:    }",
          "235:    zval_ptr_dtor(zv);",
          "242:  zval_ptr_dtor(&wakeup_name);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "283: #define YYMARKER marker",
          "",
          "[Removed Lines]",
          "286: #line 291 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "319: #line 324 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "504: #endif",
          "505: static inline int object_common2(UNSERIALIZE_PARAMETER, zend_long elements)",
          "506: {",
          "509:  HashTable *ht;",
          "510:  zend_bool has_wakeup;",
          "",
          "[Removed Lines]",
          "507:  zval retval;",
          "508:  zval fname;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "529:  ZVAL_DEREF(rval);",
          "530:  if (has_wakeup) {",
          "543:  }",
          "545:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "",
          "[Removed Lines]",
          "531:   ZVAL_STRINGL(&fname, \"__wakeup\", sizeof(\"__wakeup\") - 1);",
          "532:   BG(serialize_lock)++;",
          "533:   if (call_user_function_ex(CG(function_table), rval, &fname, &retval, 0, 0, 1, NULL) == FAILURE || Z_ISUNDEF(retval)) {",
          "534:    GC_FLAGS(Z_OBJ_P(rval)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "535:   }",
          "536:   BG(serialize_lock)--;",
          "537:   zval_dtor(&fname);",
          "538:   zval_dtor(&retval);",
          "539:  }",
          "541:  if (EG(exception)) {",
          "542:   return 0;",
          "",
          "[Added Lines]",
          "563:   zval *wakeup_var = var_tmp_var(var_hash);",
          "564:   ZVAL_COPY(wakeup_var, rval);",
          "565:   Z_ACCESS_FLAGS_P(wakeup_var) = VAR_WAKEUP_FLAG;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "594:  start = cursor;",
          "598: {",
          "599:  YYCTYPE yych;",
          "600:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "597: #line 598 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "620: #line 621 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "631:     0,   0,   0,   0,   0,   0,   0,   0,",
          "632:     0,   0,   0,   0,   0,   0,   0,   0,",
          "633:  };",
          "635:  if ((YYLIMIT - YYCURSOR) < 7) YYFILL(7);",
          "636:  yych = *YYCURSOR;",
          "637:  switch (yych) {",
          "638:  case 'C':",
          "640:  case 'N': goto yy5;",
          "647:  case 'o': goto yy12;",
          "652:  }",
          "653: yy2:",
          "656: yy3:",
          "658:  { return 0; }",
          "660: yy4:",
          "661:  yych = *(YYMARKER = ++YYCURSOR);",
          "663:  goto yy3;",
          "664: yy5:",
          "665:  yych = *++YYCURSOR;",
          "667:  goto yy3;",
          "668: yy6:",
          "669:  yych = *(YYMARKER = ++YYCURSOR);",
          "671:  goto yy3;",
          "672: yy7:",
          "673:  yych = *(YYMARKER = ++YYCURSOR);",
          "675:  goto yy3;",
          "676: yy8:",
          "677:  yych = *(YYMARKER = ++YYCURSOR);",
          "679:  goto yy3;",
          "680: yy9:",
          "681:  yych = *(YYMARKER = ++YYCURSOR);",
          "683:  goto yy3;",
          "684: yy10:",
          "685:  yych = *(YYMARKER = ++YYCURSOR);",
          "687:  goto yy3;",
          "688: yy11:",
          "689:  yych = *(YYMARKER = ++YYCURSOR);",
          "691:  goto yy3;",
          "692: yy12:",
          "693:  yych = *(YYMARKER = ++YYCURSOR);",
          "695:  goto yy3;",
          "696: yy13:",
          "697:  yych = *(YYMARKER = ++YYCURSOR);",
          "699:  goto yy3;",
          "700: yy14:",
          "701:  ++YYCURSOR;",
          "703:  {",
          "705:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "707: }",
          "712: yy17:",
          "713:  yych = *++YYCURSOR;",
          "714:  if (yybm[0+yych] & 128) {",
          "716:  }",
          "718: yy18:",
          "719:  YYCURSOR = YYMARKER;",
          "720:  goto yy3;",
          "721: yy19:",
          "722:  yych = *++YYCURSOR;",
          "725:  }",
          "726:  goto yy18;",
          "734:  if (yych <= '/') goto yy18;",
          "736:  yych = *++YYCURSOR;",
          "855:   }",
          "872:   }",
          "875:  }",
          "882:  }",
          "886:  }",
          "893:  yych = *++YYCURSOR;",
          "894:  if (yych <= ',') {",
          "896:  } else {",
          "898:   if (yych <= '/') goto yy18;",
          "900:   goto yy18;",
          "901:  }",
          "903:  yych = *++YYCURSOR;",
          "904:  if (yych <= '/') goto yy18;",
          "907:  ++YYCURSOR;",
          "908:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "909:  yych = *YYCURSOR;",
          "924:  }",
          "931:  if (yych <= '/') goto yy18;",
          "933:  goto yy18;",
          "934: yy33:",
          "935:  yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "639:  case 'O': goto yy13;",
          "641:  case 'R': goto yy2;",
          "642:  case 'S': goto yy10;",
          "643:  case 'a': goto yy11;",
          "644:  case 'b': goto yy6;",
          "645:  case 'd': goto yy8;",
          "646:  case 'i': goto yy7;",
          "648:  case 'r': goto yy4;",
          "649:  case 's': goto yy9;",
          "650:  case '}': goto yy14;",
          "651:  default: goto yy16;",
          "654:  yych = *(YYMARKER = ++YYCURSOR);",
          "655:  if (yych == ':') goto yy95;",
          "657: #line 975 \"ext/standard/var_unserializer.re\"",
          "659: #line 660 \"ext/standard/var_unserializer.c\"",
          "662:  if (yych == ':') goto yy89;",
          "666:  if (yych == ';') goto yy87;",
          "670:  if (yych == ':') goto yy83;",
          "674:  if (yych == ':') goto yy77;",
          "678:  if (yych == ':') goto yy53;",
          "682:  if (yych == ':') goto yy46;",
          "686:  if (yych == ':') goto yy39;",
          "690:  if (yych == ':') goto yy32;",
          "694:  if (yych == ':') goto yy25;",
          "698:  if (yych == ':') goto yy17;",
          "702: #line 969 \"ext/standard/var_unserializer.re\"",
          "708: #line 709 \"ext/standard/var_unserializer.c\"",
          "709: yy16:",
          "710:  yych = *++YYCURSOR;",
          "711:  goto yy3;",
          "715:   goto yy20;",
          "717:  if (yych == '+') goto yy19;",
          "723:  if (yybm[0+yych] & 128) {",
          "724:   goto yy20;",
          "727: yy20:",
          "728:  ++YYCURSOR;",
          "729:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "730:  yych = *YYCURSOR;",
          "731:  if (yybm[0+yych] & 128) {",
          "732:   goto yy20;",
          "733:  }",
          "735:  if (yych >= ';') goto yy18;",
          "737:  if (yych != '\"') goto yy18;",
          "738:  ++YYCURSOR;",
          "739: #line 817 \"ext/standard/var_unserializer.re\"",
          "740:  {",
          "741:  size_t len, len2, len3, maxlen;",
          "742:  zend_long elements;",
          "743:  char *str;",
          "744:  zend_string *class_name;",
          "745:  zend_class_entry *ce;",
          "746:  int incomplete_class = 0;",
          "748:  int custom_object = 0;",
          "750:  zval user_func;",
          "751:  zval retval;",
          "752:  zval args[1];",
          "754:     if (!var_hash) return 0;",
          "755:  if (*start == 'C') {",
          "756:   custom_object = 1;",
          "757:  }",
          "759:  len2 = len = parse_uiv(start + 2);",
          "760:  maxlen = max - YYCURSOR;",
          "761:  if (maxlen < len || len == 0) {",
          "763:   return 0;",
          "764:  }",
          "766:  str = (char*)YYCURSOR;",
          "768:  YYCURSOR += len;",
          "770:  if (*(YYCURSOR) != '\"') {",
          "772:   return 0;",
          "773:  }",
          "774:  if (*(YYCURSOR+1) != ':') {",
          "776:   return 0;",
          "777:  }",
          "779:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "780:  if (len3 != len)",
          "781:  {",
          "783:   return 0;",
          "784:  }",
          "786:  class_name = zend_string_init(str, len, 0);",
          "788:  do {",
          "789:   if(!unserialize_allowed_class(class_name, var_hash)) {",
          "790:    incomplete_class = 1;",
          "791:    ce = PHP_IC_ENTRY;",
          "792:    break;",
          "793:   }",
          "796:   BG(serialize_lock)++;",
          "797:   ce = zend_lookup_class(class_name);",
          "798:   if (ce) {",
          "799:    BG(serialize_lock)--;",
          "800:    if (EG(exception)) {",
          "801:     zend_string_release(class_name);",
          "802:     return 0;",
          "803:    }",
          "804:    break;",
          "805:   }",
          "806:   BG(serialize_lock)--;",
          "808:   if (EG(exception)) {",
          "809:    zend_string_release(class_name);",
          "810:    return 0;",
          "811:   }",
          "814:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "815:    incomplete_class = 1;",
          "816:    ce = PHP_IC_ENTRY;",
          "817:    break;",
          "818:   }",
          "821:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "823:   ZVAL_STR_COPY(&args[0], class_name);",
          "824:   BG(serialize_lock)++;",
          "825:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "826:    BG(serialize_lock)--;",
          "827:    if (EG(exception)) {",
          "828:     zend_string_release(class_name);",
          "829:     zval_ptr_dtor(&user_func);",
          "830:     zval_ptr_dtor(&args[0]);",
          "831:     return 0;",
          "832:    }",
          "833:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "834:    incomplete_class = 1;",
          "835:    ce = PHP_IC_ENTRY;",
          "836:    zval_ptr_dtor(&user_func);",
          "837:    zval_ptr_dtor(&args[0]);",
          "838:    break;",
          "839:   }",
          "840:   BG(serialize_lock)--;",
          "841:   zval_ptr_dtor(&retval);",
          "842:   if (EG(exception)) {",
          "843:    zend_string_release(class_name);",
          "844:    zval_ptr_dtor(&user_func);",
          "845:    zval_ptr_dtor(&args[0]);",
          "846:    return 0;",
          "847:   }",
          "850:   BG(serialize_lock)++;",
          "851:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "852:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "853:    incomplete_class = 1;",
          "854:    ce = PHP_IC_ENTRY;",
          "856:   BG(serialize_lock)--;",
          "858:   zval_ptr_dtor(&user_func);",
          "859:   zval_ptr_dtor(&args[0]);",
          "860:   break;",
          "861:  } while (1);",
          "865:  if (custom_object) {",
          "866:   int ret;",
          "868:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "870:   if (ret && incomplete_class) {",
          "871:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "873:   zend_string_release(class_name);",
          "874:   return ret;",
          "877:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "879:  if (elements < 0) {",
          "880:     zend_string_release(class_name);",
          "881:     return 0;",
          "884:  if (incomplete_class) {",
          "885:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "887:  zend_string_release(class_name);",
          "889:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "890: }",
          "891: #line 892 \"ext/standard/var_unserializer.c\"",
          "892: yy25:",
          "895:   if (yych != '+') goto yy18;",
          "897:   if (yych <= '-') goto yy26;",
          "899:   if (yych <= '9') goto yy27;",
          "902: yy26:",
          "905:  if (yych >= ':') goto yy18;",
          "906: yy27:",
          "910:  if (yych <= '/') goto yy18;",
          "911:  if (yych <= '9') goto yy27;",
          "912:  if (yych >= ';') goto yy18;",
          "913:  yych = *++YYCURSOR;",
          "914:  if (yych != '\"') goto yy18;",
          "915:  ++YYCURSOR;",
          "916: #line 806 \"ext/standard/var_unserializer.re\"",
          "917:  {",
          "918:  long elements;",
          "919:     if (!var_hash) return 0;",
          "921:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "922:  if (elements < 0) {",
          "923:   return 0;",
          "925:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "926: }",
          "927: #line 928 \"ext/standard/var_unserializer.c\"",
          "928: yy32:",
          "929:  yych = *++YYCURSOR;",
          "930:  if (yych == '+') goto yy33;",
          "932:  if (yych <= '9') goto yy34;",
          "",
          "[Added Lines]",
          "661:  case 'O': goto yy4;",
          "663:  case 'R': goto yy6;",
          "664:  case 'S': goto yy7;",
          "665:  case 'a': goto yy8;",
          "666:  case 'b': goto yy9;",
          "667:  case 'd': goto yy10;",
          "668:  case 'i': goto yy11;",
          "670:  case 'r': goto yy13;",
          "671:  case 's': goto yy14;",
          "672:  case '}': goto yy15;",
          "673:  default: goto yy2;",
          "676:  ++YYCURSOR;",
          "678: #line 998 \"ext/standard/var_unserializer.re\"",
          "680: #line 681 \"ext/standard/var_unserializer.c\"",
          "683:  if (yych == ':') goto yy17;",
          "687:  if (yych == ';') goto yy19;",
          "691:  if (yych == ':') goto yy21;",
          "695:  if (yych == ':') goto yy22;",
          "699:  if (yych == ':') goto yy23;",
          "703:  if (yych == ':') goto yy24;",
          "707:  if (yych == ':') goto yy25;",
          "711:  if (yych == ':') goto yy26;",
          "715:  if (yych == ':') goto yy27;",
          "719:  if (yych == ':') goto yy28;",
          "722:  yych = *(YYMARKER = ++YYCURSOR);",
          "723:  if (yych == ':') goto yy29;",
          "724:  goto yy3;",
          "725: yy15:",
          "727: #line 992 \"ext/standard/var_unserializer.re\"",
          "733: #line 734 \"ext/standard/var_unserializer.c\"",
          "737:   goto yy31;",
          "739:  if (yych == '+') goto yy30;",
          "744:  ++YYCURSOR;",
          "745: #line 676 \"ext/standard/var_unserializer.re\"",
          "746:  {",
          "748:  ZVAL_NULL(rval);",
          "749:  return 1;",
          "750: }",
          "751: #line 752 \"ext/standard/var_unserializer.c\"",
          "752: yy21:",
          "754:  if (yych <= ',') {",
          "755:   if (yych == '+') goto yy33;",
          "756:   goto yy18;",
          "757:  } else {",
          "758:   if (yych <= '-') goto yy33;",
          "759:   if (yych <= '/') goto yy18;",
          "760:   if (yych <= '9') goto yy34;",
          "761:   goto yy18;",
          "763: yy22:",
          "764:  yych = *++YYCURSOR;",
          "765:  if (yych == '+') goto yy36;",
          "766:  if (yych <= '/') goto yy18;",
          "767:  if (yych <= '9') goto yy37;",
          "769: yy23:",
          "770:  yych = *++YYCURSOR;",
          "771:  if (yych == '+') goto yy39;",
          "773:  if (yych <= '9') goto yy40;",
          "774:  goto yy18;",
          "775: yy24:",
          "777:  if (yych <= '/') goto yy18;",
          "778:  if (yych <= '1') goto yy42;",
          "779:  goto yy18;",
          "780: yy25:",
          "781:  yych = *++YYCURSOR;",
          "782:  if (yych <= '/') {",
          "783:   if (yych <= ',') {",
          "784:    if (yych == '+') goto yy43;",
          "785:    goto yy18;",
          "786:   } else {",
          "787:    if (yych <= '-') goto yy44;",
          "788:    if (yych <= '.') goto yy45;",
          "789:    goto yy18;",
          "791:  } else {",
          "792:   if (yych <= 'I') {",
          "793:    if (yych <= '9') goto yy46;",
          "794:    if (yych <= 'H') goto yy18;",
          "795:    goto yy48;",
          "796:   } else {",
          "797:    if (yych == 'N') goto yy49;",
          "798:    goto yy18;",
          "801: yy26:",
          "802:  yych = *++YYCURSOR;",
          "803:  if (yych <= ',') {",
          "804:   if (yych == '+') goto yy50;",
          "805:   goto yy18;",
          "806:  } else {",
          "807:   if (yych <= '-') goto yy50;",
          "808:   if (yych <= '/') goto yy18;",
          "809:   if (yych <= '9') goto yy51;",
          "810:   goto yy18;",
          "812: yy27:",
          "813:  yych = *++YYCURSOR;",
          "814:  if (yych <= ',') {",
          "815:   if (yych == '+') goto yy53;",
          "816:   goto yy18;",
          "817:  } else {",
          "818:   if (yych <= '-') goto yy53;",
          "819:   if (yych <= '/') goto yy18;",
          "820:   if (yych <= '9') goto yy54;",
          "821:   goto yy18;",
          "823: yy28:",
          "826:   if (yych == '+') goto yy56;",
          "827:   goto yy18;",
          "829:   if (yych <= '-') goto yy56;",
          "831:   if (yych <= '9') goto yy57;",
          "834: yy29:",
          "836:  if (yych == '+') goto yy59;",
          "838:  if (yych <= '9') goto yy60;",
          "839:  goto yy18;",
          "840: yy30:",
          "841:  yych = *++YYCURSOR;",
          "842:  if (yybm[0+yych] & 128) {",
          "843:   goto yy31;",
          "844:  }",
          "845:  goto yy18;",
          "846: yy31:",
          "850:  if (yybm[0+yych] & 128) {",
          "851:   goto yy31;",
          "854:  if (yych <= ':') goto yy62;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "937:  if (yych >= ':') goto yy18;",
          "938: yy34:",
          "939:  ++YYCURSOR;",
          "941:  yych = *YYCURSOR;",
          "942:  if (yych <= '/') goto yy18;",
          "943:  if (yych <= '9') goto yy34;",
          "980:  yych = *++YYCURSOR;",
          "981:  if (yych <= '/') goto yy18;",
          "982:  if (yych >= ':') goto yy18;",
          "984:  ++YYCURSOR;",
          "985:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "986:  yych = *YYCURSOR;",
          "987:  if (yych <= '/') goto yy18;",
          "1033:  goto yy18;",
          "1035:  yych = *++YYCURSOR;",
          "1036:  if (yych <= '/') goto yy18;",
          "1037:  if (yych >= ':') goto yy18;",
          "1039:  ++YYCURSOR;",
          "1040:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "1041:  yych = *YYCURSOR;",
          "1042:  if (yych <= '/') goto yy18;",
          "1082:  yych = *++YYCURSOR;",
          "1101:  yych = *++YYCURSOR;",
          "1103:  goto yy18;",
          "1105:  yych = *++YYCURSOR;",
          "1106:  if (yych <= '/') {",
          "1109:  } else {",
          "1112:  }",
          "1114:  yych = *++YYCURSOR;",
          "1120:  if (yych <= '/') goto yy18;",
          "1123:  ++YYCURSOR;",
          "1124:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1125:  yych = *YYCURSOR;",
          "1126:  if (yych <= ':') {",
          "1127:   if (yych <= '.') {",
          "1128:    if (yych <= '-') goto yy18;",
          "1130:   } else {",
          "1131:    if (yych <= '/') goto yy18;",
          "1133:    goto yy18;",
          "1134:   }",
          "1135:  } else {",
          "1136:   if (yych <= 'E') {",
          "1138:    if (yych <= 'D') goto yy18;",
          "1140:   } else {",
          "1142:    goto yy18;",
          "1143:   }",
          "1144:  }",
          "1146:  yych = *++YYCURSOR;",
          "1147:  if (yych <= '/') goto yy18;",
          "1148:  if (yych >= ':') goto yy18;",
          "1150:  ++YYCURSOR;",
          "1151:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1152:  yych = *YYCURSOR;",
          "1153:  if (yych <= ';') {",
          "1154:   if (yych <= '/') goto yy18;",
          "1156:   if (yych <= ':') goto yy18;",
          "1157:  } else {",
          "1158:   if (yych <= 'E') {",
          "1159:    if (yych <= 'D') goto yy18;",
          "1161:   } else {",
          "1163:    goto yy18;",
          "1164:   }",
          "1165:  }",
          "1167:  ++YYCURSOR;",
          "1169:  {",
          "1170: #if SIZEOF_ZEND_LONG == 4",
          "1171: use_double:",
          "",
          "[Removed Lines]",
          "940:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "944:  if (yych >= ';') goto yy18;",
          "945:  yych = *++YYCURSOR;",
          "946:  if (yych != '{') goto yy18;",
          "947:  ++YYCURSOR;",
          "948: #line 782 \"ext/standard/var_unserializer.re\"",
          "949:  {",
          "950:  zend_long elements = parse_iv(start + 2);",
          "953:     if (!var_hash) return 0;",
          "955:  if (elements < 0) {",
          "956:   return 0;",
          "957:  }",
          "959:  array_init_size(rval, elements);",
          "960:  if (elements) {",
          "963:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "964:  }",
          "966:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "967:   return 0;",
          "968:  }",
          "970:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "971: }",
          "972: #line 973 \"ext/standard/var_unserializer.c\"",
          "973: yy39:",
          "974:  yych = *++YYCURSOR;",
          "975:  if (yych == '+') goto yy40;",
          "976:  if (yych <= '/') goto yy18;",
          "977:  if (yych <= '9') goto yy41;",
          "978:  goto yy18;",
          "979: yy40:",
          "983: yy41:",
          "988:  if (yych <= '9') goto yy41;",
          "989:  if (yych >= ';') goto yy18;",
          "990:  yych = *++YYCURSOR;",
          "991:  if (yych != '\"') goto yy18;",
          "992:  ++YYCURSOR;",
          "993: #line 748 \"ext/standard/var_unserializer.re\"",
          "994:  {",
          "995:  size_t len, maxlen;",
          "996:  zend_string *str;",
          "998:  len = parse_uiv(start + 2);",
          "999:  maxlen = max - YYCURSOR;",
          "1000:  if (maxlen < len) {",
          "1002:   return 0;",
          "1003:  }",
          "1005:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "1006:   return 0;",
          "1007:  }",
          "1009:  if (*(YYCURSOR) != '\"') {",
          "1010:   zend_string_free(str);",
          "1012:   return 0;",
          "1013:  }",
          "1015:  if (*(YYCURSOR + 1) != ';') {",
          "1016:   efree(str);",
          "1018:   return 0;",
          "1019:  }",
          "1021:  YYCURSOR += 2;",
          "1024:  ZVAL_STR(rval, str);",
          "1025:  return 1;",
          "1026: }",
          "1027: #line 1028 \"ext/standard/var_unserializer.c\"",
          "1028: yy46:",
          "1029:  yych = *++YYCURSOR;",
          "1030:  if (yych == '+') goto yy47;",
          "1031:  if (yych <= '/') goto yy18;",
          "1032:  if (yych <= '9') goto yy48;",
          "1034: yy47:",
          "1038: yy48:",
          "1043:  if (yych <= '9') goto yy48;",
          "1044:  if (yych >= ';') goto yy18;",
          "1045:  yych = *++YYCURSOR;",
          "1046:  if (yych != '\"') goto yy18;",
          "1047:  ++YYCURSOR;",
          "1048: #line 716 \"ext/standard/var_unserializer.re\"",
          "1049:  {",
          "1050:  size_t len, maxlen;",
          "1051:  char *str;",
          "1053:  len = parse_uiv(start + 2);",
          "1054:  maxlen = max - YYCURSOR;",
          "1055:  if (maxlen < len) {",
          "1057:   return 0;",
          "1058:  }",
          "1060:  str = (char*)YYCURSOR;",
          "1062:  YYCURSOR += len;",
          "1064:  if (*(YYCURSOR) != '\"') {",
          "1066:   return 0;",
          "1067:  }",
          "1069:  if (*(YYCURSOR + 1) != ';') {",
          "1071:   return 0;",
          "1072:  }",
          "1074:  YYCURSOR += 2;",
          "1077:  ZVAL_STRINGL(rval, str, len);",
          "1078:  return 1;",
          "1079: }",
          "1080: #line 1081 \"ext/standard/var_unserializer.c\"",
          "1081: yy53:",
          "1083:  if (yych <= '/') {",
          "1084:   if (yych <= ',') {",
          "1085:    if (yych == '+') goto yy57;",
          "1086:    goto yy18;",
          "1087:   } else {",
          "1088:    if (yych <= '-') goto yy55;",
          "1089:    if (yych <= '.') goto yy60;",
          "1090:    goto yy18;",
          "1091:   }",
          "1092:  } else {",
          "1093:   if (yych <= 'I') {",
          "1094:    if (yych <= '9') goto yy58;",
          "1095:    if (yych <= 'H') goto yy18;",
          "1096:    goto yy56;",
          "1097:   } else {",
          "1098:    if (yych != 'N') goto yy18;",
          "1099:   }",
          "1100:  }",
          "1102:  if (yych == 'A') goto yy76;",
          "1104: yy55:",
          "1107:   if (yych == '.') goto yy60;",
          "1108:   goto yy18;",
          "1110:   if (yych <= '9') goto yy58;",
          "1111:   if (yych != 'I') goto yy18;",
          "1113: yy56:",
          "1115:  if (yych == 'N') goto yy72;",
          "1116:  goto yy18;",
          "1117: yy57:",
          "1118:  yych = *++YYCURSOR;",
          "1119:  if (yych == '.') goto yy60;",
          "1121:  if (yych >= ':') goto yy18;",
          "1122: yy58:",
          "1129:    goto yy70;",
          "1132:    if (yych <= '9') goto yy58;",
          "1137:    if (yych <= ';') goto yy63;",
          "1139:    goto yy65;",
          "1141:    if (yych == 'e') goto yy65;",
          "1145: yy60:",
          "1149: yy61:",
          "1155:   if (yych <= '9') goto yy61;",
          "1160:    goto yy65;",
          "1162:    if (yych == 'e') goto yy65;",
          "1166: yy63:",
          "1168: #line 707 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "862:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "866:  if (yych == ';') goto yy63;",
          "867:  goto yy18;",
          "868: yy36:",
          "872: yy37:",
          "877:  if (yych <= '9') goto yy37;",
          "878:  if (yych <= ':') goto yy65;",
          "880: yy39:",
          "884: yy40:",
          "889:  if (yych <= '9') goto yy40;",
          "890:  if (yych <= ':') goto yy66;",
          "891:  goto yy18;",
          "892: yy42:",
          "894:  if (yych == ';') goto yy67;",
          "895:  goto yy18;",
          "896: yy43:",
          "898:  if (yych == '.') goto yy45;",
          "899:  if (yych <= '/') goto yy18;",
          "900:  if (yych <= '9') goto yy46;",
          "902: yy44:",
          "905:   if (yych != '.') goto yy18;",
          "907:   if (yych <= '9') goto yy46;",
          "908:   if (yych == 'I') goto yy48;",
          "909:   goto yy18;",
          "911: yy45:",
          "914:  if (yych <= '9') goto yy69;",
          "915:  goto yy18;",
          "916: yy46:",
          "923:    goto yy69;",
          "926:    if (yych <= '9') goto yy46;",
          "931:    if (yych <= ';') goto yy71;",
          "933:    goto yy73;",
          "935:    if (yych == 'e') goto yy73;",
          "939: yy48:",
          "940:  yych = *++YYCURSOR;",
          "941:  if (yych == 'N') goto yy74;",
          "942:  goto yy18;",
          "943: yy49:",
          "944:  yych = *++YYCURSOR;",
          "945:  if (yych == 'A') goto yy75;",
          "946:  goto yy18;",
          "947: yy50:",
          "948:  yych = *++YYCURSOR;",
          "949:  if (yych <= '/') goto yy18;",
          "950:  if (yych >= ':') goto yy18;",
          "951: yy51:",
          "952:  ++YYCURSOR;",
          "953:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "954:  yych = *YYCURSOR;",
          "955:  if (yych <= '/') goto yy18;",
          "956:  if (yych <= '9') goto yy51;",
          "957:  if (yych == ';') goto yy76;",
          "958:  goto yy18;",
          "959: yy53:",
          "960:  yych = *++YYCURSOR;",
          "961:  if (yych <= '/') goto yy18;",
          "962:  if (yych >= ':') goto yy18;",
          "963: yy54:",
          "964:  ++YYCURSOR;",
          "965:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "966:  yych = *YYCURSOR;",
          "967:  if (yych <= '/') goto yy18;",
          "968:  if (yych <= '9') goto yy54;",
          "969:  if (yych <= ':') goto yy78;",
          "970:  goto yy18;",
          "971: yy56:",
          "972:  yych = *++YYCURSOR;",
          "973:  if (yych <= '/') goto yy18;",
          "974:  if (yych >= ':') goto yy18;",
          "975: yy57:",
          "976:  ++YYCURSOR;",
          "977:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "978:  yych = *YYCURSOR;",
          "979:  if (yych <= '/') goto yy18;",
          "980:  if (yych <= '9') goto yy57;",
          "981:  if (yych == ';') goto yy79;",
          "982:  goto yy18;",
          "983: yy59:",
          "987: yy60:",
          "988:  ++YYCURSOR;",
          "989:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "990:  yych = *YYCURSOR;",
          "991:  if (yych <= '/') goto yy18;",
          "992:  if (yych <= '9') goto yy60;",
          "993:  if (yych <= ':') goto yy81;",
          "994:  goto yy18;",
          "995: yy62:",
          "996:  yych = *++YYCURSOR;",
          "997:  if (yych == '\"') goto yy82;",
          "998:  goto yy18;",
          "999: yy63:",
          "1000:  ++YYCURSOR;",
          "1001: #line 625 \"ext/standard/var_unserializer.re\"",
          "1002:  {",
          "1003:  zend_long id;",
          "1006:  if (!var_hash) return 0;",
          "1008:  id = parse_iv(start + 2) - 1;",
          "1009:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1010:   return 0;",
          "1011:  }",
          "1013:  zval_ptr_dtor(rval);",
          "1014:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1015:   ZVAL_UNDEF(rval);",
          "1016:   return 1;",
          "1017:  }",
          "1018:  if (Z_ISREF_P(rval_ref)) {",
          "1019:   ZVAL_COPY(rval, rval_ref);",
          "1020:  } else {",
          "1021:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "1022:   ZVAL_COPY(rval, rval_ref);",
          "1023:  }",
          "1025:  return 1;",
          "1026: }",
          "1027: #line 1028 \"ext/standard/var_unserializer.c\"",
          "1028: yy65:",
          "1029:  yych = *++YYCURSOR;",
          "1030:  if (yych == '\"') goto yy84;",
          "1031:  goto yy18;",
          "1032: yy66:",
          "1033:  yych = *++YYCURSOR;",
          "1034:  if (yych == '{') goto yy86;",
          "1035:  goto yy18;",
          "1036: yy67:",
          "1037:  ++YYCURSOR;",
          "1038: #line 682 \"ext/standard/var_unserializer.re\"",
          "1039:  {",
          "1041:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1042:  return 1;",
          "1043: }",
          "1044: #line 1045 \"ext/standard/var_unserializer.c\"",
          "1045: yy69:",
          "1051:   if (yych <= '9') goto yy69;",
          "1056:    goto yy73;",
          "1058:    if (yych == 'e') goto yy73;",
          "1062: yy71:",
          "1064: #line 730 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1174:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1175:  return 1;",
          "1176: }",
          "1179:  yych = *++YYCURSOR;",
          "1180:  if (yych <= ',') {",
          "1182:  } else {",
          "1184:   if (yych <= '/') goto yy18;",
          "1186:   goto yy18;",
          "1187:  }",
          "1189:  yych = *++YYCURSOR;",
          "1205:  goto yy18;",
          "1207:  yych = *++YYCURSOR;",
          "1210:  goto yy18;",
          "1235:  ++YYCURSOR;",
          "1237:  {",
          "1284:  if (start[2] == '-' || start[2] == '+') {",
          "1285:   digits--;",
          "",
          "[Removed Lines]",
          "1177: #line 1178 \"ext/standard/var_unserializer.c\"",
          "1178: yy65:",
          "1181:   if (yych != '+') goto yy18;",
          "1183:   if (yych <= '-') goto yy66;",
          "1185:   if (yych <= '9') goto yy67;",
          "1188: yy66:",
          "1190:  if (yych <= ',') {",
          "1191:   if (yych == '+') goto yy69;",
          "1192:   goto yy18;",
          "1193:  } else {",
          "1194:   if (yych <= '-') goto yy69;",
          "1195:   if (yych <= '/') goto yy18;",
          "1196:   if (yych >= ':') goto yy18;",
          "1197:  }",
          "1198: yy67:",
          "1199:  ++YYCURSOR;",
          "1200:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1201:  yych = *YYCURSOR;",
          "1202:  if (yych <= '/') goto yy18;",
          "1203:  if (yych <= '9') goto yy67;",
          "1204:  if (yych == ';') goto yy63;",
          "1206: yy69:",
          "1208:  if (yych <= '/') goto yy18;",
          "1209:  if (yych <= '9') goto yy67;",
          "1211: yy70:",
          "1212:  ++YYCURSOR;",
          "1213:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1214:  yych = *YYCURSOR;",
          "1215:  if (yych <= ';') {",
          "1216:   if (yych <= '/') goto yy18;",
          "1217:   if (yych <= '9') goto yy70;",
          "1218:   if (yych <= ':') goto yy18;",
          "1219:   goto yy63;",
          "1220:  } else {",
          "1221:   if (yych <= 'E') {",
          "1222:    if (yych <= 'D') goto yy18;",
          "1223:    goto yy65;",
          "1224:   } else {",
          "1225:    if (yych == 'e') goto yy65;",
          "1226:    goto yy18;",
          "1227:   }",
          "1228:  }",
          "1229: yy72:",
          "1230:  yych = *++YYCURSOR;",
          "1231:  if (yych != 'F') goto yy18;",
          "1232: yy73:",
          "1233:  yych = *++YYCURSOR;",
          "1234:  if (yych != ';') goto yy18;",
          "1236: #line 691 \"ext/standard/var_unserializer.re\"",
          "1240:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1241:   ZVAL_DOUBLE(rval, php_get_nan());",
          "1242:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1243:   ZVAL_DOUBLE(rval, php_get_inf());",
          "1244:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1245:   ZVAL_DOUBLE(rval, -php_get_inf());",
          "1246:  } else {",
          "1247:   ZVAL_NULL(rval);",
          "1248:  }",
          "1250:  return 1;",
          "1251: }",
          "1252: #line 1253 \"ext/standard/var_unserializer.c\"",
          "1253: yy76:",
          "1254:  yych = *++YYCURSOR;",
          "1255:  if (yych == 'N') goto yy73;",
          "1256:  goto yy18;",
          "1257: yy77:",
          "1258:  yych = *++YYCURSOR;",
          "1259:  if (yych <= ',') {",
          "1260:   if (yych != '+') goto yy18;",
          "1261:  } else {",
          "1262:   if (yych <= '-') goto yy78;",
          "1263:   if (yych <= '/') goto yy18;",
          "1264:   if (yych <= '9') goto yy79;",
          "1265:   goto yy18;",
          "1266:  }",
          "1267: yy78:",
          "1268:  yych = *++YYCURSOR;",
          "1269:  if (yych <= '/') goto yy18;",
          "1270:  if (yych >= ':') goto yy18;",
          "1271: yy79:",
          "1272:  ++YYCURSOR;",
          "1273:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1274:  yych = *YYCURSOR;",
          "1275:  if (yych <= '/') goto yy18;",
          "1276:  if (yych <= '9') goto yy79;",
          "1277:  if (yych != ';') goto yy18;",
          "1278:  ++YYCURSOR;",
          "1279: #line 665 \"ext/standard/var_unserializer.re\"",
          "1280:  {",
          "1281: #if SIZEOF_ZEND_LONG == 4",
          "1282:  int digits = YYCURSOR - start - 3;",
          "",
          "[Added Lines]",
          "1073: #line 1074 \"ext/standard/var_unserializer.c\"",
          "1074: yy73:",
          "1077:   if (yych == '+') goto yy88;",
          "1078:   goto yy18;",
          "1080:   if (yych <= '-') goto yy88;",
          "1082:   if (yych <= '9') goto yy89;",
          "1085: yy74:",
          "1087:  if (yych == 'F') goto yy91;",
          "1089: yy75:",
          "1091:  if (yych == 'N') goto yy91;",
          "1093: yy76:",
          "1095: #line 688 \"ext/standard/var_unserializer.re\"",
          "1097: #if SIZEOF_ZEND_LONG == 4",
          "1098:  int digits = YYCURSOR - start - 3;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1302:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1303:  return 1;",
          "1304: }",
          "1340:  yych = *++YYCURSOR;",
          "1350:  ++YYCURSOR;",
          "1352:  {",
          "1353:  zend_long id;",
          "",
          "[Removed Lines]",
          "1305: #line 1306 \"ext/standard/var_unserializer.c\"",
          "1306: yy83:",
          "1307:  yych = *++YYCURSOR;",
          "1308:  if (yych <= '/') goto yy18;",
          "1309:  if (yych >= '2') goto yy18;",
          "1310:  yych = *++YYCURSOR;",
          "1311:  if (yych != ';') goto yy18;",
          "1312:  ++YYCURSOR;",
          "1313: #line 659 \"ext/standard/var_unserializer.re\"",
          "1314:  {",
          "1316:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1317:  return 1;",
          "1318: }",
          "1319: #line 1320 \"ext/standard/var_unserializer.c\"",
          "1320: yy87:",
          "1321:  ++YYCURSOR;",
          "1322: #line 653 \"ext/standard/var_unserializer.re\"",
          "1323:  {",
          "1325:  ZVAL_NULL(rval);",
          "1326:  return 1;",
          "1327: }",
          "1328: #line 1329 \"ext/standard/var_unserializer.c\"",
          "1329: yy89:",
          "1330:  yych = *++YYCURSOR;",
          "1331:  if (yych <= ',') {",
          "1332:   if (yych != '+') goto yy18;",
          "1333:  } else {",
          "1334:   if (yych <= '-') goto yy90;",
          "1335:   if (yych <= '/') goto yy18;",
          "1336:   if (yych <= '9') goto yy91;",
          "1337:   goto yy18;",
          "1338:  }",
          "1339: yy90:",
          "1341:  if (yych <= '/') goto yy18;",
          "1342:  if (yych >= ':') goto yy18;",
          "1343: yy91:",
          "1344:  ++YYCURSOR;",
          "1345:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1346:  yych = *YYCURSOR;",
          "1347:  if (yych <= '/') goto yy18;",
          "1348:  if (yych <= '9') goto yy91;",
          "1349:  if (yych != ';') goto yy18;",
          "1351: #line 628 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1121: #line 1122 \"ext/standard/var_unserializer.c\"",
          "1122: yy78:",
          "1124:  if (yych == '\"') goto yy92;",
          "1125:  goto yy18;",
          "1126: yy79:",
          "1128: #line 651 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1374:  return 1;",
          "1375: }",
          "1376: #line 1377 \"ext/standard/var_unserializer.c\"",
          "1378:  yych = *++YYCURSOR;",
          "1379:  if (yych <= ',') {",
          "1381:  } else {",
          "1382:   if (yych <= '-') goto yy96;",
          "1383:   if (yych <= '/') goto yy18;",
          "1386:  }",
          "1392:  ++YYCURSOR;",
          "1393:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1394:  yych = *YYCURSOR;",
          "1395:  if (yych <= '/') goto yy18;",
          "1398:  ++YYCURSOR;",
          "1400:  {",
          "1408:   return 0;",
          "1409:  }",
          "1415:  }",
          "1418:  } else {",
          "1421:  }",
          "1423:  return 1;",
          "1424: }",
          "1426: }",
          "1430:  return 0;",
          "",
          "[Removed Lines]",
          "1377: yy95:",
          "1380:   if (yych != '+') goto yy18;",
          "1384:   if (yych <= '9') goto yy97;",
          "1385:   goto yy18;",
          "1387: yy96:",
          "1388:  yych = *++YYCURSOR;",
          "1389:  if (yych <= '/') goto yy18;",
          "1390:  if (yych >= ':') goto yy18;",
          "1391: yy97:",
          "1396:  if (yych <= '9') goto yy97;",
          "1397:  if (yych != ';') goto yy18;",
          "1399: #line 602 \"ext/standard/var_unserializer.re\"",
          "1401:  zend_long id;",
          "1404:  if (!var_hash) return 0;",
          "1406:  id = parse_iv(start + 2) - 1;",
          "1407:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1411:  zval_ptr_dtor(rval);",
          "1412:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1413:   ZVAL_UNDEF(rval);",
          "1414:   return 1;",
          "1416:  if (Z_ISREF_P(rval_ref)) {",
          "1417:   ZVAL_COPY(rval, rval_ref);",
          "1419:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "1420:   ZVAL_COPY(rval, rval_ref);",
          "1425: #line 1426 \"ext/standard/var_unserializer.c\"",
          "1427: #line 977 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1153: #line 1154 \"ext/standard/var_unserializer.c\"",
          "1154: yy81:",
          "1155:  yych = *++YYCURSOR;",
          "1156:  if (yych == '\"') goto yy94;",
          "1157:  goto yy18;",
          "1158: yy82:",
          "1159:  ++YYCURSOR;",
          "1160: #line 840 \"ext/standard/var_unserializer.re\"",
          "1161:  {",
          "1162:  size_t len, len2, len3, maxlen;",
          "1163:  zend_long elements;",
          "1164:  char *str;",
          "1165:  zend_string *class_name;",
          "1166:  zend_class_entry *ce;",
          "1167:  int incomplete_class = 0;",
          "1169:  int custom_object = 0;",
          "1171:  zval user_func;",
          "1172:  zval retval;",
          "1173:  zval args[1];",
          "1175:     if (!var_hash) return 0;",
          "1176:  if (*start == 'C') {",
          "1177:   custom_object = 1;",
          "1178:  }",
          "1180:  len2 = len = parse_uiv(start + 2);",
          "1181:  maxlen = max - YYCURSOR;",
          "1182:  if (maxlen < len || len == 0) {",
          "1184:   return 0;",
          "1185:  }",
          "1187:  str = (char*)YYCURSOR;",
          "1189:  YYCURSOR += len;",
          "1191:  if (*(YYCURSOR) != '\"') {",
          "1193:   return 0;",
          "1194:  }",
          "1195:  if (*(YYCURSOR+1) != ':') {",
          "1197:   return 0;",
          "1198:  }",
          "1200:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "1201:  if (len3 != len)",
          "1202:  {",
          "1204:   return 0;",
          "1205:  }",
          "1207:  class_name = zend_string_init(str, len, 0);",
          "1209:  do {",
          "1210:   if(!unserialize_allowed_class(class_name, var_hash)) {",
          "1211:    incomplete_class = 1;",
          "1212:    ce = PHP_IC_ENTRY;",
          "1213:    break;",
          "1214:   }",
          "1217:   BG(serialize_lock)++;",
          "1218:   ce = zend_lookup_class(class_name);",
          "1219:   if (ce) {",
          "1220:    BG(serialize_lock)--;",
          "1221:    if (EG(exception)) {",
          "1222:     zend_string_release(class_name);",
          "1223:     return 0;",
          "1224:    }",
          "1225:    break;",
          "1226:   }",
          "1227:   BG(serialize_lock)--;",
          "1229:   if (EG(exception)) {",
          "1230:    zend_string_release(class_name);",
          "1231:    return 0;",
          "1232:   }",
          "1235:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "1236:    incomplete_class = 1;",
          "1237:    ce = PHP_IC_ENTRY;",
          "1238:    break;",
          "1239:   }",
          "1242:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "1244:   ZVAL_STR_COPY(&args[0], class_name);",
          "1245:   BG(serialize_lock)++;",
          "1246:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "1247:    BG(serialize_lock)--;",
          "1248:    if (EG(exception)) {",
          "1249:     zend_string_release(class_name);",
          "1250:     zval_ptr_dtor(&user_func);",
          "1251:     zval_ptr_dtor(&args[0]);",
          "1252:     return 0;",
          "1253:    }",
          "1254:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "1255:    incomplete_class = 1;",
          "1256:    ce = PHP_IC_ENTRY;",
          "1257:    zval_ptr_dtor(&user_func);",
          "1258:    zval_ptr_dtor(&args[0]);",
          "1259:    break;",
          "1260:   }",
          "1261:   BG(serialize_lock)--;",
          "1262:   zval_ptr_dtor(&retval);",
          "1263:   if (EG(exception)) {",
          "1264:    zend_string_release(class_name);",
          "1265:    zval_ptr_dtor(&user_func);",
          "1266:    zval_ptr_dtor(&args[0]);",
          "1267:    return 0;",
          "1268:   }",
          "1271:   BG(serialize_lock)++;",
          "1272:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "1273:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "1274:    incomplete_class = 1;",
          "1275:    ce = PHP_IC_ENTRY;",
          "1276:   }",
          "1277:   BG(serialize_lock)--;",
          "1279:   zval_ptr_dtor(&user_func);",
          "1280:   zval_ptr_dtor(&args[0]);",
          "1281:   break;",
          "1282:  } while (1);",
          "1286:  if (custom_object) {",
          "1287:   int ret;",
          "1289:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "1291:   if (ret && incomplete_class) {",
          "1292:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1293:   }",
          "1294:   zend_string_release(class_name);",
          "1295:   return ret;",
          "1296:  }",
          "1298:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "1300:  if (elements < 0) {",
          "1301:     zend_string_release(class_name);",
          "1302:     return 0;",
          "1303:  }",
          "1305:  if (incomplete_class) {",
          "1306:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1307:  }",
          "1308:  zend_string_release(class_name);",
          "1310:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1311: }",
          "1312: #line 1313 \"ext/standard/var_unserializer.c\"",
          "1313: yy84:",
          "1314:  ++YYCURSOR;",
          "1315: #line 771 \"ext/standard/var_unserializer.re\"",
          "1316:  {",
          "1317:  size_t len, maxlen;",
          "1318:  zend_string *str;",
          "1320:  len = parse_uiv(start + 2);",
          "1321:  maxlen = max - YYCURSOR;",
          "1322:  if (maxlen < len) {",
          "1324:   return 0;",
          "1325:  }",
          "1327:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "1328:   return 0;",
          "1329:  }",
          "1331:  if (*(YYCURSOR) != '\"') {",
          "1332:   zend_string_free(str);",
          "1334:   return 0;",
          "1335:  }",
          "1337:  if (*(YYCURSOR + 1) != ';') {",
          "1338:   efree(str);",
          "1340:   return 0;",
          "1341:  }",
          "1343:  YYCURSOR += 2;",
          "1346:  ZVAL_STR(rval, str);",
          "1347:  return 1;",
          "1348: }",
          "1349: #line 1350 \"ext/standard/var_unserializer.c\"",
          "1350: yy86:",
          "1351:  ++YYCURSOR;",
          "1352: #line 805 \"ext/standard/var_unserializer.re\"",
          "1353:  {",
          "1354:  zend_long elements = parse_iv(start + 2);",
          "1357:     if (!var_hash) return 0;",
          "1359:  if (elements < 0) {",
          "1360:   return 0;",
          "1361:  }",
          "1363:  array_init_size(rval, elements);",
          "1364:  if (elements) {",
          "1367:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "1368:  }",
          "1370:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "1371:   return 0;",
          "1372:  }",
          "1374:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "1375: }",
          "1377: yy88:",
          "1380:   if (yych == '+') goto yy96;",
          "1381:   goto yy18;",
          "1385:   if (yych >= ':') goto yy18;",
          "1387: yy89:",
          "1392:  if (yych <= '9') goto yy89;",
          "1393:  if (yych == ';') goto yy71;",
          "1394:  goto yy18;",
          "1395: yy91:",
          "1396:  yych = *++YYCURSOR;",
          "1397:  if (yych == ';') goto yy97;",
          "1398:  goto yy18;",
          "1399: yy92:",
          "1401: #line 829 \"ext/standard/var_unserializer.re\"",
          "1403:  long elements;",
          "1404:     if (!var_hash) return 0;",
          "1406:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "1407:  if (elements < 0) {",
          "1408:   return 0;",
          "1409:  }",
          "1410:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1411: }",
          "1412: #line 1413 \"ext/standard/var_unserializer.c\"",
          "1413: yy94:",
          "1414:  ++YYCURSOR;",
          "1415: #line 739 \"ext/standard/var_unserializer.re\"",
          "1416:  {",
          "1417:  size_t len, maxlen;",
          "1418:  char *str;",
          "1420:  len = parse_uiv(start + 2);",
          "1421:  maxlen = max - YYCURSOR;",
          "1422:  if (maxlen < len) {",
          "1427:  str = (char*)YYCURSOR;",
          "1429:  YYCURSOR += len;",
          "1431:  if (*(YYCURSOR) != '\"') {",
          "1433:   return 0;",
          "1436:  if (*(YYCURSOR + 1) != ';') {",
          "1438:   return 0;",
          "1439:  }",
          "1441:  YYCURSOR += 2;",
          "1444:  ZVAL_STRINGL(rval, str, len);",
          "1445:  return 1;",
          "1446: }",
          "1447: #line 1448 \"ext/standard/var_unserializer.c\"",
          "1448: yy96:",
          "1449:  yych = *++YYCURSOR;",
          "1450:  if (yych <= '/') goto yy18;",
          "1451:  if (yych <= '9') goto yy89;",
          "1452:  goto yy18;",
          "1453: yy97:",
          "1454:  ++YYCURSOR;",
          "1455: #line 714 \"ext/standard/var_unserializer.re\"",
          "1456:  {",
          "1459:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1460:   ZVAL_DOUBLE(rval, php_get_nan());",
          "1461:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1462:   ZVAL_DOUBLE(rval, php_get_inf());",
          "1463:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1464:   ZVAL_DOUBLE(rval, -php_get_inf());",
          "1466:   ZVAL_NULL(rval);",
          "1471: #line 1472 \"ext/standard/var_unserializer.c\"",
          "1473: #line 1000 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "69: #define VAR_ENTRIES_MAX 1024",
          "70: #define VAR_ENTRIES_DBG 0",
          "72: typedef struct {",
          "73:  zval *data[VAR_ENTRIES_MAX];",
          "74:  zend_long used_slots;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "73: #define VAR_WAKEUP_FLAG 1",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "137:         (*var_hashx)->last_dtor = var_hash;",
          "138:     }",
          "139:     ZVAL_UNDEF(&var_hash->data[var_hash->used_slots]);",
          "140:     return &var_hash->data[var_hash->used_slots++];",
          "141: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "143:  Z_ACCESS_FLAGS(var_hash->data[var_hash->used_slots]) = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "184:  zend_long i;",
          "185:  var_entries *var_hash = (*var_hashx)->first;",
          "186:  var_dtor_entries *var_dtor_hash = (*var_hashx)->first_dtor;",
          "187: #if VAR_ENTRIES_DBG",
          "188:  fprintf(stderr, \"var_destroy(%ld)\\n\", var_hash?var_hash->used_slots:-1L);",
          "189: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "191:  zend_bool wakeup_failed = 0;",
          "192:  zval wakeup_name;",
          "193:  ZVAL_UNDEF(&wakeup_name);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "197:  while (var_dtor_hash) {",
          "198:   for (i = 0; i < var_dtor_hash->used_slots; i++) {",
          "199: #if VAR_ENTRIES_DBG",
          "200:    fprintf(stderr, \"var_destroy dtor(%p, %ld)\\n\", var_dtor_hash->data[i], Z_REFCOUNT_P(var_dtor_hash->data[i]));",
          "201: #endif",
          "203:   }",
          "204:   next = var_dtor_hash->next;",
          "205:   efree_size(var_dtor_hash, sizeof(var_dtor_entries));",
          "206:   var_dtor_hash = next;",
          "207:  }",
          "208: }",
          "",
          "[Removed Lines]",
          "202:    zval_ptr_dtor(&var_dtor_hash->data[i]);",
          "",
          "[Added Lines]",
          "207:    zval *zv = &var_dtor_hash->data[i];",
          "213:    if (Z_ACCESS_FLAGS_P(zv) == VAR_WAKEUP_FLAG) {",
          "214:     if (!wakeup_failed) {",
          "215:      zval retval;",
          "216:      if (Z_ISUNDEF(wakeup_name)) {",
          "217:       ZVAL_STRINGL(&wakeup_name, \"__wakeup\", sizeof(\"__wakeup\") - 1);",
          "218:      }",
          "220:      BG(serialize_lock)++;",
          "221:      if (call_user_function_ex(CG(function_table), zv, &wakeup_name, &retval, 0, 0, 1, NULL) == FAILURE || Z_ISUNDEF(retval)) {",
          "222:       wakeup_failed = 1;",
          "223:       GC_FLAGS(Z_OBJ_P(zv)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "224:      }",
          "225:      BG(serialize_lock)--;",
          "227:      zval_ptr_dtor(&retval);",
          "228:     } else {",
          "229:      GC_FLAGS(Z_OBJ_P(zv)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "230:     }",
          "231:    }",
          "233:    zval_ptr_dtor(zv);",
          "240:  zval_ptr_dtor(&wakeup_name);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "508: #endif",
          "509: static inline int object_common2(UNSERIALIZE_PARAMETER, zend_long elements)",
          "510: {",
          "513:  HashTable *ht;",
          "514:  zend_bool has_wakeup;",
          "",
          "[Removed Lines]",
          "511:  zval retval;",
          "512:  zval fname;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "533:  ZVAL_DEREF(rval);",
          "534:  if (has_wakeup) {",
          "547:  }",
          "549:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "",
          "[Removed Lines]",
          "535:   ZVAL_STRINGL(&fname, \"__wakeup\", sizeof(\"__wakeup\") - 1);",
          "536:   BG(serialize_lock)++;",
          "537:   if (call_user_function_ex(CG(function_table), rval, &fname, &retval, 0, 0, 1, NULL) == FAILURE || Z_ISUNDEF(retval)) {",
          "538:    GC_FLAGS(Z_OBJ_P(rval)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "539:   }",
          "540:   BG(serialize_lock)--;",
          "541:   zval_dtor(&fname);",
          "542:   zval_dtor(&retval);",
          "543:  }",
          "545:  if (EG(exception)) {",
          "546:   return 0;",
          "",
          "[Added Lines]",
          "567:   zval *wakeup_var = var_tmp_var(var_hash);",
          "568:   ZVAL_COPY(wakeup_var, rval);",
          "569:   Z_ACCESS_FLAGS_P(wakeup_var) = VAR_WAKEUP_FLAG;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f7caa2bd8e72d51201b90158c34219d6feefb4ff",
      "candidate_info": {
        "commit_hash": "f7caa2bd8e72d51201b90158c34219d6feefb4ff",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/f7caa2bd8e72d51201b90158c34219d6feefb4ff",
        "files": [
          "ext/standard/php_var.h",
          "ext/standard/var.c",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Hide (un)serialize data from ABI\n\nThe (UN)SERIALIZE_INIT/DESTROY macros now go through non-inlined\nfunctions, so any changes to them will apply to extensions without\nrebuilds.\n\nAdditionally, the (un)serialize_data structures are now no longer\nexported.\n\nThis means that we are allowed to change these structures in patch\nreleases without breaking the ABI.",
        "before_after_code_files": [
          "ext/standard/php_var.h||ext/standard/php_var.h",
          "ext/standard/var.c||ext/standard/var.c",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "ext/standard/php_var.h||ext/standard/php_var.h": [
          "File: ext/standard/php_var.h -> ext/standard/php_var.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: PHPAPI void php_debug_zval_dump(zval *struc, int level);",
          "53: typedef struct php_serialize_data *php_serialize_data_t;",
          "54: typedef struct php_unserialize_data *php_unserialize_data_t;",
          "",
          "[Removed Lines]",
          "41: struct php_serialize_data {",
          "42:  HashTable ht;",
          "43:  uint32_t n;",
          "44: };",
          "46: struct php_unserialize_data {",
          "47:  void *first;",
          "48:  void *last;",
          "49:  void *first_dtor;",
          "50:  void *last_dtor;",
          "51: };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59: PHPAPI int php_var_unserialize_intern(zval *rval, const unsigned char **p, const unsigned char *max, php_unserialize_data_t *var_hash);",
          "60: PHPAPI int php_var_unserialize_ex(zval *rval, const unsigned char **p, const unsigned char *max, php_unserialize_data_t *var_hash, HashTable *classes);",
          "62: #define PHP_VAR_SERIALIZE_INIT(d) \\",
          "79: #define PHP_VAR_SERIALIZE_DESTROY(d) \\",
          "91: #define PHP_VAR_UNSERIALIZE_INIT(d) \\",
          "106: #define PHP_VAR_UNSERIALIZE_DESTROY(d) \\",
          "118: PHPAPI void var_replace(php_unserialize_data_t *var_hash, zval *ozval, zval *nzval);",
          "119: PHPAPI void var_push_dtor(php_unserialize_data_t *var_hash, zval *val);",
          "",
          "[Removed Lines]",
          "63: do  { \\",
          "65:  if (BG(serialize_lock) || !BG(serialize).level) { \\",
          "66:   (d) = (php_serialize_data_t) emalloc(sizeof(struct php_serialize_data)); \\",
          "67:   zend_hash_init(&(d)->ht, 16, NULL, ZVAL_PTR_DTOR, 0); \\",
          "68:   (d)->n = 0; \\",
          "69:   if (!BG(serialize_lock)) { \\",
          "70:    BG(serialize).data = d; \\",
          "71:    BG(serialize).level = 1; \\",
          "72:   } \\",
          "73:  } else { \\",
          "74:   (d) = BG(serialize).data; \\",
          "75:   ++BG(serialize).level; \\",
          "76:  } \\",
          "77: } while(0)",
          "80: do { \\",
          "82:  if (BG(serialize_lock) || BG(serialize).level == 1) { \\",
          "83:   zend_hash_destroy(&(d)->ht); \\",
          "84:   efree((d)); \\",
          "85:  } \\",
          "86:  if (!BG(serialize_lock) && !--BG(serialize).level) { \\",
          "87:   BG(serialize).data = NULL; \\",
          "88:  } \\",
          "89: } while (0)",
          "92: do { \\",
          "94:  if (BG(serialize_lock) || !BG(unserialize).level) { \\",
          "95:   (d) = (php_unserialize_data_t)ecalloc(1, sizeof(struct php_unserialize_data)); \\",
          "96:   if (!BG(serialize_lock)) { \\",
          "97:    BG(unserialize).data = (d); \\",
          "98:    BG(unserialize).level = 1; \\",
          "99:   } \\",
          "100:  } else { \\",
          "101:   (d) = BG(unserialize).data; \\",
          "102:   ++BG(unserialize).level; \\",
          "103:  } \\",
          "104: } while (0)",
          "107: do { \\",
          "109:  if (BG(serialize_lock) || BG(unserialize).level == 1) { \\",
          "110:   var_destroy(&(d)); \\",
          "111:   efree((d)); \\",
          "112:  } \\",
          "113:  if (!BG(serialize_lock) && !--BG(unserialize).level) { \\",
          "114:   BG(unserialize).data = NULL; \\",
          "115:  } \\",
          "116: } while (0)",
          "",
          "[Added Lines]",
          "50: PHPAPI php_serialize_data_t php_var_serialize_init(void);",
          "51: PHPAPI void php_var_serialize_destroy(php_serialize_data_t d);",
          "52: PHPAPI php_unserialize_data_t php_var_unserialize_init(void);",
          "53: PHPAPI void php_var_unserialize_destroy(php_unserialize_data_t d);",
          "56:  (d) = php_var_serialize_init()",
          "59:  php_var_serialize_destroy(d)",
          "62:  (d) = php_var_unserialize_init()",
          "65:  php_var_unserialize_destroy(d)",
          "",
          "---------------"
        ],
        "ext/standard/var.c||ext/standard/var.c": [
          "File: ext/standard/var.c -> ext/standard/var.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #include \"php_incomplete_class.h\"",
          "36: #define COMMON (is_ref ? \"&\" : \"\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: struct php_serialize_data {",
          "37:  HashTable ht;",
          "38:  uint32_t n;",
          "39: };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "993: }",
          "998: PHP_FUNCTION(serialize)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1001: PHPAPI php_serialize_data_t php_var_serialize_init() {",
          "1002:  struct php_serialize_data *d;",
          "1004:  if (BG(serialize_lock) || !BG(serialize).level) {",
          "1005:   d = emalloc(sizeof(struct php_serialize_data));",
          "1006:   zend_hash_init(&d->ht, 16, NULL, ZVAL_PTR_DTOR, 0);",
          "1007:   d->n = 0;",
          "1008:   if (!BG(serialize_lock)) {",
          "1009:    BG(serialize).data = d;",
          "1010:    BG(serialize).level = 1;",
          "1011:   }",
          "1012:  } else {",
          "1013:   d = BG(serialize).data;",
          "1014:   ++BG(serialize).level;",
          "1015:  }",
          "1016:  return d;",
          "1017: }",
          "1019: PHPAPI void php_var_serialize_destroy(php_serialize_data_t d) {",
          "1021:  if (BG(serialize_lock) || BG(serialize).level == 1) {",
          "1022:   zend_hash_destroy(&d->ht);",
          "1023:   efree(d);",
          "1024:  }",
          "1025:  if (!BG(serialize_lock) && !--BG(serialize).level) {",
          "1026:   BG(serialize).data = NULL;",
          "1027:  }",
          "1028: }",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: #include \"ext/standard/php_var.h\"",
          "25: #include \"php_incomplete_class.h\"",
          "28: #define VAR_ENTRIES_MAX 1024",
          "29: #define VAR_ENTRIES_DBG 0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: struct php_unserialize_data {",
          "28:  void *first;",
          "29:  void *last;",
          "30:  void *first_dtor;",
          "31:  void *last_dtor;",
          "32: };",
          "34: PHPAPI php_unserialize_data_t php_var_unserialize_init() {",
          "35:  php_unserialize_data_t d;",
          "37:  if (BG(serialize_lock) || !BG(unserialize).level) {",
          "38:   d = ecalloc(1, sizeof(struct php_unserialize_data));",
          "39:   if (!BG(serialize_lock)) {",
          "40:    BG(unserialize).data = d;",
          "41:    BG(unserialize).level = 1;",
          "42:   }",
          "43:  } else {",
          "44:   d = BG(unserialize).data;",
          "45:   ++BG(unserialize).level;",
          "46:  }",
          "47:  return d;",
          "48: }",
          "50: PHPAPI void php_var_unserialize_destroy(php_unserialize_data_t d) {",
          "52:  if (BG(serialize_lock) || BG(unserialize).level == 1) {",
          "53:   var_destroy(&d);",
          "54:   efree(d);",
          "55:  }",
          "56:  if (!BG(serialize_lock) && !--BG(unserialize).level) {",
          "57:   BG(unserialize).data = NULL;",
          "58:  }",
          "59: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "238: #define YYMARKER marker",
          "",
          "[Removed Lines]",
          "241: #line 246 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "276: #line 281 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "514:  start = cursor;",
          "518: {",
          "519:  YYCTYPE yych;",
          "520:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "517: #line 518 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "552: #line 553 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "551:     0,   0,   0,   0,   0,   0,   0,   0,",
          "552:     0,   0,   0,   0,   0,   0,   0,   0,",
          "553:  };",
          "555:  if ((YYLIMIT - YYCURSOR) < 7) YYFILL(7);",
          "556:  yych = *YYCURSOR;",
          "557:  switch (yych) {",
          "558:  case 'C':",
          "560:  case 'N': goto yy5;",
          "567:  case 'o': goto yy12;",
          "572:  }",
          "573: yy2:",
          "576: yy3:",
          "578:  { return 0; }",
          "580: yy4:",
          "581:  yych = *(YYMARKER = ++YYCURSOR);",
          "583:  goto yy3;",
          "584: yy5:",
          "585:  yych = *++YYCURSOR;",
          "587:  goto yy3;",
          "588: yy6:",
          "589:  yych = *(YYMARKER = ++YYCURSOR);",
          "591:  goto yy3;",
          "592: yy7:",
          "593:  yych = *(YYMARKER = ++YYCURSOR);",
          "595:  goto yy3;",
          "596: yy8:",
          "597:  yych = *(YYMARKER = ++YYCURSOR);",
          "599:  goto yy3;",
          "600: yy9:",
          "601:  yych = *(YYMARKER = ++YYCURSOR);",
          "603:  goto yy3;",
          "604: yy10:",
          "605:  yych = *(YYMARKER = ++YYCURSOR);",
          "607:  goto yy3;",
          "608: yy11:",
          "609:  yych = *(YYMARKER = ++YYCURSOR);",
          "611:  goto yy3;",
          "612: yy12:",
          "613:  yych = *(YYMARKER = ++YYCURSOR);",
          "615:  goto yy3;",
          "616: yy13:",
          "617:  yych = *(YYMARKER = ++YYCURSOR);",
          "619:  goto yy3;",
          "620: yy14:",
          "621:  ++YYCURSOR;",
          "623:  {",
          "625:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "627: }",
          "632: yy17:",
          "633:  yych = *++YYCURSOR;",
          "634:  if (yybm[0+yych] & 128) {",
          "636:  }",
          "638: yy18:",
          "639:  YYCURSOR = YYMARKER;",
          "640:  goto yy3;",
          "641: yy19:",
          "642:  yych = *++YYCURSOR;",
          "645:  }",
          "646:  goto yy18;",
          "655:  yych = *++YYCURSOR;",
          "773:   }",
          "789:   }",
          "792:  }",
          "798:  }",
          "805:  yych = *++YYCURSOR;",
          "806:  if (yych <= ',') {",
          "808:  } else {",
          "810:   if (yych <= '/') goto yy18;",
          "812:   goto yy18;",
          "813:  }",
          "815:  yych = *++YYCURSOR;",
          "816:  if (yych <= '/') goto yy18;",
          "819:  ++YYCURSOR;",
          "820:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "821:  yych = *YYCURSOR;",
          "822:  if (yych <= '/') goto yy18;",
          "825:  yych = *++YYCURSOR;",
          "827:  ++YYCURSOR;",
          "839:  if (yych <= '/') goto yy18;",
          "840:  if (yych <= '9') goto yy34;",
          "841:  goto yy18;",
          "843:  yych = *++YYCURSOR;",
          "844:  if (yych <= '/') goto yy18;",
          "845:  if (yych >= ':') goto yy18;",
          "847:  ++YYCURSOR;",
          "848:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "849:  yych = *YYCURSOR;",
          "850:  if (yych <= '/') goto yy18;",
          "853:  yych = *++YYCURSOR;",
          "855:  ++YYCURSOR;",
          "872:  }",
          "876:  }",
          "882:  yych = *++YYCURSOR;",
          "884:  if (yych <= '/') goto yy18;",
          "886:  goto yy18;",
          "888:  yych = *++YYCURSOR;",
          "889:  if (yych <= '/') goto yy18;",
          "890:  if (yych >= ':') goto yy18;",
          "892:  ++YYCURSOR;",
          "893:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "894:  yych = *YYCURSOR;",
          "895:  if (yych <= '/') goto yy18;",
          "898:  yych = *++YYCURSOR;",
          "900:  ++YYCURSOR;",
          "939:  if (yych <= '/') goto yy18;",
          "941:  goto yy18;",
          "943:  yych = *++YYCURSOR;",
          "944:  if (yych <= '/') goto yy18;",
          "945:  if (yych >= ':') goto yy18;",
          "947:  ++YYCURSOR;",
          "948:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "949:  yych = *YYCURSOR;",
          "950:  if (yych <= '/') goto yy18;",
          "953:  yych = *++YYCURSOR;",
          "955:  ++YYCURSOR;",
          "957:  {",
          "974:   return 0;",
          "975:  }",
          "980:  }",
          "986:  return 1;",
          "987: }",
          "1009:  yych = *++YYCURSOR;",
          "1011:  goto yy18;",
          "1022:  yych = *++YYCURSOR;",
          "1024:  goto yy18;",
          "1031:  ++YYCURSOR;",
          "1058:  ++YYCURSOR;",
          "1059:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1060:  yych = *YYCURSOR;",
          "1061:  if (yych <= ';') {",
          "1062:   if (yych <= '/') goto yy18;",
          "1064:   if (yych <= ':') goto yy18;",
          "1065:  } else {",
          "1066:   if (yych <= 'E') {",
          "1067:    if (yych <= 'D') goto yy18;",
          "1069:   } else {",
          "1071:    goto yy18;",
          "1072:   }",
          "1073:  }",
          "1075:  ++YYCURSOR;",
          "1077:  {",
          "1078: #if SIZEOF_ZEND_LONG == 4",
          "1079: use_double:",
          "",
          "[Removed Lines]",
          "559:  case 'O': goto yy13;",
          "561:  case 'R': goto yy2;",
          "562:  case 'S': goto yy10;",
          "563:  case 'a': goto yy11;",
          "564:  case 'b': goto yy6;",
          "565:  case 'd': goto yy8;",
          "566:  case 'i': goto yy7;",
          "568:  case 'r': goto yy4;",
          "569:  case 's': goto yy9;",
          "570:  case '}': goto yy14;",
          "571:  default: goto yy16;",
          "574:  yych = *(YYMARKER = ++YYCURSOR);",
          "575:  if (yych == ':') goto yy95;",
          "577: #line 884 \"ext/standard/var_unserializer.re\"",
          "579: #line 580 \"ext/standard/var_unserializer.c\"",
          "582:  if (yych == ':') goto yy89;",
          "586:  if (yych == ';') goto yy87;",
          "590:  if (yych == ':') goto yy83;",
          "594:  if (yych == ':') goto yy77;",
          "598:  if (yych == ':') goto yy53;",
          "602:  if (yych == ':') goto yy46;",
          "606:  if (yych == ':') goto yy39;",
          "610:  if (yych == ':') goto yy32;",
          "614:  if (yych == ':') goto yy25;",
          "618:  if (yych == ':') goto yy17;",
          "622: #line 878 \"ext/standard/var_unserializer.re\"",
          "628: #line 629 \"ext/standard/var_unserializer.c\"",
          "629: yy16:",
          "630:  yych = *++YYCURSOR;",
          "631:  goto yy3;",
          "635:   goto yy20;",
          "637:  if (yych == '+') goto yy19;",
          "643:  if (yybm[0+yych] & 128) {",
          "644:   goto yy20;",
          "647: yy20:",
          "648:  ++YYCURSOR;",
          "649:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "650:  yych = *YYCURSOR;",
          "651:  if (yybm[0+yych] & 128) {",
          "652:   goto yy20;",
          "653:  }",
          "654:  if (yych != ':') goto yy18;",
          "656:  if (yych != '\"') goto yy18;",
          "657:  ++YYCURSOR;",
          "658: #line 733 \"ext/standard/var_unserializer.re\"",
          "659:  {",
          "660:  size_t len, len2, len3, maxlen;",
          "661:  zend_long elements;",
          "662:  char *str;",
          "663:  zend_string *class_name;",
          "664:  zend_class_entry *ce;",
          "665:  int incomplete_class = 0;",
          "667:  int custom_object = 0;",
          "669:  zval user_func;",
          "670:  zval retval;",
          "671:  zval args[1];",
          "673:     if (!var_hash) return 0;",
          "674:  if (*start == 'C') {",
          "675:   custom_object = 1;",
          "676:  }",
          "678:  len2 = len = parse_uiv(start + 2);",
          "679:  maxlen = max - YYCURSOR;",
          "680:  if (maxlen < len || len == 0) {",
          "682:   return 0;",
          "683:  }",
          "685:  str = (char*)YYCURSOR;",
          "687:  YYCURSOR += len;",
          "689:  if (*(YYCURSOR) != '\"') {",
          "691:   return 0;",
          "692:  }",
          "693:  if (*(YYCURSOR+1) != ':') {",
          "695:   return 0;",
          "696:  }",
          "698:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "699:  if (len3 != len)",
          "700:  {",
          "702:   return 0;",
          "703:  }",
          "705:  class_name = zend_string_init(str, len, 0);",
          "707:  do {",
          "708:   if(!unserialize_allowed_class(class_name, classes)) {",
          "709:    incomplete_class = 1;",
          "710:    ce = PHP_IC_ENTRY;",
          "711:    break;",
          "712:   }",
          "715:   BG(serialize_lock)++;",
          "716:   ce = zend_lookup_class(class_name);",
          "717:   if (ce) {",
          "718:    BG(serialize_lock)--;",
          "719:    if (EG(exception)) {",
          "720:     zend_string_release(class_name);",
          "721:     return 0;",
          "722:    }",
          "723:    break;",
          "724:   }",
          "725:   BG(serialize_lock)--;",
          "727:   if (EG(exception)) {",
          "728:    zend_string_release(class_name);",
          "729:    return 0;",
          "730:   }",
          "733:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "734:    incomplete_class = 1;",
          "735:    ce = PHP_IC_ENTRY;",
          "736:    break;",
          "737:   }",
          "740:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "742:   ZVAL_STR_COPY(&args[0], class_name);",
          "743:   BG(serialize_lock)++;",
          "744:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "745:    BG(serialize_lock)--;",
          "746:    if (EG(exception)) {",
          "747:     zend_string_release(class_name);",
          "748:     zval_ptr_dtor(&user_func);",
          "749:     zval_ptr_dtor(&args[0]);",
          "750:     return 0;",
          "751:    }",
          "752:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "753:    incomplete_class = 1;",
          "754:    ce = PHP_IC_ENTRY;",
          "755:    zval_ptr_dtor(&user_func);",
          "756:    zval_ptr_dtor(&args[0]);",
          "757:    break;",
          "758:   }",
          "759:   BG(serialize_lock)--;",
          "760:   zval_ptr_dtor(&retval);",
          "761:   if (EG(exception)) {",
          "762:    zend_string_release(class_name);",
          "763:    zval_ptr_dtor(&user_func);",
          "764:    zval_ptr_dtor(&args[0]);",
          "765:    return 0;",
          "766:   }",
          "769:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "770:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "771:    incomplete_class = 1;",
          "772:    ce = PHP_IC_ENTRY;",
          "775:   zval_ptr_dtor(&user_func);",
          "776:   zval_ptr_dtor(&args[0]);",
          "777:   break;",
          "778:  } while (1);",
          "782:  if (custom_object) {",
          "783:   int ret;",
          "785:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "787:   if (ret && incomplete_class) {",
          "788:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "790:   zend_string_release(class_name);",
          "791:   return ret;",
          "794:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "796:  if (incomplete_class) {",
          "797:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "799:  zend_string_release(class_name);",
          "801:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "802: }",
          "803: #line 804 \"ext/standard/var_unserializer.c\"",
          "804: yy25:",
          "807:   if (yych != '+') goto yy18;",
          "809:   if (yych <= '-') goto yy26;",
          "811:   if (yych <= '9') goto yy27;",
          "814: yy26:",
          "817:  if (yych >= ':') goto yy18;",
          "818: yy27:",
          "823:  if (yych <= '9') goto yy27;",
          "824:  if (yych >= ';') goto yy18;",
          "826:  if (yych != '\"') goto yy18;",
          "828: #line 726 \"ext/standard/var_unserializer.re\"",
          "829:  {",
          "830:     if (!var_hash) return 0;",
          "832:  return object_common2(UNSERIALIZE_PASSTHRU,",
          "833:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
          "834: }",
          "835: #line 836 \"ext/standard/var_unserializer.c\"",
          "836: yy32:",
          "837:  yych = *++YYCURSOR;",
          "838:  if (yych == '+') goto yy33;",
          "842: yy33:",
          "846: yy34:",
          "851:  if (yych <= '9') goto yy34;",
          "852:  if (yych >= ';') goto yy18;",
          "854:  if (yych != '{') goto yy18;",
          "856: #line 702 \"ext/standard/var_unserializer.re\"",
          "857:  {",
          "858:  zend_long elements = parse_iv(start + 2);",
          "861:     if (!var_hash) return 0;",
          "863:  if (elements < 0) {",
          "864:   return 0;",
          "865:  }",
          "867:  array_init_size(rval, elements);",
          "868:  if (elements) {",
          "871:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "874:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "875:   return 0;",
          "878:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "879: }",
          "880: #line 881 \"ext/standard/var_unserializer.c\"",
          "881: yy39:",
          "883:  if (yych == '+') goto yy40;",
          "885:  if (yych <= '9') goto yy41;",
          "887: yy40:",
          "891: yy41:",
          "896:  if (yych <= '9') goto yy41;",
          "897:  if (yych >= ';') goto yy18;",
          "899:  if (yych != '\"') goto yy18;",
          "901: #line 668 \"ext/standard/var_unserializer.re\"",
          "902:  {",
          "903:  size_t len, maxlen;",
          "904:  zend_string *str;",
          "906:  len = parse_uiv(start + 2);",
          "907:  maxlen = max - YYCURSOR;",
          "908:  if (maxlen < len) {",
          "910:   return 0;",
          "911:  }",
          "913:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "914:   return 0;",
          "915:  }",
          "917:  if (*(YYCURSOR) != '\"') {",
          "918:   zend_string_free(str);",
          "920:   return 0;",
          "921:  }",
          "923:  if (*(YYCURSOR + 1) != ';') {",
          "924:   efree(str);",
          "926:   return 0;",
          "927:  }",
          "929:  YYCURSOR += 2;",
          "932:  ZVAL_STR(rval, str);",
          "933:  return 1;",
          "934: }",
          "935: #line 936 \"ext/standard/var_unserializer.c\"",
          "936: yy46:",
          "937:  yych = *++YYCURSOR;",
          "938:  if (yych == '+') goto yy47;",
          "940:  if (yych <= '9') goto yy48;",
          "942: yy47:",
          "946: yy48:",
          "951:  if (yych <= '9') goto yy48;",
          "952:  if (yych >= ';') goto yy18;",
          "954:  if (yych != '\"') goto yy18;",
          "956: #line 636 \"ext/standard/var_unserializer.re\"",
          "958:  size_t len, maxlen;",
          "959:  char *str;",
          "961:  len = parse_uiv(start + 2);",
          "962:  maxlen = max - YYCURSOR;",
          "963:  if (maxlen < len) {",
          "965:   return 0;",
          "966:  }",
          "968:  str = (char*)YYCURSOR;",
          "970:  YYCURSOR += len;",
          "972:  if (*(YYCURSOR) != '\"') {",
          "977:  if (*(YYCURSOR + 1) != ';') {",
          "979:   return 0;",
          "982:  YYCURSOR += 2;",
          "985:  ZVAL_STRINGL(rval, str, len);",
          "988: #line 989 \"ext/standard/var_unserializer.c\"",
          "989: yy53:",
          "990:  yych = *++YYCURSOR;",
          "991:  if (yych <= '/') {",
          "992:   if (yych <= ',') {",
          "993:    if (yych == '+') goto yy57;",
          "994:    goto yy18;",
          "995:   } else {",
          "996:    if (yych <= '-') goto yy55;",
          "997:    if (yych <= '.') goto yy60;",
          "998:    goto yy18;",
          "999:   }",
          "1000:  } else {",
          "1001:   if (yych <= 'I') {",
          "1002:    if (yych <= '9') goto yy58;",
          "1003:    if (yych <= 'H') goto yy18;",
          "1004:    goto yy56;",
          "1005:   } else {",
          "1006:    if (yych != 'N') goto yy18;",
          "1007:   }",
          "1008:  }",
          "1010:  if (yych == 'A') goto yy76;",
          "1012: yy55:",
          "1013:  yych = *++YYCURSOR;",
          "1014:  if (yych <= '/') {",
          "1015:   if (yych == '.') goto yy60;",
          "1016:   goto yy18;",
          "1017:  } else {",
          "1018:   if (yych <= '9') goto yy58;",
          "1019:   if (yych != 'I') goto yy18;",
          "1020:  }",
          "1021: yy56:",
          "1023:  if (yych == 'N') goto yy72;",
          "1025: yy57:",
          "1026:  yych = *++YYCURSOR;",
          "1027:  if (yych == '.') goto yy60;",
          "1028:  if (yych <= '/') goto yy18;",
          "1029:  if (yych >= ':') goto yy18;",
          "1030: yy58:",
          "1032:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1033:  yych = *YYCURSOR;",
          "1034:  if (yych <= ':') {",
          "1035:   if (yych <= '.') {",
          "1036:    if (yych <= '-') goto yy18;",
          "1037:    goto yy70;",
          "1038:   } else {",
          "1039:    if (yych <= '/') goto yy18;",
          "1040:    if (yych <= '9') goto yy58;",
          "1041:    goto yy18;",
          "1042:   }",
          "1043:  } else {",
          "1044:   if (yych <= 'E') {",
          "1045:    if (yych <= ';') goto yy63;",
          "1046:    if (yych <= 'D') goto yy18;",
          "1047:    goto yy65;",
          "1048:   } else {",
          "1049:    if (yych == 'e') goto yy65;",
          "1050:    goto yy18;",
          "1051:   }",
          "1052:  }",
          "1053: yy60:",
          "1054:  yych = *++YYCURSOR;",
          "1055:  if (yych <= '/') goto yy18;",
          "1056:  if (yych >= ':') goto yy18;",
          "1057: yy61:",
          "1063:   if (yych <= '9') goto yy61;",
          "1068:    goto yy65;",
          "1070:    if (yych == 'e') goto yy65;",
          "1074: yy63:",
          "1076: #line 627 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "593:  case 'O': goto yy4;",
          "595:  case 'R': goto yy6;",
          "596:  case 'S': goto yy7;",
          "597:  case 'a': goto yy8;",
          "598:  case 'b': goto yy9;",
          "599:  case 'd': goto yy10;",
          "600:  case 'i': goto yy11;",
          "602:  case 'r': goto yy13;",
          "603:  case 's': goto yy14;",
          "604:  case '}': goto yy15;",
          "605:  default: goto yy2;",
          "608:  ++YYCURSOR;",
          "610: #line 919 \"ext/standard/var_unserializer.re\"",
          "612: #line 613 \"ext/standard/var_unserializer.c\"",
          "615:  if (yych == ':') goto yy17;",
          "619:  if (yych == ';') goto yy19;",
          "623:  if (yych == ':') goto yy21;",
          "627:  if (yych == ':') goto yy22;",
          "631:  if (yych == ':') goto yy23;",
          "635:  if (yych == ':') goto yy24;",
          "639:  if (yych == ':') goto yy25;",
          "643:  if (yych == ':') goto yy26;",
          "647:  if (yych == ':') goto yy27;",
          "651:  if (yych == ':') goto yy28;",
          "654:  yych = *(YYMARKER = ++YYCURSOR);",
          "655:  if (yych == ':') goto yy29;",
          "656:  goto yy3;",
          "657: yy15:",
          "659: #line 913 \"ext/standard/var_unserializer.re\"",
          "665: #line 666 \"ext/standard/var_unserializer.c\"",
          "669:   goto yy31;",
          "671:  if (yych == '+') goto yy30;",
          "676:  ++YYCURSOR;",
          "677: #line 608 \"ext/standard/var_unserializer.re\"",
          "678:  {",
          "680:  ZVAL_NULL(rval);",
          "681:  return 1;",
          "682: }",
          "683: #line 684 \"ext/standard/var_unserializer.c\"",
          "684: yy21:",
          "686:  if (yych <= ',') {",
          "687:   if (yych == '+') goto yy33;",
          "688:   goto yy18;",
          "689:  } else {",
          "690:   if (yych <= '-') goto yy33;",
          "691:   if (yych <= '/') goto yy18;",
          "692:   if (yych <= '9') goto yy34;",
          "693:   goto yy18;",
          "695: yy22:",
          "696:  yych = *++YYCURSOR;",
          "697:  if (yych == '+') goto yy36;",
          "698:  if (yych <= '/') goto yy18;",
          "699:  if (yych <= '9') goto yy37;",
          "701: yy23:",
          "703:  if (yych == '+') goto yy39;",
          "704:  if (yych <= '/') goto yy18;",
          "705:  if (yych <= '9') goto yy40;",
          "706:  goto yy18;",
          "707: yy24:",
          "708:  yych = *++YYCURSOR;",
          "709:  if (yych <= '/') goto yy18;",
          "710:  if (yych <= '1') goto yy42;",
          "711:  goto yy18;",
          "712: yy25:",
          "713:  yych = *++YYCURSOR;",
          "714:  if (yych <= '/') {",
          "715:   if (yych <= ',') {",
          "716:    if (yych == '+') goto yy43;",
          "717:    goto yy18;",
          "718:   } else {",
          "719:    if (yych <= '-') goto yy44;",
          "720:    if (yych <= '.') goto yy45;",
          "721:    goto yy18;",
          "723:  } else {",
          "724:   if (yych <= 'I') {",
          "725:    if (yych <= '9') goto yy46;",
          "726:    if (yych <= 'H') goto yy18;",
          "727:    goto yy48;",
          "728:   } else {",
          "729:    if (yych == 'N') goto yy49;",
          "730:    goto yy18;",
          "733: yy26:",
          "734:  yych = *++YYCURSOR;",
          "735:  if (yych <= ',') {",
          "736:   if (yych == '+') goto yy50;",
          "737:   goto yy18;",
          "738:  } else {",
          "739:   if (yych <= '-') goto yy50;",
          "740:   if (yych <= '/') goto yy18;",
          "741:   if (yych <= '9') goto yy51;",
          "742:   goto yy18;",
          "744: yy27:",
          "745:  yych = *++YYCURSOR;",
          "746:  if (yych <= ',') {",
          "747:   if (yych == '+') goto yy53;",
          "748:   goto yy18;",
          "749:  } else {",
          "750:   if (yych <= '-') goto yy53;",
          "751:   if (yych <= '/') goto yy18;",
          "752:   if (yych <= '9') goto yy54;",
          "753:   goto yy18;",
          "754:  }",
          "755: yy28:",
          "758:   if (yych == '+') goto yy56;",
          "759:   goto yy18;",
          "761:   if (yych <= '-') goto yy56;",
          "763:   if (yych <= '9') goto yy57;",
          "766: yy29:",
          "768:  if (yych == '+') goto yy59;",
          "770:  if (yych <= '9') goto yy60;",
          "771:  goto yy18;",
          "772: yy30:",
          "773:  yych = *++YYCURSOR;",
          "774:  if (yybm[0+yych] & 128) {",
          "775:   goto yy31;",
          "776:  }",
          "777:  goto yy18;",
          "778: yy31:",
          "782:  if (yybm[0+yych] & 128) {",
          "783:   goto yy31;",
          "784:  }",
          "786:  if (yych <= ':') goto yy62;",
          "787:  goto yy18;",
          "788: yy33:",
          "790:  if (yych <= '/') goto yy18;",
          "791:  if (yych >= ':') goto yy18;",
          "792: yy34:",
          "794:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "795:  yych = *YYCURSOR;",
          "798:  if (yych == ';') goto yy63;",
          "800: yy36:",
          "804: yy37:",
          "809:  if (yych <= '9') goto yy37;",
          "810:  if (yych <= ':') goto yy65;",
          "811:  goto yy18;",
          "812: yy39:",
          "814:  if (yych <= '/') goto yy18;",
          "815:  if (yych >= ':') goto yy18;",
          "816: yy40:",
          "818:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "819:  yych = *YYCURSOR;",
          "820:  if (yych <= '/') goto yy18;",
          "821:  if (yych <= '9') goto yy40;",
          "822:  if (yych <= ':') goto yy66;",
          "823:  goto yy18;",
          "824: yy42:",
          "825:  yych = *++YYCURSOR;",
          "826:  if (yych == ';') goto yy67;",
          "827:  goto yy18;",
          "828: yy43:",
          "829:  yych = *++YYCURSOR;",
          "830:  if (yych == '.') goto yy45;",
          "831:  if (yych <= '/') goto yy18;",
          "832:  if (yych <= '9') goto yy46;",
          "833:  goto yy18;",
          "834: yy44:",
          "835:  yych = *++YYCURSOR;",
          "836:  if (yych <= '/') {",
          "837:   if (yych != '.') goto yy18;",
          "838:  } else {",
          "839:   if (yych <= '9') goto yy46;",
          "840:   if (yych == 'I') goto yy48;",
          "841:   goto yy18;",
          "843: yy45:",
          "844:  yych = *++YYCURSOR;",
          "845:  if (yych <= '/') goto yy18;",
          "846:  if (yych <= '9') goto yy69;",
          "847:  goto yy18;",
          "848: yy46:",
          "849:  ++YYCURSOR;",
          "850:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "851:  yych = *YYCURSOR;",
          "852:  if (yych <= ':') {",
          "853:   if (yych <= '.') {",
          "854:    if (yych <= '-') goto yy18;",
          "855:    goto yy69;",
          "856:   } else {",
          "857:    if (yych <= '/') goto yy18;",
          "858:    if (yych <= '9') goto yy46;",
          "859:    goto yy18;",
          "860:   }",
          "861:  } else {",
          "862:   if (yych <= 'E') {",
          "863:    if (yych <= ';') goto yy71;",
          "864:    if (yych <= 'D') goto yy18;",
          "865:    goto yy73;",
          "866:   } else {",
          "867:    if (yych == 'e') goto yy73;",
          "868:    goto yy18;",
          "869:   }",
          "871: yy48:",
          "873:  if (yych == 'N') goto yy74;",
          "874:  goto yy18;",
          "875: yy49:",
          "876:  yych = *++YYCURSOR;",
          "877:  if (yych == 'A') goto yy75;",
          "878:  goto yy18;",
          "879: yy50:",
          "880:  yych = *++YYCURSOR;",
          "881:  if (yych <= '/') goto yy18;",
          "882:  if (yych >= ':') goto yy18;",
          "883: yy51:",
          "884:  ++YYCURSOR;",
          "885:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "886:  yych = *YYCURSOR;",
          "888:  if (yych <= '9') goto yy51;",
          "889:  if (yych == ';') goto yy76;",
          "891: yy53:",
          "895: yy54:",
          "900:  if (yych <= '9') goto yy54;",
          "901:  if (yych <= ':') goto yy78;",
          "902:  goto yy18;",
          "903: yy56:",
          "905:  if (yych <= '/') goto yy18;",
          "906:  if (yych >= ':') goto yy18;",
          "907: yy57:",
          "909:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "910:  yych = *YYCURSOR;",
          "912:  if (yych <= '9') goto yy57;",
          "913:  if (yych == ';') goto yy79;",
          "915: yy59:",
          "919: yy60:",
          "924:  if (yych <= '9') goto yy60;",
          "925:  if (yych <= ':') goto yy81;",
          "926:  goto yy18;",
          "927: yy62:",
          "929:  if (yych == '\"') goto yy82;",
          "930:  goto yy18;",
          "931: yy63:",
          "933: #line 557 \"ext/standard/var_unserializer.re\"",
          "935:  zend_long id;",
          "938:  if (!var_hash) return 0;",
          "940:  id = parse_iv(start + 2) - 1;",
          "941:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "945:  zval_ptr_dtor(rval);",
          "946:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "947:   ZVAL_UNDEF(rval);",
          "948:   return 1;",
          "949:  }",
          "950:  if (Z_ISREF_P(rval_ref)) {",
          "951:   ZVAL_COPY(rval, rval_ref);",
          "952:  } else {",
          "953:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "954:   ZVAL_COPY(rval, rval_ref);",
          "959: #line 960 \"ext/standard/var_unserializer.c\"",
          "960: yy65:",
          "962:  if (yych == '\"') goto yy84;",
          "964: yy66:",
          "966:  if (yych == '{') goto yy86;",
          "968: yy67:",
          "970: #line 614 \"ext/standard/var_unserializer.re\"",
          "971:  {",
          "973:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "974:  return 1;",
          "975: }",
          "976: #line 977 \"ext/standard/var_unserializer.c\"",
          "977: yy69:",
          "983:   if (yych <= '9') goto yy69;",
          "988:    goto yy73;",
          "990:    if (yych == 'e') goto yy73;",
          "994: yy71:",
          "996: #line 662 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1082:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1083:  return 1;",
          "1084: }",
          "1087:  yych = *++YYCURSOR;",
          "1088:  if (yych <= ',') {",
          "1090:  } else {",
          "1092:   if (yych <= '/') goto yy18;",
          "1094:   goto yy18;",
          "1095:  }",
          "1097:  yych = *++YYCURSOR;",
          "1113:  goto yy18;",
          "1115:  yych = *++YYCURSOR;",
          "1118:  goto yy18;",
          "1120:  ++YYCURSOR;",
          "1132:   } else {",
          "1135:   }",
          "1136:  }",
          "1141:  yych = *++YYCURSOR;",
          "1143:  ++YYCURSOR;",
          "1145:  {",
          "1156:  }",
          "1158:  return 1;",
          "1159: }",
          "1162:  yych = *++YYCURSOR;",
          "1164:  goto yy18;",
          "1186:  ++YYCURSOR;",
          "1188:  {",
          "1194:  }",
          "1203:    }",
          "1206:   }",
          "1212: }",
          "1220:  ++YYCURSOR;",
          "1222:  {",
          "1225:  return 1;",
          "1226: }",
          "1229:  ++YYCURSOR;",
          "1231:  {",
          "1235: }",
          "1238:  yych = *++YYCURSOR;",
          "1239:  if (yych <= ',') {",
          "1241:  } else {",
          "1243:   if (yych <= '/') goto yy18;",
          "1246:  }",
          "1252:  ++YYCURSOR;",
          "1253:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1254:  yych = *YYCURSOR;",
          "1255:  if (yych <= '/') goto yy18;",
          "1258:  ++YYCURSOR;",
          "1260:  {",
          "1268:   return 0;",
          "1269:  }",
          "1272:   return 0;",
          "1273:  }",
          "1278:  }",
          "1282:  return 1;",
          "1283: }",
          "1295: yy96:",
          "1296:  yych = *++YYCURSOR;",
          "1297:  if (yych <= '/') goto yy18;",
          "1299: yy97:",
          "1300:  ++YYCURSOR;",
          "1308:  {",
          "1326:  } else {",
          "1329:  }",
          "1331:  return 1;",
          "1332: }",
          "1334: }",
          "1338:  return 0;",
          "",
          "[Removed Lines]",
          "1085: #line 1086 \"ext/standard/var_unserializer.c\"",
          "1086: yy65:",
          "1089:   if (yych != '+') goto yy18;",
          "1091:   if (yych <= '-') goto yy66;",
          "1093:   if (yych <= '9') goto yy67;",
          "1096: yy66:",
          "1098:  if (yych <= ',') {",
          "1099:   if (yych == '+') goto yy69;",
          "1100:   goto yy18;",
          "1101:  } else {",
          "1102:   if (yych <= '-') goto yy69;",
          "1103:   if (yych <= '/') goto yy18;",
          "1104:   if (yych >= ':') goto yy18;",
          "1105:  }",
          "1106: yy67:",
          "1107:  ++YYCURSOR;",
          "1108:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1109:  yych = *YYCURSOR;",
          "1110:  if (yych <= '/') goto yy18;",
          "1111:  if (yych <= '9') goto yy67;",
          "1112:  if (yych == ';') goto yy63;",
          "1114: yy69:",
          "1116:  if (yych <= '/') goto yy18;",
          "1117:  if (yych <= '9') goto yy67;",
          "1119: yy70:",
          "1121:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1122:  yych = *YYCURSOR;",
          "1123:  if (yych <= ';') {",
          "1124:   if (yych <= '/') goto yy18;",
          "1125:   if (yych <= '9') goto yy70;",
          "1126:   if (yych <= ':') goto yy18;",
          "1127:   goto yy63;",
          "1128:  } else {",
          "1129:   if (yych <= 'E') {",
          "1130:    if (yych <= 'D') goto yy18;",
          "1131:    goto yy65;",
          "1133:    if (yych == 'e') goto yy65;",
          "1134:    goto yy18;",
          "1137: yy72:",
          "1138:  yych = *++YYCURSOR;",
          "1139:  if (yych != 'F') goto yy18;",
          "1140: yy73:",
          "1142:  if (yych != ';') goto yy18;",
          "1144: #line 611 \"ext/standard/var_unserializer.re\"",
          "1148:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1149:   ZVAL_DOUBLE(rval, php_get_nan());",
          "1150:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1151:   ZVAL_DOUBLE(rval, php_get_inf());",
          "1152:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1153:   ZVAL_DOUBLE(rval, -php_get_inf());",
          "1154:  } else {",
          "1155:   ZVAL_NULL(rval);",
          "1160: #line 1161 \"ext/standard/var_unserializer.c\"",
          "1161: yy76:",
          "1163:  if (yych == 'N') goto yy73;",
          "1165: yy77:",
          "1166:  yych = *++YYCURSOR;",
          "1167:  if (yych <= ',') {",
          "1168:   if (yych != '+') goto yy18;",
          "1169:  } else {",
          "1170:   if (yych <= '-') goto yy78;",
          "1171:   if (yych <= '/') goto yy18;",
          "1172:   if (yych <= '9') goto yy79;",
          "1173:   goto yy18;",
          "1174:  }",
          "1175: yy78:",
          "1176:  yych = *++YYCURSOR;",
          "1177:  if (yych <= '/') goto yy18;",
          "1178:  if (yych >= ':') goto yy18;",
          "1179: yy79:",
          "1180:  ++YYCURSOR;",
          "1181:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1182:  yych = *YYCURSOR;",
          "1183:  if (yych <= '/') goto yy18;",
          "1184:  if (yych <= '9') goto yy79;",
          "1185:  if (yych != ';') goto yy18;",
          "1187: #line 585 \"ext/standard/var_unserializer.re\"",
          "1189: #if SIZEOF_ZEND_LONG == 4",
          "1190:  int digits = YYCURSOR - start - 3;",
          "1192:  if (start[2] == '-' || start[2] == '+') {",
          "1193:   digits--;",
          "1197:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
          "1198:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
          "1199:    int cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
          "1201:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
          "1202:     goto use_double;",
          "1204:   } else {",
          "1205:    goto use_double;",
          "1207:  }",
          "1208: #endif",
          "1210:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1211:  return 1;",
          "1213: #line 1214 \"ext/standard/var_unserializer.c\"",
          "1214: yy83:",
          "1215:  yych = *++YYCURSOR;",
          "1216:  if (yych <= '/') goto yy18;",
          "1217:  if (yych >= '2') goto yy18;",
          "1218:  yych = *++YYCURSOR;",
          "1219:  if (yych != ';') goto yy18;",
          "1221: #line 579 \"ext/standard/var_unserializer.re\"",
          "1224:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1227: #line 1228 \"ext/standard/var_unserializer.c\"",
          "1228: yy87:",
          "1230: #line 573 \"ext/standard/var_unserializer.re\"",
          "1233:  ZVAL_NULL(rval);",
          "1234:  return 1;",
          "1236: #line 1237 \"ext/standard/var_unserializer.c\"",
          "1237: yy89:",
          "1240:   if (yych != '+') goto yy18;",
          "1242:   if (yych <= '-') goto yy90;",
          "1244:   if (yych <= '9') goto yy91;",
          "1245:   goto yy18;",
          "1247: yy90:",
          "1248:  yych = *++YYCURSOR;",
          "1249:  if (yych <= '/') goto yy18;",
          "1250:  if (yych >= ':') goto yy18;",
          "1251: yy91:",
          "1256:  if (yych <= '9') goto yy91;",
          "1257:  if (yych != ';') goto yy18;",
          "1259: #line 548 \"ext/standard/var_unserializer.re\"",
          "1261:  zend_long id;",
          "1264:  if (!var_hash) return 0;",
          "1266:  id = parse_iv(start + 2) - 1;",
          "1267:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1271:  if (rval_ref == rval) {",
          "1275:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1276:   ZVAL_UNDEF(rval);",
          "1277:   return 1;",
          "1280:  ZVAL_COPY(rval, rval_ref);",
          "1284: #line 1285 \"ext/standard/var_unserializer.c\"",
          "1285: yy95:",
          "1286:  yych = *++YYCURSOR;",
          "1287:  if (yych <= ',') {",
          "1288:   if (yych != '+') goto yy18;",
          "1289:  } else {",
          "1290:   if (yych <= '-') goto yy96;",
          "1291:   if (yych <= '/') goto yy18;",
          "1292:   if (yych <= '9') goto yy97;",
          "1293:   goto yy18;",
          "1294:  }",
          "1298:  if (yych >= ':') goto yy18;",
          "1301:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1302:  yych = *YYCURSOR;",
          "1303:  if (yych <= '/') goto yy18;",
          "1304:  if (yych <= '9') goto yy97;",
          "1305:  if (yych != ';') goto yy18;",
          "1306:  ++YYCURSOR;",
          "1307: #line 522 \"ext/standard/var_unserializer.re\"",
          "1309:  zend_long id;",
          "1312:  if (!var_hash) return 0;",
          "1314:  id = parse_iv(start + 2) - 1;",
          "1315:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1316:   return 0;",
          "1317:  }",
          "1319:  zval_ptr_dtor(rval);",
          "1320:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1321:   ZVAL_UNDEF(rval);",
          "1322:   return 1;",
          "1323:  }",
          "1324:  if (Z_ISREF_P(rval_ref)) {",
          "1325:   ZVAL_COPY(rval, rval_ref);",
          "1327:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "1328:   ZVAL_COPY(rval, rval_ref);",
          "1333: #line 1334 \"ext/standard/var_unserializer.c\"",
          "1335: #line 886 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1005: #line 1006 \"ext/standard/var_unserializer.c\"",
          "1006: yy73:",
          "1009:   if (yych == '+') goto yy88;",
          "1010:   goto yy18;",
          "1012:   if (yych <= '-') goto yy88;",
          "1014:   if (yych <= '9') goto yy89;",
          "1017: yy74:",
          "1019:  if (yych == 'F') goto yy91;",
          "1021: yy75:",
          "1023:  if (yych == 'N') goto yy91;",
          "1025: yy76:",
          "1027: #line 620 \"ext/standard/var_unserializer.re\"",
          "1028:  {",
          "1029: #if SIZEOF_ZEND_LONG == 4",
          "1030:  int digits = YYCURSOR - start - 3;",
          "1032:  if (start[2] == '-' || start[2] == '+') {",
          "1033:   digits--;",
          "1034:  }",
          "1037:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
          "1038:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
          "1039:    int cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
          "1041:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
          "1042:     goto use_double;",
          "1043:    }",
          "1045:    goto use_double;",
          "1048: #endif",
          "1050:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1051:  return 1;",
          "1052: }",
          "1053: #line 1054 \"ext/standard/var_unserializer.c\"",
          "1054: yy78:",
          "1056:  if (yych == '\"') goto yy92;",
          "1057:  goto yy18;",
          "1058: yy79:",
          "1060: #line 583 \"ext/standard/var_unserializer.re\"",
          "1062:  zend_long id;",
          "1065:  if (!var_hash) return 0;",
          "1067:  id = parse_iv(start + 2) - 1;",
          "1068:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1069:   return 0;",
          "1070:  }",
          "1072:  if (rval_ref == rval) {",
          "1073:   return 0;",
          "1074:  }",
          "1076:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1077:   ZVAL_UNDEF(rval);",
          "1078:   return 1;",
          "1081:  ZVAL_COPY(rval, rval_ref);",
          "1085: #line 1086 \"ext/standard/var_unserializer.c\"",
          "1086: yy81:",
          "1088:  if (yych == '\"') goto yy94;",
          "1090: yy82:",
          "1092: #line 768 \"ext/standard/var_unserializer.re\"",
          "1094:  size_t len, len2, len3, maxlen;",
          "1095:  zend_long elements;",
          "1096:  char *str;",
          "1097:  zend_string *class_name;",
          "1098:  zend_class_entry *ce;",
          "1099:  int incomplete_class = 0;",
          "1101:  int custom_object = 0;",
          "1103:  zval user_func;",
          "1104:  zval retval;",
          "1105:  zval args[1];",
          "1107:     if (!var_hash) return 0;",
          "1108:  if (*start == 'C') {",
          "1109:   custom_object = 1;",
          "1112:  len2 = len = parse_uiv(start + 2);",
          "1113:  maxlen = max - YYCURSOR;",
          "1114:  if (maxlen < len || len == 0) {",
          "1116:   return 0;",
          "1117:  }",
          "1119:  str = (char*)YYCURSOR;",
          "1121:  YYCURSOR += len;",
          "1123:  if (*(YYCURSOR) != '\"') {",
          "1125:   return 0;",
          "1126:  }",
          "1127:  if (*(YYCURSOR+1) != ':') {",
          "1129:   return 0;",
          "1130:  }",
          "1132:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "1133:  if (len3 != len)",
          "1134:  {",
          "1136:   return 0;",
          "1137:  }",
          "1139:  class_name = zend_string_init(str, len, 0);",
          "1141:  do {",
          "1142:   if(!unserialize_allowed_class(class_name, classes)) {",
          "1143:    incomplete_class = 1;",
          "1144:    ce = PHP_IC_ENTRY;",
          "1145:    break;",
          "1146:   }",
          "1149:   BG(serialize_lock)++;",
          "1150:   ce = zend_lookup_class(class_name);",
          "1151:   if (ce) {",
          "1152:    BG(serialize_lock)--;",
          "1153:    if (EG(exception)) {",
          "1154:     zend_string_release(class_name);",
          "1155:     return 0;",
          "1157:    break;",
          "1159:   BG(serialize_lock)--;",
          "1161:   if (EG(exception)) {",
          "1162:    zend_string_release(class_name);",
          "1163:    return 0;",
          "1164:   }",
          "1167:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "1168:    incomplete_class = 1;",
          "1169:    ce = PHP_IC_ENTRY;",
          "1170:    break;",
          "1171:   }",
          "1174:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "1176:   ZVAL_STR_COPY(&args[0], class_name);",
          "1177:   BG(serialize_lock)++;",
          "1178:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "1179:    BG(serialize_lock)--;",
          "1180:    if (EG(exception)) {",
          "1181:     zend_string_release(class_name);",
          "1182:     zval_ptr_dtor(&user_func);",
          "1183:     zval_ptr_dtor(&args[0]);",
          "1184:     return 0;",
          "1185:    }",
          "1186:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "1187:    incomplete_class = 1;",
          "1188:    ce = PHP_IC_ENTRY;",
          "1189:    zval_ptr_dtor(&user_func);",
          "1190:    zval_ptr_dtor(&args[0]);",
          "1191:    break;",
          "1192:   }",
          "1193:   BG(serialize_lock)--;",
          "1194:   zval_ptr_dtor(&retval);",
          "1195:   if (EG(exception)) {",
          "1196:    zend_string_release(class_name);",
          "1197:    zval_ptr_dtor(&user_func);",
          "1198:    zval_ptr_dtor(&args[0]);",
          "1199:    return 0;",
          "1200:   }",
          "1203:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "1204:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "1205:    incomplete_class = 1;",
          "1206:    ce = PHP_IC_ENTRY;",
          "1207:   }",
          "1209:   zval_ptr_dtor(&user_func);",
          "1210:   zval_ptr_dtor(&args[0]);",
          "1211:   break;",
          "1212:  } while (1);",
          "1216:  if (custom_object) {",
          "1217:   int ret;",
          "1219:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "1221:   if (ret && incomplete_class) {",
          "1222:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1223:   }",
          "1224:   zend_string_release(class_name);",
          "1225:   return ret;",
          "1226:  }",
          "1228:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "1230:  if (incomplete_class) {",
          "1231:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1232:  }",
          "1233:  zend_string_release(class_name);",
          "1235:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1237: #line 1238 \"ext/standard/var_unserializer.c\"",
          "1238: yy84:",
          "1240: #line 703 \"ext/standard/var_unserializer.re\"",
          "1242:  size_t len, maxlen;",
          "1243:  zend_string *str;",
          "1245:  len = parse_uiv(start + 2);",
          "1246:  maxlen = max - YYCURSOR;",
          "1247:  if (maxlen < len) {",
          "1249:   return 0;",
          "1250:  }",
          "1252:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "1253:   return 0;",
          "1254:  }",
          "1256:  if (*(YYCURSOR) != '\"') {",
          "1257:   zend_string_free(str);",
          "1259:   return 0;",
          "1260:  }",
          "1262:  if (*(YYCURSOR + 1) != ';') {",
          "1263:   efree(str);",
          "1265:   return 0;",
          "1266:  }",
          "1268:  YYCURSOR += 2;",
          "1271:  ZVAL_STR(rval, str);",
          "1274: #line 1275 \"ext/standard/var_unserializer.c\"",
          "1275: yy86:",
          "1277: #line 737 \"ext/standard/var_unserializer.re\"",
          "1279:  zend_long elements = parse_iv(start + 2);",
          "1282:     if (!var_hash) return 0;",
          "1284:  if (elements < 0) {",
          "1285:   return 0;",
          "1286:  }",
          "1288:  array_init_size(rval, elements);",
          "1289:  if (elements) {",
          "1292:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "1293:  }",
          "1295:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "1296:   return 0;",
          "1297:  }",
          "1299:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "1301: #line 1302 \"ext/standard/var_unserializer.c\"",
          "1302: yy88:",
          "1305:   if (yych == '+') goto yy96;",
          "1306:   goto yy18;",
          "1308:   if (yych <= '-') goto yy96;",
          "1310:   if (yych >= ':') goto yy18;",
          "1312: yy89:",
          "1317:  if (yych <= '9') goto yy89;",
          "1318:  if (yych == ';') goto yy71;",
          "1319:  goto yy18;",
          "1320: yy91:",
          "1321:  yych = *++YYCURSOR;",
          "1322:  if (yych == ';') goto yy97;",
          "1323:  goto yy18;",
          "1324: yy92:",
          "1326: #line 761 \"ext/standard/var_unserializer.re\"",
          "1328:     if (!var_hash) return 0;",
          "1330:  return object_common2(UNSERIALIZE_PASSTHRU,",
          "1331:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
          "1332: }",
          "1333: #line 1334 \"ext/standard/var_unserializer.c\"",
          "1334: yy94:",
          "1335:  ++YYCURSOR;",
          "1336: #line 671 \"ext/standard/var_unserializer.re\"",
          "1337:  {",
          "1338:  size_t len, maxlen;",
          "1339:  char *str;",
          "1341:  len = parse_uiv(start + 2);",
          "1342:  maxlen = max - YYCURSOR;",
          "1343:  if (maxlen < len) {",
          "1348:  str = (char*)YYCURSOR;",
          "1350:  YYCURSOR += len;",
          "1352:  if (*(YYCURSOR) != '\"') {",
          "1357:  if (*(YYCURSOR + 1) != ';') {",
          "1359:   return 0;",
          "1362:  YYCURSOR += 2;",
          "1365:  ZVAL_STRINGL(rval, str, len);",
          "1368: #line 1369 \"ext/standard/var_unserializer.c\"",
          "1372:  if (yych <= '9') goto yy89;",
          "1373:  goto yy18;",
          "1376: #line 646 \"ext/standard/var_unserializer.re\"",
          "1380:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1381:   ZVAL_DOUBLE(rval, php_get_nan());",
          "1382:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1383:   ZVAL_DOUBLE(rval, php_get_inf());",
          "1384:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1385:   ZVAL_DOUBLE(rval, -php_get_inf());",
          "1387:   ZVAL_NULL(rval);",
          "1392: #line 1393 \"ext/standard/var_unserializer.c\"",
          "1394: #line 921 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include \"ext/standard/php_var.h\"",
          "23: #include \"php_incomplete_class.h\"",
          "26: #define VAR_ENTRIES_MAX 1024",
          "27: #define VAR_ENTRIES_DBG 0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: struct php_unserialize_data {",
          "26:  void *first;",
          "27:  void *last;",
          "28:  void *first_dtor;",
          "29:  void *last_dtor;",
          "30: };",
          "32: PHPAPI php_unserialize_data_t php_var_unserialize_init() {",
          "33:  php_unserialize_data_t d;",
          "35:  if (BG(serialize_lock) || !BG(unserialize).level) {",
          "36:   d = ecalloc(1, sizeof(struct php_unserialize_data));",
          "37:   if (!BG(serialize_lock)) {",
          "38:    BG(unserialize).data = d;",
          "39:    BG(unserialize).level = 1;",
          "40:   }",
          "41:  } else {",
          "42:   d = BG(unserialize).data;",
          "43:   ++BG(unserialize).level;",
          "44:  }",
          "45:  return d;",
          "46: }",
          "48: PHPAPI void php_var_unserialize_destroy(php_unserialize_data_t d) {",
          "50:  if (BG(serialize_lock) || BG(unserialize).level == 1) {",
          "51:   var_destroy(&d);",
          "52:   efree(d);",
          "53:  }",
          "54:  if (!BG(serialize_lock) && !--BG(unserialize).level) {",
          "55:   BG(unserialize).data = NULL;",
          "56:  }",
          "57: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b47c49d7a00bc34d7e0f3d72732f66e904da6fa7",
      "candidate_info": {
        "commit_hash": "b47c49d7a00bc34d7e0f3d72732f66e904da6fa7",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/b47c49d7a00bc34d7e0f3d72732f66e904da6fa7",
        "files": [
          "ext/standard/tests/serialize/bug70963.phpt",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Merge branch 'PHP-5.6' into PHP-7.0",
        "before_after_code_files": [
          "ext/standard/tests/serialize/bug70963.phpt||ext/standard/tests/serialize/bug70963.phpt",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "ext/standard/tests/serialize/bug70963.phpt||ext/standard/tests/serialize/bug70963.phpt": [
          "File: ext/standard/tests/serialize/bug70963.phpt -> ext/standard/tests/serialize/bug70963.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: var_dump(unserialize('a:2:{i:0;O:9:\"exception\":1:{s:16:\"'.\"\\0\".'Exception'.\"\\0\".'trace\";s:4:\"test\";}i:1;r:3;}'));",
          "7: ?>",
          "8: --EXPECTF--",
          "10:   [0]=>",
          "11:   object(Exception)#%d (6) {",
          "12:     [\"message\":protected]=>",
          "",
          "[Removed Lines]",
          "9: array(1) {",
          "",
          "[Added Lines]",
          "9: array(2) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22:     [\"previous\":\"Exception\":private]=>",
          "23:     NULL",
          "24:   }",
          "25: }",
          "27:   [0]=>",
          "28:   object(Exception)#%d (6) {",
          "29:     [\"message\":protected]=>",
          "",
          "[Removed Lines]",
          "26: array(1) {",
          "",
          "[Added Lines]",
          "25:   [1]=>",
          "26:   string(4) \"test\"",
          "28: array(2) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "39:     [\"previous\":\"Exception\":private]=>",
          "40:     NULL",
          "41:   }",
          "42: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:   [1]=>",
          "45:   string(4) \"test\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define VAR_ENTRIES_MAX 1024",
          "29: #define VAR_ENTRIES_DBG 0",
          "31: typedef struct {",
          "32:  zval *data[VAR_ENTRIES_MAX];",
          "33:  zend_long used_slots;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: #define VAR_WAKEUP_FLAG 1",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96:         (*var_hashx)->last_dtor = var_hash;",
          "97:     }",
          "98:     ZVAL_UNDEF(&var_hash->data[var_hash->used_slots]);",
          "99:     return &var_hash->data[var_hash->used_slots++];",
          "100: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "102:  Z_VAR_FLAGS(var_hash->data[var_hash->used_slots]) = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "143:  zend_long i;",
          "144:  var_entries *var_hash = (*var_hashx)->first;",
          "145:  var_dtor_entries *var_dtor_hash = (*var_hashx)->first_dtor;",
          "146: #if VAR_ENTRIES_DBG",
          "147:  fprintf(stderr, \"var_destroy(%ld)\\n\", var_hash?var_hash->used_slots:-1L);",
          "148: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "150:  zend_bool wakeup_failed = 0;",
          "151:  zval wakeup_name;",
          "152:  ZVAL_UNDEF(&wakeup_name);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "156:  while (var_dtor_hash) {",
          "157:   for (i = 0; i < var_dtor_hash->used_slots; i++) {",
          "158: #if VAR_ENTRIES_DBG",
          "159:    fprintf(stderr, \"var_destroy dtor(%p, %ld)\\n\", var_dtor_hash->data[i], Z_REFCOUNT_P(var_dtor_hash->data[i]));",
          "160: #endif",
          "162:   }",
          "163:   next = var_dtor_hash->next;",
          "164:   efree_size(var_dtor_hash, sizeof(var_dtor_entries));",
          "165:   var_dtor_hash = next;",
          "166:  }",
          "167: }",
          "",
          "[Removed Lines]",
          "161:    zval_ptr_dtor(&var_dtor_hash->data[i]);",
          "",
          "[Added Lines]",
          "166:    zval *zv = &var_dtor_hash->data[i];",
          "172:    if (Z_VAR_FLAGS_P(zv) == VAR_WAKEUP_FLAG) {",
          "173:     if (!wakeup_failed) {",
          "174:      zval retval;",
          "175:      if (Z_ISUNDEF(wakeup_name)) {",
          "176:       ZVAL_STRINGL(&wakeup_name, \"__wakeup\", sizeof(\"__wakeup\") - 1);",
          "177:      }",
          "179:      BG(serialize_lock)++;",
          "180:      if (call_user_function_ex(CG(function_table), zv, &wakeup_name, &retval, 0, 0, 1, NULL) == FAILURE || Z_ISUNDEF(retval)) {",
          "181:       wakeup_failed = 1;",
          "182:       GC_FLAGS(Z_OBJ_P(zv)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "183:      }",
          "184:      BG(serialize_lock)--;",
          "186:      zval_ptr_dtor(&retval);",
          "187:     } else {",
          "188:      GC_FLAGS(Z_OBJ_P(zv)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "189:     }",
          "190:    }",
          "192:    zval_ptr_dtor(zv);",
          "199:  zval_ptr_dtor(&wakeup_name);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "238: #define YYMARKER marker",
          "",
          "[Removed Lines]",
          "241: #line 246 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "274: #line 279 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "459: #endif",
          "460: static inline int object_common2(UNSERIALIZE_PARAMETER, zend_long elements)",
          "461: {",
          "464:  HashTable *ht;",
          "465:  zend_bool has_wakeup;",
          "",
          "[Removed Lines]",
          "462:  zval retval;",
          "463:  zval fname;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "484:  ZVAL_DEREF(rval);",
          "485:  if (has_wakeup) {",
          "498:  }",
          "500:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "",
          "[Removed Lines]",
          "486:   ZVAL_STRINGL(&fname, \"__wakeup\", sizeof(\"__wakeup\") - 1);",
          "487:   BG(serialize_lock)++;",
          "488:   if (call_user_function_ex(CG(function_table), rval, &fname, &retval, 0, 0, 1, NULL) == FAILURE || Z_ISUNDEF(retval)) {",
          "489:    GC_FLAGS(Z_OBJ_P(rval)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "490:   }",
          "491:   BG(serialize_lock)--;",
          "492:   zval_dtor(&fname);",
          "493:   zval_dtor(&retval);",
          "494:  }",
          "496:  if (EG(exception)) {",
          "497:   return 0;",
          "",
          "[Added Lines]",
          "518:   zval *wakeup_var = var_tmp_var(var_hash);",
          "519:   ZVAL_COPY(wakeup_var, rval);",
          "520:   Z_VAR_FLAGS_P(wakeup_var) = VAR_WAKEUP_FLAG;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "555:  start = cursor;",
          "559: {",
          "560:  YYCTYPE yych;",
          "561:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "558: #line 559 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "581: #line 582 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "592:     0,   0,   0,   0,   0,   0,   0,   0,",
          "593:     0,   0,   0,   0,   0,   0,   0,   0,",
          "594:  };",
          "596:  if ((YYLIMIT - YYCURSOR) < 7) YYFILL(7);",
          "597:  yych = *YYCURSOR;",
          "598:  switch (yych) {",
          "599:  case 'C':",
          "601:  case 'N': goto yy5;",
          "608:  case 'o': goto yy12;",
          "613:  }",
          "614: yy2:",
          "617: yy3:",
          "619:  { return 0; }",
          "621: yy4:",
          "622:  yych = *(YYMARKER = ++YYCURSOR);",
          "624:  goto yy3;",
          "625: yy5:",
          "626:  yych = *++YYCURSOR;",
          "628:  goto yy3;",
          "629: yy6:",
          "630:  yych = *(YYMARKER = ++YYCURSOR);",
          "632:  goto yy3;",
          "633: yy7:",
          "634:  yych = *(YYMARKER = ++YYCURSOR);",
          "636:  goto yy3;",
          "637: yy8:",
          "638:  yych = *(YYMARKER = ++YYCURSOR);",
          "640:  goto yy3;",
          "641: yy9:",
          "642:  yych = *(YYMARKER = ++YYCURSOR);",
          "644:  goto yy3;",
          "645: yy10:",
          "646:  yych = *(YYMARKER = ++YYCURSOR);",
          "648:  goto yy3;",
          "649: yy11:",
          "650:  yych = *(YYMARKER = ++YYCURSOR);",
          "652:  goto yy3;",
          "653: yy12:",
          "654:  yych = *(YYMARKER = ++YYCURSOR);",
          "656:  goto yy3;",
          "657: yy13:",
          "658:  yych = *(YYMARKER = ++YYCURSOR);",
          "660:  goto yy3;",
          "661: yy14:",
          "662:  ++YYCURSOR;",
          "664:  {",
          "666:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "668: }",
          "673: yy17:",
          "674:  yych = *++YYCURSOR;",
          "675:  if (yybm[0+yych] & 128) {",
          "677:  }",
          "679: yy18:",
          "680:  YYCURSOR = YYMARKER;",
          "681:  goto yy3;",
          "682: yy19:",
          "683:  yych = *++YYCURSOR;",
          "686:  }",
          "687:  goto yy18;",
          "695:  if (yych <= '/') goto yy18;",
          "697:  yych = *++YYCURSOR;",
          "816:   }",
          "833:   }",
          "836:  }",
          "843:  }",
          "847:  }",
          "854:  yych = *++YYCURSOR;",
          "855:  if (yych <= ',') {",
          "857:  } else {",
          "859:   if (yych <= '/') goto yy18;",
          "861:   goto yy18;",
          "862:  }",
          "864:  yych = *++YYCURSOR;",
          "865:  if (yych <= '/') goto yy18;",
          "868:  ++YYCURSOR;",
          "869:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "870:  yych = *YYCURSOR;",
          "885:  }",
          "892:  if (yych <= '/') goto yy18;",
          "894:  goto yy18;",
          "895: yy33:",
          "896:  yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "600:  case 'O': goto yy13;",
          "602:  case 'R': goto yy2;",
          "603:  case 'S': goto yy10;",
          "604:  case 'a': goto yy11;",
          "605:  case 'b': goto yy6;",
          "606:  case 'd': goto yy8;",
          "607:  case 'i': goto yy7;",
          "609:  case 'r': goto yy4;",
          "610:  case 's': goto yy9;",
          "611:  case '}': goto yy14;",
          "612:  default: goto yy16;",
          "615:  yych = *(YYMARKER = ++YYCURSOR);",
          "616:  if (yych == ':') goto yy95;",
          "618: #line 936 \"ext/standard/var_unserializer.re\"",
          "620: #line 621 \"ext/standard/var_unserializer.c\"",
          "623:  if (yych == ':') goto yy89;",
          "627:  if (yych == ';') goto yy87;",
          "631:  if (yych == ':') goto yy83;",
          "635:  if (yych == ':') goto yy77;",
          "639:  if (yych == ':') goto yy53;",
          "643:  if (yych == ':') goto yy46;",
          "647:  if (yych == ':') goto yy39;",
          "651:  if (yych == ':') goto yy32;",
          "655:  if (yych == ':') goto yy25;",
          "659:  if (yych == ':') goto yy17;",
          "663: #line 930 \"ext/standard/var_unserializer.re\"",
          "669: #line 670 \"ext/standard/var_unserializer.c\"",
          "670: yy16:",
          "671:  yych = *++YYCURSOR;",
          "672:  goto yy3;",
          "676:   goto yy20;",
          "678:  if (yych == '+') goto yy19;",
          "684:  if (yybm[0+yych] & 128) {",
          "685:   goto yy20;",
          "688: yy20:",
          "689:  ++YYCURSOR;",
          "690:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "691:  yych = *YYCURSOR;",
          "692:  if (yybm[0+yych] & 128) {",
          "693:   goto yy20;",
          "694:  }",
          "696:  if (yych >= ';') goto yy18;",
          "698:  if (yych != '\"') goto yy18;",
          "699:  ++YYCURSOR;",
          "700: #line 778 \"ext/standard/var_unserializer.re\"",
          "701:  {",
          "702:  size_t len, len2, len3, maxlen;",
          "703:  zend_long elements;",
          "704:  char *str;",
          "705:  zend_string *class_name;",
          "706:  zend_class_entry *ce;",
          "707:  int incomplete_class = 0;",
          "709:  int custom_object = 0;",
          "711:  zval user_func;",
          "712:  zval retval;",
          "713:  zval args[1];",
          "715:     if (!var_hash) return 0;",
          "716:  if (*start == 'C') {",
          "717:   custom_object = 1;",
          "718:  }",
          "720:  len2 = len = parse_uiv(start + 2);",
          "721:  maxlen = max - YYCURSOR;",
          "722:  if (maxlen < len || len == 0) {",
          "724:   return 0;",
          "725:  }",
          "727:  str = (char*)YYCURSOR;",
          "729:  YYCURSOR += len;",
          "731:  if (*(YYCURSOR) != '\"') {",
          "733:   return 0;",
          "734:  }",
          "735:  if (*(YYCURSOR+1) != ':') {",
          "737:   return 0;",
          "738:  }",
          "740:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "741:  if (len3 != len)",
          "742:  {",
          "744:   return 0;",
          "745:  }",
          "747:  class_name = zend_string_init(str, len, 0);",
          "749:  do {",
          "750:   if(!unserialize_allowed_class(class_name, classes)) {",
          "751:    incomplete_class = 1;",
          "752:    ce = PHP_IC_ENTRY;",
          "753:    break;",
          "754:   }",
          "757:   BG(serialize_lock)++;",
          "758:   ce = zend_lookup_class(class_name);",
          "759:   if (ce) {",
          "760:    BG(serialize_lock)--;",
          "761:    if (EG(exception)) {",
          "762:     zend_string_release(class_name);",
          "763:     return 0;",
          "764:    }",
          "765:    break;",
          "766:   }",
          "767:   BG(serialize_lock)--;",
          "769:   if (EG(exception)) {",
          "770:    zend_string_release(class_name);",
          "771:    return 0;",
          "772:   }",
          "775:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "776:    incomplete_class = 1;",
          "777:    ce = PHP_IC_ENTRY;",
          "778:    break;",
          "779:   }",
          "782:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "784:   ZVAL_STR_COPY(&args[0], class_name);",
          "785:   BG(serialize_lock)++;",
          "786:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "787:    BG(serialize_lock)--;",
          "788:    if (EG(exception)) {",
          "789:     zend_string_release(class_name);",
          "790:     zval_ptr_dtor(&user_func);",
          "791:     zval_ptr_dtor(&args[0]);",
          "792:     return 0;",
          "793:    }",
          "794:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "795:    incomplete_class = 1;",
          "796:    ce = PHP_IC_ENTRY;",
          "797:    zval_ptr_dtor(&user_func);",
          "798:    zval_ptr_dtor(&args[0]);",
          "799:    break;",
          "800:   }",
          "801:   BG(serialize_lock)--;",
          "802:   zval_ptr_dtor(&retval);",
          "803:   if (EG(exception)) {",
          "804:    zend_string_release(class_name);",
          "805:    zval_ptr_dtor(&user_func);",
          "806:    zval_ptr_dtor(&args[0]);",
          "807:    return 0;",
          "808:   }",
          "811:   BG(serialize_lock)++;",
          "812:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "813:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "814:    incomplete_class = 1;",
          "815:    ce = PHP_IC_ENTRY;",
          "817:   BG(serialize_lock)--;",
          "819:   zval_ptr_dtor(&user_func);",
          "820:   zval_ptr_dtor(&args[0]);",
          "821:   break;",
          "822:  } while (1);",
          "826:  if (custom_object) {",
          "827:   int ret;",
          "829:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "831:   if (ret && incomplete_class) {",
          "832:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "834:   zend_string_release(class_name);",
          "835:   return ret;",
          "838:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "840:  if (elements < 0) {",
          "841:     zend_string_release(class_name);",
          "842:     return 0;",
          "845:  if (incomplete_class) {",
          "846:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "848:  zend_string_release(class_name);",
          "850:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "851: }",
          "852: #line 853 \"ext/standard/var_unserializer.c\"",
          "853: yy25:",
          "856:   if (yych != '+') goto yy18;",
          "858:   if (yych <= '-') goto yy26;",
          "860:   if (yych <= '9') goto yy27;",
          "863: yy26:",
          "866:  if (yych >= ':') goto yy18;",
          "867: yy27:",
          "871:  if (yych <= '/') goto yy18;",
          "872:  if (yych <= '9') goto yy27;",
          "873:  if (yych >= ';') goto yy18;",
          "874:  yych = *++YYCURSOR;",
          "875:  if (yych != '\"') goto yy18;",
          "876:  ++YYCURSOR;",
          "877: #line 767 \"ext/standard/var_unserializer.re\"",
          "878:  {",
          "879:  long elements;",
          "880:     if (!var_hash) return 0;",
          "882:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "883:  if (elements < 0) {",
          "884:   return 0;",
          "886:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "887: }",
          "888: #line 889 \"ext/standard/var_unserializer.c\"",
          "889: yy32:",
          "890:  yych = *++YYCURSOR;",
          "891:  if (yych == '+') goto yy33;",
          "893:  if (yych <= '9') goto yy34;",
          "",
          "[Added Lines]",
          "622:  case 'O': goto yy4;",
          "624:  case 'R': goto yy6;",
          "625:  case 'S': goto yy7;",
          "626:  case 'a': goto yy8;",
          "627:  case 'b': goto yy9;",
          "628:  case 'd': goto yy10;",
          "629:  case 'i': goto yy11;",
          "631:  case 'r': goto yy13;",
          "632:  case 's': goto yy14;",
          "633:  case '}': goto yy15;",
          "634:  default: goto yy2;",
          "637:  ++YYCURSOR;",
          "639: #line 959 \"ext/standard/var_unserializer.re\"",
          "641: #line 642 \"ext/standard/var_unserializer.c\"",
          "644:  if (yych == ':') goto yy17;",
          "648:  if (yych == ';') goto yy19;",
          "652:  if (yych == ':') goto yy21;",
          "656:  if (yych == ':') goto yy22;",
          "660:  if (yych == ':') goto yy23;",
          "664:  if (yych == ':') goto yy24;",
          "668:  if (yych == ':') goto yy25;",
          "672:  if (yych == ':') goto yy26;",
          "676:  if (yych == ':') goto yy27;",
          "680:  if (yych == ':') goto yy28;",
          "683:  yych = *(YYMARKER = ++YYCURSOR);",
          "684:  if (yych == ':') goto yy29;",
          "685:  goto yy3;",
          "686: yy15:",
          "688: #line 953 \"ext/standard/var_unserializer.re\"",
          "694: #line 695 \"ext/standard/var_unserializer.c\"",
          "698:   goto yy31;",
          "700:  if (yych == '+') goto yy30;",
          "705:  ++YYCURSOR;",
          "706: #line 637 \"ext/standard/var_unserializer.re\"",
          "707:  {",
          "709:  ZVAL_NULL(rval);",
          "710:  return 1;",
          "711: }",
          "712: #line 713 \"ext/standard/var_unserializer.c\"",
          "713: yy21:",
          "715:  if (yych <= ',') {",
          "716:   if (yych == '+') goto yy33;",
          "717:   goto yy18;",
          "718:  } else {",
          "719:   if (yych <= '-') goto yy33;",
          "720:   if (yych <= '/') goto yy18;",
          "721:   if (yych <= '9') goto yy34;",
          "722:   goto yy18;",
          "724: yy22:",
          "725:  yych = *++YYCURSOR;",
          "726:  if (yych == '+') goto yy36;",
          "727:  if (yych <= '/') goto yy18;",
          "728:  if (yych <= '9') goto yy37;",
          "730: yy23:",
          "731:  yych = *++YYCURSOR;",
          "732:  if (yych == '+') goto yy39;",
          "734:  if (yych <= '9') goto yy40;",
          "735:  goto yy18;",
          "736: yy24:",
          "738:  if (yych <= '/') goto yy18;",
          "739:  if (yych <= '1') goto yy42;",
          "740:  goto yy18;",
          "741: yy25:",
          "742:  yych = *++YYCURSOR;",
          "743:  if (yych <= '/') {",
          "744:   if (yych <= ',') {",
          "745:    if (yych == '+') goto yy43;",
          "746:    goto yy18;",
          "747:   } else {",
          "748:    if (yych <= '-') goto yy44;",
          "749:    if (yych <= '.') goto yy45;",
          "750:    goto yy18;",
          "752:  } else {",
          "753:   if (yych <= 'I') {",
          "754:    if (yych <= '9') goto yy46;",
          "755:    if (yych <= 'H') goto yy18;",
          "756:    goto yy48;",
          "757:   } else {",
          "758:    if (yych == 'N') goto yy49;",
          "759:    goto yy18;",
          "762: yy26:",
          "763:  yych = *++YYCURSOR;",
          "764:  if (yych <= ',') {",
          "765:   if (yych == '+') goto yy50;",
          "766:   goto yy18;",
          "767:  } else {",
          "768:   if (yych <= '-') goto yy50;",
          "769:   if (yych <= '/') goto yy18;",
          "770:   if (yych <= '9') goto yy51;",
          "771:   goto yy18;",
          "773: yy27:",
          "774:  yych = *++YYCURSOR;",
          "775:  if (yych <= ',') {",
          "776:   if (yych == '+') goto yy53;",
          "777:   goto yy18;",
          "778:  } else {",
          "779:   if (yych <= '-') goto yy53;",
          "780:   if (yych <= '/') goto yy18;",
          "781:   if (yych <= '9') goto yy54;",
          "782:   goto yy18;",
          "784: yy28:",
          "787:   if (yych == '+') goto yy56;",
          "788:   goto yy18;",
          "790:   if (yych <= '-') goto yy56;",
          "792:   if (yych <= '9') goto yy57;",
          "795: yy29:",
          "797:  if (yych == '+') goto yy59;",
          "799:  if (yych <= '9') goto yy60;",
          "800:  goto yy18;",
          "801: yy30:",
          "802:  yych = *++YYCURSOR;",
          "803:  if (yybm[0+yych] & 128) {",
          "804:   goto yy31;",
          "805:  }",
          "806:  goto yy18;",
          "807: yy31:",
          "811:  if (yybm[0+yych] & 128) {",
          "812:   goto yy31;",
          "815:  if (yych <= ':') goto yy62;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "898:  if (yych >= ':') goto yy18;",
          "899: yy34:",
          "900:  ++YYCURSOR;",
          "902:  yych = *YYCURSOR;",
          "903:  if (yych <= '/') goto yy18;",
          "904:  if (yych <= '9') goto yy34;",
          "941:  yych = *++YYCURSOR;",
          "942:  if (yych <= '/') goto yy18;",
          "943:  if (yych >= ':') goto yy18;",
          "945:  ++YYCURSOR;",
          "946:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "947:  yych = *YYCURSOR;",
          "948:  if (yych <= '/') goto yy18;",
          "994:  goto yy18;",
          "996:  yych = *++YYCURSOR;",
          "997:  if (yych <= '/') goto yy18;",
          "998:  if (yych >= ':') goto yy18;",
          "1000:  ++YYCURSOR;",
          "1001:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "1002:  yych = *YYCURSOR;",
          "1003:  if (yych <= '/') goto yy18;",
          "1043:  yych = *++YYCURSOR;",
          "1062:  yych = *++YYCURSOR;",
          "1064:  goto yy18;",
          "1066:  yych = *++YYCURSOR;",
          "1067:  if (yych <= '/') {",
          "1070:  } else {",
          "1073:  }",
          "1075:  yych = *++YYCURSOR;",
          "1081:  if (yych <= '/') goto yy18;",
          "1084:  ++YYCURSOR;",
          "1085:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1086:  yych = *YYCURSOR;",
          "1087:  if (yych <= ':') {",
          "1088:   if (yych <= '.') {",
          "1089:    if (yych <= '-') goto yy18;",
          "1091:   } else {",
          "1092:    if (yych <= '/') goto yy18;",
          "1094:    goto yy18;",
          "1095:   }",
          "1096:  } else {",
          "1097:   if (yych <= 'E') {",
          "1099:    if (yych <= 'D') goto yy18;",
          "1101:   } else {",
          "1103:    goto yy18;",
          "1104:   }",
          "1105:  }",
          "1107:  yych = *++YYCURSOR;",
          "1108:  if (yych <= '/') goto yy18;",
          "1109:  if (yych >= ':') goto yy18;",
          "1111:  ++YYCURSOR;",
          "1112:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1113:  yych = *YYCURSOR;",
          "1114:  if (yych <= ';') {",
          "1115:   if (yych <= '/') goto yy18;",
          "1117:   if (yych <= ':') goto yy18;",
          "1118:  } else {",
          "1119:   if (yych <= 'E') {",
          "1120:    if (yych <= 'D') goto yy18;",
          "1122:   } else {",
          "1124:    goto yy18;",
          "1125:   }",
          "1126:  }",
          "1128:  ++YYCURSOR;",
          "1130:  {",
          "1131: #if SIZEOF_ZEND_LONG == 4",
          "1132: use_double:",
          "",
          "[Removed Lines]",
          "901:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "905:  if (yych >= ';') goto yy18;",
          "906:  yych = *++YYCURSOR;",
          "907:  if (yych != '{') goto yy18;",
          "908:  ++YYCURSOR;",
          "909: #line 743 \"ext/standard/var_unserializer.re\"",
          "910:  {",
          "911:  zend_long elements = parse_iv(start + 2);",
          "914:     if (!var_hash) return 0;",
          "916:  if (elements < 0) {",
          "917:   return 0;",
          "918:  }",
          "920:  array_init_size(rval, elements);",
          "921:  if (elements) {",
          "924:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "925:  }",
          "927:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "928:   return 0;",
          "929:  }",
          "931:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "932: }",
          "933: #line 934 \"ext/standard/var_unserializer.c\"",
          "934: yy39:",
          "935:  yych = *++YYCURSOR;",
          "936:  if (yych == '+') goto yy40;",
          "937:  if (yych <= '/') goto yy18;",
          "938:  if (yych <= '9') goto yy41;",
          "939:  goto yy18;",
          "940: yy40:",
          "944: yy41:",
          "949:  if (yych <= '9') goto yy41;",
          "950:  if (yych >= ';') goto yy18;",
          "951:  yych = *++YYCURSOR;",
          "952:  if (yych != '\"') goto yy18;",
          "953:  ++YYCURSOR;",
          "954: #line 709 \"ext/standard/var_unserializer.re\"",
          "955:  {",
          "956:  size_t len, maxlen;",
          "957:  zend_string *str;",
          "959:  len = parse_uiv(start + 2);",
          "960:  maxlen = max - YYCURSOR;",
          "961:  if (maxlen < len) {",
          "963:   return 0;",
          "964:  }",
          "966:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "967:   return 0;",
          "968:  }",
          "970:  if (*(YYCURSOR) != '\"') {",
          "971:   zend_string_free(str);",
          "973:   return 0;",
          "974:  }",
          "976:  if (*(YYCURSOR + 1) != ';') {",
          "977:   efree(str);",
          "979:   return 0;",
          "980:  }",
          "982:  YYCURSOR += 2;",
          "985:  ZVAL_STR(rval, str);",
          "986:  return 1;",
          "987: }",
          "988: #line 989 \"ext/standard/var_unserializer.c\"",
          "989: yy46:",
          "990:  yych = *++YYCURSOR;",
          "991:  if (yych == '+') goto yy47;",
          "992:  if (yych <= '/') goto yy18;",
          "993:  if (yych <= '9') goto yy48;",
          "995: yy47:",
          "999: yy48:",
          "1004:  if (yych <= '9') goto yy48;",
          "1005:  if (yych >= ';') goto yy18;",
          "1006:  yych = *++YYCURSOR;",
          "1007:  if (yych != '\"') goto yy18;",
          "1008:  ++YYCURSOR;",
          "1009: #line 677 \"ext/standard/var_unserializer.re\"",
          "1010:  {",
          "1011:  size_t len, maxlen;",
          "1012:  char *str;",
          "1014:  len = parse_uiv(start + 2);",
          "1015:  maxlen = max - YYCURSOR;",
          "1016:  if (maxlen < len) {",
          "1018:   return 0;",
          "1019:  }",
          "1021:  str = (char*)YYCURSOR;",
          "1023:  YYCURSOR += len;",
          "1025:  if (*(YYCURSOR) != '\"') {",
          "1027:   return 0;",
          "1028:  }",
          "1030:  if (*(YYCURSOR + 1) != ';') {",
          "1032:   return 0;",
          "1033:  }",
          "1035:  YYCURSOR += 2;",
          "1038:  ZVAL_STRINGL(rval, str, len);",
          "1039:  return 1;",
          "1040: }",
          "1041: #line 1042 \"ext/standard/var_unserializer.c\"",
          "1042: yy53:",
          "1044:  if (yych <= '/') {",
          "1045:   if (yych <= ',') {",
          "1046:    if (yych == '+') goto yy57;",
          "1047:    goto yy18;",
          "1048:   } else {",
          "1049:    if (yych <= '-') goto yy55;",
          "1050:    if (yych <= '.') goto yy60;",
          "1051:    goto yy18;",
          "1052:   }",
          "1053:  } else {",
          "1054:   if (yych <= 'I') {",
          "1055:    if (yych <= '9') goto yy58;",
          "1056:    if (yych <= 'H') goto yy18;",
          "1057:    goto yy56;",
          "1058:   } else {",
          "1059:    if (yych != 'N') goto yy18;",
          "1060:   }",
          "1061:  }",
          "1063:  if (yych == 'A') goto yy76;",
          "1065: yy55:",
          "1068:   if (yych == '.') goto yy60;",
          "1069:   goto yy18;",
          "1071:   if (yych <= '9') goto yy58;",
          "1072:   if (yych != 'I') goto yy18;",
          "1074: yy56:",
          "1076:  if (yych == 'N') goto yy72;",
          "1077:  goto yy18;",
          "1078: yy57:",
          "1079:  yych = *++YYCURSOR;",
          "1080:  if (yych == '.') goto yy60;",
          "1082:  if (yych >= ':') goto yy18;",
          "1083: yy58:",
          "1090:    goto yy70;",
          "1093:    if (yych <= '9') goto yy58;",
          "1098:    if (yych <= ';') goto yy63;",
          "1100:    goto yy65;",
          "1102:    if (yych == 'e') goto yy65;",
          "1106: yy60:",
          "1110: yy61:",
          "1116:   if (yych <= '9') goto yy61;",
          "1121:    goto yy65;",
          "1123:    if (yych == 'e') goto yy65;",
          "1127: yy63:",
          "1129: #line 668 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "823:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "827:  if (yych == ';') goto yy63;",
          "828:  goto yy18;",
          "829: yy36:",
          "833: yy37:",
          "838:  if (yych <= '9') goto yy37;",
          "839:  if (yych <= ':') goto yy65;",
          "841: yy39:",
          "845: yy40:",
          "850:  if (yych <= '9') goto yy40;",
          "851:  if (yych <= ':') goto yy66;",
          "852:  goto yy18;",
          "853: yy42:",
          "855:  if (yych == ';') goto yy67;",
          "856:  goto yy18;",
          "857: yy43:",
          "859:  if (yych == '.') goto yy45;",
          "860:  if (yych <= '/') goto yy18;",
          "861:  if (yych <= '9') goto yy46;",
          "863: yy44:",
          "866:   if (yych != '.') goto yy18;",
          "868:   if (yych <= '9') goto yy46;",
          "869:   if (yych == 'I') goto yy48;",
          "870:   goto yy18;",
          "872: yy45:",
          "875:  if (yych <= '9') goto yy69;",
          "876:  goto yy18;",
          "877: yy46:",
          "884:    goto yy69;",
          "887:    if (yych <= '9') goto yy46;",
          "892:    if (yych <= ';') goto yy71;",
          "894:    goto yy73;",
          "896:    if (yych == 'e') goto yy73;",
          "900: yy48:",
          "901:  yych = *++YYCURSOR;",
          "902:  if (yych == 'N') goto yy74;",
          "903:  goto yy18;",
          "904: yy49:",
          "905:  yych = *++YYCURSOR;",
          "906:  if (yych == 'A') goto yy75;",
          "907:  goto yy18;",
          "908: yy50:",
          "909:  yych = *++YYCURSOR;",
          "910:  if (yych <= '/') goto yy18;",
          "911:  if (yych >= ':') goto yy18;",
          "912: yy51:",
          "913:  ++YYCURSOR;",
          "914:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "915:  yych = *YYCURSOR;",
          "916:  if (yych <= '/') goto yy18;",
          "917:  if (yych <= '9') goto yy51;",
          "918:  if (yych == ';') goto yy76;",
          "919:  goto yy18;",
          "920: yy53:",
          "921:  yych = *++YYCURSOR;",
          "922:  if (yych <= '/') goto yy18;",
          "923:  if (yych >= ':') goto yy18;",
          "924: yy54:",
          "925:  ++YYCURSOR;",
          "926:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "927:  yych = *YYCURSOR;",
          "928:  if (yych <= '/') goto yy18;",
          "929:  if (yych <= '9') goto yy54;",
          "930:  if (yych <= ':') goto yy78;",
          "931:  goto yy18;",
          "932: yy56:",
          "933:  yych = *++YYCURSOR;",
          "934:  if (yych <= '/') goto yy18;",
          "935:  if (yych >= ':') goto yy18;",
          "936: yy57:",
          "937:  ++YYCURSOR;",
          "938:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "939:  yych = *YYCURSOR;",
          "940:  if (yych <= '/') goto yy18;",
          "941:  if (yych <= '9') goto yy57;",
          "942:  if (yych == ';') goto yy79;",
          "943:  goto yy18;",
          "944: yy59:",
          "948: yy60:",
          "949:  ++YYCURSOR;",
          "950:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "951:  yych = *YYCURSOR;",
          "952:  if (yych <= '/') goto yy18;",
          "953:  if (yych <= '9') goto yy60;",
          "954:  if (yych <= ':') goto yy81;",
          "955:  goto yy18;",
          "956: yy62:",
          "957:  yych = *++YYCURSOR;",
          "958:  if (yych == '\"') goto yy82;",
          "959:  goto yy18;",
          "960: yy63:",
          "961:  ++YYCURSOR;",
          "962: #line 586 \"ext/standard/var_unserializer.re\"",
          "963:  {",
          "964:  zend_long id;",
          "967:  if (!var_hash) return 0;",
          "969:  id = parse_iv(start + 2) - 1;",
          "970:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "971:   return 0;",
          "972:  }",
          "974:  zval_ptr_dtor(rval);",
          "975:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "976:   ZVAL_UNDEF(rval);",
          "977:   return 1;",
          "978:  }",
          "979:  if (Z_ISREF_P(rval_ref)) {",
          "980:   ZVAL_COPY(rval, rval_ref);",
          "981:  } else {",
          "982:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "983:   ZVAL_COPY(rval, rval_ref);",
          "984:  }",
          "986:  return 1;",
          "987: }",
          "988: #line 989 \"ext/standard/var_unserializer.c\"",
          "989: yy65:",
          "990:  yych = *++YYCURSOR;",
          "991:  if (yych == '\"') goto yy84;",
          "992:  goto yy18;",
          "993: yy66:",
          "994:  yych = *++YYCURSOR;",
          "995:  if (yych == '{') goto yy86;",
          "996:  goto yy18;",
          "997: yy67:",
          "998:  ++YYCURSOR;",
          "999: #line 643 \"ext/standard/var_unserializer.re\"",
          "1000:  {",
          "1002:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1003:  return 1;",
          "1004: }",
          "1005: #line 1006 \"ext/standard/var_unserializer.c\"",
          "1006: yy69:",
          "1012:   if (yych <= '9') goto yy69;",
          "1017:    goto yy73;",
          "1019:    if (yych == 'e') goto yy73;",
          "1023: yy71:",
          "1025: #line 691 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1135:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1136:  return 1;",
          "1137: }",
          "1140:  yych = *++YYCURSOR;",
          "1141:  if (yych <= ',') {",
          "1143:  } else {",
          "1145:   if (yych <= '/') goto yy18;",
          "1147:   goto yy18;",
          "1148:  }",
          "1150:  yych = *++YYCURSOR;",
          "1166:  goto yy18;",
          "1168:  yych = *++YYCURSOR;",
          "1171:  goto yy18;",
          "1196:  ++YYCURSOR;",
          "1198:  {",
          "1245:  if (start[2] == '-' || start[2] == '+') {",
          "1246:   digits--;",
          "",
          "[Removed Lines]",
          "1138: #line 1139 \"ext/standard/var_unserializer.c\"",
          "1139: yy65:",
          "1142:   if (yych != '+') goto yy18;",
          "1144:   if (yych <= '-') goto yy66;",
          "1146:   if (yych <= '9') goto yy67;",
          "1149: yy66:",
          "1151:  if (yych <= ',') {",
          "1152:   if (yych == '+') goto yy69;",
          "1153:   goto yy18;",
          "1154:  } else {",
          "1155:   if (yych <= '-') goto yy69;",
          "1156:   if (yych <= '/') goto yy18;",
          "1157:   if (yych >= ':') goto yy18;",
          "1158:  }",
          "1159: yy67:",
          "1160:  ++YYCURSOR;",
          "1161:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1162:  yych = *YYCURSOR;",
          "1163:  if (yych <= '/') goto yy18;",
          "1164:  if (yych <= '9') goto yy67;",
          "1165:  if (yych == ';') goto yy63;",
          "1167: yy69:",
          "1169:  if (yych <= '/') goto yy18;",
          "1170:  if (yych <= '9') goto yy67;",
          "1172: yy70:",
          "1173:  ++YYCURSOR;",
          "1174:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1175:  yych = *YYCURSOR;",
          "1176:  if (yych <= ';') {",
          "1177:   if (yych <= '/') goto yy18;",
          "1178:   if (yych <= '9') goto yy70;",
          "1179:   if (yych <= ':') goto yy18;",
          "1180:   goto yy63;",
          "1181:  } else {",
          "1182:   if (yych <= 'E') {",
          "1183:    if (yych <= 'D') goto yy18;",
          "1184:    goto yy65;",
          "1185:   } else {",
          "1186:    if (yych == 'e') goto yy65;",
          "1187:    goto yy18;",
          "1188:   }",
          "1189:  }",
          "1190: yy72:",
          "1191:  yych = *++YYCURSOR;",
          "1192:  if (yych != 'F') goto yy18;",
          "1193: yy73:",
          "1194:  yych = *++YYCURSOR;",
          "1195:  if (yych != ';') goto yy18;",
          "1197: #line 652 \"ext/standard/var_unserializer.re\"",
          "1201:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1202:   ZVAL_DOUBLE(rval, php_get_nan());",
          "1203:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1204:   ZVAL_DOUBLE(rval, php_get_inf());",
          "1205:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1206:   ZVAL_DOUBLE(rval, -php_get_inf());",
          "1207:  } else {",
          "1208:   ZVAL_NULL(rval);",
          "1209:  }",
          "1211:  return 1;",
          "1212: }",
          "1213: #line 1214 \"ext/standard/var_unserializer.c\"",
          "1214: yy76:",
          "1215:  yych = *++YYCURSOR;",
          "1216:  if (yych == 'N') goto yy73;",
          "1217:  goto yy18;",
          "1218: yy77:",
          "1219:  yych = *++YYCURSOR;",
          "1220:  if (yych <= ',') {",
          "1221:   if (yych != '+') goto yy18;",
          "1222:  } else {",
          "1223:   if (yych <= '-') goto yy78;",
          "1224:   if (yych <= '/') goto yy18;",
          "1225:   if (yych <= '9') goto yy79;",
          "1226:   goto yy18;",
          "1227:  }",
          "1228: yy78:",
          "1229:  yych = *++YYCURSOR;",
          "1230:  if (yych <= '/') goto yy18;",
          "1231:  if (yych >= ':') goto yy18;",
          "1232: yy79:",
          "1233:  ++YYCURSOR;",
          "1234:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1235:  yych = *YYCURSOR;",
          "1236:  if (yych <= '/') goto yy18;",
          "1237:  if (yych <= '9') goto yy79;",
          "1238:  if (yych != ';') goto yy18;",
          "1239:  ++YYCURSOR;",
          "1240: #line 626 \"ext/standard/var_unserializer.re\"",
          "1241:  {",
          "1242: #if SIZEOF_ZEND_LONG == 4",
          "1243:  int digits = YYCURSOR - start - 3;",
          "",
          "[Added Lines]",
          "1034: #line 1035 \"ext/standard/var_unserializer.c\"",
          "1035: yy73:",
          "1038:   if (yych == '+') goto yy88;",
          "1039:   goto yy18;",
          "1041:   if (yych <= '-') goto yy88;",
          "1043:   if (yych <= '9') goto yy89;",
          "1046: yy74:",
          "1048:  if (yych == 'F') goto yy91;",
          "1050: yy75:",
          "1052:  if (yych == 'N') goto yy91;",
          "1054: yy76:",
          "1056: #line 649 \"ext/standard/var_unserializer.re\"",
          "1058: #if SIZEOF_ZEND_LONG == 4",
          "1059:  int digits = YYCURSOR - start - 3;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1263:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1264:  return 1;",
          "1265: }",
          "1301:  yych = *++YYCURSOR;",
          "1311:  ++YYCURSOR;",
          "1313:  {",
          "1314:  zend_long id;",
          "",
          "[Removed Lines]",
          "1266: #line 1267 \"ext/standard/var_unserializer.c\"",
          "1267: yy83:",
          "1268:  yych = *++YYCURSOR;",
          "1269:  if (yych <= '/') goto yy18;",
          "1270:  if (yych >= '2') goto yy18;",
          "1271:  yych = *++YYCURSOR;",
          "1272:  if (yych != ';') goto yy18;",
          "1273:  ++YYCURSOR;",
          "1274: #line 620 \"ext/standard/var_unserializer.re\"",
          "1275:  {",
          "1277:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1278:  return 1;",
          "1279: }",
          "1280: #line 1281 \"ext/standard/var_unserializer.c\"",
          "1281: yy87:",
          "1282:  ++YYCURSOR;",
          "1283: #line 614 \"ext/standard/var_unserializer.re\"",
          "1284:  {",
          "1286:  ZVAL_NULL(rval);",
          "1287:  return 1;",
          "1288: }",
          "1289: #line 1290 \"ext/standard/var_unserializer.c\"",
          "1290: yy89:",
          "1291:  yych = *++YYCURSOR;",
          "1292:  if (yych <= ',') {",
          "1293:   if (yych != '+') goto yy18;",
          "1294:  } else {",
          "1295:   if (yych <= '-') goto yy90;",
          "1296:   if (yych <= '/') goto yy18;",
          "1297:   if (yych <= '9') goto yy91;",
          "1298:   goto yy18;",
          "1299:  }",
          "1300: yy90:",
          "1302:  if (yych <= '/') goto yy18;",
          "1303:  if (yych >= ':') goto yy18;",
          "1304: yy91:",
          "1305:  ++YYCURSOR;",
          "1306:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1307:  yych = *YYCURSOR;",
          "1308:  if (yych <= '/') goto yy18;",
          "1309:  if (yych <= '9') goto yy91;",
          "1310:  if (yych != ';') goto yy18;",
          "1312: #line 589 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1082: #line 1083 \"ext/standard/var_unserializer.c\"",
          "1083: yy78:",
          "1085:  if (yych == '\"') goto yy92;",
          "1086:  goto yy18;",
          "1087: yy79:",
          "1089: #line 612 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1335:  return 1;",
          "1336: }",
          "1337: #line 1338 \"ext/standard/var_unserializer.c\"",
          "1339:  yych = *++YYCURSOR;",
          "1340:  if (yych <= ',') {",
          "1342:  } else {",
          "1343:   if (yych <= '-') goto yy96;",
          "1344:   if (yych <= '/') goto yy18;",
          "1347:  }",
          "1353:  ++YYCURSOR;",
          "1354:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1355:  yych = *YYCURSOR;",
          "1356:  if (yych <= '/') goto yy18;",
          "1359:  ++YYCURSOR;",
          "1361:  {",
          "1369:   return 0;",
          "1370:  }",
          "1376:  }",
          "1379:  } else {",
          "1382:  }",
          "1384:  return 1;",
          "1385: }",
          "1387: }",
          "1391:  return 0;",
          "",
          "[Removed Lines]",
          "1338: yy95:",
          "1341:   if (yych != '+') goto yy18;",
          "1345:   if (yych <= '9') goto yy97;",
          "1346:   goto yy18;",
          "1348: yy96:",
          "1349:  yych = *++YYCURSOR;",
          "1350:  if (yych <= '/') goto yy18;",
          "1351:  if (yych >= ':') goto yy18;",
          "1352: yy97:",
          "1357:  if (yych <= '9') goto yy97;",
          "1358:  if (yych != ';') goto yy18;",
          "1360: #line 563 \"ext/standard/var_unserializer.re\"",
          "1362:  zend_long id;",
          "1365:  if (!var_hash) return 0;",
          "1367:  id = parse_iv(start + 2) - 1;",
          "1368:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1372:  zval_ptr_dtor(rval);",
          "1373:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1374:   ZVAL_UNDEF(rval);",
          "1375:   return 1;",
          "1377:  if (Z_ISREF_P(rval_ref)) {",
          "1378:   ZVAL_COPY(rval, rval_ref);",
          "1380:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "1381:   ZVAL_COPY(rval, rval_ref);",
          "1386: #line 1387 \"ext/standard/var_unserializer.c\"",
          "1388: #line 938 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1114: #line 1115 \"ext/standard/var_unserializer.c\"",
          "1115: yy81:",
          "1116:  yych = *++YYCURSOR;",
          "1117:  if (yych == '\"') goto yy94;",
          "1118:  goto yy18;",
          "1119: yy82:",
          "1120:  ++YYCURSOR;",
          "1121: #line 801 \"ext/standard/var_unserializer.re\"",
          "1122:  {",
          "1123:  size_t len, len2, len3, maxlen;",
          "1124:  zend_long elements;",
          "1125:  char *str;",
          "1126:  zend_string *class_name;",
          "1127:  zend_class_entry *ce;",
          "1128:  int incomplete_class = 0;",
          "1130:  int custom_object = 0;",
          "1132:  zval user_func;",
          "1133:  zval retval;",
          "1134:  zval args[1];",
          "1136:     if (!var_hash) return 0;",
          "1137:  if (*start == 'C') {",
          "1138:   custom_object = 1;",
          "1139:  }",
          "1141:  len2 = len = parse_uiv(start + 2);",
          "1142:  maxlen = max - YYCURSOR;",
          "1143:  if (maxlen < len || len == 0) {",
          "1145:   return 0;",
          "1146:  }",
          "1148:  str = (char*)YYCURSOR;",
          "1150:  YYCURSOR += len;",
          "1152:  if (*(YYCURSOR) != '\"') {",
          "1154:   return 0;",
          "1155:  }",
          "1156:  if (*(YYCURSOR+1) != ':') {",
          "1158:   return 0;",
          "1159:  }",
          "1161:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "1162:  if (len3 != len)",
          "1163:  {",
          "1165:   return 0;",
          "1166:  }",
          "1168:  class_name = zend_string_init(str, len, 0);",
          "1170:  do {",
          "1171:   if(!unserialize_allowed_class(class_name, classes)) {",
          "1172:    incomplete_class = 1;",
          "1173:    ce = PHP_IC_ENTRY;",
          "1174:    break;",
          "1175:   }",
          "1178:   BG(serialize_lock)++;",
          "1179:   ce = zend_lookup_class(class_name);",
          "1180:   if (ce) {",
          "1181:    BG(serialize_lock)--;",
          "1182:    if (EG(exception)) {",
          "1183:     zend_string_release(class_name);",
          "1184:     return 0;",
          "1185:    }",
          "1186:    break;",
          "1187:   }",
          "1188:   BG(serialize_lock)--;",
          "1190:   if (EG(exception)) {",
          "1191:    zend_string_release(class_name);",
          "1192:    return 0;",
          "1193:   }",
          "1196:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "1197:    incomplete_class = 1;",
          "1198:    ce = PHP_IC_ENTRY;",
          "1199:    break;",
          "1200:   }",
          "1203:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "1205:   ZVAL_STR_COPY(&args[0], class_name);",
          "1206:   BG(serialize_lock)++;",
          "1207:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "1208:    BG(serialize_lock)--;",
          "1209:    if (EG(exception)) {",
          "1210:     zend_string_release(class_name);",
          "1211:     zval_ptr_dtor(&user_func);",
          "1212:     zval_ptr_dtor(&args[0]);",
          "1213:     return 0;",
          "1214:    }",
          "1215:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "1216:    incomplete_class = 1;",
          "1217:    ce = PHP_IC_ENTRY;",
          "1218:    zval_ptr_dtor(&user_func);",
          "1219:    zval_ptr_dtor(&args[0]);",
          "1220:    break;",
          "1221:   }",
          "1222:   BG(serialize_lock)--;",
          "1223:   zval_ptr_dtor(&retval);",
          "1224:   if (EG(exception)) {",
          "1225:    zend_string_release(class_name);",
          "1226:    zval_ptr_dtor(&user_func);",
          "1227:    zval_ptr_dtor(&args[0]);",
          "1228:    return 0;",
          "1229:   }",
          "1232:   BG(serialize_lock)++;",
          "1233:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "1234:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "1235:    incomplete_class = 1;",
          "1236:    ce = PHP_IC_ENTRY;",
          "1237:   }",
          "1238:   BG(serialize_lock)--;",
          "1240:   zval_ptr_dtor(&user_func);",
          "1241:   zval_ptr_dtor(&args[0]);",
          "1242:   break;",
          "1243:  } while (1);",
          "1247:  if (custom_object) {",
          "1248:   int ret;",
          "1250:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "1252:   if (ret && incomplete_class) {",
          "1253:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1254:   }",
          "1255:   zend_string_release(class_name);",
          "1256:   return ret;",
          "1257:  }",
          "1259:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "1261:  if (elements < 0) {",
          "1262:     zend_string_release(class_name);",
          "1263:     return 0;",
          "1264:  }",
          "1266:  if (incomplete_class) {",
          "1267:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1268:  }",
          "1269:  zend_string_release(class_name);",
          "1271:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1272: }",
          "1273: #line 1274 \"ext/standard/var_unserializer.c\"",
          "1274: yy84:",
          "1275:  ++YYCURSOR;",
          "1276: #line 732 \"ext/standard/var_unserializer.re\"",
          "1277:  {",
          "1278:  size_t len, maxlen;",
          "1279:  zend_string *str;",
          "1281:  len = parse_uiv(start + 2);",
          "1282:  maxlen = max - YYCURSOR;",
          "1283:  if (maxlen < len) {",
          "1285:   return 0;",
          "1286:  }",
          "1288:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "1289:   return 0;",
          "1290:  }",
          "1292:  if (*(YYCURSOR) != '\"') {",
          "1293:   zend_string_free(str);",
          "1295:   return 0;",
          "1296:  }",
          "1298:  if (*(YYCURSOR + 1) != ';') {",
          "1299:   efree(str);",
          "1301:   return 0;",
          "1302:  }",
          "1304:  YYCURSOR += 2;",
          "1307:  ZVAL_STR(rval, str);",
          "1308:  return 1;",
          "1309: }",
          "1310: #line 1311 \"ext/standard/var_unserializer.c\"",
          "1311: yy86:",
          "1312:  ++YYCURSOR;",
          "1313: #line 766 \"ext/standard/var_unserializer.re\"",
          "1314:  {",
          "1315:  zend_long elements = parse_iv(start + 2);",
          "1318:     if (!var_hash) return 0;",
          "1320:  if (elements < 0) {",
          "1321:   return 0;",
          "1322:  }",
          "1324:  array_init_size(rval, elements);",
          "1325:  if (elements) {",
          "1328:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "1329:  }",
          "1331:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "1332:   return 0;",
          "1333:  }",
          "1335:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "1336: }",
          "1338: yy88:",
          "1341:   if (yych == '+') goto yy96;",
          "1342:   goto yy18;",
          "1346:   if (yych >= ':') goto yy18;",
          "1348: yy89:",
          "1353:  if (yych <= '9') goto yy89;",
          "1354:  if (yych == ';') goto yy71;",
          "1355:  goto yy18;",
          "1356: yy91:",
          "1357:  yych = *++YYCURSOR;",
          "1358:  if (yych == ';') goto yy97;",
          "1359:  goto yy18;",
          "1360: yy92:",
          "1362: #line 790 \"ext/standard/var_unserializer.re\"",
          "1364:  long elements;",
          "1365:     if (!var_hash) return 0;",
          "1367:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "1368:  if (elements < 0) {",
          "1369:   return 0;",
          "1370:  }",
          "1371:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1372: }",
          "1373: #line 1374 \"ext/standard/var_unserializer.c\"",
          "1374: yy94:",
          "1375:  ++YYCURSOR;",
          "1376: #line 700 \"ext/standard/var_unserializer.re\"",
          "1377:  {",
          "1378:  size_t len, maxlen;",
          "1379:  char *str;",
          "1381:  len = parse_uiv(start + 2);",
          "1382:  maxlen = max - YYCURSOR;",
          "1383:  if (maxlen < len) {",
          "1388:  str = (char*)YYCURSOR;",
          "1390:  YYCURSOR += len;",
          "1392:  if (*(YYCURSOR) != '\"') {",
          "1394:   return 0;",
          "1397:  if (*(YYCURSOR + 1) != ';') {",
          "1399:   return 0;",
          "1400:  }",
          "1402:  YYCURSOR += 2;",
          "1405:  ZVAL_STRINGL(rval, str, len);",
          "1406:  return 1;",
          "1407: }",
          "1408: #line 1409 \"ext/standard/var_unserializer.c\"",
          "1409: yy96:",
          "1410:  yych = *++YYCURSOR;",
          "1411:  if (yych <= '/') goto yy18;",
          "1412:  if (yych <= '9') goto yy89;",
          "1413:  goto yy18;",
          "1414: yy97:",
          "1415:  ++YYCURSOR;",
          "1416: #line 675 \"ext/standard/var_unserializer.re\"",
          "1417:  {",
          "1420:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1421:   ZVAL_DOUBLE(rval, php_get_nan());",
          "1422:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1423:   ZVAL_DOUBLE(rval, php_get_inf());",
          "1424:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1425:   ZVAL_DOUBLE(rval, -php_get_inf());",
          "1427:   ZVAL_NULL(rval);",
          "1432: #line 1433 \"ext/standard/var_unserializer.c\"",
          "1434: #line 961 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #define VAR_ENTRIES_MAX 1024",
          "27: #define VAR_ENTRIES_DBG 0",
          "29: typedef struct {",
          "30:  zval *data[VAR_ENTRIES_MAX];",
          "31:  zend_long used_slots;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: #define VAR_WAKEUP_FLAG 1",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:         (*var_hashx)->last_dtor = var_hash;",
          "95:     }",
          "96:     ZVAL_UNDEF(&var_hash->data[var_hash->used_slots]);",
          "97:     return &var_hash->data[var_hash->used_slots++];",
          "98: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100:  Z_VAR_FLAGS(var_hash->data[var_hash->used_slots]) = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "141:  zend_long i;",
          "142:  var_entries *var_hash = (*var_hashx)->first;",
          "143:  var_dtor_entries *var_dtor_hash = (*var_hashx)->first_dtor;",
          "144: #if VAR_ENTRIES_DBG",
          "145:  fprintf(stderr, \"var_destroy(%ld)\\n\", var_hash?var_hash->used_slots:-1L);",
          "146: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "148:  zend_bool wakeup_failed = 0;",
          "149:  zval wakeup_name;",
          "150:  ZVAL_UNDEF(&wakeup_name);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "154:  while (var_dtor_hash) {",
          "155:   for (i = 0; i < var_dtor_hash->used_slots; i++) {",
          "156: #if VAR_ENTRIES_DBG",
          "157:    fprintf(stderr, \"var_destroy dtor(%p, %ld)\\n\", var_dtor_hash->data[i], Z_REFCOUNT_P(var_dtor_hash->data[i]));",
          "158: #endif",
          "160:   }",
          "161:   next = var_dtor_hash->next;",
          "162:   efree_size(var_dtor_hash, sizeof(var_dtor_entries));",
          "163:   var_dtor_hash = next;",
          "164:  }",
          "165: }",
          "",
          "[Removed Lines]",
          "159:    zval_ptr_dtor(&var_dtor_hash->data[i]);",
          "",
          "[Added Lines]",
          "164:    zval *zv = &var_dtor_hash->data[i];",
          "170:    if (Z_VAR_FLAGS_P(zv) == VAR_WAKEUP_FLAG) {",
          "171:     if (!wakeup_failed) {",
          "172:      zval retval;",
          "173:      if (Z_ISUNDEF(wakeup_name)) {",
          "174:       ZVAL_STRINGL(&wakeup_name, \"__wakeup\", sizeof(\"__wakeup\") - 1);",
          "175:      }",
          "177:      BG(serialize_lock)++;",
          "178:      if (call_user_function_ex(CG(function_table), zv, &wakeup_name, &retval, 0, 0, 1, NULL) == FAILURE || Z_ISUNDEF(retval)) {",
          "179:       wakeup_failed = 1;",
          "180:       GC_FLAGS(Z_OBJ_P(zv)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "181:      }",
          "182:      BG(serialize_lock)--;",
          "184:      zval_ptr_dtor(&retval);",
          "185:     } else {",
          "186:      GC_FLAGS(Z_OBJ_P(zv)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "187:     }",
          "188:    }",
          "190:    zval_ptr_dtor(zv);",
          "197:  zval_ptr_dtor(&wakeup_name);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "463: #endif",
          "464: static inline int object_common2(UNSERIALIZE_PARAMETER, zend_long elements)",
          "465: {",
          "468:  HashTable *ht;",
          "469:  zend_bool has_wakeup;",
          "",
          "[Removed Lines]",
          "466:  zval retval;",
          "467:  zval fname;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "488:  ZVAL_DEREF(rval);",
          "489:  if (has_wakeup) {",
          "502:  }",
          "504:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "",
          "[Removed Lines]",
          "490:   ZVAL_STRINGL(&fname, \"__wakeup\", sizeof(\"__wakeup\") - 1);",
          "491:   BG(serialize_lock)++;",
          "492:   if (call_user_function_ex(CG(function_table), rval, &fname, &retval, 0, 0, 1, NULL) == FAILURE || Z_ISUNDEF(retval)) {",
          "493:    GC_FLAGS(Z_OBJ_P(rval)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "494:   }",
          "495:   BG(serialize_lock)--;",
          "496:   zval_dtor(&fname);",
          "497:   zval_dtor(&retval);",
          "498:  }",
          "500:  if (EG(exception)) {",
          "501:   return 0;",
          "",
          "[Added Lines]",
          "522:   zval *wakeup_var = var_tmp_var(var_hash);",
          "523:   ZVAL_COPY(wakeup_var, rval);",
          "524:   Z_VAR_FLAGS_P(wakeup_var) = VAR_WAKEUP_FLAG;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c793885b7624be4e2a95c69a2b8b3fee969b312f",
      "candidate_info": {
        "commit_hash": "c793885b7624be4e2a95c69a2b8b3fee969b312f",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/c793885b7624be4e2a95c69a2b8b3fee969b312f",
        "files": [
          "NEWS",
          "ext/gmp/bug74670.phpt",
          "ext/gmp/tests/serialize.phpt",
          "ext/standard/tests/serialize/bug71311.phpt",
          "ext/standard/tests/serialize/bug73341.phpt",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Fixed bug #74670\n\nValidate that \"C\" serialization payload is followed by \"}\" prior to\ncalling the unserialize() handler. This mitigates issues caused by\nunserialize() not correctly handling strings that are not NUL\nterminated. Making sure that there is a \"}\" at the end avoids the\nproblem.",
        "before_after_code_files": [
          "ext/gmp/bug74670.phpt||ext/gmp/bug74670.phpt",
          "ext/gmp/tests/serialize.phpt||ext/gmp/tests/serialize.phpt",
          "ext/standard/tests/serialize/bug71311.phpt||ext/standard/tests/serialize/bug71311.phpt",
          "ext/standard/tests/serialize/bug73341.phpt||ext/standard/tests/serialize/bug73341.phpt",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "ext/gmp/bug74670.phpt||ext/gmp/bug74670.phpt": [
          "File: ext/gmp/bug74670.phpt -> ext/gmp/bug74670.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #74670: Integer Underflow when unserializing GMP and possible other classes",
          "3: --FILE--",
          "4: <?php",
          "5: $str = 'C:3:\"GMP\":4:{s:6666666666:\"\"}';",
          "6: var_dump(unserialize($str));",
          "7: ?>",
          "8: --EXPECTF--",
          "9: Notice: unserialize(): Error at offset 13 of 29 bytes in %s on line %d",
          "10: bool(false)",
          "",
          "---------------"
        ],
        "ext/gmp/tests/serialize.phpt||ext/gmp/tests/serialize.phpt": [
          "File: ext/gmp/tests/serialize.phpt -> ext/gmp/tests/serialize.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: } catch (Exception $e) { var_dump($e->getMessage()); }",
          "20: try {",
          "22: } catch (Exception $e) { var_dump($e->getMessage()); }",
          "24: ?>",
          "",
          "[Removed Lines]",
          "21:     unserialize('C:3:\"GMP\":8:{s:2:\"42\";}');",
          "",
          "[Added Lines]",
          "21:     unserialize('C:3:\"GMP\":9:{s:2:\"42\";}');",
          "",
          "---------------"
        ],
        "ext/standard/tests/serialize/bug71311.phpt||ext/standard/tests/serialize/bug71311.phpt": [
          "File: ext/standard/tests/serialize/bug71311.phpt -> ext/standard/tests/serialize/bug71311.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: Bug #71311 Use-after-free vulnerability in SPL(ArrayObject, unserialize)",
          "3: --FILE--",
          "4: <?php",
          "6: var_dump($data);",
          "7: ?>",
          "8: --EXPECTF--",
          "",
          "[Removed Lines]",
          "5: $data = unserialize(\"C:11:\\\"ArrayObject\\\":11:{x:i:0;r:3;XX\");",
          "",
          "[Added Lines]",
          "5: $data = unserialize(\"C:11:\\\"ArrayObject\\\":11:{x:i:0;r:3;X}\");",
          "",
          "---------------"
        ],
        "ext/standard/tests/serialize/bug73341.phpt||ext/standard/tests/serialize/bug73341.phpt": [
          "File: ext/standard/tests/serialize/bug73341.phpt -> ext/standard/tests/serialize/bug73341.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: --FILE--",
          "4: <?php",
          "5: try {",
          "7: $obj = unserialize($token);",
          "8: } catch(Exception $e) {",
          "9:  echo $e->getMessage().\"\\n\";",
          "",
          "[Removed Lines]",
          "6: $token = 'a:2:{i:0;O:1:\"0\":2:0s:1:\"0\";i:0;s:1:\"0\";a:1:{i:0;C:11:\"ArrayObject\":7:0x:i:0;r0';",
          "",
          "[Added Lines]",
          "6: $token = 'a:2:{i:0;O:1:\"0\":2:0s:1:\"0\";i:0;s:1:\"0\";a:1:{i:0;C:11:\"ArrayObject\":7:{x:i:0;r}';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "21: Error at offset 6 of 7 bytes",
          "23: Notice: ArrayObject::unserialize(): Unexpected end of serialized data in %sbug73341.php on line %d",
          "",
          "[Removed Lines]",
          "24: Error at offset 24 of 34 bytes",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "477:   return 0;",
          "478:  }",
          "480:  if (ce->unserialize == NULL) {",
          "481:   zend_error(E_WARNING, \"Class %s has no unserializer\", ZSTR_VAL(ce->name));",
          "482:   object_init_ex(rval, ce);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "483:  if ((*p)[datalen] != '}') {",
          "484:   return 0;",
          "485:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "484:   return 0;",
          "485:  }",
          "490: }",
          "492: static inline zend_long object_common1(UNSERIALIZE_PARAMETER, zend_class_entry *ce)",
          "",
          "[Removed Lines]",
          "487:  (*p) += datalen;",
          "489:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "",
          "[Added Lines]",
          "495:  return 1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "603:  start = cursor;",
          "607: {",
          "608:  YYCTYPE yych;",
          "609:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "606: #line 607 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "612: #line 613 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "661: yy2:",
          "662:  ++YYCURSOR;",
          "663: yy3:",
          "665:  { return 0; }",
          "667: yy4:",
          "668:  yych = *(YYMARKER = ++YYCURSOR);",
          "669:  if (yych == ':') goto yy17;",
          "",
          "[Removed Lines]",
          "664: #line 982 \"ext/standard/var_unserializer.re\"",
          "666: #line 667 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "670: #line 988 \"ext/standard/var_unserializer.re\"",
          "672: #line 673 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "710:  goto yy3;",
          "711: yy15:",
          "712:  ++YYCURSOR;",
          "714:  {",
          "716:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "718: }",
          "720: yy17:",
          "721:  yych = *++YYCURSOR;",
          "722:  if (yybm[0+yych] & 128) {",
          "",
          "[Removed Lines]",
          "713: #line 976 \"ext/standard/var_unserializer.re\"",
          "719: #line 720 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "719: #line 982 \"ext/standard/var_unserializer.re\"",
          "725: #line 726 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "728:  goto yy3;",
          "729: yy19:",
          "730:  ++YYCURSOR;",
          "732:  {",
          "734:  ZVAL_NULL(rval);",
          "735:  return 1;",
          "736: }",
          "738: yy21:",
          "739:  yych = *++YYCURSOR;",
          "740:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "731: #line 660 \"ext/standard/var_unserializer.re\"",
          "737: #line 738 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "737: #line 666 \"ext/standard/var_unserializer.re\"",
          "743: #line 744 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "984:  goto yy18;",
          "985: yy63:",
          "986:  ++YYCURSOR;",
          "988:  {",
          "989:  zend_long id;",
          "",
          "[Removed Lines]",
          "987: #line 611 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "993: #line 617 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1010:  return 1;",
          "1011: }",
          "1013: yy65:",
          "1014:  yych = *++YYCURSOR;",
          "1015:  if (yych == '\"') goto yy84;",
          "",
          "[Removed Lines]",
          "1012: #line 1013 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1018: #line 1019 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1020:  goto yy18;",
          "1021: yy67:",
          "1022:  ++YYCURSOR;",
          "1024:  {",
          "1026:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1027:  return 1;",
          "1028: }",
          "1030: yy69:",
          "1031:  ++YYCURSOR;",
          "1032:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "",
          "[Removed Lines]",
          "1023: #line 666 \"ext/standard/var_unserializer.re\"",
          "1029: #line 1030 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1029: #line 672 \"ext/standard/var_unserializer.re\"",
          "1035: #line 1036 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1046:  }",
          "1047: yy71:",
          "1048:  ++YYCURSOR;",
          "1050:  {",
          "1051: #if SIZEOF_ZEND_LONG == 4",
          "1052: use_double:",
          "",
          "[Removed Lines]",
          "1049: #line 714 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1055: #line 720 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1055:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1056:  return 1;",
          "1057: }",
          "1059: yy73:",
          "1060:  yych = *++YYCURSOR;",
          "1061:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1058: #line 1059 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1064: #line 1065 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1077:  goto yy18;",
          "1078: yy76:",
          "1079:  ++YYCURSOR;",
          "1081:  {",
          "1082: #if SIZEOF_ZEND_LONG == 4",
          "1083:  int digits = YYCURSOR - start - 3;",
          "",
          "[Removed Lines]",
          "1080: #line 672 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1086: #line 678 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1103:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1104:  return 1;",
          "1105: }",
          "1107: yy78:",
          "1108:  yych = *++YYCURSOR;",
          "1109:  if (yych == '\"') goto yy92;",
          "1110:  goto yy18;",
          "1111: yy79:",
          "1112:  ++YYCURSOR;",
          "1114:  {",
          "1115:  zend_long id;",
          "",
          "[Removed Lines]",
          "1106: #line 1107 \"ext/standard/var_unserializer.c\"",
          "1113: #line 636 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1112: #line 1113 \"ext/standard/var_unserializer.c\"",
          "1119: #line 642 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1135:  return 1;",
          "1136: }",
          "1138: yy81:",
          "1139:  yych = *++YYCURSOR;",
          "1140:  if (yych == '\"') goto yy94;",
          "1141:  goto yy18;",
          "1142: yy82:",
          "1143:  ++YYCURSOR;",
          "1145:  {",
          "1146:  size_t len, len2, len3, maxlen;",
          "1147:  zend_long elements;",
          "",
          "[Removed Lines]",
          "1137: #line 1138 \"ext/standard/var_unserializer.c\"",
          "1144: #line 824 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1143: #line 1144 \"ext/standard/var_unserializer.c\"",
          "1150: #line 830 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1294:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1295: }",
          "1297: yy84:",
          "1298:  ++YYCURSOR;",
          "1300:  {",
          "1301:  size_t len, maxlen;",
          "1302:  zend_string *str;",
          "",
          "[Removed Lines]",
          "1296: #line 1297 \"ext/standard/var_unserializer.c\"",
          "1299: #line 755 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1302: #line 1303 \"ext/standard/var_unserializer.c\"",
          "1305: #line 761 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1330:  ZVAL_STR(rval, str);",
          "1331:  return 1;",
          "1332: }",
          "1334: yy86:",
          "1335:  ++YYCURSOR;",
          "1337:  {",
          "1338:  zend_long elements = parse_iv(start + 2);",
          "",
          "[Removed Lines]",
          "1333: #line 1334 \"ext/standard/var_unserializer.c\"",
          "1336: #line 789 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1339: #line 1340 \"ext/standard/var_unserializer.c\"",
          "1342: #line 795 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1358:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "1359: }",
          "1361: yy88:",
          "1362:  yych = *++YYCURSOR;",
          "1363:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1360: #line 1361 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1366: #line 1367 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1382:  goto yy18;",
          "1383: yy92:",
          "1384:  ++YYCURSOR;",
          "1386:  {",
          "1387:  zend_long elements;",
          "1388:     if (!var_hash) return 0;",
          "",
          "[Removed Lines]",
          "1385: #line 813 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1391: #line 819 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1393:  }",
          "1394:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1395: }",
          "1397: yy94:",
          "1398:  ++YYCURSOR;",
          "1400:  {",
          "1401:  size_t len, maxlen;",
          "1402:  char *str;",
          "",
          "[Removed Lines]",
          "1396: #line 1397 \"ext/standard/var_unserializer.c\"",
          "1399: #line 723 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1402: #line 1403 \"ext/standard/var_unserializer.c\"",
          "1405: #line 729 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1428:  ZVAL_STRINGL(rval, str, len);",
          "1429:  return 1;",
          "1430: }",
          "1432: yy96:",
          "1433:  yych = *++YYCURSOR;",
          "1434:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1431: #line 1432 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1437: #line 1438 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1436:  goto yy18;",
          "1437: yy97:",
          "1438:  ++YYCURSOR;",
          "1440:  {",
          "",
          "[Removed Lines]",
          "1439: #line 698 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1445: #line 704 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1453:  return 1;",
          "1454: }",
          "1456: }",
          "1460:  return 0;",
          "",
          "[Removed Lines]",
          "1455: #line 1456 \"ext/standard/var_unserializer.c\"",
          "1457: #line 984 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1461: #line 1462 \"ext/standard/var_unserializer.c\"",
          "1463: #line 990 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "481:   return 0;",
          "482:  }",
          "484:  if (ce->unserialize == NULL) {",
          "485:   zend_error(E_WARNING, \"Class %s has no unserializer\", ZSTR_VAL(ce->name));",
          "486:   object_init_ex(rval, ce);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "487:  if ((*p)[datalen] != '}') {",
          "488:   return 0;",
          "489:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "488:   return 0;",
          "489:  }",
          "494: }",
          "496: static inline zend_long object_common1(UNSERIALIZE_PARAMETER, zend_class_entry *ce)",
          "",
          "[Removed Lines]",
          "491:  (*p) += datalen;",
          "493:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "",
          "[Added Lines]",
          "499:  return 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "03da5f8e30cc65584d38d478ea566062ff99579b",
      "candidate_info": {
        "commit_hash": "03da5f8e30cc65584d38d478ea566062ff99579b",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/03da5f8e30cc65584d38d478ea566062ff99579b",
        "files": [
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Try to intern unserualized string keys",
        "before_after_code_files": [
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "389: #define UNSERIALIZE_PARAMETER zval *rval, const unsigned char **p, const unsigned char *max, php_unserialize_data_t *var_hash",
          "390: #define UNSERIALIZE_PASSTHRU rval, p, max, var_hash",
          "394: static zend_always_inline int process_nested_data(UNSERIALIZE_PARAMETER, HashTable *ht, zend_long elements, int objprops)",
          "395: {",
          "",
          "[Removed Lines]",
          "392: static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER);",
          "",
          "[Added Lines]",
          "392: static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER, int as_key);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "400:   ZVAL_UNDEF(&key);",
          "403:    zval_ptr_dtor(&key);",
          "404:    return 0;",
          "405:   }",
          "",
          "[Removed Lines]",
          "402:   if (!php_var_unserialize_internal(&key, p, max, NULL)) {",
          "",
          "[Added Lines]",
          "402:   if (!php_var_unserialize_internal(&key, p, max, NULL, 1)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "438: string_key:",
          "439:     {",
          "440:      zend_property_info *existing_propinfo;",
          "442:      const char *unmangled_class = NULL;",
          "443:      const char *unmangled_prop;",
          "444:      size_t unmangled_prop_len;",
          "",
          "[Removed Lines]",
          "441:      zend_string *new_key, *unmangled;",
          "",
          "[Added Lines]",
          "441:      zend_string *new_key;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "448:       return 0;",
          "449:      }",
          "461:         new_key = zend_mangle_property_name(",
          "465:        } else {",
          "470:        }",
          "472:       } else {",
          "475:       }",
          "480:      }",
          "482:      if ((old_data = zend_hash_find(ht, Z_STR(key))) != NULL) {",
          "",
          "[Removed Lines]",
          "451:      unmangled = zend_string_init(unmangled_prop, unmangled_prop_len, 0);",
          "452:      if (Z_TYPE_P(rval) == IS_OBJECT",
          "453:        && ((existing_propinfo = zend_hash_find_ptr(&Z_OBJCE_P(rval)->properties_info, unmangled)) != NULL)",
          "454:        && (existing_propinfo->flags & ZEND_ACC_PPP_MASK)) {",
          "455:       if (existing_propinfo->flags & ZEND_ACC_PROTECTED) {",
          "456:        new_key = zend_mangle_property_name(",
          "457:         \"*\", 1, ZSTR_VAL(unmangled), ZSTR_LEN(unmangled), 0);",
          "458:        zend_string_release(unmangled);",
          "459:       } else if (existing_propinfo->flags & ZEND_ACC_PRIVATE) {",
          "460:        if (unmangled_class != NULL && strcmp(unmangled_class, \"*\") != 0) {",
          "462:          unmangled_class, strlen(unmangled_class),",
          "463:          ZSTR_VAL(unmangled), ZSTR_LEN(unmangled),",
          "464:          0);",
          "466:         new_key = zend_mangle_property_name(",
          "467:          ZSTR_VAL(existing_propinfo->ce->name), ZSTR_LEN(existing_propinfo->ce->name),",
          "468:          ZSTR_VAL(unmangled), ZSTR_LEN(unmangled),",
          "469:          0);",
          "471:        zend_string_release(unmangled);",
          "473:        ZEND_ASSERT(existing_propinfo->flags & ZEND_ACC_PUBLIC);",
          "474:        new_key = unmangled;",
          "476:       zend_string_release(Z_STR(key));",
          "477:       ZVAL_STR(&key, new_key);",
          "478:      } else {",
          "479:       zend_string_release(unmangled);",
          "",
          "[Added Lines]",
          "451:      if (Z_TYPE_P(rval) == IS_OBJECT) {",
          "452:       zend_string *unmangled = zend_string_init(unmangled_prop, unmangled_prop_len, 0);",
          "454:       if (((existing_propinfo = zend_hash_find_ptr(&Z_OBJCE_P(rval)->properties_info, unmangled)) != NULL)",
          "455:         && (existing_propinfo->flags & ZEND_ACC_PPP_MASK)) {",
          "456:        if (existing_propinfo->flags & ZEND_ACC_PROTECTED) {",
          "458:          \"*\", 1, ZSTR_VAL(unmangled), ZSTR_LEN(unmangled), 0);",
          "459:         zend_string_release(unmangled);",
          "460:        } else if (existing_propinfo->flags & ZEND_ACC_PRIVATE) {",
          "461:         if (unmangled_class != NULL && strcmp(unmangled_class, \"*\") != 0) {",
          "462:          new_key = zend_mangle_property_name(",
          "463:           unmangled_class, strlen(unmangled_class),",
          "464:           ZSTR_VAL(unmangled), ZSTR_LEN(unmangled),",
          "465:           0);",
          "466:         } else {",
          "467:          new_key = zend_mangle_property_name(",
          "468:           ZSTR_VAL(existing_propinfo->ce->name), ZSTR_LEN(existing_propinfo->ce->name),",
          "469:           ZSTR_VAL(unmangled), ZSTR_LEN(unmangled),",
          "470:           0);",
          "471:         }",
          "472:         zend_string_release(unmangled);",
          "474:         ZEND_ASSERT(existing_propinfo->flags & ZEND_ACC_PUBLIC);",
          "475:         new_key = unmangled;",
          "477:        zend_string_release(Z_STR(key));",
          "478:        ZVAL_STR(&key, new_key);",
          "480:        zend_string_release(unmangled);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "499:    }",
          "500:   }",
          "503:    zval_ptr_dtor(&key);",
          "504:    return 0;",
          "505:   }",
          "",
          "[Removed Lines]",
          "502:   if (!php_var_unserialize_internal(data, p, max, var_hash)) {",
          "",
          "[Added Lines]",
          "504:   if (!php_var_unserialize_internal(data, p, max, var_hash, 0)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "625:  zend_long orig_used_slots = orig_var_entries ? orig_var_entries->used_slots : 0;",
          "626:  int result;",
          "630:  if (!result) {",
          "",
          "[Removed Lines]",
          "628:  result = php_var_unserialize_internal(UNSERIALIZE_PASSTHRU);",
          "",
          "[Added Lines]",
          "630:  result = php_var_unserialize_internal(UNSERIALIZE_PASSTHRU, 0);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "646:  return result;",
          "647: }",
          "650: {",
          "651:  const unsigned char *cursor, *limit, *marker, *start;",
          "652:  zval *rval_ref;",
          "",
          "[Removed Lines]",
          "649: static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER)",
          "",
          "[Added Lines]",
          "651: static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER, int as_key)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "665:  start = cursor;",
          "669: {",
          "670:  YYCTYPE yych;",
          "671:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "668: #line 669 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "670: #line 671 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "723: yy2:",
          "724:  ++YYCURSOR;",
          "725: yy3:",
          "727:  { return 0; }",
          "729: yy4:",
          "730:  yych = *(YYMARKER = ++YYCURSOR);",
          "731:  if (yych == ':') goto yy17;",
          "",
          "[Removed Lines]",
          "726: #line 1066 \"ext/standard/var_unserializer.re\"",
          "728: #line 729 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "728: #line 1070 \"ext/standard/var_unserializer.re\"",
          "730: #line 731 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "772:  goto yy3;",
          "773: yy15:",
          "774:  ++YYCURSOR;",
          "776:  {",
          "778:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "780: }",
          "782: yy17:",
          "783:  yych = *++YYCURSOR;",
          "784:  if (yybm[0+yych] & 128) {",
          "",
          "[Removed Lines]",
          "775: #line 1060 \"ext/standard/var_unserializer.re\"",
          "781: #line 782 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "777: #line 1064 \"ext/standard/var_unserializer.re\"",
          "783: #line 784 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "789:  goto yy3;",
          "790: yy19:",
          "791:  ++YYCURSOR;",
          "793:  {",
          "795:  ZVAL_NULL(rval);",
          "796:  return 1;",
          "797: }",
          "799: yy21:",
          "800:  yych = *++YYCURSOR;",
          "801:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "792: #line 723 \"ext/standard/var_unserializer.re\"",
          "798: #line 799 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "794: #line 725 \"ext/standard/var_unserializer.re\"",
          "800: #line 801 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "999:  goto yy18;",
          "1000: yy57:",
          "1001:  ++YYCURSOR;",
          "1003:  {",
          "1004:  zend_long id;",
          "",
          "[Removed Lines]",
          "1002: #line 673 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1004: #line 675 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1025:  return 1;",
          "1026: }",
          "1028: yy59:",
          "1029:  yych = *++YYCURSOR;",
          "1030:  if (yych == '\"') goto yy80;",
          "",
          "[Removed Lines]",
          "1027: #line 1028 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1029: #line 1030 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1035:  goto yy18;",
          "1036: yy61:",
          "1037:  ++YYCURSOR;",
          "1039:  {",
          "1041:  ZVAL_FALSE(rval);",
          "1042:  return 1;",
          "1043: }",
          "1045: yy63:",
          "1046:  ++YYCURSOR;",
          "1048:  {",
          "1050:  ZVAL_TRUE(rval);",
          "1051:  return 1;",
          "1052: }",
          "1054: yy65:",
          "1055:  ++YYCURSOR;",
          "1056:  if ((YYLIMIT - YYCURSOR) < 3) YYFILL(3);",
          "",
          "[Removed Lines]",
          "1038: #line 729 \"ext/standard/var_unserializer.re\"",
          "1044: #line 1045 \"ext/standard/var_unserializer.c\"",
          "1047: #line 735 \"ext/standard/var_unserializer.re\"",
          "1053: #line 1054 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1040: #line 731 \"ext/standard/var_unserializer.re\"",
          "1046: #line 1047 \"ext/standard/var_unserializer.c\"",
          "1049: #line 737 \"ext/standard/var_unserializer.re\"",
          "1055: #line 1056 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1070:  }",
          "1071: yy67:",
          "1072:  ++YYCURSOR;",
          "1074:  {",
          "1075: #if SIZEOF_ZEND_LONG == 4",
          "1076: use_double:",
          "",
          "[Removed Lines]",
          "1073: #line 783 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1075: #line 785 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1079:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1080:  return 1;",
          "1081: }",
          "1083: yy69:",
          "1084:  yych = *++YYCURSOR;",
          "1085:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1082: #line 1083 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1084: #line 1085 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1101:  goto yy18;",
          "1102: yy72:",
          "1103:  ++YYCURSOR;",
          "1105:  {",
          "1106: #if SIZEOF_ZEND_LONG == 4",
          "1107:  int digits = YYCURSOR - start - 3;",
          "",
          "[Removed Lines]",
          "1104: #line 741 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1106: #line 743 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1127:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1128:  return 1;",
          "1129: }",
          "1131: yy74:",
          "1132:  yych = *++YYCURSOR;",
          "1133:  if (yych == '\"') goto yy88;",
          "1134:  goto yy18;",
          "1135: yy75:",
          "1136:  ++YYCURSOR;",
          "1138:  {",
          "1139:  zend_long id;",
          "",
          "[Removed Lines]",
          "1130: #line 1131 \"ext/standard/var_unserializer.c\"",
          "1137: #line 698 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1132: #line 1133 \"ext/standard/var_unserializer.c\"",
          "1139: #line 700 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1160:  return 1;",
          "1161: }",
          "1163: yy77:",
          "1164:  yych = *++YYCURSOR;",
          "1165:  if (yych == '\"') goto yy90;",
          "1166:  goto yy18;",
          "1167: yy78:",
          "1168:  ++YYCURSOR;",
          "1170:  {",
          "1171:  size_t len, len2, len3, maxlen;",
          "1172:  zend_long elements;",
          "",
          "[Removed Lines]",
          "1162: #line 1163 \"ext/standard/var_unserializer.c\"",
          "1169: #line 908 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1164: #line 1165 \"ext/standard/var_unserializer.c\"",
          "1171: #line 912 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1319:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1320: }",
          "1322: yy80:",
          "1323:  ++YYCURSOR;",
          "1325:  {",
          "1326:  size_t len, maxlen;",
          "1327:  zend_string *str;",
          "",
          "[Removed Lines]",
          "1321: #line 1322 \"ext/standard/var_unserializer.c\"",
          "1324: #line 830 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1323: #line 1324 \"ext/standard/var_unserializer.c\"",
          "1326: #line 834 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1355:  ZVAL_STR(rval, str);",
          "1356:  return 1;",
          "1357: }",
          "1359: yy82:",
          "1360:  ++YYCURSOR;",
          "1362:  {",
          "1363:  zend_long elements = parse_iv(start + 2);",
          "",
          "[Removed Lines]",
          "1358: #line 1359 \"ext/standard/var_unserializer.c\"",
          "1361: #line 864 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1360: #line 1361 \"ext/standard/var_unserializer.c\"",
          "1363: #line 868 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1392:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "1393: }",
          "1395: yy84:",
          "1396:  yych = *++YYCURSOR;",
          "1397:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1394: #line 1395 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1396: #line 1397 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1410:  goto yy18;",
          "1411: yy88:",
          "1412:  ++YYCURSOR;",
          "1414:  {",
          "1415:  zend_long elements;",
          "1416:     if (!var_hash) return 0;",
          "",
          "[Removed Lines]",
          "1413: #line 897 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1415: #line 901 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1421:  }",
          "1422:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1423: }",
          "1425: yy90:",
          "1426:  ++YYCURSOR;",
          "1428:  {",
          "1429:  size_t len, maxlen;",
          "1430:  char *str;",
          "",
          "[Removed Lines]",
          "1424: #line 1425 \"ext/standard/var_unserializer.c\"",
          "1427: #line 792 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1426: #line 1427 \"ext/standard/var_unserializer.c\"",
          "1429: #line 794 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1457:   ZVAL_EMPTY_STRING(rval);",
          "1458:  } else if (len == 1) {",
          "1459:   ZVAL_INTERNED_STR(rval, ZSTR_CHAR((zend_uchar)*str));",
          "1460:  } else {",
          "1461:   ZVAL_STRINGL(rval, str, len);",
          "1462:  }",
          "1463:  return 1;",
          "1464: }",
          "1466: yy92:",
          "1467:  ++YYCURSOR;",
          "1469:  {",
          "",
          "[Removed Lines]",
          "1465: #line 1466 \"ext/standard/var_unserializer.c\"",
          "1468: #line 767 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1462:  } else if (as_key) {",
          "1463:   ZVAL_STR(rval, zend_string_init_interned(str, len, 0));",
          "1469: #line 1470 \"ext/standard/var_unserializer.c\"",
          "1472: #line 769 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1482:  return 1;",
          "1483: }",
          "1485: }",
          "1489:  return 0;",
          "",
          "[Removed Lines]",
          "1484: #line 1485 \"ext/standard/var_unserializer.c\"",
          "1486: #line 1068 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1488: #line 1489 \"ext/standard/var_unserializer.c\"",
          "1490: #line 1072 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "393: #define UNSERIALIZE_PARAMETER zval *rval, const unsigned char **p, const unsigned char *max, php_unserialize_data_t *var_hash",
          "394: #define UNSERIALIZE_PASSTHRU rval, p, max, var_hash",
          "398: static zend_always_inline int process_nested_data(UNSERIALIZE_PARAMETER, HashTable *ht, zend_long elements, int objprops)",
          "399: {",
          "",
          "[Removed Lines]",
          "396: static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER);",
          "",
          "[Added Lines]",
          "396: static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER, int as_key);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "404:   ZVAL_UNDEF(&key);",
          "407:    zval_ptr_dtor(&key);",
          "408:    return 0;",
          "409:   }",
          "",
          "[Removed Lines]",
          "406:   if (!php_var_unserialize_internal(&key, p, max, NULL)) {",
          "",
          "[Added Lines]",
          "406:   if (!php_var_unserialize_internal(&key, p, max, NULL, 1)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "442: string_key:",
          "443:     {",
          "444:      zend_property_info *existing_propinfo;",
          "446:      const char *unmangled_class = NULL;",
          "447:      const char *unmangled_prop;",
          "448:      size_t unmangled_prop_len;",
          "",
          "[Removed Lines]",
          "445:      zend_string *new_key, *unmangled;",
          "",
          "[Added Lines]",
          "445:      zend_string *new_key;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "452:       return 0;",
          "453:      }",
          "465:         new_key = zend_mangle_property_name(",
          "469:        } else {",
          "474:        }",
          "476:       } else {",
          "479:       }",
          "484:      }",
          "486:      if ((old_data = zend_hash_find(ht, Z_STR(key))) != NULL) {",
          "",
          "[Removed Lines]",
          "455:      unmangled = zend_string_init(unmangled_prop, unmangled_prop_len, 0);",
          "456:      if (Z_TYPE_P(rval) == IS_OBJECT",
          "457:        && ((existing_propinfo = zend_hash_find_ptr(&Z_OBJCE_P(rval)->properties_info, unmangled)) != NULL)",
          "458:        && (existing_propinfo->flags & ZEND_ACC_PPP_MASK)) {",
          "459:       if (existing_propinfo->flags & ZEND_ACC_PROTECTED) {",
          "460:        new_key = zend_mangle_property_name(",
          "461:         \"*\", 1, ZSTR_VAL(unmangled), ZSTR_LEN(unmangled), 0);",
          "462:        zend_string_release(unmangled);",
          "463:       } else if (existing_propinfo->flags & ZEND_ACC_PRIVATE) {",
          "464:        if (unmangled_class != NULL && strcmp(unmangled_class, \"*\") != 0) {",
          "466:          unmangled_class, strlen(unmangled_class),",
          "467:          ZSTR_VAL(unmangled), ZSTR_LEN(unmangled),",
          "468:          0);",
          "470:         new_key = zend_mangle_property_name(",
          "471:          ZSTR_VAL(existing_propinfo->ce->name), ZSTR_LEN(existing_propinfo->ce->name),",
          "472:          ZSTR_VAL(unmangled), ZSTR_LEN(unmangled),",
          "473:          0);",
          "475:        zend_string_release(unmangled);",
          "477:        ZEND_ASSERT(existing_propinfo->flags & ZEND_ACC_PUBLIC);",
          "478:        new_key = unmangled;",
          "480:       zend_string_release(Z_STR(key));",
          "481:       ZVAL_STR(&key, new_key);",
          "482:      } else {",
          "483:       zend_string_release(unmangled);",
          "",
          "[Added Lines]",
          "455:      if (Z_TYPE_P(rval) == IS_OBJECT) {",
          "456:       zend_string *unmangled = zend_string_init(unmangled_prop, unmangled_prop_len, 0);",
          "458:       if (((existing_propinfo = zend_hash_find_ptr(&Z_OBJCE_P(rval)->properties_info, unmangled)) != NULL)",
          "459:         && (existing_propinfo->flags & ZEND_ACC_PPP_MASK)) {",
          "460:        if (existing_propinfo->flags & ZEND_ACC_PROTECTED) {",
          "462:          \"*\", 1, ZSTR_VAL(unmangled), ZSTR_LEN(unmangled), 0);",
          "463:         zend_string_release(unmangled);",
          "464:        } else if (existing_propinfo->flags & ZEND_ACC_PRIVATE) {",
          "465:         if (unmangled_class != NULL && strcmp(unmangled_class, \"*\") != 0) {",
          "466:          new_key = zend_mangle_property_name(",
          "467:           unmangled_class, strlen(unmangled_class),",
          "468:           ZSTR_VAL(unmangled), ZSTR_LEN(unmangled),",
          "469:           0);",
          "470:         } else {",
          "471:          new_key = zend_mangle_property_name(",
          "472:           ZSTR_VAL(existing_propinfo->ce->name), ZSTR_LEN(existing_propinfo->ce->name),",
          "473:           ZSTR_VAL(unmangled), ZSTR_LEN(unmangled),",
          "474:           0);",
          "475:         }",
          "476:         zend_string_release(unmangled);",
          "478:         ZEND_ASSERT(existing_propinfo->flags & ZEND_ACC_PUBLIC);",
          "479:         new_key = unmangled;",
          "481:        zend_string_release(Z_STR(key));",
          "482:        ZVAL_STR(&key, new_key);",
          "484:        zend_string_release(unmangled);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "503:    }",
          "504:   }",
          "507:    zval_ptr_dtor(&key);",
          "508:    return 0;",
          "509:   }",
          "",
          "[Removed Lines]",
          "506:   if (!php_var_unserialize_internal(data, p, max, var_hash)) {",
          "",
          "[Added Lines]",
          "508:   if (!php_var_unserialize_internal(data, p, max, var_hash, 0)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "629:  zend_long orig_used_slots = orig_var_entries ? orig_var_entries->used_slots : 0;",
          "630:  int result;",
          "634:  if (!result) {",
          "",
          "[Removed Lines]",
          "632:  result = php_var_unserialize_internal(UNSERIALIZE_PASSTHRU);",
          "",
          "[Added Lines]",
          "634:  result = php_var_unserialize_internal(UNSERIALIZE_PASSTHRU, 0);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "650:  return result;",
          "651: }",
          "654: {",
          "655:  const unsigned char *cursor, *limit, *marker, *start;",
          "656:  zval *rval_ref;",
          "",
          "[Removed Lines]",
          "653: static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER)",
          "",
          "[Added Lines]",
          "655: static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER, int as_key)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "821:   ZVAL_EMPTY_STRING(rval);",
          "822:  } else if (len == 1) {",
          "823:   ZVAL_INTERNED_STR(rval, ZSTR_CHAR((zend_uchar)*str));",
          "824:  } else {",
          "825:   ZVAL_STRINGL(rval, str, len);",
          "826:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "826:  } else if (as_key) {",
          "827:   ZVAL_STR(rval, zend_string_init_interned(str, len, 0));",
          "",
          "---------------"
        ]
      }
    }
  ]
}