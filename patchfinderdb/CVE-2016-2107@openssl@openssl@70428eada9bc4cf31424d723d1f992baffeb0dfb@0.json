{
  "cve_id": "CVE-2016-2107",
  "cve_desc": "The AES-NI implementation in OpenSSL before 1.0.1t and 1.0.2 before 1.0.2h does not consider memory allocation during a certain padding check, which allows remote attackers to obtain sensitive cleartext information via a padding-oracle attack against an AES CBC session. NOTE: this vulnerability exists because of an incorrect fix for CVE-2013-0169.",
  "repo": "openssl/openssl",
  "patch_hash": "70428eada9bc4cf31424d723d1f992baffeb0dfb",
  "patch_info": {
    "commit_hash": "70428eada9bc4cf31424d723d1f992baffeb0dfb",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/70428eada9bc4cf31424d723d1f992baffeb0dfb",
    "files": [
      "crypto/evp/e_aes_cbc_hmac_sha1.c",
      "crypto/evp/e_aes_cbc_hmac_sha256.c"
    ],
    "message": "Check that we have enough padding characters.\n\nReviewed-by: Emilia K\u00e4sper <emilia@openssl.org>\n\nCVE-2016-2107\n\nMR: #2572",
    "before_after_code_files": [
      "crypto/evp/e_aes_cbc_hmac_sha1.c||crypto/evp/e_aes_cbc_hmac_sha1.c",
      "crypto/evp/e_aes_cbc_hmac_sha256.c||crypto/evp/e_aes_cbc_hmac_sha256.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes_cbc_hmac_sha1.c||crypto/evp/e_aes_cbc_hmac_sha1.c": [
      "File: crypto/evp/e_aes_cbc_hmac_sha1.c -> crypto/evp/e_aes_cbc_hmac_sha1.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "59: #include <openssl/rand.h>",
      "60: #include \"modes_lcl.h\"",
      "61: #include \"internal/evp_int.h\"",
      "63: #ifndef EVP_CIPH_FLAG_AEAD_CIPHER",
      "64: # define EVP_CIPH_FLAG_AEAD_CIPHER       0x200000",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "62: #include \"internal/constant_time_locl.h\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "583:             maxpad |= (255 - maxpad) >> (sizeof(maxpad) * 8 - 8);",
      "584:             maxpad &= 255;",
      "586:             inp_len = len - (SHA_DIGEST_LENGTH + pad + 1);",
      "587:             mask = (0 - ((inp_len - len) >> (sizeof(inp_len) * 8 - 1)));",
      "588:             inp_len &= mask;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "587:             ret &= constant_time_ge(maxpad, pad);",
      "",
      "---------------"
    ],
    "crypto/evp/e_aes_cbc_hmac_sha256.c||crypto/evp/e_aes_cbc_hmac_sha256.c": [
      "File: crypto/evp/e_aes_cbc_hmac_sha256.c -> crypto/evp/e_aes_cbc_hmac_sha256.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "59: #include <openssl/sha.h>",
      "60: #include <openssl/rand.h>",
      "61: #include \"modes_lcl.h\"",
      "62: #include \"internal/evp_int.h\"",
      "64: #ifndef EVP_CIPH_FLAG_AEAD_CIPHER",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "62: #include \"internal/constant_time_locl.h\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "594:             maxpad |= (255 - maxpad) >> (sizeof(maxpad) * 8 - 8);",
      "595:             maxpad &= 255;",
      "597:             inp_len = len - (SHA256_DIGEST_LENGTH + pad + 1);",
      "598:             mask = (0 - ((inp_len - len) >> (sizeof(inp_len) * 8 - 1)));",
      "599:             inp_len &= mask;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "598:             ret &= constant_time_ge(maxpad, pad);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "68595c0c2886e7942a14f98c17a55a88afb6c292",
      "candidate_info": {
        "commit_hash": "68595c0c2886e7942a14f98c17a55a88afb6c292",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/68595c0c2886e7942a14f98c17a55a88afb6c292",
        "files": [
          "crypto/evp/e_aes_cbc_hmac_sha1.c",
          "crypto/evp/e_aes_cbc_hmac_sha256.c"
        ],
        "message": "Check that we have enough padding characters.\n\nReviewed-by: Emilia K\u00e4sper <emilia@openssl.org>\n\nCVE-2016-2107\n\nMR: #2572",
        "before_after_code_files": [
          "crypto/evp/e_aes_cbc_hmac_sha1.c||crypto/evp/e_aes_cbc_hmac_sha1.c",
          "crypto/evp/e_aes_cbc_hmac_sha256.c||crypto/evp/e_aes_cbc_hmac_sha256.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/evp/e_aes_cbc_hmac_sha1.c||crypto/evp/e_aes_cbc_hmac_sha1.c",
            "crypto/evp/e_aes_cbc_hmac_sha256.c||crypto/evp/e_aes_cbc_hmac_sha256.c"
          ],
          "candidate": [
            "crypto/evp/e_aes_cbc_hmac_sha1.c||crypto/evp/e_aes_cbc_hmac_sha1.c",
            "crypto/evp/e_aes_cbc_hmac_sha256.c||crypto/evp/e_aes_cbc_hmac_sha256.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/evp/e_aes_cbc_hmac_sha1.c||crypto/evp/e_aes_cbc_hmac_sha1.c": [
          "File: crypto/evp/e_aes_cbc_hmac_sha1.c -> crypto/evp/e_aes_cbc_hmac_sha1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "60: # include <openssl/sha.h>",
          "61: # include <openssl/rand.h>",
          "62: # include \"modes_lcl.h\"",
          "64: # ifndef EVP_CIPH_FLAG_AEAD_CIPHER",
          "65: #  define EVP_CIPH_FLAG_AEAD_CIPHER       0x200000",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63: # include \"constant_time_locl.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "578:             maxpad |= (255 - maxpad) >> (sizeof(maxpad) * 8 - 8);",
          "579:             maxpad &= 255;",
          "581:             inp_len = len - (SHA_DIGEST_LENGTH + pad + 1);",
          "582:             mask = (0 - ((inp_len - len) >> (sizeof(inp_len) * 8 - 1)));",
          "583:             inp_len &= mask;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "582:             ret &= constant_time_ge(maxpad, pad);",
          "",
          "---------------"
        ],
        "crypto/evp/e_aes_cbc_hmac_sha256.c||crypto/evp/e_aes_cbc_hmac_sha256.c": [
          "File: crypto/evp/e_aes_cbc_hmac_sha256.c -> crypto/evp/e_aes_cbc_hmac_sha256.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "60: # include <openssl/sha.h>",
          "61: # include <openssl/rand.h>",
          "62: # include \"modes_lcl.h\"",
          "64: # ifndef EVP_CIPH_FLAG_AEAD_CIPHER",
          "65: #  define EVP_CIPH_FLAG_AEAD_CIPHER       0x200000",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63: # include \"constant_time_locl.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "589:             maxpad |= (255 - maxpad) >> (sizeof(maxpad) * 8 - 8);",
          "590:             maxpad &= 255;",
          "592:             inp_len = len - (SHA256_DIGEST_LENGTH + pad + 1);",
          "593:             mask = (0 - ((inp_len - len) >> (sizeof(inp_len) * 8 - 1)));",
          "594:             inp_len &= mask;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "593:             ret &= constant_time_ge(maxpad, pad);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4159f311671cf3bac03815e5de44681eb758304a",
      "candidate_info": {
        "commit_hash": "4159f311671cf3bac03815e5de44681eb758304a",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/4159f311671cf3bac03815e5de44681eb758304a",
        "files": [
          "crypto/evp/e_aes_cbc_hmac_sha1.c"
        ],
        "message": "Check that we have enough padding characters.\n\nReviewed-by: Emilia K\u00e4sper <emilia@openssl.org>\n\nCVE-2016-2107\n\nMR: #2572",
        "before_after_code_files": [
          "crypto/evp/e_aes_cbc_hmac_sha1.c||crypto/evp/e_aes_cbc_hmac_sha1.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/evp/e_aes_cbc_hmac_sha1.c||crypto/evp/e_aes_cbc_hmac_sha1.c"
          ],
          "candidate": [
            "crypto/evp/e_aes_cbc_hmac_sha1.c||crypto/evp/e_aes_cbc_hmac_sha1.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/evp/e_aes_cbc_hmac_sha1.c||crypto/evp/e_aes_cbc_hmac_sha1.c": [
          "File: crypto/evp/e_aes_cbc_hmac_sha1.c -> crypto/evp/e_aes_cbc_hmac_sha1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: # include <openssl/aes.h>",
          "60: # include <openssl/sha.h>",
          "61: # include \"evp_locl.h\"",
          "63: # ifndef EVP_CIPH_FLAG_AEAD_CIPHER",
          "64: #  define EVP_CIPH_FLAG_AEAD_CIPHER       0x200000",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62: # include \"constant_time_locl.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "286:             maxpad |= (255 - maxpad) >> (sizeof(maxpad) * 8 - 8);",
          "287:             maxpad &= 255;",
          "289:             inp_len = len - (SHA_DIGEST_LENGTH + pad + 1);",
          "290:             mask = (0 - ((inp_len - len) >> (sizeof(inp_len) * 8 - 1)));",
          "291:             inp_len &= mask;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "290:             ret &= constant_time_ge(maxpad, pad);",
          "",
          "---------------"
        ]
      }
    }
  ]
}