{
  "cve_id": "CVE-2010-5313",
  "cve_desc": "Race condition in arch/x86/kvm/x86.c in the Linux kernel before 2.6.38 allows L2 guest OS users to cause a denial of service (L1 guest OS crash) via a crafted instruction that triggers an L2 emulation failure report, a similar issue to CVE-2014-7842.",
  "repo": "torvalds/linux",
  "patch_hash": "fc3a9157d3148ab91039c75423da8ef97be3e105",
  "patch_info": {
    "commit_hash": "fc3a9157d3148ab91039c75423da8ef97be3e105",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/fc3a9157d3148ab91039c75423da8ef97be3e105",
    "files": [
      "arch/x86/kvm/x86.c"
    ],
    "message": "KVM: X86: Don't report L2 emulation failures to user-space\n\nThis patch prevents that emulation failures which result\nfrom emulating an instruction for an L2-Guest results in\nbeing reported to userspace.\nWithout this patch a malicious L2-Guest would be able to\nkill the L1 by triggering a race-condition between an vmexit\nand the instruction emulator.\nWith this patch the L2 will most likely only kill itself in\nthis situation.\n\nSigned-off-by: Joerg Roedel <joerg.roedel@amd.com>\nSigned-off-by: Marcelo Tosatti <mtosatti@redhat.com>",
    "before_after_code_files": [
      "arch/x86/kvm/x86.c||arch/x86/kvm/x86.c"
    ]
  },
  "patch_diff": {
    "arch/x86/kvm/x86.c||arch/x86/kvm/x86.c": [
      "File: arch/x86/kvm/x86.c -> arch/x86/kvm/x86.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4315: static int handle_emulation_failure(struct kvm_vcpu *vcpu)",
      "4316: {",
      "4317:  ++vcpu->stat.insn_emulation_fail;",
      "4318:  trace_kvm_emulate_insn_failed(vcpu);",
      "4322:  kvm_queue_exception(vcpu, UD_VECTOR);",
      "4324: }",
      "4326: static bool reexecute_instruction(struct kvm_vcpu *vcpu, gva_t gva)",
      "",
      "[Removed Lines]",
      "4319:  vcpu->run->exit_reason = KVM_EXIT_INTERNAL_ERROR;",
      "4320:  vcpu->run->internal.suberror = KVM_INTERNAL_ERROR_EMULATION;",
      "4321:  vcpu->run->internal.ndata = 0;",
      "4323:  return EMULATE_FAIL;",
      "",
      "[Added Lines]",
      "4317:  int r = EMULATE_DONE;",
      "4321:  if (!is_guest_mode(vcpu)) {",
      "4322:   vcpu->run->exit_reason = KVM_EXIT_INTERNAL_ERROR;",
      "4323:   vcpu->run->internal.suberror = KVM_INTERNAL_ERROR_EMULATION;",
      "4324:   vcpu->run->internal.ndata = 0;",
      "4325:   r = EMULATE_FAIL;",
      "4326:  }",
      "4329:  return r;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6d77dbfc88e37c9efd5c5dd18445cfe819ae17ea",
      "candidate_info": {
        "commit_hash": "6d77dbfc88e37c9efd5c5dd18445cfe819ae17ea",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/6d77dbfc88e37c9efd5c5dd18445cfe819ae17ea",
        "files": [
          "arch/x86/include/asm/kvm_host.h",
          "arch/x86/kvm/mmu.c",
          "arch/x86/kvm/svm.c",
          "arch/x86/kvm/vmx.c",
          "arch/x86/kvm/x86.c"
        ],
        "message": "KVM: inject #UD if instruction emulation fails and exit to userspace\n\nDo not kill VM when instruction emulation fails. Inject #UD and report\nfailure to userspace instead. Userspace may choose to reenter guest if\nvcpu is in userspace (cpl == 3) in which case guest OS will kill\noffending process and continue running.\n\nSigned-off-by: Gleb Natapov <gleb@redhat.com>\nSigned-off-by: Marcelo Tosatti <mtosatti@redhat.com>",
        "before_after_code_files": [
          "arch/x86/include/asm/kvm_host.h||arch/x86/include/asm/kvm_host.h",
          "arch/x86/kvm/mmu.c||arch/x86/kvm/mmu.c",
          "arch/x86/kvm/svm.c||arch/x86/kvm/svm.c",
          "arch/x86/kvm/vmx.c||arch/x86/kvm/vmx.c",
          "arch/x86/kvm/x86.c||arch/x86/kvm/x86.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "arch/x86/kvm/x86.c||arch/x86/kvm/x86.c"
          ],
          "candidate": [
            "arch/x86/kvm/x86.c||arch/x86/kvm/x86.c"
          ]
        }
      },
      "candidate_diff": {
        "arch/x86/include/asm/kvm_host.h||arch/x86/include/asm/kvm_host.h": [
          "File: arch/x86/include/asm/kvm_host.h -> arch/x86/include/asm/kvm_host.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "576: #define EMULTYPE_SKIP      (1 << 2)",
          "577: int emulate_instruction(struct kvm_vcpu *vcpu,",
          "578:    unsigned long cr2, u16 error_code, int emulation_type);",
          "580: void realmode_lgdt(struct kvm_vcpu *vcpu, u16 size, unsigned long address);",
          "581: void realmode_lidt(struct kvm_vcpu *vcpu, u16 size, unsigned long address);",
          "",
          "[Removed Lines]",
          "579: void kvm_report_emulation_failure(struct kvm_vcpu *cvpu, const char *context);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "arch/x86/kvm/mmu.c||arch/x86/kvm/mmu.c": [
          "File: arch/x86/kvm/mmu.c -> arch/x86/kvm/mmu.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2814:   return 1;",
          "2815:  case EMULATE_DO_MMIO:",
          "2816:   ++vcpu->stat.mmio_exits;",
          "2818:  case EMULATE_FAIL:",
          "2822:   return 0;",
          "2823:  default:",
          "2824:   BUG();",
          "",
          "[Removed Lines]",
          "2817:   return 0;",
          "2819:   vcpu->run->exit_reason = KVM_EXIT_INTERNAL_ERROR;",
          "2820:   vcpu->run->internal.suberror = KVM_INTERNAL_ERROR_EMULATION;",
          "2821:   vcpu->run->internal.ndata = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "arch/x86/kvm/svm.c||arch/x86/kvm/svm.c": [
          "File: arch/x86/kvm/svm.c -> arch/x86/kvm/svm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1535:  string = (io_info & SVM_IOIO_STR_MASK) != 0;",
          "1536:  in = (io_info & SVM_IOIO_TYPE_MASK) != 0;",
          "1537:  if (string || in)",
          "1540:  port = io_info >> 16;",
          "1541:  size = (io_info & SVM_IOIO_SIZE_MASK) >> SVM_IOIO_SIZE_SHIFT;",
          "",
          "[Removed Lines]",
          "1538:   return !(emulate_instruction(vcpu, 0, 0, 0) == EMULATE_DO_MMIO);",
          "",
          "[Added Lines]",
          "1538:   return emulate_instruction(vcpu, 0, 0, 0) == EMULATE_DONE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2387: static int invlpg_interception(struct vcpu_svm *svm)",
          "2388: {",
          "2392: }",
          "2394: static int emulate_on_interception(struct vcpu_svm *svm)",
          "2395: {",
          "2399: }",
          "2401: static int cr8_write_interception(struct vcpu_svm *svm)",
          "",
          "[Removed Lines]",
          "2389:  if (emulate_instruction(&svm->vcpu, 0, 0, 0) != EMULATE_DONE)",
          "2390:   pr_unimpl(&svm->vcpu, \"%s: failed\\n\", __func__);",
          "2391:  return 1;",
          "2396:  if (emulate_instruction(&svm->vcpu, 0, 0, 0) != EMULATE_DONE)",
          "2397:   pr_unimpl(&svm->vcpu, \"%s: failed\\n\", __func__);",
          "2398:  return 1;",
          "",
          "[Added Lines]",
          "2389:  return emulate_instruction(&svm->vcpu, 0, 0, 0) == EMULATE_DONE;",
          "2394:  return emulate_instruction(&svm->vcpu, 0, 0, 0) == EMULATE_DONE;",
          "",
          "---------------"
        ],
        "arch/x86/kvm/vmx.c||arch/x86/kvm/vmx.c": [
          "File: arch/x86/kvm/vmx.c -> arch/x86/kvm/vmx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3070:  ++vcpu->stat.io_exits;",
          "3072:  if (string || in)",
          "3075:  port = exit_qualification >> 16;",
          "3076:  size = (exit_qualification & 7) + 1;",
          "",
          "[Removed Lines]",
          "3073:   return !(emulate_instruction(vcpu, 0, 0, 0) == EMULATE_DO_MMIO);",
          "",
          "[Added Lines]",
          "3073:   return emulate_instruction(vcpu, 0, 0, 0) == EMULATE_DONE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3328: static int handle_apic_access(struct kvm_vcpu *vcpu)",
          "3329: {",
          "3346: }",
          "3348: static int handle_task_switch(struct kvm_vcpu *vcpu)",
          "",
          "[Removed Lines]",
          "3330:  unsigned long exit_qualification;",
          "3331:  enum emulation_result er;",
          "3332:  unsigned long offset;",
          "3334:  exit_qualification = vmcs_readl(EXIT_QUALIFICATION);",
          "3335:  offset = exit_qualification & 0xffful;",
          "3337:  er = emulate_instruction(vcpu, 0, 0, 0);",
          "3339:  if (er !=  EMULATE_DONE) {",
          "3340:   printk(KERN_ERR",
          "3341:          \"Fail to handle apic access vmexit! Offset is 0x%lx\\n\",",
          "3342:          offset);",
          "3343:   return -ENOEXEC;",
          "3344:  }",
          "3345:  return 1;",
          "",
          "[Added Lines]",
          "3330:  return emulate_instruction(vcpu, 0, 0, 0) == EMULATE_DONE;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3554:    goto out;",
          "3555:   }",
          "3565:   if (signal_pending(current))",
          "3566:    goto out;",
          "",
          "[Removed Lines]",
          "3557:   if (err != EMULATE_DONE) {",
          "3558:    vcpu->run->exit_reason = KVM_EXIT_INTERNAL_ERROR;",
          "3559:    vcpu->run->internal.suberror = KVM_INTERNAL_ERROR_EMULATION;",
          "3560:    vcpu->run->internal.ndata = 0;",
          "3561:    ret = 0;",
          "3562:    goto out;",
          "3563:   }",
          "",
          "[Added Lines]",
          "3542:   if (err != EMULATE_DONE)",
          "3543:    return 0;",
          "",
          "---------------"
        ],
        "arch/x86/kvm/x86.c||arch/x86/kvm/x86.c": [
          "File: arch/x86/kvm/x86.c -> arch/x86/kvm/x86.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3639:  return __kvm_set_dr(vcpu, dr, value);",
          "3640: }",
          "3660: static u64 mk_cr_64(u64 curr_cr, u32 new_val)",
          "3661: {",
          "3662:  return (curr_cr & ~((1ULL << 32) - 1)) | new_val;",
          "",
          "[Removed Lines]",
          "3642: void kvm_report_emulation_failure(struct kvm_vcpu *vcpu, const char *context)",
          "3643: {",
          "3644:  u8 opcodes[4];",
          "3645:  unsigned long rip = kvm_rip_read(vcpu);",
          "3646:  unsigned long rip_linear;",
          "3648:  if (!printk_ratelimit())",
          "3649:   return;",
          "3651:  rip_linear = rip + get_segment_base(vcpu, VCPU_SREG_CS);",
          "3653:  kvm_read_guest_virt(rip_linear, (void *)opcodes, 4, vcpu, NULL);",
          "3655:  printk(KERN_ERR \"emulation failed (%s) rip %lx %02x %02x %02x %02x\\n\",",
          "3656:         context, rip, opcodes[0], opcodes[1], opcodes[2], opcodes[3]);",
          "3657: }",
          "3658: EXPORT_SYMBOL_GPL(kvm_report_emulation_failure);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3863:   kvm_queue_exception(vcpu, ctxt->exception);",
          "3864: }",
          "3866: int emulate_instruction(struct kvm_vcpu *vcpu,",
          "3867:    unsigned long cr2,",
          "3868:    u16 error_code,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3848: static int handle_emulation_failure(struct kvm_vcpu *vcpu)",
          "3849: {",
          "3850:  struct x86_emulate_ctxt *ctxt = &vcpu->arch.emulate_ctxt;",
          "3852:  ++vcpu->stat.insn_emulation_fail;",
          "3853:  trace_kvm_emulate_insn_failed(vcpu);",
          "3854:  vcpu->run->exit_reason = KVM_EXIT_INTERNAL_ERROR;",
          "3855:  vcpu->run->internal.suberror = KVM_INTERNAL_ERROR_EMULATION;",
          "3856:  vcpu->run->internal.ndata = 0;",
          "3857:  kvm_queue_exception(vcpu, UD_VECTOR);",
          "3858:  return EMULATE_FAIL;",
          "3859: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3932:   ++vcpu->stat.insn_emulation;",
          "3933:   if (r)  {",
          "3936:    if (kvm_mmu_unprotect_page_virt(vcpu, cr2))",
          "3937:     return EMULATE_DONE;",
          "3939:   }",
          "3940:  }",
          "",
          "[Removed Lines]",
          "3934:    ++vcpu->stat.insn_emulation_fail;",
          "3935:    trace_kvm_emulate_insn_failed(vcpu);",
          "3938:    return EMULATE_FAIL;",
          "",
          "[Added Lines]",
          "3931:    if (emulation_type & EMULTYPE_SKIP)",
          "3932:     return EMULATE_FAIL;",
          "3933:    return handle_emulation_failure(vcpu);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3960:   if (kvm_mmu_unprotect_page_virt(vcpu, cr2))",
          "3961:    return EMULATE_DONE;",
          "3966:  }",
          "3968:  toggle_interruptibility(vcpu, vcpu->arch.emulate_ctxt.interruptibility);",
          "",
          "[Removed Lines]",
          "3963:   trace_kvm_emulate_insn_failed(vcpu);",
          "3964:   kvm_report_emulation_failure(vcpu, \"mmio\");",
          "3965:   return EMULATE_FAIL;",
          "",
          "[Added Lines]",
          "3958:   return handle_emulation_failure(vcpu);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4798:   vcpu->srcu_idx = srcu_read_lock(&vcpu->kvm->srcu);",
          "4799:   r = emulate_instruction(vcpu, 0, 0, EMULTYPE_NO_DECODE);",
          "4800:   srcu_read_unlock(&vcpu->kvm->srcu, vcpu->srcu_idx);",
          "4802:    r = 0;",
          "4803:    goto out;",
          "4804:   }",
          "",
          "[Removed Lines]",
          "4801:   if (r == EMULATE_DO_MMIO) {",
          "",
          "[Added Lines]",
          "4794:   if (r != EMULATE_DONE) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}