{
  "cve_id": "CVE-2019-19880",
  "cve_desc": "exprListAppendList in window.c in SQLite 3.30.1 allows attackers to trigger an invalid pointer dereference because constant integer values in ORDER BY clauses of window definitions are mishandled.",
  "repo": "sqlite/sqlite",
  "patch_hash": "75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
  "patch_info": {
    "commit_hash": "75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/window.c"
    ],
    "message": "When processing constant integer values in ORDER BY clauses of window definitions (see check-in [7e4809eadfe99ebf]) be sure to fully disable the constant value to avoid an invalid pointer dereference if the expression is ever duplicated. This fixes a crash report from Yongheng and Rui.\n\nFossilOrigin-Name: 1ca0bd982ab1183bbafce0d260e4dceda5eb766ed2e7793374a88d1ae0bdd2ca",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/window.c||src/window.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 8223e79f987feda5c8e51ec52cec6798cca16d070b10558939e2888ca1a25b8e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/window.c||src/window.c": [
      "File: src/window.c -> src/window.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "895:     int nInit = pList ? pList->nExpr : 0;",
      "896:     for(i=0; i<pAppend->nExpr; i++){",
      "897:       Expr *pDup = sqlite3ExprDup(pParse->db, pAppend->a[i].pExpr, 0);",
      "898:       if( bIntToNull && pDup && pDup->op==TK_INTEGER ){",
      "899:         pDup->op = TK_NULL;",
      "900:         pDup->flags &= ~(EP_IntValue|EP_IsTrue|EP_IsFalse);",
      "901:       }",
      "902:       pList = sqlite3ExprListAppend(pParse, pList, pDup);",
      "903:       if( pList ) pList->a[nInit+i].sortFlags = pAppend->a[i].sortFlags;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "898:       assert( pDup==0 || !ExprHasProperty(pDup, EP_MemToken) );",
      "902:         pDup->u.zToken = 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "91f473b5cc179b8bfa6521ff339665754a15462a",
      "candidate_info": {
        "commit_hash": "91f473b5cc179b8bfa6521ff339665754a15462a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/91f473b5cc179b8bfa6521ff339665754a15462a",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/whereexpr.c",
          "test/like3.test"
        ],
        "message": "Do not attempt the LIKE optimization for non-text columns and a pattern prefix of \"-\".  Ticket [0f0428096f17252a]\n\nFossilOrigin-Name: 6fe0367f9a337b7c62886b7771f3ce0642faa13f4e4f3d9a0c848abbab514cd0",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/whereexpr.c||src/whereexpr.c",
          "test/like3.test||test/like3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f06ef3d75d85545dd58c6dda10f7ad04fafbb7ae8706b3821be21f86a94795f1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/whereexpr.c||src/whereexpr.c": [
          "File: src/whereexpr.c -> src/whereexpr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "293:           double rDummy;",
          "294:           isNum = sqlite3AtoF(zNew, &rDummy, iTo, SQLITE_UTF8);",
          "295:           if( isNum<=0 ){",
          "299:           }",
          "300:           if( isNum>0 ){",
          "301:             sqlite3ExprDelete(db, pPrefix);",
          "",
          "[Removed Lines]",
          "296:             zNew[iTo-1]++;",
          "297:             isNum = sqlite3AtoF(zNew, &rDummy, iTo, SQLITE_UTF8);",
          "298:             zNew[iTo-1]--;",
          "",
          "[Added Lines]",
          "297:             if( iTo==1 && zNew[0]=='-' ){",
          "298:               isNum = +1;",
          "299:             }else{",
          "300:               zNew[iTo-1]++;",
          "301:               isNum = sqlite3AtoF(zNew, &rDummy, iTo, SQLITE_UTF8);",
          "302:               zNew[iTo-1]--;",
          "303:             }",
          "",
          "---------------"
        ],
        "test/like3.test||test/like3.test": [
          "File: test/like3.test -> test/like3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "207:   SELECT * FROM t0 WHERE t0.c0 LIKE '.1%';",
          "208: } {.1%}",
          "211: # 2019-02-27",
          "212: # Verify that the LIKE optimization works with an ESCAPE clause when",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "210: # 2019-09-03",
          "211: # Ticket https://www.sqlite.org/src/info/0f0428096f",
          "212: do_execsql_test like3-5.420 {",
          "213:   DROP TABLE IF EXISTS t0;",
          "214:   CREATE TABLE t0(c0 UNIQUE);",
          "215:   INSERT INTO t0(c0) VALUES(-1);",
          "216:   SELECT * FROM t0 WHERE t0.c0 GLOB '-*';",
          "217: } {-1}",
          "218: do_execsql_test like3-5.421 {",
          "219:   SELECT t0.c0 GLOB '-*' FROM t0;",
          "220: } {1}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e5166e070a6590c40ca99ca66d0d97ea37e0b1cd",
      "candidate_info": {
        "commit_hash": "e5166e070a6590c40ca99ca66d0d97ea37e0b1cd",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e5166e070a6590c40ca99ca66d0d97ea37e0b1cd",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c",
          "src/window.c",
          "test/window1.test"
        ],
        "message": "Revert the OP_MustBeInt opcode implementation on this branch so that it again matches trunk. The extra functionality is no longer required.\n\nFossilOrigin-Name: c02f77b1b4d025d4243f883d6f3a2b3abcaf4944e0209f641b62c576415343dc",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c",
          "src/window.c||src/window.c",
          "test/window1.test||test/window1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/window.c||src/window.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/window.c||src/window.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 98cc26598718e5557ee00aa77336024c91e483ec6de650e172ad1b44a6f0a77b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1723:   break;",
          "1724: }",
          "1740:   pIn1 = &aMem[pOp->p1];",
          "1742:     applyAffinity(pIn1, SQLITE_AFF_NUMERIC, encoding);",
          "1745:       if( pOp->p2==0 ){",
          "1746:         rc = SQLITE_MISMATCH;",
          "1747:         goto abort_due_to_error;",
          "",
          "[Removed Lines]",
          "1738:   u8 f;",
          "1739:   f = (pOp->p5 ? (MEM_Int|MEM_Real) : MEM_Int);",
          "1741:   if( (pIn1->flags & f)==0 ){",
          "1743:     VdbeBranchTaken((pIn1->flags&f)==0, 2);",
          "1744:     if( (pIn1->flags & f)==0 ){",
          "",
          "[Added Lines]",
          "1735:   if( (pIn1->flags & MEM_Int)==0 ){",
          "1737:     VdbeBranchTaken((pIn1->flags&MEM_Int)==0, 2);",
          "1738:     if( (pIn1->flags & MEM_Int)==0 ){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1750:       }",
          "1751:     }",
          "1752:   }",
          "1754:   break;",
          "1755: }",
          "",
          "[Removed Lines]",
          "1753:   if( f==MEM_Int ) MemSetTypeFlag(pIn1, MEM_Int);",
          "",
          "[Added Lines]",
          "1747:   MemSetTypeFlag(pIn1, MEM_Int);",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1302:   int regZero = sqlite3GetTempReg(pParse);",
          "1303:   assert( eCond>=0 && eCond<ArraySize(azErr) );",
          "1304:   sqlite3VdbeAddOp2(v, OP_Integer, 0, regZero);",
          "1307:   VdbeCoverageIf(v, eCond==0);",
          "1308:   VdbeCoverageIf(v, eCond==1);",
          "1309:   VdbeCoverageIf(v, eCond==2);",
          "",
          "[Removed Lines]",
          "1305:   sqlite3VdbeAddOp2(v, OP_MustBeInt, reg, sqlite3VdbeCurrentAddr(v)+2);",
          "1306:   if( eCond>=WINDOW_STARTING_NUM ) sqlite3VdbeChangeP5(v, 1);",
          "",
          "[Added Lines]",
          "1305:   if( eCond>=WINDOW_STARTING_NUM ){",
          "1306:     int regString = sqlite3GetTempReg(pParse);",
          "1307:     sqlite3VdbeAddOp4(v, OP_String8, 0, regString, 0, \"\", P4_STATIC);",
          "1308:     sqlite3VdbeAddOp3(v, OP_Ge, regString, sqlite3VdbeCurrentAddr(v)+2, reg);",
          "1309:     sqlite3VdbeChangeP5(v, SQLITE_AFF_NUMERIC);",
          "1310:   }else{",
          "1311:     sqlite3VdbeAddOp2(v, OP_MustBeInt, reg, sqlite3VdbeCurrentAddr(v)+2);",
          "1312:   }",
          "",
          "---------------"
        ],
        "test/window1.test||test/window1.test": [
          "File: test/window1.test -> test/window1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "938:   FROM keyword_tab",
          "939: }",
          "941: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "941: #-------------------------------------------------------------------------",
          "942: foreach {tn expr err} {",
          "943:   1   4.5      0",
          "944:   2   NULL     1",
          "945:   3   0.0      0",
          "946:   4   0.1      0",
          "947:   5  -0.1      1",
          "948:   6  ''        1",
          "949:   7  '2.0'     0",
          "950:   8  '2.0x'    1",
          "951:   9  x'1234'   1",
          "952:  10  '1.2'     0",
          "953: } {",
          "954:   set res {0 1}",
          "955:   if {$err} {set res {1 {frame starting offset must be a non-negative number}} }",
          "956:   do_catchsql_test 22.$tn.1 \"",
          "957:     WITH a(x, y) AS ( VALUES(1, 2) )",
          "958:     SELECT sum(x) OVER (",
          "959:       ORDER BY y RANGE BETWEEN $expr PRECEDING AND UNBOUNDED FOLLOWING",
          "960:     ) FROM a",
          "961:   \" $res",
          "963:   set res {0 1}",
          "964:   if {$err} {set res {1 {frame ending offset must be a non-negative number}} }",
          "965:   do_catchsql_test 22.$tn.2 \"",
          "966:     WITH a(x, y) AS ( VALUES(1, 2) )",
          "967:     SELECT sum(x) OVER (",
          "968:       ORDER BY y RANGE BETWEEN UNBOUNDED PRECEDING AND $expr FOLLOWING",
          "969:     ) FROM a",
          "970:   \" $res",
          "971: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "22e6f67c51175cbde19fa108b124f227775bc319",
      "candidate_info": {
        "commit_hash": "22e6f67c51175cbde19fa108b124f227775bc319",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/22e6f67c51175cbde19fa108b124f227775bc319",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbemem.c"
        ],
        "message": "Avoid computing a zero offset of a null pointer, which though this is technically harmless, is upsetting to pedantic run-time checkers.\n\nFossilOrigin-Name: 3ce804e99bbef83d49ec309157448a7c1422725606516cef904e6122aadd3922",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbemem.c||src/vdbemem.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4066a34da7bcdcece6c438c27f3a11bc49b8c8373b7e1603f30f6225e2bc800a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbemem.c||src/vdbemem.c": [
          "File: src/vdbemem.c -> src/vdbemem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "590:     return pMem->u.i;",
          "591:   }else if( flags & MEM_Real ){",
          "592:     return doubleToInt64(pMem->u.r);",
          "595:     return memIntValue(pMem);",
          "596:   }else{",
          "597:     return 0;",
          "",
          "[Removed Lines]",
          "593:   }else if( flags & (MEM_Str|MEM_Blob) ){",
          "594:     assert( pMem->z || pMem->n==0 );",
          "",
          "[Added Lines]",
          "593:   }else if( (flags & (MEM_Str|MEM_Blob))!=0 && pMem->z!=0 ){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b4738ddb203867d9573555cb271463bab1e69a31",
      "candidate_info": {
        "commit_hash": "b4738ddb203867d9573555cb271463bab1e69a31",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b4738ddb203867d9573555cb271463bab1e69a31",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbemem.c",
          "test/corruptL.test"
        ],
        "message": "Fix an assert() in vdbemem.c that could fire if the database was corrupt.\n\nFossilOrigin-Name: a70958cd7d5cf750c293537856918e5789013b70f6a827f724d83559b38629c8",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbemem.c||src/vdbemem.c",
          "test/corruptL.test||test/corruptL.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 2ca6b8f84ec07e313aa4e1c0894827401b418dcc4221e9c54c384f1c3893952a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbemem.c||src/vdbemem.c": [
          "File: src/vdbemem.c -> src/vdbemem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "245: int sqlite3VdbeMemClearAndResize(Mem *pMem, int szNew){",
          "247:   assert( (pMem->flags & MEM_Dyn)==0 || pMem->szMalloc==0 );",
          "248:   if( pMem->szMalloc<szNew ){",
          "249:     return sqlite3VdbeMemGrow(pMem, szNew, 0);",
          "",
          "[Removed Lines]",
          "246:   assert( szNew>0 );",
          "",
          "[Added Lines]",
          "246:   assert( CORRUPT_DB || szNew>0 );",
          "",
          "---------------"
        ],
        "test/corruptL.test||test/corruptL.test": [
          "File: test/corruptL.test -> test/corruptL.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:   REINDEX t1;",
          "134: } {1 {unable to identify the object to be reindexed}}",
          "136: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "136: #-------------------------------------------------------------------------",
          "137: reset_db",
          "138: do_test 2.0 {",
          "139:   sqlite3 db {}",
          "140:   db deserialize [decode_hexdb {",
          "141: | size 20480 pagesize 4096 filename crash.txt.db",
          "142: | page 1 offset 0",
          "143: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "144: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 05   .....@  ........",
          "145: |     32: 00 00 00 00 00 00 00 00 00 00 00 05 00 00 00 04   ................",
          "146: |     48: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "147: |     96: 00 00 00 00 0d 00 00 00 05 0e 55 00 0f 74 0f 3c   ..........U..t.<",
          "148: |    112: 0e f9 0e d1 0e 55 00 00 00 00 00 00 00 00 00 00   .....U..........",
          "149: |   3664: 00 00 00 00 00 7a 05 07 15 11 11 08 81 63 76 69   .....z.......cvi",
          "150: |   3680: 65 77 76 31 76 31 43 52 45 41 54 45 20 56 49 45   ewv1v1CREATE VIE",
          "151: |   3696: 57 20 76 31 28 78 2c 79 29 20 41 53 0a 53 45 4c   W v1(x,y) AS.SEL",
          "152: |   3712: 45 43 54 20 74 31 2e 62 2c 74 32 2e 62 20 46 52   ECT t1.b,t2.b FR",
          "153: |   3728: 4f 4d 20 74 31 2c 74 32 20 57 48 45 52 45 20 74   OM t1,t2 WHERE t",
          "154: |   3744: 31 2e 61 3d 74 32 2e 61 20 47 52 4f 55 50 20 42   1.a=t2.a GROUP B",
          "155: |   3760: 59 20 31 20 48 41 56 49 4e 47 20 74 32 2e 63 20   Y 1 HAVING t2.c",
          "156: |   3776: 4e 4f 54 20 4e 55 4c 4c 0a 4c 49 4d 49 54 20 31   NOT NULL.LIMIT 1",
          "157: |   3792: 30 26 04 06 17 11 11 01 39 74 61 62 6c 65 74 32   0&......9tablet2",
          "158: |   3808: 74 32 05 43 52 45 41 54 45 20 54 41 42 4c 45 20   t2.CREATE TABLE",
          "159: |   3824: 74 32 28 61 2c 62 2c 63 29 41 03 06 17 15 11 01   t2(a,b,c)A......",
          "160: |   3840: 6b 69 6e 64 65 78 74 31 78 31 74 31 04 43 52 45   kindext1x1t1.CRE",
          "161: |   3856: 41 54 45 20 49 4e 44 45 58 20 73 31 78 31 20 4f   ATE INDEX s1x1 O",
          "162: |   3872: 4e 20 74 31 28 64 29 20 57 48 45 52 45 20 65 65   N t1(d) WHERE ee",
          "163: |   3888: 20 49 53 20 4e 4f 54 20 4e 55 4c 4c 36 02 06 17    IS NOT NULL6...",
          "164: |   3904: 17 11 01 53 69 6e 64 65 78 74 31 61 62 63 74 31   ...Sindext1abct1",
          "165: |   3920: 03 43 52 45 41 54 45 20 49 4e 44 45 58 20 74 31   .CREATE INDEX t1",
          "166: |   3936: 61 62 63 20 4f 4e 20 74 31 28 61 2c 62 2c 63 2b   abc ON t1(a,b,c+",
          "167: |   3952: 64 2b 65 29 81 09 01 07 17 11 11 01 81 7d 74 61   d+e)..........ta",
          "168: |   3968: 62 6c 65 74 31 74 31 02 43 52 45 41 54 45 20 54   blet1t1.CREATE T",
          "169: |   3984: 41 42 4c 45 20 74 31 28 61 2c 62 2c 63 2c 64 2c   ABLE t1(a,b,c,d,",
          "170: |   4000: 65 2c 66 2c 67 2c 68 2c 6a 2c 6a 6a 2c 6a 6a 6a   e,f,g,h,j,jj,jjj",
          "171: |   4016: 2c 6b 2c 61 61 2c 62 62 2c 63 63 2c 64 64 2c 65   ,k,aa,bb,cc,dd,e",
          "172: |   4032: 65 20 44 45 46 41 55 4c 54 20 33 2e 31 34 2c 0a   e DEFAULT 3.14,.",
          "173: |   4048: 66 66 20 44 45 46 41 55 4c 54 28 27 68 69 63 63   ff DEFAULT('hicc",
          "174: |   4064: 75 70 27 29 2c 67 67 20 4e 4f 54 20 4e 55 4c 4c   up'),gg NOT NULL",
          "175: |   4080: 20 44 45 46 41 55 4c 54 28 66 61 6c 73 65 29 29    DEFAULT(false))",
          "176: | page 2 offset 4096",
          "177: |      0: 0d 00 00 00 0a 0e 7b 00 0f dc 0f b6 0f 8f 0f 68   ...............h",
          "178: |     16: 0f 41 0f 1a 0e f3 0e cb 0e a3 0e 7b 00 00 00 00   .A..............",
          "179: |   3696: 00 00 00 00 00 00 00 00 00 00 00 26 0a 14 01 01   ...........&....",
          "180: |   3712: 02 08 00 00 00 00 00 00 00 00 00 00 00 00 07 19   ................",
          "181: |   3728: 08 09 5a 00 b4 40 09 1e b8 51 eb 85 1f 68 69 63   ..Z..@...Q...hic",
          "182: |   3744: 63 75 70 26 09 14 01 01 02 08 00 00 00 00 00 00   cup&............",
          "183: |   3760: 00 00 00 00 00 00 07 19 08 08 50 00 a0 40 09 1e   ..........P..@..",
          "184: |   3776: b8 51 eb 85 1f 68 69 63 63 75 70 26 08 14 01 01   .Q...hiccup&....",
          "185: |   3792: 02 08 00 00 00 00 00 00 00 00 00 00 00 00 07 19   ................",
          "186: |   3808: 08 07 46 00 8c 40 09 1e b8 51 eb 85 1f 68 69 63   ..F..@...Q...hic",
          "187: |   3824: 63 75 70 25 07 14 01 01 01 08 00 00 00 00 00 00   cup%............",
          "188: |   3840: 00 00 00 00 00 00 07 b9 08 06 3c 78 40 09 1e b8   ..........<x@...",
          "189: |   3856: 51 eb 85 1f 68 69 63 63 75 70 25 06 14 01 00 01   Q...hiccup%.....",
          "190: |   3872: 08 00 00 00 00 00 00 00 00 00 00 00 00 07 19 08   ................",
          "191: |   3888: 05 32 64 40 09 1e b8 51 eb 85 1f 68 69 63 63 75   .2d@...Q...hiccu",
          "192: |   3904: 70 25 05 14 01 01 01 08 00 00 00 00 00 00 00 00   p%..............",
          "193: |   3920: 00 00 00 00 07 19 08 04 28 50 40 09 1e b8 51 eb   ........(P@...Q.",
          "194: |   3936: 85 1f 68 69 63 63 75 70 25 04 14 01 01 01 08 00   ..hiccup%.......",
          "195: |   3952: 00 00 00 00 00 00 00 00 00 00 00 07 19 08 03 1e   ................",
          "196: |   3968: 3c 40 09 1e b8 51 eb 85 1f 68 69 63 63 75 70 25   <@...Q...hiccup%",
          "197: |   3984: 03 14 01 01 01 08 00 00 00 00 00 00 00 00 00 00   ................",
          "198: |   4000: 00 00 07 19 08 02 14 28 40 09 1e b8 51 eb 85 1f   .......(@...Q...",
          "199: |   4016: 68 69 63 63 75 70 24 02 14 09 01 01 08 00 00 00   hiccup$.........",
          "200: |   4032: 00 00 00 00 00 00 00 00 00 07 19 08 0a 14 40 09   ..............@.",
          "201: |   4048: 1e b8 51 eb 85 1f 68 69 63 63 75 70 22 01 14 08   ..Q...hiccup....",
          "202: |   4064: 08 08 07 ff ff ff ff ff ff 00 00 00 00 00 00 07   ................",
          "203: |   4080: 19 08 40 09 1e b8 51 eb 85 1f 68 69 63 63 75 70   ..@...Q...hiccup",
          "204: | page 3 offset 8192",
          "205: |      0: 0a 00 00 00 0a 0f aa 00 0f fa 0f f2 0f e9 0f e0   ................",
          "206: |     16: 0f d7 0f ce 0f c5 0f bc 0e b3 0f aa 00 00 00 00   ................",
          "207: |   4000: 00 00 00 00 00 00 00 00 00 00 08 05 01 01 00 01   ................",
          "208: |   4016: 09 5a 0a 08 05 01 01 00 01 08 50 09 08 05 01 01   .Z........P.....",
          "209: |   4032: 00 01 07 46 08 08 05 01 01 00 01 06 3c 07 08 05   ...F........<...",
          "210: |   4048: 01 01 00 01 05 32 06 08 05 01 01 00 01 04 28 05   .....2........(.",
          "211: |   4064: 08 05 01 01 00 01 03 1e 04 08 05 01 01 00 01 02   ................",
          "212: |   4080: 14 03 07 05 09 01 00 01 0a 02 05 05 08 08 00 09   ................",
          "213: | page 4 offset 12288",
          "214: |      0: 0a 00 00 00 0a 0f cf 00 0f fc 0f f7 0f f2 0f ed   ................",
          "215: |     16: 0f e8 0f e3 0f de 0f d9 0f d4 0f cf 00 00 00 00   ................",
          "216: |   4032: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04   ................",
          "217: |   4048: 03 08 01 0a 04 03 08 01 09 04 03 08 01 08 04 03   ................",
          "218: |   4064: 08 01 07 04 03 08 01 06 04 03 08 01 05 04 03 08   ................",
          "219: |   4080: 01 04 04 03 08 01 13 04 03 08 01 02 03 03 08 09   ................",
          "220: | page 5 offset 16384",
          "221: |      0: 0d 00 00 00 00 10 00 00 00 00 00 00 00 00 00 00   ................",
          "222: | end crash.txt.db",
          "223: }]} {}",
          "225: do_execsql_test 2.1 {",
          "226:   INSERT INTO t1(b) VALUES(X'a0fee3669f9fddefc5cba913e4225d4b6ce2b04f26b87fad3ee6f9b7d90a1ea62a169bf41e5d32707a6ca5c3d05e4bde05c9d89eaaa8c50e74333d2e9fcd7dfe95528a3a016aac1102d825c5cd70cf99d8a88e0ea7f798d4334386518b7ad359beb168b93aba059a2a3bd93112d65b44c12b9904ea786b204d80531cdf0504bf9b203dbe927061974caf7b9f30cbc3397b61f802e732012a6663d41c3607d6f1c0dbcfd489adac05ca500c0b04439d894cd93a840159225ef73b627e178b9f84b3ffe66cf22a963a8368813ff7961fc47f573211ccec95e0220dcbb3bf429f4a50ba54d7a53784ac51bfef346e6ac8ae0d0e7c3175946e62ba2b');",
          "227: }",
          "229: do_catchsql_test 2.2 {",
          "230:   SELECT b,c FROM t1 ORDER BY a;",
          "231: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "646975c521f3d857b449f441b5b586e7124b499c",
      "candidate_info": {
        "commit_hash": "646975c521f3d857b449f441b5b586e7124b499c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/646975c521f3d857b449f441b5b586e7124b499c",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/alter.c"
        ],
        "message": "Clean up the ExprList that holds the names of columns in a CTE before checking for unused references in the ALTER TABLE implementation.\n\nFossilOrigin-Name: 8223e79f987feda5c8e51ec52cec6798cca16d070b10558939e2888ca1a25b8e",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/alter.c||src/alter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 0271491438ad2a985aeff355173a8d0f1e5813954c82147bc68cb26cca5804c8",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/alter.c||src/alter.c": [
          "File: src/alter.c -> src/alter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "742: static void renameWalkWith(Walker *pWalker, Select *pSelect){",
          "744:     int i;",
          "747:       NameContext sNC;",
          "748:       memset(&sNC, 0, sizeof(sNC));",
          "749:       sNC.pParse = pWalker->pParse;",
          "750:       sqlite3SelectPrep(sNC.pParse, p, &sNC);",
          "751:       sqlite3WalkSelect(pWalker, p);",
          "752:     }",
          "753:   }",
          "754: }",
          "",
          "[Removed Lines]",
          "743:   if( pSelect->pWith ){",
          "745:     for(i=0; i<pSelect->pWith->nCte; i++){",
          "746:       Select *p = pSelect->pWith->a[i].pSelect;",
          "",
          "[Added Lines]",
          "743:   With *pWith = pSelect->pWith;",
          "744:   if( pWith ){",
          "746:     for(i=0; i<pWith->nCte; i++){",
          "747:       Select *p = pWith->a[i].pSelect;",
          "753:       sqlite3RenameExprlistUnmap(pWalker->pParse, pWith->a[i].pCols);",
          "",
          "---------------"
        ]
      }
    }
  ]
}