{
  "cve_id": "CVE-2019-17546",
  "cve_desc": "tif_getimage.c in LibTIFF through 4.0.10, as used in GDAL through 3.0.1 and other products, has an integer overflow that potentially causes a heap-based buffer overflow via a crafted RGBA image, related to a \"Negative-size-param\" condition.",
  "repo": "OSGeo/gdal",
  "patch_hash": "21674033ee246f698887604c7af7ba1962a40ddf",
  "patch_info": {
    "commit_hash": "21674033ee246f698887604c7af7ba1962a40ddf",
    "repo": "OSGeo/gdal",
    "commit_url": "https://github.com/OSGeo/gdal/commit/21674033ee246f698887604c7af7ba1962a40ddf",
    "files": [
      "gdal/frmts/gtiff/libtiff/tif_getimage.c"
    ],
    "message": "Internal libtiff: fix integer overflow potentially causing write heap buffer overflow, especially on 32 bit builds. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=16443. Credit to OSS Fuzz",
    "before_after_code_files": [
      "gdal/frmts/gtiff/libtiff/tif_getimage.c||gdal/frmts/gtiff/libtiff/tif_getimage.c"
    ]
  },
  "patch_diff": {
    "gdal/frmts/gtiff/libtiff/tif_getimage.c||gdal/frmts/gtiff/libtiff/tif_getimage.c": [
      "File: gdal/frmts/gtiff/libtiff/tif_getimage.c -> gdal/frmts/gtiff/libtiff/tif_getimage.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "949:  fromskew = (w < imagewidth ? imagewidth - w : 0);",
      "950:  for (row = 0; row < h; row += nrow)",
      "951:  {",
      "952:   rowstoread = rowsperstrip - (row + img->row_offset) % rowsperstrip;",
      "953:   nrow = (row + rowstoread > h ? h - row : rowstoread);",
      "954:   nrowsub = nrow;",
      "955:   if ((nrowsub%subsamplingver)!=0)",
      "956:    nrowsub+=subsamplingver-nrowsub%subsamplingver;",
      "957:   if (_TIFFReadEncodedStripAndAllocBuffer(tif,",
      "958:       TIFFComputeStrip(tif,row+img->row_offset, 0),",
      "959:       (void**)(&buf),",
      "960:                     maxstripsize,",
      "962:       && (buf == NULL || img->stoponerr))",
      "963:   {",
      "964:    ret = 0;",
      "",
      "[Removed Lines]",
      "961:       ((row + img->row_offset)%rowsperstrip + nrowsub) * scanline)==(tmsize_t)(-1)",
      "",
      "[Added Lines]",
      "952:   uint32 temp;",
      "958:   temp = (row + img->row_offset)%rowsperstrip + nrowsub;",
      "959:   if( scanline > 0 && temp > (size_t)(TIFF_TMSIZE_T_MAX / scanline) )",
      "960:   {",
      "961:    TIFFErrorExt(tif->tif_clientdata, TIFFFileName(tif), \"Integer overflow in gtStripContig\");",
      "962:    return 0;",
      "963:   }",
      "968:       temp * scanline)==(tmsize_t)(-1)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1051:  fromskew = (w < imagewidth ? imagewidth - w : 0);",
      "1052:  for (row = 0; row < h; row += nrow)",
      "1053:  {",
      "1054:   rowstoread = rowsperstrip - (row + img->row_offset) % rowsperstrip;",
      "1055:   nrow = (row + rowstoread > h ? h - row : rowstoread);",
      "1056:   offset_row = row + img->row_offset;",
      "1057:                 if( buf == NULL )",
      "1058:                 {",
      "1059:                     if (_TIFFReadEncodedStripAndAllocBuffer(",
      "1060:                             tif, TIFFComputeStrip(tif, offset_row, 0),",
      "1061:                             (void**) &buf, bufsize,",
      "1063:                         && (buf == NULL || img->stoponerr))",
      "1064:                     {",
      "1065:                             ret = 0;",
      "",
      "[Removed Lines]",
      "1062:                             ((row + img->row_offset)%rowsperstrip + nrow) * scanline)==(tmsize_t)(-1)",
      "",
      "[Added Lines]",
      "1061:                 uint32 temp;",
      "1065:                 temp = (row + img->row_offset)%rowsperstrip + nrow;",
      "1066:                 if( scanline > 0 && temp > (size_t)(TIFF_TMSIZE_T_MAX / scanline) )",
      "1067:                 {",
      "1068:                         TIFFErrorExt(tif->tif_clientdata, TIFFFileName(tif), \"Integer overflow in gtStripSeparate\");",
      "1069:                         return 0;",
      "1070:                 }",
      "1076:                             temp * scanline)==(tmsize_t)(-1)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1079:                     }",
      "1080:                 }",
      "1081:   else if (TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, 0),",
      "1083:       && img->stoponerr)",
      "1084:   {",
      "1085:    ret = 0;",
      "",
      "[Removed Lines]",
      "1082:       p0, ((row + img->row_offset)%rowsperstrip + nrow) * scanline)==(tmsize_t)(-1)",
      "",
      "[Added Lines]",
      "1096:       p0, temp * scanline)==(tmsize_t)(-1)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1087:   }",
      "1088:   if (colorchannels > 1",
      "1089:                     && TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, 1),",
      "1091:       && img->stoponerr)",
      "1092:   {",
      "1093:    ret = 0;",
      "",
      "[Removed Lines]",
      "1090:                                             p1, ((row + img->row_offset)%rowsperstrip + nrow) * scanline) == (tmsize_t)(-1)",
      "",
      "[Added Lines]",
      "1104:                                             p1, temp * scanline) == (tmsize_t)(-1)",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1095:   }",
      "1096:   if (colorchannels > 1",
      "1097:                     && TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, 2),",
      "1099:       && img->stoponerr)",
      "1100:   {",
      "1101:    ret = 0;",
      "",
      "[Removed Lines]",
      "1098:                                             p2, ((row + img->row_offset)%rowsperstrip + nrow) * scanline) == (tmsize_t)(-1)",
      "",
      "[Added Lines]",
      "1112:                                             p2, temp * scanline) == (tmsize_t)(-1)",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1104:   if (alpha)",
      "1105:   {",
      "1106:    if (TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, colorchannels),",
      "1108:        && img->stoponerr)",
      "1109:    {",
      "1110:     ret = 0;",
      "",
      "[Removed Lines]",
      "1107:        pa, ((row + img->row_offset)%rowsperstrip + nrow) * scanline)==(tmsize_t)(-1)",
      "",
      "[Added Lines]",
      "1121:        pa, temp * scanline)==(tmsize_t)(-1)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b2f6652f0365ccffb0827dbc5a1e98ccf0a3b2f3",
      "candidate_info": {
        "commit_hash": "b2f6652f0365ccffb0827dbc5a1e98ccf0a3b2f3",
        "repo": "OSGeo/gdal",
        "commit_url": "https://github.com/OSGeo/gdal/commit/b2f6652f0365ccffb0827dbc5a1e98ccf0a3b2f3",
        "files": [
          "gdal/frmts/gtiff/libtiff/gdal_libtiff_symbol_rename.h",
          "gdal/frmts/gtiff/libtiff/tif_aux.c",
          "gdal/frmts/gtiff/libtiff/tif_dir.c",
          "gdal/frmts/gtiff/libtiff/tif_dirwrite.c",
          "gdal/frmts/gtiff/libtiff/tif_getimage.c",
          "gdal/frmts/gtiff/libtiff/tif_luv.c",
          "gdal/frmts/gtiff/libtiff/tif_ojpeg.c",
          "gdal/frmts/gtiff/libtiff/tif_open.c",
          "gdal/frmts/gtiff/libtiff/tif_pixarlog.c",
          "gdal/frmts/gtiff/libtiff/tif_read.c",
          "gdal/frmts/gtiff/libtiff/tif_strip.c",
          "gdal/frmts/gtiff/libtiff/tif_tile.c",
          "gdal/frmts/gtiff/libtiff/tiffiop.h"
        ],
        "message": "Internal libtiff: backport security related fixes",
        "before_after_code_files": [
          "gdal/frmts/gtiff/libtiff/gdal_libtiff_symbol_rename.h||gdal/frmts/gtiff/libtiff/gdal_libtiff_symbol_rename.h",
          "gdal/frmts/gtiff/libtiff/tif_aux.c||gdal/frmts/gtiff/libtiff/tif_aux.c",
          "gdal/frmts/gtiff/libtiff/tif_dir.c||gdal/frmts/gtiff/libtiff/tif_dir.c",
          "gdal/frmts/gtiff/libtiff/tif_dirwrite.c||gdal/frmts/gtiff/libtiff/tif_dirwrite.c",
          "gdal/frmts/gtiff/libtiff/tif_getimage.c||gdal/frmts/gtiff/libtiff/tif_getimage.c",
          "gdal/frmts/gtiff/libtiff/tif_luv.c||gdal/frmts/gtiff/libtiff/tif_luv.c",
          "gdal/frmts/gtiff/libtiff/tif_ojpeg.c||gdal/frmts/gtiff/libtiff/tif_ojpeg.c",
          "gdal/frmts/gtiff/libtiff/tif_open.c||gdal/frmts/gtiff/libtiff/tif_open.c",
          "gdal/frmts/gtiff/libtiff/tif_pixarlog.c||gdal/frmts/gtiff/libtiff/tif_pixarlog.c",
          "gdal/frmts/gtiff/libtiff/tif_read.c||gdal/frmts/gtiff/libtiff/tif_read.c",
          "gdal/frmts/gtiff/libtiff/tif_strip.c||gdal/frmts/gtiff/libtiff/tif_strip.c",
          "gdal/frmts/gtiff/libtiff/tif_tile.c||gdal/frmts/gtiff/libtiff/tif_tile.c",
          "gdal/frmts/gtiff/libtiff/tiffiop.h||gdal/frmts/gtiff/libtiff/tiffiop.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "gdal/frmts/gtiff/libtiff/tif_getimage.c||gdal/frmts/gtiff/libtiff/tif_getimage.c"
          ],
          "candidate": [
            "gdal/frmts/gtiff/libtiff/tif_getimage.c||gdal/frmts/gtiff/libtiff/tif_getimage.c"
          ]
        }
      },
      "candidate_diff": {
        "gdal/frmts/gtiff/libtiff/gdal_libtiff_symbol_rename.h||gdal/frmts/gtiff/libtiff/gdal_libtiff_symbol_rename.h": [
          "File: gdal/frmts/gtiff/libtiff/gdal_libtiff_symbol_rename.h -> gdal/frmts/gtiff/libtiff/gdal_libtiff_symbol_rename.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "302: #define TIFFCheckTile gdal_TIFFCheckTile",
          "303: #define TIFFCIELabToRGBInit gdal_TIFFCIELabToRGBInit",
          "304: #define TIFFCIELabToXYZ gdal_TIFFCIELabToXYZ",
          "307: #define TIFFClampDoubleToInt16 gdal_TIFFClampDoubleToInt16",
          "308: #define TIFFClampDoubleToInt32 gdal_TIFFClampDoubleToInt32",
          "309: #define TIFFClampDoubleToInt8 gdal_TIFFClampDoubleToInt8",
          "",
          "[Removed Lines]",
          "305: #define TIFFClampDoubleToFloat gdal_TIFFClampDoubleToFloat",
          "306: #define TIFFClampDoubleToFloat gdal_TIFFClampDoubleToFloat",
          "",
          "[Added Lines]",
          "305: #define _TIFFClampDoubleToFloat gdal__TIFFClampDoubleToFloat",
          "",
          "---------------"
        ],
        "gdal/frmts/gtiff/libtiff/tif_aux.c||gdal/frmts/gtiff/libtiff/tif_aux.c": [
          "File: gdal/frmts/gtiff/libtiff/tif_aux.c -> gdal/frmts/gtiff/libtiff/tif_aux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: #include \"tiffiop.h\"",
          "31: #include \"tif_predict.h\"",
          "32: #include <math.h>",
          "34: uint32",
          "35: _TIFFMultiply32(TIFF* tif, uint32 first, uint32 second, const char* where)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: #include <float.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "57:  return bytes;",
          "58: }",
          "60: void*",
          "61: _TIFFCheckRealloc(TIFF* tif, void* buffer,",
          "62:     tmsize_t nmemb, tmsize_t elem_size, const char* what)",
          "63: {",
          "64:  void* cp = NULL;",
          "73:  if (cp == NULL) {",
          "74:   TIFFErrorExt(tif->tif_clientdata, tif->tif_name,",
          "",
          "[Removed Lines]",
          "65:  tmsize_t bytes = nmemb * elem_size;",
          "70:  if (nmemb && elem_size && bytes / elem_size == nmemb)",
          "71:   cp = _TIFFrealloc(buffer, bytes);",
          "",
          "[Added Lines]",
          "61: tmsize_t",
          "62: _TIFFMultiplySSize(TIFF* tif, tmsize_t first, tmsize_t second, const char* where)",
          "63: {",
          "64:     if( first <= 0 || second <= 0 )",
          "65:     {",
          "66:         if( tif != NULL && where != NULL )",
          "67:         {",
          "68:             TIFFErrorExt(tif->tif_clientdata, where,",
          "69:                         \"Invalid argument to _TIFFMultiplySSize() in %s\", where);",
          "70:         }",
          "71:         return 0;",
          "72:     }",
          "74:     if( first > TIFF_TMSIZE_T_MAX / second )",
          "75:     {",
          "76:         if( tif != NULL && where != NULL )",
          "77:         {",
          "78:             TIFFErrorExt(tif->tif_clientdata, where,",
          "79:                         \"Integer overflow in %s\", where);",
          "80:         }",
          "81:         return 0;",
          "82:     }",
          "83:     return first * second;",
          "84: }",
          "86: tmsize_t _TIFFCastUInt64ToSSize(TIFF* tif, uint64 val, const char* module)",
          "87: {",
          "88:     if( val > (uint64)TIFF_TMSIZE_T_MAX )",
          "89:     {",
          "90:         if( tif != NULL && module != NULL )",
          "91:         {",
          "92:             TIFFErrorExt(tif->tif_clientdata,module,\"Integer overflow\");",
          "93:         }",
          "94:         return 0;",
          "95:     }",
          "96:     return (tmsize_t)val;",
          "97: }",
          "104:         tmsize_t count = _TIFFMultiplySSize(tif, nmemb, elem_size, NULL);",
          "108:  if (count != 0)",
          "109:  {",
          "110:   cp = _TIFFrealloc(buffer, count);",
          "111:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "357:  }",
          "358: }",
          "360: int _TIFFSeekOK(TIFF* tif, toff_t off)",
          "361: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "400: float _TIFFClampDoubleToFloat( double val )",
          "401: {",
          "402:     if( val > FLT_MAX )",
          "403:         return FLT_MAX;",
          "404:     if( val < -FLT_MAX )",
          "405:         return -FLT_MAX;",
          "406:     return (float)val;",
          "407: }",
          "",
          "---------------"
        ],
        "gdal/frmts/gtiff/libtiff/tif_dir.c||gdal/frmts/gtiff/libtiff/tif_dir.c": [
          "File: gdal/frmts/gtiff/libtiff/tif_dir.c -> gdal/frmts/gtiff/libtiff/tif_dir.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: #include \"tiffiop.h\"",
          "",
          "[Removed Lines]",
          "32: #include <float.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48:  }",
          "49:  if (vp) {",
          "53:   if (*vpp)",
          "54:    _TIFFmemcpy(*vpp, vp, bytes);",
          "",
          "[Removed Lines]",
          "50:   tmsize_t bytes = (tmsize_t)(nmemb * elem_size);",
          "51:   if (elem_size && bytes / elem_size == nmemb)",
          "",
          "[Added Lines]",
          "49:   tmsize_t bytes = _TIFFMultiplySSize(NULL, nmemb, elem_size, NULL);",
          "50:   if (bytes)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "90: static int",
          "92: {",
          "94: #define EXTRASAMPLE_COREL_UNASSALPHA 999",
          "96:  uint16* va;",
          "97:  uint32 i;",
          "100:  if ((uint16) *v > td->td_samplesperpixel)",
          "",
          "[Removed Lines]",
          "91: setExtraSamples(TIFFDirectory* td, va_list ap, uint32* v)",
          "",
          "[Added Lines]",
          "90: setExtraSamples(TIFF* tif, va_list ap, uint32* v)",
          "97:         TIFFDirectory* td = &tif->tif_dir;",
          "98:         static const char module[] = \"setExtraSamples\";",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "116:     return 0;",
          "117:   }",
          "118:  }",
          "119:  td->td_extrasamples = (uint16) *v;",
          "120:  _TIFFsetShortArray(&td->td_sampleinfo, va, td->td_extrasamples);",
          "121:  return 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "121:         if ( td->td_transferfunction[0] != NULL && (td->td_samplesperpixel - *v > 1) &&",
          "122:                 !(td->td_samplesperpixel - td->td_extrasamples > 1))",
          "123:         {",
          "124:                 TIFFWarningExt(tif->tif_clientdata,module,",
          "125:                     \"ExtraSamples tag value is changing, \"",
          "126:                     \"but TransferFunction was read with a different value. Cancelling it\");",
          "127:                 TIFFClrFieldBit(tif,FIELD_TRANSFERFUNCTION);",
          "128:                 _TIFFfree(td->td_transferfunction[0]);",
          "129:                 td->td_transferfunction[0] = NULL;",
          "130:         }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "153:  return (0);",
          "154: }",
          "165: static int",
          "166: _TIFFVSetField(TIFF* tif, uint32 tag, va_list ap)",
          "167: {",
          "",
          "[Removed Lines]",
          "156: static float TIFFClampDoubleToFloat( double val )",
          "157: {",
          "158:     if( val > FLT_MAX )",
          "159:         return FLT_MAX;",
          "160:     if( val < -FLT_MAX )",
          "161:         return -FLT_MAX;",
          "162:     return (float)val;",
          "163: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "285:                 _TIFFfree(td->td_smaxsamplevalue);",
          "286:                 td->td_smaxsamplevalue = NULL;",
          "287:             }",
          "288:         }",
          "289:   td->td_samplesperpixel = (uint16) v;",
          "290:   break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "294:             if( td->td_transferfunction[0] != NULL && (v - td->td_extrasamples > 1) &&",
          "295:                 !(td->td_samplesperpixel - td->td_extrasamples > 1))",
          "296:             {",
          "297:                     TIFFWarningExt(tif->tif_clientdata,module,",
          "298:                         \"SamplesPerPixel tag value is changing, \"",
          "299:                         \"but TransferFunction was read with a different value. Cancelling it\");",
          "300:                     TIFFClrFieldBit(tif,FIELD_TRANSFERFUNCTION);",
          "301:                     _TIFFfree(td->td_transferfunction[0]);",
          "302:                     td->td_transferfunction[0] = NULL;",
          "303:             }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "320:         dblval = va_arg(ap, double);",
          "321:         if( dblval < 0 )",
          "322:             goto badvaluedouble;",
          "324:   break;",
          "325:  case TIFFTAG_YRESOLUTION:",
          "326:         dblval = va_arg(ap, double);",
          "327:         if( dblval < 0 )",
          "328:             goto badvaluedouble;",
          "330:   break;",
          "331:  case TIFFTAG_PLANARCONFIG:",
          "332:   v = (uint16) va_arg(ap, uint16_vap);",
          "",
          "[Removed Lines]",
          "323:   td->td_xresolution = TIFFClampDoubleToFloat( dblval );",
          "329:   td->td_yresolution = TIFFClampDoubleToFloat( dblval );",
          "",
          "[Added Lines]",
          "339:   td->td_xresolution = _TIFFClampDoubleToFloat( dblval );",
          "345:   td->td_yresolution = _TIFFClampDoubleToFloat( dblval );",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "335:   td->td_planarconfig = (uint16) v;",
          "336:   break;",
          "337:  case TIFFTAG_XPOSITION:",
          "339:   break;",
          "340:  case TIFFTAG_YPOSITION:",
          "342:   break;",
          "343:  case TIFFTAG_RESOLUTIONUNIT:",
          "344:   v = (uint16) va_arg(ap, uint16_vap);",
          "",
          "[Removed Lines]",
          "338:   td->td_xposition = TIFFClampDoubleToFloat( va_arg(ap, double) );",
          "341:   td->td_yposition = TIFFClampDoubleToFloat( va_arg(ap, double) );",
          "",
          "[Added Lines]",
          "354:   td->td_xposition = _TIFFClampDoubleToFloat( va_arg(ap, double) );",
          "357:   td->td_yposition = _TIFFClampDoubleToFloat( va_arg(ap, double) );",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "361:   _TIFFsetShortArray(&td->td_colormap[2], va_arg(ap, uint16*), v32);",
          "362:   break;",
          "363:  case TIFFTAG_EXTRASAMPLES:",
          "365:    goto badvalue;",
          "366:   break;",
          "367:  case TIFFTAG_MATTEING:",
          "",
          "[Removed Lines]",
          "364:   if (!setExtraSamples(td, ap, &v))",
          "",
          "[Added Lines]",
          "380:   if (!setExtraSamples(tif, ap, &v))",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "684:     case TIFF_SRATIONAL:",
          "685:     case TIFF_FLOAT:",
          "686:      {",
          "688:       _TIFFmemcpy(val, &v2, tv_size);",
          "689:      }",
          "690:      break;",
          "",
          "[Removed Lines]",
          "687:       float v2 = TIFFClampDoubleToFloat(va_arg(ap, double));",
          "",
          "[Added Lines]",
          "703:       float v2 = _TIFFClampDoubleToFloat(va_arg(ap, double));",
          "",
          "---------------"
        ],
        "gdal/frmts/gtiff/libtiff/tif_dirwrite.c||gdal/frmts/gtiff/libtiff/tif_dirwrite.c": [
          "File: gdal/frmts/gtiff/libtiff/tif_dirwrite.c -> gdal/frmts/gtiff/libtiff/tif_dirwrite.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: #include \"tiffiop.h\"",
          "33: #ifdef HAVE_IEEEFP",
          "34: #define TIFFCvtNativeToIEEEFloat(tif, n, fp)",
          "",
          "[Removed Lines]",
          "31: #include <float.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "946:  return(0);",
          "947: }",
          "958: static int8 TIFFClampDoubleToInt8( double val )",
          "959: {",
          "960:     if( val > 127 )",
          "",
          "[Removed Lines]",
          "949: static float TIFFClampDoubleToFloat( double val )",
          "950: {",
          "951:     if( val > FLT_MAX )",
          "952:         return FLT_MAX;",
          "953:     if( val < -FLT_MAX )",
          "954:         return -FLT_MAX;",
          "955:     return (float)val;",
          "956: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1029:    if (tif->tif_dir.td_bitspersample<=32)",
          "1030:    {",
          "1031:     for (i = 0; i < count; ++i)",
          "1033:     ok = TIFFWriteDirectoryTagFloatArray(tif,ndir,dir,tag,count,(float*)conv);",
          "1034:    }",
          "1035:    else",
          "",
          "[Removed Lines]",
          "1032:      ((float*)conv)[i] = TIFFClampDoubleToFloat(value[i]);",
          "",
          "[Added Lines]",
          "1022:      ((float*)conv)[i] = _TIFFClampDoubleToFloat(value[i]);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1893:   n=3;",
          "1894:  if (n==3)",
          "1895:  {",
          "1897:    n=2;",
          "1898:  }",
          "1899:  if (n==2)",
          "1900:  {",
          "1902:    n=1;",
          "1903:  }",
          "1904:  if (n==0)",
          "",
          "[Removed Lines]",
          "1896:   if (!_TIFFmemcmp(tif->tif_dir.td_transferfunction[0],tif->tif_dir.td_transferfunction[2],m*sizeof(uint16)))",
          "1901:   if (!_TIFFmemcmp(tif->tif_dir.td_transferfunction[0],tif->tif_dir.td_transferfunction[1],m*sizeof(uint16)))",
          "",
          "[Added Lines]",
          "1886:   if (tif->tif_dir.td_transferfunction[2] == NULL ||",
          "1887:       !_TIFFmemcmp(tif->tif_dir.td_transferfunction[0],tif->tif_dir.td_transferfunction[2],m*sizeof(uint16)))",
          "1892:   if (tif->tif_dir.td_transferfunction[1] == NULL ||",
          "1893:       !_TIFFmemcmp(tif->tif_dir.td_transferfunction[0],tif->tif_dir.td_transferfunction[1],m*sizeof(uint16)))",
          "",
          "---------------"
        ],
        "gdal/frmts/gtiff/libtiff/tif_getimage.c||gdal/frmts/gtiff/libtiff/tif_getimage.c": [
          "File: gdal/frmts/gtiff/libtiff/tif_getimage.c -> gdal/frmts/gtiff/libtiff/tif_getimage.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "755:  uint32 leftmost_tw;",
          "757:  tilesize = TIFFTileSize(tif);",
          "759:  if (bufsize == 0) {",
          "761:   return (0);",
          "762:  }",
          "",
          "[Removed Lines]",
          "758:  bufsize = TIFFSafeMultiply(tmsize_t,alpha?4:3,tilesize);",
          "760:   TIFFErrorExt(tif->tif_clientdata, TIFFFileName(tif), \"Integer overflow in %s\", \"gtTileSeparate\");",
          "",
          "[Added Lines]",
          "758:  bufsize = _TIFFMultiplySSize(tif, alpha?4:3,tilesize, \"gtTileSeparate\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "950:  fromskew = (w < imagewidth ? imagewidth - w : 0);",
          "951:  for (row = 0; row < h; row += nrow)",
          "952:  {",
          "953:   rowstoread = rowsperstrip - (row + img->row_offset) % rowsperstrip;",
          "954:   nrow = (row + rowstoread > h ? h - row : rowstoread);",
          "955:   nrowsub = nrow;",
          "956:   if ((nrowsub%subsamplingver)!=0)",
          "957:    nrowsub+=subsamplingver-nrowsub%subsamplingver;",
          "958:   if (_TIFFReadEncodedStripAndAllocBuffer(tif,",
          "959:       TIFFComputeStrip(tif,row+img->row_offset, 0),",
          "960:       (void**)(&buf),",
          "961:                     maxstripsize,",
          "963:       && (buf == NULL || img->stoponerr))",
          "964:   {",
          "965:    ret = 0;",
          "",
          "[Removed Lines]",
          "962:       ((row + img->row_offset)%rowsperstrip + nrowsub) * scanline)==(tmsize_t)(-1)",
          "",
          "[Added Lines]",
          "952:   uint32 temp;",
          "958:   temp = (row + img->row_offset)%rowsperstrip + nrowsub;",
          "959:   if( scanline > 0 && temp > (size_t)(TIFF_TMSIZE_T_MAX / scanline) )",
          "960:   {",
          "961:    TIFFErrorExt(tif->tif_clientdata, TIFFFileName(tif), \"Integer overflow in gtStripContig\");",
          "962:    return 0;",
          "963:   }",
          "968:       temp * scanline)==(tmsize_t)(-1)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1019:         uint16 colorchannels;",
          "1021:  stripsize = TIFFStripSize(tif);",
          "1023:  if (bufsize == 0) {",
          "1025:   return (0);",
          "1026:  }",
          "",
          "[Removed Lines]",
          "1022:  bufsize = TIFFSafeMultiply(tmsize_t,alpha?4:3,stripsize);",
          "1024:   TIFFErrorExt(tif->tif_clientdata, TIFFFileName(tif), \"Integer overflow in %s\", \"gtStripSeparate\");",
          "",
          "[Added Lines]",
          "1028:  bufsize = _TIFFMultiplySSize(tif,alpha?4:3,stripsize, \"gtStripSeparate\");",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1053:  fromskew = (w < imagewidth ? imagewidth - w : 0);",
          "1054:  for (row = 0; row < h; row += nrow)",
          "1055:  {",
          "1056:   rowstoread = rowsperstrip - (row + img->row_offset) % rowsperstrip;",
          "1057:   nrow = (row + rowstoread > h ? h - row : rowstoread);",
          "1058:   offset_row = row + img->row_offset;",
          "1059:                 if( buf == NULL )",
          "1060:                 {",
          "1061:                     if (_TIFFReadEncodedStripAndAllocBuffer(",
          "1062:                             tif, TIFFComputeStrip(tif, offset_row, 0),",
          "1063:                             (void**) &buf, bufsize,",
          "1065:                         && (buf == NULL || img->stoponerr))",
          "1066:                     {",
          "1067:                             ret = 0;",
          "",
          "[Removed Lines]",
          "1064:                             ((row + img->row_offset)%rowsperstrip + nrow) * scanline)==(tmsize_t)(-1)",
          "",
          "[Added Lines]",
          "1061:                 uint32 temp;",
          "1065:                 temp = (row + img->row_offset)%rowsperstrip + nrow;",
          "1066:                 if( scanline > 0 && temp > (size_t)(TIFF_TMSIZE_T_MAX / scanline) )",
          "1067:                 {",
          "1068:                         TIFFErrorExt(tif->tif_clientdata, TIFFFileName(tif), \"Integer overflow in gtStripSeparate\");",
          "1069:                         return 0;",
          "1070:                 }",
          "1076:                             temp * scanline)==(tmsize_t)(-1)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1081:                     }",
          "1082:                 }",
          "1083:   else if (TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, 0),",
          "1085:       && img->stoponerr)",
          "1086:   {",
          "1087:    ret = 0;",
          "",
          "[Removed Lines]",
          "1084:       p0, ((row + img->row_offset)%rowsperstrip + nrow) * scanline)==(tmsize_t)(-1)",
          "",
          "[Added Lines]",
          "1096:       p0, temp * scanline)==(tmsize_t)(-1)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1089:   }",
          "1090:   if (colorchannels > 1",
          "1091:                     && TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, 1),",
          "1093:       && img->stoponerr)",
          "1094:   {",
          "1095:    ret = 0;",
          "",
          "[Removed Lines]",
          "1092:                                             p1, ((row + img->row_offset)%rowsperstrip + nrow) * scanline) == (tmsize_t)(-1)",
          "",
          "[Added Lines]",
          "1104:                                             p1, temp * scanline) == (tmsize_t)(-1)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1097:   }",
          "1098:   if (colorchannels > 1",
          "1099:                     && TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, 2),",
          "1101:       && img->stoponerr)",
          "1102:   {",
          "1103:    ret = 0;",
          "",
          "[Removed Lines]",
          "1100:                                             p2, ((row + img->row_offset)%rowsperstrip + nrow) * scanline) == (tmsize_t)(-1)",
          "",
          "[Added Lines]",
          "1112:                                             p2, temp * scanline) == (tmsize_t)(-1)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1106:   if (alpha)",
          "1107:   {",
          "1108:    if (TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, colorchannels),",
          "1110:        && img->stoponerr)",
          "1111:    {",
          "1112:     ret = 0;",
          "",
          "[Removed Lines]",
          "1109:        pa, ((row + img->row_offset)%rowsperstrip + nrow) * scanline)==(tmsize_t)(-1)",
          "",
          "[Added Lines]",
          "1121:        pa, temp * scanline)==(tmsize_t)(-1)",
          "",
          "---------------"
        ],
        "gdal/frmts/gtiff/libtiff/tif_luv.c||gdal/frmts/gtiff/libtiff/tif_luv.c": [
          "File: gdal/frmts/gtiff/libtiff/tif_luv.c -> gdal/frmts/gtiff/libtiff/tif_luv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1264:  return (SGILOGDATAFMT_UNKNOWN);",
          "1265: }",
          "1271: static tmsize_t",
          "1272: multiply_ms(tmsize_t m1, tmsize_t m2)",
          "1273: {",
          "1277: }",
          "1279: static int",
          "",
          "[Removed Lines]",
          "1268: #define TIFF_SIZE_T_MAX ((size_t) ~ ((size_t)0))",
          "1269: #define TIFF_TMSIZE_T_MAX (tmsize_t)(TIFF_SIZE_T_MAX >> 1)",
          "1274:         if( m1 == 0 || m2 > TIFF_TMSIZE_T_MAX / m1 )",
          "1275:             return 0;",
          "1276:         return m1 * m2;",
          "",
          "[Added Lines]",
          "1270:         return _TIFFMultiplySSize(NULL, m1, m2, NULL);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1507:  switch (td->td_photometric) {",
          "1508:  case PHOTOMETRIC_LOGLUV:",
          "1509:   if (!LogLuvInitState(tif))",
          "1511:   if (td->td_compression == COMPRESSION_SGILOG24) {",
          "1512:    tif->tif_encoderow = LogLuvEncode24;",
          "1513:    switch (sp->user_datafmt) {",
          "",
          "[Removed Lines]",
          "1510:    break;",
          "",
          "[Added Lines]",
          "1504:    return (0);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1540:   break;",
          "1541:  case PHOTOMETRIC_LOGL:",
          "1542:   if (!LogL16InitState(tif))",
          "1544:   tif->tif_encoderow = LogL16Encode;",
          "1545:   switch (sp->user_datafmt) {",
          "1546:   case SGILOGDATAFMT_FLOAT:",
          "",
          "[Removed Lines]",
          "1543:    break;",
          "",
          "[Added Lines]",
          "1537:    return (0);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1556:   TIFFErrorExt(tif->tif_clientdata, module,",
          "1557:       \"Inappropriate photometric interpretation %d for SGILog compression; %s\",",
          "1558:       td->td_photometric, \"must be either LogLUV or LogL\");",
          "1560:  }",
          "1561:  sp->encoder_state = 1;",
          "1562:  return (1);",
          "",
          "[Removed Lines]",
          "1559:   break;",
          "",
          "[Added Lines]",
          "1553:   return (0);",
          "",
          "---------------"
        ],
        "gdal/frmts/gtiff/libtiff/tif_ojpeg.c||gdal/frmts/gtiff/libtiff/tif_ojpeg.c": [
          "File: gdal/frmts/gtiff/libtiff/tif_ojpeg.c -> gdal/frmts/gtiff/libtiff/tif_ojpeg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "831:  {",
          "832:   if (sp->subsampling_convert_state==0)",
          "833:   {",
          "834:    if (jpeg_read_raw_data_encap(sp,&(sp->libjpeg_jpeg_decompress_struct),sp->subsampling_convert_ycbcrimage,sp->subsampling_ver*8)==0)",
          "835:     return(0);",
          "836:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "834:    const jpeg_decompress_struct* cinfo = &sp->libjpeg_jpeg_decompress_struct;",
          "835:    int width = 0;",
          "836:    int last_col_width = 0;",
          "837:    int jpeg_bytes;",
          "838:    int expected_bytes;",
          "839:    int i;",
          "840:    if (cinfo->MCUs_per_row == 0)",
          "841:     return 0;",
          "842:    for (i = 0; i < cinfo->comps_in_scan; ++i)",
          "843:    {",
          "844:     const jpeg_component_info* info = cinfo->cur_comp_info[i];",
          "845: #if JPEG_LIB_VERSION >= 70",
          "846:     width += info->MCU_width * info->DCT_h_scaled_size;",
          "847:     last_col_width += info->last_col_width * info->DCT_h_scaled_size;",
          "848: #else",
          "849:     width += info->MCU_width * info->DCT_scaled_size;",
          "850:     last_col_width += info->last_col_width * info->DCT_scaled_size;",
          "851: #endif",
          "852:    }",
          "853:    jpeg_bytes = (cinfo->MCUs_per_row - 1) * width + last_col_width;",
          "854:    expected_bytes = sp->subsampling_convert_clinelenout * sp->subsampling_ver * sp->subsampling_hor;",
          "855:    if (jpeg_bytes != expected_bytes)",
          "856:    {",
          "857:     TIFFErrorExt(tif->tif_clientdata,module,\"Inconsistent number of MCU in codestream\");",
          "858:     return(0);",
          "859:    }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1082:  }",
          "1083:  if (sp->strile_length<sp->image_length)",
          "1084:  {",
          "1085:   if (sp->strile_length%(sp->subsampling_ver*8)!=0)",
          "1086:   {",
          "1087:    TIFFErrorExt(tif->tif_clientdata,module,\"Incompatible vertical subsampling and image strip/tile length\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1111:   if (((sp->subsampling_hor!=1) && (sp->subsampling_hor!=2) && (sp->subsampling_hor!=4)) ||",
          "1112:       ((sp->subsampling_ver!=1) && (sp->subsampling_ver!=2) && (sp->subsampling_ver!=4)))",
          "1113:   {",
          "1114:    TIFFErrorExt(tif->tif_clientdata,module,\"Invalid subsampling values\");",
          "1115:    return(0);",
          "1116:   }",
          "",
          "---------------"
        ],
        "gdal/frmts/gtiff/libtiff/tif_open.c||gdal/frmts/gtiff/libtiff/tif_open.c": [
          "File: gdal/frmts/gtiff/libtiff/tif_open.c -> gdal/frmts/gtiff/libtiff/tif_open.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "131:  if (!readproc || !writeproc || !seekproc || !closeproc || !sizeproc) {",
          "132:   TIFFErrorExt(clientdata, module,",
          "133:       \"One of the client procedures is NULL pointer.\");",
          "134:   goto bad2;",
          "135:  }",
          "136:  tif->tif_readproc = readproc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "134:   _TIFFfree(tif);",
          "",
          "---------------"
        ],
        "gdal/frmts/gtiff/libtiff/tif_pixarlog.c||gdal/frmts/gtiff/libtiff/tif_pixarlog.c": [
          "File: gdal/frmts/gtiff/libtiff/tif_pixarlog.c -> gdal/frmts/gtiff/libtiff/tif_pixarlog.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "634:  return guess;",
          "635: }",
          "640: static tmsize_t",
          "641: multiply_ms(tmsize_t m1, tmsize_t m2)",
          "642: {",
          "646: }",
          "648: static tmsize_t",
          "",
          "[Removed Lines]",
          "637: #define TIFF_SIZE_T_MAX ((size_t) ~ ((size_t)0))",
          "638: #define TIFF_TMSIZE_T_MAX (tmsize_t)(TIFF_SIZE_T_MAX >> 1)",
          "643:         if( m1 == 0 || m2 > TIFF_TMSIZE_T_MAX / m1 )",
          "644:             return 0;",
          "645:         return m1 * m2;",
          "",
          "[Added Lines]",
          "640:         return _TIFFMultiplySSize(NULL, m1, m2, NULL);",
          "",
          "---------------"
        ],
        "gdal/frmts/gtiff/libtiff/tif_read.c||gdal/frmts/gtiff/libtiff/tif_read.c": [
          "File: gdal/frmts/gtiff/libtiff/tif_read.c -> gdal/frmts/gtiff/libtiff/tif_read.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #include \"tiffiop.h\"",
          "30: #include <stdio.h>",
          "35: int TIFFFillStrip(TIFF* tif, uint32 strip);",
          "36: int TIFFFillTile(TIFF* tif, uint32 tile);",
          "37: static int TIFFStartStrip(TIFF* tif, uint32 strip);",
          "",
          "[Removed Lines]",
          "32: #define TIFF_SIZE_T_MAX ((size_t) ~ ((size_t)0))",
          "33: #define TIFF_TMSIZE_T_MAX (tmsize_t)(TIFF_SIZE_T_MAX >> 1)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49: #define THRESHOLD_MULTIPLIER 10",
          "50: #define MAX_THRESHOLD (THRESHOLD_MULTIPLIER * THRESHOLD_MULTIPLIER * THRESHOLD_MULTIPLIER * INITIAL_THRESHOLD)",
          "54: static int TIFFReadAndRealloc( TIFF* tif, tmsize_t size,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49: #define TIFF_INT64_MAX ((((int64)0x7FFFFFFF) << 32) | 0xFFFFFFFF)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "734:   return ((tmsize_t)(-1));",
          "735:  }",
          "736:  bytecount = td->td_stripbytecount[strip];",
          "754:   return ((tmsize_t)(-1));",
          "755:  }",
          "756:  if (size != (tmsize_t)(-1) && size < bytecountm)",
          "",
          "[Removed Lines]",
          "737:  if ((int64)bytecount <= 0) {",
          "738: #if defined(__WIN32__) && (defined(_MSC_VER) || defined(__MINGW32__))",
          "739:   TIFFErrorExt(tif->tif_clientdata, module,",
          "740:         \"%I64u: Invalid strip byte count, strip %lu\",",
          "741:         (unsigned __int64) bytecount,",
          "742:         (unsigned long) strip);",
          "743: #else",
          "744:   TIFFErrorExt(tif->tif_clientdata, module,",
          "745:         \"%llu: Invalid strip byte count, strip %lu\",",
          "746:         (unsigned long long) bytecount,",
          "747:         (unsigned long) strip);",
          "748: #endif",
          "749:   return ((tmsize_t)(-1));",
          "750:  }",
          "751:  bytecountm = (tmsize_t)bytecount;",
          "752:  if ((uint64)bytecountm!=bytecount) {",
          "753:   TIFFErrorExt(tif->tif_clientdata, module, \"Integer overflow\");",
          "",
          "[Added Lines]",
          "736:         bytecountm = _TIFFCastUInt64ToSSize(tif, bytecount, module);",
          "737:  if (bytecountm == 0) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "774:  if ((tif->tif_flags&TIFF_NOREADRAW)==0)",
          "775:  {",
          "776:   uint64 bytecount = td->td_stripbytecount[strip];",
          "778: #if defined(__WIN32__) && (defined(_MSC_VER) || defined(__MINGW32__))",
          "779:    TIFFErrorExt(tif->tif_clientdata, module,",
          "780:     \"Invalid strip byte count %I64u, strip %lu\",",
          "",
          "[Removed Lines]",
          "777:   if ((int64)bytecount <= 0) {",
          "",
          "[Added Lines]",
          "761:                 if( bytecount == 0 || bytecount > (uint64)TIFF_INT64_MAX ) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "801:        (bytecount - 4096) / 10 > (uint64)stripsize  )",
          "802:    {",
          "803:     uint64 newbytecount = (uint64)stripsize * 10 + 4096;",
          "805:     {",
          "806: #if defined(__WIN32__) && (defined(_MSC_VER) || defined(__MINGW32__))",
          "807:      TIFFWarningExt(tif->tif_clientdata, module,",
          "",
          "[Removed Lines]",
          "804:     if( (int64)newbytecount >= 0 )",
          "",
          "[Added Lines]",
          "788:     if( newbytecount == 0 || newbytecount > (uint64)TIFF_INT64_MAX )",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1196:  bytecount64 = td->td_stripbytecount[tile];",
          "1197:  if (size != (tmsize_t)(-1) && (uint64)size < bytecount64)",
          "1198:   bytecount64 = (uint64)size;",
          "1203:   return ((tmsize_t)(-1));",
          "1204:  }",
          "1205:  return (TIFFReadRawTile1(tif, tile, buf, bytecountm, module));",
          "",
          "[Removed Lines]",
          "1199:  bytecountm = (tmsize_t)bytecount64;",
          "1200:  if ((uint64)bytecountm!=bytecount64)",
          "1201:  {",
          "1202:   TIFFErrorExt(tif->tif_clientdata,module,\"Integer overflow\");",
          "",
          "[Added Lines]",
          "1183:  bytecountm = _TIFFCastUInt64ToSSize(tif, bytecount64, module);",
          "1184:         if( bytecountm == 0 ) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1221:  if ((tif->tif_flags&TIFF_NOREADRAW)==0)",
          "1222:  {",
          "1223:   uint64 bytecount = td->td_stripbytecount[tile];",
          "1225: #if defined(__WIN32__) && (defined(_MSC_VER) || defined(__MINGW32__))",
          "1226:    TIFFErrorExt(tif->tif_clientdata, module,",
          "1227:     \"%I64u: Invalid tile byte count, tile %lu\",",
          "",
          "[Removed Lines]",
          "1224:   if ((int64)bytecount <= 0) {",
          "",
          "[Added Lines]",
          "1206:   if( bytecount == 0 || bytecount > (uint64)TIFF_INT64_MAX ) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1248:        (bytecount - 4096) / 10 > (uint64)stripsize  )",
          "1249:    {",
          "1250:     uint64 newbytecount = (uint64)stripsize * 10 + 4096;",
          "1252:     {",
          "1253: #if defined(__WIN32__) && (defined(_MSC_VER) || defined(__MINGW32__))",
          "1254:      TIFFWarningExt(tif->tif_clientdata, module,",
          "",
          "[Removed Lines]",
          "1251:     if( (int64)newbytecount >= 0 )",
          "",
          "[Added Lines]",
          "1233:     if( newbytecount == 0 || newbytecount > (uint64)TIFF_INT64_MAX )",
          "",
          "---------------"
        ],
        "gdal/frmts/gtiff/libtiff/tif_strip.c||gdal/frmts/gtiff/libtiff/tif_strip.c": [
          "File: gdal/frmts/gtiff/libtiff/tif_strip.c -> gdal/frmts/gtiff/libtiff/tif_strip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "129: {",
          "130:  static const char module[] = \"TIFFVStripSize\";",
          "131:  uint64 m;",
          "133:  m=TIFFVStripSize64(tif,nrows);",
          "141: }",
          "",
          "[Removed Lines]",
          "132:  tmsize_t n;",
          "134:  n=(tmsize_t)m;",
          "135:  if ((uint64)n!=m)",
          "136:  {",
          "137:   TIFFErrorExt(tif->tif_clientdata,module,\"Integer overflow\");",
          "138:   n=0;",
          "139:  }",
          "140:  return(n);",
          "",
          "[Added Lines]",
          "133:         return _TIFFCastUInt64ToSSize(tif, m, module);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "211: {",
          "212:  static const char module[] = \"TIFFStripSize\";",
          "213:  uint64 m;",
          "215:  m=TIFFStripSize64(tif);",
          "223: }",
          "",
          "[Removed Lines]",
          "214:  tmsize_t n;",
          "216:  n=(tmsize_t)m;",
          "217:  if ((uint64)n!=m)",
          "218:  {",
          "219:   TIFFErrorExt(tif->tif_clientdata,module,\"Integer overflow\");",
          "220:   n=0;",
          "221:  }",
          "222:  return(n);",
          "",
          "[Added Lines]",
          "208:  return _TIFFCastUInt64ToSSize(tif, m, module);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "330: {",
          "331:  static const char module[] = \"TIFFScanlineSize\";",
          "332:  uint64 m;",
          "334:  m=TIFFScanlineSize64(tif);",
          "341: }",
          "",
          "[Removed Lines]",
          "333:  tmsize_t n;",
          "335:  n=(tmsize_t)m;",
          "336:  if ((uint64)n!=m) {",
          "337:   TIFFErrorExt(tif->tif_clientdata,module,\"Integer arithmetic overflow\");",
          "338:   n=0;",
          "339:  }",
          "340:  return(n);",
          "",
          "[Added Lines]",
          "320:  return _TIFFCastUInt64ToSSize(tif, m, module);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "366: {",
          "367:  static const char module[] = \"TIFFRasterScanlineSize\";",
          "368:  uint64 m;",
          "370:  m=TIFFRasterScanlineSize64(tif);",
          "378: }",
          "",
          "[Removed Lines]",
          "369:  tmsize_t n;",
          "371:  n=(tmsize_t)m;",
          "372:  if ((uint64)n!=m)",
          "373:  {",
          "374:   TIFFErrorExt(tif->tif_clientdata,module,\"Integer arithmetic overflow\");",
          "375:   n=0;",
          "376:  }",
          "377:  return(n);",
          "",
          "[Added Lines]",
          "350:  return _TIFFCastUInt64ToSSize(tif, m, module);",
          "",
          "---------------"
        ],
        "gdal/frmts/gtiff/libtiff/tif_tile.c||gdal/frmts/gtiff/libtiff/tif_tile.c": [
          "File: gdal/frmts/gtiff/libtiff/tif_tile.c -> gdal/frmts/gtiff/libtiff/tif_tile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "181: {",
          "182:  static const char module[] = \"TIFFTileRowSize\";",
          "183:  uint64 m;",
          "185:  m=TIFFTileRowSize64(tif);",
          "193: }",
          "",
          "[Removed Lines]",
          "184:  tmsize_t n;",
          "186:  n=(tmsize_t)m;",
          "187:  if ((uint64)n!=m)",
          "188:  {",
          "189:   TIFFErrorExt(tif->tif_clientdata,module,\"Integer overflow\");",
          "190:   n=0;",
          "191:  }",
          "192:  return(n);",
          "",
          "[Added Lines]",
          "185:  return _TIFFCastUInt64ToSSize(tif, m, module);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "248: {",
          "249:  static const char module[] = \"TIFFVTileSize\";",
          "250:  uint64 m;",
          "252:  m=TIFFVTileSize64(tif,nrows);",
          "260: }",
          "",
          "[Removed Lines]",
          "251:  tmsize_t n;",
          "253:  n=(tmsize_t)m;",
          "254:  if ((uint64)n!=m)",
          "255:  {",
          "256:   TIFFErrorExt(tif->tif_clientdata,module,\"Integer overflow\");",
          "257:   n=0;",
          "258:  }",
          "259:  return(n);",
          "",
          "[Added Lines]",
          "245:  return _TIFFCastUInt64ToSSize(tif, m, module);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "272: {",
          "273:  static const char module[] = \"TIFFTileSize\";",
          "274:  uint64 m;",
          "276:  m=TIFFTileSize64(tif);",
          "284: }",
          "",
          "[Removed Lines]",
          "275:  tmsize_t n;",
          "277:  n=(tmsize_t)m;",
          "278:  if ((uint64)n!=m)",
          "279:  {",
          "280:   TIFFErrorExt(tif->tif_clientdata,module,\"Integer overflow\");",
          "281:   n=0;",
          "282:  }",
          "283:  return(n);",
          "",
          "[Added Lines]",
          "262:  return _TIFFCastUInt64ToSSize(tif, m, module);",
          "",
          "---------------"
        ],
        "gdal/frmts/gtiff/libtiff/tiffiop.h||gdal/frmts/gtiff/libtiff/tiffiop.h": [
          "File: gdal/frmts/gtiff/libtiff/tiffiop.h -> gdal/frmts/gtiff/libtiff/tiffiop.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "77: #define FALSE 0",
          "78: #endif",
          "80: typedef struct client_info {",
          "81:     struct client_info *next;",
          "82:     void *data;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80: #define TIFF_SIZE_T_MAX ((size_t) ~ ((size_t)0))",
          "81: #define TIFF_TMSIZE_T_MAX (tmsize_t)(TIFF_SIZE_T_MAX >> 1)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "369: extern uint32 _TIFFMultiply32(TIFF*, uint32, uint32, const char*);",
          "370: extern uint64 _TIFFMultiply64(TIFF*, uint64, uint64, const char*);",
          "371: extern void* _TIFFCheckMalloc(TIFF*, tmsize_t, tmsize_t, const char*);",
          "372: extern void* _TIFFCheckRealloc(TIFF*, void*, tmsize_t, tmsize_t, const char*);",
          "374: extern double _TIFFUInt64ToDouble(uint64);",
          "375: extern float _TIFFUInt64ToFloat(uint64);",
          "377: extern tmsize_t",
          "378: _TIFFReadEncodedStripAndAllocBuffer(TIFF* tif, uint32 strip,",
          "379:                                     void **buf, tmsize_t bufsizetoalloc,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "374: extern tmsize_t _TIFFMultiplySSize(TIFF*, tmsize_t, tmsize_t, const char*);",
          "375: extern tmsize_t _TIFFCastUInt64ToSSize(TIFF*, uint64, const char*);",
          "382: extern float _TIFFClampDoubleToFloat(double);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f413fae80be62c9c1b9aaf59d7d97603085850b4",
      "candidate_info": {
        "commit_hash": "f413fae80be62c9c1b9aaf59d7d97603085850b4",
        "repo": "OSGeo/gdal",
        "commit_url": "https://github.com/OSGeo/gdal/commit/f413fae80be62c9c1b9aaf59d7d97603085850b4",
        "files": [
          "gdal/frmts/gtiff/libtiff/tif_aux.c",
          "gdal/frmts/gtiff/libtiff/tif_dir.c",
          "gdal/frmts/gtiff/libtiff/tif_getimage.c",
          "gdal/frmts/gtiff/libtiff/tif_luv.c",
          "gdal/frmts/gtiff/libtiff/tif_ojpeg.c",
          "gdal/frmts/gtiff/libtiff/tif_open.c",
          "gdal/frmts/gtiff/libtiff/tif_pixarlog.c",
          "gdal/frmts/gtiff/libtiff/tif_read.c",
          "gdal/frmts/gtiff/libtiff/tif_strip.c",
          "gdal/frmts/gtiff/libtiff/tif_tile.c",
          "gdal/frmts/gtiff/libtiff/tiffiop.h"
        ],
        "message": "Internal libtiff: backport security related fixes",
        "before_after_code_files": [
          "gdal/frmts/gtiff/libtiff/tif_aux.c||gdal/frmts/gtiff/libtiff/tif_aux.c",
          "gdal/frmts/gtiff/libtiff/tif_dir.c||gdal/frmts/gtiff/libtiff/tif_dir.c",
          "gdal/frmts/gtiff/libtiff/tif_getimage.c||gdal/frmts/gtiff/libtiff/tif_getimage.c",
          "gdal/frmts/gtiff/libtiff/tif_luv.c||gdal/frmts/gtiff/libtiff/tif_luv.c",
          "gdal/frmts/gtiff/libtiff/tif_ojpeg.c||gdal/frmts/gtiff/libtiff/tif_ojpeg.c",
          "gdal/frmts/gtiff/libtiff/tif_open.c||gdal/frmts/gtiff/libtiff/tif_open.c",
          "gdal/frmts/gtiff/libtiff/tif_pixarlog.c||gdal/frmts/gtiff/libtiff/tif_pixarlog.c",
          "gdal/frmts/gtiff/libtiff/tif_read.c||gdal/frmts/gtiff/libtiff/tif_read.c",
          "gdal/frmts/gtiff/libtiff/tif_strip.c||gdal/frmts/gtiff/libtiff/tif_strip.c",
          "gdal/frmts/gtiff/libtiff/tif_tile.c||gdal/frmts/gtiff/libtiff/tif_tile.c",
          "gdal/frmts/gtiff/libtiff/tiffiop.h||gdal/frmts/gtiff/libtiff/tiffiop.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "gdal/frmts/gtiff/libtiff/tif_getimage.c||gdal/frmts/gtiff/libtiff/tif_getimage.c"
          ],
          "candidate": [
            "gdal/frmts/gtiff/libtiff/tif_getimage.c||gdal/frmts/gtiff/libtiff/tif_getimage.c"
          ]
        }
      },
      "candidate_diff": {
        "gdal/frmts/gtiff/libtiff/tif_aux.c||gdal/frmts/gtiff/libtiff/tif_aux.c": [
          "File: gdal/frmts/gtiff/libtiff/tif_aux.c -> gdal/frmts/gtiff/libtiff/tif_aux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:  return bytes;",
          "59: }",
          "61: void*",
          "62: _TIFFCheckRealloc(TIFF* tif, void* buffer,",
          "63:     tmsize_t nmemb, tmsize_t elem_size, const char* what)",
          "64: {",
          "65:  void* cp = NULL;",
          "74:  if (cp == NULL) {",
          "75:   TIFFErrorExt(tif->tif_clientdata, tif->tif_name,",
          "",
          "[Removed Lines]",
          "66:  tmsize_t bytes = nmemb * elem_size;",
          "71:  if (nmemb && elem_size && bytes / elem_size == nmemb)",
          "72:   cp = _TIFFrealloc(buffer, bytes);",
          "",
          "[Added Lines]",
          "61: tmsize_t",
          "62: _TIFFMultiplySSize(TIFF* tif, tmsize_t first, tmsize_t second, const char* where)",
          "63: {",
          "64:     if( first <= 0 || second <= 0 )",
          "65:     {",
          "66:         if( tif != NULL && where != NULL )",
          "67:         {",
          "68:             TIFFErrorExt(tif->tif_clientdata, where,",
          "69:                         \"Invalid argument to _TIFFMultiplySSize() in %s\", where);",
          "70:         }",
          "71:         return 0;",
          "72:     }",
          "74:     if( first > TIFF_TMSIZE_T_MAX / second )",
          "75:     {",
          "76:         if( tif != NULL && where != NULL )",
          "77:         {",
          "78:             TIFFErrorExt(tif->tif_clientdata, where,",
          "79:                         \"Integer overflow in %s\", where);",
          "80:         }",
          "81:         return 0;",
          "82:     }",
          "83:     return first * second;",
          "84: }",
          "86: tmsize_t _TIFFCastUInt64ToSSize(TIFF* tif, uint64 val, const char* module)",
          "87: {",
          "88:     if( val > (uint64)TIFF_TMSIZE_T_MAX )",
          "89:     {",
          "90:         if( tif != NULL && module != NULL )",
          "91:         {",
          "92:             TIFFErrorExt(tif->tif_clientdata,module,\"Integer overflow\");",
          "93:         }",
          "94:         return 0;",
          "95:     }",
          "96:     return (tmsize_t)val;",
          "97: }",
          "104:         tmsize_t count = _TIFFMultiplySSize(tif, nmemb, elem_size, NULL);",
          "108:  if (count != 0)",
          "109:  {",
          "110:   cp = _TIFFrealloc(buffer, count);",
          "111:  }",
          "",
          "---------------"
        ],
        "gdal/frmts/gtiff/libtiff/tif_dir.c||gdal/frmts/gtiff/libtiff/tif_dir.c": [
          "File: gdal/frmts/gtiff/libtiff/tif_dir.c -> gdal/frmts/gtiff/libtiff/tif_dir.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:  }",
          "48:  if (vp) {",
          "52:   if (*vpp)",
          "53:    _TIFFmemcpy(*vpp, vp, bytes);",
          "",
          "[Removed Lines]",
          "49:   tmsize_t bytes = (tmsize_t)(nmemb * elem_size);",
          "50:   if (elem_size && bytes / elem_size == nmemb)",
          "",
          "[Added Lines]",
          "49:   tmsize_t bytes = _TIFFMultiplySSize(NULL, nmemb, elem_size, NULL);",
          "50:   if (bytes)",
          "",
          "---------------"
        ],
        "gdal/frmts/gtiff/libtiff/tif_getimage.c||gdal/frmts/gtiff/libtiff/tif_getimage.c": [
          "File: gdal/frmts/gtiff/libtiff/tif_getimage.c -> gdal/frmts/gtiff/libtiff/tif_getimage.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "755:  uint32 leftmost_tw;",
          "757:  tilesize = TIFFTileSize(tif);",
          "759:  if (bufsize == 0) {",
          "761:   return (0);",
          "762:  }",
          "",
          "[Removed Lines]",
          "758:  bufsize = TIFFSafeMultiply(tmsize_t,alpha?4:3,tilesize);",
          "760:   TIFFErrorExt(tif->tif_clientdata, TIFFFileName(tif), \"Integer overflow in %s\", \"gtTileSeparate\");",
          "",
          "[Added Lines]",
          "758:  bufsize = _TIFFMultiplySSize(tif, alpha?4:3,tilesize, \"gtTileSeparate\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "950:  fromskew = (w < imagewidth ? imagewidth - w : 0);",
          "951:  for (row = 0; row < h; row += nrow)",
          "952:  {",
          "953:   rowstoread = rowsperstrip - (row + img->row_offset) % rowsperstrip;",
          "954:   nrow = (row + rowstoread > h ? h - row : rowstoread);",
          "955:   nrowsub = nrow;",
          "956:   if ((nrowsub%subsamplingver)!=0)",
          "957:    nrowsub+=subsamplingver-nrowsub%subsamplingver;",
          "958:   if (_TIFFReadEncodedStripAndAllocBuffer(tif,",
          "959:       TIFFComputeStrip(tif,row+img->row_offset, 0),",
          "960:       (void**)(&buf),",
          "961:                     maxstripsize,",
          "963:       && (buf == NULL || img->stoponerr))",
          "964:   {",
          "965:    ret = 0;",
          "",
          "[Removed Lines]",
          "962:       ((row + img->row_offset)%rowsperstrip + nrowsub) * scanline)==(tmsize_t)(-1)",
          "",
          "[Added Lines]",
          "952:   uint32 temp;",
          "958:   temp = (row + img->row_offset)%rowsperstrip + nrowsub;",
          "959:   if( scanline > 0 && temp > (size_t)(TIFF_TMSIZE_T_MAX / scanline) )",
          "960:   {",
          "961:    TIFFErrorExt(tif->tif_clientdata, TIFFFileName(tif), \"Integer overflow in gtStripContig\");",
          "962:    return 0;",
          "963:   }",
          "968:       temp * scanline)==(tmsize_t)(-1)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1019:         uint16 colorchannels;",
          "1021:  stripsize = TIFFStripSize(tif);",
          "1023:  if (bufsize == 0) {",
          "1025:   return (0);",
          "1026:  }",
          "",
          "[Removed Lines]",
          "1022:  bufsize = TIFFSafeMultiply(tmsize_t,alpha?4:3,stripsize);",
          "1024:   TIFFErrorExt(tif->tif_clientdata, TIFFFileName(tif), \"Integer overflow in %s\", \"gtStripSeparate\");",
          "",
          "[Added Lines]",
          "1028:  bufsize = _TIFFMultiplySSize(tif,alpha?4:3,stripsize, \"gtStripSeparate\");",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1053:  fromskew = (w < imagewidth ? imagewidth - w : 0);",
          "1054:  for (row = 0; row < h; row += nrow)",
          "1055:  {",
          "1056:   rowstoread = rowsperstrip - (row + img->row_offset) % rowsperstrip;",
          "1057:   nrow = (row + rowstoread > h ? h - row : rowstoread);",
          "1058:   offset_row = row + img->row_offset;",
          "1059:                 if( buf == NULL )",
          "1060:                 {",
          "1061:                     if (_TIFFReadEncodedStripAndAllocBuffer(",
          "1062:                             tif, TIFFComputeStrip(tif, offset_row, 0),",
          "1063:                             (void**) &buf, bufsize,",
          "1065:                         && (buf == NULL || img->stoponerr))",
          "1066:                     {",
          "1067:                             ret = 0;",
          "",
          "[Removed Lines]",
          "1064:                             ((row + img->row_offset)%rowsperstrip + nrow) * scanline)==(tmsize_t)(-1)",
          "",
          "[Added Lines]",
          "1061:                 uint32 temp;",
          "1065:                 temp = (row + img->row_offset)%rowsperstrip + nrow;",
          "1066:                 if( scanline > 0 && temp > (size_t)(TIFF_TMSIZE_T_MAX / scanline) )",
          "1067:                 {",
          "1068:                         TIFFErrorExt(tif->tif_clientdata, TIFFFileName(tif), \"Integer overflow in gtStripSeparate\");",
          "1069:                         return 0;",
          "1070:                 }",
          "1076:                             temp * scanline)==(tmsize_t)(-1)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1081:                     }",
          "1082:                 }",
          "1083:   else if (TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, 0),",
          "1085:       && img->stoponerr)",
          "1086:   {",
          "1087:    ret = 0;",
          "",
          "[Removed Lines]",
          "1084:       p0, ((row + img->row_offset)%rowsperstrip + nrow) * scanline)==(tmsize_t)(-1)",
          "",
          "[Added Lines]",
          "1096:       p0, temp * scanline)==(tmsize_t)(-1)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1089:   }",
          "1090:   if (colorchannels > 1",
          "1091:                     && TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, 1),",
          "1093:       && img->stoponerr)",
          "1094:   {",
          "1095:    ret = 0;",
          "",
          "[Removed Lines]",
          "1092:                                             p1, ((row + img->row_offset)%rowsperstrip + nrow) * scanline) == (tmsize_t)(-1)",
          "",
          "[Added Lines]",
          "1104:                                             p1, temp * scanline) == (tmsize_t)(-1)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1097:   }",
          "1098:   if (colorchannels > 1",
          "1099:                     && TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, 2),",
          "1101:       && img->stoponerr)",
          "1102:   {",
          "1103:    ret = 0;",
          "",
          "[Removed Lines]",
          "1100:                                             p2, ((row + img->row_offset)%rowsperstrip + nrow) * scanline) == (tmsize_t)(-1)",
          "",
          "[Added Lines]",
          "1112:                                             p2, temp * scanline) == (tmsize_t)(-1)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1106:   if (alpha)",
          "1107:   {",
          "1108:    if (TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, colorchannels),",
          "1110:        && img->stoponerr)",
          "1111:    {",
          "1112:     ret = 0;",
          "",
          "[Removed Lines]",
          "1109:        pa, ((row + img->row_offset)%rowsperstrip + nrow) * scanline)==(tmsize_t)(-1)",
          "",
          "[Added Lines]",
          "1121:        pa, temp * scanline)==(tmsize_t)(-1)",
          "",
          "---------------"
        ],
        "gdal/frmts/gtiff/libtiff/tif_luv.c||gdal/frmts/gtiff/libtiff/tif_luv.c": [
          "File: gdal/frmts/gtiff/libtiff/tif_luv.c -> gdal/frmts/gtiff/libtiff/tif_luv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1269:  return (SGILOGDATAFMT_UNKNOWN);",
          "1270: }",
          "1276: static tmsize_t",
          "1277: multiply_ms(tmsize_t m1, tmsize_t m2)",
          "1278: {",
          "1282: }",
          "1284: static int",
          "",
          "[Removed Lines]",
          "1273: #define TIFF_SIZE_T_MAX ((size_t) ~ ((size_t)0))",
          "1274: #define TIFF_TMSIZE_T_MAX (tmsize_t)(TIFF_SIZE_T_MAX >> 1)",
          "1279:         if( m1 == 0 || m2 > TIFF_TMSIZE_T_MAX / m1 )",
          "1280:             return 0;",
          "1281:         return m1 * m2;",
          "",
          "[Added Lines]",
          "1275:         return _TIFFMultiplySSize(NULL, m1, m2, NULL);",
          "",
          "---------------"
        ],
        "gdal/frmts/gtiff/libtiff/tif_ojpeg.c||gdal/frmts/gtiff/libtiff/tif_ojpeg.c": [
          "File: gdal/frmts/gtiff/libtiff/tif_ojpeg.c -> gdal/frmts/gtiff/libtiff/tif_ojpeg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "831:  {",
          "832:   if (sp->subsampling_convert_state==0)",
          "833:   {",
          "834:    if (jpeg_read_raw_data_encap(sp,&(sp->libjpeg_jpeg_decompress_struct),sp->subsampling_convert_ycbcrimage,sp->subsampling_ver*8)==0)",
          "835:     return(0);",
          "836:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "834:    const jpeg_decompress_struct* cinfo = &sp->libjpeg_jpeg_decompress_struct;",
          "835:    int width = 0;",
          "836:    int last_col_width = 0;",
          "837:    int jpeg_bytes;",
          "838:    int expected_bytes;",
          "839:    int i;",
          "840:    if (cinfo->MCUs_per_row == 0)",
          "841:     return 0;",
          "842:    for (i = 0; i < cinfo->comps_in_scan; ++i)",
          "843:    {",
          "844:     const jpeg_component_info* info = cinfo->cur_comp_info[i];",
          "845: #if JPEG_LIB_VERSION >= 70",
          "846:     width += info->MCU_width * info->DCT_h_scaled_size;",
          "847:     last_col_width += info->last_col_width * info->DCT_h_scaled_size;",
          "848: #else",
          "849:     width += info->MCU_width * info->DCT_scaled_size;",
          "850:     last_col_width += info->last_col_width * info->DCT_scaled_size;",
          "851: #endif",
          "852:    }",
          "853:    jpeg_bytes = (cinfo->MCUs_per_row - 1) * width + last_col_width;",
          "854:    expected_bytes = sp->subsampling_convert_clinelenout * sp->subsampling_ver * sp->subsampling_hor;",
          "855:    if (jpeg_bytes != expected_bytes)",
          "856:    {",
          "857:     TIFFErrorExt(tif->tif_clientdata,module,\"Inconsistent number of MCU in codestream\");",
          "858:     return(0);",
          "859:    }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1082:  }",
          "1083:  if (sp->strile_length<sp->image_length)",
          "1084:  {",
          "1085:   if (sp->strile_length%(sp->subsampling_ver*8)!=0)",
          "1086:   {",
          "1087:    TIFFErrorExt(tif->tif_clientdata,module,\"Incompatible vertical subsampling and image strip/tile length\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1111:   if (((sp->subsampling_hor!=1) && (sp->subsampling_hor!=2) && (sp->subsampling_hor!=4)) ||",
          "1112:       ((sp->subsampling_ver!=1) && (sp->subsampling_ver!=2) && (sp->subsampling_ver!=4)))",
          "1113:   {",
          "1114:    TIFFErrorExt(tif->tif_clientdata,module,\"Invalid subsampling values\");",
          "1115:    return(0);",
          "1116:   }",
          "",
          "---------------"
        ],
        "gdal/frmts/gtiff/libtiff/tif_open.c||gdal/frmts/gtiff/libtiff/tif_open.c": [
          "File: gdal/frmts/gtiff/libtiff/tif_open.c -> gdal/frmts/gtiff/libtiff/tif_open.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "131:  if (!readproc || !writeproc || !seekproc || !closeproc || !sizeproc) {",
          "132:   TIFFErrorExt(clientdata, module,",
          "133:       \"One of the client procedures is NULL pointer.\");",
          "134:   goto bad2;",
          "135:  }",
          "136:  tif->tif_readproc = readproc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "134:   _TIFFfree(tif);",
          "",
          "---------------"
        ],
        "gdal/frmts/gtiff/libtiff/tif_pixarlog.c||gdal/frmts/gtiff/libtiff/tif_pixarlog.c": [
          "File: gdal/frmts/gtiff/libtiff/tif_pixarlog.c -> gdal/frmts/gtiff/libtiff/tif_pixarlog.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "634:  return guess;",
          "635: }",
          "640: static tmsize_t",
          "641: multiply_ms(tmsize_t m1, tmsize_t m2)",
          "642: {",
          "647: }",
          "649: static tmsize_t",
          "",
          "[Removed Lines]",
          "637: #define TIFF_SIZE_T_MAX ((size_t) ~ ((size_t)0))",
          "638: #define TIFF_TMSIZE_T_MAX (tmsize_t)(TIFF_SIZE_T_MAX >> 1)",
          "643:         assert(m1 >= 0 && m2 >= 0);",
          "644:         if( m1 == 0 || m2 > TIFF_TMSIZE_T_MAX / m1 )",
          "645:             return 0;",
          "646:         return m1 * m2;",
          "",
          "[Added Lines]",
          "640:         return _TIFFMultiplySSize(NULL, m1, m2, NULL);",
          "",
          "---------------"
        ],
        "gdal/frmts/gtiff/libtiff/tif_read.c||gdal/frmts/gtiff/libtiff/tif_read.c": [
          "File: gdal/frmts/gtiff/libtiff/tif_read.c -> gdal/frmts/gtiff/libtiff/tif_read.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #include \"tiffiop.h\"",
          "30: #include <stdio.h>",
          "35: int TIFFFillStrip(TIFF* tif, uint32 strip);",
          "36: int TIFFFillTile(TIFF* tif, uint32 tile);",
          "37: static int TIFFStartStrip(TIFF* tif, uint32 strip);",
          "",
          "[Removed Lines]",
          "32: #define TIFF_SIZE_T_MAX ((size_t) ~ ((size_t)0))",
          "33: #define TIFF_TMSIZE_T_MAX (tmsize_t)(TIFF_SIZE_T_MAX >> 1)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49: #define THRESHOLD_MULTIPLIER 10",
          "50: #define MAX_THRESHOLD (THRESHOLD_MULTIPLIER * THRESHOLD_MULTIPLIER * THRESHOLD_MULTIPLIER * INITIAL_THRESHOLD)",
          "54: static int TIFFReadAndRealloc( TIFF* tif, tmsize_t size,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49: #define TIFF_INT64_MAX ((((int64)0x7FFFFFFF) << 32) | 0xFFFFFFFF)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "739:   return ((tmsize_t)(-1));",
          "740:  }",
          "741:  bytecount = td->td_stripbytecount[strip];",
          "759:   return ((tmsize_t)(-1));",
          "760:  }",
          "761:  if (size != (tmsize_t)(-1) && size < bytecountm)",
          "",
          "[Removed Lines]",
          "742:  if ((int64)bytecount <= 0) {",
          "743: #if defined(__WIN32__) && (defined(_MSC_VER) || defined(__MINGW32__))",
          "744:   TIFFErrorExt(tif->tif_clientdata, module,",
          "745:         \"%I64u: Invalid strip byte count, strip %lu\",",
          "746:         (unsigned __int64) bytecount,",
          "747:         (unsigned long) strip);",
          "748: #else",
          "749:   TIFFErrorExt(tif->tif_clientdata, module,",
          "750:         \"%llu: Invalid strip byte count, strip %lu\",",
          "751:         (unsigned long long) bytecount,",
          "752:         (unsigned long) strip);",
          "753: #endif",
          "754:   return ((tmsize_t)(-1));",
          "755:  }",
          "756:  bytecountm = (tmsize_t)bytecount;",
          "757:  if ((uint64)bytecountm!=bytecount) {",
          "758:   TIFFErrorExt(tif->tif_clientdata, module, \"Integer overflow\");",
          "",
          "[Added Lines]",
          "741:         bytecountm = _TIFFCastUInt64ToSSize(tif, bytecount, module);",
          "742:  if (bytecountm == 0) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "779:  if ((tif->tif_flags&TIFF_NOREADRAW)==0)",
          "780:  {",
          "781:   uint64 bytecount = td->td_stripbytecount[strip];",
          "783: #if defined(__WIN32__) && (defined(_MSC_VER) || defined(__MINGW32__))",
          "784:    TIFFErrorExt(tif->tif_clientdata, module,",
          "785:     \"Invalid strip byte count %I64u, strip %lu\",",
          "",
          "[Removed Lines]",
          "782:   if ((int64)bytecount <= 0) {",
          "",
          "[Added Lines]",
          "766:                 if( bytecount == 0 || bytecount > (uint64)TIFF_INT64_MAX ) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "806:        (bytecount - 4096) / 10 > (uint64)stripsize  )",
          "807:    {",
          "808:     uint64 newbytecount = (uint64)stripsize * 10 + 4096;",
          "810:     {",
          "811: #if defined(__WIN32__) && (defined(_MSC_VER) || defined(__MINGW32__))",
          "812:      TIFFWarningExt(tif->tif_clientdata, module,",
          "",
          "[Removed Lines]",
          "809:     if( (int64)newbytecount >= 0 )",
          "",
          "[Added Lines]",
          "793:     if( newbytecount == 0 || newbytecount > (uint64)TIFF_INT64_MAX )",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1201:  bytecount64 = td->td_stripbytecount[tile];",
          "1202:  if (size != (tmsize_t)(-1) && (uint64)size < bytecount64)",
          "1203:   bytecount64 = (uint64)size;",
          "1208:   return ((tmsize_t)(-1));",
          "1209:  }",
          "1210:  return (TIFFReadRawTile1(tif, tile, buf, bytecountm, module));",
          "",
          "[Removed Lines]",
          "1204:  bytecountm = (tmsize_t)bytecount64;",
          "1205:  if ((uint64)bytecountm!=bytecount64)",
          "1206:  {",
          "1207:   TIFFErrorExt(tif->tif_clientdata,module,\"Integer overflow\");",
          "",
          "[Added Lines]",
          "1188:  bytecountm = _TIFFCastUInt64ToSSize(tif, bytecount64, module);",
          "1189:         if( bytecountm == 0 ) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1226:  if ((tif->tif_flags&TIFF_NOREADRAW)==0)",
          "1227:  {",
          "1228:   uint64 bytecount = td->td_stripbytecount[tile];",
          "1230: #if defined(__WIN32__) && (defined(_MSC_VER) || defined(__MINGW32__))",
          "1231:    TIFFErrorExt(tif->tif_clientdata, module,",
          "1232:     \"%I64u: Invalid tile byte count, tile %lu\",",
          "",
          "[Removed Lines]",
          "1229:   if ((int64)bytecount <= 0) {",
          "",
          "[Added Lines]",
          "1211:   if( bytecount == 0 || bytecount > (uint64)TIFF_INT64_MAX ) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1253:        (bytecount - 4096) / 10 > (uint64)stripsize  )",
          "1254:    {",
          "1255:     uint64 newbytecount = (uint64)stripsize * 10 + 4096;",
          "1257:     {",
          "1258: #if defined(__WIN32__) && (defined(_MSC_VER) || defined(__MINGW32__))",
          "1259:      TIFFWarningExt(tif->tif_clientdata, module,",
          "",
          "[Removed Lines]",
          "1256:     if( (int64)newbytecount >= 0 )",
          "",
          "[Added Lines]",
          "1238:     if( newbytecount == 0 || newbytecount > (uint64)TIFF_INT64_MAX )",
          "",
          "---------------"
        ],
        "gdal/frmts/gtiff/libtiff/tif_strip.c||gdal/frmts/gtiff/libtiff/tif_strip.c": [
          "File: gdal/frmts/gtiff/libtiff/tif_strip.c -> gdal/frmts/gtiff/libtiff/tif_strip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "129: {",
          "130:  static const char module[] = \"TIFFVStripSize\";",
          "131:  uint64 m;",
          "133:  m=TIFFVStripSize64(tif,nrows);",
          "141: }",
          "",
          "[Removed Lines]",
          "132:  tmsize_t n;",
          "134:  n=(tmsize_t)m;",
          "135:  if ((uint64)n!=m)",
          "136:  {",
          "137:   TIFFErrorExt(tif->tif_clientdata,module,\"Integer overflow\");",
          "138:   n=0;",
          "139:  }",
          "140:  return(n);",
          "",
          "[Added Lines]",
          "133:         return _TIFFCastUInt64ToSSize(tif, m, module);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "211: {",
          "212:  static const char module[] = \"TIFFStripSize\";",
          "213:  uint64 m;",
          "215:  m=TIFFStripSize64(tif);",
          "223: }",
          "",
          "[Removed Lines]",
          "214:  tmsize_t n;",
          "216:  n=(tmsize_t)m;",
          "217:  if ((uint64)n!=m)",
          "218:  {",
          "219:   TIFFErrorExt(tif->tif_clientdata,module,\"Integer overflow\");",
          "220:   n=0;",
          "221:  }",
          "222:  return(n);",
          "",
          "[Added Lines]",
          "208:  return _TIFFCastUInt64ToSSize(tif, m, module);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "330: {",
          "331:  static const char module[] = \"TIFFScanlineSize\";",
          "332:  uint64 m;",
          "334:  m=TIFFScanlineSize64(tif);",
          "341: }",
          "",
          "[Removed Lines]",
          "333:  tmsize_t n;",
          "335:  n=(tmsize_t)m;",
          "336:  if ((uint64)n!=m) {",
          "337:   TIFFErrorExt(tif->tif_clientdata,module,\"Integer arithmetic overflow\");",
          "338:   n=0;",
          "339:  }",
          "340:  return(n);",
          "",
          "[Added Lines]",
          "320:  return _TIFFCastUInt64ToSSize(tif, m, module);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "366: {",
          "367:  static const char module[] = \"TIFFRasterScanlineSize\";",
          "368:  uint64 m;",
          "370:  m=TIFFRasterScanlineSize64(tif);",
          "378: }",
          "",
          "[Removed Lines]",
          "369:  tmsize_t n;",
          "371:  n=(tmsize_t)m;",
          "372:  if ((uint64)n!=m)",
          "373:  {",
          "374:   TIFFErrorExt(tif->tif_clientdata,module,\"Integer arithmetic overflow\");",
          "375:   n=0;",
          "376:  }",
          "377:  return(n);",
          "",
          "[Added Lines]",
          "350:  return _TIFFCastUInt64ToSSize(tif, m, module);",
          "",
          "---------------"
        ],
        "gdal/frmts/gtiff/libtiff/tif_tile.c||gdal/frmts/gtiff/libtiff/tif_tile.c": [
          "File: gdal/frmts/gtiff/libtiff/tif_tile.c -> gdal/frmts/gtiff/libtiff/tif_tile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "181: {",
          "182:  static const char module[] = \"TIFFTileRowSize\";",
          "183:  uint64 m;",
          "185:  m=TIFFTileRowSize64(tif);",
          "193: }",
          "",
          "[Removed Lines]",
          "184:  tmsize_t n;",
          "186:  n=(tmsize_t)m;",
          "187:  if ((uint64)n!=m)",
          "188:  {",
          "189:   TIFFErrorExt(tif->tif_clientdata,module,\"Integer overflow\");",
          "190:   n=0;",
          "191:  }",
          "192:  return(n);",
          "",
          "[Added Lines]",
          "185:  return _TIFFCastUInt64ToSSize(tif, m, module);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "248: {",
          "249:  static const char module[] = \"TIFFVTileSize\";",
          "250:  uint64 m;",
          "252:  m=TIFFVTileSize64(tif,nrows);",
          "260: }",
          "",
          "[Removed Lines]",
          "251:  tmsize_t n;",
          "253:  n=(tmsize_t)m;",
          "254:  if ((uint64)n!=m)",
          "255:  {",
          "256:   TIFFErrorExt(tif->tif_clientdata,module,\"Integer overflow\");",
          "257:   n=0;",
          "258:  }",
          "259:  return(n);",
          "",
          "[Added Lines]",
          "245:  return _TIFFCastUInt64ToSSize(tif, m, module);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "272: {",
          "273:  static const char module[] = \"TIFFTileSize\";",
          "274:  uint64 m;",
          "276:  m=TIFFTileSize64(tif);",
          "284: }",
          "",
          "[Removed Lines]",
          "275:  tmsize_t n;",
          "277:  n=(tmsize_t)m;",
          "278:  if ((uint64)n!=m)",
          "279:  {",
          "280:   TIFFErrorExt(tif->tif_clientdata,module,\"Integer overflow\");",
          "281:   n=0;",
          "282:  }",
          "283:  return(n);",
          "",
          "[Added Lines]",
          "262:  return _TIFFCastUInt64ToSSize(tif, m, module);",
          "",
          "---------------"
        ],
        "gdal/frmts/gtiff/libtiff/tiffiop.h||gdal/frmts/gtiff/libtiff/tiffiop.h": [
          "File: gdal/frmts/gtiff/libtiff/tiffiop.h -> gdal/frmts/gtiff/libtiff/tiffiop.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "77: #define FALSE 0",
          "78: #endif",
          "80: typedef struct client_info {",
          "81:     struct client_info *next;",
          "82:     void *data;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80: #define TIFF_SIZE_T_MAX ((size_t) ~ ((size_t)0))",
          "81: #define TIFF_TMSIZE_T_MAX (tmsize_t)(TIFF_SIZE_T_MAX >> 1)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "369: extern uint32 _TIFFMultiply32(TIFF*, uint32, uint32, const char*);",
          "370: extern uint64 _TIFFMultiply64(TIFF*, uint64, uint64, const char*);",
          "371: extern void* _TIFFCheckMalloc(TIFF*, tmsize_t, tmsize_t, const char*);",
          "372: extern void* _TIFFCheckRealloc(TIFF*, void*, tmsize_t, tmsize_t, const char*);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "374: extern tmsize_t _TIFFMultiplySSize(TIFF*, tmsize_t, tmsize_t, const char*);",
          "375: extern tmsize_t _TIFFCastUInt64ToSSize(TIFF*, uint64, const char*);",
          "",
          "---------------"
        ]
      }
    }
  ]
}