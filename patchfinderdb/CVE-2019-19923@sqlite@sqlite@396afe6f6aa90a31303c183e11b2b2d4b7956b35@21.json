{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cd80dc366795c347f2f65a34208538ebc66a2cb0",
      "candidate_info": {
        "commit_hash": "cd80dc366795c347f2f65a34208538ebc66a2cb0",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/cd80dc366795c347f2f65a34208538ebc66a2cb0",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a null-pointer dereference that could occur in fts5 with a corrupt database.\n\nFossilOrigin-Name: b0a49d5e6df116bb5eacb60a0bb0f482760aec38bd417d4250d9e57d43bdbb13",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "892:       if( rc==SQLITE_OK ){",
          "893:         pLvl->nSeg = nTotal;",
          "894:         for(iSeg=0; iSeg<nTotal; iSeg++){",
          "895:           if( i>=nData ){",
          "896:             rc = FTS5_CORRUPT;",
          "897:             break;",
          "898:           }",
          "902:         }",
          "903:       }",
          "904:     }",
          "",
          "[Removed Lines]",
          "899:           i += fts5GetVarint32(&pData[i], pLvl->aSeg[iSeg].iSegid);",
          "900:           i += fts5GetVarint32(&pData[i], pLvl->aSeg[iSeg].pgnoFirst);",
          "901:           i += fts5GetVarint32(&pData[i], pLvl->aSeg[iSeg].pgnoLast);",
          "",
          "[Added Lines]",
          "895:           Fts5StructureSegment *pSeg = &pLvl->aSeg[iSeg];",
          "900:           i += fts5GetVarint32(&pData[i], pSeg->iSegid);",
          "901:           i += fts5GetVarint32(&pData[i], pSeg->pgnoFirst);",
          "902:           i += fts5GetVarint32(&pData[i], pSeg->pgnoLast);",
          "903:           if( pSeg->pgnoLast<pSeg->pgnoFirst ){",
          "904:             rc = FTS5_CORRUPT;",
          "905:             break;",
          "906:           }",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:   }",
          "36: }",
          "40: # Create a simple FTS5 table containing 100 documents. Each document",
          "41: # contains 10 terms, each of which start with the character \"x\".",
          "",
          "[Removed Lines]",
          "38: if 1 {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "380:   }",
          "381: } {}",
          "385: #------------------------------------------------------------------------",
          "386: # Corruption within the structure record.",
          "387: #",
          "",
          "[Removed Lines]",
          "383: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "963:   INSERT INTO t1(t1) VALUES('integrity-check');",
          "964: } {1 {database disk image is malformed}}",
          "966: sqlite3_fts5_may_be_corrupt 0",
          "967: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "963: #---------------------------------------------------------------------------",
          "964: #",
          "965: reset_db",
          "966: do_test 16.0 {",
          "967:   sqlite3 db {}",
          "968:   db deserialize [decode_hexdb {",
          "969: | size 28672 pagesize 4096 filename c17.db",
          "970: | page 1 offset 0",
          "971: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "972: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 07   .....@  ........",
          "973: |     32: 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00 00   ................",
          "974: |     48: 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00   ................",
          "975: |     96: 00 00 00 00 0d 00 00 00 07 0d d2 00 0f c4 0f 6d   ...............m",
          "976: |    112: 0f 02 0e ab 0e 4e 0d f6 0d d2 00 00 00 00 00 00   .....N..........",
          "977: |   3536: 00 00 22 07 06 17 11 11 01 31 74 61 62 6c 65 74   .........1tablet",
          "978: |   3552: 32 74 32 07 43 52 45 41 54 45 20 54 41 42 4c 45   2t2.CREATE TABLE",
          "979: |   3568: 20 74 32 28 78 29 56 06 06 17 1f 1f 01 7d 74 61    t2(x)V.......ta",
          "980: |   3584: 62 6c 65 74 31 5f 63 6f 6e 66 69 67 74 31 5f 63   blet1_configt1_c",
          "981: |   3600: 6f 6e 66 69 67 06 43 52 45 41 54 45 20 54 41 42   onfig.CREATE TAB",
          "982: |   3616: 4c 45 20 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b   LE 't1_config'(k",
          "983: |   3632: 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29    PRIMARY KEY, v)",
          "984: |   3648: 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5b 05    WITHOUT ROWID[.",
          "985: |   3664: 07 17 21 21 01 81 01 74 61 62 6c 65 74 31 5f 64   ..!!...tablet1_d",
          "986: |   3680: 6f 63 73 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65   ocsizet1_docsize",
          "987: |   3696: 05 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74   .CREATE TABLE 't",
          "988: |   3712: 31 5f 64 6f 63 73 69 7a 65 27 28 69 64 20 49 4e   1_docsize'(id IN",
          "989: |   3728: 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45   TEGER PRIMARY KE",
          "990: |   3744: 59 2c 20 73 7a 20 42 4c 4f 42 29 55 04 06 17 21   Y, sz BLOB)U...!",
          "991: |   3760: 21 01 77 74 61 62 6c 65 74 31 5f 63 6f 6e 74 65   !.wtablet1_conte",
          "992: |   3776: 6e 74 74 31 5f 63 6f 6e 74 65 6e 74 04 43 52 45   ntt1_content.CRE",
          "993: |   3792: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63 6f   ATE TABLE 't1_co",
          "994: |   3808: 6e 74 65 6e 74 27 28 69 64 20 49 4e 54 45 47 45   ntent'(id INTEGE",
          "995: |   3824: 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 63   R PRIMARY KEY, c",
          "996: |   3840: 30 29 69 03 07 17 19 19 01 81 2d 74 61 62 6c 65   0)i.......-table",
          "997: |   3856: 74 31 5f 69 64 78 74 31 5f 69 64 78 03 43 52 45   t1_idxt1_idx.CRE",
          "998: |   3872: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 69 64   ATE TABLE 't1_id",
          "999: |   3888: 78 27 28 73 65 67 69 64 2c 20 74 65 72 6d 2c 20   x'(segid, term,",
          "1000: |   3904: 70 67 6e 6f 2c 20 50 52 49 4d 41 52 59 20 4b 45   pgno, PRIMARY KE",
          "1001: |   3920: 59 28 73 65 67 69 64 2c 20 74 65 72 6d 29 29 20   Y(segid, term))",
          "1002: |   3936: 57 49 54 48 4f 55 54 20 52 4f 57 49 44 55 02 07   WITHOUT ROWIDU..",
          "1003: |   3952: 17 1b 1b 01 81 01 74 61 62 6c 65 74 31 5f 64 61   ......tablet1_da",
          "1004: |   3968: 74 61 74 31 5f 64 61 74 61 02 43 52 45 41 54 45   tat1_data.CREATE",
          "1005: |   3984: 20 54 41 42 4c 45 20 27 74 31 5f 64 61 74 61 27    TABLE 't1_data'",
          "1006: |   4000: 28 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   (id INTEGER PRIM",
          "1007: |   4016: 41 52 59 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42   ARY KEY, block B",
          "1008: |   4032: 4c 4f 42 29 3a 01 06 17 11 11 08 63 74 61 62 6c   LOB):......ctabl",
          "1009: |   4048: 65 74 31 74 31 43 52 45 41 54 45 20 56 49 52 54   et1t1CREATE VIRT",
          "1010: |   4064: 55 41 4c 20 54 41 42 4c 45 20 74 31 20 55 53 49   UAL TABLE t1 USI",
          "1011: |   4080: 4e 47 20 66 74 73 35 28 63 6f 6e 74 65 6e 74 29   NG fts5(content)",
          "1012: | page 2 offset 4096",
          "1013: |      0: 0d 00 00 00 03 0f bd 00 0f e8 0f ef 0f bd 00 00   ................",
          "1014: |   4016: 00 00 00 00 00 00 00 00 00 00 00 00 00 24 84 80   .............$..",
          "1015: |   4032: 80 80 80 01 03 00 4e 00 00 00 1e 06 30 61 62 61   ......N.....0aba",
          "1016: |   4048: 63 6b 01 02 02 04 02 66 74 00 02 22 04 04 6e 64   ck.....ft.....nd",
          "1017: |   4064: 6f 6e 03 02 02 04 0a 07 05 01 03 00 10 03 03 0f   on..............",
          "1018: |   4080: 0a 03 00 24 00 00 00 00 01 01 01 00 01 01 41 01   ...$..........A.",
          "1019: | page 3 offset 8192",
          "1020: |      0: 0a 00 00 00 01 0f fa 00 0f fa 00 00 00 00 00 00   ................",
          "1021: |   4080: 00 00 00 00 00 00 00 00 00 00 05 04 09 0c 01 02   ................",
          "1022: | page 4 offset 12288",
          "1023: |      0: 0d 00 00 00 03 0f e0 00 0f f6 0f ec 0f e0 00 00   ................",
          "1024: |   4064: 0a 03 03 00 1b 61 62 61 6e 64 6f 6e 08 02 03 00   .....abandon....",
          "1025: |   4080: 17 61 62 61 66 74 08 01 03 00 17 61 62 61 63 6b   .abaft.....aback",
          "1026: | page 5 offset 16384",
          "1027: |      0: 0d 00 00 00 03 0f ee 00 0f fa 0f f4 0f ee 00 00   ................",
          "1028: |   4064: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 03   ................",
          "1029: |   4080: 03 00 0e 01 04 02 03 00 0e 01 04 01 03 00 0e 01   ................",
          "1030: | page 6 offset 20480",
          "1031: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "1032: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "1033: | page 7 offset 24576",
          "1034: |      0: 0d 00 00 00 03 0f d6 00 0f f4 0f e1 0f d6 00 00   ................",
          "1035: |   4048: 00 00 00 00 00 00 09 03 02 1b 72 65 62 75 69 6c   ..........rebuil",
          "1036: |   4064: 64 11 02 02 2b 69 6e 74 65 67 72 69 74 79 2d 63   d...+integrity-c",
          "1037: |   4080: 68 65 63 6b 0a 01 02 1d 6f 70 74 69 6d 69 7a 65   heck....optimize",
          "1038: | end c17.db",
          "1039: }]} {}",
          "1041: do_catchsql_test 16.1 {",
          "1042: INSERT INTO t1(t1) VALUES('integrity-check');",
          "1043: } {1 {vtable constructor failed: t1}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 202dd033019dd27428e3cc5f6e164c95b37efe39e2753515112b201ddefca67b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0de0ab82074f1898fe1b7374683aeea6afae0675",
      "candidate_info": {
        "commit_hash": "0de0ab82074f1898fe1b7374683aeea6afae0675",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/0de0ab82074f1898fe1b7374683aeea6afae0675",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/wapptest.tcl"
        ],
        "message": "Fix a case in wapptest.tcl where a failed test might report 0 errors.\n\nFossilOrigin-Name: 2be1ed70df605663822d1afdde757f426ccf2ee38add8dc6b6bb4fc4d90a31dc",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/wapptest.tcl||test/wapptest.tcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 713caa382cf7ddef872e510a76a5fca40be1a8d8876ce2f91b632bb0810a6630",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/wapptest.tcl||test/wapptest.tcl": [
          "File: test/wapptest.tcl -> test/wapptest.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "222:       sqlite3 sqlite3.exe",
          "223:       test.log test-out.txt",
          "224:       core",
          "225:     }",
          "226:     foreach f [glob -nocomplain [file join $G(test.$name.dir) *]] {",
          "227:       set t [file tail $f]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "225:       wapptest_make.sh",
          "226:       wapptest_configure.sh",
          "227:       wapptest_run.tcl",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "277:       set rc [catch { exec {*}$cfg >& test.log } msg]",
          "278:       if {$rc==0} {",
          "279:         set make [readfile wapptest_make.sh]",
          "281:       }",
          "282:     }",
          "283:   } else {",
          "284:     append res {",
          "285:       set make [readfile wapptest_make.sh]",
          "287:     }",
          "288:   }",
          "290:   set res",
          "291: }",
          "",
          "[Removed Lines]",
          "280:         catch { exec {*}$make >>& test.log }",
          "286:       catch { exec {*}$make >>& test.log }",
          "",
          "[Added Lines]",
          "283:         set rc [catch { exec {*}$make >>& test.log }]",
          "289:       set rc [catch { exec {*}$make >>& test.log }]",
          "293:   append res { exit $rc }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6ece353f2d2223ec78e63ce972081a047e89a641",
      "candidate_info": {
        "commit_hash": "6ece353f2d2223ec78e63ce972081a047e89a641",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/6ece353f2d2223ec78e63ce972081a047e89a641",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "src/resolve.c",
          "src/treeview.c",
          "test/istrue.test"
        ],
        "message": "Handle expressions like \"expr IS TRUE COLLATE xyz\" in the same way as \"expr IS TRUE\". Fix for [4d01eda8115b10d1].\n\nFossilOrigin-Name: 5c6146b56a75a94f4baa10e95407c54dd0b9314a57a8702a4b96b15c4d7ac48c",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "src/resolve.c||src/resolve.c",
          "src/treeview.c||src/treeview.c",
          "test/istrue.test||test/istrue.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 614ecb0af47038848e8ba2aed6b92db6f33ddc4aea6361795dbde440380f5a35",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1815: int sqlite3ExprTruthValue(const Expr *pExpr){",
          "1816:   assert( pExpr->op==TK_TRUEFALSE );",
          "1817:   assert( sqlite3StrICmp(pExpr->u.zToken,\"true\")==0",
          "1818:        || sqlite3StrICmp(pExpr->u.zToken,\"false\")==0 );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1816:   pExpr = sqlite3ExprSkipCollate((Expr*)pExpr);",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "930:     }",
          "931:     case TK_IS:",
          "932:     case TK_ISNOT: {",
          "934:       assert( !ExprHasProperty(pExpr, EP_Reduced) );",
          "938:         int rc = resolveExprStep(pWalker, pRight);",
          "939:         if( rc==WRC_Abort ) return WRC_Abort;",
          "940:         if( pRight->op==TK_TRUEFALSE ){",
          "",
          "[Removed Lines]",
          "933:       Expr *pRight;",
          "937:       if( (pRight = pExpr->pRight)->op==TK_ID ){",
          "",
          "[Added Lines]",
          "933:       Expr *pRight = sqlite3ExprSkipCollate(pExpr->pRight);",
          "937:       if( pRight->op==TK_ID ){",
          "",
          "---------------"
        ],
        "src/treeview.c||src/treeview.c": [
          "File: src/treeview.c -> src/treeview.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "514:       };",
          "515:       assert( pExpr->op2==TK_IS || pExpr->op2==TK_ISNOT );",
          "516:       assert( pExpr->pRight );",
          "518:       x = (pExpr->op2==TK_ISNOT)*2 + sqlite3ExprTruthValue(pExpr->pRight);",
          "519:       zUniOp = azOp[x];",
          "520:       break;",
          "",
          "[Removed Lines]",
          "517:       assert( pExpr->pRight->op==TK_TRUEFALSE );",
          "",
          "[Added Lines]",
          "517:       assert( sqlite3ExprSkipCollate(pExpr->pRight)->op==TK_TRUEFALSE );",
          "",
          "---------------"
        ],
        "test/istrue.test||test/istrue.test": [
          "File: test/istrue.test -> test/istrue.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "158:   SELECT *,'x' FROM t7 ORDER BY a;",
          "159: } {1 0 1 0 1 x 2 1 0 0 1 x 3 1 0 0 1 x 4 0 1 1 0 x}",
          "161: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "161: do_execsql_test istrue-710 {",
          "162:   SELECT 0.5 IS TRUE COLLATE NOCASE;",
          "163:   SELECT 0.5 IS TRUE COLLATE RTRIM;",
          "164:   SELECT 0.5 IS TRUE COLLATE BINARY;",
          "166:   SELECT 0.5 IS TRUE;",
          "167:   SELECT 0.5 COLLATE NOCASE IS TRUE;",
          "168:   SELECT 0.0 IS FALSE;",
          "170:   SELECT 0.0 IS FALSE COLLATE NOCASE;",
          "171:   SELECT 0.0 IS FALSE COLLATE RTRIM;",
          "172:   SELECT 0.0 IS FALSE COLLATE BINARY;",
          "173: } {1 1 1   1 1 1  1 1 1}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cc491f4b1bd7a07d931cd36bf5b763f9007e9916",
      "candidate_info": {
        "commit_hash": "cc491f4b1bd7a07d931cd36bf5b763f9007e9916",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/cc491f4b1bd7a07d931cd36bf5b763f9007e9916",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/wherecode.c"
        ],
        "message": "Fix problem with DESC indexes on this branch.\n\nFossilOrigin-Name: b49df1fe9b7174ebc60023179e8da628c926e59df3dc01b15d4a28e17807bb97",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/wherecode.c||src/wherecode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: db1e60800bc260cdcd604739daaba72c6b486158123fc62a3898aca4ead33cd3",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/wherecode.c||src/wherecode.c": [
          "File: src/wherecode.c -> src/wherecode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1606:     if( (pLoop->wsFlags & (WHERE_TOP_LIMIT|WHERE_BTM_LIMIT))==0",
          "1607:      && (pLoop->wsFlags & WHERE_BIGNULL_SORT)!=0",
          "1608:     ){",
          "",
          "[Removed Lines]",
          "1605:     addrNxt = pLevel->addrNxt;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1612:       nExtraReg = 1;",
          "1613:       bSeekPastNull = 1;",
          "1614:       pLevel->regBignull = regBignull = ++pParse->nMem;",
          "1616:     }",
          "",
          "[Removed Lines]",
          "1615:       addrNxt = pLevel->addrBignull = sqlite3VdbeMakeLabel(pParse);",
          "",
          "[Added Lines]",
          "1614:       pLevel->addrBignull = sqlite3VdbeMakeLabel(pParse);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1637:     if( zStartAff && nTop ){",
          "1638:       zEndAff = sqlite3DbStrDup(db, &zStartAff[nEq]);",
          "1639:     }",
          "1641:     testcase( pRangeStart && (pRangeStart->eOperator & WO_LE)!=0 );",
          "1642:     testcase( pRangeStart && (pRangeStart->eOperator & WO_GE)!=0 );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1639:     addrNxt = (regBignull ? pLevel->addrBignull : pLevel->addrNxt);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "af8664020a8f01e275e9237082d570fd25978eef",
      "candidate_info": {
        "commit_hash": "af8664020a8f01e275e9237082d570fd25978eef",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/af8664020a8f01e275e9237082d570fd25978eef",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/affinity2.test"
        ],
        "message": "Fix a false-positive in sqlite3ExprNeedsNoAffinityChange(). Ticket [ac184eb571d5e6e0]\n\nFossilOrigin-Name: e62eddbb048cbc2c15cb8eeb5b7a907e7cb08c21a27ebba96a069f62dbcb0f30",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/affinity2.test||test/affinity2.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 81b9f0f55042777b37de78069f7089041a9ee21dd0a0c86b879053fb46e140b4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2160: int sqlite3ExprNeedsNoAffinityChange(const Expr *p, char aff){",
          "2161:   u8 op;",
          "2162:   if( aff==SQLITE_AFF_BLOB ) return 1;",
          "2164:   op = p->op;",
          "2165:   if( op==TK_REGISTER ) op = p->op2;",
          "2166:   switch( op ){",
          "",
          "[Removed Lines]",
          "2163:   while( p->op==TK_UPLUS || p->op==TK_UMINUS ){ p = p->pLeft; }",
          "",
          "[Added Lines]",
          "2162:   int unaryMinus = 0;",
          "2164:   while( p->op==TK_UPLUS || p->op==TK_UMINUS ){",
          "2165:     if( p->op==TK_UMINUS ) unaryMinus = 1;",
          "2166:     p = p->pLeft;",
          "2167:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2171:       return aff==SQLITE_AFF_REAL || aff==SQLITE_AFF_NUMERIC;",
          "2172:     }",
          "2173:     case TK_STRING: {",
          "2175:     }",
          "2176:     case TK_BLOB: {",
          "2178:     }",
          "2179:     case TK_COLUMN: {",
          "",
          "[Removed Lines]",
          "2174:       return aff==SQLITE_AFF_TEXT;",
          "2177:       return 1;",
          "",
          "[Added Lines]",
          "2178:       return !unaryMinus && aff==SQLITE_AFF_TEXT;",
          "2181:       return !unaryMinus;",
          "",
          "---------------"
        ],
        "test/affinity2.test||test/affinity2.test": [
          "File: test/affinity2.test -> test/affinity2.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:   SELECT * FROM t3 WHERE c='0' ORDER BY a;",
          "86: } {2 1 0 4 1 0}",
          "88: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88: # 2019-08-22 ticket https://sqlite.org/src/info/d99f1ffe836c591ac57f",
          "89: # False positive in sqlite3ExprNeedsNoAffinityChange()",
          "90: #",
          "91: do_execsql_test 500 {",
          "92:   DROP TABLE IF EXISTS t0;",
          "93:   CREATE TABLE t0(c0 TEXT UNIQUE, c1);",
          "94:   INSERT INTO t0(c0) VALUES (-1);",
          "95:   SELECT quote(- x'ce'), quote(t0.c0), quote(- x'ce' >= t0.c0) FROM t0;",
          "96: } {0 '-1' 1}",
          "97: do_execsql_test 501 {",
          "98:   SELECT * FROM t0 WHERE - x'ce' >= t0.c0;",
          "99: } {-1 {}}",
          "100: do_execsql_test 502 {",
          "101:   SELECT quote(+-+x'ce'), quote(t0.c0), quote(+-+x'ce' >= t0.c0) FROM t0;",
          "102: } {0 '-1' 1}",
          "103: do_execsql_test 503 {",
          "104:   SELECT * FROM t0 WHERE +-+x'ce' >= t0.c0;",
          "105: } {-1 {}}",
          "106: do_execsql_test 504 {",
          "107:   SELECT quote(- 'ce'), quote(t0.c0), quote(- 'ce' >= t0.c0) FROM t0;",
          "108: } {0 '-1' 1}",
          "109: do_execsql_test 505 {",
          "110:   SELECT * FROM t0 WHERE - 'ce' >= t0.c0;",
          "111: } {-1 {}}",
          "112: do_execsql_test 506 {",
          "113:   SELECT quote(+-+'ce'), quote(t0.c0), quote(+-+'ce' >= t0.c0) FROM t0;",
          "114: } {0 '-1' 1}",
          "115: do_execsql_test 507 {",
          "116:   SELECT * FROM t0 WHERE +-+'ce' >= t0.c0;",
          "117: } {-1 {}}",
          "",
          "---------------"
        ]
      }
    }
  ]
}