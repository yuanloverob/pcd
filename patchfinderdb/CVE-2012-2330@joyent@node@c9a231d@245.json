{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "aa35564ca1c9f3854bc5f7983f2f00cb51f67ffe",
      "candidate_info": {
        "commit_hash": "aa35564ca1c9f3854bc5f7983f2f00cb51f67ffe",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/aa35564ca1c9f3854bc5f7983f2f00cb51f67ffe",
        "files": [
          "test/addons/hello-world/binding.cc"
        ],
        "message": "Use NODE_MODULE in the hello-world addon example.\n\nFixes Windows throwing \"unknown error\" when trying to require the .node file.",
        "before_after_code_files": [
          "test/addons/hello-world/binding.cc||test/addons/hello-world/binding.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/addons/hello-world/binding.cc||test/addons/hello-world/binding.cc": [
          "File: test/addons/hello-world/binding.cc -> test/addons/hello-world/binding.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: using namespace v8;",
          "10: Handle<Value> Method(const Arguments& args) {",
          "11:   HandleScope scope;",
          "12:   return scope.Close(String::New(\"world\"));",
          "",
          "[Removed Lines]",
          "6: extern \"C\" {",
          "7:   void init(Handle<Object> target);",
          "8: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15: void init(Handle<Object> target) {",
          "16:   NODE_SET_METHOD(target, \"hello\", Method);",
          "17: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15: NODE_MODULE(binding, init);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "880219645e3bf0a9d6eabefeaff47803ec4cf34a",
      "candidate_info": {
        "commit_hash": "880219645e3bf0a9d6eabefeaff47803ec4cf34a",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/880219645e3bf0a9d6eabefeaff47803ec4cf34a",
        "files": [
          "src/tcp_wrap.cc",
          "src/udp_wrap.cc"
        ],
        "message": "tcp, udp: share sockaddr-to-object function\n\nShare AddressToJS() function between tcp_wrap.cc and udp_wrap.cc.",
        "before_after_code_files": [
          "src/tcp_wrap.cc||src/tcp_wrap.cc",
          "src/udp_wrap.cc||src/udp_wrap.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/tcp_wrap.cc||src/tcp_wrap.cc": [
          "File: src/tcp_wrap.cc -> src/tcp_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "74: using v8::Value;",
          "76: static Persistent<Function> tcpConstructor;",
          "80: static Persistent<String> oncomplete_sym;",
          "81: static Persistent<String> onconnection_sym;",
          "84: typedef class ReqWrap<uv_connect_t> ConnectWrap;",
          "87: Local<Object> TCPWrap::Instantiate() {",
          "",
          "[Removed Lines]",
          "77: static Persistent<String> family_symbol;",
          "78: static Persistent<String> address_symbol;",
          "79: static Persistent<String> port_symbol;",
          "",
          "[Added Lines]",
          "83: Local<Object> AddressToJS(const sockaddr* addr);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "131:   tcpConstructor = Persistent<Function>::New(t->GetFunction());",
          "136:   onconnection_sym = NODE_PSYMBOL(\"onconnection\");",
          "137:   oncomplete_sym = NODE_PSYMBOL(\"oncomplete\");",
          "",
          "[Removed Lines]",
          "133:   family_symbol = NODE_PSYMBOL(\"family\");",
          "134:   address_symbol = NODE_PSYMBOL(\"address\");",
          "135:   port_symbol = NODE_PSYMBOL(\"port\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "171: Handle<Value> TCPWrap::GetSockName(const Arguments& args) {",
          "172:   HandleScope scope;",
          "173:   struct sockaddr_storage address;",
          "179:   UNWRAP",
          "",
          "[Removed Lines]",
          "174:   int family;",
          "175:   int port;",
          "176:   char ip[INET6_ADDRSTRLEN];",
          "177:   const char *family_name;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "183:                              reinterpret_cast<sockaddr*>(&address),",
          "184:                              &addrlen);",
          "188:     SetErrno(uv_last_error(uv_default_loop()));",
          "210:   }",
          "213: }",
          "216: Handle<Value> TCPWrap::GetPeerName(const Arguments& args) {",
          "217:   HandleScope scope;",
          "218:   struct sockaddr_storage address;",
          "223:   UNWRAP",
          "",
          "[Removed Lines]",
          "186:   Local<Object> sockname = Object::New();",
          "187:   if (r != 0) {",
          "189:   } else {",
          "190:     family = address.ss_family;",
          "192:     if (family == AF_INET) {",
          "193:       struct sockaddr_in* addrin = (struct sockaddr_in*)&address;",
          "194:       uv_inet_ntop(AF_INET, &(addrin->sin_addr), ip, INET6_ADDRSTRLEN);",
          "195:       port = ntohs(addrin->sin_port);",
          "196:       family_name = \"IPv4\";",
          "197:     } else if (family == AF_INET6) {",
          "198:       struct sockaddr_in6* addrin6 = (struct sockaddr_in6*)&address;",
          "199:       uv_inet_ntop(AF_INET6, &(addrin6->sin6_addr), ip, INET6_ADDRSTRLEN);",
          "200:       port = ntohs(addrin6->sin6_port);",
          "201:       family_name = \"IPv6\";",
          "202:     } else {",
          "203:       assert(0 && \"bad address family\");",
          "204:       abort();",
          "205:     }",
          "207:     sockname->Set(port_symbol, Integer::New(port));",
          "208:     sockname->Set(family_symbol, String::New(family_name));",
          "209:     sockname->Set(address_symbol, String::New(ip));",
          "212:   return scope.Close(sockname);",
          "219:   int family;",
          "220:   int port;",
          "221:   char ip[INET6_ADDRSTRLEN];",
          "",
          "[Added Lines]",
          "178:   if (r) {",
          "180:     return Null();",
          "183:   const sockaddr* addr = reinterpret_cast<const sockaddr*>(&address);",
          "184:   return scope.Close(AddressToJS(addr));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "227:                              reinterpret_cast<sockaddr*>(&address),",
          "228:                              &addrlen);",
          "232:     SetErrno(uv_last_error(uv_default_loop()));",
          "252:   }",
          "255: }",
          "",
          "[Removed Lines]",
          "230:   Local<Object> sockname = Object::New();",
          "231:   if (r != 0) {",
          "233:   } else {",
          "234:     family = address.ss_family;",
          "236:     if (family == AF_INET) {",
          "237:       struct sockaddr_in* addrin = (struct sockaddr_in*)&address;",
          "238:       uv_inet_ntop(AF_INET, &(addrin->sin_addr), ip, INET6_ADDRSTRLEN);",
          "239:       port = ntohs(addrin->sin_port);",
          "240:     } else if (family == AF_INET6) {",
          "241:       struct sockaddr_in6* addrin6 = (struct sockaddr_in6*)&address;",
          "242:       uv_inet_ntop(AF_INET6, &(addrin6->sin6_addr), ip, INET6_ADDRSTRLEN);",
          "243:       port = ntohs(addrin6->sin6_port);",
          "244:     } else {",
          "245:       assert(0 && \"bad address family\");",
          "246:       abort();",
          "247:     }",
          "249:     sockname->Set(port_symbol, Integer::New(port));",
          "250:     sockname->Set(family_symbol, Integer::New(family));",
          "251:     sockname->Set(address_symbol, String::New(ip));",
          "254:   return scope.Close(sockname);",
          "",
          "[Added Lines]",
          "199:   if (r) {",
          "201:     return Null();",
          "204:   const sockaddr* addr = reinterpret_cast<const sockaddr*>(&address);",
          "205:   return scope.Close(AddressToJS(addr));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "473: }",
          "476: }  // namespace node",
          "478: NODE_MODULE(node_tcp_wrap, node::TCPWrap::Initialize)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "428: Local<Object> AddressToJS(const sockaddr* addr) {",
          "429:   static Persistent<String> address_sym;",
          "430:   static Persistent<String> family_sym;",
          "431:   static Persistent<String> port_sym;",
          "432:   static Persistent<String> ipv4_sym;",
          "433:   static Persistent<String> ipv6_sym;",
          "435:   HandleScope scope;",
          "436:   char ip[INET6_ADDRSTRLEN];",
          "437:   const sockaddr_in *a4;",
          "438:   const sockaddr_in6 *a6;",
          "439:   int port;",
          "441:   if (address_sym.IsEmpty()) {",
          "442:     address_sym = NODE_PSYMBOL(\"address\");",
          "443:     family_sym = NODE_PSYMBOL(\"family\");",
          "444:     port_sym = NODE_PSYMBOL(\"port\");",
          "445:     ipv4_sym = NODE_PSYMBOL(\"IPv4\");",
          "446:     ipv6_sym = NODE_PSYMBOL(\"IPv6\");",
          "447:   }",
          "449:   Local<Object> info = Object::New();",
          "451:   switch (addr->sa_family) {",
          "452:   case AF_INET6:",
          "453:     a6 = reinterpret_cast<const sockaddr_in6*>(addr);",
          "454:     uv_inet_ntop(AF_INET6, &a6->sin6_addr, ip, sizeof ip);",
          "455:     port = ntohs(a6->sin6_port);",
          "456:     info->Set(address_sym, String::New(ip));",
          "457:     info->Set(family_sym, ipv6_sym);",
          "458:     info->Set(port_sym, Integer::New(port));",
          "459:     break;",
          "461:   case AF_INET:",
          "462:     a4 = reinterpret_cast<const sockaddr_in*>(addr);",
          "463:     uv_inet_ntop(AF_INET, &a4->sin_addr, ip, sizeof ip);",
          "464:     port = ntohs(a4->sin_port);",
          "465:     info->Set(address_sym, String::New(ip));",
          "466:     info->Set(family_sym, ipv4_sym);",
          "467:     info->Set(port_sym, Integer::New(port));",
          "468:     break;",
          "470:   default:",
          "471:     info->Set(address_sym, String::Empty());",
          "472:   }",
          "474:   return scope.Close(info);",
          "475: }",
          "",
          "---------------"
        ],
        "src/udp_wrap.cc||src/udp_wrap.cc": [
          "File: src/udp_wrap.cc -> src/udp_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "64: typedef ReqWrap<uv_udp_send_t> SendWrap;",
          "66: Local<Object> AddressToJS(const sockaddr* addr);",
          "73: static Persistent<String> buffer_sym;",
          "74: static Persistent<String> oncomplete_sym;",
          "75: static Persistent<String> onmessage_sym;",
          "",
          "[Removed Lines]",
          "68: static Persistent<String> address_sym;",
          "69: static Persistent<String> port_sym;",
          "70: static Persistent<String> family_sym;",
          "71: static Persistent<String> ipv4_sym;",
          "72: static Persistent<String> ipv6_sym;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133:   HandleScope scope;",
          "135:   buffer_sym = NODE_PSYMBOL(\"buffer\");",
          "138:   oncomplete_sym = NODE_PSYMBOL(\"oncomplete\");",
          "139:   onmessage_sym = NODE_PSYMBOL(\"onmessage\");",
          "144:   Local<FunctionTemplate> t = FunctionTemplate::New(New);",
          "145:   t->InstanceTemplate()->SetInternalFieldCount(1);",
          "",
          "[Removed Lines]",
          "136:   port_sym = NODE_PSYMBOL(\"port\");",
          "137:   address_sym = NODE_PSYMBOL(\"address\");",
          "140:   family_sym = NODE_PSYMBOL(\"family\");",
          "141:   ipv4_sym = NODE_PSYMBOL(\"IPv4\");",
          "142:   ipv6_sym = NODE_PSYMBOL(\"IPv6\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "447: }",
          "486: } // namespace node",
          "488: NODE_MODULE(node_udp_wrap, node::UDPWrap::Initialize)",
          "",
          "[Removed Lines]",
          "450: Local<Object> AddressToJS(const sockaddr* addr) {",
          "451:   HandleScope scope;",
          "452:   char ip[INET6_ADDRSTRLEN];",
          "453:   const sockaddr_in *a4;",
          "454:   const sockaddr_in6 *a6;",
          "455:   int port;",
          "457:   Local<Object> info = Object::New();",
          "459:   switch (addr->sa_family) {",
          "460:   case AF_INET6:",
          "461:     a6 = reinterpret_cast<const sockaddr_in6*>(addr);",
          "462:     uv_inet_ntop(AF_INET6, &a6->sin6_addr, ip, sizeof ip);",
          "463:     port = ntohs(a6->sin6_port);",
          "464:     info->Set(address_sym, String::New(ip));",
          "465:     info->Set(port_sym, Integer::New(port));",
          "466:     info->Set(family_sym, ipv6_sym);",
          "467:     break;",
          "469:   case AF_INET:",
          "470:     a4 = reinterpret_cast<const sockaddr_in*>(addr);",
          "471:     uv_inet_ntop(AF_INET, &a4->sin_addr, ip, sizeof ip);",
          "472:     port = ntohs(a4->sin_port);",
          "473:     info->Set(address_sym, String::New(ip));",
          "474:     info->Set(port_sym, Integer::New(port));",
          "475:     info->Set(family_sym, ipv4_sym);",
          "476:     break;",
          "478:   default:",
          "479:     info->Set(address_sym, String::Empty());",
          "480:   }",
          "482:   return scope.Close(info);",
          "483: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2c1025706bb2778d575a1c4f016f9fb67921f4aa",
      "candidate_info": {
        "commit_hash": "2c1025706bb2778d575a1c4f016f9fb67921f4aa",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/2c1025706bb2778d575a1c4f016f9fb67921f4aa",
        "files": [
          "deps/uv/include/uv-private/uv-win.h",
          "deps/uv/src/uv-common.c",
          "deps/uv/src/win/core.c",
          "deps/uv/src/win/tcp.c",
          "deps/uv/src/win/udp.c",
          "deps/uv/src/win/util.c",
          "deps/uv/test/test-thread.c"
        ],
        "message": "upgrade libuv to 52511b9ddc",
        "before_after_code_files": [
          "deps/uv/include/uv-private/uv-win.h||deps/uv/include/uv-private/uv-win.h",
          "deps/uv/src/uv-common.c||deps/uv/src/uv-common.c",
          "deps/uv/src/win/core.c||deps/uv/src/win/core.c",
          "deps/uv/src/win/tcp.c||deps/uv/src/win/tcp.c",
          "deps/uv/src/win/udp.c||deps/uv/src/win/udp.c",
          "deps/uv/src/win/util.c||deps/uv/src/win/util.c",
          "deps/uv/test/test-thread.c||deps/uv/test/test-thread.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/include/uv-private/uv-win.h||deps/uv/include/uv-private/uv-win.h": [
          "File: deps/uv/include/uv-private/uv-win.h -> deps/uv/include/uv-private/uv-win.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "200:   uv_idle_t* next_idle_handle;                                                \\",
          "201:   ares_channel ares_chan;                                                     \\",
          "202:   int ares_active_sockets;                                                    \\",
          "205: #define UV_REQ_TYPE_PRIVATE               \\",
          "",
          "[Removed Lines]",
          "203:   uv_timer_t ares_polling_timer;",
          "",
          "[Added Lines]",
          "203:   uv_timer_t ares_polling_timer;                                              \\",
          "205:   unsigned int active_tcp_streams;                                            \\",
          "207:   unsigned int active_udp_streams;",
          "",
          "---------------"
        ],
        "deps/uv/src/uv-common.c||deps/uv/src/uv-common.c": [
          "File: deps/uv/src/uv-common.c -> deps/uv/src/uv-common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #include \"ares/inet_ntop.h\"",
          "44: size_t uv_strlcpy(char* dst, const char* src, size_t size) {",
          "45:   size_t n;",
          "",
          "[Removed Lines]",
          "36: static uv_counters_t counters;",
          "39: uv_counters_t* uv_counters() {",
          "40:   return &counters;",
          "41: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "302: #ifdef _WIN32",
          "304: #else",
          "305: static void *uv__thread_start(void *ctx_v)",
          "306: #endif",
          "",
          "[Removed Lines]",
          "303: static DWORD __stdcall uv__thread_start(void *ctx_v)",
          "",
          "[Added Lines]",
          "295: static UINT __stdcall uv__thread_start(void *ctx_v)",
          "",
          "---------------"
        ],
        "deps/uv/src/win/core.c||deps/uv/src/win/core.c": [
          "File: deps/uv/src/win/core.c -> deps/uv/src/win/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:   loop->ares_active_sockets = 0;",
          "87:   loop->ares_chan = NULL;",
          "89:   loop->last_err = uv_ok_;",
          "90: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89:   loop->active_tcp_streams = 0;",
          "90:   loop->active_udp_streams = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "108: uv_loop_t* uv_loop_new(void) {",
          "111: }",
          "114: void uv_loop_delete(uv_loop_t* loop) {",
          "116: }",
          "",
          "[Removed Lines]",
          "109:   assert(0 && \"implement me\");",
          "110:   return NULL;",
          "115:   assert(0 && \"implement me\");",
          "",
          "[Added Lines]",
          "112:   uv_loop_t* loop;",
          "115:   uv_once(&uv_init_guard_, uv_init);",
          "117:   loop = (uv_loop_t*)malloc(sizeof(uv_loop_t));",
          "119:   if (!loop) {",
          "120:     uv_fatal_error(ERROR_OUTOFMEMORY, \"malloc\");",
          "121:   }",
          "123:   uv_loop_init(loop);",
          "124:   return loop;",
          "129:   if (loop != &uv_default_loop_) {",
          "130:     free(loop);",
          "131:   }",
          "",
          "---------------"
        ],
        "deps/uv/src/win/tcp.c||deps/uv/src/win/tcp.c": [
          "File: deps/uv/src/win/tcp.c -> deps/uv/src/win/tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: static char uv_zero_[] = \"\";",
          "49: static int uv__tcp_nodelay(uv_tcp_t* handle, SOCKET socket, int enable) {",
          "50:   if (setsockopt(socket,",
          "51:                  IPPROTO_TCP,",
          "",
          "[Removed Lines]",
          "46: static unsigned int active_tcp_streams = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "217:       handle->close_cb((uv_handle_t*)handle);",
          "218:     }",
          "222:     uv_unref(loop);",
          "223:   }",
          "",
          "[Removed Lines]",
          "220:     active_tcp_streams--;",
          "",
          "[Added Lines]",
          "216:     loop->active_tcp_streams--;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "403:     handle->flags &= ~UV_HANDLE_ZERO_READ;",
          "404:     handle->read_buffer = handle->alloc_cb((uv_handle_t*) handle, 65536);",
          "405:     assert(handle->read_buffer.len > 0);",
          "",
          "[Removed Lines]",
          "402:   if (active_tcp_streams < uv_active_tcp_streams_threshold) {",
          "",
          "[Added Lines]",
          "398:   if (loop->active_tcp_streams < uv_active_tcp_streams_threshold) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "559:     }",
          "560:   }",
          "564:   return rv;",
          "565: }",
          "",
          "[Removed Lines]",
          "562:   active_tcp_streams++;",
          "",
          "[Added Lines]",
          "558:   loop->active_tcp_streams++;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1007:                       NULL,",
          "1008:                       0) == 0) {",
          "1009:         uv_connection_init((uv_stream_t*)handle);",
          "1011:         ((uv_connect_cb)req->cb)(req, 0);",
          "1012:       } else {",
          "1013:         uv__set_sys_error(loop, WSAGetLastError());",
          "",
          "[Removed Lines]",
          "1010:         active_tcp_streams++;",
          "",
          "[Added Lines]",
          "1006:         loop->active_tcp_streams++;",
          "",
          "---------------"
        ],
        "deps/uv/src/win/udp.c||deps/uv/src/win/udp.c": [
          "File: deps/uv/src/win/udp.c -> deps/uv/src/win/udp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: static char uv_zero_[] = \"\";",
          "41: int uv_udp_getsockname(uv_udp_t* handle, struct sockaddr* name,",
          "42:     int* namelen) {",
          "43:   uv_loop_t* loop = handle->loop;",
          "",
          "[Removed Lines]",
          "38: static unsigned int active_udp_streams = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "273:     handle->flags &= ~UV_HANDLE_ZERO_READ;",
          "275:     handle->recv_buffer = handle->alloc_cb((uv_handle_t*) handle, 65536);",
          "",
          "[Removed Lines]",
          "272:   if (active_udp_streams < uv_active_udp_streams_threshold) {",
          "",
          "[Added Lines]",
          "268:   if (loop->active_udp_streams < uv_active_udp_streams_threshold) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "357:   }",
          "359:   handle->flags |= UV_HANDLE_READING;",
          "362:   handle->recv_cb = recv_cb;",
          "363:   handle->alloc_cb = alloc_cb;",
          "",
          "[Removed Lines]",
          "360:   active_udp_streams++;",
          "",
          "[Added Lines]",
          "356:   loop->active_udp_streams++;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "374: int uv_udp_recv_stop(uv_udp_t* handle) {",
          "375:   if (handle->flags & UV_HANDLE_READING) {",
          "376:     handle->flags &= ~UV_HANDLE_READING;",
          "378:   }",
          "380:   return 0;",
          "",
          "[Removed Lines]",
          "377:     active_udp_streams--;",
          "",
          "[Added Lines]",
          "373:     handle->loop->active_udp_streams--;",
          "",
          "---------------"
        ],
        "deps/uv/src/win/util.c||deps/uv/src/win/util.c": [
          "File: deps/uv/src/win/util.c -> deps/uv/src/win/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "49: static char *process_title;",
          "52: int uv_utf16_to_utf8(const wchar_t* utf16Buffer, size_t utf16Size,",
          "53:     char* utf8Buffer, size_t utf8Size) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50: static uv_once_t uv_process_title_init_guard_ = UV_ONCE_INIT;",
          "51: static CRITICAL_SECTION process_title_lock;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "263: }",
          "266: uv_err_t uv_set_process_title(const char* title) {",
          "267:   uv_err_t err;",
          "268:   int length;",
          "269:   wchar_t* title_w = NULL;",
          "272:   length = uv_utf8_to_utf16(title, NULL, 0);",
          "273:   if (!length) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "267: static void uv_process_title_init(void) {",
          "268:   InitializeCriticalSection(&process_title_lock);",
          "269: }",
          "277:   uv_once(&uv_process_title_init_guard_, uv_process_title_init);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "297:     goto done;",
          "298:   }",
          "300:   free(process_title);",
          "301:   process_title = strdup(title);",
          "303:   err = uv_ok_;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "308:   EnterCriticalSection(&process_title_lock);",
          "311:   LeaveCriticalSection(&process_title_lock);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "341: uv_err_t uv_get_process_title(char* buffer, size_t size) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "352:   uv_once(&uv_process_title_init_guard_, uv_process_title_init);",
          "354:   EnterCriticalSection(&process_title_lock);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "350:   assert(process_title);",
          "351:   strncpy(buffer, process_title, size);",
          "353:   return uv_ok_;",
          "354: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "365:   LeaveCriticalSection(&process_title_lock);",
          "",
          "---------------"
        ],
        "deps/uv/test/test-thread.c||deps/uv/test/test-thread.c": [
          "File: deps/uv/test/test-thread.c -> deps/uv/test/test-thread.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:   uv_fs_t handle;",
          "47: };",
          "49: static void getaddrinfo_do(struct getaddrinfo_req* req);",
          "50: static void getaddrinfo_cb(uv_getaddrinfo_t* handle,",
          "51:                            int status,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50: struct thread {",
          "51:   uv_thread_t thread_id;",
          "52:   volatile int thread_called;",
          "53: };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95: static void fs_cb(uv_fs_t* handle) {",
          "96:   struct fs_req* req = container_of(handle, struct fs_req, handle);",
          "98:   if (--req->counter)",
          "99:     fs_do(req);",
          "100: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "104:   uv_fs_req_cleanup(handle);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "106:   uv_loop_t* loop;",
          "107:   size_t i;",
          "108:   int r;",
          "110:   loop = uv_loop_new();",
          "111:   ASSERT(loop != NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117:   struct thread* thread = arg;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "128:   ASSERT(r == 0);",
          "130:   uv_loop_delete(loop);",
          "131: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "140:   thread->thread_called = 1;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "159: TEST_IMPL(threadpool_multiple_event_loops) {",
          "161:   size_t i;",
          "162:   int r;",
          "164:   for (i = 0; i < ARRAY_SIZE(threads); i++) {",
          "166:     ASSERT(r == 0);",
          "167:   }",
          "169:   for (i = 0; i < ARRAY_SIZE(threads); i++) {",
          "171:     ASSERT(r == 0);",
          "172:   }",
          "174:   return 0;",
          "",
          "[Removed Lines]",
          "160:   uv_thread_t threads[8];",
          "165:     r = uv_thread_create(threads + i, do_work, NULL);",
          "170:     r = uv_thread_join(threads + i);",
          "",
          "[Added Lines]",
          "170:   struct thread threads[8];",
          "174:   memset(threads, 0, sizeof(threads));",
          "177:     r = uv_thread_create(&threads[i].thread_id, do_work, &threads[i]);",
          "182:     r = uv_thread_join(&threads[i].thread_id);",
          "184:     ASSERT(threads[i].thread_called);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b7c05e1b75e5c64d53b7b0877791ce001020f671",
      "candidate_info": {
        "commit_hash": "b7c05e1b75e5c64d53b7b0877791ce001020f671",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/b7c05e1b75e5c64d53b7b0877791ce001020f671",
        "files": [
          "deps/v8/ChangeLog",
          "deps/v8/src/arm/lithium-arm.cc",
          "deps/v8/src/arm/lithium-codegen-arm.cc",
          "deps/v8/src/arm/lithium-codegen-arm.h",
          "deps/v8/src/arm/lithium-gap-resolver-arm.cc",
          "deps/v8/src/arm/macro-assembler-arm.h",
          "deps/v8/src/debug.cc",
          "deps/v8/src/flag-definitions.h",
          "deps/v8/src/heap.cc",
          "deps/v8/src/hydrogen-instructions.h",
          "deps/v8/src/hydrogen.cc",
          "deps/v8/src/ia32/lithium-codegen-ia32.cc",
          "deps/v8/src/ia32/lithium-codegen-ia32.h",
          "deps/v8/src/ia32/lithium-gap-resolver-ia32.cc",
          "deps/v8/src/ia32/lithium-ia32.cc",
          "deps/v8/src/ia32/macro-assembler-ia32.h",
          "deps/v8/src/mips/ic-mips.cc",
          "deps/v8/src/mips/lithium-codegen-mips.cc",
          "deps/v8/src/mips/lithium-mips.cc",
          "deps/v8/src/objects.cc",
          "deps/v8/src/string-search.h",
          "deps/v8/src/version.cc",
          "deps/v8/src/x64/lithium-codegen-x64.cc",
          "deps/v8/src/x64/lithium-gap-resolver-x64.cc",
          "deps/v8/src/x64/lithium-x64.cc",
          "deps/v8/src/x64/macro-assembler-x64.h",
          "deps/v8/test/cctest/test-api.cc",
          "deps/v8/test/mjsunit/regress/regress-108296.js"
        ],
        "message": "Upgrade V8 to 3.8.3",
        "before_after_code_files": [
          "deps/v8/src/arm/lithium-arm.cc||deps/v8/src/arm/lithium-arm.cc",
          "deps/v8/src/arm/lithium-codegen-arm.cc||deps/v8/src/arm/lithium-codegen-arm.cc",
          "deps/v8/src/arm/lithium-codegen-arm.h||deps/v8/src/arm/lithium-codegen-arm.h",
          "deps/v8/src/arm/lithium-gap-resolver-arm.cc||deps/v8/src/arm/lithium-gap-resolver-arm.cc",
          "deps/v8/src/arm/macro-assembler-arm.h||deps/v8/src/arm/macro-assembler-arm.h",
          "deps/v8/src/debug.cc||deps/v8/src/debug.cc",
          "deps/v8/src/flag-definitions.h||deps/v8/src/flag-definitions.h",
          "deps/v8/src/heap.cc||deps/v8/src/heap.cc",
          "deps/v8/src/hydrogen-instructions.h||deps/v8/src/hydrogen-instructions.h",
          "deps/v8/src/hydrogen.cc||deps/v8/src/hydrogen.cc",
          "deps/v8/src/ia32/lithium-codegen-ia32.cc||deps/v8/src/ia32/lithium-codegen-ia32.cc",
          "deps/v8/src/ia32/lithium-codegen-ia32.h||deps/v8/src/ia32/lithium-codegen-ia32.h",
          "deps/v8/src/ia32/lithium-gap-resolver-ia32.cc||deps/v8/src/ia32/lithium-gap-resolver-ia32.cc",
          "deps/v8/src/ia32/lithium-ia32.cc||deps/v8/src/ia32/lithium-ia32.cc",
          "deps/v8/src/ia32/macro-assembler-ia32.h||deps/v8/src/ia32/macro-assembler-ia32.h",
          "deps/v8/src/mips/ic-mips.cc||deps/v8/src/mips/ic-mips.cc",
          "deps/v8/src/mips/lithium-codegen-mips.cc||deps/v8/src/mips/lithium-codegen-mips.cc",
          "deps/v8/src/mips/lithium-mips.cc||deps/v8/src/mips/lithium-mips.cc",
          "deps/v8/src/objects.cc||deps/v8/src/objects.cc",
          "deps/v8/src/string-search.h||deps/v8/src/string-search.h",
          "deps/v8/src/version.cc||deps/v8/src/version.cc",
          "deps/v8/src/x64/lithium-codegen-x64.cc||deps/v8/src/x64/lithium-codegen-x64.cc",
          "deps/v8/src/x64/lithium-gap-resolver-x64.cc||deps/v8/src/x64/lithium-gap-resolver-x64.cc",
          "deps/v8/src/x64/lithium-x64.cc||deps/v8/src/x64/lithium-x64.cc",
          "deps/v8/src/x64/macro-assembler-x64.h||deps/v8/src/x64/macro-assembler-x64.h",
          "deps/v8/test/cctest/test-api.cc||deps/v8/test/cctest/test-api.cc",
          "deps/v8/test/mjsunit/regress/regress-108296.js||deps/v8/test/mjsunit/regress/regress-108296.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/src/arm/lithium-arm.cc||deps/v8/src/arm/lithium-arm.cc": [
          "File: deps/v8/src/arm/lithium-arm.cc -> deps/v8/src/arm/lithium-arm.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1938:   LOperand* key = needs_write_barrier",
          "1939:       ? UseTempRegister(instr->key())",
          "1940:       : UseRegisterOrConstantAtStart(instr->key());",
          "1943: }",
          "",
          "[Removed Lines]",
          "1942:   return AssignEnvironment(new LStoreKeyedFastElement(obj, key, val));",
          "",
          "[Added Lines]",
          "1941:   return new LStoreKeyedFastElement(obj, key, val);",
          "",
          "---------------"
        ],
        "deps/v8/src/arm/lithium-codegen-arm.cc||deps/v8/src/arm/lithium-codegen-arm.cc": [
          "File: deps/v8/src/arm/lithium-codegen-arm.cc -> deps/v8/src/arm/lithium-codegen-arm.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "385: }",
          "388: int LCodeGen::ToInteger32(LConstantOperand* op) const {",
          "389:   Handle<Object> value = chunk_->LookupLiteral(op);",
          "390:   ASSERT(chunk_->LookupLiteralRepresentation(op).IsInteger32());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "388: Handle<Object> LCodeGen::ToHandle(LConstantOperand* op) const {",
          "389:   Handle<Object> literal = chunk_->LookupLiteral(op);",
          "390:   ASSERT(chunk_->LookupLiteralRepresentation(op).IsTagged());",
          "391:   return literal;",
          "392: }",
          "395: bool LCodeGen::IsInteger32(LConstantOperand* op) const {",
          "396:   return chunk_->LookupLiteralRepresentation(op).IsInteger32();",
          "397: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3404:   Register key = instr->key()->IsRegister() ? ToRegister(instr->key()) : no_reg;",
          "3405:   Register scratch = scratch0();",
          "3415:   if (instr->key()->IsConstantOperand()) {",
          "3416:     ASSERT(!instr->hydrogen()->NeedsWriteBarrier());",
          "",
          "[Removed Lines]",
          "3409:   if (instr->hydrogen()->ValueNeedsSmiCheck()) {",
          "3410:     __ tst(value, Operand(kSmiTagMask));",
          "3411:     DeoptimizeIf(ne, instr->environment());",
          "3412:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/v8/src/arm/lithium-codegen-arm.h||deps/v8/src/arm/lithium-codegen-arm.h": [
          "File: deps/v8/src/arm/lithium-codegen-arm.h -> deps/v8/src/arm/lithium-codegen-arm.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:   MemOperand ToHighMemOperand(LOperand* op) const;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "96:   bool IsInteger32(LConstantOperand* op) const;",
          "97:   Handle<Object> ToHandle(LConstantOperand* op) const;",
          "",
          "---------------"
        ],
        "deps/v8/src/arm/lithium-gap-resolver-arm.cc||deps/v8/src/arm/lithium-gap-resolver-arm.cc": [
          "File: deps/v8/src/arm/lithium-gap-resolver-arm.cc -> deps/v8/src/arm/lithium-gap-resolver-arm.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "248:     }",
          "250:   } else if (source->IsConstantOperand()) {",
          "252:     if (destination->IsRegister()) {",
          "254:     } else {",
          "255:       ASSERT(destination->IsStackSlot());",
          "256:       ASSERT(!in_cycle_);  // Constant moves happen after all cycles are gone.",
          "258:       __ str(kSavedValueRegister, cgen_->ToMemOperand(destination));",
          "259:     }",
          "",
          "[Removed Lines]",
          "251:     Operand source_operand = cgen_->ToOperand(source);",
          "253:       __ mov(cgen_->ToRegister(destination), source_operand);",
          "257:       __ mov(kSavedValueRegister, source_operand);",
          "",
          "[Added Lines]",
          "251:     LConstantOperand* constant_source = LConstantOperand::cast(source);",
          "253:       Register dst = cgen_->ToRegister(destination);",
          "254:       if (cgen_->IsInteger32(constant_source)) {",
          "255:         __ mov(dst, Operand(cgen_->ToInteger32(constant_source)));",
          "256:       } else {",
          "257:         __ LoadObject(dst, cgen_->ToHandle(constant_source));",
          "258:       }",
          "262:       if (cgen_->IsInteger32(constant_source)) {",
          "263:         __ mov(kSavedValueRegister,",
          "264:                Operand(cgen_->ToInteger32(constant_source)));",
          "265:       } else {",
          "266:         __ LoadObject(kSavedValueRegister,",
          "267:                       cgen_->ToHandle(constant_source));",
          "268:       }",
          "",
          "---------------"
        ],
        "deps/v8/src/arm/macro-assembler-arm.h||deps/v8/src/arm/macro-assembler-arm.h": [
          "File: deps/v8/src/arm/macro-assembler-arm.h -> deps/v8/src/arm/macro-assembler-arm.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "169:   void LoadHeapObject(Register dst, Handle<HeapObject> object);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "171:   void LoadObject(Register result, Handle<Object> object) {",
          "172:     if (object->IsHeapObject()) {",
          "173:       LoadHeapObject(result, Handle<HeapObject>::cast(object));",
          "174:     } else {",
          "175:       Move(result, object);",
          "176:     }",
          "177:   }",
          "",
          "---------------"
        ],
        "deps/v8/src/debug.cc||deps/v8/src/debug.cc": [
          "File: deps/v8/src/debug.cc -> deps/v8/src/debug.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1147:   Handle<DebugInfo> debug_info = GetDebugInfo(shared);",
          "1152:   BreakLocationIterator it(debug_info, SOURCE_BREAK_LOCATIONS);",
          "",
          "[Removed Lines]",
          "1149:   ASSERT(source_position >= 0);",
          "",
          "[Added Lines]",
          "1149:   ASSERT(*source_position >= 0);",
          "",
          "---------------"
        ],
        "deps/v8/src/flag-definitions.h||deps/v8/src/flag-definitions.h": [
          "File: deps/v8/src/flag-definitions.h -> deps/v8/src/flag-definitions.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "564: DEFINE_implication(print_all_code, print_code_verbose)",
          "565: DEFINE_implication(print_all_code, print_builtin_code)",
          "566: DEFINE_implication(print_all_code, print_code_stubs)",
          "568: DEFINE_implication(print_all_code, code_comments)",
          "569: #endif",
          "",
          "[Removed Lines]",
          "567: DEFINE_implication(print_all_code, trace_codegen)",
          "",
          "[Added Lines]",
          "568: #ifdef DEBUG",
          "569: DEFINE_implication(print_all_code, trace_codegen)",
          "570: #endif",
          "",
          "---------------"
        ],
        "deps/v8/src/heap.cc||deps/v8/src/heap.cc": [
          "File: deps/v8/src/heap.cc -> deps/v8/src/heap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "463:   }",
          "464:   mark_compact_collector()->SetFlags(kNoGCFlags);",
          "465:   new_space_.Shrink();",
          "466:   incremental_marking()->UncommitMarkingDeque();",
          "467: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "466:   UncommitFromSpace();",
          "467:   Shrink();",
          "",
          "---------------"
        ],
        "deps/v8/src/hydrogen-instructions.h||deps/v8/src/hydrogen-instructions.h": [
          "File: deps/v8/src/hydrogen-instructions.h -> deps/v8/src/hydrogen-instructions.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3933:     }",
          "3934:   }",
          "3940:   virtual void PrintDataTo(StringStream* stream);",
          "3942:   DECLARE_CONCRETE_INSTRUCTION(StoreKeyedFastElement)",
          "",
          "[Removed Lines]",
          "3936:   bool ValueNeedsSmiCheck() {",
          "3937:     return value_is_smi();",
          "3938:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/v8/src/hydrogen.cc||deps/v8/src/hydrogen.cc": [
          "File: deps/v8/src/hydrogen.cc -> deps/v8/src/hydrogen.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "3514:     switch (boilerplate_elements_kind) {",
          "3515:       case FAST_SMI_ONLY_ELEMENTS:",
          "3516:       case FAST_ELEMENTS:",
          "3517:         AddInstruction(new(zone()) HStoreKeyedFastElement(",
          "3518:             elements,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3517:         AddInstruction(new(zone()) HCheckSmi(value));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4223:                                                     bool is_store) {",
          "4224:   if (is_store) {",
          "4225:     ASSERT(val != NULL);",
          "4232:     }",
          "4233:   }",
          "",
          "[Removed Lines]",
          "4226:     if (elements_kind == FAST_DOUBLE_ELEMENTS) {",
          "4227:       return new(zone()) HStoreKeyedFastDoubleElement(",
          "4228:           elements, checked_key, val);",
          "4229:     } else {  // FAST_ELEMENTS or FAST_SMI_ONLY_ELEMENTS.",
          "4230:       return new(zone()) HStoreKeyedFastElement(",
          "4231:           elements, checked_key, val, elements_kind);",
          "",
          "[Added Lines]",
          "4229:     switch (elements_kind) {",
          "4230:       case FAST_DOUBLE_ELEMENTS:",
          "4231:         return new(zone()) HStoreKeyedFastDoubleElement(",
          "4232:             elements, checked_key, val);",
          "4233:       case FAST_SMI_ONLY_ELEMENTS:",
          "4235:         AddInstruction(new(zone()) HCheckSmi(val));",
          "4237:       case FAST_ELEMENTS:",
          "4238:         return new(zone()) HStoreKeyedFastElement(",
          "4239:             elements, checked_key, val, elements_kind);",
          "4240:       default:",
          "4241:         UNREACHABLE();",
          "4242:         return NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4399:       if (elements_kind == FAST_SMI_ONLY_ELEMENTS ||",
          "4400:           elements_kind == FAST_ELEMENTS ||",
          "4401:           elements_kind == FAST_DOUBLE_ELEMENTS) {",
          "4405:         if (is_store && elements_kind != FAST_DOUBLE_ELEMENTS) {",
          "4406:           AddInstruction(new(zone()) HCheckMap(",
          "4407:               elements, isolate()->factory()->fixed_array_map(),",
          "",
          "[Removed Lines]",
          "4402:         if (is_store && elements_kind == FAST_SMI_ONLY_ELEMENTS) {",
          "4403:           AddInstruction(new(zone()) HCheckSmi(val));",
          "4404:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/v8/src/ia32/lithium-codegen-ia32.cc||deps/v8/src/ia32/lithium-codegen-ia32.cc": [
          "File: deps/v8/src/ia32/lithium-codegen-ia32.cc -> deps/v8/src/ia32/lithium-codegen-ia32.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "354: }",
          "369: }",
          "",
          "[Removed Lines]",
          "357: Immediate LCodeGen::ToImmediate(LOperand* op) {",
          "358:   LConstantOperand* const_op = LConstantOperand::cast(op);",
          "359:   Handle<Object> literal = chunk_->LookupLiteral(const_op);",
          "360:   Representation r = chunk_->LookupLiteralRepresentation(const_op);",
          "361:   if (r.IsInteger32()) {",
          "362:     ASSERT(literal->IsNumber());",
          "363:     return Immediate(static_cast<int32_t>(literal->Number()));",
          "364:   } else if (r.IsDouble()) {",
          "365:     Abort(\"unsupported double immediate\");",
          "366:   }",
          "367:   ASSERT(r.IsTagged());",
          "368:   return Immediate(literal);",
          "",
          "[Added Lines]",
          "357: bool LCodeGen::IsInteger32(LConstantOperand* op) const {",
          "358:   return chunk_->LookupLiteralRepresentation(op).IsInteger32();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1167:   ASSERT(left->Equals(instr->result()));",
          "1169:   if (right->IsConstantOperand()) {",
          "1171:   } else {",
          "1172:     __ sub(ToRegister(left), ToOperand(right));",
          "1173:   }",
          "",
          "[Removed Lines]",
          "1170:     __ sub(ToOperand(left), ToImmediate(right));",
          "",
          "[Added Lines]",
          "1160:     __ sub(ToOperand(left), ToInteger32Immediate(right));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1306:   ASSERT(left->Equals(instr->result()));",
          "1308:   if (right->IsConstantOperand()) {",
          "1310:   } else {",
          "1311:     __ add(ToRegister(left), ToOperand(right));",
          "1312:   }",
          "",
          "[Removed Lines]",
          "1309:     __ add(ToOperand(left), ToImmediate(right));",
          "",
          "[Added Lines]",
          "1299:     __ add(ToOperand(left), ToInteger32Immediate(right));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1578:       __ j(parity_even, chunk_->GetAssemblyLabel(false_block));",
          "1579:     } else {",
          "1580:       if (right->IsConstantOperand()) {",
          "1582:       } else if (left->IsConstantOperand()) {",
          "1585:         cc = ReverseCondition(cc);",
          "1586:       } else {",
          "",
          "[Removed Lines]",
          "1581:         __ cmp(ToRegister(left), ToImmediate(right));",
          "1583:         __ cmp(ToOperand(right), ToImmediate(left));",
          "",
          "[Added Lines]",
          "1571:         __ cmp(ToRegister(left), ToInteger32Immediate(right));",
          "1573:         __ cmp(ToOperand(right), ToInteger32Immediate(left));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3261: void LCodeGen::DoBoundsCheck(LBoundsCheck* instr) {",
          "3262:   if (instr->index()->IsConstantOperand()) {",
          "3263:     __ cmp(ToOperand(instr->length()),",
          "3265:     DeoptimizeIf(below_equal, instr->environment());",
          "3266:   } else {",
          "3267:     __ cmp(ToRegister(instr->index()), ToOperand(instr->length()));",
          "",
          "[Removed Lines]",
          "3264:            ToImmediate(LConstantOperand::cast(instr->index())));",
          "",
          "[Added Lines]",
          "3254:            Immediate(ToInteger32(LConstantOperand::cast(instr->index()))));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3315:   Register elements = ToRegister(instr->object());",
          "3316:   Register key = instr->key()->IsRegister() ? ToRegister(instr->key()) : no_reg;",
          "3326:   if (instr->key()->IsConstantOperand()) {",
          "3327:     ASSERT(!instr->hydrogen()->NeedsWriteBarrier());",
          "",
          "[Removed Lines]",
          "3320:   if (instr->hydrogen()->ValueNeedsSmiCheck()) {",
          "3321:     __ test(value, Immediate(kSmiTagMask));",
          "3322:     DeoptimizeIf(not_zero, instr->environment());",
          "3323:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/v8/src/ia32/lithium-codegen-ia32.h||deps/v8/src/ia32/lithium-codegen-ia32.h": [
          "File: deps/v8/src/ia32/lithium-codegen-ia32.h -> deps/v8/src/ia32/lithium-codegen-ia32.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:   Operand ToOperand(LOperand* op) const;",
          "79:   Register ToRegister(LOperand* op) const;",
          "80:   XMMRegister ToDoubleRegister(LOperand* op) const;",
          "",
          "[Removed Lines]",
          "81:   Immediate ToImmediate(LOperand* op);",
          "",
          "[Added Lines]",
          "82:   bool IsInteger32(LConstantOperand* op) const;",
          "83:   Immediate ToInteger32Immediate(LOperand* op) const {",
          "84:     return Immediate(ToInteger32(LConstantOperand::cast(op)));",
          "85:   }",
          "87:   Handle<Object> ToHandle(LConstantOperand* op) const;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "225:   Register ToRegister(int index) const;",
          "226:   XMMRegister ToDoubleRegister(int index) const;",
          "227:   int ToInteger32(LConstantOperand* op) const;",
          "229:   double ToDouble(LConstantOperand* op) const;",
          "230:   Operand BuildFastArrayOperand(LOperand* elements_pointer,",
          "231:                                 LOperand* key,",
          "",
          "[Removed Lines]",
          "228:   Handle<Object> ToHandle(LConstantOperand* op) const;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/v8/src/ia32/lithium-gap-resolver-ia32.cc||deps/v8/src/ia32/lithium-gap-resolver-ia32.cc": [
          "File: deps/v8/src/ia32/lithium-gap-resolver-ia32.cc -> deps/v8/src/ia32/lithium-gap-resolver-ia32.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "303:     }",
          "305:   } else if (source->IsConstantOperand()) {",
          "308:     if (destination->IsRegister()) {",
          "309:       Register dst = cgen_->ToRegister(destination);",
          "311:     } else {",
          "312:       Operand dst = cgen_->ToOperand(destination);",
          "314:     }",
          "316:   } else if (source->IsDoubleRegister()) {",
          "",
          "[Removed Lines]",
          "306:     ASSERT(destination->IsRegister() || destination->IsStackSlot());",
          "307:     Immediate src = cgen_->ToImmediate(source);",
          "310:       __ Set(dst, src);",
          "313:       __ Set(dst, src);",
          "",
          "[Added Lines]",
          "306:     LConstantOperand* constant_source = LConstantOperand::cast(source);",
          "309:       if (cgen_->IsInteger32(constant_source)) {",
          "310:         __ Set(dst, cgen_->ToInteger32Immediate(constant_source));",
          "311:       } else {",
          "312:         __ LoadObject(dst, cgen_->ToHandle(constant_source));",
          "313:       }",
          "315:       ASSERT(destination->IsStackSlot());",
          "317:       if (cgen_->IsInteger32(constant_source)) {",
          "318:         __ Set(dst, cgen_->ToInteger32Immediate(constant_source));",
          "319:       } else {",
          "320:         Register tmp = EnsureTempRegister();",
          "321:         __ LoadObject(tmp, cgen_->ToHandle(constant_source));",
          "322:         __ mov(dst, tmp);",
          "323:       }",
          "",
          "---------------"
        ],
        "deps/v8/src/ia32/lithium-ia32.cc||deps/v8/src/ia32/lithium-ia32.cc": [
          "File: deps/v8/src/ia32/lithium-ia32.cc -> deps/v8/src/ia32/lithium-ia32.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2023:   LOperand* key = needs_write_barrier",
          "2024:       ? UseTempRegister(instr->key())",
          "2025:       : UseRegisterOrConstantAtStart(instr->key());",
          "2028: }",
          "",
          "[Removed Lines]",
          "2027:   return AssignEnvironment(new(zone()) LStoreKeyedFastElement(obj, key, val));",
          "",
          "[Added Lines]",
          "2026:   return new(zone()) LStoreKeyedFastElement(obj, key, val);",
          "",
          "---------------"
        ],
        "deps/v8/src/ia32/macro-assembler-ia32.h||deps/v8/src/ia32/macro-assembler-ia32.h": [
          "File: deps/v8/src/ia32/macro-assembler-ia32.h -> deps/v8/src/ia32/macro-assembler-ia32.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "240:   void LoadHeapObject(Register result, Handle<HeapObject> object);",
          "241:   void PushHeapObject(Handle<HeapObject> object);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "243:   void LoadObject(Register result, Handle<Object> object) {",
          "244:     if (object->IsHeapObject()) {",
          "245:       LoadHeapObject(result, Handle<HeapObject>::cast(object));",
          "246:     } else {",
          "247:       Set(result, Immediate(object));",
          "248:     }",
          "249:   }",
          "",
          "---------------"
        ],
        "deps/v8/src/mips/ic-mips.cc||deps/v8/src/mips/ic-mips.cc": [
          "File: deps/v8/src/mips/ic-mips.cc -> deps/v8/src/mips/ic-mips.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "870:   Label slow, notin;",
          "871:   MemOperand mapped_location =",
          "872:       GenerateMappedArgumentsLookup(masm, a2, a1, a3, t0, t1, &notin, &slow);",
          "873:   __ sw(a0, mapped_location);",
          "875:   __ mov(t5, a0);",
          "877:   __ Ret(USE_DELAY_SLOT);",
          "878:   __ mov(v0, a0);  // (In delay slot) return the value stored in v0.",
          "879:   __ bind(&notin);",
          "881:   MemOperand unmapped_location =",
          "882:       GenerateUnmappedArgumentsLookup(masm, a1, a3, t0, &slow);",
          "883:   __ sw(a0, unmapped_location);",
          "885:   __ mov(t5, a0);",
          "887:   __ Ret(USE_DELAY_SLOT);",
          "888:   __ mov(v0, a0);  // (In delay slot) return the value stored in v0.",
          "889:   __ bind(&slow);",
          "",
          "[Removed Lines]",
          "874:   __ Addu(t2, a3, t1);",
          "876:   __ RecordWrite(a3, t2, t5, kRAHasNotBeenSaved, kDontSaveFPRegs);",
          "884:   __ Addu(t2, a3, t0);",
          "886:   __ RecordWrite(a3, t2, t5, kRAHasNotBeenSaved, kDontSaveFPRegs);",
          "",
          "[Added Lines]",
          "876:   ASSERT_EQ(mapped_location.offset(), 0);",
          "877:   __ RecordWrite(a3, mapped_location.rm(), t5,",
          "878:                  kRAHasNotBeenSaved, kDontSaveFPRegs);",
          "888:   ASSERT_EQ(unmapped_location.offset(), 0);",
          "889:   __ RecordWrite(a3, unmapped_location.rm(), t5,",
          "890:                  kRAHasNotBeenSaved, kDontSaveFPRegs);",
          "",
          "---------------"
        ],
        "deps/v8/src/mips/lithium-codegen-mips.cc||deps/v8/src/mips/lithium-codegen-mips.cc": [
          "File: deps/v8/src/mips/lithium-codegen-mips.cc -> deps/v8/src/mips/lithium-codegen-mips.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "3311:   Register key = instr->key()->IsRegister() ? ToRegister(instr->key()) : no_reg;",
          "3312:   Register scratch = scratch0();",
          "3322:   if (instr->key()->IsConstantOperand()) {",
          "3323:     ASSERT(!instr->hydrogen()->NeedsWriteBarrier());",
          "",
          "[Removed Lines]",
          "3316:   if (instr->hydrogen()->ValueNeedsSmiCheck()) {",
          "3317:     __ And(at, value, Operand(kSmiTagMask));",
          "3318:     DeoptimizeIf(ne, instr->environment(), at, Operand(zero_reg));",
          "3319:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/v8/src/mips/lithium-mips.cc||deps/v8/src/mips/lithium-mips.cc": [
          "File: deps/v8/src/mips/lithium-mips.cc -> deps/v8/src/mips/lithium-mips.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1941:   LOperand* key = needs_write_barrier",
          "1942:       ? UseTempRegister(instr->key())",
          "1943:       : UseRegisterOrConstantAtStart(instr->key());",
          "1946: }",
          "",
          "[Removed Lines]",
          "1945:   return AssignEnvironment(new LStoreKeyedFastElement(obj, key, val));",
          "",
          "[Added Lines]",
          "1944:   return new LStoreKeyedFastElement(obj, key, val);",
          "",
          "---------------"
        ],
        "deps/v8/src/objects.cc||deps/v8/src/objects.cc": [
          "File: deps/v8/src/objects.cc -> deps/v8/src/objects.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "4352:   } else {",
          "4354:     LookupResult result(heap->isolate());",
          "4356:     if (result.IsProperty()) {",
          "",
          "[Removed Lines]",
          "4355:     LocalLookup(name, &result);",
          "",
          "[Added Lines]",
          "4355:     LocalLookupRealNamedProperty(name, &result);",
          "",
          "---------------"
        ],
        "deps/v8/src/string-search.h||deps/v8/src/string-search.h": [
          "File: deps/v8/src/string-search.h -> deps/v8/src/string-search.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "369:   shift_table[pattern_length] = 1;",
          "370:   suffix_table[pattern_length] = pattern_length + 1;",
          "373:   PatternChar last_char = pattern[pattern_length - 1];",
          "374:   int suffix = pattern_length + 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "372:   if (pattern_length <= start) {",
          "373:     return;",
          "374:   }",
          "",
          "---------------"
        ],
        "deps/v8/src/version.cc||deps/v8/src/version.cc": [
          "File: deps/v8/src/version.cc -> deps/v8/src/version.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #define MAJOR_VERSION     3",
          "36: #define MINOR_VERSION     8",
          "41: #define IS_CANDIDATE_VERSION 0",
          "",
          "[Removed Lines]",
          "37: #define BUILD_NUMBER      2",
          "38: #define PATCH_LEVEL       1",
          "",
          "[Added Lines]",
          "37: #define BUILD_NUMBER      3",
          "38: #define PATCH_LEVEL       0",
          "",
          "---------------"
        ],
        "deps/v8/src/x64/lithium-codegen-x64.cc||deps/v8/src/x64/lithium-codegen-x64.cc": [
          "File: deps/v8/src/x64/lithium-codegen-x64.cc -> deps/v8/src/x64/lithium-codegen-x64.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "3200:   Register elements = ToRegister(instr->object());",
          "3201:   Register key = instr->key()->IsRegister() ? ToRegister(instr->key()) : no_reg;",
          "3211:   if (instr->key()->IsConstantOperand()) {",
          "3212:     ASSERT(!instr->hydrogen()->NeedsWriteBarrier());",
          "",
          "[Removed Lines]",
          "3205:   if (instr->hydrogen()->ValueNeedsSmiCheck()) {",
          "3206:     Condition cc = masm()->CheckSmi(value);",
          "3207:     DeoptimizeIf(NegateCondition(cc), instr->environment());",
          "3208:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/v8/src/x64/lithium-gap-resolver-x64.cc||deps/v8/src/x64/lithium-gap-resolver-x64.cc": [
          "File: deps/v8/src/x64/lithium-gap-resolver-x64.cc -> deps/v8/src/x64/lithium-gap-resolver-x64.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "198:       if (cgen_->IsInteger32Constant(constant_source)) {",
          "199:         __ movl(dst, Immediate(cgen_->ToInteger32(constant_source)));",
          "200:       } else {",
          "202:       }",
          "203:     } else {",
          "204:       ASSERT(destination->IsStackSlot());",
          "",
          "[Removed Lines]",
          "201:         __ Move(dst, cgen_->ToHandle(constant_source));",
          "",
          "[Added Lines]",
          "201:         __ LoadObject(dst, cgen_->ToHandle(constant_source));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "208:         __ movl(dst, Immediate(cgen_->ToInteger32(constant_source)));",
          "209:       } else {",
          "211:       }",
          "212:     }",
          "",
          "[Removed Lines]",
          "210:         __ Move(dst, cgen_->ToHandle(constant_source));",
          "",
          "[Added Lines]",
          "210:         __ LoadObject(kScratchRegister, cgen_->ToHandle(constant_source));",
          "211:         __ movq(dst, kScratchRegister);",
          "",
          "---------------"
        ],
        "deps/v8/src/x64/lithium-x64.cc||deps/v8/src/x64/lithium-x64.cc": [
          "File: deps/v8/src/x64/lithium-x64.cc -> deps/v8/src/x64/lithium-x64.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1929:   LOperand* key = needs_write_barrier",
          "1930:       ? UseTempRegister(instr->key())",
          "1931:       : UseRegisterOrConstantAtStart(instr->key());",
          "1934: }",
          "",
          "[Removed Lines]",
          "1933:   return AssignEnvironment(new LStoreKeyedFastElement(obj, key, val));",
          "",
          "[Added Lines]",
          "1932:   return new LStoreKeyedFastElement(obj, key, val);",
          "",
          "---------------"
        ],
        "deps/v8/src/x64/macro-assembler-x64.h||deps/v8/src/x64/macro-assembler-x64.h": [
          "File: deps/v8/src/x64/macro-assembler-x64.h -> deps/v8/src/x64/macro-assembler-x64.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "789:   void LoadHeapObject(Register result, Handle<HeapObject> object);",
          "790:   void PushHeapObject(Handle<HeapObject> object);",
          "793:   void LoadGlobalCell(Register dst, Handle<JSGlobalPropertyCell> cell);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "792:   void LoadObject(Register result, Handle<Object> object) {",
          "793:     if (object->IsHeapObject()) {",
          "794:       LoadHeapObject(result, Handle<HeapObject>::cast(object));",
          "795:     } else {",
          "796:       Move(result, object);",
          "797:     }",
          "798:   }",
          "",
          "---------------"
        ],
        "deps/v8/test/cctest/test-api.cc||deps/v8/test/cctest/test-api.cc": [
          "File: deps/v8/test/cctest/test-api.cc -> deps/v8/test/cctest/test-api.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1422: }",
          "1424: THREADED_TEST(SwitchFromInterceptorToAccessor) {",
          "1425:   v8::HandleScope scope;",
          "1426:   Handle<FunctionTemplate> parent = FunctionTemplate::New();",
          "1427:   Handle<FunctionTemplate> child = FunctionTemplate::New();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1425:   v8::HandleScope scope;",
          "1426:   Handle<FunctionTemplate> templ = FunctionTemplate::New();",
          "1427:   AddAccessor(templ, v8_str(\"age\"),",
          "1428:               SimpleAccessorGetter, SimpleAccessorSetter);",
          "1429:   AddInterceptor(templ, InterceptorGetter, InterceptorSetter);",
          "1430:   LocalContext env;",
          "1431:   env->Global()->Set(v8_str(\"Obj\"), templ->GetFunction());",
          "1432:   CompileRun(\"var obj = new Obj;\"",
          "1433:              \"function setAge(i){ obj.age = i; };\"",
          "1434:              \"for(var i = 0; i <= 10000; i++) setAge(i);\");",
          "1436:   ExpectInt32(\"obj.interceptor_age\", 9999);",
          "1438:   ExpectInt32(\"obj.accessor_age\", 10000);",
          "1439: }",
          "1441: THREADED_TEST(SwitchFromAccessorToInterceptor) {",
          "1442:   v8::HandleScope scope;",
          "1443:   Handle<FunctionTemplate> templ = FunctionTemplate::New();",
          "1444:   AddAccessor(templ, v8_str(\"age\"),",
          "1445:               SimpleAccessorGetter, SimpleAccessorSetter);",
          "1446:   AddInterceptor(templ, InterceptorGetter, InterceptorSetter);",
          "1447:   LocalContext env;",
          "1448:   env->Global()->Set(v8_str(\"Obj\"), templ->GetFunction());",
          "1449:   CompileRun(\"var obj = new Obj;\"",
          "1450:              \"function setAge(i){ obj.age = i; };\"",
          "1451:              \"for(var i = 20000; i >= 9999; i--) setAge(i);\");",
          "1453:   ExpectInt32(\"obj.accessor_age\", 10000);",
          "1455:   ExpectInt32(\"obj.interceptor_age\", 9999);",
          "1456: }",
          "1458: THREADED_TEST(SwitchFromInterceptorToAccessorWithInheritance) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1440:   ExpectInt32(\"child.accessor_age\", 10000);",
          "1441: }",
          "1444:   v8::HandleScope scope;",
          "1445:   Handle<FunctionTemplate> parent = FunctionTemplate::New();",
          "1446:   Handle<FunctionTemplate> child = FunctionTemplate::New();",
          "",
          "[Removed Lines]",
          "1443: THREADED_TEST(SwitchFromAccessorToInterceptor) {",
          "",
          "[Added Lines]",
          "1477: THREADED_TEST(SwitchFromAccessorToInterceptorWithInheritance) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1459:   ExpectInt32(\"child.interceptor_age\", 9999);",
          "1460: }",
          "1462: THREADED_TEST(SwitchFromInterceptorToProperty) {",
          "1463:   v8::HandleScope scope;",
          "1464:   Handle<FunctionTemplate> parent = FunctionTemplate::New();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1496: THREADED_TEST(SwitchFromInterceptorToJSAccessor) {",
          "1497:   v8::HandleScope scope;",
          "1498:   Handle<FunctionTemplate> templ = FunctionTemplate::New();",
          "1499:   AddInterceptor(templ, InterceptorGetter, InterceptorSetter);",
          "1500:   LocalContext env;",
          "1501:   env->Global()->Set(v8_str(\"Obj\"), templ->GetFunction());",
          "1502:   CompileRun(\"var obj = new Obj;\"",
          "1503:              \"function setter(i) { this.accessor_age = i; };\"",
          "1504:              \"function getter() { return this.accessor_age; };\"",
          "1505:              \"function setAge(i) { obj.age = i; };\"",
          "1506:              \"Object.defineProperty(obj, 'age', { get:getter, set:setter });\"",
          "1507:              \"for(var i = 0; i <= 10000; i++) setAge(i);\");",
          "1509:   ExpectInt32(\"obj.interceptor_age\", 9999);",
          "1511:   ExpectInt32(\"obj.accessor_age\", 10000);",
          "1515:   ExpectInt32(\"obj.age\", 10000);",
          "1516:   ExpectBoolean(\"obj.hasOwnProperty('age')\", true);",
          "1517:   ExpectUndefined(\"Object.getOwnPropertyDescriptor(obj, 'age').value\");",
          "1518: }",
          "1520: THREADED_TEST(SwitchFromJSAccessorToInterceptor) {",
          "1521:   v8::HandleScope scope;",
          "1522:   Handle<FunctionTemplate> templ = FunctionTemplate::New();",
          "1523:   AddInterceptor(templ, InterceptorGetter, InterceptorSetter);",
          "1524:   LocalContext env;",
          "1525:   env->Global()->Set(v8_str(\"Obj\"), templ->GetFunction());",
          "1526:   CompileRun(\"var obj = new Obj;\"",
          "1527:              \"function setter(i) { this.accessor_age = i; };\"",
          "1528:              \"function getter() { return this.accessor_age; };\"",
          "1529:              \"function setAge(i) { obj.age = i; };\"",
          "1530:              \"Object.defineProperty(obj, 'age', { get:getter, set:setter });\"",
          "1531:              \"for(var i = 20000; i >= 9999; i--) setAge(i);\");",
          "1533:   ExpectInt32(\"obj.accessor_age\", 10000);",
          "1535:   ExpectInt32(\"obj.interceptor_age\", 9999);",
          "1539:   ExpectInt32(\"obj.age\", 10000);",
          "1540:   ExpectBoolean(\"obj.hasOwnProperty('age')\", true);",
          "1541:   ExpectUndefined(\"Object.getOwnPropertyDescriptor(obj, 'age').value\");",
          "1542: }",
          "",
          "---------------"
        ],
        "deps/v8/test/mjsunit/regress/regress-108296.js||deps/v8/test/mjsunit/regress/regress-108296.js": [
          "File: deps/v8/test/mjsunit/regress/regress-108296.js -> deps/v8/test/mjsunit/regress/regress-108296.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: function f (k, a, b) {",
          "37:   var x = k ? a.foo : a.foo;",
          "38:   return x.prototype;",
          "39: }",
          "41: var a = { };",
          "44: a.foo = (function () { return function () {}; })();",
          "47: f(true, a, a);",
          "48: f(true, a, a);",
          "49: f(false, a, a);",
          "50: f(false, a, a);",
          "51: %OptimizeFunctionOnNextCall(f);",
          "52: f(true, a, a);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a26bee8fa16bcbdaafdee516288c6f59a43376f5",
      "candidate_info": {
        "commit_hash": "a26bee8fa16bcbdaafdee516288c6f59a43376f5",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/a26bee8fa16bcbdaafdee516288c6f59a43376f5",
        "files": [
          "src/cares_wrap.cc",
          "src/fs_event_wrap.cc",
          "src/node.cc",
          "src/node_buffer.cc",
          "src/node_crypto.cc",
          "src/node_file.cc",
          "src/node_io_watcher.cc",
          "src/node_stat_watcher.cc",
          "src/node_zlib.cc",
          "src/pipe_wrap.cc",
          "src/process_wrap.cc",
          "src/stream_wrap.cc",
          "src/tcp_wrap.cc",
          "src/timer_wrap.cc",
          "src/udp_wrap.cc"
        ],
        "message": "MakeCallback: Consistent symbol usage",
        "before_after_code_files": [
          "src/cares_wrap.cc||src/cares_wrap.cc",
          "src/fs_event_wrap.cc||src/fs_event_wrap.cc",
          "src/node.cc||src/node.cc",
          "src/node_buffer.cc||src/node_buffer.cc",
          "src/node_crypto.cc||src/node_crypto.cc",
          "src/node_file.cc||src/node_file.cc",
          "src/node_io_watcher.cc||src/node_io_watcher.cc",
          "src/node_stat_watcher.cc||src/node_stat_watcher.cc",
          "src/node_zlib.cc||src/node_zlib.cc",
          "src/pipe_wrap.cc||src/pipe_wrap.cc",
          "src/process_wrap.cc||src/process_wrap.cc",
          "src/stream_wrap.cc||src/stream_wrap.cc",
          "src/tcp_wrap.cc||src/tcp_wrap.cc",
          "src/timer_wrap.cc||src/timer_wrap.cc",
          "src/udp_wrap.cc||src/udp_wrap.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/cares_wrap.cc||src/cares_wrap.cc": [
          "File: src/cares_wrap.cc -> src/cares_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "218:   void CallOnComplete(Local<Value> answer) {",
          "219:     HandleScope scope;",
          "220:     Local<Value> argv[2] = { Integer::New(0), answer };",
          "222:   }",
          "224:   void CallOnComplete(Local<Value> answer, Local<Value> family) {",
          "225:     HandleScope scope;",
          "226:     Local<Value> argv[3] = { Integer::New(0), answer, family };",
          "228:   }",
          "230:   void ParseError(int status) {",
          "",
          "[Removed Lines]",
          "221:     MakeCallback(object_, \"oncomplete\", 2, argv);",
          "227:     MakeCallback(object_, \"oncomplete\", 3, argv);",
          "",
          "[Added Lines]",
          "221:     MakeCallback(object_, oncomplete_sym, ARRAY_SIZE(argv), argv);",
          "227:     MakeCallback(object_, oncomplete_sym, ARRAY_SIZE(argv), argv);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "234:     HandleScope scope;",
          "235:     Local<Value> argv[1] = { Integer::New(-1) };",
          "237:   }",
          "",
          "[Removed Lines]",
          "236:     MakeCallback(object_, \"oncomplete\", 1, argv);",
          "",
          "[Added Lines]",
          "236:     MakeCallback(object_, oncomplete_sym, ARRAY_SIZE(argv), argv);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "679:   uv_freeaddrinfo(res);",
          "684:   delete req_wrap;",
          "685: }",
          "",
          "[Removed Lines]",
          "682:   MakeCallback(req_wrap->object_, \"oncomplete\", 1, argv);",
          "",
          "[Added Lines]",
          "682:   MakeCallback(req_wrap->object_, oncomplete_sym, ARRAY_SIZE(argv), argv);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "755:   target->Set(String::NewSymbol(\"AF_INET6\"), Integer::New(AF_INET6));",
          "756:   target->Set(String::NewSymbol(\"AF_UNSPEC\"), Integer::New(AF_UNSPEC));",
          "759: }",
          "",
          "[Removed Lines]",
          "758:   oncomplete_sym = Persistent<String>::New(String::NewSymbol(\"oncomplete\"));",
          "",
          "[Added Lines]",
          "758:   oncomplete_sym = NODE_PSYMBOL(\"oncomplete\");",
          "",
          "---------------"
        ],
        "src/fs_event_wrap.cc||src/fs_event_wrap.cc": [
          "File: src/fs_event_wrap.cc -> src/fs_event_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: namespace node {",
          "31: #define UNWRAP                                                              \\",
          "32:   assert(!args.Holder().IsEmpty());                                         \\",
          "33:   assert(args.Holder()->InternalFieldCount() > 0);                          \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: static Persistent<String> onchange_sym;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "165:     filename ? (Local<Value>)String::New(filename) : Local<Value>::New(v8::Null())",
          "166:   };",
          "169: }",
          "",
          "[Removed Lines]",
          "168:   MakeCallback(wrap->object_, \"onchange\", 3, argv);",
          "",
          "[Added Lines]",
          "170:   if (onchange_sym.IsEmpty()) {",
          "171:     onchange_sym = NODE_PSYMBOL(\"onchange\");",
          "172:   }",
          "174:   MakeCallback(wrap->object_, onchange_sym, ARRAY_SIZE(argv), argv);",
          "",
          "---------------"
        ],
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "232:   if (tick_callback_sym.IsEmpty()) {",
          "236:   }",
          "238:   Local<Value> cb_v = process->Get(tick_callback_sym);",
          "",
          "[Removed Lines]",
          "234:     tick_callback_sym =",
          "235:       Persistent<String>::New(String::NewSymbol(\"_tickCallback\"));",
          "",
          "[Added Lines]",
          "234:     tick_callback_sym = NODE_PSYMBOL(\"_tickCallback\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "978:              int argc,",
          "979:              Handle<Value> argv[]) {",
          "980:   HandleScope scope;",
          "982: }",
          "984: Handle<Value>",
          "",
          "[Removed Lines]",
          "981:   return scope.Close(MakeCallback(object, String::NewSymbol(method), argc, argv));",
          "",
          "[Added Lines]",
          "981:   Handle<Value> ret =",
          "982:     MakeCallback(object, String::NewSymbol(method), argc, argv);",
          "984:   return scope.Close(ret);",
          "",
          "---------------"
        ],
        "src/node_buffer.cc||src/node_buffer.cc": [
          "File: src/node_buffer.cc -> src/node_buffer.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "741:   assert(unbase64('\\n') == -2);",
          "742:   assert(unbase64('\\r') == -2);",
          "747:   Local<FunctionTemplate> t = FunctionTemplate::New(Buffer::New);",
          "748:   constructor_template = Persistent<FunctionTemplate>::New(t);",
          "",
          "[Removed Lines]",
          "744:   length_symbol = Persistent<String>::New(String::NewSymbol(\"length\"));",
          "745:   chars_written_sym = Persistent<String>::New(String::NewSymbol(\"_charsWritten\"));",
          "",
          "[Added Lines]",
          "744:   length_symbol = NODE_PSYMBOL(\"length\");",
          "745:   chars_written_sym = NODE_PSYMBOL(\"_charsWritten\");",
          "",
          "---------------"
        ],
        "src/node_crypto.cc||src/node_crypto.cc": [
          "File: src/node_crypto.cc -> src/node_crypto.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "82: static Persistent<String> name_symbol;",
          "83: static Persistent<String> version_symbol;",
          "84: static Persistent<String> ext_key_usage_symbol;",
          "86: static Persistent<FunctionTemplate> secure_context_constructor;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "85: static Persistent<String> onhandshakestart_sym;",
          "86: static Persistent<String> onhandshakedone_sym;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "865:       Local<Value> ret;",
          "866:       ret = Local<Value>::New(MakeCallback(Context::GetCurrent()->Global(),",
          "870:       if (secure_context_constructor->HasInstance(ret)) {",
          "",
          "[Removed Lines]",
          "867:                                            callback, 1, argv));",
          "",
          "[Added Lines]",
          "869:                                            callback, ARRAY_SIZE(argv), argv));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "971:   if (where & SSL_CB_HANDSHAKE_START) {",
          "972:     HandleScope scope;",
          "973:     Connection* c = static_cast<Connection*>(SSL_get_app_data(ssl));",
          "975:   }",
          "976:   if (where & SSL_CB_HANDSHAKE_DONE) {",
          "977:     HandleScope scope;",
          "978:     Connection* c = static_cast<Connection*>(SSL_get_app_data(ssl));",
          "980:   }",
          "981: }",
          "",
          "[Removed Lines]",
          "974:     MakeCallback(c->handle_, \"onhandshakestart\", 0, NULL);",
          "979:     MakeCallback(c->handle_, \"onhandshakedone\", 0, NULL);",
          "",
          "[Added Lines]",
          "976:     if (onhandshakestart_sym.IsEmpty()) {",
          "977:       onhandshakestart_sym = NODE_PSYMBOL(\"onhandshakestart\");",
          "978:     }",
          "979:     MakeCallback(c->handle_, onhandshakestart_sym, 0, NULL);",
          "984:     if (onhandshakedone_sym.IsEmpty()) {",
          "985:       onhandshakedone_sym = NODE_PSYMBOL(\"onhandshakedone\");",
          "986:     }",
          "987:     MakeCallback(c->handle_, onhandshakedone_sym, 0, NULL);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4118:   MakeCallback(Context::GetCurrent()->Global(),",
          "4119:                request->callback,",
          "4122:   delete[] request->pass;",
          "4123:   delete[] request->salt;",
          "",
          "[Removed Lines]",
          "4120:                2, argv);",
          "",
          "[Added Lines]",
          "4128:                ARRAY_SIZE(argv), argv);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4308:   MakeCallback(Context::GetCurrent()->Global(),",
          "4309:                req->callback_,",
          "4312:   delete req;",
          "4313: }",
          "",
          "[Removed Lines]",
          "4310:                2, argv);",
          "",
          "[Added Lines]",
          "4318:                ARRAY_SIZE(argv), argv);",
          "",
          "---------------"
        ],
        "src/node_file.cc||src/node_file.cc": [
          "File: src/node_file.cc -> src/node_file.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "193:     }",
          "194:   }",
          "198:   uv_fs_req_cleanup(&req_wrap->req_);",
          "199:   delete req_wrap;",
          "",
          "[Removed Lines]",
          "196:   MakeCallback(req_wrap->object_, \"oncomplete\", argc, argv);",
          "",
          "[Added Lines]",
          "196:   if (oncomplete_sym.IsEmpty()) {",
          "197:     oncomplete_sym = NODE_PSYMBOL(\"oncomplete\");",
          "198:   }",
          "199:   MakeCallback(req_wrap->object_, oncomplete_sym, argc, argv);",
          "",
          "---------------"
        ],
        "src/node_io_watcher.cc||src/node_io_watcher.cc": [
          "File: src/node_io_watcher.cc -> src/node_io_watcher.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:   argv[0] = Local<Value>::New(revents & EV_READ ? True() : False());",
          "70:   argv[1] = Local<Value>::New(revents & EV_WRITE ? True() : False());",
          "73: }",
          "",
          "[Removed Lines]",
          "72:   MakeCallback(io->handle_, callback, 2, argv);",
          "",
          "[Added Lines]",
          "72:   MakeCallback(io->handle_, callback, ARRAY_SIZE(argv), argv);",
          "",
          "---------------"
        ],
        "src/node_stat_watcher.cc||src/node_stat_watcher.cc": [
          "File: src/node_stat_watcher.cc -> src/node_stat_watcher.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: using namespace v8;",
          "32: Persistent<FunctionTemplate> StatWatcher::constructor_template;",
          "34: void StatWatcher::Initialize(Handle<Object> target) {",
          "35:   HandleScope scope;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: static Persistent<String> onchange_sym;",
          "34: static Persistent<String> onstop_sym;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "54:   Local<Value> argv[2];",
          "55:   argv[0] = BuildStatsObject(&watcher->attr);",
          "56:   argv[1] = BuildStatsObject(&watcher->prev);",
          "58: }",
          "",
          "[Removed Lines]",
          "57:   MakeCallback(handler->handle_, \"onchange\", 2, argv);",
          "",
          "[Added Lines]",
          "59:   if (onchange_sym.IsEmpty()) {",
          "60:     onchange_sym = NODE_PSYMBOL(\"onchange\");",
          "61:   }",
          "62:   MakeCallback(handler->handle_, onchange_sym, ARRAY_SIZE(argv), argv);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "106: Handle<Value> StatWatcher::Stop(const Arguments& args) {",
          "107:   HandleScope scope;",
          "108:   StatWatcher *handler = ObjectWrap::Unwrap<StatWatcher>(args.Holder());",
          "110:   handler->Stop();",
          "111:   return Undefined();",
          "112: }",
          "",
          "[Removed Lines]",
          "109:   MakeCallback(handler->handle_, \"onstop\", 0, NULL);",
          "",
          "[Added Lines]",
          "114:   if (onstop_sym.IsEmpty()) {",
          "115:     onstop_sym = NODE_PSYMBOL(\"onstop\");",
          "116:   }",
          "117:   MakeCallback(handler->handle_, onstop_sym, 0, NULL);",
          "",
          "---------------"
        ],
        "src/node_zlib.cc||src/node_zlib.cc": [
          "File: src/node_zlib.cc -> src/node_zlib.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "211:     assert(ctx->handle_->Get(callback_sym)->IsFunction() &&",
          "212:            \"Invalid callback\");",
          "213:     Local<Value> args[2] = { avail_in, avail_out };",
          "216:     ctx->Unref();",
          "217:   }",
          "",
          "[Removed Lines]",
          "214:     MakeCallback(ctx->handle_, \"callback\", 2, args);",
          "",
          "[Added Lines]",
          "214:     MakeCallback(ctx->handle_, callback_sym, ARRAY_SIZE(args), args);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "229:     HandleScope scope;",
          "230:     Local<Value> args[2] = { String::New(msg),",
          "231:                              Local<Value>::New(Number::New(ctx->err_)) };",
          "235:     ctx->Unref();",
          "",
          "[Removed Lines]",
          "232:     MakeCallback(ctx->handle_, \"onerror\", ARRAY_SIZE(args), args);",
          "",
          "[Added Lines]",
          "232:     MakeCallback(ctx->handle_, onerror_sym, ARRAY_SIZE(args), args);",
          "",
          "---------------"
        ],
        "src/pipe_wrap.cc||src/pipe_wrap.cc": [
          "File: src/pipe_wrap.cc -> src/pipe_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "58: Persistent<Function> pipeConstructor;",
          "62: typedef class ReqWrap<uv_connect_t> ConnectWrap;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60: static Persistent<String> onconnection_sym;",
          "61: static Persistent<String> oncomplete_sym;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "217:   Local<Value> argv[1] = { client_obj };",
          "219: }",
          "",
          "[Removed Lines]",
          "218:   MakeCallback(wrap->object_, \"onconnection\", 1, argv);",
          "",
          "[Added Lines]",
          "221:   if (onconnection_sym.IsEmpty()) {",
          "222:     onconnection_sym = NODE_PSYMBOL(\"onconnection\");",
          "223:   }",
          "224:   MakeCallback(wrap->object_, onconnection_sym, ARRAY_SIZE(argv), argv);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "247:     Local<Value>::New(Boolean::New(writable))",
          "248:   };",
          "252:   delete req_wrap;",
          "253: }",
          "",
          "[Removed Lines]",
          "250:   MakeCallback(req_wrap->object_, \"oncomplete\", 5, argv);",
          "",
          "[Added Lines]",
          "256:   if (oncomplete_sym.IsEmpty()) {",
          "257:     oncomplete_sym = NODE_PSYMBOL(\"oncomplete\");",
          "258:   }",
          "259:   MakeCallback(req_wrap->object_, oncomplete_sym, ARRAY_SIZE(argv), argv);",
          "",
          "---------------"
        ],
        "src/process_wrap.cc||src/process_wrap.cc": [
          "File: src/process_wrap.cc -> src/process_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: using v8::Arguments;",
          "55: using v8::Integer;",
          "58: class ProcessWrap : public HandleWrap {",
          "59:  public:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57: static Persistent<String> onexit_sym;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "223:       String::New(signo_string(term_signal))",
          "224:     };",
          "227:   }",
          "229:   uv_process_t process_;",
          "",
          "[Removed Lines]",
          "226:     MakeCallback(wrap->object_, \"onexit\", 2, argv);",
          "",
          "[Added Lines]",
          "227:     if (onexit_sym.IsEmpty()) {",
          "228:       onexit_sym = NODE_PSYMBOL(\"onexit\");",
          "229:     }",
          "230:     MakeCallback(wrap->object_, onexit_sym, ARRAY_SIZE(argv), argv);",
          "",
          "---------------"
        ],
        "src/stream_wrap.cc||src/stream_wrap.cc": [
          "File: src/stream_wrap.cc -> src/stream_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "70: static Persistent<String> buffer_sym;",
          "71: static Persistent<String> write_queue_size_sym;",
          "72: static SlabAllocator slab_allocator(SLAB_SIZE);",
          "73: static bool initialized;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72: static Persistent<String> onread_sym;",
          "73: static Persistent<String> oncomplete_sym;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:   HandleWrap::Initialize(target);",
          "87: }",
          "",
          "[Removed Lines]",
          "84:   buffer_sym = Persistent<String>::New(String::NewSymbol(\"buffer\"));",
          "85:   write_queue_size_sym =",
          "86:     Persistent<String>::New(String::NewSymbol(\"writeQueueSize\"));",
          "",
          "[Added Lines]",
          "86:   buffer_sym = NODE_PSYMBOL(\"buffer\");",
          "87:   write_queue_size_sym = NODE_PSYMBOL(\"writeQueueSize\");",
          "88:   onread_sym = NODE_PSYMBOL(\"onread\");",
          "89:   oncomplete_sym = NODE_PSYMBOL(\"oncomplete\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "170:     }",
          "172:     SetErrno(uv_last_error(uv_default_loop()));",
          "174:     return;",
          "175:   }",
          "",
          "[Removed Lines]",
          "173:     MakeCallback(wrap->object_, \"onread\", 0, NULL);",
          "",
          "[Added Lines]",
          "176:     MakeCallback(wrap->object_, onread_sym, 0, NULL);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "208:     argc++;",
          "209:   }",
          "212: }",
          "",
          "[Removed Lines]",
          "211:   MakeCallback(wrap->object_, \"onread\", argc, argv);",
          "",
          "[Added Lines]",
          "214:   MakeCallback(wrap->object_, onread_sym, argc, argv);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "313:     req_wrap->object_->GetHiddenValue(buffer_sym),",
          "314:   };",
          "318:   delete req_wrap;",
          "319: }",
          "",
          "[Removed Lines]",
          "316:   MakeCallback(req_wrap->object_, \"oncomplete\", 4, argv);",
          "",
          "[Added Lines]",
          "319:   MakeCallback(req_wrap->object_, oncomplete_sym, ARRAY_SIZE(argv), argv);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "360:     Local<Value>::New(req_wrap->object_)",
          "361:   };",
          "365:   delete req_wrap;",
          "366: }",
          "",
          "[Removed Lines]",
          "363:   MakeCallback(req_wrap->object_, \"oncomplete\", 3, argv);",
          "",
          "[Added Lines]",
          "366:   MakeCallback(req_wrap->object_, oncomplete_sym, ARRAY_SIZE(argv), argv);",
          "",
          "---------------"
        ],
        "src/tcp_wrap.cc||src/tcp_wrap.cc": [
          "File: src/tcp_wrap.cc -> src/tcp_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "77: static Persistent<String> family_symbol;",
          "78: static Persistent<String> address_symbol;",
          "79: static Persistent<String> port_symbol;",
          "82: typedef class ReqWrap<uv_connect_t> ConnectWrap;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80: static Persistent<String> oncomplete_sym;",
          "81: static Persistent<String> onconnection_sym;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "131:   family_symbol = NODE_PSYMBOL(\"family\");",
          "132:   address_symbol = NODE_PSYMBOL(\"address\");",
          "133:   port_symbol = NODE_PSYMBOL(\"port\");",
          "135:   target->Set(String::NewSymbol(\"TCP\"), tcpConstructor);",
          "136: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "136:   onconnection_sym = NODE_PSYMBOL(\"onconnection\");",
          "137:   oncomplete_sym = NODE_PSYMBOL(\"oncomplete\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "380:     argv[0] = Local<Value>::New(Null());",
          "381:   }",
          "384: }",
          "",
          "[Removed Lines]",
          "383:   MakeCallback(wrap->object_, \"onconnection\", 1, argv);",
          "",
          "[Added Lines]",
          "387:   MakeCallback(wrap->object_, onconnection_sym, ARRAY_SIZE(argv), argv);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "406:     Local<Value>::New(v8::True())",
          "407:   };",
          "411:   delete req_wrap;",
          "412: }",
          "",
          "[Removed Lines]",
          "409:   MakeCallback(req_wrap->object_, \"oncomplete\", 5, argv);",
          "",
          "[Added Lines]",
          "413:   MakeCallback(req_wrap->object_, oncomplete_sym, ARRAY_SIZE(argv), argv);",
          "",
          "---------------"
        ],
        "src/timer_wrap.cc||src/timer_wrap.cc": [
          "File: src/timer_wrap.cc -> src/timer_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: using v8::Arguments;",
          "51: using v8::Integer;",
          "54: class TimerWrap : public HandleWrap {",
          "55:  public:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53: static Persistent<String> ontimeout_sym;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:     NODE_SET_PROTOTYPE_METHOD(constructor, \"getRepeat\", GetRepeat);",
          "71:     NODE_SET_PROTOTYPE_METHOD(constructor, \"again\", Again);",
          "73:     target->Set(String::NewSymbol(\"Timer\"), constructor->GetFunction());",
          "74:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74:     ontimeout_sym = NODE_PSYMBOL(\"ontimeout\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "200:     wrap->StateChange();",
          "202:     Local<Value> argv[1] = { Integer::New(status) };",
          "204:   }",
          "206:   uv_timer_t handle_;",
          "",
          "[Removed Lines]",
          "203:     MakeCallback(wrap->object_, \"ontimeout\", 1, argv);",
          "",
          "[Added Lines]",
          "206:     MakeCallback(wrap->object_, ontimeout_sym, ARRAY_SIZE(argv), argv);",
          "",
          "---------------"
        ],
        "src/udp_wrap.cc||src/udp_wrap.cc": [
          "File: src/udp_wrap.cc -> src/udp_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "68: static Persistent<String> address_symbol;",
          "69: static Persistent<String> port_symbol;",
          "70: static Persistent<String> buffer_sym;",
          "71: static SlabAllocator slab_allocator(SLAB_SIZE);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71: static Persistent<String> oncomplete_sym;",
          "72: static Persistent<String> onmessage_sym;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "130:   buffer_sym = NODE_PSYMBOL(\"buffer\");",
          "131:   port_symbol = NODE_PSYMBOL(\"port\");",
          "132:   address_symbol = NODE_PSYMBOL(\"address\");",
          "134:   Local<FunctionTemplate> t = FunctionTemplate::New(New);",
          "135:   t->InstanceTemplate()->SetInternalFieldCount(1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "135:   oncomplete_sym = NODE_PSYMBOL(\"oncomplete\");",
          "136:   onmessage_sym = NODE_PSYMBOL(\"onmessage\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "394:     req_wrap->object_->GetHiddenValue(buffer_sym),",
          "395:   };",
          "398:   delete req_wrap;",
          "399: }",
          "",
          "[Removed Lines]",
          "397:   MakeCallback(req_wrap->object_, \"oncomplete\", 4, argv);",
          "",
          "[Added Lines]",
          "401:   MakeCallback(req_wrap->object_, oncomplete_sym, ARRAY_SIZE(argv), argv);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "422:   if (nread < 0) {",
          "423:     Local<Value> argv[] = { Local<Object>::New(wrap->object_) };",
          "424:     SetErrno(uv_last_error(uv_default_loop()));",
          "426:     return;",
          "427:   }",
          "",
          "[Removed Lines]",
          "425:     MakeCallback(wrap->object_, \"onmessage\", ARRAY_SIZE(argv), argv);",
          "",
          "[Added Lines]",
          "429:     MakeCallback(wrap->object_, onmessage_sym, ARRAY_SIZE(argv), argv);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "433:     Integer::NewFromUnsigned(nread),",
          "434:     AddressToJS(addr)",
          "435:   };",
          "437: }",
          "",
          "[Removed Lines]",
          "436:   MakeCallback(wrap->object_, \"onmessage\", ARRAY_SIZE(argv), argv);",
          "",
          "[Added Lines]",
          "440:   MakeCallback(wrap->object_, onmessage_sym, ARRAY_SIZE(argv), argv);",
          "",
          "---------------"
        ]
      }
    }
  ]
}