{
  "cve_id": "CVE-2016-5702",
  "cve_desc": "phpMyAdmin 4.6.x before 4.6.3, when the environment lacks a PHP_SELF value, allows remote attackers to conduct cookie-attribute injection attacks via a crafted URI.",
  "repo": "phpmyadmin/phpmyadmin",
  "patch_hash": "27caf5b46bd0890e576fea7bd7b166a0639fdf68",
  "patch_info": {
    "commit_hash": "27caf5b46bd0890e576fea7bd7b166a0639fdf68",
    "repo": "phpmyadmin/phpmyadmin",
    "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/27caf5b46bd0890e576fea7bd7b166a0639fdf68",
    "files": [
      "libraries/Config.php",
      "libraries/core.lib.php",
      "test/libraries/core/PMA_cleanupPathInfo_test.php"
    ],
    "message": "Improve detection of script name\n\nIn case PHP_SELF was not set by server, we used REQUEST_URI, which might\nembed PATH_INFO as well. However we really need to know the path without\nit, so let's strip it as well.\n\nSigned-off-by: Michal \u010ciha\u0159 <michal@cihar.com>",
    "before_after_code_files": [
      "libraries/Config.php||libraries/Config.php",
      "libraries/core.lib.php||libraries/core.lib.php",
      "test/libraries/core/PMA_cleanupPathInfo_test.php||test/libraries/core/PMA_cleanupPathInfo_test.php"
    ]
  },
  "patch_diff": {
    "libraries/Config.php||libraries/Config.php": [
      "File: libraries/Config.php -> libraries/Config.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "1393:             return $cookie_path;",
      "1394:         }",
      "1402:         $parts = explode(",
      "1403:             '/',",
      "",
      "[Removed Lines]",
      "1396:         if (isset($GLOBALS['PMA_PHP_SELF'])) {",
      "1397:             $parsed_url = parse_url($GLOBALS['PMA_PHP_SELF']);",
      "1398:         } else {",
      "1399:             $parsed_url = parse_url(PMA_getenv('REQUEST_URI'));",
      "1400:         }",
      "",
      "[Added Lines]",
      "1396:         $parsed_url = parse_url($GLOBALS['PMA_PHP_SELF']);",
      "",
      "---------------"
    ],
    "libraries/core.lib.php||libraries/core.lib.php": [
      "File: libraries/core.lib.php -> libraries/core.lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "941: function PMA_cleanupPathInfo()",
      "942: {",
      "945:     $PMA_PHP_SELF = PMA_getenv('PHP_SELF');",
      "946:     $_PATH_INFO = PMA_getenv('PATH_INFO');",
      "947:     if (! empty($_PATH_INFO) && ! empty($PMA_PHP_SELF)) {",
      "948:         $path_info_pos = mb_strrpos($PMA_PHP_SELF, $_PATH_INFO);",
      "952:         }",
      "953:     }",
      "954:     $PMA_PHP_SELF = htmlspecialchars($PMA_PHP_SELF);",
      "",
      "[Removed Lines]",
      "943:     global $PMA_PHP_SELF, $_PATH_INFO;",
      "949:         $pathLength = $path_info_pos + mb_strlen($_PATH_INFO);",
      "950:         if ($pathLength === mb_strlen($PMA_PHP_SELF)) {",
      "951:             $PMA_PHP_SELF = mb_substr($PMA_PHP_SELF, 0, $path_info_pos);",
      "",
      "[Added Lines]",
      "943:     global $PMA_PHP_SELF;",
      "946:     if (empty($PMA_PHP_SELF)) {",
      "947:         $PMA_PHP_SELF = urldecode(PMA_getenv('REQUEST_URI'));",
      "948:     }",
      "952:         if ($path_info_pos !== false) {",
      "953:             $path_info_part = mb_substr($PMA_PHP_SELF, $path_info_pos, mb_strlen($_PATH_INFO));",
      "954:             if ($path_info_part == $_PATH_INFO) {",
      "955:                 $PMA_PHP_SELF = mb_substr($PMA_PHP_SELF, 0, $path_info_pos);",
      "956:             }",
      "",
      "---------------"
    ],
    "test/libraries/core/PMA_cleanupPathInfo_test.php||test/libraries/core/PMA_cleanupPathInfo_test.php": [
      "File: test/libraries/core/PMA_cleanupPathInfo_test.php -> test/libraries/core/PMA_cleanupPathInfo_test.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?php",
      "23: class PMA_CleanupPathInfo_Test extends PHPUnit_Framework_TestCase",
      "24: {",
      "37:     public function testPahtInfo($php_self, $request, $path_info, $expected)",
      "38:     {",
      "39:         $_SERVER['PHP_SELF'] = $php_self;",
      "40:         $_SERVER['REQUEST_URI'] = $request;",
      "41:         $_SERVER['PATH_INFO'] = $path_info;",
      "42:         PMA_cleanupPathInfo();",
      "43:         $this->assertEquals(",
      "44:             $expected,",
      "45:             $GLOBALS['PMA_PHP_SELF']",
      "46:         );",
      "47:     }",
      "54:     public function pathsProvider()",
      "55:     {",
      "56:         return array(",
      "57:             array(",
      "58:                 '/phpmyadmin/index.php/; cookieinj=value/',",
      "59:                 '/phpmyadmin/index.php/;%20cookieinj=value///',",
      "60:                 '/; cookieinj=value/',",
      "61:                 '/phpmyadmin/index.php'",
      "62:             ),",
      "63:             array(",
      "64:                 '',",
      "65:                 '/phpmyadmin/index.php/;%20cookieinj=value///',",
      "66:                 '/; cookieinj=value/',",
      "67:                 '/phpmyadmin/index.php'",
      "68:             ),",
      "69:             array(",
      "70:                 '/phpmyadmin/index.php',",
      "71:                 '/phpmyadmin/index.php',",
      "72:                 '',",
      "73:                 '/phpmyadmin/index.php'",
      "74:             ),",
      "75:             array(",
      "76:                 '',",
      "77:                 '/phpmyadmin/index.php',",
      "78:                 '',",
      "79:                 '/phpmyadmin/index.php'",
      "80:             ),",
      "81:         );",
      "82:     }",
      "83: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c4cdd16342b69ae4edf5652190f39ec8508ba536",
      "candidate_info": {
        "commit_hash": "c4cdd16342b69ae4edf5652190f39ec8508ba536",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/c4cdd16342b69ae4edf5652190f39ec8508ba536",
        "files": [
          "libraries/common.inc.php",
          "libraries/core.lib.php"
        ],
        "message": "Move PATH_INFO cleanup to function\n\nIssue #11731\n\nSigned-off-by: Michal \u010ciha\u0159 <michal@cihar.com>",
        "before_after_code_files": [
          "libraries/common.inc.php||libraries/common.inc.php",
          "libraries/core.lib.php||libraries/core.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/core.lib.php||libraries/core.lib.php"
          ],
          "candidate": [
            "libraries/core.lib.php||libraries/core.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/common.inc.php||libraries/common.inc.php": [
          "File: libraries/common.inc.php -> libraries/common.inc.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "127: $PMA_PHP_SELF = PMA_getenv('PHP_SELF');",
          "128: $_PATH_INFO = PMA_getenv('PATH_INFO');",
          "129: if (! empty($_PATH_INFO) && ! empty($PMA_PHP_SELF)) {",
          "130:     $path_info_pos = /*overload*/mb_strrpos($PMA_PHP_SELF, $_PATH_INFO);",
          "131:     $pathLength = $path_info_pos + /*overload*/mb_strlen($_PATH_INFO);",
          "132:     if ($pathLength === /*overload*/mb_strlen($PMA_PHP_SELF)) {",
          "133:         $PMA_PHP_SELF = /*overload*/mb_substr($PMA_PHP_SELF, 0, $path_info_pos);",
          "134:     }",
          "135: }",
          "136: $PMA_PHP_SELF = htmlspecialchars($PMA_PHP_SELF);",
          "",
          "[Added Lines]",
          "123: PMA_cleanupPathInfo();",
          "",
          "---------------"
        ],
        "libraries/core.lib.php||libraries/core.lib.php": [
          "File: libraries/core.lib.php -> libraries/core.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "898:         $GLOBALS['url_params'][$param] = $GLOBALS[$param];",
          "899:     }",
          "900: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "908: function PMA_cleanupPathInfo()",
          "909: {",
          "910:     global $PMA_PHP_SELF, $_PATH_INFO;",
          "912:     $PMA_PHP_SELF = PMA_getenv('PHP_SELF');",
          "913:     $_PATH_INFO = PMA_getenv('PATH_INFO');",
          "914:     if (! empty($_PATH_INFO) && ! empty($PMA_PHP_SELF)) {",
          "915:         $path_info_pos = /*overload*/mb_strrpos($PMA_PHP_SELF, $_PATH_INFO);",
          "916:         $pathLength = $path_info_pos + /*overload*/mb_strlen($_PATH_INFO);",
          "917:         if ($pathLength === /*overload*/mb_strlen($PMA_PHP_SELF)) {",
          "918:             $PMA_PHP_SELF = /*overload*/mb_substr($PMA_PHP_SELF, 0, $path_info_pos);",
          "919:         }",
          "920:     }",
          "921:     $PMA_PHP_SELF = htmlspecialchars($PMA_PHP_SELF);",
          "922: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3b6ed1f9ecaab86c488d106b1588d7683a6d53ef",
      "candidate_info": {
        "commit_hash": "3b6ed1f9ecaab86c488d106b1588d7683a6d53ef",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/3b6ed1f9ecaab86c488d106b1588d7683a6d53ef",
        "files": [
          "libraries/core.lib.php",
          "test/libraries/core/PMA_cleanupPathInfo_test.php"
        ],
        "message": "Improve PHP path cleanup\n\n- properly handle situation when query string contains PATH_INFO\n- cleanup path from any relative parts\n\nSigned-off-by: Michal \u010ciha\u0159 <michal@cihar.com>",
        "before_after_code_files": [
          "libraries/core.lib.php||libraries/core.lib.php",
          "test/libraries/core/PMA_cleanupPathInfo_test.php||test/libraries/core/PMA_cleanupPathInfo_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/core.lib.php||libraries/core.lib.php",
            "test/libraries/core/PMA_cleanupPathInfo_test.php||test/libraries/core/PMA_cleanupPathInfo_test.php"
          ],
          "candidate": [
            "libraries/core.lib.php||libraries/core.lib.php",
            "test/libraries/core/PMA_cleanupPathInfo_test.php||test/libraries/core/PMA_cleanupPathInfo_test.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/core.lib.php||libraries/core.lib.php": [
          "File: libraries/core.lib.php -> libraries/core.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "946:     }",
          "947:     $_PATH_INFO = PMA_getenv('PATH_INFO');",
          "948:     if (! empty($_PATH_INFO) && ! empty($PMA_PHP_SELF)) {",
          "949:         $path_info_pos = mb_strrpos($PMA_PHP_SELF, $_PATH_INFO);",
          "950:         if ($path_info_pos !== false) {",
          "951:             $path_info_part = mb_substr($PMA_PHP_SELF, $path_info_pos, mb_strlen($_PATH_INFO));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "949:         $question_pos = mb_strpos($PMA_PHP_SELF, '?');",
          "950:         if ($question_pos != false) {",
          "951:             $PMA_PHP_SELF = mb_substr($PMA_PHP_SELF, 0, $question_pos);",
          "952:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "954:             }",
          "955:         }",
          "956:     }",
          "958: }",
          "",
          "[Removed Lines]",
          "957:     $PMA_PHP_SELF = htmlspecialchars($PMA_PHP_SELF);",
          "",
          "[Added Lines]",
          "962:     $path = [];",
          "963:     foreach(explode('/', $PMA_PHP_SELF) as $part) {",
          "965:         if (empty($part) || $part === '.') continue;",
          "967:         if ($part !== '..') {",
          "969:             array_push($path, $part);",
          "970:         } else if (count($path) > 0) {",
          "972:             array_pop($path);",
          "973:         }",
          "976:     }",
          "978:     $PMA_PHP_SELF = htmlspecialchars('/' . join('/', $path));",
          "",
          "---------------"
        ],
        "test/libraries/core/PMA_cleanupPathInfo_test.php||test/libraries/core/PMA_cleanupPathInfo_test.php": [
          "File: test/libraries/core/PMA_cleanupPathInfo_test.php -> test/libraries/core/PMA_cleanupPathInfo_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:                 '/; cookieinj=value/',",
          "67:                 '/phpmyadmin/index.php'",
          "68:             ),",
          "69:             array(",
          "70:                 '/phpmyadmin/index.php',",
          "71:                 '/phpmyadmin/index.php',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "69:             array(",
          "70:                 '',",
          "71:                 '//example.com/../phpmyadmin/index.php',",
          "72:                 '',",
          "73:                 '/phpmyadmin/index.php'",
          "74:             ),",
          "75:             array(",
          "76:                 '',",
          "77:                 '//example.com/../../.././phpmyadmin/index.php',",
          "78:                 '',",
          "79:                 '/phpmyadmin/index.php'",
          "80:             ),",
          "81:             array(",
          "82:                 '',",
          "83:                 '/page.php/malicouspathinfo?malicouspathinfo',",
          "84:                 'malicouspathinfo',",
          "85:                 '/page.php'",
          "86:             ),",
          "87:             array(",
          "88:                 '/phpmyadmin/./index.php',",
          "89:                 '/phpmyadmin/./index.php',",
          "90:                 '',",
          "91:                 '/phpmyadmin/index.php'",
          "92:             ),",
          "",
          "---------------"
        ]
      }
    }
  ]
}