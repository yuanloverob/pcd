{
  "cve_id": "CVE-2018-18225",
  "cve_desc": "In Wireshark 2.6.0 to 2.6.3, the CoAP dissector could crash. This was addressed in epan/dissectors/packet-coap.c by ensuring that the piv length is correctly computed.",
  "repo": "wireshark/wireshark",
  "patch_hash": "5a2aafef7a8ad4b3917823133c2e3534951fc4d3",
  "patch_info": {
    "commit_hash": "5a2aafef7a8ad4b3917823133c2e3534951fc4d3",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/5a2aafef7a8ad4b3917823133c2e3534951fc4d3",
    "files": [
      "epan/dissectors/packet-coap.c"
    ],
    "message": "coap: ensure that piv_len matches piv\n\nIn frame 121, piv_len was 1 while piv was NULL. Ensure that both piv and\npiv_len are reset to avoid this. Adjust another check to ensure that piv\nand piv_len are in sync (probably not necessary, but it seems the\nintention).\n\nBug: 15172\nChange-Id: If8636d32f3273d6707749c807bd7d676ca9ab96d\nFixes: v2.5.2rc0-9-g830ea5731a (\"CoAP: Hooks to OSCORE\")\nReviewed-on: https://code.wireshark.org/review/30100\nPetri-Dish: Peter Wu <peter@lekensteyn.nl>\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c": [
      "File: epan/dissectors/packet-coap.c -> epan/dissectors/packet-coap.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "451:  coinfo->object_security = TRUE;",
      "453:  coinfo->oscore_info->piv = NULL;",
      "454:  coinfo->oscore_info->kid_context = NULL;",
      "455:  coinfo->oscore_info->kid = NULL;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "454:  coinfo->oscore_info->piv_len = 0;",
      "456:  coinfo->oscore_info->kid_context_len = 0;",
      "458:  coinfo->oscore_info->kid_len = 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1149:        coinfo->oscore_info->piv_in_response = TRUE;",
      "1150:        coap_trans->oscore_info->piv_in_response = TRUE;",
      "1156:        coinfo->oscore_info->piv_len = coap_trans->oscore_info->piv_len;",
      "1157:       }",
      "1158:       coinfo->oscore_info->response = TRUE;",
      "",
      "[Removed Lines]",
      "1151:       } else {",
      "1152:        if (coap_trans->oscore_info->piv) {",
      "1154:         coinfo->oscore_info->piv = (guint8 *) wmem_memdup(wmem_packet_scope(), coap_trans->oscore_info->piv, coap_trans->oscore_info->piv_len);",
      "1155:        }",
      "",
      "[Added Lines]",
      "1154:       } else if (coap_trans->oscore_info->piv_len > 0) {",
      "1156:        coinfo->oscore_info->piv = (guint8 *) wmem_memdup(wmem_packet_scope(), coap_trans->oscore_info->piv, coap_trans->oscore_info->piv_len);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b2bbd9fdf209911d94b23cc33f4daccbceb7fa8a",
      "candidate_info": {
        "commit_hash": "b2bbd9fdf209911d94b23cc33f4daccbceb7fa8a",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/b2bbd9fdf209911d94b23cc33f4daccbceb7fa8a",
        "files": [
          "epan/dissectors/packet-coap.c"
        ],
        "message": "coap: ensure that piv_len matches piv\n\nIn frame 121, piv_len was 1 while piv was NULL. Ensure that both piv and\npiv_len are reset to avoid this. Adjust another check to ensure that piv\nand piv_len are in sync (probably not necessary, but it seems the\nintention).\n\nBug: 15172\nChange-Id: If8636d32f3273d6707749c807bd7d676ca9ab96d\nFixes: v2.5.2rc0-9-g830ea5731a (\"CoAP: Hooks to OSCORE\")\nReviewed-on: https://code.wireshark.org/review/30100\nPetri-Dish: Peter Wu <peter@lekensteyn.nl>\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 5a2aafef7a8ad4b3917823133c2e3534951fc4d3)\nReviewed-on: https://code.wireshark.org/review/30111\nReviewed-by: Peter Wu <peter@lekensteyn.nl>",
        "before_after_code_files": [
          "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c"
          ],
          "candidate": [
            "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c": [
          "File: epan/dissectors/packet-coap.c -> epan/dissectors/packet-coap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "450:  coinfo->object_security = TRUE;",
          "452:  coinfo->oscore_info->piv = NULL;",
          "453:  coinfo->oscore_info->kid_context = NULL;",
          "454:  coinfo->oscore_info->kid = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "453:  coinfo->oscore_info->piv_len = 0;",
          "455:  coinfo->oscore_info->kid_context_len = 0;",
          "457:  coinfo->oscore_info->kid_len = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1145:        coinfo->oscore_info->piv_in_response = TRUE;",
          "1146:        coap_trans->oscore_info->piv_in_response = TRUE;",
          "1152:        coinfo->oscore_info->piv_len = coap_trans->oscore_info->piv_len;",
          "1153:       }",
          "1154:       coinfo->oscore_info->response = TRUE;",
          "",
          "[Removed Lines]",
          "1147:       } else {",
          "1148:        if (coap_trans->oscore_info->piv) {",
          "1150:         coinfo->oscore_info->piv = (guint8 *) wmem_memdup(wmem_packet_scope(), coap_trans->oscore_info->piv, coap_trans->oscore_info->piv_len);",
          "1151:        }",
          "",
          "[Added Lines]",
          "1150:       } else if (coap_trans->oscore_info->piv_len > 0) {",
          "1152:        coinfo->oscore_info->piv = (guint8 *) wmem_memdup(wmem_packet_scope(), coap_trans->oscore_info->piv, coap_trans->oscore_info->piv_len);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "093efd9c30cf293febb35a92000e50813b6811e4",
      "candidate_info": {
        "commit_hash": "093efd9c30cf293febb35a92000e50813b6811e4",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/093efd9c30cf293febb35a92000e50813b6811e4",
        "files": [
          "epan/dissectors/packet-coap.c",
          "epan/dissectors/packet-oscore.c",
          "epan/dissectors/packet-oscore.h"
        ],
        "message": "OSCORE: Decrypt responses and dissect plaintext with CoAP functions\n\nAdd support for decrypting Observe responses with Partial IV within the\nresponse. CoAP prioritizes the Partial IV from the response if present,\nif not it passes Partial IV from the corresponding request.\n\nBug: 14417\nChange-Id: Icb0f782de67bd0507db4f1f2a2ea90c72a4b6f0a\nReviewed-on: https://code.wireshark.org/review/25483\nPetri-Dish: Peter Wu <peter@lekensteyn.nl>\nReviewed-by: Peter Wu <peter@lekensteyn.nl>",
        "before_after_code_files": [
          "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c",
          "epan/dissectors/packet-oscore.c||epan/dissectors/packet-oscore.c",
          "epan/dissectors/packet-oscore.h||epan/dissectors/packet-oscore.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c"
          ],
          "candidate": [
            "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c": [
          "File: epan/dissectors/packet-coap.c -> epan/dissectors/packet-coap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "969:         payload_tvb, pinfo, parent_tree, NULL);",
          "971:  if (coinfo->object_security && !oscore) {",
          "974:   proto_item_set_text(payload_item, \"Encrypted OSCORE Data\");",
          "975:   call_dissector_with_data(oscore_handle, payload_tvb, pinfo, parent_tree, coinfo->oscore_info);",
          "976:  }",
          "",
          "[Removed Lines]",
          "973:   coinfo->oscore_info->response = ((code_class >= 2) && (code_class <= 5));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1130:      }",
          "1131:      if (coap_trans->oscore_info) {",
          "1134:       if (coap_trans->oscore_info->kid) {",
          "1135:        coinfo->oscore_info->kid = (guint8 *) wmem_memdup(wmem_packet_scope(), coap_trans->oscore_info->kid, coap_trans->oscore_info->kid_len);",
          "1136:       }",
          "1137:       if (coap_trans->oscore_info->kid_context) {",
          "1138:        coinfo->oscore_info->kid_context = (guint8 *) wmem_memdup(wmem_packet_scope(), coap_trans->oscore_info->kid_context, coap_trans->oscore_info->kid_context_len);",
          "1139:       }",
          "1142:       }",
          "1143:      }",
          "1144:     }",
          "1145:    }",
          "",
          "[Removed Lines]",
          "1133:       coinfo->oscore_info = (oscore_info_t *) wmem_memdup(wmem_packet_scope(), coap_trans->oscore_info, sizeof(oscore_info_t));",
          "1140:       if (coap_trans->oscore_info->piv) {",
          "1141:        coinfo->oscore_info->piv = (guint8 *) wmem_memdup(wmem_packet_scope(), coap_trans->oscore_info->piv, coap_trans->oscore_info->piv_len);",
          "",
          "[Added Lines]",
          "1134:       coinfo->oscore_info->kid_len = coap_trans->oscore_info->kid_len;",
          "1139:       coinfo->oscore_info->kid_context_len = coap_trans->oscore_info->kid_context_len;",
          "1142:       if (coinfo->oscore_info->piv_len > 0) {",
          "1144:        coinfo->oscore_info->piv_in_response = TRUE;",
          "1145:        coap_trans->oscore_info->piv_in_response = TRUE;",
          "1146:       } else {",
          "1147:        if (coap_trans->oscore_info->piv) {",
          "1149:         coinfo->oscore_info->piv = (guint8 *) wmem_memdup(wmem_packet_scope(), coap_trans->oscore_info->piv, coap_trans->oscore_info->piv_len);",
          "1150:        }",
          "1151:        coinfo->oscore_info->piv_len = coap_trans->oscore_info->piv_len;",
          "1153:       coinfo->oscore_info->response = TRUE;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1171:     it = proto_tree_add_time(coap_tree, hf_coap_response_time, tvb, 0, 0, &ns);",
          "1172:     PROTO_ITEM_SET_GENERATED(it);",
          "1173:    }",
          "1175:     proto_item *it;",
          "1178:     it = proto_tree_add_bytes(coap_tree, hf_coap_oscore_kid, tvb, 0, coap_trans->oscore_info->kid_len, coap_trans->oscore_info->kid);",
          "1179:     PROTO_ITEM_SET_GENERATED(it);",
          "1181:     it = proto_tree_add_bytes(coap_tree, hf_coap_oscore_kid_context, tvb, 0, coap_trans->oscore_info->kid_context_len, coap_trans->oscore_info->kid_context);",
          "1182:     PROTO_ITEM_SET_GENERATED(it);",
          "1185:     PROTO_ITEM_SET_GENERATED(it);",
          "1186:    }",
          "1187:   }",
          "",
          "[Removed Lines]",
          "1174:    if (coap_trans->oscore_info) {",
          "1184:     it = proto_tree_add_bytes(coap_tree, hf_coap_oscore_piv, tvb, 0, coap_trans->oscore_info->piv_len, coap_trans->oscore_info->piv);",
          "",
          "[Added Lines]",
          "1185:    if (coinfo->object_security && coap_trans->oscore_info) {",
          "1194:     if (coap_trans->oscore_info->piv_in_response) {",
          "1195:      it = proto_tree_add_bytes(coap_tree, hf_coap_oscore_piv, tvb, 0, coinfo->oscore_info->piv_len, coinfo->oscore_info->piv);",
          "1196:     } else {",
          "1197:      it = proto_tree_add_bytes(coap_tree, hf_coap_oscore_piv, tvb, 0, coap_trans->oscore_info->piv_len, coap_trans->oscore_info->piv);",
          "1198:     }",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-oscore.c||epan/dissectors/packet-oscore.c": [
          "File: epan/dissectors/packet-oscore.c -> epan/dissectors/packet-oscore.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: #include <config.h>",
          "20: #include <epan/uat.h>",
          "21: #include <epan/strutil.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: #include <epan/proto_data.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25: #include <wsutil/wsgcrypt.h>",
          "30: static guint oscore_alg_get_key_len(cose_aead_alg_t);",
          "",
          "[Removed Lines]",
          "27: #include \"packet-oscore.h\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "44: void proto_register_oscore(void);",
          "52: static expert_field ei_oscore_key_id_not_found        = EI_INIT;",
          "53: static expert_field ei_oscore_partial_iv_not_found    = EI_INIT;",
          "",
          "[Removed Lines]",
          "47: static int proto_oscore                 = -1;",
          "49: static int hf_oscore_coap_data          = -1;",
          "50: static int hf_oscore_tag                = -1;",
          "",
          "[Added Lines]",
          "48: static int proto_oscore                             = -1;",
          "49: static int proto_coap                               = -1;",
          "51: static int hf_oscore_tag                            = -1;",
          "53: static COAP_COMMON_LIST_T(dissect_oscore_hf);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "58: static expert_field ei_oscore_decrypt_error           = EI_INIT;",
          "59: static expert_field ei_oscore_cbc_mac_failed          = EI_INIT;",
          "60: static expert_field ei_oscore_piv_len_invalid         = EI_INIT;",
          "66: static uat_t            *oscore_context_uat = NULL;",
          "",
          "[Removed Lines]",
          "63: static gint ett_oscore = -1;",
          "",
          "[Added Lines]",
          "64: static expert_field ei_oscore_info_fetch_failed       = EI_INIT;",
          "67: static gint ett_oscore                                = -1;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "397:         buffer[ret++] = (0x60 | text_len);",
          "398:     }",
          "401:         memcpy(&buffer[ret], text, text_len);",
          "402:         ret += text_len;",
          "403:     }",
          "",
          "[Removed Lines]",
          "400:     if (text) {",
          "",
          "[Added Lines]",
          "404:     if (text_len != 0 && text != NULL) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "428:         buffer[ret++] = (0x40 | bytes_len);",
          "429:     }",
          "432:         memcpy(&buffer[ret], bytes, bytes_len);",
          "433:         ret += bytes_len;",
          "434:     }",
          "",
          "[Removed Lines]",
          "431:     if (bytes){",
          "",
          "[Added Lines]",
          "435:     if (bytes_len != 0 && bytes != NULL){",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "467:     guint i = 0;",
          "468:     gchar piv_extended[NONCE_MAX_LEN] = { 0 };",
          "469:     guint nonce_len;",
          "471:     DISSECTOR_ASSERT(out != NULL);",
          "472:     DISSECTOR_ASSERT(context != NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "474:     GByteArray *piv_generator;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "475:     nonce_len = oscore_alg_get_iv_len(context->algorithm);",
          "476:     DISSECTOR_ASSERT(nonce_len <= NONCE_MAX_LEN);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "484:     piv_generator = info->piv_in_response ? context->recipient_id : context->sender_id;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "486:     memcpy(&piv_extended[nonce_len - info->piv_len], info->piv, info->piv_len);",
          "496:     for (i = 0; i < nonce_len; i++) {",
          "",
          "[Removed Lines]",
          "489:     DISSECTOR_ASSERT(context->sender_id->len <= nonce_len - 6);",
          "490:     memcpy(&piv_extended[nonce_len - OSCORE_PIV_MAX_LEN - context->sender_id->len], context->sender_id->data, context->sender_id->len);",
          "493:     piv_extended[0] = context->sender_id->len;",
          "",
          "[Added Lines]",
          "497:     DISSECTOR_ASSERT(piv_generator->len <= nonce_len - 6);",
          "498:     memcpy(&piv_extended[nonce_len - OSCORE_PIV_MAX_LEN - piv_generator->len], piv_generator->data, piv_generator->len);",
          "501:     piv_extended[0] = piv_generator->len;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "519:     guint8 external_aad_len = 0;",
          "520:     guint8 aad[OSCORE_AAD_MAX_LEN];",
          "521:     guint8 aad_len = 0;",
          "522:     gint ciphertext_captured_len;",
          "523:     gint ciphertext_reported_len;",
          "524:     const char *encrypt0 = \"Encrypt0\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "530:     guint8 *decryption_key;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "547:         tvb_memcpy(tvb_ciphertext, rx_tag, *offset + ciphertext_reported_len, tag_len);",
          "548:     }",
          "551:     oscore_create_nonce(nonce, context, info);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "559:     if (info->response) {",
          "560:         decryption_key = context->response_decryption_key->data;",
          "561:     } else {",
          "562:         decryption_key = context->request_decryption_key->data;",
          "563:     }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "572:         return STATUS_ERROR_DECRYPT_FAILED;",
          "573:     }",
          "",
          "[Removed Lines]",
          "571:     if(ccm_ctr_encrypt(context->request_decryption_key->data, tmp, rx_tag, text, ciphertext_captured_len) == FALSE) {",
          "",
          "[Added Lines]",
          "586:     if(ccm_ctr_encrypt(decryption_key, tmp, rx_tag, text, ciphertext_captured_len) == FALSE) {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "615:         DISSECTOR_ASSERT(tag_len <= sizeof(gen_tag));",
          "616:         ccm_init_block(tmp, TRUE, tag_len, 0, 0, 0, ciphertext_captured_len, nonce);",
          "619:             return STATUS_ERROR_CBCMAC_FAILED;",
          "620:         }",
          "",
          "[Removed Lines]",
          "618:         if (!ccm_cbc_mac(context->request_decryption_key->data, tmp, aad, aad_len, text, ciphertext_captured_len, gen_tag)) {",
          "",
          "[Added Lines]",
          "633:         if (!ccm_cbc_mac(decryption_key, tmp, aad, aad_len, text, ciphertext_captured_len, gen_tag)) {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "644:     proto_item *ti;",
          "645:     proto_tree *oscore_tree;",
          "648:     oscore_info_t *info = (oscore_info_t *) data;",
          "649:     oscore_context_t *context = NULL;",
          "650:     oscore_decryption_status_t status;",
          "651:     tvbuff_t *tvb_decrypted = NULL;",
          "654:     if (tvb_reported_length(tvb) < OSCORE_MIN_LENGTH) {",
          "",
          "[Removed Lines]",
          "647:     guint offset = 0;",
          "",
          "[Added Lines]",
          "662:     gint offset = 0;",
          "667:     coap_info *coinfo;",
          "668:     gint oscore_length;",
          "669:     guint8 code_class;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "709:     DISSECTOR_ASSERT(tvb_decrypted);",
          "713:     return tvb_captured_length(tvb);",
          "714: }",
          "",
          "[Removed Lines]",
          "711:     proto_tree_add_item(oscore_tree, hf_oscore_coap_data, tvb_decrypted, 0, tvb_reported_length(tvb_decrypted), ENC_NA);",
          "",
          "[Added Lines]",
          "729:     oscore_length = tvb_reported_length(tvb_decrypted);",
          "732:     coinfo = (coap_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_coap, 0);",
          "734:     if (coinfo) {",
          "735:         dissect_coap_code(tvb_decrypted, oscore_tree, &offset, &dissect_oscore_hf, &code_class);",
          "736:         offset = dissect_coap_options(tvb_decrypted, pinfo, oscore_tree, offset, oscore_length, coinfo, &dissect_oscore_hf);",
          "737:         if (oscore_length > offset) {",
          "738:             dissect_coap_payload(tvb_decrypted, pinfo, oscore_tree, tree, offset, oscore_length, code_class, coinfo, &dissect_oscore_hf, TRUE);",
          "739:         }",
          "740:     } else {",
          "742:         expert_add_info(pinfo, oscore_tree, &ei_oscore_info_fetch_failed);",
          "743:     }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "725:     expert_module_t *expert_oscore;",
          "727:     static hf_register_info hf[] = {",
          "733:         { &hf_oscore_tag,",
          "734:           { \"Decrypted Authentication Tag\", \"oscore.tag\", FT_BYTES, BASE_NONE, NULL, 0x0,",
          "735:             NULL, HFILL }",
          "736:         },",
          "737:     };",
          "740:     static gint *ett[] = {",
          "742:     };",
          "",
          "[Removed Lines]",
          "728:         { &hf_oscore_coap_data,",
          "729:           { \"Decrypted CoAP Data\", \"oscore.coap_data\",",
          "730:             FT_BYTES, BASE_NONE, NULL, 0x00,",
          "731:             NULL, HFILL }",
          "732:         },",
          "741:         &ett_oscore",
          "",
          "[Added Lines]",
          "764:         COAP_COMMON_HF_LIST(dissect_oscore_hf, \"oscore\")",
          "769:         &ett_oscore,",
          "770:         COAP_COMMON_ETT_LIST(dissect_oscore_hf)",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "783:             \"Decryption error\", EXPFILL",
          "784:           }",
          "785:         },",
          "786:         { &ei_oscore_piv_len_invalid,",
          "787:           { \"oscore.piv_len_invalid\", PI_UNDECODED, PI_WARN,",
          "788:             \"Partial IV length from the lower layer is invalid\", EXPFILL",
          "789:           }",
          "790:         },",
          "791:     };",
          "793:     static uat_field_t oscore_context_uat_flds[] = {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "815:         { &ei_oscore_info_fetch_failed,",
          "816:           { \"oscore.info_fetch_failed\", PI_UNDECODED, PI_WARN,",
          "817:             \"Failed to fetch info from the lower layer - OSCORE over HTTP is not supported\", EXPFILL",
          "818:           }",
          "819:         },",
          "825:         COAP_COMMON_EI_LIST(dissect_oscore_hf, \"oscore\")",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "839:                 oscore_context_uat);",
          "841:     register_dissector(\"oscore\", oscore_dissect, proto_oscore);",
          "842: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "878:     proto_coap = proto_get_id_by_short_name(\"CoAP\");",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-oscore.h||epan/dissectors/packet-oscore.h": [
          "File: epan/dissectors/packet-oscore.h -> epan/dissectors/packet-oscore.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:     guint8              kid_context_len;",
          "54:     guint8              *piv;",
          "55:     guint8              piv_len;",
          "56:     gboolean            response;",
          "57: } oscore_info_t;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:     gboolean            piv_in_response;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "830ea5731a496469738f5f9abfb34309b9bcd407",
      "candidate_info": {
        "commit_hash": "830ea5731a496469738f5f9abfb34309b9bcd407",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/830ea5731a496469738f5f9abfb34309b9bcd407",
        "files": [
          "epan/dissectors/packet-coap.c",
          "epan/dissectors/packet-coap.h"
        ],
        "message": "CoAP: Hooks to OSCORE\n\nStructure oscore_info_t carries parameters needed by OSCORE for\ndecryption. These parameters are communicated in the CoAP layer within\nthe Object-Security option. To decrypt a response, OSCORE needs the\nparameters from the corresponding request. Matching of responses to\nrequests on the CoAP layer is leveraged to pass the correct parameters\nto OSCORE. This change adds an oscore_info_t pointer to coap_info and\ncoap_transaction structures in order to pass the parameters on to the\nOSCORE dissector. Dissection of Object-Security option is reworked to\nmake  use of the new coap_info element, instead of relying on local\nvariables.\n\nBug: 14417\nChange-Id: I173057ba95407675aaa539ddbff51d02337551bc\nReviewed-on: https://code.wireshark.org/review/25481\nPetri-Dish: Peter Wu <peter@lekensteyn.nl>\nTested-by: Petri Dish Buildbot\nReviewed-by: Peter Wu <peter@lekensteyn.nl>",
        "before_after_code_files": [
          "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c",
          "epan/dissectors/packet-coap.h||epan/dissectors/packet-coap.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c"
          ],
          "candidate": [
            "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c": [
          "File: epan/dissectors/packet-coap.c -> epan/dissectors/packet-coap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: #include <epan/proto_data.h>",
          "25: #include <epan/expert.h>",
          "26: #include <epan/wmem/wmem.h>",
          "27: #include \"packet-dtls.h\"",
          "28: #include \"packet-coap.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: #include <epan/to_str.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "83: static int hf_coap_response_in     = -1;",
          "84: static int hf_coap_response_to     = -1;",
          "85: static int hf_coap_response_time    = -1;",
          "87: static gint ett_coap      = -1;",
          "88: static gint ett_coap_option     = -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "87: static int hf_coap_oscore_kid     = -1;",
          "88: static int hf_coap_oscore_kid_context    = -1;",
          "89: static int hf_coap_oscore_piv     = -1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "94: static expert_field ei_coap_option_object_security_bad  = EI_INIT;",
          "96: static dissector_handle_t coap_handle;",
          "99: #define DEFAULT_COAP_PORT     5683",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101: static dissector_handle_t oscore_handle;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "491: static void",
          "492: dissect_coap_opt_object_security(tvbuff_t *tvb, proto_item *head_item, proto_tree *subtree, gint offset, gint opt_length, packet_info *pinfo, coap_info *coinfo)",
          "493: {",
          "497:  gboolean non_compressed = FALSE;",
          "498:  gboolean expand = FALSE;",
          "499:  gboolean signature_present = FALSE;",
          "500:  gboolean kid_context_present = FALSE;",
          "502:  gboolean kid_present = FALSE;",
          "503:  guint8 piv_len = 0;",
          "507:  coinfo->object_security = TRUE;",
          "511:   proto_item_append_text(head_item, \": 00 (no Flag Byte)\");",
          "",
          "[Removed Lines]",
          "494:  const guint8 *kid = NULL;",
          "495:  const guint8 *kid_context = NULL;",
          "496:  const guint8 *piv = NULL;",
          "501:  guint8 kid_context_len = 0;",
          "504:  guint8 flag_byte = 0;",
          "505:  gint8 kid_len = 0;",
          "",
          "[Added Lines]",
          "499:  guint8 flag_byte = 0;",
          "506:  guint8 kid_context_len = 0;",
          "507:  guint8 kid_len = 0;",
          "511:  coinfo->oscore_info->piv = NULL;",
          "512:  coinfo->oscore_info->kid_context = NULL;",
          "513:  coinfo->oscore_info->kid = NULL;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "545:   if (piv_len > 0) {",
          "546:    proto_tree_add_item(subtree, hf_coap_opt_object_security_piv, tvb, offset, piv_len, ENC_NA);",
          "549:    offset += piv_len;",
          "550:    kid_len -= piv_len;",
          "553:   }",
          "555:   if (kid_context_present) {",
          "",
          "[Removed Lines]",
          "547:    piv = tvb_bytes_to_str_punct(wmem_packet_scope(), tvb, offset, piv_len, ' ');",
          "551:   } else {",
          "552:    piv = nullstr;",
          "",
          "[Added Lines]",
          "553:    coinfo->oscore_info->piv = (guint8 *) tvb_memdup(wmem_packet_scope(), tvb, offset, piv_len);",
          "554:    coinfo->oscore_info->piv_len = piv_len;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "560:    kid_len -= 1;",
          "562:    proto_tree_add_item(subtree, hf_coap_opt_object_security_kid_context, tvb, offset, kid_context_len, ENC_NA);",
          "565:    offset += kid_context_len;",
          "566:    kid_len -= kid_context_len;",
          "569:   }",
          "571:   if (kid_present) {",
          "572:    if(kid_len > 0) {",
          "573:     proto_tree_add_item(subtree, hf_coap_opt_object_security_kid, tvb, offset, kid_len, ENC_NA);",
          "576:    } else {",
          "577:     expert_add_info_format(pinfo, subtree, &ei_coap_option_object_security_bad, \"Key ID flag is set but there are no remaining bytes to be processed\");",
          "579:    }",
          "582:   }",
          "585:  }",
          "586: }",
          "",
          "[Removed Lines]",
          "563:    kid_context = tvb_bytes_to_str_punct(wmem_packet_scope(), tvb, offset, kid_context_len, ' ');",
          "567:   } else {",
          "568:    kid_context = nullstr;",
          "574:     kid = tvb_bytes_to_str_punct(wmem_packet_scope(), tvb, offset, kid_len, ' ');",
          "578:     kid = nullstr;",
          "580:   } else {",
          "581:    kid = nullstr;",
          "584:   proto_item_append_text(head_item, \": Key ID:%s, Key ID Context:%s, Partial IV:%s\", kid, kid_context, piv);",
          "",
          "[Added Lines]",
          "568:    coinfo->oscore_info->kid_context = (guint8 *) tvb_memdup(wmem_packet_scope(), tvb, offset, kid_context_len);",
          "569:    coinfo->oscore_info->kid_context_len = kid_context_len;",
          "578:     coinfo->oscore_info->kid = (guint8 *) tvb_memdup(wmem_packet_scope(), tvb, offset, kid_len);",
          "579:     coinfo->oscore_info->kid_len = kid_len;",
          "586:   proto_item_append_text(head_item, \": Key ID:%s, Key ID Context:%s, Partial IV:%s\",",
          "587:      coinfo->oscore_info->kid == NULL ? nullstr : bytes_to_str(wmem_packet_scope(), coinfo->oscore_info->kid, coinfo->oscore_info->kid_len),",
          "588:      coinfo->oscore_info->kid_context == NULL ? nullstr : bytes_to_str(wmem_packet_scope(), coinfo->oscore_info->kid_context, coinfo->oscore_info->kid_context_len),",
          "589:      coinfo->oscore_info->piv == NULL ? nullstr : bytes_to_str(wmem_packet_scope(), coinfo->oscore_info->piv, coinfo->oscore_info->piv_len));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1030:  coinfo->block_mflag  = 0;",
          "1031:  coinfo->uri_str_strbuf   = wmem_strbuf_sized_new(wmem_packet_scope(), 0, 1024);",
          "1032:  coinfo->uri_query_strbuf = wmem_strbuf_sized_new(wmem_packet_scope(), 0, 1024);",
          "1033:  coinfo->object_security = FALSE;",
          "1034:  coap_token_str = NULL;",
          "1035:  if (token_len > 0)",
          "1036:  {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1039:  coinfo->oscore_info = wmem_new0(wmem_packet_scope(), oscore_info_t);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1069:    if (!coap_trans) {",
          "1070:     if ((!PINFO_FD_VISITED(pinfo)) && (code_class == 0)) {",
          "1073:      coap_trans->req_frame = pinfo->num;",
          "1074:      coap_trans->rsp_frame = 0;",
          "1075:      coap_trans->req_time = pinfo->fd->abs_ts;",
          "",
          "[Removed Lines]",
          "1072:      coap_trans = wmem_new(wmem_file_scope(), coap_transaction);",
          "",
          "[Added Lines]",
          "1080:      coap_trans = wmem_new0(wmem_file_scope(), coap_transaction);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1078:       coap_trans->uri_str_strbuf = wmem_strbuf_new(wmem_file_scope(), wmem_strbuf_get_str(coinfo->uri_str_strbuf));",
          "1079:      }",
          "1080:      wmem_map_insert(ccinfo->messages, coap_token_str, (void *)coap_trans);",
          "1081:     }",
          "1082:    } else {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1088:      if (coinfo->oscore_info) {",
          "1089:       coap_trans->oscore_info = (oscore_info_t *) wmem_memdup(wmem_file_scope(), coinfo->oscore_info, sizeof(oscore_info_t));",
          "1090:       if (coinfo->oscore_info->kid) {",
          "1091:        coap_trans->oscore_info->kid = (guint8 *) wmem_memdup(wmem_file_scope(), coinfo->oscore_info->kid, coinfo->oscore_info->kid_len);",
          "1092:       }",
          "1093:       if (coinfo->oscore_info->kid_context) {",
          "1094:        coap_trans->oscore_info->kid_context = (guint8 *) wmem_memdup(wmem_file_scope(), coinfo->oscore_info->kid_context, coinfo->oscore_info->kid_context_len);",
          "1095:       }",
          "1096:       if (coinfo->oscore_info->piv) {",
          "1097:        coap_trans->oscore_info->piv = (guint8 *) wmem_memdup(wmem_file_scope(), coinfo->oscore_info->piv, coinfo->oscore_info->piv_len);",
          "1098:       }",
          "1099:      }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1090:       coinfo->uri_str_strbuf = wmem_strbuf_new(wmem_packet_scope(), wmem_strbuf_get_str(coap_trans->uri_str_strbuf));",
          "1091:      }",
          "1092:     }",
          "1093:    }",
          "1094:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1112:      if (coap_trans->oscore_info) {",
          "1114:       coinfo->oscore_info = (oscore_info_t *) wmem_memdup(wmem_packet_scope(), coap_trans->oscore_info, sizeof(oscore_info_t));",
          "1115:       if (coap_trans->oscore_info->kid) {",
          "1116:        coinfo->oscore_info->kid = (guint8 *) wmem_memdup(wmem_packet_scope(), coap_trans->oscore_info->kid, coap_trans->oscore_info->kid_len);",
          "1117:       }",
          "1118:       if (coap_trans->oscore_info->kid_context) {",
          "1119:        coinfo->oscore_info->kid_context = (guint8 *) wmem_memdup(wmem_packet_scope(), coap_trans->oscore_info->kid_context, coap_trans->oscore_info->kid_context_len);",
          "1120:       }",
          "1121:       if (coap_trans->oscore_info->piv) {",
          "1122:        coinfo->oscore_info->piv = (guint8 *) wmem_memdup(wmem_packet_scope(), coap_trans->oscore_info->piv, coap_trans->oscore_info->piv_len);",
          "1123:       }",
          "1124:      }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1119:     it = proto_tree_add_time(coap_tree, hf_coap_response_time, tvb, 0, 0, &ns);",
          "1120:     PROTO_ITEM_SET_GENERATED(it);",
          "1121:    }",
          "1122:   }",
          "1123:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1155:    if (coap_trans->oscore_info) {",
          "1156:     proto_item *it;",
          "1159:     it = proto_tree_add_bytes(coap_tree, hf_coap_oscore_kid, tvb, 0, coap_trans->oscore_info->kid_len, coap_trans->oscore_info->kid);",
          "1160:     PROTO_ITEM_SET_GENERATED(it);",
          "1162:     it = proto_tree_add_bytes(coap_tree, hf_coap_oscore_kid_context, tvb, 0, coap_trans->oscore_info->kid_context_len, coap_trans->oscore_info->kid_context);",
          "1163:     PROTO_ITEM_SET_GENERATED(it);",
          "1165:     it = proto_tree_add_bytes(coap_tree, hf_coap_oscore_piv, tvb, 0, coap_trans->oscore_info->piv_len, coap_trans->oscore_info->piv);",
          "1166:     PROTO_ITEM_SET_GENERATED(it);",
          "1167:    }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1169:   } else {",
          "1170:    coap_ctype_str_dis = coinfo->ctype_str;",
          "1171:   }",
          "1176:     \"Payload Content-Format: %s%s, Length: %u\",",
          "1177:     coinfo->ctype_str, coinfo->ctype_value == DEFAULT_COAP_CTYPE_VALUE ?",
          "1178:     \" (no Content-Format)\" : \"\", payload_length);",
          "1181:   payload_item = proto_tree_add_string(coap_tree, hf_coap_payload,",
          "1182:            tvb, offset, payload_length,",
          "",
          "[Removed Lines]",
          "1172:   if (coinfo->object_security) {",
          "1173:    g_snprintf(str_payload, sizeof(str_payload), \"Encrypted OSCORE Data\");",
          "1174:   } else {",
          "1175:    g_snprintf(str_payload, sizeof(str_payload),",
          "1179:   }",
          "",
          "[Added Lines]",
          "1218:   g_snprintf(str_payload, sizeof(str_payload),",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1191:   dissector_try_string(media_type_dissector_table, coap_ctype_str_dis,",
          "1192:          payload_tvb, pinfo, parent_tree, NULL);",
          "1193:  }",
          "1195:  return tvb_captured_length(tvb);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1236:   if (coinfo->object_security) {",
          "1238:    coinfo->oscore_info->response = ((code_class >= 2) && (code_class <= 5)) ? TRUE : FALSE;",
          "1239:    proto_item_set_text(payload_item, \"Encrypted OSCORE Data\");",
          "1240:    call_dissector_with_data(oscore_handle, payload_tvb, pinfo, parent_tree, coinfo->oscore_info);",
          "1241:   }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1447:       FT_RELATIVE_TIME, BASE_NONE, NULL, 0x0,",
          "1448:       \"The time between the Call and the Reply\", HFILL }",
          "1449:   },",
          "1450:  };",
          "1452:  static gint *ett[] = {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1499:   { &hf_coap_oscore_kid,",
          "1500:     { \"OSCORE Key ID\", \"coap.oscore_kid\", FT_BYTES, BASE_NONE, NULL, 0x0,",
          "1501:       \"Matched OSCORE Key ID\", HFILL }",
          "1502:   },",
          "1503:   { &hf_coap_oscore_kid_context,",
          "1504:     { \"OSCORE Key ID Context\", \"coap.oscore_kid_context\", FT_BYTES, BASE_NONE, NULL, 0x0,",
          "1505:       \"Matched OSCORE Key ID Context\", HFILL }",
          "1506:   },",
          "1507:   { &hf_coap_oscore_piv,",
          "1508:     { \"OSCORE Partial IV\", \"coap.oscore_piv\", FT_BYTES, BASE_NONE, NULL, 0x0,",
          "1509:       \"Matched OSCORE Partial IV\", HFILL }",
          "1510:   },",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1484:  media_type_dissector_table = find_dissector_table(\"media_type\");",
          "1485:  dissector_add_uint_with_preference(\"udp.port\", DEFAULT_COAP_PORT, coap_handle);",
          "1486:  dtls_dissector_add(DEFAULT_COAPS_PORT, coap_handle);",
          "1487: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1548:  oscore_handle = find_dissector(\"oscore\");",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-coap.h||epan/dissectors/packet-coap.h": [
          "File: epan/dissectors/packet-coap.h -> epan/dissectors/packet-coap.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #ifndef __PACKET_COAP_H__",
          "11: #define __PACKET_COAP_H__",
          "14: typedef struct {",
          "15:  const gchar *ctype_str;",
          "16:  guint ctype_value;",
          "17:  guint block_number;",
          "18:  guint block_mflag;",
          "21:  gboolean object_security;",
          "22: } coap_info;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13: #include \"packet-oscore.h\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}