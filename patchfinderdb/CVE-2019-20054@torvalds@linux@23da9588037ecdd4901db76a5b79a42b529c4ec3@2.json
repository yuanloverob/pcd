{
  "cve_id": "CVE-2019-20054",
  "cve_desc": "In the Linux kernel before 5.0.6, there is a NULL pointer dereference in drop_sysctl_table() in fs/proc/proc_sysctl.c, related to put_links, aka CID-23da9588037e.",
  "repo": "torvalds/linux",
  "patch_hash": "23da9588037ecdd4901db76a5b79a42b529c4ec3",
  "patch_info": {
    "commit_hash": "23da9588037ecdd4901db76a5b79a42b529c4ec3",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/23da9588037ecdd4901db76a5b79a42b529c4ec3",
    "files": [
      "fs/proc/proc_sysctl.c"
    ],
    "message": "fs/proc/proc_sysctl.c: fix NULL pointer dereference in put_links\n\nSyzkaller reports:\n\nkasan: GPF could be caused by NULL-ptr deref or user memory access\ngeneral protection fault: 0000 [#1] SMP KASAN PTI\nCPU: 1 PID: 5373 Comm: syz-executor.0 Not tainted 5.0.0-rc8+ #3\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014\nRIP: 0010:put_links+0x101/0x440 fs/proc/proc_sysctl.c:1599\nCode: 00 0f 85 3a 03 00 00 48 8b 43 38 48 89 44 24 20 48 83 c0 38 48 89 c2 48 89 44 24 28 48 b8 00 00 00 00 00 fc ff df 48 c1 ea 03 <80> 3c 02 00 0f 85 fe 02 00 00 48 8b 74 24 20 48 c7 c7 60 2a 9d 91\nRSP: 0018:ffff8881d828f238 EFLAGS: 00010202\nRAX: dffffc0000000000 RBX: ffff8881e01b1140 RCX: ffffffff8ee98267\nRDX: 0000000000000007 RSI: ffffc90001479000 RDI: ffff8881e01b1178\nRBP: dffffc0000000000 R08: ffffed103ee27259 R09: ffffed103ee27259\nR10: 0000000000000001 R11: ffffed103ee27258 R12: fffffffffffffff4\nR13: 0000000000000006 R14: ffff8881f59838c0 R15: dffffc0000000000\nFS:  00007f072254f700(0000) GS:ffff8881f7100000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007fff8b286668 CR3: 00000001f0542002 CR4: 00000000007606e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n drop_sysctl_table+0x152/0x9f0 fs/proc/proc_sysctl.c:1629\n get_subdir fs/proc/proc_sysctl.c:1022 [inline]\n __register_sysctl_table+0xd65/0x1090 fs/proc/proc_sysctl.c:1335\n br_netfilter_init+0xbc/0x1000 [br_netfilter]\n do_one_initcall+0xfa/0x5ca init/main.c:887\n do_init_module+0x204/0x5f6 kernel/module.c:3460\n load_module+0x66b2/0x8570 kernel/module.c:3808\n __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\nRIP: 0033:0x462e99\nCode: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f072254ec58 EFLAGS: 00000246 ORIG_RAX: 0000000000000139\nRAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462e99\nRDX: 0000000000000000 RSI: 0000000020000280 RDI: 0000000000000003\nRBP: 00007f072254ec70 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007f072254f6bc\nR13: 00000000004bcefa R14: 00000000006f6fb0 R15: 0000000000000004\nModules linked in: br_netfilter(+) dvb_usb_dibusb_mc_common dib3000mc dibx000_common dvb_usb_dibusb_common dvb_usb_dw2102 dvb_usb classmate_laptop palmas_regulator cn videobuf2_v4l2 v4l2_common snd_soc_bd28623 mptbase snd_usb_usx2y snd_usbmidi_lib snd_rawmidi wmi libnvdimm lockd sunrpc grace rc_kworld_pc150u rc_core rtc_da9063 sha1_ssse3 i2c_cros_ec_tunnel adxl34x_spi adxl34x nfnetlink lib80211 i5500_temp dvb_as102 dvb_core videobuf2_common videodev media videobuf2_vmalloc videobuf2_memops udc_core lnbp22 leds_lp3952 hid_roccat_ryos s1d13xxxfb mtd vport_geneve openvswitch nf_conncount nf_nat_ipv6 nsh geneve udp_tunnel ip6_udp_tunnel snd_soc_mt6351 sis_agp phylink snd_soc_adau1761_spi snd_soc_adau1761 snd_soc_adau17x1 snd_soc_core snd_pcm_dmaengine ac97_bus snd_compress snd_soc_adau_utils snd_soc_sigmadsp_regmap snd_soc_sigmadsp raid_class hid_roccat_konepure hid_roccat_common hid_roccat c2port_duramar2150 core mdio_bcm_unimac iptable_security iptable_raw iptable_mangle\n iptable_nat nf_nat_ipv4 nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 iptable_filter bpfilter ip6_vti ip_vti ip_gre ipip sit tunnel4 ip_tunnel hsr veth netdevsim devlink vxcan batman_adv cfg80211 rfkill chnl_net caif nlmon dummy team bonding vcan bridge stp llc ip6_gre gre ip6_tunnel tunnel6 tun crct10dif_pclmul crc32_pclmul crc32c_intel ghash_clmulni_intel joydev mousedev ide_pci_generic piix aesni_intel aes_x86_64 ide_core crypto_simd atkbd cryptd glue_helper serio_raw ata_generic pata_acpi i2c_piix4 floppy sch_fq_codel ip_tables x_tables ipv6 [last unloaded: lm73]\nDumping ftrace buffer:\n   (ftrace buffer empty)\n---[ end trace 770020de38961fd0 ]---\n\nA new dir entry can be created in get_subdir and its 'header->parent' is\nset to NULL.  Only after insert_header success, it will be set to 'dir',\notherwise 'header->parent' is set to NULL and drop_sysctl_table is called.\nHowever in err handling path of get_subdir, drop_sysctl_table also be\ncalled on 'new->header' regardless its value of parent pointer.  Then\nput_links is called, which triggers NULL-ptr deref when access member of\nheader->parent.\n\nIn fact we have multiple error paths which call drop_sysctl_table() there,\nupon failure on insert_links() we also call drop_sysctl_table().And even\nin the successful case on __register_sysctl_table() we still always call\ndrop_sysctl_table().This patch fix it.\n\nLink: http://lkml.kernel.org/r/20190314085527.13244-1-yuehaibing@huawei.com\nFixes: 0e47c99d7fe25 (\"sysctl: Replace root_list with links between sysctl_table_sets\")\nSigned-off-by: YueHaibing <yuehaibing@huawei.com>\nReported-by: Hulk Robot <hulkci@huawei.com>\nAcked-by: Luis Chamberlain <mcgrof@kernel.org>\nCc: Kees Cook <keescook@chromium.org>\nCc: Alexey Dobriyan <adobriyan@gmail.com>\nCc: Alexei Starovoitov <ast@kernel.org>\nCc: Daniel Borkmann <daniel@iogearbox.net>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: Eric W. Biederman <ebiederm@xmission.com>\nCc: <stable@vger.kernel.org>    [3.4+]\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "before_after_code_files": [
      "fs/proc/proc_sysctl.c||fs/proc/proc_sysctl.c"
    ]
  },
  "patch_diff": {
    "fs/proc/proc_sysctl.c||fs/proc/proc_sysctl.c": [
      "File: fs/proc/proc_sysctl.c -> fs/proc/proc_sysctl.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1626:  if (--header->nreg)",
      "1627:   return;",
      "1630:  start_unregistering(header);",
      "1631:  if (!--header->count)",
      "1632:   kfree_rcu(header, rcu);",
      "",
      "[Removed Lines]",
      "1629:  put_links(header);",
      "",
      "[Added Lines]",
      "1629:  if (parent)",
      "1630:   put_links(header);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cf84807f6dd0be5214378e66460cfc9187f532f9",
      "candidate_info": {
        "commit_hash": "cf84807f6dd0be5214378e66460cfc9187f532f9",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/cf84807f6dd0be5214378e66460cfc9187f532f9",
        "files": [
          "drivers/video/fbdev/core/modedb.c"
        ],
        "message": "fbdev: fix divide error in fb_var_to_videomode\n\nTo fix following divide-by-zero error found by Syzkaller:\n\n  divide error: 0000 [#1] SMP PTI\n  CPU: 7 PID: 8447 Comm: test Kdump: loaded Not tainted 4.19.24-8.al7.x86_64 #1\n  Hardware name: Alibaba Cloud Alibaba Cloud ECS, BIOS rel-1.12.0-0-ga698c8995f-prebuilt.qemu.org 04/01/2014\n  RIP: 0010:fb_var_to_videomode+0xae/0xc0\n  Code: 04 44 03 46 78 03 4e 7c 44 03 46 68 03 4e 70 89 ce d1 ee 69 c0 e8 03 00 00 f6 c2 01 0f 45 ce 83 e2 02 8d 34 09 0f 45 ce 31 d2 <41> f7 f0 31 d2 f7 f1 89 47 08 f3 c3 66 0f 1f 44 00 00 0f 1f 44 00\n  RSP: 0018:ffffb7e189347bf0 EFLAGS: 00010246\n  RAX: 00000000e1692410 RBX: ffffb7e189347d60 RCX: 0000000000000000\n  RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffffb7e189347c10\n  RBP: ffff99972a091c00 R08: 0000000000000000 R09: 0000000000000000\n  R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000100\n  R13: 0000000000010000 R14: 00007ffd66baf6d0 R15: 0000000000000000\n  FS:  00007f2054d11740(0000) GS:ffff99972fbc0000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 00007f205481fd20 CR3: 00000004288a0001 CR4: 00000000001606a0\n  Call Trace:\n   fb_set_var+0x257/0x390\n   ? lookup_fast+0xbb/0x2b0\n   ? fb_open+0xc0/0x140\n   ? chrdev_open+0xa6/0x1a0\n   do_fb_ioctl+0x445/0x5a0\n   do_vfs_ioctl+0x92/0x5f0\n   ? __alloc_fd+0x3d/0x160\n   ksys_ioctl+0x60/0x90\n   __x64_sys_ioctl+0x16/0x20\n   do_syscall_64+0x5b/0x190\n   entry_SYSCALL_64_after_hwframe+0x44/0xa9\n  RIP: 0033:0x7f20548258d7\n  Code: 44 00 00 48 8b 05 b9 15 2d 00 64 c7 00 26 00 00 00 48 c7 c0 ff ff ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 b8 10 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 89 15 2d 00 f7 d8 64 89 01 48\n\nIt can be triggered easily with following test code:\n\n  #include <linux/fb.h>\n  #include <fcntl.h>\n  #include <sys/ioctl.h>\n  int main(void)\n  {\n          struct fb_var_screeninfo var = {.activate = 0x100, .pixclock = 60};\n          int fd = open(\"/dev/fb0\", O_RDWR);\n          if (fd < 0)\n                  return 1;\n\n          if (ioctl(fd, FBIOPUT_VSCREENINFO, &var))\n                  return 1;\n\n          return 0;\n  }\n\nSigned-off-by: Shile Zhang <shile.zhang@linux.alibaba.com>\nCc: Fredrik Noring <noring@nocrew.org>\nCc: Daniel Vetter <daniel.vetter@ffwll.ch>\nReviewed-by: Mukesh Ojha <mojha@codeaurora.org>\nSigned-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>",
        "before_after_code_files": [
          "drivers/video/fbdev/core/modedb.c||drivers/video/fbdev/core/modedb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/video/fbdev/core/modedb.c||drivers/video/fbdev/core/modedb.c": [
          "File: drivers/video/fbdev/core/modedb.c -> drivers/video/fbdev/core/modedb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "935:  if (var->vmode & FB_VMODE_DOUBLE)",
          "936:   vtotal *= 2;",
          "938:  hfreq = pixclock/htotal;",
          "939:  mode->refresh = hfreq/vtotal;",
          "940: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "938:  if (!htotal || !vtotal)",
          "939:   return;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ff0e2a7bd13f7c332d7f09ff45d08df4bf512ce0",
      "candidate_info": {
        "commit_hash": "ff0e2a7bd13f7c332d7f09ff45d08df4bf512ce0",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/ff0e2a7bd13f7c332d7f09ff45d08df4bf512ce0",
        "files": [
          "arch/riscv/include/asm/fixmap.h"
        ],
        "message": "RISC-V: Fix FIXMAP_TOP to avoid overlap with VMALLOC area\n\nThe FIXMAP area overlaps with VMALLOC area in Linux-5.1-rc1 hence we get\nbelow warning in Linux RISC-V 32bit kernel. This warning does not show-up\nin Linux RISC-V 64bit kernel due to large VMALLOC area.\n\nWARNING: CPU: 0 PID: 22 at mm/vmalloc.c:150 vmap_page_range_noflush+0x134/0x15c\nModules linked in:\nCPU: 0 PID: 22 Comm: kworker/0:1 Not tainted 5.1.0-rc1-00005-gebc2f658040e #1\nWorkqueue: events pcpu_balance_workfn\nCall Trace:\n[<c002b950>] walk_stackframe+0x0/0xa0\n[<c002baac>] show_stack+0x28/0x32\n[<c0587354>] dump_stack+0x62/0x7e\n[<c002fdee>] __warn+0x98/0xce\n[<c002fe52>] warn_slowpath_null+0x2e/0x3c\n[<c00e71ce>] vmap_page_range_noflush+0x134/0x15c\n[<c00e7886>] map_kernel_range_noflush+0xc/0x14\n[<c00d54b8>] pcpu_populate_chunk+0x19e/0x236\n[<c00d610e>] pcpu_balance_workfn+0x448/0x464\n[<c00408d6>] process_one_work+0x16c/0x2ea\n[<c0040b46>] worker_thread+0xf2/0x3b2\n[<c004519a>] kthread+0xce/0xdc\n[<c002a974>] ret_from_exception+0x0/0xc\n\nThis patch fixes above warning by placing FIXMAP area below VMALLOC area.\n\nFixes: f2c17aabc917 (\"RISC-V: Implement compile-time fixed mappings\")\nSigned-off-by: Anup Patel <anup.patel@wdc.com>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nSigned-off-by: Palmer Dabbelt <palmer@sifive.com>",
        "before_after_code_files": [
          "arch/riscv/include/asm/fixmap.h||arch/riscv/include/asm/fixmap.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/riscv/include/asm/fixmap.h||arch/riscv/include/asm/fixmap.h": [
          "File: arch/riscv/include/asm/fixmap.h -> arch/riscv/include/asm/fixmap.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: };",
          "28: #define FIXADDR_SIZE  (__end_of_fixed_addresses * PAGE_SIZE)",
          "30: #define FIXADDR_START  (FIXADDR_TOP - FIXADDR_SIZE)",
          "32: #define FIXMAP_PAGE_IO  PAGE_KERNEL",
          "",
          "[Removed Lines]",
          "29: #define FIXADDR_TOP  (PAGE_OFFSET)",
          "",
          "[Added Lines]",
          "29: #define FIXADDR_TOP  (VMALLOC_START)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7f75591fc5a123929a29636834d1bcb8b5c9fee3",
      "candidate_info": {
        "commit_hash": "7f75591fc5a123929a29636834d1bcb8b5c9fee3",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/7f75591fc5a123929a29636834d1bcb8b5c9fee3",
        "files": [
          "drivers/iio/industrialio-core.c"
        ],
        "message": "iio: core: fix a possible circular locking dependency\n\nThis fixes a possible circular locking dependency detected warning seen\nwith:\n- CONFIG_PROVE_LOCKING=y\n- consumer/provider IIO devices (ex: \"voltage-divider\" consumer of \"adc\")\n\nWhen using the IIO consumer interface, e.g. iio_channel_get(), the consumer\ndevice will likely call iio_read_channel_raw() or similar that rely on\n'info_exist_lock' mutex.\n\ntypically:\n...\n\tmutex_lock(&chan->indio_dev->info_exist_lock);\n\tif (chan->indio_dev->info == NULL) {\n\t\tret = -ENODEV;\n\t\tgoto err_unlock;\n\t}\n\tret = do_some_ops()\nerr_unlock:\n\tmutex_unlock(&chan->indio_dev->info_exist_lock);\n\treturn ret;\n...\n\nSame mutex is also hold in iio_device_unregister().\n\nThe following deadlock warning happens when:\n- the consumer device has called an API like iio_read_channel_raw()\n  at least once.\n- the consumer driver is unregistered, removed (unbind from sysfs)\n\n======================================================\nWARNING: possible circular locking dependency detected\n4.19.24 #577 Not tainted\n------------------------------------------------------\nsh/372 is trying to acquire lock:\n(kn->count#30){++++}, at: kernfs_remove_by_name_ns+0x3c/0x84\n\nbut task is already holding lock:\n(&dev->info_exist_lock){+.+.}, at: iio_device_unregister+0x18/0x60\n\nwhich lock already depends on the new lock.\n\nthe existing dependency chain (in reverse order) is:\n\n-> #1 (&dev->info_exist_lock){+.+.}:\n       __mutex_lock+0x70/0xa3c\n       mutex_lock_nested+0x1c/0x24\n       iio_read_channel_raw+0x1c/0x60\n       iio_read_channel_info+0xa8/0xb0\n       dev_attr_show+0x1c/0x48\n       sysfs_kf_seq_show+0x84/0xec\n       seq_read+0x154/0x528\n       __vfs_read+0x2c/0x15c\n       vfs_read+0x8c/0x110\n       ksys_read+0x4c/0xac\n       ret_fast_syscall+0x0/0x28\n       0xbedefb60\n\n-> #0 (kn->count#30){++++}:\n       lock_acquire+0xd8/0x268\n       __kernfs_remove+0x288/0x374\n       kernfs_remove_by_name_ns+0x3c/0x84\n       remove_files+0x34/0x78\n       sysfs_remove_group+0x40/0x9c\n       sysfs_remove_groups+0x24/0x34\n       device_remove_attrs+0x38/0x64\n       device_del+0x11c/0x360\n       cdev_device_del+0x14/0x2c\n       iio_device_unregister+0x24/0x60\n       release_nodes+0x1bc/0x200\n       device_release_driver_internal+0x1a0/0x230\n       unbind_store+0x80/0x130\n       kernfs_fop_write+0x100/0x1e4\n       __vfs_write+0x2c/0x160\n       vfs_write+0xa4/0x17c\n       ksys_write+0x4c/0xac\n       ret_fast_syscall+0x0/0x28\n       0xbe906840\n\nother info that might help us debug this:\n\n Possible unsafe locking scenario:\n\n       CPU0                    CPU1\n       ----                    ----\n  lock(&dev->info_exist_lock);\n                               lock(kn->count#30);\n                               lock(&dev->info_exist_lock);\n  lock(kn->count#30);\n\n *** DEADLOCK ***\n...\n\ncdev_device_del() can be called without holding the lock. It should be safe\nas info_exist_lock prevents kernelspace consumers to use the exported\nroutines during/after provider removal. cdev_device_del() is for userspace.\n\nHelp to reproduce:\nSee example: Documentation/devicetree/bindings/iio/afe/voltage-divider.txt\nsysv {\n\tcompatible = \"voltage-divider\";\n\tio-channels = <&adc 0>;\n\toutput-ohms = <22>;\n\tfull-ohms = <222>;\n};\n\nFirst, go to iio:deviceX for the \"voltage-divider\", do one read:\n$ cd /sys/bus/iio/devices/iio:deviceX\n$ cat in_voltage0_raw\n\nThen, unbind the consumer driver. It triggers above deadlock warning.\n$ cd /sys/bus/platform/drivers/iio-rescale/\n$ echo sysv > unbind\n\nNote I don't actually expect stable will pick this up all the\nway back into IIO being in staging, but if's probably valid that\nfar back.\n\nSigned-off-by: Fabrice Gasnier <fabrice.gasnier@st.com>\nFixes: ac917a81117c (\"staging:iio:core set the iio_dev.info pointer to null on unregister\")\nCc: <Stable@vger.kernel.org>\nSigned-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>",
        "before_after_code_files": [
          "drivers/iio/industrialio-core.c||drivers/iio/industrialio-core.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/iio/industrialio-core.c||drivers/iio/industrialio-core.c": [
          "File: drivers/iio/industrialio-core.c -> drivers/iio/industrialio-core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1744: void iio_device_unregister(struct iio_dev *indio_dev)",
          "1745: {",
          "1748:  cdev_device_del(&indio_dev->chrdev, &indio_dev->dev);",
          "1750:  iio_device_unregister_debugfs(indio_dev);",
          "1752:  iio_disable_all_buffers(indio_dev);",
          "",
          "[Removed Lines]",
          "1746:  mutex_lock(&indio_dev->info_exist_lock);",
          "",
          "[Added Lines]",
          "1748:  mutex_lock(&indio_dev->info_exist_lock);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b6ffdf27f3d4f1e9af56effe6f86989170d71e95",
      "candidate_info": {
        "commit_hash": "b6ffdf27f3d4f1e9af56effe6f86989170d71e95",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/b6ffdf27f3d4f1e9af56effe6f86989170d71e95",
        "files": [
          "arch/s390/kernel/perf_cpum_cf_diag.c"
        ],
        "message": "s390/cpumf: Fix warning from check_processor_id\n\nFunction __hw_perf_event_init() used a CPU variable without\nensuring CPU preemption has been disabled. This caused the\nfollowing warning in the kernel log:\n\n  [ 7.277085] BUG: using smp_processor_id() in preemptible\n                 [00000000] code: cf-csdiag/1892\n  [ 7.277111] caller is cf_diag_event_init+0x13a/0x338\n  [ 7.277122] CPU: 10 PID: 1892 Comm: cf-csdiag Not tainted\n                 5.0.0-20190318.rc0.git0.9e1a11e0f602.300.fc29.s390x+debug #1\n  [ 7.277131] Hardware name: IBM 2964 NC9 712 (LPAR)\n  [ 7.277139] Call Trace:\n  [ 7.277150] ([<000000000011385a>] show_stack+0x82/0xd0)\n  [ 7.277161]  [<0000000000b7a71a>] dump_stack+0x92/0xd0\n  [ 7.277174]  [<00000000007b7e9c>] check_preemption_disabled+0xe4/0x100\n  [ 7.277183]  [<00000000001228aa>] cf_diag_event_init+0x13a/0x338\n  [ 7.277195]  [<00000000002cf3aa>] perf_try_init_event+0x72/0xf0\n  [ 7.277204]  [<00000000002d0bba>] perf_event_alloc+0x6fa/0xce0\n  [ 7.277214]  [<00000000002dc4a8>] __s390x_sys_perf_event_open+0x398/0xd50\n  [ 7.277224]  [<0000000000b9e8f0>] system_call+0xdc/0x2d8\n  [ 7.277233] 2 locks held by cf-csdiag/1892:\n  [ 7.277241]  #0: 00000000976f5510 (&sig->cred_guard_mutex){+.+.},\n                  at: __s390x_sys_perf_event_open+0xd2e/0xd50\n  [ 7.277257]  #1: 00000000363b11bd (&pmus_srcu){....},\n                  at: perf_event_alloc+0x52e/0xce0\n\nThe variable is now accessed in proper context. Use\nget_cpu_var()/put_cpu_var() pair to disable\npreemption during access.\nAs the hardware authorization settings apply to all CPUs, it\ndoes not matter which CPU is used to check the authorization setting.\n\nRemove the event->count assignment. It is not needed as function\nperf_event_alloc() allocates memory for the event with kzalloc() and\nthus count is already set to zero.\n\nFixes: fe5908bccc56 (\"s390/cpum_cf_diag: Add support for s390 counter facility diagnostic trace\")\n\nSigned-off-by: Thomas Richter <tmricht@linux.ibm.com>\nReviewed-by: Hendrik Brueckner <brueckner@linux.ibm.com>\nSigned-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>",
        "before_after_code_files": [
          "arch/s390/kernel/perf_cpum_cf_diag.c||arch/s390/kernel/perf_cpum_cf_diag.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/s390/kernel/perf_cpum_cf_diag.c||arch/s390/kernel/perf_cpum_cf_diag.c": [
          "File: arch/s390/kernel/perf_cpum_cf_diag.c -> arch/s390/kernel/perf_cpum_cf_diag.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "197: static int __hw_perf_event_init(struct perf_event *event)",
          "198: {",
          "200:  struct perf_event_attr *attr = &event->attr;",
          "201:  enum cpumf_ctr_set i;",
          "202:  int err = 0;",
          "208:  event->hw.config = attr->config;",
          "209:  event->hw.config_base = 0;",
          "213:  for (i = CPUMF_CTR_SET_BASIC; i < CPUMF_CTR_SET_MAX; ++i)",
          "214:   if (cpuhw->info.auth_ctl & cpumf_ctr_ctl[i])",
          "215:    event->hw.config_base |= cpumf_ctr_ctl[i];",
          "218:  if (!event->hw.config_base) {",
          "",
          "[Removed Lines]",
          "199:  struct cpu_cf_events *cpuhw = this_cpu_ptr(&cpu_cf_events);",
          "204:  debug_sprintf_event(cf_diag_dbg, 5,",
          "205:        \"%s event %p cpu %d authorized %#x\\n\", __func__,",
          "206:        event, event->cpu, cpuhw->info.auth_ctl);",
          "210:  local64_set(&event->count, 0);",
          "",
          "[Added Lines]",
          "200:  struct cpu_cf_events *cpuhw;",
          "204:  debug_sprintf_event(cf_diag_dbg, 5, \"%s event %p cpu %d\\n\", __func__,",
          "205:        event, event->cpu);",
          "218:  cpuhw = &get_cpu_var(cpu_cf_events);",
          "222:  put_cpu_var(cpu_cf_events);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f1c43590365bac054d753d808dbbd207d09e088d",
      "candidate_info": {
        "commit_hash": "f1c43590365bac054d753d808dbbd207d09e088d",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/f1c43590365bac054d753d808dbbd207d09e088d",
        "files": [
          "drivers/scsi/qedf/qedf_els.c"
        ],
        "message": "scsi: qedf: Do not retry ELS request if qedf_alloc_cmd fails\n\nIf we cannot allocate an ELS middlepath request, simply fail instead of\ntrying to delay and then reallocate.  This delay logic is causing soft\nlockup messages:\n\nNMI watchdog: BUG: soft lockup - CPU#2 stuck for 22s! [kworker/2:1:7639]\nModules linked in: xt_CHECKSUM ipt_MASQUERADE nf_nat_masquerade_ipv4 tun devlink ip6t_rpfilter ipt_REJECT nf_reject_ipv4 ip6t_REJECT nf_reject_ipv6 xt_conntrack ip_set nfnetlink ebtable_nat ebtable_broute bridge stp llc ip6table_nat nf_conntrack_ipv6 nf_defrag_ipv6 nf_nat_ipv6 ip6table_mangle ip6table_security ip6table_raw iptable_nat nf_conntrack_ipv4 nf_defrag_ipv4 nf_nat_ipv4 nf_nat nf_conntrack iptable_mangle iptable_security iptable_raw ebtable_filter ebtables ip6table_filter ip6_tables iptable_filter dm_service_time vfat fat rpcrdma sunrpc ib_isert iscsi_target_mod ib_iser libiscsi scsi_transport_iscsi ib_srpt target_core_mod ib_srp scsi_transport_srp ib_ipoib rdma_ucm ib_ucm ib_uverbs ib_umad rdma_cm ib_cm iw_cm sb_edac intel_powerclamp coretemp intel_rapl iosf_mbi kvm_intel kvm\nirqbypass crc32_pclmul ghash_clmulni_intel aesni_intel lrw gf128mul glue_helper ablk_helper cryptd iTCO_wdt iTCO_vendor_support qedr(OE) ib_core joydev ipmi_ssif pcspkr hpilo hpwdt sg ipmi_si ipmi_devintf ipmi_msghandler ioatdma shpchp lpc_ich wmi dca acpi_power_meter dm_multipath ip_tables xfs libcrc32c sd_mod crc_t10dif crct10dif_generic qedf(OE) libfcoe mgag200 libfc i2c_algo_bit drm_kms_helper scsi_transport_fc qede(OE) syscopyarea sysfillrect sysimgblt fb_sys_fops ttm qed(OE) drm crct10dif_pclmul e1000e crct10dif_common crc32c_intel scsi_tgt hpsa i2c_core ptp scsi_transport_sas pps_core dm_mirror dm_region_hash dm_log dm_mod\nCPU: 2 PID: 7639 Comm: kworker/2:1 Kdump: loaded Tainted: G           OEL ------------   3.10.0-861.el7.x86_64 #1\nHardware name: HP ProLiant DL580 Gen9/ProLiant DL580 Gen9, BIOS U17 07/21/2016\nWorkqueue: qedf_2_dpc qedf_handle_rrq [qedf]\ntask: ffff959edd628fd0 ti: ffff959ed6f08000 task.ti: ffff959ed6f08000\nRIP: 0010:[<ffffffff8355913a>]  [<ffffffff8355913a>] delay_tsc+0x3a/0x60\nRSP: 0018:ffff959ed6f0bd30  EFLAGS: 00000246\nRAX: 000000008ef5f791 RBX: 5f646d635f666465 RCX: 0000025b8ededa2f\nRDX: 000000000000025b RSI: 0000000000000002 RDI: 0000000000217d1e\nRBP: ffff959ed6f0bd30 R08: ffffffffc079aae8 R09: 0000000000000200\nR10: ffffffffc07952c6 R11: 0000000000000000 R12: 6c6c615f66646571\nR13: ffff959ed6f0bcc8 R14: ffff959ed6f0bd08 R15: ffff959e00000028\nFS:  0000000000000000(0000) GS:ffff959eff480000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f4117fa1eb0 CR3: 0000002039e66000 CR4: 00000000003607e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n[<ffffffff8355907d>] __const_udelay+0x2d/0x30\n[<ffffffffc079444a>] qedf_initiate_els+0x13a/0x450 [qedf]\n[<ffffffffc0794210>] ? qedf_srr_compl+0x2a0/0x2a0 [qedf]\n[<ffffffffc0795337>] qedf_send_rrq+0x127/0x230 [qedf]\n[<ffffffffc078ed55>] qedf_handle_rrq+0x15/0x20 [qedf]\n[<ffffffff832b2dff>] process_one_work+0x17f/0x440\n[<ffffffff832b3ac6>] worker_thread+0x126/0x3c0\n[<ffffffff832b39a0>] ? manage_workers.isra.24+0x2a0/0x2a0\n[<ffffffff832bae31>] kthread+0xd1/0xe0\n[<ffffffff832bad60>] ? insert_kthread_work+0x40/0x40\n[<ffffffff8391f637>] ret_from_fork_nospec_begin+0x21/0x21\n[<ffffffff832bad60>] ? insert_kthread_work+0x40/0x40\n\nSigned-off-by: Chad Dupuis <cdupuis@marvell.com>\nSigned-off-by: Saurav Kashyap <skashyap@marvell.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
        "before_after_code_files": [
          "drivers/scsi/qedf/qedf_els.c||drivers/scsi/qedf/qedf_els.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/scsi/qedf/qedf_els.c||drivers/scsi/qedf/qedf_els.c": [
          "File: drivers/scsi/qedf/qedf_els.c -> drivers/scsi/qedf/qedf_els.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  int rc = 0;",
          "24:  uint32_t did, sid;",
          "25:  uint16_t xid;",
          "28:  struct fcoe_wqe *sqe;",
          "29:  unsigned long flags;",
          "30:  u16 sqe_idx;",
          "",
          "[Removed Lines]",
          "26:  uint32_t start_time = jiffies / HZ;",
          "27:  uint32_t current_time;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59:   goto els_err;",
          "60:  }",
          "63:  els_req = qedf_alloc_cmd(fcport, QEDF_ELS);",
          "64:  if (!els_req) {",
          "74:  }",
          "76:  QEDF_INFO(&(qedf->dbg_ctx), QEDF_LOG_ELS, \"initiate_els els_req = \"",
          "",
          "[Removed Lines]",
          "62: retry_els:",
          "65:   current_time = jiffies / HZ;",
          "66:   if ((current_time - start_time) > 10) {",
          "67:    QEDF_INFO(&(qedf->dbg_ctx), QEDF_LOG_ELS,",
          "68:        \"els: Failed els 0x%x\\n\", op);",
          "69:    rc = -ENOMEM;",
          "70:    goto els_err;",
          "71:   }",
          "72:   mdelay(20 * USEC_PER_MSEC);",
          "73:   goto retry_els;",
          "",
          "[Added Lines]",
          "62:   QEDF_INFO(&qedf->dbg_ctx, QEDF_LOG_ELS,",
          "63:      \"Failed to alloc ELS request 0x%x\\n\", op);",
          "64:   rc = -ENOMEM;",
          "65:   goto els_err;",
          "",
          "---------------"
        ]
      }
    }
  ]
}