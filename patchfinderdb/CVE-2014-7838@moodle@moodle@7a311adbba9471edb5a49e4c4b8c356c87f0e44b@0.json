{
  "cve_id": "CVE-2014-7838",
  "cve_desc": "Multiple cross-site request forgery (CSRF) vulnerabilities in the Forum module in Moodle through 2.4.11, 2.5.x before 2.5.9, 2.6.x before 2.6.6, and 2.7.x before 2.7.3 allow remote attackers to hijack the authentication of arbitrary users for requests that set a tracking preference within (1) mod/forum/deprecatedlib.php, (2) mod/forum/forum.js, (3) mod/forum/index.php, or (4) mod/forum/lib.php.",
  "repo": "moodle/moodle",
  "patch_hash": "7a311adbba9471edb5a49e4c4b8c356c87f0e44b",
  "patch_info": {
    "commit_hash": "7a311adbba9471edb5a49e4c4b8c356c87f0e44b",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/7a311adbba9471edb5a49e4c4b8c356c87f0e44b",
    "files": [
      "mod/forum/deprecatedlib.php",
      "mod/forum/forum.js",
      "mod/forum/index.php",
      "mod/forum/lib.php",
      "mod/forum/settracking.php"
    ],
    "message": "MDL-48019 mod_forum: Add sesskey checks when setting tracking prefs\n\nThis also removes set_url() and changes require_course_login to\nrequire_login as guests cannot set tracking.",
    "before_after_code_files": [
      "mod/forum/deprecatedlib.php||mod/forum/deprecatedlib.php",
      "mod/forum/forum.js||mod/forum/forum.js",
      "mod/forum/index.php||mod/forum/index.php",
      "mod/forum/lib.php||mod/forum/lib.php",
      "mod/forum/settracking.php||mod/forum/settracking.php"
    ]
  },
  "patch_diff": {
    "mod/forum/deprecatedlib.php||mod/forum/deprecatedlib.php": [
      "File: mod/forum/deprecatedlib.php -> mod/forum/deprecatedlib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "339:         $link .= '<noscript>';",
      "340:     }",
      "342:     $link .= $OUTPUT->single_button($url, $linktext, 'get', array('title'=>$linktitle));",
      "344:     if ($fakelink) {",
      "",
      "[Removed Lines]",
      "341:     $url = new moodle_url('/mod/forum/settracking.php', array('id'=>$forum->id));",
      "",
      "[Added Lines]",
      "341:     $url = new moodle_url('/mod/forum/settracking.php', array(",
      "342:             'id' => $forum->id,",
      "343:             'sesskey' => sesskey(),",
      "344:         ));",
      "",
      "---------------"
    ],
    "mod/forum/forum.js||mod/forum/forum.js": [
      "File: mod/forum/forum.js -> mod/forum/forum.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "13:     var elementid = \"trackinglink\";",
      "14:     var subs_link = document.getElementById(elementid);",
      "15:     if(subs_link){",
      "17:     }",
      "18: }",
      "",
      "[Removed Lines]",
      "16:         subs_link.innerHTML = \"<a title='\"+ltitle+\"' href='\"+M.cfg.wwwroot+\"/mod/forum/settracking.php?id=\"+forumid+\"'>\"+ltext+\"<\\/a>\";",
      "",
      "[Added Lines]",
      "16:         subs_link.innerHTML = \"<a title='\"+ltitle+\"' href='\"+M.cfg.wwwroot+\"/mod/forum/settracking.php?id=\"+forumid+\"&amp;sesskey=\"+M.cfg.sesskey+\"'>\"+ltext+\"<\\/a>\";",
      "",
      "---------------"
    ],
    "mod/forum/index.php||mod/forum/index.php": [
      "File: mod/forum/index.php -> mod/forum/index.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "240:                 } else if ($forum->trackingtype === FORUM_TRACKING_OFF || ($USER->trackforums == 0)) {",
      "241:                     $trackedlink = '-';",
      "242:                 } else {",
      "244:                     if (!isset($untracked[$forum->id])) {",
      "245:                         $trackedlink = $OUTPUT->single_button($aurl, $stryes, 'post', array('title'=>$strnotrackforum));",
      "246:                     } else {",
      "",
      "[Removed Lines]",
      "243:                     $aurl = new moodle_url('/mod/forum/settracking.php', array('id'=>$forum->id));",
      "",
      "[Added Lines]",
      "243:                     $aurl = new moodle_url('/mod/forum/settracking.php', array(",
      "244:                             'id' => $forum->id,",
      "245:                             'sesskey' => sesskey(),",
      "246:                         ));",
      "",
      "---------------"
    ],
    "mod/forum/lib.php||mod/forum/lib.php": [
      "File: mod/forum/lib.php -> mod/forum/lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "7107:             } else {",
      "7108:                 $linktext = get_string('trackforum', 'forum');",
      "7109:             }",
      "7111:             $forumnode->add($linktext, $url, navigation_node::TYPE_SETTING);",
      "7112:         }",
      "7113:     }",
      "",
      "[Removed Lines]",
      "7110:             $url = new moodle_url('/mod/forum/settracking.php', array('id'=>$forumobject->id));",
      "",
      "[Added Lines]",
      "7110:             $url = new moodle_url('/mod/forum/settracking.php', array(",
      "7111:                     'id' => $forumobject->id,",
      "7112:                     'sesskey' => sesskey(),",
      "7113:                 ));",
      "",
      "---------------"
    ],
    "mod/forum/settracking.php||mod/forum/settracking.php": [
      "File: mod/forum/settracking.php -> mod/forum/settracking.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "29: $id         = required_param('id',PARAM_INT);                           // The forum to subscribe or unsubscribe to",
      "30: $returnpage = optional_param('returnpage', 'index.php', PARAM_FILE);    // Page to return to.",
      "38: if (! $forum = $DB->get_record(\"forum\", array(\"id\" => $id))) {",
      "39:     print_error('invalidforumid', 'forum');",
      "",
      "[Removed Lines]",
      "32: $url = new moodle_url('/mod/forum/settracking.php', array('id'=>$id));",
      "33: if ($returnpage !== 'index.php') {",
      "34:     $url->param('returnpage', $returnpage);",
      "35: }",
      "36: $PAGE->set_url($url);",
      "",
      "[Added Lines]",
      "32: require_sesskey();",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "46: if (! $cm = get_coursemodule_from_instance(\"forum\", $forum->id, $course->id)) {",
      "47:     print_error('invalidcoursemodule');",
      "48: }",
      "52: $returnto = forum_go_back_to($returnpage.'?id='.$course->id.'&f='.$forum->id);",
      "",
      "[Removed Lines]",
      "50: require_course_login($course, false, $cm);",
      "",
      "[Added Lines]",
      "45: require_login($course, false, $cm);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "39de876c04018d4406c4b156a11c854f9033f820",
      "candidate_info": {
        "commit_hash": "39de876c04018d4406c4b156a11c854f9033f820",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/39de876c04018d4406c4b156a11c854f9033f820",
        "files": [
          "mod/forum/deprecatedlib.php",
          "mod/forum/lang/en/forum.php",
          "mod/forum/lib.php",
          "mod/forum/upgrade.txt"
        ],
        "message": "MDL-45625 mod_forum: Deprecate many old forum functions\n\nThis also moves these to their own file to help manage the deprecation process.",
        "before_after_code_files": [
          "mod/forum/deprecatedlib.php||mod/forum/deprecatedlib.php",
          "mod/forum/lang/en/forum.php||mod/forum/lang/en/forum.php",
          "mod/forum/lib.php||mod/forum/lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mod/forum/deprecatedlib.php||mod/forum/deprecatedlib.php",
            "mod/forum/lib.php||mod/forum/lib.php"
          ],
          "candidate": [
            "mod/forum/deprecatedlib.php||mod/forum/deprecatedlib.php",
            "mod/forum/lib.php||mod/forum/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/forum/deprecatedlib.php||mod/forum/deprecatedlib.php": [
          "File: mod/forum/deprecatedlib.php -> mod/forum/deprecatedlib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "23: defined('MOODLE_INTERNAL') || die();",
          "35: function forum_count_unrated_posts($discussionid, $userid) {",
          "36:     global $CFG, $DB;",
          "37:     debugging('forum_count_unrated_posts() is deprecated and will not be replaced.', DEBUG_DEVELOPER);",
          "39:     $sql = \"SELECT COUNT(*) as num",
          "40:               FROM {forum_posts}",
          "41:              WHERE parent > 0",
          "42:                AND discussion = :discussionid",
          "43:                AND userid <> :userid\";",
          "44:     $params = array('discussionid' => $discussionid, 'userid' => $userid);",
          "45:     $posts = $DB->get_record_sql($sql, $params);",
          "46:     if ($posts) {",
          "47:         $sql = \"SELECT count(*) as num",
          "48:                   FROM {forum_posts} p,",
          "49:                        {rating} r",
          "50:                  WHERE p.discussion = :discussionid AND",
          "51:                        p.id = r.itemid AND",
          "52:                        r.userid = userid AND",
          "53:                        r.component = 'mod_forum' AND",
          "54:                        r.ratingarea = 'post'\";",
          "55:         $rated = $DB->get_record_sql($sql, $params);",
          "56:         if ($rated) {",
          "57:             if ($posts->num > $rated->num) {",
          "58:                 return $posts->num - $rated->num;",
          "59:             } else {",
          "60:                 return 0;    // Just in case there was a counting error",
          "61:             }",
          "62:         } else {",
          "63:             return $posts->num;",
          "64:         }",
          "65:     } else {",
          "66:         return 0;",
          "67:     }",
          "68: }",
          "83: function forum_tp_count_discussion_read_records($userid, $discussionid) {",
          "84:     debugging('forum_tp_count_discussion_read_records() is deprecated and will not be replaced.', DEBUG_DEVELOPER);",
          "86:     global $CFG, $DB;",
          "88:     $cutoffdate = isset($CFG->forum_oldpostdays) ? (time() - ($CFG->forum_oldpostdays*24*60*60)) : 0;",
          "90:     $sql = 'SELECT COUNT(DISTINCT p.id) '.",
          "91:            'FROM {forum_discussions} d '.",
          "92:            'LEFT JOIN {forum_read} r ON d.id = r.discussionid AND r.userid = ? '.",
          "93:            'LEFT JOIN {forum_posts} p ON p.discussion = d.id '.",
          "94:                 'AND (p.modified < ? OR p.id = r.postid) '.",
          "95:            'WHERE d.id = ? ';",
          "97:     return ($DB->count_records_sql($sql, array($userid, $cutoffdate, $discussionid)));",
          "98: }",
          "111: function forum_get_user_discussions($courseid, $userid, $groupid=0) {",
          "112:     debugging('forum_get_user_discussions() is deprecated and will not be replaced.', DEBUG_DEVELOPER);",
          "114:     global $CFG, $DB;",
          "115:     $params = array($courseid, $userid);",
          "116:     if ($groupid) {",
          "117:         $groupselect = \" AND d.groupid = ? \";",
          "118:         $params[] = $groupid;",
          "119:     } else  {",
          "120:         $groupselect = \"\";",
          "121:     }",
          "123:     $allnames = get_all_user_name_fields(true, 'u');",
          "124:     return $DB->get_records_sql(\"SELECT p.*, d.groupid, $allnames, u.email, u.picture, u.imagealt,",
          "125:                                    f.type as forumtype, f.name as forumname, f.id as forumid",
          "126:                               FROM {forum_discussions} d,",
          "127:                                    {forum_posts} p,",
          "128:                                    {user} u,",
          "129:                                    {forum} f",
          "130:                              WHERE d.course = ?",
          "131:                                AND p.discussion = d.id",
          "132:                                AND p.parent = 0",
          "133:                                AND p.userid = u.id",
          "134:                                AND u.id = ?",
          "135:                                AND d.forum = f.id $groupselect",
          "136:                           ORDER BY p.created DESC\", $params);",
          "137: }",
          "151: function forum_tp_count_forum_posts($forumid, $groupid=false) {",
          "152:     debugging('forum_tp_count_forum_posts() is deprecated and will not be replaced.', DEBUG_DEVELOPER);",
          "154:     global $CFG, $DB;",
          "155:     $params = array($forumid);",
          "156:     $sql = 'SELECT COUNT(*) '.",
          "157:            'FROM {forum_posts} fp,{forum_discussions} fd '.",
          "158:            'WHERE fd.forum = ? AND fp.discussion = fd.id';",
          "159:     if ($groupid !== false) {",
          "160:         $sql .= ' AND (fd.groupid = ? OR fd.groupid = -1)';",
          "161:         $params[] = $groupid;",
          "162:     }",
          "163:     $count = $DB->count_records_sql($sql, $params);",
          "166:     return $count;",
          "167: }",
          "179: function forum_tp_count_forum_read_records($userid, $forumid, $groupid=false) {",
          "180:     debugging('forum_tp_count_forum_read_records() is deprecated and will not be replaced.', DEBUG_DEVELOPER);",
          "182:     global $CFG, $DB;",
          "184:     $cutoffdate = time() - ($CFG->forum_oldpostdays*24*60*60);",
          "186:     $groupsel = '';",
          "187:     $params = array($userid, $forumid, $cutoffdate);",
          "188:     if ($groupid !== false) {",
          "189:         $groupsel = \"AND (d.groupid = ? OR d.groupid = -1)\";",
          "190:         $params[] = $groupid;",
          "191:     }",
          "193:     $sql = \"SELECT COUNT(p.id)",
          "194:               FROM  {forum_posts} p",
          "195:                     JOIN {forum_discussions} d ON d.id = p.discussion",
          "196:                     LEFT JOIN {forum_read} r   ON (r.postid = p.id AND r.userid= ?)",
          "197:               WHERE d.forum = ?",
          "198:                     AND (p.modified < $cutoffdate OR (p.modified >= ? AND r.id IS NOT NULL))",
          "199:                     $groupsel\";",
          "201:     return $DB->get_field_sql($sql, $params);",
          "202: }",
          "214: function forum_get_open_modes() {",
          "215:     debugging('forum_get_open_modes() is deprecated and will not be replaced.', DEBUG_DEVELOPER);",
          "216:     return array();",
          "217: }",
          "234: function forum_get_child_posts($parent, $forumid) {",
          "235:     debugging('forum_get_child_posts() is deprecated.', DEBUG_DEVELOPER);",
          "237:     global $CFG, $DB;",
          "239:     $allnames = get_all_user_name_fields(true, 'u');",
          "240:     return $DB->get_records_sql(\"SELECT p.*, $forumid AS forum, $allnames, u.email, u.picture, u.imagealt",
          "241:                               FROM {forum_posts} p",
          "242:                          LEFT JOIN {user} u ON p.userid = u.id",
          "243:                              WHERE p.parent = ?",
          "244:                           ORDER BY p.created ASC\", array($parent));",
          "245: }",
          "257: function forum_get_discussion_posts($discussion, $sort, $forumid) {",
          "258:     debugging('forum_get_discussion_posts() is deprecated.', DEBUG_DEVELOPER);",
          "260:     global $CFG, $DB;",
          "262:     $allnames = get_all_user_name_fields(true, 'u');",
          "263:     return $DB->get_records_sql(\"SELECT p.*, $forumid AS forum, $allnames, u.email, u.picture, u.imagealt",
          "264:                               FROM {forum_posts} p",
          "265:                          LEFT JOIN {user} u ON p.userid = u.id",
          "266:                              WHERE p.discussion = ?",
          "267:                                AND p.parent > 0 $sort\", array($discussion));",
          "268: }",
          "282: function forum_get_ratings($context, $postid, $sort = \"u.firstname ASC\") {",
          "283:     debugging('forum_get_ratings() is deprecated.', DEBUG_DEVELOPER);",
          "284:     $options = new stdClass;",
          "285:     $options->context = $context;",
          "286:     $options->component = 'mod_forum';",
          "287:     $options->ratingarea = 'post';",
          "288:     $options->itemid = $postid;",
          "289:     $options->sort = \"ORDER BY $sort\";",
          "291:     $rm = new rating_manager();",
          "292:     return $rm->get_all_ratings_for_item($options);",
          "293: }",
          "307: function forum_get_tracking_link($forum, $messages=array(), $fakelink=true) {",
          "308:     debugging('forum_get_tracking_link() is deprecated.', DEBUG_DEVELOPER);",
          "310:     global $CFG, $USER, $PAGE, $OUTPUT;",
          "312:     static $strnotrackforum, $strtrackforum;",
          "314:     if (isset($messages['trackforum'])) {",
          "315:          $strtrackforum = $messages['trackforum'];",
          "316:     }",
          "317:     if (isset($messages['notrackforum'])) {",
          "318:          $strnotrackforum = $messages['notrackforum'];",
          "319:     }",
          "320:     if (empty($strtrackforum)) {",
          "321:         $strtrackforum = get_string('trackforum', 'forum');",
          "322:     }",
          "323:     if (empty($strnotrackforum)) {",
          "324:         $strnotrackforum = get_string('notrackforum', 'forum');",
          "325:     }",
          "327:     if (forum_tp_is_tracked($forum)) {",
          "328:         $linktitle = $strnotrackforum;",
          "329:         $linktext = $strnotrackforum;",
          "330:     } else {",
          "331:         $linktitle = $strtrackforum;",
          "332:         $linktext = $strtrackforum;",
          "333:     }",
          "335:     $link = '';",
          "336:     if ($fakelink) {",
          "337:         $PAGE->requires->js('/mod/forum/forum.js');",
          "338:         $PAGE->requires->js_function_call('forum_produce_tracking_link', Array($forum->id, $linktext, $linktitle));",
          "340:         $link .= '<noscript>';",
          "341:     }",
          "342:     $url = new moodle_url('/mod/forum/settracking.php', array('id'=>$forum->id));",
          "343:     $link .= $OUTPUT->single_button($url, $linktext, 'get', array('title'=>$linktitle));",
          "345:     if ($fakelink) {",
          "346:         $link .= '</noscript>';",
          "347:     }",
          "349:     return $link;",
          "350: }",
          "362: function forum_tp_count_discussion_unread_posts($userid, $discussionid) {",
          "363:     debugging('forum_tp_count_discussion_unread_posts() is deprecated.', DEBUG_DEVELOPER);",
          "364:     global $CFG, $DB;",
          "366:     $cutoffdate = isset($CFG->forum_oldpostdays) ? (time() - ($CFG->forum_oldpostdays*24*60*60)) : 0;",
          "368:     $sql = 'SELECT COUNT(p.id) '.",
          "369:            'FROM {forum_posts} p '.",
          "370:            'LEFT JOIN {forum_read} r ON r.postid = p.id AND r.userid = ? '.",
          "371:            'WHERE p.discussion = ? '.",
          "372:                 'AND p.modified >= ? AND r.id is NULL';",
          "374:     return $DB->count_records_sql($sql, array($userid, $discussionid, $cutoffdate));",
          "375: }",
          "382: function forum_convert_to_roles() {",
          "383:     debugging('forum_convert_to_roles() is deprecated and will not be replaced.', DEBUG_DEVELOPER);",
          "384: }",
          "398: function forum_tp_get_read_records($userid=-1, $postid=-1, $discussionid=-1, $forumid=-1) {",
          "399:     debugging('forum_tp_get_read_records() is deprecated and will not be replaced.', DEBUG_DEVELOPER);",
          "401:     global $DB;",
          "402:     $select = '';",
          "403:     $params = array();",
          "405:     if ($userid > -1) {",
          "406:         if ($select != '') $select .= ' AND ';",
          "407:         $select .= 'userid = ?';",
          "408:         $params[] = $userid;",
          "409:     }",
          "410:     if ($postid > -1) {",
          "411:         if ($select != '') $select .= ' AND ';",
          "412:         $select .= 'postid = ?';",
          "413:         $params[] = $postid;",
          "414:     }",
          "415:     if ($discussionid > -1) {",
          "416:         if ($select != '') $select .= ' AND ';",
          "417:         $select .= 'discussionid = ?';",
          "418:         $params[] = $discussionid;",
          "419:     }",
          "420:     if ($forumid > -1) {",
          "421:         if ($select != '') $select .= ' AND ';",
          "422:         $select .= 'forumid = ?';",
          "423:         $params[] = $forumid;",
          "424:     }",
          "426:     return $DB->get_records_select('forum_read', $select, $params);",
          "427: }",
          "437: function forum_tp_get_discussion_read_records($userid, $discussionid) {",
          "438:     debugging('forum_tp_get_discussion_read_records() is deprecated and will not be replaced.', DEBUG_DEVELOPER);",
          "440:     global $DB;",
          "441:     $select = 'userid = ? AND discussionid = ?';",
          "442:     $fields = 'postid, firstread, lastread';",
          "443:     return $DB->get_records_select('forum_read', $select, array($userid, $discussionid), '', $fields);",
          "444: }",
          "455: function forum_user_enrolled($cp) {",
          "456:     debugging('forum_user_enrolled() is deprecated. Please use forum_user_role_assigned instead.', DEBUG_DEVELOPER);",
          "457:     global $DB;",
          "463:     $sql = \"SELECT f.id",
          "464:               FROM {forum} f",
          "465:          LEFT JOIN {forum_subscriptions} fs ON (fs.forum = f.id AND fs.userid = :userid)",
          "466:              WHERE f.course = :courseid AND f.forcesubscribe = :initial AND fs.id IS NULL\";",
          "467:     $params = array('courseid'=>$cp->courseid, 'userid'=>$cp->userid, 'initial'=>FORUM_INITIALSUBSCRIBE);",
          "469:     $forums = $DB->get_records_sql($sql, $params);",
          "470:     foreach ($forums as $forum) {",
          "471:         forum_subscribe($cp->userid, $forum->id);",
          "472:     }",
          "473: }",
          "491: function forum_user_can_view_post($post, $course, $cm, $forum, $discussion, $user=null){",
          "492:     debugging('forum_user_can_view_post() is deprecated. Please use forum_user_can_see_post() instead.', DEBUG_DEVELOPER);",
          "493:     return forum_user_can_see_post($forum, $discussion, $post, $user, $cm);",
          "494: }",
          "503: define('FORUM_TRACKING_ON', 2);",
          "519: function forum_shorten_post($message) {",
          "520:    global $CFG;",
          "521:    debugging('forum_shorten_post() is deprecated since Moodle 2.6. Please use shorten_text($message, $CFG->forum_shortpost) instead.', DEBUG_DEVELOPER);",
          "522:    return shorten_text($message, $CFG->forum_shortpost);",
          "523: }",
          "",
          "---------------"
        ],
        "mod/forum/lang/en/forum.php||mod/forum/lang/en/forum.php": [
          "File: mod/forum/lang/en/forum.php -> mod/forum/lang/en/forum.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "339: $string['olderdiscussions'] = 'Older discussions';",
          "340: $string['oldertopics'] = 'Older topics';",
          "341: $string['oldpostdays'] = 'Read after days';",
          "345: $string['overviewnumpostssince'] = '{$a} posts since last login';",
          "346: $string['overviewnumunread'] = '{$a} total unread';",
          "347: $string['page-mod-forum-x'] = 'Any forum module page';",
          "",
          "[Removed Lines]",
          "342: $string['openmode0'] = 'No discussions, no replies';",
          "343: $string['openmode1'] = 'No discussions, but replies are allowed';",
          "344: $string['openmode2'] = 'Discussions and replies are allowed';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "mod/forum/lib.php||mod/forum/lib.php": [
          "File: mod/forum/lib.php -> mod/forum/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: defined('MOODLE_INTERNAL') || die();",
          "26: require_once($CFG->libdir.'/filelib.php');",
          "27: require_once($CFG->libdir.'/eventslib.php');",
          "28: require_once($CFG->dirroot.'/user/selector/lib.php');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: require_once(__DIR__ . '/deprecatedlib.php');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56: define('FORUM_TRACKING_FORCED', 2);",
          "64: define('FORUM_MAILED_PENDING', 0);",
          "65: define('FORUM_MAILED_SUCCESS', 1);",
          "66: define('FORUM_MAILED_ERROR', 2);",
          "",
          "[Removed Lines]",
          "62: define('FORUM_TRACKING_ON', 2);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1820:                             WHERE p.id = ?\", array($postid));",
          "1821: }",
          "",
          "[Removed Lines]",
          "1832: function forum_get_discussion_posts($discussion, $sort, $forumid) {",
          "1833:     global $CFG, $DB;",
          "1835:     $allnames = get_all_user_name_fields(true, 'u');",
          "1836:     return $DB->get_records_sql(\"SELECT p.*, $forumid AS forum, $allnames, u.email, u.picture, u.imagealt",
          "1837:                               FROM {forum_posts} p",
          "1838:                          LEFT JOIN {user} u ON p.userid = u.id",
          "1839:                              WHERE p.discussion = ?",
          "1840:                                AND p.parent > 0 $sort\", array($discussion));",
          "1841: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1898:     return $posts;",
          "1899: }",
          "",
          "[Removed Lines]",
          "1912: function forum_get_child_posts($parent, $forumid) {",
          "1913:     global $CFG, $DB;",
          "1915:     $allnames = get_all_user_name_fields(true, 'u');",
          "1916:     return $DB->get_records_sql(\"SELECT p.*, $forumid AS forum, $allnames, u.email, u.picture, u.imagealt",
          "1917:                               FROM {forum_posts} p",
          "1918:                          LEFT JOIN {user} u ON p.userid = u.id",
          "1919:                              WHERE p.parent = ?",
          "1920:                           ORDER BY p.created ASC\", array($parent));",
          "1921: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2163:     return $DB->get_records_sql($searchsql, $params, $limitfrom, $limitnum);",
          "2164: }",
          "",
          "[Removed Lines]",
          "2177: function forum_get_ratings($context, $postid, $sort = \"u.firstname ASC\") {",
          "2178:     $options = new stdClass;",
          "2179:     $options->context = $context;",
          "2180:     $options->component = 'mod_forum';",
          "2181:     $options->ratingarea = 'post';",
          "2182:     $options->itemid = $postid;",
          "2183:     $options->sort = \"ORDER BY $sort\";",
          "2185:     $rm = new rating_manager();",
          "2186:     return $rm->get_all_ratings_for_item($options);",
          "2187: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2570:     return $DB->get_field_sql($sql, $params);",
          "2571: }",
          "",
          "[Removed Lines]",
          "2582: function forum_count_unrated_posts($discussionid, $userid) {",
          "2583:     global $CFG, $DB;",
          "2585:     $sql = \"SELECT COUNT(*) as num",
          "2586:               FROM {forum_posts}",
          "2587:              WHERE parent > 0",
          "2588:                AND discussion = :discussionid",
          "2589:                AND userid <> :userid\";",
          "2590:     $params = array('discussionid' => $discussionid, 'userid' => $userid);",
          "2591:     $posts = $DB->get_record_sql($sql, $params);",
          "2592:     if ($posts) {",
          "2593:         $sql = \"SELECT count(*) as num",
          "2594:                   FROM {forum_posts} p,",
          "2595:                        {rating} r",
          "2596:                  WHERE p.discussion = :discussionid AND",
          "2597:                        p.id = r.itemid AND",
          "2598:                        r.userid = userid AND",
          "2599:                        r.component = 'mod_forum' AND",
          "2600:                        r.ratingarea = 'post'\";",
          "2601:         $rated = $DB->get_record_sql($sql, $params);",
          "2602:         if ($rated) {",
          "2603:             if ($posts->num > $rated->num) {",
          "2604:                 return $posts->num - $rated->num;",
          "2605:             } else {",
          "2606:                 return 0;    // Just in case there was a counting error",
          "2607:             }",
          "2608:         } else {",
          "2609:             return $posts->num;",
          "2610:         }",
          "2611:     } else {",
          "2612:         return 0;",
          "2613:     }",
          "2614: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2874: }",
          "",
          "[Removed Lines]",
          "2889: function forum_get_user_discussions($courseid, $userid, $groupid=0) {",
          "2890:     global $CFG, $DB;",
          "2891:     $params = array($courseid, $userid);",
          "2892:     if ($groupid) {",
          "2893:         $groupselect = \" AND d.groupid = ? \";",
          "2894:         $params[] = $groupid;",
          "2895:     } else  {",
          "2896:         $groupselect = \"\";",
          "2897:     }",
          "2899:     $allnames = get_all_user_name_fields(true, 'u');",
          "2900:     return $DB->get_records_sql(\"SELECT p.*, d.groupid, $allnames, u.email, u.picture, u.imagealt,",
          "2901:                                    f.type as forumtype, f.name as forumname, f.id as forumid",
          "2902:                               FROM {forum_discussions} d,",
          "2903:                                    {forum_posts} p,",
          "2904:                                    {user} u,",
          "2905:                                    {forum} f",
          "2906:                              WHERE d.course = ?",
          "2907:                                AND p.discussion = d.id",
          "2908:                                AND p.parent = 0",
          "2909:                                AND p.userid = u.id",
          "2910:                                AND u.id = ?",
          "2911:                                AND d.forum = f.id $groupselect",
          "2912:                           ORDER BY p.created DESC\", $params);",
          "2913: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "3854: }",
          "",
          "[Removed Lines]",
          "3870: function forum_shorten_post($message) {",
          "3871:    global $CFG;",
          "3872:    debugging('forum_shorten_post() is deprecated since Moodle 2.6. Please use shorten_text($message, $CFG->forum_shortpost) instead.', DEBUG_DEVELOPER);",
          "3873:    return shorten_text($message, $CFG->forum_shortpost);",
          "3874: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "5012:     }",
          "5013: }",
          "",
          "[Removed Lines]",
          "5027: function forum_get_tracking_link($forum, $messages=array(), $fakelink=true) {",
          "5028:     global $CFG, $USER, $PAGE, $OUTPUT;",
          "5030:     static $strnotrackforum, $strtrackforum;",
          "5032:     if (isset($messages['trackforum'])) {",
          "5033:          $strtrackforum = $messages['trackforum'];",
          "5034:     }",
          "5035:     if (isset($messages['notrackforum'])) {",
          "5036:          $strnotrackforum = $messages['notrackforum'];",
          "5037:     }",
          "5038:     if (empty($strtrackforum)) {",
          "5039:         $strtrackforum = get_string('trackforum', 'forum');",
          "5040:     }",
          "5041:     if (empty($strnotrackforum)) {",
          "5042:         $strnotrackforum = get_string('notrackforum', 'forum');",
          "5043:     }",
          "5045:     if (forum_tp_is_tracked($forum)) {",
          "5046:         $linktitle = $strnotrackforum;",
          "5047:         $linktext = $strnotrackforum;",
          "5048:     } else {",
          "5049:         $linktitle = $strtrackforum;",
          "5050:         $linktext = $strtrackforum;",
          "5051:     }",
          "5053:     $link = '';",
          "5054:     if ($fakelink) {",
          "5055:         $PAGE->requires->js('/mod/forum/forum.js');",
          "5056:         $PAGE->requires->js_function_call('forum_produce_tracking_link', Array($forum->id, $linktext, $linktitle));",
          "5058:         $link .= '<noscript>';",
          "5059:     }",
          "5060:     $url = new moodle_url('/mod/forum/settracking.php', array('id'=>$forum->id));",
          "5061:     $link .= $OUTPUT->single_button($url, $linktext, 'get', array('title'=>$linktitle));",
          "5063:     if ($fakelink) {",
          "5064:         $link .= '</noscript>';",
          "5065:     }",
          "5067:     return $link;",
          "5068: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "5310:     }",
          "5311: }",
          "",
          "[Removed Lines]",
          "5326: function forum_user_can_view_post($post, $course, $cm, $forum, $discussion, $user=null){",
          "5327:     debugging('forum_user_can_view_post() is deprecated. Please use forum_user_can_see_post() instead.', DEBUG_DEVELOPER);",
          "5328:     return forum_user_can_see_post($forum, $discussion, $post, $user, $cm);",
          "5329: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "6255:            \"<input type=\\\"submit\\\" value=\\\"$string\\\" /></form>\";",
          "6256: }",
          "",
          "[Removed Lines]",
          "6265: function forum_user_enrolled($cp) {",
          "6266:     global $DB;",
          "6272:     $sql = \"SELECT f.id",
          "6273:               FROM {forum} f",
          "6274:          LEFT JOIN {forum_subscriptions} fs ON (fs.forum = f.id AND fs.userid = :userid)",
          "6275:              WHERE f.course = :courseid AND f.forcesubscribe = :initial AND fs.id IS NULL\";",
          "6276:     $params = array('courseid'=>$cp->courseid, 'userid'=>$cp->userid, 'initial'=>FORUM_INITIALSUBSCRIBE);",
          "6278:     $forums = $DB->get_records_sql($sql, $params);",
          "6279:     foreach ($forums as $forum) {",
          "6280:         forum_subscribe($cp->userid, $forum->id);",
          "6281:     }",
          "6282: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "6399:     }",
          "6400: }",
          "",
          "[Removed Lines]",
          "6413: function forum_tp_get_read_records($userid=-1, $postid=-1, $discussionid=-1, $forumid=-1) {",
          "6414:     global $DB;",
          "6415:     $select = '';",
          "6416:     $params = array();",
          "6418:     if ($userid > -1) {",
          "6419:         if ($select != '') $select .= ' AND ';",
          "6420:         $select .= 'userid = ?';",
          "6421:         $params[] = $userid;",
          "6422:     }",
          "6423:     if ($postid > -1) {",
          "6424:         if ($select != '') $select .= ' AND ';",
          "6425:         $select .= 'postid = ?';",
          "6426:         $params[] = $postid;",
          "6427:     }",
          "6428:     if ($discussionid > -1) {",
          "6429:         if ($select != '') $select .= ' AND ';",
          "6430:         $select .= 'discussionid = ?';",
          "6431:         $params[] = $discussionid;",
          "6432:     }",
          "6433:     if ($forumid > -1) {",
          "6434:         if ($select != '') $select .= ' AND ';",
          "6435:         $select .= 'forumid = ?';",
          "6436:         $params[] = $forumid;",
          "6437:     }",
          "6439:     return $DB->get_records_select('forum_read', $select, $params);",
          "6440: }",
          "6449: function forum_tp_get_discussion_read_records($userid, $discussionid) {",
          "6450:     global $DB;",
          "6451:     $select = 'userid = ? AND discussionid = ?';",
          "6452:     $fields = 'postid, firstread, lastread';",
          "6453:     return $DB->get_records_select('forum_read', $select, array($userid, $discussionid), '', $fields);",
          "6454: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "6558:     return ($post->modified < ($time - ($CFG->forum_oldpostdays * 24 * 3600)));",
          "6559: }",
          "",
          "[Removed Lines]",
          "6570: function forum_tp_count_discussion_read_records($userid, $discussionid) {",
          "6571:     global $CFG, $DB;",
          "6573:     $cutoffdate = isset($CFG->forum_oldpostdays) ? (time() - ($CFG->forum_oldpostdays*24*60*60)) : 0;",
          "6575:     $sql = 'SELECT COUNT(DISTINCT p.id) '.",
          "6576:            'FROM {forum_discussions} d '.",
          "6577:            'LEFT JOIN {forum_read} r ON d.id = r.discussionid AND r.userid = ? '.",
          "6578:            'LEFT JOIN {forum_posts} p ON p.discussion = d.id '.",
          "6579:                 'AND (p.modified < ? OR p.id = r.postid) '.",
          "6580:            'WHERE d.id = ? ';",
          "6582:     return ($DB->count_records_sql($sql, array($userid, $cutoffdate, $discussionid)));",
          "6583: }",
          "6594: function forum_tp_count_discussion_unread_posts($userid, $discussionid) {",
          "6595:     global $CFG, $DB;",
          "6597:     $cutoffdate = isset($CFG->forum_oldpostdays) ? (time() - ($CFG->forum_oldpostdays*24*60*60)) : 0;",
          "6599:     $sql = 'SELECT COUNT(p.id) '.",
          "6600:            'FROM {forum_posts} p '.",
          "6601:            'LEFT JOIN {forum_read} r ON r.postid = p.id AND r.userid = ? '.",
          "6602:            'WHERE p.discussion = ? '.",
          "6603:                 'AND p.modified >= ? AND r.id is NULL';",
          "6605:     return $DB->count_records_sql($sql, array($userid, $discussionid, $cutoffdate));",
          "6606: }",
          "6616: function forum_tp_count_forum_posts($forumid, $groupid=false) {",
          "6617:     global $CFG, $DB;",
          "6618:     $params = array($forumid);",
          "6619:     $sql = 'SELECT COUNT(*) '.",
          "6620:            'FROM {forum_posts} fp,{forum_discussions} fd '.",
          "6621:            'WHERE fd.forum = ? AND fp.discussion = fd.id';",
          "6622:     if ($groupid !== false) {",
          "6623:         $sql .= ' AND (fd.groupid = ? OR fd.groupid = -1)';",
          "6624:         $params[] = $groupid;",
          "6625:     }",
          "6626:     $count = $DB->count_records_sql($sql, $params);",
          "6629:     return $count;",
          "6630: }",
          "6641: function forum_tp_count_forum_read_records($userid, $forumid, $groupid=false) {",
          "6642:     global $CFG, $DB;",
          "6644:     $cutoffdate = time() - ($CFG->forum_oldpostdays*24*60*60);",
          "6646:     $groupsel = '';",
          "6647:     $params = array($userid, $forumid, $cutoffdate);",
          "6648:     if ($groupid !== false) {",
          "6649:         $groupsel = \"AND (d.groupid = ? OR d.groupid = -1)\";",
          "6650:         $params[] = $groupid;",
          "6651:     }",
          "6653:     $sql = \"SELECT COUNT(p.id)",
          "6654:               FROM  {forum_posts} p",
          "6655:                     JOIN {forum_discussions} d ON d.id = p.discussion",
          "6656:                     LEFT JOIN {forum_read} r   ON (r.postid = p.id AND r.userid= ?)",
          "6657:               WHERE d.forum = ?",
          "6658:                     AND (p.modified < $cutoffdate OR (p.modified >= ? AND r.id IS NOT NULL))",
          "6659:                     $groupsel\";",
          "6661:     return $DB->get_field_sql($sql, $params);",
          "6662: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "7434:     return array('reset_forum_all'=>1, 'reset_forum_digests' => 0, 'reset_forum_subscriptions'=>0, 'reset_forum_track_prefs'=>0, 'reset_forum_ratings'=>1);",
          "7435: }",
          "",
          "[Removed Lines]",
          "7451: function forum_convert_to_roles($forum, $forummodid, $teacherroles=array(),",
          "7452:                                 $studentroles=array(), $guestroles=array(), $cmid=NULL) {",
          "7454:     global $CFG, $DB, $OUTPUT;",
          "7456:     if (!isset($forum->open) && !isset($forum->assesspublic)) {",
          "7460:         return false;",
          "7461:     }",
          "7463:     if ($forum->type == 'teacher') {",
          "7470:         require_once($CFG->dirroot.'/course/lib.php');",
          "7472:         if ($DB->count_records('forum_discussions', array('forum' => $forum->id)) == 0) {",
          "7474:             $DB->delete_records('forum', array('id' => $forum->id));",
          "7475:         } else {",
          "7478:             $mod = new stdClass();",
          "7479:             $mod->course = $forum->course;",
          "7480:             $mod->module = $forummodid;",
          "7481:             $mod->instance = $forum->id;",
          "7482:             $mod->section = 0;",
          "7483:             $mod->visible = 0;     // Hide the forum",
          "7484:             $mod->visibleold = 0;  // Hide the forum",
          "7485:             $mod->groupmode = 0;",
          "7487:             if (!$cmid = add_course_module($mod)) {",
          "7488:                 print_error('cannotcreateinstanceforteacher', 'forum');",
          "7489:             } else {",
          "7490:                 $sectionid = course_add_cm_to_section($forum->course, $mod->coursemodule, 0);",
          "7491:             }",
          "7494:             $forum->type = 'general';",
          "7495:             $DB->update_record('forum', $forum);",
          "7497:             $context = context_module::instance($cmid);",
          "7500:             foreach ($studentroles as $studentrole) {",
          "7501:                 assign_capability('mod/forum:viewdiscussion', CAP_PREVENT, $studentrole->id, $context->id);",
          "7502:                 assign_capability('mod/forum:viewhiddentimedposts', CAP_PREVENT, $studentrole->id, $context->id);",
          "7503:                 assign_capability('mod/forum:startdiscussion', CAP_PREVENT, $studentrole->id, $context->id);",
          "7504:                 assign_capability('mod/forum:replypost', CAP_PREVENT, $studentrole->id, $context->id);",
          "7505:                 assign_capability('mod/forum:viewrating', CAP_PREVENT, $studentrole->id, $context->id);",
          "7506:                 assign_capability('mod/forum:viewanyrating', CAP_PREVENT, $studentrole->id, $context->id);",
          "7507:                 assign_capability('mod/forum:rate', CAP_PREVENT, $studentrole->id, $context->id);",
          "7508:                 assign_capability('mod/forum:createattachment', CAP_PREVENT, $studentrole->id, $context->id);",
          "7509:                 assign_capability('mod/forum:deleteownpost', CAP_PREVENT, $studentrole->id, $context->id);",
          "7510:                 assign_capability('mod/forum:deleteanypost', CAP_PREVENT, $studentrole->id, $context->id);",
          "7511:                 assign_capability('mod/forum:splitdiscussions', CAP_PREVENT, $studentrole->id, $context->id);",
          "7512:                 assign_capability('mod/forum:movediscussions', CAP_PREVENT, $studentrole->id, $context->id);",
          "7513:                 assign_capability('mod/forum:editanypost', CAP_PREVENT, $studentrole->id, $context->id);",
          "7514:                 assign_capability('mod/forum:viewqandawithoutposting', CAP_PREVENT, $studentrole->id, $context->id);",
          "7515:                 assign_capability('mod/forum:viewsubscribers', CAP_PREVENT, $studentrole->id, $context->id);",
          "7516:                 assign_capability('mod/forum:managesubscriptions', CAP_PREVENT, $studentrole->id, $context->id);",
          "7517:                 assign_capability('mod/forum:postwithoutthrottling', CAP_PREVENT, $studentrole->id, $context->id);",
          "7518:             }",
          "7519:             foreach ($guestroles as $guestrole) {",
          "7520:                 assign_capability('mod/forum:viewdiscussion', CAP_PREVENT, $guestrole->id, $context->id);",
          "7521:                 assign_capability('mod/forum:viewhiddentimedposts', CAP_PREVENT, $guestrole->id, $context->id);",
          "7522:                 assign_capability('mod/forum:startdiscussion', CAP_PREVENT, $guestrole->id, $context->id);",
          "7523:                 assign_capability('mod/forum:replypost', CAP_PREVENT, $guestrole->id, $context->id);",
          "7524:                 assign_capability('mod/forum:viewrating', CAP_PREVENT, $guestrole->id, $context->id);",
          "7525:                 assign_capability('mod/forum:viewanyrating', CAP_PREVENT, $guestrole->id, $context->id);",
          "7526:                 assign_capability('mod/forum:rate', CAP_PREVENT, $guestrole->id, $context->id);",
          "7527:                 assign_capability('mod/forum:createattachment', CAP_PREVENT, $guestrole->id, $context->id);",
          "7528:                 assign_capability('mod/forum:deleteownpost', CAP_PREVENT, $guestrole->id, $context->id);",
          "7529:                 assign_capability('mod/forum:deleteanypost', CAP_PREVENT, $guestrole->id, $context->id);",
          "7530:                 assign_capability('mod/forum:splitdiscussions', CAP_PREVENT, $guestrole->id, $context->id);",
          "7531:                 assign_capability('mod/forum:movediscussions', CAP_PREVENT, $guestrole->id, $context->id);",
          "7532:                 assign_capability('mod/forum:editanypost', CAP_PREVENT, $guestrole->id, $context->id);",
          "7533:                 assign_capability('mod/forum:viewqandawithoutposting', CAP_PREVENT, $guestrole->id, $context->id);",
          "7534:                 assign_capability('mod/forum:viewsubscribers', CAP_PREVENT, $guestrole->id, $context->id);",
          "7535:                 assign_capability('mod/forum:managesubscriptions', CAP_PREVENT, $guestrole->id, $context->id);",
          "7536:                 assign_capability('mod/forum:postwithoutthrottling', CAP_PREVENT, $guestrole->id, $context->id);",
          "7537:             }",
          "7538:         }",
          "7539:     } else {",
          "7542:         if (empty($cmid)) {",
          "7544:             if (!$cm = get_coursemodule_from_instance('forum', $forum->id)) {",
          "7545:                 echo $OUTPUT->notification('Could not get the course module for the forum');",
          "7546:                 return false;",
          "7547:             } else {",
          "7548:                 $cmid = $cm->id;",
          "7549:             }",
          "7550:         }",
          "7551:         $context = context_module::instance($cmid);",
          "7557:         switch ($forum->open) {",
          "7558:             case 0:",
          "7559:                 foreach ($studentroles as $studentrole) {",
          "7560:                     assign_capability('mod/forum:startdiscussion', CAP_PREVENT, $studentrole->id, $context->id);",
          "7561:                     assign_capability('mod/forum:replypost', CAP_PREVENT, $studentrole->id, $context->id);",
          "7562:                 }",
          "7563:                 break;",
          "7564:             case 1:",
          "7565:                 foreach ($studentroles as $studentrole) {",
          "7566:                     assign_capability('mod/forum:startdiscussion', CAP_PREVENT, $studentrole->id, $context->id);",
          "7567:                     assign_capability('mod/forum:replypost', CAP_ALLOW, $studentrole->id, $context->id);",
          "7568:                 }",
          "7569:                 break;",
          "7570:             case 2:",
          "7571:                 foreach ($studentroles as $studentrole) {",
          "7572:                     assign_capability('mod/forum:startdiscussion', CAP_ALLOW, $studentrole->id, $context->id);",
          "7573:                     assign_capability('mod/forum:replypost', CAP_ALLOW, $studentrole->id, $context->id);",
          "7574:                 }",
          "7575:                 break;",
          "7576:         }",
          "7582:         switch ($forum->assessed) {",
          "7583:             case 1:",
          "7584:                 foreach ($studentroles as $studentrole) {",
          "7585:                     assign_capability('mod/forum:rate', CAP_ALLOW, $studentrole->id, $context->id);",
          "7586:                 }",
          "7587:                 foreach ($teacherroles as $teacherrole) {",
          "7588:                     assign_capability('mod/forum:rate', CAP_ALLOW, $teacherrole->id, $context->id);",
          "7589:                 }",
          "7590:                 break;",
          "7591:             case 2:",
          "7592:                 foreach ($studentroles as $studentrole) {",
          "7593:                     assign_capability('mod/forum:rate', CAP_PREVENT, $studentrole->id, $context->id);",
          "7594:                 }",
          "7595:                 foreach ($teacherroles as $teacherrole) {",
          "7596:                     assign_capability('mod/forum:rate', CAP_ALLOW, $teacherrole->id, $context->id);",
          "7597:                 }",
          "7598:                 break;",
          "7599:         }",
          "7605:         switch ($forum->assesspublic) {",
          "7606:             case 0:",
          "7607:                 foreach ($studentroles as $studentrole) {",
          "7608:                     assign_capability('mod/forum:viewanyrating', CAP_PREVENT, $studentrole->id, $context->id);",
          "7609:                 }",
          "7610:                 foreach ($teacherroles as $teacherrole) {",
          "7611:                     assign_capability('mod/forum:viewanyrating', CAP_ALLOW, $teacherrole->id, $context->id);",
          "7612:                 }",
          "7613:                 break;",
          "7614:             case 1:",
          "7615:                 foreach ($studentroles as $studentrole) {",
          "7616:                     assign_capability('mod/forum:viewanyrating', CAP_ALLOW, $studentrole->id, $context->id);",
          "7617:                 }",
          "7618:                 foreach ($teacherroles as $teacherrole) {",
          "7619:                     assign_capability('mod/forum:viewanyrating', CAP_ALLOW, $teacherrole->id, $context->id);",
          "7620:                 }",
          "7621:                 break;",
          "7622:         }",
          "7624:         if (empty($cm)) {",
          "7625:             $cm = $DB->get_record('course_modules', array('id' => $cmid));",
          "7626:         }",
          "7632:         switch ($cm->groupmode) {",
          "7633:             case 0:",
          "7634:                 break;",
          "7635:             case 1:",
          "7636:                 foreach ($studentroles as $studentrole) {",
          "7637:                     assign_capability('moodle/site:accessallgroups', CAP_PREVENT, $studentrole->id, $context->id);",
          "7638:                 }",
          "7639:                 foreach ($teacherroles as $teacherrole) {",
          "7640:                     assign_capability('moodle/site:accessallgroups', CAP_ALLOW, $teacherrole->id, $context->id);",
          "7641:                 }",
          "7642:                 break;",
          "7643:             case 2:",
          "7644:                 foreach ($studentroles as $studentrole) {",
          "7645:                     assign_capability('moodle/site:accessallgroups', CAP_ALLOW, $studentrole->id, $context->id);",
          "7646:                 }",
          "7647:                 foreach ($teacherroles as $teacherrole) {",
          "7648:                     assign_capability('moodle/site:accessallgroups', CAP_ALLOW, $teacherrole->id, $context->id);",
          "7649:                 }",
          "7650:                 break;",
          "7651:         }",
          "7652:     }",
          "7653:     return true;",
          "7654: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "7693:                   'blog'     => get_string('blogforum', 'forum'));",
          "7694: }",
          "",
          "[Removed Lines]",
          "7701: function forum_get_open_modes() {",
          "7702:     return array ('2' => get_string('openmode2', 'forum'),",
          "7703:                   '1' => get_string('openmode1', 'forum'),",
          "7704:                   '0' => get_string('openmode0', 'forum') );",
          "7705: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "545eb1bcfdbfc352bf6c31edf440485ba6d5af42",
      "candidate_info": {
        "commit_hash": "545eb1bcfdbfc352bf6c31edf440485ba6d5af42",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/545eb1bcfdbfc352bf6c31edf440485ba6d5af42",
        "files": [
          "mod/forum/forum.js",
          "mod/forum/index.php",
          "mod/forum/lib.php",
          "mod/forum/settracking.php"
        ],
        "message": "MDL-48019 mod_forum: Add sesskey checks when setting tracking prefs\n\nThis also removes set_url() and changes require_course_login to\nrequire_login as guests cannot set tracking.",
        "before_after_code_files": [
          "mod/forum/forum.js||mod/forum/forum.js",
          "mod/forum/index.php||mod/forum/index.php",
          "mod/forum/lib.php||mod/forum/lib.php",
          "mod/forum/settracking.php||mod/forum/settracking.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "mod/forum/forum.js||mod/forum/forum.js",
            "mod/forum/index.php||mod/forum/index.php",
            "mod/forum/lib.php||mod/forum/lib.php",
            "mod/forum/settracking.php||mod/forum/settracking.php"
          ],
          "candidate": [
            "mod/forum/forum.js||mod/forum/forum.js",
            "mod/forum/index.php||mod/forum/index.php",
            "mod/forum/lib.php||mod/forum/lib.php",
            "mod/forum/settracking.php||mod/forum/settracking.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/forum/forum.js||mod/forum/forum.js": [
          "File: mod/forum/forum.js -> mod/forum/forum.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:     var elementid = \"trackinglink\";",
          "14:     var subs_link = document.getElementById(elementid);",
          "15:     if(subs_link){",
          "17:     }",
          "18: }",
          "",
          "[Removed Lines]",
          "16:         subs_link.innerHTML = \"<a title='\"+ltitle+\"' href='\"+M.cfg.wwwroot+\"/mod/forum/settracking.php?id=\"+forumid+\"'>\"+ltext+\"<\\/a>\";",
          "",
          "[Added Lines]",
          "16:         subs_link.innerHTML = \"<a title='\"+ltitle+\"' href='\"+M.cfg.wwwroot+\"/mod/forum/settracking.php?id=\"+forumid+\"&amp;sesskey=\"+M.cfg.sesskey+\"'>\"+ltext+\"<\\/a>\";",
          "",
          "---------------"
        ],
        "mod/forum/index.php||mod/forum/index.php": [
          "File: mod/forum/index.php -> mod/forum/index.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "235:                 } else if ($forum->trackingtype === FORUM_TRACKING_OFF || ($USER->trackforums == 0)) {",
          "236:                     $trackedlink = '-';",
          "237:                 } else {",
          "239:                     if (!isset($untracked[$forum->id])) {",
          "240:                         $trackedlink = $OUTPUT->single_button($aurl, $stryes, 'post', array('title'=>$strnotrackforum));",
          "241:                     } else {",
          "",
          "[Removed Lines]",
          "238:                     $aurl = new moodle_url('/mod/forum/settracking.php', array('id'=>$forum->id));",
          "",
          "[Added Lines]",
          "238:                     $aurl = new moodle_url('/mod/forum/settracking.php', array(",
          "239:                             'id' => $forum->id,",
          "240:                             'sesskey' => sesskey(),",
          "241:                         ));",
          "",
          "---------------"
        ],
        "mod/forum/lib.php||mod/forum/lib.php": [
          "File: mod/forum/lib.php -> mod/forum/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5067:         $link .= '<noscript>';",
          "5068:     }",
          "5070:     $link .= $OUTPUT->single_button($url, $linktext, 'get', array('title'=>$linktitle));",
          "5072:     if ($fakelink) {",
          "",
          "[Removed Lines]",
          "5069:     $url = new moodle_url('/mod/forum/settracking.php', array('id'=>$forum->id));",
          "",
          "[Added Lines]",
          "5069:     $url = new moodle_url('/mod/forum/settracking.php', array(",
          "5070:             'id' => $forum->id,",
          "5071:             'sesskey' => sesskey(),",
          "5072:         ));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7806:             } else {",
          "7807:                 $linktext = get_string('trackforum', 'forum');",
          "7808:             }",
          "7810:             $forumnode->add($linktext, $url, navigation_node::TYPE_SETTING);",
          "7811:         }",
          "7812:     }",
          "",
          "[Removed Lines]",
          "7809:             $url = new moodle_url('/mod/forum/settracking.php', array('id'=>$forumobject->id));",
          "",
          "[Added Lines]",
          "7812:             $url = new moodle_url('/mod/forum/settracking.php', array(",
          "7813:                     'id' => $forumobject->id,",
          "7814:                     'sesskey' => sesskey(),",
          "7815:                 ));",
          "",
          "---------------"
        ],
        "mod/forum/settracking.php||mod/forum/settracking.php": [
          "File: mod/forum/settracking.php -> mod/forum/settracking.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: $id         = required_param('id',PARAM_INT);                           // The forum to subscribe or unsubscribe to",
          "30: $returnpage = optional_param('returnpage', 'index.php', PARAM_FILE);    // Page to return to.",
          "38: if (! $forum = $DB->get_record(\"forum\", array(\"id\" => $id))) {",
          "39:     print_error('invalidforumid', 'forum');",
          "",
          "[Removed Lines]",
          "32: $url = new moodle_url('/mod/forum/settracking.php', array('id'=>$id));",
          "33: if ($returnpage !== 'index.php') {",
          "34:     $url->param('returnpage', $returnpage);",
          "35: }",
          "36: $PAGE->set_url($url);",
          "",
          "[Added Lines]",
          "32: require_sesskey();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47:     print_error('invalidcoursemodule');",
          "48: }",
          "52: $returnto = forum_go_back_to($returnpage.'?id='.$course->id.'&f='.$forum->id);",
          "",
          "[Removed Lines]",
          "50: require_course_login($course, false, $cm);",
          "",
          "[Added Lines]",
          "46: require_login($course, false, $cm);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c812956efda7d10dfdce5ae19c0ec8879de38a31",
      "candidate_info": {
        "commit_hash": "c812956efda7d10dfdce5ae19c0ec8879de38a31",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/c812956efda7d10dfdce5ae19c0ec8879de38a31",
        "files": [
          "mod/forum/forum.js",
          "mod/forum/index.php",
          "mod/forum/lib.php",
          "mod/forum/settracking.php"
        ],
        "message": "MDL-48019 mod_forum: Add sesskey checks when setting tracking prefs\n\nThis also removes set_url() and changes require_course_login to\nrequire_login as guests cannot set tracking.",
        "before_after_code_files": [
          "mod/forum/forum.js||mod/forum/forum.js",
          "mod/forum/index.php||mod/forum/index.php",
          "mod/forum/lib.php||mod/forum/lib.php",
          "mod/forum/settracking.php||mod/forum/settracking.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "mod/forum/forum.js||mod/forum/forum.js",
            "mod/forum/index.php||mod/forum/index.php",
            "mod/forum/lib.php||mod/forum/lib.php",
            "mod/forum/settracking.php||mod/forum/settracking.php"
          ],
          "candidate": [
            "mod/forum/forum.js||mod/forum/forum.js",
            "mod/forum/index.php||mod/forum/index.php",
            "mod/forum/lib.php||mod/forum/lib.php",
            "mod/forum/settracking.php||mod/forum/settracking.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/forum/forum.js||mod/forum/forum.js": [
          "File: mod/forum/forum.js -> mod/forum/forum.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:     var elementid = \"trackinglink\";",
          "14:     var subs_link = document.getElementById(elementid);",
          "15:     if(subs_link){",
          "17:     }",
          "18: }",
          "",
          "[Removed Lines]",
          "16:         subs_link.innerHTML = \"<a title='\"+ltitle+\"' href='\"+M.cfg.wwwroot+\"/mod/forum/settracking.php?id=\"+forumid+\"'>\"+ltext+\"<\\/a>\";",
          "",
          "[Added Lines]",
          "16:         subs_link.innerHTML = \"<a title='\"+ltitle+\"' href='\"+M.cfg.wwwroot+\"/mod/forum/settracking.php?id=\"+forumid+\"&amp;sesskey=\"+M.cfg.sesskey+\"'>\"+ltext+\"<\\/a>\";",
          "",
          "---------------"
        ],
        "mod/forum/index.php||mod/forum/index.php": [
          "File: mod/forum/index.php -> mod/forum/index.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "238:                 } else if ($forum->trackingtype === FORUM_TRACKING_OFF || ($USER->trackforums == 0)) {",
          "239:                     $trackedlink = '-';",
          "240:                 } else {",
          "242:                     if (!isset($untracked[$forum->id])) {",
          "243:                         $trackedlink = $OUTPUT->single_button($aurl, $stryes, 'post', array('title'=>$strnotrackforum));",
          "244:                     } else {",
          "",
          "[Removed Lines]",
          "241:                     $aurl = new moodle_url('/mod/forum/settracking.php', array('id'=>$forum->id));",
          "",
          "[Added Lines]",
          "241:                     $aurl = new moodle_url('/mod/forum/settracking.php', array(",
          "242:                             'id' => $forum->id,",
          "243:                             'sesskey' => sesskey(),",
          "244:                         ));",
          "",
          "---------------"
        ],
        "mod/forum/lib.php||mod/forum/lib.php": [
          "File: mod/forum/lib.php -> mod/forum/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5129:         $link .= '<noscript>';",
          "5130:     }",
          "5132:     $link .= $OUTPUT->single_button($url, $linktext, 'get', array('title'=>$linktitle));",
          "5134:     if ($fakelink) {",
          "",
          "[Removed Lines]",
          "5131:     $url = new moodle_url('/mod/forum/settracking.php', array('id'=>$forum->id));",
          "",
          "[Added Lines]",
          "5131:     $url = new moodle_url('/mod/forum/settracking.php', array(",
          "5132:             'id' => $forum->id,",
          "5133:             'sesskey' => sesskey(),",
          "5134:         ));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7882:             } else {",
          "7883:                 $linktext = get_string('trackforum', 'forum');",
          "7884:             }",
          "7886:             $forumnode->add($linktext, $url, navigation_node::TYPE_SETTING);",
          "7887:         }",
          "7888:     }",
          "",
          "[Removed Lines]",
          "7885:             $url = new moodle_url('/mod/forum/settracking.php', array('id'=>$forumobject->id));",
          "",
          "[Added Lines]",
          "7888:             $url = new moodle_url('/mod/forum/settracking.php', array(",
          "7889:                     'id' => $forumobject->id,",
          "7890:                     'sesskey' => sesskey(),",
          "7891:                 ));",
          "",
          "---------------"
        ],
        "mod/forum/settracking.php||mod/forum/settracking.php": [
          "File: mod/forum/settracking.php -> mod/forum/settracking.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: $id         = required_param('id',PARAM_INT);                           // The forum to subscribe or unsubscribe to",
          "30: $returnpage = optional_param('returnpage', 'index.php', PARAM_FILE);    // Page to return to.",
          "38: if (! $forum = $DB->get_record(\"forum\", array(\"id\" => $id))) {",
          "39:     print_error('invalidforumid', 'forum');",
          "",
          "[Removed Lines]",
          "32: $url = new moodle_url('/mod/forum/settracking.php', array('id'=>$id));",
          "33: if ($returnpage !== 'index.php') {",
          "34:     $url->param('returnpage', $returnpage);",
          "35: }",
          "36: $PAGE->set_url($url);",
          "",
          "[Added Lines]",
          "32: require_sesskey();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47:     print_error('invalidcoursemodule');",
          "48: }",
          "52: $returnto = forum_go_back_to($returnpage.'?id='.$course->id.'&f='.$forum->id);",
          "",
          "[Removed Lines]",
          "50: require_course_login($course, false, $cm);",
          "",
          "[Added Lines]",
          "46: require_login($course, false, $cm);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bef4a5e01739f2b239c0910b9e1aa2841b979f7d",
      "candidate_info": {
        "commit_hash": "bef4a5e01739f2b239c0910b9e1aa2841b979f7d",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/bef4a5e01739f2b239c0910b9e1aa2841b979f7d",
        "files": [
          "mod/forum/forum.js",
          "mod/forum/index.php",
          "mod/forum/lib.php",
          "mod/forum/settracking.php"
        ],
        "message": "MDL-48019 mod_forum: Add sesskey checks when setting tracking prefs\n\nThis also removes set_url() and changes require_course_login to\nrequire_login as guests cannot set tracking.",
        "before_after_code_files": [
          "mod/forum/forum.js||mod/forum/forum.js",
          "mod/forum/index.php||mod/forum/index.php",
          "mod/forum/lib.php||mod/forum/lib.php",
          "mod/forum/settracking.php||mod/forum/settracking.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "mod/forum/forum.js||mod/forum/forum.js",
            "mod/forum/index.php||mod/forum/index.php",
            "mod/forum/lib.php||mod/forum/lib.php",
            "mod/forum/settracking.php||mod/forum/settracking.php"
          ],
          "candidate": [
            "mod/forum/forum.js||mod/forum/forum.js",
            "mod/forum/index.php||mod/forum/index.php",
            "mod/forum/lib.php||mod/forum/lib.php",
            "mod/forum/settracking.php||mod/forum/settracking.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/forum/forum.js||mod/forum/forum.js": [
          "File: mod/forum/forum.js -> mod/forum/forum.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:     var elementid = \"trackinglink\";",
          "14:     var subs_link = document.getElementById(elementid);",
          "15:     if(subs_link){",
          "17:     }",
          "18: }",
          "",
          "[Removed Lines]",
          "16:         subs_link.innerHTML = \"<a title='\"+ltitle+\"' href='\"+M.cfg.wwwroot+\"/mod/forum/settracking.php?id=\"+forumid+\"'>\"+ltext+\"<\\/a>\";",
          "",
          "[Added Lines]",
          "16:         subs_link.innerHTML = \"<a title='\"+ltitle+\"' href='\"+M.cfg.wwwroot+\"/mod/forum/settracking.php?id=\"+forumid+\"&amp;sesskey=\"+M.cfg.sesskey+\"'>\"+ltext+\"<\\/a>\";",
          "",
          "---------------"
        ],
        "mod/forum/index.php||mod/forum/index.php": [
          "File: mod/forum/index.php -> mod/forum/index.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "217:                     $trackedlink = $stryes;",
          "219:                 } else {",
          "221:                     if (!isset($untracked[$forum->id])) {",
          "222:                         $trackedlink = $OUTPUT->single_button($aurl, $stryes, 'post', array('title'=>$strnotrackforum));",
          "223:                     } else {",
          "",
          "[Removed Lines]",
          "220:                     $aurl = new moodle_url('/mod/forum/settracking.php', array('id'=>$forum->id));",
          "",
          "[Added Lines]",
          "220:                     $aurl = new moodle_url('/mod/forum/settracking.php', array(",
          "221:                             'id' => $forum->id,",
          "222:                             'sesskey' => sesskey(),",
          "223:                         ));",
          "",
          "---------------"
        ],
        "mod/forum/lib.php||mod/forum/lib.php": [
          "File: mod/forum/lib.php -> mod/forum/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "4976:         $link .= '<noscript>';",
          "4977:     }",
          "4979:     $link .= $OUTPUT->single_button($url, $linktext, 'get', array('title'=>$linktitle));",
          "4981:     if ($fakelink) {",
          "",
          "[Removed Lines]",
          "4978:     $url = new moodle_url('/mod/forum/settracking.php', array('id'=>$forum->id));",
          "",
          "[Added Lines]",
          "4978:     $url = new moodle_url('/mod/forum/settracking.php', array(",
          "4979:             'id' => $forum->id,",
          "4980:             'sesskey' => sesskey(),",
          "4981:         ));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7804:             } else {",
          "7805:                 $linktext = get_string('trackforum', 'forum');",
          "7806:             }",
          "7808:             $forumnode->add($linktext, $url, navigation_node::TYPE_SETTING);",
          "7809:         }",
          "7810:     }",
          "",
          "[Removed Lines]",
          "7807:             $url = new moodle_url('/mod/forum/settracking.php', array('id'=>$forumobject->id));",
          "",
          "[Added Lines]",
          "7810:             $url = new moodle_url('/mod/forum/settracking.php', array(",
          "7811:                     'id' => $forumobject->id,",
          "7812:                     'sesskey' => sesskey(),",
          "7813:                 ));",
          "",
          "---------------"
        ],
        "mod/forum/settracking.php||mod/forum/settracking.php": [
          "File: mod/forum/settracking.php -> mod/forum/settracking.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: $id         = required_param('id',PARAM_INT);                           // The forum to subscribe or unsubscribe to",
          "30: $returnpage = optional_param('returnpage', 'index.php', PARAM_FILE);    // Page to return to.",
          "38: if (! $forum = $DB->get_record(\"forum\", array(\"id\" => $id))) {",
          "39:     print_error('invalidforumid', 'forum');",
          "",
          "[Removed Lines]",
          "32: $url = new moodle_url('/mod/forum/settracking.php', array('id'=>$id));",
          "33: if ($returnpage !== 'index.php') {",
          "34:     $url->param('returnpage', $returnpage);",
          "35: }",
          "36: $PAGE->set_url($url);",
          "",
          "[Added Lines]",
          "32: require_sesskey();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47:     print_error('invalidcoursemodule');",
          "48: }",
          "52: $returnto = forum_go_back_to($returnpage.'?id='.$course->id.'&f='.$forum->id);",
          "",
          "[Removed Lines]",
          "50: require_course_login($course, false, $cm);",
          "",
          "[Added Lines]",
          "46: require_login($course, false, $cm);",
          "",
          "---------------"
        ]
      }
    }
  ]
}