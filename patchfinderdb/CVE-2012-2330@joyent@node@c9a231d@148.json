{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "355c14842734e790a2581b9db58041c7ca54edf9",
      "candidate_info": {
        "commit_hash": "355c14842734e790a2581b9db58041c7ca54edf9",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/355c14842734e790a2581b9db58041c7ca54edf9",
        "files": [
          "node.gyp"
        ],
        "message": "build: set `process.platform` to \"sunos\" on SunOS\n\ngyp sets it to \"solaris\" by default, but versions of node v0.6.x and\nolder would report \"sunos\". Let's keep things consistent.\n\nFixes #3944.",
        "before_after_code_files": [
          "node.gyp||node.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "node.gyp||node.gyp": [
          "File: node.gyp -> node.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "228:             '-lkstat',",
          "229:             '-lumem',",
          "230:           ],",
          "231:         }],",
          "232:       ],",
          "233:       'msvs-settings': {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "231:           'defines!': [",
          "232:             'PLATFORM=\"solaris\"',",
          "233:           ],",
          "234:           'defines': [",
          "235:             # we need to use node's preferred \"sunos\"",
          "236:             # rather than gyp's preferred \"solaris\"",
          "237:             'PLATFORM=\"sunos\"',",
          "238:           ],",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "acbfc408880a12c32ccc9d69bca91aad4e93e879",
      "candidate_info": {
        "commit_hash": "acbfc408880a12c32ccc9d69bca91aad4e93e879",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/acbfc408880a12c32ccc9d69bca91aad4e93e879",
        "files": [
          "node.gyp"
        ],
        "message": "build: fix add-on loading on freebsd\n\nLink with -Wl,--export-dynamic, makes symbols from the node binary visible to\nbinary add-ons.\n\nFixes \"undefined symbol: _ZN2v811HandleScopeC1Ev\" errors when loading add-ons\non FreeBSD and likely other BSDs.\n\nFixes #3623.",
        "before_after_code_files": [
          "node.gyp||node.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "node.gyp||node.gyp": [
          "File: node.gyp -> node.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "200:             '_UNICODE=1',",
          "201:           ],",
          "202:           'libraries': [ '-lpsapi.lib' ]",
          "204:           'defines': [ '__POSIX__' ],",
          "205:           'sources': [",
          "206:             'src/node_signal_watcher.cc',",
          "207:             'src/node_io_watcher.cc',",
          "209:         }],",
          "210:         [ 'OS==\"mac\"', {",
          "211:           'libraries': [ '-framework Carbon' ],",
          "",
          "[Removed Lines]",
          "203:         },{ # POSIX",
          "208:           ]",
          "",
          "[Added Lines]",
          "203:         }, { # POSIX",
          "208:           ],",
          "209:           'ldflags': [ '-Wl,--export-dynamic' ],",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6b5a34cdf30827a0e64c49008b4bcdb55738bc9b",
      "candidate_info": {
        "commit_hash": "6b5a34cdf30827a0e64c49008b4bcdb55738bc9b",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/6b5a34cdf30827a0e64c49008b4bcdb55738bc9b",
        "files": [
          "lib/repl.js"
        ],
        "message": "repl: remove redundant check of rli.rine.length\n\nIt get's set to '' 1 line above, so we know that that's always 0.",
        "before_after_code_files": [
          "lib/repl.js||lirepl.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/repl.js||lirepl.js": [
          "File: lib/repl.js -> lirepl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "150:     rli.line = '';",
          "154:       rli.output.write('(^C again to quit)\\n');",
          "155:       sawSIGINT = true;",
          "156:     }",
          "",
          "[Removed Lines]",
          "152:     if (!(self.bufferedCommand && self.bufferedCommand.length > 0) &&",
          "153:         rli.line.length === 0) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d40415912f0807201a45d82a86a7f6e316bad5d7",
      "candidate_info": {
        "commit_hash": "d40415912f0807201a45d82a86a7f6e316bad5d7",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/d40415912f0807201a45d82a86a7f6e316bad5d7",
        "files": [
          "lib/net.js",
          "test/simple/test-net-isip.js"
        ],
        "message": "net: make isIP() return 0 on empty input",
        "before_after_code_files": [
          "lib/net.js||linet.js",
          "test/simple/test-net-isip.js||test/simple/test-net-isip.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/net.js||linet.js": [
          "File: lib/net.js -> linet.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1031: exports.isIP = function(input) {",
          "1032:   if (!input) {",
          "1034:   } else if (/^(\\d?\\d?\\d)\\.(\\d?\\d?\\d)\\.(\\d?\\d?\\d)\\.(\\d?\\d?\\d)$/.test(input)) {",
          "1035:     var parts = input.split('.');",
          "1036:     for (var i = 0; i < parts.length; i++) {",
          "",
          "[Removed Lines]",
          "1033:     return 4;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-net-isip.js||test/simple/test-net-isip.js": [
          "File: test/simple/test-net-isip.js -> test/simple/test-net-isip.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: assert.equal(net.isIP('::'), 6);",
          "37: assert.equal(net.isIP('0000:0000:0000:0000:0000:0000:12345:0000'), 0);",
          "38: assert.equal(net.isIP('0'), 0);",
          "40: assert.equal(net.isIPv4('127.0.0.1'), true);",
          "41: assert.equal(net.isIPv4('example.com'), false);",
          "42: assert.equal(net.isIPv4('2001:252:0:1::2008:6'), false);",
          "44: assert.equal(net.isIPv6('127.0.0.1'), false);",
          "",
          "[Removed Lines]",
          "45: assert.equal(net.isIPv4('example.com'), false);",
          "46: assert.equal(net.isIPv6('2001:252:0:1::2008:6'), true);",
          "",
          "[Added Lines]",
          "39: assert.equal(net.isIP(), 0);",
          "40: assert.equal(net.isIP(\"\"), 0);",
          "47: assert.equal(net.isIPv6('example.com'), false);",
          "48: assert.equal(net.isIPv6('2001:252:0:1::2008:6'), true);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e16021340dd38895b8c7f310355e3a79881f45ed",
      "candidate_info": {
        "commit_hash": "e16021340dd38895b8c7f310355e3a79881f45ed",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e16021340dd38895b8c7f310355e3a79881f45ed",
        "files": [
          "lib/repl.js"
        ],
        "message": "repl: use Object.getPrototypeOf on functions for tab complete()",
        "before_after_code_files": [
          "lib/repl.js||lirepl.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/repl.js||lirepl.js": [
          "File: lib/repl.js -> lirepl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "589:             try {",
          "590:               var sentinel = 5;",
          "591:               var p;",
          "593:                 p = Object.getPrototypeOf(obj);",
          "594:               } else {",
          "595:                 p = obj.constructor ? obj.constructor.prototype : null;",
          "",
          "[Removed Lines]",
          "592:               if (typeof obj == 'object') {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}