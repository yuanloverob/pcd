{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "46766d003666da5f90346da7e6d09e109355f5c6",
      "candidate_info": {
        "commit_hash": "46766d003666da5f90346da7e6d09e109355f5c6",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/46766d003666da5f90346da7e6d09e109355f5c6",
        "files": [
          "crypto/bio/b_addr.c"
        ],
        "message": "HP-UX doesn't have hstrerror(), so make our own for that platform\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2092)",
        "before_after_code_files": [
          "crypto/bio/b_addr.c||crypto/bio/b_addr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bio/b_addr.c||crypto/bio/b_addr.c": [
          "File: crypto/bio/b_addr.c -> crypto/bio/b_addr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: #include <internal/thread_once.h>",
          "19: #include <ctype.h>",
          "21: CRYPTO_RWLOCK *bio_lookup_lock;",
          "22: static CRYPTO_ONCE bio_lookup_init = CRYPTO_ONCE_STATIC_INIT;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: #ifdef _HPUX_SOURCE",
          "22: static const char *ossl_hstrerror(int herr)",
          "23: {",
          "24:     switch (herr) {",
          "25:     case -1:",
          "26:         return strerror(errno);",
          "27:     case 0:",
          "28:         return \"No error\";",
          "29:     case HOST_NOT_FOUND:",
          "30:         return \"Host not found\";",
          "32:         return \"No data\";",
          "33:     case NO_RECOVERY:",
          "34:         return \"Non recoverable error\";",
          "35:     case TRY_AGAIN:",
          "36:         return \"Try again\";",
          "37:     default:",
          "38:         break;",
          "39:     }",
          "40:     return \"unknown error\";",
          "41: }",
          "42: # define hstrerror(e) ossl_hstrerror(e)",
          "43: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f567076cf343cbfe084c133c5bfc59b3d55122ef",
      "candidate_info": {
        "commit_hash": "f567076cf343cbfe084c133c5bfc59b3d55122ef",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f567076cf343cbfe084c133c5bfc59b3d55122ef",
        "files": [
          "crypto/ct/ct_policy.c"
        ],
        "message": "Convert C++ comments to C-style comments\n\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1554)\n(cherry picked from commit 08e588b7d5cefbfd107c88416900165a28a5b59e)",
        "before_after_code_files": [
          "crypto/ct/ct_policy.c||crypto/ct/ct_policy.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ct/ct_policy.c||crypto/ct/ct_policy.c": [
          "File: crypto/ct/ct_policy.c -> crypto/ct/ct_policy.c"
        ]
      }
    },
    {
      "candidate_hash": "098dc9be439e5bc3625e01c4092bedc072498da9",
      "candidate_info": {
        "commit_hash": "098dc9be439e5bc3625e01c4092bedc072498da9",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/098dc9be439e5bc3625e01c4092bedc072498da9",
        "files": [
          "crypto/rand/randfile.c"
        ],
        "message": "rand/randfile.c: restore fallback to $HOME for non-setuid programs.\n\nReported in GH#1589, but solution is different from suggested.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 799c1293fcf412db64dcc8a09a6b11cc755914dc)",
        "before_after_code_files": [
          "crypto/rand/randfile.c||crypto/rand/randfile.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/rand/randfile.c||crypto/rand/randfile.c": [
          "File: crypto/rand/randfile.c -> crypto/rand/randfile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "316:         }",
          "317:     }",
          "318: #else",
          "322:         use_randfile = 0;",
          "324:             s = getenv(\"HOME\");",
          "325:     }",
          "326: #endif",
          "327: #ifdef DEFAULT_HOME",
          "",
          "[Removed Lines]",
          "319:     if (OPENSSL_issetugid() == 0) {",
          "320:         s = getenv(\"RANDFILE\");",
          "321:     } else {",
          "323:         if (OPENSSL_issetugid() == 0)",
          "",
          "[Added Lines]",
          "319:     if (OPENSSL_issetugid() != 0) {",
          "321:     } else {",
          "322:         s = getenv(\"RANDFILE\");",
          "323:         if (s == NULL || *s == '\\0') {",
          "324:             use_randfile = 0;",
          "326:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "550e1d07a69db5af9129533ba7983594b3ed3fec",
      "candidate_info": {
        "commit_hash": "550e1d07a69db5af9129533ba7983594b3ed3fec",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/550e1d07a69db5af9129533ba7983594b3ed3fec",
        "files": [
          "ssl/record/rec_layer_s3.c",
          "ssl/record/ssl3_buffer.c",
          "test/sslapitest.c"
        ],
        "message": "Fix a leak in SSL_clear()\n\nSSL_clear() was resetting numwpipes to 0, but not freeing any allocated\nmemory for existing write buffers.\n\nFixes #2026\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 4bf086005fe5ebcda5dc4d48ff701b41ab9b07f0)",
        "before_after_code_files": [
          "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
          "ssl/record/ssl3_buffer.c||ssl/record/ssl3_buffer.c",
          "test/sslapitest.c||test/sslapitest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
          "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: void RECORD_LAYER_clear(RECORD_LAYER *rl)",
          "41: {",
          "44:     rl->rstate = SSL_ST_READ_HEADER;",
          "",
          "[Removed Lines]",
          "42:     unsigned int pipes;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "62:     rl->wpend_buf = NULL;",
          "64:     SSL3_BUFFER_clear(&rl->rbuf);",
          "68:     rl->numrpipes = 0;",
          "69:     SSL3_RECORD_clear(rl->rrec, SSL_MAX_PIPELINES);",
          "",
          "[Removed Lines]",
          "65:     for (pipes = 0; pipes < rl->numwpipes; pipes++)",
          "66:         SSL3_BUFFER_clear(&rl->wbuf[pipes]);",
          "67:     rl->numwpipes = 0;",
          "",
          "[Added Lines]",
          "63:     ssl3_release_write_buffer(rl->s);",
          "",
          "---------------"
        ],
        "ssl/record/ssl3_buffer.c||ssl/record/ssl3_buffer.c": [
          "File: ssl/record/ssl3_buffer.c -> ssl/record/ssl3_buffer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "106:     wb = RECORD_LAYER_get_wbuf(&s->rlayer);",
          "107:     for (currpipe = 0; currpipe < numwpipes; currpipe++) {",
          "110:                 s->rlayer.numwpipes = currpipe;",
          "111:                 goto err;",
          "112:             }",
          "115:         }",
          "116:     }",
          "",
          "[Removed Lines]",
          "108:         if (wb[currpipe].buf == NULL) {",
          "109:             if ((p = OPENSSL_malloc(len)) == NULL) {",
          "113:             wb[currpipe].buf = p;",
          "114:             wb[currpipe].len = len;",
          "",
          "[Added Lines]",
          "108:         SSL3_BUFFER *thiswb = &wb[currpipe];",
          "110:         if (thiswb->buf == NULL) {",
          "111:             p = OPENSSL_malloc(len);",
          "112:             if (p == NULL) {",
          "116:             memset(thiswb, 0, sizeof(SSL3_BUFFER));",
          "117:             thiswb->buf = p;",
          "118:             thiswb->len = len;",
          "",
          "---------------"
        ],
        "test/sslapitest.c||test/sslapitest.c": [
          "File: test/sslapitest.c -> test/sslapitest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "101:         goto end;",
          "102:     }",
          "106:  end:",
          "107:     X509_free(chaincert);",
          "108:     SSL_free(serverssl);",
          "",
          "[Removed Lines]",
          "104:     testresult = 1;",
          "",
          "[Added Lines]",
          "108:     if (!SSL_clear(serverssl)) {",
          "109:         printf(\"Unexpected failure from SSL_clear()\\n\");",
          "110:         goto end;",
          "111:     }",
          "113:     testresult = 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9cb0c3a3cae638143af8bc66dd2b19f7593e3978",
      "candidate_info": {
        "commit_hash": "9cb0c3a3cae638143af8bc66dd2b19f7593e3978",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/9cb0c3a3cae638143af8bc66dd2b19f7593e3978",
        "files": [
          "apps/s_client.c"
        ],
        "message": "Restore '-keyform engine' support for s_client\n\nThis used to work in 1.0.2 but disappeared when the argument parsing was\nrevamped.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1639)\n\n(cherry picked from commit a6972f346248fbc37e42056bb943fae0896a2967)",
        "before_after_code_files": [
          "apps/s_client.c||apps/s_client.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/s_client.c||apps/s_client.c": [
          "File: apps/s_client.c -> apps/s_client.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "577:     {\"cert\", OPT_CERT, '<', \"Certificate file to use, PEM format assumed\"},",
          "578:     {\"certform\", OPT_CERTFORM, 'F',",
          "579:      \"Certificate format (PEM or DER) PEM default\"},",
          "582:     {\"pass\", OPT_PASS, 's', \"Private key file pass phrase source\"},",
          "583:     {\"CApath\", OPT_CAPATH, '/', \"PEM format directory of CA's\"},",
          "584:     {\"CAfile\", OPT_CAFILE, '<', \"PEM format file of CA's\"},",
          "",
          "[Removed Lines]",
          "580:     {\"key\", OPT_KEY, '<', \"Private key file to use, if not in -cert file\"},",
          "581:     {\"keyform\", OPT_KEYFORM, 'F', \"Key format (PEM or DER) PEM default\"},",
          "",
          "[Added Lines]",
          "580:     {\"key\", OPT_KEY, 's', \"Private key file to use, if not in -cert file\"},",
          "581:     {\"keyform\", OPT_KEYFORM, 'E', \"Key format (PEM, DER or engine) PEM default\"},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1202:             fallback_scsv = 1;",
          "1203:             break;",
          "1204:         case OPT_KEYFORM:",
          "1206:                 goto opthelp;",
          "1207:             break;",
          "1208:         case OPT_PASS:",
          "",
          "[Removed Lines]",
          "1205:             if (!opt_format(opt_arg(), OPT_FMT_PEMDER, &key_format))",
          "",
          "[Added Lines]",
          "1205:             if (!opt_format(opt_arg(), OPT_FMT_PDE, &key_format))",
          "",
          "---------------"
        ]
      }
    }
  ]
}