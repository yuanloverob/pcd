{
  "cve_id": "CVE-2017-13083",
  "cve_desc": "Akeo Consulting Rufus prior to version 2.17.1187 does not adequately validate the integrity of updates downloaded over HTTP, allowing an attacker to easily convince a user to execute arbitrary code",
  "repo": "pbatard/rufus",
  "patch_hash": "c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
  "patch_info": {
    "commit_hash": "c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
    "repo": "pbatard/rufus",
    "commit_url": "https://github.com/pbatard/rufus/commit/c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
    "files": [
      "res/localization/rufus.loc",
      "src/pki.c",
      "src/rufus.rc",
      "src/stdlg.c"
    ],
    "message": "[pki] fix https://www.kb.cert.org/vuls/id/403768\n\n* This commit effectively fixes https://www.kb.cert.org/vuls/id/403768 (CVE-2017-13083) as\n  it is described per its revision 11, which is the latest revision at the time of this commit,\n  by disabling Windows prompts, enacted during signature validation, that allow the user to\n  bypass the intended signature verification checks.\n* It needs to be pointed out that the vulnerability (\"allow(ing) the use of a self-signed\n  certificate\"), which relies on the end-user actively ignoring a Windows prompt that tells\n  them that the update failed the signature validation whilst also advising against running it,\n  is being fully addressed, even as the update protocol remains HTTP.\n* It also need to be pointed out that the extended delay (48 hours) between the time the\n  vulnerability was reported and the moment it is fixed in our codebase has to do with\n  the fact that the reporter chose to deviate from standard security practices by not\n  disclosing the details of the vulnerability with us, be it publicly or privately,\n  before creating the cert.org report. The only advance notification we received was a\n  generic note about the use of HTTP vs HTTPS, which, as have established, is not\n  immediately relevant to addressing the reported vulnerability.\n* Closes #1009\n* Note: The other vulnerability scenario described towards the end of #1009, which\n  doesn't have to do with the \"lack of CA checking\", will be addressed separately.",
    "before_after_code_files": [
      "res/localization/rufus.loc||res/localization/rufus.loc",
      "src/pki.c||src/pki.c",
      "src/rufus.rc||src/rufus.rc",
      "src/stdlg.c||src/stdlg.c"
    ]
  },
  "patch_diff": {
    "res/localization/rufus.loc||res/localization/rufus.loc": [
      "File: res/localization/rufus.loc -> res/localization/rufus.loc",
      "--- Hunk 1 ---",
      "[Context before]",
      "487: # eg. \"Partitioning (MBR)...\"",
      "488: t MSG_238 \"Partitioning (%s)...\"",
      "489: t MSG_239 \"Deleting partitions...\"",
      "490: t MSG_241 \"Downloading: %0.1f%%\"",
      "491: t MSG_242 \"Failed to download file.\"",
      "492: t MSG_243 \"Checking for Rufus updates...\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "490: t MSG_240 \"The signature for the downloaded update can not be validated. This could mean that your \"",
      "491:  \"system is improperly configured for signature validation or indicate a malicious download.\\n\\n\"",
      "492:  \"The download will be deleted. Please check the log for more details.\"",
      "",
      "---------------"
    ],
    "src/pki.c||src/pki.c": [
      "File: src/pki.c -> src/pki.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "53:  static char error_string[64];",
      "54:  DWORD error_code = GetLastError();",
      "57:   return WindowsErrorString();",
      "59:  switch (error_code) {",
      "",
      "[Removed Lines]",
      "56:  if ((error_code >> 16) != 0x8009)",
      "",
      "[Added Lines]",
      "56:  if (((error_code >> 16) != 0x8009) && ((error_code >> 16) != 0x800B))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "113:   return \"Cannot complete usage check.\";",
      "114:  case CRYPT_E_NO_TRUSTED_SIGNER:",
      "115:   return \"None of the signers of the cryptographic message or certificate trust list is trusted.\";",
      "116:  default:",
      "117:   static_sprintf(error_string, \"Unknown PKI error 0x%08lX\", error_code);",
      "118:   return error_string;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "116:  case CERT_E_UNTRUSTEDROOT:",
      "117:   return \"The root certificate is not trusted.\";",
      "118:  case TRUST_E_NOSIGNATURE:",
      "119:   return \"Not digitally signed.\";",
      "120:  case TRUST_E_EXPLICIT_DISTRUST:",
      "121:   return \"One of the certificates used was marked as untrusted by the user.\";",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "268:  }",
      "270:  trust_data.cbStruct = sizeof(trust_data);",
      "273:  trust_data.fdwRevocationChecks = WTD_REVOKE_WHOLECHAIN;",
      "",
      "[Removed Lines]",
      "271:  trust_data.dwUIChoice = WTD_UI_ALL;",
      "",
      "[Added Lines]",
      "283:  trust_data.dwUIChoice = WTD_UI_NONE;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "279:  r = WinVerifyTrust(NULL, &guid_generic_verify, &trust_data);",
      "280:  safe_free(trust_file.pcwszFilePath);",
      "282:  return r;",
      "283: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "293:  switch (r) {",
      "294:  case ERROR_SUCCESS:",
      "295:   break;",
      "296:  case TRUST_E_NOSIGNATURE:",
      "298:   uprintf(\"PKI: File does not appear to be signed: %s\", WinPKIErrorString());",
      "299:   MessageBoxExU(hDlg, lmprintf(MSG_284), lmprintf(MSG_283), MB_OK | MB_ICONERROR | MB_IS_RTL, selected_langid);",
      "300:   break;",
      "301:  default:",
      "302:   uprintf(\"PKI: Failed to validate signature: %s\", WinPKIErrorString());",
      "303:   MessageBoxExU(hDlg, lmprintf(MSG_240), lmprintf(MSG_283), MB_OK | MB_ICONERROR | MB_IS_RTL, selected_langid);",
      "304:   break;",
      "305:  }",
      "",
      "---------------"
    ],
    "src/rufus.rc||src/rufus.rc": [
      "File: src/rufus.rc -> src/rufus.rc",
      "--- Hunk 1 ---",
      "[Context before]",
      "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
      "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
      "35: EXSTYLE WS_EX_ACCEPTFILES",
      "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
      "38: BEGIN",
      "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
      "",
      "[Removed Lines]",
      "36: CAPTION \"Rufus 2.17.1186\"",
      "",
      "[Added Lines]",
      "36: CAPTION \"Rufus 2.17.1187\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "368: VS_VERSION_INFO VERSIONINFO",
      "371:  FILEFLAGSMASK 0x3fL",
      "372: #ifdef _DEBUG",
      "373:  FILEFLAGS 0x1L",
      "",
      "[Removed Lines]",
      "369:  FILEVERSION 2,17,1186,0",
      "370:  PRODUCTVERSION 2,17,1186,0",
      "",
      "[Added Lines]",
      "369:  FILEVERSION 2,17,1187,0",
      "370:  PRODUCTVERSION 2,17,1187,0",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "384:         BEGIN",
      "385:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
      "386:             VALUE \"FileDescription\", \"Rufus\"",
      "388:             VALUE \"InternalName\", \"Rufus\"",
      "389:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
      "390:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
      "391:             VALUE \"OriginalFilename\", \"rufus.exe\"",
      "392:             VALUE \"ProductName\", \"Rufus\"",
      "394:         END",
      "395:     END",
      "396:     BLOCK \"VarFileInfo\"",
      "",
      "[Removed Lines]",
      "387:             VALUE \"FileVersion\", \"2.17.1186\"",
      "393:             VALUE \"ProductVersion\", \"2.17.1186\"",
      "",
      "[Added Lines]",
      "387:             VALUE \"FileVersion\", \"2.17.1187\"",
      "393:             VALUE \"ProductVersion\", \"2.17.1187\"",
      "",
      "---------------"
    ],
    "src/stdlg.c||src/stdlg.c": [
      "File: src/stdlg.c -> src/stdlg.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674:    case 2:  // Launch newer version and close this one",
      "1675:     Sleep(1000); // Add a delay on account of antivirus scanners",
      "1678:      break;",
      "1680:     memset(&si, 0, sizeof(si));",
      "1681:     memset(&pi, 0, sizeof(pi));",
      "",
      "[Removed Lines]",
      "1677:     if (ValidateSignature(hDlg, filepath) != NO_ERROR)",
      "",
      "[Added Lines]",
      "1677:     if (ValidateSignature(hDlg, filepath) != NO_ERROR) {",
      "1679:      _unlinkU(filepath);",
      "1680:      EnableWindow(GetDlgItem(hDlg, IDC_DOWNLOAD), FALSE);",
      "1682:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "caa9b0642669d377d3864f23fcbb69d23d32bd80",
      "candidate_info": {
        "commit_hash": "caa9b0642669d377d3864f23fcbb69d23d32bd80",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/caa9b0642669d377d3864f23fcbb69d23d32bd80",
        "files": [
          "src/drive.c",
          "src/format.c",
          "src/rufus.rc",
          "src/stdio.c"
        ],
        "message": "[core] work around Windows 10 CU potentially selecting the UEFI:NTFS partition for formatting\n\n* Should only happen with Windows 10 Creator Update (1703)\n* Closes #931\n* Also silence the flow of bcdboot benign errors on WinToGo creation (unless USB Debug is enabled)\n* Also ensure WaitForLogical() will not actually spends 15 seconds max before giving up",
        "before_after_code_files": [
          "src/drive.c||src/drive.c",
          "src/format.c||src/format.c",
          "src/rufus.rc||src/rufus.rc",
          "src/stdio.c||src/stdio.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "src/drive.c||src/drive.c": [
          "File: src/drive.c -> src/drive.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "307: BOOL WaitForLogical(DWORD DriveIndex)",
          "308: {",
          "310:  char* LogicalPath = NULL;",
          "313:   LogicalPath = GetLogicalName(DriveIndex, FALSE, TRUE);",
          "314:   if (LogicalPath != NULL) {",
          "315:    free(LogicalPath);",
          "",
          "[Removed Lines]",
          "309:  DWORD i;",
          "312:  for (i = 0; i < DRIVE_ACCESS_RETRIES; i++) {",
          "",
          "[Added Lines]",
          "309:  DWORD EndTime;",
          "314:  EndTime = GetTickCount() + DRIVE_ACCESS_TIMEOUT;",
          "315:  do {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "318:   if (IS_ERROR(FormatStatus)) // User cancel",
          "319:    return FALSE;",
          "320:   Sleep(DRIVE_ACCESS_TIMEOUT/DRIVE_ACCESS_RETRIES);",
          "322:  uprintf(\"Timeout while waiting for logical drive\\n\");",
          "323:  return FALSE;",
          "324: }",
          "",
          "[Removed Lines]",
          "321:  }",
          "",
          "[Added Lines]",
          "324:  } while (GetTickCount() < EndTime);",
          "",
          "---------------"
        ],
        "src/format.c||src/format.c": [
          "File: src/format.c -> src/format.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: extern const int nb_steps[FS_MAX];",
          "62: extern uint32_t dur_mins, dur_secs;",
          "63: static int fs_index = 0, wintogo_index = -1;",
          "65: uint8_t *grub2_buf = NULL;",
          "66: long grub2_len;",
          "67: static BOOL WritePBR(HANDLE hLogicalDrive);",
          "",
          "[Removed Lines]",
          "64: extern BOOL force_large_fat32, enable_ntfs_compression, lock_drive, zero_drive, disable_file_indexing;",
          "",
          "[Added Lines]",
          "64: extern BOOL force_large_fat32, enable_ntfs_compression, lock_drive, zero_drive, disable_file_indexing, usb_debug;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "681:  BOOL r = FALSE;",
          "682:  PF_DECL(FormatEx);",
          "683:  PF_DECL(EnableVolumeCompression);",
          "685:  char *locale, *VolumeName = NULL;",
          "686:  WCHAR* wVolumeName = NULL;",
          "687:  WCHAR wFSType[64];",
          "",
          "[Removed Lines]",
          "684:  char FSType[32];",
          "",
          "[Added Lines]",
          "684:  char FSType[32], path[MAX_PATH];",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "716:  wVolumeName[wcslen(wVolumeName)-1] = 0;  // Remove trailing backslash",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "720:  safe_strcpy(path, MAX_PATH, VolumeName);",
          "721:  safe_strcat(path, MAX_PATH, \"EFI\\\\Rufus\\\\ntfs_x64.efi\");",
          "722:  if (PathFileExistsA(path)) {",
          "723:   uprintf(\"Windows selected the UEFI:NTFS partition for formatting - Retry needed\", VolumeName);",
          "724:   FormatStatus = ERROR_SEVERITY_ERROR|FAC(FACILITY_STORAGE)|ERROR_RETRY;",
          "725:   goto out;",
          "726:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1423:  uprintf(\"Enabling boot...\");",
          "1424:  static_sprintf(cmd, \"%s\\\\bcdboot.exe %s\\\\Windows /v /f ALL /s %s\", sysnative_dir,",
          "1425:   drive_name, (use_ms_efi)?ms_efi:drive_name);",
          "1428:   uprintf(\"Failed to enable boot using command '%s'\", cmd);",
          "1429:   FormatStatus = ERROR_SEVERITY_ERROR | FAC(FACILITY_STORAGE) | APPERR(ERROR_ISO_EXTRACT);",
          "",
          "[Removed Lines]",
          "1426:  if (RunCommand(cmd, sysnative_dir, TRUE) != 0) {",
          "",
          "[Added Lines]",
          "1436:  if (RunCommand(cmd, sysnative_dir, usb_debug) != 0) {",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 2.14.1086\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 2.14.1087\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "336: VS_VERSION_INFO VERSIONINFO",
          "339:  FILEFLAGSMASK 0x3fL",
          "340: #ifdef _DEBUG",
          "341:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "337:  FILEVERSION 2,14,1086,0",
          "338:  PRODUCTVERSION 2,14,1086,0",
          "",
          "[Added Lines]",
          "337:  FILEVERSION 2,14,1087,0",
          "338:  PRODUCTVERSION 2,14,1087,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "352:         BEGIN",
          "353:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "354:             VALUE \"FileDescription\", \"Rufus\"",
          "356:             VALUE \"InternalName\", \"Rufus\"",
          "357:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
          "358:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "359:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "360:             VALUE \"ProductName\", \"Rufus\"",
          "362:         END",
          "363:     END",
          "364:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "355:             VALUE \"FileVersion\", \"2.14.1086\"",
          "361:             VALUE \"ProductVersion\", \"2.14.1086\"",
          "",
          "[Added Lines]",
          "355:             VALUE \"FileVersion\", \"2.14.1087\"",
          "361:             VALUE \"ProductVersion\", \"2.14.1087\"",
          "",
          "---------------"
        ],
        "src/stdio.c||src/stdio.c": [
          "File: src/stdio.c -> src/stdio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "294:  case ERROR_NOT_READY:",
          "295:   return lmprintf(MSG_079);",
          "296:  default:",
          "298:   SetLastError(error_code);",
          "299:   return WindowsErrorString();",
          "300:  }",
          "",
          "[Removed Lines]",
          "297:   uprintf(\"Unknown error: %08X\\n\", error_code);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9740e948763ac8738db933ef2d9fc73f90270b0a",
      "candidate_info": {
        "commit_hash": "9740e948763ac8738db933ef2d9fc73f90270b0a",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/9740e948763ac8738db933ef2d9fc73f90270b0a",
        "files": [
          "res/localization/rufus.loc",
          "src/rufus.rc"
        ],
        "message": "[loc] update Persian translation to latest",
        "before_after_code_files": [
          "res/localization/rufus.loc||res/localization/rufus.loc",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "res/localization/rufus.loc||res/localization/rufus.loc": [
          "File: res/localization/rufus.loc -> res/localization/rufus.loc",
          "--- Hunk 1 ---",
          "[Context before]",
          "11268: ################################################################################",
          "11269: l \"fa-IR\" \"Persian (\u0641\u0627\u0631\u0633\u06cc)\" 0x0429",
          "11270: a \"r\"",
          "11272: b \"en-US\"",
          "11274: # Main dialog",
          "",
          "[Removed Lines]",
          "11271: v 1.0.21",
          "",
          "[Added Lines]",
          "11271: v 1.0.22",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11819: t MSG_292 \"\u0644\u0637\u0641\u0627\u064b \u0646\u0633\u062e\u0647 \u0648\u06cc\u0646\u062f\u0648\u0632\u06cc \u0631\u0627 \u06a9\u0647 \u0645\u06cc\u200c\u062e\u0648\u0627\u0647\u06cc\u062f \u0646\u0635\u0628 \u06a9\u0646\u06cc\u062f\u061b \u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0646\u06cc\u062f:\"",
          "11820: t MSG_293 \"\u0646\u0633\u062e\u0647 \u0648\u06cc\u0646\u062f\u0648\u0632 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0646\u0645\u06cc\u200c\u0634\u0648\u062f\"",
          "11821: t MSG_294 \"Rufus \u062f\u06cc\u06af\u0631 \u0627\u06cc\u0646 \u0646\u0633\u062e\u0647 \u0627\u0632 \u0648\u06cc\u0646\u062f\u0648\u0632 \u0631\u0627 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0646\u0645\u06cc\u200c\u06a9\u0646\u062f\"",
          "11823: ################################################################################",
          "11824: l \"pl-PL\" \"Polish (Polski)\" 0x0415",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11822: t MSG_295 \"\u0647\u0634\u062f\u0627\u0631: \u0646\u0633\u062e\u0647 \u063a\u06cc\u0631\u0631\u0633\u0645\u06cc\"",
          "11823: t MSG_296 \"\u0627\u06cc\u0646 \u0646\u0633\u062e\u0647 \u0627\u0632 Rufus \u062a\u0648\u0633\u0637 \u062a\u0648\u0633\u0639\u0647\u200c\u062f\u0647\u0646\u062f\u06af\u0627\u0646 \u0627\u0635\u0644\u06cc \u0648 \u0631\u0633\u0645\u06cc \u0622\u0646 \u062a\u0647\u06cc\u0647 \u0646\u0634\u062f\u0647 \u0627\u0633\u062a.\\n\\n\u0622\u06cc\u0627 \u0628\u0631\u0627\u06cc \u0627\u062c\u0631\u0627\u06cc \u0622\u0646 \u0645\u0637\u0645\u0626\u0646 \u0647\u0633\u062a\u06cc\u062f\u061f\"",
          "11824: # Translator Note: In the line below invisible RLE (at the beginning) and PDF (at the end) are used",
          "11825: t MSG_297 \"\u202b\u0641\u0627\u06cc\u0644 ISO \u0646\u0627\u0642\u0635 \u0634\u0646\u0627\u0633\u0627\u06cc\u06cc \u0634\u062f\u0647 \u0627\u0633\u062a\u202c\"",
          "11826: # Translator Note: In the lines below invisible RLE (at the beginning) and PDF (at the end) are used",
          "11827: t MSG_298 \"\u202b\u0627\u06cc\u0646 \u0641\u0627\u06cc\u0644 ISO \u06a9\u0647 \u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0631\u062f\u0647\u200c\u0627\u06cc\u062f \u0628\u0627 \u0627\u0646\u062f\u0627\u0632\u0647 \u062a\u0639\u06cc\u06cc\u0646 \u0634\u062f\u0647 \u062f\u0631 \u0622\u0646 \u0647\u0645\u0627\u0647\u0646\u06af\u06cc \u0646\u062f\u0627\u0631\u062f.\u202c \u202c\u202b%s \u0627\u0632 \u062f\u0627\u062f\u0647\u200c\u0647\u0627 \u0645\u0648\u062c\u0648\u062f \u0646\u06cc\u0633\u062a!\u202c\\n\\n\"",
          "11828:  \"\u202b\u0627\u06af\u0631 \u0627\u06cc\u0646 \u0641\u0627\u06cc\u0644 \u0631\u0627 \u0627\u0632 \u0627\u06cc\u0646\u062a\u0631\u0646\u062a \u062f\u0627\u0646\u0644\u0648\u062f \u06a9\u0631\u062f\u0647\u200c\u0627\u06cc\u062f\u060c \u0644\u0637\u0641\u0627 \u0646\u0633\u062e\u0647\u200c\u0627\u06cc \u062c\u062f\u06cc\u062f \u0627\u0632 \u0622\u0646 \u0631\u0627 \u062f\u0627\u0646\u0644\u0648\u062f \u06a9\u0631\u062f\u0647 \u0648 \u0645\u0637\u0645\u0626\u0646 \u0634\u0648\u06cc\u062f \u06a9\u0647 \u0645\u0642\u0627\u062f\u06cc\u0631 \u06a9\u0646\u062a\u0631\u0644\u06cc MD5 \u06cc\u0627 SHA \u0622\u0646 \u0639\u06cc\u0646\u0627 \u0628\u0631\u0627\u0628\u0631 \u0628\u0627 \u0645\u0642\u0627\u062f\u06cc\u0631 \u0631\u0633\u0645\u06cc \u0622\u0646\u200c\u0647\u0627\u0633\u062a.\u202c\\n\\n\"",
          "11829:  \"\u202b\u062a\u0648\u062c\u0647 \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u06cc\u062f \u06a9\u0647 \u062f\u0631 Rufus \u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u06cc\u062f \u0628\u0627 \u0627\u0646\u062a\u062e\u0627\u0628 \u062f\u06a9\u0645\u0647 '#' \u0645\u0642\u0627\u062f\u06cc\u0631 MD5 \u06cc\u0627 SHA \u0631\u0627  \u0645\u062d\u0627\u0633\u0628\u0647 \u06a9\u0646\u06cc\u062f.\u202c\"",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 2.16.1168\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 2.16.1169\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "368: VS_VERSION_INFO VERSIONINFO",
          "371:  FILEFLAGSMASK 0x3fL",
          "372: #ifdef _DEBUG",
          "373:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "369:  FILEVERSION 2,16,1168,0",
          "370:  PRODUCTVERSION 2,16,1168,0",
          "",
          "[Added Lines]",
          "369:  FILEVERSION 2,16,1169,0",
          "370:  PRODUCTVERSION 2,16,1169,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "384:         BEGIN",
          "385:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "386:             VALUE \"FileDescription\", \"Rufus\"",
          "388:             VALUE \"InternalName\", \"Rufus\"",
          "389:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
          "390:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "391:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "392:             VALUE \"ProductName\", \"Rufus\"",
          "394:         END",
          "395:     END",
          "396:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "387:             VALUE \"FileVersion\", \"2.16.1168\"",
          "393:             VALUE \"ProductVersion\", \"2.16.1168\"",
          "",
          "[Added Lines]",
          "387:             VALUE \"FileVersion\", \"2.16.1169\"",
          "393:             VALUE \"ProductVersion\", \"2.16.1169\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "172ba1e79584c38aafc7b85722e7b7d19921bb08",
      "candidate_info": {
        "commit_hash": "172ba1e79584c38aafc7b85722e7b7d19921bb08",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/172ba1e79584c38aafc7b85722e7b7d19921bb08",
        "files": [
          "res/localization/rufus.loc",
          "src/rufus.rc"
        ],
        "message": "[loc] update Norwegian translation to latest",
        "before_after_code_files": [
          "res/localization/rufus.loc||res/localization/rufus.loc",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "res/localization/rufus.loc||res/localization/rufus.loc": [
          "File: res/localization/rufus.loc -> res/localization/rufus.loc",
          "--- Hunk 1 ---",
          "[Context before]",
          "10729: ################################################################################",
          "10730: l \"nb-NO\" \"Norwegian (Norsk)\" 0x0414",
          "10732: b \"en-US\"",
          "10734: # Main dialog",
          "",
          "[Removed Lines]",
          "10731: v 1.0.21",
          "",
          "[Added Lines]",
          "10731: v 1.0.22",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11207: t MSG_292 \"Vennligst velg den versjonen av Windows du \u00f8nsker \u00e5 installere:\"",
          "11208: t MSG_293 \"Ikke st\u00f8ttet Windows versjon\"",
          "11209: t MSG_294 \"Denne versjonen av Windows er ikke st\u00f8ttet av Rufus lengre.\"",
          "11211: ################################################################################",
          "11212: l \"fa-IR\" \"Persian (\u0641\u0627\u0631\u0633\u06cc)\" 0x0429",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11210: t MSG_295 \"Advarsel: Uoffisiell versjon\"",
          "11211: t MSG_296 \"Denne versjonen av Rufus er IKKE laget av dens offisielle utvikleren(e).\\n\\nEr du sikker p\u00e5 at du vil kj\u00f8re programmet?\"",
          "11212: t MSG_297 \"Forkortet ISO oppdaget\"",
          "11213: t MSG_298 \"ISO-filen du har valgt, stemmer ikke overens med den deklarerte st\u00f8rrelsen: %s av dataene mangler!\\n\\ nHvis du har lastet ned denne \"",
          "11214:  \"filen fra internett, b\u00f8r du pr\u00f8ve \u00e5 laste ned en ny kopi, og verifisere at MD5 eller SHA kontrollsummen samsvarer med de offisielle.\\n\\n\"",
          "11215:  \"Legg merke til at du kan beregne MD5 eller SHA i Rufus ved \u00e5 klikke p\u00e5 '#'-knappen.\"",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 2.16.1134\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 2.16.1135\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "368: VS_VERSION_INFO VERSIONINFO",
          "371:  FILEFLAGSMASK 0x3fL",
          "372: #ifdef _DEBUG",
          "373:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "369:  FILEVERSION 2,16,1134,0",
          "370:  PRODUCTVERSION 2,16,1134,0",
          "",
          "[Added Lines]",
          "369:  FILEVERSION 2,16,1135,0",
          "370:  PRODUCTVERSION 2,16,1135,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "384:         BEGIN",
          "385:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "386:             VALUE \"FileDescription\", \"Rufus\"",
          "388:             VALUE \"InternalName\", \"Rufus\"",
          "389:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
          "390:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "391:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "392:             VALUE \"ProductName\", \"Rufus\"",
          "394:         END",
          "395:     END",
          "396:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "387:             VALUE \"FileVersion\", \"2.16.1134\"",
          "393:             VALUE \"ProductVersion\", \"2.16.1134\"",
          "",
          "[Added Lines]",
          "387:             VALUE \"FileVersion\", \"2.16.1135\"",
          "393:             VALUE \"ProductVersion\", \"2.16.1135\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "91a18be258b3be78cae2a8357feeb9d835934a8b",
      "candidate_info": {
        "commit_hash": "91a18be258b3be78cae2a8357feeb9d835934a8b",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/91a18be258b3be78cae2a8357feeb9d835934a8b",
        "files": [
          "res/loc/po/!update.cmd",
          "res/loc/pollock/Pollock.cs",
          "src/rufus.rc"
        ],
        "message": "[pollock] update maintainer mode\n\n* Also add maintenance script",
        "before_after_code_files": [
          "res/loc/po/!update.cmd||res/loc/po/!update.cmd",
          "res/loc/pollock/Pollock.cs||res/loc/pollock/Pollock.cs",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "res/loc/po/!update.cmd||res/loc/po/!update.cmd": [
          "File: res/loc/po/!update.cmd -> res/loc/po/!update.cmd",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: @echo off",
          "2: if not exist pollock.exe curl https://rufus.ie/locale/pollock.exe --output pollock.exe",
          "3: cls",
          "4: :menu",
          "5: echo 1 - Import .po into .loc",
          "6: echo 2 - Create .po from .loc",
          "7: echo 3 - Exit",
          "8: choice /N /C:123%1",
          "9: if ERRORLEVEL==3 goto exit",
          "10: if ERRORLEVEL==2 (",
          "11:   pollock.exe -l",
          "12:   goto menu",
          "13: )",
          "14: if ERRORLEVEL==1 (",
          "15:   pollock.exe -i",
          "16:   goto menu",
          "17: )",
          "18: :exit",
          "19: del *.pot",
          "20: del *.mo",
          "",
          "---------------"
        ],
        "res/loc/pollock/Pollock.cs||res/loc/pollock/Pollock.cs": [
          "File: res/loc/pollock/Pollock.cs -> res/loc/pollock/Pollock.cs",
          "--- Hunk 1 ---",
          "[Context before]",
          "973:             if (Console.WindowWidth < 100)",
          "974:                 Console.SetWindowSize(100, Console.WindowHeight);",
          "977:             Console.OutputEncoding = System.Text.Encoding.UTF8;",
          "978:             Console.CancelKeyPress += delegate (object sender, ConsoleCancelEventArgs e) {",
          "979:                 e.Cancel = true;",
          "",
          "[Removed Lines]",
          "976:             bool use_local_loc = false;",
          "",
          "[Added Lines]",
          "976:             bool maintainer_mode = false;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "981:             };",
          "982:             Console.WriteLine($\"{app_name} {version_str} - Poedit to rufus.loc conversion utility\");",
          "983:             Console.WriteLine();",
          "993:             string loc_url = \"https://github.com/pbatard/rufus/raw/master/res/loc/rufus.loc\";",
          "994:             string ver_url = \"https://rufus.ie/Loc.ver\";",
          "",
          "[Removed Lines]",
          "984:             foreach (var arg in args)",
          "985:             {",
          "986:                 if (arg.Contains(\"l\"))",
          "987:                     use_local_loc = true;",
          "988:             }",
          "990:             if (AppDomain.CurrentDomain.FriendlyName.Contains('m'))",
          "991:                 goto Maintainer_Mode;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "996:             string rufus_file = null;",
          "997:             string download_url = null;",
          "998:             string po_file = null;",
          "999:             int[] update_version = new int[2] { 0, 0 };",
          "1000:             var list = new List<string[]>();",
          "1001:             int index = -1;",
          "1004:             Console.Write(\"Downloading latest application data... \");",
          "1005:             var ver = DownloadString(ver_url);",
          "1006:             if (ver == null)",
          "1007:             {",
          "1008:                 Console.WriteLine(\"ERROR: Could not access application data.\");",
          "1010:             }",
          "1011:             foreach (var line in ver.Split('\\n'))",
          "1012:             {",
          "",
          "[Removed Lines]",
          "1009:                 goto Error;",
          "",
          "[Added Lines]",
          "991:             string loc_file = null;",
          "992:             string id = \"\", name = \"\";",
          "998:             foreach (var arg in args)",
          "999:             {",
          "1000:                 if (arg.Contains(\"i\"))",
          "1001:                 {",
          "1002:                     maintainer_mode = true;",
          "1003:                     goto Import;",
          "1004:                 }",
          "1005:                 else if (arg.Contains(\"l\"))",
          "1006:                 {",
          "1007:                     loc_file = @\"..\\rufus.loc\";",
          "1008:                     foreach (var line in File.ReadAllLines(loc_file))",
          "1009:                     {",
          "1010:                         if (line.StartsWith(\"l \"))",
          "1011:                         {",
          "1012:                             var el = line.Split('\\\"');",
          "1013:                             id = el[1];",
          "1014:                             name = el[3].Split('(')[0].Trim();",
          "1015:                         }",
          "1016:                         else if (line.StartsWith(\"v \"))",
          "1017:                         {",
          "1018:                             list.Add(new string[] { name, id, line.Substring(2) });",
          "1019:                         }",
          "1020:                     }",
          "1021:                     maintainer_mode = true;",
          "1022:                     goto Menu;",
          "1023:                 }",
          "1024:             }",
          "1032:                 goto Exit;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1030:             if ((download_url == null) || (rufus_url == null) || (update_version[0] == 0))",
          "1031:             {",
          "1032:                 Console.WriteLine(\"FAILED\");",
          "1034:             }",
          "1035:             Console.WriteLine(\"DONE\");",
          "",
          "[Removed Lines]",
          "1033:                 goto Error;",
          "",
          "[Added Lines]",
          "1056:                 goto Exit;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1043:                     if (DownloadFile(download_url))",
          "1044:                     {",
          "1045:                         Console.WriteLine(\"Now re-launch this program using the latest version.\");",
          "1047:                     }",
          "1048:                     Console.WriteLine(\"Download failed.\");",
          "1049:                 }",
          "",
          "[Removed Lines]",
          "1046:                         goto Error;",
          "",
          "[Added Lines]",
          "1069:                         goto Exit;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1071:                 }",
          "1072:             }",
          "1075:             {",
          "1077:                 Console.Write(\"Downloading the latest loc file... \");",
          "1078:                 if (!DownloadFile(loc_url))",
          "1080:             }",
          "1081:             else",
          "1082:             {",
          "",
          "[Removed Lines]",
          "1074:             if (!use_local_loc)",
          "1079:                     goto Error;",
          "",
          "[Added Lines]",
          "1097:             if (!maintainer_mode)",
          "1102:                     goto Exit;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1085:                 File.Copy(local_loc, \"rufus.loc\", true);",
          "1086:             }",
          "1090:             var lines = File.ReadAllLines(loc_file);",
          "1092:             using (var writer = new StreamWriter(loc_file, false, encoding))",
          "1093:             {",
          "1094:                 foreach (var line in lines)",
          "",
          "[Removed Lines]",
          "1088:             var loc_file = loc_url.Split('/').Last();",
          "1091:             string id = \"\", name = \"\";",
          "",
          "[Added Lines]",
          "1111:             loc_file = loc_url.Split('/').Last();",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1142:             Language old_en_US = null;",
          "1143:             if (list[index][2] == list[0][2])",
          "1144:             {",
          "1148:             }",
          "1149:             else",
          "1150:             {",
          "",
          "[Removed Lines]",
          "1145:                 Console.WriteLine(\"Note: This language is already at the most recent version!\");",
          "1146:                 if (!PromptForQuestion(\"Do you still want to edit it?\"))",
          "1147:                     goto Error;",
          "",
          "[Added Lines]",
          "1167:                 if (!maintainer_mode)",
          "1168:                 {",
          "1169:                     Console.WriteLine(\"Note: This language is already at the most recent version!\");",
          "1170:                     if (!PromptForQuestion(\"Do you still want to edit it?\"))",
          "1171:                         goto Exit;",
          "1172:                 }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1162:                     var url = \"https://github.com/pbatard/rufus/releases/tag/v\" + list[index][2];",
          "1163:                     var str = DownloadString(url);",
          "1164:                     if (str == null)",
          "1166:                     var sha = str.Substring(str.IndexOf(\"/pbatard/rufus/commit/\") + 22, 40);",
          "1168:                     string loc_dir = ((list[index][2][0] == '2') || ((list[index][2][0] == '3') && (list[index][2][2] == '0'))) ? \"localization\" : \"loc\";",
          "1169:                     url = \"https://github.com/pbatard/rufus/raw/\" + sha + \"/res/\" + loc_dir + \"/rufus.loc\";",
          "1170:                     if (!DownloadFile(url, old_loc_file))",
          "1172:                 }",
          "1173:                 var old_langs = ParseLocFile(old_loc_file, \"en-US\");",
          "1174:                 if ((old_langs == null) || (old_langs.Count != 1))",
          "1175:                 {",
          "1176:                     Console.WriteLine(\"Error: Unable to get en-US data from previous loc file.\");",
          "1178:                 }",
          "1179:                 old_en_US = old_langs[0];",
          "1180:             }",
          "1183:             {",
          "1184:                 if (!PromptForQuestion($\"A '{po_file}' file already exists. Do you want to overwrite it? (If unsure, say 'y')\"))",
          "1186:             }",
          "1187:             if (CreatePoFiles(ParseLocFile(loc_file, list[index][1]), old_en_US) < 1)",
          "1188:             {",
          "1189:                 Console.WriteLine(\"Failed to create PO file\");",
          "1191:             }",
          "1194:             FileSystemWatcher watcher = new FileSystemWatcher();",
          "1195:             watcher.Path = app_dir;",
          "",
          "[Removed Lines]",
          "1165:                         goto Error;",
          "1171:                         goto Error;",
          "1177:                     goto Error;",
          "1182:             if (File.Exists(po_file))",
          "1185:                     goto Error;",
          "1190:                 goto Error;",
          "",
          "[Added Lines]",
          "1190:                         goto Exit;",
          "1196:                         goto Exit;",
          "1202:                     goto Exit;",
          "1207:             if (File.Exists(po_file) && !maintainer_mode)",
          "1210:                     goto Exit;",
          "1215:                 goto Exit;",
          "1218:             if (maintainer_mode)",
          "1219:                 goto Exit;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1242:                 Console.WriteLine($\"'{po_file}' file manually.\");",
          "1243:             }",
          "1246:             WaitForKey(\"Now press any key to launch your e-mail client and exit this application...\");",
          "1248:             if ((list.Count >= 2) && (index >= 0))",
          "",
          "[Removed Lines]",
          "1245: Exit:",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1254:             }",
          "1255:             return;",
          "1262:             string file_name;",
          "1263:             OpenFileDialog file_dialog = new OpenFileDialog();",
          "1264:             file_dialog.InitialDirectory = app_dir;",
          "",
          "[Removed Lines]",
          "1257: Error:",
          "1258:             WaitForKey(\"Press any key to exit...\");",
          "1259:             return;",
          "1261: Maintainer_Mode:",
          "",
          "[Added Lines]",
          "1284: Import:",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1267:             file_name = file_dialog.FileName;",
          "1268:             Console.WriteLine(file_name);",
          "1269:             UpdateLocFile(ParsePoFile(file_name), app_dir + @\"..\\\");",
          "1271:         }",
          "1272:     }",
          "1273: }",
          "",
          "[Removed Lines]",
          "1270:             WaitForKey(\"Press any key to exit...\");",
          "",
          "[Added Lines]",
          "1294: Exit:",
          "1295:             if (!maintainer_mode)",
          "1296:                 WaitForKey(\"Press any key to exit...\");",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 232, 326",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 9, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Drive Properties\",IDS_DRIVE_PROPERTIES_TXT,8,6,53,12,NOT WS_GROUP",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 3.2.1349\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 3.2.1350\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "394: VS_VERSION_INFO VERSIONINFO",
          "397:  FILEFLAGSMASK 0x3fL",
          "398: #ifdef _DEBUG",
          "399:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "395:  FILEVERSION 3,2,1349,0",
          "396:  PRODUCTVERSION 3,2,1349,0",
          "",
          "[Added Lines]",
          "395:  FILEVERSION 3,2,1350,0",
          "396:  PRODUCTVERSION 3,2,1350,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "411:             VALUE \"Comments\", \"https://akeo.ie\"",
          "412:             VALUE \"CompanyName\", \"Akeo Consulting\"",
          "413:             VALUE \"FileDescription\", \"Rufus\"",
          "415:             VALUE \"InternalName\", \"Rufus\"",
          "416:             VALUE \"LegalCopyright\", \"\ufffd 2011-2018 Pete Batard (GPL v3)\"",
          "417:             VALUE \"LegalTrademarks\", \"https://www.gnu.org/copyleft/gpl.html\"",
          "418:             VALUE \"OriginalFilename\", \"rufus-3.2.exe\"",
          "419:             VALUE \"ProductName\", \"Rufus\"",
          "421:         END",
          "422:     END",
          "423:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "414:             VALUE \"FileVersion\", \"3.2.1349\"",
          "420:             VALUE \"ProductVersion\", \"3.2.1349\"",
          "",
          "[Added Lines]",
          "414:             VALUE \"FileVersion\", \"3.2.1350\"",
          "420:             VALUE \"ProductVersion\", \"3.2.1350\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "af9cca5fb315bfbe632d37c8250cac6fc6bc76d6",
      "candidate_info": {
        "commit_hash": "af9cca5fb315bfbe632d37c8250cac6fc6bc76d6",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/af9cca5fb315bfbe632d37c8250cac6fc6bc76d6",
        "files": [
          "appveyor.yml",
          "res/localization/Pollock.cs",
          "src/rufus.rc"
        ],
        "message": "[pollock] add rufus.loc download and menu selection\n\n* Also handle duplicate messages in .pot/.po",
        "before_after_code_files": [
          "res/localization/Pollock.cs||res/localization/Pollock.cs",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "res/localization/Pollock.cs||res/localization/Pollock.cs": [
          "File: res/localization/Pollock.cs -> res/localization/Pollock.cs",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: using System;",
          "21: using System.Collections.Generic;",
          "22: using System.IO;",
          "23: using System.Linq;",
          "24: using System.Reflection;",
          "25: using System.Text;",
          "26: using System.Text.RegularExpressions;",
          "28: [assembly: AssemblyTitle(\"Pollock\")]",
          "29: [assembly: AssemblyDescription(\"Poedit \u2194 Rufus loc conversion utility\")]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: using System.ComponentModel;",
          "25: using System.Net;",
          "29: using System.Threading;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "85:         private const string LANG_LCID = \"X-Rufus-LCID\";",
          "86:         private static Encoding encoding = new UTF8Encoding(false);",
          "87:         private static List<string> rtl_languages = new List<string> { \"ar-SA\", \"he-IL\", \"fa-IR\" };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91:         private static System.Diagnostics.Stopwatch sw = new System.Diagnostics.Stopwatch();",
          "92:         private static WebClient wc = new WebClient();",
          "93:         private static int download_status;",
          "94:         private static bool in_progress = false;",
          "95:         private static double speed = 0.0f;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "108:         {",
          "109:             var rufus_loc = path + @\"\\rufus.loc\";",
          "110:             var rufus_pot = path + @\"\\rufus.pot\";",
          "112:             var lines = File.ReadAllLines(rufus_loc);",
          "113:             int line_nr = 0;",
          "114:             string format = \"D\" + (int)(Math.Log10((double)lines.Count()) + 0.99999);",
          "",
          "[Removed Lines]",
          "107:         static List<Language> ParseLocFile(string path)",
          "111:             var watch = System.Diagnostics.Stopwatch.StartNew();",
          "",
          "[Added Lines]",
          "115:         static List<Language> ParseLocFile(string path, string id = null)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "118:             List<string> parts;",
          "119:             List<Language> langs = new List<Language>();",
          "120:             Language lang = null;",
          "122:             if (!File.Exists(rufus_loc))",
          "123:             {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "128:             bool skip_line = false;",
          "130:             sw.Start();",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "143:                 }",
          "144:                 if (string.IsNullOrEmpty(data))",
          "145:                     continue;",
          "146:                 switch (data[0])",
          "147:                 {",
          "148:                     case '#':",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "156:                 if (skip_line && data[0] != 'l')",
          "157:                     continue;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "150:                         break;",
          "151:                     case 'l':",
          "152:                         comment = null;",
          "156:                         parts = Regex.Matches(data, @\"[\\\"\"].+?[\\\"\"]|[^ ]+\")",
          "157:                             .Cast<Match>()",
          "158:                             .Select(m => m.Value)",
          "",
          "[Removed Lines]",
          "153:                         if (lang != null)",
          "154:                             langs.Add(lang);",
          "155:                         lang = new Language();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "162:                             Console.WriteLine(\"Error: Invalid 'l' command\");",
          "163:                             return null;",
          "164:                         }",
          "165:                         lang.id = parts[1].Replace(\"\\\"\", \"\");",
          "166:                         lang.name = parts[2].Replace(\"\\\"\", \"\");",
          "167:                         Console.WriteLine($\"Found language {lang.id} '{lang.name}'\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "174:                         string lid = parts[1].Replace(\"\\\"\", \"\");",
          "175:                         if (id != null)",
          "176:                         {",
          "177:                             if ((!skip_line) && (id != lid) && (lid != \"en-US\"))",
          "178:                                 skip_line = true;",
          "179:                             else if (skip_line && (id == lid))",
          "180:                                 skip_line = false;",
          "181:                             if (skip_line)",
          "182:                                 break;",
          "183:                         }",
          "184:                         if (lang != null)",
          "185:                             langs.Add(lang);",
          "186:                         lang = new Language();",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "222:             if (lang != null)",
          "223:                 langs.Add(lang);",
          "226:             Console.WriteLine($\"{(cancel_requested ? \"CANCELLED after\" : \"DONE in\")}\" +",
          "229:             return langs;",
          "230:         }",
          "",
          "[Removed Lines]",
          "225:             watch.Stop();",
          "227:                 $\" {watch.ElapsedMilliseconds / 1000.0}s.\");",
          "",
          "[Added Lines]",
          "247:             sw.Stop();",
          "249:                 $\" {sw.ElapsedMilliseconds / 1000.0}s.\");",
          "250:             sw.Reset();",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "239:         {",
          "240:             if (langs == null)",
          "241:                 return false;",
          "",
          "[Removed Lines]",
          "238:         static bool CreatePoFiles(string path, List<Language> langs)",
          "",
          "[Added Lines]",
          "261:         static bool CreatePoFiles(string path, List<Language> langs, bool merge_pot = false)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "244:             if (en_US == null)",
          "245:                 return false;",
          "247:             foreach (var lang in langs)",
          "248:             {",
          "249:                 bool is_pot = (lang.id == \"en-US\");",
          "250:                 var target = path + @\"\\\" + (is_pot ? \"rufus.pot\" : lang.id + \".po\");",
          "251:                 Console.WriteLine($\"Creating '{target}'\");",
          "252:                 using (var writer = new StreamWriter(target, false, encoding))",
          "253:                 {",
          "255:                     writer.WriteLine();",
          "256:                     writer.WriteLine(\"msgid \\\"\\\"\");",
          "257:                     writer.WriteLine(\"msgstr \\\"\\\"\");",
          "",
          "[Removed Lines]",
          "254:                     writer.WriteLine(\"#, fuzzy\");",
          "",
          "[Added Lines]",
          "270:             var msg_to_ids = new Dictionary<string, List<Id>>();",
          "273:             foreach (var section in en_US.sections)",
          "274:             {",
          "275:                 foreach (var msg in section.Value)",
          "276:                 {",
          "277:                     if (msg_to_ids.ContainsKey(msg.str))",
          "278:                         msg_to_ids[msg.str].Add(new Id(section.Key, msg.id));",
          "279:                     else",
          "280:                         msg_to_ids.Add(msg.str, new List<Id>() { new Id(section.Key, msg.id) });",
          "281:                 }",
          "282:             }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "272:                     writer.WriteLine($\"\\\"X-Rufus-LanguageName: {lang.name}\\\\n\\\"\");",
          "273:                     writer.WriteLine($\"\\\"X-Rufus-LCID: {lang.lcid}\\\\n\\\"\");",
          "275:                     foreach (var section in lang.sections)",
          "276:                     {",
          "277:                         foreach (var msg in section.Value)",
          "278:                         {",
          "279:                             writer.WriteLine();",
          "284:                             if (lang.comments.ContainsKey(msg.id))",
          "285:                             {",
          "286:                                 if (is_pot)",
          "",
          "[Removed Lines]",
          "280:                             if (section.Key == \"MSG\")",
          "281:                                 writer.WriteLine($\"#. \u2022 {msg.id}\");",
          "282:                             else",
          "283:                                 writer.WriteLine($\"#. \u2022 {section.Key} \u2192 {msg.id}\");",
          "",
          "[Added Lines]",
          "312:                     var dupes = new List<string>();",
          "318:                             var en_str = en_US.sections[section.Key].Find(x => x.id == msg.id).str;",
          "321:                             if (dupes.Contains(en_str))",
          "322:                                 continue;",
          "324:                             foreach (var id in msg_to_ids[en_str])",
          "325:                             {",
          "326:                                 if (id.group == \"MSG\")",
          "327:                                     writer.WriteLine($\"#. \u2022 {id.id}\");",
          "328:                                 else",
          "329:                                     writer.WriteLine($\"#. \u2022 {id.group} \u2192 {id.id}\");",
          "330:                             }",
          "331:                             if (msg_to_ids[en_str].Count > 1)",
          "332:                                 dupes.Add(en_str);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "296:                             }",
          "297:                             else",
          "298:                             {",
          "300:                                 writer.WriteLine($\"msgstr {msg.str}\");",
          "301:                             }",
          "302:                         }",
          "",
          "[Removed Lines]",
          "299:                                 writer.WriteLine($\"msgid {en_US.sections[section.Key].Find(x => x.id == msg.id).str}\");",
          "",
          "[Added Lines]",
          "349:                                 writer.WriteLine($\"msgid {en_str}\");",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "321:             }",
          "322:             Console.WriteLine($\"Importing data from '{file}':\");",
          "323:             bool is_pot = file.EndsWith(\".pot\");",
          "325:             var lines = File.ReadAllLines(file);",
          "326:             string format = \"D\" + (int)(Math.Log10((double)lines.Count()) + 0.99999);",
          "327:             int line_nr = 0;",
          "",
          "[Removed Lines]",
          "324:             var watch = System.Diagnostics.Stopwatch.StartNew();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "332:             List<string> comments = new List<string>();",
          "333:             List<string> codes = new List<string>();",
          "334:             int msg_type = 0;",
          "335:             foreach (var line in lines)",
          "336:             {",
          "337:                 if (cancel_requested)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "385:             sw.Start();",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "445:             lang.sections[\"MSG\"] = lang.sections[\"MSG\"].OrderBy(x => x.id).ToList();",
          "448:             Console.WriteLine($\"{(cancel_requested ? \"CANCELLED after\" : \"DONE in\")}\" +",
          "451:             return lang;",
          "452:         }",
          "",
          "[Removed Lines]",
          "447:             watch.Stop();",
          "449:                 $\" {watch.ElapsedMilliseconds / 1000.0}s.\");",
          "",
          "[Added Lines]",
          "499:             sw.Stop();",
          "501:                 $\" {sw.ElapsedMilliseconds / 1000.0}s.\");",
          "502:             sw.Reset();",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "496:         {",
          "497:             if (lang == null)",
          "498:                 return false;",
          "501:             var target = path + @\"\\rufus.loc\";",
          "502:             var lines = File.ReadAllLines(target);",
          "503:             using (var writer = new StreamWriter(target, false, encoding))",
          "",
          "[Removed Lines]",
          "499:             Encoding encoding = new UTF8Encoding(false);",
          "500:             var watch = System.Diagnostics.Stopwatch.StartNew();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "532:         {",
          "533:             if ((list == null) || (list.Count == 0))",
          "534:                 return false;",
          "537:             var target = path + @\"\\rufus.loc\";",
          "538:             Console.WriteLine($\"Creating '{target}':\");",
          "539:             using (var writer = new StreamWriter(target, false, encoding))",
          "540:             {",
          "",
          "[Removed Lines]",
          "536:             var watch = System.Diagnostics.Stopwatch.StartNew();",
          "",
          "[Added Lines]",
          "588:             sw.Start();",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "559:                     WriteLoc(writer, lang);",
          "560:                 }",
          "561:             }",
          "563:             Console.WriteLine($\"{(cancel_requested ? \"CANCELLED after\" : \"DONE in\")}\" +",
          "565:             return true;",
          "566:         }",
          "568:         static void Main(string[] args)",
          "569:         {",
          "570:             Console.OutputEncoding = System.Text.Encoding.UTF8;",
          "",
          "[Removed Lines]",
          "562:             watch.Stop();",
          "564:                 $\" {watch.ElapsedMilliseconds / 1000.0}s.\");",
          "",
          "[Added Lines]",
          "615:             sw.Stop();",
          "617:                 $\" {sw.ElapsedMilliseconds / 1000.0}s.\");",
          "618:             sw.Reset();",
          "623:         static bool DownloadFile(string url, string dest)",
          "624:         {",
          "625:             download_status = 0;",
          "626:             in_progress = false;",
          "627:             using (wc)",
          "628:             {",
          "629:                 wc.DownloadFileCompleted += new AsyncCompletedEventHandler(DownloadCompleted);",
          "630:                 wc.DownloadProgressChanged += new DownloadProgressChangedEventHandler(DownloadProgress);",
          "632:                 Console.WriteLine($\"Downloading {url}:\");",
          "633:                 sw.Start();",
          "635:                 try",
          "636:                 {",
          "637:                     wc.DownloadFileAsync(new Uri(url), dest);",
          "638:                 }",
          "639:                 catch (Exception e)",
          "640:                 {",
          "641:                     Console.WriteLine(\"ERROR: \" + e.Message);",
          "642:                     return false;",
          "643:                 }",
          "644:             }",
          "645:             while (download_status == 0)",
          "646:                 Thread.Sleep(100);",
          "648:             Console.WriteLine();",
          "649:             if (download_status == 1)",
          "650:             {",
          "651:                 Console.WriteLine(\"Download complete\");",
          "652:                 return true;",
          "653:             }",
          "655:             Console.WriteLine(\"Download has been canceled.\");",
          "656:             return false;",
          "657:         }",
          "660:         static void DownloadProgress(object sender, DownloadProgressChangedEventArgs e)",
          "661:         {",
          "662:             if (cancel_requested)",
          "663:             {",
          "664:                 wc.CancelAsync();",
          "665:                 return;",
          "666:             }",
          "667:             if (in_progress)",
          "668:                 return;",
          "671:             in_progress = true;",
          "673:             speed = (e.BytesReceived / 1024d / sw.Elapsed.TotalSeconds);",
          "674:             Console.SetCursorPosition(0, Console.CursorTop);",
          "675:             Console.Write($\" {e.ProgressPercentage.ToString(\"000.0\")} % ({speed.ToString(\"0.00\")} KB/s)\");",
          "676:             in_progress = false;",
          "677:         }",
          "680:         static void DownloadCompleted(object sender, AsyncCompletedEventArgs e)",
          "681:         {",
          "682:             if (!e.Cancelled)",
          "683:             {",
          "684:                 Console.SetCursorPosition(0, Console.CursorTop);",
          "685:                 Console.Write($\" 100.0 % ({speed.ToString(\"0.00\")} KB/s)\");",
          "686:             }",
          "687:             sw.Reset();",
          "688:             download_status = (e.Cancelled) ? 2 : 1;",
          "689:         }",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "576:             Console.WriteLine($\"{app_name} {app_version} - Poedit to rufus.loc conversion utility\");",
          "578:             var path = @\"C:\\pollock\";",
          "596:             WaitForKey();",
          "597:         }",
          "598:     }",
          "",
          "[Removed Lines]",
          "584:             var en_US = ParsePoFile(path + @\"\\rufus.pot\");",
          "585:             var fr_FR = ParsePoFile(path + @\"\\fr-FR.po\");",
          "586:             var ar_SA = ParsePoFile(path + @\"\\ar-SA.po\");",
          "587:             var vi_VN = ParsePoFile(path + @\"\\vi-VN.po\");",
          "588:             List<Language> list = new List<Language>();",
          "589:             list.Add(en_US);",
          "590:             list.Add(ar_SA);",
          "591:             list.Add(fr_FR);",
          "592:             list.Add(vi_VN);",
          "593:             SaveLocFile(path, list);",
          "",
          "[Added Lines]",
          "702:             var loc = path + @\"\\download.loc\";",
          "710:             var lines = File.ReadAllLines(loc);",
          "711:             string id = \"\", name = \"\";",
          "712:             var list = new List<string[]>();",
          "713:             using (var writer = new StreamWriter(loc, false, encoding))",
          "714:             {",
          "715:                 foreach (var line in lines)",
          "716:                 {",
          "717:                     if (line.StartsWith(\"l \"))",
          "718:                     {",
          "719:                         var el = line.Split('\\\"');",
          "720:                         id = el[1];",
          "721:                         name = el[3].Split('(')[0].Trim();",
          "722:                     }",
          "723:                     else if (line.StartsWith(\"v \"))",
          "724:                     {",
          "725:                         if (id != \"en-US\")",
          "726:                             list.Add(new string[] { name, id, line.Substring(2) });",
          "727:                     }",
          "728:                     writer.WriteLine(line);",
          "729:                 }",
          "730:             }",
          "732: Menu:",
          "733:             Console.WriteLine();",
          "734:             Console.WriteLine(\"Please enter the number of the language you want to edit or 'q' to quit:\");",
          "735:             Console.WriteLine();",
          "736:             int split = (list.Count + 1) / 2;",
          "737:             for (int i = 0; i < split; i++)",
          "738:             {",
          "739:                 name = $\"{list[i][0]} ({list[i][1]})\";",
          "740:                 Console.Write($\"[{(i+1).ToString(\"00\")}] {name,-29} (v{list[i][2]})\");",
          "741:                 name = $\"{list[i + split][0]} ({list[i + split][1]})\";",
          "742:                 Console.WriteLine($\"  |  [{(i + 1 + split).ToString(\"00\")}] {name,-29} (v{list[i + split][2]})\");",
          "743:             }",
          "744:             Console.WriteLine();",
          "746: Retry:",
          "747:             string input = Console.ReadLine();",
          "748:             if (input.StartsWith(\"q\"))",
          "749:                 goto Exit;",
          "750:             if (!Int32.TryParse(input, out int number) || (number <= 0) || (number > list.Count))",
          "751:             {",
          "752:                 if (input.StartsWith(\"m\"))",
          "753:                     goto Menu;",
          "754:                 Console.WriteLine(\"Invalid selection (Type 'm' to display the menu again)\");",
          "755:                 goto Retry;",
          "756:             }",
          "758:             number--;",
          "759:             Console.WriteLine($\"{list[number][0]} was selected\");",
          "760:             CreatePoFiles(path, ParseLocFile(path, list[number][1]));",
          "778: Exit:",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 232, 326",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 9, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Drive Properties\",IDS_DRIVE_PROPERTIES_TXT,8,6,53,12,NOT WS_GROUP",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 3.2.1334\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 3.2.1335\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "394: VS_VERSION_INFO VERSIONINFO",
          "397:  FILEFLAGSMASK 0x3fL",
          "398: #ifdef _DEBUG",
          "399:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "395:  FILEVERSION 3,2,1334,0",
          "396:  PRODUCTVERSION 3,2,1334,0",
          "",
          "[Added Lines]",
          "395:  FILEVERSION 3,2,1335,0",
          "396:  PRODUCTVERSION 3,2,1335,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "411:             VALUE \"Comments\", \"https://akeo.ie\"",
          "412:             VALUE \"CompanyName\", \"Akeo Consulting\"",
          "413:             VALUE \"FileDescription\", \"Rufus\"",
          "415:             VALUE \"InternalName\", \"Rufus\"",
          "416:             VALUE \"LegalCopyright\", \"\ufffd 2011-2018 Pete Batard (GPL v3)\"",
          "417:             VALUE \"LegalTrademarks\", \"https://www.gnu.org/copyleft/gpl.html\"",
          "418:             VALUE \"OriginalFilename\", \"rufus-3.2.exe\"",
          "419:             VALUE \"ProductName\", \"Rufus\"",
          "421:         END",
          "422:     END",
          "423:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "414:             VALUE \"FileVersion\", \"3.2.1334\"",
          "420:             VALUE \"ProductVersion\", \"3.2.1334\"",
          "",
          "[Added Lines]",
          "414:             VALUE \"FileVersion\", \"3.2.1335\"",
          "420:             VALUE \"ProductVersion\", \"3.2.1335\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}