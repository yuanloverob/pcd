{
  "cve_id": "CVE-2019-1010247",
  "cve_desc": "ZmartZone IAM mod_auth_openidc 2.3.10.1 and earlier is affected by: Cross Site Scripting (XSS). The impact is: Redirecting the user to a phishing page or interacting with the application on behalf of the user. The component is: File: src/mod_auth_openidc.c, Line: 3109. The fixed version is: 2.3.10.2.",
  "repo": "zmartzone/mod_auth_openidc",
  "patch_hash": "132a4111bf3791e76437619a66336dce2ce4c79b",
  "patch_info": {
    "commit_hash": "132a4111bf3791e76437619a66336dce2ce4c79b",
    "repo": "zmartzone/mod_auth_openidc",
    "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/132a4111bf3791e76437619a66336dce2ce4c79b",
    "files": [
      "ChangeLog",
      "configure.ac",
      "src/mod_auth_openidc.c"
    ],
    "message": "release 2.3.10.2: fix XSS vulnerability for poll parameter\n\nin OIDC Session Management RP iframe; CSNC-2019-001; thanks Mischa\nBachmann\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
    "before_after_code_files": [
      "configure.ac||configure.ac",
      "src/mod_auth_openidc.c||src/mod_auth_openidc.c"
    ]
  },
  "patch_diff": {
    "configure.ac||configure.ac": [
      "File: configure.ac -> configure.ac",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
      "",
      "[Removed Lines]",
      "1: AC_INIT([mod_auth_openidc],[2.3.10.1],[hans.zandbelt@zmartzone.eu])",
      "",
      "[Added Lines]",
      "1: AC_INIT([mod_auth_openidc],[2.3.10.2],[hans.zandbelt@zmartzone.eu])",
      "",
      "---------------"
    ],
    "src/mod_auth_openidc.c||src/mod_auth_openidc.c": [
      "File: src/mod_auth_openidc.c -> src/mod_auth_openidc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3106:    \"\\n\"",
      "3107:    \"      function setTimer() {\\n\"",
      "3108:    \"        checkSession();\\n\"",
      "3110:    \"      }\\n\"",
      "3111:    \"\\n\"",
      "3112:    \"      function receiveMessage(e) {\\n\"",
      "",
      "[Removed Lines]",
      "3109:    \"        timerID = setInterval('checkSession()', %s);\\n\"",
      "",
      "[Added Lines]",
      "3109:    \"        timerID = setInterval('checkSession()', %d);\\n\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3150:  char *s_poll_interval = NULL;",
      "3151:  oidc_util_get_request_parameter(r, \"poll\", &s_poll_interval);",
      "3155:  const char *redirect_uri = oidc_get_redirect_uri(r, c);",
      "3156:  java_script = apr_psprintf(r->pool, java_script, origin, client_id,",
      "3158:    redirect_uri);",
      "3160:  return oidc_util_html_send(r, NULL, java_script, \"setTimer\", NULL, DONE);",
      "",
      "[Removed Lines]",
      "3152:  if (s_poll_interval == NULL)",
      "3153:   s_poll_interval = \"3000\";",
      "3157:    session_state, op_iframe_id, s_poll_interval, redirect_uri,",
      "",
      "[Added Lines]",
      "3152:  int poll_interval = s_poll_interval ? strtol(s_poll_interval, NULL, 10) : 0;",
      "3153:  if ((poll_interval <= 0) || (poll_interval > 3600 * 24))",
      "3154:   poll_interval = 3000;",
      "3158:    session_state, op_iframe_id, poll_interval, redirect_uri,",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c075e7cdaf1b483feab800a1cf7e3896f98b0efc",
      "candidate_info": {
        "commit_hash": "c075e7cdaf1b483feab800a1cf7e3896f98b0efc",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/c075e7cdaf1b483feab800a1cf7e3896f98b0efc",
        "files": [
          "ChangeLog",
          "configure.ac",
          "src/proto.c"
        ],
        "message": "explicitly set kid in encrypted request object\n\n- ensures compatibility with cjose >= 0.6.0\n- bump to 2.3.6rc0\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/proto.c||src/proto.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.3.5],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.3.6rc0],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/proto.c||src/proto.c": [
          "File: src/proto.c -> src/proto.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "376:   if (jwe->header.enc == NULL)",
          "377:    jwe->header.enc = apr_pstrdup(r->pool, CJOSE_HDR_ENC_A128CBC_HS256);",
          "379:   if (oidc_jwt_encrypt(r->pool, jwe, jwk, cser,",
          "380:     &serialized_request_object, &err) == FALSE) {",
          "381:    oidc_error(r, \"encrypting JWT failed: %s\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "379:   if (jwk->kid != NULL)",
          "380:    jwe->header.kid = jwk->kid;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "88f6d4f4d7cd3f2be3c76270f2440d4dc92a2d47",
      "candidate_info": {
        "commit_hash": "88f6d4f4d7cd3f2be3c76270f2440d4dc92a2d47",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/88f6d4f4d7cd3f2be3c76270f2440d4dc92a2d47",
        "files": [
          "configure.ac"
        ],
        "message": "update the release number...\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.3.10rc3],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.3.10],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cc9b104ae634582861488b35591ab216e40d7be7",
      "candidate_info": {
        "commit_hash": "cc9b104ae634582861488b35591ab216e40d7be7",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/cc9b104ae634582861488b35591ab216e40d7be7",
        "files": [
          "ChangeLog",
          "configure.ac",
          "src/mod_auth_openidc.c"
        ],
        "message": "support login with OIDC session management\n\naddress #456; bump to 2.4.1rc3\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/mod_auth_openidc.c||src/mod_auth_openidc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "src/mod_auth_openidc.c||src/mod_auth_openidc.c"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "src/mod_auth_openidc.c||src/mod_auth_openidc.c"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.1rc2],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.1rc3],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/mod_auth_openidc.c||src/mod_auth_openidc.c": [
          "File: src/mod_auth_openidc.c -> src/mod_auth_openidc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3220:  const char *java_script =",
          "3221:    \"    <script type=\\\"text/javascript\\\">\\n\"",
          "3222:    \"      var targetOrigin  = '%s';\\n\"",
          "3224:    \"    var timerID;\\n\"",
          "3225:    \"\\n\"",
          "3226:    \"      function checkSession() {\\n\"",
          "",
          "[Removed Lines]",
          "3223:    \"      var message = '%s' + ' ' + '%s';\\n\"",
          "",
          "[Added Lines]",
          "3223:    \"      var clientId  = '%s';\\n\"",
          "3224:    \"      var sessionId  = '%s';\\n\"",
          "3225:    \"      var loginUrl  = '%s';\\n\"",
          "3226:    \"      var message = clientId + ' ' + sessionId;\\n\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3242:    \"        }\\n\"",
          "3243:    \"        if (e.data != 'unchanged') {\\n\"",
          "3244:    \"          clearInterval(timerID);\\n\"",
          "3249:    \"          }\\n\"",
          "3250:    \"        }\\n\"",
          "3251:    \"      }\\n\"",
          "",
          "[Removed Lines]",
          "3245:    \"          if (e.data == 'changed') {\\n\"",
          "3246:    \"       window.location.href = '%s?session=check';\\n\"",
          "3247:    \"          } else {\\n\"",
          "3248:    \"       window.location.href = '%s?session=logout';\\n\"",
          "",
          "[Added Lines]",
          "3248:    \"          if (e.data == 'changed' && sessionId == '' ) {\\n\"",
          "3249:    \"    // 'changed' + no session: enforce a login (if we have a login url...)\\n\"",
          "3250:    \"            if (loginUrl != '') {\\n\"",
          "3251:    \"              window.top.location.replace(loginUrl);\\n\"",
          "3252:    \"            }\\n\"",
          "3253:    \"     } else {\\n\"",
          "3254:    \"              // either 'changed' + active session, or 'error': enforce a logout\\n\"",
          "3255:    \"              window.top.location.replace('%s?logout=' + window.top.location.href);\\n\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3269:  if (session_state == NULL) {",
          "3270:   oidc_warn(r,",
          "3271:     \"no session_state found in the session; the OP does probably not support session management!?\");",
          "3273:  }",
          "3275:  char *s_poll_interval = NULL;",
          "",
          "[Removed Lines]",
          "3272:   return OK;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3278:  if ((poll_interval <= 0) || (poll_interval > 3600 * 24))",
          "3279:   poll_interval = 3000;",
          "3281:  const char *redirect_uri = oidc_get_redirect_uri(r, c);",
          "3282:  java_script = apr_psprintf(r->pool, java_script, origin, client_id,",
          "3286:  return oidc_util_html_send(r, NULL, java_script, \"setTimer\", NULL, OK);",
          "3287: }",
          "",
          "[Removed Lines]",
          "3283:    session_state, op_iframe_id, poll_interval, redirect_uri,",
          "3284:    redirect_uri);",
          "",
          "[Added Lines]",
          "3288:  char *login_uri = NULL;",
          "3289:  oidc_util_get_request_parameter(r, \"login_uri\", &login_uri);",
          "3294:    session_state ? session_state : \"\", login_uri ? login_uri : \"\",",
          "3295:      op_iframe_id, poll_interval, redirect_uri, redirect_uri);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3309:   return oidc_handle_logout_request(r, c, session, c->default_slo_url);",
          "3310:  }",
          "3315:  if (apr_strnatcmp(\"iframe_op\", cmd) == 0) {",
          "",
          "[Removed Lines]",
          "3312:  oidc_get_provider_from_session(r, c, session, &provider);",
          "",
          "[Added Lines]",
          "3323:  if (oidc_get_provider_from_session(r, c, session, &provider) == FALSE) {",
          "3324:   if ((oidc_provider_static_config(r, c, &provider) == FALSE)",
          "3325:     || (provider == NULL))",
          "3326:    return HTTP_NOT_FOUND;",
          "3327:  }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3337:  if (apr_strnatcmp(\"check\", cmd) == 0) {",
          "3338:   id_token_hint = oidc_session_get_idtoken(r, session);",
          "3356:  }",
          "",
          "[Removed Lines]",
          "3339:   if ((session->remote_user != NULL) && (provider != NULL)) {",
          "3346:    return oidc_authenticate_user(r, c, provider,",
          "3347:      apr_psprintf(r->pool, \"%s?session=iframe_rp\",",
          "3348:        oidc_get_redirect_uri_iss(r, c, provider)), NULL,",
          "3349:        id_token_hint, \"none\",",
          "3350:        oidc_dir_cfg_path_auth_request_params(r),",
          "3351:        oidc_dir_cfg_path_scope(r));",
          "3352:   }",
          "3353:   oidc_debug(r,",
          "3354:     \"[session=check] calling oidc_handle_logout_request because no session found.\");",
          "3355:   return oidc_session_redirect_parent_window_to_logout(r, c);",
          "",
          "[Added Lines]",
          "3360:   return oidc_authenticate_user(r, c, provider,",
          "3361:     apr_psprintf(r->pool, \"%s?session=iframe_rp\",",
          "3362:       oidc_get_redirect_uri_iss(r, c, provider)), NULL,",
          "3363:       id_token_hint, \"none\", oidc_dir_cfg_path_auth_request_params(r),",
          "3364:       oidc_dir_cfg_path_scope(r));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cef829a01a589a89dd10034e2a9cffa83ab155f9",
      "candidate_info": {
        "commit_hash": "cef829a01a589a89dd10034e2a9cffa83ab155f9",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/cef829a01a589a89dd10034e2a9cffa83ab155f9",
        "files": [
          "ChangeLog",
          "auth_openidc.conf",
          "configure.ac",
          "src/cache/cache.h",
          "src/config.c",
          "src/metadata.c",
          "src/mod_auth_openidc.c",
          "src/mod_auth_openidc.h"
        ],
        "message": "add `id_token_token_binding_cnf`: `tbh` to dyn client reg metadata\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "auth_openidc.conf||auth_openidc.conf",
          "configure.ac||configure.ac",
          "src/cache/cache.h||src/cache/cache.h",
          "src/config.c||src/config.c",
          "src/metadata.c||src/metadata.c",
          "src/mod_auth_openidc.c||src/mod_auth_openidc.c",
          "src/mod_auth_openidc.h||src/mod_auth_openidc.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "src/mod_auth_openidc.c||src/mod_auth_openidc.c"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "src/mod_auth_openidc.c||src/mod_auth_openidc.c"
          ]
        }
      },
      "candidate_diff": {
        "auth_openidc.conf||auth_openidc.conf": [
          "File: auth_openidc.conf -> auth_openidc.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "92: # Used when OIDCProviderMetadataURL is not defined or the metadata obtained from that URL does not set it.",
          "93: #OIDCProviderEndSessionEndpoint <url>",
          "95: # Extra JSON parameters that need to be passed in the registration request to the Registration Endpoint.",
          "96: # This settings serves as a default value for multiple OPs only.",
          "97: # Parameter names and values need to be provided in JSON form and will be merged in to the request.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "95: # Define whether the OP supports OpenID Connect Back Channel Logout.",
          "96: # According to: https://openid.net/specs/openid-connect-backchannel-1_0.html",
          "97: # Used when OIDCProviderMetadataURL is not defined or the metadata obtained from that URL does not set it.",
          "98: #OIDCProviderBackChannelLogoutSupported [On|Off]",
          "",
          "---------------"
        ],
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.3.9rc2],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.3.9rc3],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/cache/cache.h||src/cache/cache.h": [
          "File: src/cache/cache.h -> src/cache/cache.h"
        ],
        "src/config.c||src/config.c": [
          "File: src/config.c -> src/config.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "168: #define OIDC_DEFAULT_PROVIDER_ISSUER_SPECIFIC_REDIRECT_URI 0",
          "218: #define OIDCOAuthIntrospectionClientAuthBearerToken \"OIDCOAuthIntrospectionClientAuthBearerToken\"",
          "266: extern module AP_MODULE_DECLARE_DATA auth_openidc_module;",
          "",
          "[Removed Lines]",
          "170: #define OIDCProviderMetadataURL              \"OIDCProviderMetadataURL\"",
          "171: #define OIDCProviderIssuer                   \"OIDCProviderIssuer\"",
          "172: #define OIDCProviderAuthorizationEndpoint    \"OIDCProviderAuthorizationEndpoint\"",
          "173: #define OIDCProviderTokenEndpoint            \"OIDCProviderTokenEndpoint\"",
          "174: #define OIDCProviderTokenEndpointAuth        \"OIDCProviderTokenEndpointAuth\"",
          "175: #define OIDCProviderTokenEndpointParams      \"OIDCProviderTokenEndpointParams\"",
          "176: #define OIDCProviderRegistrationEndpointJson \"OIDCProviderRegistrationEndpointJson\"",
          "177: #define OIDCProviderUserInfoEndpoint         \"OIDCProviderUserInfoEndpoint\"",
          "178: #define OIDCProviderCheckSessionIFrame       \"OIDCProviderCheckSessionIFrame\"",
          "179: #define OIDCProviderEndSessionEndpoint       \"OIDCProviderEndSessionEndpoint\"",
          "180: #define OIDCProviderJwksUri                  \"OIDCProviderJwksUri\"",
          "181: #define OIDCResponseType                     \"OIDCResponseType\"",
          "182: #define OIDCResponseMode                     \"OIDCResponseMode\"",
          "183: #define OIDCPublicKeyFiles                   \"OIDCPublicKeyFiles\"",
          "184: #define OIDCClientJwksUri                    \"OIDCClientJwksUri\"",
          "185: #define OIDCIDTokenSignedResponseAlg         \"OIDCIDTokenSignedResponseAlg\"",
          "186: #define OIDCIDTokenEncryptedResponseAlg      \"OIDCIDTokenEncryptedResponseAlg\"",
          "187: #define OIDCIDTokenEncryptedResponseEnc      \"OIDCIDTokenEncryptedResponseEnc\"",
          "188: #define OIDCUserInfoSignedResponseAlg        \"OIDCUserInfoSignedResponseAlg\"",
          "189: #define OIDCUserInfoEncryptedResponseAlg     \"OIDCUserInfoEncryptedResponseAlg\"",
          "190: #define OIDCUserInfoEncryptedResponseEnc     \"OIDCUserInfoEncryptedResponseEnc\"",
          "191: #define OIDCUserInfoTokenMethod              \"OIDCUserInfoTokenMethod\"",
          "192: #define OIDCTokenBindingPolicy               \"OIDCTokenBindingPolicy\"",
          "193: #define OIDCSSLValidateServer                \"OIDCSSLValidateServer\"",
          "194: #define OIDCClientName                       \"OIDCClientName\"",
          "195: #define OIDCClientContact                    \"OIDCClientContact\"",
          "196: #define OIDCScope                            \"OIDCScope\"",
          "197: #define OIDCPathScope                        \"OIDCPathScope\"",
          "198: #define OIDCJWKSRefreshInterval              \"OIDCJWKSRefreshInterval\"",
          "199: #define OIDCIDTokenIatSlack                  \"OIDCIDTokenIatSlack\"",
          "200: #define OIDCSessionMaxDuration               \"OIDCSessionMaxDuration\"",
          "201: #define OIDCAuthRequestParams                \"OIDCAuthRequestParams\"",
          "202: #define OIDCPathAuthRequestParams            \"OIDCPathAuthRequestParams\"",
          "203: #define OIDCPKCEMethod                       \"OIDCPKCEMethod\"",
          "204: #define OIDCClientID                         \"OIDCClientID\"",
          "205: #define OIDCClientSecret                     \"OIDCClientSecret\"",
          "206: #define OIDCClientTokenEndpointCert          \"OIDCClientTokenEndpointCert\"",
          "207: #define OIDCClientTokenEndpointKey           \"OIDCClientTokenEndpointKey\"",
          "208: #define OIDCDefaultLoggedOutURL              \"OIDCDefaultLoggedOutURL\"",
          "209: #define OIDCCookieHTTPOnly                   \"OIDCCookieHTTPOnly\"",
          "210: #define OIDCCookieSameSite                   \"OIDCCookieSameSite\"",
          "211: #define OIDCOutgoingProxy                    \"OIDCOutgoingProxy\"",
          "212: #define OIDCCryptoPassphrase                 \"OIDCCryptoPassphrase\"",
          "213: #define OIDCClaimDelimiter                   \"OIDCClaimDelimiter\"",
          "214: #define OIDCPassIDTokenAs                    \"OIDCPassIDTokenAs\"",
          "215: #define OIDCPassUserInfoAs                   \"OIDCPassUserInfoAs\"",
          "216: #define OIDCOAuthClientID                    \"OIDCOAuthClientID\"",
          "217: #define OIDCOAuthClientSecret                \"OIDCOAuthClientSecret\"",
          "219: #define OIDCOAuthIntrospectionEndpoint       \"OIDCOAuthIntrospectionEndpoint\"",
          "220: #define OIDCOAuthIntrospectionEndpointMethod \"OIDCOAuthIntrospectionEndpointMethod\"",
          "221: #define OIDCOAuthIntrospectionEndpointParams \"OIDCOAuthIntrospectionEndpointParams\"",
          "222: #define OIDCOAuthIntrospectionEndpointAuth   \"OIDCOAuthIntrospectionEndpointAuth\"",
          "223: #define OIDCOAuthIntrospectionEndpointCert   \"OIDCOAuthIntrospectionEndpointCert\"",
          "224: #define OIDCOAuthIntrospectionEndpointKey    \"OIDCOAuthIntrospectionEndpointKey\"",
          "225: #define OIDCOAuthIntrospectionTokenParamName \"OIDCOAuthIntrospectionTokenParamName\"",
          "226: #define OIDCOAuthTokenExpiryClaim            \"OIDCOAuthTokenExpiryClaim\"",
          "227: #define OIDCOAuthSSLValidateServer           \"OIDCOAuthSSLValidateServer\"",
          "228: #define OIDCOAuthVerifyCertFiles             \"OIDCOAuthVerifyCertFiles\"",
          "229: #define OIDCOAuthVerifySharedKeys            \"OIDCOAuthVerifySharedKeys\"",
          "230: #define OIDCOAuthVerifyJwksUri               \"OIDCOAuthVerifyJwksUri\"",
          "231: #define OIDCHTTPTimeoutLong                  \"OIDCHTTPTimeoutLong\"",
          "232: #define OIDCHTTPTimeoutShort                 \"OIDCHTTPTimeoutShort\"",
          "233: #define OIDCStateTimeout                     \"OIDCStateTimeout\"",
          "234: #define OIDCStateMaxNumberOfCookies          \"OIDCStateMaxNumberOfCookies\"",
          "235: #define OIDCSessionInactivityTimeout         \"OIDCSessionInactivityTimeout\"",
          "236: #define OIDCMetadataDir                      \"OIDCMetadataDir\"",
          "237: #define OIDCSessionCacheFallbackToCookie     \"OIDCSessionCacheFallbackToCookie\"",
          "238: #define OIDCSessionCookieChunkSize           \"OIDCSessionCookieChunkSize\"",
          "239: #define OIDCScrubRequestHeaders              \"OIDCScrubRequestHeaders\"",
          "240: #define OIDCCacheType                        \"OIDCCacheType\"",
          "241: #define OIDCCacheEncrypt                     \"OIDCCacheEncrypt\"",
          "242: #define OIDCCacheDir                         \"OIDCCacheDir\"",
          "243: #define OIDCCacheFileCleanInterval           \"OIDCCacheFileCleanInterval\"",
          "244: #define OIDCRedisCachePassword               \"OIDCRedisCachePassword\"",
          "245: #define OIDCHTMLErrorTemplate                \"OIDCHTMLErrorTemplate\"",
          "246: #define OIDCDiscoverURL                      \"OIDCDiscoverURL\"",
          "247: #define OIDCPassCookies                      \"OIDCPassCookies\"",
          "248: #define OIDCStripCookies                     \"OIDCStripCookies\"",
          "249: #define OIDCAuthNHeader                      \"OIDCAuthNHeader\"",
          "250: #define OIDCCookie                           \"OIDCCookie\"",
          "251: #define OIDCUnAuthAction                     \"OIDCUnAuthAction\"",
          "252: #define OIDCUnAutzAction                     \"OIDCUnAutzAction\"",
          "253: #define OIDCPassClaimsAs                     \"OIDCPassClaimsAs\"",
          "254: #define OIDCOAuthAcceptTokenAs               \"OIDCOAuthAcceptTokenAs\"",
          "255: #define OIDCUserInfoRefreshInterval          \"OIDCUserInfoRefreshInterval\"",
          "256: #define OIDCOAuthTokenIntrospectionInterval  \"OIDCOAuthTokenIntrospectionInterval\"",
          "257: #define OIDCPreservePost                     \"OIDCPreservePost\"",
          "258: #define OIDCPassRefreshToken                 \"OIDCPassRefreshToken\"",
          "259: #define OIDCRequestObject                    \"OIDCRequestObject\"",
          "260: #define OIDCProviderMetadataRefreshInterval  \"OIDCProviderMetadataRefreshInterval\"",
          "261: #define OIDCProviderAuthRequestMethod        \"OIDCProviderAuthRequestMethod\"",
          "262: #define OIDCBlackListedClaims                \"OIDCBlackListedClaims\"",
          "263: #define OIDCOAuthServerMetadataURL           \"OIDCOAuthServerMetadataURL\"",
          "264: #define OIDCOAuthAccessTokenBindingPolicy    \"OIDCOAuthAccessTokenBindingPolicy\"",
          "",
          "[Added Lines]",
          "170: #define OIDCProviderMetadataURL                \"OIDCProviderMetadataURL\"",
          "171: #define OIDCProviderIssuer                     \"OIDCProviderIssuer\"",
          "172: #define OIDCProviderAuthorizationEndpoint      \"OIDCProviderAuthorizationEndpoint\"",
          "173: #define OIDCProviderTokenEndpoint              \"OIDCProviderTokenEndpoint\"",
          "174: #define OIDCProviderTokenEndpointAuth          \"OIDCProviderTokenEndpointAuth\"",
          "175: #define OIDCProviderTokenEndpointParams        \"OIDCProviderTokenEndpointParams\"",
          "176: #define OIDCProviderRegistrationEndpointJson   \"OIDCProviderRegistrationEndpointJson\"",
          "177: #define OIDCProviderUserInfoEndpoint           \"OIDCProviderUserInfoEndpoint\"",
          "178: #define OIDCProviderCheckSessionIFrame         \"OIDCProviderCheckSessionIFrame\"",
          "179: #define OIDCProviderEndSessionEndpoint         \"OIDCProviderEndSessionEndpoint\"",
          "180: #define OIDCProviderBackChannelLogoutSupported \"OIDCProviderBackChannelLogoutSupported\"",
          "181: #define OIDCProviderJwksUri                    \"OIDCProviderJwksUri\"",
          "182: #define OIDCResponseType                       \"OIDCResponseType\"",
          "183: #define OIDCResponseMode                       \"OIDCResponseMode\"",
          "184: #define OIDCPublicKeyFiles                     \"OIDCPublicKeyFiles\"",
          "185: #define OIDCClientJwksUri                      \"OIDCClientJwksUri\"",
          "186: #define OIDCIDTokenSignedResponseAlg           \"OIDCIDTokenSignedResponseAlg\"",
          "187: #define OIDCIDTokenEncryptedResponseAlg        \"OIDCIDTokenEncryptedResponseAlg\"",
          "188: #define OIDCIDTokenEncryptedResponseEnc        \"OIDCIDTokenEncryptedResponseEnc\"",
          "189: #define OIDCUserInfoSignedResponseAlg          \"OIDCUserInfoSignedResponseAlg\"",
          "190: #define OIDCUserInfoEncryptedResponseAlg       \"OIDCUserInfoEncryptedResponseAlg\"",
          "191: #define OIDCUserInfoEncryptedResponseEnc       \"OIDCUserInfoEncryptedResponseEnc\"",
          "192: #define OIDCUserInfoTokenMethod                \"OIDCUserInfoTokenMethod\"",
          "193: #define OIDCTokenBindingPolicy                 \"OIDCTokenBindingPolicy\"",
          "194: #define OIDCSSLValidateServer                  \"OIDCSSLValidateServer\"",
          "195: #define OIDCClientName                         \"OIDCClientName\"",
          "196: #define OIDCClientContact                      \"OIDCClientContact\"",
          "197: #define OIDCScope                              \"OIDCScope\"",
          "198: #define OIDCPathScope                          \"OIDCPathScope\"",
          "199: #define OIDCJWKSRefreshInterval                \"OIDCJWKSRefreshInterval\"",
          "200: #define OIDCIDTokenIatSlack                    \"OIDCIDTokenIatSlack\"",
          "201: #define OIDCSessionMaxDuration                 \"OIDCSessionMaxDuration\"",
          "202: #define OIDCAuthRequestParams                  \"OIDCAuthRequestParams\"",
          "203: #define OIDCPathAuthRequestParams              \"OIDCPathAuthRequestParams\"",
          "204: #define OIDCPKCEMethod                         \"OIDCPKCEMethod\"",
          "205: #define OIDCClientID                           \"OIDCClientID\"",
          "206: #define OIDCClientSecret                       \"OIDCClientSecret\"",
          "207: #define OIDCClientTokenEndpointCert            \"OIDCClientTokenEndpointCert\"",
          "208: #define OIDCClientTokenEndpointKey             \"OIDCClientTokenEndpointKey\"",
          "209: #define OIDCDefaultLoggedOutURL                \"OIDCDefaultLoggedOutURL\"",
          "210: #define OIDCCookieHTTPOnly                     \"OIDCCookieHTTPOnly\"",
          "211: #define OIDCCookieSameSite                     \"OIDCCookieSameSite\"",
          "212: #define OIDCOutgoingProxy                      \"OIDCOutgoingProxy\"",
          "213: #define OIDCCryptoPassphrase                   \"OIDCCryptoPassphrase\"",
          "214: #define OIDCClaimDelimiter                     \"OIDCClaimDelimiter\"",
          "215: #define OIDCPassIDTokenAs                      \"OIDCPassIDTokenAs\"",
          "216: #define OIDCPassUserInfoAs                     \"OIDCPassUserInfoAs\"",
          "217: #define OIDCOAuthClientID                      \"OIDCOAuthClientID\"",
          "218: #define OIDCOAuthClientSecret                  \"OIDCOAuthClientSecret\"",
          "220: #define OIDCOAuthIntrospectionEndpoint         \"OIDCOAuthIntrospectionEndpoint\"",
          "221: #define OIDCOAuthIntrospectionEndpointMethod   \"OIDCOAuthIntrospectionEndpointMethod\"",
          "222: #define OIDCOAuthIntrospectionEndpointParams   \"OIDCOAuthIntrospectionEndpointParams\"",
          "223: #define OIDCOAuthIntrospectionEndpointAuth     \"OIDCOAuthIntrospectionEndpointAuth\"",
          "224: #define OIDCOAuthIntrospectionEndpointCert     \"OIDCOAuthIntrospectionEndpointCert\"",
          "225: #define OIDCOAuthIntrospectionEndpointKey      \"OIDCOAuthIntrospectionEndpointKey\"",
          "226: #define OIDCOAuthIntrospectionTokenParamName   \"OIDCOAuthIntrospectionTokenParamName\"",
          "227: #define OIDCOAuthTokenExpiryClaim              \"OIDCOAuthTokenExpiryClaim\"",
          "228: #define OIDCOAuthSSLValidateServer             \"OIDCOAuthSSLValidateServer\"",
          "229: #define OIDCOAuthVerifyCertFiles               \"OIDCOAuthVerifyCertFiles\"",
          "230: #define OIDCOAuthVerifySharedKeys              \"OIDCOAuthVerifySharedKeys\"",
          "231: #define OIDCOAuthVerifyJwksUri                 \"OIDCOAuthVerifyJwksUri\"",
          "232: #define OIDCHTTPTimeoutLong                    \"OIDCHTTPTimeoutLong\"",
          "233: #define OIDCHTTPTimeoutShort                   \"OIDCHTTPTimeoutShort\"",
          "234: #define OIDCStateTimeout                       \"OIDCStateTimeout\"",
          "235: #define OIDCStateMaxNumberOfCookies            \"OIDCStateMaxNumberOfCookies\"",
          "236: #define OIDCSessionInactivityTimeout           \"OIDCSessionInactivityTimeout\"",
          "237: #define OIDCMetadataDir                        \"OIDCMetadataDir\"",
          "238: #define OIDCSessionCacheFallbackToCookie       \"OIDCSessionCacheFallbackToCookie\"",
          "239: #define OIDCSessionCookieChunkSize             \"OIDCSessionCookieChunkSize\"",
          "240: #define OIDCScrubRequestHeaders                \"OIDCScrubRequestHeaders\"",
          "241: #define OIDCCacheType                          \"OIDCCacheType\"",
          "242: #define OIDCCacheEncrypt                       \"OIDCCacheEncrypt\"",
          "243: #define OIDCCacheDir                           \"OIDCCacheDir\"",
          "244: #define OIDCCacheFileCleanInterval             \"OIDCCacheFileCleanInterval\"",
          "245: #define OIDCRedisCachePassword                 \"OIDCRedisCachePassword\"",
          "246: #define OIDCHTMLErrorTemplate                  \"OIDCHTMLErrorTemplate\"",
          "247: #define OIDCDiscoverURL                        \"OIDCDiscoverURL\"",
          "248: #define OIDCPassCookies                        \"OIDCPassCookies\"",
          "249: #define OIDCStripCookies                       \"OIDCStripCookies\"",
          "250: #define OIDCAuthNHeader                        \"OIDCAuthNHeader\"",
          "251: #define OIDCCookie                             \"OIDCCookie\"",
          "252: #define OIDCUnAuthAction                       \"OIDCUnAuthAction\"",
          "253: #define OIDCUnAutzAction                       \"OIDCUnAutzAction\"",
          "254: #define OIDCPassClaimsAs                       \"OIDCPassClaimsAs\"",
          "255: #define OIDCOAuthAcceptTokenAs                 \"OIDCOAuthAcceptTokenAs\"",
          "256: #define OIDCUserInfoRefreshInterval            \"OIDCUserInfoRefreshInterval\"",
          "257: #define OIDCOAuthTokenIntrospectionInterval    \"OIDCOAuthTokenIntrospectionInterval\"",
          "258: #define OIDCPreservePost                       \"OIDCPreservePost\"",
          "259: #define OIDCPassRefreshToken                   \"OIDCPassRefreshToken\"",
          "260: #define OIDCRequestObject                      \"OIDCRequestObject\"",
          "261: #define OIDCProviderMetadataRefreshInterval    \"OIDCProviderMetadataRefreshInterval\"",
          "262: #define OIDCProviderAuthRequestMethod          \"OIDCProviderAuthRequestMethod\"",
          "263: #define OIDCBlackListedClaims                  \"OIDCBlackListedClaims\"",
          "264: #define OIDCOAuthServerMetadataURL             \"OIDCOAuthServerMetadataURL\"",
          "265: #define OIDCOAuthAccessTokenBindingPolicy      \"OIDCOAuthAccessTokenBindingPolicy\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1053:  c->provider.check_session_iframe = NULL;",
          "1054:  c->provider.end_session_endpoint = NULL;",
          "1055:  c->provider.jwks_uri = NULL;",
          "1057:  c->provider.ssl_validate_server = OIDC_DEFAULT_SSL_VALIDATE_SERVER;",
          "1058:  c->provider.client_name = OIDC_DEFAULT_CLIENT_NAME;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1057:  c->provider.backchannel_logout_supported = OIDC_CONFIG_POS_INT_UNSET;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1259:    add->provider.end_session_endpoint != NULL ?",
          "1260:      add->provider.end_session_endpoint :",
          "1261:      base->provider.end_session_endpoint;",
          "1263:  c->provider.ssl_validate_server =",
          "1264:    add->provider.ssl_validate_server",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1264:  c->provider.backchannel_logout_supported =",
          "1265:    add->provider.backchannel_logout_supported",
          "1266:    != OIDC_CONFIG_POS_INT_UNSET ?",
          "1267:      add->provider.backchannel_logout_supported :",
          "1268:      base->provider.backchannel_logout_supported;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2354:     (void *)APR_OFFSETOF(oidc_cfg, provider.end_session_endpoint),",
          "2355:     RSRC_CONF,",
          "2356:     \"Define the OpenID OP End Session Endpoint URL.\"),",
          "2357:   AP_INIT_TAKE1(OIDCProviderJwksUri,",
          "2358:     oidc_set_https_slot,",
          "2359:     (void *)APR_OFFSETOF(oidc_cfg, provider.jwks_uri),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2364:   AP_INIT_FLAG(OIDCProviderBackChannelLogoutSupported,",
          "2365:     oidc_set_flag_slot,",
          "2366:     (void *)APR_OFFSETOF(oidc_cfg, provider.backchannel_logout_supported),",
          "2367:     RSRC_CONF,",
          "2368:     \"Define whether the OP supports OpenID Connect Back Channel Logout.\"),",
          "",
          "---------------"
        ],
        "src/metadata.c||src/metadata.c": [
          "File: src/metadata.c -> src/metadata.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "65: extern module AP_MODULE_DECLARE_DATA auth_openidc_module;",
          "71: #define OIDC_METADATA_ISSUER                                       \"issuer\"",
          "72: #define OIDC_METADATA_RESPONSE_TYPES_SUPPORTED                     \"response_types_supported\"",
          "",
          "[Removed Lines]",
          "67: #define OIDC_METADATA_SUFFIX_PROVIDER                       \"provider\"",
          "68: #define OIDC_METADATA_SUFFIX_CLIENT                         \"client\"",
          "69: #define OIDC_METADATA_SUFFIX_CONF                           \"conf\"",
          "",
          "[Added Lines]",
          "67: #define OIDC_METADATA_SUFFIX_PROVIDER                              \"provider\"",
          "68: #define OIDC_METADATA_SUFFIX_CLIENT                                \"client\"",
          "69: #define OIDC_METADATA_SUFFIX_CONF                                  \"conf\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80: #define OIDC_METADATA_INTROSPECTON_NDPOINT_AUTH_METHODS_SUPPORTED  \"introspection_endpoint_auth_methods_supported\"",
          "81: #define OIDC_METADATA_REGISTRATION_ENDPOINT                        \"registration_endpoint\"",
          "82: #define OIDC_METADATA_CHECK_SESSION_IFRAME                         \"check_session_iframe\"",
          "",
          "[Removed Lines]",
          "83: #define OIDC_METADATA_END_SESSION_ENDPOINT                         \"end_session_endpoint\"",
          "85: #define OIDC_METADATA_CLIENT_ID                             \"client_id\"",
          "86: #define OIDC_METADATA_CLIENT_SECRET                         \"client_secret\"",
          "87: #define OIDC_METADATA_CLIENT_SECRET_EXPIRES_AT              \"client_secret_expires_at\"",
          "89: #define OIDC_METADATA_KEYS                                  \"keys\"",
          "91: #define OIDC_METADATA_CLIENT_JWKS_URI                       \"client_jwks_uri\"",
          "92: #define OIDC_METADATA_ID_TOKEN_SIGNED_RESPONSE_ALG          \"id_token_signed_response_alg\"",
          "93: #define OIDC_METADATA_ID_TOKEN_ENCRYPTED_RESPONSE_ALG       \"id_token_encrypted_response_alg\"",
          "94: #define OIDC_METADATA_ID_TOKEN_ENCRYPTED_RESPONSE_ENC       \"id_token_encrypted_response_enc\"",
          "95: #define OIDC_METADATA_USERINFO_SIGNED_RESPONSE_ALG          \"userinfo_signed_response_alg\"",
          "96: #define OIDC_METADATA_USERINFO_ENCRYPTED_RESPONSE_ALG       \"userinfo_encrypted_response_alg\"",
          "97: #define OIDC_METADATA_USERINFO_ENCRYPTED_RESPONSE_ENC       \"userinfo_encrypted_response_enc\"",
          "99: #define OIDC_METADATA_CLIENT_NAME                           \"client_name\"",
          "100: #define OIDC_METADATA_REDIRECT_URIS                         \"redirect_uris\"",
          "101: #define OIDC_METADATA_RESPONSE_TYPES                        \"response_types\"",
          "102: #define OIDC_METADATA_TOKEN_ENDPOINT_AUTH_METHOD            \"token_endpoint_auth_method\"",
          "103: #define OIDC_METADATA_CONTACTS                              \"contacts\"",
          "104: #define OIDC_METADATA_INITIATE_LOGIN_URI                    \"initiate_login_uri\"",
          "105: #define OIDC_METADATA_FRONTCHANNEL_LOGOUT_URI               \"frontchannel_logout_uri\"",
          "106: #define OIDC_METADATA_BACKCHANNEL_LOGOUT_URI                \"backchannel_logout_uri\"",
          "107: #define OIDC_METADATA_POST_LOGOUT_REDIRECT_URIS             \"post_logout_redirect_uris\"",
          "109: #define OIDC_METADATA_SSL_VALIDATE_SERVER                   \"ssl_validate_server\"",
          "110: #define OIDC_METADATA_SCOPE                                 \"scope\"",
          "111: #define OIDC_METADATA_JWKS_REFRESH_INTERVAL                 \"jwks_refresh_interval\"",
          "112: #define OIDC_METADATA_IDTOKEN_IAT_SLACK                     \"idtoken_iat_slack\"",
          "113: #define OIDC_METADATA_SESSION_MAX_DURATION                  \"session_max_duration\"",
          "114: #define OIDC_METADATA_AUTH_REQUEST_PARAMS                   \"auth_request_params\"",
          "115: #define OIDC_METADATA_TOKEN_ENDPOINT_PARAMS                 \"token_endpoint_params\"",
          "116: #define OIDC_METADATA_RESPONSE_MODE                         \"response_mode\"",
          "117: #define OIDC_METADATA_PKCE_METHOD                           \"pkce_method\"",
          "118: #define OIDC_METADATA_CLIENT_CONTACT                        \"client_contact\"",
          "119: #define OIDC_METADATA_TOKEN_ENDPOINT_AUTH                   \"token_endpoint_auth\"",
          "120: #define OIDC_METADATA_REGISTRATION_TOKEN                    \"registration_token\"",
          "121: #define OIDC_METADATA_REGISTRATION_ENDPOINT_JSON            \"registration_endpoint_json\"",
          "122: #define OIDC_METADATA_RESPONSE_TYPE                         \"response_type\"",
          "123: #define OIDC_METADATA_USERINFO_REFRESH_INTERVAL             \"userinfo_refresh_interval\"",
          "124: #define OIDC_METADATA_TOKEN_ENDPOINT_TLS_CLIENT_CERT        \"token_endpoint_tls_client_cert\"",
          "125: #define OIDC_METADATA_TOKEN_ENDPOINT_TLS_CLIENT_KEY         \"token_endpoint_tls_client_key\"",
          "126: #define OIDC_METADATA_REQUEST_OBJECT                        \"request_object\"",
          "127: #define OIDC_METADATA_USERINFO_TOKEN_METHOD                 \"userinfo_token_method\"",
          "128: #define OIDC_METADATA_TOKEN_BINDING_POLICY                  \"token_binding_policy\"",
          "129: #define OIDC_METADATA_AUTH_REQUEST_METHOD                   \"auth_request_method\"",
          "130: #define OIDC_METADATA_ISSUER_SPECIFIC_REDIRECT_URI          \"issuer_specific_redirect_uri\"",
          "",
          "[Added Lines]",
          "83: #define OIDC_METADATA_BACKCHANNEL_LOGOUT_SUPPORTED                 \"backchannel_logout_supported\"",
          "85: #define OIDC_METADATA_END_SESSION_ENDPOINT                         \"end_session_endpoint\"",
          "86: #define OIDC_METADATA_CLIENT_ID                                    \"client_id\"",
          "87: #define OIDC_METADATA_CLIENT_SECRET                                \"client_secret\"",
          "88: #define OIDC_METADATA_CLIENT_SECRET_EXPIRES_AT                     \"client_secret_expires_at\"",
          "90: #define OIDC_METADATA_KEYS                                         \"keys\"",
          "92: #define OIDC_METADATA_CLIENT_JWKS_URI                              \"client_jwks_uri\"",
          "93: #define OIDC_METADATA_ID_TOKEN_SIGNED_RESPONSE_ALG                 \"id_token_signed_response_alg\"",
          "94: #define OIDC_METADATA_ID_TOKEN_ENCRYPTED_RESPONSE_ALG              \"id_token_encrypted_response_alg\"",
          "95: #define OIDC_METADATA_ID_TOKEN_ENCRYPTED_RESPONSE_ENC              \"id_token_encrypted_response_enc\"",
          "96: #define OIDC_METADATA_USERINFO_SIGNED_RESPONSE_ALG                 \"userinfo_signed_response_alg\"",
          "97: #define OIDC_METADATA_USERINFO_ENCRYPTED_RESPONSE_ALG              \"userinfo_encrypted_response_alg\"",
          "98: #define OIDC_METADATA_USERINFO_ENCRYPTED_RESPONSE_ENC              \"userinfo_encrypted_response_enc\"",
          "100: #define OIDC_METADATA_CLIENT_NAME                                  \"client_name\"",
          "101: #define OIDC_METADATA_REDIRECT_URIS                                \"redirect_uris\"",
          "102: #define OIDC_METADATA_RESPONSE_TYPES                               \"response_types\"",
          "103: #define OIDC_METADATA_TOKEN_ENDPOINT_AUTH_METHOD                   \"token_endpoint_auth_method\"",
          "104: #define OIDC_METADATA_CONTACTS                                     \"contacts\"",
          "105: #define OIDC_METADATA_INITIATE_LOGIN_URI                           \"initiate_login_uri\"",
          "106: #define OIDC_METADATA_FRONTCHANNEL_LOGOUT_URI                      \"frontchannel_logout_uri\"",
          "107: #define OIDC_METADATA_BACKCHANNEL_LOGOUT_URI                       \"backchannel_logout_uri\"",
          "108: #define OIDC_METADATA_POST_LOGOUT_REDIRECT_URIS                    \"post_logout_redirect_uris\"",
          "109: #define OIDC_METADATA_IDTOKEN_BINDING_CNF                          \"id_token_token_binding_cnf\"",
          "111: #define OIDC_METADATA_SSL_VALIDATE_SERVER                          \"ssl_validate_server\"",
          "112: #define OIDC_METADATA_SCOPE                                        \"scope\"",
          "113: #define OIDC_METADATA_JWKS_REFRESH_INTERVAL                        \"jwks_refresh_interval\"",
          "114: #define OIDC_METADATA_IDTOKEN_IAT_SLACK                            \"idtoken_iat_slack\"",
          "115: #define OIDC_METADATA_SESSION_MAX_DURATION                         \"session_max_duration\"",
          "116: #define OIDC_METADATA_AUTH_REQUEST_PARAMS                          \"auth_request_params\"",
          "117: #define OIDC_METADATA_TOKEN_ENDPOINT_PARAMS                        \"token_endpoint_params\"",
          "118: #define OIDC_METADATA_RESPONSE_MODE                                \"response_mode\"",
          "119: #define OIDC_METADATA_PKCE_METHOD                                  \"pkce_method\"",
          "120: #define OIDC_METADATA_CLIENT_CONTACT                               \"client_contact\"",
          "121: #define OIDC_METADATA_TOKEN_ENDPOINT_AUTH                          \"token_endpoint_auth\"",
          "122: #define OIDC_METADATA_REGISTRATION_TOKEN                           \"registration_token\"",
          "123: #define OIDC_METADATA_REGISTRATION_ENDPOINT_JSON                   \"registration_endpoint_json\"",
          "124: #define OIDC_METADATA_RESPONSE_TYPE                                \"response_type\"",
          "125: #define OIDC_METADATA_USERINFO_REFRESH_INTERVAL                    \"userinfo_refresh_interval\"",
          "126: #define OIDC_METADATA_TOKEN_ENDPOINT_TLS_CLIENT_CERT               \"token_endpoint_tls_client_cert\"",
          "127: #define OIDC_METADATA_TOKEN_ENDPOINT_TLS_CLIENT_KEY                \"token_endpoint_tls_client_key\"",
          "128: #define OIDC_METADATA_REQUEST_OBJECT                               \"request_object\"",
          "129: #define OIDC_METADATA_USERINFO_TOKEN_METHOD                        \"userinfo_token_method\"",
          "130: #define OIDC_METADATA_TOKEN_BINDING_POLICY                         \"token_binding_policy\"",
          "131: #define OIDC_METADATA_AUTH_REQUEST_METHOD                          \"auth_request_method\"",
          "132: #define OIDC_METADATA_ISSUER_SPECIFIC_REDIRECT_URI                 \"issuer_specific_redirect_uri\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "568:        OIDC_REDIRECT_URI_REQUEST_LOGOUT,",
          "569:        OIDC_BACKCHANNEL_STYLE_LOGOUT_PARAM_VALUE)));",
          "571:  if (cfg->default_slo_url != NULL) {",
          "572:   json_object_set_new(data, OIDC_METADATA_POST_LOGOUT_REDIRECT_URIS,",
          "573:     json_pack(\"[s]\", cfg->default_slo_url));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "573:  if (provider->token_binding_policy > OIDC_TOKEN_BINDING_POLICY_DISABLED) {",
          "574:   json_object_set_new(data, OIDC_METADATA_IDTOKEN_BINDING_CNF,",
          "575:     json_string(OIDC_CLAIM_CNF_TBH));",
          "576:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1020:     &provider->end_session_endpoint, NULL);",
          "1021:  }",
          "1023:  if (provider->token_endpoint_auth == NULL) {",
          "1024:   if (oidc_valid_string_in_array(r->pool, j_provider,",
          "1025:     OIDC_METADATA_TOKEN_ENDPOINT_AUTH_METHODS_SUPPORTED,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1031:  if (provider->backchannel_logout_supported == OIDC_CONFIG_POS_INT_UNSET) {",
          "1032:   oidc_metadata_parse_boolean(r, j_provider,",
          "1033:     OIDC_METADATA_BACKCHANNEL_LOGOUT_SUPPORTED,",
          "1034:     &provider->backchannel_logout_supported, 0);",
          "1035:  }",
          "",
          "---------------"
        ],
        "src/mod_auth_openidc.c||src/mod_auth_openidc.c": [
          "File: src/mod_auth_openidc.c -> src/mod_auth_openidc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1787:    c->cookie_domain ? c->cookie_domain : oidc_get_current_url_host(r));",
          "1789:  char *sid = NULL;",
          "1791:   oidc_jose_get_string(r->pool, id_token_jwt->payload.value.json,",
          "1792:     OIDC_CLAIM_SID, FALSE, &sid, NULL);",
          "1793:   if (sid == NULL)",
          "",
          "[Removed Lines]",
          "1790:  if (provider->end_session_endpoint != NULL) {",
          "",
          "[Added Lines]",
          "1790:  oidc_debug(r, \"provider->backchannel_logout_supported=%d\", provider->backchannel_logout_supported);",
          "1791:  if (provider->backchannel_logout_supported > 0) {",
          "",
          "---------------"
        ],
        "src/mod_auth_openidc.h||src/mod_auth_openidc.h": [
          "File: src/mod_auth_openidc.h -> src/mod_auth_openidc.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "262:  char *client_secret;",
          "263:  char *token_endpoint_tls_client_key;",
          "264:  char *token_endpoint_tls_client_cert;",
          "267:  int ssl_validate_server;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "265:  int backchannel_logout_supported;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7542dd86855766fdf0118718942454ebb67cfa7c",
      "candidate_info": {
        "commit_hash": "7542dd86855766fdf0118718942454ebb67cfa7c",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/7542dd86855766fdf0118718942454ebb67cfa7c",
        "files": [
          "ChangeLog",
          "configure.ac",
          "src/jose.c"
        ],
        "message": "allow usage with LibreSSL; closes #380; thanks @hihellobolke\n\nbump to 2.3.8rc3\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/jose.c||src/jose.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.3.8rc2],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.3.8rc3],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/jose.c||src/jose.c": [
          "File: src/jose.c -> src/jose.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "839:  return TRUE;",
          "840: }",
          "843: EVP_MD_CTX * EVP_MD_CTX_new() {",
          "844:  return malloc(sizeof(EVP_MD_CTX));",
          "845: }",
          "",
          "[Removed Lines]",
          "842: #if (OPENSSL_VERSION_NUMBER < 0x10100000)",
          "",
          "[Added Lines]",
          "842: #if (OPENSSL_VERSION_NUMBER < 0x10100000) || defined(LIBRESSL_VERSION_NUMBER)",
          "",
          "---------------"
        ]
      }
    }
  ]
}