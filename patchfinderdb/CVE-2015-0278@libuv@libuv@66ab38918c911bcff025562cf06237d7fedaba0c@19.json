{
  "cve_id": "CVE-2015-0278",
  "cve_desc": "libuv before 0.10.34 does not properly drop group privileges, which allows context-dependent attackers to gain privileges via unspecified vectors.",
  "repo": "libuv/libuv",
  "patch_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
  "patch_info": {
    "commit_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
    "repo": "libuv/libuv",
    "commit_url": "https://github.com/libuv/libuv/commit/66ab38918c911bcff025562cf06237d7fedaba0c",
    "files": [
      "src/unix/process.c"
    ],
    "message": "unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093",
    "before_after_code_files": [
      "src/unix/process.c||src/unix/process.c"
    ]
  },
  "patch_diff": {
    "src/unix/process.c||src/unix/process.c": [
      "File: src/unix/process.c -> src/unix/process.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "330:     _exit(127);",
      "331:   }",
      "333:   if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid)) {",
      "334:     uv__write_int(error_fd, -errno);",
      "335:     perror(\"setgid()\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "333:   if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {",
      "341:     SAVE_ERRNO(setgroups(0, NULL));",
      "342:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c2c92fa65d77722fb655c0acbea765fd0beaca5d",
      "candidate_info": {
        "commit_hash": "c2c92fa65d77722fb655c0acbea765fd0beaca5d",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/c2c92fa65d77722fb655c0acbea765fd0beaca5d",
        "files": [
          "Makefile.am"
        ],
        "message": "build: add test-tcp-close-accept.c to test deps\n\nAdd test/test-tcp-close-accept.c to the dependency list of the\n`make check` target of the autotools build.",
        "before_after_code_files": [
          "Makefile.am||Makefile.am"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.am||Makefile.am": [
          "File: Makefile.am -> Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "167:                          test/test-stdio-over-pipes.c \\",
          "168:                          test/test-tcp-bind-error.c \\",
          "169:                          test/test-tcp-bind6-error.c \\",
          "170:                          test/test-tcp-close-while-connecting.c \\",
          "171:                          test/test-tcp-close.c \\",
          "172:                          test/test-tcp-connect-error-after-write.c \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "170:                          test/test-tcp-close-accept.c \\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fb2a6d4a15ac41bacee1e183c7f3aa94f0566012",
      "candidate_info": {
        "commit_hash": "fb2a6d4a15ac41bacee1e183c7f3aa94f0566012",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/fb2a6d4a15ac41bacee1e183c7f3aa94f0566012",
        "files": [
          "src/unix/fs.c"
        ],
        "message": "openbsd: fix uv_fs_sendfile() unused variable warnings",
        "before_after_code_files": [
          "src/unix/fs.c||src/unix/fs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/unix/fs.c||src/unix/fs.c": [
          "File: src/unix/fs.c -> src/unix/fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "468:     return -1;",
          "469:   }",
          "470: #else",
          "471:   return uv__fs_sendfile_emul(req);",
          "472: #endif",
          "473: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "472:   (void) &in_fd;",
          "473:   (void) &out_fd;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4ce9c39dd86d80ef00476fd00bedb9d56172a86d",
      "candidate_info": {
        "commit_hash": "4ce9c39dd86d80ef00476fd00bedb9d56172a86d",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/4ce9c39dd86d80ef00476fd00bedb9d56172a86d",
        "files": [
          "ChangeLog",
          "configure.ac",
          "src/version.c"
        ],
        "message": "Now working on v0.11.18",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/version.c||src/version.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: # OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.",
          "15: AC_PREREQ(2.57)",
          "17: AC_CONFIG_MACRO_DIR([m4])",
          "18: m4_include([m4/libuv-extra-automake-flags.m4])",
          "19: AM_INIT_AUTOMAKE([-Wall -Werror foreign subdir-objects] UV_EXTRA_AUTOMAKE_FLAGS)",
          "",
          "[Removed Lines]",
          "16: AC_INIT([libuv], [0.11.17], [https://github.com/joyent/libuv/issues])",
          "",
          "[Added Lines]",
          "16: AC_INIT([libuv], [0.11.18], [https://github.com/joyent/libuv/issues])",
          "",
          "---------------"
        ],
        "src/version.c||src/version.c": [
          "File: src/version.c -> src/version.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #define UV_VERSION_MAJOR 0",
          "33: #define UV_VERSION_MINOR 11",
          "38: #define UV_VERSION  ((UV_VERSION_MAJOR << 16) | \\",
          "",
          "[Removed Lines]",
          "34: #define UV_VERSION_PATCH 17",
          "35: #define UV_VERSION_IS_RELEASE 1",
          "",
          "[Added Lines]",
          "34: #define UV_VERSION_PATCH 18",
          "35: #define UV_VERSION_IS_RELEASE 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9f51f26e96db2b6b7740c05b5c5227a0566263f2",
      "candidate_info": {
        "commit_hash": "9f51f26e96db2b6b7740c05b5c5227a0566263f2",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/9f51f26e96db2b6b7740c05b5c5227a0566263f2",
        "files": [
          "src/unix/udp.c"
        ],
        "message": "unix: fix handling error on UDP socket creation",
        "before_after_code_files": [
          "src/unix/udp.c||src/unix/udp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/unix/udp.c||src/unix/udp.c": [
          "File: src/unix/udp.c -> src/unix/udp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "321:   fd = handle->io_watcher.fd;",
          "322:   if (fd == -1) {",
          "326:     handle->io_watcher.fd = fd;",
          "327:   }",
          "",
          "[Removed Lines]",
          "323:     fd = uv__socket(addr->sa_family, SOCK_DGRAM, 0);",
          "324:     if (fd == -1)",
          "325:       return -errno;",
          "",
          "[Added Lines]",
          "323:     err = uv__socket(addr->sa_family, SOCK_DGRAM, 0);",
          "324:     if (err < 0)",
          "325:       return err;",
          "326:     fd = err;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "779b8d81e93bd05a50d7e72c362aabd7fba37492",
      "candidate_info": {
        "commit_hash": "779b8d81e93bd05a50d7e72c362aabd7fba37492",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/779b8d81e93bd05a50d7e72c362aabd7fba37492",
        "files": [
          "include/uv-unix.h",
          "include/uv.h",
          "src/unix/stream.c",
          "src/win/internal.h",
          "src/win/pipe.c",
          "src/win/stream-inl.h",
          "src/win/stream.c",
          "src/win/tcp.c",
          "src/win/tty.c"
        ],
        "message": "include: make uv_write{2} const correct",
        "before_after_code_files": [
          "include/uv-unix.h||include/uv-unix.h",
          "include/uv.h||include/uv.h",
          "src/unix/stream.c||src/unix/stream.c",
          "src/win/internal.h||src/win/internal.h",
          "src/win/pipe.c||src/win/pipe.c",
          "src/win/stream-inl.h||src/win/stream-inl.h",
          "src/win/stream.c||src/win/stream.c",
          "src/win/tcp.c||src/win/tcp.c",
          "src/win/tty.c||src/win/tty.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/uv-unix.h||include/uv-unix.h": [
          "File: include/uv-unix.h -> include/uv-unix.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "200: #define UV_WRITE_PRIVATE_FIELDS                                               \\",
          "201:   void* queue[2];                                                             \\",
          "203:   uv_buf_t* bufs;                                                             \\",
          "205:   int error;                                                                  \\",
          "206:   uv_buf_t bufsml[4];                                                         \\",
          "",
          "[Removed Lines]",
          "202:   int write_index;                                                            \\",
          "204:   int bufcnt;                                                                 \\",
          "",
          "[Added Lines]",
          "202:   unsigned int write_index;                                                   \\",
          "204:   unsigned int nbufs;                                                         \\",
          "",
          "---------------"
        ],
        "include/uv.h||include/uv.h": [
          "File: include/uv.h -> include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "657: UV_EXTERN int uv_write(uv_write_t* req, uv_stream_t* handle,",
          "658:     uv_buf_t bufs[], int bufcnt, uv_write_cb cb);",
          "",
          "[Added Lines]",
          "657: UV_EXTERN int uv_write(uv_write_t* req,",
          "658:                        uv_stream_t* handle,",
          "659:                        const uv_buf_t bufs[],",
          "660:                        unsigned int nbufs,",
          "661:                        uv_write_cb cb);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "671: struct uv_write_s {",
          "",
          "[Removed Lines]",
          "667: UV_EXTERN int uv_write2(uv_write_t* req, uv_stream_t* handle, uv_buf_t bufs[],",
          "668:     int bufcnt, uv_stream_t* send_handle, uv_write_cb cb);",
          "",
          "[Added Lines]",
          "670: UV_EXTERN int uv_write2(uv_write_t* req,",
          "671:                         uv_stream_t* handle,",
          "672:                         const uv_buf_t bufs[],",
          "673:                         unsigned int nbufs,",
          "674:                         uv_stream_t* send_handle,",
          "675:                         uv_write_cb cb);",
          "",
          "---------------"
        ],
        "src/unix/stream.c||src/unix/stream.c": [
          "File: src/unix/stream.c -> src/unix/stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "93: }",
          "105: }",
          "",
          "[Removed Lines]",
          "96: static size_t uv__buf_count(uv_buf_t bufs[], int bufcnt) {",
          "97:   size_t total = 0;",
          "98:   int i;",
          "100:   for (i = 0; i < bufcnt; i++) {",
          "101:     total += bufs[i].len;",
          "102:   }",
          "104:   return total;",
          "",
          "[Added Lines]",
          "96: static size_t uv_count_bufs(const uv_buf_t bufs[], unsigned int nbufs) {",
          "97:   unsigned int i;",
          "98:   size_t bytes;",
          "100:   bytes = 0;",
          "101:   for (i = 0; i < nbufs; i++)",
          "102:     bytes += bufs[i].len;",
          "104:   return bytes;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "656:   size_t size;",
          "658:   assert(req->bufs != NULL);",
          "661:   assert(req->handle->write_queue_size >= size);",
          "663:   return size;",
          "",
          "[Removed Lines]",
          "659:   size = uv__buf_count(req->bufs + req->write_index,",
          "660:                        req->bufcnt - req->write_index);",
          "",
          "[Added Lines]",
          "659:   size = uv_count_bufs(req->bufs + req->write_index,",
          "660:                        req->nbufs - req->write_index);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "743:   assert(sizeof(uv_buf_t) == sizeof(struct iovec));",
          "744:   iov = (struct iovec*) &(req->bufs[req->write_index]);",
          "747:   iovmax = uv__getiovmax();",
          "",
          "[Removed Lines]",
          "745:   iovcnt = req->bufcnt - req->write_index;",
          "",
          "[Added Lines]",
          "745:   iovcnt = req->nbufs - req->write_index;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "819:       uv_buf_t* buf = &(req->bufs[req->write_index]);",
          "820:       size_t len = buf->len;",
          "824:       if ((size_t)n < len) {",
          "825:         buf->base += n;",
          "",
          "[Removed Lines]",
          "822:       assert(req->write_index < req->bufcnt);",
          "",
          "[Added Lines]",
          "822:       assert(req->write_index < req->nbufs);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "849:         assert(stream->write_queue_size >= len);",
          "850:         stream->write_queue_size -= len;",
          "854:           assert(n == 0);",
          "855:           uv__write_req_finish(req);",
          "",
          "[Removed Lines]",
          "852:         if (req->write_index == req->bufcnt) {",
          "",
          "[Added Lines]",
          "852:         if (req->write_index == req->nbufs) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1208: int uv_write2(uv_write_t* req,",
          "1209:               uv_stream_t* stream,",
          "1212:               uv_stream_t* send_handle,",
          "1213:               uv_write_cb cb) {",
          "1214:   int empty_queue;",
          "1217:   assert((stream->type == UV_TCP ||",
          "1218:           stream->type == UV_NAMED_PIPE ||",
          "1219:           stream->type == UV_TTY) &&",
          "",
          "[Removed Lines]",
          "1210:               uv_buf_t bufs[],",
          "1211:               int bufcnt,",
          "1216:   assert(bufcnt > 0);",
          "",
          "[Added Lines]",
          "1210:               const uv_buf_t bufs[],",
          "1211:               unsigned int nbufs,",
          "1216:   assert(nbufs > 0);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1252:   req->send_handle = send_handle;",
          "1253:   QUEUE_INIT(&req->queue);",
          "1262:   req->write_index = 0;",
          "1266:   QUEUE_INSERT_TAIL(&stream->write_queue, &req->queue);",
          "",
          "[Removed Lines]",
          "1255:   if (bufcnt <= (int) ARRAY_SIZE(req->bufsml))",
          "1256:     req->bufs = req->bufsml;",
          "1257:   else",
          "1258:     req->bufs = malloc(sizeof(uv_buf_t) * bufcnt);",
          "1260:   memcpy(req->bufs, bufs, bufcnt * sizeof(uv_buf_t));",
          "1261:   req->bufcnt = bufcnt;",
          "1263:   stream->write_queue_size += uv__buf_count(bufs, bufcnt);",
          "",
          "[Added Lines]",
          "1255:   req->bufs = req->bufsml;",
          "1256:   if (nbufs > ARRAY_SIZE(req->bufsml))",
          "1257:     req->bufs = malloc(nbufs * sizeof(bufs[0]));",
          "1259:   if (req->bufs == NULL)",
          "1260:     return -ENOMEM;",
          "1262:   memcpy(req->bufs, bufs, nbufs * sizeof(bufs[0]));",
          "1263:   req->nbufs = nbufs;",
          "1265:   stream->write_queue_size += uv_count_bufs(bufs, nbufs);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1298: }",
          "",
          "[Removed Lines]",
          "1295: int uv_write(uv_write_t* req, uv_stream_t* stream, uv_buf_t bufs[], int bufcnt,",
          "1296:     uv_write_cb cb) {",
          "1297:   return uv_write2(req, stream, bufs, bufcnt, NULL, cb);",
          "",
          "[Added Lines]",
          "1297: int uv_write(uv_write_t* req,",
          "1298:              uv_stream_t* handle,",
          "1299:              const uv_buf_t bufs[],",
          "1300:              unsigned int nbufs,",
          "1301:              uv_write_cb cb) {",
          "1302:   return uv_write2(req, handle, bufs, nbufs, NULL, cb);",
          "",
          "---------------"
        ],
        "src/win/internal.h||src/win/internal.h": [
          "File: src/win/internal.h -> src/win/internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "106: int uv_tcp_read_start(uv_tcp_t* handle, uv_alloc_cb alloc_cb,",
          "107:     uv_read_cb read_cb);",
          "108: int uv_tcp_write(uv_loop_t* loop, uv_write_t* req, uv_tcp_t* handle,",
          "111: void uv_process_tcp_read_req(uv_loop_t* loop, uv_tcp_t* handle, uv_req_t* req);",
          "112: void uv_process_tcp_write_req(uv_loop_t* loop, uv_tcp_t* handle,",
          "",
          "[Removed Lines]",
          "109:     uv_buf_t bufs[], int bufcnt, uv_write_cb cb);",
          "",
          "[Added Lines]",
          "109:     const uv_buf_t bufs[], unsigned int nbufs, uv_write_cb cb);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "150: int uv_pipe_read2_start(uv_pipe_t* handle, uv_alloc_cb alloc_cb,",
          "151:     uv_read2_cb read_cb);",
          "152: int uv_pipe_write(uv_loop_t* loop, uv_write_t* req, uv_pipe_t* handle,",
          "154: int uv_pipe_write2(uv_loop_t* loop, uv_write_t* req, uv_pipe_t* handle,",
          "157: void uv_process_pipe_read_req(uv_loop_t* loop, uv_pipe_t* handle,",
          "158:     uv_req_t* req);",
          "",
          "[Removed Lines]",
          "153:     uv_buf_t bufs[], int bufcnt, uv_write_cb cb);",
          "155:     uv_buf_t bufs[], int bufcnt, uv_stream_t* send_handle, uv_write_cb cb);",
          "",
          "[Added Lines]",
          "153:     const uv_buf_t bufs[], unsigned int nbufs, uv_write_cb cb);",
          "155:     const uv_buf_t bufs[], unsigned int nbufs, uv_stream_t* send_handle,",
          "156:     uv_write_cb cb);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "179:     uv_read_cb read_cb);",
          "180: int uv_tty_read_stop(uv_tty_t* handle);",
          "181: int uv_tty_write(uv_loop_t* loop, uv_write_t* req, uv_tty_t* handle,",
          "183: void uv_tty_close(uv_tty_t* handle);",
          "185: void uv_process_tty_read_req(uv_loop_t* loop, uv_tty_t* handle,",
          "",
          "[Removed Lines]",
          "182:     uv_buf_t bufs[], int bufcnt, uv_write_cb cb);",
          "",
          "[Added Lines]",
          "183:     const uv_buf_t bufs[], unsigned int nbufs, uv_write_cb cb);",
          "",
          "---------------"
        ],
        "src/win/pipe.c||src/win/pipe.c": [
          "File: src/win/pipe.c -> src/win/pipe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1030: }",
          "1036:   int err;",
          "1037:   int result;",
          "1038:   uv_tcp_t* tcp_send_handle;",
          "1039:   uv_write_t* ipc_header_req;",
          "1040:   uv_ipc_frame_uv_stream ipc_frame;",
          "1043:     return ERROR_NOT_SUPPORTED;",
          "1044:   }",
          "",
          "[Removed Lines]",
          "1033: static int uv_pipe_write_impl(uv_loop_t* loop, uv_write_t* req,",
          "1034:     uv_pipe_t* handle, uv_buf_t bufs[], int bufcnt,",
          "1035:     uv_stream_t* send_handle, uv_write_cb cb) {",
          "1042:   if (bufcnt != 1 && (bufcnt != 0 || !send_handle)) {",
          "",
          "[Added Lines]",
          "1033: static int uv_pipe_write_impl(uv_loop_t* loop,",
          "1034:                               uv_write_t* req,",
          "1035:                               uv_pipe_t* handle,",
          "1036:                               const uv_buf_t bufs[],",
          "1037:                               unsigned int nbufs,",
          "1038:                               uv_stream_t* send_handle,",
          "1039:                               uv_write_cb cb) {",
          "1046:   if (nbufs != 1 && (nbufs != 0 || !send_handle)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1081:       }",
          "1082:     }",
          "1085:       ipc_frame.header.flags |= UV_IPC_RAW_DATA;",
          "1086:       ipc_frame.header.raw_data_length = bufs[0].len;",
          "1087:     }",
          "",
          "[Removed Lines]",
          "1084:     if (bufcnt == 1) {",
          "",
          "[Added Lines]",
          "1088:     if (nbufs == 1) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1189:     }",
          "1193:     handle->write_queue_size += req->queued_bytes;",
          "1194:   } else if (handle->flags & UV_HANDLE_BLOCKING_WRITES) {",
          "",
          "[Removed Lines]",
          "1192:     req->queued_bytes = uv_count_bufs(bufs, bufcnt);",
          "",
          "[Added Lines]",
          "1196:     req->queued_bytes = uv_count_bufs(bufs, nbufs);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1245:       req->queued_bytes = 0;",
          "1246:     } else {",
          "1249:       handle->write_queue_size += req->queued_bytes;",
          "1250:     }",
          "",
          "[Removed Lines]",
          "1248:       req->queued_bytes = uv_count_bufs(bufs, bufcnt);",
          "",
          "[Added Lines]",
          "1252:       req->queued_bytes = uv_count_bufs(bufs, nbufs);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1270: }",
          "1276: }",
          "1281:   if (!handle->ipc) {",
          "1282:     return WSAEINVAL;",
          "1283:   }",
          "1286: }",
          "",
          "[Removed Lines]",
          "1273: int uv_pipe_write(uv_loop_t* loop, uv_write_t* req, uv_pipe_t* handle,",
          "1274:     uv_buf_t bufs[], int bufcnt, uv_write_cb cb) {",
          "1275:   return uv_pipe_write_impl(loop, req, handle, bufs, bufcnt, NULL, cb);",
          "1279: int uv_pipe_write2(uv_loop_t* loop, uv_write_t* req, uv_pipe_t* handle,",
          "1280:     uv_buf_t bufs[], int bufcnt, uv_stream_t* send_handle, uv_write_cb cb) {",
          "1285:   return uv_pipe_write_impl(loop, req, handle, bufs, bufcnt, send_handle, cb);",
          "",
          "[Added Lines]",
          "1277: int uv_pipe_write(uv_loop_t* loop,",
          "1278:                   uv_write_t* req,",
          "1279:                   uv_pipe_t* handle,",
          "1280:                   const uv_buf_t bufs[],",
          "1281:                   unsigned int nbufs,",
          "1282:                   uv_write_cb cb) {",
          "1283:   return uv_pipe_write_impl(loop, req, handle, bufs, nbufs, NULL, cb);",
          "1287: int uv_pipe_write2(uv_loop_t* loop,",
          "1288:                    uv_write_t* req,",
          "1289:                    uv_pipe_t* handle,",
          "1290:                    const uv_buf_t bufs[],",
          "1291:                    unsigned int nbufs,",
          "1292:                    uv_stream_t* send_handle,",
          "1293:                    uv_write_cb cb) {",
          "1298:   return uv_pipe_write_impl(loop, req, handle, bufs, nbufs, send_handle, cb);",
          "",
          "---------------"
        ],
        "src/win/stream-inl.h||src/win/stream-inl.h": [
          "File: src/win/stream-inl.h -> src/win/stream-inl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: }",
          "64:   return bytes;",
          "65: }",
          "",
          "[Removed Lines]",
          "56: INLINE static size_t uv_count_bufs(uv_buf_t bufs[], int count) {",
          "57:   size_t bytes = 0;",
          "58:   int i;",
          "60:   for (i = 0; i < count; i++) {",
          "61:     bytes += (size_t)bufs[i].len;",
          "62:   }",
          "",
          "[Added Lines]",
          "56: INLINE static size_t uv_count_bufs(const uv_buf_t bufs[], unsigned int nbufs) {",
          "57:   unsigned int i;",
          "58:   size_t bytes;",
          "60:   bytes = 0;",
          "61:   for (i = 0; i < nbufs; i++)",
          "62:     bytes += (size_t) bufs[i].len;",
          "",
          "---------------"
        ],
        "src/win/stream.c||src/win/stream.c": [
          "File: src/win/stream.c -> src/win/stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "139: }",
          "144:   uv_loop_t* loop = handle->loop;",
          "145:   int err;",
          "",
          "[Removed Lines]",
          "142: int uv_write(uv_write_t* req, uv_stream_t* handle, uv_buf_t bufs[], int bufcnt,",
          "143:     uv_write_cb cb) {",
          "",
          "[Added Lines]",
          "142: int uv_write(uv_write_t* req,",
          "143:              uv_stream_t* handle,",
          "144:              const uv_buf_t bufs[],",
          "145:              unsigned int nbufs,",
          "146:              uv_write_cb cb) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "151:   err = ERROR_INVALID_PARAMETER;",
          "152:   switch (handle->type) {",
          "153:     case UV_TCP:",
          "155:       break;",
          "156:     case UV_NAMED_PIPE:",
          "158:       break;",
          "159:     case UV_TTY:",
          "161:       break;",
          "162:     default:",
          "163:       assert(0);",
          "",
          "[Removed Lines]",
          "154:       err = uv_tcp_write(loop, req, (uv_tcp_t*) handle, bufs, bufcnt, cb);",
          "157:       err = uv_pipe_write(loop, req, (uv_pipe_t*) handle, bufs, bufcnt, cb);",
          "160:       err = uv_tty_write(loop, req, (uv_tty_t*) handle, bufs, bufcnt, cb);",
          "",
          "[Added Lines]",
          "157:       err = uv_tcp_write(loop, req, (uv_tcp_t*) handle, bufs, nbufs, cb);",
          "160:       err = uv_pipe_write(loop, req, (uv_pipe_t*) handle, bufs, nbufs, cb);",
          "163:       err = uv_tty_write(loop, req, (uv_tty_t*) handle, bufs, nbufs, cb);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "167: }",
          "172:   uv_loop_t* loop = handle->loop;",
          "173:   int err;",
          "",
          "[Removed Lines]",
          "170: int uv_write2(uv_write_t* req, uv_stream_t* handle, uv_buf_t bufs[], int bufcnt,",
          "171:     uv_stream_t* send_handle, uv_write_cb cb) {",
          "",
          "[Added Lines]",
          "173: int uv_write2(uv_write_t* req,",
          "174:               uv_stream_t* handle,",
          "175:               const uv_buf_t bufs[],",
          "176:               unsigned int nbufs,",
          "177:               uv_stream_t* send_handle,",
          "178:               uv_write_cb cb) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "179:   err = ERROR_INVALID_PARAMETER;",
          "180:   switch (handle->type) {",
          "181:     case UV_NAMED_PIPE:",
          "183:       break;",
          "184:     default:",
          "185:       assert(0);",
          "",
          "[Removed Lines]",
          "182:       err = uv_pipe_write2(loop, req, (uv_pipe_t*) handle, bufs, bufcnt, send_handle, cb);",
          "",
          "[Added Lines]",
          "189:       err = uv_pipe_write2(loop,",
          "190:                            req,",
          "191:                            (uv_pipe_t*) handle,",
          "192:                            bufs,",
          "193:                            nbufs,",
          "194:                            send_handle,",
          "195:                            cb);",
          "",
          "---------------"
        ],
        "src/win/tcp.c||src/win/tcp.c": [
          "File: src/win/tcp.c -> src/win/tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "769: }",
          "774:   int result;",
          "775:   DWORD bytes;",
          "",
          "[Removed Lines]",
          "772: int uv_tcp_write(uv_loop_t* loop, uv_write_t* req, uv_tcp_t* handle,",
          "773:     uv_buf_t bufs[], int bufcnt, uv_write_cb cb) {",
          "",
          "[Added Lines]",
          "772: int uv_tcp_write(uv_loop_t* loop,",
          "773:                  uv_write_t* req,",
          "774:                  uv_tcp_t* handle,",
          "775:                  const uv_buf_t bufs[],",
          "776:                  unsigned int nbufs,",
          "777:                  uv_write_cb cb) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "792:   }",
          "794:   result = WSASend(handle->socket,",
          "797:                    &bytes,",
          "798:                    0,",
          "799:                    &req->overlapped,",
          "",
          "[Removed Lines]",
          "795:                    (WSABUF*)bufs,",
          "796:                    bufcnt,",
          "",
          "[Added Lines]",
          "799:                    (WSABUF*) bufs,",
          "800:                    nbufs,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "808:     uv_insert_pending_req(loop, (uv_req_t*) req);",
          "809:   } else if (UV_SUCCEEDED_WITH_IOCP(result == 0)) {",
          "812:     handle->reqs_pending++;",
          "813:     handle->write_reqs_pending++;",
          "814:     REGISTER_HANDLE_REQ(loop, handle, req);",
          "",
          "[Removed Lines]",
          "811:     req->queued_bytes = uv_count_bufs(bufs, bufcnt);",
          "",
          "[Added Lines]",
          "815:     req->queued_bytes = uv_count_bufs(bufs, nbufs);",
          "",
          "---------------"
        ],
        "src/win/tty.c||src/win/tty.c": [
          "File: src/win/tty.c -> src/win/tty.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1318: }",
          "1325:   WCHAR utf16_buf[8192];",
          "1326:   DWORD utf16_buf_used = 0;",
          "1329: #define FLUSH_TEXT()                                                \\",
          "1330:   do {                                                              \\",
          "",
          "[Removed Lines]",
          "1321: static int uv_tty_write_bufs(uv_tty_t* handle, uv_buf_t bufs[], int bufcnt,",
          "1322:     DWORD* error) {",
          "1327:   int i;",
          "",
          "[Added Lines]",
          "1321: static int uv_tty_write_bufs(uv_tty_t* handle,",
          "1322:                              const uv_buf_t bufs[],",
          "1323:                              unsigned int nbufs,",
          "1324:                              DWORD* error) {",
          "1329:   unsigned int i;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1348:   EnterCriticalSection(&uv_tty_output_lock);",
          "1351:     uv_buf_t buf = bufs[i];",
          "1352:     unsigned int j;",
          "",
          "[Removed Lines]",
          "1350:   for (i = 0; i < bufcnt; i++) {",
          "",
          "[Added Lines]",
          "1352:   for (i = 0; i < nbufs; i++) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1745: }",
          "1750:   DWORD error;",
          "1752:   uv_req_init(loop, (uv_req_t*) req);",
          "",
          "[Removed Lines]",
          "1748: int uv_tty_write(uv_loop_t* loop, uv_write_t* req, uv_tty_t* handle,",
          "1749:     uv_buf_t bufs[], int bufcnt, uv_write_cb cb) {",
          "",
          "[Added Lines]",
          "1750: int uv_tty_write(uv_loop_t* loop,",
          "1751:                  uv_write_t* req,",
          "1752:                  uv_tty_t* handle,",
          "1753:                  const uv_buf_t bufs[],",
          "1754:                  unsigned int nbufs,",
          "1755:                  uv_write_cb cb) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1761:   req->queued_bytes = 0;",
          "1764:     SET_REQ_SUCCESS(req);",
          "1765:   } else {",
          "1766:     SET_REQ_ERROR(req, error);",
          "",
          "[Removed Lines]",
          "1763:   if (!uv_tty_write_bufs(handle, bufs, bufcnt, &error)) {",
          "",
          "[Added Lines]",
          "1769:   if (!uv_tty_write_bufs(handle, bufs, nbufs, &error)) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}