{
  "cve_id": "CVE-2016-2528",
  "cve_desc": "The dissect_nhdr_extopt function in epan/dissectors/packet-lbmc.c in the LBMC dissector in Wireshark 2.0.x before 2.0.2 does not validate length values, which allows remote attackers to cause a denial of service (stack-based buffer overflow and application crash) via a crafted packet.",
  "repo": "wireshark/wireshark",
  "patch_hash": "1c090e929269a78bf7a4cb3dc0d34565f4351312",
  "patch_info": {
    "commit_hash": "1c090e929269a78bf7a4cb3dc0d34565f4351312",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/1c090e929269a78bf7a4cb3dc0d34565f4351312",
    "files": [
      "epan/dissectors/packet-lbmc.c"
    ],
    "message": "[LBMC] Bugfix stack-based buffer overflow in dissect_nhdr_extopt.\n\nBug: 11984\nChange-Id: I16ef6e830f0377992233a1bd255c1e3877e56a55\nReviewed-on: https://code.wireshark.org/review/13375\nReviewed-by: Michael Mann <mmann78@netscape.net>\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-lbmc.c||epan/dissectors/packet-lbmc.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-lbmc.c||epan/dissectors/packet-lbmc.c": [
      "File: epan/dissectors/packet-lbmc.c -> epan/dissectors/packet-lbmc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "6019: static expert_field ei_lbmc_analysis_invalid_offset = EI_INIT;",
      "6020: static expert_field ei_lbmc_analysis_missing_reassembly_frame = EI_INIT;",
      "6021: static expert_field ei_lbmc_analysis_invalid_fragment = EI_INIT;",
      "6024: #define LBMC_EXTOPT_REASSEMBLED_DATA_MAX_LEN 65536",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6022: static expert_field ei_lbmc_extopt_fragment_offset = EI_INIT;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "9930:         NULL",
      "9931:     };",
      "9932:     proto_item * ritem = NULL;",
      "9934:     guint8 flags_val = 0;",
      "9935:     int len_dissected = 0;",
      "9936:     int data_len = 0;",
      "",
      "[Removed Lines]",
      "9933:     proto_tree * rtree = NULL;",
      "",
      "[Added Lines]",
      "9934:     proto_tree * rtree = NULL, *fragment_item;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "9949:     proto_tree_add_bitmask(subtree, tvb, offset + O_LBMC_EXTOPT_HDR_T_FLAGS, hf_lbmc_extopt_flags, ett_lbmc_extopt_flags, flags, ENC_BIG_ENDIAN);",
      "9950:     proto_tree_add_item(subtree, hf_lbmc_extopt_id, tvb, offset + O_LBMC_EXTOPT_HDR_T_ID, L_LBMC_EXTOPT_HDR_T_ID, ENC_BIG_ENDIAN);",
      "9951:     proto_tree_add_item(subtree, hf_lbmc_extopt_subtype, tvb, offset + O_LBMC_EXTOPT_HDR_T_SUBTYPE, L_LBMC_EXTOPT_HDR_T_SUBTYPE, ENC_BIG_ENDIAN);",
      "9953:     len_dissected = L_LBMC_EXTOPT_HDR_T;",
      "9954:     data_len = (int)hdrlen - len_dissected;",
      "9955:     data_offset = offset + len_dissected;",
      "",
      "[Removed Lines]",
      "9952:     proto_tree_add_item(subtree, hf_lbmc_extopt_fragment_offset, tvb, offset + O_LBMC_EXTOPT_HDR_T_FRAGMENT_OFFSET, L_LBMC_EXTOPT_HDR_T_FRAGMENT_OFFSET, ENC_BIG_ENDIAN);",
      "",
      "[Added Lines]",
      "9953:     fragment_item = proto_tree_add_item(subtree, hf_lbmc_extopt_fragment_offset, tvb, offset + O_LBMC_EXTOPT_HDR_T_FRAGMENT_OFFSET, L_LBMC_EXTOPT_HDR_T_FRAGMENT_OFFSET, ENC_BIG_ENDIAN);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "9963:             gchar * buf;",
      "9964:             proto_item * pi = NULL;",
      "9971:             proto_tree_add_item(subtree, hf_lbmc_extopt_data, tvb, data_offset, data_len, ENC_NA);",
      "9972:             ritem = proto_tree_add_item(tree, hf_lbmc_extopt_reassembled_data, reassembly_tvb, 0, reassembly->len, ENC_NA);",
      "9973:             rtree = proto_item_add_subtree(ritem, ett_lbmc_extopt_reassembled_data);",
      "",
      "[Removed Lines]",
      "9966:             tvb_memcpy(tvb, reassembly->data + fragment_offset, data_offset, data_len);",
      "9967:             reassembly->len += data_len;",
      "9968:             buf = (gchar *) wmem_memdup(wmem_file_scope(), reassembly->data, reassembly->len);",
      "9969:             reassembly_tvb = tvb_new_real_data(buf, reassembly->len, reassembly->len);",
      "9970:             add_new_data_source(pinfo, reassembly_tvb, \"Reassembled EXTOPT fragment data\");",
      "",
      "[Added Lines]",
      "9967:             if ((reassembly->len + fragment_offset + data_len) < LBMC_EXTOPT_REASSEMBLED_DATA_MAX_LEN)",
      "9968:             {",
      "9969:                 tvb_memcpy(tvb, reassembly->data + fragment_offset, data_offset, data_len);",
      "9970:                 reassembly->len += data_len;",
      "9971:                 buf = (gchar *) wmem_memdup(wmem_file_scope(), reassembly->data, reassembly->len);",
      "9972:                 reassembly_tvb = tvb_new_real_data(buf, reassembly->len, reassembly->len);",
      "9973:                 add_new_data_source(pinfo, reassembly_tvb, \"Reassembled EXTOPT fragment data\");",
      "9974:             }",
      "9975:             else",
      "9976:             {",
      "9977:                 expert_add_info(pinfo, fragment_item, &ei_lbmc_extopt_fragment_offset);",
      "9978:                 return (len_dissected);",
      "9979:             }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "10011:         if (reassembly->reassembly_in_progress)",
      "10012:         {",
      "10016:         }",
      "10017:         else",
      "10018:         {",
      "",
      "[Removed Lines]",
      "10013:             tvb_memcpy(tvb, reassembly->data + fragment_offset, data_offset, data_len);",
      "10014:             reassembly->len += data_len;",
      "10015:             proto_tree_add_item(subtree, hf_lbmc_extopt_data, tvb, offset + len_dissected, data_len, ENC_NA);",
      "",
      "[Added Lines]",
      "10022:             if ((reassembly->len + fragment_offset + data_len) < LBMC_EXTOPT_REASSEMBLED_DATA_MAX_LEN)",
      "10023:             {",
      "10024:                 tvb_memcpy(tvb, reassembly->data + fragment_offset, data_offset, data_len);",
      "10025:                 reassembly->len += data_len;",
      "10026:                 proto_tree_add_item(subtree, hf_lbmc_extopt_data, tvb, offset + len_dissected, data_len, ENC_NA);",
      "10027:             }",
      "10028:             else",
      "10029:             {",
      "10030:                 expert_add_info(pinfo, fragment_item, &ei_lbmc_extopt_fragment_offset);",
      "10031:                 return (len_dissected);",
      "10032:             }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "10025:             }",
      "10026:             else",
      "10027:             {",
      "10030:             }",
      "10031:             proto_tree_add_item(subtree, hf_lbmc_extopt_data, tvb, data_offset, data_len, ENC_NA);",
      "10032:         }",
      "",
      "[Removed Lines]",
      "10028:                 tvb_memcpy(tvb, reassembly->data + fragment_offset, data_offset, data_len);",
      "10029:                 reassembly->len += data_len;",
      "",
      "[Added Lines]",
      "10045:                 if ((reassembly->len + fragment_offset + data_len) < LBMC_EXTOPT_REASSEMBLED_DATA_MAX_LEN)",
      "10046:                 {",
      "10047:                     tvb_memcpy(tvb, reassembly->data + fragment_offset, data_offset, data_len);",
      "10048:                     reassembly->len += data_len;",
      "10049:                 }",
      "10050:                 else",
      "10051:                 {",
      "10052:                     expert_add_info(pinfo, fragment_item, &ei_lbmc_extopt_fragment_offset);",
      "10053:                     return (len_dissected);",
      "10054:                 }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "14156:         { &ei_lbmc_analysis_invalid_offset, { \"lbmc.analysis.invalid_offset\", PI_MALFORMED, PI_ERROR, \"Message property offset exceeds data length\", EXPFILL } },",
      "14157:         { &ei_lbmc_analysis_missing_reassembly_frame, { \"lbmc.analysis.missing_reassembly_frame\", PI_UNDECODED, PI_WARN, \"Message not reassembled - reassembly data missing from capture\", EXPFILL } },",
      "14158:         { &ei_lbmc_analysis_invalid_fragment, { \"lbmc.analysis.invalid_fragment\", PI_MALFORMED, PI_ERROR, \"Invalid fragment\", EXPFILL } },",
      "14159:     };",
      "14160:     module_t * lbmc_module = NULL;",
      "14161:     expert_module_t * expert_lbmc;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14184:         { &ei_lbmc_extopt_fragment_offset, { \"lbmc.extopt.fragment_offset.invalid\", PI_PROTOCOL, PI_ERROR, \"Invalid fragment offset\", EXPFILL } },",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "32fc1bc81b0cd16087722e4c295d2f0222eca0fb",
      "candidate_info": {
        "commit_hash": "32fc1bc81b0cd16087722e4c295d2f0222eca0fb",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/32fc1bc81b0cd16087722e4c295d2f0222eca0fb",
        "files": [
          "epan/dissectors/packet-lbmc.c"
        ],
        "message": "[LBMC] Bugfix stack-based buffer overflow in dissect_nhdr_extopt.\n\nBug: 11984\nChange-Id: I16ef6e830f0377992233a1bd255c1e3877e56a55\nReviewed-on: https://code.wireshark.org/review/13375\nReviewed-by: Michael Mann <mmann78@netscape.net>\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 1c090e929269a78bf7a4cb3dc0d34565f4351312)\nReviewed-on: https://code.wireshark.org/review/13411",
        "before_after_code_files": [
          "epan/dissectors/packet-lbmc.c||epan/dissectors/packet-lbmc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-lbmc.c||epan/dissectors/packet-lbmc.c"
          ],
          "candidate": [
            "epan/dissectors/packet-lbmc.c||epan/dissectors/packet-lbmc.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-lbmc.c||epan/dissectors/packet-lbmc.c": [
          "File: epan/dissectors/packet-lbmc.c -> epan/dissectors/packet-lbmc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6019: static expert_field ei_lbmc_analysis_invalid_offset = EI_INIT;",
          "6020: static expert_field ei_lbmc_analysis_missing_reassembly_frame = EI_INIT;",
          "6021: static expert_field ei_lbmc_analysis_invalid_fragment = EI_INIT;",
          "6024: #define LBMC_EXTOPT_REASSEMBLED_DATA_MAX_LEN 65536",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6022: static expert_field ei_lbmc_extopt_fragment_offset = EI_INIT;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9930:         NULL",
          "9931:     };",
          "9932:     proto_item * ritem = NULL;",
          "9934:     guint8 flags_val = 0;",
          "9935:     int len_dissected = 0;",
          "9936:     int data_len = 0;",
          "",
          "[Removed Lines]",
          "9933:     proto_tree * rtree = NULL;",
          "",
          "[Added Lines]",
          "9934:     proto_tree * rtree = NULL, *fragment_item;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "9949:     proto_tree_add_bitmask(subtree, tvb, offset + O_LBMC_EXTOPT_HDR_T_FLAGS, hf_lbmc_extopt_flags, ett_lbmc_extopt_flags, flags, ENC_BIG_ENDIAN);",
          "9950:     proto_tree_add_item(subtree, hf_lbmc_extopt_id, tvb, offset + O_LBMC_EXTOPT_HDR_T_ID, L_LBMC_EXTOPT_HDR_T_ID, ENC_BIG_ENDIAN);",
          "9951:     proto_tree_add_item(subtree, hf_lbmc_extopt_subtype, tvb, offset + O_LBMC_EXTOPT_HDR_T_SUBTYPE, L_LBMC_EXTOPT_HDR_T_SUBTYPE, ENC_BIG_ENDIAN);",
          "9953:     len_dissected = L_LBMC_EXTOPT_HDR_T;",
          "9954:     data_len = (int)hdrlen - len_dissected;",
          "9955:     data_offset = offset + len_dissected;",
          "",
          "[Removed Lines]",
          "9952:     proto_tree_add_item(subtree, hf_lbmc_extopt_fragment_offset, tvb, offset + O_LBMC_EXTOPT_HDR_T_FRAGMENT_OFFSET, L_LBMC_EXTOPT_HDR_T_FRAGMENT_OFFSET, ENC_BIG_ENDIAN);",
          "",
          "[Added Lines]",
          "9953:     fragment_item = proto_tree_add_item(subtree, hf_lbmc_extopt_fragment_offset, tvb, offset + O_LBMC_EXTOPT_HDR_T_FRAGMENT_OFFSET, L_LBMC_EXTOPT_HDR_T_FRAGMENT_OFFSET, ENC_BIG_ENDIAN);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "9963:             gchar * buf;",
          "9964:             proto_item * pi = NULL;",
          "9971:             proto_tree_add_item(subtree, hf_lbmc_extopt_data, tvb, data_offset, data_len, ENC_NA);",
          "9972:             ritem = proto_tree_add_item(tree, hf_lbmc_extopt_reassembled_data, reassembly_tvb, 0, reassembly->len, ENC_NA);",
          "9973:             rtree = proto_item_add_subtree(ritem, ett_lbmc_extopt_reassembled_data);",
          "",
          "[Removed Lines]",
          "9966:             tvb_memcpy(tvb, reassembly->data + fragment_offset, data_offset, data_len);",
          "9967:             reassembly->len += data_len;",
          "9968:             buf = (gchar *) wmem_memdup(wmem_file_scope(), reassembly->data, reassembly->len);",
          "9969:             reassembly_tvb = tvb_new_real_data(buf, reassembly->len, reassembly->len);",
          "9970:             add_new_data_source(pinfo, reassembly_tvb, \"Reassembled EXTOPT fragment data\");",
          "",
          "[Added Lines]",
          "9967:             if ((reassembly->len + fragment_offset + data_len) < LBMC_EXTOPT_REASSEMBLED_DATA_MAX_LEN)",
          "9968:             {",
          "9969:                 tvb_memcpy(tvb, reassembly->data + fragment_offset, data_offset, data_len);",
          "9970:                 reassembly->len += data_len;",
          "9971:                 buf = (gchar *) wmem_memdup(wmem_file_scope(), reassembly->data, reassembly->len);",
          "9972:                 reassembly_tvb = tvb_new_real_data(buf, reassembly->len, reassembly->len);",
          "9973:                 add_new_data_source(pinfo, reassembly_tvb, \"Reassembled EXTOPT fragment data\");",
          "9974:             }",
          "9975:             else",
          "9976:             {",
          "9977:                 expert_add_info(pinfo, fragment_item, &ei_lbmc_extopt_fragment_offset);",
          "9978:                 return (len_dissected);",
          "9979:             }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "10011:         if (reassembly->reassembly_in_progress)",
          "10012:         {",
          "10016:         }",
          "10017:         else",
          "10018:         {",
          "",
          "[Removed Lines]",
          "10013:             tvb_memcpy(tvb, reassembly->data + fragment_offset, data_offset, data_len);",
          "10014:             reassembly->len += data_len;",
          "10015:             proto_tree_add_item(subtree, hf_lbmc_extopt_data, tvb, offset + len_dissected, data_len, ENC_NA);",
          "",
          "[Added Lines]",
          "10022:             if ((reassembly->len + fragment_offset + data_len) < LBMC_EXTOPT_REASSEMBLED_DATA_MAX_LEN)",
          "10023:             {",
          "10024:                 tvb_memcpy(tvb, reassembly->data + fragment_offset, data_offset, data_len);",
          "10025:                 reassembly->len += data_len;",
          "10026:                 proto_tree_add_item(subtree, hf_lbmc_extopt_data, tvb, offset + len_dissected, data_len, ENC_NA);",
          "10027:             }",
          "10028:             else",
          "10029:             {",
          "10030:                 expert_add_info(pinfo, fragment_item, &ei_lbmc_extopt_fragment_offset);",
          "10031:                 return (len_dissected);",
          "10032:             }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "10025:             }",
          "10026:             else",
          "10027:             {",
          "10030:             }",
          "10031:             proto_tree_add_item(subtree, hf_lbmc_extopt_data, tvb, data_offset, data_len, ENC_NA);",
          "10032:         }",
          "",
          "[Removed Lines]",
          "10028:                 tvb_memcpy(tvb, reassembly->data + fragment_offset, data_offset, data_len);",
          "10029:                 reassembly->len += data_len;",
          "",
          "[Added Lines]",
          "10045:                 if ((reassembly->len + fragment_offset + data_len) < LBMC_EXTOPT_REASSEMBLED_DATA_MAX_LEN)",
          "10046:                 {",
          "10047:                     tvb_memcpy(tvb, reassembly->data + fragment_offset, data_offset, data_len);",
          "10048:                     reassembly->len += data_len;",
          "10049:                 }",
          "10050:                 else",
          "10051:                 {",
          "10052:                     expert_add_info(pinfo, fragment_item, &ei_lbmc_extopt_fragment_offset);",
          "10053:                     return (len_dissected);",
          "10054:                 }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "14156:         { &ei_lbmc_analysis_invalid_offset, { \"lbmc.analysis.invalid_offset\", PI_MALFORMED, PI_ERROR, \"Message property offset exceeds data length\", EXPFILL } },",
          "14157:         { &ei_lbmc_analysis_missing_reassembly_frame, { \"lbmc.analysis.missing_reassembly_frame\", PI_UNDECODED, PI_WARN, \"Message not reassembled - reassembly data missing from capture\", EXPFILL } },",
          "14158:         { &ei_lbmc_analysis_invalid_fragment, { \"lbmc.analysis.invalid_fragment\", PI_MALFORMED, PI_ERROR, \"Invalid fragment\", EXPFILL } },",
          "14159:     };",
          "14160:     module_t * lbmc_module = NULL;",
          "14161:     expert_module_t * expert_lbmc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14184:         { &ei_lbmc_extopt_fragment_offset, { \"lbmc.extopt.fragment_offset.invalid\", PI_PROTOCOL, PI_ERROR, \"Invalid fragment offset\", EXPFILL } },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9abbf8b69d830bff29705991d6ebb760ec2f4454",
      "candidate_info": {
        "commit_hash": "9abbf8b69d830bff29705991d6ebb760ec2f4454",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/9abbf8b69d830bff29705991d6ebb760ec2f4454",
        "files": [
          "epan/dissectors/asn1/c1222/packet-c1222-template.c",
          "epan/dissectors/packet-bmc.c",
          "epan/dissectors/packet-btavctp.c",
          "epan/dissectors/packet-btavrcp.c",
          "epan/dissectors/packet-c1222.c",
          "epan/dissectors/packet-data.c",
          "epan/dissectors/packet-dcerpc-netlogon.c",
          "epan/dissectors/packet-dcerpc.c",
          "epan/dissectors/packet-ieee802154.c",
          "epan/dissectors/packet-lapsat.c",
          "epan/dissectors/packet-lbmc.c",
          "epan/dissectors/packet-ldss.c",
          "epan/dissectors/packet-lwm.c",
          "epan/dissectors/packet-nfs.c",
          "epan/dissectors/packet-ntlmssp.c",
          "epan/dissectors/packet-ppp.c",
          "epan/dissectors/packet-smb2.c",
          "epan/dissectors/packet-tacacs.c",
          "epan/tvbuff_composite.c",
          "epan/tvbuff_zlib.c"
        ],
        "message": "Do not mix wmem and glib allocators\n\nChange-Id: I0e845668a1b9dbec93ea920a8585ecfe60f001d1\nReviewed-on: https://code.wireshark.org/review/15044\nReviewed-by: Michael Mann <mmann78@netscape.net>\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/asn1/c1222/packet-c1222-template.c||epan/dissectors/asn1/c1222/packet-c1222-template.c",
          "epan/dissectors/packet-bmc.c||epan/dissectors/packet-bmc.c",
          "epan/dissectors/packet-btavctp.c||epan/dissectors/packet-btavctp.c",
          "epan/dissectors/packet-btavrcp.c||epan/dissectors/packet-btavrcp.c",
          "epan/dissectors/packet-c1222.c||epan/dissectors/packet-c1222.c",
          "epan/dissectors/packet-data.c||epan/dissectors/packet-data.c",
          "epan/dissectors/packet-dcerpc-netlogon.c||epan/dissectors/packet-dcerpc-netlogon.c",
          "epan/dissectors/packet-dcerpc.c||epan/dissectors/packet-dcerpc.c",
          "epan/dissectors/packet-ieee802154.c||epan/dissectors/packet-ieee802154.c",
          "epan/dissectors/packet-lapsat.c||epan/dissectors/packet-lapsat.c",
          "epan/dissectors/packet-lbmc.c||epan/dissectors/packet-lbmc.c",
          "epan/dissectors/packet-ldss.c||epan/dissectors/packet-ldss.c",
          "epan/dissectors/packet-lwm.c||epan/dissectors/packet-lwm.c",
          "epan/dissectors/packet-nfs.c||epan/dissectors/packet-nfs.c",
          "epan/dissectors/packet-ntlmssp.c||epan/dissectors/packet-ntlmssp.c",
          "epan/dissectors/packet-ppp.c||epan/dissectors/packet-ppp.c",
          "epan/dissectors/packet-smb2.c||epan/dissectors/packet-smb2.c",
          "epan/dissectors/packet-tacacs.c||epan/dissectors/packet-tacacs.c",
          "epan/tvbuff_composite.c||epan/tvbuff_composite.c",
          "epan/tvbuff_zlib.c||epan/tvbuff_zlib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-lbmc.c||epan/dissectors/packet-lbmc.c"
          ],
          "candidate": [
            "epan/dissectors/packet-lbmc.c||epan/dissectors/packet-lbmc.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/asn1/c1222/packet-c1222-template.c||epan/dissectors/asn1/c1222/packet-c1222-template.c": [
          "File: epan/dissectors/asn1/c1222/packet-c1222-template.c -> epan/dissectors/asn1/c1222/packet-c1222-template.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "950:       encrypted = TRUE;",
          "951: #ifdef HAVE_LIBGCRYPT",
          "952:       if (c1222_decrypt) {",
          "954:         if (!decrypt_packet(buffer, len2, TRUE)) {",
          "955:           crypto_bad = TRUE;",
          "956:         } else {",
          "",
          "[Removed Lines]",
          "953:         buffer = (guchar *)tvb_memdup(wmem_packet_scope(), tvb, offset, len2);",
          "",
          "[Added Lines]",
          "953:         buffer = (guchar *)tvb_memdup(pinfo->pool, tvb, offset, len2);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-bmc.c||epan/dissectors/packet-bmc.c": [
          "File: epan/dissectors/packet-bmc.c -> epan/dissectors/packet-bmc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "101:     len = tvb_reported_length(tvb);",
          "103:     bitswap_buf_inplace(reversing_buffer, len);",
          "106:     bit_reversed_tvb = tvb_new_child_real_data(tvb, reversing_buffer, len, len);",
          "108:     add_new_data_source(pinfo, bit_reversed_tvb, \"Bit-reversed Data\");",
          "110:     message_type = tvb_get_guint8(bit_reversed_tvb, offset);",
          "",
          "[Removed Lines]",
          "102:     reversing_buffer = (guint8 *)tvb_memdup(NULL, tvb, offset, len);",
          "107:     tvb_set_free_cb(bit_reversed_tvb, g_free);",
          "",
          "[Added Lines]",
          "102:     reversing_buffer = (guint8 *)tvb_memdup(pinfo->pool, tvb, offset, len);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-btavctp.c||epan/dissectors/packet-btavctp.c": [
          "File: epan/dissectors/packet-btavctp.c -> epan/dissectors/packet-btavctp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "383:                     length += fragment->length;",
          "384:                 }",
          "388:                 for (i_frame = 1; i_frame <= fragments->count; ++i_frame) {",
          "389:                     fragment = (fragment_t *)wmem_tree_lookup32_le(fragments->fragment, i_frame);",
          "",
          "[Removed Lines]",
          "386:                 reassembled = (guint8 *) wmem_alloc(wmem_file_scope(), length);",
          "",
          "[Added Lines]",
          "386:                 reassembled = (guint8 *) wmem_alloc(pinfo->pool, length);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-btavrcp.c||epan/dissectors/packet-btavrcp.c": [
          "File: epan/dissectors/packet-btavrcp.c -> epan/dissectors/packet-btavrcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1207:                     length += data_fragment->length;",
          "1208:                 }",
          "1212:                 for (i_frame = 1; i_frame <= fragment->count; ++i_frame) {",
          "1213:                     data_fragment = (data_fragment_t *)wmem_tree_lookup32_le(fragment->fragments, i_frame);",
          "",
          "[Removed Lines]",
          "1210:                 reassembled = (guint8 *) wmem_alloc(wmem_file_scope(), length);",
          "",
          "[Added Lines]",
          "1210:                 reassembled = (guint8 *) wmem_alloc(pinfo->pool, length);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-c1222.c||epan/dissectors/packet-c1222.c": [
          "File: epan/dissectors/packet-c1222.c -> epan/dissectors/packet-c1222.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1001:       encrypted = TRUE;",
          "1002: #ifdef HAVE_LIBGCRYPT",
          "1003:       if (c1222_decrypt) {",
          "1005:         if (!decrypt_packet(buffer, len2, TRUE)) {",
          "1006:           crypto_bad = TRUE;",
          "1007:         } else {",
          "",
          "[Removed Lines]",
          "1004:         buffer = (guchar *)tvb_memdup(wmem_packet_scope(), tvb, offset, len2);",
          "",
          "[Added Lines]",
          "1004:         buffer = (guchar *)tvb_memdup(pinfo->pool, tvb, offset, len2);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-data.c||epan/dissectors/packet-data.c": [
          "File: epan/dissectors/packet-data.c -> epan/dissectors/packet-data.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:    proto_item *ti;",
          "71:    proto_tree *data_tree;",
          "72:    if (new_pane) {",
          "74:     data_tvb = tvb_new_child_real_data(tvb,real_data,bytes,bytes);",
          "76:     add_new_data_source(pinfo, data_tvb, \"Not dissected data bytes\");",
          "77:    } else {",
          "78:     data_tvb = tvb;",
          "",
          "[Removed Lines]",
          "73:     guint8 *real_data = (guint8 *)tvb_memdup(NULL, tvb, 0, bytes);",
          "75:     tvb_set_free_cb(data_tvb, g_free);",
          "",
          "[Added Lines]",
          "73:     guint8 *real_data = (guint8 *)tvb_memdup(pinfo->pool, tvb, 0, bytes);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-dcerpc-netlogon.c||epan/dissectors/packet-dcerpc-netlogon.c": [
          "File: epan/dissectors/packet-dcerpc-netlogon.c -> epan/dissectors/packet-dcerpc-netlogon.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7715:                 }",
          "7716:                 crypt_rc4_init(&rc4state,vars->encryption_key,16);",
          "7717:                 crypt_rc4(&rc4state,(guint8*)&copyconfounder,8);",
          "7719:                 crypt_rc4_init(&rc4state,vars->encryption_key,16);",
          "7720:                 crypt_rc4(&rc4state,decrypted,data_len);",
          "7721:                 buf = tvb_new_child_real_data(tvb, decrypted, data_len, data_len);",
          "7724:             }",
          "7725:             else {",
          "",
          "[Removed Lines]",
          "7718:                 decrypted = (guint8*)tvb_memdup(NULL, tvb, offset,data_len);",
          "7722:                 tvb_set_free_cb(buf, g_free);",
          "",
          "[Added Lines]",
          "7718:                 decrypted = (guint8*)tvb_memdup(pinfo->pool, tvb, offset,data_len);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-dcerpc.c||epan/dissectors/packet-dcerpc.c": [
          "File: epan/dissectors/packet-dcerpc.c -> epan/dissectors/packet-dcerpc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5003:             const guint32 conformance_count = dcerpc_tvb_get_ntohl(tvb, offset, hdr->drep);",
          "5004:             proto_tree_add_uint(cn_rts_command_tree, hf_dcerpc_cn_rts_command_conformancecount, tvb, offset, 4, conformance_count);",
          "5005:             offset += 4;",
          "5007:             proto_tree_add_bytes(cn_rts_command_tree, hf_dcerpc_cn_rts_command_padding, tvb, offset, conformance_count, padding);",
          "5008:             offset += conformance_count;",
          "5009:         } break;",
          "",
          "[Removed Lines]",
          "5006:             padding = (guint8 *)tvb_memdup(NULL, tvb, offset, conformance_count);",
          "",
          "[Added Lines]",
          "5006:             padding = (guint8 *)tvb_memdup(wmem_packet_scope(), tvb, offset, conformance_count);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5029:                offset += 16;",
          "5030:             } break;",
          "5031:             }",
          "5033:             proto_tree_add_bytes(cn_rts_command_tree, hf_dcerpc_cn_rts_command_padding, tvb, offset, 12, padding);",
          "5034:             offset += 12;",
          "5035:         } break;",
          "",
          "[Removed Lines]",
          "5032:             padding = (guint8 *)tvb_memdup(NULL, tvb, offset, 12);",
          "",
          "[Added Lines]",
          "5032:             padding = (guint8 *)tvb_memdup(wmem_packet_scope(), tvb, offset, 12);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-ieee802154.c||epan/dissectors/packet-ieee802154.c": [
          "File: epan/dissectors/packet-ieee802154.c -> epan/dissectors/packet-ieee802154.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2551:         if (!ccm_ctr_encrypt(key, tmp, rx_mic, text, captured_len)) {",
          "",
          "[Removed Lines]",
          "2548:         text = (guint8 *)tvb_memdup(NULL, tvb, offset, captured_len);",
          "",
          "[Added Lines]",
          "2548:         text = (guint8 *)tvb_memdup(pinfo->pool, tvb, offset, captured_len);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2558:         ptext_tvb = tvb_new_child_real_data(tvb, text, captured_len, reported_len);",
          "2560:         add_new_data_source(pinfo, ptext_tvb, \"Decrypted IEEE 802.15.4 payload\");",
          "2562:     }",
          "",
          "[Removed Lines]",
          "2559:         tvb_set_free_cb(ptext_tvb, g_free);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-lapsat.c||epan/dissectors/packet-lapsat.c": [
          "File: epan/dissectors/packet-lapsat.c -> epan/dissectors/packet-lapsat.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "508:  if ((plen + hlen) == tvb_captured_length(tvb)) {",
          "511:   data[plen-1] |= tvb_get_guint8(tvb, 2) << 4;",
          "512:   payload = tvb_new_child_real_data(tvb, data, plen, plen);",
          "514:  } else {",
          "516:   payload = tvb_new_subset(tvb, hlen, plen, -1);",
          "",
          "[Removed Lines]",
          "510:   guint8 *data = (guint8 *)tvb_memdup(NULL, tvb, hlen, plen);",
          "513:   tvb_set_free_cb(payload, g_free);",
          "",
          "[Added Lines]",
          "510:   guint8 *data = (guint8 *)tvb_memdup(pinfo->pool, tvb, hlen, plen);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-lbmc.c||epan/dissectors/packet-lbmc.c": [
          "File: epan/dissectors/packet-lbmc.c -> epan/dissectors/packet-lbmc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "9967:             {",
          "9968:                 tvb_memcpy(tvb, reassembly->data + fragment_offset, data_offset, data_len);",
          "9969:                 reassembly->len += data_len;",
          "9971:                 reassembly_tvb = tvb_new_real_data(buf, reassembly->len, reassembly->len);",
          "9972:                 add_new_data_source(pinfo, reassembly_tvb, \"Reassembled EXTOPT fragment data\");",
          "9973:             }",
          "",
          "[Removed Lines]",
          "9970:                 buf = (gchar *) wmem_memdup(wmem_file_scope(), reassembly->data, reassembly->len);",
          "",
          "[Added Lines]",
          "9970:                 buf = (gchar *) wmem_memdup(pinfo->pool, reassembly->data, reassembly->len);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11367:                     gchar * buf = NULL;",
          "11371:                     cur = msg->entry;",
          "11372:                     while (cur != NULL)",
          "11373:                     {",
          "",
          "[Removed Lines]",
          "11370:                     buf = (gchar *)wmem_alloc(wmem_file_scope(), (size_t)msg->total_len);",
          "",
          "[Added Lines]",
          "11370:                     buf = (gchar *)wmem_alloc(pinfo->pool, (size_t)msg->total_len);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-ldss.c||epan/dissectors/packet-ldss.c": [
          "File: epan/dissectors/packet-ldss.c -> epan/dissectors/packet-ldss.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "284:  digest_type = tvb_get_guint8 (tvb,  2);",
          "285:  compression = tvb_get_guint8 (tvb,  3);",
          "286:  cookie      = tvb_get_ntohl  (tvb,  4);",
          "288:  size     = tvb_get_ntoh64 (tvb, 40);",
          "289:  offset     = tvb_get_ntoh64 (tvb, 48);",
          "290:  targetTime  = tvb_get_ntohl  (tvb, 56);",
          "",
          "[Removed Lines]",
          "287:  digest      = (guint8 *)tvb_memdup (NULL, tvb,  8, DIGEST_LEN);",
          "",
          "[Added Lines]",
          "287:  digest      = (guint8 *)tvb_memdup (wmem_file_scope(), tvb,  8, DIGEST_LEN);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-lwm.c||epan/dissectors/packet-lwm.c": [
          "File: epan/dissectors/packet-lwm.c -> epan/dissectors/packet-lwm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "429:             payload_length=tvb_reported_length(new_tvb) - LWM_MIC_LEN;",
          "433:             payload_offset=0;",
          "",
          "[Removed Lines]",
          "432:             text = (guint8 *)tvb_memdup(NULL, new_tvb, 0, payload_length);",
          "",
          "[Added Lines]",
          "432:             text = (guint8 *)tvb_memdup(pinfo->pool, new_tvb, 0, payload_length);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "478:                 decrypted_tvb = tvb_new_real_data(text,length, length);",
          "479:                 call_data_dissector(decrypted_tvb, pinfo, lwm_tree);",
          "483:                 col_append_fstr(pinfo->cinfo, COL_INFO, \",  MIC SUCCESS\");",
          "",
          "[Removed Lines]",
          "481:                    tvb_set_free_cb(decrypted_tvb, g_free);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-nfs.c||epan/dissectors/packet-nfs.c": [
          "File: epan/dissectors/packet-nfs.c -> epan/dissectors/packet-nfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1040:  g_free((gpointer)nns->name);",
          "1041:  g_free((gpointer)nns->full_name);",
          "1044:  g_free(nns);",
          "1045: }",
          "",
          "[Removed Lines]",
          "1042:  g_free((gpointer)nns->parent);",
          "1043:  g_free((gpointer)nns->fh);",
          "",
          "[Added Lines]",
          "1042:  wmem_free(NULL, nns->parent);",
          "1043:  wmem_free(NULL, nns->fh);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1258:   fhlen = fh_length;",
          "1261:   fhkey[0].length = 1;",
          "1262:   fhkey[0].key = &fhlen;",
          "1263:   fhkey[1].length = fhlen/4;",
          "",
          "[Removed Lines]",
          "1260:   fhdata = (guint32 *)tvb_memdup(NULL, tvb, fh_offset, fh_length);",
          "",
          "[Added Lines]",
          "1260:   fhdata = (guint32 *)tvb_memdup(wmem_packet_scope(), tvb, fh_offset, fh_length);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1265:   fhkey[2].length = 0;",
          "1267:   nns = (nfs_name_snoop_t *)wmem_tree_lookup32_array(nfs_name_snoop_known, &fhkey[0]);",
          "1269:  }",
          "",
          "[Removed Lines]",
          "1268:   g_free(fhdata);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-ntlmssp.c||epan/dissectors/packet-ntlmssp.c": [
          "File: epan/dissectors/packet-ntlmssp.c -> epan/dissectors/packet-ntlmssp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2051:                                                           encrypted_block_length);",
          "2052:       packet_ntlmssp_info->payload_len = encrypted_block_length;",
          "2053:       decrypted_payloads = g_slist_prepend(decrypted_payloads,",
          "",
          "[Removed Lines]",
          "2050:       packet_ntlmssp_info->decrypted_payload = (guint8 *)tvb_memdup(NULL, tvb, offset,",
          "",
          "[Added Lines]",
          "2050:       packet_ntlmssp_info->decrypted_payload = (guint8 *)tvb_memdup(wmem_file_scope(), tvb, offset,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2545:                                                         encrypted_block_length);",
          "2546:     decrypted_payloads = g_slist_prepend(decrypted_payloads,",
          "2547:                                          packet_ntlmssp_info->decrypted_payload);",
          "",
          "[Removed Lines]",
          "2544:     packet_ntlmssp_info->decrypted_payload = tvb_memdup(NULL, data_tvb, offset,",
          "",
          "[Added Lines]",
          "2544:     packet_ntlmssp_info->decrypted_payload = tvb_memdup(wmem_file_scope(), data_tvb, offset,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2569: }",
          "2570: #endif",
          "2578: static guint",
          "2579: header_hash(gconstpointer pointer)",
          "2580: {",
          "",
          "[Removed Lines]",
          "2572: static void",
          "2573: free_payload(gpointer decrypted_payload, gpointer user_data _U_)",
          "2574: {",
          "2575:   g_free(decrypted_payload);",
          "2576: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2604: ntlmssp_cleanup_protocol(void)",
          "2605: {",
          "2606:   if (decrypted_payloads != NULL) {",
          "2608:     g_slist_free(decrypted_payloads);",
          "2609:     decrypted_payloads = NULL;",
          "2610:   }",
          "",
          "[Removed Lines]",
          "2607:     g_slist_foreach(decrypted_payloads, free_payload, NULL);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-ppp.c||epan/dissectors/packet-ppp.c": [
          "File: epan/dissectors/packet-ppp.c -> epan/dissectors/packet-ppp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4959:     ip_packet[2] = length >> 8;",
          "",
          "[Removed Lines]",
          "4956:     ip_packet = (guchar *)tvb_memdup(NULL, tvb, 0, length);",
          "",
          "[Added Lines]",
          "4956:     ip_packet = (guchar *)tvb_memdup(pinfo->pool, tvb, 0, length);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4965:     next_tvb = tvb_new_child_real_data(tvb, ip_packet, length, length);",
          "4966:     add_new_data_source(pinfo, next_tvb, \"Decompressed Data\");",
          "4969:     if (!dissector_try_uint(ppp_subdissector_table, PPP_IP, next_tvb, pinfo,",
          "4970:         info_tree)) {",
          "",
          "[Removed Lines]",
          "4967:     tvb_set_free_cb(next_tvb, g_free);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-smb2.c||epan/dissectors/packet-smb2.c": [
          "File: epan/dissectors/packet-smb2.c -> epan/dissectors/packet-smb2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7711:   memcpy(&A_1[1], sti->nonce, 15 - 4);",
          "7716:   if (gcry_cipher_open(&cipher_hd, GCRY_CIPHER_AES128, GCRY_CIPHER_MODE_CTR, 0)) {",
          "7718:    plain_data = NULL;",
          "7719:    goto done_decryption;",
          "7720:   }",
          "",
          "[Removed Lines]",
          "7713:   plain_data = (guint8 *)tvb_memdup(NULL, tvb, offset, sti->size);",
          "7717:    g_free(plain_data);",
          "",
          "[Added Lines]",
          "7713:   plain_data = (guint8 *)tvb_memdup(pinfo->pool, tvb, offset, sti->size);",
          "7717:    wmem_free(pinfo->pool, plain_data);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7723:   if (gcry_cipher_setkey(cipher_hd, decryption_key, 16)) {",
          "7724:    gcry_cipher_close(cipher_hd);",
          "7726:    plain_data = NULL;",
          "7727:    goto done_decryption;",
          "7728:   }",
          "7729:   if (gcry_cipher_setctr(cipher_hd, A_1, 16)) {",
          "7730:    gcry_cipher_close(cipher_hd);",
          "7732:    plain_data = NULL;",
          "7733:    goto done_decryption;",
          "7734:   }",
          "7736:   if (gcry_cipher_encrypt(cipher_hd, plain_data, sti->size, NULL, 0)) {",
          "7737:    gcry_cipher_close(cipher_hd);",
          "7739:    plain_data = NULL;",
          "7740:    goto done_decryption;",
          "7741:   }",
          "",
          "[Removed Lines]",
          "7725:    g_free(plain_data);",
          "7731:    g_free(plain_data);",
          "7738:    g_free(plain_data);",
          "",
          "[Added Lines]",
          "7725:    wmem_free(pinfo->pool, plain_data);",
          "7731:    wmem_free(pinfo->pool, plain_data);",
          "7738:    wmem_free(pinfo->pool, plain_data);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7750:  if (plain_data != NULL) {",
          "7753:   add_new_data_source(pinfo, *plain_tvb, \"Decrypted SMB3\");",
          "7754:  }",
          "",
          "[Removed Lines]",
          "7752:   tvb_set_free_cb(*plain_tvb, g_free);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-tacacs.c||epan/dissectors/packet-tacacs.c": [
          "File: epan/dissectors/packet-tacacs.c -> epan/dissectors/packet-tacacs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "382:  tvb_memcpy(tvb, session_id, 4,4);",
          "387:  md5_xor( buff, key, len, session_id,version, tvb_get_guint8(tvb,2) );",
          "",
          "[Removed Lines]",
          "384:  buff = (guint8 *)tvb_memdup(NULL, tvb, TAC_PLUS_HDR_SIZE, len);",
          "",
          "[Added Lines]",
          "384:  buff = (guint8 *)tvb_memdup(pinfo->pool, tvb, TAC_PLUS_HDR_SIZE, len);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "397:  add_new_data_source(pinfo, *dst_tvb, \"TACACS+ Decrypted\");",
          "",
          "[Removed Lines]",
          "394:  tvb_set_free_cb( *dst_tvb, g_free );",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "epan/tvbuff_composite.c||epan/tvbuff_composite.c": [
          "File: epan/tvbuff_composite.c -> epan/tvbuff_composite.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "112:   return tvb_get_ptr(member_tvb, member_offset, abs_length);",
          "113:  }",
          "114:  else {",
          "116:   return tvb->real_data + abs_offset;",
          "117:  }",
          "",
          "[Removed Lines]",
          "115:   tvb->real_data = (guint8 *)tvb_memdup(NULL, tvb, 0, -1);",
          "",
          "[Added Lines]",
          "115:   abs_offset = 0;",
          "116:   abs_length = 0;",
          "118:   tvb_check_offset_length(tvb, 0, -1, &abs_offset, &abs_length);",
          "120:   tvb->real_data = (guint8 *)g_malloc(abs_length);",
          "121:   tvb_memcpy(tvb, (void *)tvb->real_data, 0, abs_length);",
          "",
          "---------------"
        ],
        "epan/tvbuff_zlib.c||epan/tvbuff_zlib.c": [
          "File: epan/tvbuff_zlib.c -> epan/tvbuff_zlib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:   return NULL;",
          "69:  }",
          "73:  if (!compr)",
          "74:   return NULL;",
          "",
          "[Removed Lines]",
          "71:  compr = (guint8 *)tvb_memdup(NULL, tvb, offset, comprlen);",
          "",
          "[Added Lines]",
          "71:  compr = (guint8 *)g_malloc(comprlen);",
          "72:  tvb_memcpy(tvb, compr, offset, comprlen);",
          "",
          "---------------"
        ]
      }
    }
  ]
}