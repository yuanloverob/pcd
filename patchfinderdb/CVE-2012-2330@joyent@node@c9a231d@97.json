{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6a8b5b36b4570b4e9468f4c4599f8f6513c35017",
      "candidate_info": {
        "commit_hash": "6a8b5b36b4570b4e9468f4c4599f8f6513c35017",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/6a8b5b36b4570b4e9468f4c4599f8f6513c35017",
        "files": [
          "Makefile",
          "test/gc/node_modules/weak/LICENSE",
          "test/gc/node_modules/weak/README.md",
          "test/gc/node_modules/weak/binding.gyp",
          "test/gc/node_modules/weak/lib/weak.js",
          "test/gc/node_modules/weak/package.json",
          "test/gc/node_modules/weak/src/weakref.cc",
          "vcbuild.bat"
        ],
        "message": "test: bundle node-weak in test/gc so that it doesn't need to be downloaded",
        "before_after_code_files": [
          "test/gc/node_modules/weak/binding.gyp||test/gc/node_modules/weak/binding.gyp",
          "test/gc/node_modules/weak/lib/weak.js||test/gc/node_modules/weak/liweak.js",
          "test/gc/node_modules/weak/src/weakref.cc||test/gc/node_modules/weak/src/weakref.cc",
          "vcbuild.bat||vcbuild.bat"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/gc/node_modules/weak/binding.gyp||test/gc/node_modules/weak/binding.gyp": [
          "File: test/gc/node_modules/weak/binding.gyp -> test/gc/node_modules/weak/binding.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: {",
          "2:   'targets': [",
          "3:     {",
          "4:       'target_name': 'weakref',",
          "5:       'sources': [ 'src/weakref.cc' ]",
          "6:     }",
          "7:   ]",
          "8: }",
          "",
          "---------------"
        ],
        "test/gc/node_modules/weak/lib/weak.js||test/gc/node_modules/weak/liweak.js": [
          "File: test/gc/node_modules/weak/lib/weak.js -> test/gc/node_modules/weak/liweak.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/gc/node_modules/weak/src/weakref.cc||test/gc/node_modules/weak/src/weakref.cc": [
          "File: test/gc/node_modules/weak/src/weakref.cc -> test/gc/node_modules/weak/src/weakref.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: #include <stdlib.h>",
          "18: #include \"v8.h\"",
          "19: #include \"node.h\"",
          "21: using namespace v8;",
          "22: using namespace node;",
          "24: namespace {",
          "27: typedef struct proxy_container {",
          "28:   Persistent<Object> proxy;",
          "29:   Persistent<Object> target;",
          "30:   Persistent<Array>  callbacks;",
          "31: } proxy_container;",
          "34: Persistent<ObjectTemplate> proxyClass;",
          "37: bool IsDead(Handle<Object> proxy) {",
          "38:   assert(proxy->InternalFieldCount() == 1);",
          "39:   proxy_container *cont = reinterpret_cast<proxy_container*>(",
          "40:       proxy->GetPointerFromInternalField(0));",
          "41:   return cont == NULL || cont->target.IsEmpty();",
          "42: }",
          "45: Handle<Object> Unwrap(Handle<Object> proxy) {",
          "46:   assert(!IsDead(proxy));",
          "47:   proxy_container *cont = reinterpret_cast<proxy_container*>(",
          "48:       proxy->GetPointerFromInternalField(0));",
          "49:   return cont->target;",
          "50: }",
          "52: Handle<Array> GetCallbacks(Handle<Object> proxy) {",
          "53:   proxy_container *cont = reinterpret_cast<proxy_container*>(",
          "54:       proxy->GetPointerFromInternalField(0));",
          "55:   assert(cont != NULL);",
          "56:   return cont->callbacks;",
          "57: }",
          "60: #define UNWRAP                            \\",
          "61:   HandleScope scope;                      \\",
          "62:   Handle<Object> obj;                     \\",
          "63:   const bool dead = IsDead(info.This());  \\",
          "64:   if (!dead) obj = Unwrap(info.This());   \\",
          "67: Handle<Value> WeakNamedPropertyGetter(Local<String> property,",
          "68:                                       const AccessorInfo& info) {",
          "69:   UNWRAP",
          "70:   return dead ? Local<Value>() : obj->Get(property);",
          "71: }",
          "74: Handle<Value> WeakNamedPropertySetter(Local<String> property,",
          "75:                                       Local<Value> value,",
          "76:                                       const AccessorInfo& info) {",
          "77:   UNWRAP",
          "78:   if (!dead) obj->Set(property, value);",
          "79:   return value;",
          "80: }",
          "83: Handle<Integer> WeakNamedPropertyQuery(Local<String> property,",
          "84:                                        const AccessorInfo& info) {",
          "85:   return HandleScope().Close(Integer::New(None));",
          "86: }",
          "89: Handle<Boolean> WeakNamedPropertyDeleter(Local<String> property,",
          "90:                                          const AccessorInfo& info) {",
          "91:   UNWRAP",
          "92:   return Boolean::New(!dead && obj->Delete(property));",
          "93: }",
          "96: Handle<Value> WeakIndexedPropertyGetter(uint32_t index,",
          "97:                                         const AccessorInfo& info) {",
          "98:   UNWRAP",
          "99:   return dead ? Local<Value>() : obj->Get(index);",
          "100: }",
          "103: Handle<Value> WeakIndexedPropertySetter(uint32_t index,",
          "104:                                         Local<Value> value,",
          "105:                                         const AccessorInfo& info) {",
          "106:   UNWRAP",
          "107:   if (!dead) obj->Set(index, value);",
          "108:   return value;",
          "109: }",
          "112: Handle<Integer> WeakIndexedPropertyQuery(uint32_t index,",
          "113:                                          const AccessorInfo& info) {",
          "114:   return HandleScope().Close(Integer::New(None));",
          "115: }",
          "118: Handle<Boolean> WeakIndexedPropertyDeleter(uint32_t index,",
          "119:                                            const AccessorInfo& info) {",
          "120:   UNWRAP",
          "121:   return Boolean::New(!dead && obj->Delete(index));",
          "122: }",
          "125: Handle<Array> WeakPropertyEnumerator(const AccessorInfo& info) {",
          "126:   UNWRAP",
          "127:   return HandleScope().Close(dead ? Array::New(0) : obj->GetPropertyNames());",
          "128: }",
          "131: void AddCallback(Handle<Object> proxy, Handle<Function> callback) {",
          "132:   Handle<Array> callbacks = GetCallbacks(proxy);",
          "133:   callbacks->Set(Integer::New(callbacks->Length()), callback);",
          "134: }",
          "137: void TargetCallback(Persistent<Value> target, void* arg) {",
          "138:   HandleScope scope;",
          "140:   assert(target.IsNearDeath());",
          "142:   proxy_container *cont = reinterpret_cast<proxy_container*>(arg);",
          "145:   uint32_t len = cont->callbacks->Length();",
          "146:   Handle<Value> argv[1];",
          "147:   argv[0] = target;",
          "148:   for (uint32_t i=0; i<len; i++) {",
          "150:     Handle<Function> cb = Handle<Function>::Cast(",
          "151:         cont->callbacks->Get(Integer::New(i)));",
          "153:     TryCatch try_catch;",
          "155:     cb->Call(target->ToObject(), 1, argv);",
          "157:     if (try_catch.HasCaught()) {",
          "158:       FatalException(try_catch);",
          "159:     }",
          "160:   }",
          "162:   cont->proxy->SetPointerInInternalField(0, NULL);",
          "163:   cont->proxy.Dispose();",
          "164:   cont->proxy.Clear();",
          "165:   cont->target.Dispose();",
          "166:   cont->target.Clear();",
          "167:   cont->callbacks.Dispose();",
          "168:   cont->callbacks.Clear();",
          "169:   free(cont);",
          "170: }",
          "173: Handle<Value> Create(const Arguments& args) {",
          "174:   HandleScope scope;",
          "176:   if (!args[0]->IsObject()) {",
          "177:     Local<String> message = String::New(\"Object expected\");",
          "178:     return ThrowException(Exception::TypeError(message));",
          "179:   }",
          "181:   proxy_container *cont = (proxy_container *)",
          "182:     malloc(sizeof(proxy_container));",
          "184:   cont->target = Persistent<Object>::New(args[0]->ToObject());",
          "185:   cont->callbacks = Persistent<Array>::New(Array::New());",
          "187:   cont->proxy = Persistent<Object>::New(proxyClass->NewInstance());",
          "188:   cont->proxy->SetPointerInInternalField(0, cont);",
          "190:   cont->target.MakeWeak(cont, TargetCallback);",
          "192:   if (args.Length() >= 2) {",
          "193:     AddCallback(cont->proxy, Handle<Function>::Cast(args[1]));",
          "194:   }",
          "196:   return cont->proxy;",
          "197: }",
          "203: bool isWeakRef (Handle<Value> val) {",
          "204:   return val->IsObject() && val->ToObject()->InternalFieldCount() == 1;",
          "205: }",
          "207: Handle<Value> IsWeakRef (const Arguments& args) {",
          "208:   HandleScope scope;",
          "209:   return Boolean::New(isWeakRef(args[0]));",
          "210: }",
          "212: Handle<Value> Get(const Arguments& args) {",
          "213:   HandleScope scope;",
          "215:   if (!isWeakRef(args[0])) {",
          "216:     Local<String> message = String::New(\"Weakref instance expected\");",
          "217:     return ThrowException(Exception::TypeError(message));",
          "218:   }",
          "219:   Local<Object> proxy = args[0]->ToObject();",
          "221:   const bool dead = IsDead(proxy);",
          "222:   if (dead) return Undefined();",
          "224:   Handle<Object> obj = Unwrap(proxy);",
          "225:   return scope.Close(obj);",
          "226: }",
          "228: Handle<Value> IsNearDeath(const Arguments& args) {",
          "229:   HandleScope scope;",
          "231:   if (!isWeakRef(args[0])) {",
          "232:     Local<String> message = String::New(\"Weakref instance expected\");",
          "233:     return ThrowException(Exception::TypeError(message));",
          "234:   }",
          "235:   Local<Object> proxy = args[0]->ToObject();",
          "237:   proxy_container *cont = reinterpret_cast<proxy_container*>(",
          "238:       proxy->GetPointerFromInternalField(0));",
          "239:   assert(cont != NULL);",
          "241:   Handle<Boolean> rtn = Boolean::New(cont->target.IsNearDeath());",
          "243:   return scope.Close(rtn);",
          "244: }",
          "246: Handle<Value> IsDead(const Arguments& args) {",
          "247:   HandleScope scope;",
          "249:   if (!isWeakRef(args[0])) {",
          "250:     Local<String> message = String::New(\"Weakref instance expected\");",
          "251:     return ThrowException(Exception::TypeError(message));",
          "252:   }",
          "253:   Local<Object> proxy = args[0]->ToObject();",
          "255:   const bool dead = IsDead(proxy);",
          "256:   return Boolean::New(dead);",
          "257: }",
          "260: Handle<Value> AddCallback(const Arguments& args) {",
          "261:   HandleScope scope;",
          "263:   if (!isWeakRef(args[0])) {",
          "264:     Local<String> message = String::New(\"Weakref instance expected\");",
          "265:     return ThrowException(Exception::TypeError(message));",
          "266:   }",
          "267:   Local<Object> proxy = args[0]->ToObject();",
          "269:   AddCallback(proxy, Handle<Function>::Cast(args[1]));",
          "271:   return Undefined();",
          "272: }",
          "274: Handle<Value> Callbacks(const Arguments& args) {",
          "275:   HandleScope scope;",
          "277:   if (!isWeakRef(args[0])) {",
          "278:     Local<String> message = String::New(\"Weakref instance expected\");",
          "279:     return ThrowException(Exception::TypeError(message));",
          "280:   }",
          "281:   Local<Object> proxy = args[0]->ToObject();",
          "283:   return scope.Close(GetCallbacks(proxy));",
          "284: }",
          "287: void Initialize(Handle<Object> target) {",
          "288:   HandleScope scope;",
          "290:   proxyClass = Persistent<ObjectTemplate>::New(ObjectTemplate::New());",
          "291:   proxyClass->SetNamedPropertyHandler(WeakNamedPropertyGetter,",
          "292:                                       WeakNamedPropertySetter,",
          "293:                                       WeakNamedPropertyQuery,",
          "294:                                       WeakNamedPropertyDeleter,",
          "295:                                       WeakPropertyEnumerator);",
          "296:   proxyClass->SetIndexedPropertyHandler(WeakIndexedPropertyGetter,",
          "297:                                         WeakIndexedPropertySetter,",
          "298:                                         WeakIndexedPropertyQuery,",
          "299:                                         WeakIndexedPropertyDeleter,",
          "300:                                         WeakPropertyEnumerator);",
          "301:   proxyClass->SetInternalFieldCount(1);",
          "303:   NODE_SET_METHOD(target, \"get\", Get);",
          "304:   NODE_SET_METHOD(target, \"create\", Create);",
          "305:   NODE_SET_METHOD(target, \"isWeakRef\", IsWeakRef);",
          "306:   NODE_SET_METHOD(target, \"isNearDeath\", IsNearDeath);",
          "307:   NODE_SET_METHOD(target, \"isDead\", IsDead);",
          "308:   NODE_SET_METHOD(target, \"callbacks\", Callbacks);",
          "309:   NODE_SET_METHOD(target, \"addCallback\", AddCallback);",
          "311: }",
          "313: } // anonymous namespace",
          "315: NODE_MODULE(weakref, Initialize);",
          "",
          "---------------"
        ],
        "vcbuild.bat||vcbuild.bat": [
          "File: vcbuild.bat -> vcbuild.bat",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: set licensertf=",
          "29: set upload=",
          "30: set jslint=",
          "31: set noetw=",
          "32: set noetw_arg=",
          "33: set noetw_msi_arg=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: set buildnodeweak=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51: if /i \"%1\"==\"test-pummel\"   set test=test-pummel&goto arg-ok",
          "52: if /i \"%1\"==\"test-simple\"   set test=test-simple&goto arg-ok",
          "53: if /i \"%1\"==\"test-message\"  set test=test-message&goto arg-ok",
          "55: if /i \"%1\"==\"test\"          set test=test&goto arg-ok",
          "56: if /i \"%1\"==\"msi\"           set msi=1&set licensertf=1&goto arg-ok",
          "57: if /i \"%1\"==\"upload\"        set upload=1&goto arg-ok",
          "",
          "[Removed Lines]",
          "54: if /i \"%1\"==\"test-all\"      set test=test-all&goto arg-ok",
          "",
          "[Added Lines]",
          "55: if /i \"%1\"==\"test-gc\"       set test=test-gc&set buildnodeweak=1&goto arg-ok",
          "56: if /i \"%1\"==\"test-all\"      set test=test-all&set buildnodeweak=1&goto arg-ok",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "139: if \"%test%\"==\"test-pummel\" set test_args=%test_args% pummel",
          "140: if \"%test%\"==\"test-simple\" set test_args=%test_args% simple",
          "141: if \"%test%\"==\"test-message\" set test_args=%test_args% message",
          "142: if \"%test%\"==\"test-all\" set test_args=%test_args%",
          "144: echo running 'python tools/test.py %test_args%'",
          "145: python tools/test.py %test_args%",
          "147: if \"%test%\"==\"test\" goto jslint",
          "149: goto exit",
          "151: :create-msvs-files-failed",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "145: if \"%test%\"==\"test-gc\" set test_args=%test_args% gc",
          "148: :build-node-weak",
          "149: @rem Build node-weak if required",
          "150: if \"%buildnodeweak%\"==\"\" goto run-tests",
          "151: \"%config%\\node\" deps\\npm\\node_modules\\node-gyp\\bin\\node-gyp rebuild --directory=\"%~dp0test\\gc\\node_modules\\weak\" --nodedir=\"%~dp0.\"",
          "152: if errorlevel 1 goto build-node-weak-failed",
          "153: goto run-tests",
          "155: :build-node-weak-failed",
          "156: echo Failed to build node-weak.",
          "157: goto exit",
          "159: :run-tests",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7b71fd0c68ae103d77dbc11fb7ac87218626e3fd",
      "candidate_info": {
        "commit_hash": "7b71fd0c68ae103d77dbc11fb7ac87218626e3fd",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/7b71fd0c68ae103d77dbc11fb7ac87218626e3fd",
        "files": [
          "common.gypi"
        ],
        "message": "build: add comment explaining MACOSX_DEPLOYMENT_TARGET.",
        "before_after_code_files": [
          "common.gypi||common.gypi"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "common.gypi||common.gypi": [
          "File: common.gypi -> common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "171:           'GCC_VERSION': '4.2',",
          "172:           'GCC_WARN_ABOUT_MISSING_NEWLINE': 'YES',  # -Wnewline-eof",
          "173:           'PREBINDING': 'NO',                       # No -Wl,-prebind",
          "175:           'USE_HEADERMAP': 'NO',",
          "176:           'OTHER_CFLAGS': [",
          "177:             '-fno-strict-aliasing',",
          "",
          "[Removed Lines]",
          "174:           'MACOSX_DEPLOYMENT_TARGET': '10.5',",
          "",
          "[Added Lines]",
          "174:           'MACOSX_DEPLOYMENT_TARGET': '10.5',       # -mmacosx-version-min=10.5",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f69234703f7b6aab71f312205fa2a269f7bbbdd1",
      "candidate_info": {
        "commit_hash": "f69234703f7b6aab71f312205fa2a269f7bbbdd1",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/f69234703f7b6aab71f312205fa2a269f7bbbdd1",
        "files": [
          "src/node.cc"
        ],
        "message": "node: don't scan add-on for \"init\" symbol\n\nFrom this commit onwards, use of the NODE_MODULE macro is mandatory. This lets\nnode guard against modules that are ABI incompatible.",
        "before_after_code_files": [
          "src/node.cc||src/node.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1690:   HandleScope scope;",
          "1691:   char symbol[1024], *base, *pos;",
          "1692:   uv_lib_t lib;",
          "1694:   int r;",
          "1696:   if (args.Length() < 2) {",
          "",
          "[Removed Lines]",
          "1693:   node_module_struct compat_mod;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1744:     return ThrowException(exception);",
          "1745:   }",
          "1748:   node_module_struct *mod;",
          "1749:   if (uv_dlsym(&lib, symbol, reinterpret_cast<void**>(&mod))) {",
          "1762:   }",
          "1764:   if (mod->version != NODE_MODULE_VERSION) {",
          "1768:   }",
          "",
          "[Removed Lines]",
          "1751:     memset(&compat_mod, 0, sizeof compat_mod);",
          "1753:     mod = &compat_mod;",
          "1754:     mod->version = NODE_MODULE_VERSION;",
          "1756:     if (uv_dlsym(&lib, \"init\", reinterpret_cast<void**>(&mod->register_func))) {",
          "1757:       Local<String> errmsg = String::New(uv_dlerror(&lib));",
          "1758:       uv_dlclose(&lib);",
          "1759:       return ThrowException(Exception::Error(errmsg));",
          "1760:     }",
          "1765:     Local<Value> exception = Exception::Error(",
          "1766:         String::New(\"Module version mismatch, refusing to load.\"));",
          "1767:     return ThrowException(exception);",
          "",
          "[Added Lines]",
          "1748:     char errmsg[1024];",
          "1749:     snprintf(errmsg, sizeof(errmsg), \"Symbol %s not found.\", symbol);",
          "1750:     return ThrowError(errmsg);",
          "1754:     char errmsg[1024];",
          "1755:     snprintf(errmsg,",
          "1756:              sizeof(errmsg),",
          "1757:              \"Module version mismatch. Expected %d, got %d.\",",
          "1758:              NODE_MODULE_VERSION, mod->version);",
          "1759:     return ThrowError(errmsg);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d927fbc9ab01b8120d71dda0519c2ed2e82b030a",
      "candidate_info": {
        "commit_hash": "d927fbc9ab01b8120d71dda0519c2ed2e82b030a",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/d927fbc9ab01b8120d71dda0519c2ed2e82b030a",
        "files": [
          "doc/api/cluster.markdown",
          "lib/cluster.js",
          "test/simple/test-cluster-disconnect.js",
          "test/simple/test-cluster-worker-disconnect.js"
        ],
        "message": "cluster: add graceful disconnect support\n\nThis patch add a worker.disconnect() method there will stop the worker from accepting\nnew connections and then stop the IPC. This allow the worker to die graceful.\nWhen the IPC has been disconnected a 'disconnect' event will emit.\n\nThe patch also add a cluster.disconnect() method, this will call worker.disconnect() on\nall connected workers. When the workers are disconneted it will then close all server\nhandlers. This allow the cluster itself to self terminate in a graceful way.",
        "before_after_code_files": [
          "lib/cluster.js||licluster.js",
          "test/simple/test-cluster-disconnect.js||test/simple/test-cluster-disconnect.js",
          "test/simple/test-cluster-worker-disconnect.js||test/simple/test-cluster-worker-disconnect.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/cluster.js||licluster.js": [
          "File: lib/cluster.js -> licluster.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:   }",
          "78: }",
          "80: cluster.setupMaster = function(options) {",
          "82:   assert(cluster.isMaster);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "240: else if (cluster.isWorker) {",
          "243: }",
          "245: function toDecInt(value) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "293:     });",
          "294:   }",
          "297:   this.process.on('internalMessage', handleMessage.bind(null, this));",
          "298:   this.process.on('exit', prepareDeath.bind(null, this, 'dead', 'death'));",
          "301:   this.process.on('message', this.emit.bind(this, 'message'));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "356:   this.process.send.apply(this.process, arguments);",
          "357: };",
          "368: Worker.prototype.destroy = function() {",
          "369:   var self = this;",
          "",
          "[Removed Lines]",
          "360: function closeWorkerChannel(worker, callback) {",
          "362:   worker.process._channel.close();",
          "363:   worker.process._channel = null;",
          "364:   process.nextTick(callback);",
          "365: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "373:   if (cluster.isMaster) {",
          "377:       self.process.kill();",
          "380:   } else {",
          "",
          "[Removed Lines]",
          "376:     closeWorkerChannel(this, function() {",
          "378:     });",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "403:   }",
          "404: };",
          "407: cluster.fork = function(env) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "414:   return (new cluster.Worker(env));",
          "415: };",
          "419: function quickDestroyCluster() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-cluster-disconnect.js||test/simple/test-cluster-disconnect.js": [
          "File: test/simple/test-cluster-disconnect.js -> test/simple/test-cluster-disconnect.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: var common = require('../common');",
          "24: var assert = require('assert');",
          "25: var cluster = require('cluster');",
          "26: var net = require('net');",
          "28: if (cluster.isWorker) {",
          "29:   net.createServer(function(socket) {",
          "30:     socket.end('echo');",
          "31:   }).listen(common.PORT, '127.0.0.1');",
          "33:   net.createServer(function(socket) {",
          "34:     socket.end('echo');",
          "35:   }).listen(common.PORT + 1, '127.0.0.1');",
          "37: } else if (cluster.isMaster) {",
          "40:   var testConnection = function(port, cb) {",
          "41:     var socket = net.connect(port, '127.0.0.1', function() {",
          "43:       var result = '';",
          "44:       socket.on('data', function(chunk) { result += chunk; });",
          "47:       socket.on('end', function() {",
          "48:         cb(result === 'echo');",
          "49:       });",
          "50:     });",
          "51:   };",
          "54:   var testCluster = function(cb) {",
          "55:     var servers = 2;",
          "56:     var done = 0;",
          "58:     for (var i = 0, l = servers; i < l; i++) {",
          "59:       testConnection(common.PORT + i, function(sucess) {",
          "60:         assert.ok(sucess);",
          "61:         done += 1;",
          "62:         if (done === servers) {",
          "63:           cb();",
          "64:         }",
          "65:       });",
          "66:     }",
          "67:   };",
          "70:   var startCluster = function(cb) {",
          "71:     var workers = 2;",
          "72:     var online = 0;",
          "74:     for (var i = 0, l = workers; i < l; i++) {",
          "76:       var worker = cluster.fork();",
          "77:       worker.on('listening', function() {",
          "78:         online += 1;",
          "79:         if (online === workers) {",
          "80:           cb();",
          "81:         }",
          "82:       });",
          "83:     }",
          "84:   };",
          "87:   var results = {",
          "88:     start: 0,",
          "89:     test: 0,",
          "90:     disconnect: 0",
          "91:   };",
          "93:   var test = function(again) {",
          "95:     startCluster(function() {",
          "96:       results.start += 1;",
          "99:       testCluster(function() {",
          "100:         results.test += 1;",
          "103:         cluster.disconnect(function() {",
          "104:           results.disconnect += 1;",
          "107:           if (again) {",
          "108:             test();",
          "109:           }",
          "110:         });",
          "111:       });",
          "112:     });",
          "113:   };",
          "115:   test(true);",
          "117:   process.once('exit', function() {",
          "118:     assert.equal(results.start, 2);",
          "119:     assert.equal(results.test, 2);",
          "120:     assert.equal(results.disconnect, 2);",
          "121:   });",
          "122: }",
          "",
          "---------------"
        ],
        "test/simple/test-cluster-worker-disconnect.js||test/simple/test-cluster-worker-disconnect.js": [
          "File: test/simple/test-cluster-worker-disconnect.js -> test/simple/test-cluster-worker-disconnect.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: var common = require('../common');",
          "24: var assert = require('assert');",
          "25: var cluster = require('cluster');",
          "27: if (cluster.isWorker) {",
          "28:   var http = require('http');",
          "29:   http.Server(function() {",
          "31:   }).listen(common.PORT, '127.0.0.1');",
          "33: } else if (cluster.isMaster) {",
          "35:   var checks = {",
          "36:     cluster: {",
          "37:       emitDisconnect: false,",
          "38:       emitDeath: false,",
          "39:       callback: false",
          "40:     },",
          "41:     worker: {",
          "42:       emitDisconnect: false,",
          "43:       emitDeath: false,",
          "44:       state: false,",
          "45:       suicideMode: false,",
          "46:       died: false",
          "47:     }",
          "48:   };",
          "51:   var alive = function(pid) {",
          "52:     try {",
          "53:       process.kill(pid, 0);",
          "54:       return true;",
          "55:     } catch (e) {",
          "56:       return false;",
          "57:     }",
          "58:   };",
          "61:   var worker = cluster.fork();",
          "64:   worker.once('listening', function() {",
          "65:     worker.disconnect();",
          "66:   });",
          "69:   cluster.once('disconnect', function() {",
          "70:     checks.cluster.emitDisconnect = true;",
          "71:   });",
          "72:   cluster.once('death', function() {",
          "73:     checks.cluster.emitDeath = true;",
          "74:   });",
          "77:   worker.once('disconnect', function() {",
          "78:     checks.worker.emitDisconnect = true;",
          "79:     checks.worker.suicideMode = worker.suicide;",
          "80:     checks.worker.state = worker.state;",
          "81:   });",
          "84:   worker.once('death', function() {",
          "85:     checks.worker.emitDeath = true;",
          "86:     checks.worker.died = !alive(worker.process.pid);",
          "87:     process.nextTick(function() {",
          "88:       process.exit(0);",
          "89:     });",
          "90:   });",
          "92:   process.once('exit', function() {",
          "94:     var w = checks.worker;",
          "95:     var c = checks.cluster;",
          "98:     assert.ok(w.emitDisconnect, 'Disconnect event did not emit');",
          "99:     assert.ok(c.emitDisconnect, 'Disconnect event did not emit');",
          "100:     assert.ok(w.emitDeath, 'Death event did not emit');",
          "101:     assert.ok(c.emitDeath, 'Death event did not emit');",
          "104:     assert.equal(w.state, 'disconnected', 'The state property was not set');",
          "105:     assert.equal(w.suicideMode, true, 'Suicide mode was not set');",
          "108:     assert.ok(w.died, 'The worker did not die');",
          "109:   });",
          "110: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3e0757c1012f2ff75bdb50eecfb585ec3982dc4d",
      "candidate_info": {
        "commit_hash": "3e0757c1012f2ff75bdb50eecfb585ec3982dc4d",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/3e0757c1012f2ff75bdb50eecfb585ec3982dc4d",
        "files": [
          "lib/fs.js"
        ],
        "message": "lint",
        "before_after_code_files": [
          "lib/fs.js||lifs.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/fs.js||lifs.js": [
          "File: lib/fs.js -> lifs.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1110:     if (isWindows && !knownHard[base]) {",
          "1112:         if (err) return cb(err);",
          "1113:         knownHard[base] = true;",
          "1114:         LOOP();",
          "",
          "[Removed Lines]",
          "1111:       fs.lstat(base, function (err) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}