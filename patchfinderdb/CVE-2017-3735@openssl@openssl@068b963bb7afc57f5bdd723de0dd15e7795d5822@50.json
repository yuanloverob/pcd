{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "723183b5640e9b047acac189c7c7fb78575522d4",
      "candidate_info": {
        "commit_hash": "723183b5640e9b047acac189c7c7fb78575522d4",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/723183b5640e9b047acac189c7c7fb78575522d4",
        "files": [
          "crypto/bn/bn_exp.c"
        ],
        "message": "Don't leak the exponent bit width in BN_mod_exp_mont_consttime.\n\nThe exponent here is one of d, dmp1, or dmq1 for RSA. This value and its\nbit length are both secret. The only public upper bound is the bit width\nof the corresponding modulus (RSA n, p, and q, respectively).\n\nAlthough BN_num_bits is constant-time (sort of; see bn_correct_top notes\nin preceding patch), this does not fix the root problem, which is that\nthe windows are based on the minimal bit width, not the upper bound. We\ncould use BN_num_bits(m), but BN_mod_exp_mont_consttime is public API\nand may be called with larger exponents. Instead, use all top*BN_BITS2\nbits in the BIGNUM. This is still sensitive to the long-standing\nbn_correct_top leak, but we need to fix that regardless.\n\nThis may cause us to do a handful of extra multiplications for RSA keys\nwhich are just above a whole number of words, but that is not a standard\nRSA key size.\n\nReviewed-by: Paul Dale <paul.dale@oracle.com>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/5154)\n\n(cherry picked from commit 39eeb64f59ff838f976ad305de7d15747d47a41c)",
        "before_after_code_files": [
          "crypto/bn/bn_exp.c||crypto/bn/bn_exp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/bn_exp.c||crypto/bn/bn_exp.c": [
          "File: crypto/bn/bn_exp.c -> crypto/bn/bn_exp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "634:     top = m->top;",
          "637:     if (bits == 0) {",
          "639:         if (BN_is_one(m)) {",
          "",
          "[Removed Lines]",
          "636:     bits = BN_num_bits(p);",
          "",
          "[Added Lines]",
          "640:     bits = p->top * BN_BITS2;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c6a351a54c8a9fbcdf07ae2171ab8f6dd4416a5d",
      "candidate_info": {
        "commit_hash": "c6a351a54c8a9fbcdf07ae2171ab8f6dd4416a5d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c6a351a54c8a9fbcdf07ae2171ab8f6dd4416a5d",
        "files": [
          "crypto/engine/eng_cryptodev.c"
        ],
        "message": "Fix strict-warnings build on FreeBSD\n\nThe cryptodev engine is only available for OpenBSD and FreeBSD,\nbut for the OS version-specific checks the OpenBSD macro is not\ndefined on FreeBSD.  When building with -Werror and -Wundef (enabled\nby strict-warnings), the FreeBSD build fails:\n\ncrypto/engine/eng_cryptodev.c:47:7: error: 'OpenBSD' is not defined,\nevaluates to 0\n      [-Werror,-Wundef]\n\\# if (OpenBSD >= 200112) || ((__FreeBSD_version >= 470101 &&\n\\# __FreeBSD_versi...\n      ^\n\nThe reverse case would be true on OpenBSD (__FreeBSD_version would\nnot be defined), but since the boolean will short-circuit and this\ncode is only executed on OpenBSD and FreeBSD, and the line is\nalready pretty long, leave that out for now.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/5160)",
        "before_after_code_files": [
          "crypto/engine/eng_cryptodev.c||crypto/engine/eng_cryptodev.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/engine/eng_cryptodev.c||crypto/engine/eng_cryptodev.c": [
          "File: crypto/engine/eng_cryptodev.c -> crypto/engine/eng_cryptodev.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: #if (defined(__unix__) || defined(unix)) && !defined(USG) && \\",
          "45:         (defined(OpenBSD) || defined(__FreeBSD__))",
          "46: # include <sys/param.h>",
          "48: #  define HAVE_CRYPTODEV",
          "49: # endif",
          "51: #  define HAVE_SYSLOG_R",
          "52: # endif",
          "53: #endif",
          "",
          "[Removed Lines]",
          "47: # if (OpenBSD >= 200112) || ((__FreeBSD_version >= 470101 && __FreeBSD_version < 500000) || __FreeBSD_version >= 500041)",
          "50: # if (OpenBSD >= 200110)",
          "",
          "[Added Lines]",
          "47: # if (defined(OpenBSD) && (OpenBSD >= 200112)) || \\",
          "48:      (defined(__FreeBSD_version) && \\",
          "49:       ((__FreeBSD_version >= 470101 && __FreeBSD_version < 500000) || \\",
          "50:        __FreeBSD_version >= 500041))",
          "53: # if defined(OpenBSD) && (OpenBSD >= 200110)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "32ef82a29dc54b54ff0758514396847575c3c499",
      "candidate_info": {
        "commit_hash": "32ef82a29dc54b54ff0758514396847575c3c499",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/32ef82a29dc54b54ff0758514396847575c3c499",
        "files": [
          "apps/apps.h"
        ],
        "message": "Remove dhparam from SSL_CONF list.\n\nAvoid duplicate assertion by removing dhparam from SSL_CONF parameter list:\ndhparam is handled manually by s_server.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4408)",
        "before_after_code_files": [
          "apps/apps.h||apps/apps.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/apps.h||apps/apps.h": [
          "File: apps/apps.h -> apps/apps.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "214:         OPT_S_SERVERPREF, OPT_S_LEGACYRENEG, OPT_S_LEGACYCONN, \\",
          "215:         OPT_S_ONRESUMP, OPT_S_NOLEGACYCONN, OPT_S_STRICT, OPT_S_SIGALGS, \\",
          "216:         OPT_S_CLIENTSIGALGS, OPT_S_CURVES, OPT_S_NAMEDCURVE, OPT_S_CIPHER, \\",
          "218:         OPT_S__LAST",
          "220: # define OPT_S_OPTIONS \\",
          "",
          "[Removed Lines]",
          "217:         OPT_S_DHPARAM, OPT_S_DEBUGBROKE, OPT_S_COMP, \\",
          "",
          "[Added Lines]",
          "217:         OPT_S_DEBUGBROKE, OPT_S_COMP, \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "248:         {\"named_curve\", OPT_S_NAMEDCURVE, 's', \\",
          "249:             \"Elliptic curve used for ECDHE (server-side only)\" }, \\",
          "250:         {\"cipher\", OPT_S_CIPHER, 's', \"Specify cipher list to be used\"}, \\",
          "253:         {\"debug_broken_protocol\", OPT_S_DEBUGBROKE, '-', \\",
          "254:             \"Perform all sorts of protocol violations for testing purposes\"}",
          "",
          "[Removed Lines]",
          "251:         {\"dhparam\", OPT_S_DHPARAM, '<', \\",
          "252:             \"DH parameter file to use, in cert file if not specified\"}, \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "274:         case OPT_S_CURVES: \\",
          "275:         case OPT_S_NAMEDCURVE: \\",
          "276:         case OPT_S_CIPHER: \\",
          "278:         case OPT_S_DEBUGBROKE",
          "280: #define IS_NO_PROT_FLAG(o) \\",
          "",
          "[Removed Lines]",
          "277:         case OPT_S_DHPARAM: \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "24f3a3410e0821b5676d05f4246c3a317afa2f81",
      "candidate_info": {
        "commit_hash": "24f3a3410e0821b5676d05f4246c3a317afa2f81",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/24f3a3410e0821b5676d05f4246c3a317afa2f81",
        "files": [
          "crypto/ec/ecp_nistp224.c",
          "crypto/ec/ecp_nistp256.c",
          "crypto/ec/ecp_nistp521.c"
        ],
        "message": "ec/ecp_nistp*.c: sanitize for undefined/implmentation-specific behaviour.\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4974)\n\n(cherry picked from commit 8af7e94d7b720224547efa7e3364857f7f666dd4)",
        "before_after_code_files": [
          "crypto/ec/ecp_nistp224.c||crypto/ec/ecp_nistp224.c",
          "crypto/ec/ecp_nistp256.c||crypto/ec/ecp_nistp256.c",
          "crypto/ec/ecp_nistp521.c||crypto/ec/ecp_nistp521.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ec/ecp_nistp224.c||crypto/ec/ecp_nistp224.c": [
          "File: crypto/ec/ecp_nistp224.c -> crypto/ec/ecp_nistp224.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "51: typedef uint8_t u8;",
          "52: typedef uint64_t u64;",
          "",
          "[Removed Lines]",
          "53: typedef int64_t s64;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "crypto/ec/ecp_nistp256.c||crypto/ec/ecp_nistp256.c": [
          "File: crypto/ec/ecp_nistp256.c -> crypto/ec/ecp_nistp256.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: typedef uint8_t u8;",
          "54: typedef uint32_t u32;",
          "55: typedef uint64_t u64;",
          "",
          "[Removed Lines]",
          "56: typedef int64_t s64;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "394: {",
          "395:     felem tmp;",
          "396:     u64 a, b, mask;",
          "",
          "[Removed Lines]",
          "397:     s64 high, low;",
          "",
          "[Added Lines]",
          "396:     u64 high, low;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "452:     low &= bottom63bits;",
          "453:     low -= kPrime3Test;",
          "455:     low = ~low;",
          "461:     mask = (mask & low) | high;",
          "462:     tmp[0] -= mask & kPrime[0];",
          "463:     tmp[1] -= mask & kPrime[1];",
          "",
          "[Removed Lines]",
          "438:     high = tmp[3] >> 64;",
          "440:     high <<= 63;",
          "441:     high >>= 63;",
          "446:     low = tmp[3];",
          "447:     mask = low >> 63;",
          "456:     low >>= 63;",
          "",
          "[Added Lines]",
          "437:     high = (u64)(tmp[3] >> 64);",
          "439:     high = 0 - high;",
          "445:     low = (u64)tmp[3];",
          "446:     mask = 0 - (low >> 63);",
          "456:     low = 0 - (low >> 63);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "891:         equal &= equal << 4;",
          "892:         equal &= equal << 2;",
          "893:         equal &= equal << 1;",
          "896:         all_equal_so_far &= equal;",
          "897:     }",
          "",
          "[Removed Lines]",
          "894:         equal = ((s64) equal) >> 63;",
          "",
          "[Added Lines]",
          "895:         equal = 0 - (equal >> 63);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "958:     is_zero &= is_zero << 4;",
          "959:     is_zero &= is_zero << 2;",
          "960:     is_zero &= is_zero << 1;",
          "963:     is_p = (small[0] ^ kPrime[0]) |",
          "964:         (small[1] ^ kPrime[1]) |",
          "",
          "[Removed Lines]",
          "961:     is_zero = ((s64) is_zero) >> 63;",
          "",
          "[Added Lines]",
          "962:     is_zero = 0 - (is_zero >> 63);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "970:     is_p &= is_p << 4;",
          "971:     is_p &= is_p << 2;",
          "972:     is_p &= is_p << 1;",
          "975:     is_zero |= is_p;",
          "",
          "[Removed Lines]",
          "973:     is_p = ((s64) is_p) >> 63;",
          "",
          "[Added Lines]",
          "974:     is_p = 0 - (is_p >> 63);",
          "",
          "---------------"
        ],
        "crypto/ec/ecp_nistp521.c||crypto/ec/ecp_nistp521.c": [
          "File: crypto/ec/ecp_nistp521.c -> crypto/ec/ecp_nistp521.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "51: typedef uint8_t u8;",
          "52: typedef uint64_t u64;",
          "",
          "[Removed Lines]",
          "53: typedef int64_t s64;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "872:     is_p = ftmp[0] ^ kPrime[0];",
          "873:     is_p |= ftmp[1] ^ kPrime[1];",
          "",
          "[Removed Lines]",
          "870:     is_zero = ((s64) is_zero) >> 63;",
          "",
          "[Added Lines]",
          "869:     is_zero = 0 - (is_zero >> 63);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "880:     is_p |= ftmp[8] ^ kPrime[8];",
          "882:     is_p--;",
          "885:     is_zero |= is_p;",
          "886:     return is_zero;",
          "",
          "[Removed Lines]",
          "883:     is_p = ((s64) is_p) >> 63;",
          "",
          "[Added Lines]",
          "882:     is_p = 0 - (is_p >> 63);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "951:     is_p &= is_p << 4;",
          "952:     is_p &= is_p << 2;",
          "953:     is_p &= is_p << 1;",
          "955:     is_p = ~is_p;",
          "",
          "[Removed Lines]",
          "954:     is_p = ((s64) is_p) >> 63;",
          "",
          "[Added Lines]",
          "953:     is_p = 0 - (is_p >> 63);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "977:     is_greater |= is_greater << 4;",
          "978:     is_greater |= is_greater << 2;",
          "979:     is_greater |= is_greater << 1;",
          "982:     out[0] -= kPrime[0] & is_greater;",
          "983:     out[1] -= kPrime[1] & is_greater;",
          "",
          "[Removed Lines]",
          "980:     is_greater = ((s64) is_greater) >> 63;",
          "",
          "[Added Lines]",
          "979:     is_greater = 0 - (is_greater >> 63);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0f2e444ee5cf1a2de68ab8edf2df376512f2508f",
      "candidate_info": {
        "commit_hash": "0f2e444ee5cf1a2de68ab8edf2df376512f2508f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0f2e444ee5cf1a2de68ab8edf2df376512f2508f",
        "files": [
          "ssl/s3_lib.c",
          "ssl/tls_srp.c"
        ],
        "message": "Make SRP_CTX.info ownership and lifetime be the same as SRP_CTX.login.\n\nOwnership and lifetime rules of SRP_CTX.info are confusing and different\nfrom those of SRP_CTX.login, making it difficult to use correctly.\nThis makes the ownership and lifetime be the same as those of SRP_CTX.login,\nthet is a copy is made when setting it and is freed when SRP_CTX is freed.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3467)\n(cherry picked from commit e655f5494100d93307726b23f4718ead0cadc0c3)",
        "before_after_code_files": [
          "ssl/s3_lib.c||ssl/s3_lib.c",
          "ssl/tls_srp.c||ssl/tls_srp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/s3_lib.c||ssl/s3_lib.c": [
          "File: ssl/s3_lib.c -> ssl/s3_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3384:     case SSL_CTRL_SET_TLS_EXT_SRP_PASSWORD:",
          "3385:         ctx->srp_ctx.SRP_give_srp_client_pwd_callback =",
          "3386:             srp_password_from_info_cb;",
          "3388:         break;",
          "3389:     case SSL_CTRL_SET_SRP_ARG:",
          "3390:         ctx->srp_ctx.srp_Mask |= SSL_kSRP;",
          "",
          "[Removed Lines]",
          "3387:         ctx->srp_ctx.info = parg;",
          "",
          "[Added Lines]",
          "3387:         if (ctx->srp_ctx.info != NULL)",
          "3388:             OPENSSL_free(ctx->srp_ctx.info);",
          "3389:         if ((ctx->srp_ctx.info = BUF_strdup((char *)parg)) == NULL) {",
          "3390:             SSLerr(SSL_F_SSL3_CTX_CTRL, ERR_R_INTERNAL_ERROR);",
          "3391:             return 0;",
          "3392:         }",
          "",
          "---------------"
        ],
        "ssl/tls_srp.c||ssl/tls_srp.c": [
          "File: ssl/tls_srp.c -> ssl/tls_srp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:     if (ctx == NULL)",
          "21:         return 0;",
          "22:     OPENSSL_free(ctx->srp_ctx.login);",
          "23:     BN_free(ctx->srp_ctx.N);",
          "24:     BN_free(ctx->srp_ctx.g);",
          "25:     BN_free(ctx->srp_ctx.s);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23:     OPENSSL_free(ctx->srp_ctx.info);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "52:     if (s == NULL)",
          "53:         return 0;",
          "54:     OPENSSL_free(s->srp_ctx.login);",
          "55:     BN_free(s->srp_ctx.N);",
          "56:     BN_free(s->srp_ctx.g);",
          "57:     BN_free(s->srp_ctx.s);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:     OPENSSL_free(s->srp_ctx.info);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "105:     s->srp_ctx.b = NULL;",
          "106:     s->srp_ctx.v = NULL;",
          "107:     s->srp_ctx.login = NULL;",
          "109:     s->srp_ctx.strength = ctx->srp_ctx.strength;",
          "111:     if (((ctx->srp_ctx.N != NULL) &&",
          "",
          "[Removed Lines]",
          "108:     s->srp_ctx.info = ctx->srp_ctx.info;",
          "",
          "[Added Lines]",
          "110:     s->srp_ctx.info = NULL;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "132:         SSLerr(SSL_F_SSL_SRP_CTX_INIT, ERR_R_INTERNAL_ERROR);",
          "133:         goto err;",
          "134:     }",
          "135:     s->srp_ctx.srp_Mask = ctx->srp_ctx.srp_Mask;",
          "137:     return (1);",
          "138:  err:",
          "139:     OPENSSL_free(s->srp_ctx.login);",
          "140:     BN_free(s->srp_ctx.N);",
          "141:     BN_free(s->srp_ctx.g);",
          "142:     BN_free(s->srp_ctx.s);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "137:     if ((ctx->srp_ctx.info != NULL) &&",
          "138:         ((s->srp_ctx.info = BUF_strdup(ctx->srp_ctx.info)) == NULL)) {",
          "139:         SSLerr(SSL_F_SSL_SRP_CTX_INIT, ERR_R_INTERNAL_ERROR);",
          "140:         goto err;",
          "141:     }",
          "147:     OPENSSL_free(s->srp_ctx.info);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "272:         } else",
          "273:             s->srp_ctx.v = BN_dup(v);",
          "274:     }",
          "277:     if (!(s->srp_ctx.N) ||",
          "278:         !(s->srp_ctx.g) || !(s->srp_ctx.s) || !(s->srp_ctx.v))",
          "",
          "[Removed Lines]",
          "275:     s->srp_ctx.info = info;",
          "",
          "[Added Lines]",
          "283:     if (info != NULL) {",
          "284:         if (s->srp_ctx.info)",
          "285:             OPENSSL_free(s->srp_ctx.info);",
          "286:         if ((s->srp_ctx.info = BUF_strdup(info)) == NULL)",
          "287:             return -1;",
          "288:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}