{
  "cve_id": "CVE-2015-0278",
  "cve_desc": "libuv before 0.10.34 does not properly drop group privileges, which allows context-dependent attackers to gain privileges via unspecified vectors.",
  "repo": "libuv/libuv",
  "patch_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
  "patch_info": {
    "commit_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
    "repo": "libuv/libuv",
    "commit_url": "https://github.com/libuv/libuv/commit/66ab38918c911bcff025562cf06237d7fedaba0c",
    "files": [
      "src/unix/process.c"
    ],
    "message": "unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093",
    "before_after_code_files": [
      "src/unix/process.c||src/unix/process.c"
    ]
  },
  "patch_diff": {
    "src/unix/process.c||src/unix/process.c": [
      "File: src/unix/process.c -> src/unix/process.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "330:     _exit(127);",
      "331:   }",
      "333:   if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid)) {",
      "334:     uv__write_int(error_fd, -errno);",
      "335:     perror(\"setgid()\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "333:   if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {",
      "341:     SAVE_ERRNO(setgroups(0, NULL));",
      "342:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "acf1310bb070ee75593b581a22079d9c691028b0",
      "candidate_info": {
        "commit_hash": "acf1310bb070ee75593b581a22079d9c691028b0",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/acf1310bb070ee75593b581a22079d9c691028b0",
        "files": [
          "autogen.sh",
          "configure.ac"
        ],
        "message": "build: fix automake serial-tests check again\n\nThis effectively undoes the following commits:\n\n    a97685e build: add automake serial-tests version check\n    e4c1483 build: serial-tests was added in automake v1.12\n\nAfter much trial and error I've come to the conclusion that you cannot\nreliably test for the automake version inside configure.ac itself.\n\nFeature checks (testing for the presence of macros with m4_ifdef) is\nnot reliable when the macro is \"lazy-loaded\" by aclocal: m4 won't see\nits definition unless it's actually used in configure.ac, hence checking\nfor obsolete macros like AM_ENABLE_MULTILIB and AM_WITH_REGEX is not a\nreliable proxy for the automake version - both are are lazy-loaded.\n\nThat's why this commit moves the version check to autogen.sh, creates\na m4 file with automake options on the fly and includes that in\nconfigure.ac.\n\nThank you, automake maintainers, for making hard what should be easy.\nThat's an hour of my life I won't be getting back!",
        "before_after_code_files": [
          "autogen.sh||autogen.sh",
          "configure.ac||configure.ac"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "autogen.sh||autogen.sh": [
          "File: autogen.sh -> autogen.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: # ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF",
          "15: # OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.",
          "17: if [ \"$LIBTOOLIZE\" = \"\" ] && [ \"`uname`\" = \"Darwin\" ]; then",
          "18:   LIBTOOLIZE=glibtoolize",
          "19: fi",
          "21: set -ex",
          "",
          "[Removed Lines]",
          "22: ${LIBTOOLIZE:-libtoolize}",
          "23: ${ACLOCAL:-aclocal -I m4}",
          "24: ${AUTOCONF:-autoconf}",
          "25: ${AUTOMAKE:-automake} --add-missing",
          "",
          "[Added Lines]",
          "17: cd `dirname \"$0\"`",
          "23: ACLOCAL=${ACLOCAL:-aclocal}",
          "24: AUTOCONF=${AUTOCONF:-autoconf}",
          "25: AUTOMAKE=${AUTOMAKE:-automake}",
          "26: LIBTOOLIZE=${LIBTOOLIZE:-libtoolize}",
          "28: automake_version=`\"$AUTOMAKE\" --version | head -n 1 | sed 's/[^.0-9]//g'`",
          "29: automake_version_major=`echo \"$automake_version\" | cut -d. -f1`",
          "30: automake_version_minor=`echo \"$automake_version\" | cut -d. -f2`",
          "32: UV_EXTRA_AUTOMAKE_FLAGS=",
          "33: if test \"$automake_version_major\" -gt 1 || \\",
          "34:    test \"$automake_version_major\" -eq 1 && \\",
          "35:    test \"$automake_version_minor\" -gt 11; then",
          "36:   # serial-tests is available in v0.12 and newer.",
          "37:   UV_EXTRA_AUTOMAKE_FLAGS=\"$UV_EXTRA_AUTOMAKE_FLAGS serial-tests\"",
          "38: fi",
          "39: echo \"m4_define([UV_EXTRA_AUTOMAKE_FLAGS], [$UV_EXTRA_AUTOMAKE_FLAGS])\" \\",
          "40:     > m4/libuv-extra-automake-flags.m4",
          "43: \"$LIBTOOLIZE\"",
          "44: \"$ACLOCAL\" -I m4",
          "45: \"$AUTOCONF\"",
          "46: \"$AUTOMAKE\" --add-missing --copy",
          "",
          "---------------"
        ],
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: AC_PREREQ(2.57)",
          "16: AC_INIT([libuv], [0.11.5], [https://github.com/joyent/libuv/issues])",
          "22: AC_CONFIG_MACRO_DIR([m4])",
          "23: AC_CANONICAL_HOST",
          "24: AC_ENABLE_SHARED",
          "25: AC_ENABLE_STATIC",
          "",
          "[Removed Lines]",
          "17: # Use AM_PROG_AR as an ad-hoc version check to find out if it's safe",
          "18: # to use the serial-tests directive. Both were added in automake v0.12.",
          "19: AM_INIT_AUTOMAKE(m4_ifdef([AM_PROG_AR],",
          "20:                           [-Wall -Werror foreign subdir-objects serial-tests],",
          "21:                           [-Wall -Werror foreign subdir-objects]))",
          "",
          "[Added Lines]",
          "18: m4_include([m4/libuv-extra-automake-flags.m4])",
          "19: AM_INIT_AUTOMAKE([-Wall -Werror foreign subdir-objects] UV_EXTRA_AUTOMAKE_FLAGS)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c0ea37cf30d64b778fea39ccd3a788dcc61185df",
      "candidate_info": {
        "commit_hash": "c0ea37cf30d64b778fea39ccd3a788dcc61185df",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/c0ea37cf30d64b778fea39ccd3a788dcc61185df",
        "files": [
          "src/unix/process.c"
        ],
        "message": "unix: fix processing process handles queue\n\nMake sure we initialize it after the handle was removed from the pending\nqueue so that QUEUE_REMOVE doesn't do an invalid write when the process\nis closed.\n\nValgrind output:\n\n==4362== Invalid write of size 8\n==4362==    at 0x407DB8: uv__process_close (process.c:515)\n==4362==    by 0x404F94: uv_close (core.c:138)\n==4362==    by 0x4037C5: main (invalid_write.c:33)\n==4362==  Address 0xffeffc820 is not stack'd, malloc'd or (recently) free'd\n==4362==\n==4362== Invalid write of size 8\n==4362==    at 0x407DC3: uv__process_close (process.c:515)\n==4362==    by 0x404F94: uv_close (core.c:138)\n==4362==    by 0x4037C5: main (invalid_write.c:33)\n==4362==  Address 0xffeffc828 is not stack'd, malloc'd or (recently) free'd\n\nRefs: joyent/libuv/issues/1584",
        "before_after_code_files": [
          "src/unix/process.c||src/unix/process.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [
            "src/unix/process.c||src/unix/process.c"
          ],
          "candidate": [
            "src/unix/process.c||src/unix/process.c"
          ]
        }
      },
      "candidate_diff": {
        "src/unix/process.c||src/unix/process.c": [
          "File: src/unix/process.c -> src/unix/process.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:     QUEUE_INSERT_TAIL(&pending, &process->queue);",
          "86:   }",
          "89:     process = QUEUE_DATA(q, uv_process_t, queue);",
          "91:     uv__handle_stop(process);",
          "93:     if (process->exit_cb == NULL)",
          "",
          "[Removed Lines]",
          "88:   QUEUE_FOREACH(q, &pending) {",
          "90:     QUEUE_REMOVE(q);",
          "",
          "[Added Lines]",
          "88:   h = &pending;",
          "89:   q = QUEUE_HEAD(h);",
          "90:   while (q != h) {",
          "92:     q = QUEUE_NEXT(q);",
          "94:     QUEUE_REMOVE(&process->queue);",
          "95:     QUEUE_INIT(&process->queue);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e03c0c73834ec98f4dcf96fefe74d6d37597073c",
      "candidate_info": {
        "commit_hash": "e03c0c73834ec98f4dcf96fefe74d6d37597073c",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/e03c0c73834ec98f4dcf96fefe74d6d37597073c",
        "files": [
          "docs/src/fs.rst",
          "include/uv.h"
        ],
        "message": "doc: fix parameter name in uv_fs_access\n\nCloses #1560",
        "before_after_code_files": [
          "include/uv.h||include/uv.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/uv.h||include/uv.h": [
          "File: include/uv.h -> include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1138: UV_EXTERN int uv_fs_access(uv_loop_t* loop,",
          "1139:                            uv_fs_t* req,",
          "1140:                            const char* path,",
          "1142:                            uv_fs_cb cb);",
          "1143: UV_EXTERN int uv_fs_chmod(uv_loop_t* loop,",
          "1144:                           uv_fs_t* req,",
          "",
          "[Removed Lines]",
          "1141:                            int flags,",
          "",
          "[Added Lines]",
          "1141:                            int mode,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7677f62c5252b2c398f0d22fbe6c936b234e6847",
      "candidate_info": {
        "commit_hash": "7677f62c5252b2c398f0d22fbe6c936b234e6847",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/7677f62c5252b2c398f0d22fbe6c936b234e6847",
        "files": [
          "test/test-pipe-getsockname.c"
        ],
        "message": "test: fix compilation warning",
        "before_after_code_files": [
          "test/test-pipe-getsockname.c||test/test-pipe-getsockname.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/test-pipe-getsockname.c||test/test-pipe-getsockname.c": [
          "File: test/test-pipe-getsockname.c -> test/test-pipe-getsockname.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:   #include <sys/un.h>",
          "31: #endif",
          "34: static int close_cb_called = 0;",
          "35: static char abstract_pipe[] = \"\\0test-pipe\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: #ifndef _WIN32",
          "35: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1cc25170ed6d4c5d2ebc60d63776c33ce2210fcc",
      "candidate_info": {
        "commit_hash": "1cc25170ed6d4c5d2ebc60d63776c33ce2210fcc",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/1cc25170ed6d4c5d2ebc60d63776c33ce2210fcc",
        "files": [
          "Makefile.am"
        ],
        "message": "build: add missing fixtures to distribution tarball",
        "before_after_code_files": [
          "Makefile.am||Makefile.am"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.am||Makefile.am": [
          "File: Makefile.am -> Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "107: endif  # WINNT",
          "109: TESTS = test/run-tests",
          "110: check_PROGRAMS = test/run-tests",
          "111: test_run_tests_CFLAGS =",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "109: EXTRA_DIST = test/fixtures/empty_file \\",
          "110:              test/fixtures/load_error.node",
          "",
          "---------------"
        ]
      }
    }
  ]
}