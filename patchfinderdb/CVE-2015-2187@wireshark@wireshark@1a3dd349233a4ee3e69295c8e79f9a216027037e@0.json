{
  "cve_id": "CVE-2015-2187",
  "cve_desc": "The dissect_atn_cpdlc_heur function in asn1/atn-cpdlc/packet-atn-cpdlc-template.c in the ATN-CPDLC dissector in Wireshark 1.12.x before 1.12.4 does not properly follow the TRY/ENDTRY code requirements, which allows remote attackers to cause a denial of service (stack memory corruption and application crash) via a crafted packet.",
  "repo": "wireshark/wireshark",
  "patch_hash": "1a3dd349233a4ee3e69295c8e79f9a216027037e",
  "patch_info": {
    "commit_hash": "1a3dd349233a4ee3e69295c8e79f9a216027037e",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/1a3dd349233a4ee3e69295c8e79f9a216027037e",
    "files": [
      "asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
      "epan/dissectors/packet-atn-cpdlc.c"
    ],
    "message": "ATN-CPDLC: never put a break in a TRY block\n\nIt will skip the execution of ENDTRY block\n\nBug: 9952\nChange-Id: I55af248b7d31cf1b75aae695ef8c149367791820\nReviewed-on: https://code.wireshark.org/review/7391\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>",
    "before_after_code_files": [
      "asn1/atn-cpdlc/packet-atn-cpdlc-template.c||asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
      "epan/dissectors/packet-atn-cpdlc.c||epan/dissectors/packet-atn-cpdlc.c"
    ]
  },
  "patch_diff": {
    "asn1/atn-cpdlc/packet-atn-cpdlc-template.c||asn1/atn-cpdlc/packet-atn-cpdlc-template.c": [
      "File: asn1/atn-cpdlc/packet-atn-cpdlc-template.c -> asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "218:      TRY {",
      "219:       dissect_ProtectedGroundPDUs_PDU(tvb, pinfo, NULL, NULL);",
      "220:       is_atn_cpdlc = TRUE;",
      "223:      CATCH_ALL{",
      "224:       is_atn_cpdlc = FALSE;",
      "225:       is_pm = FALSE;}",
      "226:      ENDTRY;",
      "227:      TRY {",
      "228:           dissect_GroundPDUs_PDU(tvb, pinfo, NULL, NULL);",
      "229:       is_pm = FALSE;",
      "232:      CATCH_ALL{",
      "233:       is_atn_cpdlc = FALSE;",
      "234:       is_pm = FALSE;}",
      "",
      "[Removed Lines]",
      "221:       is_pm = TRUE;",
      "222:       break;}",
      "230:       is_atn_cpdlc = TRUE;",
      "231:       break;}",
      "",
      "[Added Lines]",
      "221:       is_pm = TRUE;}",
      "226:      if (is_atn_cpdlc) {",
      "227:       break;",
      "228:      }",
      "232:       is_atn_cpdlc = TRUE;}",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "238:      TRY {",
      "239:       dissect_ProtectedAircraftPDUs_PDU(tvb, pinfo, NULL, NULL);",
      "240:       is_atn_cpdlc = TRUE;",
      "243:      CATCH_ALL {",
      "244:       is_atn_cpdlc = FALSE;",
      "245:       is_pm = FALSE; }",
      "246:      ENDTRY;",
      "247:      TRY{",
      "248:       dissect_AircraftPDUs_PDU(tvb, pinfo, NULL, NULL);",
      "249:       is_atn_cpdlc = TRUE;",
      "252:      CATCH_ALL{",
      "253:       is_atn_cpdlc = FALSE;",
      "254:       is_pm = FALSE;}",
      "",
      "[Removed Lines]",
      "241:       is_pm = TRUE;",
      "242:       break;}",
      "250:       is_pm = FALSE;",
      "251:       break;}",
      "",
      "[Added Lines]",
      "242:       is_pm = TRUE;}",
      "247:      if (is_atn_cpdlc) {",
      "248:       break;",
      "249:      }",
      "253:       is_pm = FALSE;}",
      "",
      "---------------"
    ],
    "epan/dissectors/packet-atn-cpdlc.c||epan/dissectors/packet-atn-cpdlc.c": [
      "File: epan/dissectors/packet-atn-cpdlc.c -> epan/dissectors/packet-atn-cpdlc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "5427:      TRY {",
      "5428:       dissect_ProtectedGroundPDUs_PDU(tvb, pinfo, NULL, NULL);",
      "5429:       is_atn_cpdlc = TRUE;",
      "5432:      CATCH_ALL{",
      "5433:       is_atn_cpdlc = FALSE;",
      "5434:       is_pm = FALSE;}",
      "5435:      ENDTRY;",
      "5436:      TRY {",
      "5437:           dissect_GroundPDUs_PDU(tvb, pinfo, NULL, NULL);",
      "5438:       is_pm = FALSE;",
      "5441:      CATCH_ALL{",
      "5442:       is_atn_cpdlc = FALSE;",
      "5443:       is_pm = FALSE;}",
      "",
      "[Removed Lines]",
      "5430:       is_pm = TRUE;",
      "5431:       break;}",
      "5439:       is_atn_cpdlc = TRUE;",
      "5440:       break;}",
      "",
      "[Added Lines]",
      "5430:       is_pm = TRUE;}",
      "5435:      if (is_atn_cpdlc) {",
      "5436:       break;",
      "5437:      }",
      "5441:       is_atn_cpdlc = TRUE;}",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "5447:      TRY {",
      "5448:       dissect_ProtectedAircraftPDUs_PDU(tvb, pinfo, NULL, NULL);",
      "5449:       is_atn_cpdlc = TRUE;",
      "5452:      CATCH_ALL {",
      "5453:       is_atn_cpdlc = FALSE;",
      "5454:       is_pm = FALSE; }",
      "5455:      ENDTRY;",
      "5456:      TRY{",
      "5457:       dissect_AircraftPDUs_PDU(tvb, pinfo, NULL, NULL);",
      "5458:       is_atn_cpdlc = TRUE;",
      "5461:      CATCH_ALL{",
      "5462:       is_atn_cpdlc = FALSE;",
      "5463:       is_pm = FALSE;}",
      "",
      "[Removed Lines]",
      "5450:       is_pm = TRUE;",
      "5451:       break;}",
      "5459:       is_pm = FALSE;",
      "5460:       break;}",
      "",
      "[Added Lines]",
      "5451:       is_pm = TRUE;}",
      "5456:      if (is_atn_cpdlc) {",
      "5457:       break;",
      "5458:      }",
      "5462:       is_pm = FALSE;}",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "7921:         NULL, HFILL }},",
      "7925:    };",
      "7927:   static gint *ett[] = {",
      "",
      "[Removed Lines]",
      "7924: #line 307 \"../../asn1/atn-cpdlc/packet-atn-cpdlc-template.c\"",
      "",
      "[Added Lines]",
      "7926: #line 309 \"../../asn1/atn-cpdlc/packet-atn-cpdlc-template.c\"",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "8072:     &ett_atn_cpdlc_WindSpeed,",
      "8076:     &ett_atn_cpdlc",
      "8077:   };",
      "",
      "[Removed Lines]",
      "8075: #line 311 \"../../asn1/atn-cpdlc/packet-atn-cpdlc-template.c\"",
      "",
      "[Added Lines]",
      "8077: #line 313 \"../../asn1/atn-cpdlc/packet-atn-cpdlc-template.c\"",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "572ce102c33c932d470a75ddb2bb660866816458",
      "candidate_info": {
        "commit_hash": "572ce102c33c932d470a75ddb2bb660866816458",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/572ce102c33c932d470a75ddb2bb660866816458",
        "files": [
          "asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
          "epan/dissectors/packet-atn-cpdlc.c"
        ],
        "message": "ATN-CPDLC: never put a break in a TRY block\n\nIt will skip the execution of ENDTRY block\n\nBug: 9952\nChange-Id: I55af248b7d31cf1b75aae695ef8c149367791820\nReviewed-on: https://code.wireshark.org/review/7391\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\n(cherry picked from commit 1a3dd349233a4ee3e69295c8e79f9a216027037e)\nConflicts:\n\tepan/dissectors/packet-atn-cpdlc.c\nReviewed-on: https://code.wireshark.org/review/7392",
        "before_after_code_files": [
          "asn1/atn-cpdlc/packet-atn-cpdlc-template.c||asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
          "epan/dissectors/packet-atn-cpdlc.c||epan/dissectors/packet-atn-cpdlc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "asn1/atn-cpdlc/packet-atn-cpdlc-template.c||asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
            "epan/dissectors/packet-atn-cpdlc.c||epan/dissectors/packet-atn-cpdlc.c"
          ],
          "candidate": [
            "asn1/atn-cpdlc/packet-atn-cpdlc-template.c||asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
            "epan/dissectors/packet-atn-cpdlc.c||epan/dissectors/packet-atn-cpdlc.c"
          ]
        }
      },
      "candidate_diff": {
        "asn1/atn-cpdlc/packet-atn-cpdlc-template.c||asn1/atn-cpdlc/packet-atn-cpdlc-template.c": [
          "File: asn1/atn-cpdlc/packet-atn-cpdlc-template.c -> asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "227:      TRY {",
          "228:       dissect_ProtectedGroundPDUs_PDU(tvb, pinfo, NULL);",
          "229:       is_atn_cpdlc = TRUE;",
          "232:      CATCH_ALL{",
          "233:       is_atn_cpdlc = FALSE;",
          "234:       is_pm = FALSE;}",
          "235:      ENDTRY;",
          "236:      TRY {",
          "237:           dissect_GroundPDUs_PDU(tvb, pinfo, NULL);",
          "238:       is_pm = FALSE;",
          "241:      CATCH_ALL{",
          "242:       is_atn_cpdlc = FALSE;",
          "243:       is_pm = FALSE;}",
          "",
          "[Removed Lines]",
          "230:       is_pm = TRUE;",
          "231:       break;}",
          "239:       is_atn_cpdlc = TRUE;",
          "240:       break;}",
          "",
          "[Added Lines]",
          "230:       is_pm = TRUE;}",
          "235:      if (is_atn_cpdlc) {",
          "236:       break;",
          "237:      }",
          "241:       is_atn_cpdlc = TRUE;}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "247:      TRY {",
          "248:       dissect_ProtectedAircraftPDUs_PDU(tvb, pinfo, NULL);",
          "249:       is_atn_cpdlc = TRUE;",
          "252:      CATCH_ALL {",
          "253:       is_atn_cpdlc = FALSE;",
          "254:       is_pm = FALSE; }",
          "255:      ENDTRY;",
          "256:      TRY{",
          "257:       dissect_AircraftPDUs_PDU(tvb, pinfo, NULL);",
          "258:       is_atn_cpdlc = TRUE;",
          "261:      CATCH_ALL{",
          "262:       is_atn_cpdlc = FALSE;",
          "263:       is_pm = FALSE;}",
          "",
          "[Removed Lines]",
          "250:       is_pm = TRUE;",
          "251:       break;}",
          "259:       is_pm = FALSE;",
          "260:       break;}",
          "",
          "[Added Lines]",
          "251:       is_pm = TRUE;}",
          "256:      if (is_atn_cpdlc) {",
          "257:       break;",
          "258:      }",
          "262:       is_pm = FALSE;}",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-atn-cpdlc.c||epan/dissectors/packet-atn-cpdlc.c": [
          "File: epan/dissectors/packet-atn-cpdlc.c -> epan/dissectors/packet-atn-cpdlc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5424:      TRY {",
          "5425:       dissect_ProtectedGroundPDUs_PDU(tvb, pinfo, NULL);",
          "5426:       is_atn_cpdlc = TRUE;",
          "5429:      CATCH_ALL{",
          "5430:       is_atn_cpdlc = FALSE;",
          "5431:       is_pm = FALSE;}",
          "5432:      ENDTRY;",
          "5433:      TRY {",
          "5434:           dissect_GroundPDUs_PDU(tvb, pinfo, NULL);",
          "5435:       is_pm = FALSE;",
          "5438:      CATCH_ALL{",
          "5439:       is_atn_cpdlc = FALSE;",
          "5440:       is_pm = FALSE;}",
          "",
          "[Removed Lines]",
          "5427:       is_pm = TRUE;",
          "5428:       break;}",
          "5436:       is_atn_cpdlc = TRUE;",
          "5437:       break;}",
          "",
          "[Added Lines]",
          "5427:       is_pm = TRUE;}",
          "5432:      if (is_atn_cpdlc) {",
          "5433:       break;",
          "5434:      }",
          "5438:       is_atn_cpdlc = TRUE;}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5444:      TRY {",
          "5445:       dissect_ProtectedAircraftPDUs_PDU(tvb, pinfo, NULL);",
          "5446:       is_atn_cpdlc = TRUE;",
          "5449:      CATCH_ALL {",
          "5450:       is_atn_cpdlc = FALSE;",
          "5451:       is_pm = FALSE; }",
          "5452:      ENDTRY;",
          "5453:      TRY{",
          "5454:       dissect_AircraftPDUs_PDU(tvb, pinfo, NULL);",
          "5455:       is_atn_cpdlc = TRUE;",
          "5458:      CATCH_ALL{",
          "5459:       is_atn_cpdlc = FALSE;",
          "5460:       is_pm = FALSE;}",
          "",
          "[Removed Lines]",
          "5447:       is_pm = TRUE;",
          "5448:       break;}",
          "5456:       is_pm = FALSE;",
          "5457:       break;}",
          "",
          "[Added Lines]",
          "5448:       is_pm = TRUE;}",
          "5453:      if (is_atn_cpdlc) {",
          "5454:       break;",
          "5455:      }",
          "5459:       is_pm = FALSE;}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7918:         NULL, HFILL }},",
          "7922:    };",
          "7924:   static gint *ett[] = {",
          "",
          "[Removed Lines]",
          "7921: #line 316 \"../../asn1/atn-cpdlc/packet-atn-cpdlc-template.c\"",
          "",
          "[Added Lines]",
          "7923: #line 318 \"../../asn1/atn-cpdlc/packet-atn-cpdlc-template.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8069:     &ett_atn_cpdlc_WindSpeed,",
          "8073:     &ett_atn_cpdlc",
          "8074:   };",
          "",
          "[Removed Lines]",
          "8072: #line 320 \"../../asn1/atn-cpdlc/packet-atn-cpdlc-template.c\"",
          "",
          "[Added Lines]",
          "8074: #line 322 \"../../asn1/atn-cpdlc/packet-atn-cpdlc-template.c\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "13bdc0f9721164b49cb0bf755c151c97cf430d70",
      "candidate_info": {
        "commit_hash": "13bdc0f9721164b49cb0bf755c151c97cf430d70",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/13bdc0f9721164b49cb0bf755c151c97cf430d70",
        "files": [
          "asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
          "epan/dissectors/packet-atn-cpdlc.c"
        ],
        "message": "ATN-CPDLC: never put a break in a TRY block\n\nIt will skip the execution of ENDTRY block\n\nBug: 9952\nChange-Id: I55af248b7d31cf1b75aae695ef8c149367791820\nReviewed-on: https://code.wireshark.org/review/7391\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\n(cherry picked from commit 1a3dd349233a4ee3e69295c8e79f9a216027037e)\nConflicts:\n\tepan/dissectors/packet-atn-cpdlc.c\nReviewed-on: https://code.wireshark.org/review/7392\nReviewed-on: https://code.wireshark.org/review/7702\nReviewed-by: Peter Wu <peter@lekensteyn.nl>\nReviewed-by: Balint Reczey <balint@balintreczey.hu>\nTested-by: Balint Reczey <balint@balintreczey.hu>",
        "before_after_code_files": [
          "asn1/atn-cpdlc/packet-atn-cpdlc-template.c||asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
          "epan/dissectors/packet-atn-cpdlc.c||epan/dissectors/packet-atn-cpdlc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "asn1/atn-cpdlc/packet-atn-cpdlc-template.c||asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
            "epan/dissectors/packet-atn-cpdlc.c||epan/dissectors/packet-atn-cpdlc.c"
          ],
          "candidate": [
            "asn1/atn-cpdlc/packet-atn-cpdlc-template.c||asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
            "epan/dissectors/packet-atn-cpdlc.c||epan/dissectors/packet-atn-cpdlc.c"
          ]
        }
      },
      "candidate_diff": {
        "asn1/atn-cpdlc/packet-atn-cpdlc-template.c||asn1/atn-cpdlc/packet-atn-cpdlc-template.c": [
          "File: asn1/atn-cpdlc/packet-atn-cpdlc-template.c -> asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "227:      TRY {",
          "228:       dissect_ProtectedGroundPDUs_PDU(tvb, pinfo, NULL);",
          "229:       is_atn_cpdlc = TRUE;",
          "232:      CATCH_ALL{",
          "233:       is_atn_cpdlc = FALSE;",
          "234:       is_pm = FALSE;}",
          "235:      ENDTRY;",
          "236:      TRY {",
          "237:           dissect_GroundPDUs_PDU(tvb, pinfo, NULL);",
          "238:       is_pm = FALSE;",
          "241:      CATCH_ALL{",
          "242:       is_atn_cpdlc = FALSE;",
          "243:       is_pm = FALSE;}",
          "",
          "[Removed Lines]",
          "230:       is_pm = TRUE;",
          "231:       break;}",
          "239:       is_atn_cpdlc = TRUE;",
          "240:       break;}",
          "",
          "[Added Lines]",
          "230:       is_pm = TRUE;}",
          "235:      if (is_atn_cpdlc) {",
          "236:       break;",
          "237:      }",
          "241:       is_atn_cpdlc = TRUE;}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "247:      TRY {",
          "248:       dissect_ProtectedAircraftPDUs_PDU(tvb, pinfo, NULL);",
          "249:       is_atn_cpdlc = TRUE;",
          "252:      CATCH_ALL {",
          "253:       is_atn_cpdlc = FALSE;",
          "254:       is_pm = FALSE; }",
          "255:      ENDTRY;",
          "256:      TRY{",
          "257:       dissect_AircraftPDUs_PDU(tvb, pinfo, NULL);",
          "258:       is_atn_cpdlc = TRUE;",
          "261:      CATCH_ALL{",
          "262:       is_atn_cpdlc = FALSE;",
          "263:       is_pm = FALSE;}",
          "",
          "[Removed Lines]",
          "250:       is_pm = TRUE;",
          "251:       break;}",
          "259:       is_pm = FALSE;",
          "260:       break;}",
          "",
          "[Added Lines]",
          "251:       is_pm = TRUE;}",
          "256:      if (is_atn_cpdlc) {",
          "257:       break;",
          "258:      }",
          "262:       is_pm = FALSE;}",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-atn-cpdlc.c||epan/dissectors/packet-atn-cpdlc.c": [
          "File: epan/dissectors/packet-atn-cpdlc.c -> epan/dissectors/packet-atn-cpdlc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5424:      TRY {",
          "5425:       dissect_ProtectedGroundPDUs_PDU(tvb, pinfo, NULL);",
          "5426:       is_atn_cpdlc = TRUE;",
          "5429:      CATCH_ALL{",
          "5430:       is_atn_cpdlc = FALSE;",
          "5431:       is_pm = FALSE;}",
          "5432:      ENDTRY;",
          "5433:      TRY {",
          "5434:           dissect_GroundPDUs_PDU(tvb, pinfo, NULL);",
          "5435:       is_pm = FALSE;",
          "5438:      CATCH_ALL{",
          "5439:       is_atn_cpdlc = FALSE;",
          "5440:       is_pm = FALSE;}",
          "",
          "[Removed Lines]",
          "5427:       is_pm = TRUE;",
          "5428:       break;}",
          "5436:       is_atn_cpdlc = TRUE;",
          "5437:       break;}",
          "",
          "[Added Lines]",
          "5427:       is_pm = TRUE;}",
          "5432:      if (is_atn_cpdlc) {",
          "5433:       break;",
          "5434:      }",
          "5438:       is_atn_cpdlc = TRUE;}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5444:      TRY {",
          "5445:       dissect_ProtectedAircraftPDUs_PDU(tvb, pinfo, NULL);",
          "5446:       is_atn_cpdlc = TRUE;",
          "5449:      CATCH_ALL {",
          "5450:       is_atn_cpdlc = FALSE;",
          "5451:       is_pm = FALSE; }",
          "5452:      ENDTRY;",
          "5453:      TRY{",
          "5454:       dissect_AircraftPDUs_PDU(tvb, pinfo, NULL);",
          "5455:       is_atn_cpdlc = TRUE;",
          "5458:      CATCH_ALL{",
          "5459:       is_atn_cpdlc = FALSE;",
          "5460:       is_pm = FALSE;}",
          "",
          "[Removed Lines]",
          "5447:       is_pm = TRUE;",
          "5448:       break;}",
          "5456:       is_pm = FALSE;",
          "5457:       break;}",
          "",
          "[Added Lines]",
          "5448:       is_pm = TRUE;}",
          "5453:      if (is_atn_cpdlc) {",
          "5454:       break;",
          "5455:      }",
          "5459:       is_pm = FALSE;}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7918:         NULL, HFILL }},",
          "7922:    };",
          "7924:   static gint *ett[] = {",
          "",
          "[Removed Lines]",
          "7921: #line 316 \"../../asn1/atn-cpdlc/packet-atn-cpdlc-template.c\"",
          "",
          "[Added Lines]",
          "7923: #line 318 \"../../asn1/atn-cpdlc/packet-atn-cpdlc-template.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8069:     &ett_atn_cpdlc_WindSpeed,",
          "8073:     &ett_atn_cpdlc",
          "8074:   };",
          "",
          "[Removed Lines]",
          "8072: #line 320 \"../../asn1/atn-cpdlc/packet-atn-cpdlc-template.c\"",
          "",
          "[Added Lines]",
          "8074: #line 322 \"../../asn1/atn-cpdlc/packet-atn-cpdlc-template.c\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "269dcc997b8ef8bac5e97c51ae94c741603d536e",
      "candidate_info": {
        "commit_hash": "269dcc997b8ef8bac5e97c51ae94c741603d536e",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/269dcc997b8ef8bac5e97c51ae94c741603d536e",
        "files": [
          "asn1/atn-cm/packet-atn-cm-template.c",
          "asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
          "epan/dissectors/packet-atn-cm.c",
          "epan/dissectors/packet-atn-cpdlc.c"
        ],
        "message": "atn cm/cpdlc : fix variable \u2018atn_cv\u2019 might be clobbered by \u2018longjmp\u2019 or \u2018vfork\u2019 [-Werror=clobbered] found by gcc6\n\nChange-Id: If7541384aeb305b93963dd44d535015ea245f5ac\nReviewed-on: https://code.wireshark.org/review/13879\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
        "before_after_code_files": [
          "asn1/atn-cm/packet-atn-cm-template.c||asn1/atn-cm/packet-atn-cm-template.c",
          "asn1/atn-cpdlc/packet-atn-cpdlc-template.c||asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
          "epan/dissectors/packet-atn-cm.c||epan/dissectors/packet-atn-cm.c",
          "epan/dissectors/packet-atn-cpdlc.c||epan/dissectors/packet-atn-cpdlc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "asn1/atn-cpdlc/packet-atn-cpdlc-template.c||asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
            "epan/dissectors/packet-atn-cpdlc.c||epan/dissectors/packet-atn-cpdlc.c"
          ],
          "candidate": [
            "asn1/atn-cpdlc/packet-atn-cpdlc-template.c||asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
            "epan/dissectors/packet-atn-cpdlc.c||epan/dissectors/packet-atn-cpdlc.c"
          ]
        }
      },
      "candidate_diff": {
        "asn1/atn-cm/packet-atn-cm-template.c||asn1/atn-cm/packet-atn-cm-template.c": [
          "File: asn1/atn-cm/packet-atn-cm-template.c -> asn1/atn-cm/packet-atn-cm-template.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "104:     proto_tree *tree,",
          "105:     void *data _U_)",
          "106: {",
          "108:     volatile gboolean is_atn_cm = FALSE;",
          "109:     int type;",
          "",
          "[Removed Lines]",
          "107:     atn_conversation_t *atn_cv = NULL;",
          "",
          "[Added Lines]",
          "107:     atn_conversation_t *volatile atn_cv = NULL;",
          "",
          "---------------"
        ],
        "asn1/atn-cpdlc/packet-atn-cpdlc-template.c||asn1/atn-cpdlc/packet-atn-cpdlc-template.c": [
          "File: asn1/atn-cpdlc/packet-atn-cpdlc-template.c -> asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "214:     proto_tree *tree,",
          "215:     void *data _U_)",
          "216: {",
          "218:     volatile gboolean is_atn_cpdlc = FALSE;",
          "219:     volatile gboolean is_pm = FALSE;",
          "220:     int type;",
          "",
          "[Removed Lines]",
          "217:     atn_conversation_t *atn_cv = NULL;",
          "",
          "[Added Lines]",
          "217:     atn_conversation_t *volatile atn_cv = NULL;",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-atn-cm.c||epan/dissectors/packet-atn-cm.c": [
          "File: epan/dissectors/packet-atn-cm.c -> epan/dissectors/packet-atn-cm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "677:     proto_tree *tree,",
          "678:     void *data _U_)",
          "679: {",
          "681:     volatile gboolean is_atn_cm = FALSE;",
          "682:     int type;",
          "",
          "[Removed Lines]",
          "680:     atn_conversation_t *atn_cv = NULL;",
          "",
          "[Added Lines]",
          "680:     atn_conversation_t *volatile atn_cv = NULL;",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-atn-cpdlc.c||epan/dissectors/packet-atn-cpdlc.c": [
          "File: epan/dissectors/packet-atn-cpdlc.c -> epan/dissectors/packet-atn-cpdlc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5423:     proto_tree *tree,",
          "5424:     void *data _U_)",
          "5425: {",
          "5427:     volatile gboolean is_atn_cpdlc = FALSE;",
          "5428:     volatile gboolean is_pm = FALSE;",
          "5429:     int type;",
          "",
          "[Removed Lines]",
          "5426:     atn_conversation_t *atn_cv = NULL;",
          "",
          "[Added Lines]",
          "5426:     atn_conversation_t *volatile atn_cv = NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "08ce84ebbe91eaaccd8bbf8c8d43c8cecfc7945a",
      "candidate_info": {
        "commit_hash": "08ce84ebbe91eaaccd8bbf8c8d43c8cecfc7945a",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/08ce84ebbe91eaaccd8bbf8c8d43c8cecfc7945a",
        "files": [
          "asn1/atn-cm/packet-atn-cm-template.c",
          "asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
          "epan/dissectors/packet-asterix.c",
          "epan/dissectors/packet-atn-cm.c",
          "epan/dissectors/packet-atn-cpdlc.c",
          "epan/dissectors/packet-batadv.c",
          "epan/dissectors/packet-dcerpc-netlogon.c",
          "epan/dissectors/packet-dcerpc-nt.c",
          "epan/dissectors/packet-dcp-etsi.c",
          "epan/dissectors/packet-ieee80211.c",
          "epan/dissectors/packet-lisp.c",
          "epan/dissectors/packet-mac-lte.c",
          "epan/dissectors/packet-mongo.c",
          "epan/dissectors/packet-openflow_v5.c"
        ],
        "message": "Grab-bag of dead initializers and two actual bugs.\n\nAll caught by cppcheck. The two (semi)-interesting bugs are:\n- in asn1/atn-cpdlc/packet-atn-cpdlc-template.c where the break statement should\n  have been inside the brace, causing potential control-flow weirdness with\n  exceptions\n- in epan/dissectors/packet-ieee80211.c where the bounds check for tag_len did\n  not match the expert info given\n\nChange-Id: Ie173fb8d917aabb9b4571435d671d6f16e1c7569\nReviewed-on: https://code.wireshark.org/review/1793\nReviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>\nReviewed-by: Evan Huus <eapache@gmail.com>",
        "before_after_code_files": [
          "asn1/atn-cm/packet-atn-cm-template.c||asn1/atn-cm/packet-atn-cm-template.c",
          "asn1/atn-cpdlc/packet-atn-cpdlc-template.c||asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
          "epan/dissectors/packet-asterix.c||epan/dissectors/packet-asterix.c",
          "epan/dissectors/packet-atn-cm.c||epan/dissectors/packet-atn-cm.c",
          "epan/dissectors/packet-atn-cpdlc.c||epan/dissectors/packet-atn-cpdlc.c",
          "epan/dissectors/packet-batadv.c||epan/dissectors/packet-batadv.c",
          "epan/dissectors/packet-dcerpc-netlogon.c||epan/dissectors/packet-dcerpc-netlogon.c",
          "epan/dissectors/packet-dcerpc-nt.c||epan/dissectors/packet-dcerpc-nt.c",
          "epan/dissectors/packet-dcp-etsi.c||epan/dissectors/packet-dcp-etsi.c",
          "epan/dissectors/packet-ieee80211.c||epan/dissectors/packet-ieee80211.c",
          "epan/dissectors/packet-lisp.c||epan/dissectors/packet-lisp.c",
          "epan/dissectors/packet-mac-lte.c||epan/dissectors/packet-mac-lte.c",
          "epan/dissectors/packet-mongo.c||epan/dissectors/packet-mongo.c",
          "epan/dissectors/packet-openflow_v5.c||epan/dissectors/packet-openflow_v5.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "asn1/atn-cpdlc/packet-atn-cpdlc-template.c||asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
            "epan/dissectors/packet-atn-cpdlc.c||epan/dissectors/packet-atn-cpdlc.c"
          ],
          "candidate": [
            "asn1/atn-cpdlc/packet-atn-cpdlc-template.c||asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
            "epan/dissectors/packet-atn-cpdlc.c||epan/dissectors/packet-atn-cpdlc.c"
          ]
        }
      },
      "candidate_diff": {
        "asn1/atn-cm/packet-atn-cm-template.c||asn1/atn-cm/packet-atn-cm-template.c": [
          "File: asn1/atn-cm/packet-atn-cm-template.c -> asn1/atn-cm/packet-atn-cm-template.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:   proto_tree *tree,",
          "75:   void *data _U_)",
          "76: {",
          "81:   ti = proto_tree_add_text(",
          "82:    tree,",
          "",
          "[Removed Lines]",
          "77:   int  type = no_msg;",
          "78:   proto_item *ti = NULL;",
          "79:   proto_tree *sub_tree = NULL;",
          "",
          "[Added Lines]",
          "77:   int  type;",
          "78:   proto_item *ti;",
          "79:   proto_tree *sub_tree;",
          "",
          "---------------"
        ],
        "asn1/atn-cpdlc/packet-atn-cpdlc-template.c||asn1/atn-cpdlc/packet-atn-cpdlc-template.c": [
          "File: asn1/atn-cpdlc/packet-atn-cpdlc-template.c -> asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "218:   atn_conversation_t *atn_cv = NULL;",
          "219:   volatile gboolean is_atn_cpdlc = FALSE;",
          "220:   volatile gboolean is_pm = FALSE;",
          "223:   type = check_heur_msg_type(pinfo);",
          "",
          "[Removed Lines]",
          "221:   int type = no_msg;",
          "",
          "[Added Lines]",
          "221:   int type;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "227:      TRY {",
          "228:       dissect_ProtectedGroundPDUs_PDU(tvb, pinfo, NULL);",
          "229:       is_atn_cpdlc = TRUE;",
          "232:      CATCH_ALL{",
          "233:       is_atn_cpdlc = FALSE;",
          "234:       is_pm = FALSE;}",
          "",
          "[Removed Lines]",
          "230:       is_pm = TRUE;}",
          "231:       break;",
          "",
          "[Added Lines]",
          "230:       is_pm = TRUE;",
          "231:       break;}",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-asterix.c||epan/dissectors/packet-asterix.c": [
          "File: epan/dissectors/packet-asterix.c -> epan/dissectors/packet-asterix.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7005:     guint i;",
          "7006:     guint8 category;",
          "7007:     guint16 length;",
          "7011:     for (i = 0; i < tvb_reported_length (tvb); i += length + 3) {",
          "7012:         category = tvb_get_guint8 (tvb, i);",
          "7017:         asterix_packet_item = proto_tree_add_item (tree, proto_asterix, tvb, i, length + 3, ENC_NA);",
          "7018:         proto_item_append_text (asterix_packet_item, \", Category %03d\", category);",
          "7019:         asterix_packet_tree = proto_item_add_subtree (asterix_packet_item, ett_asterix);",
          "",
          "[Removed Lines]",
          "7008:     proto_item *asterix_packet_item = NULL;",
          "7009:     proto_tree *asterix_packet_tree = NULL;",
          "7015:         asterix_packet_item = NULL;",
          "7016:         asterix_packet_tree = NULL;",
          "",
          "[Added Lines]",
          "7008:     proto_item *asterix_packet_item;",
          "7009:     proto_tree *asterix_packet_tree;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7118:     if (field->part != NULL) {",
          "7119:         for (i = 0, inner_offset = 0, go_on = 1; go_on && field->part[i] != NULL; i++) {",
          "7121:             value = tvb_get_bits64 (tvb, offset * 8 + inner_offset, field->part[i]->bit_length, ENC_BIG_ENDIAN);",
          "7122:             if (field->part[i]->hf != NULL) {",
          "7123:                 switch (field->part[i]->type) {",
          "",
          "[Removed Lines]",
          "7120:             value = G_GINT64_CONSTANT(0);;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-atn-cm.c||epan/dissectors/packet-atn-cm.c": [
          "File: epan/dissectors/packet-atn-cm.c -> epan/dissectors/packet-atn-cm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "641:   proto_tree *tree,",
          "642:   void *data _U_)",
          "643: {",
          "648:   ti = proto_tree_add_text(",
          "649:    tree,",
          "",
          "[Removed Lines]",
          "644:   int  type = no_msg;",
          "645:   proto_item *ti = NULL;",
          "646:   proto_tree *sub_tree = NULL;",
          "",
          "[Added Lines]",
          "644:   int  type;",
          "645:   proto_item *ti;",
          "646:   proto_tree *sub_tree;",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-atn-cpdlc.c||epan/dissectors/packet-atn-cpdlc.c": [
          "File: epan/dissectors/packet-atn-cpdlc.c -> epan/dissectors/packet-atn-cpdlc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5415:   atn_conversation_t *atn_cv = NULL;",
          "5416:   volatile gboolean is_atn_cpdlc = FALSE;",
          "5417:   volatile gboolean is_pm = FALSE;",
          "5420:   type = check_heur_msg_type(pinfo);",
          "",
          "[Removed Lines]",
          "5418:   int type = no_msg;",
          "",
          "[Added Lines]",
          "5418:   int type;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5424:      TRY {",
          "5425:       dissect_ProtectedGroundPDUs_PDU(tvb, pinfo, NULL);",
          "5426:       is_atn_cpdlc = TRUE;",
          "5429:      CATCH_ALL{",
          "5430:       is_atn_cpdlc = FALSE;",
          "5431:       is_pm = FALSE;}",
          "",
          "[Removed Lines]",
          "5427:       is_pm = TRUE;}",
          "5428:       break;",
          "",
          "[Added Lines]",
          "5427:       is_pm = TRUE;",
          "5428:       break;}",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-batadv.c||epan/dissectors/packet-batadv.c": [
          "File: epan/dissectors/packet-batadv.c -> epan/dissectors/packet-batadv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2238:  proto_item *tf;",
          "2239:  struct unicast_frag_packet_v12 *unicast_frag_packeth;",
          "2240:  const guint8  *dest_addr, *orig_addr;",
          "2242:  fragment_head *frag_msg = NULL;",
          "2243:  proto_tree *batadv_unicast_frag_tree = NULL, *flag_tree;",
          "",
          "[Removed Lines]",
          "2241:  gboolean save_fragmented = FALSE;",
          "",
          "[Added Lines]",
          "2241:  gboolean save_fragmented;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2344:  proto_item *tf;",
          "2345:  struct unicast_frag_packet_v14 *unicast_frag_packeth;",
          "2346:  const guint8  *dest_addr, *orig_addr;",
          "2348:  fragment_head *frag_msg = NULL;",
          "2349:  proto_tree *batadv_unicast_frag_tree = NULL, *flag_tree;",
          "",
          "[Removed Lines]",
          "2347:  gboolean save_fragmented = FALSE;",
          "",
          "[Added Lines]",
          "2347:  gboolean save_fragmented;",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-dcerpc-netlogon.c||epan/dissectors/packet-dcerpc-netlogon.c": [
          "File: epan/dissectors/packet-dcerpc-netlogon.c -> epan/dissectors/packet-dcerpc-netlogon.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2502:     vars->next = NULL;",
          "2504:     generate_hash_key(pinfo,0,key,NULL);",
          "2506:     existing_vars = (netlogon_auth_vars *)g_hash_table_lookup(netlogon_auths, key);",
          "2507:     if (!existing_vars) {",
          "2508:         debugprintf(\"Adding initial vars with this start packet = %d\\n\",vars->start);",
          "",
          "[Removed Lines]",
          "2505:     existing_vars = NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-dcerpc-nt.c||epan/dissectors/packet-dcerpc-nt.c": [
          "File: epan/dissectors/packet-dcerpc-nt.c -> epan/dissectors/packet-dcerpc-nt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "82: {",
          "83:  proto_item *item;",
          "84:  guint3264 len;",
          "87:  item = proto_tree_add_text(tree, tvb, offset, 0, \"%s\",",
          "88:    proto_registrar_get_name(hf_index));",
          "",
          "[Removed Lines]",
          "85:  proto_tree *subtree = tree;",
          "",
          "[Added Lines]",
          "85:  proto_tree *subtree;",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-dcp-etsi.c||epan/dissectors/packet-dcp-etsi.c": [
          "File: epan/dissectors/packet-dcp-etsi.c -> epan/dissectors/packet-dcp-etsi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "339:     }",
          "340:   }",
          "341:   if(new_tvb && tvb_length(new_tvb) > 0) {",
          "343:     tvbuff_t *dtvb = NULL;",
          "344:     const guint8 *input = tvb_get_ptr(new_tvb, 0, -1);",
          "345:     guint32 reassembled_size = tvb_length(new_tvb);",
          "",
          "[Removed Lines]",
          "342:     gboolean decoded = TRUE;",
          "",
          "[Added Lines]",
          "342:     gboolean decoded;",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-ieee80211.c||epan/dissectors/packet-ieee80211.c": [
          "File: epan/dissectors/packet-ieee80211.c -> epan/dissectors/packet-ieee80211.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10757:   guint8 opt_ie_cnt=0;",
          "10758:   guint8 i;",
          "10761:     expert_add_info_format(pinfo, ti_len, &ei_ieee80211_tag_length,",
          "10762:                            \"VHT TX PWR Envelope IE length %u wrong, must be >= 2 and <= 5\", tag_len);",
          "10763:     return offset;",
          "",
          "[Removed Lines]",
          "10760:   if (tag_len < 2 && tag_len <= 5) {",
          "",
          "[Added Lines]",
          "10760:   if (tag_len < 2 || tag_len > 5) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11435:   proto_item *item;",
          "11436:   proto_tree *subtree;",
          "11438:   guint8  akm_suite_type = 0, ucast_cipher_type = 0, mcast_cipher_type = 0;",
          "11440:   version = tvb_get_letohs(tvb, offset);",
          "",
          "[Removed Lines]",
          "11437:   guint16 loop_cnt, version  = 1, akm_cnt  = 1, ucast_cnt = 1, bkid_cnt = 1;",
          "",
          "[Added Lines]",
          "11437:   guint16 loop_cnt, version, akm_cnt  = 1, ucast_cnt = 1, bkid_cnt = 1;",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-lisp.c||epan/dissectors/packet-lisp.c": [
          "File: epan/dissectors/packet-lisp.c -> epan/dissectors/packet-lisp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2101:     guint16            addr_len    = 0;",
          "2102:     gint               offset      = 0;",
          "2103:     guint16            flags;",
          "2109:     guint8             itr_rec_cnt = 0;",
          "2110:     guint8             rec_cnt     = 0;",
          "2111:     guint16            src_eid_afi;",
          "",
          "[Removed Lines]",
          "2104:     gboolean           mrep        = FALSE;",
          "2105:     gboolean           smr         = FALSE;",
          "2106:     gboolean           probe       = FALSE;",
          "2107:     gboolean           pitr        = FALSE;",
          "2108:     gboolean           smr_invoked = FALSE;",
          "",
          "[Added Lines]",
          "2104:     gboolean           mrep;",
          "2105:     gboolean           smr;",
          "2106:     gboolean           probe;",
          "2107:     gboolean           pitr;",
          "2108:     gboolean           smr_invoked;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2350: {",
          "2351:     int       i;",
          "2352:     gint      offset  = 0;",
          "2354:     guint8    flags;",
          "2355:     guint8    rec_cnt = 0;",
          "2356:     tvbuff_t *next_tvb;",
          "",
          "[Removed Lines]",
          "2353:     gboolean  probe   = FALSE;",
          "",
          "[Added Lines]",
          "2353:     gboolean  probe;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2437:     tvbuff_t *next_tvb;",
          "2438:     guint16   authlen = 0;",
          "2439:     guint16   flags;",
          "2444:     proto_tree_add_item(lisp_tree, hf_lisp_mreg_flags_pmr, tvb, offset, 3, ENC_BIG_ENDIAN);",
          "",
          "[Removed Lines]",
          "2440:     gboolean  xtrid   = FALSE;",
          "2441:     gboolean  rtr     = FALSE;",
          "",
          "[Added Lines]",
          "2440:     gboolean  xtrid;",
          "2441:     gboolean  rtr;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2550:     tvbuff_t *next_tvb;",
          "2551:     guint16   authlen = 0;",
          "2552:     guint16   flags;",
          "2557:     flags = tvb_get_ntohs(tvb, offset);",
          "",
          "[Removed Lines]",
          "2553:     gboolean  xtrid   = FALSE;",
          "2554:     gboolean  rtr     = FALSE;",
          "",
          "[Added Lines]",
          "2553:     gboolean  xtrid;",
          "2554:     gboolean  rtr;",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-mac-lte.c||epan/dissectors/packet-mac-lte.c": [
          "File: epan/dissectors/packet-mac-lte.c -> epan/dissectors/packet-mac-lte.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1389: {",
          "1390:     const drx_state_key_t *p1 = (const drx_state_key_t*)v;",
          "1393:     return p1->frameNumber + (p1->pdu_instance >> 8);",
          "1395: }",
          "",
          "[Removed Lines]",
          "1394:     return GPOINTER_TO_UINT(v);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-mongo.c||epan/dissectors/packet-mongo.c": [
          "File: epan/dissectors/packet-mongo.c -> epan/dissectors/packet-mongo.c"
        ],
        "epan/dissectors/packet-openflow_v5.c||epan/dissectors/packet-openflow_v5.c": [
          "File: epan/dissectors/packet-openflow_v5.c -> epan/dissectors/packet-openflow_v5.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2513:     offset+=4;",
          "2515:     return offset;",
          "2517: }",
          "",
          "[Removed Lines]",
          "2516:     return offset;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "139297f79a819d47c13114e8f8bdd6d84d46b004",
      "candidate_info": {
        "commit_hash": "139297f79a819d47c13114e8f8bdd6d84d46b004",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/139297f79a819d47c13114e8f8bdd6d84d46b004",
        "files": [
          "asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
          "asn1/atn-ulcs/packet-atn-ulcs-template.h",
          "epan/dissectors/packet-atn-cpdlc.c",
          "epan/dissectors/packet-atn-ulcs.h"
        ],
        "message": "atn ulcs/cpdlc: fix ia5alpha\u2019 defined but not used [-Werror=unused-const-variable] found by gcc6\n\nChange-Id: I4483225d857636d3b76b6b03cab86868c366521d\nReviewed-on: https://code.wireshark.org/review/13874\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
        "before_after_code_files": [
          "asn1/atn-cpdlc/packet-atn-cpdlc-template.c||asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
          "asn1/atn-ulcs/packet-atn-ulcs-template.h||asn1/atn-ulcs/packet-atn-ulcs-template.h",
          "epan/dissectors/packet-atn-cpdlc.c||epan/dissectors/packet-atn-cpdlc.c",
          "epan/dissectors/packet-atn-ulcs.h||epan/dissectors/packet-atn-ulcs.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "asn1/atn-cpdlc/packet-atn-cpdlc-template.c||asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
            "epan/dissectors/packet-atn-cpdlc.c||epan/dissectors/packet-atn-cpdlc.c"
          ],
          "candidate": [
            "asn1/atn-cpdlc/packet-atn-cpdlc-template.c||asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
            "epan/dissectors/packet-atn-cpdlc.c||epan/dissectors/packet-atn-cpdlc.c"
          ]
        }
      },
      "candidate_diff": {
        "asn1/atn-cpdlc/packet-atn-cpdlc-template.c||asn1/atn-cpdlc/packet-atn-cpdlc-template.c": [
          "File: asn1/atn-cpdlc/packet-atn-cpdlc-template.c -> asn1/atn-cpdlc/packet-atn-cpdlc-template.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: static const char *object_identifier_id;",
          "62: static int dissect_GroundPDUs_PDU(",
          "63:     tvbuff_t *tvb _U_,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62: static const gchar ia5alpha[] = {",
          "63:     0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, \\",
          "64:     0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, \\",
          "65:     0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, \\",
          "66:     0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, \\",
          "67:     0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f, \\",
          "68:     0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, \\",
          "69:     0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, \\",
          "70:     0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, \\",
          "71:     0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f, '\\0'",
          "72: };",
          "",
          "---------------"
        ],
        "asn1/atn-ulcs/packet-atn-ulcs-template.h||asn1/atn-ulcs/packet-atn-ulcs-template.h": [
          "File: asn1/atn-ulcs/packet-atn-ulcs-template.h -> asn1/atn-ulcs/packet-atn-ulcs-template.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #include <epan/wmem/wmem.h>",
          "44: enum msg_type {",
          "45:     um,",
          "46:     dm,",
          "",
          "[Removed Lines]",
          "32: static const gchar ia5alpha[] = {",
          "33:     0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, \\",
          "34:     0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, \\",
          "35:     0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, \\",
          "36:     0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, \\",
          "37:     0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f, \\",
          "38:     0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, \\",
          "39:     0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, \\",
          "40:     0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, \\",
          "41:     0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f, '\\0'",
          "42: };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-atn-cpdlc.c||epan/dissectors/packet-atn-cpdlc.c": [
          "File: epan/dissectors/packet-atn-cpdlc.c -> epan/dissectors/packet-atn-cpdlc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "67: static const char *object_identifier_id;",
          "70: static int dissect_GroundPDUs_PDU(",
          "71:     tvbuff_t *tvb _U_,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70: static const gchar ia5alpha[] = {",
          "71:     0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, \\",
          "72:     0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, \\",
          "73:     0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, \\",
          "74:     0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, \\",
          "75:     0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f, \\",
          "76:     0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, \\",
          "77:     0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, \\",
          "78:     0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, \\",
          "79:     0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f, '\\0'",
          "80: };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "697: #line 84 \"../../asn1/atn-cpdlc/packet-atn-cpdlc-template.c\"",
          "",
          "[Added Lines]",
          "710: #line 97 \"../../asn1/atn-cpdlc/packet-atn-cpdlc-template.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "843: static gint ett_atn_cpdlc_WindSpeed = -1;",
          "847: static gint ett_atn_cpdlc = -1;",
          "",
          "[Removed Lines]",
          "846: #line 86 \"../../asn1/atn-cpdlc/packet-atn-cpdlc-template.c\"",
          "",
          "[Added Lines]",
          "859: #line 99 \"../../asn1/atn-cpdlc/packet-atn-cpdlc-template.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5300: static int proto_atn_cpdlc = -1;",
          "",
          "[Removed Lines]",
          "5297: #line 89 \"../../asn1/atn-cpdlc/packet-atn-cpdlc-template.c\"",
          "",
          "[Added Lines]",
          "5310: #line 102 \"../../asn1/atn-cpdlc/packet-atn-cpdlc-template.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7918:         NULL, HFILL }},",
          "7922:       };",
          "7924:     static gint *ett[] = {",
          "",
          "[Removed Lines]",
          "7921: #line 304 \"../../asn1/atn-cpdlc/packet-atn-cpdlc-template.c\"",
          "",
          "[Added Lines]",
          "7934: #line 317 \"../../asn1/atn-cpdlc/packet-atn-cpdlc-template.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "8069:     &ett_atn_cpdlc_WindSpeed,",
          "8073:         &ett_atn_cpdlc",
          "8074:     };",
          "",
          "[Removed Lines]",
          "8072: #line 308 \"../../asn1/atn-cpdlc/packet-atn-cpdlc-template.c\"",
          "",
          "[Added Lines]",
          "8085: #line 321 \"../../asn1/atn-cpdlc/packet-atn-cpdlc-template.c\"",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-atn-ulcs.h||epan/dissectors/packet-atn-ulcs.h": [
          "File: epan/dissectors/packet-atn-ulcs.h -> epan/dissectors/packet-atn-ulcs.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: #include <epan/wmem/wmem.h>",
          "52: enum msg_type {",
          "53:     um,",
          "54:     dm,",
          "",
          "[Removed Lines]",
          "40: static const gchar ia5alpha[] = {",
          "41:     0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, \\",
          "42:     0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, \\",
          "43:     0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, \\",
          "44:     0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, \\",
          "45:     0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f, \\",
          "46:     0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, \\",
          "47:     0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, \\",
          "48:     0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, \\",
          "49:     0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f, '\\0'",
          "50: };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}