{
  "cve_id": "CVE-2016-10248",
  "cve_desc": "The jpc_tsfb_synthesize function in jpc_tsfb.c in JasPer before 1.900.9 allows remote attackers to cause a denial of service (NULL pointer dereference) via vectors involving an empty sequence.",
  "repo": "mdadams/jasper",
  "patch_hash": "2e82fa00466ae525339754bb3ab0a0474a31d4bd",
  "patch_info": {
    "commit_hash": "2e82fa00466ae525339754bb3ab0a0474a31d4bd",
    "repo": "mdadams/jasper",
    "commit_url": "https://github.com/mdadams/jasper/commit/2e82fa00466ae525339754bb3ab0a0474a31d4bd",
    "files": [
      "src/libjasper/include/jasper/jas_math.h",
      "src/libjasper/include/jasper/jas_seq.h",
      "src/libjasper/jpc/jpc_dec.c",
      "src/libjasper/jpc/jpc_tsfb.c"
    ],
    "message": "Fixed an integral type promotion problem by adding a JAS_CAST. Modified the jpc_tsfb_synthesize function so that it will be a noop for an empty sequence (in order to avoid dereferencing a null pointer).",
    "before_after_code_files": [
      "src/libjasper/include/jasper/jas_math.h||src/libjasper/include/jasper/jas_math.h",
      "src/libjasper/include/jasper/jas_seq.h||src/libjasper/include/jasper/jas_seq.h",
      "src/libjasper/jpc/jpc_dec.c||src/libjasper/jpc/jpc_dec.c",
      "src/libjasper/jpc/jpc_tsfb.c||src/libjasper/jpc/jpc_tsfb.c"
    ]
  },
  "patch_diff": {
    "src/libjasper/include/jasper/jas_math.h||src/libjasper/include/jasper/jas_math.h": [
      "File: src/libjasper/include/jasper/jas_math.h -> src/libjasper/include/jasper/jas_math.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "112: #define JAS_ONES(n) \\",
      "113:   ((1 << (n)) - 1)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "119: __attribute__((no_sanitize(\"undefined\")))",
      "120: inline static jas_int_asr(int x, int n)",
      "121: {",
      "122:  assert(n >= 0);",
      "123:  return x >> n;",
      "124: }",
      "126: __attribute__((no_sanitize(\"undefined\")))",
      "127: inline static jas_int_asl(int x, int n)",
      "128: {",
      "129:  assert(n >= 0);",
      "130:  return x << n;",
      "131: }",
      "",
      "---------------"
    ],
    "src/libjasper/include/jasper/jas_seq.h||src/libjasper/include/jasper/jas_seq.h": [
      "File: src/libjasper/include/jasper/jas_seq.h -> src/libjasper/include/jasper/jas_seq.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "154: #define jas_matrix_numcols(matrix) \\",
      "155:  ((matrix)->numcols_)",
      "158: #define jas_matrix_get(matrix, i, j) \\",
      "159:  ((matrix)->rows_[i][j])",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "157: #define jas_matrix_size(matrix) \\",
      "158:  (jas_matrix_width(matrix) * jas_matrix_height(matrix))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "269:  ((s)->xstart_ = (x), (s)->ystart_ = (y), \\",
      "270:    (s)->xend_ = (s)->xstart_ + (s)->numcols_, \\",
      "271:    (s)->yend_ = (s)->ystart_ + (s)->numrows_)",
      "273: void jas_seq2d_bindsub(jas_matrix_t *s, jas_matrix_t *s1, int xstart,",
      "274:   int ystart, int xend, int yend);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "275: #define jas_seq2d_size(s) \\",
      "276:  (jas_seq2d_width(s) * jas_seq2d_height(s))",
      "",
      "---------------"
    ],
    "src/libjasper/jpc/jpc_dec.c||src/libjasper/jpc/jpc_dec.c": [
      "File: src/libjasper/jpc/jpc_dec.c -> src/libjasper/jpc/jpc_dec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1838:  bool warn;",
      "1839:  uint_fast32_t mask;",
      "1841:  if (roishift == 0 && bgshift == 0) {",
      "1842:   return;",
      "1843:  }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1841:  if (roishift < 0) {",
      "1844:   jas_eprintf(\"warning: forcing negative ROI shift to zero \"",
      "1845:     \"(bitstream is probably corrupt)\\n\");",
      "1846:   roishift = 0;",
      "1847:  }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1856:    } else {",
      "1858:     mag <<= bgshift;",
      "1862:       most-significant bit planes introduced by ROI shifting.",
      "",
      "[Removed Lines]",
      "1859:     mask = (1 << numbps) - 1;",
      "",
      "[Added Lines]",
      "1866:     mask = (JAS_CAST(uint_fast32_t, 1) << numbps) - 1;",
      "",
      "---------------"
    ],
    "src/libjasper/jpc/jpc_tsfb.c||src/libjasper/jpc/jpc_tsfb.c": [
      "File: src/libjasper/jpc/jpc_tsfb.c -> src/libjasper/jpc/jpc_tsfb.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "149: int jpc_tsfb_synthesize(jpc_tsfb_t *tsfb, jas_seq2d_t *a)",
      "150: {",
      "152:    jas_seq2d_getref(a, jas_seq2d_xstart(a), jas_seq2d_ystart(a)),",
      "153:    jas_seq2d_xstart(a), jas_seq2d_ystart(a), jas_seq2d_width(a),",
      "154:    jas_seq2d_height(a), jas_seq2d_rowstep(a), tsfb->numlvls - 1) : 0;",
      "",
      "[Removed Lines]",
      "151:  return (tsfb->numlvls > 0) ? jpc_tsfb_synthesize2(tsfb,",
      "",
      "[Added Lines]",
      "151:  return (tsfb->numlvls > 0 && jas_seq2d_size(a)) ?",
      "152:    jpc_tsfb_synthesize2(tsfb,",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cfa945c7246407cb8ceeb7f6cb205c60295c906f",
      "candidate_info": {
        "commit_hash": "cfa945c7246407cb8ceeb7f6cb205c60295c906f",
        "repo": "mdadams/jasper",
        "commit_url": "https://github.com/mdadams/jasper/commit/cfa945c7246407cb8ceeb7f6cb205c60295c906f",
        "files": [
          "src/libjasper/base/jas_seq.c",
          "src/libjasper/include/jasper/jas_math.h",
          "src/libjasper/include/jasper/jas_seq.h",
          "src/libjasper/jpc/jpc_fix.h",
          "src/libjasper/jpc/jpc_mct.c"
        ],
        "message": "Introduced jas_fast32_asl, jas_fast32_asr, and friends in order to pull all undefined behavior for left and right shift of (negative) integers into a small number of places and provide a means to have UBSAN ignore this ugliness.",
        "before_after_code_files": [
          "src/libjasper/base/jas_seq.c||src/libjasper/base/jas_seq.c",
          "src/libjasper/include/jasper/jas_math.h||src/libjasper/include/jasper/jas_math.h",
          "src/libjasper/include/jasper/jas_seq.h||src/libjasper/include/jasper/jas_seq.h",
          "src/libjasper/jpc/jpc_fix.h||src/libjasper/jpc/jpc_fix.h",
          "src/libjasper/jpc/jpc_mct.c||src/libjasper/jpc/jpc_mct.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/libjasper/include/jasper/jas_math.h||src/libjasper/include/jasper/jas_math.h",
            "src/libjasper/include/jasper/jas_seq.h||src/libjasper/include/jasper/jas_seq.h"
          ],
          "candidate": [
            "src/libjasper/include/jasper/jas_math.h||src/libjasper/include/jasper/jas_math.h",
            "src/libjasper/include/jasper/jas_seq.h||src/libjasper/include/jasper/jas_seq.h"
          ]
        }
      },
      "candidate_diff": {
        "src/libjasper/base/jas_seq.c||src/libjasper/base/jas_seq.c": [
          "File: src/libjasper/base/jas_seq.c -> src/libjasper/base/jas_seq.c"
        ],
        "src/libjasper/include/jasper/jas_math.h||src/libjasper/include/jasper/jas_math.h": [
          "File: src/libjasper/include/jasper/jas_math.h -> src/libjasper/include/jasper/jas_math.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "121: {",
          "122:  assert(n >= 0);",
          "123:  return x >> n;",
          "124: }",
          "128: {",
          "129:  assert(n >= 0);",
          "130:  return x << n;",
          "131: }",
          "",
          "[Removed Lines]",
          "119: __attribute__((no_sanitize(\"undefined\")))",
          "120: inline static jas_int_asr(int x, int n)",
          "126: __attribute__((no_sanitize(\"undefined\")))",
          "127: inline static jas_int_asl(int x, int n)",
          "",
          "[Added Lines]",
          "119: __attribute__ ((no_sanitize_undefined))",
          "120: inline static int jas_int_asr(int x, int n)",
          "129: __attribute__ ((no_sanitize_undefined))",
          "130: inline static int jas_int_asl(int x, int n)",
          "136:  return x << n;",
          "137: }",
          "139: __attribute__ ((no_sanitize_undefined))",
          "140: inline static int jas_fast32_asr(int_fast32_t x, int n)",
          "141: {",
          "142:  assert(n >= 0);",
          "146:  return x >> n;",
          "147: }",
          "149: __attribute__ ((no_sanitize_undefined))",
          "150: inline static int jas_fast32_asl(int_fast32_t x, int n)",
          "151: {",
          "152:  assert(n >= 0);",
          "",
          "---------------"
        ],
        "src/libjasper/include/jasper/jas_seq.h||src/libjasper/include/jasper/jas_seq.h": [
          "File: src/libjasper/include/jasper/jas_seq.h -> src/libjasper/include/jasper/jas_seq.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "79: #include <jasper/jas_stream.h>",
          "80: #include <jasper/jas_types.h>",
          "82: #ifdef __cplusplus",
          "83: extern \"C\" {",
          "84: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82: #include <jasper/jas_math.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "240: jas_matrix_t *jas_matrix_input(FILE *);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "244: #define jas_seqent_asl jas_fast32_asl",
          "245: #define jas_seqent_asr jas_fast32_asr",
          "",
          "---------------"
        ],
        "src/libjasper/jpc/jpc_fix.h||src/libjasper/jpc/jpc_fix.h": [
          "File: src/libjasper/jpc/jpc_fix.h -> src/libjasper/jpc/jpc_fix.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "119: #define jpc_fix_div(x, y) \\",
          "120:  JAS_FIX_DIV(jpc_fix_t, JPC_FIX_FRACBITS, jpc_fix_big_t, x, y)",
          "121: #define jpc_fix_neg(x)  JAS_FIX_NEG(jpc_fix_t, JPC_FIX_FRACBITS, x)",
          "125: #define jpc_fix_pluseq(x, y) JAS_FIX_PLUSEQ(jpc_fix_t, JPC_FIX_FRACBITS, x, y)",
          "126: #define jpc_fix_minuseq(x, y) JAS_FIX_MINUSEQ(jpc_fix_t, JPC_FIX_FRACBITS, x, y)",
          "",
          "[Removed Lines]",
          "122: #define jpc_fix_asl(x, n) JAS_FIX_ASL(jpc_fix_t, JPC_FIX_FRACBITS, x, n)",
          "123: #define jpc_fix_asr(x, n) JAS_FIX_ASR(jpc_fix_t, JPC_FIX_FRACBITS, x, n)",
          "",
          "[Added Lines]",
          "124: #define jpc_fix_asl jas_fast32_asl",
          "125: #define jpc_fix_asr jas_fast32_asr",
          "",
          "---------------"
        ],
        "src/libjasper/jpc/jpc_mct.c||src/libjasper/jpc/jpc_mct.c": [
          "File: src/libjasper/jpc/jpc_mct.c -> src/libjasper/jpc/jpc_mct.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "115:    r = *c0p;",
          "116:    g = *c1p;",
          "117:    b = *c2p;",
          "119:    u = b - g;",
          "120:    v = r - g;",
          "",
          "[Removed Lines]",
          "118:    y = (r + (g << 1) + b) >> 2;",
          "",
          "[Added Lines]",
          "119:    y = jpc_fix_asr(r + jpc_fix_asl(g, 1) + b, 2);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b032fe7fedd0b856bbe5bd7186fc1d22c03ade9f",
      "candidate_info": {
        "commit_hash": "b032fe7fedd0b856bbe5bd7186fc1d22c03ade9f",
        "repo": "mdadams/jasper",
        "commit_url": "https://github.com/mdadams/jasper/commit/b032fe7fedd0b856bbe5bd7186fc1d22c03ade9f",
        "files": [
          "configure.ac",
          "src/libjasper/include/jasper/jas_math.h"
        ],
        "message": "The function attribute for ignoring UB in certain places in the code was GCC specific.  Now, the case of Clang should be covered as well (although I cannot test this with the ancient version of Clang on my machine).",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/libjasper/include/jasper/jas_math.h||src/libjasper/include/jasper/jas_math.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/libjasper/include/jasper/jas_math.h||src/libjasper/include/jasper/jas_math.h"
          ],
          "candidate": [
            "src/libjasper/include/jasper/jas_math.h||src/libjasper/include/jasper/jas_math.h"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "136:   unless the JasPer software is being built under Microsoft Windows",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "135: #if defined(__GNUC__)",
          "136: #define JAS_ATTRIBUTE_DISABLE_USAN \\",
          "137:   __attribute__((no_sanitize_undefined))",
          "138: #elif defined(__clang__)",
          "139: #define JAS_ATTRIBUTE_DISABLE_USAN \\",
          "140:   __attribute__((no_sanitize(\"undefined\")))",
          "141: #else",
          "142: #define JAS_ATTRIBUTE_DISABLE_USAN",
          "143: #endif",
          "",
          "---------------"
        ],
        "src/libjasper/include/jasper/jas_math.h||src/libjasper/include/jasper/jas_math.h": [
          "File: src/libjasper/include/jasper/jas_math.h -> src/libjasper/include/jasper/jas_math.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "120: inline static int jas_int_asr(int x, int n)",
          "121: {",
          "122:  assert(n >= 0);",
          "",
          "[Removed Lines]",
          "119: __attribute__ ((no_sanitize_undefined))",
          "",
          "[Added Lines]",
          "119: JAS_ATTRIBUTE_DISABLE_USAN",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "126:  return x >> n;",
          "127: }",
          "130: inline static int jas_int_asl(int x, int n)",
          "131: {",
          "132:  assert(n >= 0);",
          "",
          "[Removed Lines]",
          "129: __attribute__ ((no_sanitize_undefined))",
          "",
          "[Added Lines]",
          "129: JAS_ATTRIBUTE_DISABLE_USAN",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "136:  return x << n;",
          "137: }",
          "140: inline static int jas_fast32_asr(int_fast32_t x, int n)",
          "141: {",
          "142:  assert(n >= 0);",
          "",
          "[Removed Lines]",
          "139: __attribute__ ((no_sanitize_undefined))",
          "",
          "[Added Lines]",
          "139: JAS_ATTRIBUTE_DISABLE_USAN",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "146:  return x >> n;",
          "147: }",
          "150: inline static int jas_fast32_asl(int_fast32_t x, int n)",
          "151: {",
          "152:  assert(n >= 0);",
          "",
          "[Removed Lines]",
          "149: __attribute__ ((no_sanitize_undefined))",
          "",
          "[Added Lines]",
          "149: JAS_ATTRIBUTE_DISABLE_USAN",
          "",
          "---------------"
        ]
      }
    }
  ]
}