{
  "cve_id": "CVE-2015-8865",
  "cve_desc": "The file_check_mem function in funcs.c in file before 5.23, as used in the Fileinfo component in PHP before 5.5.34, 5.6.x before 5.6.20, and 7.x before 7.0.5, mishandles continuation-level jumps, which allows context-dependent attackers to cause a denial of service (buffer overflow and application crash) or possibly execute arbitrary code via a crafted magic file.",
  "repo": "file/file",
  "patch_hash": "6713ca45e7757297381f4b4cdb9cf5e624a9ad36",
  "patch_info": {
    "commit_hash": "6713ca45e7757297381f4b4cdb9cf5e624a9ad36",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/6713ca45e7757297381f4b4cdb9cf5e624a9ad36",
    "files": [
      "src/funcs.c"
    ],
    "message": "PR/454: Fix memory corruption when the continuation level jumps by more than 20 in a single step.",
    "before_after_code_files": [
      "src/funcs.c||src/funcs.c"
    ]
  },
  "patch_diff": {
    "src/funcs.c||src/funcs.c": [
      "File: src/funcs.c -> src/funcs.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: #include \"file.h\"",
      "29: #ifndef lint",
      "33: #include \"magic.h\"",
      "",
      "[Removed Lines]",
      "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.80 2015/01/02 21:29:39 christos Exp $\")",
      "",
      "[Added Lines]",
      "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.81 2015/05/28 19:26:59 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "416:  size_t len;",
      "418:  if (level >= ms->c.len) {",
      "420:   ms->c.li = CAST(struct level_info *, (ms->c.li == NULL) ?",
      "421:       malloc(len) :",
      "422:       realloc(ms->c.li, len));",
      "",
      "[Removed Lines]",
      "419:   len = (ms->c.len += 20) * sizeof(*ms->c.li);",
      "",
      "[Added Lines]",
      "419:   len = (ms->c.len = 20 + level) * sizeof(*ms->c.li);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b74175e236c34beeb930c95bb25300c92a205cd3",
      "candidate_info": {
        "commit_hash": "b74175e236c34beeb930c95bb25300c92a205cd3",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/b74175e236c34beeb930c95bb25300c92a205cd3",
        "files": [
          "src/file.h",
          "src/funcs.c",
          "src/readcdf.c"
        ],
        "message": "PR/518: Fall back to use setlocale() for the OS's that don't support newlocale()/uselocale(). This is necessary because some regex patterns we use (apple) have non-ascii characters in them.",
        "before_after_code_files": [
          "src/file.h||src/file.h",
          "src/funcs.c||src/funcs.c",
          "src/readcdf.c||src/readcdf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/funcs.c||src/funcs.c"
          ],
          "candidate": [
            "src/funcs.c||src/funcs.c"
          ]
        }
      },
      "candidate_diff": {
        "src/file.h||src/file.h": [
          "File: src/file.h -> src/file.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "509: #define USE_C_LOCALE",
          "510:  locale_t old_lc_ctype;",
          "511:  locale_t c_lc_ctype;",
          "512: #endif",
          "513:  int rc;",
          "514:  regex_t rx;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "512: #else",
          "513:  char *old_lc_ctype;",
          "",
          "---------------"
        ],
        "src/funcs.c||src/funcs.c": [
          "File: src/funcs.c -> src/funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "33: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.86 2015/09/17 01:14:09 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.87 2015/09/22 15:40:32 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "494:  assert(rx->c_lc_ctype != NULL);",
          "495:  rx->old_lc_ctype = uselocale(rx->c_lc_ctype);",
          "496:  assert(rx->old_lc_ctype != NULL);",
          "497: #endif",
          "498:  rx->pat = pat;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "497: #else",
          "498:  rx->old_lc_ctype = setlocale(LC_CTYPE, \"C\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "516: #ifdef USE_C_LOCALE",
          "517:  (void)uselocale(rx->old_lc_ctype);",
          "518:  freelocale(rx->c_lc_ctype);",
          "519: #endif",
          "520: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "521: #else",
          "522:  (void)setlocale(LC_CTYPE, rx->old_lc_ctype);",
          "",
          "---------------"
        ],
        "src/readcdf.c||src/readcdf.c": [
          "File: src/readcdf.c -> src/readcdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #include \"file.h\"",
          "28: #ifndef lint",
          "30: #endif",
          "32: #include <assert.h>",
          "",
          "[Removed Lines]",
          "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.53 2015/04/09 20:01:41 christos Exp $\")",
          "",
          "[Added Lines]",
          "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.54 2015/11/23 21:20:50 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "120:  assert(c_lc_ctype != NULL);",
          "121:  old_lc_ctype = uselocale(c_lc_ctype);",
          "122:  assert(old_lc_ctype != NULL);",
          "123: #endif",
          "124:  for (i = 0; nv[i].pattern != NULL; i++)",
          "125:   if (strcasestr(vbuf, nv[i].pattern) != NULL) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123: #else",
          "124:  char *old_lc_ctype = setlocale(LC_CTYPE, \"C\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "132: #ifdef USE_C_LOCALE",
          "133:  (void)uselocale(old_lc_ctype);",
          "134:  freelocale(c_lc_ctype);",
          "135: #endif",
          "136:  return rv;",
          "137: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "137: #else",
          "138:  setlocale(LC_CTYPE, old_lc_ctype);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a92604eb62aa969ee570d3da83b47aae07767151",
      "candidate_info": {
        "commit_hash": "a92604eb62aa969ee570d3da83b47aae07767151",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/a92604eb62aa969ee570d3da83b47aae07767151",
        "files": [
          "src/funcs.c"
        ],
        "message": "PR/454: Fix memory corruption when the continuation level jumps by more than 20 in a single step.",
        "before_after_code_files": [
          "src/funcs.c||src/funcs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/funcs.c||src/funcs.c"
          ],
          "candidate": [
            "src/funcs.c||src/funcs.c"
          ]
        }
      },
      "candidate_diff": {
        "src/funcs.c||src/funcs.c": [
          "File: src/funcs.c -> src/funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "33: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.81 2015/05/28 19:26:59 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.82 2015/06/03 18:01:20 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "416:  size_t len;",
          "418:  if (level >= ms->c.len) {",
          "420:   ms->c.li = CAST(struct level_info *, (ms->c.li == NULL) ?",
          "421:       malloc(len) :",
          "422:       realloc(ms->c.li, len));",
          "",
          "[Removed Lines]",
          "419:   len = (ms->c.len += 20) * sizeof(*ms->c.li);",
          "",
          "[Added Lines]",
          "419:   len = (ms->c.len = 20 + level) * sizeof(*ms->c.li);",
          "",
          "---------------"
        ]
      }
    }
  ]
}