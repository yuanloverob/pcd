{
  "cve_id": "CVE-2019-20218",
  "cve_desc": "selectExpander in select.c in SQLite 3.30.1 proceeds with WITH stack unwinding even after a parsing error.",
  "repo": "sqlite/sqlite",
  "patch_hash": "a6c1a71cde082e09750465d5675699062922e387",
  "patch_info": {
    "commit_hash": "a6c1a71cde082e09750465d5675699062922e387",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/a6c1a71cde082e09750465d5675699062922e387",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/altertab3.test"
    ],
    "message": "Do not attempt to unwind the WITH stack in the Parse object following an error. This fixes a separate case to [de6e6d68].\n\nFossilOrigin-Name: d29edef93451cc67a5d69c1cce1b1832d9ca8fff1f600afdd51338b74d077b92",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/altertab3.test||test/altertab3.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 597896ed0ae9e2960a8f39576bd7f77a11dccc1da84b6a44ebb5c38d90ebc330",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4982:     return WRC_Abort;",
      "4983:   }",
      "",
      "[Removed Lines]",
      "4981:   if( db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "[Added Lines]",
      "4981:   if( pParse->nErr || db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "---------------"
    ],
    "test/altertab3.test||test/altertab3.test": [
      "File: test/altertab3.test -> test/altertab3.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "531:   ALTER TABLE t1 RENAME TO t1x;",
      "532: } {1 {error in trigger r1: no such table: main.t2}}",
      "534: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "534: #------------------------------------------------------------------------",
      "535: #",
      "536: reset_db",
      "537: do_execsql_test 23.1 {",
      "538:   CREATE TABLE v0 (a);",
      "539:   CREATE VIEW v2 (v3) AS",
      "540:     WITH x1 AS (SELECT * FROM v2)",
      "541:     SELECT v3 AS x, v3 AS y FROM v2;",
      "542: }",
      "544: do_catchsql_test 23.2 {",
      "545:   SELECT * FROM v2",
      "546: } {1 {view v2 is circularly defined}}",
      "548: db close",
      "549: sqlite3 db test.db",
      "551: do_catchsql_test 23.3 {",
      "552:   ALTER TABLE v0 RENAME TO t3 ;",
      "553: } {1 {error in view v2: view v2 is circularly defined}}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2bc5cf9ae93aea1a77f52432dc949f3b4a38ee32",
      "candidate_info": {
        "commit_hash": "2bc5cf9ae93aea1a77f52432dc949f3b4a38ee32",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/2bc5cf9ae93aea1a77f52432dc949f3b4a38ee32",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/alter.c",
          "test/altertab3.test"
        ],
        "message": "Add a NEVER() to the ALTER TABLE fix in check-in [1d2e53a39b87e364]\n\nFossilOrigin-Name: c7309ed3c7588c7e51e09418bf5cfd4611539b44c39cef9ed4ae0e385bae7625",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/alter.c||src/alter.c",
          "test/altertab3.test||test/altertab3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "test/altertab3.test||test/altertab3.test"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "test/altertab3.test||test/altertab3.test"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ed28aaa4851202111a502f883ca06359d89b25bba4055c29d7bce2b501cfcc68",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/alter.c||src/alter.c": [
          "File: src/alter.c -> src/alter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "760:   Parse *pParse = pWalker->pParse;",
          "761:   int i;",
          "762:   if( pParse->nErr ) return WRC_Abort;",
          "764:   if( ALWAYS(p->pEList) ){",
          "765:     ExprList *pList = p->pEList;",
          "766:     for(i=0; i<pList->nExpr; i++){",
          "",
          "[Removed Lines]",
          "763:   if( p->selFlags & SF_View ) return WRC_Prune;",
          "",
          "[Added Lines]",
          "763:   if( NEVER(p->selFlags & SF_View) ) return WRC_Prune;",
          "",
          "---------------"
        ],
        "test/altertab3.test||test/altertab3.test": [
          "File: test/altertab3.test -> test/altertab3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "504:   CREATE VIEW v2(b) AS WITH t3 AS (SELECT b FROM v2) SELECT * FROM t3;",
          "505: }",
          "508: do_catchsql_test 22.4 {",
          "509:   ALTER TABLE t1 RENAME TO t4;",
          "510: } {1 {error in view v2: view v2 is circularly defined}}",
          "",
          "[Removed Lines]",
          "507: breakpoint",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "130dbc3d96d2f673c75864b032fa7e24a08cb3a4",
      "candidate_info": {
        "commit_hash": "130dbc3d96d2f673c75864b032fa7e24a08cb3a4",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/130dbc3d96d2f673c75864b032fa7e24a08cb3a4",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "Add recent interesting cases from dbsqlfuzz.\n\nFossilOrigin-Name: f06ef3d75d85545dd58c6dda10f7ad04fafbb7ae8706b3821be21f86a94795f1",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5beb6dc9bc2d3d0003e33488df9c01aaf28c41c30fd9ca35543cbe3ec5a8d9ce",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6117a17323148469048563ff740c8ee4eb9ffaa3",
      "candidate_info": {
        "commit_hash": "6117a17323148469048563ff740c8ee4eb9ffaa3",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/6117a17323148469048563ff740c8ee4eb9ffaa3",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/affinity2.test"
        ],
        "message": "Avoid running a couple of tests in affinity2.test as part of the valgrind permutations, as the way floating point computations are simulated by valgrind causes them to fail.\n\nFossilOrigin-Name: 7f9a4b6015ac332a04d3e394a6b3210fc95253d8786a261178a5639cb8d9d987",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/affinity2.test||test/affinity2.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a561a656ff50efc0103da3988626cea3ef05757403b83960f2aa6c0a48c2765e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/affinity2.test||test/affinity2.test": [
          "File: test/affinity2.test -> test/affinity2.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "119: # 2019-08-30 ticket https://www.sqlite.org/src/info/40812aea1fde9594",
          "120: #",
          "131: finish_test",
          "",
          "[Removed Lines]",
          "121: do_execsql_test 600 {",
          "122:   DROP TABLE IF EXISTS t0;",
          "123:   CREATE TABLE t0(c0 REAL UNIQUE);",
          "124:   INSERT INTO t0(c0) VALUES (3175546974276630385);",
          "125:   SELECT 3175546974276630385 < c0 FROM t0;",
          "126: } {1}",
          "127: do_execsql_test 601 {",
          "128:   SELECT 1 FROM t0 WHERE 3175546974276630385 < c0;",
          "129: } {1}",
          "",
          "[Added Lines]",
          "121: # Due to some differences in floating point computations, these tests do not",
          "122: # work under valgrind.",
          "123: #",
          "124: if {![info exists ::G(valgrind)]} {",
          "125:   do_execsql_test 600 {",
          "126:     DROP TABLE IF EXISTS t0;",
          "127:     CREATE TABLE t0(c0 REAL UNIQUE);",
          "128:     INSERT INTO t0(c0) VALUES (3175546974276630385);",
          "129:     SELECT 3175546974276630385 < c0 FROM t0;",
          "130:   } {1}",
          "131:   do_execsql_test 601 {",
          "132:     SELECT 1 FROM t0 WHERE 3175546974276630385 < c0;",
          "133:   } {1}",
          "134: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4d29448114c5d99e1e187bf3adcdce7d6479d6f8",
      "candidate_info": {
        "commit_hash": "4d29448114c5d99e1e187bf3adcdce7d6479d6f8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4d29448114c5d99e1e187bf3adcdce7d6479d6f8",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c"
        ],
        "message": "Reorder two comparisons for a small performance gain in OP_Transaction.\n\nFossilOrigin-Name: d7667f6560318272c8b35b478e29b0ed134105dfd119a2fd53ef0490442c60cc",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 17ce1c49cb0ed6fdd8c7c33431bc2afa217f1092c99b8dd608890a8e7aec7fb1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3456:       goto abort_due_to_error;",
          "3457:     }",
          "3460:      && (db->autoCommit==0 || db->nVdbeRead>1)",
          "3461:     ){",
          "3462:       assert( sqlite3BtreeIsInTrans(pBt) );",
          "",
          "[Removed Lines]",
          "3459:     if( pOp->p2 && p->usesStmtJournal",
          "",
          "[Added Lines]",
          "3459:     if( p->usesStmtJournal",
          "3460:      && pOp->p2",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6b86e51eea956e5b3532f4042d8a314556746bef",
      "candidate_info": {
        "commit_hash": "6b86e51eea956e5b3532f4042d8a314556746bef",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/6b86e51eea956e5b3532f4042d8a314556746bef",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/prepare.c",
          "src/sqliteInt.h",
          "src/vdbe.c"
        ],
        "message": "If the OP_ParseSchema opcode with a non-NULL P4 operand does not parse any rows out of the sqlite_master table, that indicates that the sqlite_master table is corrupt, so raise an SQLITE_CORRUPT error.\n\nFossilOrigin-Name: 598d7358e7329f0de6e3defc217665909e46874258ac29592ee2fd53e6411cda",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/prepare.c||src/prepare.c",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 444c7c99beb9f8b82963e9784aa2be54124c7011f4771122b4f608c02aa26408",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/prepare.c||src/prepare.c": [
          "File: src/prepare.c -> src/prepare.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:   UNUSED_PARAMETER2(NotUsed, argc);",
          "66:   assert( sqlite3_mutex_held(db->mutex) );",
          "67:   DbClearProperty(db, iDb, DB_Empty);",
          "68:   if( db->mallocFailed ){",
          "69:     corruptSchema(pData, argv[0], 0);",
          "70:     return 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68:   pData->nInitRow++;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "176:   initData.rc = SQLITE_OK;",
          "177:   initData.pzErrMsg = pzErrMsg;",
          "178:   initData.mInitFlags = mFlags;",
          "179:   sqlite3InitCallback(&initData, 3, (char **)azArg, 0);",
          "180:   if( initData.rc ){",
          "181:     rc = initData.rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "180:   initData.nInitRow = 0;",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5799:       assert( db->init.busy==0 );",
          "5800:       db->init.busy = 1;",
          "5801:       initData.rc = SQLITE_OK;",
          "5802:       assert( !db->mallocFailed );",
          "5803:       rc = sqlite3_exec(db, zSql, sqlite3InitCallback, &initData, 0);",
          "5804:       if( rc==SQLITE_OK ) rc = initData.rc;",
          "5805:       sqlite3DbFreeNN(db, zSql);",
          "5806:       db->init.busy = 0;",
          "5807:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5802:       initData.nInitRow = 0;",
          "5806:       if( rc==SQLITE_OK && initData.nInitRow==0 ){",
          "5810:         rc = SQLITE_CORRUPT_BKPT;",
          "5811:       }",
          "",
          "---------------"
        ]
      }
    }
  ]
}