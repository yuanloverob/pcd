{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1dd8987c2d5e1f3b7973d91c2b02cd1d45912631",
      "candidate_info": {
        "commit_hash": "1dd8987c2d5e1f3b7973d91c2b02cd1d45912631",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/1dd8987c2d5e1f3b7973d91c2b02cd1d45912631",
        "files": [
          "cs.c"
        ],
        "message": "enable winkernel default memmory mgmt",
        "before_after_code_files": [
          "cs.c||cs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cs.c||cs.c": [
          "File: cs.c -> cs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: #include \"utils.h\"",
          "18: #include \"MCRegisterInfo.h\"",
          "21: #define INSN_CACHE_SIZE 32",
          "22: #else",
          "",
          "[Removed Lines]",
          "20: #if !defined(CAPSTONE_HAS_OSXKERNEL) && !defined(CAPSTONE_DIET)",
          "",
          "[Added Lines]",
          "20: #if defined(_KERNEL_MODE)",
          "21: #include \"windows\\winkernel_mm.h\"",
          "22: #endif",
          "24: #if !defined(CAPSTONE_HAS_OSXKERNEL) && !defined(CAPSTONE_DIET) && !defined(_KERNEL_MODE)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79: unsigned int all_arch = 0;",
          "83: cs_malloc_t cs_mem_malloc = malloc;",
          "84: cs_calloc_t cs_mem_calloc = calloc;",
          "85: cs_realloc_t cs_mem_realloc = realloc;",
          "86: cs_free_t cs_mem_free = free;",
          "87: cs_vsnprintf_t cs_vsnprintf = vsnprintf;",
          "88: #else",
          "89: extern void* kern_os_malloc(size_t size);",
          "90: extern void kern_os_free(void* addr);",
          "",
          "[Removed Lines]",
          "81: #ifdef CAPSTONE_USE_SYS_DYN_MEM",
          "82: #ifndef CAPSTONE_HAS_OSXKERNEL",
          "",
          "[Added Lines]",
          "85: #if defined(CAPSTONE_USE_SYS_DYN_MEM)",
          "86: #if !defined(CAPSTONE_HAS_OSXKERNEL) && !defined(_KERNEL_MODE)",
          "92: #elif defined(_KERNEL_MODE)",
          "93: cs_malloc_t cs_mem_malloc = cs_winkernel_malloc;",
          "94: cs_calloc_t cs_mem_calloc = cs_winkernel_calloc;",
          "95: cs_realloc_t cs_mem_realloc = cs_winkernel_realloc;",
          "96: cs_free_t cs_mem_free = cs_winkernel_free;",
          "97: cs_vsnprintf_t cs_vsnprintf = cs_winkernel_vsnprintf;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2f0e215a57ed78e3974b3ec347a60ec51e1a479d",
      "candidate_info": {
        "commit_hash": "2f0e215a57ed78e3974b3ec347a60ec51e1a479d",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/2f0e215a57ed78e3974b3ec347a60ec51e1a479d",
        "files": [
          "arch/X86/X86Disassembler.c",
          "arch/X86/X86DisassemblerDecoder.c",
          "arch/X86/X86DisassemblerDecoder.h"
        ],
        "message": "add dedicated variables such as prefix2e, prefix36, prefix66, prefix67, etc",
        "before_after_code_files": [
          "arch/X86/X86Disassembler.c||arch/X86/X86Disassembler.c",
          "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c",
          "arch/X86/X86DisassemblerDecoder.h||arch/X86/X86DisassemblerDecoder.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86Disassembler.c||arch/X86/X86Disassembler.c": [
          "File: arch/X86/X86Disassembler.c -> arch/X86/X86Disassembler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "95:  unsigned baseRegNo;",
          "97:  if (insn->mode == MODE_64BIT)",
          "99:  else if (insn->mode == MODE_32BIT)",
          "101:  else {",
          "104:  }",
          "106:  MCOperand_CreateReg0(mcInst, baseRegNo);",
          "",
          "[Removed Lines]",
          "98:   baseRegNo = insn->prefixPresent[0x67] ? X86_ESI : X86_RSI;",
          "100:   baseRegNo = insn->prefixPresent[0x67] ? X86_SI : X86_ESI;",
          "103:   baseRegNo = insn->prefixPresent[0x67] ? X86_ESI : X86_SI;",
          "",
          "[Added Lines]",
          "98:   baseRegNo = insn->isPrefix67 ? X86_ESI : X86_RSI;",
          "100:   baseRegNo = insn->isPrefix67 ? X86_SI : X86_ESI;",
          "103:   baseRegNo = insn->isPrefix67 ? X86_ESI : X86_SI;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "119:  unsigned baseRegNo;",
          "121:  if (insn->mode == MODE_64BIT)",
          "123:  else if (insn->mode == MODE_32BIT)",
          "125:  else {",
          "128:  }",
          "130:  MCOperand_CreateReg0(mcInst, baseRegNo);",
          "",
          "[Removed Lines]",
          "122:   baseRegNo = insn->prefixPresent[0x67] ? X86_EDI : X86_RDI;",
          "124:   baseRegNo = insn->prefixPresent[0x67] ? X86_DI : X86_EDI;",
          "127:   baseRegNo = insn->prefixPresent[0x67] ? X86_EDI : X86_DI;",
          "",
          "[Added Lines]",
          "122:   baseRegNo = insn->isPrefix67 ? X86_EDI : X86_RDI;",
          "124:   baseRegNo = insn->isPrefix67 ? X86_DI : X86_EDI;",
          "127:   baseRegNo = insn->isPrefix67 ? X86_EDI : X86_DI;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "791:  info.offset = address;",
          "793:  memset(&insn, 0, offsetof(InternalInstruction, reader));",
          "807:  if (instr->flat_insn->detail) {",
          "808:   instr->flat_insn->detail->x86.op_count = 0;",
          "",
          "[Removed Lines]",
          "795:  insn.prefixPresent[0x26] = 0;",
          "796:  insn.prefixPresent[0x2e] = 0;",
          "797:  insn.prefixPresent[0x36] = 0;",
          "798:  insn.prefixPresent[0x3e] = 0;",
          "799:  insn.prefixPresent[0x64] = 0;",
          "800:  insn.prefixPresent[0x65] = 0;",
          "801:  insn.prefixPresent[0x66] = 0;",
          "802:  insn.prefixPresent[0x67] = 0;",
          "803:  insn.prefixPresent[0xf0] = 0;",
          "804:  insn.prefixPresent[0xf2] = 0;",
          "805:  insn.prefixPresent[0xf3] = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c": [
          "File: arch/X86/X86DisassemblerDecoder.c -> arch/X86/X86DisassemblerDecoder.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "352: static void setPrefixPresent(struct InternalInstruction *insn,",
          "353:   uint8_t prefix, uint64_t location)",
          "354: {",
          "357: }",
          "",
          "[Removed Lines]",
          "355:  insn->prefixPresent[prefix] = 1;",
          "356:  insn->prefixLocations[prefix] = location;",
          "",
          "[Added Lines]",
          "355:  switch (prefix)",
          "356:  {",
          "357:  case 0x26:",
          "358:   insn->isPrefix26 = true;",
          "359:   insn->prefix26 = location;",
          "360:   break;",
          "361:  case 0x2e:",
          "362:   insn->isPrefix2e = true;",
          "363:   insn->prefix2e = location;",
          "364:   break;",
          "365:  case 0x36:",
          "366:   insn->isPrefix36 = true;",
          "367:   insn->prefix36 = location;",
          "368:   break;",
          "369:  case 0x3e:",
          "370:   insn->isPrefix3e = true;",
          "371:   insn->prefix3e = location;",
          "372:   break;",
          "373:  case 0x64:",
          "374:   insn->isPrefix64 = true;",
          "375:   insn->prefix64 = location;",
          "376:   break;",
          "377:  case 0x65:",
          "378:   insn->isPrefix65 = true;",
          "379:   insn->prefix65 = location;",
          "380:   break;",
          "381:  case 0x66:",
          "382:   insn->isPrefix66 = true;",
          "383:   insn->prefix66 = location;",
          "384:   break;",
          "385:  case 0x67:",
          "386:   insn->isPrefix67 = true;",
          "387:   insn->prefix67 = location;",
          "388:   break;",
          "389:  case 0xf0:",
          "390:   insn->isPrefixf0 = true;",
          "391:   insn->prefixf0 = location;",
          "392:   break;",
          "393:  case 0xf2:",
          "394:   insn->isPrefixf2 = true;",
          "395:   insn->prefixf2 = location;",
          "396:   break;",
          "397:  case 0xf3:",
          "398:   insn->isPrefixf3 = true;",
          "399:   insn->prefixf3 = location;",
          "400:   break;",
          "401:  default:",
          "402:   break;",
          "403:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "368: static bool isPrefixAtLocation(struct InternalInstruction *insn, uint8_t prefix,",
          "369:   uint64_t location)",
          "370: {",
          "376: }",
          "",
          "[Removed Lines]",
          "371:  if (insn->prefixPresent[prefix] == 1 &&",
          "372:    insn->prefixLocations[prefix] == location)",
          "373:   return true;",
          "374:  else",
          "375:   return false;",
          "",
          "[Added Lines]",
          "418:  switch (prefix)",
          "419:  {",
          "420:  case 0x26:",
          "421:   if (insn->isPrefix26 && insn->prefix26 == location)",
          "422:    return true;",
          "423:   break;",
          "424:  case 0x2e:",
          "425:   if (insn->isPrefix2e && insn->prefix2e == location)",
          "426:    return true;",
          "427:   break;",
          "428:  case 0x36:",
          "429:   if (insn->isPrefix36 && insn->prefix36 == location)",
          "430:    return true;",
          "431:   break;",
          "432:  case 0x3e:",
          "433:   if (insn->isPrefix3e && insn->prefix3e == location)",
          "434:    return true;",
          "435:   break;",
          "436:  case 0x64:",
          "437:   if (insn->isPrefix64 && insn->prefix64 == location)",
          "438:    return true;",
          "439:   break;",
          "440:  case 0x65:",
          "441:   if (insn->isPrefix65 && insn->prefix65 == location)",
          "442:    return true;",
          "443:   break;",
          "444:  case 0x66:",
          "445:   if (insn->isPrefix66 && insn->prefix66 == location)",
          "446:    return true;",
          "447:   break;",
          "448:  case 0x67:",
          "449:   if (insn->isPrefix67 && insn->prefix67 == location)",
          "450:    return true;",
          "451:   break;",
          "452:  case 0xf0:",
          "453:   if (insn->isPrefixf0 && insn->prefixf0 == location)",
          "454:    return true;",
          "455:   break;",
          "456:  case 0xf2:",
          "457:   if (insn->isPrefixf2 && insn->prefixf2 == location)",
          "458:    return true;",
          "459:   break;",
          "460:  case 0xf3:",
          "461:   if (insn->isPrefixf3 && insn->prefixf3 == location)",
          "462:    return true;",
          "463:   break;",
          "464:  default:",
          "465:   break;",
          "466:  }",
          "467:  return false;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "488:     setPrefixPresent(insn, byte, prefixLocation);",
          "489:     insn->prefix0 = byte;",
          "490:     break;",
          "492:     insn->segmentOverride = SEG_OVERRIDE_CS;",
          "501:     setPrefixPresent(insn, byte, prefixLocation);",
          "502:     insn->prefix1 = byte;",
          "",
          "[Removed Lines]",
          "485:     insn->prefixPresent[0xf2] = 0;",
          "486:     insn->prefixPresent[0xf3] = 0;",
          "487:     insn->prefixPresent[0xf0] = 0;",
          "494:     insn->prefixPresent[0x2e] = 0;",
          "495:     insn->prefixPresent[0x36] = 0;",
          "496:     insn->prefixPresent[0x3e] = 0;",
          "497:     insn->prefixPresent[0x26] = 0;",
          "498:     insn->prefixPresent[0x64] = 0;",
          "499:     insn->prefixPresent[0x65] = 0;",
          "",
          "[Added Lines]",
          "577:     insn->isPrefixf2 = false;",
          "578:     insn->isPrefixf3 = false;",
          "579:     insn->isPrefixf0 = false;",
          "586:     insn->isPrefix2e = false;",
          "587:     insn->isPrefix36 = false;",
          "588:     insn->isPrefix3e = false;",
          "589:     insn->isPrefix26 = false;",
          "590:     insn->isPrefix64 = false;",
          "591:     insn->isPrefix65 = false;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "505:     insn->segmentOverride = SEG_OVERRIDE_SS;",
          "514:     setPrefixPresent(insn, byte, prefixLocation);",
          "515:     insn->prefix1 = byte;",
          "",
          "[Removed Lines]",
          "507:     insn->prefixPresent[0x2e] = 0;",
          "508:     insn->prefixPresent[0x36] = 0;",
          "509:     insn->prefixPresent[0x3e] = 0;",
          "510:     insn->prefixPresent[0x26] = 0;",
          "511:     insn->prefixPresent[0x64] = 0;",
          "512:     insn->prefixPresent[0x65] = 0;",
          "",
          "[Added Lines]",
          "599:     insn->isPrefix2e = false;",
          "600:     insn->isPrefix36 = false;",
          "601:     insn->isPrefix3e = false;",
          "602:     insn->isPrefix26 = false;",
          "603:     insn->isPrefix64 = false;",
          "604:     insn->isPrefix65 = false;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "518:     insn->segmentOverride = SEG_OVERRIDE_DS;",
          "527:     setPrefixPresent(insn, byte, prefixLocation);",
          "528:     insn->prefix1 = byte;",
          "",
          "[Removed Lines]",
          "520:     insn->prefixPresent[0x2e] = 0;",
          "521:     insn->prefixPresent[0x36] = 0;",
          "522:     insn->prefixPresent[0x3e] = 0;",
          "523:     insn->prefixPresent[0x26] = 0;",
          "524:     insn->prefixPresent[0x64] = 0;",
          "525:     insn->prefixPresent[0x65] = 0;",
          "",
          "[Added Lines]",
          "612:     insn->isPrefix2e = false;",
          "613:     insn->isPrefix36 = false;",
          "614:     insn->isPrefix3e = false;",
          "615:     insn->isPrefix26 = false;",
          "616:     insn->isPrefix64 = false;",
          "617:     insn->isPrefix65 = false;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "531:     insn->segmentOverride = SEG_OVERRIDE_ES;",
          "540:     setPrefixPresent(insn, byte, prefixLocation);",
          "541:     insn->prefix1 = byte;",
          "",
          "[Removed Lines]",
          "533:     insn->prefixPresent[0x2e] = 0;",
          "534:     insn->prefixPresent[0x36] = 0;",
          "535:     insn->prefixPresent[0x3e] = 0;",
          "536:     insn->prefixPresent[0x26] = 0;",
          "537:     insn->prefixPresent[0x64] = 0;",
          "538:     insn->prefixPresent[0x65] = 0;",
          "",
          "[Added Lines]",
          "625:     insn->isPrefix2e = false;",
          "626:     insn->isPrefix36 = false;",
          "627:     insn->isPrefix3e = false;",
          "628:     insn->isPrefix26 = false;",
          "629:     insn->isPrefix64 = false;",
          "630:     insn->isPrefix65 = false;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "544:     insn->segmentOverride = SEG_OVERRIDE_FS;",
          "553:     setPrefixPresent(insn, byte, prefixLocation);",
          "554:     insn->prefix1 = byte;",
          "",
          "[Removed Lines]",
          "546:     insn->prefixPresent[0x2e] = 0;",
          "547:     insn->prefixPresent[0x36] = 0;",
          "548:     insn->prefixPresent[0x3e] = 0;",
          "549:     insn->prefixPresent[0x26] = 0;",
          "550:     insn->prefixPresent[0x64] = 0;",
          "551:     insn->prefixPresent[0x65] = 0;",
          "",
          "[Added Lines]",
          "638:     insn->isPrefix2e = false;",
          "639:     insn->isPrefix36 = false;",
          "640:     insn->isPrefix3e = false;",
          "641:     insn->isPrefix26 = false;",
          "642:     insn->isPrefix64 = false;",
          "643:     insn->isPrefix65 = false;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "557:     insn->segmentOverride = SEG_OVERRIDE_GS;",
          "566:     setPrefixPresent(insn, byte, prefixLocation);",
          "567:     insn->prefix1 = byte;",
          "",
          "[Removed Lines]",
          "559:     insn->prefixPresent[0x2e] = 0;",
          "560:     insn->prefixPresent[0x36] = 0;",
          "561:     insn->prefixPresent[0x3e] = 0;",
          "562:     insn->prefixPresent[0x26] = 0;",
          "563:     insn->prefixPresent[0x64] = 0;",
          "564:     insn->prefixPresent[0x65] = 0;",
          "",
          "[Added Lines]",
          "651:     insn->isPrefix2e = false;",
          "652:     insn->isPrefix36 = false;",
          "653:     insn->isPrefix3e = false;",
          "654:     insn->isPrefix26 = false;",
          "655:     insn->isPrefix64 = false;",
          "656:     insn->isPrefix65 = false;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1179:  }",
          "1183:    !(attrMask & ATTR_OPSIZE)) {",
          "",
          "[Removed Lines]",
          "1182:  if ((insn->mode == MODE_16BIT || insn->prefixPresent[0x66]) &&",
          "",
          "[Added Lines]",
          "1274:  if ((insn->mode == MODE_16BIT || insn->isPrefix66) &&",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1207:   }",
          "1209:   if (is16BitEquivalent(instructionID, instructionIDWithOpsize) &&",
          "1211:    insn->instructionID = instructionIDWithOpsize;",
          "1212:    insn->spec = specifierForUID(instructionIDWithOpsize);",
          "1213:   } else {",
          "",
          "[Removed Lines]",
          "1210:     (insn->mode == MODE_16BIT) ^ insn->prefixPresent[0x66]) {",
          "",
          "[Added Lines]",
          "1302:     (insn->mode == MODE_16BIT) ^ insn->isPrefix66) {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2021: static bool checkPrefix(struct InternalInstruction *insn)",
          "2022: {",
          "2025:   switch(insn->instructionID) {",
          "2026:    default:",
          "",
          "[Removed Lines]",
          "2024:  if (insn->prefixPresent[0xf0]) {",
          "",
          "[Added Lines]",
          "2116:  if (insn->isPrefixf0) {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2197:  }",
          "2203:   if (insn->twoByteEscape == 0x0f) {",
          "",
          "[Removed Lines]",
          "2200:  if (insn->prefixPresent[0xf2]) {",
          "",
          "[Added Lines]",
          "2292:  if (insn->isPrefixf2) {",
          "",
          "---------------"
        ],
        "arch/X86/X86DisassemblerDecoder.h||arch/X86/X86DisassemblerDecoder.h": [
          "File: arch/X86/X86DisassemblerDecoder.h -> arch/X86/X86DisassemblerDecoder.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "555:   uint8_t operandSize;",
          "556:   uint8_t prefix0, prefix1, prefix2, prefix3;",
          "558:   uint8_t rexPrefix;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "558:   bool isPrefix26;",
          "559:   bool isPrefix2e;",
          "560:   bool isPrefix36;",
          "561:   bool isPrefix3e;",
          "562:   bool isPrefix64;",
          "563:   bool isPrefix65;",
          "564:   bool isPrefix66;",
          "565:   bool isPrefix67;",
          "566:   bool isPrefixf0;",
          "567:   bool isPrefixf2;",
          "568:   bool isPrefixf3;",
          "570:   uint64_t prefix26;",
          "571:   uint64_t prefix2e;",
          "572:   uint64_t prefix36;",
          "573:   uint64_t prefix3e;",
          "574:   uint64_t prefix64;",
          "575:   uint64_t prefix65;",
          "576:   uint64_t prefix66;",
          "577:   uint64_t prefix67;",
          "578:   uint64_t prefixf0;",
          "579:   uint64_t prefixf2;",
          "580:   uint64_t prefixf3;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "587:   byteReader_t reader;",
          "594:   const void* readerArg;",
          "",
          "[Removed Lines]",
          "590:   uint8_t prefixPresent[0x100];",
          "592:   uint64_t prefixLocations[0x100];",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3c467fec2ff93996e006d244d6cbd070774e9e41",
      "candidate_info": {
        "commit_hash": "3c467fec2ff93996e006d244d6cbd070774e9e41",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/3c467fec2ff93996e006d244d6cbd070774e9e41",
        "files": [
          "arch/X86/X86DisassemblerDecoder.c"
        ],
        "message": "Fix for incorrect operand size in 64bit CALL / JMP when x66 prefix in use (#777)",
        "before_after_code_files": [
          "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c": [
          "File: arch/X86/X86DisassemblerDecoder.c -> arch/X86/X86DisassemblerDecoder.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1251:  if (getIDWithAttrMask(&instructionID, insn, attrMask))",
          "1252:   return -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1255:  if (insn->mode == MODE_64BIT && insn->isPrefix66 &&",
          "1256:     (insn->opcode == 0xE8 || insn->opcode == 0xE9))",
          "1257:  {",
          "1258:   attrMask ^= ATTR_OPSIZE;",
          "1259:   if (getIDWithAttrMask(&instructionID, insn, attrMask))",
          "1260:    return -1;",
          "1261:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "27f03c1b5dfbc219a4f6943411dc3fdee21c89e8",
      "candidate_info": {
        "commit_hash": "27f03c1b5dfbc219a4f6943411dc3fdee21c89e8",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/27f03c1b5dfbc219a4f6943411dc3fdee21c89e8",
        "files": [
          "arch/TMS320C64x/TMS320C64xDisassembler.c"
        ],
        "message": "Fixed bug in memory operand decoding. (#981)\n\nFixed bug #979. Decoding a memory operand with a register offset from\nthe B file would return an incorrect register.",
        "before_after_code_files": [
          "arch/TMS320C64x/TMS320C64xDisassembler.c||arch/TMS320C64x/TMS320C64xDisassembler.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/TMS320C64x/TMS320C64xDisassembler.c||arch/TMS320C64x/TMS320C64xDisassembler.c": [
          "File: arch/TMS320C64x/TMS320C64xDisassembler.c -> arch/TMS320C64x/TMS320C64xDisassembler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "289:    if((offset >= TMS320C64X_REG_A0) && (offset <= TMS320C64X_REG_A31))",
          "290:     offset = (offset - TMS320C64X_REG_A0 + TMS320C64X_REG_B0);",
          "291:    else if((offset >= TMS320C64X_REG_B0) && (offset <= TMS320C64X_REG_B31))",
          "293:    offsetreg = getReg(GPRegsDecoderTable, offset);",
          "294:    MCOperand_CreateImm0(Inst, (scaled << 19) | (basereg << 12) | (offsetreg << 5) | (mode << 1) | unit);",
          "295:    break;",
          "",
          "[Removed Lines]",
          "292:     offset = (base - TMS320C64X_REG_B0 + TMS320C64X_REG_A0);",
          "",
          "[Added Lines]",
          "292:     offset = (offset - TMS320C64X_REG_B0 + TMS320C64X_REG_A0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7415467aee05fdd6a3f8ebee419cf0cd46ff2c8f",
      "candidate_info": {
        "commit_hash": "7415467aee05fdd6a3f8ebee419cf0cd46ff2c8f",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/7415467aee05fdd6a3f8ebee419cf0cd46ff2c8f",
        "files": [
          "cstool/cstool.c"
        ],
        "message": "cstool: initialize i in preprocess(). this fixes compilation issue for MSVC",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: static uint8_t *preprocess(char *code, size_t *size)",
          "30: {",
          "32:  uint8_t high, low;",
          "33:  uint8_t *result;",
          "",
          "[Removed Lines]",
          "31:  size_t i, j = 0;",
          "",
          "[Added Lines]",
          "31:  size_t i = 0, j = 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}