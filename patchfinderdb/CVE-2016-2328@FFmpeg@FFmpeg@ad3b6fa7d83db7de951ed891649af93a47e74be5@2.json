{
  "cve_id": "CVE-2016-2328",
  "cve_desc": "libswscale/swscale_unscaled.c in FFmpeg before 2.8.6 does not validate certain height values, which allows remote attackers to cause a denial of service (out-of-bounds array read access) or possibly have unspecified other impact via a crafted .cine file, related to the bayer_to_rgb24_wrapper and bayer_to_yv12_wrapper functions.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "ad3b6fa7d83db7de951ed891649af93a47e74be5",
  "patch_info": {
    "commit_hash": "ad3b6fa7d83db7de951ed891649af93a47e74be5",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/ad3b6fa7d83db7de951ed891649af93a47e74be5",
    "files": [
      "libswscale/swscale_unscaled.c"
    ],
    "message": "swscale/swscale_unscaled: Fix odd height inputs for bayer_to_rgb24_wrapper()\n\nFixes: 372d2df1f04b49e25f109f07f90b1505/asan_heap-oob_2835d2e_8501_99e0114d7ba3a6db885d0b4684d200c1.cine\nFixes out of array read\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "before_after_code_files": [
      "libswscale/swscale_unscaled.c||libswscale/swscale_unscaled.c"
    ]
  },
  "patch_diff": {
    "libswscale/swscale_unscaled.c||libswscale/swscale_unscaled.c": [
      "File: libswscale/swscale_unscaled.c -> libswscale/swscale_unscaled.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1059:     default: return 0;",
      "1060:     }",
      "1062:     copy(srcPtr, srcStride[0], dstPtr, dstStride[0], c->srcW);",
      "1063:     srcPtr += 2 * srcStride[0];",
      "1064:     dstPtr += 2 * dstStride[0];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1062:     av_assert0(srcSliceH > 1);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1069:         dstPtr += 2 * dstStride[0];",
      "1070:     }",
      "1073:     return srcSliceH;",
      "1074: }",
      "",
      "[Removed Lines]",
      "1072:     copy(srcPtr, srcStride[0], dstPtr, dstStride[0], c->srcW);",
      "",
      "[Added Lines]",
      "1074:     if (i + 1 == srcSliceH) {",
      "1075:         copy(srcPtr, -srcStride[0], dstPtr, -dstStride[0], c->srcW);",
      "1076:     } else if (i < srcSliceH)",
      "1077:         copy(srcPtr, srcStride[0], dstPtr, dstStride[0], c->srcW);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "93c675d6a6c98e94ddce1a4b04bc1507f562249f",
      "candidate_info": {
        "commit_hash": "93c675d6a6c98e94ddce1a4b04bc1507f562249f",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/93c675d6a6c98e94ddce1a4b04bc1507f562249f",
        "files": [
          "libswscale/swscale_unscaled.c"
        ],
        "message": "swscale/swscale_unscaled: Fix odd height inputs for bayer_to_yv12_wrapper()\n\nFixes: 372d2df1f04b49e25f109f07f90b1505/asan_heap-oob_2835d2e_8501_99e0114d7ba3a6db885d0b4684d200c1.cine\nFixes out of array read\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 757248ea3cd917a7755cb15f817a9b1f15578718)\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libswscale/swscale_unscaled.c||libswscale/swscale_unscaled.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libswscale/swscale_unscaled.c||libswscale/swscale_unscaled.c"
          ],
          "candidate": [
            "libswscale/swscale_unscaled.c||libswscale/swscale_unscaled.c"
          ]
        }
      },
      "candidate_diff": {
        "libswscale/swscale_unscaled.c||libswscale/swscale_unscaled.c": [
          "File: libswscale/swscale_unscaled.c -> libswscale/swscale_unscaled.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1109:     default: return 0;",
          "1110:     }",
          "1112:     copy(srcPtr, srcStride[0], dstY, dstU, dstV, dstStride[0], c->srcW, c->input_rgb2yuv_table);",
          "1113:     srcPtr += 2 * srcStride[0];",
          "1114:     dstY   += 2 * dstStride[0];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1112:     av_assert0(srcSliceH > 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1123:         dstV   +=     dstStride[1];",
          "1124:     }",
          "1127:     return srcSliceH;",
          "1128: }",
          "",
          "[Removed Lines]",
          "1126:     copy(srcPtr, srcStride[0], dstY, dstU, dstV, dstStride[0], c->srcW, c->input_rgb2yuv_table);",
          "",
          "[Added Lines]",
          "1128:     if (i + 1 == srcSliceH) {",
          "1129:         copy(srcPtr, -srcStride[0], dstY, dstU, dstV, -dstStride[0], c->srcW, c->input_rgb2yuv_table);",
          "1130:     } else if (i < srcSliceH)",
          "1131:         copy(srcPtr, srcStride[0], dstY, dstU, dstV, dstStride[0], c->srcW, c->input_rgb2yuv_table);",
          "",
          "---------------"
        ]
      }
    }
  ]
}