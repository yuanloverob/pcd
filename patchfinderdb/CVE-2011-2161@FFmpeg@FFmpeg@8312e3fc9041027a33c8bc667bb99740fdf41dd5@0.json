{
  "cve_id": "CVE-2011-2161",
  "cve_desc": "The ape_read_header function in ape.c in libavformat in FFmpeg before 0.5.4, as used in MPlayer, VideoLAN VLC media player, and other products, allows remote attackers to cause a denial of service (application crash) via an APE (aka Monkey's Audio) file that contains a header but no frames.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "8312e3fc9041027a33c8bc667bb99740fdf41dd5",
  "patch_info": {
    "commit_hash": "8312e3fc9041027a33c8bc667bb99740fdf41dd5",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/8312e3fc9041027a33c8bc667bb99740fdf41dd5",
    "files": [
      "libavformat/ape.c"
    ],
    "message": "Do not attempt to decode APE file with no frames\n\nThis fixes invalid reads/writes with this sample:\nhttp://packetstorm.linuxsecurity.com/1103-exploits/vlc105-dos.txt",
    "before_after_code_files": [
      "libavformat/ape.c||libavformat/ape.c"
    ]
  },
  "patch_diff": {
    "libavformat/ape.c||libavformat/ape.c": [
      "File: libavformat/ape.c -> libavformat/ape.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "242:             avio_seek(pb, ape->wavheaderlength, SEEK_CUR);",
      "243:     }",
      "245:     if(ape->totalframes > UINT_MAX / sizeof(APEFrame)){",
      "246:         av_log(s, AV_LOG_ERROR, \"Too many frames: %d\\n\", ape->totalframes);",
      "247:         return -1;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "245:     if(!ape->totalframes){",
      "246:         av_log(s, AV_LOG_ERROR, \"No frames in the file!\\n\");",
      "247:         return AVERROR(EINVAL);",
      "248:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "18c5fe919f4b1818ebdf405812c5a2d16174688f",
      "candidate_info": {
        "commit_hash": "18c5fe919f4b1818ebdf405812c5a2d16174688f",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/18c5fe919f4b1818ebdf405812c5a2d16174688f",
        "files": [
          "libavformat/ape.c"
        ],
        "message": "Do not attempt to decode APE file with no frames\n\nThis fixes invalid reads/writes with this sample:\nhttp://packetstorm.linuxsecurity.com/1103-exploits/vlc105-dos.txt\n(cherry picked from commit 8312e3fc9041027a33c8bc667bb99740fdf41dd5)",
        "before_after_code_files": [
          "libavformat/ape.c||libavformat/ape.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/ape.c||libavformat/ape.c"
          ],
          "candidate": [
            "libavformat/ape.c||libavformat/ape.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/ape.c||libavformat/ape.c": [
          "File: libavformat/ape.c -> libavformat/ape.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "335:             url_fskip(pb, ape->wavheaderlength);",
          "336:     }",
          "338:     if(ape->totalframes > UINT_MAX / sizeof(APEFrame)){",
          "339:         av_log(s, AV_LOG_ERROR, \"Too many frames: %d\\n\", ape->totalframes);",
          "340:         return -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "338:     if(!ape->totalframes){",
          "339:         av_log(s, AV_LOG_ERROR, \"No frames in the file!\\n\");",
          "340:         return AVERROR(EINVAL);",
          "341:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f9bf2a4ab10a0718a11d43fecba75bb40aac6628",
      "candidate_info": {
        "commit_hash": "f9bf2a4ab10a0718a11d43fecba75bb40aac6628",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/f9bf2a4ab10a0718a11d43fecba75bb40aac6628",
        "files": [
          "libavformat/ape.c"
        ],
        "message": "Do not attempt to decode APE file with no frames\n\nThis fixes invalid reads/writes with this sample:\nhttp://packetstorm.linuxsecurity.com/1103-exploits/vlc105-dos.txt\n(cherry picked from commit 8312e3fc9041027a33c8bc667bb99740fdf41dd5)",
        "before_after_code_files": [
          "libavformat/ape.c||libavformat/ape.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/ape.c||libavformat/ape.c"
          ],
          "candidate": [
            "libavformat/ape.c||libavformat/ape.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/ape.c||libavformat/ape.c": [
          "File: libavformat/ape.c -> libavformat/ape.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "242:             url_fskip(pb, ape->wavheaderlength);",
          "243:     }",
          "245:     if(ape->totalframes > UINT_MAX / sizeof(APEFrame)){",
          "246:         av_log(s, AV_LOG_ERROR, \"Too many frames: %d\\n\", ape->totalframes);",
          "247:         return -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "245:     if(!ape->totalframes){",
          "246:         av_log(s, AV_LOG_ERROR, \"No frames in the file!\\n\");",
          "247:         return AVERROR(EINVAL);",
          "248:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}