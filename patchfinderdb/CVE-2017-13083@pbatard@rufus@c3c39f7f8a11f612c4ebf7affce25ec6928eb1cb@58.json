{
  "cve_id": "CVE-2017-13083",
  "cve_desc": "Akeo Consulting Rufus prior to version 2.17.1187 does not adequately validate the integrity of updates downloaded over HTTP, allowing an attacker to easily convince a user to execute arbitrary code",
  "repo": "pbatard/rufus",
  "patch_hash": "c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
  "patch_info": {
    "commit_hash": "c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
    "repo": "pbatard/rufus",
    "commit_url": "https://github.com/pbatard/rufus/commit/c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
    "files": [
      "res/localization/rufus.loc",
      "src/pki.c",
      "src/rufus.rc",
      "src/stdlg.c"
    ],
    "message": "[pki] fix https://www.kb.cert.org/vuls/id/403768\n\n* This commit effectively fixes https://www.kb.cert.org/vuls/id/403768 (CVE-2017-13083) as\n  it is described per its revision 11, which is the latest revision at the time of this commit,\n  by disabling Windows prompts, enacted during signature validation, that allow the user to\n  bypass the intended signature verification checks.\n* It needs to be pointed out that the vulnerability (\"allow(ing) the use of a self-signed\n  certificate\"), which relies on the end-user actively ignoring a Windows prompt that tells\n  them that the update failed the signature validation whilst also advising against running it,\n  is being fully addressed, even as the update protocol remains HTTP.\n* It also need to be pointed out that the extended delay (48 hours) between the time the\n  vulnerability was reported and the moment it is fixed in our codebase has to do with\n  the fact that the reporter chose to deviate from standard security practices by not\n  disclosing the details of the vulnerability with us, be it publicly or privately,\n  before creating the cert.org report. The only advance notification we received was a\n  generic note about the use of HTTP vs HTTPS, which, as have established, is not\n  immediately relevant to addressing the reported vulnerability.\n* Closes #1009\n* Note: The other vulnerability scenario described towards the end of #1009, which\n  doesn't have to do with the \"lack of CA checking\", will be addressed separately.",
    "before_after_code_files": [
      "res/localization/rufus.loc||res/localization/rufus.loc",
      "src/pki.c||src/pki.c",
      "src/rufus.rc||src/rufus.rc",
      "src/stdlg.c||src/stdlg.c"
    ]
  },
  "patch_diff": {
    "res/localization/rufus.loc||res/localization/rufus.loc": [
      "File: res/localization/rufus.loc -> res/localization/rufus.loc",
      "--- Hunk 1 ---",
      "[Context before]",
      "487: # eg. \"Partitioning (MBR)...\"",
      "488: t MSG_238 \"Partitioning (%s)...\"",
      "489: t MSG_239 \"Deleting partitions...\"",
      "490: t MSG_241 \"Downloading: %0.1f%%\"",
      "491: t MSG_242 \"Failed to download file.\"",
      "492: t MSG_243 \"Checking for Rufus updates...\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "490: t MSG_240 \"The signature for the downloaded update can not be validated. This could mean that your \"",
      "491:  \"system is improperly configured for signature validation or indicate a malicious download.\\n\\n\"",
      "492:  \"The download will be deleted. Please check the log for more details.\"",
      "",
      "---------------"
    ],
    "src/pki.c||src/pki.c": [
      "File: src/pki.c -> src/pki.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "53:  static char error_string[64];",
      "54:  DWORD error_code = GetLastError();",
      "57:   return WindowsErrorString();",
      "59:  switch (error_code) {",
      "",
      "[Removed Lines]",
      "56:  if ((error_code >> 16) != 0x8009)",
      "",
      "[Added Lines]",
      "56:  if (((error_code >> 16) != 0x8009) && ((error_code >> 16) != 0x800B))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "113:   return \"Cannot complete usage check.\";",
      "114:  case CRYPT_E_NO_TRUSTED_SIGNER:",
      "115:   return \"None of the signers of the cryptographic message or certificate trust list is trusted.\";",
      "116:  default:",
      "117:   static_sprintf(error_string, \"Unknown PKI error 0x%08lX\", error_code);",
      "118:   return error_string;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "116:  case CERT_E_UNTRUSTEDROOT:",
      "117:   return \"The root certificate is not trusted.\";",
      "118:  case TRUST_E_NOSIGNATURE:",
      "119:   return \"Not digitally signed.\";",
      "120:  case TRUST_E_EXPLICIT_DISTRUST:",
      "121:   return \"One of the certificates used was marked as untrusted by the user.\";",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "268:  }",
      "270:  trust_data.cbStruct = sizeof(trust_data);",
      "273:  trust_data.fdwRevocationChecks = WTD_REVOKE_WHOLECHAIN;",
      "",
      "[Removed Lines]",
      "271:  trust_data.dwUIChoice = WTD_UI_ALL;",
      "",
      "[Added Lines]",
      "283:  trust_data.dwUIChoice = WTD_UI_NONE;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "279:  r = WinVerifyTrust(NULL, &guid_generic_verify, &trust_data);",
      "280:  safe_free(trust_file.pcwszFilePath);",
      "282:  return r;",
      "283: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "293:  switch (r) {",
      "294:  case ERROR_SUCCESS:",
      "295:   break;",
      "296:  case TRUST_E_NOSIGNATURE:",
      "298:   uprintf(\"PKI: File does not appear to be signed: %s\", WinPKIErrorString());",
      "299:   MessageBoxExU(hDlg, lmprintf(MSG_284), lmprintf(MSG_283), MB_OK | MB_ICONERROR | MB_IS_RTL, selected_langid);",
      "300:   break;",
      "301:  default:",
      "302:   uprintf(\"PKI: Failed to validate signature: %s\", WinPKIErrorString());",
      "303:   MessageBoxExU(hDlg, lmprintf(MSG_240), lmprintf(MSG_283), MB_OK | MB_ICONERROR | MB_IS_RTL, selected_langid);",
      "304:   break;",
      "305:  }",
      "",
      "---------------"
    ],
    "src/rufus.rc||src/rufus.rc": [
      "File: src/rufus.rc -> src/rufus.rc",
      "--- Hunk 1 ---",
      "[Context before]",
      "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
      "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
      "35: EXSTYLE WS_EX_ACCEPTFILES",
      "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
      "38: BEGIN",
      "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
      "",
      "[Removed Lines]",
      "36: CAPTION \"Rufus 2.17.1186\"",
      "",
      "[Added Lines]",
      "36: CAPTION \"Rufus 2.17.1187\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "368: VS_VERSION_INFO VERSIONINFO",
      "371:  FILEFLAGSMASK 0x3fL",
      "372: #ifdef _DEBUG",
      "373:  FILEFLAGS 0x1L",
      "",
      "[Removed Lines]",
      "369:  FILEVERSION 2,17,1186,0",
      "370:  PRODUCTVERSION 2,17,1186,0",
      "",
      "[Added Lines]",
      "369:  FILEVERSION 2,17,1187,0",
      "370:  PRODUCTVERSION 2,17,1187,0",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "384:         BEGIN",
      "385:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
      "386:             VALUE \"FileDescription\", \"Rufus\"",
      "388:             VALUE \"InternalName\", \"Rufus\"",
      "389:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
      "390:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
      "391:             VALUE \"OriginalFilename\", \"rufus.exe\"",
      "392:             VALUE \"ProductName\", \"Rufus\"",
      "394:         END",
      "395:     END",
      "396:     BLOCK \"VarFileInfo\"",
      "",
      "[Removed Lines]",
      "387:             VALUE \"FileVersion\", \"2.17.1186\"",
      "393:             VALUE \"ProductVersion\", \"2.17.1186\"",
      "",
      "[Added Lines]",
      "387:             VALUE \"FileVersion\", \"2.17.1187\"",
      "393:             VALUE \"ProductVersion\", \"2.17.1187\"",
      "",
      "---------------"
    ],
    "src/stdlg.c||src/stdlg.c": [
      "File: src/stdlg.c -> src/stdlg.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674:    case 2:  // Launch newer version and close this one",
      "1675:     Sleep(1000); // Add a delay on account of antivirus scanners",
      "1678:      break;",
      "1680:     memset(&si, 0, sizeof(si));",
      "1681:     memset(&pi, 0, sizeof(pi));",
      "",
      "[Removed Lines]",
      "1677:     if (ValidateSignature(hDlg, filepath) != NO_ERROR)",
      "",
      "[Added Lines]",
      "1677:     if (ValidateSignature(hDlg, filepath) != NO_ERROR) {",
      "1679:      _unlinkU(filepath);",
      "1680:      EnableWindow(GetDlgItem(hDlg, IDC_DOWNLOAD), FALSE);",
      "1682:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1baf1b7d1a5e99a60259d45e6d1fe6ca58a2cc59",
      "candidate_info": {
        "commit_hash": "1baf1b7d1a5e99a60259d45e6d1fe6ca58a2cc59",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/1baf1b7d1a5e99a60259d45e6d1fe6ca58a2cc59",
        "files": [
          "res/localization/rufus.loc",
          "src/rufus.rc"
        ],
        "message": "[loc] update Lithuanian translation to latest",
        "before_after_code_files": [
          "res/localization/rufus.loc||res/localization/rufus.loc",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "res/localization/rufus.loc||res/localization/rufus.loc": [
          "File: res/localization/rufus.loc -> res/localization/rufus.loc",
          "--- Hunk 1 ---",
          "[Context before]",
          "9800: ################################################################################",
          "9801: l \"lt-LT\" \"Lithuanian (Lietuvi\u0173)\" 0x0427",
          "9803: b \"en-US\"",
          "9805: # Main dialog",
          "",
          "[Removed Lines]",
          "9802: v 1.0.21",
          "",
          "[Added Lines]",
          "9802: v 1.0.22",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10265: t MSG_292 \"Pra\u0161ome pasirinkti Windows versij\u0105, kuri\u0105 norite \u012fdiegti:\"",
          "10266: t MSG_293 \"Nepalaikoma Windows versija\"",
          "10267: t MSG_294 \"\u0160ios Windows versijos Rufus nebepalaiko.\"",
          "10269: ################################################################################",
          "10270: l \"ms-MY\" \"Malay (Bahasa Malaysia)\" 0x043e, 0x083e",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10268: t MSG_295 \"\u012esp\u0117jimas: Neoficiali versija\"",
          "10269: t MSG_296 \"\u0160i Rufus versija N\u0116RA i\u0161leista jos oficialaus k\u016br\u0117jo(\u0173).\\n\\nAr j\u016bs tikrai norite j\u0105 vykdyti?\"",
          "10270: t MSG_297 \"Aptiktas nepilnas ISO\"",
          "10271: t MSG_298 \"J\u016bs\u0173 pasirinktas ISO failas neatitinka deklaruojamo dyd\u017eio: %s duomen\u0173 tr\u016bksta!\\n\\n\"",
          "10272:  \"Jei j\u016bs gavote \u0161\u012f fail\u0105 i\u0161 interneto, pabandykite atsisi\u0173sti j\u012f i\u0161 naujo ir patikrinkite, \"",
          "10273:  \"ar MD5 or SHA kontrolin\u0117s sumos atitinka oficiali\u0105sias.\\n\\nBeje, j\u016bs galite apskai\u010diuoti \"",
          "10274:  \"MD5 arba SHA per Rufus, paspaud\u0119 '#' mygtuk\u0105.\"",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 2.16.1161\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 2.16.1162\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "368: VS_VERSION_INFO VERSIONINFO",
          "371:  FILEFLAGSMASK 0x3fL",
          "372: #ifdef _DEBUG",
          "373:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "369:  FILEVERSION 2,16,1161,0",
          "370:  PRODUCTVERSION 2,16,1161,0",
          "",
          "[Added Lines]",
          "369:  FILEVERSION 2,16,1162,0",
          "370:  PRODUCTVERSION 2,16,1162,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "384:         BEGIN",
          "385:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "386:             VALUE \"FileDescription\", \"Rufus\"",
          "388:             VALUE \"InternalName\", \"Rufus\"",
          "389:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
          "390:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "391:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "392:             VALUE \"ProductName\", \"Rufus\"",
          "394:         END",
          "395:     END",
          "396:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "387:             VALUE \"FileVersion\", \"2.16.1161\"",
          "393:             VALUE \"ProductVersion\", \"2.16.1161\"",
          "",
          "[Added Lines]",
          "387:             VALUE \"FileVersion\", \"2.16.1162\"",
          "393:             VALUE \"ProductVersion\", \"2.16.1162\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e3fbfb30d3260ca59ca98c034897ef3153c9d6d2",
      "candidate_info": {
        "commit_hash": "e3fbfb30d3260ca59ca98c034897ef3153c9d6d2",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/e3fbfb30d3260ca59ca98c034897ef3153c9d6d2",
        "files": [
          "src/pki.c",
          "src/rufus.c",
          "src/rufus.h",
          "src/rufus.rc"
        ],
        "message": "[pki] add country code validation on signature check\n\n* Also validate against the CN rather than the simple name, and require an exact match",
        "before_after_code_files": [
          "src/pki.c||src/pki.c",
          "src/rufus.c||src/rufus.c",
          "src/rufus.h||src/rufus.h",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/pki.c||src/pki.c",
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "src/pki.c||src/pki.c",
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "src/pki.c||src/pki.c": [
          "File: src/pki.c -> src/pki.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: #define szOID_NESTED_SIGNATURE \"1.3.6.1.4.1.311.2.4.1\"",
          "41: #endif",
          "44: const char* cert_name[3] = { \"Akeo Consulting\", \"Akeo Systems\", \"Pete Batard\" };",
          "46: typedef struct {",
          "47:  LPWSTR lpszProgramName;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47: const char* cert_country = \"IE\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133: }",
          "137: {",
          "138:  static char szSubjectName[128];",
          "139:  char *p = NULL, *mpath = NULL;",
          "140:  BOOL r;",
          "141:  HMODULE hm;",
          "142:  HCERTSTORE hStore = NULL;",
          "143:  HCRYPTMSG hMsg = NULL;",
          "144:  PCCERT_CONTEXT pCertContext = NULL;",
          "146:  PCMSG_SIGNER_INFO pSignerInfo = NULL;",
          "147:  DWORD dwSignerInfo = 0;",
          "148:  CERT_INFO CertInfo = { 0 };",
          "",
          "[Removed Lines]",
          "136: char* GetSignatureName(const char* path)",
          "145:  DWORD dwSize, dwEncoding, dwContentType, dwFormatType, dwSubjectSize;",
          "",
          "[Added Lines]",
          "139: char* GetSignatureName(const char* path, const char* country_code)",
          "142:  static char szCountry[3];",
          "149:  DWORD dwSize, dwEncoding, dwContentType, dwFormatType;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "209:   goto out;",
          "210:  }",
          "214:   szSubjectName, sizeof(szSubjectName));",
          "216:   uprintf(\"PKI: Failed to get Subject Name\");",
          "217:   goto out;",
          "218:  }",
          "221:  p = szSubjectName;",
          "223: out:",
          "",
          "[Removed Lines]",
          "213:  dwSubjectSize = CertGetNameStringA(pCertContext, CERT_NAME_SIMPLE_DISPLAY_TYPE, 0, NULL,",
          "215:  if (dwSubjectSize <= 1) {",
          "220:  uprintf(\"Downloaded executable is signed by '%s'\", szSubjectName);",
          "",
          "[Added Lines]",
          "217:  if (country_code != NULL) {",
          "218:   dwSize = CertGetNameStringA(pCertContext, CERT_NAME_ATTR_TYPE, 0, szOID_COUNTRY_NAME,",
          "219:    szCountry, sizeof(szCountry));",
          "220:   if (dwSize < 2) {",
          "221:    uprintf(\"PKI: Failed to get Country Code\");",
          "222:    goto out;",
          "223:   }",
          "224:   if (strcmpi(country_code, szCountry) != 0) {",
          "225:    uprintf(\"PKI: Unexpected Country Code (Found '%s', expected '%s')\", szCountry, country_code);",
          "226:    goto out;",
          "227:   }",
          "228:  }",
          "231:  dwSize = CertGetNameStringA(pCertContext, CERT_NAME_ATTR_TYPE, 0, szOID_COMMON_NAME,",
          "233:  if (dwSize <= 1) {",
          "238:  uprintf(\"Binary executable is signed by '%s' (%s)\", szSubjectName, szCountry);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "473:  GUID guid_generic_verify = // WINTRUST_ACTION_GENERIC_VERIFY_V2",
          "474:   { 0xaac56b, 0xcd44, 0x11d0,{ 0x8c, 0xc2, 0x0, 0xc0, 0x4f, 0xc2, 0x95, 0xee } };",
          "475:  char *signature_name;",
          "477:  uint64_t current_ts, update_ts;",
          "483:  if (signature_name == NULL) {",
          "484:   uprintf(\"PKI: Could not get signature name\");",
          "485:   MessageBoxExU(hDlg, lmprintf(MSG_284), lmprintf(MSG_283), MB_OK | MB_ICONERROR | MB_IS_RTL, selected_langid);",
          "486:   return TRUST_E_NOSIGNATURE;",
          "487:  }",
          "488:  for (i = 0; i < ARRAYSIZE(cert_name); i++) {",
          "495:  }",
          "496:  if (i >= ARRAYSIZE(cert_name)) {",
          "497:   uprintf(\"PKI: Signature '%s' is unexpected...\", signature_name);",
          "",
          "[Removed Lines]",
          "476:  size_t i, len;",
          "482:  signature_name = GetSignatureName(path);",
          "489:   len = strlen(cert_name[i]);",
          "490:   if (strncmp(signature_name, cert_name[i], len) == 0) {",
          "492:    if ((len >= strlen(signature_name)) || isspace(signature_name[len]))",
          "493:     break;",
          "494:   }",
          "",
          "[Added Lines]",
          "494:  size_t i;",
          "500:  signature_name = GetSignatureName(path, cert_country);",
          "507:   if (strcmp(signature_name, cert_name[i]) == 0)",
          "508:    break;",
          "",
          "---------------"
        ],
        "src/rufus.c||src/rufus.c": [
          "File: src/rufus.c -> src/rufus.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3167:  static_sprintf(ini_path, \"%s\\\\rufus.ini\", app_dir);",
          "3168:  fd = fopenU(ini_path, ini_flags); // Will create the file if portable mode is requested",
          "3170:  if (fd != NULL) {",
          "3171:   ini_file = ini_path;",
          "3172:   fclose(fd);",
          "",
          "[Removed Lines]",
          "3169:  vc |= (safe_strcmp(GetSignatureName(NULL), cert_name[0]) == 0);",
          "",
          "[Added Lines]",
          "3169:  vc |= (safe_strcmp(GetSignatureName(NULL, NULL), cert_name[0]) == 0);",
          "",
          "---------------"
        ],
        "src/rufus.h||src/rufus.h": [
          "File: src/rufus.h -> src/rufus.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "488: extern BOOL AppendVHDFooter(const char* vhd_path);",
          "489: extern int SetWinToGoIndex(void);",
          "490: extern int IsHDD(DWORD DriveIndex, uint16_t vid, uint16_t pid, const char* strid);",
          "492: extern uint64_t GetSignatureTimeStamp(const char* path);",
          "493: extern LONG ValidateSignature(HWND hDlg, const char* path);",
          "494: extern BOOL IsFontAvailable(const char* font_name);",
          "",
          "[Removed Lines]",
          "491: extern char* GetSignatureName(const char* path);",
          "",
          "[Added Lines]",
          "491: extern char* GetSignatureName(const char* path, const char* country_code);",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 2.17.1195\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 2.17.1196\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "368: VS_VERSION_INFO VERSIONINFO",
          "371:  FILEFLAGSMASK 0x3fL",
          "372: #ifdef _DEBUG",
          "373:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "369:  FILEVERSION 2,17,1195,0",
          "370:  PRODUCTVERSION 2,17,1195,0",
          "",
          "[Added Lines]",
          "369:  FILEVERSION 2,17,1196,0",
          "370:  PRODUCTVERSION 2,17,1196,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "384:         BEGIN",
          "385:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "386:             VALUE \"FileDescription\", \"Rufus\"",
          "388:             VALUE \"InternalName\", \"Rufus\"",
          "389:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
          "390:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "391:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "392:             VALUE \"ProductName\", \"Rufus\"",
          "394:         END",
          "395:     END",
          "396:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "387:             VALUE \"FileVersion\", \"2.17.1195\"",
          "393:             VALUE \"ProductVersion\", \"2.17.1195\"",
          "",
          "[Added Lines]",
          "387:             VALUE \"FileVersion\", \"2.17.1196\"",
          "393:             VALUE \"ProductVersion\", \"2.17.1196\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7a00adcf5de5252b4fffa7a050fc810984a27207",
      "candidate_info": {
        "commit_hash": "7a00adcf5de5252b4fffa7a050fc810984a27207",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/7a00adcf5de5252b4fffa7a050fc810984a27207",
        "files": [
          "res/localization/rufus.loc",
          "src/rufus.rc"
        ],
        "message": "[loc] update Hebrew translation to latest\n\n* Closes #890",
        "before_after_code_files": [
          "res/localization/rufus.loc||res/localization/rufus.loc",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "res/localization/rufus.loc||res/localization/rufus.loc": [
          "File: res/localization/rufus.loc -> res/localization/rufus.loc",
          "--- Hunk 1 ---",
          "[Context before]",
          "6437: ################################################################################",
          "6438: l \"he-IL\" \"Hebrew (\u05e2\u05d1\u05e8\u05d9\u05ea)\" 0x040d",
          "6439: a \"r\"",
          "6441: b \"en-US\"",
          "6443: g IDD_DIALOG",
          "",
          "[Removed Lines]",
          "6440: v 1.0.20",
          "",
          "[Added Lines]",
          "6440: v 1.0.21",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6888: t MSG_288 \"\u05d7\u05e1\u05e8 \u05d4\u05e8\u05e9\u05d0\u05d5\u05ea \u05d2\u05d1\u05d5\u05d4\u05d5\u05ea\"",
          "6889: t MSG_289 \"\u05ea\u05d5\u05db\u05e0\u05d4 \u05d6\u05d5 \u05d9\u05db\u05d5\u05dc\u05d4 \u05dc\u05e4\u05e2\u05d5\u05dc \u05e8\u05e7 \u05e2\u05dd \u05d4\u05e8\u05e9\u05d0\u05d5\u05ea \u05d2\u05d1\u05d5\u05d4\u05d5\u05ea\"",
          "6890: t MSG_290 \"\u05e7\u05d5\u05d1\u05e5 \u05d0\u05d9\u05e0\u05d3\u05e7\u05e1\"",
          "6892: ################################################################################",
          "6893: l \"hu-HU\" \"Hungarian (Magyar)\" 0x040e",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6891: t MSG_291 \"\u05d1\u05d7\u05e8 \u05d2\u05d9\u05e8\u05e1\u05d4\"",
          "6892: t MSG_292 \"\u05e0\u05d0 \u05dc\u05d1\u05d7\u05d5\u05e8 \u05d2\u05e8\u05e1\u05ea windows \u05dc\u05d4\u05ea\u05e7\u05e0\u05d4:\"",
          "6893: t MSG_293 \"\u05d2\u05d9\u05e8\u05e1\u05ea Windows \u05dc\u05d0 \u05e0\u05ea\u05de\u05db\u05ea\"",
          "6894: t MSG_294 \"\u05d2\u05e8\u05e1\u05ea \u05d4 windows \u05d4\u05d6\u05d5 \u05dc\u05d0 \u05e0\u05ea\u05de\u05db\u05ea \u05d9\u05d5\u05ea\u05e8 \u05e2\"\u05d9 \u05e8\u05d5\u05e4\u05d5\u05e1.\"",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 2.12.1031\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 2.12.1032\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "336: VS_VERSION_INFO VERSIONINFO",
          "339:  FILEFLAGSMASK 0x3fL",
          "340: #ifdef _DEBUG",
          "341:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "337:  FILEVERSION 2,12,1031,0",
          "338:  PRODUCTVERSION 2,12,1031,0",
          "",
          "[Added Lines]",
          "337:  FILEVERSION 2,12,1032,0",
          "338:  PRODUCTVERSION 2,12,1032,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "352:         BEGIN",
          "353:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "354:             VALUE \"FileDescription\", \"Rufus\"",
          "356:             VALUE \"InternalName\", \"Rufus\"",
          "357:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
          "358:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "359:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "360:             VALUE \"ProductName\", \"Rufus\"",
          "362:         END",
          "363:     END",
          "364:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "355:             VALUE \"FileVersion\", \"2.12.1031\"",
          "361:             VALUE \"ProductVersion\", \"2.12.1031\"",
          "",
          "[Added Lines]",
          "355:             VALUE \"FileVersion\", \"2.12.1032\"",
          "361:             VALUE \"ProductVersion\", \"2.12.1032\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e8745339e455736a37589dba89f232616cc8cef7",
      "candidate_info": {
        "commit_hash": "e8745339e455736a37589dba89f232616cc8cef7",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/e8745339e455736a37589dba89f232616cc8cef7",
        "files": [
          "src/rufus.c",
          "src/rufus.rc",
          "src/ui.c",
          "src/ui.h"
        ],
        "message": "[ui] fix multiple persistence slider issues\n\n* Range not being set when plugging a drive\n* Set position to zero when no drive is selected\n* Make sure the restored position can not be greater than the max",
        "before_after_code_files": [
          "src/rufus.c||src/rufus.c",
          "src/rufus.rc||src/rufus.rc",
          "src/ui.c||src/ui.c",
          "src/ui.h||src/ui.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "src/rufus.c||src/rufus.c": [
          "File: src/rufus.c -> src/rufus.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "715:  EnableWindow(GetDlgItem(hMainDialog, IDC_IMAGE_OPTION), actual_enable);",
          "716:  EnableWindow(GetDlgItem(hMainDialog, IDC_PERSISTENCE_SLIDER), actual_enable);",
          "717:  EnableWindow(GetDlgItem(hMainDialog, IDC_PERSISTENCE_SIZE), (persistence_size != 0) && actual_enable);",
          "718:  EnableWindow(GetDlgItem(hMainDialog, IDC_PERSISTENCE_UNITS), (persistence_size != 0) && actual_enable);",
          "719:  EnableMBRBootOptions(actual_enable, remove_checkboxes);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "718:  if ((image_path != NULL) && HAS_PERSISTENCE(img_report))",
          "719:   SetPersistenceSize();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "779:  if (device_index < 0)",
          "780:   goto out;",
          "783:  SelectedDrive.DeviceNumber = (DWORD)ComboBox_GetItemData(hDeviceList, device_index);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "785:  persistence_unit_selection = -1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2074:    for (i = 0; i < persistence_unit_selection; i++)",
          "2075:     persistence_size *= 1024;",
          "2076:    persistence_unit_selection = ComboBox_GetCurSel(GetDlgItem(hDlg, IDC_PERSISTENCE_UNITS));",
          "2078:    break;",
          "2079:   case IDC_NB_PASSES:",
          "2080:    if (HIWORD(wParam) != CBN_SELCHANGE)",
          "",
          "[Removed Lines]",
          "2077:    SetPersistenceSize(persistence_size, SelectedDrive.DiskSize - img_report.projected_size);",
          "",
          "[Added Lines]",
          "2081:    SetPersistenceSize();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2291:       SetPartitionSchemeAndTargetSystem(FALSE);",
          "2292:       SetFileSystemAndClusterSize(NULL);",
          "2293:       ShowWindow(GetDlgItem(hDlg, IDS_CSM_HELP_TXT), SW_HIDE);",
          "2294:      }",
          "2295:     } else {",
          "2296:      queued_hotplug_event = TRUE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2298:       persistence_unit_selection = -1;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2419:  case WM_HSCROLL:",
          "2420:   lPos = (LONG)SendMessage(GetDlgItem(hMainDialog, IDC_PERSISTENCE_SLIDER), TBM_GETPOS, 0, 0);",
          "2429:   persistence_size = lPos * MB;",
          "2430:   for (i = 0; i < persistence_unit_selection; i++)",
          "2431:    persistence_size *= 1024;",
          "2434:   break;",
          "2436:  case WM_DROPFILES:",
          "",
          "[Removed Lines]",
          "2421:   if (lPos != 0) {",
          "2422:    if (persistence_size == 0)",
          "2423:     TogglePersistenceControls(TRUE);",
          "2424:    static_sprintf(tmp, \"%ld\", lPos);",
          "2425:   } else {",
          "2426:    TogglePersistenceControls(FALSE);",
          "2427:    static_sprintf(tmp, \"0 (%s)\", lmprintf(MSG_124));",
          "2428:   }",
          "2432:   app_changed_size = TRUE;",
          "2433:   SetWindowTextU(GetDlgItem(hMainDialog, IDC_PERSISTENCE_SIZE), tmp);",
          "",
          "[Added Lines]",
          "2426:   SetPeristencePos(lPos);",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 232, 326",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 9, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Drive Properties\",IDS_DRIVE_PROPERTIES_TXT,8,6,53,12,NOT WS_GROUP",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 3.2.1369\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 3.2.1370\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "394: VS_VERSION_INFO VERSIONINFO",
          "397:  FILEFLAGSMASK 0x3fL",
          "398: #ifdef _DEBUG",
          "399:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "395:  FILEVERSION 3,2,1369,0",
          "396:  PRODUCTVERSION 3,2,1369,0",
          "",
          "[Added Lines]",
          "395:  FILEVERSION 3,2,1370,0",
          "396:  PRODUCTVERSION 3,2,1370,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "411:             VALUE \"Comments\", \"https://akeo.ie\"",
          "412:             VALUE \"CompanyName\", \"Akeo Consulting\"",
          "413:             VALUE \"FileDescription\", \"Rufus\"",
          "415:             VALUE \"InternalName\", \"Rufus\"",
          "416:             VALUE \"LegalCopyright\", \"\ufffd 2011-2018 Pete Batard (GPL v3)\"",
          "417:             VALUE \"LegalTrademarks\", \"https://www.gnu.org/copyleft/gpl.html\"",
          "418:             VALUE \"OriginalFilename\", \"rufus-3.2.exe\"",
          "419:             VALUE \"ProductName\", \"Rufus\"",
          "421:         END",
          "422:     END",
          "423:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "414:             VALUE \"FileVersion\", \"3.2.1369\"",
          "420:             VALUE \"ProductVersion\", \"3.2.1369\"",
          "",
          "[Added Lines]",
          "414:             VALUE \"FileVersion\", \"3.2.1370\"",
          "420:             VALUE \"ProductVersion\", \"3.2.1370\"",
          "",
          "---------------"
        ],
        "src/ui.c||src/ui.c": [
          "File: src/ui.c -> src/ui.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "669:  ShowWindow(hUnits, display ? SW_SHOW : SW_HIDE);",
          "670: }",
          "673: {",
          "674:  char tmp[64];",
          "707:  if (pos != 0) {",
          "708:   static_sprintf(tmp, \"%ld\", (LONG)pos);",
          "709:  } else {",
          "710:   static_sprintf(tmp, \"0 (%s)\", lmprintf(MSG_124));",
          "711:  }",
          "712:  app_changed_size = TRUE;",
          "713:  SetWindowTextU(GetDlgItem(hMainDialog, IDC_PERSISTENCE_SIZE), tmp);",
          "714: }",
          "717: void ToggleImageOptions(void)",
          "718: {",
          "",
          "[Removed Lines]",
          "672: void SetPersistenceSize(uint64_t pos, uint64_t max)",
          "675:  int i, proposed_unit_selection = 0;",
          "676:  LONGLONG base_unit = MB;",
          "677:  HWND hCtrl;",
          "680:  hCtrl = GetDlgItem(hMainDialog, IDC_PERSISTENCE_UNITS);",
          "681:  IGNORE_RETVAL(ComboBox_ResetContent(hCtrl));",
          "682:  for (i = 0; i < 3; i++) {",
          "683:   IGNORE_RETVAL(ComboBox_SetItemData(hCtrl, ComboBox_AddStringU(hCtrl, lmprintf(MSG_022 + i)), i));",
          "685:   if (SelectedDrive.DiskSize > 7 * base_unit)",
          "686:    proposed_unit_selection = i;",
          "687:   base_unit *= 1024;",
          "689:   if (SelectedDrive.DiskSize < 2 * base_unit)",
          "690:    break;",
          "691:  }",
          "692:  if (persistence_unit_selection < 0)",
          "693:   persistence_unit_selection = proposed_unit_selection;",
          "695:  IGNORE_RETVAL(ComboBox_SetCurSel(hCtrl, persistence_unit_selection));",
          "696:  pos /= MB;",
          "697:  max /= MB;",
          "698:  for (i = 0; i < persistence_unit_selection; i++) {",
          "699:   pos /= 1024;",
          "700:   max /= 1024;",
          "701:  }",
          "703:  hCtrl = GetDlgItem(hMainDialog, IDC_PERSISTENCE_SLIDER);",
          "704:  SendMessage(hCtrl, TBM_SETRANGEMIN, (WPARAM)FALSE, (LPARAM)0);",
          "705:  SendMessage(hCtrl, TBM_SETRANGEMAX, (WPARAM)FALSE, (LPARAM)max);",
          "706:  SendMessage(hCtrl, TBM_SETPOS, (WPARAM)TRUE, (LPARAM)pos);",
          "",
          "[Added Lines]",
          "672: void SetPeristencePos(uint64_t pos)",
          "677:   TogglePersistenceControls(TRUE);",
          "680:   TogglePersistenceControls(FALSE);",
          "687: void SetPersistenceSize(void)",
          "688: {",
          "689:  int i, proposed_unit_selection = 0;",
          "690:  LONGLONG base_unit = MB;",
          "691:  HWND hCtrl;",
          "692:  uint64_t max = 0, pos = 0;",
          "694:  if (ComboBox_GetCurSel(hDeviceList) >= 0) {",
          "695:   max = SelectedDrive.DiskSize - img_report.projected_size;",
          "696:   persistence_size = min(persistence_size, max);",
          "697:   pos = persistence_size;",
          "700:   hCtrl = GetDlgItem(hMainDialog, IDC_PERSISTENCE_UNITS);",
          "701:   IGNORE_RETVAL(ComboBox_ResetContent(hCtrl));",
          "702:   for (i = 0; i < 3; i++) {",
          "703:    IGNORE_RETVAL(ComboBox_SetItemData(hCtrl, ComboBox_AddStringU(hCtrl, lmprintf(MSG_022 + i)), i));",
          "705:    if (SelectedDrive.DiskSize > 7 * base_unit)",
          "706:     proposed_unit_selection = i;",
          "707:    base_unit *= 1024;",
          "709:    if (SelectedDrive.DiskSize < 2 * base_unit)",
          "710:     break;",
          "711:   }",
          "712:   if (persistence_unit_selection < 0)",
          "713:    persistence_unit_selection = proposed_unit_selection;",
          "715:   IGNORE_RETVAL(ComboBox_SetCurSel(hCtrl, persistence_unit_selection));",
          "716:   pos /= MB;",
          "717:   max /= MB;",
          "718:   for (i = 0; i < persistence_unit_selection; i++) {",
          "719:    pos /= 1024;",
          "720:    max /= 1024;",
          "721:   }",
          "722:  }",
          "724:  hCtrl = GetDlgItem(hMainDialog, IDC_PERSISTENCE_SLIDER);",
          "727:  SendMessage(hCtrl, TBM_SETRANGEMIN, (WPARAM)TRUE, (LPARAM)0);",
          "728:  SendMessage(hCtrl, TBM_SETRANGEMAX, (WPARAM)TRUE, (LPARAM)max);",
          "729:  SendMessage(hCtrl, TBM_SETPOS, (WPARAM)TRUE, (LPARAM)pos);",
          "731:  SetPeristencePos(pos);",
          "732: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "770:  } else if (image_options & IMOP_PERSISTENCE) {",
          "771:   SetWindowTextU(GetDlgItem(hMainDialog, IDS_IMAGE_OPTION_TXT), lmprintf(MSG_123));",
          "772:   TogglePersistenceControls(persistence_size != 0);",
          "774:  }",
          "776:  InvalidateRect(hMainDialog, NULL, TRUE);",
          "",
          "[Removed Lines]",
          "773:   SetPersistenceSize(persistence_size, SelectedDrive.DiskSize - img_report.projected_size);",
          "",
          "[Added Lines]",
          "791:   SetPersistenceSize();",
          "",
          "---------------"
        ],
        "src/ui.h||src/ui.h": [
          "File: src/ui.h -> src/ui.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "63: extern void PositionMainControls(HWND hDlg);",
          "64: extern void AdjustForLowDPI(HWND hDlg);",
          "65: extern void SetSectionHeaders(HWND hDlg);",
          "67: extern void TogglePersistenceControls(BOOL display);",
          "68: extern void ToggleAdvancedDeviceOptions(BOOL enable);",
          "69: extern void ToggleAdvancedFormatOptions(BOOL enable);",
          "",
          "[Removed Lines]",
          "66: extern void SetPersistenceSize(uint64_t pos, uint64_t max);",
          "",
          "[Added Lines]",
          "66: extern void SetPeristencePos(uint64_t pos);",
          "67: extern void SetPersistenceSize(void);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "302f108d7994291ff6a9c9366de3494757f36510",
      "candidate_info": {
        "commit_hash": "302f108d7994291ff6a9c9366de3494757f36510",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/302f108d7994291ff6a9c9366de3494757f36510",
        "files": [
          "src/process.c",
          "src/process.h",
          "src/rufus.rc"
        ],
        "message": "[process] add a more efficient method to search for processes\n\n* As suggested in #773\n* Don't switch to using this method though, as it requires a handle to the disk or volume\n  to be obtained, and we use the process search in case there is an issue doing so.",
        "before_after_code_files": [
          "src/process.c||src/process.c",
          "src/process.h||src/process.h",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "src/process.c||src/process.c": [
          "File: src/process.c -> src/process.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "48: #endif",
          "50: PF_TYPE_DECL(NTAPI, NTSTATUS, NtQuerySystemInformation, (SYSTEM_INFORMATION_CLASS, PVOID, ULONG, PULONG));",
          "51: PF_TYPE_DECL(NTAPI, NTSTATUS, NtQueryObject, (HANDLE, OBJECT_INFORMATION_CLASS, PVOID, ULONG, PULONG));",
          "52: PF_TYPE_DECL(NTAPI, NTSTATUS, NtDuplicateObject, (HANDLE, HANDLE, HANDLE, PHANDLE, ACCESS_MASK, ULONG, ULONG));",
          "53: PF_TYPE_DECL(NTAPI, NTSTATUS, NtOpenProcess, (PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, PCLIENT_ID));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51: PF_TYPE_DECL(NTAPI, NTSTATUS, NtQueryInformationFile, (HANDLE, PIO_STATUS_BLOCK, PVOID, ULONG, FILE_INFORMATION_CLASS));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "338: }",
          "339: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "350: NTSTATUS PhQueryProcessesUsingVolumeOrFile(HANDLE VolumeOrFileHandle,",
          "351:  PFILE_PROCESS_IDS_USING_FILE_INFORMATION *Information)",
          "352: {",
          "353:  static ULONG initialBufferSize = 16 * KB;",
          "354:  NTSTATUS status = STATUS_SUCCESS;",
          "355:  PVOID buffer;",
          "356:  ULONG bufferSize;",
          "357:  IO_STATUS_BLOCK isb;",
          "359:  PF_INIT_OR_SET_STATUS(NtQueryInformationFile, NtDll);",
          "360:  if (!NT_SUCCESS(status))",
          "361:   return status;",
          "363:  bufferSize = initialBufferSize;",
          "364:  buffer = PhAllocate(bufferSize);",
          "365:  if (buffer == NULL)",
          "366:   return STATUS_INSUFFICIENT_RESOURCES;",
          "368:  while ((status = pfNtQueryInformationFile(VolumeOrFileHandle, &isb, buffer, bufferSize,",
          "369:   FileProcessIdsUsingFileInformation)) == STATUS_INFO_LENGTH_MISMATCH) {",
          "370:   PhFree(buffer);",
          "371:   bufferSize *= 2;",
          "373:   if (bufferSize > 64 * MB)",
          "374:    return STATUS_INSUFFICIENT_RESOURCES;",
          "375:   buffer = PhAllocate(bufferSize);",
          "376:  }",
          "378:  if (!NT_SUCCESS(status)) {",
          "379:   PhFree(buffer);",
          "380:   return status;",
          "381:  }",
          "383:  if (bufferSize <= 64 * MB)",
          "384:   initialBufferSize = bufferSize;",
          "387:  return status;",
          "388: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "553:  return bFound;",
          "554: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "615: BOOL SearchProcessAlt(char* HandleName)",
          "616: {",
          "617:  NTSTATUS status = STATUS_SUCCESS;",
          "618:  ULONG i;",
          "619:  HANDLE searchHandle = NULL;",
          "620:  BOOLEAN bFound = FALSE;",
          "621:  PFILE_PROCESS_IDS_USING_FILE_INFORMATION info = NULL;",
          "623:  status = PhCreateHeap();",
          "624:  if (!NT_SUCCESS(status))",
          "625:   goto out;",
          "628:  searchHandle = CreateFileA(HandleName, GENERIC_READ, FILE_SHARE_READ | FILE_SHARE_WRITE,",
          "629:   NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);",
          "631:  status = PhQueryProcessesUsingVolumeOrFile(searchHandle, &info);",
          "633:  if (NT_SUCCESS(status) && (info->NumberOfProcessIdsInList > 0)) {",
          "634:   bFound = TRUE;",
          "635:   uprintf(\"NOTE: The following process(es) or service(s) are accessing %s:\", HandleName);",
          "636:   for (i = 0; i < info->NumberOfProcessIdsInList; i++) {",
          "637:    uprintf(\"o Process with PID %ld\", info->ProcessIdList[i]);",
          "638:   }",
          "639:  }",
          "641: out:",
          "642:  safe_closehandle(searchHandle);",
          "643:  PhFree(info);",
          "644:  PhDestroyHeap();",
          "645:  if (!NT_SUCCESS(status))",
          "646:   uprintf(\"SearchProcessAlt('%s') failed: %s\", HandleName, NtStatusError(status));",
          "647:  return bFound;",
          "648: }",
          "",
          "---------------"
        ],
        "src/process.h||src/process.h": [
          "File: src/process.h -> src/process.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: #define STATUS_INSUFFICIENT_RESOURCES ((NTSTATUS)0xC000009AL)",
          "48: #define STATUS_NOT_SUPPORTED   ((NTSTATUS)0xC00000BBL)",
          "52: #define NtCurrentProcess() ((HANDLE)(LONG_PTR)-1)",
          "",
          "[Removed Lines]",
          "50: #define SystemExtendedHandleInformation 64",
          "",
          "[Added Lines]",
          "50: #define SystemExtendedHandleInformation    64",
          "51: #define FileProcessIdsUsingFileInformation 47",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "118:  ULONG NumberOfTypes;",
          "119: } OBJECT_TYPES_INFORMATION, *POBJECT_TYPES_INFORMATION;",
          "121: #define ALIGN_UP_BY(Address, Align) (((ULONG_PTR)(Address) + (Align) - 1) & ~((Align) - 1))",
          "122: #define ALIGN_UP(Address, Type) ALIGN_UP_BY(Address, sizeof(Type))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123: typedef  struct _FILE_PROCESS_IDS_USING_FILE_INFORMATION {",
          "124:  ULONG NumberOfProcessIdsInList;",
          "125:  ULONG_PTR ProcessIdList[1];",
          "126: } FILE_PROCESS_IDS_USING_FILE_INFORMATION, *PFILE_PROCESS_IDS_USING_FILE_INFORMATION;",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 2.15.1106\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 2.15.1107\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "336: VS_VERSION_INFO VERSIONINFO",
          "339:  FILEFLAGSMASK 0x3fL",
          "340: #ifdef _DEBUG",
          "341:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "337:  FILEVERSION 2,15,1106,0",
          "338:  PRODUCTVERSION 2,15,1106,0",
          "",
          "[Added Lines]",
          "337:  FILEVERSION 2,15,1107,0",
          "338:  PRODUCTVERSION 2,15,1107,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "352:         BEGIN",
          "353:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "354:             VALUE \"FileDescription\", \"Rufus\"",
          "356:             VALUE \"InternalName\", \"Rufus\"",
          "357:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
          "358:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "359:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "360:             VALUE \"ProductName\", \"Rufus\"",
          "362:         END",
          "363:     END",
          "364:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "355:             VALUE \"FileVersion\", \"2.15.1106\"",
          "361:             VALUE \"ProductVersion\", \"2.15.1106\"",
          "",
          "[Added Lines]",
          "355:             VALUE \"FileVersion\", \"2.15.1107\"",
          "361:             VALUE \"ProductVersion\", \"2.15.1107\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}