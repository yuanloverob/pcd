{
  "cve_id": "CVE-2016-10211",
  "cve_desc": "libyara/grammar.y in YARA 3.5.0 allows remote attackers to cause a denial of service (use-after-free and application crash) via a crafted rule that is mishandled in the yr_parser_lookup_loop_variable function.",
  "repo": "VirusTotal/yara",
  "patch_hash": "890c3f850293176c0e996a602ffa88b315f4e98f",
  "patch_info": {
    "commit_hash": "890c3f850293176c0e996a602ffa88b315f4e98f",
    "repo": "VirusTotal/yara",
    "commit_url": "https://github.com/VirusTotal/yara/commit/890c3f850293176c0e996a602ffa88b315f4e98f",
    "files": [
      "libyara/grammar.c",
      "libyara/grammar.y"
    ],
    "message": "Fix issue #575",
    "before_after_code_files": [
      "libyara/grammar.c||libyara/grammar.c",
      "libyara/grammar.y||libyara/grammar.y"
    ]
  },
  "patch_diff": {
    "libyara/grammar.c||libyara/grammar.c": [
      "File: libyara/grammar.c -> libyara/grammar.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "547: #define YYFINAL  2",
      "552: #define YYNTOKENS  72",
      "554: #define YYNNTS  41",
      "",
      "[Removed Lines]",
      "549: #define YYLAST   408",
      "556: #define YYNRULES  121",
      "558: #define YYNSTATES  209",
      "",
      "[Added Lines]",
      "549: #define YYLAST   406",
      "556: #define YYNRULES  122",
      "558: #define YYNSTATES  210",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "612:      472,   485,   502,   503,   509,   508,   524,   523,   539,   553,",
      "613:      554,   559,   560,   561,   562,   567,   652,   698,   756,   801,",
      "614:      802,   806,   831,   867,   913,   935,   944,   953,   968,   980,",
      "622: };",
      "623: #endif",
      "",
      "[Removed Lines]",
      "615:      994,  1007,  1019,  1049,  1018,  1163,  1162,  1241,  1247,  1254,",
      "616:     1253,  1316,  1315,  1376,  1385,  1394,  1403,  1412,  1421,  1430,",
      "617:     1434,  1442,  1443,  1448,  1470,  1482,  1498,  1497,  1503,  1514,",
      "618:     1515,  1520,  1527,  1538,  1539,  1543,  1551,  1555,  1565,  1579,",
      "619:     1595,  1605,  1614,  1639,  1651,  1663,  1679,  1691,  1707,  1752,",
      "620:     1771,  1789,  1807,  1825,  1851,  1869,  1879,  1889,  1899,  1909,",
      "621:     1919,  1929",
      "",
      "[Added Lines]",
      "615:      994,  1007,  1018,  1024,  1054,  1023,  1168,  1167,  1246,  1252,",
      "616:     1259,  1258,  1321,  1320,  1381,  1390,  1399,  1408,  1417,  1426,",
      "617:     1435,  1439,  1447,  1448,  1453,  1475,  1487,  1503,  1502,  1508,",
      "618:     1519,  1520,  1525,  1532,  1543,  1544,  1548,  1556,  1560,  1570,",
      "619:     1584,  1600,  1610,  1619,  1644,  1656,  1668,  1684,  1696,  1712,",
      "620:     1757,  1776,  1794,  1812,  1830,  1856,  1874,  1884,  1894,  1904,",
      "621:     1914,  1924,  1934",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "672: #define yypact_value_is_default(Yystate) \\",
      "673:   (!!((Yystate) == (-73)))",
      "677: #define yytable_value_is_error(Yytable_value) \\",
      "678:   0",
      "",
      "[Removed Lines]",
      "675: #define YYTABLE_NINF -94",
      "",
      "[Added Lines]",
      "675: #define YYTABLE_NINF -95",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "682: static const yytype_int16 yypact[] =",
      "683: {",
      "705: };",
      "",
      "[Removed Lines]",
      "684:      -73,    79,   -73,   -32,    -4,   -73,   -73,    94,   -73,   -73,",
      "685:      -73,   -73,    13,   -73,   -73,   -73,   -73,    -8,    72,     6,",
      "686:      -73,    78,   111,   -73,    61,   122,   123,    82,   -73,    90,",
      "687:      123,   -73,   147,   150,    16,   -73,    96,   147,   -73,   101,",
      "688:       97,   -73,   -73,   -73,   -73,   151,    53,   -73,    48,   -73,",
      "689:      -73,   -73,   149,   145,   -73,    -9,   -73,   103,   107,   -73,",
      "690:      -73,   106,   -73,   -73,   -73,   -73,   -73,   -73,   110,   -73,",
      "691:      -73,   135,    48,   135,    48,   -33,   -73,    64,   -73,   144,",
      "692:      306,   -73,   -73,   135,   108,   135,   135,   135,   135,    -7,",
      "693:      322,   -73,   -73,   -73,    64,   117,   163,   168,   135,    48,",
      "694:      -73,   -73,    -6,   167,   135,   135,   135,   135,   135,   135,",
      "695:      135,   135,   135,   135,   135,   135,   135,   135,   135,   135,",
      "696:      135,    86,    86,   322,   135,   -73,   243,   261,   183,   203,",
      "697:      159,    -6,   -73,   -73,   -73,   279,   121,   125,    95,    48,",
      "698:       48,   -73,   -73,   -73,   -73,   322,   337,   351,   -43,   322,",
      "699:      322,   322,   322,   322,   322,    40,    40,    58,    58,   -73,",
      "700:      -73,   -73,   -73,   -73,   -73,   -73,   -73,   129,   -73,   -73,",
      "701:      -73,   -73,   128,   -73,   -73,    48,   152,   -73,    15,   135,",
      "702:      131,   -73,    95,   -73,   -73,    71,   -73,   223,   135,   133,",
      "703:      -73,   132,   -73,    15,   -73,    73,   129,   -73,    48,   -73,",
      "704:      -73,   135,   134,    31,   322,    48,   -73,    49,   -73",
      "",
      "[Added Lines]",
      "684:      -73,    90,   -73,   -32,   -10,   -73,   -73,    93,   -73,   -73,",
      "685:      -73,   -73,     1,   -73,   -73,   -73,   -73,   -49,     7,   -36,",
      "686:      -73,    20,    26,   -73,   -28,    92,    46,     4,   -73,    40,",
      "687:       46,   -73,   100,   119,    16,   -73,    72,   100,   -73,    77,",
      "688:       83,   -73,   -73,   -73,   -73,   134,    59,   -73,    48,   -73,",
      "689:      -73,   -73,   133,   136,   -73,   -18,   -73,    88,    95,   -73,",
      "690:      -73,    91,   -73,   -73,   -73,   -73,   -73,   -73,   102,   -73,",
      "691:      -73,   126,    48,   126,    48,   -44,   -73,    85,   -73,   127,",
      "692:      297,   -73,   -73,   126,   110,   126,   126,   126,   126,     2,",
      "693:      313,   -73,   -73,   -73,    85,   111,   154,   172,   126,    48,",
      "694:      -73,   -73,    -6,   162,   126,   126,   126,   126,   126,   126,",
      "695:      126,   126,   126,   126,   126,   126,   126,   126,   126,   126,",
      "696:      126,    60,    60,   313,   126,   -73,   234,   252,   174,   194,",
      "697:      -73,   153,    -6,   -73,   -73,   -73,   270,   117,   120,   108,",
      "698:       48,    48,   -73,   -73,   -73,   -73,   313,   328,   342,   349,",
      "699:      313,   313,   313,   313,   313,   313,   113,   113,    53,    53,",
      "700:      -73,   -73,   -73,   -73,   -73,   -73,   -73,   -73,   121,   -73,",
      "701:      -73,   -73,   -73,   124,   -73,   -73,    48,   151,   -73,    -1,",
      "702:      126,   125,   -73,   108,   -73,   -73,    18,   -73,   214,   126,",
      "703:      129,   -73,   143,   -73,    -1,   -73,    63,   121,   -73,    48,",
      "704:      -73,   -73,   126,   144,    31,   313,    48,   -73,    33,   -73",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "714:       23,    22,    12,    24,     0,    14,     0,     0,    10,     0,",
      "715:       13,    25,     0,     0,     0,    26,     0,    15,    32,     0,",
      "716:        0,    28,    27,    30,    31,     0,    34,    33,     0,    11,",
      "723:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,",
      "724:        0,    35,    37,    60,     0,    61,     0,     0,     0,     0,",
      "733: };",
      "736: static const yytype_int16 yypgoto[] =",
      "737: {",
      "742:      -67",
      "743: };",
      "",
      "[Removed Lines]",
      "717:       29,    38,     0,     0,    45,    59,   103,   105,   107,   100,",
      "718:      101,     0,   102,    53,    97,    98,    94,    95,     0,    55,",
      "719:       56,     0,     0,     0,     0,   108,   121,    16,    54,     0,",
      "720:       79,    39,    39,     0,     0,     0,     0,     0,     0,     0,",
      "721:       93,   109,    68,   118,     0,    54,    79,     0,     0,    49,",
      "722:       71,    69,     0,     0,     0,     0,     0,     0,     0,     0,",
      "725:        0,     0,    80,    96,    46,     0,     0,    50,    51,     0,",
      "726:        0,    88,    86,    67,    57,    58,   117,   115,   116,    77,",
      "727:       78,    73,    75,    74,    76,   119,   120,   110,   111,   112,",
      "728:      113,   114,    42,    41,    43,    44,    40,     0,   104,   106,",
      "729:       99,    62,     0,    47,    48,     0,    72,    70,     0,     0,",
      "730:        0,    65,    52,    91,    92,     0,    89,     0,     0,     0,",
      "731:       82,     0,    87,     0,    83,     0,    84,    63,     0,    90,",
      "732:       81,     0,     0,     0,    85,     0,    66,     0,    64",
      "738:      -73,   -73,   199,   218,   -73,   -73,   -73,   -73,   -73,   -73,",
      "739:      -73,   -73,   -73,   -73,   192,   -73,   186,   -73,   -73,   142,",
      "740:      -73,   -73,   -73,   -73,   126,   -48,   -72,   -73,   -73,   -73,",
      "741:      -73,   -73,   -73,    50,   -73,   100,   -73,   -73,    35,   164,",
      "",
      "[Added Lines]",
      "717:       29,    38,     0,     0,    45,    59,   104,   106,   108,   101,",
      "718:      102,     0,   103,    53,    98,    99,    95,    96,     0,    55,",
      "719:       56,     0,     0,     0,     0,   109,   122,    16,    54,     0,",
      "720:       80,    39,    39,     0,     0,     0,     0,     0,     0,     0,",
      "721:       94,   110,    69,   119,     0,    54,    80,     0,     0,    49,",
      "722:       72,    70,     0,     0,     0,     0,     0,     0,     0,     0,",
      "725:       62,     0,     0,    81,    97,    46,     0,     0,    50,    51,",
      "726:        0,     0,    89,    87,    68,    57,    58,   118,   116,   117,",
      "727:       78,    79,    74,    76,    75,    77,   120,   121,   111,   112,",
      "728:      113,   114,   115,    42,    41,    43,    44,    40,     0,   105,",
      "729:      107,   100,    63,     0,    47,    48,     0,    73,    71,     0,",
      "730:        0,     0,    66,    52,    92,    93,     0,    90,     0,     0,",
      "731:        0,    83,     0,    88,     0,    84,     0,    85,    64,     0,",
      "732:       91,    82,     0,     0,     0,    86,     0,    67,     0,    65",
      "738:      -73,   -73,   211,   212,   -73,   -73,   -73,   -73,   -73,   -73,",
      "739:      -73,   -73,   -73,   -73,   189,   -73,   183,   -73,   -73,   139,",
      "740:      -73,   -73,   -73,   -73,   130,   -48,   -72,   -73,   -73,   -73,",
      "741:      -73,   -73,   -73,    41,   -73,   103,   -73,   -73,    29,   164,",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "747: {",
      "748:       -1,     1,     5,     6,    17,    33,    25,    28,    40,     7,",
      "749:       15,    19,    21,    30,    31,    37,    38,    52,    53,   121,",
      "752:       80",
      "753: };",
      "",
      "[Removed Lines]",
      "750:      166,    75,   136,   137,    76,    94,    78,   180,   202,   191,",
      "751:      140,   139,   189,   125,   195,   143,   178,   185,   186,    79,",
      "",
      "[Added Lines]",
      "750:      167,    75,   137,   138,    76,    94,    78,   181,   203,   192,",
      "751:      141,   140,   190,   125,   196,   144,   179,   186,   187,    79,",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "758: static const yytype_int16 yytable[] =",
      "759: {",
      "797:        0,     0,     0,   114,   115,   116,   117,   118,   119,   120,",
      "801: };",
      "803: static const yytype_int16 yycheck[] =",
      "804: {",
      "809:      107,   108,   109,   110,   111,   112,   113,   114,   115,   116,",
      "842:       -1,    -1,    -1,    51,    52,    53,    54,    55,    56,    57,",
      "846: };",
      "",
      "[Removed Lines]",
      "760:       77,    90,    95,   130,    91,     4,    93,    96,   114,   115,",
      "761:      116,   117,   118,   119,   120,    11,   123,    83,   126,   127,",
      "762:      128,   129,    84,    16,    92,   131,   183,   138,   141,     8,",
      "763:      184,   135,    41,    97,    98,    42,    99,   145,   146,   147,",
      "764:      148,   149,   150,   151,   152,   153,   154,   155,   156,   157,",
      "765:      158,   159,   160,   161,    43,    44,    18,   167,    54,    55,",
      "766:       56,    57,    58,   142,    59,    60,    61,    62,    22,    63,",
      "767:       45,   100,   101,    51,   -36,    64,    65,    66,    67,     2,",
      "768:        3,    68,    20,   -17,   -17,   -17,    69,    70,    23,   100,",
      "769:      101,   176,   177,   116,   117,   118,   119,   120,    12,    13,",
      "770:       14,   206,    71,   182,   100,   101,    72,    73,   162,   163,",
      "771:      164,   165,   187,   118,   119,   120,     4,    74,    24,   208,",
      "772:       54,   196,    56,    57,    58,    26,    59,    60,    61,    62,",
      "773:       27,    63,   179,    29,   204,   -54,   -54,    64,    65,    66,",
      "774:       67,   192,   193,   200,   201,    54,    32,    56,    57,    58,",
      "775:      203,    59,    60,    61,    62,    34,    63,   207,    36,    39,",
      "776:       49,    46,    64,    65,    71,    48,    82,    50,    81,    73,",
      "777:       85,   105,   106,   107,    86,    87,   102,   124,   134,    88,",
      "778:      114,   115,   116,   117,   118,   119,   120,   132,    63,    71,",
      "779:      171,   174,   181,   101,    73,   -93,   175,   197,   103,   104,",
      "780:      188,   198,     9,   205,    88,   105,   106,   107,   108,   109,",
      "781:      110,   111,   112,   113,   114,   115,   116,   117,   118,   119,",
      "782:      120,    10,    35,    47,   122,   105,   106,   107,   199,   144,",
      "783:      190,   172,    89,   133,   114,   115,   116,   117,   118,   119,",
      "784:      120,     0,     0,     0,     0,   105,   106,   107,     0,     0,",
      "785:        0,     0,     0,   170,   114,   115,   116,   117,   118,   119,",
      "786:      120,     0,     0,     0,     0,   105,   106,   107,     0,     0,",
      "787:        0,     0,     0,   133,   114,   115,   116,   117,   118,   119,",
      "788:      120,     0,     0,     0,     0,   105,   106,   107,     0,     0,",
      "789:        0,     0,     0,   194,   114,   115,   116,   117,   118,   119,",
      "790:      120,     0,     0,   105,   106,   107,     0,     0,     0,     0,",
      "791:        0,   168,   114,   115,   116,   117,   118,   119,   120,     0,",
      "792:        0,   105,   106,   107,     0,     0,     0,     0,     0,   169,",
      "793:      114,   115,   116,   117,   118,   119,   120,     0,   -93,     0,",
      "794:        0,   103,   104,     0,     0,     0,     0,   173,   105,   106,",
      "795:      107,   108,   109,   110,   111,   112,   113,   114,   115,   116,",
      "796:      117,   118,   119,   120,   105,   106,   107,     0,     0,     0,",
      "798:      106,   107,     0,     0,     0,     0,     0,     0,   114,   115,",
      "799:      116,   117,   118,   119,   120,   107,     0,     0,     0,     0,",
      "800:        0,     0,   114,   115,   116,   117,   118,   119,   120",
      "805:       48,    68,    74,    10,    71,    37,    73,    74,    51,    52,",
      "806:       53,    54,    55,    56,    57,    19,    83,    26,    85,    86,",
      "807:       87,    88,    31,    10,    72,    32,    11,    99,    34,    61,",
      "808:       15,    98,    16,    66,    67,    19,    69,   104,   105,   106,",
      "810:      117,   118,   119,   120,    38,    39,    64,   124,    10,    11,",
      "811:       12,    13,    14,    69,    16,    17,    18,    19,    62,    21,",
      "812:       54,    40,    41,    20,    21,    27,    28,    29,    30,     0,",
      "813:        1,    33,    10,     4,     5,     6,    38,    39,    10,    40,",
      "814:       41,   139,   140,    53,    54,    55,    56,    57,     4,     5,",
      "815:        6,    70,    54,   175,    40,    41,    58,    59,    22,    23,",
      "816:       24,    25,   179,    55,    56,    57,    37,    69,     7,    70,",
      "817:       10,   188,    12,    13,    14,    64,    16,    17,    18,    19,",
      "818:        8,    21,     3,    10,   201,    40,    41,    27,    28,    29,",
      "819:       30,    70,    71,    70,    71,    10,    64,    12,    13,    14,",
      "820:      198,    16,    17,    18,    19,    65,    21,   205,    11,     9,",
      "821:       63,    65,    27,    28,    54,    64,    21,    16,    19,    59,",
      "822:       67,    42,    43,    44,    67,    69,    32,    69,    10,    69,",
      "823:       51,    52,    53,    54,    55,    56,    57,    70,    21,    54,",
      "824:       31,    70,    64,    41,    59,    32,    71,    64,    35,    36,",
      "825:       69,    69,     3,    69,    69,    42,    43,    44,    45,    46,",
      "826:       47,    48,    49,    50,    51,    52,    53,    54,    55,    56,",
      "827:       57,     3,    30,    37,    82,    42,    43,    44,   193,   103,",
      "828:      180,   131,    68,    70,    51,    52,    53,    54,    55,    56,",
      "829:       57,    -1,    -1,    -1,    -1,    42,    43,    44,    -1,    -1,",
      "830:       -1,    -1,    -1,    70,    51,    52,    53,    54,    55,    56,",
      "831:       57,    -1,    -1,    -1,    -1,    42,    43,    44,    -1,    -1,",
      "832:       -1,    -1,    -1,    70,    51,    52,    53,    54,    55,    56,",
      "833:       57,    -1,    -1,    -1,    -1,    42,    43,    44,    -1,    -1,",
      "834:       -1,    -1,    -1,    70,    51,    52,    53,    54,    55,    56,",
      "835:       57,    -1,    -1,    42,    43,    44,    -1,    -1,    -1,    -1,",
      "836:       -1,    68,    51,    52,    53,    54,    55,    56,    57,    -1,",
      "837:       -1,    42,    43,    44,    -1,    -1,    -1,    -1,    -1,    68,",
      "838:       51,    52,    53,    54,    55,    56,    57,    -1,    32,    -1,",
      "839:       -1,    35,    36,    -1,    -1,    -1,    -1,    68,    42,    43,",
      "840:       44,    45,    46,    47,    48,    49,    50,    51,    52,    53,",
      "841:       54,    55,    56,    57,    42,    43,    44,    -1,    -1,    -1,",
      "843:       43,    44,    -1,    -1,    -1,    -1,    -1,    -1,    51,    52,",
      "844:       53,    54,    55,    56,    57,    44,    -1,    -1,    -1,    -1,",
      "845:       -1,    -1,    51,    52,    53,    54,    55,    56,    57",
      "",
      "[Added Lines]",
      "760:       77,    90,    95,   130,    91,     4,    93,    96,    83,    11,",
      "761:      184,    16,   131,    84,   185,    18,   123,    20,   126,   127,",
      "762:      128,   129,    97,    98,    92,    99,    22,   139,   142,     8,",
      "763:       23,   136,    41,    24,   132,    42,    26,   146,   147,   148,",
      "764:      149,   150,   151,   152,   153,   154,   155,   156,   157,   158,",
      "765:      159,   160,   161,   162,    43,    44,    29,   168,    54,    55,",
      "766:       56,    57,    58,   143,    59,    60,    61,    62,    32,    63,",
      "767:       45,   100,   101,   100,   101,    64,    65,    66,    67,    51,",
      "768:      -36,    68,   163,   164,   165,   166,    69,    70,   193,   194,",
      "769:        2,     3,   177,   178,   -17,   -17,   -17,    12,    13,    14,",
      "770:       27,   207,    71,   209,   183,    34,    72,    73,   118,   119,",
      "771:      120,    36,    54,   188,    56,    57,    58,    74,    59,    60,",
      "772:       61,    62,   197,    63,   180,   100,   101,     4,    39,    64,",
      "773:       65,    66,    67,   201,   202,   205,    54,    46,    56,    57,",
      "774:       58,    48,    59,    60,    61,    62,    49,    63,   -54,   -54,",
      "775:       50,   204,    81,    64,    65,    85,    71,    82,   208,   102,",
      "776:       87,    73,    86,   105,   106,   107,   116,   117,   118,   119,",
      "777:      120,    88,   114,   115,   116,   117,   118,   119,   120,   124,",
      "778:       71,   133,   135,    63,   172,    73,   -94,   175,   182,   103,",
      "779:      104,   176,   101,   198,   189,    88,   105,   106,   107,   108,",
      "780:      109,   110,   111,   112,   113,   114,   115,   116,   117,   118,",
      "781:      119,   120,   199,   206,     9,    10,   105,   106,   107,    35,",
      "782:       47,   122,   191,   200,   134,   114,   115,   116,   117,   118,",
      "783:      119,   120,    89,   145,     0,   173,   105,   106,   107,     0,",
      "784:        0,     0,     0,     0,   171,   114,   115,   116,   117,   118,",
      "785:      119,   120,     0,     0,     0,     0,   105,   106,   107,     0,",
      "786:        0,     0,     0,     0,   134,   114,   115,   116,   117,   118,",
      "787:      119,   120,     0,     0,     0,     0,   105,   106,   107,     0,",
      "788:        0,     0,     0,     0,   195,   114,   115,   116,   117,   118,",
      "789:      119,   120,     0,     0,   105,   106,   107,     0,     0,     0,",
      "790:        0,     0,   169,   114,   115,   116,   117,   118,   119,   120,",
      "791:        0,     0,   105,   106,   107,     0,     0,     0,     0,     0,",
      "792:      170,   114,   115,   116,   117,   118,   119,   120,     0,   -94,",
      "793:        0,     0,   103,   104,     0,     0,     0,     0,   174,   105,",
      "794:      106,   107,   108,   109,   110,   111,   112,   113,   114,   115,",
      "795:      116,   117,   118,   119,   120,   105,   106,   107,     0,     0,",
      "796:        0,     0,     0,     0,   114,   115,   116,   117,   118,   119,",
      "797:      120,   106,   107,     0,     0,     0,     0,     0,     0,   114,",
      "798:      115,   116,   117,   118,   119,   120,   107,     0,     0,     0,",
      "800:      114,   115,   116,   117,   118,   119,   120",
      "805:       48,    68,    74,     1,    71,    37,    73,    74,    26,    19,",
      "806:       11,    10,    10,    31,    15,    64,    83,    10,    85,    86,",
      "807:       87,    88,    66,    67,    72,    69,    62,    99,    34,    61,",
      "808:       10,    98,    16,     7,    32,    19,    64,   104,   105,   106,",
      "810:      117,   118,   119,   120,    38,    39,    10,   124,    10,    11,",
      "811:       12,    13,    14,    69,    16,    17,    18,    19,    64,    21,",
      "812:       54,    40,    41,    40,    41,    27,    28,    29,    30,    20,",
      "813:       21,    33,    22,    23,    24,    25,    38,    39,    70,    71,",
      "814:        0,     1,   140,   141,     4,     5,     6,     4,     5,     6,",
      "815:        8,    70,    54,    70,   176,    65,    58,    59,    55,    56,",
      "816:       57,    11,    10,   180,    12,    13,    14,    69,    16,    17,",
      "817:       18,    19,   189,    21,     3,    40,    41,    37,     9,    27,",
      "818:       28,    29,    30,    70,    71,   202,    10,    65,    12,    13,",
      "819:       14,    64,    16,    17,    18,    19,    63,    21,    40,    41,",
      "820:       16,   199,    19,    27,    28,    67,    54,    21,   206,    32,",
      "821:       69,    59,    67,    42,    43,    44,    53,    54,    55,    56,",
      "822:       57,    69,    51,    52,    53,    54,    55,    56,    57,    69,",
      "823:       54,    70,    10,    21,    31,    59,    32,    70,    64,    35,",
      "824:       36,    71,    41,    64,    69,    69,    42,    43,    44,    45,",
      "825:       46,    47,    48,    49,    50,    51,    52,    53,    54,    55,",
      "826:       56,    57,    69,    69,     3,     3,    42,    43,    44,    30,",
      "827:       37,    82,   181,   194,    70,    51,    52,    53,    54,    55,",
      "828:       56,    57,    68,   103,    -1,   132,    42,    43,    44,    -1,",
      "829:       -1,    -1,    -1,    -1,    70,    51,    52,    53,    54,    55,",
      "830:       56,    57,    -1,    -1,    -1,    -1,    42,    43,    44,    -1,",
      "831:       -1,    -1,    -1,    -1,    70,    51,    52,    53,    54,    55,",
      "832:       56,    57,    -1,    -1,    -1,    -1,    42,    43,    44,    -1,",
      "833:       -1,    -1,    -1,    -1,    70,    51,    52,    53,    54,    55,",
      "834:       56,    57,    -1,    -1,    42,    43,    44,    -1,    -1,    -1,",
      "835:       -1,    -1,    68,    51,    52,    53,    54,    55,    56,    57,",
      "836:       -1,    -1,    42,    43,    44,    -1,    -1,    -1,    -1,    -1,",
      "837:       68,    51,    52,    53,    54,    55,    56,    57,    -1,    32,",
      "838:       -1,    -1,    35,    36,    -1,    -1,    -1,    -1,    68,    42,",
      "839:       43,    44,    45,    46,    47,    48,    49,    50,    51,    52,",
      "840:       53,    54,    55,    56,    57,    42,    43,    44,    -1,    -1,",
      "841:       -1,    -1,    -1,    -1,    51,    52,    53,    54,    55,    56,",
      "842:       57,    43,    44,    -1,    -1,    -1,    -1,    -1,    -1,    51,",
      "843:       52,    53,    54,    55,    56,    57,    44,    -1,    -1,    -1,",
      "845:       51,    52,    53,    54,    55,    56,    57",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "862:       40,    41,    32,    35,    36,    42,    43,    44,    45,    46,",
      "863:       47,    48,    49,    50,    51,    52,    53,    54,    55,    56,",
      "864:       57,    91,    91,   112,    69,   105,   112,   112,   112,   112,",
      "867:      112,   112,   112,   112,   112,   112,   112,   112,   112,   112,",
      "873: };",
      "",
      "[Removed Lines]",
      "865:       10,    32,    70,    70,    10,   112,    94,    95,    98,   103,",
      "866:      102,    34,    69,   107,    96,   112,   112,   112,   112,   112,",
      "868:      112,   112,    22,    23,    24,    25,    92,   112,    68,    68,",
      "869:       70,    31,   107,    68,    70,    71,    97,    97,   108,     3,",
      "870:       99,    64,    98,    11,    15,   109,   110,   112,    69,   104,",
      "871:      105,   101,    70,    71,    70,   106,   112,    64,    69,   110,",
      "872:       70,    71,   100,    97,   112,    69,    70,    97,    70",
      "",
      "[Added Lines]",
      "865:        1,    10,    32,    70,    70,    10,   112,    94,    95,    98,",
      "866:      103,   102,    34,    69,   107,    96,   112,   112,   112,   112,",
      "868:      112,   112,   112,    22,    23,    24,    25,    92,   112,    68,",
      "869:       68,    70,    31,   107,    68,    70,    71,    97,    97,   108,",
      "870:        3,    99,    64,    98,    11,    15,   109,   110,   112,    69,",
      "871:      104,   105,   101,    70,    71,    70,   106,   112,    64,    69,",
      "872:      110,    70,    71,   100,    97,   112,    69,    70,    97,    70",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "881:       86,    86,    87,    87,    89,    88,    90,    88,    88,    91,",
      "882:       91,    92,    92,    92,    92,    93,    93,    93,    93,    94,",
      "883:       94,    95,    95,    96,    97,    98,    98,    98,    98,    98,",
      "888:      112,   112,   112,   112,   112,   112,   112,   112,   112,   112,",
      "889:      112,   112,   112,   112,   112,   112,   112,   112,   112,   112,",
      "891: };",
      "",
      "[Removed Lines]",
      "884:       98,    98,    99,   100,    98,   101,    98,    98,    98,   102,",
      "885:       98,   103,    98,    98,    98,    98,    98,    98,    98,    98,",
      "886:       98,   104,   104,   105,   106,   106,   108,   107,   107,   109,",
      "887:      109,   110,   110,   111,   111,   111,   112,   112,   112,   112,",
      "890:      112,   112",
      "",
      "[Added Lines]",
      "884:       98,    98,    98,    99,   100,    98,   101,    98,    98,    98,",
      "885:      102,    98,   103,    98,    98,    98,    98,    98,    98,    98,",
      "886:       98,    98,   104,   104,   105,   106,   106,   108,   107,   107,",
      "887:      109,   109,   110,   110,   111,   111,   111,   112,   112,   112,",
      "890:      112,   112,   112",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "899:        3,     3,     1,     2,     0,     5,     0,     5,     3,     0,",
      "900:        2,     1,     1,     1,     1,     1,     3,     4,     4,     0,",
      "901:        1,     1,     3,     1,     1,     1,     1,     3,     3,     1,",
      "909: };",
      "",
      "[Removed Lines]",
      "902:        3,     3,     0,     0,    11,     0,     9,     3,     2,     0,",
      "903:        4,     0,     4,     3,     3,     3,     3,     3,     3,     1,",
      "904:        3,     3,     1,     5,     1,     3,     0,     4,     1,     1,",
      "905:        3,     1,     1,     1,     1,     1,     3,     1,     1,     4,",
      "906:        1,     1,     1,     1,     4,     1,     4,     1,     1,     2,",
      "907:        3,     3,     3,     3,     3,     3,     3,     3,     2,     3,",
      "908:        3,     1",
      "",
      "[Added Lines]",
      "902:        3,     3,     3,     0,     0,    11,     0,     9,     3,     2,",
      "903:        0,     4,     0,     4,     3,     3,     3,     3,     3,     3,",
      "904:        1,     3,     3,     1,     5,     1,     3,     0,     4,     1,",
      "905:        1,     3,     1,     1,     1,     1,     1,     3,     1,     1,",
      "906:        4,     1,     1,     1,     1,     4,     1,     4,     1,     1,",
      "907:        2,     3,     3,     3,     3,     3,     3,     3,     3,     2,",
      "908:        3,     3,     1",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "2587:   case 62:",
      "2589:     {",
      "2590:         int var_index;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2589:     {",
      "2590:         compiler->loop_depth--;",
      "2591:         compiler->loop_identifier[compiler->loop_depth] = NULL;",
      "2592:       }",
      "2594:     break;",
      "2596:   case 63:",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "2616:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
      "2617:       }",
      "2619:     break;",
      "2623:     {",
      "2624:         int mem_offset = LOOP_LOCAL_VARS * compiler->loop_depth;",
      "2625:         uint8_t* addr;",
      "",
      "[Removed Lines]",
      "2621:   case 63:",
      "",
      "[Added Lines]",
      "2630:   case 64:",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "2654:         compiler->loop_identifier[compiler->loop_depth] = (yyvsp[-4].c_string);",
      "2655:         compiler->loop_depth++;",
      "2656:       }",
      "2658:     break;",
      "2662:     {",
      "2663:         int mem_offset;",
      "",
      "[Removed Lines]",
      "2660:   case 64:",
      "",
      "[Added Lines]",
      "2669:   case 65:",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "2738:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "2739:       }",
      "2741:     break;",
      "2745:     {",
      "2746:         int mem_offset = LOOP_LOCAL_VARS * compiler->loop_depth;",
      "2747:         uint8_t* addr;",
      "",
      "[Removed Lines]",
      "2743:   case 65:",
      "",
      "[Added Lines]",
      "2752:   case 66:",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "2771:         compiler->loop_identifier[compiler->loop_depth] = NULL;",
      "2772:         compiler->loop_depth++;",
      "2773:       }",
      "2775:     break;",
      "2779:     {",
      "2780:         int mem_offset;",
      "",
      "[Removed Lines]",
      "2777:   case 66:",
      "",
      "[Added Lines]",
      "2786:   case 67:",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "2824:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "2826:       }",
      "2828:     break;",
      "2832:     {",
      "2833:         yr_parser_emit(yyscanner, OP_OF, NULL);",
      "2835:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "2836:       }",
      "2838:     break;",
      "2842:     {",
      "2843:         yr_parser_emit(yyscanner, OP_NOT, NULL);",
      "2845:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "2846:       }",
      "2848:     break;",
      "2852:     {",
      "2853:         YR_FIXUP* fixup;",
      "2854:         void* jmp_destination_addr;",
      "",
      "[Removed Lines]",
      "2830:   case 67:",
      "2840:   case 68:",
      "2850:   case 69:",
      "",
      "[Added Lines]",
      "2839:   case 68:",
      "2849:   case 69:",
      "2859:   case 70:",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "2874:         fixup->next = compiler->fixup_stack_head;",
      "2875:         compiler->fixup_stack_head = fixup;",
      "2876:       }",
      "2878:     break;",
      "2882:     {",
      "2883:         YR_FIXUP* fixup;",
      "2884:         uint8_t* and_addr;",
      "",
      "[Removed Lines]",
      "2880:   case 70:",
      "",
      "[Added Lines]",
      "2889:   case 71:",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "2915:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "2916:       }",
      "2918:     break;",
      "2922:     {",
      "2923:         YR_FIXUP* fixup;",
      "2924:         void* jmp_destination_addr;",
      "",
      "[Removed Lines]",
      "2920:   case 71:",
      "",
      "[Added Lines]",
      "2929:   case 72:",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "2943:         fixup->next = compiler->fixup_stack_head;",
      "2944:         compiler->fixup_stack_head = fixup;",
      "2945:       }",
      "2947:     break;",
      "2951:     {",
      "2952:         YR_FIXUP* fixup;",
      "2953:         uint8_t* or_addr;",
      "",
      "[Removed Lines]",
      "2949:   case 72:",
      "",
      "[Added Lines]",
      "2958:   case 73:",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "2984:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "2985:       }",
      "2987:     break;",
      "2991:     {",
      "2992:         compiler->last_result = yr_parser_reduce_operation(",
      "2993:             yyscanner, \"<\", (yyvsp[-2].expression), (yyvsp[0].expression));",
      "",
      "[Removed Lines]",
      "2989:   case 73:",
      "",
      "[Added Lines]",
      "2998:   case 74:",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "2997:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "2998:       }",
      "3000:     break;",
      "3004:     {",
      "3005:         compiler->last_result = yr_parser_reduce_operation(",
      "3006:             yyscanner, \">\", (yyvsp[-2].expression), (yyvsp[0].expression));",
      "",
      "[Removed Lines]",
      "3002:   case 74:",
      "",
      "[Added Lines]",
      "3011:   case 75:",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "3010:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "3011:       }",
      "3013:     break;",
      "3017:     {",
      "3018:         compiler->last_result = yr_parser_reduce_operation(",
      "3019:             yyscanner, \"<=\", (yyvsp[-2].expression), (yyvsp[0].expression));",
      "",
      "[Removed Lines]",
      "3015:   case 75:",
      "",
      "[Added Lines]",
      "3024:   case 76:",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "3023:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "3024:       }",
      "3026:     break;",
      "3030:     {",
      "3031:         compiler->last_result = yr_parser_reduce_operation(",
      "3032:             yyscanner, \">=\", (yyvsp[-2].expression), (yyvsp[0].expression));",
      "",
      "[Removed Lines]",
      "3028:   case 76:",
      "",
      "[Added Lines]",
      "3037:   case 77:",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "3036:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "3037:       }",
      "3039:     break;",
      "3043:     {",
      "3044:         compiler->last_result = yr_parser_reduce_operation(",
      "3045:             yyscanner, \"==\", (yyvsp[-2].expression), (yyvsp[0].expression));",
      "",
      "[Removed Lines]",
      "3041:   case 77:",
      "",
      "[Added Lines]",
      "3050:   case 78:",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "3049:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "3050:       }",
      "3052:     break;",
      "3056:     {",
      "3057:         compiler->last_result = yr_parser_reduce_operation(",
      "3058:             yyscanner, \"!=\", (yyvsp[-2].expression), (yyvsp[0].expression));",
      "",
      "[Removed Lines]",
      "3054:   case 78:",
      "",
      "[Added Lines]",
      "3063:   case 79:",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "3062:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "3063:       }",
      "3065:     break;",
      "3069:     {",
      "3070:         (yyval.expression) = (yyvsp[0].expression);",
      "3071:       }",
      "3073:     break;",
      "3077:     {",
      "3078:         (yyval.expression) = (yyvsp[-1].expression);",
      "3079:       }",
      "3081:     break;",
      "3085:     { (yyval.integer) = INTEGER_SET_ENUMERATION; }",
      "3087:     break;",
      "3091:     { (yyval.integer) = INTEGER_SET_RANGE; }",
      "3093:     break;",
      "3097:     {",
      "3098:         if ((yyvsp[-3].expression).type != EXPRESSION_TYPE_INTEGER)",
      "3099:         {",
      "",
      "[Removed Lines]",
      "3067:   case 79:",
      "3075:   case 80:",
      "3083:   case 81:",
      "3089:   case 82:",
      "3095:   case 83:",
      "",
      "[Added Lines]",
      "3076:   case 80:",
      "3084:   case 81:",
      "3092:   case 82:",
      "3098:   case 83:",
      "3104:   case 84:",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "3112:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
      "3113:       }",
      "3115:     break;",
      "3119:     {",
      "3120:         if ((yyvsp[0].expression).type != EXPRESSION_TYPE_INTEGER)",
      "3121:         {",
      "",
      "[Removed Lines]",
      "3117:   case 84:",
      "",
      "[Added Lines]",
      "3126:   case 85:",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "3128:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
      "3129:       }",
      "3131:     break;",
      "3135:     {",
      "3136:         if ((yyvsp[0].expression).type != EXPRESSION_TYPE_INTEGER)",
      "3137:         {",
      "",
      "[Removed Lines]",
      "3133:   case 85:",
      "",
      "[Added Lines]",
      "3142:   case 86:",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "3143:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
      "3144:       }",
      "3146:     break;",
      "3150:     {",
      "3152:         yr_parser_emit_with_arg(yyscanner, OP_PUSH, UNDEFINED, NULL, NULL);",
      "3153:       }",
      "3155:     break;",
      "3159:     {",
      "3160:         yr_parser_emit_with_arg(yyscanner, OP_PUSH, UNDEFINED, NULL, NULL);",
      "3161:         yr_parser_emit_pushes_for_strings(yyscanner, \"$*\");",
      "3163:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
      "3164:       }",
      "3166:     break;",
      "3170:     {",
      "3171:         yr_parser_emit_pushes_for_strings(yyscanner, (yyvsp[0].c_string));",
      "3172:         yr_free((yyvsp[0].c_string));",
      "3174:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
      "3175:       }",
      "3177:     break;",
      "3181:     {",
      "3182:         yr_parser_emit_pushes_for_strings(yyscanner, (yyvsp[0].c_string));",
      "3183:         yr_free((yyvsp[0].c_string));",
      "3185:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
      "3186:       }",
      "3188:     break;",
      "3192:     {",
      "3193:         yr_parser_emit_with_arg(yyscanner, OP_PUSH, UNDEFINED, NULL, NULL);",
      "3194:       }",
      "3196:     break;",
      "3200:     {",
      "3201:         yr_parser_emit_with_arg(yyscanner, OP_PUSH, 1, NULL, NULL);",
      "3202:       }",
      "3204:     break;",
      "3208:     {",
      "3209:         (yyval.expression) = (yyvsp[-1].expression);",
      "3210:       }",
      "3212:     break;",
      "3216:     {",
      "3217:         compiler->last_result = yr_parser_emit(",
      "3218:             yyscanner, OP_FILESIZE, NULL);",
      "",
      "[Removed Lines]",
      "3148:   case 86:",
      "3157:   case 88:",
      "3168:   case 91:",
      "3179:   case 92:",
      "3190:   case 94:",
      "3198:   case 95:",
      "3206:   case 96:",
      "3214:   case 97:",
      "",
      "[Added Lines]",
      "3157:   case 87:",
      "3166:   case 89:",
      "3177:   case 92:",
      "3188:   case 93:",
      "3199:   case 95:",
      "3207:   case 96:",
      "3215:   case 97:",
      "3223:   case 98:",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "3222:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3223:         (yyval.expression).value.integer = UNDEFINED;",
      "3224:       }",
      "3226:     break;",
      "3230:     {",
      "3231:         yywarning(yyscanner,",
      "3232:             \"Using deprecated \\\"entrypoint\\\" keyword. Use the \\\"entry_point\\\" \"",
      "",
      "[Removed Lines]",
      "3228:   case 98:",
      "",
      "[Added Lines]",
      "3237:   case 99:",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "3240:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3241:         (yyval.expression).value.integer = UNDEFINED;",
      "3242:       }",
      "3244:     break;",
      "3248:     {",
      "3249:         CHECK_TYPE((yyvsp[-1].expression), EXPRESSION_TYPE_INTEGER, \"intXXXX or uintXXXX\");",
      "",
      "[Removed Lines]",
      "3246:   case 99:",
      "",
      "[Added Lines]",
      "3255:   case 100:",
      "",
      "---------------",
      "--- Hunk 32 ---",
      "[Context before]",
      "3260:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3261:         (yyval.expression).value.integer = UNDEFINED;",
      "3262:       }",
      "3264:     break;",
      "3268:     {",
      "3269:         compiler->last_result = yr_parser_emit_with_arg(",
      "3270:             yyscanner, OP_PUSH, (yyvsp[0].integer), NULL, NULL);",
      "",
      "[Removed Lines]",
      "3266:   case 100:",
      "",
      "[Added Lines]",
      "3275:   case 101:",
      "",
      "---------------",
      "--- Hunk 33 ---",
      "[Context before]",
      "3274:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3275:         (yyval.expression).value.integer = (yyvsp[0].integer);",
      "3276:       }",
      "3278:     break;",
      "3282:     {",
      "3283:         compiler->last_result = yr_parser_emit_with_arg_double(",
      "3284:             yyscanner, OP_PUSH, (yyvsp[0].double_), NULL, NULL);",
      "",
      "[Removed Lines]",
      "3280:   case 101:",
      "",
      "[Added Lines]",
      "3289:   case 102:",
      "",
      "---------------",
      "--- Hunk 34 ---",
      "[Context before]",
      "3288:         (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
      "3289:       }",
      "3291:     break;",
      "3295:     {",
      "3296:         SIZED_STRING* sized_string;",
      "",
      "[Removed Lines]",
      "3293:   case 102:",
      "",
      "[Added Lines]",
      "3302:   case 103:",
      "",
      "---------------",
      "--- Hunk 35 ---",
      "[Context before]",
      "3316:         (yyval.expression).type = EXPRESSION_TYPE_STRING;",
      "3317:         (yyval.expression).value.sized_string = sized_string;",
      "3318:       }",
      "3320:     break;",
      "3324:     {",
      "3325:         compiler->last_result = yr_parser_reduce_string_identifier(",
      "3326:             yyscanner, (yyvsp[0].c_string), OP_COUNT, UNDEFINED);",
      "",
      "[Removed Lines]",
      "3322:   case 103:",
      "",
      "[Added Lines]",
      "3331:   case 104:",
      "",
      "---------------",
      "--- Hunk 36 ---",
      "[Context before]",
      "3332:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3333:         (yyval.expression).value.integer = UNDEFINED;",
      "3334:       }",
      "3336:     break;",
      "3340:     {",
      "3341:         compiler->last_result = yr_parser_reduce_string_identifier(",
      "3342:             yyscanner, (yyvsp[-3].c_string), OP_OFFSET, UNDEFINED);",
      "",
      "[Removed Lines]",
      "3338:   case 104:",
      "",
      "[Added Lines]",
      "3347:   case 105:",
      "",
      "---------------",
      "--- Hunk 37 ---",
      "[Context before]",
      "3348:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3349:         (yyval.expression).value.integer = UNDEFINED;",
      "3350:       }",
      "3352:     break;",
      "3356:     {",
      "3357:         compiler->last_result = yr_parser_emit_with_arg(",
      "3358:             yyscanner, OP_PUSH, 1, NULL, NULL);",
      "",
      "[Removed Lines]",
      "3354:   case 105:",
      "",
      "[Added Lines]",
      "3363:   case 106:",
      "",
      "---------------",
      "--- Hunk 38 ---",
      "[Context before]",
      "3368:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3369:         (yyval.expression).value.integer = UNDEFINED;",
      "3370:       }",
      "3372:     break;",
      "3376:     {",
      "3377:         compiler->last_result = yr_parser_reduce_string_identifier(",
      "3378:             yyscanner, (yyvsp[-3].c_string), OP_LENGTH, UNDEFINED);",
      "",
      "[Removed Lines]",
      "3374:   case 106:",
      "",
      "[Added Lines]",
      "3383:   case 107:",
      "",
      "---------------",
      "--- Hunk 39 ---",
      "[Context before]",
      "3384:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3385:         (yyval.expression).value.integer = UNDEFINED;",
      "3386:       }",
      "3388:     break;",
      "3392:     {",
      "3393:         compiler->last_result = yr_parser_emit_with_arg(",
      "3394:             yyscanner, OP_PUSH, 1, NULL, NULL);",
      "",
      "[Removed Lines]",
      "3390:   case 107:",
      "",
      "[Added Lines]",
      "3399:   case 108:",
      "",
      "---------------",
      "--- Hunk 40 ---",
      "[Context before]",
      "3404:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3405:         (yyval.expression).value.integer = UNDEFINED;",
      "3406:       }",
      "3408:     break;",
      "3412:     {",
      "3413:         if ((yyvsp[0].expression).type == EXPRESSION_TYPE_INTEGER)  // loop identifier",
      "3414:         {",
      "",
      "[Removed Lines]",
      "3410:   case 108:",
      "",
      "[Added Lines]",
      "3419:   case 109:",
      "",
      "---------------",
      "--- Hunk 41 ---",
      "[Context before]",
      "3454:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
      "3455:       }",
      "3457:     break;",
      "3461:     {",
      "3462:         CHECK_TYPE((yyvsp[0].expression), EXPRESSION_TYPE_INTEGER | EXPRESSION_TYPE_FLOAT, \"-\");",
      "",
      "[Removed Lines]",
      "3459:   case 109:",
      "",
      "[Added Lines]",
      "3468:   case 110:",
      "",
      "---------------",
      "--- Hunk 42 ---",
      "[Context before]",
      "3477:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
      "3478:       }",
      "3480:     break;",
      "3484:     {",
      "3485:         compiler->last_result = yr_parser_reduce_operation(",
      "3486:             yyscanner, \"+\", (yyvsp[-2].expression), (yyvsp[0].expression));",
      "",
      "[Removed Lines]",
      "3482:   case 110:",
      "",
      "[Added Lines]",
      "3491:   case 111:",
      "",
      "---------------",
      "--- Hunk 43 ---",
      "[Context before]",
      "3498:           (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
      "3499:         }",
      "3500:       }",
      "3502:     break;",
      "3506:     {",
      "3507:         compiler->last_result = yr_parser_reduce_operation(",
      "3508:             yyscanner, \"-\", (yyvsp[-2].expression), (yyvsp[0].expression));",
      "",
      "[Removed Lines]",
      "3504:   case 111:",
      "",
      "[Added Lines]",
      "3513:   case 112:",
      "",
      "---------------",
      "--- Hunk 44 ---",
      "[Context before]",
      "3520:           (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
      "3521:         }",
      "3522:       }",
      "3524:     break;",
      "3528:     {",
      "3529:         compiler->last_result = yr_parser_reduce_operation(",
      "3530:             yyscanner, \"*\", (yyvsp[-2].expression), (yyvsp[0].expression));",
      "",
      "[Removed Lines]",
      "3526:   case 112:",
      "",
      "[Added Lines]",
      "3535:   case 113:",
      "",
      "---------------",
      "--- Hunk 45 ---",
      "[Context before]",
      "3542:           (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
      "3543:         }",
      "3544:       }",
      "3546:     break;",
      "3550:     {",
      "3551:         compiler->last_result = yr_parser_reduce_operation(",
      "3552:             yyscanner, \"\\\\\", (yyvsp[-2].expression), (yyvsp[0].expression));",
      "",
      "[Removed Lines]",
      "3548:   case 113:",
      "",
      "[Added Lines]",
      "3557:   case 114:",
      "",
      "---------------",
      "--- Hunk 46 ---",
      "[Context before]",
      "3572:           (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
      "3573:         }",
      "3574:       }",
      "3576:     break;",
      "3580:     {",
      "3581:         CHECK_TYPE((yyvsp[-2].expression), EXPRESSION_TYPE_INTEGER, \"%\");",
      "3582:         CHECK_TYPE((yyvsp[0].expression), EXPRESSION_TYPE_INTEGER, \"%\");",
      "",
      "[Removed Lines]",
      "3578:   case 114:",
      "",
      "[Added Lines]",
      "3587:   case 115:",
      "",
      "---------------",
      "--- Hunk 47 ---",
      "[Context before]",
      "3594:           ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
      "3595:         }",
      "3596:       }",
      "3598:     break;",
      "3602:     {",
      "3603:         CHECK_TYPE((yyvsp[-2].expression), EXPRESSION_TYPE_INTEGER, \"^\");",
      "3604:         CHECK_TYPE((yyvsp[0].expression), EXPRESSION_TYPE_INTEGER, \"^\");",
      "",
      "[Removed Lines]",
      "3600:   case 115:",
      "",
      "[Added Lines]",
      "3609:   case 116:",
      "",
      "---------------",
      "--- Hunk 48 ---",
      "[Context before]",
      "3608:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3609:         (yyval.expression).value.integer = OPERATION(^, (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
      "3610:       }",
      "3612:     break;",
      "3616:     {",
      "3617:         CHECK_TYPE((yyvsp[-2].expression), EXPRESSION_TYPE_INTEGER, \"^\");",
      "3618:         CHECK_TYPE((yyvsp[0].expression), EXPRESSION_TYPE_INTEGER, \"^\");",
      "",
      "[Removed Lines]",
      "3614:   case 116:",
      "",
      "[Added Lines]",
      "3623:   case 117:",
      "",
      "---------------",
      "--- Hunk 49 ---",
      "[Context before]",
      "3622:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3623:         (yyval.expression).value.integer = OPERATION(&, (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
      "3624:       }",
      "3626:     break;",
      "3630:     {",
      "3631:         CHECK_TYPE((yyvsp[-2].expression), EXPRESSION_TYPE_INTEGER, \"|\");",
      "3632:         CHECK_TYPE((yyvsp[0].expression), EXPRESSION_TYPE_INTEGER, \"|\");",
      "",
      "[Removed Lines]",
      "3628:   case 117:",
      "",
      "[Added Lines]",
      "3637:   case 118:",
      "",
      "---------------",
      "--- Hunk 50 ---",
      "[Context before]",
      "3636:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3637:         (yyval.expression).value.integer = OPERATION(|, (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
      "3638:       }",
      "3640:     break;",
      "3644:     {",
      "3645:         CHECK_TYPE((yyvsp[0].expression), EXPRESSION_TYPE_INTEGER, \"~\");",
      "",
      "[Removed Lines]",
      "3642:   case 118:",
      "",
      "[Added Lines]",
      "3651:   case 119:",
      "",
      "---------------",
      "--- Hunk 51 ---",
      "[Context before]",
      "3650:         (yyval.expression).value.integer = ((yyvsp[0].expression).value.integer == UNDEFINED) ?",
      "3651:             UNDEFINED : ~((yyvsp[0].expression).value.integer);",
      "3652:       }",
      "3654:     break;",
      "3658:     {",
      "3659:         CHECK_TYPE((yyvsp[-2].expression), EXPRESSION_TYPE_INTEGER, \"<<\");",
      "3660:         CHECK_TYPE((yyvsp[0].expression), EXPRESSION_TYPE_INTEGER, \"<<\");",
      "",
      "[Removed Lines]",
      "3656:   case 119:",
      "",
      "[Added Lines]",
      "3665:   case 120:",
      "",
      "---------------",
      "--- Hunk 52 ---",
      "[Context before]",
      "3664:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3665:         (yyval.expression).value.integer = OPERATION(<<, (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
      "3666:       }",
      "3668:     break;",
      "3672:     {",
      "3673:         CHECK_TYPE((yyvsp[-2].expression), EXPRESSION_TYPE_INTEGER, \">>\");",
      "3674:         CHECK_TYPE((yyvsp[0].expression), EXPRESSION_TYPE_INTEGER, \">>\");",
      "",
      "[Removed Lines]",
      "3670:   case 120:",
      "",
      "[Added Lines]",
      "3679:   case 121:",
      "",
      "---------------",
      "--- Hunk 53 ---",
      "[Context before]",
      "3678:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
      "3679:         (yyval.expression).value.integer = OPERATION(>>, (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
      "3680:       }",
      "3682:     break;",
      "3686:     {",
      "3687:         (yyval.expression) = (yyvsp[0].expression);",
      "3688:       }",
      "3690:     break;",
      "3694:       default: break;",
      "3695:     }",
      "",
      "[Removed Lines]",
      "3684:   case 121:",
      "",
      "[Added Lines]",
      "3693:   case 122:",
      "",
      "---------------"
    ],
    "libyara/grammar.y||libyara/grammar.y": [
      "File: libyara/grammar.y -> libyara/grammar.y",
      "--- Hunk 1 ---",
      "[Context before]",
      "1016:         $$.type = EXPRESSION_TYPE_BOOLEAN;",
      "1017:       }",
      "1018:     | _FOR_ for_expression _IDENTIFIER_ _IN_",
      "1019:       {",
      "1020:         int var_index;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1018:     | _FOR_ for_expression error",
      "1019:       {",
      "1020:         compiler->loop_depth--;",
      "1021:         compiler->loop_identifier[compiler->loop_depth] = NULL;",
      "1022:       }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9f3a3feba9f96d862cdd0193bfc20977935c1bcf",
      "candidate_info": {
        "commit_hash": "9f3a3feba9f96d862cdd0193bfc20977935c1bcf",
        "repo": "VirusTotal/yara",
        "commit_url": "https://github.com/VirusTotal/yara/commit/9f3a3feba9f96d862cdd0193bfc20977935c1bcf",
        "files": [
          "libyara/grammar.c",
          "libyara/grammar.y"
        ],
        "message": "Show warning when string literal is used as operand in a boolean expression",
        "before_after_code_files": [
          "libyara/grammar.c||libyara/grammar.c",
          "libyara/grammar.y||libyara/grammar.y"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libyara/grammar.c||libyara/grammar.c",
            "libyara/grammar.y||libyara/grammar.y"
          ],
          "candidate": [
            "libyara/grammar.c||libyara/grammar.c",
            "libyara/grammar.y||libyara/grammar.y"
          ]
        }
      },
      "candidate_diff": {
        "libyara/grammar.c||libyara/grammar.c": [
          "File: libyara/grammar.c -> libyara/grammar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "630:        0,   200,   200,   202,   203,   204,   205,   206,   211,   224,",
          "631:      233,   223,   256,   259,   287,   290,   317,   322,   323,   328,",
          "632:      329,   335,   338,   356,   369,   406,   407,   412,   428,   441,",
          "634:      528,   529,   530,   531,   536,   621,   667,   725,   770,   771,",
          "643: };",
          "644: #endif",
          "",
          "[Removed Lines]",
          "633:      454,   471,   472,   478,   477,   493,   492,   507,   522,   523,",
          "635:      775,   800,   836,   882,   897,   906,   915,   930,   942,   956,",
          "636:      969,   981,  1011,   980,  1127,  1126,  1206,  1212,  1219,  1218,",
          "637:     1281,  1280,  1341,  1350,  1359,  1368,  1377,  1386,  1395,  1399,",
          "638:     1407,  1408,  1413,  1435,  1447,  1463,  1462,  1468,  1479,  1480,",
          "639:     1485,  1492,  1503,  1504,  1508,  1516,  1520,  1530,  1544,  1560,",
          "640:     1570,  1579,  1603,  1615,  1627,  1643,  1655,  1671,  1715,  1734,",
          "641:     1752,  1770,  1788,  1814,  1832,  1842,  1852,  1862,  1872,  1882,",
          "642:     1892",
          "",
          "[Added Lines]",
          "633:      454,   471,   472,   478,   477,   493,   492,   508,   522,   523,",
          "635:      775,   800,   836,   882,   904,   913,   922,   937,   949,   963,",
          "636:      976,   988,  1018,   987,  1134,  1133,  1213,  1219,  1226,  1225,",
          "637:     1288,  1287,  1348,  1357,  1366,  1375,  1384,  1393,  1402,  1406,",
          "638:     1414,  1415,  1420,  1442,  1454,  1470,  1469,  1475,  1486,  1487,",
          "639:     1492,  1499,  1510,  1511,  1515,  1523,  1527,  1537,  1551,  1567,",
          "640:     1577,  1586,  1611,  1623,  1635,  1651,  1663,  1679,  1724,  1743,",
          "641:     1761,  1779,  1797,  1823,  1841,  1851,  1861,  1871,  1881,  1891,",
          "642:     1901",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2123:             yyscanner, (int32_t) (yyvsp[(5) - (5)].integer) | STRING_GFLAGS_REGEXP, (yyvsp[(1) - (5)].c_string), (yyvsp[(4) - (5)].sized_string));",
          "2125:         yr_free((yyvsp[(1) - (5)].c_string));",
          "2126:         yr_free((yyvsp[(4) - (5)].sized_string));",
          "2128:         ERROR_IF((yyval.string) == NULL);",
          "2129:         compiler->error_line = 0;",
          "2130:       }",
          "2133:   case 37:",
          "2134: #line 508 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2131:     break;",
          "",
          "[Added Lines]",
          "2132:     break;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2137:             yyscanner, STRING_GFLAGS_HEXADECIMAL, (yyvsp[(1) - (3)].c_string), (yyvsp[(3) - (3)].sized_string));",
          "2139:         yr_free((yyvsp[(1) - (3)].c_string));",
          "2142:         ERROR_IF((yyval.string) == NULL);",
          "2143:         compiler->error_line = 0;",
          "",
          "[Removed Lines]",
          "2140:         yr_free((yyvsp[(3) - (3)].sized_string));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2536:   case 53:",
          "2537: #line 883 \"grammar.y\"",
          "2538:     {",
          "2539:         if ((yyvsp[(1) - (1)].expression).type == EXPRESSION_TYPE_STRING)",
          "2540:         {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2538:     {",
          "2539:         if ((yyvsp[(1) - (1)].expression).type == EXPRESSION_TYPE_STRING)",
          "2540:         {",
          "2541:           if ((yyvsp[(1) - (1)].expression).value.sized_string != NULL)",
          "2542:           {",
          "2543:             yywarning(yyscanner,",
          "2544:               \"Using literal string \\\"%s\\\" in a boolean operation.\",",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2547:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2548:       }",
          "2551:   case 54:",
          "2552: #line 898 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2549:     break;",
          "",
          "[Added Lines]",
          "2556:     break;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2559:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2560:       }",
          "2563:   case 55:",
          "2564: #line 907 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2561:     break;",
          "",
          "[Added Lines]",
          "2568:     break;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2571:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2572:       }",
          "2575:   case 56:",
          "2576: #line 916 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2573:     break;",
          "",
          "[Added Lines]",
          "2580:     break;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2589:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2590:       }",
          "2593:   case 57:",
          "2594: #line 931 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2591:     break;",
          "",
          "[Added Lines]",
          "2598:     break;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2604:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2605:       }",
          "2608:   case 58:",
          "2609: #line 943 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2606:     break;",
          "",
          "[Added Lines]",
          "2613:     break;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2621:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2622:       }",
          "2625:   case 59:",
          "2626: #line 957 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2623:     break;",
          "",
          "[Added Lines]",
          "2630:     break;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2637:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2638:       }",
          "2641:   case 60:",
          "2642: #line 970 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2639:     break;",
          "",
          "[Added Lines]",
          "2646:     break;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2651:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2652:       }",
          "2655:   case 61:",
          "2656: #line 981 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2653:     break;",
          "",
          "[Added Lines]",
          "2660:     break;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2684:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2685:       }",
          "2688:   case 62:",
          "2689: #line 1011 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2686:     break;",
          "",
          "[Added Lines]",
          "2693:     break;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2721:         compiler->loop_identifier[compiler->loop_depth] = (yyvsp[(3) - (7)].c_string);",
          "2722:         compiler->loop_depth++;",
          "2723:       }",
          "2726:   case 63:",
          "2727: #line 1046 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2724:     break;",
          "",
          "[Added Lines]",
          "2731:     break;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2806:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2807:       }",
          "2810:   case 64:",
          "2811: #line 1127 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2808:     break;",
          "",
          "[Added Lines]",
          "2815:     break;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2838:         compiler->loop_identifier[compiler->loop_depth] = NULL;",
          "2839:         compiler->loop_depth++;",
          "2840:       }",
          "2843:   case 65:",
          "2844: #line 1157 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2841:     break;",
          "",
          "[Added Lines]",
          "2848:     break;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2891:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2893:       }",
          "2896:   case 66:",
          "2897: #line 1207 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2894:     break;",
          "",
          "[Added Lines]",
          "2901:     break;",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2901:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2902:       }",
          "2905:   case 67:",
          "2906: #line 1213 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2903:     break;",
          "",
          "[Added Lines]",
          "2910:     break;",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2910:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2911:       }",
          "2914:   case 68:",
          "2915: #line 1219 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2912:     break;",
          "",
          "[Added Lines]",
          "2919:     break;",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2938:         fixup->next = compiler->fixup_stack_head;",
          "2939:         compiler->fixup_stack_head = fixup;",
          "2940:       }",
          "2943:   case 69:",
          "2944: #line 1245 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2941:     break;",
          "",
          "[Added Lines]",
          "2948:     break;",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2978:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2979:       }",
          "2982:   case 70:",
          "2983: #line 1281 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2980:     break;",
          "",
          "[Added Lines]",
          "2987:     break;",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "3005:         fixup->next = compiler->fixup_stack_head;",
          "3006:         compiler->fixup_stack_head = fixup;",
          "3007:       }",
          "3010:   case 71:",
          "3011: #line 1306 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3008:     break;",
          "",
          "[Added Lines]",
          "3015:     break;",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "3045:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "3046:       }",
          "3049:   case 72:",
          "3050: #line 1342 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3047:     break;",
          "",
          "[Added Lines]",
          "3054:     break;",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "3057:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "3058:       }",
          "3061:   case 73:",
          "3062: #line 1351 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3059:     break;",
          "",
          "[Added Lines]",
          "3066:     break;",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "3069:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "3070:       }",
          "3073:   case 74:",
          "3074: #line 1360 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3071:     break;",
          "",
          "[Added Lines]",
          "3078:     break;",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "3081:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "3082:       }",
          "3085:   case 75:",
          "3086: #line 1369 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3083:     break;",
          "",
          "[Added Lines]",
          "3090:     break;",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "3093:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "3094:       }",
          "3097:   case 76:",
          "3098: #line 1378 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3095:     break;",
          "",
          "[Added Lines]",
          "3102:     break;",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "3105:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "3106:       }",
          "3109:   case 77:",
          "3110: #line 1387 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3107:     break;",
          "",
          "[Added Lines]",
          "3114:     break;",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "3117:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "3118:       }",
          "3121:   case 78:",
          "3122: #line 1396 \"grammar.y\"",
          "3123:     {",
          "3124:         (yyval.expression) = (yyvsp[(1) - (1)].expression);",
          "3125:       }",
          "3128:   case 79:",
          "3129: #line 1400 \"grammar.y\"",
          "3130:     {",
          "3131:         (yyval.expression) = (yyvsp[(2) - (3)].expression);",
          "3132:       }",
          "3135:   case 80:",
          "3136: #line 1407 \"grammar.y\"",
          "3137:     { (yyval.integer) = INTEGER_SET_ENUMERATION; }",
          "3140:   case 81:",
          "3141: #line 1408 \"grammar.y\"",
          "3142:     { (yyval.integer) = INTEGER_SET_RANGE; }",
          "3145:   case 82:",
          "3146: #line 1414 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3119:     break;",
          "3126:     break;",
          "3133:     break;",
          "3138:     break;",
          "3143:     break;",
          "",
          "[Added Lines]",
          "3126:     break;",
          "3133:     break;",
          "3140:     break;",
          "3145:     break;",
          "3150:     break;",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "3162:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3163:       }",
          "3166:   case 83:",
          "3167: #line 1436 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3164:     break;",
          "",
          "[Added Lines]",
          "3171:     break;",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "3177:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3178:       }",
          "3181:   case 84:",
          "3182: #line 1448 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3179:     break;",
          "",
          "[Added Lines]",
          "3186:     break;",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "3191:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3192:       }",
          "3195:   case 85:",
          "3196: #line 1463 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3193:     break;",
          "",
          "[Added Lines]",
          "3200:     break;",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "3199:         yr_parser_emit_with_arg(yyscanner, OP_PUSH, UNDEFINED, NULL, NULL);",
          "3200:       }",
          "3203:   case 87:",
          "3204: #line 1469 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3201:     break;",
          "",
          "[Added Lines]",
          "3208:     break;",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "3209:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3210:       }",
          "3213:   case 90:",
          "3214: #line 1486 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3211:     break;",
          "",
          "[Added Lines]",
          "3218:     break;",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "3219:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3220:       }",
          "3223:   case 91:",
          "3224: #line 1493 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3221:     break;",
          "",
          "[Added Lines]",
          "3228:     break;",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "3229:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3230:       }",
          "3233:   case 93:",
          "3234: #line 1505 \"grammar.y\"",
          "3235:     {",
          "3236:         yr_parser_emit_with_arg(yyscanner, OP_PUSH, UNDEFINED, NULL, NULL);",
          "3237:       }",
          "3240:   case 94:",
          "3241: #line 1509 \"grammar.y\"",
          "3242:     {",
          "3243:         yr_parser_emit_with_arg(yyscanner, OP_PUSH, 1, NULL, NULL);",
          "3244:       }",
          "3247:   case 95:",
          "3248: #line 1517 \"grammar.y\"",
          "3249:     {",
          "3250:         (yyval.expression) = (yyvsp[(2) - (3)].expression);",
          "3251:       }",
          "3254:   case 96:",
          "3255: #line 1521 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3231:     break;",
          "3238:     break;",
          "3245:     break;",
          "3252:     break;",
          "",
          "[Added Lines]",
          "3238:     break;",
          "3245:     break;",
          "3252:     break;",
          "3259:     break;",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "3262:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3263:         (yyval.expression).value.integer = UNDEFINED;",
          "3264:       }",
          "3267:   case 97:",
          "3268: #line 1531 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3265:     break;",
          "",
          "[Added Lines]",
          "3272:     break;",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "3279:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3280:         (yyval.expression).value.integer = UNDEFINED;",
          "3281:       }",
          "3284:   case 98:",
          "3285: #line 1545 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3282:     break;",
          "",
          "[Added Lines]",
          "3289:     break;",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "3298:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3299:         (yyval.expression).value.integer = UNDEFINED;",
          "3300:       }",
          "3303:   case 99:",
          "3304: #line 1561 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3301:     break;",
          "",
          "[Added Lines]",
          "3308:     break;",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "3311:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3312:         (yyval.expression).value.integer = (yyvsp[(1) - (1)].integer);",
          "3313:       }",
          "3316:   case 100:",
          "3317: #line 1571 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3314:     break;",
          "",
          "[Added Lines]",
          "3321:     break;",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "3324:         (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
          "3325:       }",
          "3328:   case 101:",
          "3329: #line 1580 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3326:     break;",
          "",
          "[Added Lines]",
          "3333:     break;",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "3346:               NULL,",
          "3347:               NULL);",
          "3349:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3351:         (yyval.expression).type = EXPRESSION_TYPE_STRING;",
          "3352:       }",
          "3355:   case 102:",
          "3356: #line 1604 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3353:     break;",
          "",
          "[Added Lines]",
          "3356:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3361:     break;",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "3365:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3366:         (yyval.expression).value.integer = UNDEFINED;",
          "3367:       }",
          "3370:   case 103:",
          "3371: #line 1616 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3368:     break;",
          "",
          "[Added Lines]",
          "3376:     break;",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "3380:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3381:         (yyval.expression).value.integer = UNDEFINED;",
          "3382:       }",
          "3385:   case 104:",
          "3386: #line 1628 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3383:     break;",
          "",
          "[Added Lines]",
          "3391:     break;",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "3399:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3400:         (yyval.expression).value.integer = UNDEFINED;",
          "3401:       }",
          "3404:   case 105:",
          "3405: #line 1644 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3402:     break;",
          "",
          "[Added Lines]",
          "3410:     break;",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "3414:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3415:         (yyval.expression).value.integer = UNDEFINED;",
          "3416:       }",
          "3419:   case 106:",
          "3420: #line 1656 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3417:     break;",
          "",
          "[Added Lines]",
          "3425:     break;",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "3433:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3434:         (yyval.expression).value.integer = UNDEFINED;",
          "3435:       }",
          "3438:   case 107:",
          "3439: #line 1672 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3436:     break;",
          "",
          "[Added Lines]",
          "3444:     break;",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "3461:               break;",
          "3462:             case OBJECT_TYPE_FLOAT:",
          "3463:               (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
          "3464:               break;",
          "3465:             case OBJECT_TYPE_STRING:",
          "3466:               (yyval.expression).type = EXPRESSION_TYPE_STRING;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3472:               break;",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "3481:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3482:       }",
          "3485:   case 108:",
          "3486: #line 1716 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3483:     break;",
          "",
          "[Added Lines]",
          "3492:     break;",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "3503:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3504:       }",
          "3507:   case 109:",
          "3508: #line 1735 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3505:     break;",
          "",
          "[Added Lines]",
          "3514:     break;",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "3523:           (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
          "3524:         }",
          "3525:       }",
          "3528:   case 110:",
          "3529: #line 1753 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3526:     break;",
          "",
          "[Added Lines]",
          "3535:     break;",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "3544:           (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
          "3545:         }",
          "3546:       }",
          "3549:   case 111:",
          "3550: #line 1771 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3547:     break;",
          "",
          "[Added Lines]",
          "3556:     break;",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "3565:           (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
          "3566:         }",
          "3567:       }",
          "3570:   case 112:",
          "3571: #line 1789 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3568:     break;",
          "",
          "[Added Lines]",
          "3577:     break;",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "3594:           (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
          "3595:         }",
          "3596:       }",
          "3599:   case 113:",
          "3600: #line 1815 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3597:     break;",
          "",
          "[Added Lines]",
          "3606:     break;",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "3615:           ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3616:         }",
          "3617:       }",
          "3620:   case 114:",
          "3621: #line 1833 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3618:     break;",
          "",
          "[Added Lines]",
          "3627:     break;",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "3628:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3629:         (yyval.expression).value.integer = OPERATION(^, (yyvsp[(1) - (3)].expression).value.integer, (yyvsp[(3) - (3)].expression).value.integer);",
          "3630:       }",
          "3633:   case 115:",
          "3634: #line 1843 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3631:     break;",
          "",
          "[Added Lines]",
          "3640:     break;",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "3641:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3642:         (yyval.expression).value.integer = OPERATION(&, (yyvsp[(1) - (3)].expression).value.integer, (yyvsp[(3) - (3)].expression).value.integer);",
          "3643:       }",
          "3646:   case 116:",
          "3647: #line 1853 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3644:     break;",
          "",
          "[Added Lines]",
          "3653:     break;",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "3654:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3655:         (yyval.expression).value.integer = OPERATION(|, (yyvsp[(1) - (3)].expression).value.integer, (yyvsp[(3) - (3)].expression).value.integer);",
          "3656:       }",
          "3659:   case 117:",
          "3660: #line 1863 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3657:     break;",
          "",
          "[Added Lines]",
          "3666:     break;",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "3667:         (yyval.expression).value.integer = ((yyvsp[(2) - (2)].expression).value.integer == UNDEFINED) ?",
          "3668:             UNDEFINED : ~((yyvsp[(2) - (2)].expression).value.integer);",
          "3669:       }",
          "3672:   case 118:",
          "3673: #line 1873 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3670:     break;",
          "",
          "[Added Lines]",
          "3679:     break;",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "3680:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3681:         (yyval.expression).value.integer = OPERATION(<<, (yyvsp[(1) - (3)].expression).value.integer, (yyvsp[(3) - (3)].expression).value.integer);",
          "3682:       }",
          "3685:   case 119:",
          "3686: #line 1883 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3683:     break;",
          "",
          "[Added Lines]",
          "3692:     break;",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "3693:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3694:         (yyval.expression).value.integer = OPERATION(>>, (yyvsp[(1) - (3)].expression).value.integer, (yyvsp[(3) - (3)].expression).value.integer);",
          "3695:       }",
          "3698:   case 120:",
          "3699: #line 1893 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3696:     break;",
          "",
          "[Added Lines]",
          "3705:     break;",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "3701:         (yyval.expression) = (yyvsp[(1) - (1)].expression);",
          "3702:       }",
          "3703:     break;",
          "3707: #line 3705 \"grammar.c\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "3915: #endif",
          "3917:   return YYID (yyresult);",
          "",
          "[Removed Lines]",
          "3918: }",
          "",
          "[Added Lines]",
          "3927: }",
          "",
          "---------------"
        ],
        "libyara/grammar.y||libyara/grammar.y": [
          "File: libyara/grammar.y -> libyara/grammar.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "883:       {",
          "884:         if ($1.type == EXPRESSION_TYPE_STRING)",
          "885:         {",
          "886:           compiler->last_result = yr_parser_emit(",
          "887:               yyscanner, OP_STR_TO_BOOL, NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "886:           if ($1.value.sized_string != NULL)",
          "887:           {",
          "888:             yywarning(yyscanner,",
          "889:               \"Using literal string \\\"%s\\\" in a boolean operation.\",",
          "890:               $1.value.sized_string->c_string);",
          "891:           }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1599:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "1601:         $$.type = EXPRESSION_TYPE_STRING;",
          "1602:       }",
          "1603:     | _STRING_COUNT_",
          "1604:       {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1609:         $$.value.sized_string = sized_string;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1696:               break;",
          "1697:             case OBJECT_TYPE_STRING:",
          "1698:               $$.type = EXPRESSION_TYPE_STRING;",
          "1699:               break;",
          "1700:             default:",
          "1701:               yr_compiler_set_error_extra_info_fmt(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1707:               $$.value.sized_string = NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d60e5b24f0af1acd86c9232037a823bf4ded5aa9",
      "candidate_info": {
        "commit_hash": "d60e5b24f0af1acd86c9232037a823bf4ded5aa9",
        "repo": "VirusTotal/yara",
        "commit_url": "https://github.com/VirusTotal/yara/commit/d60e5b24f0af1acd86c9232037a823bf4ded5aa9",
        "files": [
          "libyara/grammar.c"
        ],
        "message": "Update grammar.c with changes introduced in 9c044f32763fa793f7e0a2c0e00dd3606e891b90",
        "before_after_code_files": [
          "libyara/grammar.c||libyara/grammar.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libyara/grammar.c||libyara/grammar.c"
          ],
          "candidate": [
            "libyara/grammar.c||libyara/grammar.c"
          ]
        }
      },
      "candidate_diff": {
        "libyara/grammar.c||libyara/grammar.c": [
          "File: libyara/grammar.c -> libyara/grammar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "508: #define YYFINAL  2",
          "513: #define YYNTOKENS  72",
          "515: #define YYNNTS  41",
          "522: #define YYUNDEFTOK  2",
          "",
          "[Removed Lines]",
          "510: #define YYLAST   390",
          "517: #define YYNRULES  120",
          "519: #define YYNSTATES  207",
          "",
          "[Added Lines]",
          "510: #define YYLAST   399",
          "517: #define YYNRULES  121",
          "519: #define YYNSTATES  209",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "569:        0,     0,     3,     4,     7,    10,    14,    18,    22,    25,",
          "570:       26,    27,    39,    40,    44,    45,    49,    53,    54,    57,",
          "571:       59,    61,    62,    65,    67,    70,    72,    75,    79,    83,",
          "582: };",
          "",
          "[Removed Lines]",
          "572:       87,    91,    93,    96,    97,   103,   104,   110,   114,   115,",
          "573:      118,   120,   122,   124,   126,   128,   132,   137,   142,   143,",
          "574:      145,   147,   151,   153,   155,   157,   159,   163,   167,   169,",
          "575:      173,   177,   178,   179,   191,   192,   202,   206,   209,   210,",
          "576:      215,   216,   221,   225,   229,   233,   237,   241,   245,   247,",
          "577:      251,   255,   257,   263,   265,   269,   270,   275,   277,   279,",
          "578:      283,   285,   287,   289,   291,   293,   297,   299,   301,   306,",
          "579:      308,   310,   312,   314,   319,   321,   326,   328,   330,   333,",
          "580:      337,   341,   345,   349,   353,   357,   361,   365,   368,   372,",
          "581:      376",
          "",
          "[Added Lines]",
          "572:       88,    92,    96,    98,   101,   102,   108,   109,   115,   119,",
          "573:      120,   123,   125,   127,   129,   131,   133,   137,   142,   147,",
          "574:      148,   150,   152,   156,   158,   160,   162,   164,   168,   172,",
          "575:      174,   178,   182,   183,   184,   196,   197,   207,   211,   214,",
          "576:      215,   220,   221,   226,   230,   234,   238,   242,   246,   250,",
          "577:      252,   256,   260,   262,   268,   270,   274,   275,   280,   282,",
          "578:      284,   288,   290,   292,   294,   296,   298,   302,   304,   306,",
          "579:      311,   313,   315,   317,   319,   324,   326,   331,   333,   335,",
          "580:      338,   342,   346,   350,   354,   358,   362,   366,   370,   373,",
          "581:      377,   381",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "592:       64,    97,    -1,    -1,    81,    82,    -1,     5,    -1,     6,",
          "593:       -1,    -1,    64,    84,    -1,    10,    -1,    84,    10,    -1,",
          "594:       86,    -1,    85,    86,    -1,    10,    65,    19,    -1,    10,",
          "625: };",
          "",
          "[Removed Lines]",
          "595:       65,    16,    -1,    10,    65,    38,    -1,    10,    65,    39,",
          "596:       -1,    88,    -1,    87,    88,    -1,    -1,    11,    65,    89,",
          "597:       19,    91,    -1,    -1,    11,    65,    90,    21,    91,    -1,",
          "598:       11,    65,    20,    -1,    -1,    91,    92,    -1,    23,    -1,",
          "599:       22,    -1,    24,    -1,    25,    -1,    10,    -1,    93,    66,",
          "600:       10,    -1,    93,    67,   112,    68,    -1,    93,    69,    94,",
          "601:       70,    -1,    -1,    95,    -1,    98,    -1,    95,    71,    98,",
          "602:       -1,    21,    -1,    98,    -1,    38,    -1,    39,    -1,   112,",
          "603:       35,    96,    -1,   112,    36,   112,    -1,    11,    -1,    11,",
          "604:       26,   112,    -1,    11,    31,   105,    -1,    -1,    -1,    33,",
          "605:      111,    10,    31,    99,   104,    64,   100,    69,    97,    70,",
          "606:       -1,    -1,    33,   111,    32,   107,    64,   101,    69,    97,",
          "607:       70,    -1,   111,    32,   107,    -1,    60,    97,    -1,    -1,",
          "608:       97,    41,   102,    97,    -1,    -1,    97,    40,   103,    97,",
          "609:       -1,   112,    50,   112,    -1,   112,    48,   112,    -1,   112,",
          "610:       49,   112,    -1,   112,    47,   112,    -1,   112,    46,   112,",
          "611:       -1,   112,    45,   112,    -1,   112,    -1,    69,    98,    70,",
          "612:       -1,    69,   106,    70,    -1,   105,    -1,    69,   112,     3,",
          "613:      112,    70,    -1,   112,    -1,   106,    71,   112,    -1,    -1,",
          "614:       69,   108,   109,    70,    -1,    34,    -1,   110,    -1,   109,",
          "615:       71,   110,    -1,    11,    -1,    15,    -1,   112,    -1,    29,",
          "616:       -1,    30,    -1,    69,   112,    70,    -1,    27,    -1,    28,",
          "617:       -1,    18,    69,   112,    70,    -1,    16,    -1,    17,    -1,",
          "618:       19,    -1,    12,    -1,    13,    67,   112,    68,    -1,    13,",
          "619:       -1,    14,    67,   112,    68,    -1,    14,    -1,    93,    -1,",
          "620:       54,   112,    -1,   112,    53,   112,    -1,   112,    54,   112,",
          "621:       -1,   112,    55,   112,    -1,   112,    56,   112,    -1,   112,",
          "622:       57,   112,    -1,   112,    43,   112,    -1,   112,    44,   112,",
          "623:       -1,   112,    42,   112,    -1,    58,   112,    -1,   112,    52,",
          "624:      112,    -1,   112,    51,   112,    -1,    96,    -1",
          "",
          "[Added Lines]",
          "595:       65,    16,    -1,    10,    65,    54,    16,    -1,    10,    65,",
          "596:       38,    -1,    10,    65,    39,    -1,    88,    -1,    87,    88,",
          "597:       -1,    -1,    11,    65,    89,    19,    91,    -1,    -1,    11,",
          "598:       65,    90,    21,    91,    -1,    11,    65,    20,    -1,    -1,",
          "599:       91,    92,    -1,    23,    -1,    22,    -1,    24,    -1,    25,",
          "600:       -1,    10,    -1,    93,    66,    10,    -1,    93,    67,   112,",
          "601:       68,    -1,    93,    69,    94,    70,    -1,    -1,    95,    -1,",
          "602:       98,    -1,    95,    71,    98,    -1,    21,    -1,    98,    -1,",
          "603:       38,    -1,    39,    -1,   112,    35,    96,    -1,   112,    36,",
          "604:      112,    -1,    11,    -1,    11,    26,   112,    -1,    11,    31,",
          "605:      105,    -1,    -1,    -1,    33,   111,    10,    31,    99,   104,",
          "606:       64,   100,    69,    97,    70,    -1,    -1,    33,   111,    32,",
          "607:      107,    64,   101,    69,    97,    70,    -1,   111,    32,   107,",
          "608:       -1,    60,    97,    -1,    -1,    97,    41,   102,    97,    -1,",
          "609:       -1,    97,    40,   103,    97,    -1,   112,    50,   112,    -1,",
          "610:      112,    48,   112,    -1,   112,    49,   112,    -1,   112,    47,",
          "611:      112,    -1,   112,    46,   112,    -1,   112,    45,   112,    -1,",
          "612:      112,    -1,    69,    98,    70,    -1,    69,   106,    70,    -1,",
          "613:      105,    -1,    69,   112,     3,   112,    70,    -1,   112,    -1,",
          "614:      106,    71,   112,    -1,    -1,    69,   108,   109,    70,    -1,",
          "615:       34,    -1,   110,    -1,   109,    71,   110,    -1,    11,    -1,",
          "616:       15,    -1,   112,    -1,    29,    -1,    30,    -1,    69,   112,",
          "617:       70,    -1,    27,    -1,    28,    -1,    18,    69,   112,    70,",
          "618:       -1,    16,    -1,    17,    -1,    19,    -1,    12,    -1,    13,",
          "619:       67,   112,    68,    -1,    13,    -1,    14,    67,   112,    68,",
          "620:       -1,    14,    -1,    93,    -1,    54,   112,    -1,   112,    53,",
          "621:      112,    -1,   112,    54,   112,    -1,   112,    55,   112,    -1,",
          "622:      112,    56,   112,    -1,   112,    57,   112,    -1,   112,    43,",
          "623:      112,    -1,   112,    44,   112,    -1,   112,    42,   112,    -1,",
          "624:       58,   112,    -1,   112,    52,   112,    -1,   112,    51,   112,",
          "625:       -1,    96,    -1",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "630:        0,   200,   200,   202,   203,   204,   205,   206,   211,   224,",
          "631:      233,   223,   256,   259,   287,   290,   317,   322,   323,   328,",
          "632:      329,   335,   338,   356,   369,   406,   407,   412,   428,   441,",
          "643: };",
          "644: #endif",
          "",
          "[Removed Lines]",
          "633:      454,   471,   472,   478,   477,   493,   492,   508,   522,   523,",
          "634:      528,   529,   530,   531,   536,   621,   667,   725,   770,   771,",
          "635:      775,   800,   836,   882,   904,   913,   922,   937,   949,   963,",
          "636:      976,   988,  1018,   987,  1134,  1133,  1213,  1219,  1226,  1225,",
          "637:     1288,  1287,  1348,  1357,  1366,  1375,  1384,  1393,  1402,  1406,",
          "638:     1414,  1415,  1420,  1442,  1454,  1470,  1469,  1475,  1486,  1487,",
          "639:     1492,  1499,  1510,  1511,  1515,  1523,  1527,  1537,  1551,  1567,",
          "640:     1577,  1586,  1611,  1623,  1635,  1651,  1663,  1679,  1724,  1743,",
          "641:     1761,  1779,  1797,  1823,  1841,  1851,  1861,  1871,  1881,  1891,",
          "642:     1901",
          "",
          "[Added Lines]",
          "634:      454,   467,   484,   485,   491,   490,   506,   505,   521,   535,",
          "635:      536,   541,   542,   543,   544,   549,   634,   680,   738,   783,",
          "636:      784,   788,   813,   849,   895,   917,   926,   935,   950,   962,",
          "637:      976,   989,  1001,  1031,  1000,  1147,  1146,  1226,  1232,  1239,",
          "638:     1238,  1301,  1300,  1361,  1370,  1379,  1388,  1397,  1406,  1415,",
          "639:     1419,  1427,  1428,  1433,  1455,  1467,  1483,  1482,  1488,  1499,",
          "640:     1500,  1505,  1512,  1523,  1524,  1528,  1536,  1540,  1550,  1564,",
          "641:     1580,  1590,  1599,  1624,  1636,  1648,  1664,  1676,  1692,  1737,",
          "642:     1756,  1774,  1792,  1810,  1836,  1854,  1864,  1874,  1884,  1894,",
          "643:     1904,  1914",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "694:        0,    72,    73,    73,    73,    73,    73,    73,    74,    76,",
          "695:       77,    75,    78,    78,    79,    79,    80,    81,    81,    82,",
          "696:       82,    83,    83,    84,    84,    85,    85,    86,    86,    86,",
          "704:      112,   112,   112,   112,   112,   112,   112,   112,   112,   112,",
          "705:      112,   112,   112,   112,   112,   112,   112,   112,   112,   112,",
          "707: };",
          "",
          "[Removed Lines]",
          "697:       86,    87,    87,    89,    88,    90,    88,    88,    91,    91,",
          "698:       92,    92,    92,    92,    93,    93,    93,    93,    94,    94,",
          "699:       95,    95,    96,    97,    98,    98,    98,    98,    98,    98,",
          "700:       98,    99,   100,    98,   101,    98,    98,    98,   102,    98,",
          "701:      103,    98,    98,    98,    98,    98,    98,    98,    98,    98,",
          "702:      104,   104,   105,   106,   106,   108,   107,   107,   109,   109,",
          "703:      110,   110,   111,   111,   111,   112,   112,   112,   112,   112,",
          "706:      112",
          "",
          "[Added Lines]",
          "698:       86,    86,    87,    87,    89,    88,    90,    88,    88,    91,",
          "699:       91,    92,    92,    92,    92,    93,    93,    93,    93,    94,",
          "700:       94,    95,    95,    96,    97,    98,    98,    98,    98,    98,",
          "701:       98,    98,    99,   100,    98,   101,    98,    98,    98,   102,",
          "702:       98,   103,    98,    98,    98,    98,    98,    98,    98,    98,",
          "703:       98,   104,   104,   105,   106,   106,   108,   107,   107,   109,",
          "704:      109,   110,   110,   111,   111,   111,   112,   112,   112,   112,",
          "707:      112,   112",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "711: {",
          "712:        0,     2,     0,     2,     2,     3,     3,     3,     2,     0,",
          "713:        0,    11,     0,     3,     0,     3,     3,     0,     2,     1,",
          "725: };",
          "",
          "[Removed Lines]",
          "714:        1,     0,     2,     1,     2,     1,     2,     3,     3,     3,",
          "715:        3,     1,     2,     0,     5,     0,     5,     3,     0,     2,",
          "716:        1,     1,     1,     1,     1,     3,     4,     4,     0,     1,",
          "717:        1,     3,     1,     1,     1,     1,     3,     3,     1,     3,",
          "718:        3,     0,     0,    11,     0,     9,     3,     2,     0,     4,",
          "719:        0,     4,     3,     3,     3,     3,     3,     3,     1,     3,",
          "720:        3,     1,     5,     1,     3,     0,     4,     1,     1,     3,",
          "721:        1,     1,     1,     1,     1,     3,     1,     1,     4,     1,",
          "722:        1,     1,     1,     4,     1,     4,     1,     1,     2,     3,",
          "723:        3,     3,     3,     3,     3,     3,     3,     2,     3,     3,",
          "724:        1",
          "",
          "[Added Lines]",
          "715:        1,     0,     2,     1,     2,     1,     2,     3,     3,     4,",
          "716:        3,     3,     1,     2,     0,     5,     0,     5,     3,     0,",
          "717:        2,     1,     1,     1,     1,     1,     3,     4,     4,     0,",
          "718:        1,     1,     3,     1,     1,     1,     1,     3,     3,     1,",
          "719:        3,     3,     0,     0,    11,     0,     9,     3,     2,     0,",
          "720:        4,     0,     4,     3,     3,     3,     3,     3,     3,     1,",
          "721:        3,     3,     1,     5,     1,     3,     0,     4,     1,     1,",
          "722:        3,     1,     1,     1,     1,     1,     3,     1,     1,     4,",
          "723:        1,     1,     1,     1,     4,     1,     4,     1,     1,     2,",
          "724:        3,     3,     3,     3,     3,     3,     3,     3,     2,     3,",
          "725:        3,     1",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "732:        2,     0,     1,    17,     0,     4,     3,     0,     7,     6,",
          "733:        5,     8,     0,    19,    20,    18,     9,    21,     0,     0,",
          "734:       23,    22,    12,    24,     0,    14,     0,     0,    10,     0,",
          "742:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,",
          "753: };",
          "756: static const yytype_int16 yydefgoto[] =",
          "757: {",
          "758:       -1,     1,     5,     6,    17,    33,    25,    28,    40,     7,",
          "763: };",
          "768: static const yytype_int16 yypact[] =",
          "769: {",
          "791: };",
          "794: static const yytype_int16 yypgoto[] =",
          "795: {",
          "801: };",
          "804:    positive, shift that token.  If negative, reduce the rule which",
          "805:    number is the opposite.  If zero, do what YYDEFACT says.",
          "808: static const yytype_int16 yytable[] =",
          "809: {",
          "850: };",
          "852: static const yytype_int16 yycheck[] =",
          "853: {",
          "860:       12,    13,    14,    69,    16,    17,    18,    19,     7,    21,",
          "874:       46,    47,    48,    49,    50,    51,    52,    53,    54,    55,",
          "880:       -1,    -1,    -1,    -1,    70,    51,    52,    53,    54,    55,",
          "881:       56,    57,    -1,    -1,    -1,    -1,    42,    43,    44,    -1,",
          "882:       -1,    -1,    -1,    -1,    70,    51,    52,    53,    54,    55,",
          "",
          "[Removed Lines]",
          "735:       13,    25,     0,     0,     0,    26,     0,    15,    31,     0,",
          "736:        0,    28,    27,    29,    30,    33,    32,     0,    11,    37,",
          "737:        0,     0,    44,    58,   102,   104,   106,    99,   100,     0,",
          "738:      101,    52,    96,    97,    93,    94,     0,    54,    55,     0,",
          "739:        0,     0,     0,   107,   120,    16,    53,     0,    78,    38,",
          "740:       38,     0,     0,     0,     0,     0,     0,     0,    92,   108,",
          "741:      117,    67,     0,    53,    78,     0,     0,    48,    70,    68,",
          "743:        0,     0,     0,     0,     0,     0,     0,     0,     0,    34,",
          "744:       36,    59,     0,    60,     0,     0,     0,     0,     0,     0,",
          "745:       79,    95,    45,     0,     0,    49,    50,     0,     0,    87,",
          "746:       85,    66,    56,    57,   116,   114,   115,    77,    76,    75,",
          "747:       73,    74,    72,   119,   118,   109,   110,   111,   112,   113,",
          "748:       41,    40,    42,    43,    39,     0,   103,   105,    98,    61,",
          "749:        0,    46,    47,     0,    71,    69,     0,     0,     0,    64,",
          "750:       51,    90,    91,     0,    88,     0,     0,     0,    81,     0,",
          "751:       86,     0,    82,     0,    83,    62,     0,    89,    80,     0,",
          "752:        0,     0,    84,     0,    65,     0,    63",
          "759:       15,    19,    21,    30,    31,    37,    38,    50,    51,   119,",
          "760:      164,    73,   134,   135,    74,    92,    76,   178,   200,   189,",
          "761:      138,   137,   187,   123,   193,   141,   176,   183,   184,    77,",
          "762:       78",
          "767: #define YYPACT_NINF -71",
          "770:      -71,   157,   -71,   -31,    -7,   -71,   -71,    68,   -71,   -71,",
          "771:      -71,   -71,     5,   -71,   -71,   -71,   -71,   -10,     7,   -33,",
          "772:      -71,    46,    61,   -71,    35,    93,   112,    59,   -71,    63,",
          "773:      112,   -71,   128,   139,    -5,   -71,    85,   128,   -71,    89,",
          "774:       91,   -71,   -71,   -71,   -71,     2,   -71,    48,   -71,   -71,",
          "775:      133,   138,   -71,   -23,   -71,    98,   100,   -71,   -71,    95,",
          "776:      -71,   -71,   -71,   -71,   -71,   -71,    97,   -71,   -71,   119,",
          "777:      119,    48,    48,    13,   -71,    64,   -71,   140,   297,   -71,",
          "778:      -71,   119,    99,   119,   119,   119,   119,     0,    41,   -71,",
          "779:      -71,   -71,    64,    90,   154,   164,   119,    48,   -71,   -71,",
          "780:       -6,   155,   119,   119,   119,   119,   119,   119,   119,   119,",
          "781:      119,   119,   119,   119,   119,   119,   119,   119,   119,   190,",
          "782:      190,    41,   119,   -71,   234,   252,   174,   194,   144,    -6,",
          "783:      -71,   -71,   -71,   270,   115,   116,    79,    48,    48,   -71,",
          "784:      -71,   -71,   -71,    41,   312,   326,   333,    41,    41,    41,",
          "785:       41,    41,    41,    88,    88,   136,   136,   -71,   -71,   -71,",
          "786:      -71,   -71,   -71,   -71,   -71,   127,   -71,   -71,   -71,   -71,",
          "787:      131,   -71,   -71,    48,   178,   -71,    -2,   119,   151,   -71,",
          "788:       79,   -71,   -71,   -35,   -71,   214,   119,   158,   -71,   152,",
          "789:      -71,    -2,   -71,    18,   127,   -71,    48,   -71,   -71,   119,",
          "790:      163,   -15,    41,    48,   -71,    30,   -71",
          "796:      -71,   -71,   220,   230,   -71,   -71,   -71,   -71,   -71,   -71,",
          "797:      -71,   -71,   -71,   -71,   204,   -71,   198,   -71,   -71,   159,",
          "798:      -71,   -71,   -71,   -71,   141,   -47,   -70,   -71,   -71,   -71,",
          "799:      -71,   -71,   -71,    62,   -71,   114,   -71,   -71,    50,   186,",
          "800:      -65",
          "807: #define YYTABLE_NINF -93",
          "810:       75,    88,    93,    81,    89,    90,     4,    94,    82,   181,",
          "811:      128,    41,    11,   182,    42,    16,   121,    20,   124,   125,",
          "812:      126,   127,    49,   -35,    91,    98,    99,   136,   139,    22,",
          "813:        8,   133,   129,    43,    44,   190,   191,   143,   144,   145,",
          "814:      146,   147,   148,   149,   150,   151,   152,   153,   154,   155,",
          "815:      156,   157,   158,   159,    18,   204,    23,   165,    52,    53,",
          "816:       54,    55,    56,   140,    57,    58,    59,    60,    24,    61,",
          "817:       98,    99,    12,    13,    14,    62,    63,    64,    65,    95,",
          "818:       96,    66,    97,   103,   104,   105,    67,    68,   198,   199,",
          "819:      174,   175,   112,   113,   114,   115,   116,   117,   118,    26,",
          "820:      206,    27,    69,   180,    98,    99,    70,    52,    71,    54,",
          "821:       55,    56,   185,    57,    58,    59,    60,    72,    61,   -53,",
          "822:      -53,   194,    29,    32,    62,    63,    64,    65,    34,    52,",
          "823:      177,    54,    55,    56,   202,    57,    58,    59,    60,    36,",
          "824:       61,   114,   115,   116,   117,   118,    62,    63,    39,   201,",
          "825:       45,    69,    79,    47,    48,    70,   205,     2,     3,    80,",
          "826:      130,   -17,   -17,   -17,    85,    83,    86,    84,   122,   103,",
          "827:      104,   105,   100,    69,   132,   169,    61,    70,   112,   113,",
          "828:      114,   115,   116,   117,   118,   172,   -92,   173,    86,   101,",
          "829:      102,   116,   117,   118,     4,   179,   103,   104,   105,   106,",
          "830:      107,   108,   109,   110,   111,   112,   113,   114,   115,   116,",
          "831:      117,   118,   160,   161,   162,   163,   103,   104,   105,    99,",
          "832:      186,   196,   195,     9,   131,   112,   113,   114,   115,   116,",
          "833:      117,   118,   203,    10,    35,    46,   103,   104,   105,   120,",
          "834:      188,   197,   142,   170,   168,   112,   113,   114,   115,   116,",
          "835:      117,   118,    87,     0,     0,     0,   103,   104,   105,     0,",
          "836:        0,     0,     0,     0,   131,   112,   113,   114,   115,   116,",
          "837:      117,   118,     0,     0,     0,     0,   103,   104,   105,     0,",
          "838:        0,     0,     0,     0,   192,   112,   113,   114,   115,   116,",
          "839:      117,   118,     0,     0,   103,   104,   105,     0,     0,     0,",
          "840:        0,     0,   166,   112,   113,   114,   115,   116,   117,   118,",
          "841:        0,     0,   103,   104,   105,     0,     0,     0,     0,     0,",
          "842:      167,   112,   113,   114,   115,   116,   117,   118,     0,   -92,",
          "843:        0,     0,   101,   102,     0,     0,     0,     0,   171,   103,",
          "844:      104,   105,   106,   107,   108,   109,   110,   111,   112,   113,",
          "845:      114,   115,   116,   117,   118,   104,   105,     0,     0,     0,",
          "846:        0,     0,     0,   112,   113,   114,   115,   116,   117,   118,",
          "847:      105,     0,     0,     0,     0,     0,     0,   112,   113,   114,",
          "848:      115,   116,   117,   118,   112,   113,   114,   115,   116,   117,",
          "849:      118",
          "854:       47,    66,    72,    26,    69,    70,    37,    72,    31,    11,",
          "855:       10,    16,    19,    15,    19,    10,    81,    10,    83,    84,",
          "856:       85,    86,    20,    21,    71,    40,    41,    97,    34,    62,",
          "857:       61,    96,    32,    38,    39,    70,    71,   102,   103,   104,",
          "858:      105,   106,   107,   108,   109,   110,   111,   112,   113,   114,",
          "859:      115,   116,   117,   118,    64,    70,    10,   122,    10,    11,",
          "861:       40,    41,     4,     5,     6,    27,    28,    29,    30,    66,",
          "862:       67,    33,    69,    42,    43,    44,    38,    39,    70,    71,",
          "863:      137,   138,    51,    52,    53,    54,    55,    56,    57,    64,",
          "864:       70,     8,    54,   173,    40,    41,    58,    10,    60,    12,",
          "865:       13,    14,   177,    16,    17,    18,    19,    69,    21,    40,",
          "866:       41,   186,    10,    64,    27,    28,    29,    30,    65,    10,",
          "867:        3,    12,    13,    14,   199,    16,    17,    18,    19,    11,",
          "868:       21,    53,    54,    55,    56,    57,    27,    28,     9,   196,",
          "869:       65,    54,    19,    64,    63,    58,   203,     0,     1,    21,",
          "870:       70,     4,     5,     6,    69,    67,    69,    67,    69,    42,",
          "871:       43,    44,    32,    54,    10,    31,    21,    58,    51,    52,",
          "872:       53,    54,    55,    56,    57,    70,    32,    71,    69,    35,",
          "873:       36,    55,    56,    57,    37,    64,    42,    43,    44,    45,",
          "875:       56,    57,    22,    23,    24,    25,    42,    43,    44,    41,",
          "876:       69,    69,    64,     3,    70,    51,    52,    53,    54,    55,",
          "877:       56,    57,    69,     3,    30,    37,    42,    43,    44,    80,",
          "878:      178,   191,   101,   129,    70,    51,    52,    53,    54,    55,",
          "879:       56,    57,    66,    -1,    -1,    -1,    42,    43,    44,    -1,",
          "",
          "[Added Lines]",
          "736:       13,    25,     0,     0,     0,    26,     0,    15,    32,     0,",
          "737:        0,    28,    27,    30,    31,     0,    34,    33,     0,    11,",
          "738:       29,    38,     0,     0,    45,    59,   103,   105,   107,   100,",
          "739:      101,     0,   102,    53,    97,    98,    94,    95,     0,    55,",
          "740:       56,     0,     0,     0,     0,   108,   121,    16,    54,     0,",
          "741:       79,    39,    39,     0,     0,     0,     0,     0,     0,     0,",
          "742:       93,   109,   118,    68,     0,    54,    79,     0,     0,    49,",
          "743:       71,    69,     0,     0,     0,     0,     0,     0,     0,     0,",
          "745:        0,    35,    37,    60,     0,    61,     0,     0,     0,     0,",
          "746:        0,     0,    80,    96,    46,     0,     0,    50,    51,     0,",
          "747:        0,    88,    86,    67,    57,    58,   117,   115,   116,    78,",
          "748:       77,    76,    74,    75,    73,   120,   119,   110,   111,   112,",
          "749:      113,   114,    42,    41,    43,    44,    40,     0,   104,   106,",
          "750:       99,    62,     0,    47,    48,     0,    72,    70,     0,     0,",
          "751:        0,    65,    52,    91,    92,     0,    89,     0,     0,     0,",
          "752:       82,     0,    87,     0,    83,     0,    84,    63,     0,    90,",
          "753:       81,     0,     0,     0,    85,     0,    66,     0,    64",
          "760:       15,    19,    21,    30,    31,    37,    38,    52,    53,   121,",
          "761:      166,    75,   136,   137,    76,    94,    78,   180,   202,   191,",
          "762:      140,   139,   189,   125,   195,   143,   178,   185,   186,    79,",
          "763:       80",
          "768: #define YYPACT_NINF -73",
          "771:      -73,   148,   -73,   -31,    -9,   -73,   -73,    18,   -73,   -73,",
          "772:      -73,   -73,     2,   -73,   -73,   -73,   -73,   -38,    19,   -28,",
          "773:      -73,    26,    61,   -73,    -8,    80,    90,    56,   -73,    63,",
          "774:       90,   -73,   128,   147,    16,   -73,    98,   128,   -73,   100,",
          "775:      102,   -73,   -73,   -73,   -73,   151,    53,   -73,    48,   -73,",
          "776:      -73,   -73,   149,   153,   -73,   -23,   -73,   105,   108,   -73,",
          "777:      -73,   107,   -73,   -73,   -73,   -73,   -73,   -73,    97,   -73,",
          "778:      -73,   119,   119,    48,    48,   -52,   -73,    39,   -73,   155,",
          "779:      297,   -73,   -73,   119,   122,   119,   119,   119,   119,     1,",
          "780:      313,   -73,   -73,   -73,    39,   123,   154,   182,   119,    48,",
          "781:      -73,   -73,    -6,   173,   119,   119,   119,   119,   119,   119,",
          "782:      119,   119,   119,   119,   119,   119,   119,   119,   119,   119,",
          "783:      119,    60,    60,   313,   119,   -73,   234,   252,   174,   194,",
          "784:      164,    -6,   -73,   -73,   -73,   270,   142,   143,    64,    48,",
          "785:       48,   -73,   -73,   -73,   -73,   313,   328,   342,    42,   313,",
          "786:      313,   313,   313,   313,   313,    88,    88,   103,   103,   -73,",
          "787:      -73,   -73,   -73,   -73,   -73,   -73,   -73,   127,   -73,   -73,",
          "788:      -73,   -73,   156,   -73,   -73,    48,   172,   -73,    -2,   119,",
          "789:      146,   -73,    64,   -73,   -73,    52,   -73,   214,   119,   157,",
          "790:      -73,   150,   -73,    -2,   -73,    91,   127,   -73,    48,   -73,",
          "791:      -73,   119,   163,    31,   313,    48,   -73,    49,   -73",
          "797:      -73,   -73,   219,   220,   -73,   -73,   -73,   -73,   -73,   -73,",
          "798:      -73,   -73,   -73,   -73,   203,   -73,   197,   -73,   -73,   158,",
          "799:      -73,   -73,   -73,   -73,   132,   -48,   -72,   -73,   -73,   -73,",
          "800:      -73,   -73,   -73,    59,   -73,   110,   -73,   -73,    50,   184,",
          "801:      -67",
          "808: #define YYTABLE_NINF -94",
          "811:       77,    90,    95,    83,    91,    92,     4,    96,    84,   183,",
          "812:       11,   130,    16,   184,    97,    98,   123,    99,   126,   127,",
          "813:      128,   129,    12,    13,    14,    93,    18,   138,   141,    20,",
          "814:        8,   135,    41,   131,    22,    42,    23,   145,   146,   147,",
          "815:      148,   149,   150,   151,   152,   153,   154,   155,   156,   157,",
          "816:      158,   159,   160,   161,    43,    44,    26,   167,    54,    55,",
          "817:       56,    57,    58,   142,    59,    60,    61,    62,    24,    63,",
          "818:       45,   100,   101,    51,   -36,    64,    65,    66,    67,   100,",
          "819:      101,    68,   162,   163,   164,   165,    69,    70,    27,   100,",
          "820:      101,   176,   177,   114,   115,   116,   117,   118,   119,   120,",
          "821:       29,   206,    71,   182,   -54,   -54,    72,    54,    73,    56,",
          "822:       57,    58,   187,    59,    60,    61,    62,    74,    63,   208,",
          "823:       32,   196,   192,   193,    64,    65,    66,    67,    34,    54,",
          "824:      179,    56,    57,    58,   204,    59,    60,    61,    62,    36,",
          "825:       63,   116,   117,   118,   119,   120,    64,    65,     2,     3,",
          "826:      203,    71,   -17,   -17,   -17,    72,    39,   207,   118,   119,",
          "827:      120,   200,   201,    46,    48,    49,    88,    50,    81,   105,",
          "828:      106,   107,    85,    71,    82,    86,    87,    72,   114,   115,",
          "829:      116,   117,   118,   119,   120,     4,   -93,   102,    88,   103,",
          "830:      104,   124,   134,   132,    63,   171,   105,   106,   107,   108,",
          "831:      109,   110,   111,   112,   113,   114,   115,   116,   117,   118,",
          "832:      119,   120,   174,   101,   175,   188,   105,   106,   107,   198,",
          "833:      181,   197,     9,    10,   133,   114,   115,   116,   117,   118,",
          "834:      119,   120,   205,    35,    47,   144,   105,   106,   107,   190,",
          "835:      122,   172,     0,   199,   170,   114,   115,   116,   117,   118,",
          "836:      119,   120,    89,     0,     0,     0,   105,   106,   107,     0,",
          "837:        0,     0,     0,     0,   133,   114,   115,   116,   117,   118,",
          "838:      119,   120,     0,     0,     0,     0,   105,   106,   107,     0,",
          "839:        0,     0,     0,     0,   194,   114,   115,   116,   117,   118,",
          "840:      119,   120,     0,     0,   105,   106,   107,     0,     0,     0,",
          "841:        0,     0,   168,   114,   115,   116,   117,   118,   119,   120,",
          "842:        0,     0,   105,   106,   107,     0,     0,     0,     0,     0,",
          "843:      169,   114,   115,   116,   117,   118,   119,   120,     0,   -93,",
          "844:        0,     0,   103,   104,     0,     0,     0,     0,   173,   105,",
          "845:      106,   107,   108,   109,   110,   111,   112,   113,   114,   115,",
          "846:      116,   117,   118,   119,   120,   105,   106,   107,     0,     0,",
          "847:        0,     0,     0,     0,   114,   115,   116,   117,   118,   119,",
          "848:      120,   106,   107,     0,     0,     0,     0,     0,     0,   114,",
          "849:      115,   116,   117,   118,   119,   120,   107,     0,     0,     0,",
          "850:        0,     0,     0,   114,   115,   116,   117,   118,   119,   120",
          "855:       48,    68,    74,    26,    71,    72,    37,    74,    31,    11,",
          "856:       19,    10,    10,    15,    66,    67,    83,    69,    85,    86,",
          "857:       87,    88,     4,     5,     6,    73,    64,    99,    34,    10,",
          "858:       61,    98,    16,    32,    62,    19,    10,   104,   105,   106,",
          "859:      107,   108,   109,   110,   111,   112,   113,   114,   115,   116,",
          "860:      117,   118,   119,   120,    38,    39,    64,   124,    10,    11,",
          "862:       54,    40,    41,    20,    21,    27,    28,    29,    30,    40,",
          "863:       41,    33,    22,    23,    24,    25,    38,    39,     8,    40,",
          "864:       41,   139,   140,    51,    52,    53,    54,    55,    56,    57,",
          "865:       10,    70,    54,   175,    40,    41,    58,    10,    60,    12,",
          "866:       13,    14,   179,    16,    17,    18,    19,    69,    21,    70,",
          "867:       64,   188,    70,    71,    27,    28,    29,    30,    65,    10,",
          "868:        3,    12,    13,    14,   201,    16,    17,    18,    19,    11,",
          "869:       21,    53,    54,    55,    56,    57,    27,    28,     0,     1,",
          "870:      198,    54,     4,     5,     6,    58,     9,   205,    55,    56,",
          "871:       57,    70,    71,    65,    64,    63,    69,    16,    19,    42,",
          "872:       43,    44,    67,    54,    21,    67,    69,    58,    51,    52,",
          "873:       53,    54,    55,    56,    57,    37,    32,    32,    69,    35,",
          "874:       36,    69,    10,    70,    21,    31,    42,    43,    44,    45,",
          "876:       56,    57,    70,    41,    71,    69,    42,    43,    44,    69,",
          "877:       64,    64,     3,     3,    70,    51,    52,    53,    54,    55,",
          "878:       56,    57,    69,    30,    37,   103,    42,    43,    44,   180,",
          "879:       82,   131,    -1,   193,    70,    51,    52,    53,    54,    55,",
          "880:       56,    57,    68,    -1,    -1,    -1,    42,    43,    44,    -1,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "886:       68,    51,    52,    53,    54,    55,    56,    57,    -1,    32,",
          "887:       -1,    -1,    35,    36,    -1,    -1,    -1,    -1,    68,    42,",
          "888:       43,    44,    45,    46,    47,    48,    49,    50,    51,    52,",
          "894: };",
          "",
          "[Removed Lines]",
          "889:       53,    54,    55,    56,    57,    43,    44,    -1,    -1,    -1,",
          "890:       -1,    -1,    -1,    51,    52,    53,    54,    55,    56,    57,",
          "891:       44,    -1,    -1,    -1,    -1,    -1,    -1,    51,    52,    53,",
          "892:       54,    55,    56,    57,    51,    52,    53,    54,    55,    56,",
          "893:       57",
          "",
          "[Added Lines]",
          "890:       53,    54,    55,    56,    57,    42,    43,    44,    -1,    -1,",
          "891:       -1,    -1,    -1,    -1,    51,    52,    53,    54,    55,    56,",
          "892:       57,    43,    44,    -1,    -1,    -1,    -1,    -1,    -1,    51,",
          "893:       52,    53,    54,    55,    56,    57,    44,    -1,    -1,    -1,",
          "894:       -1,    -1,    -1,    51,    52,    53,    54,    55,    56,    57",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "901:       75,    19,     4,     5,     6,    82,    10,    76,    64,    83,",
          "902:       10,    84,    62,    10,     7,    78,    64,     8,    79,    10,",
          "903:       85,    86,    64,    77,    65,    86,    11,    87,    88,     9,",
          "915:      112,   112,   112,   112,   112,   112,   112,   112,   112,   112,",
          "921: };",
          "923: #define yyerrok  (yyerrstatus = 0)",
          "",
          "[Removed Lines]",
          "904:       80,    16,    19,    38,    39,    65,    88,    64,    63,    20,",
          "905:       89,    90,    10,    11,    12,    13,    14,    16,    17,    18,",
          "906:       19,    21,    27,    28,    29,    30,    33,    38,    39,    54,",
          "907:       58,    60,    69,    93,    96,    97,    98,   111,   112,    19,",
          "908:       21,    26,    31,    67,    67,    69,    69,   111,   112,   112,",
          "909:      112,    97,    97,    98,   112,    66,    67,    69,    40,    41,",
          "910:       32,    35,    36,    42,    43,    44,    45,    46,    47,    48,",
          "911:       49,    50,    51,    52,    53,    54,    55,    56,    57,    91,",
          "912:       91,   112,    69,   105,   112,   112,   112,   112,    10,    32,",
          "913:       70,    70,    10,   112,    94,    95,    98,   103,   102,    34,",
          "914:       69,   107,    96,   112,   112,   112,   112,   112,   112,   112,",
          "916:       22,    23,    24,    25,    92,   112,    68,    68,    70,    31,",
          "917:      107,    68,    70,    71,    97,    97,   108,     3,    99,    64,",
          "918:       98,    11,    15,   109,   110,   112,    69,   104,   105,   101,",
          "919:       70,    71,    70,   106,   112,    64,    69,   110,    70,    71,",
          "920:      100,    97,   112,    69,    70,    97,    70",
          "",
          "[Added Lines]",
          "905:       80,    16,    19,    38,    39,    54,    65,    88,    64,    63,",
          "906:       16,    20,    89,    90,    10,    11,    12,    13,    14,    16,",
          "907:       17,    18,    19,    21,    27,    28,    29,    30,    33,    38,",
          "908:       39,    54,    58,    60,    69,    93,    96,    97,    98,   111,",
          "909:      112,    19,    21,    26,    31,    67,    67,    69,    69,   111,",
          "910:      112,   112,   112,    97,    97,    98,   112,    66,    67,    69,",
          "911:       40,    41,    32,    35,    36,    42,    43,    44,    45,    46,",
          "912:       47,    48,    49,    50,    51,    52,    53,    54,    55,    56,",
          "913:       57,    91,    91,   112,    69,   105,   112,   112,   112,   112,",
          "914:       10,    32,    70,    70,    10,   112,    94,    95,    98,   103,",
          "915:      102,    34,    69,   107,    96,   112,   112,   112,   112,   112,",
          "917:      112,   112,    22,    23,    24,    25,    92,   112,    68,    68,",
          "918:       70,    31,   107,    68,    70,    71,    97,    97,   108,     3,",
          "919:       99,    64,    98,    11,    15,   109,   110,   112,    69,   104,",
          "920:      105,   101,    70,    71,    70,   106,   112,    64,    69,   110,",
          "921:       70,    71,   100,    97,   112,    69,    70,    97,    70",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1440:   switch (yytype)",
          "1441:     {",
          "1444:  { yr_free((yyvaluep->c_string)); };",
          "1445: #line 1444 \"grammar.c\"",
          "1446:  break;",
          "1449:  { yr_free((yyvaluep->c_string)); };",
          "1450: #line 1449 \"grammar.c\"",
          "1451:  break;",
          "1454:  { yr_free((yyvaluep->c_string)); };",
          "1455: #line 1454 \"grammar.c\"",
          "1456:  break;",
          "1459:  { yr_free((yyvaluep->c_string)); };",
          "1460: #line 1459 \"grammar.c\"",
          "1461:  break;",
          "1464:  { yr_free((yyvaluep->c_string)); };",
          "1465: #line 1464 \"grammar.c\"",
          "1466:  break;",
          "1469:  { yr_free((yyvaluep->c_string)); };",
          "1470: #line 1469 \"grammar.c\"",
          "1471:  break;",
          "1474:  { yr_free((yyvaluep->sized_string)); };",
          "1475: #line 1474 \"grammar.c\"",
          "1476:  break;",
          "1479:  { yr_free((yyvaluep->sized_string)); };",
          "1480: #line 1479 \"grammar.c\"",
          "1481:  break;",
          "1484:  { yr_free((yyvaluep->sized_string)); };",
          "1485: #line 1484 \"grammar.c\"",
          "1486:  break;",
          "",
          "[Removed Lines]",
          "1443: #line 176 \"grammar.y\"",
          "1448: #line 180 \"grammar.y\"",
          "1453: #line 177 \"grammar.y\"",
          "1458: #line 178 \"grammar.y\"",
          "1463: #line 179 \"grammar.y\"",
          "1468: #line 181 \"grammar.y\"",
          "1473: #line 182 \"grammar.y\"",
          "1478: #line 183 \"grammar.y\"",
          "1483: #line 184 \"grammar.y\"",
          "",
          "[Added Lines]",
          "1444: #line 176 \"grammar.y\"",
          "1449: #line 180 \"grammar.y\"",
          "1454: #line 177 \"grammar.y\"",
          "1459: #line 178 \"grammar.y\"",
          "1464: #line 179 \"grammar.y\"",
          "1469: #line 181 \"grammar.y\"",
          "1474: #line 182 \"grammar.y\"",
          "1479: #line 183 \"grammar.y\"",
          "1484: #line 184 \"grammar.y\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2045:         ERROR_IF((yyval.meta) == NULL);",
          "2046:       }",
          "2047:     break;",
          "2049:   case 29:",
          "2050: #line 442 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2050:   case 29:",
          "2051: #line 442 \"grammar.y\"",
          "2052:     {",
          "2053:         (yyval.meta) = yr_parser_reduce_meta_declaration(",
          "2054:             yyscanner,",
          "2055:             META_TYPE_INTEGER,",
          "2056:             (yyvsp[(1) - (4)].c_string),",
          "2057:             NULL,",
          "2058:             -(yyvsp[(4) - (4)].integer));",
          "2060:         yr_free((yyvsp[(1) - (4)].c_string));",
          "2062:         ERROR_IF((yyval.meta) == NULL);",
          "2063:       }",
          "2064:     break;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2059:         yr_free((yyvsp[(1) - (3)].c_string));",
          "2061:         ERROR_IF((yyval.meta) == NULL);",
          "2065:   case 30:",
          "2066: #line 455 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2062:       }",
          "2063:     break;",
          "",
          "[Added Lines]",
          "2079:       }",
          "2080:     break;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2075:         yr_free((yyvsp[(1) - (3)].c_string));",
          "2077:         ERROR_IF((yyval.meta) == NULL);",
          "2081:   case 31:",
          "2082: #line 471 \"grammar.y\"",
          "2086:   case 32:",
          "2087: #line 472 \"grammar.y\"",
          "2091:   case 33:",
          "2092: #line 478 \"grammar.y\"",
          "2093:     {",
          "2094:         compiler->error_line = yyget_lineno(yyscanner);",
          "2098:   case 34:",
          "2099: #line 482 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2078:       }",
          "2079:     break;",
          "2083:     { (yyval.string) = (yyvsp[(1) - (1)].string); }",
          "2084:     break;",
          "2088:     { (yyval.string) = (yyvsp[(1) - (2)].string); }",
          "2089:     break;",
          "2095:       }",
          "2096:     break;",
          "",
          "[Added Lines]",
          "2095:       }",
          "2096:     break;",
          "2100:     { (yyval.string) = (yyvsp[(1) - (1)].string); }",
          "2101:     break;",
          "2105:     { (yyval.string) = (yyvsp[(1) - (2)].string); }",
          "2106:     break;",
          "2112:       }",
          "2113:     break;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2107:         ERROR_IF((yyval.string) == NULL);",
          "2108:         compiler->error_line = 0;",
          "2112:   case 35:",
          "2113: #line 493 \"grammar.y\"",
          "2114:     {",
          "2115:         compiler->error_line = yyget_lineno(yyscanner);",
          "2119:   case 36:",
          "2120: #line 497 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2109:       }",
          "2110:     break;",
          "2116:       }",
          "2117:     break;",
          "",
          "[Added Lines]",
          "2126:       }",
          "2127:     break;",
          "2133:       }",
          "2134:     break;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2128:         ERROR_IF((yyval.string) == NULL);",
          "2130:         compiler->error_line = 0;",
          "2134:   case 37:",
          "2135: #line 509 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2131:       }",
          "2132:     break;",
          "",
          "[Added Lines]",
          "2148:       }",
          "2149:     break;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2141:         yr_free((yyvsp[(3) - (3)].sized_string));",
          "2143:         ERROR_IF((yyval.string) == NULL);",
          "2147:   case 38:",
          "2148: #line 522 \"grammar.y\"",
          "2152:   case 39:",
          "2153: #line 523 \"grammar.y\"",
          "2157:   case 40:",
          "2158: #line 528 \"grammar.y\"",
          "2162:   case 41:",
          "2163: #line 529 \"grammar.y\"",
          "2167:   case 42:",
          "2168: #line 530 \"grammar.y\"",
          "2172:   case 43:",
          "2173: #line 531 \"grammar.y\"",
          "2177:   case 44:",
          "2178: #line 537 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2144:       }",
          "2145:     break;",
          "2149:     { (yyval.integer) = 0; }",
          "2150:     break;",
          "2154:     { (yyval.integer) = (yyvsp[(1) - (2)].integer) | (yyvsp[(2) - (2)].integer); }",
          "2155:     break;",
          "2159:     { (yyval.integer) = STRING_GFLAGS_WIDE; }",
          "2160:     break;",
          "2164:     { (yyval.integer) = STRING_GFLAGS_ASCII; }",
          "2165:     break;",
          "2169:     { (yyval.integer) = STRING_GFLAGS_NO_CASE; }",
          "2170:     break;",
          "2174:     { (yyval.integer) = STRING_GFLAGS_FULL_WORD; }",
          "2175:     break;",
          "",
          "[Added Lines]",
          "2161:       }",
          "2162:     break;",
          "2166:     { (yyval.integer) = 0; }",
          "2167:     break;",
          "2171:     { (yyval.integer) = (yyvsp[(1) - (2)].integer) | (yyvsp[(2) - (2)].integer); }",
          "2172:     break;",
          "2176:     { (yyval.integer) = STRING_GFLAGS_WIDE; }",
          "2177:     break;",
          "2181:     { (yyval.integer) = STRING_GFLAGS_ASCII; }",
          "2182:     break;",
          "2186:     { (yyval.integer) = STRING_GFLAGS_NO_CASE; }",
          "2187:     break;",
          "2191:     { (yyval.integer) = STRING_GFLAGS_FULL_WORD; }",
          "2192:     break;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2259:         yr_free((yyvsp[(1) - (1)].c_string));",
          "2261:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2265:   case 45:",
          "2266: #line 622 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2262:       }",
          "2263:     break;",
          "",
          "[Added Lines]",
          "2279:       }",
          "2280:     break;",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2308:         yr_free((yyvsp[(3) - (3)].c_string));",
          "2310:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2314:   case 46:",
          "2315: #line 668 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2311:       }",
          "2312:     break;",
          "",
          "[Added Lines]",
          "2328:       }",
          "2329:     break;",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2368:         }",
          "2370:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2374:   case 47:",
          "2375: #line 726 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2371:       }",
          "2372:     break;",
          "",
          "[Added Lines]",
          "2388:       }",
          "2389:     break;",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2412:         yr_free((yyvsp[(3) - (4)].c_string));",
          "2414:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2418:   case 48:",
          "2419: #line 770 \"grammar.y\"",
          "2423:   case 49:",
          "2424: #line 771 \"grammar.y\"",
          "2428:   case 50:",
          "2429: #line 776 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2415:       }",
          "2416:     break;",
          "2420:     { (yyval.c_string) = yr_strdup(\"\"); }",
          "2421:     break;",
          "2425:     { (yyval.c_string) = (yyvsp[(1) - (1)].c_string); }",
          "2426:     break;",
          "",
          "[Added Lines]",
          "2432:       }",
          "2433:     break;",
          "2437:     { (yyval.c_string) = yr_strdup(\"\"); }",
          "2438:     break;",
          "2442:     { (yyval.c_string) = (yyvsp[(1) - (1)].c_string); }",
          "2443:     break;",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2450:         }",
          "2452:         ERROR_IF((yyval.c_string) == NULL);",
          "2456:   case 51:",
          "2457: #line 801 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2453:       }",
          "2454:     break;",
          "",
          "[Added Lines]",
          "2470:       }",
          "2471:     break;",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "2485:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2487:         (yyval.c_string) = (yyvsp[(1) - (3)].c_string);",
          "2491:   case 52:",
          "2492: #line 837 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2488:       }",
          "2489:     break;",
          "",
          "[Added Lines]",
          "2505:       }",
          "2506:     break;",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "2530:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2532:         (yyval.expression).type = EXPRESSION_TYPE_REGEXP;",
          "2536:   case 53:",
          "2537: #line 883 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2533:       }",
          "2534:     break;",
          "",
          "[Added Lines]",
          "2550:       }",
          "2551:     break;",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "2552:         }",
          "2554:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2558:   case 54:",
          "2559: #line 905 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2555:       }",
          "2556:     break;",
          "",
          "[Added Lines]",
          "2572:       }",
          "2573:     break;",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "2564:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2566:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2570:   case 55:",
          "2571: #line 914 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2567:       }",
          "2568:     break;",
          "",
          "[Added Lines]",
          "2584:       }",
          "2585:     break;",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "2576:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2578:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2582:   case 56:",
          "2583: #line 923 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2579:       }",
          "2580:     break;",
          "",
          "[Added Lines]",
          "2596:       }",
          "2597:     break;",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "2594:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2596:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2600:   case 57:",
          "2601: #line 938 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2597:       }",
          "2598:     break;",
          "",
          "[Added Lines]",
          "2614:       }",
          "2615:     break;",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "2609:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2611:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2615:   case 58:",
          "2616: #line 950 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2612:       }",
          "2613:     break;",
          "",
          "[Added Lines]",
          "2629:       }",
          "2630:     break;",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "2626:         ERROR_IF(result != ERROR_SUCCESS);",
          "2628:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2632:   case 59:",
          "2633: #line 964 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2629:       }",
          "2630:     break;",
          "",
          "[Added Lines]",
          "2646:       }",
          "2647:     break;",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "2642:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2644:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2648:   case 60:",
          "2649: #line 977 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2645:       }",
          "2646:     break;",
          "",
          "[Added Lines]",
          "2662:       }",
          "2663:     break;",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "2656:         ERROR_IF(compiler->last_result!= ERROR_SUCCESS);",
          "2658:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2662:   case 61:",
          "2663: #line 988 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2659:       }",
          "2660:     break;",
          "",
          "[Added Lines]",
          "2676:       }",
          "2677:     break;",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "2689:             yyscanner, OP_PUSH, UNDEFINED, NULL, NULL);",
          "2691:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "2695:   case 62:",
          "2696: #line 1018 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2692:       }",
          "2693:     break;",
          "",
          "[Added Lines]",
          "2709:       }",
          "2710:     break;",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "2727:         compiler->loop_address[compiler->loop_depth] = addr;",
          "2728:         compiler->loop_identifier[compiler->loop_depth] = (yyvsp[(3) - (7)].c_string);",
          "2729:         compiler->loop_depth++;",
          "2733:   case 63:",
          "2734: #line 1053 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2730:       }",
          "2731:     break;",
          "",
          "[Added Lines]",
          "2747:       }",
          "2748:     break;",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "2811:         yr_free((yyvsp[(3) - (11)].c_string));",
          "2813:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2817:   case 64:",
          "2818: #line 1134 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2814:       }",
          "2815:     break;",
          "",
          "[Added Lines]",
          "2831:       }",
          "2832:     break;",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "2844:         compiler->loop_address[compiler->loop_depth] = addr;",
          "2845:         compiler->loop_identifier[compiler->loop_depth] = NULL;",
          "2846:         compiler->loop_depth++;",
          "2850:   case 65:",
          "2851: #line 1164 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2847:       }",
          "2848:     break;",
          "",
          "[Added Lines]",
          "2864:       }",
          "2865:     break;",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "2898:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2903:   case 66:",
          "2904: #line 1214 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2900:       }",
          "2901:     break;",
          "",
          "[Added Lines]",
          "2917:       }",
          "2918:     break;",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "2906:         yr_parser_emit(yyscanner, OP_OF, NULL);",
          "2908:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2912:   case 67:",
          "2913: #line 1220 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2909:       }",
          "2910:     break;",
          "",
          "[Added Lines]",
          "2926:       }",
          "2927:     break;",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "2915:         yr_parser_emit(yyscanner, OP_NOT, NULL);",
          "2917:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2921:   case 68:",
          "2922: #line 1226 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2918:       }",
          "2919:     break;",
          "",
          "[Added Lines]",
          "2935:       }",
          "2936:     break;",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "2944:         fixup->address = jmp_destination_addr;",
          "2945:         fixup->next = compiler->fixup_stack_head;",
          "2946:         compiler->fixup_stack_head = fixup;",
          "2950:   case 69:",
          "2951: #line 1252 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2947:       }",
          "2948:     break;",
          "",
          "[Added Lines]",
          "2964:       }",
          "2965:     break;",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "2983:         yr_free(fixup);",
          "2985:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "2989:   case 70:",
          "2990: #line 1288 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "2986:       }",
          "2987:     break;",
          "",
          "[Added Lines]",
          "3003:       }",
          "3004:     break;",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "3011:         fixup->address = jmp_destination_addr;",
          "3012:         fixup->next = compiler->fixup_stack_head;",
          "3013:         compiler->fixup_stack_head = fixup;",
          "3017:   case 71:",
          "3018: #line 1313 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3014:       }",
          "3015:     break;",
          "",
          "[Added Lines]",
          "3031:       }",
          "3032:     break;",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "3050:         yr_free(fixup);",
          "3052:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "3056:   case 72:",
          "3057: #line 1349 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3053:       }",
          "3054:     break;",
          "",
          "[Added Lines]",
          "3070:       }",
          "3071:     break;",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "3062:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3064:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "3068:   case 73:",
          "3069: #line 1358 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3065:       }",
          "3066:     break;",
          "",
          "[Added Lines]",
          "3082:       }",
          "3083:     break;",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "3074:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3076:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "3080:   case 74:",
          "3081: #line 1367 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3077:       }",
          "3078:     break;",
          "",
          "[Added Lines]",
          "3094:       }",
          "3095:     break;",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "3086:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3088:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "3092:   case 75:",
          "3093: #line 1376 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3089:       }",
          "3090:     break;",
          "",
          "[Added Lines]",
          "3106:       }",
          "3107:     break;",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "3098:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3100:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "3104:   case 76:",
          "3105: #line 1385 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3101:       }",
          "3102:     break;",
          "",
          "[Added Lines]",
          "3118:       }",
          "3119:     break;",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "3110:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3112:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "3116:   case 77:",
          "3117: #line 1394 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3113:       }",
          "3114:     break;",
          "",
          "[Added Lines]",
          "3130:       }",
          "3131:     break;",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "3122:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3124:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
          "3128:   case 78:",
          "3129: #line 1403 \"grammar.y\"",
          "3130:     {",
          "3131:         (yyval.expression) = (yyvsp[(1) - (1)].expression);",
          "3135:   case 79:",
          "3136: #line 1407 \"grammar.y\"",
          "3137:     {",
          "3138:         (yyval.expression) = (yyvsp[(2) - (3)].expression);",
          "3142:   case 80:",
          "3143: #line 1414 \"grammar.y\"",
          "3147:   case 81:",
          "3148: #line 1415 \"grammar.y\"",
          "3152:   case 82:",
          "3153: #line 1421 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3125:       }",
          "3126:     break;",
          "3132:       }",
          "3133:     break;",
          "3139:       }",
          "3140:     break;",
          "3144:     { (yyval.integer) = INTEGER_SET_ENUMERATION; }",
          "3145:     break;",
          "3149:     { (yyval.integer) = INTEGER_SET_RANGE; }",
          "3150:     break;",
          "",
          "[Added Lines]",
          "3142:       }",
          "3143:     break;",
          "3149:       }",
          "3150:     break;",
          "3156:       }",
          "3157:     break;",
          "3161:     { (yyval.integer) = INTEGER_SET_ENUMERATION; }",
          "3162:     break;",
          "3166:     { (yyval.integer) = INTEGER_SET_RANGE; }",
          "3167:     break;",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "3167:         }",
          "3169:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3173:   case 83:",
          "3174: #line 1443 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3170:       }",
          "3171:     break;",
          "",
          "[Added Lines]",
          "3187:       }",
          "3188:     break;",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "3182:         }",
          "3184:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3188:   case 84:",
          "3189: #line 1455 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3185:       }",
          "3186:     break;",
          "",
          "[Added Lines]",
          "3202:       }",
          "3203:     break;",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "3196:         }",
          "3198:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3202:   case 85:",
          "3203: #line 1470 \"grammar.y\"",
          "3204:     {",
          "3206:         yr_parser_emit_with_arg(yyscanner, OP_PUSH, UNDEFINED, NULL, NULL);",
          "3210:   case 87:",
          "3211: #line 1476 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3199:       }",
          "3200:     break;",
          "3207:       }",
          "3208:     break;",
          "",
          "[Added Lines]",
          "3216:       }",
          "3217:     break;",
          "3224:       }",
          "3225:     break;",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "3214:         yr_parser_emit_pushes_for_strings(yyscanner, \"$*\");",
          "3216:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3220:   case 90:",
          "3221: #line 1493 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3217:       }",
          "3218:     break;",
          "",
          "[Added Lines]",
          "3234:       }",
          "3235:     break;",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "3224:         yr_free((yyvsp[(1) - (1)].c_string));",
          "3226:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3230:   case 91:",
          "3231: #line 1500 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3227:       }",
          "3228:     break;",
          "",
          "[Added Lines]",
          "3244:       }",
          "3245:     break;",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "3234:         yr_free((yyvsp[(1) - (1)].c_string));",
          "3236:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3240:   case 93:",
          "3241: #line 1512 \"grammar.y\"",
          "3242:     {",
          "3243:         yr_parser_emit_with_arg(yyscanner, OP_PUSH, UNDEFINED, NULL, NULL);",
          "3247:   case 94:",
          "3248: #line 1516 \"grammar.y\"",
          "3249:     {",
          "3250:         yr_parser_emit_with_arg(yyscanner, OP_PUSH, 1, NULL, NULL);",
          "3254:   case 95:",
          "3255: #line 1524 \"grammar.y\"",
          "3256:     {",
          "3257:         (yyval.expression) = (yyvsp[(2) - (3)].expression);",
          "3261:   case 96:",
          "3262: #line 1528 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3237:       }",
          "3238:     break;",
          "3244:       }",
          "3245:     break;",
          "3251:       }",
          "3252:     break;",
          "3258:       }",
          "3259:     break;",
          "",
          "[Added Lines]",
          "3254:       }",
          "3255:     break;",
          "3261:       }",
          "3262:     break;",
          "3268:       }",
          "3269:     break;",
          "3275:       }",
          "3276:     break;",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "3269:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3270:         (yyval.expression).value.integer = UNDEFINED;",
          "3274:   case 97:",
          "3275: #line 1538 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3271:       }",
          "3272:     break;",
          "",
          "[Added Lines]",
          "3288:       }",
          "3289:     break;",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "3286:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3287:         (yyval.expression).value.integer = UNDEFINED;",
          "3291:   case 98:",
          "3292: #line 1552 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3288:       }",
          "3289:     break;",
          "",
          "[Added Lines]",
          "3305:       }",
          "3306:     break;",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "3305:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3306:         (yyval.expression).value.integer = UNDEFINED;",
          "3310:   case 99:",
          "3311: #line 1568 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3307:       }",
          "3308:     break;",
          "",
          "[Added Lines]",
          "3324:       }",
          "3325:     break;",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "3318:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3319:         (yyval.expression).value.integer = (yyvsp[(1) - (1)].integer);",
          "3323:   case 100:",
          "3324: #line 1578 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3320:       }",
          "3321:     break;",
          "",
          "[Added Lines]",
          "3337:       }",
          "3338:     break;",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "3329:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3331:         (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
          "3335:   case 101:",
          "3336: #line 1587 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3332:       }",
          "3333:     break;",
          "",
          "[Added Lines]",
          "3349:       }",
          "3350:     break;",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "3358:         (yyval.expression).type = EXPRESSION_TYPE_STRING;",
          "3359:         (yyval.expression).value.sized_string = sized_string;",
          "3363:   case 102:",
          "3364: #line 1612 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3360:       }",
          "3361:     break;",
          "",
          "[Added Lines]",
          "3377:       }",
          "3378:     break;",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "3373:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3374:         (yyval.expression).value.integer = UNDEFINED;",
          "3378:   case 103:",
          "3379: #line 1624 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3375:       }",
          "3376:     break;",
          "",
          "[Added Lines]",
          "3392:       }",
          "3393:     break;",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "3388:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3389:         (yyval.expression).value.integer = UNDEFINED;",
          "3393:   case 104:",
          "3394: #line 1636 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3390:       }",
          "3391:     break;",
          "",
          "[Added Lines]",
          "3407:       }",
          "3408:     break;",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "3407:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3408:         (yyval.expression).value.integer = UNDEFINED;",
          "3412:   case 105:",
          "3413: #line 1652 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3409:       }",
          "3410:     break;",
          "",
          "[Added Lines]",
          "3426:       }",
          "3427:     break;",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "3422:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3423:         (yyval.expression).value.integer = UNDEFINED;",
          "3427:   case 106:",
          "3428: #line 1664 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3424:       }",
          "3425:     break;",
          "",
          "[Added Lines]",
          "3441:       }",
          "3442:     break;",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "3441:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3442:         (yyval.expression).value.integer = UNDEFINED;",
          "3446:   case 107:",
          "3447: #line 1680 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3443:       }",
          "3444:     break;",
          "",
          "[Added Lines]",
          "3460:       }",
          "3461:     break;",
          "",
          "---------------",
          "--- Hunk 66 ---",
          "[Context before]",
          "3488:         }",
          "3490:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3494:   case 108:",
          "3495: #line 1725 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3491:       }",
          "3492:     break;",
          "",
          "[Added Lines]",
          "3508:       }",
          "3509:     break;",
          "",
          "---------------",
          "--- Hunk 67 ---",
          "[Context before]",
          "3510:         }",
          "3512:         ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3516:   case 109:",
          "3517: #line 1744 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3513:       }",
          "3514:     break;",
          "",
          "[Added Lines]",
          "3530:       }",
          "3531:     break;",
          "",
          "---------------",
          "--- Hunk 68 ---",
          "[Context before]",
          "3531:         {",
          "3532:           (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
          "3533:         }",
          "3537:   case 110:",
          "3538: #line 1762 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3534:       }",
          "3535:     break;",
          "",
          "[Added Lines]",
          "3551:       }",
          "3552:     break;",
          "",
          "---------------",
          "--- Hunk 69 ---",
          "[Context before]",
          "3552:         {",
          "3553:           (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
          "3554:         }",
          "3558:   case 111:",
          "3559: #line 1780 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3555:       }",
          "3556:     break;",
          "",
          "[Added Lines]",
          "3572:       }",
          "3573:     break;",
          "",
          "---------------",
          "--- Hunk 70 ---",
          "[Context before]",
          "3573:         {",
          "3574:           (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
          "3575:         }",
          "3579:   case 112:",
          "3580: #line 1798 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3576:       }",
          "3577:     break;",
          "",
          "[Added Lines]",
          "3593:       }",
          "3594:     break;",
          "",
          "---------------",
          "--- Hunk 71 ---",
          "[Context before]",
          "3602:         {",
          "3603:           (yyval.expression).type = EXPRESSION_TYPE_FLOAT;",
          "3604:         }",
          "3608:   case 113:",
          "3609: #line 1824 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3605:       }",
          "3606:     break;",
          "",
          "[Added Lines]",
          "3622:       }",
          "3623:     break;",
          "",
          "---------------",
          "--- Hunk 72 ---",
          "[Context before]",
          "3623:           compiler->last_result = ERROR_DIVISION_BY_ZERO;",
          "3624:           ERROR_IF(compiler->last_result != ERROR_SUCCESS);",
          "3625:         }",
          "3629:   case 114:",
          "3630: #line 1842 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3626:       }",
          "3627:     break;",
          "",
          "[Added Lines]",
          "3643:       }",
          "3644:     break;",
          "",
          "---------------",
          "--- Hunk 73 ---",
          "[Context before]",
          "3637:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3638:         (yyval.expression).value.integer = OPERATION(^, (yyvsp[(1) - (3)].expression).value.integer, (yyvsp[(3) - (3)].expression).value.integer);",
          "3642:   case 115:",
          "3643: #line 1852 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3639:       }",
          "3640:     break;",
          "",
          "[Added Lines]",
          "3656:       }",
          "3657:     break;",
          "",
          "---------------",
          "--- Hunk 74 ---",
          "[Context before]",
          "3650:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3651:         (yyval.expression).value.integer = OPERATION(&, (yyvsp[(1) - (3)].expression).value.integer, (yyvsp[(3) - (3)].expression).value.integer);",
          "3655:   case 116:",
          "3656: #line 1862 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3652:       }",
          "3653:     break;",
          "",
          "[Added Lines]",
          "3669:       }",
          "3670:     break;",
          "",
          "---------------",
          "--- Hunk 75 ---",
          "[Context before]",
          "3663:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3664:         (yyval.expression).value.integer = OPERATION(|, (yyvsp[(1) - (3)].expression).value.integer, (yyvsp[(3) - (3)].expression).value.integer);",
          "3668:   case 117:",
          "3669: #line 1872 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3665:       }",
          "3666:     break;",
          "",
          "[Added Lines]",
          "3682:       }",
          "3683:     break;",
          "",
          "---------------",
          "--- Hunk 76 ---",
          "[Context before]",
          "3675:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3676:         (yyval.expression).value.integer = ((yyvsp[(2) - (2)].expression).value.integer == UNDEFINED) ?",
          "3677:             UNDEFINED : ~((yyvsp[(2) - (2)].expression).value.integer);",
          "3681:   case 118:",
          "3682: #line 1882 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3678:       }",
          "3679:     break;",
          "",
          "[Added Lines]",
          "3695:       }",
          "3696:     break;",
          "",
          "---------------",
          "--- Hunk 77 ---",
          "[Context before]",
          "3689:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3690:         (yyval.expression).value.integer = OPERATION(<<, (yyvsp[(1) - (3)].expression).value.integer, (yyvsp[(3) - (3)].expression).value.integer);",
          "3694:   case 119:",
          "3695: #line 1892 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3691:       }",
          "3692:     break;",
          "",
          "[Added Lines]",
          "3708:       }",
          "3709:     break;",
          "",
          "---------------",
          "--- Hunk 78 ---",
          "[Context before]",
          "3702:         (yyval.expression).type = EXPRESSION_TYPE_INTEGER;",
          "3703:         (yyval.expression).value.integer = OPERATION(>>, (yyvsp[(1) - (3)].expression).value.integer, (yyvsp[(3) - (3)].expression).value.integer);",
          "3707:   case 120:",
          "3708: #line 1902 \"grammar.y\"",
          "",
          "[Removed Lines]",
          "3704:       }",
          "3705:     break;",
          "",
          "[Added Lines]",
          "3721:       }",
          "3722:     break;",
          "",
          "---------------",
          "--- Hunk 79 ---",
          "[Context before]",
          "3710:         (yyval.expression) = (yyvsp[(1) - (1)].expression);",
          "3711:       }",
          "3712:     break;",
          "3716: #line 3714 \"grammar.c\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 80 ---",
          "[Context before]",
          "3924: #endif",
          "3926:   return YYID (yyresult);",
          "",
          "[Removed Lines]",
          "3927: }",
          "",
          "[Added Lines]",
          "3944: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4faaeee3c5fe2ca27016d970c428de305aa2c621",
      "candidate_info": {
        "commit_hash": "4faaeee3c5fe2ca27016d970c428de305aa2c621",
        "repo": "VirusTotal/yara",
        "commit_url": "https://github.com/VirusTotal/yara/commit/4faaeee3c5fe2ca27016d970c428de305aa2c621",
        "files": [
          "libyara/grammar.c",
          "libyara/grammar.h",
          "libyara/grammar.y"
        ],
        "message": "Use %PRId64 instead of %lld for printing int64_t",
        "before_after_code_files": [
          "libyara/grammar.c||libyara/grammar.c",
          "libyara/grammar.h||libyara/grammar.h",
          "libyara/grammar.y||libyara/grammar.y"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libyara/grammar.c||libyara/grammar.c",
            "libyara/grammar.y||libyara/grammar.y"
          ],
          "candidate": [
            "libyara/grammar.c||libyara/grammar.c",
            "libyara/grammar.y||libyara/grammar.y"
          ]
        }
      },
      "candidate_diff": {
        "libyara/grammar.c||libyara/grammar.c": [
          "File: libyara/grammar.c -> libyara/grammar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "77: #include <string.h>",
          "78: #include <limits.h>",
          "79: #include <stddef.h>",
          "82: #include <yara/integers.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80: #include <inttypes.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "613: static const yytype_uint16 yyrline[] =",
          "614: {",
          "628: };",
          "629: #endif",
          "",
          "[Removed Lines]",
          "615:        0,   226,   226,   228,   229,   230,   231,   232,   237,   250,",
          "616:      259,   249,   282,   285,   313,   316,   343,   348,   349,   354,",
          "617:      355,   361,   364,   382,   395,   432,   433,   438,   454,   467,",
          "618:      480,   493,   510,   511,   517,   516,   532,   531,   547,   561,",
          "619:      562,   567,   568,   569,   570,   575,   660,   706,   764,   809,",
          "620:      810,   814,   841,   879,   921,   943,   952,   961,   976,   988,",
          "621:     1002,  1015,  1026,  1037,  1067,  1036,  1181,  1180,  1259,  1265,",
          "622:     1272,  1271,  1325,  1324,  1376,  1385,  1394,  1403,  1412,  1421,",
          "623:     1430,  1434,  1442,  1443,  1448,  1470,  1482,  1498,  1497,  1503,",
          "624:     1514,  1515,  1520,  1527,  1538,  1539,  1543,  1551,  1555,  1565,",
          "625:     1579,  1595,  1605,  1614,  1639,  1651,  1663,  1679,  1691,  1707,",
          "626:     1752,  1771,  1799,  1828,  1856,  1881,  1899,  1909,  1919,  1929,",
          "627:     1939,  1949,  1959",
          "",
          "[Added Lines]",
          "616:        0,   227,   227,   229,   230,   231,   232,   233,   238,   251,",
          "617:      260,   250,   283,   286,   314,   317,   344,   349,   350,   355,",
          "618:      356,   362,   365,   383,   396,   433,   434,   439,   455,   468,",
          "619:      481,   494,   511,   512,   518,   517,   533,   532,   548,   562,",
          "620:      563,   568,   569,   570,   571,   576,   661,   707,   765,   810,",
          "621:      811,   815,   842,   880,   922,   944,   953,   962,   977,   989,",
          "622:     1003,  1016,  1027,  1038,  1068,  1037,  1182,  1181,  1260,  1266,",
          "623:     1273,  1272,  1326,  1325,  1377,  1386,  1395,  1404,  1413,  1422,",
          "624:     1431,  1435,  1443,  1444,  1449,  1471,  1483,  1499,  1498,  1504,",
          "625:     1515,  1516,  1521,  1528,  1539,  1540,  1544,  1552,  1556,  1566,",
          "626:     1580,  1596,  1606,  1615,  1640,  1652,  1664,  1680,  1692,  1708,",
          "627:     1753,  1772,  1804,  1833,  1861,  1886,  1904,  1914,  1924,  1934,",
          "628:     1944,  1954,  1964",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3508:               (yyvsp[-2].expression).value.integer > INT64_MAX - (yyvsp[0].expression).value.integer)",
          "3509:           {",
          "3510:             yr_compiler_set_error_extra_info_fmt(",
          "3512:             compiler->last_result = ERROR_INTEGER_OVERFLOW;",
          "3513:           }",
          "",
          "[Removed Lines]",
          "3511:                 compiler, \"%lld + %lld\", (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
          "",
          "[Added Lines]",
          "3512:                 compiler,",
          "3513:                 \"%\" PRId64 \" + %\" PRId64,",
          "3514:                 (yyvsp[-2].expression).value.integer,",
          "3515:                 (yyvsp[0].expression).value.integer);",
          "",
          "---------------"
        ],
        "libyara/grammar.h||libyara/grammar.h": [
          "File: libyara/grammar.h -> libyara/grammar.h"
        ],
        "libyara/grammar.y||libyara/grammar.y": [
          "File: libyara/grammar.y -> libyara/grammar.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include <string.h>",
          "36: #include <limits.h>",
          "37: #include <stddef.h>",
          "40: #include <yara/integers.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38: #include <inttypes.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1782:               $1.value.integer > INT64_MAX - $3.value.integer)",
          "1783:           {",
          "1784:             yr_compiler_set_error_extra_info_fmt(",
          "1786:             compiler->last_result = ERROR_INTEGER_OVERFLOW;",
          "1787:           }",
          "",
          "[Removed Lines]",
          "1785:                 compiler, \"%lld + %lld\", $1.value.integer, $3.value.integer);",
          "",
          "[Added Lines]",
          "1786:                 compiler,",
          "1787:                 \"%\" PRId64 \" + %\" PRId64,",
          "1788:                 $1.value.integer,",
          "1789:                 $3.value.integer);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "15f831264acb82f7722cefd2cd9b7adea541826a",
      "candidate_info": {
        "commit_hash": "15f831264acb82f7722cefd2cd9b7adea541826a",
        "repo": "VirusTotal/yara",
        "commit_url": "https://github.com/VirusTotal/yara/commit/15f831264acb82f7722cefd2cd9b7adea541826a",
        "files": [
          "libyara/grammar.c",
          "libyara/grammar.y",
          "libyara/lexer.c",
          "libyara/lexer.l",
          "tests/test-rules.c"
        ],
        "message": "Fix issues with the integer overflow detection logic.",
        "before_after_code_files": [
          "libyara/grammar.c||libyara/grammar.c",
          "libyara/grammar.y||libyara/grammar.y",
          "libyara/lexer.c||libyara/lexer.c",
          "libyara/lexer.l||libyara/lexer.l",
          "tests/test-rules.c||tests/test-rules.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libyara/grammar.c||libyara/grammar.c",
            "libyara/grammar.y||libyara/grammar.y"
          ],
          "candidate": [
            "libyara/grammar.c||libyara/grammar.c",
            "libyara/grammar.y||libyara/grammar.y"
          ]
        }
      },
      "candidate_diff": {
        "libyara/grammar.c||libyara/grammar.c": [
          "File: libyara/grammar.c -> libyara/grammar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "622:     1429,  1433,  1441,  1442,  1447,  1469,  1481,  1497,  1496,  1502,",
          "623:     1513,  1514,  1519,  1526,  1537,  1538,  1542,  1550,  1554,  1564,",
          "624:     1578,  1594,  1604,  1613,  1638,  1650,  1662,  1678,  1690,  1706,",
          "627: };",
          "628: #endif",
          "",
          "[Removed Lines]",
          "625:     1751,  1770,  1804,  1839,  1873,  1898,  1916,  1926,  1936,  1946,",
          "626:     1956,  1966,  1976",
          "",
          "[Added Lines]",
          "625:     1751,  1770,  1808,  1846,  1883,  1908,  1926,  1936,  1946,  1956,",
          "626:     1966,  1976,  1986",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3501:         if ((yyvsp[-2].expression).type == EXPRESSION_TYPE_INTEGER &&",
          "3502:             (yyvsp[0].expression).type == EXPRESSION_TYPE_INTEGER)",
          "3503:         {",
          "3508:           {",
          "3509:             yr_compiler_set_error_extra_info_fmt(",
          "3510:                 compiler,",
          "",
          "[Removed Lines]",
          "3504:           if (!IS_UNDEFINED((yyvsp[-2].expression).value.integer) &&",
          "3505:               !IS_UNDEFINED((yyvsp[0].expression).value.integer) &&",
          "3506:               (yyvsp[0].expression).value.integer > 0 &&",
          "3507:               (yyvsp[-2].expression).value.integer > INT64_MAX - (yyvsp[0].expression).value.integer)",
          "",
          "[Added Lines]",
          "3504:           int64_t i1 = (yyvsp[-2].expression).value.integer;",
          "3505:           int64_t i2 = (yyvsp[0].expression).value.integer;",
          "3507:           if (!IS_UNDEFINED(i1) && !IS_UNDEFINED(i2) &&",
          "3508:               (",
          "3509:                 (i2 > 0 && i1 > INT64_MAX - i2) ||",
          "3510:                 (i2 < 0 && i1 < INT64_MIN - i2)",
          "3511:               ))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3539:         if ((yyvsp[-2].expression).type == EXPRESSION_TYPE_INTEGER &&",
          "3540:             (yyvsp[0].expression).type == EXPRESSION_TYPE_INTEGER)",
          "3541:         {",
          "3547:           {",
          "3548:             yr_compiler_set_error_extra_info_fmt(",
          "3549:                 compiler,",
          "",
          "[Removed Lines]",
          "3542:           if (!IS_UNDEFINED((yyvsp[-2].expression).value.integer) &&",
          "3543:               !IS_UNDEFINED((yyvsp[0].expression).value.integer) &&",
          "3544:               (yyvsp[-2].expression).value.integer < 0 &&",
          "3545:               (yyvsp[0].expression).value.integer > 0 &&",
          "3546:               (yyvsp[-2].expression).value.integer < INT64_MIN + (yyvsp[0].expression).value.integer)",
          "",
          "[Added Lines]",
          "3546:           int64_t i1 = (yyvsp[-2].expression).value.integer;",
          "3547:           int64_t i2 = (yyvsp[0].expression).value.integer;",
          "3549:           if (!IS_UNDEFINED(i1) && !IS_UNDEFINED(i2) &&",
          "3550:               (",
          "3551:                 (i2 < 0 && i1 > INT64_MAX + i2) ||",
          "3552:                 (i2 > 0 && i1 < INT64_MIN + i2)",
          "3553:               ))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3578:         if ((yyvsp[-2].expression).type == EXPRESSION_TYPE_INTEGER &&",
          "3579:             (yyvsp[0].expression).type == EXPRESSION_TYPE_INTEGER)",
          "3580:         {",
          "3585:           {",
          "3586:             yr_compiler_set_error_extra_info_fmt(",
          "3587:                 compiler,",
          "",
          "[Removed Lines]",
          "3581:           if (!IS_UNDEFINED((yyvsp[-2].expression).value.integer) &&",
          "3582:               !IS_UNDEFINED((yyvsp[0].expression).value.integer) &&",
          "3583:               (yyvsp[0].expression).value.integer != 0 &&",
          "3584:               (yyvsp[-2].expression).value.integer > INT64_MAX / (yyvsp[0].expression).value.integer)",
          "",
          "[Added Lines]",
          "3588:           int64_t i1 = (yyvsp[-2].expression).value.integer;",
          "3589:           int64_t i2 = (yyvsp[0].expression).value.integer;",
          "3591:           if (!IS_UNDEFINED(i1) && !IS_UNDEFINED(i2) &&",
          "3592:               (",
          "3593:                 llabs(i1) > INT64_MAX / llabs(i2)",
          "3594:               ))",
          "",
          "---------------"
        ],
        "libyara/grammar.y||libyara/grammar.y": [
          "File: libyara/grammar.y -> libyara/grammar.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "1775:         if ($1.type == EXPRESSION_TYPE_INTEGER &&",
          "1776:             $3.type == EXPRESSION_TYPE_INTEGER)",
          "1777:         {",
          "1782:           {",
          "1783:             yr_compiler_set_error_extra_info_fmt(",
          "1784:                 compiler,",
          "",
          "[Removed Lines]",
          "1778:           if (!IS_UNDEFINED($1.value.integer) &&",
          "1779:               !IS_UNDEFINED($3.value.integer) &&",
          "1780:               $3.value.integer > 0 &&",
          "1781:               $1.value.integer > INT64_MAX - $3.value.integer)",
          "",
          "[Added Lines]",
          "1778:           int64_t i1 = $1.value.integer;",
          "1779:           int64_t i2 = $3.value.integer;",
          "1781:           if (!IS_UNDEFINED(i1) && !IS_UNDEFINED(i2) &&",
          "1782:               (",
          "1783:                 (i2 > 0 && i1 > INT64_MAX - i2) ||",
          "1784:                 (i2 < 0 && i1 < INT64_MIN - i2)",
          "1785:               ))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1809:         if ($1.type == EXPRESSION_TYPE_INTEGER &&",
          "1810:             $3.type == EXPRESSION_TYPE_INTEGER)",
          "1811:         {",
          "1817:           {",
          "1818:             yr_compiler_set_error_extra_info_fmt(",
          "1819:                 compiler,",
          "",
          "[Removed Lines]",
          "1812:           if (!IS_UNDEFINED($1.value.integer) &&",
          "1813:               !IS_UNDEFINED($3.value.integer) &&",
          "1814:               $1.value.integer < 0 &&",
          "1815:               $3.value.integer > 0 &&",
          "1816:               $1.value.integer < INT64_MIN + $3.value.integer)",
          "",
          "[Added Lines]",
          "1816:           int64_t i1 = $1.value.integer;",
          "1817:           int64_t i2 = $3.value.integer;",
          "1819:           if (!IS_UNDEFINED(i1) && !IS_UNDEFINED(i2) &&",
          "1820:               (",
          "1821:                 (i2 < 0 && i1 > INT64_MAX + i2) ||",
          "1822:                 (i2 > 0 && i1 < INT64_MIN + i2)",
          "1823:               ))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1844:         if ($1.type == EXPRESSION_TYPE_INTEGER &&",
          "1845:             $3.type == EXPRESSION_TYPE_INTEGER)",
          "1846:         {",
          "1851:           {",
          "1852:             yr_compiler_set_error_extra_info_fmt(",
          "1853:                 compiler,",
          "",
          "[Removed Lines]",
          "1847:           if (!IS_UNDEFINED($1.value.integer) &&",
          "1848:               !IS_UNDEFINED($3.value.integer) &&",
          "1849:               $3.value.integer != 0 &&",
          "1850:               $1.value.integer > INT64_MAX / $3.value.integer)",
          "",
          "[Added Lines]",
          "1854:           int64_t i1 = $1.value.integer;",
          "1855:           int64_t i2 = $3.value.integer;",
          "1857:           if (!IS_UNDEFINED(i1) && !IS_UNDEFINED(i2) &&",
          "1858:               (",
          "1859:                 llabs(i1) > INT64_MAX / llabs(i2)",
          "1860:               ))",
          "",
          "---------------"
        ],
        "libyara/lexer.c||libyara/lexer.c": [
          "File: libyara/lexer.c -> libyara/lexer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "965:     { \\",
          "966:       compiler->last_result = error_code; \\",
          "967:       yyerror(yyscanner, compiler, NULL); \\",
          "969:     }",
          "971: #define syntax_error(error_msg) \\",
          "",
          "[Removed Lines]",
          "968:       yyterminate(); \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1010: #define snprintf _snprintf",
          "1011: #endif",
          "1014: #define YY_NO_UNISTD_H 1",
          "1015: #define YY_NO_INPUT 1",
          "1019: #define INITIAL 0",
          "1020: #define str 1",
          "",
          "[Removed Lines]",
          "1013: #line 1013 \"lexer.c\"",
          "1017: #line 1017 \"lexer.c\"",
          "",
          "[Added Lines]",
          "1012: #line 1012 \"lexer.c\"",
          "1016: #line 1016 \"lexer.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1290:   }",
          "1292:  {",
          "1299:   {",
          "",
          "[Removed Lines]",
          "1293: #line 144 \"lexer.l\"",
          "1296: #line 1296 \"lexer.c\"",
          "",
          "[Added Lines]",
          "1292: #line 143 \"lexer.l\"",
          "1295: #line 1295 \"lexer.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1361: case 1:",
          "1362: YY_RULE_SETUP",
          "1364: { return _DOT_DOT_;     }",
          "1365:  YY_BREAK",
          "1366: case 2:",
          "1367: YY_RULE_SETUP",
          "1369: { return _LT_;          }",
          "1370:  YY_BREAK",
          "1371: case 3:",
          "1372: YY_RULE_SETUP",
          "1374: { return _GT_;          }",
          "1375:  YY_BREAK",
          "1376: case 4:",
          "1377: YY_RULE_SETUP",
          "1379: { return _LE_;          }",
          "1380:  YY_BREAK",
          "1381: case 5:",
          "1382: YY_RULE_SETUP",
          "1384: { return _GE_;          }",
          "1385:  YY_BREAK",
          "1386: case 6:",
          "1387: YY_RULE_SETUP",
          "1389: { return _EQ_;          }",
          "1390:  YY_BREAK",
          "1391: case 7:",
          "1392: YY_RULE_SETUP",
          "1394: { return _NEQ_;         }",
          "1395:  YY_BREAK",
          "1396: case 8:",
          "1397: YY_RULE_SETUP",
          "1399: { return _SHIFT_LEFT_;  }",
          "1400:  YY_BREAK",
          "1401: case 9:",
          "1402: YY_RULE_SETUP",
          "1404: { return _SHIFT_RIGHT_; }",
          "1405:  YY_BREAK",
          "1406: case 10:",
          "1407: YY_RULE_SETUP",
          "1409: { return _PRIVATE_;     }",
          "1410:  YY_BREAK",
          "1411: case 11:",
          "1412: YY_RULE_SETUP",
          "1414: { return _GLOBAL_;      }",
          "1415:  YY_BREAK",
          "1416: case 12:",
          "1417: YY_RULE_SETUP",
          "1419: { return _RULE_;        }",
          "1420:  YY_BREAK",
          "1421: case 13:",
          "1422: YY_RULE_SETUP",
          "1424: { return _META_;        }",
          "1425:  YY_BREAK",
          "1426: case 14:",
          "1427: YY_RULE_SETUP",
          "1429: { return _STRINGS_;     }",
          "1430:  YY_BREAK",
          "1431: case 15:",
          "1432: YY_RULE_SETUP",
          "1434: { return _ASCII_;       }",
          "1435:  YY_BREAK",
          "1436: case 16:",
          "1437: YY_RULE_SETUP",
          "1439: { return _WIDE_;        }",
          "1440:  YY_BREAK",
          "1441: case 17:",
          "1442: YY_RULE_SETUP",
          "1444: { return _FULLWORD_;    }",
          "1445:  YY_BREAK",
          "1446: case 18:",
          "1447: YY_RULE_SETUP",
          "1449: { return _NOCASE_;      }",
          "1450:  YY_BREAK",
          "1451: case 19:",
          "1452: YY_RULE_SETUP",
          "1454: { return _CONDITION_;   }",
          "1455:  YY_BREAK",
          "1456: case 20:",
          "1457: YY_RULE_SETUP",
          "1459: { return _TRUE_;        }",
          "1460:  YY_BREAK",
          "1461: case 21:",
          "1462: YY_RULE_SETUP",
          "1464: { return _FALSE_;       }",
          "1465:  YY_BREAK",
          "1466: case 22:",
          "1467: YY_RULE_SETUP",
          "1469: { return _NOT_;         }",
          "1470:  YY_BREAK",
          "1471: case 23:",
          "1472: YY_RULE_SETUP",
          "1474: { return _AND_;         }",
          "1475:  YY_BREAK",
          "1476: case 24:",
          "1477: YY_RULE_SETUP",
          "1479: { return _OR_;          }",
          "1480:  YY_BREAK",
          "1481: case 25:",
          "1482: YY_RULE_SETUP",
          "1484: { return _AT_;          }",
          "1485:  YY_BREAK",
          "1486: case 26:",
          "1487: YY_RULE_SETUP",
          "1489: { return _IN_;          }",
          "1490:  YY_BREAK",
          "1491: case 27:",
          "1492: YY_RULE_SETUP",
          "1494: { return _OF_;          }",
          "1495:  YY_BREAK",
          "1496: case 28:",
          "1497: YY_RULE_SETUP",
          "1499: { return _THEM_;        }",
          "1500:  YY_BREAK",
          "1501: case 29:",
          "1502: YY_RULE_SETUP",
          "1504: { return _FOR_;         }",
          "1505:  YY_BREAK",
          "1506: case 30:",
          "1507: YY_RULE_SETUP",
          "1509: { return _ALL_;         }",
          "1510:  YY_BREAK",
          "1511: case 31:",
          "1512: YY_RULE_SETUP",
          "1514: { return _ANY_;         }",
          "1515:  YY_BREAK",
          "1516: case 32:",
          "1517: YY_RULE_SETUP",
          "1519: { return _ENTRYPOINT_;  }",
          "1520:  YY_BREAK",
          "1521: case 33:",
          "1522: YY_RULE_SETUP",
          "1524: { return _FILESIZE_;    }",
          "1525:  YY_BREAK",
          "1526: case 34:",
          "1527: YY_RULE_SETUP",
          "1529: { return _MATCHES_;     }",
          "1530:  YY_BREAK",
          "1531: case 35:",
          "1532: YY_RULE_SETUP",
          "1534: { return _CONTAINS_;    }",
          "1535:  YY_BREAK",
          "1536: case 36:",
          "1537: YY_RULE_SETUP",
          "1539: { return _IMPORT_;      }",
          "1540:  YY_BREAK",
          "1541: case 37:",
          "1542: YY_RULE_SETUP",
          "1544: { BEGIN(comment);       }",
          "1545:  YY_BREAK",
          "1546: case 38:",
          "1547: YY_RULE_SETUP",
          "1549: { BEGIN(INITIAL);       }",
          "1550:  YY_BREAK",
          "1551: case 39:",
          "1553: YY_RULE_SETUP",
          "1555: { /* skip comments */   }",
          "1556:  YY_BREAK",
          "1557: case 40:",
          "1558: YY_RULE_SETUP",
          "1560: { /* skip single-line comments */ }",
          "1561:  YY_BREAK",
          "1562: case 41:",
          "1563: YY_RULE_SETUP",
          "1565: {",
          "1566:                           yyextra->lex_buf_ptr = yyextra->lex_buf;",
          "1567:                           yyextra->lex_buf_len = 0;",
          "",
          "[Removed Lines]",
          "1363: #line 146 \"lexer.l\"",
          "1368: #line 147 \"lexer.l\"",
          "1373: #line 148 \"lexer.l\"",
          "1378: #line 149 \"lexer.l\"",
          "1383: #line 150 \"lexer.l\"",
          "1388: #line 151 \"lexer.l\"",
          "1393: #line 152 \"lexer.l\"",
          "1398: #line 153 \"lexer.l\"",
          "1403: #line 154 \"lexer.l\"",
          "1408: #line 155 \"lexer.l\"",
          "1413: #line 156 \"lexer.l\"",
          "1418: #line 157 \"lexer.l\"",
          "1423: #line 158 \"lexer.l\"",
          "1428: #line 159 \"lexer.l\"",
          "1433: #line 160 \"lexer.l\"",
          "1438: #line 161 \"lexer.l\"",
          "1443: #line 162 \"lexer.l\"",
          "1448: #line 163 \"lexer.l\"",
          "1453: #line 164 \"lexer.l\"",
          "1458: #line 165 \"lexer.l\"",
          "1463: #line 166 \"lexer.l\"",
          "1468: #line 167 \"lexer.l\"",
          "1473: #line 168 \"lexer.l\"",
          "1478: #line 169 \"lexer.l\"",
          "1483: #line 170 \"lexer.l\"",
          "1488: #line 171 \"lexer.l\"",
          "1493: #line 172 \"lexer.l\"",
          "1498: #line 173 \"lexer.l\"",
          "1503: #line 174 \"lexer.l\"",
          "1508: #line 175 \"lexer.l\"",
          "1513: #line 176 \"lexer.l\"",
          "1518: #line 177 \"lexer.l\"",
          "1523: #line 178 \"lexer.l\"",
          "1528: #line 179 \"lexer.l\"",
          "1533: #line 180 \"lexer.l\"",
          "1538: #line 181 \"lexer.l\"",
          "1543: #line 184 \"lexer.l\"",
          "1548: #line 185 \"lexer.l\"",
          "1554: #line 186 \"lexer.l\"",
          "1559: #line 189 \"lexer.l\"",
          "1564: #line 192 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1362: #line 145 \"lexer.l\"",
          "1367: #line 146 \"lexer.l\"",
          "1372: #line 147 \"lexer.l\"",
          "1377: #line 148 \"lexer.l\"",
          "1382: #line 149 \"lexer.l\"",
          "1387: #line 150 \"lexer.l\"",
          "1392: #line 151 \"lexer.l\"",
          "1397: #line 152 \"lexer.l\"",
          "1402: #line 153 \"lexer.l\"",
          "1407: #line 154 \"lexer.l\"",
          "1412: #line 155 \"lexer.l\"",
          "1417: #line 156 \"lexer.l\"",
          "1422: #line 157 \"lexer.l\"",
          "1427: #line 158 \"lexer.l\"",
          "1432: #line 159 \"lexer.l\"",
          "1437: #line 160 \"lexer.l\"",
          "1442: #line 161 \"lexer.l\"",
          "1447: #line 162 \"lexer.l\"",
          "1452: #line 163 \"lexer.l\"",
          "1457: #line 164 \"lexer.l\"",
          "1462: #line 165 \"lexer.l\"",
          "1467: #line 166 \"lexer.l\"",
          "1472: #line 167 \"lexer.l\"",
          "1477: #line 168 \"lexer.l\"",
          "1482: #line 169 \"lexer.l\"",
          "1487: #line 170 \"lexer.l\"",
          "1492: #line 171 \"lexer.l\"",
          "1497: #line 172 \"lexer.l\"",
          "1502: #line 173 \"lexer.l\"",
          "1507: #line 174 \"lexer.l\"",
          "1512: #line 175 \"lexer.l\"",
          "1517: #line 176 \"lexer.l\"",
          "1522: #line 177 \"lexer.l\"",
          "1527: #line 178 \"lexer.l\"",
          "1532: #line 179 \"lexer.l\"",
          "1537: #line 180 \"lexer.l\"",
          "1542: #line 183 \"lexer.l\"",
          "1547: #line 184 \"lexer.l\"",
          "1553: #line 185 \"lexer.l\"",
          "1558: #line 188 \"lexer.l\"",
          "1563: #line 191 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1571: case 42:",
          "1573: YY_RULE_SETUP",
          "1575: { yytext_to_buffer; }",
          "1576:  YY_BREAK",
          "1577: case 43:",
          "1578: YY_RULE_SETUP",
          "1580: {",
          "1582:   if (compiler->include_callback != NULL)",
          "",
          "[Removed Lines]",
          "1574: #line 199 \"lexer.l\"",
          "1579: #line 202 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1573: #line 198 \"lexer.l\"",
          "1578: #line 201 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1665: case YY_STATE_EOF(regexp):",
          "1666: case YY_STATE_EOF(include):",
          "1667: case YY_STATE_EOF(comment):",
          "1669: {",
          "1671:   YR_COMPILER* compiler = yyget_extra(yyscanner);",
          "",
          "[Removed Lines]",
          "1668: #line 286 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1667: #line 285 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1682:  YY_BREAK",
          "1683: case 44:",
          "1684: YY_RULE_SETUP",
          "1686: {",
          "1688:   yylval->c_string = yr_strdup(yytext);",
          "",
          "[Removed Lines]",
          "1685: #line 301 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1684: #line 300 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1695:  YY_BREAK",
          "1696: case 45:",
          "1697: YY_RULE_SETUP",
          "1699: {",
          "1701:   yylval->c_string = yr_strdup(yytext);",
          "",
          "[Removed Lines]",
          "1698: #line 312 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1697: #line 311 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1708:  YY_BREAK",
          "1709: case 46:",
          "1710: YY_RULE_SETUP",
          "1712: {",
          "1714:   yylval->c_string = yr_strdup(yytext);",
          "",
          "[Removed Lines]",
          "1711: #line 323 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1710: #line 322 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1722:  YY_BREAK",
          "1723: case 47:",
          "1724: YY_RULE_SETUP",
          "1726: {",
          "1728:   yylval->c_string = yr_strdup(yytext);",
          "",
          "[Removed Lines]",
          "1725: #line 335 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1724: #line 334 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1736:  YY_BREAK",
          "1737: case 48:",
          "1738: YY_RULE_SETUP",
          "1740: {",
          "1742:   yylval->c_string = yr_strdup(yytext);",
          "",
          "[Removed Lines]",
          "1739: #line 347 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1738: #line 346 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1750:  YY_BREAK",
          "1751: case 49:",
          "1752: YY_RULE_SETUP",
          "1754: {",
          "1756:   char* text = yytext;",
          "",
          "[Removed Lines]",
          "1753: #line 359 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1752: #line 358 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1791:  YY_BREAK",
          "1792: case 50:",
          "1793: YY_RULE_SETUP",
          "1795: {",
          "1797:   if (strlen(yytext) > 128)",
          "",
          "[Removed Lines]",
          "1794: #line 398 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1793: #line 397 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1807:  YY_BREAK",
          "1808: case 51:",
          "1809: YY_RULE_SETUP",
          "1811: {",
          "1813:   char *endptr;",
          "",
          "[Removed Lines]",
          "1810: #line 412 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1809: #line 411 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1845:  YY_BREAK",
          "1846: case 52:",
          "1847: YY_RULE_SETUP",
          "1849: {",
          "1850:   yylval->double_ = atof(yytext);",
          "1851:   return _DOUBLE_;",
          "",
          "[Removed Lines]",
          "1848: #line 447 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1847: #line 446 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1853:  YY_BREAK",
          "1854: case 53:",
          "1855: YY_RULE_SETUP",
          "1857: {",
          "1859:   char *endptr;",
          "",
          "[Removed Lines]",
          "1856: #line 452 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1855: #line 451 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1872:  YY_BREAK",
          "1873: case 54:",
          "1874: YY_RULE_SETUP",
          "1876: {",
          "1878:   char *endptr;",
          "",
          "[Removed Lines]",
          "1875: #line 468 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1874: #line 467 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1891:  YY_BREAK",
          "1892: case 55:",
          "1893: YY_RULE_SETUP",
          "1897:   alloc_sized_string(s, yyextra->lex_buf_len);",
          "",
          "[Removed Lines]",
          "1894: #line 485 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1893: #line 484 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1907:  YY_BREAK",
          "1908: case 56:",
          "1909: YY_RULE_SETUP",
          "1911: {",
          "1913:   lex_check_space_ok(\"\\t\", yyextra->lex_buf_len, LEX_BUF_SIZE);",
          "",
          "[Removed Lines]",
          "1910: #line 499 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1909: #line 498 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1917:  YY_BREAK",
          "1918: case 57:",
          "1919: YY_RULE_SETUP",
          "1921: {",
          "1923:   lex_check_space_ok(\"\\n\", yyextra->lex_buf_len, LEX_BUF_SIZE);",
          "",
          "[Removed Lines]",
          "1920: #line 507 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1919: #line 506 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1927:  YY_BREAK",
          "1928: case 58:",
          "1929: YY_RULE_SETUP",
          "1931: {",
          "1933:   lex_check_space_ok(\"\\\"\", yyextra->lex_buf_len, LEX_BUF_SIZE);",
          "",
          "[Removed Lines]",
          "1930: #line 515 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1929: #line 514 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1937:  YY_BREAK",
          "1938: case 59:",
          "1939: YY_RULE_SETUP",
          "1941: {",
          "1943:   lex_check_space_ok(\"\\\\\", yyextra->lex_buf_len, LEX_BUF_SIZE);",
          "",
          "[Removed Lines]",
          "1940: #line 523 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1939: #line 522 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1947:  YY_BREAK",
          "1948: case 60:",
          "1949: YY_RULE_SETUP",
          "1951: {",
          "1953:    int result;",
          "",
          "[Removed Lines]",
          "1950: #line 531 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1949: #line 530 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1960:  YY_BREAK",
          "1961: case 61:",
          "1962: YY_RULE_SETUP",
          "1964: { yytext_to_buffer; }",
          "1965:  YY_BREAK",
          "1966: case 62:",
          "1968: YY_RULE_SETUP",
          "1970: {",
          "1971:   syntax_error(\"unterminated string\");",
          "1972: }",
          "",
          "[Removed Lines]",
          "1963: #line 542 \"lexer.l\"",
          "1969: #line 545 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1962: #line 541 \"lexer.l\"",
          "1968: #line 544 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1974: case 63:",
          "1976: YY_RULE_SETUP",
          "1978: {",
          "1979:   syntax_error(\"illegal escape sequence\");",
          "1980: }",
          "1981:  YY_BREAK",
          "1982: case 64:",
          "1983: YY_RULE_SETUP",
          "1985: {",
          "1987:   if (yyextra->lex_buf_len > 0)",
          "",
          "[Removed Lines]",
          "1977: #line 549 \"lexer.l\"",
          "1984: #line 554 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1976: #line 548 \"lexer.l\"",
          "1983: #line 553 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "2009:  YY_BREAK",
          "2010: case 65:",
          "2011: YY_RULE_SETUP",
          "2013: {",
          "2015:   lex_check_space_ok(\"/\", yyextra->lex_buf_len, LEX_BUF_SIZE);",
          "",
          "[Removed Lines]",
          "2012: #line 580 \"lexer.l\"",
          "",
          "[Added Lines]",
          "2011: #line 579 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "2019:  YY_BREAK",
          "2020: case 66:",
          "2021: YY_RULE_SETUP",
          "2023: {",
          "2025:   lex_check_space_ok(\"\\\\.\", yyextra->lex_buf_len, LEX_BUF_SIZE);",
          "",
          "[Removed Lines]",
          "2022: #line 588 \"lexer.l\"",
          "",
          "[Added Lines]",
          "2021: #line 587 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "2034:  YY_BREAK",
          "2035: case 67:",
          "2036: YY_RULE_SETUP",
          "2038: { yytext_to_buffer; }",
          "2039:  YY_BREAK",
          "2040: case 68:",
          "2042: YY_RULE_SETUP",
          "2044: {",
          "2045:   syntax_error(\"unterminated regular expression\");",
          "2046: }",
          "2047:  YY_BREAK",
          "2048: case 69:",
          "2049: YY_RULE_SETUP",
          "2051: {",
          "2053:   yyextra->lex_buf_ptr = yyextra->lex_buf;",
          "",
          "[Removed Lines]",
          "2037: #line 601 \"lexer.l\"",
          "2043: #line 604 \"lexer.l\"",
          "2050: #line 609 \"lexer.l\"",
          "",
          "[Added Lines]",
          "2036: #line 600 \"lexer.l\"",
          "2042: #line 603 \"lexer.l\"",
          "2049: #line 608 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "2057:  YY_BREAK",
          "2058: case 70:",
          "2059: YY_RULE_SETUP",
          "2061: {",
          "2063:   yyextra->lex_buf_ptr = yyextra->lex_buf;",
          "",
          "[Removed Lines]",
          "2060: #line 617 \"lexer.l\"",
          "",
          "[Added Lines]",
          "2059: #line 616 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "2068: case 71:",
          "2070: YY_RULE_SETUP",
          "2072: {",
          "",
          "[Removed Lines]",
          "2071: #line 625 \"lexer.l\"",
          "",
          "[Added Lines]",
          "2070: #line 624 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "2084: case 72:",
          "2086: YY_RULE_SETUP",
          "2089:  YY_BREAK",
          "2090: case 73:",
          "2091: YY_RULE_SETUP",
          "2093: {",
          "2095:   if (yytext[0] >= 32 && yytext[0] < 127)",
          "",
          "[Removed Lines]",
          "2087: #line 638 \"lexer.l\"",
          "2092: #line 640 \"lexer.l\"",
          "",
          "[Added Lines]",
          "2086: #line 637 \"lexer.l\"",
          "2091: #line 639 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "2104:  YY_BREAK",
          "2105: case 74:",
          "2106: YY_RULE_SETUP",
          "2108: ECHO;",
          "2109:  YY_BREAK",
          "2112:  case YY_END_OF_BUFFER:",
          "2113:   {",
          "",
          "[Removed Lines]",
          "2107: #line 652 \"lexer.l\"",
          "2110: #line 2110 \"lexer.c\"",
          "",
          "[Added Lines]",
          "2106: #line 651 \"lexer.l\"",
          "2109: #line 2109 \"lexer.c\"",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "3257: #define YYTABLES_NAME \"yytables\"",
          "",
          "[Removed Lines]",
          "3259: #line 652 \"lexer.l\"",
          "",
          "[Added Lines]",
          "3258: #line 651 \"lexer.l\"",
          "",
          "---------------"
        ],
        "libyara/lexer.l||libyara/lexer.l": [
          "File: libyara/lexer.l -> libyara/lexer.l",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:     { \\",
          "72:       compiler->last_result = error_code; \\",
          "73:       yyerror(yyscanner, compiler, NULL); \\",
          "75:     }",
          "77: #define syntax_error(error_msg) \\",
          "",
          "[Removed Lines]",
          "74:       yyterminate(); \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/test-rules.c||tests/test-rules.c": [
          "File: tests/test-rules.c -> tests/test-rules.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "187:   assert_true_rule(",
          "188:       \"rule test { condition: 1--1 == 2}\", NULL);",
          "190:   assert_true_rule(",
          "191:       \"rule test { condition: -0x01 == -1}\", NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "190:   assert_true_rule(",
          "191:       \"rule test { condition: 2 * -2 == -4}\", NULL);",
          "193:   assert_true_rule(",
          "194:       \"rule test { condition: -4 * 2 == -8}\", NULL);",
          "196:   assert_true_rule(",
          "197:       \"rule test { condition: -4 * -4 == 16}\", NULL);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "202:   assert_error(  // integer too long",
          "203:       \"rule test { condition: 9223372036854775808 > 0 }\",",
          "206:   assert_error(  // integer too long",
          "207:       \"rule test { condition: 9007199254740992KB > 0 }\",",
          "210:   assert_error(  // integer too long",
          "214:   assert_error(  // integer too long",
          "218:   assert_error(  // integer too long",
          "222:   assert_error(  // integer overflow",
          "226:   assert_error(  // integer overflow",
          "230:   assert_error(  // integer overflow",
          "234:   assert_error(  // integer overflow",
          "238: }",
          "",
          "[Removed Lines]",
          "204:       ERROR_SYNTAX_ERROR);",
          "208:       ERROR_SYNTAX_ERROR);",
          "211:      \"rule test { condition: 8796093022208MB > 0 }\",",
          "212:      ERROR_SYNTAX_ERROR);",
          "215:     \"rule test { condition: 0x8000000000000000 > 0 }\",",
          "216:     ERROR_SYNTAX_ERROR);",
          "219:     \"rule test { condition: 0o1000000000000000000000 > 0 }\",",
          "220:     ERROR_SYNTAX_ERROR);",
          "223:     \"rule test { condition: 0x7FFFFFFFFFFFFFFF + 1 > 0 }\",",
          "224:     ERROR_INTEGER_OVERFLOW);",
          "227:     \"rule test { condition: 9223372036854775807 + 1 > 0 }\",",
          "228:     ERROR_INTEGER_OVERFLOW);",
          "231:     \"rule test { condition: -9223372036854775807 - 2 > 0 }\",",
          "232:     ERROR_INTEGER_OVERFLOW);",
          "235:     \"rule test { condition: 0x4000000000000000 * 2 }\",",
          "236:     ERROR_INTEGER_OVERFLOW);",
          "",
          "[Added Lines]",
          "213:       ERROR_INTEGER_OVERFLOW);",
          "217:       ERROR_INTEGER_OVERFLOW);",
          "220:       \"rule test { condition: 8796093022208MB > 0 }\",",
          "221:       ERROR_INTEGER_OVERFLOW);",
          "224:      \"rule test { condition: 0x8000000000000000 > 0 }\",",
          "225:      ERROR_INTEGER_OVERFLOW);",
          "228:      \"rule test { condition: 0o1000000000000000000000 > 0 }\",",
          "229:      ERROR_INTEGER_OVERFLOW);",
          "231:   assert_error(  // integer overflow",
          "232:      \"rule test { condition: 0x7FFFFFFFFFFFFFFF + 1 > 0 }\",",
          "233:      ERROR_INTEGER_OVERFLOW);",
          "236:      \"rule test { condition: 9223372036854775807 + 1 > 0 }\",",
          "237:      ERROR_INTEGER_OVERFLOW);",
          "240:      \"rule test { condition: -9223372036854775807 - 2 > 0 }\",",
          "241:      ERROR_INTEGER_OVERFLOW);",
          "244:      \"rule test { condition: -2 + -9223372036854775807 > 0 }\",",
          "245:      ERROR_INTEGER_OVERFLOW);",
          "248:      \"rule test { condition: 1 - -9223372036854775807 > 0 }\",",
          "249:      ERROR_INTEGER_OVERFLOW);",
          "251:   assert_error(  // integer overflow",
          "252:      \"rule test { condition: 0x4000000000000000 * 2 }\",",
          "253:      ERROR_INTEGER_OVERFLOW);",
          "255:   assert_error(  // integer overflow",
          "256:      \"rule test { condition: 4611686018427387904 * 2 }\",",
          "257:      ERROR_INTEGER_OVERFLOW);",
          "259:   assert_error(  // integer overflow",
          "260:      \"rule test { condition: 4611686018427387904 * -2 }\",",
          "261:      ERROR_INTEGER_OVERFLOW);",
          "263:   assert_error(  // integer overflow",
          "264:      \"rule test { condition: -4611686018427387904 * 2 }\",",
          "265:      ERROR_INTEGER_OVERFLOW);",
          "267:   assert_error(  // integer overflow",
          "268:      \"rule test { condition: -4611686018427387904 * -2 }\",",
          "269:      ERROR_INTEGER_OVERFLOW);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "784dba7c83043c2220e3daa2ebfdc9c44aefe54a",
      "candidate_info": {
        "commit_hash": "784dba7c83043c2220e3daa2ebfdc9c44aefe54a",
        "repo": "VirusTotal/yara",
        "commit_url": "https://github.com/VirusTotal/yara/commit/784dba7c83043c2220e3daa2ebfdc9c44aefe54a",
        "files": [
          "libyara/grammar.c",
          "libyara/re_lexer.c"
        ],
        "message": "Update grammars",
        "before_after_code_files": [
          "libyara/grammar.c||libyara/grammar.c",
          "libyara/re_lexer.c||libyara/re_lexer.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libyara/grammar.c||libyara/grammar.c"
          ],
          "candidate": [
            "libyara/grammar.c||libyara/grammar.c"
          ]
        }
      },
      "candidate_diff": {
        "libyara/grammar.c||libyara/grammar.c": [
          "File: libyara/grammar.c -> libyara/grammar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "612:      472,   485,   502,   503,   509,   508,   524,   523,   539,   553,",
          "613:      554,   559,   560,   561,   562,   567,   652,   698,   756,   801,",
          "614:      802,   806,   831,   867,   913,   935,   944,   953,   968,   980,",
          "622: };",
          "623: #endif",
          "",
          "[Removed Lines]",
          "615:      994,  1007,  1018,  1024,  1054,  1023,  1168,  1167,  1246,  1252,",
          "616:     1259,  1258,  1321,  1320,  1381,  1390,  1399,  1408,  1417,  1426,",
          "617:     1435,  1439,  1447,  1448,  1453,  1475,  1487,  1503,  1502,  1508,",
          "618:     1519,  1520,  1525,  1532,  1543,  1544,  1548,  1556,  1560,  1570,",
          "619:     1584,  1600,  1610,  1619,  1644,  1656,  1668,  1684,  1696,  1712,",
          "620:     1757,  1776,  1794,  1812,  1830,  1856,  1874,  1884,  1894,  1904,",
          "621:     1914,  1924,  1934",
          "",
          "[Added Lines]",
          "615:      994,  1007,  1018,  1027,  1057,  1026,  1171,  1170,  1249,  1255,",
          "616:     1262,  1261,  1324,  1323,  1384,  1393,  1402,  1411,  1420,  1429,",
          "617:     1438,  1442,  1450,  1451,  1456,  1478,  1490,  1506,  1505,  1511,",
          "618:     1522,  1523,  1528,  1535,  1546,  1547,  1551,  1559,  1563,  1573,",
          "619:     1587,  1603,  1613,  1622,  1647,  1659,  1671,  1687,  1699,  1715,",
          "620:     1760,  1779,  1797,  1815,  1833,  1859,  1877,  1887,  1897,  1907,",
          "621:     1917,  1927,  1937",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2587:   case 62:",
          "2589:     {",
          "2592:       }",
          "2594:     break;",
          "2596:   case 63:",
          "2598:     {",
          "2599:         int var_index;",
          "",
          "[Removed Lines]",
          "2590:         compiler->loop_depth--;",
          "2591:         compiler->loop_identifier[compiler->loop_depth] = NULL;",
          "",
          "[Added Lines]",
          "2590:         if (compiler->loop_depth > 0)",
          "2591:         {",
          "2592:           compiler->loop_depth--;",
          "2593:           compiler->loop_identifier[compiler->loop_depth] = NULL;",
          "2594:         }",
          "",
          "---------------"
        ],
        "libyara/re_lexer.c||libyara/re_lexer.c": [
          "File: libyara/re_lexer.c -> libyara/re_lexer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: #define FLEX_SCANNER",
          "10: #define YY_FLEX_MAJOR_VERSION 2",
          "11: #define YY_FLEX_MINOR_VERSION 6",
          "13: #if YY_FLEX_SUBMINOR_VERSION > 0",
          "14: #define FLEX_BETA",
          "15: #endif",
          "",
          "[Removed Lines]",
          "12: #define YY_FLEX_SUBMINOR_VERSION 1",
          "",
          "[Added Lines]",
          "12: #define YY_FLEX_SUBMINOR_VERSION 0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96: #else",
          "98: #endif",
          "",
          "[Removed Lines]",
          "92: #define yyconst const",
          "94: #if defined(__GNUC__) && __GNUC__ >= 3",
          "95: #define yynoreturn __attribute__((__noreturn__))",
          "97: #define yynoreturn",
          "",
          "[Added Lines]",
          "91: #ifdef __cplusplus",
          "94: #define YY_USE_CONST",
          "99: #if defined (__STDC__)",
          "101: #define YY_USE_CONST",
          "106: #ifdef YY_USE_CONST",
          "107: #define yyconst const",
          "109: #define yyconst",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "229:  int yy_buf_size;",
          "234:  int yy_n_chars;",
          "",
          "[Added Lines]",
          "241:  yy_size_t yy_buf_size;",
          "246:  yy_size_t yy_n_chars;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "311: YY_BUFFER_STATE re_yy_scan_buffer (char *base,yy_size_t size ,yyscan_t yyscanner );",
          "312: YY_BUFFER_STATE re_yy_scan_string (yyconst char *yy_str ,yyscan_t yyscanner );",
          "315: void *re_yyalloc (yy_size_t ,yyscan_t yyscanner );",
          "316: void *re_yyrealloc (void *,yy_size_t ,yyscan_t yyscanner );",
          "",
          "[Removed Lines]",
          "313: YY_BUFFER_STATE re_yy_scan_bytes (yyconst char *bytes,int len ,yyscan_t yyscanner );",
          "",
          "[Added Lines]",
          "325: YY_BUFFER_STATE re_yy_scan_bytes (yyconst char *bytes,yy_size_t len ,yyscan_t yyscanner );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "354: static yy_state_type yy_get_previous_state (yyscan_t yyscanner );",
          "355: static yy_state_type yy_try_NUL_trans (yy_state_type current_state  ,yyscan_t yyscanner);",
          "356: static int yy_get_next_buffer (yyscan_t yyscanner );",
          "362: #define YY_DO_BEFORE_ACTION \\",
          "363:  yyg->yytext_ptr = yy_bp; \\",
          "365:  yyg->yy_hold_char = *yy_cp; \\",
          "367:  yyg->yy_c_buf_p = yy_cp;",
          "",
          "[Removed Lines]",
          "357: static void yynoreturn yy_fatal_error (yyconst char* msg ,yyscan_t yyscanner );",
          "364:  yyleng = (int) (yy_cp - yy_bp); \\",
          "",
          "[Added Lines]",
          "369: #if defined(__GNUC__) && __GNUC__ >= 3",
          "370: __attribute__((__noreturn__))",
          "371: #endif",
          "372: static void yy_fatal_error (yyconst char msg[] ,yyscan_t yyscanner );",
          "379:  yyleng = (size_t) (yy_cp - yy_bp); \\",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "568: #define YY_NO_UNISTD_H 1",
          "572: #define INITIAL 0",
          "573: #define char_class 1",
          "",
          "[Removed Lines]",
          "570: #line 571 \"re_lexer.c\"",
          "",
          "[Added Lines]",
          "585: #line 586 \"re_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "599:     char yy_hold_char;",
          "602:     char *yy_c_buf_p;",
          "603:     int yy_init;",
          "604:     int yy_start;",
          "",
          "[Removed Lines]",
          "600:     int yy_n_chars;",
          "601:     int yyleng_r;",
          "",
          "[Added Lines]",
          "615:     yy_size_t yy_n_chars;",
          "616:     yy_size_t yyleng_r;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "652: void re_yyset_out  (FILE * _out_str ,yyscan_t yyscanner );",
          "656: char *re_yyget_text (yyscan_t yyscanner );",
          "",
          "[Removed Lines]",
          "654:    int re_yyget_leng (yyscan_t yyscanner );",
          "",
          "[Added Lines]",
          "669: yy_size_t re_yyget_leng (yyscan_t yyscanner );",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "720: #endif",
          "",
          "[Removed Lines]",
          "719: #define ECHO do { if (fwrite( yytext, (size_t) yyleng, 1, yyout )) {} } while (0)",
          "",
          "[Added Lines]",
          "734: #define ECHO do { if (fwrite( yytext, yyleng, 1, yyout )) {} } while (0)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "740:  else \\",
          "741:   { \\",
          "742:   errno=0; \\",
          "744:    { \\",
          "745:    if( errno != EINTR) \\",
          "746:     { \\",
          "",
          "[Removed Lines]",
          "743:   while ( (result = (int) fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \\",
          "",
          "[Added Lines]",
          "758:   while ( (result = fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \\",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "844: #line 99 \"re_lexer.l\"",
          "850:   {",
          "",
          "[Removed Lines]",
          "847: #line 848 \"re_lexer.c\"",
          "",
          "[Added Lines]",
          "862: #line 863 \"re_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "874:     if ( yy_current_state >= 45 )",
          "875:      yy_c = yy_meta[(unsigned int) yy_c];",
          "876:     }",
          "878:    ++yy_cp;",
          "879:    }",
          "880:   while ( yy_current_state != 44 );",
          "",
          "[Removed Lines]",
          "877:    yy_current_state = yy_nxt[yy_base[yy_current_state] + (flex_int16_t) yy_c];",
          "",
          "[Added Lines]",
          "892:    yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1339: #line 464 \"re_lexer.l\"",
          "1340: ECHO;",
          "1341:  YY_BREAK",
          "1344:  case YY_END_OF_BUFFER:",
          "1345:   {",
          "",
          "[Removed Lines]",
          "1342: #line 1343 \"re_lexer.c\"",
          "",
          "[Added Lines]",
          "1357: #line 1358 \"re_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1527:  else",
          "1528:   {",
          "1530:    YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;",
          "1532:   while ( num_to_read <= 0 )",
          "",
          "[Removed Lines]",
          "1529:    int num_to_read =",
          "",
          "[Added Lines]",
          "1544:    yy_size_t num_to_read =",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1541:    if ( b->yy_is_our_buffer )",
          "1542:     {",
          "1545:     if ( new_size <= 0 )",
          "1546:      b->yy_buf_size += b->yy_buf_size / 8;",
          "",
          "[Removed Lines]",
          "1543:     int new_size = b->yy_buf_size * 2;",
          "",
          "[Added Lines]",
          "1558:     yy_size_t new_size = b->yy_buf_size * 2;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1553:     }",
          "1554:    else",
          "1558:    if ( ! b->yy_ch_buf )",
          "1559:     YY_FATAL_ERROR(",
          "",
          "[Removed Lines]",
          "1556:     b->yy_ch_buf = NULL;",
          "",
          "[Added Lines]",
          "1571:     b->yy_ch_buf = 0;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1595:  else",
          "1596:   ret_val = EOB_ACT_CONTINUE_SCAN;",
          "1601:   YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) re_yyrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size ,yyscanner );",
          "1602:   if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )",
          "1603:    YY_FATAL_ERROR( \"out of dynamic memory in yy_get_next_buffer()\" );",
          "",
          "[Removed Lines]",
          "1598:  if ((int) (yyg->yy_n_chars + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {",
          "1600:   int new_size = yyg->yy_n_chars + number_to_move + (yyg->yy_n_chars >> 1);",
          "",
          "[Added Lines]",
          "1613:  if ((yy_size_t) (yyg->yy_n_chars + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {",
          "1615:   yy_size_t new_size = yyg->yy_n_chars + number_to_move + (yyg->yy_n_chars >> 1);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1636:    if ( yy_current_state >= 45 )",
          "1637:     yy_c = yy_meta[(unsigned int) yy_c];",
          "1638:    }",
          "1640:   }",
          "1642:  return yy_current_state;",
          "",
          "[Removed Lines]",
          "1639:   yy_current_state = yy_nxt[yy_base[yy_current_state] + (flex_int16_t) yy_c];",
          "",
          "[Added Lines]",
          "1654:   yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1665:   if ( yy_current_state >= 45 )",
          "1666:    yy_c = yy_meta[(unsigned int) yy_c];",
          "1667:   }",
          "1669:  yy_is_jam = (yy_current_state == 44);",
          "1671:  (void)yyg;",
          "",
          "[Removed Lines]",
          "1668:  yy_current_state = yy_nxt[yy_base[yy_current_state] + (flex_int16_t) yy_c];",
          "",
          "[Added Lines]",
          "1683:  yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1702:   else",
          "1705:    ++yyg->yy_c_buf_p;",
          "1707:    switch ( yy_get_next_buffer( yyscanner ) )",
          "",
          "[Removed Lines]",
          "1704:    int offset = yyg->yy_c_buf_p - yyg->yytext_ptr;",
          "",
          "[Added Lines]",
          "1719:    yy_size_t offset = yyg->yy_c_buf_p - yyg->yytext_ptr;",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1725:     case EOB_ACT_END_OF_FILE:",
          "1726:      {",
          "1727:      if ( re_yywrap(yyscanner ) )",
          "1730:      if ( ! yyg->yy_did_buffer_switch_on_eof )",
          "1731:       YY_NEW_FILE;",
          "",
          "[Removed Lines]",
          "1728:       return 0;",
          "",
          "[Added Lines]",
          "1743:       return EOF;",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1989: static void re_yyensure_buffer_stack (yyscan_t yyscanner)",
          "1990: {",
          "1992:     struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;",
          "1994:  if (!yyg->yy_buffer_stack) {",
          "",
          "[Removed Lines]",
          "1991:  int num_to_alloc;",
          "",
          "[Added Lines]",
          "2006:  yy_size_t num_to_alloc;",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "2001:   yyg->yy_buffer_stack = (struct yy_buffer_state**)re_yyalloc",
          "2002:         (num_to_alloc * sizeof(struct yy_buffer_state*)",
          "2003:         , yyscanner);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2015:   num_to_alloc = 1; // After all that talk, this was set to 1 anyways...",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "2044:       base[size-2] != YY_END_OF_BUFFER_CHAR ||",
          "2045:       base[size-1] != YY_END_OF_BUFFER_CHAR )",
          "2049:  b = (YY_BUFFER_STATE) re_yyalloc(sizeof( struct yy_buffer_state ) ,yyscanner );",
          "2050:  if ( ! b )",
          "",
          "[Removed Lines]",
          "2047:   return NULL;",
          "",
          "[Added Lines]",
          "2062:   return 0;",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "2054:  b->yy_buf_pos = b->yy_ch_buf = base;",
          "2055:  b->yy_is_our_buffer = 0;",
          "2057:  b->yy_n_chars = b->yy_buf_size;",
          "2058:  b->yy_is_interactive = 0;",
          "2059:  b->yy_at_bol = 1;",
          "",
          "[Removed Lines]",
          "2056:  b->yy_input_file = NULL;",
          "",
          "[Added Lines]",
          "2071:  b->yy_input_file = 0;",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "2076: YY_BUFFER_STATE re_yy_scan_string (yyconst char * yystr , yyscan_t yyscanner)",
          "2077: {",
          "2080: }",
          "",
          "[Removed Lines]",
          "2079:  return re_yy_scan_bytes(yystr,(int) strlen(yystr) ,yyscanner);",
          "",
          "[Added Lines]",
          "2094:  return re_yy_scan_bytes(yystr,strlen(yystr) ,yyscanner);",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "2090: {",
          "2091:  YY_BUFFER_STATE b;",
          "2092:  char *buf;",
          "",
          "[Removed Lines]",
          "2089: YY_BUFFER_STATE re_yy_scan_bytes  (yyconst char * yybytes, int  _yybytes_len , yyscan_t yyscanner)",
          "",
          "[Added Lines]",
          "2104: YY_BUFFER_STATE re_yy_scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len , yyscan_t yyscanner)",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "2094:  yy_size_t i;",
          "2098:  buf = (char *) re_yyalloc(n ,yyscanner );",
          "2099:  if ( ! buf )",
          "2100:   YY_FATAL_ERROR( \"out of dynamic memory in re_yy_scan_bytes()\" );",
          "",
          "[Removed Lines]",
          "2097:  n = (yy_size_t) _yybytes_len + 2;",
          "",
          "[Added Lines]",
          "2112:  n = _yybytes_len + 2;",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "2120: #define YY_EXIT_FAILURE 2",
          "2121: #endif",
          "2124: {",
          "2125:  struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;",
          "2126:  (void)yyg;",
          "",
          "[Removed Lines]",
          "2123: static void yynoreturn yy_fatal_error (yyconst char* msg , yyscan_t yyscanner)",
          "",
          "[Added Lines]",
          "2138: static void yy_fatal_error (yyconst char* msg , yyscan_t yyscanner)",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "2207: {",
          "2208:     struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;",
          "2209:     return yyleng;",
          "",
          "[Removed Lines]",
          "2206: int re_yyget_leng  (yyscan_t yyscanner)",
          "",
          "[Added Lines]",
          "2221: yy_size_t re_yyget_leng  (yyscan_t yyscanner)",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "2378:     yyg->yy_buffer_stack_top = 0;",
          "2379:     yyg->yy_buffer_stack_max = 0;",
          "2381:     yyg->yy_init = 0;",
          "2382:     yyg->yy_start = 0;",
          "",
          "[Removed Lines]",
          "2377:     yyg->yy_buffer_stack = NULL;",
          "2380:     yyg->yy_c_buf_p = NULL;",
          "",
          "[Added Lines]",
          "2392:     yyg->yy_buffer_stack = 0;",
          "2395:     yyg->yy_c_buf_p = (char *) 0;",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "2390:     yyin = stdin;",
          "2391:     yyout = stdout;",
          "2392: #else",
          "2395: #endif",
          "",
          "[Removed Lines]",
          "2393:     yyin = NULL;",
          "2394:     yyout = NULL;",
          "",
          "[Added Lines]",
          "2408:     yyin = (FILE *) 0;",
          "2409:     yyout = (FILE *) 0;",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "2461: {",
          "2462:  struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;",
          "2463:  (void)yyg;",
          "2465: }",
          "2467: void *re_yyrealloc  (void * ptr, yy_size_t  size , yyscan_t yyscanner)",
          "",
          "[Removed Lines]",
          "2464:  return malloc(size);",
          "",
          "[Added Lines]",
          "2479:  return (void *) malloc( size );",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "2480: }",
          "2482: void re_yyfree (void * ptr , yyscan_t yyscanner)",
          "",
          "[Removed Lines]",
          "2479:  return realloc(ptr, size);",
          "",
          "[Added Lines]",
          "2494:  return (void *) realloc( (char *) ptr, size );",
          "",
          "---------------"
        ]
      }
    }
  ]
}