{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4caa44d7ea001708069d8ce638e11e7dfd975f85",
      "candidate_info": {
        "commit_hash": "4caa44d7ea001708069d8ce638e11e7dfd975f85",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/4caa44d7ea001708069d8ce638e11e7dfd975f85",
        "files": [
          "crypto/ct/ct_b64.c"
        ],
        "message": "Pass a temporary pointer to o2i_SCT_signature from SCT_new_from_base64\n\nOtherwise, |dec| gets moved past the end of the signature by\no2i_SCT_signature and then can't be correctly freed afterwards.\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1548)\n(cherry picked from commit 73ccf3ca01085d143aecb7fcfb0aac18caa678d2)",
        "before_after_code_files": [
          "crypto/ct/ct_b64.c||crypto/ct/ct_b64.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ct/ct_b64.c||crypto/ct/ct_b64.c": [
          "File: crypto/ct/ct_b64.c -> crypto/ct/ct_b64.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "64: {",
          "65:     SCT *sct = SCT_new();",
          "66:     unsigned char *dec = NULL;",
          "67:     int declen;",
          "69:     if (sct == NULL) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:     const unsigned char* p = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "102:         CTerr(CT_F_SCT_NEW_FROM_BASE64, X509_R_BASE64_DECODE_ERROR);",
          "103:         goto err;",
          "104:     }",
          "106:         goto err;",
          "107:     OPENSSL_free(dec);",
          "108:     dec = NULL;",
          "",
          "[Removed Lines]",
          "105:     if (o2i_SCT_signature(sct, (const unsigned char **)&dec, declen) <= 0)",
          "",
          "[Added Lines]",
          "107:     p = dec;",
          "108:     if (o2i_SCT_signature(sct, &p, declen) <= 0)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b7a9c3fcb5fc11cc102c4520514e01c09a62a1d8",
      "candidate_info": {
        "commit_hash": "b7a9c3fcb5fc11cc102c4520514e01c09a62a1d8",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b7a9c3fcb5fc11cc102c4520514e01c09a62a1d8",
        "files": [
          "util/process_docs.pl"
        ],
        "message": "util/process_docs.pl: make it possible to add a suffix to man docs\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2864)",
        "before_after_code_files": [
          "util/process_docs.pl||util/process_docs.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/process_docs.pl||util/process_docs.pl": [
          "File: util/process_docs.pl -> util/process_docs.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:            #'in=s@',             # Explicit files to process (ignores sourcedir)",
          "35:            #'section=i',         # Default section used for --in files",
          "36:            'type=s',            # The result type, 'man' or 'html'",
          "37:            'remove',            # To remove files rather than writing them",
          "38:            'dry-run|n',         # Only output file names on STDOUT",
          "39:            'debug|D+',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37:            'suffix:s',          # Suffix to add to the extension.",
          "38:                                 # Only used with type=man",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53:                       && defined $options{type}",
          "54:                       && ($options{type} eq 'man'",
          "55:                           || $options{type} eq 'html') );",
          "57: if ($options{debug}) {",
          "58:     print STDERR \"DEBUG: options:\\n\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58: pod2usage(1) if ( $options{type} eq 'html'",
          "59:                   && defined $options{suffix} );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "62:         if defined $options{destdir};",
          "63:     print STDERR \"DEBUG:   --type      = $options{type}\\n\"",
          "64:         if defined $options{type};",
          "65:     foreach (keys %{$options{subdir}}) {",
          "66:         print STDERR \"DEBUG:   --subdir    = $_=$options{subdir}->{$_}\\n\";",
          "67:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "69:     print STDERR \"DEBUG:   --suffix    = $options{suffix}\\n\"",
          "70:         if defined $options{suffix};",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "91:         my $updir = updir();",
          "92:         my $name = uc $podname;",
          "94:                        html => \".html\" } -> {$options{type}};",
          "95:         my $generate = { man  => \"pod2man --name=$name --section=$podinfo{section} --center=OpenSSL --release=$config{version} \\\"$podpath\\\"\",",
          "96:                          html => \"pod2html \\\"--podroot=$options{sourcedir}\\\" --htmldir=$updir --podpath=apps:crypto:ssl \\\"--infile=$podpath\\\" \\\"--title=$podname\\\"\"",
          "",
          "[Removed Lines]",
          "93:         my $suffix = { man  => \".$podinfo{section}\",",
          "",
          "[Added Lines]",
          "99:         my $suffix = { man  => \".$podinfo{section}\".($options{suffix} // \"\"),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "177: [B<--sourcedir>=I<dir>]",
          "178: B<--destdir>=I<dir>",
          "179: B<--type>=B<man>|B<html>",
          "180: [B<--remove>]",
          "181: [B<--dry-run>|B<-n>]",
          "182: [B<--debug>|B<-D>]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "186: [B<--suffix>=I<suffix>]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "210: Type of output to produce.  Currently supported are man pages and HTML files.",
          "212: =item B<--remove>",
          "214: Instead of writing the files, remove them.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "219: =item B<--suffix>=I<suffix>",
          "221: A suffix added to the extension.  Only valid with B<--type>=B<man>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a2dcdb57af656b9b623e68e6c7f6b52cb5d0fa48",
      "candidate_info": {
        "commit_hash": "a2dcdb57af656b9b623e68e6c7f6b52cb5d0fa48",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/a2dcdb57af656b9b623e68e6c7f6b52cb5d0fa48",
        "files": [
          "CHANGES",
          "Configure",
          "apps/passwd.c",
          "crypto/aes/asm/aesni-sha1-x86_64.pl",
          "crypto/bio/b_addr.c",
          "crypto/bn/asm/sparcv9-mont.pl",
          "crypto/pem/pem_lib.c",
          "crypto/sha/asm/sha1-586.pl",
          "crypto/sha/asm/sha1-x86_64.pl",
          "crypto/x86cpuid.pl",
          "doc/README",
          "doc/crypto/BN_rand.pod",
          "doc/crypto/SCT_new.pod",
          "doc/crypto/X509_VERIFY_PARAM_set_flags.pod",
          "doc/ssl/SSL_SESSION_get0_peer.pod",
          "doc/ssl/SSL_set_bio.pod",
          "include/internal/dso.h",
          "include/openssl/bio.h",
          "include/openssl/objects.h",
          "include/openssl/x509.h",
          "ssl/record/ssl3_record.c",
          "ssl/ssl_lib.c",
          "ssl/statem/statem_clnt.c",
          "ssl/statem/statem_srvr.c",
          "ssl/t1_lib.c",
          "test/recipes/70-test_sslrecords.t",
          "test/sslapitest.c",
          "test/ssltest_old.c",
          "test/testlib/OpenSSL/Test.pm"
        ],
        "message": "More typo fixes\n\nBackport of 69687aa829bc8bdcaf5468eb3dd0ada13700b7aa\n(Merged from #3069)\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3079)",
        "before_after_code_files": [
          "apps/passwd.c||apps/passwd.c",
          "crypto/aes/asm/aesni-sha1-x86_64.pl||crypto/aes/asm/aesni-sha1-x86_64.pl",
          "crypto/bio/b_addr.c||crypto/bio/b_addr.c",
          "crypto/bn/asm/sparcv9-mont.pl||crypto/bn/asm/sparcv9-mont.pl",
          "crypto/pem/pem_lib.c||crypto/pem/pem_lib.c",
          "crypto/shasm/sha1-586.pl||crypto/sha/asm/sha1-586.pl",
          "crypto/shasm/sha1-x86_64.pl||crypto/sha/asm/sha1-x86_64.pl",
          "crypto/x86cpuid.pl||crypto/x86cpuid.pl",
          "include/internal/dso.h||include/internal/dso.h",
          "include/openssl/bio.h||include/openssl/bio.h",
          "include/openssl/objects.h||include/openssl/objects.h",
          "include/openssl/x509.h||include/openssl/x509.h",
          "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
          "ssl/ssl_lib.c||ssl/ssl_lib.c",
          "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c",
          "ssl/statem/statem_srvr.c||ssl/statem/statem_srvr.c",
          "ssl/t1_lib.c||ssl/t1_lib.c",
          "test/recipes/70-test_sslrecords.t||test/recipes/70-test_sslrecords.t",
          "test/sslapitest.c||test/sslapitest.c",
          "test/ssltest_old.c||test/ssltest_old.c",
          "test/testlib/OpenSSL/Test.pm||test/testliOpenSSL/Test.pm"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [
            "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
            "ssl/t1_lib.c||ssl/t1_lib.c"
          ],
          "candidate": [
            "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
            "ssl/t1_lib.c||ssl/t1_lib.c"
          ]
        }
      },
      "candidate_diff": {
        "apps/passwd.c||apps/passwd.c": [
          "File: apps/passwd.c -> apps/passwd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "55: OPTIONS passwd_options[] = {",
          "56:     {\"help\", OPT_HELP, '-', \"Display this summary\"},",
          "58:     {\"noverify\", OPT_NOVERIFY, '-',",
          "59:      \"Never verify when reading password from terminal\"},",
          "60:     {\"quiet\", OPT_QUIET, '-', \"No warnings\"},",
          "",
          "[Removed Lines]",
          "57:     {\"in\", OPT_IN, '<', \"Pead passwords from file\"},",
          "",
          "[Added Lines]",
          "57:     {\"in\", OPT_IN, '<', \"Read passwords from file\"},",
          "",
          "---------------"
        ],
        "crypto/aes/asm/aesni-sha1-x86_64.pl||crypto/aes/asm/aesni-sha1-x86_64.pl": [
          "File: crypto/aes/asm/aesni-sha1-x86_64.pl -> crypto/aes/asm/aesni-sha1-x86_64.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "307:     $r++; unshift(@rndkey,pop(@rndkey));",
          "308: };",
          "311: { use integer;",
          "312:   my $body = shift;",
          "313:   my @insns = (&$body,&$body,&$body,&$body); # 40 instructions",
          "",
          "[Removed Lines]",
          "310: sub Xupdate_ssse3_16_31()  # recall that $Xi starts wtih 4",
          "",
          "[Added Lines]",
          "310: sub Xupdate_ssse3_16_31()  # recall that $Xi starts with 4",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1146:     $r++; unshift(@rndkey,pop(@rndkey));",
          "1147: };",
          "1150: { use integer;",
          "1151:   my $body = shift;",
          "1152:   my @insns = (&$body,&$body,&$body,&$body); # 40 instructions",
          "",
          "[Removed Lines]",
          "1149: sub Xupdate_avx_16_31()  # recall that $Xi starts wtih 4",
          "",
          "[Added Lines]",
          "1149: sub Xupdate_avx_16_31()  # recall that $Xi starts with 4",
          "",
          "---------------"
        ],
        "crypto/bio/b_addr.c||crypto/bio/b_addr.c": [
          "File: crypto/bio/b_addr.c -> crypto/bio/b_addr.c"
        ],
        "crypto/bn/asm/sparcv9-mont.pl||crypto/bn/asm/sparcv9-mont.pl": [
          "File: crypto/bn/asm/sparcv9-mont.pl -> crypto/bn/asm/sparcv9-mont.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: # instructions...",
          "32: # (*) Engine accessing the driver in question is on my TODO list.",
          "34: # improvement on single-threaded RSA sign. It should be noted",
          "35: # that 6-10x improvement coefficient does not actually mean",
          "36: # something extraordinary in terms of absolute [single-threaded]",
          "",
          "[Removed Lines]",
          "33: # For reference, acceleator is estimated to give 6 to 10 times",
          "",
          "[Added Lines]",
          "33: # For reference, accelerator is estimated to give 6 to 10 times",
          "",
          "---------------"
        ],
        "crypto/pem/pem_lib.c||crypto/pem/pem_lib.c": [
          "File: crypto/pem/pem_lib.c -> crypto/pem/pem_lib.c"
        ],
        "crypto/shasm/sha1-586.pl||crypto/sha/asm/sha1-586.pl": [
          "File: crypto/shasm/sha1-586.pl -> crypto/sha/asm/sha1-586.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "660: # SSE instruction sequence is first broken to groups of independent",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "669: # contain current K_XX_XX constant and is used to calculate X[-1]+K",
          "676: sub Xupdate_ssse3_16_31()  # recall that $Xi starts with 4",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1199: sub Xupdate_avx_16_31()  # recall that $Xi starts with 4",
          "",
          "---------------"
        ],
        "crypto/shasm/sha1-x86_64.pl||crypto/sha/asm/sha1-x86_64.pl": [
          "File: crypto/shasm/sha1-x86_64.pl -> crypto/sha/asm/sha1-x86_64.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "554: sub Xupdate_ssse3_16_31()  # recall that $Xi starts with 4",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1007: sub Xupdate_avx_16_31()  # recall that $Xi starts with 4",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1479: sub Xupdate_avx2_16_31()  # recall that $Xi starts with 4",
          "",
          "---------------"
        ],
        "crypto/x86cpuid.pl||crypto/x86cpuid.pl": [
          "File: crypto/x86cpuid.pl -> crypto/x86cpuid.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "283: &set_label(\"spin\");",
          "284:  &lea (\"ebx\",&DWP(0,\"eax\",\"ecx\"));",
          "285:  &nop ();",
          "287:  &jne (&label(\"spin\"));",
          "288:  &mov (\"eax\",\"ebx\"); # OpenSSL expects the new value",
          "289:  &pop (\"ebx\");",
          "",
          "[Removed Lines]",
          "286:  &data_word(0x1ab10ff0); # lock; cmpxchg %ebx,(%edx) # %eax is envolved and is always reloaded",
          "",
          "[Added Lines]",
          "286:  &data_word(0x1ab10ff0); # lock; cmpxchg %ebx,(%edx) # %eax is involved and is always reloaded",
          "",
          "---------------"
        ],
        "include/internal/dso.h||include/internal/dso.h": [
          "File: include/internal/dso.h -> include/internal/dso.h"
        ],
        "include/openssl/bio.h||include/openssl/bio.h": [
          "File: include/openssl/bio.h -> include/openssl/bio.h"
        ],
        "include/openssl/objects.h||include/openssl/objects.h": [
          "File: include/openssl/objects.h -> include/openssl/objects.h"
        ],
        "include/openssl/x509.h||include/openssl/x509.h": [
          "File: include/openssl/x509.h -> include/openssl/x509.h"
        ],
        "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
          "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c"
        ],
        "ssl/ssl_lib.c||ssl/ssl_lib.c": [
          "File: ssl/ssl_lib.c -> ssl/ssl_lib.c"
        ],
        "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
          "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c"
        ],
        "ssl/statem/statem_srvr.c||ssl/statem/statem_srvr.c": [
          "File: ssl/statem/statem_srvr.c -> ssl/statem/statem_srvr.c"
        ],
        "ssl/t1_lib.c||ssl/t1_lib.c": [
          "File: ssl/t1_lib.c -> ssl/t1_lib.c"
        ],
        "test/recipes/70-test_sslrecords.t||test/recipes/70-test_sslrecords.t": [
          "File: test/recipes/70-test_sslrecords.t -> test/recipes/70-test_sslrecords.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "112: $proxy->start();",
          "113: ok(TLSProxy::Message->fail(), \"Alert before SSLv2 ClientHello test\");",
          "117: #Test 10: Sending an unrecognised record type in TLS1.2 should fail",
          "118: $proxy->clear();",
          "",
          "[Removed Lines]",
          "115: #Unregcognised record type tests",
          "",
          "[Added Lines]",
          "115: #Unrecognised record type tests",
          "",
          "---------------"
        ],
        "test/sslapitest.c||test/sslapitest.c": [
          "File: test/sslapitest.c -> test/sslapitest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:     int certlen;",
          "47:     if (certbio == NULL) {",
          "49:         goto end;",
          "50:     }",
          "51:     chaincert = PEM_read_bio_X509(certbio, NULL, NULL, NULL);",
          "",
          "[Removed Lines]",
          "48:         printf(\"Can't load the certficate file\\n\");",
          "",
          "[Added Lines]",
          "48:         printf(\"Can't load the certificate file\\n\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "336:     certbio = BIO_new_file(cert, \"r\");",
          "337:     if (certbio == NULL) {",
          "339:         goto end;",
          "340:     }",
          "341:     id = OCSP_RESPID_new();",
          "",
          "[Removed Lines]",
          "338:         printf(\"Can't load the certficate file\\n\");",
          "",
          "[Added Lines]",
          "338:         printf(\"Can't load the certificate file\\n\");",
          "",
          "---------------"
        ],
        "test/ssltest_old.c||test/ssltest_old.c": [
          "File: test/ssltest_old.c -> test/ssltest_old.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1860:             goto err;",
          "1861:         }",
          "1862:         if (SSL_version(c_ssl) != version) {",
          "1864:                 \"Expected: %s, got %s\\n\", should_negotiate, SSL_get_version(c_ssl));",
          "1865:             ret = 1;",
          "1866:             goto err;",
          "",
          "[Removed Lines]",
          "1863:             BIO_printf(bio_err, \"Unxpected version negotiated. \"",
          "",
          "[Added Lines]",
          "1862:             BIO_printf(bio_err, \"Unexpected version negotiated. \"",
          "",
          "---------------"
        ],
        "test/testlib/OpenSSL/Test.pm||test/testliOpenSSL/Test.pm": [
          "File: test/testlib/OpenSSL/Test.pm -> test/testliOpenSSL/Test.pm",
          "--- Hunk 1 ---",
          "[Context before]",
          "964:  # Make sure to quotify the program file on platforms that may",
          "965:  # have spaces or similar in their path name.",
          "966:  # To our knowledge, VMS is the exception where quotifying should",
          "968:  ($prog) = quotify($prog) unless $^O eq \"VMS\";",
          "969:  return $prefix.$prog;",
          "970:     }",
          "",
          "[Removed Lines]",
          "967:  # never happem.",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "adc0e6f349d44168ef9250c651273651b455c513",
      "candidate_info": {
        "commit_hash": "adc0e6f349d44168ef9250c651273651b455c513",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/adc0e6f349d44168ef9250c651273651b455c513",
        "files": [
          "crypto/asn1/tasn_fre.c",
          "crypto/asn1/tasn_new.c",
          "include/openssl/asn1t.h"
        ],
        "message": "ASN.1: extend the possibilities to embed data instead of pointers\n\nAlso, when \"allocating\" or \"deallocating\" an embedded item, never call\nprim_new() or prim_free().  Call prim_clear() instead.\n\nFixes #3191\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3200)",
        "before_after_code_files": [
          "crypto/asn1/tasn_fre.c||crypto/asn1/tasn_fre.c",
          "crypto/asn1/tasn_new.c||crypto/asn1/tasn_new.c",
          "include/openssl/asn1t.h||include/openssl/asn1t.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/tasn_fre.c||crypto/asn1/tasn_fre.c": [
          "File: crypto/asn1/tasn_fre.c -> crypto/asn1/tasn_fre.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "155:     if (it) {",
          "156:         const ASN1_PRIMITIVE_FUNCS *pf = it->funcs;",
          "159:             pf->prim_free(pval, it);",
          "160:             return;",
          "161:         }",
          "",
          "[Removed Lines]",
          "158:         if (pf && pf->prim_free) {",
          "",
          "[Added Lines]",
          "158:         if (embed) {",
          "159:             if (pf && pf->prim_clear) {",
          "160:                 pf->prim_clear(pval, it);",
          "161:                 return;",
          "162:             }",
          "163:         } else if (pf && pf->prim_free) {",
          "",
          "---------------"
        ],
        "crypto/asn1/tasn_new.c||crypto/asn1/tasn_new.c": [
          "File: crypto/asn1/tasn_new.c -> crypto/asn1/tasn_new.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "267:     if (it->funcs) {",
          "268:         const ASN1_PRIMITIVE_FUNCS *pf = it->funcs;",
          "270:             return pf->prim_new(pval, it);",
          "271:     }",
          "273:     if (it->itype == ASN1_ITYPE_MSTRING)",
          "",
          "[Removed Lines]",
          "269:         if (pf->prim_new)",
          "",
          "[Added Lines]",
          "269:         if (embed) {",
          "270:             if (pf->prim_clear) {",
          "271:                 pf->prim_clear(pval, it);",
          "272:                 return 1;",
          "273:             }",
          "274:         } else if (pf->prim_new) {",
          "276:         }",
          "",
          "---------------"
        ],
        "include/openssl/asn1t.h||include/openssl/asn1t.h": [
          "File: include/openssl/asn1t.h -> include/openssl/asn1t.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "348: # define ASN1_OPT(stname, field, type) ASN1_EX_TYPE(ASN1_TFLG_OPTIONAL, 0, stname, field, type)",
          "351: # define ASN1_IMP(stname, field, type, tag) ASN1_IMP_EX(stname, field, type, tag, 0)",
          "354: # define ASN1_IMP_OPT(stname, field, type, tag) ASN1_IMP_EX(stname, field, type, tag, ASN1_TFLG_OPTIONAL)",
          "358: # define ASN1_EXP(stname, field, type, tag) ASN1_EXP_EX(stname, field, type, tag, 0)",
          "359: # define ASN1_EXP_OPT(stname, field, type, tag) ASN1_EXP_EX(stname, field, type, tag, ASN1_TFLG_OPTIONAL)",
          "362: # define ASN1_SEQUENCE_OF(stname, field, type) \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "349: # define ASN1_OPT_EMBED(stname, field, type) ASN1_EX_TYPE(ASN1_TFLG_OPTIONAL|ASN1_TFLG_EMBED, 0, stname, field, type)",
          "353: # define ASN1_IMP_EMBED(stname, field, type, tag) ASN1_IMP_EX(stname, field, type, tag, ASN1_TFLG_EMBED)",
          "357: # define ASN1_IMP_OPT_EMBED(stname, field, type, tag) ASN1_IMP_EX(stname, field, type, tag, ASN1_TFLG_OPTIONAL|ASN1_TFLG_EMBED)",
          "362: # define ASN1_EXP_EMBED(stname, field, type, tag) ASN1_EXP_EX(stname, field, type, tag, ASN1_TFLG_EMBED)",
          "364: # define ASN1_EXP_OPT_EMBED(stname, field, type, tag) ASN1_EXP_EX(stname, field, type, tag, ASN1_TFLG_OPTIONAL|ASN1_TFLG_EMBED)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fd18736a6b970c9b772f9c1b3cda4adcd20c63e2",
      "candidate_info": {
        "commit_hash": "fd18736a6b970c9b772f9c1b3cda4adcd20c63e2",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/fd18736a6b970c9b772f9c1b3cda4adcd20c63e2",
        "files": [
          "test/evp_test.c"
        ],
        "message": "Update evp_test to make sure passing partial block to \"Update\" is ok\n\nThe previous commit fixed a bug where a partial block had been passed to\nan \"Update\" function and it wasn't properly handled. We should catch this\ntype of error in evp_test.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2275)\n(cherry picked from commit 0b96d77a62d8ac9a45ac1dda47560ced676b5b8d)",
        "before_after_code_files": [
          "test/evp_test.c||test/evp_test.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/evp_test.c||test/evp_test.c": [
          "File: test/evp_test.c -> test/evp_test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "880: }",
          "882: static int cipher_test_enc(struct evp_test *t, int enc,",
          "884: {",
          "885:     struct cipher_data *cdat = t->data;",
          "886:     unsigned char *in, *out, *tmp = NULL;",
          "889:     EVP_CIPHER_CTX *ctx = NULL;",
          "890:     const char *err;",
          "891:     err = \"INTERNAL_ERROR\";",
          "",
          "[Removed Lines]",
          "883:                            size_t out_misalign, size_t inp_misalign)",
          "887:     size_t in_len, out_len;",
          "888:     int tmplen, tmpflen;",
          "",
          "[Added Lines]",
          "883:                            size_t out_misalign, size_t inp_misalign, int frag)",
          "887:     size_t in_len, out_len, donelen = 0;",
          "888:     int tmplen, chunklen, tmpflen;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "983:         }",
          "984:     }",
          "985:     if (cdat->aad) {",
          "989:         }",
          "990:     }",
          "991:     EVP_CIPHER_CTX_set_padding(ctx, 0);",
          "992:     err = \"CIPHERUPDATE_ERROR\";",
          "995:     if (cdat->aead == EVP_CIPH_CCM_MODE)",
          "996:         tmpflen = 0;",
          "997:     else {",
          "",
          "[Removed Lines]",
          "986:         if (!EVP_CipherUpdate(ctx, NULL, &tmplen, cdat->aad, cdat->aad_len)) {",
          "987:             err = \"AAD_SET_ERROR\";",
          "988:             goto err;",
          "993:     if (!EVP_CipherUpdate(ctx, tmp + out_misalign, &tmplen, in, in_len))",
          "994:         goto err;",
          "",
          "[Added Lines]",
          "986:         err = \"AAD_SET_ERROR\";",
          "987:         if (!frag) {",
          "988:             if (!EVP_CipherUpdate(ctx, NULL, &chunklen, cdat->aad,",
          "989:                                   cdat->aad_len))",
          "990:                 goto err;",
          "991:         } else {",
          "995:             if (cdat->aad_len > 0) {",
          "996:                 if (!EVP_CipherUpdate(ctx, NULL, &chunklen, cdat->aad, 1))",
          "997:                     goto err;",
          "998:                 donelen++;",
          "999:             }",
          "1000:             if (cdat->aad_len > 2) {",
          "1001:                 if (!EVP_CipherUpdate(ctx, NULL, &chunklen, cdat->aad + donelen,",
          "1002:                                       cdat->aad_len - 2))",
          "1003:                     goto err;",
          "1004:                 donelen += cdat->aad_len - 2;",
          "1005:             }",
          "1006:             if (cdat->aad_len > 1",
          "1007:                     && !EVP_CipherUpdate(ctx, NULL, &chunklen,",
          "1008:                                          cdat->aad + donelen, 1))",
          "1009:                 goto err;",
          "1014:     tmplen = 0;",
          "1015:     donelen = 0;",
          "1016:     if (!frag) {",
          "1018:         if (!EVP_CipherUpdate(ctx, tmp + out_misalign, &tmplen, in, in_len))",
          "1019:             goto err;",
          "1020:     } else {",
          "1022:         if (in_len > 0) {",
          "1023:             if (!EVP_CipherUpdate(ctx, tmp + out_misalign, &chunklen, in, 1))",
          "1024:                 goto err;",
          "1025:             tmplen += chunklen;",
          "1026:             donelen = 1;",
          "1027:         }",
          "1028:         if (in_len > 2) {",
          "1029:             if (!EVP_CipherUpdate(ctx, tmp + out_misalign + tmplen, &chunklen,",
          "1030:                                   in + donelen, in_len - 2))",
          "1031:                 goto err;",
          "1032:             tmplen += chunklen;",
          "1033:             donelen += in_len - 2;",
          "1034:         }",
          "1035:         if (in_len > 1 ) {",
          "1036:             if (!EVP_CipherUpdate(ctx, tmp + out_misalign + tmplen, &chunklen,",
          "1037:                                   in + donelen, 1))",
          "1038:                 goto err;",
          "1039:             tmplen += chunklen;",
          "1040:         }",
          "1041:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1032: static int cipher_test_run(struct evp_test *t)",
          "1033: {",
          "1034:     struct cipher_data *cdat = t->data;",
          "1036:     size_t out_misalign, inp_misalign;",
          "1038:     if (!cdat->key) {",
          "",
          "[Removed Lines]",
          "1035:     int rv;",
          "",
          "[Added Lines]",
          "1082:     int rv, frag = 0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1050:         t->err = \"NO_TAG\";",
          "1051:         return 0;",
          "1052:     }",
          "1054:         static char aux_err[64];",
          "1055:         t->aux_err = aux_err;",
          "1056:         for (inp_misalign = (size_t)-1; inp_misalign != 2; inp_misalign++) {",
          "1057:             if (inp_misalign == (size_t)-1) {",
          "1061:             } else {",
          "1063:                              out_misalign ? \"misaligned\" : \"aligned\",",
          "1065:             }",
          "1066:             if (cdat->enc) {",
          "1069:                 if (rv != 1) {",
          "1070:                     if (rv < 0)",
          "",
          "[Removed Lines]",
          "1053:     for (out_misalign = 0; out_misalign <= 1; out_misalign++) {",
          "1059:                 BIO_snprintf(aux_err, sizeof(aux_err), \"%s in-place\",",
          "1060:                              out_misalign ? \"misaligned\" : \"aligned\");",
          "1062:                 BIO_snprintf(aux_err, sizeof(aux_err), \"%s output and %s input\",",
          "1064:                              inp_misalign ? \"misaligned\" : \"aligned\");",
          "1067:                 rv = cipher_test_enc(t, 1, out_misalign, inp_misalign);",
          "",
          "[Added Lines]",
          "1100:     for (out_misalign = 0; out_misalign <= 1;) {",
          "1104:             if (frag && inp_misalign == (size_t)-1)",
          "1105:                  continue;",
          "1109:                 BIO_snprintf(aux_err, sizeof(aux_err),",
          "1110:                              \"%s in-place, %sfragmented\",",
          "1111:                              out_misalign ? \"misaligned\" : \"aligned\",",
          "1112:                              frag ? \"\" : \"not \");",
          "1114:                 BIO_snprintf(aux_err, sizeof(aux_err),",
          "1115:                              \"%s output and %s input, %sfragmented\",",
          "1117:                              inp_misalign ? \"misaligned\" : \"aligned\",",
          "1118:                              frag ? \"\" : \"not \");",
          "1121:                 rv = cipher_test_enc(t, 1, out_misalign, inp_misalign, frag);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1073:                 }",
          "1074:             }",
          "1075:             if (cdat->enc != 1) {",
          "1078:                 if (rv != 1) {",
          "1079:                     if (rv < 0)",
          "",
          "[Removed Lines]",
          "1076:                 rv = cipher_test_enc(t, 0, out_misalign, inp_misalign);",
          "",
          "[Added Lines]",
          "1130:                 rv = cipher_test_enc(t, 0, out_misalign, inp_misalign, frag);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1082:                 }",
          "1083:             }",
          "1084:         }",
          "1085:     }",
          "1086:     t->aux_err = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1140:         if (out_misalign == 1 && frag == 0) {",
          "1145:             if (cdat->aead == EVP_CIPH_CCM_MODE",
          "1146:                     || EVP_CIPHER_mode(cdat->cipher) == EVP_CIPH_XTS_MODE",
          "1147:                      || EVP_CIPHER_mode(cdat->cipher) == EVP_CIPH_WRAP_MODE)",
          "1148:                 break;",
          "1149:             out_misalign = 0;",
          "1150:             frag++;",
          "1151:         } else {",
          "1152:             out_misalign++;",
          "1153:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}