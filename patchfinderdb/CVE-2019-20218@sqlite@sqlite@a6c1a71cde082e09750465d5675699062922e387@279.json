{
  "cve_id": "CVE-2019-20218",
  "cve_desc": "selectExpander in select.c in SQLite 3.30.1 proceeds with WITH stack unwinding even after a parsing error.",
  "repo": "sqlite/sqlite",
  "patch_hash": "a6c1a71cde082e09750465d5675699062922e387",
  "patch_info": {
    "commit_hash": "a6c1a71cde082e09750465d5675699062922e387",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/a6c1a71cde082e09750465d5675699062922e387",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/altertab3.test"
    ],
    "message": "Do not attempt to unwind the WITH stack in the Parse object following an error. This fixes a separate case to [de6e6d68].\n\nFossilOrigin-Name: d29edef93451cc67a5d69c1cce1b1832d9ca8fff1f600afdd51338b74d077b92",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/altertab3.test||test/altertab3.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 597896ed0ae9e2960a8f39576bd7f77a11dccc1da84b6a44ebb5c38d90ebc330",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4982:     return WRC_Abort;",
      "4983:   }",
      "",
      "[Removed Lines]",
      "4981:   if( db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "[Added Lines]",
      "4981:   if( pParse->nErr || db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "---------------"
    ],
    "test/altertab3.test||test/altertab3.test": [
      "File: test/altertab3.test -> test/altertab3.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "531:   ALTER TABLE t1 RENAME TO t1x;",
      "532: } {1 {error in trigger r1: no such table: main.t2}}",
      "534: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "534: #------------------------------------------------------------------------",
      "535: #",
      "536: reset_db",
      "537: do_execsql_test 23.1 {",
      "538:   CREATE TABLE v0 (a);",
      "539:   CREATE VIEW v2 (v3) AS",
      "540:     WITH x1 AS (SELECT * FROM v2)",
      "541:     SELECT v3 AS x, v3 AS y FROM v2;",
      "542: }",
      "544: do_catchsql_test 23.2 {",
      "545:   SELECT * FROM v2",
      "546: } {1 {view v2 is circularly defined}}",
      "548: db close",
      "549: sqlite3 db test.db",
      "551: do_catchsql_test 23.3 {",
      "552:   ALTER TABLE v0 RENAME TO t3 ;",
      "553: } {1 {error in view v2: view v2 is circularly defined}}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0a8764ad7ad7de39af698e88687266acf06442db",
      "candidate_info": {
        "commit_hash": "0a8764ad7ad7de39af698e88687266acf06442db",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/0a8764ad7ad7de39af698e88687266acf06442db",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/resolve.c"
        ],
        "message": "Rename a local variable to avoid masking a function parameter and thus causing a harmless compiler warning.\n\nFossilOrigin-Name: f065cf003bd2a3a580cb5b9fa2eacd8be075fe8c2bbc5688e9a9406abbfb3804",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/resolve.c||src/resolve.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c7309ed3c7588c7e51e09418bf5cfd4611539b44c39cef9ed4ae0e385bae7625",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "566:   if( pExpr->iColumn>=0 && pMatch!=0 ){",
          "567:     int n = pExpr->iColumn;",
          "571:     assert( pMatch->iCursor==pExpr->iTable );",
          "574:     ){",
          "578:     }else{",
          "579:       testcase( n==BMS-1 );",
          "580:       testcase( n==BMS );",
          "",
          "[Removed Lines]",
          "568:     Table *pTab;",
          "569:     pTab = pExpr->y.pTab;",
          "570:     assert( pTab!=0 );",
          "572:     if( (pTab->tabFlags & TF_HasGenerated)!=0",
          "573:      && (pTab->aCol[n].colFlags & COLFLAG_GENERATED)!=0",
          "575:       testcase( pTab->nCol==BMS-1 );",
          "576:       testcase( pTab->nCol==BMS );",
          "577:       pMatch->colUsed = pTab->nCol>=BMS ? ALLBITS : MASKBIT(pTab->nCol)-1;",
          "",
          "[Added Lines]",
          "568:     Table *pExTab = pExpr->y.pTab;",
          "569:     assert( pExTab!=0 );",
          "571:     if( (pExTab->tabFlags & TF_HasGenerated)!=0",
          "572:      && (pExTab->aCol[n].colFlags & COLFLAG_GENERATED)!=0",
          "574:       testcase( pExTab->nCol==BMS-1 );",
          "575:       testcase( pExTab->nCol==BMS );",
          "576:       pMatch->colUsed = pExTab->nCol>=BMS ? ALLBITS : MASKBIT(pExTab->nCol)-1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7edce5ecc0aa8dc146ffe07fb2bdbe814f125790",
      "candidate_info": {
        "commit_hash": "7edce5ecc0aa8dc146ffe07fb2bdbe814f125790",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7edce5ecc0aa8dc146ffe07fb2bdbe814f125790",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c"
        ],
        "message": "Fix a shift-overflow problem in yesterday's check-in [36fdeb4f0a66970a] that OSSFuzz helpfully discovered overnight.  Thanks Google.\n\nFossilOrigin-Name: bff38e2b5318ed032aaf1d350903c3494b4531f2dc59a6997144ec8e23defef4",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f347744e0d576f0250c29259cca755e57afded8956224114c01603c1bca5b3a4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7734:   pMem = &aMem[pOp->p1];",
          "7735:   constMask = pOp->p3;",
          "7736:   for(i=0; i<pOp->p2; i++, pMem++){",
          "7738:       pMem->pScopyFrom = 0;",
          "7740:     }",
          "",
          "[Removed Lines]",
          "7737:     if( (constMask & MASKBIT32(i))==0 ){",
          "",
          "[Added Lines]",
          "7737:     if( i>=32 || (constMask & MASKBIT32(i))==0 ){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "73c53b39c9656c5bf8cd6a1758b055d806dd7dcc",
      "candidate_info": {
        "commit_hash": "73c53b39c9656c5bf8cd6a1758b055d806dd7dcc",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/73c53b39c9656c5bf8cd6a1758b055d806dd7dcc",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c",
          "test/countofview.test"
        ],
        "message": "Fix the count-of-view optimization so that it is (correctly) disabled for a query that includes a WHERE clause or a GROUP BY clause.\n\nFossilOrigin-Name: 05897ca48a40c6771ff83ba8ecc3a5c60dafddf58651c222dd8cf89b9fc7b077",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c",
          "test/countofview.test||test/countofview.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: adebffc18e6165672947a6bda5ca23ea7723cca7ab8da4feb81fca8f83e4fcaf",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5519:   sqlite3 *db;",
          "5522:   pExpr = p->pEList->a[0].pExpr;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5523:   if( p->pWhere ) return 0;",
          "5524:   if( p->pGroupBy ) return 0;",
          "",
          "---------------"
        ],
        "test/countofview.test||test/countofview.test": [
          "File: test/countofview.test -> test/countofview.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:   )",
          "41: } {3}",
          "43: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43: # 2019-05-15",
          "44: do_execsql_test 2.0 {",
          "45:   CREATE TABLE t1(x);",
          "46:   INSERT INTO t1 VALUES(1),(99),('abc');",
          "47:   CREATE VIEW v1(x,y) AS SELECT x,1 FROM t1 UNION ALL SELECT x,2 FROM t1;",
          "48:   SELECT count(*) FROM v1 WHERE x<>1;",
          "49: } {4}",
          "50: do_execsql_test 2.1 {",
          "51:   SELECT count(*) FROM v1 GROUP BY y;",
          "52: } {3 3}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f66bfcb740c823c9c6ffce1f7f0d0c2bb811046a",
      "candidate_info": {
        "commit_hash": "f66bfcb740c823c9c6ffce1f7f0d0c2bb811046a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f66bfcb740c823c9c6ffce1f7f0d0c2bb811046a",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/update.c",
          "test/conflict3.test"
        ],
        "message": "If a DELETE trigger fired by an UPDATE OR REPLACE statement deletes the row being updated, do not attempt to proceed with the original UPDATE operation. Fix for [d6a0fbc1].\n\nFossilOrigin-Name: 4145b3e05051ba6729105157a876793ad14a05d895fc10fe704f437eab16ea93",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/update.c||src/update.c",
          "test/conflict3.test||test/conflict3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e2db1123faac26c0e0b6a1ebef1685ea7633bfcafd1ff743ba5380700f7745af",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/update.c||src/update.c": [
          "File: src/update.c -> src/update.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "715:   }",
          "717:   if( !isView ){",
          "721:     assert( regOldRowid>0 );",
          "722:     sqlite3GenerateConstraintChecks(pParse, pTab, aRegIdx, iDataCur, iIdxCur,",
          "723:         regNewRowid, regOldRowid, chngKey, onError, labelContinue, &bReplace,",
          "724:         aXRef, 0);",
          "727:     if( hasFK ){",
          "728:       sqlite3FkCheck(pParse, pTab, regOldRowid, 0, aXRef, chngKey);",
          "729:     }",
          "740:     sqlite3GenerateRowIndexDelete(pParse, pTab, iDataCur, iIdxCur, aRegIdx, -1);",
          "",
          "[Removed Lines]",
          "732:     if( bReplace || chngKey ){",
          "733:       if( pPk ){",
          "734:         addr1 = sqlite3VdbeAddOp4Int(v, OP_NotFound, iDataCur, 0, regKey, nKey);",
          "735:       }else{",
          "736:         addr1 = sqlite3VdbeAddOp3(v, OP_NotExists, iDataCur, 0, regOldRowid);",
          "737:       }",
          "738:       VdbeCoverageNeverTaken(v);",
          "739:     }",
          "",
          "[Added Lines]",
          "727:     if( bReplace || chngKey ){",
          "728:       if( pPk ){",
          "729:         sqlite3VdbeAddOp4Int(v, OP_NotFound,iDataCur,labelContinue,regKey,nKey);",
          "730:       }else{",
          "731:         sqlite3VdbeAddOp3(v, OP_NotExists, iDataCur, labelContinue,regOldRowid);",
          "732:       }",
          "733:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "766:       sqlite3VdbeAddOp2(v, OP_Delete, iDataCur, 0);",
          "767:     }",
          "768: #endif",
          "773:     if( hasFK ){",
          "774:       sqlite3FkCheck(pParse, pTab, 0, regNewRowid, aXRef, chngKey);",
          "",
          "[Removed Lines]",
          "769:     if( bReplace || chngKey ){",
          "770:       sqlite3VdbeJumpHere(v, addr1);",
          "771:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/conflict3.test||test/conflict3.test": [
          "File: test/conflict3.test -> test/conflict3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "366:   SELECT * FROM t2;",
          "367: } {111 111B 112 112}",
          "370: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "369: #-------------------------------------------------------------------------",
          "370: ifcapable trigger {",
          "371:   reset_db",
          "372:   do_execsql_test 13.1.0 {",
          "373:     PRAGMA recursive_triggers = true;",
          "374:     CREATE TABLE t0 (c0 UNIQUE, c1 UNIQUE);",
          "375:     CREATE TRIGGER tr0 AFTER DELETE ON t0 BEGIN",
          "376:       DELETE FROM t0;",
          "377:     END;",
          "379:     INSERT INTO t0 VALUES(1, NULL);",
          "380:     INSERT INTO t0 VALUES(0, NULL);",
          "381:   }",
          "383:   do_execsql_test 13.1.1 {",
          "384:     UPDATE OR REPLACE t0 SET c1 = 1;",
          "385:   }",
          "387:   integrity_check 13.1.2",
          "389:   do_execsql_test 13.1.3 {",
          "390:     SELECT * FROM t0",
          "391:   } {}",
          "393:   do_execsql_test 13.2.0 {",
          "394:     CREATE TABLE t2 (a PRIMARY KEY, b UNIQUE, c UNIQUE) WITHOUT ROWID;",
          "395:     CREATE TRIGGER tr3 AFTER DELETE ON t2 BEGIN",
          "396:       DELETE FROM t2;",
          "397:     END;",
          "399:     INSERT INTO t2 VALUES(1, 1, 1);",
          "400:     INSERT INTO t2 VALUES(2, 2, 2);",
          "401:   }",
          "403:   do_execsql_test 13.2.1 {",
          "404:     UPDATE OR REPLACE t2 SET c = 0;",
          "405:   }",
          "407:   integrity_check 13.2.2",
          "409:   do_execsql_test 13.2.3 {",
          "410:     SELECT * FROM t2",
          "411:   } {}",
          "413:   do_execsql_test 13.3.0 {",
          "414:     CREATE TABLE t1(a, b);",
          "415:     CREATE TABLE log(x);",
          "416:     CREATE INDEX i1 ON t1(a);",
          "417:     INSERT INTO t1 VALUES(1, 2);",
          "419:     CREATE TRIGGER tb BEFORE UPDATE ON t1 BEGIN",
          "420:       DELETE FROM t1;",
          "421:     END;",
          "422:     CREATE TRIGGER ta AFTER UPDATE ON t1 BEGIN",
          "423:       INSERT INTO log VALUES('fired!');",
          "424:     END;",
          "426:     UPDATE t1 SET b=3;",
          "427:   }",
          "429:   do_execsql_test 13.3.1 {",
          "430:     SELECT * FROM t1;",
          "431:   } {}",
          "432:   do_execsql_test 13.3.2 {",
          "433:     SELECT * FROM log;",
          "434:   } {}",
          "435: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e41fd72acc7a06ce5a6a7d28154db1ffe8ba37a8",
      "candidate_info": {
        "commit_hash": "e41fd72acc7a06ce5a6a7d28154db1ffe8ba37a8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e41fd72acc7a06ce5a6a7d28154db1ffe8ba37a8",
        "files": [
          "ext/rtree/rtree.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Enhance the rtreenode() function of rtree (used for testing) so that it uses the newer sqlite3_str object for better performance and improved error reporting.\n\nFossilOrigin-Name: 90acdbfce9c088582d5165589f7eac462b00062bbfffacdcc786eb9cf3ea5377",
        "before_after_code_files": [
          "ext/rtree/rtree.c||ext/rtree/rtree.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/rtree/rtree.c||ext/rtree/rtree.c": [
          "File: ext/rtree/rtree.c -> ext/rtree/rtree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3757: static void rtreenode(sqlite3_context *ctx, int nArg, sqlite3_value **apArg){",
          "3759:   RtreeNode node;",
          "3760:   Rtree tree;",
          "3761:   int ii;",
          "3763:   UNUSED_PARAMETER(nArg);",
          "3764:   memset(&node, 0, sizeof(RtreeNode));",
          "3765:   memset(&tree, 0, sizeof(Rtree));",
          "3766:   tree.nDim = (u8)sqlite3_value_int(apArg[0]);",
          "3767:   tree.nDim2 = tree.nDim*2;",
          "3768:   tree.nBytesPerCell = 8 + 8 * tree.nDim;",
          "3769:   node.zData = (u8 *)sqlite3_value_blob(apArg[1]);",
          "3771:   for(ii=0; ii<NCELL(&node); ii++){",
          "3774:     RtreeCell cell;",
          "3775:     int jj;",
          "3777:     nodeGetCell(&tree, &node, ii, &cell);",
          "3780:     for(jj=0; jj<tree.nDim2; jj++){",
          "3781: #ifndef SQLITE_RTREE_INT_ONLY",
          "3784: #else",
          "3787: #endif",
          "3797:     }",
          "3798:   }",
          "3801: }",
          "",
          "[Removed Lines]",
          "3758:   char *zText = 0;",
          "3772:     char zCell[512];",
          "3773:     int nCell = 0;",
          "3778:     sqlite3_snprintf(512-nCell,&zCell[nCell],\"%lld\", cell.iRowid);",
          "3779:     nCell = (int)strlen(zCell);",
          "3782:       sqlite3_snprintf(512-nCell,&zCell[nCell], \" %g\",",
          "3783:                        (double)cell.aCoord[jj].f);",
          "3785:       sqlite3_snprintf(512-nCell,&zCell[nCell], \" %d\",",
          "3786:                        cell.aCoord[jj].i);",
          "3788:       nCell = (int)strlen(zCell);",
          "3789:     }",
          "3791:     if( zText ){",
          "3792:       char *zTextNew = sqlite3_mprintf(\"%s {%s}\", zText, zCell);",
          "3793:       sqlite3_free(zText);",
          "3794:       zText = zTextNew;",
          "3795:     }else{",
          "3796:       zText = sqlite3_mprintf(\"{%s}\", zCell);",
          "3800:   sqlite3_result_text(ctx, zText, -1, sqlite3_free);",
          "",
          "[Added Lines]",
          "3761:   int nData;",
          "3762:   int errCode;",
          "3763:   sqlite3_str *pOut;",
          "3769:   if( tree.nDim<1 || tree.nDim>5 ) return;",
          "3773:   nData = sqlite3_value_bytes(apArg[1]);",
          "3774:   if( nData<4 ) return;",
          "3775:   if( nData<NCELL(&node)*tree.nBytesPerCell ) return;",
          "3777:   pOut = sqlite3_str_new(0);",
          "3783:     if( ii>0 ) sqlite3_str_append(pOut, \" \", 1);",
          "3784:     sqlite3_str_appendf(pOut, \"{%lld\", cell.iRowid);",
          "3787:       sqlite3_str_appendf(pOut, \" %g\", (double)cell.aCoord[jj].f);",
          "3789:       sqlite3_str_appendf(pOut, \" %d\", cell.aCoord[jj].i);",
          "3792:     sqlite3_str_append(pOut, \"}\", 1);",
          "3794:   errCode = sqlite3_str_errcode(pOut);",
          "3795:   sqlite3_result_text(ctx, sqlite3_str_finish(pOut), -1, sqlite3_free);",
          "3796:   sqlite3_result_error_code(ctx, errCode);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 55be6d0a9fa8a64b9c9c5ed51a2b9144304f7f0870a13b92d5864ac4d54491b6",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}