{
  "cve_id": "CVE-2018-7332",
  "cve_desc": "In Wireshark 2.4.0 to 2.4.4 and 2.2.0 to 2.2.12, epan/dissectors/packet-reload.c had an infinite loop that was addressed by validating a length.",
  "repo": "wireshark/wireshark",
  "patch_hash": "a806389e50abdbbb5dbdd2071c04ad73beaaadf9",
  "patch_info": {
    "commit_hash": "a806389e50abdbbb5dbdd2071c04ad73beaaadf9",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/a806389e50abdbbb5dbdd2071c04ad73beaaadf9",
    "files": [
      "epan/dissectors/packet-reload.c"
    ],
    "message": "RELOAD: Fix a length check.\n\nMake sure a length value isn't too large.\n\nBug: 14445\nChange-Id: Ie630d59aea744554da22a2b904aca06624c73f7a\nReviewed-on: https://code.wireshark.org/review/25908\nReviewed-by: Gerald Combs <gerald@wireshark.org>\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot\nReviewed-by: Michael Mann <mmann78@netscape.net>",
    "before_after_code_files": [
      "epan/dissectors/packet-reload.c||epan/dissectors/packet-reload.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-reload.c||epan/dissectors/packet-reload.c": [
      "File: epan/dissectors/packet-reload.c -> epan/dissectors/packet-reload.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2607:   kind_responses_length = tvb_get_ntohl(tvb, offset);",
      "2610:     ti_statans = proto_tree_add_item(tree, hf_reload_statans, tvb, offset, length, ENC_NA);",
      "2611:     expert_add_info_format(pinfo, ti_statans, &ei_reload_truncated_field, \"Truncated StatAns\");",
      "2612:     return length;",
      "",
      "[Removed Lines]",
      "2609:   if (4 + kind_responses_length > length) {",
      "",
      "[Added Lines]",
      "2609:   if (kind_responses_length > G_MAXUINT16 || 4 + kind_responses_length > length) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "72da9dfe2bd8492e1260f9db5ee7a5f9dae5878b",
      "candidate_info": {
        "commit_hash": "72da9dfe2bd8492e1260f9db5ee7a5f9dae5878b",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/72da9dfe2bd8492e1260f9db5ee7a5f9dae5878b",
        "files": [
          "epan/dissectors/packet-reload.c"
        ],
        "message": "RELOAD: Fix a length check.\n\nMake sure a length value isn't too large.\n\nBug: 14445\nChange-Id: Ie630d59aea744554da22a2b904aca06624c73f7a\nReviewed-on: https://code.wireshark.org/review/25908\nReviewed-by: Gerald Combs <gerald@wireshark.org>\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit a806389e50abdbbb5dbdd2071c04ad73beaaadf9)\nReviewed-on: https://code.wireshark.org/review/25909\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-reload.c||epan/dissectors/packet-reload.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-reload.c||epan/dissectors/packet-reload.c"
          ],
          "candidate": [
            "epan/dissectors/packet-reload.c||epan/dissectors/packet-reload.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-reload.c||epan/dissectors/packet-reload.c": [
          "File: epan/dissectors/packet-reload.c -> epan/dissectors/packet-reload.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2624:   kind_responses_length = tvb_get_ntohl(tvb, offset);",
          "2627:     ti_statans = proto_tree_add_item(tree, hf_reload_statans, tvb, offset, length, ENC_NA);",
          "2628:     expert_add_info_format(pinfo, ti_statans, &ei_reload_truncated_field, \"Truncated StatAns\");",
          "2629:     return length;",
          "",
          "[Removed Lines]",
          "2626:   if (4 + kind_responses_length > length) {",
          "",
          "[Added Lines]",
          "2626:   if (kind_responses_length > G_MAXUINT16 || 4 + kind_responses_length > length) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1ab0585098c7ce20f3afceb6730427cc2a1e98ea",
      "candidate_info": {
        "commit_hash": "1ab0585098c7ce20f3afceb6730427cc2a1e98ea",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/1ab0585098c7ce20f3afceb6730427cc2a1e98ea",
        "files": [
          "epan/dissectors/packet-reload.c"
        ],
        "message": "RELOAD: Fix a length check.\n\nMake sure a length value isn't too large.\n\nBug: 14445\nChange-Id: Ie630d59aea744554da22a2b904aca06624c73f7a\nReviewed-on: https://code.wireshark.org/review/25908\nReviewed-by: Gerald Combs <gerald@wireshark.org>\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit a806389e50abdbbb5dbdd2071c04ad73beaaadf9)\nReviewed-on: https://code.wireshark.org/review/25910\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-reload.c||epan/dissectors/packet-reload.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-reload.c||epan/dissectors/packet-reload.c"
          ],
          "candidate": [
            "epan/dissectors/packet-reload.c||epan/dissectors/packet-reload.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-reload.c||epan/dissectors/packet-reload.c": [
          "File: epan/dissectors/packet-reload.c -> epan/dissectors/packet-reload.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2637:   kind_responses_length = tvb_get_ntohl(tvb, offset);",
          "2640:     ti_statans = proto_tree_add_item(tree, hf_reload_statans, tvb, offset, length, ENC_NA);",
          "2641:     expert_add_info_format(pinfo, ti_statans, &ei_reload_truncated_field, \"Truncated StatAns\");",
          "2642:     return length;",
          "",
          "[Removed Lines]",
          "2639:   if (4 + kind_responses_length > length) {",
          "",
          "[Added Lines]",
          "2639:   if (kind_responses_length > G_MAXUINT16 || 4 + kind_responses_length > length) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}