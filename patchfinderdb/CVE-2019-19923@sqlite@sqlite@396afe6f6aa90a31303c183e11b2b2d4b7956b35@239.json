{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5f6a4ea2e2b5a12bc425615a8a01af920c1bc65d",
      "candidate_info": {
        "commit_hash": "5f6a4ea2e2b5a12bc425615a8a01af920c1bc65d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/5f6a4ea2e2b5a12bc425615a8a01af920c1bc65d",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/wherecode.c"
        ],
        "message": "Additional simplifications of the WHERE loop code generator logic for NULLS LAST.\n\nFossilOrigin-Name: 1383680d927d7d703933be7653c0019199845e7f7e82bcc76d9ca3808093e9d8",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/wherecode.c||src/wherecode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e3ed2f496f51234a8f81d90d47ba603b06dbed38b8bd8f1934294379cde74d3a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/wherecode.c||src/wherecode.c": [
          "File: src/wherecode.c -> src/wherecode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1708:       assert( bSeekPastNull==0 || bStopAtNull==0 );",
          "1709:       if( regBignull ){",
          "1710:         assert( bSeekPastNull==1 || bStopAtNull==1 );",
          "1711:         assert( bStopAtNull==startEq );",
          "1712:         sqlite3VdbeAddOp2(v, OP_Goto, 0, sqlite3VdbeCurrentAddr(v)+2);",
          "1713:         op = aStartOp[(nConstraint>1)*4 + 2 + bRev];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1711:         assert( bSeekPastNull==!bStopAtNull );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1778:       testcase( op==OP_IdxLE );  VdbeCoverageIf(v, op==OP_IdxLE );",
          "1779:     }",
          "1780:     if( regBignull ){",
          "1781:       sqlite3VdbeAddOp2(v, OP_If, regBignull, sqlite3VdbeCurrentAddr(v)+2);",
          "1782:       VdbeComment((v, \"If NULL-scan pending\"));",
          "1783:       VdbeCoverage(v);",
          "1798:     }",
          "1800:     if( pLoop->wsFlags & WHERE_IN_EARLYOUT ){",
          "",
          "[Removed Lines]",
          "1784:       if( bStopAtNull ){",
          "1785:         op = aEndOp[bRev*2 + 0];",
          "1786:         assert( op==OP_IdxGE || op==OP_IdxLE );",
          "1787:         sqlite3VdbeAddOp4Int(v, op, iIdxCur, addrNxt, regBase, nConstraint);",
          "1788:         testcase( op==OP_IdxGE );  VdbeCoverageIf(v, op==OP_IdxGE );",
          "1789:         testcase( op==OP_IdxLE );  VdbeCoverageIf(v, op==OP_IdxLE );",
          "1790:       }else{",
          "1791:         op = aEndOp[bRev*2 + endEq];",
          "1792:         sqlite3VdbeAddOp4Int(v, op, iIdxCur, addrNxt, regBase, nConstraint+1);",
          "1793:         testcase( op==OP_IdxGT );  VdbeCoverageIf(v, op==OP_IdxGT );",
          "1794:         testcase( op==OP_IdxGE );  VdbeCoverageIf(v, op==OP_IdxGE );",
          "1795:         testcase( op==OP_IdxLT );  VdbeCoverageIf(v, op==OP_IdxLT );",
          "1796:         testcase( op==OP_IdxLE );  VdbeCoverageIf(v, op==OP_IdxLE );",
          "1797:       }",
          "",
          "[Added Lines]",
          "1785:       assert( bSeekPastNull==!bStopAtNull );",
          "1786:       assert( bSeekPastNull+bStopAtNull==1 );",
          "1787:       assert( nConstraint+bSeekPastNull>0 );",
          "1791:       op = aEndOp[bRev*2 + bSeekPastNull];",
          "1792:       sqlite3VdbeAddOp4Int(v, op, iIdxCur, addrNxt, regBase,",
          "1793:                            nConstraint+bSeekPastNull);",
          "1794:       testcase( op==OP_IdxGT );  VdbeCoverageIf(v, op==OP_IdxGT );",
          "1795:       testcase( op==OP_IdxGE );  VdbeCoverageIf(v, op==OP_IdxGE );",
          "1796:       testcase( op==OP_IdxLT );  VdbeCoverageIf(v, op==OP_IdxLT );",
          "1797:       testcase( op==OP_IdxLE );  VdbeCoverageIf(v, op==OP_IdxLE );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7ed6c068f556dd45f705355c3454c1f8af1047d4",
      "candidate_info": {
        "commit_hash": "7ed6c068f556dd45f705355c3454c1f8af1047d4",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7ed6c068f556dd45f705355c3454c1f8af1047d4",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/build.c",
          "src/vdbeaux.c",
          "test/indexexpr2.test"
        ],
        "message": "Fix a problem in [b5ca442a] causing an assert() to fail in REINDEX commands.\n\nFossilOrigin-Name: a3e77c7776ab01dadb9d30d6067ac97e9d4b09ec54834558a5fa1ffed7b52c72",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/build.c||src/build.c",
          "src/vdbeaux.c||src/vdbeaux.c",
          "test/indexexpr2.test||test/indexexpr2.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b8071d10cba8f6c19fb8d5df3877f72567dc6d6a94744a39cbc1f58b2e2f343b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "648:       break;",
          "649:     }",
          "650:     if( opcode==OP_CreateBtree && pOp->p3==BTREE_INTKEY ) hasCreateTable = 1;",
          "652:     if( opcode==OP_InitCoroutine ) hasInitCoroutine = 1;",
          "653: #ifndef SQLITE_OMIT_FOREIGN_KEY",
          "654:     if( opcode==OP_FkCounter && pOp->p1==0 && pOp->p2==1 ){",
          "",
          "[Removed Lines]",
          "651:     if( opcode==OP_CreateBtree && pOp->p3==BTREE_BLOBKEY ) hasCreateIndex = 1;",
          "",
          "[Added Lines]",
          "651:     if( mayAbort ){",
          "656:       if( opcode==OP_CreateBtree && pOp->p3==BTREE_BLOBKEY ) hasCreateIndex = 1;",
          "657:       if( opcode==OP_Clear ) hasCreateIndex = 1;",
          "658:     }",
          "",
          "---------------"
        ],
        "test/indexexpr2.test||test/indexexpr2.test": [
          "File: test/indexexpr2.test -> test/indexexpr2.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "291:   SELECT sql FROM sqlite_master WHERE tbl_name = 't0';",
          "292:   CREATE INDEX i0 ON t0(c0);",
          "293: } {{CREATE TABLE t0(c0)}}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "294: do_execsql_test 7.3 {",
          "295:   REINDEX;",
          "296: } {}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9a2782293c37d360382296558c358d60929d0744",
      "candidate_info": {
        "commit_hash": "9a2782293c37d360382296558c358d60929d0744",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/9a2782293c37d360382296558c358d60929d0744",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/date.c",
          "src/func.c",
          "src/util.c",
          "src/vdbe.c",
          "src/vdbemem.c",
          "test/cast.test",
          "test/e_expr.test",
          "test/tkt-a8a0d2996a.test"
        ],
        "message": "When casting string values into numeric and the string has a prefix that looks like a number but total string is not a well-formed number, then take extra care that the result is either integer or real depending on what the prefix looks like.  Fix for tickets [e8bedb2a184001] and [4c2d7639f076aa].\n\nFossilOrigin-Name: 67a68af5578f08d2be2e48cf4fd12a6cf35a09c47d259deda81950f7ee1f02f7",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/date.c||src/date.c",
          "src/func.c||src/func.c",
          "src/util.c||src/util.c",
          "src/vdbe.c||src/vdbe.c",
          "src/vdbemem.c||src/vdbemem.c",
          "test/cast.test||test/cast.test",
          "test/e_expr.test||test/e_expr.test",
          "test/tkt-a8a0d2996a.test||test/tkt-a8a0d2996a.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: efbf31b82e6e16fda88d8cea54202a8593ff52f2267a44dba828704818162e66",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/date.c||src/date.c": [
          "File: src/date.c -> src/date.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "388:     return 0;",
          "389:   }else if( sqlite3StrICmp(zDate,\"now\")==0 && sqlite3NotPureFunc(context) ){",
          "390:     return setDateTimeToCurrent(context, p);",
          "392:     setRawDateNumber(p, r);",
          "393:     return 0;",
          "394:   }",
          "",
          "[Removed Lines]",
          "391:   }else if( sqlite3AtoF(zDate, &r, sqlite3Strlen30(zDate), SQLITE_UTF8) ){",
          "",
          "[Added Lines]",
          "391:   }else if( sqlite3AtoF(zDate, &r, sqlite3Strlen30(zDate), SQLITE_UTF8)>0 ){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "724:       if( sqlite3_strnicmp(z, \"weekday \", 8)==0",
          "726:                && (n=(int)r)==r && n>=0 && r<7 ){",
          "727:         sqlite3_int64 Z;",
          "728:         computeYMD_HMS(p);",
          "",
          "[Removed Lines]",
          "725:                && sqlite3AtoF(&z[8], &r, sqlite3Strlen30(&z[8]), SQLITE_UTF8)",
          "",
          "[Added Lines]",
          "725:                && sqlite3AtoF(&z[8], &r, sqlite3Strlen30(&z[8]), SQLITE_UTF8)>0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "781:       double rRounder;",
          "782:       int i;",
          "783:       for(n=1; z[n] && z[n]!=':' && !sqlite3Isspace(z[n]); n++){}",
          "785:         rc = 1;",
          "786:         break;",
          "787:       }",
          "",
          "[Removed Lines]",
          "784:       if( !sqlite3AtoF(z, &r, n, SQLITE_UTF8) ){",
          "",
          "[Added Lines]",
          "784:       if( sqlite3AtoF(z, &r, n, SQLITE_UTF8)<=0 ){",
          "",
          "---------------"
        ],
        "src/func.c||src/func.c": [
          "File: src/func.c -> src/func.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "397:       sqlite3_result_error_nomem(context);",
          "398:       return;",
          "399:     }",
          "401:       assert( sqlite3_strglob(\"*Inf\", zBuf)==0 );",
          "402:       r = zBuf[0]=='-' ? -HUGE_VAL : +HUGE_VAL;",
          "403:     }",
          "",
          "[Removed Lines]",
          "400:     if( !sqlite3AtoF(zBuf, &r, sqlite3Strlen30(zBuf), SQLITE_UTF8) ){",
          "",
          "[Added Lines]",
          "400:     if( sqlite3AtoF(zBuf, &r, sqlite3Strlen30(zBuf), SQLITE_UTF8)<=0 ){",
          "",
          "---------------"
        ],
        "src/util.c||src/util.c": [
          "File: src/util.c -> src/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "560: #else",
          "561:   return !sqlite3Atoi64(z, pResult, length, enc);",
          "",
          "[Removed Lines]",
          "559:   return z==zEnd && nDigit>0 && eValid && eType>0 ? eType : 0;",
          "",
          "[Added Lines]",
          "561:   if( z==zEnd && nDigit>0 && eValid && eType>0 ){",
          "562:     return eType;",
          "563:   }else if( eType>=2 && (eType==3 || eValid) ){",
          "564:     return -1;",
          "565:   }else{",
          "566:     return 0;",
          "567:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "659:   }",
          "660:   rc = 0;",
          "664:     rc = 1;",
          "666:     int jj = i;",
          "",
          "[Removed Lines]",
          "663:   ){",
          "",
          "[Added Lines]",
          "671:     rc = -1;",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "321:   int rc;",
          "322:   assert( (pRec->flags & (MEM_Str|MEM_Int|MEM_Real|MEM_IntReal))==MEM_Str );",
          "323:   rc = sqlite3AtoF(pRec->z, &rValue, pRec->n, enc);",
          "325:   if( rc==1 && alsoAnInt(pRec, rValue, &pRec->u.i) ){",
          "326:     pRec->flags |= MEM_Int;",
          "327:   }else{",
          "",
          "[Removed Lines]",
          "324:   if( rc==0 ) return;",
          "",
          "[Added Lines]",
          "324:   if( rc<=0 ) return;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "424: static u16 SQLITE_NOINLINE computeNumericType(Mem *pMem){",
          "425:   assert( (pMem->flags & (MEM_Int|MEM_Real|MEM_IntReal))==0 );",
          "426:   assert( (pMem->flags & (MEM_Str|MEM_Blob))!=0 );",
          "427:   ExpandBlob(pMem);",
          "432:     return MEM_Int;",
          "433:   }",
          "434:   return MEM_Real;",
          "",
          "[Removed Lines]",
          "428:   if( sqlite3AtoF(pMem->z, &pMem->u.r, pMem->n, pMem->enc)==0 ){",
          "429:     return 0;",
          "430:   }",
          "431:   if( sqlite3Atoi64(pMem->z, &pMem->u.i, pMem->n, pMem->enc)==0 ){",
          "",
          "[Added Lines]",
          "425:   int rc;",
          "426:   sqlite3_int64 ix;",
          "430:   rc = sqlite3AtoF(pMem->z, &pMem->u.r, pMem->n, pMem->enc);",
          "431:   if( rc<=0 ){",
          "432:     if( rc==0 && sqlite3Atoi64(pMem->z, &ix, pMem->n, pMem->enc)<=1 ){",
          "433:       pMem->u.i = ix;",
          "434:       return MEM_Int;",
          "435:     }else{",
          "436:       return MEM_Real;",
          "437:     }",
          "438:   }else if( rc==1 && sqlite3Atoi64(pMem->z, &ix, pMem->n, pMem->enc)==0 ){",
          "439:     pMem->u.i = ix;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1608:   if( (type1 & type2 & MEM_Int)!=0 ){",
          "1609:     iA = pIn1->u.i;",
          "1610:     iB = pIn2->u.i;",
          "1612:     switch( pOp->opcode ){",
          "1613:       case OP_Add:       if( sqlite3AddInt64(&iB,iA) ) goto fp_math;  break;",
          "1614:       case OP_Subtract:  if( sqlite3SubInt64(&iB,iA) ) goto fp_math;  break;",
          "",
          "[Removed Lines]",
          "1611:     bIntint = 1;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1631:   }else if( (flags & MEM_Null)!=0 ){",
          "1632:     goto arithmetic_result_is_null;",
          "1633:   }else{",
          "1635: fp_math:",
          "1636:     rA = sqlite3VdbeRealValue(pIn1);",
          "1637:     rB = sqlite3VdbeRealValue(pIn2);",
          "",
          "[Removed Lines]",
          "1634:     bIntint = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1663:     }",
          "1664:     pOut->u.r = rB;",
          "1665:     MemSetTypeFlag(pOut, MEM_Real);",
          "1669: #endif",
          "1670:   }",
          "1671:   break;",
          "",
          "[Removed Lines]",
          "1666:     if( ((type1|type2)&(MEM_Real|MEM_IntReal))==0 && !bIntint ){",
          "1667:       sqlite3VdbeIntegerAffinity(pOut);",
          "1668:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbemem.c||src/vdbemem.c": [
          "File: src/vdbemem.c -> src/vdbemem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "717:   testcase( pMem->flags & MEM_Null );",
          "718:   if( (pMem->flags & (MEM_Int|MEM_Real|MEM_IntReal|MEM_Null))==0 ){",
          "719:     int rc;",
          "720:     assert( (pMem->flags & (MEM_Blob|MEM_Str))!=0 );",
          "721:     assert( pMem->db==0 || sqlite3_mutex_held(pMem->db->mutex) );",
          "730:         MemSetTypeFlag(pMem, MEM_Int);",
          "731:       }else{",
          "732:         MemSetTypeFlag(pMem, MEM_Real);",
          "733:       }",
          "734:     }",
          "735:   }",
          "736:   assert( (pMem->flags & (MEM_Int|MEM_Real|MEM_IntReal|MEM_Null))!=0 );",
          "",
          "[Removed Lines]",
          "722:     rc = sqlite3Atoi64(pMem->z, &pMem->u.i, pMem->n, pMem->enc);",
          "723:     if( rc==0 ){",
          "724:       MemSetTypeFlag(pMem, MEM_Int);",
          "725:     }else{",
          "726:       i64 i = pMem->u.i;",
          "727:       sqlite3AtoF(pMem->z, &pMem->u.r, pMem->n, pMem->enc);",
          "728:       if( rc==1 && sqlite3RealSameAsInt(pMem->u.r, i) ){",
          "729:         pMem->u.i = i;",
          "",
          "[Added Lines]",
          "720:     sqlite3_int64 ix;",
          "723:     rc = sqlite3AtoF(pMem->z, &pMem->u.r, pMem->n, pMem->enc);",
          "724:     if( rc<=0 ){",
          "725:       if( rc==0 && sqlite3Atoi64(pMem->z, &ix, pMem->n, pMem->enc)<=1 ){",
          "726:         pMem->u.i = ix;",
          "731:     }else if( rc==1 && sqlite3Atoi64(pMem->z, &ix, pMem->n, pMem->enc)==0 ){",
          "732:       pMem->u.i = ix;",
          "733:       MemSetTypeFlag(pMem, MEM_Int);",
          "734:     }else{",
          "735:       MemSetTypeFlag(pMem, MEM_Real);",
          "",
          "---------------"
        ],
        "test/cast.test||test/cast.test": [
          "File: test/cast.test -> test/cast.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "388:   SELECT * FROM t1;",
          "389: } {9000000000000000001 9000000000000000001 9000000000000000001 9000000000000000001}",
          "391: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "391: # 2019-06-07",
          "392: # https://www.sqlite.org/src/info/4c2d7639f076aa7c",
          "393: do_execsql_test case-7.1 {",
          "394:   SELECT CAST('-' AS NUMERIC);",
          "395: } {0}",
          "396: do_execsql_test case-7.2 {",
          "397:   SELECT CAST('-0' AS NUMERIC);",
          "398: } {0}",
          "399: do_execsql_test case-7.3 {",
          "400:   SELECT CAST('+' AS NUMERIC);",
          "401: } {0}",
          "402: do_execsql_test case-7.4 {",
          "403:   SELECT CAST('/' AS NUMERIC);",
          "404: } {0}",
          "406: # 2019-06-07",
          "407: # https://www.sqlite.org/src/info/e8bedb2a184001bb",
          "408: do_execsql_test case-7.10 {",
          "409:   SELECT '' - 2851427734582196970;",
          "410: } {-2851427734582196970}",
          "411: do_execsql_test case-7.11 {",
          "412:   SELECT 0 - 2851427734582196970;",
          "413: } {-2851427734582196970}",
          "414: do_execsql_test case-7.12 {",
          "415:   SELECT '' - 1;",
          "416: } {-1}",
          "",
          "---------------"
        ],
        "test/e_expr.test||test/e_expr.test": [
          "File: test/e_expr.test -> test/e_expr.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1650: # is lossless and reversible.",
          "1651: #",
          "1652: do_expr_test e_expr-32.1.1 { CAST('45'   AS NUMERIC)  } integer 45",
          "1654: do_expr_test e_expr-32.1.3 { CAST('45.2' AS NUMERIC)  } real 45.2",
          "1655: do_expr_test e_expr-32.1.4 { CAST('11abc' AS NUMERIC) } integer 11",
          "1656: do_expr_test e_expr-32.1.5 { CAST('11.1abc' AS NUMERIC) } real 11.1",
          "",
          "[Removed Lines]",
          "1653: do_expr_test e_expr-32.1.2 { CAST('45.0' AS NUMERIC)  } integer 45",
          "",
          "[Added Lines]",
          "1653: do_expr_test e_expr-32.1.2 { CAST('45.0' AS NUMERIC)  } real 45.0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1701:  integer 9000000000000000001 \\",
          "1702:  integer 9000000000000000001 \\",
          "1703:  integer 9000000000000000001 \\",
          "1705:  integer 9223372036854775807 \\",
          "1706:  integer 9223372036854775807 \\",
          "1707:  integer 9223372036854775807 \\",
          "1708:  real 9.22337203685478e+18 \\",
          "1709:  real 9.22337203685478e+18 \\",
          "1714: ]",
          "1716: # EVIDENCE-OF: R-64550-29191 Note that the result from casting any",
          "",
          "[Removed Lines]",
          "1704:  integer 9000000000000000001 \\",
          "1710:  integer 9223372036854775807 \\",
          "1711:  integer 9223372036854775807 \\",
          "1712:  integer -5 \\",
          "1713:  integer -5 \\",
          "",
          "[Added Lines]",
          "1704:  real 9.0e+18 \\",
          "1710:  real 9.22337203685478e+18 \\",
          "1711:  real 9.22337203685478e+18 \\",
          "1712:  real -5.0 \\",
          "1713:  real -5.0 \\",
          "",
          "---------------"
        ],
        "test/tkt-a8a0d2996a.test||test/tkt-a8a0d2996a.test": [
          "File: test/tkt-a8a0d2996a.test -> test/tkt-a8a0d2996a.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "84: } {104.5}",
          "85: do_execsql_test 4.4 {",
          "86:   SELECT '-9223372036854775807x'-'1x';",
          "88: do_execsql_test 4.5 {",
          "89:   SELECT '9223372036854775806x'+'1x';",
          "91: do_execsql_test 4.6 {",
          "95: finish_test",
          "",
          "[Removed Lines]",
          "87: } {-9.22337203685478e+18}",
          "90: } {9.22337203685478e+18}",
          "92:   SELECT '1234x'/'10y';",
          "93: } {123.4}",
          "",
          "[Added Lines]",
          "87: } {-9223372036854775808}",
          "90: } {9223372036854775807}",
          "92:   SELECT '1234x'/'10y', '1234x'/'10.y', '1234x'/'1e1y';",
          "93: } {123 123.4 123.4}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b63d6070ee83ea13f35bee56d32fca574a1c6151",
      "candidate_info": {
        "commit_hash": "b63d6070ee83ea13f35bee56d32fca574a1c6151",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b63d6070ee83ea13f35bee56d32fca574a1c6151",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix an assert() in fts5 that could fail with a corrupt database.\n\nFossilOrigin-Name: 83935b950619855fb3bf05486091804ac2a61fb993c6ec826c89f943264fabc3",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3578: #ifdef SQLITE_DEBUG",
          "3579:       for(iLvl=0; iLvl<pStruct->nLevel; iLvl++){",
          "3580:         for(iSeg=0; iSeg<pStruct->aLevel[iLvl].nSeg; iSeg++){",
          "3582:         }",
          "3583:       }",
          "3586:       {",
          "3587:         sqlite3_stmt *pIdxSelect = fts5IdxSelectStmt(p);",
          "",
          "[Removed Lines]",
          "3581:           assert( iSegid!=pStruct->aLevel[iLvl].aSeg[iSeg].iSegid );",
          "3584:       assert( iSegid>0 && iSegid<=FTS5_MAX_SEGMENT );",
          "",
          "[Added Lines]",
          "3581:           assert_nc( iSegid!=pStruct->aLevel[iLvl].aSeg[iSeg].iSegid );",
          "3584:       assert_nc( iSegid>0 && iSegid<=FTS5_MAX_SEGMENT );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3589:           u8 aBlob[2] = {0xff, 0xff};",
          "3590:           sqlite3_bind_int(pIdxSelect, 1, iSegid);",
          "3591:           sqlite3_bind_blob(pIdxSelect, 2, aBlob, 2, SQLITE_STATIC);",
          "3593:           p->rc = sqlite3_reset(pIdxSelect);",
          "3594:           sqlite3_bind_null(pIdxSelect, 2);",
          "3595:         }",
          "",
          "[Removed Lines]",
          "3592:           assert( sqlite3_step(pIdxSelect)!=SQLITE_ROW );",
          "",
          "[Added Lines]",
          "3592:           assert_nc( sqlite3_step(pIdxSelect)!=SQLITE_ROW );",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "498: | end c9.db",
          "499:   }]",
          "500: } {}",
          "502: do_catchsql_test 10.1 {",
          "503:   SELECT * FROM t1 WHERE t1 MATCH 'abandon';",
          "504: } {1 {database disk image is malformed}}",
          "506: sqlite3_fts5_may_be_corrupt 0",
          "507: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "505: #-------------------------------------------------------------------------",
          "506: #",
          "507: reset_db",
          "508: do_test 11.0 {",
          "509:   sqlite3 db {}",
          "510:   db deserialize [decode_hexdb {",
          "511: | size 28672 pagesize 4096 filename c10b.db",
          "512: | page 1 offset 0",
          "513: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "514: |     16: 10 00 01 01 00 40 20 20 00 00 00 01 00 00 00 07   .....@  ........",
          "515: |     32: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "516: |     48: 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00   ................",
          "517: |     80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01   ................",
          "518: |     96: 00 2e 30 38 0d 00 00 00 07 0d d2 00 0f c4 0f 6d   ..08...........m",
          "519: |    112: 0f 02 0e ab 0e 4e 0d f6 0d d2 00 00 00 00 00 00   .....N..........",
          "520: |   3536: 00 00 22 07 06 17 11 11 01 31 74 61 62 6c 65 74   .........1tablet",
          "521: |   3552: 32 74 32 07 43 52 45 41 54 45 20 54 41 42 4c 45   2t2.CREATE TABLE",
          "522: |   3568: 20 74 32 28 78 29 56 06 06 17 1f 1f 01 7d 74 61    t2(x)V.......ta",
          "523: |   3584: 62 6c 65 74 31 5f 63 6f 6e 66 69 67 74 31 5f 63   blet1_configt1_c",
          "524: |   3600: 6f 6e 66 69 67 06 43 52 45 41 54 45 20 54 41 42   onfig.CREATE TAB",
          "525: |   3616: 4c 45 20 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b   LE 't1_config'(k",
          "526: |   3632: 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29    PRIMARY KEY, v)",
          "527: |   3648: 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5b 05    WITHOUT ROWID[.",
          "528: |   3664: 07 17 21 21 01 81 01 74 61 62 6c 65 74 31 5f 64   ..!!...tablet1_d",
          "529: |   3680: 6f 63 73 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65   ocsizet1_docsize",
          "530: |   3696: 05 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74   .CREATE TABLE 't",
          "531: |   3712: 31 5f 64 6f 63 73 69 7a 65 27 28 69 64 20 49 4e   1_docsize'(id IN",
          "532: |   3728: 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45   TEGER PRIMARY KE",
          "533: |   3744: 59 2c 20 73 7a 20 42 4c 4f 42 29 55 04 06 17 21   Y, sz BLOB)U...!",
          "534: |   3760: 21 01 77 74 61 62 6c 65 74 31 5f 63 6f 6e 74 65   !.wtablet1_conte",
          "535: |   3776: 6e 74 74 31 5f 63 6f 6e 74 65 6e 74 04 43 52 45   ntt1_content.CRE",
          "536: |   3792: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63 6f   ATE TABLE 't1_co",
          "537: |   3808: 6e 74 65 6e 74 27 28 69 64 20 49 4e 54 45 47 45   ntent'(id INTEGE",
          "538: |   3824: 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 63   R PRIMARY KEY, c",
          "539: |   3840: 30 29 69 03 07 17 19 19 01 81 2d 74 61 62 6c 65   0)i.......-table",
          "540: |   3856: 74 31 5f 69 64 78 74 31 5f 69 64 78 03 43 52 45   t1_idxt1_idx.CRE",
          "541: |   3872: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 69 64   ATE TABLE 't1_id",
          "542: |   3888: 78 27 28 73 65 67 69 64 2c 20 74 65 72 6d 2c 20   x'(segid, term,",
          "543: |   3904: 70 67 6e 6f 2c 20 50 52 49 4d 41 52 59 20 4b 45   pgno, PRIMARY KE",
          "544: |   3920: 59 28 73 65 67 69 64 2c 20 74 65 72 6d 29 29 20   Y(segid, term))",
          "545: |   3936: 57 49 54 48 4f 55 54 20 52 4f 57 49 44 55 02 07   WITHOUT ROWIDU..",
          "546: |   3952: 17 1b 1b 01 81 01 74 61 62 6c 65 74 31 5f 64 61   ......tablet1_da",
          "547: |   3968: 74 61 74 31 5f 64 61 74 61 02 43 52 45 41 54 45   tat1_data.CREATE",
          "548: |   3984: 20 54 41 42 4c 45 20 27 74 31 5f 64 61 74 61 27    TABLE 't1_data'",
          "549: |   4000: 28 69 64 20 49 4e 54 45 47 45 52 20 50 52 44 d9   (id INTEGER PRD.",
          "550: |   4016: 41 52 59 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42   ARY KEY, block B",
          "551: |   4032: 4c 4f 42 29 3a 01 06 17 11 11 08 63 74 61 62 6c   LOB):......ctabl",
          "552: |   4048: 65 74 31 74 31 43 52 45 41 54 45 20 56 49 52 54   et1t1CREATE VIRT",
          "553: |   4064: 55 41 4c 20 54 41 42 4c 45 20 74 31 20 55 53 49   UAL TABLE t1 USI",
          "554: |   4080: 4e 47 20 66 74 73 35 28 63 6f 6e 74 65 6e 74 29   NG fts5(content)",
          "555: | page 2 offset 4096",
          "556: |      0: 0d 00 00 00 06 0f 59 00 0f e8 0f ef 0f bd 0f b0   ......Y.........",
          "557: |     16: 0f 73 0f 59 00 00 00 00 00 00 00 00 00 00 00 00   .s.Y............",
          "558: |   3920: 00 00 00 00 00 00 00 00 00 13 84 80 80 80 80 04   ................",
          "559: |   3936: 03 01 2a 0a 00 00 00 00 01 02 02 00 02 01 01 01   ..*.............",
          "560: |   3952: 02 01 01 36 84 80 80 80 80 03 03 05 66 00 40 00   ...6........f.@.",
          "561: |   3968: 00 00 01 00 00 00 29 07 30 61 63 74 69 76 65 04   ......).0active.",
          "562: |   3984: 02 02 02 03 74 6f 6d 06 02 02 05 02 69 63 07 02   ....tom.....ic..",
          "563: |   4000: 02 01 06 62 6f 6f 6d 65 72 05 02 02 04 0b 08 07   ...boomer.......",
          "564: |   4016: 06 84 80 80 80 80 02 03 01 10 01 07 07 24 84 80   .............$..",
          "565: |   4032: 80 80 80 01 03 00 4e 00 00 00 1e 06 30 61 62 61   ......N.....0aba",
          "566: |   4048: 63 6b 01 02 02 04 02 66 74 02 02 02 04 04 6e 64   ck.....ft.....nd",
          "567: |   4064: 6f 6e 03 02 02 04 0a 07 05 01 03 00 10 03 03 0f   on..............",
          "568: |   4080: 0a 03 00 24 00 00 00 00 01 01 01 00 01 01 01 01   ...$............",
          "569: | page 3 offset 8192",
          "570: |      0: 0a 00 00 00 02 0f f3 00 0f fa 0f f3 00 00 00 00   ................",
          "571: |   4080: 00 00 00 06 04 01 0c 01 02 02 05 04 09 0c 01 02   ................",
          "572: | page 4 offset 12288",
          "573: |      0: 0d 00 00 00 07 0f b6 00 0f f6 0f ec 0f e0 0f d5   ................",
          "574: |     16: 0f ca 0f c1 0f b6 00 00 00 00 00 00 00 00 00 00   ................",
          "575: |   4016: 00 00 00 00 00 00 09 07 03 00 19 61 74 6f 6d 69   ...........atomi",
          "576: |   4032: 63 07 06 03 00 15 61 74 6f 6d 09 05 03 00 19 62   c.....atom.....b",
          "577: |   4048: 6f 6f 6d 65 72 09 04 03 00 19 61 63 74 69 76 65   oomer.....active",
          "578: |   4064: 0a 03 03 00 1b 61 62 61 6e 64 6f 6e 08 02 03 00   .....abandon....",
          "579: |   4080: 17 61 62 61 66 74 08 01 03 00 17 61 62 61 63 6b   .abaft.....aback",
          "580: | page 5 offset 16384",
          "581: |      0: 0d 00 00 00 07 0f d6 00 0f fa 0f f4 0f ee 0f e8   ................",
          "582: |     16: 0f e2 0f dc 0f d6 00 00 00 00 00 00 00 00 00 00   ................",
          "583: |   4048: 00 00 00 00 00 00 04 07 03 00 0e 01 04 06 03 00   ................",
          "584: |   4064: 0e 01 04 05 03 00 0e 01 04 04 03 00 0e 01 04 03   ................",
          "585: |   4080: 03 00 0e 01 04 02 03 00 0e 01 04 01 03 00 0e 01   ................",
          "586: | page 6 offset 20480",
          "587: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "588: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "589: | page 7 offset 24576",
          "590: |      0: 0d 00 00 00 03 0f d6 00 0f f4 0f e1 0f d6 00 00   ................",
          "591: |   4048: 00 00 00 00 00 00 09 03 02 1b 72 65 62 75 69 6c   ..........rebuil",
          "592: |   4064: 64 11 02 02 2b 69 6e 74 65 67 72 69 74 79 2d 63   d...+integrity-c",
          "593: |   4080: 68 65 63 6b 0a 01 02 1d 6f 70 74 69 6d 69 7a 65   heck....optimize",
          "594: | end c10b.db",
          "595: }]} {}",
          "597: # This returns SQLITE_CONSTRAINT instead of SQLITE_CORRUPT. The problem is",
          "598: # that the corrupted structure-record leads fts5 to try to use a segment-id",
          "599: # that is already in use. This is caught by the PRIMARY KEY constraint on",
          "600: # the %_idx table.",
          "601: #",
          "602: do_catchsql_test 11.1 {",
          "603:   UPDATE t1 SET content='abc' WHERE content='boomer';",
          "604: } {1 {constraint failed}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3518c09b944c92974939b1de244401afd34de5d9aa75050e5ad55581a94e1e71",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "db36e255d5f7162f6abcdfcafeca4f22668e139c",
      "candidate_info": {
        "commit_hash": "db36e255d5f7162f6abcdfcafeca4f22668e139c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/db36e255d5f7162f6abcdfcafeca4f22668e139c",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/rowvalue.test"
        ],
        "message": "Disqualify row-value comparisons for use by an index if the right-hand side has an affinity that does not match the index. Fix for ticket [6ef984af8972c2eb]\n\nFossilOrigin-Name: 5c118617cf08e17a6edfdfba86e3fc49132a780990b68b52724c2aaeac85f506",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/rowvalue.test||test/rowvalue.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c7da1c01f1f239e68c2173ac5748b8c5798271e43bdcee68f51f97cd0ca92bd5",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:         pExpr->pLeft->x.pSelect->pEList->a[pExpr->iColumn].pExpr",
          "71:     );",
          "72:   }",
          "73:   return pExpr->affExpr;",
          "74: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "73:   if( op==TK_VECTOR ){",
          "74:     return sqlite3ExprAffinity(pExpr->x.pList->a[0].pExpr);",
          "75:   }",
          "",
          "---------------"
        ],
        "test/rowvalue.test||test/rowvalue.test": [
          "File: test/rowvalue.test -> test/rowvalue.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "586:   SELECT 3 FROM t0 WHERE (aa,1) <= (SELECT +bb,1);",
          "587: } {0 1 3}",
          "589: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "589: # 2019-10-22 Ticket 6ef984af8972c2eb",
          "590: do_execsql_test 24.100 {",
          "591:   DROP TABLE t0;",
          "592:   CREATE TABLE t0(c0 TEXT PRIMARY KEY);",
          "593:   INSERT INTO t0(c0) VALUES ('');",
          "594:   SELECT (t0.c0, TRUE) > (CAST(0 AS REAL), FALSE) FROM t0;",
          "595:   SELECT 2 FROM t0 WHERE (t0.c0, TRUE) > (CAST('' AS REAL), FALSE);",
          "596: } {1 2}",
          "",
          "---------------"
        ]
      }
    }
  ]
}