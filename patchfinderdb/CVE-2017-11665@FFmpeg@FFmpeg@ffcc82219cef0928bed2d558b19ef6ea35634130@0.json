{
  "cve_id": "CVE-2017-11665",
  "cve_desc": "The ff_amf_get_field_value function in libavformat/rtmppkt.c in FFmpeg 3.3.2 allows remote RTMP servers to cause a denial of service (Segmentation Violation and application crash) via a crafted stream.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "ffcc82219cef0928bed2d558b19ef6ea35634130",
  "patch_info": {
    "commit_hash": "ffcc82219cef0928bed2d558b19ef6ea35634130",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/ffcc82219cef0928bed2d558b19ef6ea35634130",
    "files": [
      "libavformat/rtmppkt.c"
    ],
    "message": "avformat/rtmppkt: Convert ff_amf_get_field_value() to bytestream2\n\nFixes: out of array accesses\n\nFound-by: JunDong Xie of Ant-financial Light-Year Security Lab\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "before_after_code_files": [
      "libavformat/rtmppkt.c||libavformat/rtmppkt.c"
    ]
  },
  "patch_diff": {
    "libavformat/rtmppkt.c||libavformat/rtmppkt.c": [
      "File: libavformat/rtmppkt.c -> libavformat/rtmppkt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "505:     return bytestream2_tell(&gb);",
      "506: }",
      "509:                            const uint8_t *name, uint8_t *dst, int dst_size)",
      "510: {",
      "511:     int namelen = strlen(name);",
      "512:     int len;",
      "519:     }",
      "521:         return -1;",
      "523:     for (;;) {",
      "525:         if (!size)",
      "526:             break;",
      "528:             return -1;",
      "532:             case AMF_DATA_TYPE_NUMBER:",
      "534:                 break;",
      "535:             case AMF_DATA_TYPE_BOOL:",
      "537:                 break;",
      "538:             case AMF_DATA_TYPE_STRING:",
      "541:                 break;",
      "542:             default:",
      "543:                 return -1;",
      "544:             }",
      "545:             return 0;",
      "546:         }",
      "549:             return -1;",
      "551:     }",
      "552:     return -1;",
      "553: }",
      "555: static const char* rtmp_packet_type(int type)",
      "556: {",
      "557:     switch (type) {",
      "",
      "[Removed Lines]",
      "508: int ff_amf_get_field_value(const uint8_t *data, const uint8_t *data_end,",
      "514:     while (*data != AMF_DATA_TYPE_OBJECT && data < data_end) {",
      "515:         len = ff_amf_tag_size(data, data_end);",
      "516:         if (len < 0)",
      "517:             len = data_end - data;",
      "518:         data += len;",
      "520:     if (data_end - data < 3)",
      "522:     data++;",
      "524:         int size = bytestream_get_be16(&data);",
      "527:         if (size < 0 || size >= data_end - data)",
      "529:         data += size;",
      "530:         if (size == namelen && !memcmp(data-size, name, namelen)) {",
      "531:             switch (*data++) {",
      "533:                 snprintf(dst, dst_size, \"%g\", av_int2double(AV_RB64(data)));",
      "536:                 snprintf(dst, dst_size, \"%s\", *data ? \"true\" : \"false\");",
      "539:                 len = bytestream_get_be16(&data);",
      "540:                 av_strlcpy(dst, data, FFMIN(len+1, dst_size));",
      "547:         len = ff_amf_tag_size(data, data_end);",
      "548:         if (len < 0 || len >= data_end - data)",
      "550:         data += len;",
      "",
      "[Added Lines]",
      "508: static int amf_get_field_value2(GetByteContext *gb,",
      "514:     while (bytestream2_peek_byte(gb) != AMF_DATA_TYPE_OBJECT && bytestream2_get_bytes_left(gb) > 0) {",
      "515:         int ret = amf_tag_skip(gb);",
      "516:         if (ret < 0)",
      "517:             return -1;",
      "519:     if (bytestream2_get_bytes_left(gb) < 3)",
      "521:     bytestream2_get_byte(gb);",
      "524:         int size = bytestream2_get_be16(gb);",
      "527:         if (size < 0 || size >= bytestream2_get_bytes_left(gb))",
      "529:         bytestream2_skip(gb, size);",
      "530:         if (size == namelen && !memcmp(gb->buffer-size, name, namelen)) {",
      "531:             switch (bytestream2_get_byte(gb)) {",
      "533:                 snprintf(dst, dst_size, \"%g\", av_int2double(bytestream2_get_be64(gb)));",
      "536:                 snprintf(dst, dst_size, \"%s\", bytestream2_get_byte(gb) ? \"true\" : \"false\");",
      "539:                 len = bytestream2_get_be16(gb);",
      "540:                 if (dst_size < 1)",
      "541:                     return -1;",
      "542:                 if (dst_size < len + 1)",
      "543:                     len = dst_size - 1;",
      "544:                 bytestream2_get_buffer(gb, dst, len);",
      "545:                 dst[len] = 0;",
      "552:         len = amf_tag_skip(gb);",
      "553:         if (len < 0 || bytestream2_get_bytes_left(gb) <= 0)",
      "559: int ff_amf_get_field_value(const uint8_t *data, const uint8_t *data_end,",
      "560:                            const uint8_t *name, uint8_t *dst, int dst_size)",
      "561: {",
      "562:     GetByteContext gb;",
      "564:     if (data >= data_end)",
      "565:         return -1;",
      "567:     bytestream2_init(&gb, data, data_end - data);",
      "569:     return amf_get_field_value2(&gb, name, dst, dst_size);",
      "570: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6de5ec8ef818774c58a1c4cd9548534be0e54ecc",
      "candidate_info": {
        "commit_hash": "6de5ec8ef818774c58a1c4cd9548534be0e54ecc",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/6de5ec8ef818774c58a1c4cd9548534be0e54ecc",
        "files": [
          "libavformat/rtmppkt.c"
        ],
        "message": "avformat/rtmppkt: Convert ff_amf_get_field_value() to bytestream2\n\nFixes: out of array accesses\n\nFound-by: JunDong Xie of Ant-financial Light-Year Security Lab\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit ffcc82219cef0928bed2d558b19ef6ea35634130)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavformat/rtmppkt.c||libavformat/rtmppkt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/rtmppkt.c||libavformat/rtmppkt.c"
          ],
          "candidate": [
            "libavformat/rtmppkt.c||libavformat/rtmppkt.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/rtmppkt.c||libavformat/rtmppkt.c": [
          "File: libavformat/rtmppkt.c -> libavformat/rtmppkt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "505:     return bytestream2_tell(&gb);",
          "506: }",
          "509:                            const uint8_t *name, uint8_t *dst, int dst_size)",
          "510: {",
          "511:     int namelen = strlen(name);",
          "512:     int len;",
          "519:     }",
          "521:         return -1;",
          "523:     for (;;) {",
          "525:         if (!size)",
          "526:             break;",
          "528:             return -1;",
          "532:             case AMF_DATA_TYPE_NUMBER:",
          "534:                 break;",
          "535:             case AMF_DATA_TYPE_BOOL:",
          "537:                 break;",
          "538:             case AMF_DATA_TYPE_STRING:",
          "541:                 break;",
          "542:             default:",
          "543:                 return -1;",
          "544:             }",
          "545:             return 0;",
          "546:         }",
          "549:             return -1;",
          "551:     }",
          "552:     return -1;",
          "553: }",
          "555: static const char* rtmp_packet_type(int type)",
          "556: {",
          "557:     switch (type) {",
          "",
          "[Removed Lines]",
          "508: int ff_amf_get_field_value(const uint8_t *data, const uint8_t *data_end,",
          "514:     while (*data != AMF_DATA_TYPE_OBJECT && data < data_end) {",
          "515:         len = ff_amf_tag_size(data, data_end);",
          "516:         if (len < 0)",
          "517:             len = data_end - data;",
          "518:         data += len;",
          "520:     if (data_end - data < 3)",
          "522:     data++;",
          "524:         int size = bytestream_get_be16(&data);",
          "527:         if (size < 0 || size >= data_end - data)",
          "529:         data += size;",
          "530:         if (size == namelen && !memcmp(data-size, name, namelen)) {",
          "531:             switch (*data++) {",
          "533:                 snprintf(dst, dst_size, \"%g\", av_int2double(AV_RB64(data)));",
          "536:                 snprintf(dst, dst_size, \"%s\", *data ? \"true\" : \"false\");",
          "539:                 len = bytestream_get_be16(&data);",
          "540:                 av_strlcpy(dst, data, FFMIN(len+1, dst_size));",
          "547:         len = ff_amf_tag_size(data, data_end);",
          "548:         if (len < 0 || len >= data_end - data)",
          "550:         data += len;",
          "",
          "[Added Lines]",
          "508: static int amf_get_field_value2(GetByteContext *gb,",
          "514:     while (bytestream2_peek_byte(gb) != AMF_DATA_TYPE_OBJECT && bytestream2_get_bytes_left(gb) > 0) {",
          "515:         int ret = amf_tag_skip(gb);",
          "516:         if (ret < 0)",
          "517:             return -1;",
          "519:     if (bytestream2_get_bytes_left(gb) < 3)",
          "521:     bytestream2_get_byte(gb);",
          "524:         int size = bytestream2_get_be16(gb);",
          "527:         if (size < 0 || size >= bytestream2_get_bytes_left(gb))",
          "529:         bytestream2_skip(gb, size);",
          "530:         if (size == namelen && !memcmp(gb->buffer-size, name, namelen)) {",
          "531:             switch (bytestream2_get_byte(gb)) {",
          "533:                 snprintf(dst, dst_size, \"%g\", av_int2double(bytestream2_get_be64(gb)));",
          "536:                 snprintf(dst, dst_size, \"%s\", bytestream2_get_byte(gb) ? \"true\" : \"false\");",
          "539:                 len = bytestream2_get_be16(gb);",
          "540:                 if (dst_size < 1)",
          "541:                     return -1;",
          "542:                 if (dst_size < len + 1)",
          "543:                     len = dst_size - 1;",
          "544:                 bytestream2_get_buffer(gb, dst, len);",
          "545:                 dst[len] = 0;",
          "552:         len = amf_tag_skip(gb);",
          "553:         if (len < 0 || bytestream2_get_bytes_left(gb) <= 0)",
          "559: int ff_amf_get_field_value(const uint8_t *data, const uint8_t *data_end,",
          "560:                            const uint8_t *name, uint8_t *dst, int dst_size)",
          "561: {",
          "562:     GetByteContext gb;",
          "564:     if (data >= data_end)",
          "565:         return -1;",
          "567:     bytestream2_init(&gb, data, data_end - data);",
          "569:     return amf_get_field_value2(&gb, name, dst, dst_size);",
          "570: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "81c940b151016fb6f363e6ce621c591bbb58bacf",
      "candidate_info": {
        "commit_hash": "81c940b151016fb6f363e6ce621c591bbb58bacf",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/81c940b151016fb6f363e6ce621c591bbb58bacf",
        "files": [
          "libavformat/rtmppkt.c"
        ],
        "message": "avformat/rtmppkt: Convert ff_amf_get_field_value() to bytestream2\n\nFixes: out of array accesses\n\nFound-by: JunDong Xie of Ant-financial Light-Year Security Lab\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit ffcc82219cef0928bed2d558b19ef6ea35634130)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavformat/rtmppkt.c||libavformat/rtmppkt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/rtmppkt.c||libavformat/rtmppkt.c"
          ],
          "candidate": [
            "libavformat/rtmppkt.c||libavformat/rtmppkt.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/rtmppkt.c||libavformat/rtmppkt.c": [
          "File: libavformat/rtmppkt.c -> libavformat/rtmppkt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "505:     return bytestream2_tell(&gb);",
          "506: }",
          "509:                            const uint8_t *name, uint8_t *dst, int dst_size)",
          "510: {",
          "511:     int namelen = strlen(name);",
          "512:     int len;",
          "519:     }",
          "521:         return -1;",
          "523:     for (;;) {",
          "525:         if (!size)",
          "526:             break;",
          "528:             return -1;",
          "532:             case AMF_DATA_TYPE_NUMBER:",
          "534:                 break;",
          "535:             case AMF_DATA_TYPE_BOOL:",
          "537:                 break;",
          "538:             case AMF_DATA_TYPE_STRING:",
          "541:                 break;",
          "542:             default:",
          "543:                 return -1;",
          "544:             }",
          "545:             return 0;",
          "546:         }",
          "549:             return -1;",
          "551:     }",
          "552:     return -1;",
          "553: }",
          "555: static const char* rtmp_packet_type(int type)",
          "556: {",
          "557:     switch (type) {",
          "",
          "[Removed Lines]",
          "508: int ff_amf_get_field_value(const uint8_t *data, const uint8_t *data_end,",
          "514:     while (*data != AMF_DATA_TYPE_OBJECT && data < data_end) {",
          "515:         len = ff_amf_tag_size(data, data_end);",
          "516:         if (len < 0)",
          "517:             len = data_end - data;",
          "518:         data += len;",
          "520:     if (data_end - data < 3)",
          "522:     data++;",
          "524:         int size = bytestream_get_be16(&data);",
          "527:         if (size < 0 || size >= data_end - data)",
          "529:         data += size;",
          "530:         if (size == namelen && !memcmp(data-size, name, namelen)) {",
          "531:             switch (*data++) {",
          "533:                 snprintf(dst, dst_size, \"%g\", av_int2double(AV_RB64(data)));",
          "536:                 snprintf(dst, dst_size, \"%s\", *data ? \"true\" : \"false\");",
          "539:                 len = bytestream_get_be16(&data);",
          "540:                 av_strlcpy(dst, data, FFMIN(len+1, dst_size));",
          "547:         len = ff_amf_tag_size(data, data_end);",
          "548:         if (len < 0 || len >= data_end - data)",
          "550:         data += len;",
          "",
          "[Added Lines]",
          "508: static int amf_get_field_value2(GetByteContext *gb,",
          "514:     while (bytestream2_peek_byte(gb) != AMF_DATA_TYPE_OBJECT && bytestream2_get_bytes_left(gb) > 0) {",
          "515:         int ret = amf_tag_skip(gb);",
          "516:         if (ret < 0)",
          "517:             return -1;",
          "519:     if (bytestream2_get_bytes_left(gb) < 3)",
          "521:     bytestream2_get_byte(gb);",
          "524:         int size = bytestream2_get_be16(gb);",
          "527:         if (size < 0 || size >= bytestream2_get_bytes_left(gb))",
          "529:         bytestream2_skip(gb, size);",
          "530:         if (size == namelen && !memcmp(gb->buffer-size, name, namelen)) {",
          "531:             switch (bytestream2_get_byte(gb)) {",
          "533:                 snprintf(dst, dst_size, \"%g\", av_int2double(bytestream2_get_be64(gb)));",
          "536:                 snprintf(dst, dst_size, \"%s\", bytestream2_get_byte(gb) ? \"true\" : \"false\");",
          "539:                 len = bytestream2_get_be16(gb);",
          "540:                 if (dst_size < 1)",
          "541:                     return -1;",
          "542:                 if (dst_size < len + 1)",
          "543:                     len = dst_size - 1;",
          "544:                 bytestream2_get_buffer(gb, dst, len);",
          "545:                 dst[len] = 0;",
          "552:         len = amf_tag_skip(gb);",
          "553:         if (len < 0 || bytestream2_get_bytes_left(gb) <= 0)",
          "559: int ff_amf_get_field_value(const uint8_t *data, const uint8_t *data_end,",
          "560:                            const uint8_t *name, uint8_t *dst, int dst_size)",
          "561: {",
          "562:     GetByteContext gb;",
          "564:     if (data >= data_end)",
          "565:         return -1;",
          "567:     bytestream2_init(&gb, data, data_end - data);",
          "569:     return amf_get_field_value2(&gb, name, dst, dst_size);",
          "570: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b375cc8bb74a33a7b38175023ee337b1c378281f",
      "candidate_info": {
        "commit_hash": "b375cc8bb74a33a7b38175023ee337b1c378281f",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/b375cc8bb74a33a7b38175023ee337b1c378281f",
        "files": [
          "libavformat/rtmppkt.c"
        ],
        "message": "avformat/rtmppkt: Convert ff_amf_get_field_value() to bytestream2\n\nFixes: out of array accesses\n\nFound-by: JunDong Xie of Ant-financial Light-Year Security Lab\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit ffcc82219cef0928bed2d558b19ef6ea35634130)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavformat/rtmppkt.c||libavformat/rtmppkt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/rtmppkt.c||libavformat/rtmppkt.c"
          ],
          "candidate": [
            "libavformat/rtmppkt.c||libavformat/rtmppkt.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/rtmppkt.c||libavformat/rtmppkt.c": [
          "File: libavformat/rtmppkt.c -> libavformat/rtmppkt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "505:     return bytestream2_tell(&gb);",
          "506: }",
          "509:                            const uint8_t *name, uint8_t *dst, int dst_size)",
          "510: {",
          "511:     int namelen = strlen(name);",
          "512:     int len;",
          "519:     }",
          "521:         return -1;",
          "523:     for (;;) {",
          "525:         if (!size)",
          "526:             break;",
          "528:             return -1;",
          "532:             case AMF_DATA_TYPE_NUMBER:",
          "534:                 break;",
          "535:             case AMF_DATA_TYPE_BOOL:",
          "537:                 break;",
          "538:             case AMF_DATA_TYPE_STRING:",
          "541:                 break;",
          "542:             default:",
          "543:                 return -1;",
          "544:             }",
          "545:             return 0;",
          "546:         }",
          "549:             return -1;",
          "551:     }",
          "552:     return -1;",
          "553: }",
          "555: static const char* rtmp_packet_type(int type)",
          "556: {",
          "557:     switch (type) {",
          "",
          "[Removed Lines]",
          "508: int ff_amf_get_field_value(const uint8_t *data, const uint8_t *data_end,",
          "514:     while (*data != AMF_DATA_TYPE_OBJECT && data < data_end) {",
          "515:         len = ff_amf_tag_size(data, data_end);",
          "516:         if (len < 0)",
          "517:             len = data_end - data;",
          "518:         data += len;",
          "520:     if (data_end - data < 3)",
          "522:     data++;",
          "524:         int size = bytestream_get_be16(&data);",
          "527:         if (size < 0 || size >= data_end - data)",
          "529:         data += size;",
          "530:         if (size == namelen && !memcmp(data-size, name, namelen)) {",
          "531:             switch (*data++) {",
          "533:                 snprintf(dst, dst_size, \"%g\", av_int2double(AV_RB64(data)));",
          "536:                 snprintf(dst, dst_size, \"%s\", *data ? \"true\" : \"false\");",
          "539:                 len = bytestream_get_be16(&data);",
          "540:                 av_strlcpy(dst, data, FFMIN(len+1, dst_size));",
          "547:         len = ff_amf_tag_size(data, data_end);",
          "548:         if (len < 0 || len >= data_end - data)",
          "550:         data += len;",
          "",
          "[Added Lines]",
          "508: static int amf_get_field_value2(GetByteContext *gb,",
          "514:     while (bytestream2_peek_byte(gb) != AMF_DATA_TYPE_OBJECT && bytestream2_get_bytes_left(gb) > 0) {",
          "515:         int ret = amf_tag_skip(gb);",
          "516:         if (ret < 0)",
          "517:             return -1;",
          "519:     if (bytestream2_get_bytes_left(gb) < 3)",
          "521:     bytestream2_get_byte(gb);",
          "524:         int size = bytestream2_get_be16(gb);",
          "527:         if (size < 0 || size >= bytestream2_get_bytes_left(gb))",
          "529:         bytestream2_skip(gb, size);",
          "530:         if (size == namelen && !memcmp(gb->buffer-size, name, namelen)) {",
          "531:             switch (bytestream2_get_byte(gb)) {",
          "533:                 snprintf(dst, dst_size, \"%g\", av_int2double(bytestream2_get_be64(gb)));",
          "536:                 snprintf(dst, dst_size, \"%s\", bytestream2_get_byte(gb) ? \"true\" : \"false\");",
          "539:                 len = bytestream2_get_be16(gb);",
          "540:                 if (dst_size < 1)",
          "541:                     return -1;",
          "542:                 if (dst_size < len + 1)",
          "543:                     len = dst_size - 1;",
          "544:                 bytestream2_get_buffer(gb, dst, len);",
          "545:                 dst[len] = 0;",
          "552:         len = amf_tag_skip(gb);",
          "553:         if (len < 0 || bytestream2_get_bytes_left(gb) <= 0)",
          "559: int ff_amf_get_field_value(const uint8_t *data, const uint8_t *data_end,",
          "560:                            const uint8_t *name, uint8_t *dst, int dst_size)",
          "561: {",
          "562:     GetByteContext gb;",
          "564:     if (data >= data_end)",
          "565:         return -1;",
          "567:     bytestream2_init(&gb, data, data_end - data);",
          "569:     return amf_get_field_value2(&gb, name, dst, dst_size);",
          "570: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8f9cbb3b7e844f80e07caac40ac14a64aa938c99",
      "candidate_info": {
        "commit_hash": "8f9cbb3b7e844f80e07caac40ac14a64aa938c99",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/8f9cbb3b7e844f80e07caac40ac14a64aa938c99",
        "files": [
          "libavformat/rtmppkt.c"
        ],
        "message": "avformat/rtmppkt: Convert ff_amf_get_field_value() to bytestream2\n\nFixes: out of array accesses\n\nFound-by: JunDong Xie of Ant-financial Light-Year Security Lab\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit ffcc82219cef0928bed2d558b19ef6ea35634130)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavformat/rtmppkt.c||libavformat/rtmppkt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/rtmppkt.c||libavformat/rtmppkt.c"
          ],
          "candidate": [
            "libavformat/rtmppkt.c||libavformat/rtmppkt.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/rtmppkt.c||libavformat/rtmppkt.c": [
          "File: libavformat/rtmppkt.c -> libavformat/rtmppkt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "505:     return bytestream2_tell(&gb);",
          "506: }",
          "509:                            const uint8_t *name, uint8_t *dst, int dst_size)",
          "510: {",
          "511:     int namelen = strlen(name);",
          "512:     int len;",
          "519:     }",
          "521:         return -1;",
          "523:     for (;;) {",
          "525:         if (!size)",
          "526:             break;",
          "528:             return -1;",
          "532:             case AMF_DATA_TYPE_NUMBER:",
          "534:                 break;",
          "535:             case AMF_DATA_TYPE_BOOL:",
          "537:                 break;",
          "538:             case AMF_DATA_TYPE_STRING:",
          "541:                 break;",
          "542:             default:",
          "543:                 return -1;",
          "544:             }",
          "545:             return 0;",
          "546:         }",
          "549:             return -1;",
          "551:     }",
          "552:     return -1;",
          "553: }",
          "555: static const char* rtmp_packet_type(int type)",
          "556: {",
          "557:     switch (type) {",
          "",
          "[Removed Lines]",
          "508: int ff_amf_get_field_value(const uint8_t *data, const uint8_t *data_end,",
          "514:     while (*data != AMF_DATA_TYPE_OBJECT && data < data_end) {",
          "515:         len = ff_amf_tag_size(data, data_end);",
          "516:         if (len < 0)",
          "517:             len = data_end - data;",
          "518:         data += len;",
          "520:     if (data_end - data < 3)",
          "522:     data++;",
          "524:         int size = bytestream_get_be16(&data);",
          "527:         if (size < 0 || size >= data_end - data)",
          "529:         data += size;",
          "530:         if (size == namelen && !memcmp(data-size, name, namelen)) {",
          "531:             switch (*data++) {",
          "533:                 snprintf(dst, dst_size, \"%g\", av_int2double(AV_RB64(data)));",
          "536:                 snprintf(dst, dst_size, \"%s\", *data ? \"true\" : \"false\");",
          "539:                 len = bytestream_get_be16(&data);",
          "540:                 av_strlcpy(dst, data, FFMIN(len+1, dst_size));",
          "547:         len = ff_amf_tag_size(data, data_end);",
          "548:         if (len < 0 || len >= data_end - data)",
          "550:         data += len;",
          "",
          "[Added Lines]",
          "508: static int amf_get_field_value2(GetByteContext *gb,",
          "514:     while (bytestream2_peek_byte(gb) != AMF_DATA_TYPE_OBJECT && bytestream2_get_bytes_left(gb) > 0) {",
          "515:         int ret = amf_tag_skip(gb);",
          "516:         if (ret < 0)",
          "517:             return -1;",
          "519:     if (bytestream2_get_bytes_left(gb) < 3)",
          "521:     bytestream2_get_byte(gb);",
          "524:         int size = bytestream2_get_be16(gb);",
          "527:         if (size < 0 || size >= bytestream2_get_bytes_left(gb))",
          "529:         bytestream2_skip(gb, size);",
          "530:         if (size == namelen && !memcmp(gb->buffer-size, name, namelen)) {",
          "531:             switch (bytestream2_get_byte(gb)) {",
          "533:                 snprintf(dst, dst_size, \"%g\", av_int2double(bytestream2_get_be64(gb)));",
          "536:                 snprintf(dst, dst_size, \"%s\", bytestream2_get_byte(gb) ? \"true\" : \"false\");",
          "539:                 len = bytestream2_get_be16(gb);",
          "540:                 if (dst_size < 1)",
          "541:                     return -1;",
          "542:                 if (dst_size < len + 1)",
          "543:                     len = dst_size - 1;",
          "544:                 bytestream2_get_buffer(gb, dst, len);",
          "545:                 dst[len] = 0;",
          "552:         len = amf_tag_skip(gb);",
          "553:         if (len < 0 || bytestream2_get_bytes_left(gb) <= 0)",
          "559: int ff_amf_get_field_value(const uint8_t *data, const uint8_t *data_end,",
          "560:                            const uint8_t *name, uint8_t *dst, int dst_size)",
          "561: {",
          "562:     GetByteContext gb;",
          "564:     if (data >= data_end)",
          "565:         return -1;",
          "567:     bytestream2_init(&gb, data, data_end - data);",
          "569:     return amf_get_field_value2(&gb, name, dst, dst_size);",
          "570: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "06ce68d8a07d6365d67fdd8ed3c1e422f97a43fa",
      "candidate_info": {
        "commit_hash": "06ce68d8a07d6365d67fdd8ed3c1e422f97a43fa",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/06ce68d8a07d6365d67fdd8ed3c1e422f97a43fa",
        "files": [
          "libavformat/rtmppkt.c"
        ],
        "message": "avformat/rtmppkt: Convert ff_amf_get_field_value() to bytestream2\n\nFixes: out of array accesses\n\nFound-by: JunDong Xie of Ant-financial Light-Year Security Lab\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit ffcc82219cef0928bed2d558b19ef6ea35634130)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavformat/rtmppkt.c||libavformat/rtmppkt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/rtmppkt.c||libavformat/rtmppkt.c"
          ],
          "candidate": [
            "libavformat/rtmppkt.c||libavformat/rtmppkt.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/rtmppkt.c||libavformat/rtmppkt.c": [
          "File: libavformat/rtmppkt.c -> libavformat/rtmppkt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "505:     return bytestream2_tell(&gb);",
          "506: }",
          "509:                            const uint8_t *name, uint8_t *dst, int dst_size)",
          "510: {",
          "511:     int namelen = strlen(name);",
          "512:     int len;",
          "519:     }",
          "521:         return -1;",
          "523:     for (;;) {",
          "525:         if (!size)",
          "526:             break;",
          "528:             return -1;",
          "532:             case AMF_DATA_TYPE_NUMBER:",
          "534:                 break;",
          "535:             case AMF_DATA_TYPE_BOOL:",
          "537:                 break;",
          "538:             case AMF_DATA_TYPE_STRING:",
          "541:                 break;",
          "542:             default:",
          "543:                 return -1;",
          "544:             }",
          "545:             return 0;",
          "546:         }",
          "549:             return -1;",
          "551:     }",
          "552:     return -1;",
          "553: }",
          "555: static const char* rtmp_packet_type(int type)",
          "556: {",
          "557:     switch (type) {",
          "",
          "[Removed Lines]",
          "508: int ff_amf_get_field_value(const uint8_t *data, const uint8_t *data_end,",
          "514:     while (*data != AMF_DATA_TYPE_OBJECT && data < data_end) {",
          "515:         len = ff_amf_tag_size(data, data_end);",
          "516:         if (len < 0)",
          "517:             len = data_end - data;",
          "518:         data += len;",
          "520:     if (data_end - data < 3)",
          "522:     data++;",
          "524:         int size = bytestream_get_be16(&data);",
          "527:         if (size < 0 || size >= data_end - data)",
          "529:         data += size;",
          "530:         if (size == namelen && !memcmp(data-size, name, namelen)) {",
          "531:             switch (*data++) {",
          "533:                 snprintf(dst, dst_size, \"%g\", av_int2double(AV_RB64(data)));",
          "536:                 snprintf(dst, dst_size, \"%s\", *data ? \"true\" : \"false\");",
          "539:                 len = bytestream_get_be16(&data);",
          "540:                 av_strlcpy(dst, data, FFMIN(len+1, dst_size));",
          "547:         len = ff_amf_tag_size(data, data_end);",
          "548:         if (len < 0 || len >= data_end - data)",
          "550:         data += len;",
          "",
          "[Added Lines]",
          "508: static int amf_get_field_value2(GetByteContext *gb,",
          "514:     while (bytestream2_peek_byte(gb) != AMF_DATA_TYPE_OBJECT && bytestream2_get_bytes_left(gb) > 0) {",
          "515:         int ret = amf_tag_skip(gb);",
          "516:         if (ret < 0)",
          "517:             return -1;",
          "519:     if (bytestream2_get_bytes_left(gb) < 3)",
          "521:     bytestream2_get_byte(gb);",
          "524:         int size = bytestream2_get_be16(gb);",
          "527:         if (size < 0 || size >= bytestream2_get_bytes_left(gb))",
          "529:         bytestream2_skip(gb, size);",
          "530:         if (size == namelen && !memcmp(gb->buffer-size, name, namelen)) {",
          "531:             switch (bytestream2_get_byte(gb)) {",
          "533:                 snprintf(dst, dst_size, \"%g\", av_int2double(bytestream2_get_be64(gb)));",
          "536:                 snprintf(dst, dst_size, \"%s\", bytestream2_get_byte(gb) ? \"true\" : \"false\");",
          "539:                 len = bytestream2_get_be16(gb);",
          "540:                 if (dst_size < 1)",
          "541:                     return -1;",
          "542:                 if (dst_size < len + 1)",
          "543:                     len = dst_size - 1;",
          "544:                 bytestream2_get_buffer(gb, dst, len);",
          "545:                 dst[len] = 0;",
          "552:         len = amf_tag_skip(gb);",
          "553:         if (len < 0 || bytestream2_get_bytes_left(gb) <= 0)",
          "559: int ff_amf_get_field_value(const uint8_t *data, const uint8_t *data_end,",
          "560:                            const uint8_t *name, uint8_t *dst, int dst_size)",
          "561: {",
          "562:     GetByteContext gb;",
          "564:     if (data >= data_end)",
          "565:         return -1;",
          "567:     bytestream2_init(&gb, data, data_end - data);",
          "569:     return amf_get_field_value2(&gb, name, dst, dst_size);",
          "570: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}