{
  "cve_id": "CVE-2020-10878",
  "cve_desc": "Perl before 5.30.3 has an integer overflow related to mishandling of a \"PL_regkind[OP(n)] == NOTHING\" situation. A crafted regular expression could lead to malformed bytecode with a possibility of instruction injection.",
  "repo": "perl/perl5",
  "patch_hash": "3295b48defa0f8570114877b063fe546dd348b3c",
  "patch_info": {
    "commit_hash": "3295b48defa0f8570114877b063fe546dd348b3c",
    "repo": "perl/perl5",
    "commit_url": "https://github.com/perl/perl5/commit/3295b48defa0f8570114877b063fe546dd348b3c",
    "files": [
      "regcomp.c"
    ],
    "message": "regcomp: use long jumps if there is any possibility of overflow\n\n(CVE-2020-10878) Be conservative for backporting, we'll aim to do\nsomething more aggressive for bleadperl.\n\n(cherry picked from commit 9d7759db46f3b31b1d3f79c44266b6ba42a47fc6)",
    "before_after_code_files": [
      "regcomp.c||regcomp.c"
    ]
  },
  "patch_diff": {
    "regcomp.c||regcomp.c": [
      "File: regcomp.c -> regcomp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "7764:         RExC_total_parens = RExC_npar;",
      "7765:     }",
      "7766:     else if (! MUST_RESTART(flags)) {",
      "7767:  ReREFCNT_dec(Rx);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7768:         if (RExC_size > U16_MAX && ! RExC_use_BRANCHJ) {",
      "7769:             RExC_use_BRANCHJ = TRUE;",
      "7770:             flags |= RESTART_PARSE;",
      "7771:         }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4b4b1fbd0d43429c43d5de8857f3266daba1dd66",
      "candidate_info": {
        "commit_hash": "4b4b1fbd0d43429c43d5de8857f3266daba1dd66",
        "repo": "perl/perl5",
        "commit_url": "https://github.com/perl/perl5/commit/4b4b1fbd0d43429c43d5de8857f3266daba1dd66",
        "files": [
          "regcomp.c"
        ],
        "message": "regcomp: use long jumps if there is any possibility of overflow\n\n(CVE-2020-10878) Be conservative for backporting, we'll aim to do\nsomething more aggressive for bleadperl.\n\n(cherry picked from commit 8243e7d09fa7bd65b70935e3170c6abda3e34917)",
        "before_after_code_files": [
          "regcomp.c||regcomp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "regcomp.c||regcomp.c"
          ],
          "candidate": [
            "regcomp.c||regcomp.c"
          ]
        }
      },
      "candidate_diff": {
        "regcomp.c||regcomp.c": [
          "File: regcomp.c -> regcomp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7879:         RExC_total_parens = RExC_npar;",
          "7880:     }",
          "7881:     else if (! MUST_RESTART(flags)) {",
          "7882:  ReREFCNT_dec(Rx);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7883:         if (RExC_size > U16_MAX && ! RExC_use_BRANCHJ) {",
          "7884:             RExC_use_BRANCHJ = TRUE;",
          "7885:             flags |= RESTART_PARSE;",
          "7886:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}