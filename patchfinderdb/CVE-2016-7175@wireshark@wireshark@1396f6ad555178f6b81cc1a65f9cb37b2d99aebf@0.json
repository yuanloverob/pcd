{
  "cve_id": "CVE-2016-7175",
  "cve_desc": "epan/dissectors/packet-qnet6.c in the QNX6 QNET dissector in Wireshark 2.x before 2.0.6 mishandles MAC address data, which allows remote attackers to cause a denial of service (out-of-bounds read and application crash) via a crafted packet.",
  "repo": "wireshark/wireshark",
  "patch_hash": "1396f6ad555178f6b81cc1a65f9cb37b2d99aebf",
  "patch_info": {
    "commit_hash": "1396f6ad555178f6b81cc1a65f9cb37b2d99aebf",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/1396f6ad555178f6b81cc1a65f9cb37b2d99aebf",
    "files": [
      "epan/dissectors/packet-qnet6.c"
    ],
    "message": "qnet6: fix display of MAC addresses and avoid overflow\n\nThe MAC address is binary data, do not use tvb_get_string_enc since it\nsubstituted some bytes by a Unicode replacement character. Use FT_ETHER\ninstead of FT_STRING to fix the display.\n\nBug: 11850\nChange-Id: I3f02cfa13e8fccc18a199e4e293580c183eeddd1\nReviewed-on: https://code.wireshark.org/review/16965\nPetri-Dish: Peter Wu <peter@lekensteyn.nl>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-qnet6.c||epan/dissectors/packet-qnet6.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-qnet6.c||epan/dissectors/packet-qnet6.c": [
      "File: epan/dissectors/packet-qnet6.c -> epan/dissectors/packet-qnet6.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: #include <epan/packet.h>",
      "26: #include <epan/prefs.h>",
      "28: #include <epan/etypes.h>",
      "29: #include <epan/crc32-tvb.h>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "27: #include <epan/to_str.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1563:           sstree = proto_tree_add_subtree(stree, tvb, *poffset, 4 * 2,",
      "1564:               ett_qnet6_lr_src_name_subtree, NULL, \"domain\");",
      "1565:           break;",
      "1567:           hf_index_off = hf_qnet6_lr_dst_addr_off;",
      "1568:           hf_index_len = hf_qnet6_lr_dst_addr_len;",
      "1569:           hf_index = hf_qnet6_lr_dst_addr_generated;",
      "",
      "[Removed Lines]",
      "1566:         case QNET6_LR_PAIRS - 1:",
      "",
      "[Added Lines]",
      "1567:         case 5:",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1583:       if ((off <= rlen) && (len <= rlen))",
      "1594:             {",
      "1597:             }",
      "1598:           else",
      "1599:             {",
      "1602:                 {",
      "1604:                   PROTO_ITEM_SET_GENERATED(ti);",
      "1605:                 }",
      "1606:             }",
      "1607:         }",
      "1608:       else",
      "",
      "[Removed Lines]",
      "1585:           name[i] = tvb_get_string_enc(wmem_packet_scope(),",
      "1586:                                        tvb,",
      "1587:                                        lr_start + off + QNX_QNET6_LR_PKT_SIZE /* sizeof(struct qnet6_lr_pkt) */,",
      "1588:                                        len,",
      "1589:                                        ENC_ASCII|ENC_NA);",
      "1593:           if (i != 2 && i != QNET6_LR_PAIRS - 1)",
      "1595:               ti = proto_tree_add_string(sstree, hf_index, tvb, lr_start + off + QNX_QNET6_LR_PKT_SIZE, len, name[i]);",
      "1596:               PROTO_ITEM_SET_GENERATED(ti);",
      "1600:               p = name[i];",
      "1601:               if (strlen(p) && (*(p + 1) == QNET_LR_SA_FAMILY_MAC))",
      "1603:                   ti = proto_tree_add_string(sstree, hf_index, tvb, lr_start + off + QNX_QNET6_LR_PKT_SIZE, len, p+2);",
      "",
      "[Added Lines]",
      "1585:         {",
      "1586:           guint addr_data_offset = lr_start + off + QNX_QNET6_LR_PKT_SIZE /* sizeof(struct qnet6_lr_pkt) */;",
      "1590:           if (i != 2 && i != 5)",
      "1592:             name[i] = tvb_get_string_enc(wmem_packet_scope(),",
      "1593:                                          tvb,",
      "1594:                                          addr_data_offset,",
      "1595:                                          len,",
      "1596:                                          ENC_ASCII|ENC_NA);",
      "1597:                 ti = proto_tree_add_string(sstree, hf_index, tvb, addr_data_offset, len, name[i]);",
      "1598:                 PROTO_ITEM_SET_GENERATED(ti);",
      "1602:               if (tvb_get_guint8(tvb, addr_data_offset + 1) == QNET_LR_SA_FAMILY_MAC && len >= 2 + 6)",
      "1604:                   name[i] = tvb_ether_to_str(tvb, addr_data_offset + 2);",
      "1605:                   ti = proto_tree_add_item(sstree, hf_index, tvb, addr_data_offset + 2, 6, ENC_NA);",
      "1608:               else",
      "1609:                 {",
      "1613:                   name[i] = NULL;",
      "1614:                 }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1615:     {",
      "1616:     case QNET_LR_TYPE_REQUEST:",
      "1617:       p = name[2];",
      "1619:         {",
      "1620:           col_add_fstr(pinfo->cinfo, COL_INFO,",
      "1622:                         name[3] ? (const char*)name[3] : \"?\", name[4] ? (const char*)name[4] : \"?\",",
      "1623:                         name[0] ? (const char*)name[0] : \"?\", name[1] ? (const char*)name[1] : \"?\",",
      "1626:         }",
      "1627:       break;",
      "1628:     case QNET_LR_TYPE_REPLY:",
      "1629:       p = name[2];",
      "1631:         {",
      "1632:           col_add_fstr(pinfo->cinfo, COL_INFO,",
      "1634:                         name[3] ? (const char*)name[3] : \"?\", name[4] ? (const char*)name[4] : \"?\",",
      "1635:                         name[0] ? (const char*)name[0] : \"?\", name[1] ? (const char*)name[1] : \"?\",",
      "1638:         }",
      "1639:       break;",
      "1640:     default:",
      "",
      "[Removed Lines]",
      "1618:       if (p && strlen(p) && (*(p + 1) == QNET_LR_SA_FAMILY_MAC))",
      "1621:                         \"Who is \\\"%s.%s\\\"? Tell \\\"%s.%s\\\"@%02x:%02x:%02x:%02x:%02x:%02x\",",
      "1630:       if (p && strlen(p) && (*(p + 1) == QNET_LR_SA_FAMILY_MAC))",
      "1633:                         \"To \\\"%s.%s\\\", \\\"%s.%s\\\" is at %02x:%02x:%02x:%02x:%02x:%02x\",",
      "",
      "[Added Lines]",
      "1627:       if (p)",
      "1630:                         \"Who is \\\"%s.%s\\\"? Tell \\\"%s.%s\\\"@%s\",",
      "1633:                         p);",
      "1638:       if (p)",
      "1641:                         \"To \\\"%s.%s\\\", \\\"%s.%s\\\" is at %s\",",
      "1644:                         p);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "4543:     },",
      "4544:     {&hf_qnet6_lr_src_addr_generated,",
      "4545:      {\"Address\", \"qnet6.lr.src.addr\",",
      "4547:       \"LR Message source address\", HFILL}",
      "4548:     },",
      "4549:     {&hf_qnet6_lr_dst,",
      "",
      "[Removed Lines]",
      "4546:       FT_STRING, BASE_NONE, NULL, 0,",
      "",
      "[Added Lines]",
      "4553:       FT_ETHER, BASE_NONE, NULL, 0,",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "4593:     },",
      "4594:     {&hf_qnet6_lr_dst_addr_generated,",
      "4595:      {\"Address\", \"qnet6.lr.dst.addr\",",
      "4597:       \"LR Message destination address\", HFILL}",
      "4598:     }",
      "",
      "[Removed Lines]",
      "4596:       FT_STRING, BASE_NONE, NULL, 0,",
      "",
      "[Added Lines]",
      "4603:       FT_ETHER, BASE_NONE, NULL, 0,",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "291e6d2ba819e029aae108dbdc4f1d14f8d1417e",
      "candidate_info": {
        "commit_hash": "291e6d2ba819e029aae108dbdc4f1d14f8d1417e",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/291e6d2ba819e029aae108dbdc4f1d14f8d1417e",
        "files": [
          "epan/dissectors/packet-qnet6.c"
        ],
        "message": "qnet6: fix display of MAC addresses and avoid overflow\n\nThe MAC address is binary data, do not use tvb_get_string_enc since it\nsubstituted some bytes by a Unicode replacement character. Use FT_ETHER\ninstead of FT_STRING to fix the display.\n\nBug: 11850\nChange-Id: I3f02cfa13e8fccc18a199e4e293580c183eeddd1\nReviewed-on: https://code.wireshark.org/review/16965\nPetri-Dish: Peter Wu <peter@lekensteyn.nl>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 1396f6ad555178f6b81cc1a65f9cb37b2d99aebf)\nReviewed-on: https://code.wireshark.org/review/17000\nReviewed-by: Peter Wu <peter@lekensteyn.nl>",
        "before_after_code_files": [
          "epan/dissectors/packet-qnet6.c||epan/dissectors/packet-qnet6.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-qnet6.c||epan/dissectors/packet-qnet6.c"
          ],
          "candidate": [
            "epan/dissectors/packet-qnet6.c||epan/dissectors/packet-qnet6.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-qnet6.c||epan/dissectors/packet-qnet6.c": [
          "File: epan/dissectors/packet-qnet6.c -> epan/dissectors/packet-qnet6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #include <epan/packet.h>",
          "26: #include <epan/prefs.h>",
          "28: #include <epan/etypes.h>",
          "29: #include <epan/crc32-tvb.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: #include <epan/to_str.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1563:           sstree = proto_tree_add_subtree(stree, tvb, *poffset, 4 * 2,",
          "1564:               ett_qnet6_lr_src_name_subtree, NULL, \"domain\");",
          "1565:           break;",
          "1567:           hf_index_off = hf_qnet6_lr_dst_addr_off;",
          "1568:           hf_index_len = hf_qnet6_lr_dst_addr_len;",
          "1569:           hf_index = hf_qnet6_lr_dst_addr_generated;",
          "",
          "[Removed Lines]",
          "1566:         case QNET6_LR_PAIRS - 1:",
          "",
          "[Added Lines]",
          "1567:         case 5:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1583:       if ((off <= rlen) && (len <= rlen))",
          "1594:             {",
          "1597:             }",
          "1598:           else",
          "1599:             {",
          "1602:                 {",
          "1604:                   PROTO_ITEM_SET_GENERATED(ti);",
          "1605:                 }",
          "1606:             }",
          "1607:         }",
          "1608:       else",
          "",
          "[Removed Lines]",
          "1585:           name[i] = tvb_get_string_enc(wmem_packet_scope(),",
          "1586:                                        tvb,",
          "1587:                                        lr_start + off + QNX_QNET6_LR_PKT_SIZE /* sizeof(struct qnet6_lr_pkt) */,",
          "1588:                                        len,",
          "1589:                                        ENC_ASCII|ENC_NA);",
          "1593:           if (i != 2 && i != QNET6_LR_PAIRS - 1)",
          "1595:               ti = proto_tree_add_string(sstree, hf_index, tvb, lr_start + off + QNX_QNET6_LR_PKT_SIZE, len, name[i]);",
          "1596:               PROTO_ITEM_SET_GENERATED(ti);",
          "1600:               p = name[i];",
          "1601:               if (strlen(p) && (*(p + 1) == QNET_LR_SA_FAMILY_MAC))",
          "1603:                   ti = proto_tree_add_string(sstree, hf_index, tvb, lr_start + off + QNX_QNET6_LR_PKT_SIZE, len, p+2);",
          "",
          "[Added Lines]",
          "1585:         {",
          "1586:           guint addr_data_offset = lr_start + off + QNX_QNET6_LR_PKT_SIZE /* sizeof(struct qnet6_lr_pkt) */;",
          "1590:           if (i != 2 && i != 5)",
          "1592:             name[i] = tvb_get_string_enc(wmem_packet_scope(),",
          "1593:                                          tvb,",
          "1594:                                          addr_data_offset,",
          "1595:                                          len,",
          "1596:                                          ENC_ASCII|ENC_NA);",
          "1597:                 ti = proto_tree_add_string(sstree, hf_index, tvb, addr_data_offset, len, name[i]);",
          "1598:                 PROTO_ITEM_SET_GENERATED(ti);",
          "1602:               if (tvb_get_guint8(tvb, addr_data_offset + 1) == QNET_LR_SA_FAMILY_MAC && len >= 2 + 6)",
          "1604:                   name[i] = tvb_ether_to_str(tvb, addr_data_offset + 2);",
          "1605:                   ti = proto_tree_add_item(sstree, hf_index, tvb, addr_data_offset + 2, 6, ENC_NA);",
          "1608:               else",
          "1609:                 {",
          "1613:                   name[i] = NULL;",
          "1614:                 }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1615:     {",
          "1616:     case QNET_LR_TYPE_REQUEST:",
          "1617:       p = name[2];",
          "1619:         {",
          "1620:           col_add_fstr(pinfo->cinfo, COL_INFO,",
          "1622:                         name[3] ? (const char*)name[3] : \"?\", name[4] ? (const char*)name[4] : \"?\",",
          "1623:                         name[0] ? (const char*)name[0] : \"?\", name[1] ? (const char*)name[1] : \"?\",",
          "1626:         }",
          "1627:       break;",
          "1628:     case QNET_LR_TYPE_REPLY:",
          "1629:       p = name[2];",
          "1631:         {",
          "1632:           col_add_fstr(pinfo->cinfo, COL_INFO,",
          "1634:                         name[3] ? (const char*)name[3] : \"?\", name[4] ? (const char*)name[4] : \"?\",",
          "1635:                         name[0] ? (const char*)name[0] : \"?\", name[1] ? (const char*)name[1] : \"?\",",
          "1638:         }",
          "1639:       break;",
          "1640:     default:",
          "",
          "[Removed Lines]",
          "1618:       if (p && strlen(p) && (*(p + 1) == QNET_LR_SA_FAMILY_MAC))",
          "1621:                         \"Who is \\\"%s.%s\\\"? Tell \\\"%s.%s\\\"@%02x:%02x:%02x:%02x:%02x:%02x\",",
          "1630:       if (p && strlen(p) && (*(p + 1) == QNET_LR_SA_FAMILY_MAC))",
          "1633:                         \"To \\\"%s.%s\\\", \\\"%s.%s\\\" is at %02x:%02x:%02x:%02x:%02x:%02x\",",
          "",
          "[Added Lines]",
          "1627:       if (p)",
          "1630:                         \"Who is \\\"%s.%s\\\"? Tell \\\"%s.%s\\\"@%s\",",
          "1633:                         p);",
          "1638:       if (p)",
          "1641:                         \"To \\\"%s.%s\\\", \\\"%s.%s\\\" is at %s\",",
          "1644:                         p);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4543:     },",
          "4544:     {&hf_qnet6_lr_src_addr_generated,",
          "4545:      {\"Address\", \"qnet6.lr.src.addr\",",
          "4547:       \"LR Message source address\", HFILL}",
          "4548:     },",
          "4549:     {&hf_qnet6_lr_dst,",
          "",
          "[Removed Lines]",
          "4546:       FT_STRING, BASE_NONE, NULL, 0,",
          "",
          "[Added Lines]",
          "4553:       FT_ETHER, BASE_NONE, NULL, 0,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4593:     },",
          "4594:     {&hf_qnet6_lr_dst_addr_generated,",
          "4595:      {\"Address\", \"qnet6.lr.dst.addr\",",
          "4597:       \"LR Message destination address\", HFILL}",
          "4598:     }",
          "",
          "[Removed Lines]",
          "4596:       FT_STRING, BASE_NONE, NULL, 0,",
          "",
          "[Added Lines]",
          "4603:       FT_ETHER, BASE_NONE, NULL, 0,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4451dc84d4fc46c92faa82a5bffadb0cbf1f925c",
      "candidate_info": {
        "commit_hash": "4451dc84d4fc46c92faa82a5bffadb0cbf1f925c",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/4451dc84d4fc46c92faa82a5bffadb0cbf1f925c",
        "files": [
          "epan/dissectors/packet-qnet6.c"
        ],
        "message": "qnet6: fix display of MAC addresses and avoid overflow\n\nThe MAC address is binary data, do not use tvb_get_string_enc since it\nsubstituted some bytes by a Unicode replacement character. Use FT_ETHER\ninstead of FT_STRING to fix the display.\n\nBug: 11850\nChange-Id: I3f02cfa13e8fccc18a199e4e293580c183eeddd1\nReviewed-on: https://code.wireshark.org/review/16965\nPetri-Dish: Peter Wu <peter@lekensteyn.nl>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 1396f6ad555178f6b81cc1a65f9cb37b2d99aebf)\nReviewed-on: https://code.wireshark.org/review/17001\nReviewed-by: Peter Wu <peter@lekensteyn.nl>",
        "before_after_code_files": [
          "epan/dissectors/packet-qnet6.c||epan/dissectors/packet-qnet6.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-qnet6.c||epan/dissectors/packet-qnet6.c"
          ],
          "candidate": [
            "epan/dissectors/packet-qnet6.c||epan/dissectors/packet-qnet6.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-qnet6.c||epan/dissectors/packet-qnet6.c": [
          "File: epan/dissectors/packet-qnet6.c -> epan/dissectors/packet-qnet6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #include <epan/packet.h>",
          "26: #include <epan/prefs.h>",
          "28: #include <epan/etypes.h>",
          "29: #include <epan/crc32-tvb.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: #include <epan/to_str.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1563:           sstree = proto_tree_add_subtree(stree, tvb, *poffset, 4 * 2,",
          "1564:               ett_qnet6_lr_src_name_subtree, NULL, \"domain\");",
          "1565:           break;",
          "1567:           hf_index_off = hf_qnet6_lr_dst_addr_off;",
          "1568:           hf_index_len = hf_qnet6_lr_dst_addr_len;",
          "1569:           hf_index = hf_qnet6_lr_dst_addr_generated;",
          "",
          "[Removed Lines]",
          "1566:         case QNET6_LR_PAIRS - 1:",
          "",
          "[Added Lines]",
          "1567:         case 5:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1583:       if ((off <= rlen) && (len <= rlen))",
          "1594:             {",
          "1597:             }",
          "1598:           else",
          "1599:             {",
          "1602:                 {",
          "1604:                   PROTO_ITEM_SET_GENERATED(ti);",
          "1605:                 }",
          "1606:             }",
          "1607:         }",
          "1608:       else",
          "",
          "[Removed Lines]",
          "1585:           name[i] = tvb_get_string_enc(wmem_packet_scope(),",
          "1586:                                        tvb,",
          "1587:                                        lr_start + off + QNX_QNET6_LR_PKT_SIZE /* sizeof(struct qnet6_lr_pkt) */,",
          "1588:                                        len,",
          "1589:                                        ENC_ASCII|ENC_NA);",
          "1593:           if (i != 2 && i != QNET6_LR_PAIRS - 1)",
          "1595:               ti = proto_tree_add_string(sstree, hf_index, tvb, lr_start + off + QNX_QNET6_LR_PKT_SIZE, len, name[i]);",
          "1596:               PROTO_ITEM_SET_GENERATED(ti);",
          "1600:               p = name[i];",
          "1601:               if (strlen(p) && (*(p + 1) == QNET_LR_SA_FAMILY_MAC))",
          "1603:                   ti = proto_tree_add_string(sstree, hf_index, tvb, lr_start + off + QNX_QNET6_LR_PKT_SIZE, len, p+2);",
          "",
          "[Added Lines]",
          "1585:         {",
          "1586:           guint addr_data_offset = lr_start + off + QNX_QNET6_LR_PKT_SIZE /* sizeof(struct qnet6_lr_pkt) */;",
          "1590:           if (i != 2 && i != 5)",
          "1592:             name[i] = tvb_get_string_enc(wmem_packet_scope(),",
          "1593:                                          tvb,",
          "1594:                                          addr_data_offset,",
          "1595:                                          len,",
          "1596:                                          ENC_ASCII|ENC_NA);",
          "1597:                 ti = proto_tree_add_string(sstree, hf_index, tvb, addr_data_offset, len, name[i]);",
          "1598:                 PROTO_ITEM_SET_GENERATED(ti);",
          "1602:               if (tvb_get_guint8(tvb, addr_data_offset + 1) == QNET_LR_SA_FAMILY_MAC && len >= 2 + 6)",
          "1604:                   name[i] = tvb_ether_to_str(tvb, addr_data_offset + 2);",
          "1605:                   ti = proto_tree_add_item(sstree, hf_index, tvb, addr_data_offset + 2, 6, ENC_NA);",
          "1608:               else",
          "1609:                 {",
          "1613:                   name[i] = NULL;",
          "1614:                 }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1615:     {",
          "1616:     case QNET_LR_TYPE_REQUEST:",
          "1617:       p = name[2];",
          "1619:         {",
          "1620:           col_add_fstr(pinfo->cinfo, COL_INFO,",
          "1622:                         name[3] ? (char*)name[3] : \"?\", name[4] ? (char*)name[4] : \"?\",",
          "1623:                         name[0] ? (char*)name[0] : \"?\", name[1] ? (char*)name[1] : \"?\",",
          "1626:         }",
          "1627:       break;",
          "1628:     case QNET_LR_TYPE_REPLY:",
          "1629:       p = name[2];",
          "1631:         {",
          "1632:           col_add_fstr(pinfo->cinfo, COL_INFO,",
          "1634:                         name[3] ? (char*)name[3] : \"?\", name[4] ? (char*)name[4] : \"?\",",
          "1635:                         name[0] ? (char*)name[0] : \"?\", name[1] ? (char*)name[1] : \"?\",",
          "1638:         }",
          "1639:       break;",
          "1640:     default:",
          "",
          "[Removed Lines]",
          "1618:       if (p && strlen(p) && (*(p + 1) == QNET_LR_SA_FAMILY_MAC))",
          "1621:                         \"Who is \\\"%s.%s\\\"? Tell \\\"%s.%s\\\"@%02x:%02x:%02x:%02x:%02x:%02x\",",
          "1630:       if (p && strlen(p) && (*(p + 1) == QNET_LR_SA_FAMILY_MAC))",
          "1633:                         \"To \\\"%s.%s\\\", \\\"%s.%s\\\" is at %02x:%02x:%02x:%02x:%02x:%02x\",",
          "",
          "[Added Lines]",
          "1627:       if (p)",
          "1630:                         \"Who is \\\"%s.%s\\\"? Tell \\\"%s.%s\\\"@%s\",",
          "1633:                         p);",
          "1638:       if (p)",
          "1641:                         \"To \\\"%s.%s\\\", \\\"%s.%s\\\" is at %s\",",
          "1644:                         p);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4543:     },",
          "4544:     {&hf_qnet6_lr_src_addr_generated,",
          "4545:      {\"Address\", \"qnet6.lr.src.addr\",",
          "4547:       \"LR Message source address\", HFILL}",
          "4548:     },",
          "4549:     {&hf_qnet6_lr_dst,",
          "",
          "[Removed Lines]",
          "4546:       FT_STRING, BASE_NONE, NULL, 0,",
          "",
          "[Added Lines]",
          "4553:       FT_ETHER, BASE_NONE, NULL, 0,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4593:     },",
          "4594:     {&hf_qnet6_lr_dst_addr_generated,",
          "4595:      {\"Address\", \"qnet6.lr.dst.addr\",",
          "4597:       \"LR Message destination address\", HFILL}",
          "4598:     }",
          "",
          "[Removed Lines]",
          "4596:       FT_STRING, BASE_NONE, NULL, 0,",
          "",
          "[Added Lines]",
          "4603:       FT_ETHER, BASE_NONE, NULL, 0,",
          "",
          "---------------"
        ]
      }
    }
  ]
}