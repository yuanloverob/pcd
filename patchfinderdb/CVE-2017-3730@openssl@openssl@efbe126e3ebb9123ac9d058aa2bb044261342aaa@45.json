{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "263390c32cd4f6baefd41346407eee51c1fd3fa2",
      "candidate_info": {
        "commit_hash": "263390c32cd4f6baefd41346407eee51c1fd3fa2",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/263390c32cd4f6baefd41346407eee51c1fd3fa2",
        "files": [
          "ssl/ssl_lib.c"
        ],
        "message": "Don't read uninitialised data for short session IDs.\n\nWhile it's always safe to read |SSL_MAX_SSL_SESSION_ID_LENGTH| bytes\nfrom an |SSL_SESSION|'s |session_id| array, the hash function would do\nso with without considering if all those bytes had been written to.\n\nThis change checks |session_id_length| before possibly reading\nuninitialised memory. Since the result of the hash function was already\nattacker controlled, and since a lookup of a short session ID will\nalways fail, it doesn't appear that this is anything more than a clean\nup.\n\nIn particular, |ssl_get_prev_session| uses a stack-allocated placeholder\n|SSL_SESSION| as a lookup key, so the |session_id| array may be\nuninitialised.\n\nThis was originally found with libFuzzer and MSan in\nhttps://boringssl.googlesource.com/boringssl/+/e976e4349d693b4bbb97e1694f45be5a1b22c8c7,\nthen by Robert Swiecki with honggfuzz and MSan here. Thanks to both.\n\nReviewed-by: Geoff Thorpe <geoff@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2583)\n(cherry picked from commit bd5d27c1c6d3f83464ddf5124f18a2cac2cbb37f)",
        "before_after_code_files": [
          "ssl/ssl_lib.c||ssl/ssl_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/ssl_lib.c||ssl/ssl_lib.c": [
          "File: ssl/ssl_lib.c -> ssl/ssl_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2306: static unsigned long ssl_session_hash(const SSL_SESSION *a)",
          "2307: {",
          "2308:     unsigned long l;",
          "2310:     l = (unsigned long)",
          "2315:     return (l);",
          "2316: }",
          "",
          "[Removed Lines]",
          "2311:         ((unsigned int)a->session_id[0]) |",
          "2312:         ((unsigned int)a->session_id[1] << 8L) |",
          "2313:         ((unsigned long)a->session_id[2] << 16L) |",
          "2314:         ((unsigned long)a->session_id[3] << 24L);",
          "",
          "[Added Lines]",
          "2308:     const unsigned char *session_id = a->session_id;",
          "2310:     unsigned char tmp_storage[4];",
          "2312:     if (a->session_id_length < sizeof(tmp_storage)) {",
          "2313:         memset(tmp_storage, 0, sizeof(tmp_storage));",
          "2314:         memcpy(tmp_storage, a->session_id, a->session_id_length);",
          "2315:         session_id = tmp_storage;",
          "2316:     }",
          "2319:         ((unsigned long)session_id[0]) |",
          "2320:         ((unsigned long)session_id[1] << 8L) |",
          "2321:         ((unsigned long)session_id[2] << 16L) |",
          "2322:         ((unsigned long)session_id[3] << 24L);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "20b53c3efedd192c5a4050bfd44d317e5d802d2e",
      "candidate_info": {
        "commit_hash": "20b53c3efedd192c5a4050bfd44d317e5d802d2e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/20b53c3efedd192c5a4050bfd44d317e5d802d2e",
        "files": [
          "crypto/init.c"
        ],
        "message": "Add a warning stipulating how things should be coded in ossl_init_base\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1922)\n(cherry picked from commit 8aa9cf7e655ae1e41f283fbf16dcc810970058a0)",
        "before_after_code_files": [
          "crypto/init.c||crypto/init.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/init.c||crypto/init.c": [
          "File: crypto/init.c -> crypto/init.c"
        ]
      }
    },
    {
      "candidate_hash": "ca423a693a619b38fb96d94b0385f8ce91a8e759",
      "candidate_info": {
        "commit_hash": "ca423a693a619b38fb96d94b0385f8ce91a8e759",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ca423a693a619b38fb96d94b0385f8ce91a8e759",
        "files": [
          "crypto/des/set_key.c",
          "doc/crypto/DES_random_key.pod"
        ],
        "message": "DES keys are not 7 days long.\n\nCLA: trivial\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2604)\n\n(cherry picked from commit 4fd7b54dc224930a0ce6dd67b35c598c5072857c)",
        "before_after_code_files": [
          "crypto/des/set_key.c||crypto/des/set_key.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/des/set_key.c||crypto/des/set_key.c": [
          "File: crypto/des/set_key.c -> crypto/des/set_key.c"
        ]
      }
    },
    {
      "candidate_hash": "1850451676d0f65ef59013750ae942a5d3e7751f",
      "candidate_info": {
        "commit_hash": "1850451676d0f65ef59013750ae942a5d3e7751f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/1850451676d0f65ef59013750ae942a5d3e7751f",
        "files": [
          "apps/rehash.c",
          "doc/apps/rehash.pod",
          "tools/c_rehash.in"
        ],
        "message": "Add -h and -help for c_rehash script and app\n\nResolves GH1515 and GH1509.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(cherry picked from commit 7d959c358a09244bcaea601121b276529ff437ce)",
        "before_after_code_files": [
          "apps/rehash.c||apps/rehash.c",
          "tools/c_rehash.in||tools/c_rehash.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/rehash.c||apps/rehash.c": [
          "File: apps/rehash.c -> apps/rehash.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "403:     {OPT_HELP_STR, 1, '-', \"Usage: %s [options] [cert-directory...]\\n\"},",
          "404:     {OPT_HELP_STR, 1, '-', \"Valid options are:\\n\"},",
          "405:     {\"help\", OPT_HELP, '-', \"Display this summary\"},",
          "406:     {\"compat\", OPT_COMPAT, '-', \"Create both new- and old-style hash links\"},",
          "407:     {\"old\", OPT_OLD, '-', \"Use old-style hash to generate links\"},",
          "408:     {\"n\", OPT_N, '-', \"Do not remove existing links\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "406:     {\"h\", OPT_HELP, '-', \"Display this summary\"},",
          "",
          "---------------"
        ],
        "tools/c_rehash.in||tools/c_rehash.in": [
          "File: tools/c_rehash.in -> tools/c_rehash.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:     if ( $flag eq '-old') {",
          "31:      $x509hash = \"-subject_hash_old\";",
          "32:      $crlhash = \"-hash_old\";",
          "34:      help();",
          "35:     } elsif ( $flag eq '-n' ) {",
          "36:      $removelinks = 0;",
          "",
          "[Removed Lines]",
          "33:     } elsif ( $flag eq '-h') {",
          "",
          "[Added Lines]",
          "33:     } elsif ( $flag eq '-h' || $flag eq '-help' ) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38:      $verbose++;",
          "39:     }",
          "40:     else {",
          "42:      exit 1;",
          "43:     }",
          "44: }",
          "46: sub help {",
          "48:  print \"   -old use old-style digest\\n\";",
          "50:  print \"   -v print files removed and linked\\n\";",
          "51:  exit 0;",
          "52: }",
          "",
          "[Removed Lines]",
          "41:      print STDERR \"Usage error; try -help.\\n\";",
          "47:  print \"Usage: c_rehash [-old] [-h] [-v] [dirs...]\\n\";",
          "49:  print \"   -h print this help text\\n\";",
          "",
          "[Added Lines]",
          "41:      print STDERR \"Usage error; try -h.\\n\";",
          "47:  print \"Usage: c_rehash [-old] [-h] [-help] [-v] [dirs...]\\n\";",
          "49:  print \"   -h or -help print this help text\\n\";",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f2befe3444dd05700f0bb62137ceebeea06f966d",
      "candidate_info": {
        "commit_hash": "f2befe3444dd05700f0bb62137ceebeea06f966d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f2befe3444dd05700f0bb62137ceebeea06f966d",
        "files": [
          "ssl/ssl_stat.c"
        ],
        "message": "Add missing debug strings.\n\nFound by turning -Wswitch-enum on.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(cherry picked from commit 252cfef151e302dce598503de09fd3a3341810d7)",
        "before_after_code_files": [
          "ssl/ssl_stat.c||ssl/ssl_stat.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/ssl_stat.c||ssl/ssl_stat.c": [
          "File: ssl/ssl_stat.c -> ssl/ssl_stat.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:         return \"error\";",
          "45:     switch (SSL_get_state(s)) {",
          "46:     case TLS_ST_BEFORE:",
          "47:         return \"before SSL initialization\";",
          "48:     case TLS_ST_OK:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:     case TLS_ST_CR_CERT_STATUS:",
          "47:         return \"SSLv3/TLS read certificate status\";",
          "48:     case TLS_ST_CW_NEXT_PROTO:",
          "49:         return \"SSLv3/TLS write next proto\";",
          "50:     case TLS_ST_SR_NEXT_PROTO:",
          "51:         return \"SSLv3/TLS write next proto\";",
          "52:     case TLS_ST_SW_CERT_STATUS:",
          "53:         return \"SSLv3/TLS write next proto\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "116:         return \"SSLERR\";",
          "118:     switch (SSL_get_state(s)) {",
          "119:     case TLS_ST_BEFORE:",
          "120:         return \"PINIT \";",
          "121:     case TLS_ST_OK:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "127:     case TLS_ST_SR_NEXT_PROTO:",
          "128:         return \"TRNP\";",
          "129:     case TLS_ST_SW_SESSION_TICKET:",
          "130:         return \"TWST\";",
          "131:     case TLS_ST_SW_CERT_STATUS:",
          "132:         return \"TWCS\";",
          "133:     case TLS_ST_CR_CERT_STATUS:",
          "134:         return \"TRCS\";",
          "135:     case TLS_ST_CR_SESSION_TICKET:",
          "136:         return \"TRST\";",
          "137:     case TLS_ST_CW_NEXT_PROTO:",
          "138:         return \"TWNP\";",
          "",
          "---------------"
        ]
      }
    }
  ]
}