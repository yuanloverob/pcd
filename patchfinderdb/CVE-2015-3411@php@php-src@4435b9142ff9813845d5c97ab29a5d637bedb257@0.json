{
  "cve_id": "CVE-2015-3411",
  "cve_desc": "PHP before 5.4.40, 5.5.x before 5.5.24, and 5.6.x before 5.6.8 does not ensure that pathnames lack %00 sequences, which might allow remote attackers to read or write to arbitrary files via crafted input to an application that calls (1) a DOMDocument load method, (2) the xmlwriter_open_uri function, (3) the finfo_file function, or (4) the hash_hmac_file function, as demonstrated by a filename\\0.xml attack that bypasses an intended configuration in which client users may read only .xml files.",
  "repo": "php/php-src",
  "patch_hash": "4435b9142ff9813845d5c97ab29a5d637bedb257",
  "patch_info": {
    "commit_hash": "4435b9142ff9813845d5c97ab29a5d637bedb257",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/4435b9142ff9813845d5c97ab29a5d637bedb257",
    "files": [
      "ext/dom/document.c",
      "ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt",
      "ext/fileinfo/fileinfo.c",
      "ext/fileinfo/tests/finfo_file_basic.phpt",
      "ext/gd/gd.c",
      "ext/hash/hash.c",
      "ext/hash/tests/hash_hmac_file_error.phpt",
      "ext/pgsql/pgsql.c",
      "ext/standard/link.c",
      "ext/standard/streamsfuncs.c",
      "ext/xmlwriter/php_xmlwriter.c",
      "ext/zlib/zlib.c"
    ],
    "message": "Fixed bug #69353 (Missing null byte checks for paths in various PHP extensions)",
    "before_after_code_files": [
      "ext/dom/document.c||ext/dom/document.c",
      "ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt||ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt",
      "ext/fileinfo/fileinfo.c||ext/fileinfo/fileinfo.c",
      "ext/fileinfo/tests/finfo_file_basic.phpt||ext/fileinfo/tests/finfo_file_basic.phpt",
      "ext/gd/gd.c||ext/gd/gd.c",
      "ext/hash/hash.c||ext/hash/hash.c",
      "ext/hash/tests/hash_hmac_file_error.phpt||ext/hash/tests/hash_hmac_file_error.phpt",
      "ext/pgsql/pgsql.c||ext/pgsql/pgsql.c",
      "ext/standard/link.c||ext/standard/link.c",
      "ext/standard/streamsfuncs.c||ext/standard/streamsfuncs.c",
      "ext/xmlwriter/php_xmlwriter.c||ext/xmlwriter/php_xmlwriter.c",
      "ext/zlib/zlib.c||ext/zlib/zlib.c"
    ]
  },
  "patch_diff": {
    "ext/dom/document.c||ext/dom/document.c": [
      "File: ext/dom/document.c -> ext/dom/document.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1580:  xmlInitParser();",
      "1582:  if (mode == DOM_LOAD_FILE) {",
      "1583:   char *file_dest = _dom_get_valid_file_path(source, resolved_path, MAXPATHLEN  TSRMLS_CC);",
      "1584:   if (file_dest) {",
      "1585:    ctxt = xmlCreateFileParserCtxt(file_dest);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1583:   if (CHECK_NULL_PATH(source, source_len)) {",
      "1584:    return NULL;",
      "1585:   }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2169:  id = getThis();",
      "2172:   return;",
      "2173:  }",
      "",
      "[Removed Lines]",
      "2171:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s|l\", &source, &source_len, &options) == FAILURE) {",
      "",
      "[Added Lines]",
      "2174:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"p|l\", &source, &source_len, &options) == FAILURE) {",
      "",
      "---------------"
    ],
    "ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt||ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt": [
      "File: ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt -> ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "13: $doc = new DOMDocument();",
      "14: $result = $doc->loadHTMLFile(\"\");",
      "15: assert('$result === false');",
      "16: ?>",
      "17: --EXPECTF--",
      "18: %r(PHP ){0,1}%rWarning: DOMDocument::loadHTMLFile(): Empty string supplied as input %s",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "16: $doc = new DOMDocument();",
      "17: $result = $doc->loadHTMLFile(\"text.html\\0something\");",
      "18: assert('$result === null');",
      "23: %r(PHP ){0,1}%rWarning: DOMDocument::loadHTMLFile() expects parameter 1 to be a valid path, string given %s",
      "",
      "---------------"
    ],
    "ext/fileinfo/fileinfo.c||ext/fileinfo/fileinfo.c": [
      "File: ext/fileinfo/fileinfo.c -> ext/fileinfo/fileinfo.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "506:     RETVAL_FALSE;",
      "507:     goto clean;",
      "508:    }",
      "510:    wrap = php_stream_locate_url_wrapper(buffer, &tmp2, 0 TSRMLS_CC);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "509:    if (CHECK_NULL_PATH(buffer, buffer_len)) {",
      "510:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid path\");",
      "511:     RETVAL_FALSE;",
      "512:     goto clean;",
      "513:    }",
      "",
      "---------------"
    ],
    "ext/fileinfo/tests/finfo_file_basic.phpt||ext/fileinfo/tests/finfo_file_basic.phpt": [
      "File: ext/fileinfo/tests/finfo_file_basic.phpt -> ext/fileinfo/tests/finfo_file_basic.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: var_dump( finfo_file( $finfo, __FILE__) );",
      "20: var_dump( finfo_file( $finfo, __FILE__, FILEINFO_CONTINUE ) );",
      "21: var_dump( finfo_file( $finfo, $magicFile ) );",
      "23: ?>",
      "24: ===DONE===",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: var_dump( finfo_file( $finfo, $magicFile.chr(0).$magicFile) );",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "27: string(28) \"text/x-php; charset=us-ascii\"",
      "28: string(22) \"PHP script, ASCII text\"",
      "29: string(25) \"text/plain; charset=utf-8\"",
      "30: ===DONE===",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "32: Warning: finfo_file(): Invalid path in %s/finfo_file_basic.php on line %d",
      "33: bool(false)",
      "",
      "---------------"
    ],
    "ext/gd/gd.c||ext/gd/gd.c": [
      "File: ext/gd/gd.c -> ext/gd/gd.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1495:  gdFontPtr font;",
      "1496:  php_stream *stream;",
      "1499:   return;",
      "1500:  }",
      "",
      "[Removed Lines]",
      "1498:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &file, &file_name) == FAILURE) {",
      "",
      "[Added Lines]",
      "1498:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"p\", &file, &file_name) == FAILURE) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2438:  long ignore_warning;",
      "2439: #endif",
      "2440:  if (image_type == PHP_GDIMG_TYPE_GD2PART) {",
      "2442:    return;",
      "2443:   }",
      "2444:   if (width < 1 || height < 1) {",
      "",
      "[Removed Lines]",
      "2441:   if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"sllll\", &file, &file_len, &srcx, &srcy, &width, &height) == FAILURE) {",
      "",
      "[Added Lines]",
      "2441:   if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"pllll\", &file, &file_len, &srcx, &srcy, &width, &height) == FAILURE) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2446:    RETURN_FALSE;",
      "2447:   }",
      "2448:  } else {",
      "2450:    return;",
      "2451:   }",
      "2452:  }",
      "",
      "[Removed Lines]",
      "2449:   if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &file, &file_len) == FAILURE) {",
      "",
      "[Added Lines]",
      "2449:   if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"p\", &file, &file_len) == FAILURE) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "4178:  char *enc, **enc_vector;",
      "4179:  int enc_len, *f_ind;",
      "4182:   return;",
      "4183:  }",
      "",
      "[Removed Lines]",
      "4181:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rs\", &fnt, &enc, &enc_len) == FAILURE) {",
      "",
      "[Added Lines]",
      "4181:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rp\", &fnt, &enc, &enc_len) == FAILURE) {",
      "",
      "---------------"
    ],
    "ext/hash/hash.c||ext/hash/hash.c": [
      "File: ext/hash/hash.c -> ext/hash/hash.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "142:  }",
      "143:  if (isfilename) {",
      "144:   if (CHECK_NULL_PATH(data, data_len)) {",
      "145:    RETURN_FALSE;",
      "146:   }",
      "147:   stream = php_stream_open_wrapper_ex(data, \"rb\", REPORT_ERRORS, NULL, DEFAULT_CONTEXT);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "145:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid path\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "222:   RETURN_FALSE;",
      "223:  }",
      "224:  if (isfilename) {",
      "225:   stream = php_stream_open_wrapper_ex(data, \"rb\", REPORT_ERRORS, NULL, DEFAULT_CONTEXT);",
      "226:   if (!stream) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "226:   if (CHECK_NULL_PATH(data, data_len)) {",
      "227:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid path\");",
      "228:    RETURN_FALSE;",
      "229:   }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "449:  char *filename, buf[1024];",
      "450:  int filename_len, n;",
      "453:   return;",
      "454:  }",
      "",
      "[Removed Lines]",
      "452:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rs|r\", &zhash, &filename, &filename_len, &zcontext) == FAILURE) {",
      "",
      "[Added Lines]",
      "457:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rp|r\", &zhash, &filename, &filename_len, &zcontext) == FAILURE) {",
      "",
      "---------------"
    ],
    "ext/hash/tests/hash_hmac_file_error.phpt||ext/hash/tests/hash_hmac_file_error.phpt": [
      "File: ext/hash/tests/hash_hmac_file_error.phpt -> ext/hash/tests/hash_hmac_file_error.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "28: echo \"\\n-- Testing hash_hmac_file() function with invalid hash algorithm --\\n\";",
      "29: hash_hmac_file('foo', $file, $key, TRUE);",
      "31: ?>",
      "32: ===Done===",
      "33: --EXPECTF--",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31: echo \"\\n-- Testing hash_hmac_file() function with bad path --\\n\";",
      "32: hash_hmac_file('crc32', $file.chr(0).$file, $key, TRUE);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "51: -- Testing hash_hmac_file() function with invalid hash algorithm --",
      "53: Warning: hash_hmac_file(): Unknown hashing algorithm: foo in %s on line %d",
      "54: ===Done===",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "58: -- Testing hash_hmac_file() function with bad path --",
      "60: Warning: hash_hmac_file(): Invalid path in %s on line %d",
      "",
      "---------------"
    ],
    "ext/pgsql/pgsql.c||ext/pgsql/pgsql.c": [
      "File: ext/pgsql/pgsql.c -> ext/pgsql/pgsql.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3014:  php_stream *stream;",
      "3015:  id = PGG(default_link);",
      "3018:   return;",
      "3019:  }",
      "",
      "[Removed Lines]",
      "3017:  if (zend_parse_parameters(argc TSRMLS_CC, \"s|sr\", &z_filename, &z_filename_len, &mode, &mode_len, &pgsql_link) == FAILURE) {",
      "",
      "[Added Lines]",
      "3017:  if (zend_parse_parameters(argc TSRMLS_CC, \"p|sr\", &z_filename, &z_filename_len, &mode, &mode_len, &pgsql_link) == FAILURE) {",
      "",
      "---------------"
    ],
    "ext/standard/link.c||ext/standard/link.c": [
      "File: ext/standard/link.c -> ext/standard/link.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "59:  char buff[MAXPATHLEN];",
      "60:  int ret;",
      "63:   return;",
      "64:  }",
      "",
      "[Removed Lines]",
      "62:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &link, &link_len) == FAILURE) {",
      "",
      "[Added Lines]",
      "62:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"p\", &link, &link_len) == FAILURE) {",
      "",
      "---------------"
    ],
    "ext/standard/streamsfuncs.c||ext/standard/streamsfuncs.c": [
      "File: ext/standard/streamsfuncs.c -> ext/standard/streamsfuncs.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1549:  char *filename, *resolved_path;",
      "1550:  int filename_len;",
      "1553:   return;",
      "1554:  }",
      "",
      "[Removed Lines]",
      "1552:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &filename, &filename_len) == FAILURE) {",
      "",
      "[Added Lines]",
      "1552:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"p\", &filename, &filename_len) == FAILURE) {",
      "",
      "---------------"
    ],
    "ext/xmlwriter/php_xmlwriter.c||ext/xmlwriter/php_xmlwriter.c": [
      "File: ext/xmlwriter/php_xmlwriter.c -> ext/xmlwriter/php_xmlwriter.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1759:  void *ioctx;",
      "1760: #endif",
      "1763:   return;",
      "1764:  }",
      "",
      "[Removed Lines]",
      "1762:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &source, &source_len) == FAILURE) {",
      "",
      "[Added Lines]",
      "1762:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"p\", &source, &source_len) == FAILURE) {",
      "",
      "---------------"
    ],
    "ext/zlib/zlib.c||ext/zlib/zlib.c": [
      "File: ext/zlib/zlib.c -> ext/zlib/zlib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "581:  php_stream *stream;",
      "582:  long use_include_path = 0;",
      "585:   return;",
      "586:  }",
      "",
      "[Removed Lines]",
      "584:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"ss|l\", &filename, &filename_len, &mode, &mode_len, &use_include_path) == FAILURE) {",
      "",
      "[Added Lines]",
      "584:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"ps|l\", &filename, &filename_len, &mode, &mode_len, &use_include_path) == FAILURE) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "609:  int size;",
      "610:  long use_include_path = 0;",
      "613:   return;",
      "614:  }",
      "",
      "[Removed Lines]",
      "612:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s|l\", &filename, &filename_len, &use_include_path) == FAILURE) {",
      "",
      "[Added Lines]",
      "612:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"p|l\", &filename, &filename_len, &use_include_path) == FAILURE) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a6d7dd302c38cff367d1ffe7d438b715e9fe1a74",
      "candidate_info": {
        "commit_hash": "a6d7dd302c38cff367d1ffe7d438b715e9fe1a74",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/a6d7dd302c38cff367d1ffe7d438b715e9fe1a74",
        "files": [
          "ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt"
        ],
        "message": "fix test",
        "before_after_code_files": [
          "ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt||ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt||ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt"
          ],
          "candidate": [
            "ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt||ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt"
          ]
        }
      },
      "candidate_diff": {
        "ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt||ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt": [
          "File: ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt -> ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: assert('$result === false');",
          "16: $doc = new DOMDocument();",
          "17: $result = $doc->loadHTMLFile(\"text.html\\0something\");",
          "19: ?>",
          "20: --EXPECTF--",
          "21: %r(PHP ){0,1}%rWarning: DOMDocument::loadHTMLFile(): Empty string supplied as input %s",
          "",
          "[Removed Lines]",
          "18: assert('$result === null');",
          "23: %r(PHP ){0,1}%rWarning: DOMDocument::loadHTMLFile() expects parameter 1 to be a valid path, string given %s",
          "",
          "[Added Lines]",
          "18: assert('$result === false');",
          "23: %r(PHP ){0,1}%rWarning: DOMDocument::loadHTMLFile(): Invalid file source %s",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "64f411b17c0be664f776872948da14b78843bfd8",
      "candidate_info": {
        "commit_hash": "64f411b17c0be664f776872948da14b78843bfd8",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/64f411b17c0be664f776872948da14b78843bfd8",
        "files": [
          "ext/dom/document.c",
          "ext/gd/gd.c"
        ],
        "message": "Fix #69719 - more checks for nulls in paths",
        "before_after_code_files": [
          "ext/dom/document.c||ext/dom/document.c",
          "ext/gd/gd.c||ext/gd/gd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/dom/document.c||ext/dom/document.c",
            "ext/gd/gd.c||ext/gd/gd.c"
          ],
          "candidate": [
            "ext/dom/document.c||ext/dom/document.c",
            "ext/gd/gd.c||ext/gd/gd.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/dom/document.c||ext/dom/document.c": [
          "File: ext/dom/document.c -> ext/dom/document.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1761:  char *file;",
          "1762:  long options = 0;",
          "1765:   return;",
          "1766:  }",
          "",
          "[Removed Lines]",
          "1764:  if (zend_parse_method_parameters(ZEND_NUM_ARGS() TSRMLS_CC, getThis(), \"Os|l\", &id, dom_document_class_entry, &file, &file_len, &options) == FAILURE) {",
          "",
          "[Added Lines]",
          "1764:  if (zend_parse_method_parameters(ZEND_NUM_ARGS() TSRMLS_CC, getThis(), \"Op|l\", &id, dom_document_class_entry, &file, &file_len, &options) == FAILURE) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1990:  int                     is_valid;",
          "1991:  char resolved_path[MAXPATHLEN + 1];",
          "1994:   return;",
          "1995:  }",
          "",
          "[Removed Lines]",
          "1993:  if (zend_parse_method_parameters(ZEND_NUM_ARGS() TSRMLS_CC, getThis(), \"Op\", &id, dom_document_class_entry, &source, &source_len) == FAILURE) {",
          "",
          "[Added Lines]",
          "1993:  if (zend_parse_method_parameters(ZEND_NUM_ARGS() TSRMLS_CC, getThis(), \"Os\", &id, dom_document_class_entry, &source, &source_len) == FAILURE) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2004:  switch (type) {",
          "2005:  case DOM_LOAD_FILE:",
          "2006:   valid_file = _dom_get_valid_file_path(source, resolved_path, MAXPATHLEN  TSRMLS_CC);",
          "2007:   if (!valid_file) {",
          "2008:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid Schema file source\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2006:   if (CHECK_NULL_PATH(source, source_len)) {",
          "2007:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid Schema file source\");",
          "2008:    RETURN_FALSE;",
          "2009:   }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2079:  int                     is_valid;",
          "2080:  char resolved_path[MAXPATHLEN + 1];",
          "2083:   return;",
          "2084:  }",
          "",
          "[Removed Lines]",
          "2082:  if (zend_parse_method_parameters(ZEND_NUM_ARGS() TSRMLS_CC, getThis(), \"Op\", &id, dom_document_class_entry, &source, &source_len) == FAILURE) {",
          "",
          "[Added Lines]",
          "2086:  if (zend_parse_method_parameters(ZEND_NUM_ARGS() TSRMLS_CC, getThis(), \"Os\", &id, dom_document_class_entry, &source, &source_len) == FAILURE) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2093:  switch (type) {",
          "2094:  case DOM_LOAD_FILE:",
          "2095:   valid_file = _dom_get_valid_file_path(source, resolved_path, MAXPATHLEN  TSRMLS_CC);",
          "2096:   if (!valid_file) {",
          "2097:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid RelaxNG file source\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2099:   if (CHECK_NULL_PATH(source, source_len)) {",
          "2100:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid RelaxNG file source\");",
          "2101:    RETURN_FALSE;",
          "2102:   }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2173:  id = getThis();",
          "2176:   return;",
          "2177:  }",
          "",
          "[Removed Lines]",
          "2175:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"p|l\", &source, &source_len, &options) == FAILURE) {",
          "",
          "[Added Lines]",
          "2183:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s|l\", &source, &source_len, &options) == FAILURE) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2182:  }",
          "2184:  if (mode == DOM_LOAD_FILE) {",
          "2185:   ctxt = htmlCreateFileParserCtxt(source, NULL);",
          "2186:  } else {",
          "2187:   source_len = xmlStrlen(source);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2193:   if (CHECK_NULL_PATH(source, source_len)) {",
          "2194:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid file source\");",
          "2195:    RETURN_FALSE;",
          "2196:   }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2270:  char *file;",
          "2271:  const char *encoding;",
          "2274:   return;",
          "2275:  }",
          "",
          "[Removed Lines]",
          "2273:  if (zend_parse_method_parameters(ZEND_NUM_ARGS() TSRMLS_CC, getThis(), \"Os\", &id, dom_document_class_entry, &file, &file_len) == FAILURE) {",
          "",
          "[Added Lines]",
          "2285:  if (zend_parse_method_parameters(ZEND_NUM_ARGS() TSRMLS_CC, getThis(), \"Op\", &id, dom_document_class_entry, &file, &file_len) == FAILURE) {",
          "",
          "---------------"
        ],
        "ext/gd/gd.c||ext/gd/gd.c": [
          "File: ext/gd/gd.c -> ext/gd/gd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2033:  if ( handle == 0 ) {",
          "2034:   goto clean;",
          "2035:  }",
          "2038:  if ( pPrintWindow )  {",
          "2039:   pPrintWindow(window, memDC, (UINT) client_area);",
          "",
          "[Removed Lines]",
          "2036:  pPrintWindow = (tPrintWindow) GetProcAddress(handle, \"PrintWindow\");",
          "",
          "[Added Lines]",
          "2036:  pPrintWindow = (tPrintWindow) GetProcAddress(handle, \"PrintWindow\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4071:  struct stat st;",
          "4072: #endif",
          "4075:   return;",
          "4076:  }",
          "",
          "[Removed Lines]",
          "4074:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &file, &file_len) == FAILURE) {",
          "",
          "[Added Lines]",
          "4074:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"p\", &file, &file_len) == FAILURE) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eee8b6c33fc968ef8c496db8fb54e8c9d9d5a8f9",
      "candidate_info": {
        "commit_hash": "eee8b6c33fc968ef8c496db8fb54e8c9d9d5a8f9",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/eee8b6c33fc968ef8c496db8fb54e8c9d9d5a8f9",
        "files": [
          "ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt"
        ],
        "message": "fix test",
        "before_after_code_files": [
          "ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt||ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt||ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt"
          ],
          "candidate": [
            "ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt||ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt"
          ]
        }
      },
      "candidate_diff": {
        "ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt||ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt": [
          "File: ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt -> ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: assert('$result === false');",
          "16: $doc = new DOMDocument();",
          "17: $result = $doc->loadHTMLFile(\"text.html\\0something\");",
          "19: ?>",
          "20: --EXPECTF--",
          "21: %r(PHP ){0,1}%rWarning: DOMDocument::loadHTMLFile(): Empty string supplied as input %s",
          "",
          "[Removed Lines]",
          "18: assert('$result === null');",
          "23: %r(PHP ){0,1}%rWarning: DOMDocument::loadHTMLFile() expects parameter 1 to be a valid path, string given %s",
          "",
          "[Added Lines]",
          "18: assert('$result === false');",
          "23: %r(PHP ){0,1}%rWarning: DOMDocument::loadHTMLFile(): Invalid file source %s",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "63c92a6e96f9497d04a2ae5444f0a63bb6a50e1f",
      "candidate_info": {
        "commit_hash": "63c92a6e96f9497d04a2ae5444f0a63bb6a50e1f",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/63c92a6e96f9497d04a2ae5444f0a63bb6a50e1f",
        "files": [
          "ext/fileinfo/tests/finfo_file_basic.phpt"
        ],
        "message": "fix test",
        "before_after_code_files": [
          "ext/fileinfo/tests/finfo_file_basic.phpt||ext/fileinfo/tests/finfo_file_basic.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/fileinfo/tests/finfo_file_basic.phpt||ext/fileinfo/tests/finfo_file_basic.phpt"
          ],
          "candidate": [
            "ext/fileinfo/tests/finfo_file_basic.phpt||ext/fileinfo/tests/finfo_file_basic.phpt"
          ]
        }
      },
      "candidate_diff": {
        "ext/fileinfo/tests/finfo_file_basic.phpt||ext/fileinfo/tests/finfo_file_basic.phpt": [
          "File: ext/fileinfo/tests/finfo_file_basic.phpt -> ext/fileinfo/tests/finfo_file_basic.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: string(22) \"PHP script, ASCII text\"",
          "30: string(25) \"text/plain; charset=utf-8\"",
          "33: bool(false)",
          "34: ===DONE===",
          "",
          "[Removed Lines]",
          "32: Warning: finfo_file(): Invalid path in %s/finfo_file_basic.php on line %d",
          "",
          "[Added Lines]",
          "32: Warning: finfo_file(): Invalid path in %s%efinfo_file_basic.php on line %d",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3803bbde244e8221a20319b3961bbb73ab85ad4b",
      "candidate_info": {
        "commit_hash": "3803bbde244e8221a20319b3961bbb73ab85ad4b",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/3803bbde244e8221a20319b3961bbb73ab85ad4b",
        "files": [
          "ext/fileinfo/tests/finfo_file_basic.phpt"
        ],
        "message": "fix test",
        "before_after_code_files": [
          "ext/fileinfo/tests/finfo_file_basic.phpt||ext/fileinfo/tests/finfo_file_basic.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/fileinfo/tests/finfo_file_basic.phpt||ext/fileinfo/tests/finfo_file_basic.phpt"
          ],
          "candidate": [
            "ext/fileinfo/tests/finfo_file_basic.phpt||ext/fileinfo/tests/finfo_file_basic.phpt"
          ]
        }
      },
      "candidate_diff": {
        "ext/fileinfo/tests/finfo_file_basic.phpt||ext/fileinfo/tests/finfo_file_basic.phpt": [
          "File: ext/fileinfo/tests/finfo_file_basic.phpt -> ext/fileinfo/tests/finfo_file_basic.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: string(22) \"PHP script, ASCII text\"",
          "30: string(25) \"text/plain; charset=utf-8\"",
          "33: bool(false)",
          "34: ===DONE===",
          "",
          "[Removed Lines]",
          "32: Warning: finfo_file(): Invalid path in %s/finfo_file_basic.php on line %d",
          "",
          "[Added Lines]",
          "32: Warning: finfo_file(): Invalid path in %s%efinfo_file_basic.php on line %d",
          "",
          "---------------"
        ]
      }
    }
  ]
}