{
  "cve_id": "CVE-2019-19926",
  "cve_desc": "multiSelect in select.c in SQLite 3.30.1 mishandles certain errors during parsing, as demonstrated by errors from sqlite3WindowRewrite() calls. NOTE: this vulnerability exists because of an incomplete fix for CVE-2019-19880.",
  "repo": "sqlite/sqlite",
  "patch_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
  "patch_info": {
    "commit_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/8428b3b437569338a9d1e10c4cd8154acbe33089",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c"
    ],
    "message": "Continuation of [e2bddcd4c55ba3cb]: Add another spot where it is necessary to abort early due to prior errors in sqlite3WindowRewrite().\n\nFossilOrigin-Name: cba2a2a44cdf138a629109bb0ad088ed4ef67fc66bed3e0373554681a39615d2",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 3d4c0bf8904135fa68c75801bfa738715cacc3b19dc8ad6ef550b11798d4b121",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2809:     }",
      "2810:   #endif",
      "2811:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2812:   if( pParse->nErr ) goto multi_select_end;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2e41b99ea9a36bd8e54cd378ec651b224b3d9d33",
      "candidate_info": {
        "commit_hash": "2e41b99ea9a36bd8e54cd378ec651b224b3d9d33",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/2e41b99ea9a36bd8e54cd378ec651b224b3d9d33",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/sqlite.h.in"
        ],
        "message": "Improvements to the sqlite3_db_filename() API documentation.  No code changes.\n\nFossilOrigin-Name: 711f5ec4dc2635e3102a607510cbbe0b468d9f0af935e09d3454e6e925c8dcb2",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/sqlite.h.in||src/sqlite.h.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 049e9926202317f58c54b6351ff120fb69bf821f409909b1a1c5e335c0396707",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqlite.h.in||src/sqlite.h.in": [
          "File: src/sqlite.h.in -> src/sqlite.h.in"
        ]
      }
    },
    {
      "candidate_hash": "6b23603eb9ab79dac61a232b2b1c8f6857ecb329",
      "candidate_info": {
        "commit_hash": "6b23603eb9ab79dac61a232b2b1c8f6857ecb329",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/6b23603eb9ab79dac61a232b2b1c8f6857ecb329",
        "files": [
          "VERSION",
          "configure",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Increase the version number to 3.29 for the next development cycle.\n\nFossilOrigin-Name: 6cf16703fd4a835c249c947006ae4a4bf81873c8ca1803945453c9845f882dc1",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 0fbd154eb419b57b9c064c1f47346835d6324388b966b73f8a0122de065f08b1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cf83323936dccae4ccafa8c6d17d4a9d7c439e5a",
      "candidate_info": {
        "commit_hash": "cf83323936dccae4ccafa8c6d17d4a9d7c439e5a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/cf83323936dccae4ccafa8c6d17d4a9d7c439e5a",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/func.c"
        ],
        "message": "Small performance increase and size reduction in the implementation of the LIKE and GLOB operators.\n\nFossilOrigin-Name: f97626f921dafe596b615a168ef31987f4a1c0b52956443e1a5c1148b49cab74",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/func.c||src/func.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3bdce7ef1a6bb03affe978243fec603d5a55c071aa6d87c469a3c199d23f3b5e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/func.c||src/func.c": [
          "File: src/func.c -> src/func.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "843:     return;",
          "844:   }",
          "845: #endif",
          "",
          "[Removed Lines]",
          "846:   zB = sqlite3_value_text(argv[0]);",
          "847:   zA = sqlite3_value_text(argv[1]);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "873:   }else{",
          "874:     escape = pInfo->matchSet;",
          "875:   }",
          "876:   if( zA && zB ){",
          "877: #ifdef SQLITE_TEST",
          "878:     sqlite3_like_count++;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "872:   zB = sqlite3_value_text(argv[0]);",
          "873:   zA = sqlite3_value_text(argv[1]);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "595d9f5f3c19995b6ad1860c164b9aeb41b57000",
      "candidate_info": {
        "commit_hash": "595d9f5f3c19995b6ad1860c164b9aeb41b57000",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/595d9f5f3c19995b6ad1860c164b9aeb41b57000",
        "files": [
          "ext/session/sqlite3session.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a segfault that could occur in sqlite3session_diff() if NULL were passed as the pzErrMsg argument.\n\nFossilOrigin-Name: aee73fd28f031a2568ac723de0826be7f1dca6be3b049e4a04fb47af75dcf4bf",
        "before_after_code_files": [
          "ext/session/sqlite3session.c||ext/session/sqlite3session.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/session/sqlite3session.c||ext/session/sqlite3session.c": [
          "File: ext/session/sqlite3session.c -> ext/session/sqlite3session.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1624:       }",
          "1625:       sqlite3_free((char*)azCol);",
          "1626:       if( bMismatch ){",
          "1628:         rc = SQLITE_SCHEMA;",
          "1629:       }",
          "1630:       if( bHasPk==0 ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1627:         if( pzErrMsg ){",
          "1629:         }",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b7aad929619f7043b1685a6477d50f6b4436e85511eb365eceae3dd4dbab571a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7678fdc33d312ef08b5edaee5bb4c84d123a79df",
      "candidate_info": {
        "commit_hash": "7678fdc33d312ef08b5edaee5bb4c84d123a79df",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7678fdc33d312ef08b5edaee5bb4c84d123a79df",
        "files": [
          "ext/fts3/fts3_tokenizer.c",
          "manifest",
          "manifest.uuid",
          "test/fts3atoken.test"
        ],
        "message": "Change the fts3_tokenizer() function to always return the pointer as a BLOB as long as the first argument is a bound parameter, regardless of the SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER setting.\n\nFossilOrigin-Name: 27160df7b3a04ac59d06013ede1d2ee27a4ace86a525ecc333bf7f8b5c580afb",
        "before_after_code_files": [
          "ext/fts3/fts3_tokenizer.c||ext/fts3/fts3_tokenizer.c",
          "manifest.uuid||manifest.uuid",
          "test/fts3atoken.test||test/fts3atoken.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_tokenizer.c||ext/fts3/fts3_tokenizer.c": [
          "File: ext/fts3/fts3_tokenizer.c -> ext/fts3/fts3_tokenizer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "106:       return;",
          "107:     }",
          "108:   }",
          "110:     sqlite3_result_blob(context, (void *)&pPtr, sizeof(pPtr), SQLITE_TRANSIENT);",
          "111:   }",
          "112: }",
          "",
          "[Removed Lines]",
          "109:   if( fts3TokenizerEnabled(context) ){",
          "",
          "[Added Lines]",
          "109:   if( fts3TokenizerEnabled(context) || sqlite3_value_frombind(argv[0]) ){",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ab76e3a90e56bd36a17ded9c7a77e88632ca12d3bd73f197df747a634c81e0cf",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts3atoken.test||test/fts3atoken.test": [
          "File: test/fts3atoken.test -> test/fts3atoken.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:   }",
          "87: } {{There was movement at the station}}",
          "90: set simple [db one {SELECT fts3_tokenizer('simple')}]",
          "91: sqlite3_db_config db SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER 0",
          "92: do_catchsql_test 1.6 {",
          "",
          "[Removed Lines]",
          "89: unset -nocomplain simple",
          "",
          "[Added Lines]",
          "89: unset -nocomplain simple blah2name simplename",
          "90: set simplename \"simple\"",
          "91: set blah2name \"blah2\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "97:     SELECT fts3_tokenizer('blah2', $simple) IS NULL;",
          "98:   }",
          "99: } {1}",
          "101: do_test fts3atoken-1.8 {",
          "102:   execsql {",
          "104:   }",
          "109: #--------------------------------------------------------------------------",
          "110: # Test cases fts3atoken-2.* test error cases in the scalar function based",
          "",
          "[Removed Lines]",
          "100: sqlite3_db_config db SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER 1",
          "103:     SELECT fts3_tokenizer('blah2') == fts3_tokenizer('simple');",
          "105: } {1}",
          "",
          "[Added Lines]",
          "103: # With ENABLE_FTS3_TOKENIZER off, the fts3_tokenzer(1) function",
          "104: # returns NULL unless the first parameter is a bound parameter.",
          "105: # If the first parameter is a bound parameter, then fts3_tokenizer(1)",
          "106: # returns the actual pointer value as a BLOB.",
          "107: #",
          "110:     SELECT fts3_tokenizer($blah2name) == fts3_tokenizer($simplename),",
          "111:            typeof(fts3_tokenizer($blah2name)),",
          "112:            typeof(fts3_tokenizer('blah2')),",
          "113:            typeof(fts3_tokenizer($simplename)),",
          "114:            typeof(fts3_tokenizer('simple'));",
          "116: } {1 blob null blob null}",
          "118: # With ENABLE_FTS3_TOKENIZER on, fts3_tokenizer() always returns",
          "119: # the BLOB pointer, regardless the parameter",
          "120: #",
          "121: sqlite3_db_config db SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER 1",
          "122: do_test fts3atoken-1.9 {",
          "123:   execsql {",
          "124:     SELECT fts3_tokenizer('blah2') == fts3_tokenizer('simple'),",
          "125:            typeof(fts3_tokenizer($blah2name)),",
          "126:            typeof(fts3_tokenizer('blah2')),",
          "127:            typeof(fts3_tokenizer($simplename)),",
          "128:            typeof(fts3_tokenizer('simple'));",
          "129:   }",
          "130: } {1 blob blob blob blob}",
          "",
          "---------------"
        ]
      }
    }
  ]
}