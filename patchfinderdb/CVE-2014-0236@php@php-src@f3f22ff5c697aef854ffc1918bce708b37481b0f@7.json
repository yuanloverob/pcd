{
  "cve_id": "CVE-2014-0236",
  "cve_desc": "file before 5.18, as used in the Fileinfo component in PHP before 5.6.0, allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a zero root_storage value in a CDF file, related to cdf.c and readcdf.c.",
  "repo": "php/php-src",
  "patch_hash": "f3f22ff5c697aef854ffc1918bce708b37481b0f",
  "patch_info": {
    "commit_hash": "f3f22ff5c697aef854ffc1918bce708b37481b0f",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/f3f22ff5c697aef854ffc1918bce708b37481b0f",
    "files": [
      "NEWS",
      "ext/fileinfo/libmagic/cdf.c",
      "ext/fileinfo/libmagic/cdf.h",
      "ext/fileinfo/libmagic/readcdf.c"
    ],
    "message": "Fixed bug #67329 fileinfo: NULL pointer deference flaw by processing certain CDF files",
    "before_after_code_files": [
      "ext/fileinfo/libmagic/cdf.c||ext/fileinfo/libmagic/cdf.c",
      "ext/fileinfo/libmagic/cdf.h||ext/fileinfo/libmagic/cdf.h",
      "ext/fileinfo/libmagic/readcdf.c||ext/fileinfo/libmagic/readcdf.c"
    ]
  },
  "patch_diff": {
    "ext/fileinfo/libmagic/cdf.c||ext/fileinfo/libmagic/cdf.c": [
      "File: ext/fileinfo/libmagic/cdf.c -> ext/fileinfo/libmagic/cdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: #include \"file.h\"",
      "37: #ifndef lint",
      "39: #endif",
      "41: #include <assert.h>",
      "",
      "[Removed Lines]",
      "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.53 2013/02/26 16:20:42 christos Exp $\")",
      "",
      "[Added Lines]",
      "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.55 2014/02/27 23:26:17 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "689: int",
      "690: cdf_read_short_stream(const cdf_info_t *info, const cdf_header_t *h,",
      "692: {",
      "693:  size_t i;",
      "694:  const cdf_directory_t *d;",
      "696:  for (i = 0; i < dir->dir_len; i++)",
      "697:   if (dir->dir_tab[i].d_type == CDF_DIR_TYPE_ROOT_STORAGE)",
      "698:    break;",
      "",
      "[Removed Lines]",
      "691:     const cdf_sat_t *sat, const cdf_dir_t *dir, cdf_stream_t *scn)",
      "",
      "[Added Lines]",
      "691:     const cdf_sat_t *sat, const cdf_dir_t *dir, cdf_stream_t *scn,",
      "692:     const cdf_directory_t **root)",
      "",
      "---------------"
    ],
    "ext/fileinfo/libmagic/cdf.h||ext/fileinfo/libmagic/cdf.h": [
      "File: ext/fileinfo/libmagic/cdf.h -> ext/fileinfo/libmagic/cdf.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "300: int cdf_read_ssat(const cdf_info_t *, const cdf_header_t *, const cdf_sat_t *,",
      "301:     cdf_sat_t *);",
      "302: int cdf_read_short_stream(const cdf_info_t *, const cdf_header_t *,",
      "304: int cdf_read_property_info(const cdf_stream_t *, const cdf_header_t *, uint32_t,",
      "305:     cdf_property_info_t **, size_t *, size_t *);",
      "306: int cdf_read_summary_info(const cdf_info_t *, const cdf_header_t *,",
      "",
      "[Removed Lines]",
      "303:     const cdf_sat_t *, const cdf_dir_t *, cdf_stream_t *);",
      "",
      "[Added Lines]",
      "303:     const cdf_sat_t *, const cdf_dir_t *, cdf_stream_t *,",
      "304:     const cdf_directory_t **);",
      "",
      "---------------"
    ],
    "ext/fileinfo/libmagic/readcdf.c||ext/fileinfo/libmagic/readcdf.c": [
      "File: ext/fileinfo/libmagic/readcdf.c -> ext/fileinfo/libmagic/readcdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "26: #include \"file.h\"",
      "28: #ifndef lint",
      "30: #endif",
      "32: #include <stdlib.h>",
      "",
      "[Removed Lines]",
      "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.37 2014/01/06 13:41:18 rrt Exp $\")",
      "",
      "[Added Lines]",
      "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.40 2014/03/06 15:23:33 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "77: # define strcasestr strstr",
      "78: #endif",
      "80: private const char *",
      "81: cdf_app_to_mime(const char *vbuf, const struct nv *nv)",
      "82: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "80: static const struct cv {",
      "81:  uint64_t clsid[2];",
      "82:  const char *mime;",
      "83: } clsid2mime[] = {",
      "84:  {",
      "85: #ifdef PHP_WIN32",
      "86:   { 0x00000000000c1084ui64, 0x46000000000000c0ui64 },",
      "87: #else",
      "88:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU },",
      "89: #endif",
      "90:   \"x-msi\",",
      "91:  }",
      "92: }, clsid2desc[] = {",
      "93:  {",
      "94: #ifdef PHP_WIN32",
      "95:   { 0x00000000000c1084ui64, 0x46000000000000c0ui64 },",
      "96: #else",
      "97:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU },",
      "98: #endif",
      "99:   \"MSI Installer\",",
      "100:  },",
      "101: };",
      "103: private const char *",
      "104: cdf_clsid_to_mime(const uint64_t clsid[2], const struct cv *cv)",
      "105: {",
      "106:  size_t i;",
      "107:  for (i = 0; cv[i].mime != NULL; i++) {",
      "108:   if (clsid[0] == cv[i].clsid[0] && clsid[1] == cv[i].clsid[1])",
      "109:    return cv[i].mime;",
      "110:  }",
      "111:  return NULL;",
      "112: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "96: private int",
      "97: cdf_file_property_info(struct magic_set *ms, const cdf_property_info_t *info,",
      "99: {",
      "100:         size_t i;",
      "101:         cdf_timestamp_t tp;",
      "",
      "[Removed Lines]",
      "98:     size_t count)",
      "",
      "[Added Lines]",
      "132:     size_t count, const cdf_directory_t *root_storage)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "108:  memset(&ts, 0, sizeof(ts));",
      "110:         for (i = 0; i < count; i++) {",
      "111:                 cdf_print_property_name(buf, sizeof(buf), info[i].pi_id);",
      "112:                 switch (info[i].pi_type) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "144:         if (!NOTMIME(ms) && root_storage)",
      "145:   str = cdf_clsid_to_mime(root_storage->d_storage_uuid, clsid2mime);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "163:                                                     buf, vbuf) == -1)",
      "164:                                                         return -1;",
      "165:                                         }",
      "167:         CDF_PROPERTY_NAME_OF_APPLICATION) {",
      "168:      str = cdf_app_to_mime(vbuf, app2mime);",
      "169:     }",
      "",
      "[Removed Lines]",
      "166:                                 } else if (info[i].pi_id ==",
      "",
      "[Added Lines]",
      "203:                                 } else if (str == NULL && info[i].pi_id ==",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "218: private int",
      "219: cdf_file_summary_info(struct magic_set *ms, const cdf_header_t *h,",
      "221: {",
      "222:         cdf_summary_info_header_t si;",
      "223:         cdf_property_info_t *info;",
      "",
      "[Removed Lines]",
      "220:     const cdf_stream_t *sst)",
      "",
      "[Added Lines]",
      "257:     const cdf_stream_t *sst, const cdf_directory_t *root_storage)",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "228:                 return -1;",
      "230:         if (NOTMIME(ms)) {",
      "231:                 if (file_printf(ms, \"Composite Document File V2 Document\")",
      "232:       == -1)",
      "233:                         return -1;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "268:   const char *str;",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "255:                                 return -2;",
      "256:                         break;",
      "257:                 }",
      "261:         free(info);",
      "263:         return m == -1 ? -2 : m;",
      "",
      "[Removed Lines]",
      "258:         }",
      "260:         m = cdf_file_property_info(ms, info, count);",
      "",
      "[Added Lines]",
      "297:   if (root_storage) {",
      "298:    str = cdf_clsid_to_mime(root_storage->d_storage_uuid, clsid2desc);",
      "299:    if (str)",
      "300:     if (file_printf(ms, \", %s\", str) == -1)",
      "301:      return -2;",
      "302:    }",
      "303:   }",
      "305:         m = cdf_file_property_info(ms, info, count, root_storage);",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "275:         int i;",
      "276:         const char *expn = \"\";",
      "277:         const char *corrupt = \"corrupt: \";",
      "279:         info.i_fd = fd;",
      "280:         info.i_buf = buf;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:         const cdf_directory_t *root_storage;",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "308:                 goto out2;",
      "309:         }",
      "312:                 expn = \"Cannot read short stream\";",
      "313:                 goto out3;",
      "314:         }",
      "",
      "[Removed Lines]",
      "311:         if ((i = cdf_read_short_stream(&info, &h, &sat, &dir, &sst)) == -1) {",
      "",
      "[Added Lines]",
      "357:         if ((i = cdf_read_short_stream(&info, &h, &sat, &dir, &sst,",
      "358:      &root_storage)) == -1) {",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "329: #ifdef CDF_DEBUG",
      "330:         cdf_dump_summary_info(&h, &scn);",
      "331: #endif",
      "334:  if (i == 0) {",
      "335:   const char *str = NULL;",
      "336:   cdf_directory_t *d;",
      "337:   char name[__arraycount(d->d_name)];",
      "338:   size_t j, k;",
      "340:    d = &dir.dir_tab[j];",
      "341:    for (k = 0; k < sizeof(name); k++)",
      "342:     name[k] = (char)cdf_tole2(d->d_name[k]);",
      "349:   }",
      "350:   if (NOTMIME(ms)) {",
      "351:    if (str != NULL) {",
      "",
      "[Removed Lines]",
      "332:         if ((i = cdf_file_summary_info(ms, &h, &scn)) < 0)",
      "333:                 expn = \"Can't expand summary_info\";",
      "339:   for (j = 0; j < dir.dir_len; j++) {",
      "343:    if (NOTMIME(ms))",
      "344:     str = cdf_app_to_mime(name, name2desc);",
      "345:    else",
      "346:     str = cdf_app_to_mime(name, name2mime);",
      "347:    if (str != NULL)",
      "348:     break;",
      "",
      "[Added Lines]",
      "379:         if ((i = cdf_file_summary_info(ms, &h, &scn, root_storage)) < 0)",
      "380:             expn = \"Can't expand summary_info\";",
      "388:   for (j = 0; str == NULL && j < dir.dir_len; j++) {",
      "392:    str = cdf_app_to_mime(name,",
      "393:        NOTMIME(ms) ? name2desc : name2mime);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "186ffcb72c982b0235761bdd6388ff1c36d79568",
      "candidate_info": {
        "commit_hash": "186ffcb72c982b0235761bdd6388ff1c36d79568",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/186ffcb72c982b0235761bdd6388ff1c36d79568",
        "files": [
          "NEWS",
          "ext/pdo_odbc/odbc_stmt.c",
          "ext/pdo_odbc/php_pdo_odbc_int.h"
        ],
        "message": "Fix #50444: PDO-ODBC changes for 64-bit\n\nThis bug is also referenced in\n[#61777](https://bugs.php.net/bug.php?id=61777) and is still present in\nthe latest stable release of the 5.5 branch. I see two tickets exist for\nthis problem already, and I'm just submitting these changes via github\nas a reminder that this is a serious problem for anyone using PDO_ODBC\non the x64 builds.",
        "before_after_code_files": [
          "ext/pdo_odbc/odbc_stmt.c||ext/pdo_odbc/odbc_stmt.c",
          "ext/pdo_odbc/php_pdo_odbc_int.h||ext/pdo_odbc/php_pdo_odbc_int.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ext/pdo_odbc/odbc_stmt.c||ext/pdo_odbc/odbc_stmt.c": [
          "File: ext/pdo_odbc/odbc_stmt.c -> ext/pdo_odbc/odbc_stmt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "279:  pdo_odbc_stmt *S = (pdo_odbc_stmt*)stmt->driver_data;",
          "280:  RETCODE rc;",
          "281:  SWORD sqltype = 0, ctype = 0, scale = 0, nullable = 0;",
          "283:  pdo_odbc_param *P;",
          "",
          "[Removed Lines]",
          "282:  UDWORD precision = 0;",
          "",
          "[Added Lines]",
          "282:  SQLULEN precision = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "551:  struct pdo_column_data *col = &stmt->columns[colno];",
          "552:  RETCODE rc;",
          "553:  SWORD colnamelen;",
          "555:  SQLLEN displaysize;",
          "557:  rc = SQLDescribeCol(S->stmt, colno+1, S->cols[colno].colname,",
          "",
          "[Removed Lines]",
          "554:  SDWORD colsize;",
          "",
          "[Added Lines]",
          "554:  SQLULEN colsize;",
          "",
          "---------------"
        ],
        "ext/pdo_odbc/php_pdo_odbc_int.h||ext/pdo_odbc/php_pdo_odbc_int.h": [
          "File: ext/pdo_odbc/php_pdo_odbc_int.h -> ext/pdo_odbc/php_pdo_odbc_int.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "157: } pdo_odbc_stmt;",
          "159: typedef struct {",
          "161:  SQLSMALLINT paramtype;",
          "162:  char *outbuf;",
          "163:  unsigned is_unicode:1;",
          "",
          "[Removed Lines]",
          "160:  SQLINTEGER len;",
          "",
          "[Added Lines]",
          "160:  SQLLEN len;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fbb7bdc21e0bd869dd25a701d49d8daaf8ffe03a",
      "candidate_info": {
        "commit_hash": "fbb7bdc21e0bd869dd25a701d49d8daaf8ffe03a",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/fbb7bdc21e0bd869dd25a701d49d8daaf8ffe03a",
        "files": [
          "phpdbg_utils.c"
        ],
        "message": "change the default terminal width from 100 to 80, as that is the most common value",
        "before_after_code_files": [
          "phpdbg_utils.c||phpdbg_utils.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "phpdbg_utils.c||phpdbg_utils.c": [
          "File: phpdbg_utils.c -> phpdbg_utils.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "440: #elif defined(HAVE_SYS_IOCTL_H)",
          "441:  struct winsize w;",
          "444: #else",
          "446: #endif",
          "447:  return columns;",
          "",
          "[Removed Lines]",
          "443:  columns = ioctl(fileno(stdout), TIOCGWINSZ, &w) == 0 ? w.ws_col : 100;",
          "445:  columns = 100;",
          "",
          "[Added Lines]",
          "443:  columns = ioctl(fileno(stdout), TIOCGWINSZ, &w) == 0 ? w.ws_col : 80;",
          "445:  columns = 80;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "db537b1f3f75d39505964a055418932ac3067f40",
      "candidate_info": {
        "commit_hash": "db537b1f3f75d39505964a055418932ac3067f40",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/db537b1f3f75d39505964a055418932ac3067f40",
        "files": [
          "sapi/fpm/fpm/fpm_main.c"
        ],
        "message": "Fix SetHandler proxy:fcgi:// incompatibilities\n\nApache 2.4.10+ will allow the following:\n\n```\n<FilesMatch \\.php$>\nSetHandler proxy:fcgi://localhost:9000\n</FilesMatch>\n```\n\nThis is much easier than using `ProxyPassMatch` (which prevents rewriting and other stuff) and rewrites (which are a bag of hurt because when combined with user-land `.htaccess` rewrites, there's always rewrite loops, prefix breakage etc (I've tried, for weeks).\n\nIt's basically the future of using Apache (via `mod_proxy_fcgi`) together with PHP-FPM. It's also available for older versions as a standalone module, very easy to install: https://gist.github.com/progandy/6ed4eeea60f6277c3e39\n\nHowever, the two bits of code this commit deletes interfere with that. They both cover CGI-only mode and were copied from that SAPI into the FPM source. See e.g. https://bugs.php.net/bug.php?id=47042\n\nThe first deleted part mangled `SCRIPT_NAME` if something like\n\n```\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteRule (.*) index.php/$1 [L]\n```\n\nis used (i.e. rewriting to `PATH_INFO`. The second part drops `PATH_INFO` if there was a `REDIRECT_URL` (with CGI mode, `SCRIPT_FILENAME` in Apache is the path to the PHP binary, and `PATH_INFO` contains the name of the script to run).\n\nClearly, neither applies in the case of FPM, so both are safe to delete.",
        "before_after_code_files": [
          "sapi/fpm/fpm/fpm_main.c||sapi/fpm/fpm/fpm_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sapi/fpm/fpm/fpm_main.c||sapi/fpm/fpm/fpm_main.c": [
          "File: sapi/fpm/fpm/fpm_main.c -> sapi/fpm/fpm/fpm_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1142:     TRANSLATE_SLASHES(env_document_root);",
          "1143:    }",
          "1158: #ifdef __riscos__",
          "1160:    __riscosify_control |= __RISCOSIFY_DONT_CHECK_DIR;",
          "",
          "[Removed Lines]",
          "1145:    if (env_path_translated != NULL && env_redirect_url != NULL &&",
          "1146:        env_path_translated != script_path_translated &&",
          "1147:        strcmp(env_path_translated, script_path_translated) != 0) {",
          "1153:     script_path_translated = env_path_translated;",
          "1155:     env_script_name = env_redirect_url;",
          "1156:    }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1332:      }",
          "1333:      script_path_translated = _sapi_cgibin_putenv(\"SCRIPT_FILENAME\", script_path_translated TSRMLS_CC);",
          "1334:     }",
          "1345:     if (env_script_name != orig_script_name) {",
          "1346:      if (orig_script_name) {",
          "1347:       _sapi_cgibin_putenv(\"ORIG_SCRIPT_NAME\", orig_script_name TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "1335:     if (env_redirect_url) {",
          "1336:      if (orig_path_info) {",
          "1337:       _sapi_cgibin_putenv(\"ORIG_PATH_INFO\", orig_path_info TSRMLS_CC);",
          "1338:       _sapi_cgibin_putenv(\"PATH_INFO\", NULL TSRMLS_CC);",
          "1339:      }",
          "1340:      if (orig_path_translated) {",
          "1341:       _sapi_cgibin_putenv(\"ORIG_PATH_TRANSLATED\", orig_path_translated TSRMLS_CC);",
          "1342:       _sapi_cgibin_putenv(\"PATH_TRANSLATED\", NULL TSRMLS_CC);",
          "1343:      }",
          "1344:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bcf85252e24e078bb0690fd0a99226449fe51c26",
      "candidate_info": {
        "commit_hash": "bcf85252e24e078bb0690fd0a99226449fe51c26",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/bcf85252e24e078bb0690fd0a99226449fe51c26",
        "files": [
          "phpdbg.c"
        ],
        "message": "Added stdion/stdout/stderr constsnts and their php:// wrappers Fixes issue #85",
        "before_after_code_files": [
          "phpdbg.c||phpdbg.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "phpdbg.c||phpdbg.c": [
          "File: phpdbg.c -> phpdbg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: # include <sys/select.h>",
          "37: # include <sys/time.h>",
          "38: # include <sys/types.h>",
          "39: # include <unistd.h>",
          "40: # include <arpa/inet.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39: # include <netinet/in.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "532:  fflush(PHPDBG_G(io)[PHPDBG_STDOUT]);",
          "537: static sapi_module_struct phpdbg_sapi_module = {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "538: {",
          "539:  zval *zin, *zout, *zerr;",
          "540:  php_stream *s_in, *s_out, *s_err;",
          "541:  php_stream_context *sc_in=NULL, *sc_out=NULL, *sc_err=NULL;",
          "542:  zend_constant ic, oc, ec;",
          "544:  MAKE_STD_ZVAL(zin);",
          "545:  MAKE_STD_ZVAL(zout);",
          "546:  MAKE_STD_ZVAL(zerr);",
          "548:  s_in  = php_stream_open_wrapper_ex(\"php://stdin\",  \"rb\", 0, NULL, sc_in);",
          "549:  s_out = php_stream_open_wrapper_ex(\"php://stdout\", \"wb\", 0, NULL, sc_out);",
          "550:  s_err = php_stream_open_wrapper_ex(\"php://stderr\", \"wb\", 0, NULL, sc_err);",
          "552:  if (s_in==NULL || s_out==NULL || s_err==NULL) {",
          "553:   FREE_ZVAL(zin);",
          "554:   FREE_ZVAL(zout);",
          "555:   FREE_ZVAL(zerr);",
          "556:   if (s_in) php_stream_close(s_in);",
          "557:   if (s_out) php_stream_close(s_out);",
          "558:   if (s_err) php_stream_close(s_err);",
          "559:   return;",
          "560:  }",
          "562: #if PHP_DEBUG",
          "564:  s_out->flags |= PHP_STREAM_FLAG_NO_CLOSE;",
          "565:  s_err->flags |= PHP_STREAM_FLAG_NO_CLOSE;",
          "566: #endif",
          "568:  php_stream_to_zval(s_in,  zin);",
          "569:  php_stream_to_zval(s_out, zout);",
          "570:  php_stream_to_zval(s_err, zerr);",
          "572:  ic.value = *zin;",
          "573:  ic.flags = CONST_CS;",
          "574:  ic.name = zend_strndup(ZEND_STRL(\"STDIN\"));",
          "575:  ic.name_len = sizeof(\"STDIN\");",
          "576:  ic.module_number = 0;",
          "577:  zend_register_constant(&ic TSRMLS_CC);",
          "579:  oc.value = *zout;",
          "580:  oc.flags = CONST_CS;",
          "581:  oc.name = zend_strndup(ZEND_STRL(\"STDOUT\"));",
          "582:  oc.name_len = sizeof(\"STDOUT\");",
          "583:  oc.module_number = 0;",
          "584:  zend_register_constant(&oc TSRMLS_CC);",
          "586:  ec.value = *zerr;",
          "587:  ec.flags = CONST_CS;",
          "588:  ec.name = zend_strndup(ZEND_STRL(\"STDERR\"));",
          "589:  ec.name_len = sizeof(\"STDERR\");",
          "590:  ec.module_number = 0;",
          "591:  zend_register_constant(&ec TSRMLS_CC);",
          "593:  FREE_ZVAL(zin);",
          "594:  FREE_ZVAL(zout);",
          "595:  FREE_ZVAL(zerr);",
          "596: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1262:   phpdbg_set_prompt(PROMPT TSRMLS_CC);",
          "1264:   if (show_banner) {",
          "1266:    phpdbg_welcome((cleaning > 0) TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1329:   phpdbg_register_file_handles(TSRMLS_C);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "016b1f089e90af2e6a72c78107edce8eb2dcb31f",
      "candidate_info": {
        "commit_hash": "016b1f089e90af2e6a72c78107edce8eb2dcb31f",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/016b1f089e90af2e6a72c78107edce8eb2dcb31f",
        "files": [
          "NEWS",
          "ext/tokenizer/tests/bug67395.phpt",
          "ext/tokenizer/tokenizer_data.c"
        ],
        "message": "Fix bug #67392: token_name() does not return name for T_POW and T_POW_EQUAL token",
        "before_after_code_files": [
          "ext/tokenizer/tests/bug67395.phpt||ext/tokenizer/tests/bug67395.phpt",
          "ext/tokenizer/tokenizer_data.c||ext/tokenizer/tokenizer_data.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ext/tokenizer/tests/bug67395.phpt||ext/tokenizer/tests/bug67395.phpt": [
          "File: ext/tokenizer/tests/bug67395.phpt -> ext/tokenizer/tests/bug67395.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug 67395: token_name() does not return name for T_POW and T_POW_EQUAL token",
          "3: --FILE--",
          "4: <?php",
          "6: $powToken = token_get_all('<?php **')[1][0];",
          "7: var_dump(token_name($powToken));",
          "9: $powEqualToken = token_get_all('<?php **=')[1][0];",
          "10: var_dump(token_name($powEqualToken));",
          "12: ?>",
          "13: --EXPECT--",
          "14: string(5) \"T_POW\"",
          "15: string(11) \"T_POW_EQUAL\"",
          "",
          "---------------"
        ],
        "ext/tokenizer/tokenizer_data.c||ext/tokenizer/tokenizer_data.c": [
          "File: ext/tokenizer/tokenizer_data.c -> ext/tokenizer/tokenizer_data.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "160:  REGISTER_LONG_CONSTANT(\"T_NS_SEPARATOR\", T_NS_SEPARATOR, CONST_CS | CONST_PERSISTENT);",
          "161:  REGISTER_LONG_CONSTANT(\"T_ELLIPSIS\", T_ELLIPSIS, CONST_CS | CONST_PERSISTENT);",
          "162:  REGISTER_LONG_CONSTANT(\"T_DOUBLE_COLON\", T_PAAMAYIM_NEKUDOTAYIM, CONST_CS | CONST_PERSISTENT);",
          "163: }",
          "165: char *get_token_type_name(int token_type)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163:  REGISTER_LONG_CONSTANT(\"T_POW\", T_POW, CONST_CS | CONST_PERSISTENT);",
          "164:  REGISTER_LONG_CONSTANT(\"T_POW_EQUAL\", T_POW_EQUAL, CONST_CS | CONST_PERSISTENT);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "296:   case T_DIR: return \"T_DIR\";",
          "297:   case T_NS_SEPARATOR: return \"T_NS_SEPARATOR\";",
          "298:   case T_ELLIPSIS: return \"T_ELLIPSIS\";",
          "300:  }",
          "301:  return \"UNKNOWN\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "301:   case T_POW: return \"T_POW\";",
          "302:   case T_POW_EQUAL: return \"T_POW_EQUAL\";",
          "",
          "---------------"
        ]
      }
    }
  ]
}