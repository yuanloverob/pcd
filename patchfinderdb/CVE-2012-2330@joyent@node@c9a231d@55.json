{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "52bd0f93bb786de028463ef56ddb1e22568584b9",
      "candidate_info": {
        "commit_hash": "52bd0f93bb786de028463ef56ddb1e22568584b9",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/52bd0f93bb786de028463ef56ddb1e22568584b9",
        "files": [
          "src/node.js"
        ],
        "message": "core: make .deprecate() warn only once",
        "before_after_code_files": [
          "src/node.js||src/node.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.js||src/node.js": [
          "File: src/node.js -> src/node.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "569:     NativeModule._cache[this.id] = this;",
          "570:   };",
          "572:   NativeModule.prototype.deprecate = function(method, message) {",
          "573:     var original = this.exports[method];",
          "574:     var self = this;",
          "576:     Object.defineProperty(this.exports, method, {",
          "577:       enumerable: false,",
          "578:       value: function() {",
          "587:         return original.apply(this, arguments);",
          "588:       }",
          "589:     });",
          "",
          "[Removed Lines]",
          "579:         message = self.id + '.' + method + ' is deprecated. ' + (message || '');",
          "581:         if ((new RegExp('\\\\b' + self.id + '\\\\b')).test(process.env.NODE_DEBUG))",
          "582:           console.trace(message);",
          "583:         else",
          "584:           console.error(message);",
          "586:         self.exports[method] = original;",
          "",
          "[Added Lines]",
          "578:     var warned = false;",
          "579:     message = message || '';",
          "584:         if (!warned) {",
          "585:           warned = true;",
          "586:           message = self.id + '.' + method + ' is deprecated. ' + message;",
          "588:           var moduleIdCheck = new RegExp('\\\\b' + self.id + '\\\\b');",
          "589:           if (moduleIdCheck.test(process.env.NODE_DEBUG))",
          "590:             console.trace(message);",
          "591:           else",
          "592:             console.error(message);",
          "594:           self.exports[method] = original;",
          "595:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dc752327bbd700e686e14169c7d635960eafe456",
      "candidate_info": {
        "commit_hash": "dc752327bbd700e686e14169c7d635960eafe456",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/dc752327bbd700e686e14169c7d635960eafe456",
        "files": [
          "configure",
          "vcbuild.bat"
        ],
        "message": "vcbuild: run the 'configure' script in vcbuild.bat\n\nSo that a 'config.gypi' file gets generated, which is\nrequired for the `process.config` object (see #2928).",
        "before_after_code_files": [
          "vcbuild.bat||vcbuild.bat"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "vcbuild.bat||vcbuild.bat": [
          "File: vcbuild.bat -> vcbuild.bat",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: set config=Release",
          "16: set target=Build",
          "17: set target_arch=ia32",
          "18: set noprojgen=",
          "19: set nobuild=",
          "20: set nosign=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: set debug_arg=",
          "19: set nosnapshot_arg=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "57: if defined upload goto upload",
          "58: if defined jslint goto jslint",
          "61: :project-gen",
          "62: @rem Skip project generation if requested.",
          "63: if defined noprojgen goto msbuild",
          "65: @rem Generate the VS project.",
          "75: if errorlevel 1 goto create-msvs-files-failed",
          "76: if not exist node.sln goto create-msvs-files-failed",
          "77: echo Project files generated.",
          "",
          "[Removed Lines]",
          "66: if defined nosnapshot goto nosnapshotgen",
          "67: python tools\\gyp_node -f msvs -G msvs_version=2010 -Dtarget_arch=%target_arch%",
          "68: if errorlevel 1 goto create-msvs-files-failed",
          "69: if not exist node.sln goto create-msvs-files-failed",
          "70: echo Project files generated.",
          "71: goto msbuild",
          "73: :nosnapshotgen",
          "74: python tools\\gyp_node -f msvs -G msvs_version=2010 -D v8_use_snapshot='false' -Dtarget_arch=%target_arch%",
          "",
          "[Added Lines]",
          "62: if \"%config%\"==\"Debug\" set debug_arg=--debug",
          "63: if defined nosnapshot set nosnapshot_arg=--without-snapshot",
          "70: python configure %debug_arg% %nosnapshot_arg% --dest-cpu=%target_arch%",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b1b16d117e6fe2ca889d10e7e0b62a5a60997d57",
      "candidate_info": {
        "commit_hash": "b1b16d117e6fe2ca889d10e7e0b62a5a60997d57",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/b1b16d117e6fe2ca889d10e7e0b62a5a60997d57",
        "files": [
          "src/udp_wrap.cc"
        ],
        "message": "udp: 'interface' is reserved word on windows.",
        "before_after_code_files": [
          "src/udp_wrap.cc||src/udp_wrap.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/udp_wrap.cc||src/udp_wrap.cc": [
          "File: src/udp_wrap.cc -> src/udp_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "237:   assert(args.Length() == 2);",
          "239:   String::Utf8Value address(args[0]->ToString());",
          "243:   if (args[1]->IsUndefined() || args[1]->IsNull()) {",
          "245:   }",
          "248:                                 membership);",
          "250:   if (r)",
          "",
          "[Removed Lines]",
          "240:   String::Utf8Value interface(args[1]->ToString());",
          "242:   const char* interface_cstr = *interface;",
          "244:       interface_cstr = NULL;",
          "247:   int r = uv_udp_set_membership(&wrap->handle_, *address, interface_cstr,",
          "",
          "[Added Lines]",
          "240:   String::Utf8Value iface(args[1]->ToString());",
          "242:   const char* iface_cstr = *iface;",
          "244:       iface_cstr = NULL;",
          "247:   int r = uv_udp_set_membership(&wrap->handle_, *address, iface_cstr,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "94f1feeb5989d20372c8025b7284b4c1d26ab812",
      "candidate_info": {
        "commit_hash": "94f1feeb5989d20372c8025b7284b4c1d26ab812",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/94f1feeb5989d20372c8025b7284b4c1d26ab812",
        "files": [
          "doc/api/dgram.markdown",
          "src/udp_wrap.cc",
          "test/simple/test-dgram-address.js"
        ],
        "message": "udp: make getsockname() return address family name",
        "before_after_code_files": [
          "src/udp_wrap.cc||src/udp_wrap.cc",
          "test/simple/test-dgram-address.js||test/simple/test-dgram-address.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/udp_wrap.cc||src/udp_wrap.cc": [
          "File: src/udp_wrap.cc -> src/udp_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "68: static Persistent<String> address_symbol;",
          "69: static Persistent<String> port_symbol;",
          "70: static Persistent<String> buffer_sym;",
          "71: static Persistent<String> oncomplete_sym;",
          "72: static Persistent<String> onmessage_sym;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70: static Persistent<String> family_symbol;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "134:   address_symbol = NODE_PSYMBOL(\"address\");",
          "135:   oncomplete_sym = NODE_PSYMBOL(\"oncomplete\");",
          "136:   onmessage_sym = NODE_PSYMBOL(\"onmessage\");",
          "138:   Local<FunctionTemplate> t = FunctionTemplate::New(New);",
          "139:   t->InstanceTemplate()->SetInternalFieldCount(1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "138:   family_symbol = NODE_PSYMBOL(\"family\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "447:   const sockaddr_in *a4;",
          "448:   const sockaddr_in6 *a6;",
          "449:   int port;",
          "451:   Local<Object> info = Object::New();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "452:   const char *family_name;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "455:     a6 = reinterpret_cast<const sockaddr_in6*>(addr);",
          "456:     uv_inet_ntop(AF_INET6, &a6->sin6_addr, ip, sizeof ip);",
          "457:     port = ntohs(a6->sin6_port);",
          "458:     info->Set(address_symbol, String::New(ip));",
          "459:     info->Set(port_symbol, Integer::New(port));",
          "460:     break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "461:     family_name = \"IPv6\";",
          "463:     info->Set(family_symbol, String::New(family_name));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "463:     a4 = reinterpret_cast<const sockaddr_in*>(addr);",
          "464:     uv_inet_ntop(AF_INET, &a4->sin_addr, ip, sizeof ip);",
          "465:     port = ntohs(a4->sin_port);",
          "466:     info->Set(address_symbol, String::New(ip));",
          "467:     info->Set(port_symbol, Integer::New(port));",
          "468:     break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "471:     family_name = \"IPv4\";",
          "473:     info->Set(family_symbol, String::New(family_name));",
          "",
          "---------------"
        ],
        "test/simple/test-dgram-address.js||test/simple/test-dgram-address.js": [
          "File: test/simple/test-dgram-address.js -> test/simple/test-dgram-address.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common');",
          "23: var assert = require('assert');",
          "24: var dgram = require('dgram');",
          "27: var localhost_ipv4 = '127.0.0.1';",
          "28: var socket_ipv4 = dgram.createSocket('udp4');",
          "29: var family_ipv4 = 'IPv4';",
          "31: socket_ipv4.on('listening', function() {",
          "32:   var address_ipv4 = socket_ipv4.address();",
          "33:   assert.strictEqual(address_ipv4.address, localhost_ipv4);",
          "34:   assert.strictEqual(address_ipv4.port, common.PORT);",
          "35:   assert.strictEqual(address_ipv4.family, family_ipv4);",
          "36:   socket_ipv4.close();",
          "37: });",
          "39: socket_ipv4.on('error', function(e) {",
          "40:   console.log('Error on udp4 socket. ' + e.toString());",
          "41:   socket_ipv4.close();",
          "42: });",
          "44: socket_ipv4.bind(common.PORT, localhost_ipv4);",
          "47: var localhost_ipv6 = '::1';",
          "48: var socket_ipv6 = dgram.createSocket('udp6');",
          "49: var family_ipv6 = 'IPv6';",
          "51: socket_ipv6.on('listening', function() {",
          "52:   var address_ipv6 = socket_ipv6.address();",
          "53:   assert.strictEqual(address_ipv6.address, localhost_ipv6);",
          "54:   assert.strictEqual(address_ipv6.port, common.PORT);",
          "55:   assert.strictEqual(address_ipv6.family, family_ipv6);",
          "56:   socket_ipv6.close();",
          "57: });",
          "59: socket_ipv6.on('error', function(e) {",
          "60:   console.log('Error on udp6 socket. ' + e.toString());",
          "61:   socket_ipv6.close();",
          "62: });",
          "64: socket_ipv6.bind(common.PORT, localhost_ipv6);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6a11f3edf429d614fd35a1cbac8b734d8a7e0797",
      "candidate_info": {
        "commit_hash": "6a11f3edf429d614fd35a1cbac8b734d8a7e0797",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/6a11f3edf429d614fd35a1cbac8b734d8a7e0797",
        "files": [
          "lib/repl.js",
          "test/simple/test-repl.js"
        ],
        "message": "repl: fix crashes when buffering command\n\nWrong order of operands was causing problems while trying to use command\nbuffering:\n\n    > {\n    ...   a: 3,\n    ...\n\n    repl.js:284\n            if (cmd.trim().match(/^npm /) && !self.bufferedCommand) {\n                    ^\n    TypeError: Cannot call method 'trim' of undefined\n        at finish (repl.js:284:17)\n        at REPLServer.self.eval (repl.js:118:5)\n        at rli.on.e (repl.js:260:20)\n        at REPLServer.self.eval (repl.js:118:5)\n        at Interface.<anonymous> (repl.js:250:12)\n        at Interface.EventEmitter.emit (events.js:88:17)\n        at Interface._onLine (readline.js:183:10)\n        at Interface._line (readline.js:502:8)\n        at Interface._ttyWrite (readline.js:720:14)\n        at ReadStream.<anonymous> (readline.js:105:12)\n\nTest included.\n\nCloses #3515.\nCloses #3517.\nCloses #3621.",
        "before_after_code_files": [
          "lib/repl.js||lirepl.js",
          "test/simple/test-repl.js||test/simple/test-repl.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/repl.js||lirepl.js": [
          "File: lib/repl.js -> lirepl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "283:       if (isSyntaxError(e)) {",
          "285:           self.outputStream.write('npm should be run outside of the ' +",
          "286:                                   'node repl, in your normal shell.\\n' +",
          "287:                                   '(Press Control-D to exit.)\\n');",
          "",
          "[Removed Lines]",
          "284:         if (cmd.trim().match(/^npm /) && !self.bufferedCommand) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-repl.js||test/simple/test-repl.js": [
          "File: test/simple/test-repl.js -> test/simple/test-repl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "150:       expect: '1' },",
          "152:     { client: client_unix, send: 'npm install foobar',",
          "154:   ]);",
          "155: }",
          "",
          "[Removed Lines]",
          "153:       expect: expect_npm }",
          "",
          "[Added Lines]",
          "153:       expect: expect_npm },",
          "154:     { client: client_unix, send: '(function () {\\n\\nreturn 1;\\n})()',",
          "155:       expect: '1' }",
          "",
          "---------------"
        ]
      }
    }
  ]
}