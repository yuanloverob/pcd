{
  "cve_id": "CVE-2021-41205",
  "cve_desc": "TensorFlow is an open source platform for machine learning. In affected versions the shape inference functions for the `QuantizeAndDequantizeV*` operations can trigger a read outside of bounds of heap allocated array. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "7cf73a2274732c9d82af51c2bc2cf90d13cd7e6d",
  "patch_info": {
    "commit_hash": "7cf73a2274732c9d82af51c2bc2cf90d13cd7e6d",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/7cf73a2274732c9d82af51c2bc2cf90d13cd7e6d",
    "files": [
      "tensorflow/core/ops/array_ops.cc",
      "tensorflow/core/ops/array_ops_test.cc"
    ],
    "message": "Address QuantizeAndDequantizeV* heap oob. Added additional checks for the 'axis' attribute.\n\nPiperOrigin-RevId: 402446942\nChange-Id: Id2f6b82e4e740d0550329be02621c46466b5a5b9",
    "before_after_code_files": [
      "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
      "tensorflow/core/ops/array_ops_test.cc||tensorflow/core/ops/array_ops_test.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc": [
      "File: tensorflow/core/ops/array_ops.cc -> tensorflow/core/ops/array_ops.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "2863:       ShapeHandle minmax;",
      "2864:       TF_RETURN_IF_ERROR(c->WithRank(c->input(1), minmax_rank, &minmax));",
      "2865:       TF_RETURN_IF_ERROR(c->Merge(c->input(2), minmax, &minmax));",
      "2867:         ShapeHandle input;",
      "2868:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
      "2869:         DimensionHandle depth;",
      "",
      "[Removed Lines]",
      "2866:       if (axis != -1) {",
      "",
      "[Added Lines]",
      "2866:       if (axis < -1) {",
      "2867:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
      "2868:                                        axis);",
      "2869:       } else if (axis != -1) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2895:       ShapeHandle minmax;",
      "2896:       TF_RETURN_IF_ERROR(c->WithRank(c->input(1), minmax_rank, &minmax));",
      "2897:       TF_RETURN_IF_ERROR(c->Merge(c->input(2), minmax, &minmax));",
      "2899:         ShapeHandle input;",
      "2900:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
      "2901:         DimensionHandle depth;",
      "",
      "[Removed Lines]",
      "2898:       if (axis != -1) {",
      "",
      "[Added Lines]",
      "2901:       if (axis < -1) {",
      "2902:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
      "2903:                                        axis);",
      "2904:       } else if (axis != -1) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2923:       ShapeHandle minmax;",
      "2924:       TF_RETURN_IF_ERROR(c->WithRank(c->input(2), minmax_rank, &minmax));",
      "2925:       TF_RETURN_IF_ERROR(c->Merge(c->input(3), minmax, &minmax));",
      "2927:         ShapeHandle input;",
      "2928:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
      "2929:         DimensionHandle depth;",
      "",
      "[Removed Lines]",
      "2926:       if (axis != -1) {",
      "",
      "[Added Lines]",
      "2932:       if (axis < -1) {",
      "2933:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
      "2934:                                        axis);",
      "2935:       } else if (axis != -1) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2956:       ShapeHandle minmax;",
      "2957:       TF_RETURN_IF_ERROR(c->WithRank(c->input(1), minmax_rank, &minmax));",
      "2958:       TF_RETURN_IF_ERROR(c->Merge(c->input(2), minmax, &minmax));",
      "2960:         ShapeHandle input;",
      "2961:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
      "2962:         DimensionHandle depth;",
      "",
      "[Removed Lines]",
      "2959:       if (axis != -1) {",
      "",
      "[Added Lines]",
      "2968:       if (axis < -1) {",
      "2969:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
      "2970:                                        axis);",
      "2971:       } else if (axis != -1) {",
      "",
      "---------------"
    ],
    "tensorflow/core/ops/array_ops_test.cc||tensorflow/core/ops/array_ops_test.cc": [
      "File: tensorflow/core/ops/array_ops_test.cc -> tensorflow/core/ops/array_ops_test.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "1374:   INFER_ERROR(\"Shapes must be equal rank, but are 1 and 0\", op,",
      "1375:               \"[1,2,?,4,5];[];[1]\");",
      "1376:   INFER_ERROR(\"Shape must be rank 0 but is rank 1\", op, \"[1,2,?,4,5];[1];[1]\");",
      "1377: }",
      "1379: TEST(ArrayOpsTest, SpaceToBatch_ShapeFn) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1377:   (*op.node_def.mutable_attr())[\"axis\"].set_i(-2);",
      "1378:   INFER_ERROR(\"axis should be at least -1, got -2\", op, \"?;?;?\");",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "52df91c5634e6c666843849a1c6ff29b3d2676be",
      "candidate_info": {
        "commit_hash": "52df91c5634e6c666843849a1c6ff29b3d2676be",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/52df91c5634e6c666843849a1c6ff29b3d2676be",
        "files": [
          "RELEASE.md",
          "tensorflow/cc/gradients/array_grad.cc",
          "tensorflow/compiler/tests/unary_ops_test.py",
          "tensorflow/core/api_def/base_api/api_def_QuantizeAndDequantizeV4.pbtxt",
          "tensorflow/core/api_def/base_api/api_def_QuantizeAndDequantizeV4Grad.pbtxt",
          "tensorflow/core/api_def/java_api/api_def_QuantizeAndDequantizeV4.pbtxt",
          "tensorflow/core/api_def/java_api/api_def_QuantizeAndDequantizeV4Grad.pbtxt",
          "tensorflow/core/api_def/python_api/api_def_QuantizeAndDequantizeV4.pbtxt",
          "tensorflow/core/api_def/python_api/api_def_QuantizeAndDequantizeV4Grad.pbtxt",
          "tensorflow/core/kernels/quantize_and_dequantize_op.cc",
          "tensorflow/core/kernels/quantize_and_dequantize_op.h",
          "tensorflow/core/kernels/quantize_and_dequantize_op_gpu.cu.cc",
          "tensorflow/core/kernels/quantize_and_dequantize_op_test.cc",
          "tensorflow/core/ops/array_ops.cc",
          "tensorflow/python/eager/pywrap_gradient_exclusions.cc",
          "tensorflow/python/kernel_tests/array_ops_test.py",
          "tensorflow/python/ops/array_ops.py",
          "tensorflow/tools/api/golden/v1/tensorflow.pbtxt",
          "tensorflow/tools/api/golden/v1/tensorflow.quantization.pbtxt",
          "tensorflow/tools/api/golden/v1/tensorflow.raw_ops.pbtxt",
          "tensorflow/tools/api/golden/v2/tensorflow.pbtxt",
          "tensorflow/tools/api/golden/v2/tensorflow.quantization.pbtxt",
          "tensorflow/tools/api/golden/v2/tensorflow.raw_ops.pbtxt"
        ],
        "message": "Create a V2 Op to stop the gradient when the input is out of range.\n\nPiperOrigin-RevId: 336692325\nChange-Id: I36fd3fcfc58a30d5218beca512fbfc7c24b8b5cb",
        "before_after_code_files": [
          "tensorflow/cc/gradients/array_grad.cc||tensorflow/cc/gradients/array_grad.cc",
          "tensorflow/compiler/tests/unary_ops_test.py||tensorflow/compiler/tests/unary_ops_test.py",
          "tensorflow/core/api_def/base_api/api_def_QuantizeAndDequantizeV4.pbtxt||tensorflow/core/api_def/base_api/api_def_QuantizeAndDequantizeV4.pbtxt",
          "tensorflow/core/api_def/base_api/api_def_QuantizeAndDequantizeV4Grad.pbtxt||tensorflow/core/api_def/base_api/api_def_QuantizeAndDequantizeV4Grad.pbtxt",
          "tensorflow/core/api_def/java_api/api_def_QuantizeAndDequantizeV4.pbtxt||tensorflow/core/api_def/java_api/api_def_QuantizeAndDequantizeV4.pbtxt",
          "tensorflow/core/api_def/java_api/api_def_QuantizeAndDequantizeV4Grad.pbtxt||tensorflow/core/api_def/java_api/api_def_QuantizeAndDequantizeV4Grad.pbtxt",
          "tensorflow/core/api_def/python_api/api_def_QuantizeAndDequantizeV4.pbtxt||tensorflow/core/api_def/python_api/api_def_QuantizeAndDequantizeV4.pbtxt",
          "tensorflow/core/api_def/python_api/api_def_QuantizeAndDequantizeV4Grad.pbtxt||tensorflow/core/api_def/python_api/api_def_QuantizeAndDequantizeV4Grad.pbtxt",
          "tensorflow/core/kernels/quantize_and_dequantize_op.cc||tensorflow/core/kernels/quantize_and_dequantize_op.cc",
          "tensorflow/core/kernels/quantize_and_dequantize_op.h||tensorflow/core/kernels/quantize_and_dequantize_op.h",
          "tensorflow/core/kernels/quantize_and_dequantize_op_gpu.cu.cc||tensorflow/core/kernels/quantize_and_dequantize_op_gpu.cu.cc",
          "tensorflow/core/kernels/quantize_and_dequantize_op_test.cc||tensorflow/core/kernels/quantize_and_dequantize_op_test.cc",
          "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
          "tensorflow/python/eager/pywrap_gradient_exclusions.cc||tensorflow/python/eager/pywrap_gradient_exclusions.cc",
          "tensorflow/python/kernel_tests/array_ops_test.py||tensorflow/python/kernel_tests/array_ops_test.py",
          "tensorflow/python/ops/array_ops.py||tensorflow/python/ops/array_ops.py",
          "tensorflow/tools/api/golden/v1/tensorflow.pbtxt||tensorflow/tools/api/golden/v1/tensorflow.pbtxt",
          "tensorflow/tools/api/golden/v1/tensorflow.quantization.pbtxt||tensorflow/tools/api/golden/v1/tensorflow.quantization.pbtxt",
          "tensorflow/tools/api/golden/v1/tensorflow.raw_ops.pbtxt||tensorflow/tools/api/golden/v1/tensorflow.raw_ops.pbtxt",
          "tensorflow/tools/api/golden/v2/tensorflow.pbtxt||tensorflow/tools/api/golden/v2/tensorflow.pbtxt",
          "tensorflow/tools/api/golden/v2/tensorflow.quantization.pbtxt||tensorflow/tools/api/golden/v2/tensorflow.quantization.pbtxt",
          "tensorflow/tools/api/golden/v2/tensorflow.raw_ops.pbtxt||tensorflow/tools/api/golden/v2/tensorflow.raw_ops.pbtxt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/cc/gradients/array_grad.cc||tensorflow/cc/gradients/array_grad.cc": [
          "File: tensorflow/cc/gradients/array_grad.cc -> tensorflow/cc/gradients/array_grad.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: #include <vector>",
          "18: #include \"tensorflow/cc/ops/array_ops_internal.h\"",
          "19: #include \"tensorflow/cc/ops/standard_ops.h\"",
          "20: #include \"tensorflow/core/lib/strings/strcat.h\"",
          "25: namespace tensorflow {",
          "26: namespace ops {",
          "27: namespace {",
          "",
          "[Removed Lines]",
          "22: #include \"tensorflow/cc/framework/grad_op_registry.h\"",
          "23: #include \"tensorflow/cc/framework/gradients.h\"",
          "",
          "[Added Lines]",
          "18: #include \"tensorflow/cc/framework/grad_op_registry.h\"",
          "19: #include \"tensorflow/cc/framework/gradients.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "90: }",
          "91: REGISTER_GRADIENT_OP(\"QuantizeAndDequantize\", QuantizeAndDequantizeGrad);",
          "99:   return scope.status();",
          "100: }",
          "103: Status QuantizeAndDequantizeV3Grad(const Scope& scope, const Operation& op,",
          "104:                                    const std::vector<Output>& grad_inputs,",
          "",
          "[Removed Lines]",
          "93: Status QuantizeAndDequantizeV2Grad(const Scope& scope, const Operation& op,",
          "94:                                    const std::vector<Output>& grad_inputs,",
          "95:                                    std::vector<Output>* grad_outputs) {",
          "96:   grad_outputs->push_back(Identity(scope, grad_inputs[0]));",
          "97:   grad_outputs->push_back(NoGradient());",
          "98:   grad_outputs->push_back(NoGradient());",
          "101: REGISTER_GRADIENT_OP(\"QuantizeAndDequantizeV2\", QuantizeAndDequantizeV2Grad);",
          "",
          "[Added Lines]",
          "92: Status QuantizeAndDequantizeV4GradHelper(const Scope& scope,",
          "93:                                          const Operation& op,",
          "94:                                          const std::vector<Output>& grad_inputs,",
          "95:                                          std::vector<Output>* grad_outputs) {",
          "96:   Input input = Shape(scope, op.input(0));",
          "97:   Input input_min = op.input(1);",
          "98:   Input input_max = op.input(2);",
          "99:   int64 axis;",
          "100:   TF_RETURN_IF_ERROR(GetNodeAttr(op.node()->attrs(), \"axis\", &axis));",
          "101:   auto qdq_v4_grad = QuantizeAndDequantizeV4Grad(",
          "102:       scope, grad_inputs[0], input, input_min, input_max,",
          "103:       QuantizeAndDequantizeV4Grad::Axis(axis));",
          "104:   grad_outputs->push_back(qdq_v4_grad.input_backprop);",
          "105:   grad_outputs->push_back(qdq_v4_grad.input_min_backprop);",
          "106:   grad_outputs->push_back(qdq_v4_grad.input_max_backprop);",
          "109: REGISTER_GRADIENT_OP(\"QuantizeAndDequantizeV4\",",
          "110:                      QuantizeAndDequantizeV4GradHelper);",
          "",
          "---------------"
        ],
        "tensorflow/compiler/tests/unary_ops_test.py||tensorflow/compiler/tests/unary_ops_test.py": [
          "File: tensorflow/compiler/tests/unary_ops_test.py -> tensorflow/compiler/tests/unary_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "542:     for dtype in self.float_types:",
          "544:       def quantize_and_dequantize_v2(x):",
          "546:             x, -127, 127, signed_input=True, num_bits=8)",
          "548:       self._assertOpOutputMatchesExpected(",
          "",
          "[Removed Lines]",
          "545:         return array_ops.quantize_and_dequantize_v2(",
          "",
          "[Added Lines]",
          "545:         return array_ops.quantize_and_dequantize(",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "551:           expected=np.array([-1., -0.5, 0., 0.296875], dtype=dtype))",
          "553:       def quantize_and_dequantize_v2_round_half_up(x):",
          "555:             x,",
          "556:             -1,",
          "557:             1.0,",
          "",
          "[Removed Lines]",
          "554:         return array_ops.quantize_and_dequantize_v2(",
          "",
          "[Added Lines]",
          "554:         return array_ops.quantize_and_dequantize(",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "575:                             dtype=dtype))",
          "577:       def quantize_and_dequantize_v2_round_half_to_even(x):",
          "579:             x,",
          "580:             -1.0,",
          "581:             1.0,",
          "",
          "[Removed Lines]",
          "578:         return array_ops.quantize_and_dequantize_v2(",
          "",
          "[Added Lines]",
          "578:         return array_ops.quantize_and_dequantize(",
          "",
          "---------------"
        ],
        "tensorflow/core/api_def/base_api/api_def_QuantizeAndDequantizeV4.pbtxt||tensorflow/core/api_def/base_api/api_def_QuantizeAndDequantizeV4.pbtxt": [
          "File: tensorflow/core/api_def/base_api/api_def_QuantizeAndDequantizeV4.pbtxt -> tensorflow/core/api_def/base_api/api_def_QuantizeAndDequantizeV4.pbtxt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: op {",
          "2:   graph_op_name: \"QuantizeAndDequantizeV4\"",
          "3:   summary: \"Returns the gradient of `QuantizeAndDequantizeV4`.\"",
          "4:   description: <<END",
          "5: This is almost identical to QuantizeAndDequantizeV2, except that it returns a",
          "6: gradient of 1 for inputs that are within the quantization range, or 0 otherwise.",
          "7: END",
          "8: }",
          "",
          "---------------"
        ],
        "tensorflow/core/api_def/base_api/api_def_QuantizeAndDequantizeV4Grad.pbtxt||tensorflow/core/api_def/base_api/api_def_QuantizeAndDequantizeV4Grad.pbtxt": [
          "File: tensorflow/core/api_def/base_api/api_def_QuantizeAndDequantizeV4Grad.pbtxt -> tensorflow/core/api_def/base_api/api_def_QuantizeAndDequantizeV4Grad.pbtxt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: op {",
          "2:   graph_op_name: \"QuantizeAndDequantizeV4Grad\"",
          "3:   summary: \"Returns the gradient of `QuantizeAndDequantizeV4`.\"",
          "4:   description: <<END",
          "5: Returns a gradient of 1 for inputs that are within the quantization range,",
          "6: or 0 otherwise.",
          "7: END",
          "8: }",
          "",
          "---------------"
        ],
        "tensorflow/core/api_def/java_api/api_def_QuantizeAndDequantizeV4.pbtxt||tensorflow/core/api_def/java_api/api_def_QuantizeAndDequantizeV4.pbtxt": [
          "File: tensorflow/core/api_def/java_api/api_def_QuantizeAndDequantizeV4.pbtxt -> tensorflow/core/api_def/java_api/api_def_QuantizeAndDequantizeV4.pbtxt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: op {",
          "2:   graph_op_name: \"QuantizeAndDequantizeV4Grad\"",
          "3: }",
          "",
          "---------------"
        ],
        "tensorflow/core/api_def/java_api/api_def_QuantizeAndDequantizeV4Grad.pbtxt||tensorflow/core/api_def/java_api/api_def_QuantizeAndDequantizeV4Grad.pbtxt": [
          "File: tensorflow/core/api_def/java_api/api_def_QuantizeAndDequantizeV4Grad.pbtxt -> tensorflow/core/api_def/java_api/api_def_QuantizeAndDequantizeV4Grad.pbtxt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: op {",
          "2:   graph_op_name: \"QuantizeAndDequantizeV4Grad\"",
          "3: }",
          "",
          "---------------"
        ],
        "tensorflow/core/api_def/python_api/api_def_QuantizeAndDequantizeV4.pbtxt||tensorflow/core/api_def/python_api/api_def_QuantizeAndDequantizeV4.pbtxt": [
          "File: tensorflow/core/api_def/python_api/api_def_QuantizeAndDequantizeV4.pbtxt -> tensorflow/core/api_def/python_api/api_def_QuantizeAndDequantizeV4.pbtxt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: op {",
          "2:   graph_op_name: \"QuantizeAndDequantizeV4Grad\"",
          "3:   visibility: HIDDEN",
          "4: }",
          "",
          "---------------"
        ],
        "tensorflow/core/api_def/python_api/api_def_QuantizeAndDequantizeV4Grad.pbtxt||tensorflow/core/api_def/python_api/api_def_QuantizeAndDequantizeV4Grad.pbtxt": [
          "File: tensorflow/core/api_def/python_api/api_def_QuantizeAndDequantizeV4Grad.pbtxt -> tensorflow/core/api_def/python_api/api_def_QuantizeAndDequantizeV4Grad.pbtxt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: op {",
          "2:   graph_op_name: \"QuantizeAndDequantizeV4Grad\"",
          "3:   visibility: HIDDEN",
          "4: }",
          "",
          "---------------"
        ],
        "tensorflow/core/kernels/quantize_and_dequantize_op.cc||tensorflow/core/kernels/quantize_and_dequantize_op.cc": [
          "File: tensorflow/core/kernels/quantize_and_dequantize_op.cc -> tensorflow/core/kernels/quantize_and_dequantize_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "131:   bool narrow_range_;",
          "132: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139: template <typename Device, typename T>",
          "140: class QuantizeAndDequantizeV4GradientOp : public OpKernel {",
          "141:  public:",
          "142:   explicit QuantizeAndDequantizeV4GradientOp(OpKernelConstruction* ctx)",
          "143:       : OpKernel::OpKernel(ctx) {",
          "144:     OP_REQUIRES_OK(ctx, ctx->GetAttr(\"axis\", &axis_));",
          "145:   }",
          "147:   void Compute(OpKernelContext* ctx) override {",
          "148:     const Tensor& gradient = ctx->input(0);",
          "149:     const Tensor& input = ctx->input(1);",
          "150:     Tensor* input_backprop = nullptr;",
          "151:     OP_REQUIRES_OK(ctx,",
          "152:                    ctx->allocate_output(0, input.shape(), &input_backprop));",
          "154:     OP_REQUIRES(",
          "155:         ctx, input.IsSameSize(gradient),",
          "156:         errors::InvalidArgument(\"gradient and input must be the same size\"));",
          "157:     const int depth = (axis_ == -1) ? 1 : input.dim_size(axis_);",
          "158:     const Tensor& input_min_tensor = ctx->input(2);",
          "159:     const Tensor& input_max_tensor = ctx->input(3);",
          "160:     if (axis_ != -1) {",
          "161:       OP_REQUIRES(",
          "162:           ctx, input_min_tensor.dim_size(0) == depth,",
          "163:           errors::InvalidArgument(\"min has incorrect size, expected \", depth,",
          "164:                                   \" was \", input_min_tensor.dim_size(0)));",
          "165:       OP_REQUIRES(",
          "166:           ctx, input_max_tensor.dim_size(0) == depth,",
          "167:           errors::InvalidArgument(\"max has incorrect size, expected \", depth,",
          "168:                                   \" was \", input_max_tensor.dim_size(0)));",
          "169:     }",
          "171:     TensorShape min_max_shape(input_min_tensor.shape());",
          "172:     Tensor* input_min_backprop;",
          "173:     OP_REQUIRES_OK(ctx,",
          "174:                    ctx->allocate_output(1, min_max_shape, &input_min_backprop));",
          "176:     Tensor* input_max_backprop;",
          "177:     OP_REQUIRES_OK(ctx,",
          "178:                    ctx->allocate_output(2, min_max_shape, &input_max_backprop));",
          "180:     if (axis_ == -1) {",
          "181:       functor::QuantizeAndDequantizeOneScaleGradientFunctor<Device, T> f;",
          "182:       f(ctx->eigen_device<Device>(), gradient.template flat<T>(),",
          "183:         input.template flat<T>(), input_min_tensor.scalar<T>(),",
          "184:         input_max_tensor.scalar<T>(), input_backprop->template flat<T>(),",
          "185:         input_min_backprop->template scalar<T>(),",
          "186:         input_max_backprop->template scalar<T>());",
          "187:     } else {",
          "188:       functor::QuantizeAndDequantizePerChannelGradientFunctor<Device, T> f;",
          "189:       f(ctx->eigen_device<Device>(),",
          "190:         gradient.template flat_inner_outer_dims<T, 3>(axis_ - 1),",
          "191:         input.template flat_inner_outer_dims<T, 3>(axis_ - 1),",
          "192:         &input_min_tensor, &input_max_tensor,",
          "193:         input_backprop->template flat_inner_outer_dims<T, 3>(axis_ - 1),",
          "194:         input_min_backprop->template flat<T>(),",
          "195:         input_max_backprop->template flat<T>());",
          "196:     }",
          "197:   }",
          "199:  private:",
          "200:   int axis_;",
          "201: };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "295:         input_max_tensor, round_mode, narrow_range, out);",
          "296:   }",
          "297: };",
          "298: }  // namespace functor",
          "300: #define REGISTER_CPU_KERNEL(T)                                                 \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "368: template <typename T>",
          "369: struct QuantizeAndDequantizeOneScaleGradientFunctor<CPUDevice, T> {",
          "370:   void operator()(const CPUDevice& d, typename TTypes<T>::ConstFlat gradient,",
          "371:                   typename TTypes<T>::ConstFlat input,",
          "372:                   typename TTypes<T>::ConstScalar input_min_tensor,",
          "373:                   typename TTypes<T>::ConstScalar input_max_tensor,",
          "374:                   typename TTypes<T>::Flat input_backprop,",
          "375:                   typename TTypes<T>::Scalar input_min_backprop,",
          "376:                   typename TTypes<T>::Scalar input_max_backprop) {",
          "377:     QuantizeAndDequantizeOneScaleGradientImpl<CPUDevice, T>::Compute(",
          "378:         d, gradient, input, input_min_tensor, input_max_tensor, input_backprop,",
          "379:         input_min_backprop, input_max_backprop);",
          "380:   }",
          "381: };",
          "383: template <typename T>",
          "384: struct QuantizeAndDequantizePerChannelGradientFunctor<CPUDevice, T> {",
          "385:   void operator()(const CPUDevice& d,",
          "386:                   typename TTypes<T, 3>::ConstTensor gradient,",
          "387:                   typename TTypes<T, 3>::ConstTensor input,",
          "388:                   const Tensor* input_min_tensor,",
          "389:                   const Tensor* input_max_tensor,",
          "390:                   typename TTypes<T, 3>::Tensor input_backprop,",
          "391:                   typename TTypes<T>::Flat input_min_backprop,",
          "392:                   typename TTypes<T>::Flat input_max_backprop) {",
          "393:     QuantizeAndDequantizePerChannelGradientImpl<CPUDevice, T>::Compute(",
          "394:         d, gradient, input, input_min_tensor, input_max_tensor, input_backprop,",
          "395:         input_min_backprop, input_max_backprop);",
          "396:   }",
          "397: };",
          "399: template struct functor::QuantizeAndDequantizeOneScaleGradientFunctor<CPUDevice,",
          "400:                                                                       float>;",
          "401: template struct functor::QuantizeAndDequantizePerChannelGradientFunctor<",
          "402:     CPUDevice, double>;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "306:                               .Device(DEVICE_CPU)                              \\",
          "307:                               .TypeConstraint<T>(\"T\"),                         \\",
          "308:                           QuantizeAndDequantizeV3Op<CPUDevice, T>);            \\",
          "309:   REGISTER_KERNEL_BUILDER(                                                     \\",
          "310:       Name(\"QuantizeAndDequantize\").Device(DEVICE_CPU).TypeConstraint<T>(\"T\"), \\",
          "311:       QuantizeAndDequantizeOp<CPUDevice, T>);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "415:   REGISTER_KERNEL_BUILDER(Name(\"QuantizeAndDequantizeV4\")                      \\",
          "416:                               .Device(DEVICE_CPU)                              \\",
          "417:                               .TypeConstraint<T>(\"T\"),                         \\",
          "418:                           QuantizeAndDequantizeV2Op<CPUDevice, T>);            \\",
          "419:   REGISTER_KERNEL_BUILDER(Name(\"QuantizeAndDequantizeV4Grad\")                  \\",
          "420:                               .Device(DEVICE_CPU)                              \\",
          "421:                               .TypeConstraint<T>(\"T\"),                         \\",
          "422:                           QuantizeAndDequantizeV4GradientOp<CPUDevice, T>);    \\",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "329:                               .HostMemory(\"num_bits\")                          \\",
          "330:                               .TypeConstraint<T>(\"T\"),                         \\",
          "331:                           QuantizeAndDequantizeV3Op<GPUDevice, T>);            \\",
          "332:   REGISTER_KERNEL_BUILDER(                                                     \\",
          "333:       Name(\"QuantizeAndDequantize\").Device(DEVICE_GPU).TypeConstraint<T>(\"T\"), \\",
          "334:       QuantizeAndDequantizeOp<GPUDevice, T>);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "446:   REGISTER_KERNEL_BUILDER(Name(\"QuantizeAndDequantizeV4\")                      \\",
          "447:                               .Device(DEVICE_GPU)                              \\",
          "448:                               .HostMemory(\"input_min\")                         \\",
          "449:                               .HostMemory(\"input_max\")                         \\",
          "450:                               .TypeConstraint<T>(\"T\"),                         \\",
          "451:                           QuantizeAndDequantizeV2Op<GPUDevice, T>);            \\",
          "452:   REGISTER_KERNEL_BUILDER(Name(\"QuantizeAndDequantizeV4Grad\")                  \\",
          "453:                               .Device(DEVICE_GPU)                              \\",
          "454:                               .HostMemory(\"input_min\")                         \\",
          "455:                               .HostMemory(\"input_max\")                         \\",
          "456:                               .TypeConstraint<T>(\"T\"),                         \\",
          "457:                           QuantizeAndDequantizeV4GradientOp<GPUDevice, T>);    \\",
          "",
          "---------------"
        ],
        "tensorflow/core/kernels/quantize_and_dequantize_op.h||tensorflow/core/kernels/quantize_and_dequantize_op.h": [
          "File: tensorflow/core/kernels/quantize_and_dequantize_op.h -> tensorflow/core/kernels/quantize_and_dequantize_op.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "60:                   typename TTypes<T, 3>::Tensor output);",
          "61: };",
          "64: template <typename Device, typename T, typename Func,",
          "65:           typename Vec = typename TTypes<T>::Vec,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63: template <typename Device, typename T>",
          "64: struct QuantizeAndDequantizeOneScaleGradientFunctor {",
          "65:   void operator()(const Device& d, typename TTypes<T>::ConstFlat gradient,",
          "66:                   typename TTypes<T>::ConstFlat input,",
          "67:                   typename TTypes<T>::ConstScalar input_min,",
          "68:                   typename TTypes<T>::ConstScalar input_max,",
          "69:                   typename TTypes<T>::Flat input_backprop,",
          "70:                   typename TTypes<T>::Scalar input_min_backprop,",
          "71:                   typename TTypes<T>::Scalar input_max_backprop);",
          "72: };",
          "74: template <typename Device, typename T>",
          "75: struct QuantizeAndDequantizePerChannelGradientFunctor {",
          "76:   void operator()(const Device& d, typename TTypes<T, 3>::ConstTensor gradient,",
          "77:                   typename TTypes<T, 3>::ConstTensor input,",
          "78:                   const Tensor* input_min_tensor,",
          "79:                   const Tensor* input_max_tensor,",
          "80:                   typename TTypes<T, 3>::Tensor input_backprop,",
          "81:                   typename TTypes<T>::Flat input_min_backprop,",
          "82:                   typename TTypes<T>::Flat input_max_backprop);",
          "83: };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "249:   }",
          "250: };",
          "252: }  // end of namespace functor",
          "253: }  // end of namespace tensorflow",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "274: template <typename Device, typename T>",
          "275: struct QuantizeAndDequantizeOneScaleGradientImpl {",
          "276:   static void Compute(const Device& d, typename TTypes<T>::ConstFlat gradient,",
          "277:                       typename TTypes<T>::ConstFlat input,",
          "278:                       typename TTypes<T>::ConstScalar input_min,",
          "279:                       typename TTypes<T>::ConstScalar input_max,",
          "280:                       typename TTypes<T>::Flat input_backprop,",
          "281:                       typename TTypes<T>::Scalar input_min_backprop,",
          "282:                       typename TTypes<T>::Scalar input_max_backprop) {",
          "283:     const T min_val = input_min();",
          "284:     const T max_val = input_max();",
          "285:     const auto in_range =",
          "286:         (input >= min_val && input <= max_val)",
          "287:             .select(input.constant(1.0f), input.constant(0.0f));",
          "288:     input_backprop.device(d) = gradient * in_range;",
          "289:     input_min_backprop.device(d) = input_min_backprop.constant(0.0f);",
          "290:     input_max_backprop.device(d) = input_max_backprop.constant(0.0f);",
          "291:   }",
          "292: };",
          "294: template <typename Device, typename T>",
          "295: struct QuantizeAndDequantizePerChannelGradientImpl {",
          "296:   static void Compute(const Device& d,",
          "297:                       typename TTypes<T, 3>::ConstTensor gradient,",
          "298:                       typename TTypes<T, 3>::ConstTensor input,",
          "299:                       const Tensor* input_min_tensor,",
          "300:                       const Tensor* input_max_tensor,",
          "301:                       typename TTypes<T, 3>::Tensor input_backprop,",
          "302:                       typename TTypes<T>::Flat input_min_backprop,",
          "303:                       typename TTypes<T>::Flat input_max_backprop) {",
          "304:     using Index = typename tensorflow::TTypes<T>::ConstTensor::Index;",
          "305:     auto input_min = input_min_tensor->vec<T>();",
          "306:     auto input_max = input_max_tensor->vec<T>();",
          "307:     int num_channels = input.dimension(1);",
          "308:     for (Index i = 0; i < num_channels; ++i) {",
          "309:       const auto gradient_chip = gradient.template chip<1>(i);",
          "310:       const auto input_chip = input.template chip<1>(i);",
          "311:       const T min_val = input_min(i);",
          "312:       const T max_val = input_max(i);",
          "313:       const auto in_range =",
          "314:           (input_chip >= min_val && input_chip <= max_val)",
          "315:               .select(input_chip.constant(1.0f), input_chip.constant(0.0f));",
          "316:       input_backprop.template chip<1>(i).device(d) = gradient_chip * in_range;",
          "317:     }",
          "318:     input_min_backprop.device(d) = input_min_backprop.constant(0.0f);",
          "319:     input_max_backprop.device(d) = input_max_backprop.constant(0.0f);",
          "320:   }",
          "321: };",
          "",
          "---------------"
        ],
        "tensorflow/core/kernels/quantize_and_dequantize_op_gpu.cu.cc||tensorflow/core/kernels/quantize_and_dequantize_op_gpu.cu.cc": [
          "File: tensorflow/core/kernels/quantize_and_dequantize_op_gpu.cu.cc -> tensorflow/core/kernels/quantize_and_dequantize_op_gpu.cu.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:   }",
          "54: };",
          "56: }  // end namespace functor",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56: template <typename T>",
          "57: struct QuantizeAndDequantizeOneScaleGradientFunctor<GPUDevice, T> {",
          "58:   void operator()(const GPUDevice& d, typename TTypes<T>::ConstFlat gradient,",
          "59:                   typename TTypes<T>::ConstFlat input,",
          "60:                   typename TTypes<T>::ConstScalar input_min_tensor,",
          "61:                   typename TTypes<T>::ConstScalar input_max_tensor,",
          "62:                   typename TTypes<T>::Flat input_backprop,",
          "63:                   typename TTypes<T>::Scalar input_min_backprop,",
          "64:                   typename TTypes<T>::Scalar input_max_backprop) {",
          "65:     QuantizeAndDequantizeOneScaleGradientImpl<GPUDevice, T>::Compute(",
          "66:         d, gradient, input, input_min_tensor, input_max_tensor, input_backprop,",
          "67:         input_min_backprop, input_max_backprop);",
          "68:   }",
          "69: };",
          "71: template <typename T>",
          "72: struct QuantizeAndDequantizePerChannelGradientFunctor<GPUDevice, T> {",
          "73:   void operator()(const GPUDevice& d,",
          "74:                   typename TTypes<T, 3>::ConstTensor gradient,",
          "75:                   typename TTypes<T, 3>::ConstTensor input,",
          "76:                   const Tensor* input_min_tensor,",
          "77:                   const Tensor* input_max_tensor,",
          "78:                   typename TTypes<T, 3>::Tensor input_backprop,",
          "79:                   typename TTypes<T>::Flat input_min_backprop,",
          "80:                   typename TTypes<T>::Flat input_max_backprop) {",
          "81:     QuantizeAndDequantizePerChannelGradientImpl<GPUDevice, T>::Compute(",
          "82:         d, gradient, input, input_min_tensor, input_max_tensor, input_backprop,",
          "83:         input_min_backprop, input_max_backprop);",
          "84:   }",
          "85: };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "65: template struct functor::QuantizeAndDequantizePerChannelFunctor<GPUDevice,",
          "66:                                                                 double>;",
          "68: }  // end namespace tensorflow",
          "70: #endif  // GOOGLE_CUDA || TENSORFLOW_USE_ROCM",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "99: template struct functor::QuantizeAndDequantizeOneScaleGradientFunctor<GPUDevice,",
          "100:                                                                       float>;",
          "101: template struct functor::QuantizeAndDequantizeOneScaleGradientFunctor<GPUDevice,",
          "102:                                                                       double>;",
          "103: template struct functor::QuantizeAndDequantizePerChannelGradientFunctor<",
          "104:     GPUDevice, float>;",
          "105: template struct functor::QuantizeAndDequantizePerChannelGradientFunctor<",
          "106:     GPUDevice, double>;",
          "",
          "---------------"
        ],
        "tensorflow/core/kernels/quantize_and_dequantize_op_test.cc||tensorflow/core/kernels/quantize_and_dequantize_op_test.cc": [
          "File: tensorflow/core/kernels/quantize_and_dequantize_op_test.cc -> tensorflow/core/kernels/quantize_and_dequantize_op_test.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "362:   }",
          "363: }",
          "366: INSTANTIATE_TEST_SUITE_P(All, ParameterizedQuantizeAndDequantizeTest,",
          "367:                          ::testing::Values(-1, 1, 3));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "366: TEST_P(ParameterizedQuantizeAndDequantizeTest, GradientV4_op) {",
          "367:   const int axis = GetParam();",
          "368:   TF_ASSERT_OK(NodeDefBuilder(\"qdq_v4_grad_op\", \"QuantizeAndDequantizeV4Grad\")",
          "369:                    .Input(FakeInput(DT_FLOAT))",
          "370:                    .Input(FakeInput(DT_FLOAT))",
          "371:                    .Input(FakeInput(DT_FLOAT))",
          "372:                    .Input(FakeInput(DT_FLOAT))",
          "373:                    .Attr(\"axis\", axis)",
          "374:                    .Finalize(node_def()));",
          "375:   TF_ASSERT_OK(InitOp());",
          "376:   const std::vector<int64> dims = {2, 3, 4, 5};",
          "378:   auto gradients = ScalePerSliceAlongAxis<float>(",
          "379:       dims, axis, {1, -2, -3, 4, 5, 6, -7, -8, -9, -10, 11});",
          "380:   AddInputFromArray<float>(TensorShape(dims), gradients);",
          "382:   auto inputs = ScalePerSliceAlongAxis<float>(",
          "383:       dims, axis, {-1, -0.5, 0, 0.3, 0.8, 0.55, 0.6});",
          "384:   AddInputFromArray<float>(TensorShape(dims), inputs);",
          "385:   const int num_slices = (axis == -1) ? 1 : dims[axis];",
          "386:   const TensorShape range_shape =",
          "387:       (axis == -1) ? TensorShape({}) : TensorShape({num_slices});",
          "388:   std::vector<float> input_min_values(num_slices), input_max_values(num_slices);",
          "389:   for (int i = 0; i < num_slices; ++i) {",
          "390:     input_max_values[i] = 0.8f + i * 0.4f;",
          "391:     input_min_values[i] = -input_max_values[i];",
          "392:   }",
          "393:   AddInputFromArray<float>(range_shape, input_min_values);",
          "394:   AddInputFromArray<float>(range_shape, input_max_values);",
          "395:   std::vector<float> expected_vals(inputs.size());",
          "396:   int minor_size = 1;",
          "397:   for (int i = axis + 1; i < dims.size(); ++i) {",
          "398:     minor_size *= dims[i];",
          "399:   }",
          "400:   for (int i = 0; i < inputs.size(); ++i) {",
          "401:     int slice_idx = (i / minor_size) % num_slices;",
          "402:     expected_vals[i] = ((inputs[i] >= input_min_values[slice_idx]) &&",
          "403:                         (inputs[i] <= input_max_values[slice_idx]))",
          "404:                            ? gradients[i]",
          "405:                            : 0;",
          "406:   }",
          "407:   TF_ASSERT_OK(RunOpKernel());",
          "408:   Tensor expected(allocator(), DT_FLOAT, TensorShape(dims));",
          "409:   test::FillValues<float>(&expected, expected_vals);",
          "410:   test::ExpectTensorNear<float>(expected, *GetOutput(0), 1e-5);",
          "411: }",
          "",
          "---------------"
        ],
        "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc": [
          "File: tensorflow/core/ops/array_ops.cc -> tensorflow/core/ops/array_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2808:       return Status::OK();",
          "2809:     });",
          "2811: REGISTER_OP(\"QuantizeAndDequantizeV3\")",
          "2812:     .Input(\"input: T\")",
          "2813:     .Input(\"input_min: T\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2811: REGISTER_OP(\"QuantizeAndDequantizeV4\")",
          "2812:     .Input(\"input: T\")",
          "2813:     .Input(\"input_min: T\")",
          "2814:     .Input(\"input_max: T\")",
          "2815:     .Attr(\"signed_input: bool = true\")",
          "2816:     .Attr(\"num_bits: int = 8\")",
          "2817:     .Attr(\"range_given: bool = false\")",
          "2818:     .Output(\"output: T\")",
          "2819:     .Attr(\"T: {bfloat16, half, float, double}\")",
          "2820:     .Attr(",
          "2821:         \"round_mode: {'HALF_TO_EVEN', 'HALF_UP'} = \"",
          "2822:         \"'HALF_TO_EVEN'\")",
          "2823:     .Attr(\"narrow_range: bool = false\")",
          "2824:     .Attr(\"axis: int = -1\")",
          "2825:     .SetShapeFn([](InferenceContext* c) {",
          "2826:       int axis;",
          "2827:       TF_RETURN_IF_ERROR(c->GetAttr(\"axis\", &axis));",
          "2828:       const int minmax_rank = (axis == -1) ? 0 : 1;",
          "2829:       ShapeHandle minmax;",
          "2830:       TF_RETURN_IF_ERROR(c->WithRank(c->input(1), minmax_rank, &minmax));",
          "2831:       TF_RETURN_IF_ERROR(c->Merge(c->input(2), minmax, &minmax));",
          "2832:       if (axis != -1) {",
          "2833:         ShapeHandle input;",
          "2834:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2835:         DimensionHandle depth;",
          "2836:         TF_RETURN_IF_ERROR(",
          "2837:             c->Merge(c->Dim(minmax, 0), c->Dim(input, axis), &depth));",
          "2838:       }",
          "2839:       c->set_output(0, c->input(0));",
          "2840:       return Status::OK();",
          "2841:     });",
          "2843: REGISTER_OP(\"QuantizeAndDequantizeV4Grad\")",
          "2844:     .Input(\"gradients: T\")",
          "2845:     .Input(\"input: T\")",
          "2846:     .Input(\"input_min: T\")",
          "2847:     .Input(\"input_max: T\")",
          "2848:     .Output(\"input_backprop: T\")",
          "2849:     .Output(\"input_min_backprop: T\")",
          "2850:     .Output(\"input_max_backprop: T\")",
          "2851:     .Attr(\"T: {bfloat16, half, float, double}\")",
          "2852:     .Attr(\"axis: int = -1\")",
          "2853:     .SetShapeFn([](InferenceContext* c) {",
          "2854:       int axis;",
          "2855:       TF_RETURN_IF_ERROR(c->GetAttr(\"axis\", &axis));",
          "2856:       const int minmax_rank = (axis == -1) ? 0 : 1;",
          "2857:       ShapeHandle minmax;",
          "2858:       TF_RETURN_IF_ERROR(c->WithRank(c->input(2), minmax_rank, &minmax));",
          "2859:       TF_RETURN_IF_ERROR(c->Merge(c->input(3), minmax, &minmax));",
          "2860:       if (axis != -1) {",
          "2861:         ShapeHandle input;",
          "2862:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2863:         DimensionHandle depth;",
          "2864:         TF_RETURN_IF_ERROR(",
          "2865:             c->Merge(c->Dim(minmax, 0), c->Dim(input, axis), &depth));",
          "2866:       }",
          "2867:       ShapeHandle inputs;",
          "2868:       TF_RETURN_IF_ERROR(c->Merge(c->input(0), c->input(1), &inputs));",
          "2869:       c->set_output(0, inputs);",
          "2870:       c->set_output(1, minmax);",
          "2871:       c->set_output(2, minmax);",
          "2872:       return Status::OK();",
          "2873:     });",
          "",
          "---------------"
        ],
        "tensorflow/python/eager/pywrap_gradient_exclusions.cc||tensorflow/python/eager/pywrap_gradient_exclusions.cc": [
          "File: tensorflow/python/eager/pywrap_gradient_exclusions.cc -> tensorflow/python/eager/pywrap_gradient_exclusions.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "51: absl::optional<tensorflow::gtl::FlatSet<int>> OpGradientUnusedInputIndices(",
          "52:     const tensorflow::string &op_name) {",
          "54:       {\"Acosh\"},",
          "55:       {\"AllToAll\", 1, {0}},",
          "56:       {\"ApproximateEqual\"},",
          "",
          "[Removed Lines]",
          "53:   static std::array<OpIndexInfo, 357> a = {{",
          "",
          "[Added Lines]",
          "53:   static std::array<OpIndexInfo, 358> a = {{",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "227:       {\"QuantizeAndDequantize\"},",
          "228:       {\"QuantizeAndDequantizeV2\"},",
          "229:       {\"QuantizeAndDequantizeV3\"},",
          "230:       {\"QueueClose\"},",
          "231:       {\"QueueDequeue\"},",
          "232:       {\"QueueDequeueMany\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "230:       {\"QuantizeAndDequantizeV4Grad\", 1, {3}},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "421: absl::optional<tensorflow::gtl::FlatSet<int>> OpGradientUnusedOutputIndices(",
          "422:     const tensorflow::string &op_name) {",
          "424:       {\"Abs\"},",
          "425:       {\"AccumulateNV2\"},",
          "426:       {\"Acos\"},",
          "",
          "[Removed Lines]",
          "423:   static std::array<OpIndexInfo, 473> a = {{",
          "",
          "[Added Lines]",
          "424:   static std::array<OpIndexInfo, 475> a = {{",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "669:       {\"QuantizeAndDequantize\"},",
          "670:       {\"QuantizeAndDequantizeV2\"},",
          "671:       {\"QuantizeAndDequantizeV3\"},",
          "672:       {\"QueueClose\"},",
          "673:       {\"QueueEnqueue\"},",
          "674:       {\"QueueEnqueueMany\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "673:       {\"QuantizeAndDequantizeV4\"},",
          "674:       {\"QuantizeAndDequantizeV4Grad\"},",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/array_ops_test.py||tensorflow/python/kernel_tests/array_ops_test.py": [
          "File: tensorflow/python/kernel_tests/array_ops_test.py -> tensorflow/python/kernel_tests/array_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1610:         expected = self._scale_per_slice(shape, axis, quant_values)",
          "1611:         unused_minmax_value = 0 if axis is None else [0] * shape[axis]",
          "1612:         fake_quantized = self.evaluate(",
          "1614:                 inputs,",
          "1615:                 unused_minmax_value,",
          "1616:                 unused_minmax_value,",
          "",
          "[Removed Lines]",
          "1613:             array_ops.quantize_and_dequantize(",
          "",
          "[Added Lines]",
          "1613:             array_ops.quantize_and_dequantize_v2(",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1620:         self.assertAllEqual(fake_quantized, expected)",
          "1621:         if axis is not None:",
          "1622:           fake_quantized = self.evaluate(",
          "1624:                   inputs,",
          "1625:                   unused_minmax_value,",
          "1626:                   unused_minmax_value,",
          "",
          "[Removed Lines]",
          "1623:               array_ops.quantize_and_dequantize(",
          "",
          "[Added Lines]",
          "1623:               array_ops.quantize_and_dequantize_v2(",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1628:                   axis=(axis - 4)))",
          "1629:           self.assertAllClose(fake_quantized, expected)",
          "1632: @test_util.run_all_in_graph_and_eager_modes",
          "1633: class SortedSearchTest(test_util.TensorFlowTestCase):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1631:   def testQuantizeDequantizeGrad(self):",
          "1632:     shape = (2, 2)",
          "1633:     max_threshold = 0",
          "1634:     min_threshold = -10",
          "1635:     input_value = np.random.rand(2, 2) * 40.0 - 20.0",
          "1636:     input_tensor = constant_op.constant(input_value, shape=shape,",
          "1637:                                         name=\"input_tensor\")",
          "1638:     with self.cached_session():",
          "1639:       def f(a):",
          "1640:         return array_ops.quantize_and_dequantize_v2(",
          "1641:             a,",
          "1642:             input_min=min_threshold,",
          "1643:             input_max=max_threshold,",
          "1644:             range_given=True)",
          "1645:       output_grad = gradient_checker_v2.compute_gradient(f, [input_tensor])",
          "1646:       self.assertAllClose(output_grad[0], np.zeros([1, 4, 4]))",
          "",
          "---------------"
        ],
        "tensorflow/python/ops/array_ops.py||tensorflow/python/ops/array_ops.py": [
          "File: tensorflow/python/ops/array_ops.py -> tensorflow/python/ops/array_ops.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "3758:       narrow_range=op.get_attr(\"narrow_range\"))",
          "3761: @tf_export(\"required_space_to_batch_paddings\")",
          "3762: def required_space_to_batch_paddings(input_shape,",
          "3763:                                      block_shape,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3761: @ops.RegisterGradient(\"QuantizeAndDequantizeV4\")",
          "3762: def _QuantizeAndDequantizeV4Grad(op, grad):",
          "3763:   \"\"\"Gradient for QuantizeAndDequantizeV4 op.\"\"\"",
          "3764:   return quantize_and_dequantize_v4_grad(",
          "3765:       grad,",
          "3766:       op.inputs[0],",
          "3767:       op.inputs[1],",
          "3768:       op.inputs[2],",
          "3769:       axis=op.get_attr(\"axis\"))",
          "3772: @ops.RegisterGradient(\"QuantizeAndDequantizeV4Grad\")",
          "3773: def _QuantizeAndDequantizeV4GradGrad(op, grad):",
          "3774:   \"\"\"Gradient for QuantizeAndDequantizeV4Grad op.\"\"\"",
          "3775:   return _QuantizeAndDequantizeV4Grad(op, grad)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5631: @tf_export(\"quantization.quantize_and_dequantize\")",
          "5632: @dispatch.add_dispatch_support",
          "5633: def quantize_and_dequantize(",
          "5634:     input,  # pylint: disable=redefined-builtin",
          "5635:     input_min,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5650: @deprecation.deprecated(None,",
          "5651:                         \"This Op has been deprecated, use\" +",
          "5652:                         \"`quantize_and_dequantize_v2` instead. To \" +",
          "5653:                         \"To simulate the V1 the behavior of \" +",
          "5654:                         \"tf.quantization.quantize_and_dequantize(...) use \" +",
          "5655:                         \"tf.grad_pass_through(\" +",
          "5656:                         \"tf.quantization.quantize_and_dequantize_v2)(...).\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5688:       name=name)",
          "5691: @tf_export(\"searchsorted\")",
          "5692: @dispatch.add_dispatch_support",
          "5693: def searchsorted(sorted_sequence,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5715: @tf_export(\"quantization.quantize_and_dequantize_v2\")",
          "5716: @dispatch.add_dispatch_support",
          "5717: def quantize_and_dequantize_v2(",
          "5718:     input,  # pylint: disable=redefined-builtin",
          "5719:     input_min,",
          "5720:     input_max,",
          "5721:     signed_input=True,",
          "5722:     num_bits=8,",
          "5723:     range_given=False,",
          "5724:     round_mode=\"HALF_TO_EVEN\",",
          "5725:     name=None,",
          "5726:     narrow_range=False,",
          "5727:     axis=None):",
          "5728:   \"\"\"Quantizes then dequantizes a tensor.",
          "5730:   Updates the gradient definition for quantization that is outside the range to",
          "5731:   be 0.To simulate the V1 the behavior of",
          "5732:   tf.quantization.quantize_and_dequantize(...) use",
          "5733:   tf.grad_pass_through(tf.quantization.quantize_and_dequantize_v2)(...).",
          "5735:   Example usage:",
          "5737:   ```python",
          "5738:   def getQuantizeOp(input):",
          "5739:       input_tensor = tf.placeholder(tf.float32, shape=[4, 4])",
          "5740:       net = tf.quantization.quantize_and_dequantize(input,",
          "5741:                                                     input_min=min_threshold,",
          "5742:                                                     input_max=max_threshold,",
          "5743:                                                     range_given=True)",
          "5745:   To simulate v1 behavior:",
          "5747:   def testDecomposeQuantizeDequantize(self):",
          "5748:       def f(input_tensor):",
          "5749:         return tf.quantization.quantize_and_dequantize_v2(input_tensor,",
          "5750:                                                           input_min = 5.0,",
          "5751:                                                           input_max= -10.0,",
          "5752:                                                           range_given=True)",
          "5753:       input_tensor = tf.placeholder(tf.float32, shape=[4, 4])",
          "5754:       net = tf.grad_pass_through(f)(input_tensor)",
          "5755:   ```",
          "5757:   Args:",
          "5758:     input: A `Tensor` to quantize and dequantize.",
          "5759:     input_min: If range_given=True, the minimum input value, that needs to be",
          "5760:       represented in the quantized representation. If axis is specified, this",
          "5761:       should be a vector of minimum values for each slice along axis.",
          "5762:     input_max: If range_given=True, the maximum input value that needs to be",
          "5763:       represented in the quantized representation. If axis is specified, this",
          "5764:       should be a vector of maximum values for each slice along axis.",
          "5765:     signed_input: True if the quantization is signed or unsigned.",
          "5766:     num_bits: The bitwidth of the quantization.",
          "5767:     range_given: If true use `input_min` and `input_max` for the range of the",
          "5768:       input, otherwise determine min and max from the input `Tensor`.",
          "5769:     round_mode: Rounding mode when rounding from float values to quantized ones.",
          "5770:       one of ['HALF_TO_EVEN', 'HALF_UP']",
          "5771:     name: Optional name for the operation.",
          "5772:     narrow_range: If true, then the absolute value of the quantized minimum",
          "5773:       value is the same as the quantized maximum value, instead of 1 greater.",
          "5774:       i.e. for 8 bit quantization, the minimum value is -127 instead of -128.",
          "5775:     axis: Integer. If specified, refers to a dimension of the input tensor, such",
          "5776:       that quantization will be per slice along that dimension.",
          "5778:   Returns:",
          "5779:     A `Tensor`. Each element is the result of quantizing and dequantizing the",
          "5780:     corresponding element of `input`.",
          "5781:   \"\"\"",
          "5782:   if axis is None:",
          "5783:     axis = -1",
          "5784:   elif axis < 0:",
          "5785:     if input.shape.ndims is None:",
          "5786:       raise ValueError(\"input should have known rank to use negative axis.\")",
          "5787:     axis %= input.shape.ndims",
          "5789:   return gen_array_ops.quantize_and_dequantize_v4(",
          "5790:       input,",
          "5791:       input_min=input_min,",
          "5792:       input_max=input_max,",
          "5793:       signed_input=signed_input,",
          "5794:       num_bits=num_bits,",
          "5795:       range_given=range_given,",
          "5796:       round_mode=round_mode,",
          "5797:       narrow_range=narrow_range,",
          "5798:       axis=axis,",
          "5799:       name=name)",
          "",
          "---------------"
        ],
        "tensorflow/tools/api/golden/v1/tensorflow.pbtxt||tensorflow/tools/api/golden/v1/tensorflow.pbtxt": [
          "File: tensorflow/tools/api/golden/v1/tensorflow.pbtxt -> tensorflow/tools/api/golden/v1/tensorflow.pbtxt",
          "--- Hunk 1 ---",
          "[Context before]",
          "1824:     name: \"quantize\"",
          "1825:     argspec: \"args=[\\'input\\', \\'min_range\\', \\'max_range\\', \\'T\\', \\'mode\\', \\'round_mode\\', \\'name\\', \\'narrow_range\\', \\'axis\\', \\'ensure_minimum_range\\'], varargs=None, keywords=None, defaults=[\\'MIN_COMBINED\\', \\'HALF_AWAY_FROM_ZERO\\', \\'None\\', \\'False\\', \\'None\\', \\'0.01\\'], \"",
          "1826:   }",
          "1827:   member_method {",
          "1828:     name: \"quantize_v2\"",
          "1829:     argspec: \"args=[\\'input\\', \\'min_range\\', \\'max_range\\', \\'T\\', \\'mode\\', \\'name\\', \\'round_mode\\', \\'narrow_range\\', \\'axis\\', \\'ensure_minimum_range\\'], varargs=None, keywords=None, defaults=[\\'MIN_COMBINED\\', \\'None\\', \\'HALF_AWAY_FROM_ZERO\\', \\'False\\', \\'None\\', \\'0.01\\'], \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1827:   member_method {",
          "1828:     name: \"quantize_and_dequantize_v4\"",
          "1829:     argspec: \"args=[\\'input\\', \\'input_min\\', \\'input_max\\', \\'signed_input\\', \\'num_bits\\', \\'range_given\\', \\'round_mode\\', \\'narrow_range\\', \\'axis\\', \\'name\\'], varargs=None, keywords=None, defaults=[\\'True\\', \\'8\\', \\'False\\', \\'HALF_TO_EVEN\\', \\'False\\', \\'-1\\', \\'None\\'], \"",
          "1830:   }",
          "",
          "---------------"
        ],
        "tensorflow/tools/api/golden/v1/tensorflow.quantization.pbtxt||tensorflow/tools/api/golden/v1/tensorflow.quantization.pbtxt": [
          "File: tensorflow/tools/api/golden/v1/tensorflow.quantization.pbtxt -> tensorflow/tools/api/golden/v1/tensorflow.quantization.pbtxt",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:     name: \"quantize_and_dequantize\"",
          "37:     argspec: \"args=[\\'input\\', \\'input_min\\', \\'input_max\\', \\'signed_input\\', \\'num_bits\\', \\'range_given\\', \\'round_mode\\', \\'name\\', \\'narrow_range\\', \\'axis\\'], varargs=None, keywords=None, defaults=[\\'True\\', \\'8\\', \\'False\\', \\'HALF_TO_EVEN\\', \\'None\\', \\'False\\', \\'None\\'], \"",
          "38:   }",
          "39:   member_method {",
          "40:     name: \"quantized_concat\"",
          "41:     argspec: \"args=[\\'concat_dim\\', \\'values\\', \\'input_mins\\', \\'input_maxes\\', \\'name\\'], varargs=None, keywords=None, defaults=[\\'None\\'], \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39:   member_method {",
          "40:     name: \"quantize_and_dequantize_v2\"",
          "41:     argspec: \"args=[\\'input\\', \\'input_min\\', \\'input_max\\', \\'signed_input\\', \\'num_bits\\', \\'range_given\\', \\'round_mode\\', \\'name\\', \\'narrow_range\\', \\'axis\\'], varargs=None, keywords=None, defaults=[\\'True\\', \\'8\\', \\'False\\', \\'HALF_TO_EVEN\\', \\'None\\', \\'False\\', \\'None\\'], \"",
          "42:   }",
          "",
          "---------------"
        ],
        "tensorflow/tools/api/golden/v1/tensorflow.raw_ops.pbtxt||tensorflow/tools/api/golden/v1/tensorflow.raw_ops.pbtxt": [
          "File: tensorflow/tools/api/golden/v1/tensorflow.raw_ops.pbtxt -> tensorflow/tools/api/golden/v1/tensorflow.raw_ops.pbtxt",
          "--- Hunk 1 ---",
          "[Context before]",
          "2940:     name: \"QuantizeAndDequantizeV3\"",
          "2941:     argspec: \"args=[\\'input\\', \\'input_min\\', \\'input_max\\', \\'num_bits\\', \\'signed_input\\', \\'range_given\\', \\'narrow_range\\', \\'axis\\', \\'name\\'], varargs=None, keywords=None, defaults=[\\'True\\', \\'True\\', \\'False\\', \\'-1\\', \\'None\\'], \"",
          "2942:   }",
          "2943:   member_method {",
          "2944:     name: \"QuantizeDownAndShrinkRange\"",
          "2945:     argspec: \"args=[\\'input\\', \\'input_min\\', \\'input_max\\', \\'out_type\\', \\'name\\'], varargs=None, keywords=None, defaults=[\\'None\\'], \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2943:   member_method {",
          "2944:     name: \"QuantizeAndDequantizeV4\"",
          "2945:     argspec: \"args=[\\'input\\', \\'input_min\\', \\'input_max\\', \\'signed_input\\', \\'num_bits\\', \\'range_given\\', \\'round_mode\\', \\'narrow_range\\', \\'axis\\', \\'name\\'], varargs=None, keywords=None, defaults=[\\'True\\', \\'8\\', \\'False\\', \\'HALF_TO_EVEN\\', \\'False\\', \\'-1\\', \\'None\\'], \"",
          "2946:   }",
          "2947:   member_method {",
          "2948:     name: \"QuantizeAndDequantizeV4Grad\"",
          "2949:     argspec: \"args=[\\'gradients\\', \\'input\\', \\'input_min\\', \\'input_max\\', \\'axis\\', \\'name\\'], varargs=None, keywords=None, defaults=[\\'-1\\', \\'None\\'], \"",
          "2950:   }",
          "",
          "---------------"
        ],
        "tensorflow/tools/api/golden/v2/tensorflow.pbtxt||tensorflow/tools/api/golden/v2/tensorflow.pbtxt": [
          "File: tensorflow/tools/api/golden/v2/tensorflow.pbtxt -> tensorflow/tools/api/golden/v2/tensorflow.pbtxt",
          "--- Hunk 1 ---",
          "[Context before]",
          "880:     name: \"py_function\"",
          "881:     argspec: \"args=[\\'func\\', \\'inp\\', \\'Tout\\', \\'name\\'], varargs=None, keywords=None, defaults=[\\'None\\'], \"",
          "882:   }",
          "883:   member_method {",
          "884:     name: \"range\"",
          "885:     argspec: \"args=[\\'start\\', \\'limit\\', \\'delta\\', \\'dtype\\', \\'name\\'], varargs=None, keywords=None, defaults=[\\'None\\', \\'1\\', \\'None\\', \\'range\\'], \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "883:   member_method {",
          "884:     name: \"quantize_and_dequantize_v4\"",
          "885:     argspec: \"args=[\\'input\\', \\'input_min\\', \\'input_max\\', \\'signed_input\\', \\'num_bits\\', \\'range_given\\', \\'round_mode\\', \\'narrow_range\\', \\'axis\\', \\'name\\'], varargs=None, keywords=None, defaults=[\\'True\\', \\'8\\', \\'False\\', \\'HALF_TO_EVEN\\', \\'False\\', \\'-1\\', \\'None\\'], \"",
          "886:   }",
          "",
          "---------------"
        ],
        "tensorflow/tools/api/golden/v2/tensorflow.quantization.pbtxt||tensorflow/tools/api/golden/v2/tensorflow.quantization.pbtxt": [
          "File: tensorflow/tools/api/golden/v2/tensorflow.quantization.pbtxt -> tensorflow/tools/api/golden/v2/tensorflow.quantization.pbtxt",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:     name: \"quantize_and_dequantize\"",
          "37:     argspec: \"args=[\\'input\\', \\'input_min\\', \\'input_max\\', \\'signed_input\\', \\'num_bits\\', \\'range_given\\', \\'round_mode\\', \\'name\\', \\'narrow_range\\', \\'axis\\'], varargs=None, keywords=None, defaults=[\\'True\\', \\'8\\', \\'False\\', \\'HALF_TO_EVEN\\', \\'None\\', \\'False\\', \\'None\\'], \"",
          "38:   }",
          "39:   member_method {",
          "40:     name: \"quantized_concat\"",
          "41:     argspec: \"args=[\\'concat_dim\\', \\'values\\', \\'input_mins\\', \\'input_maxes\\', \\'name\\'], varargs=None, keywords=None, defaults=[\\'None\\'], \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39:   member_method {",
          "40:     name: \"quantize_and_dequantize_v2\"",
          "41:     argspec: \"args=[\\'input\\', \\'input_min\\', \\'input_max\\', \\'signed_input\\', \\'num_bits\\', \\'range_given\\', \\'round_mode\\', \\'name\\', \\'narrow_range\\', \\'axis\\'], varargs=None, keywords=None, defaults=[\\'True\\', \\'8\\', \\'False\\', \\'HALF_TO_EVEN\\', \\'None\\', \\'False\\', \\'None\\'], \"",
          "42:   }",
          "",
          "---------------"
        ],
        "tensorflow/tools/api/golden/v2/tensorflow.raw_ops.pbtxt||tensorflow/tools/api/golden/v2/tensorflow.raw_ops.pbtxt": [
          "File: tensorflow/tools/api/golden/v2/tensorflow.raw_ops.pbtxt -> tensorflow/tools/api/golden/v2/tensorflow.raw_ops.pbtxt",
          "--- Hunk 1 ---",
          "[Context before]",
          "2940:     name: \"QuantizeAndDequantizeV3\"",
          "2941:     argspec: \"args=[\\'input\\', \\'input_min\\', \\'input_max\\', \\'num_bits\\', \\'signed_input\\', \\'range_given\\', \\'narrow_range\\', \\'axis\\', \\'name\\'], varargs=None, keywords=None, defaults=[\\'True\\', \\'True\\', \\'False\\', \\'-1\\', \\'None\\'], \"",
          "2942:   }",
          "2943:   member_method {",
          "2944:     name: \"QuantizeDownAndShrinkRange\"",
          "2945:     argspec: \"args=[\\'input\\', \\'input_min\\', \\'input_max\\', \\'out_type\\', \\'name\\'], varargs=None, keywords=None, defaults=[\\'None\\'], \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2943:   member_method {",
          "2944:     name: \"QuantizeAndDequantizeV4\"",
          "2945:     argspec: \"args=[\\'input\\', \\'input_min\\', \\'input_max\\', \\'signed_input\\', \\'num_bits\\', \\'range_given\\', \\'round_mode\\', \\'narrow_range\\', \\'axis\\', \\'name\\'], varargs=None, keywords=None, defaults=[\\'True\\', \\'8\\', \\'False\\', \\'HALF_TO_EVEN\\', \\'False\\', \\'-1\\', \\'None\\'], \"",
          "2946:   }",
          "2947:   member_method {",
          "2948:     name: \"QuantizeAndDequantizeV4Grad\"",
          "2949:     argspec: \"args=[\\'gradients\\', \\'input\\', \\'input_min\\', \\'input_max\\', \\'axis\\', \\'name\\'], varargs=None, keywords=None, defaults=[\\'-1\\', \\'None\\'], \"",
          "2950:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ef63f08e0c60a12f8a1e56ff75ec991f74a910bb",
      "candidate_info": {
        "commit_hash": "ef63f08e0c60a12f8a1e56ff75ec991f74a910bb",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/ef63f08e0c60a12f8a1e56ff75ec991f74a910bb",
        "files": [
          "tensorflow/core/ops/array_ops.cc",
          "tensorflow/core/ops/array_ops_test.cc"
        ],
        "message": "Address QuantizeAndDequantizeV* heap oob. Added additional checks for the 'axis' attribute.\n\nPiperOrigin-RevId: 402446942\nChange-Id: Id2f6b82e4e740d0550329be02621c46466b5a5b9",
        "before_after_code_files": [
          "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
          "tensorflow/core/ops/array_ops_test.cc||tensorflow/core/ops/array_ops_test.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
            "tensorflow/core/ops/array_ops_test.cc||tensorflow/core/ops/array_ops_test.cc"
          ],
          "candidate": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
            "tensorflow/core/ops/array_ops_test.cc||tensorflow/core/ops/array_ops_test.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc": [
          "File: tensorflow/core/ops/array_ops.cc -> tensorflow/core/ops/array_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2797:       ShapeHandle minmax;",
          "2798:       TF_RETURN_IF_ERROR(c->WithRank(c->input(1), minmax_rank, &minmax));",
          "2799:       TF_RETURN_IF_ERROR(c->Merge(c->input(2), minmax, &minmax));",
          "2801:         ShapeHandle input;",
          "2802:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2803:         DimensionHandle depth;",
          "",
          "[Removed Lines]",
          "2800:       if (axis != -1) {",
          "",
          "[Added Lines]",
          "2800:       if (axis < -1) {",
          "2801:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
          "2802:                                        axis);",
          "2803:       } else if (axis != -1) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2829:       ShapeHandle minmax;",
          "2830:       TF_RETURN_IF_ERROR(c->WithRank(c->input(1), minmax_rank, &minmax));",
          "2831:       TF_RETURN_IF_ERROR(c->Merge(c->input(2), minmax, &minmax));",
          "2833:         ShapeHandle input;",
          "2834:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2835:         DimensionHandle depth;",
          "",
          "[Removed Lines]",
          "2832:       if (axis != -1) {",
          "",
          "[Added Lines]",
          "2835:       if (axis < -1) {",
          "2836:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
          "2837:                                        axis);",
          "2838:       } else if (axis != -1) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2857:       ShapeHandle minmax;",
          "2858:       TF_RETURN_IF_ERROR(c->WithRank(c->input(2), minmax_rank, &minmax));",
          "2859:       TF_RETURN_IF_ERROR(c->Merge(c->input(3), minmax, &minmax));",
          "2861:         ShapeHandle input;",
          "2862:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2863:         DimensionHandle depth;",
          "",
          "[Removed Lines]",
          "2860:       if (axis != -1) {",
          "",
          "[Added Lines]",
          "2866:       if (axis < -1) {",
          "2867:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
          "2868:                                        axis);",
          "2869:       } else if (axis != -1) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2890:       ShapeHandle minmax;",
          "2891:       TF_RETURN_IF_ERROR(c->WithRank(c->input(1), minmax_rank, &minmax));",
          "2892:       TF_RETURN_IF_ERROR(c->Merge(c->input(2), minmax, &minmax));",
          "2894:         ShapeHandle input;",
          "2895:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2896:         DimensionHandle depth;",
          "",
          "[Removed Lines]",
          "2893:       if (axis != -1) {",
          "",
          "[Added Lines]",
          "2902:       if (axis < -1) {",
          "2903:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
          "2904:                                        axis);",
          "2905:       } else if (axis != -1) {",
          "",
          "---------------"
        ],
        "tensorflow/core/ops/array_ops_test.cc||tensorflow/core/ops/array_ops_test.cc": [
          "File: tensorflow/core/ops/array_ops_test.cc -> tensorflow/core/ops/array_ops_test.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1363:   INFER_ERROR(\"Shapes must be equal rank, but are 1 and 0\", op,",
          "1364:               \"[1,2,?,4,5];[];[1]\");",
          "1365:   INFER_ERROR(\"Shape must be rank 0 but is rank 1\", op, \"[1,2,?,4,5];[1];[1]\");",
          "1366: }",
          "1368: TEST(ArrayOpsTest, SpaceToBatch_ShapeFn) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1366:   (*op.node_def.mutable_attr())[\"axis\"].set_i(-2);",
          "1367:   INFER_ERROR(\"axis should be at least -1, got -2\", op, \"?;?;?\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c5f38d707b93446efc3be30ba2ff703e0c6305b0",
      "candidate_info": {
        "commit_hash": "c5f38d707b93446efc3be30ba2ff703e0c6305b0",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/c5f38d707b93446efc3be30ba2ff703e0c6305b0",
        "files": [
          "tensorflow/core/ops/array_ops.cc",
          "tensorflow/core/ops/array_ops_test.cc"
        ],
        "message": "Address QuantizeAndDequantizeV* heap oob. Added additional checks for the 'axis' attribute.\n\nPiperOrigin-RevId: 402446942\nChange-Id: Id2f6b82e4e740d0550329be02621c46466b5a5b9",
        "before_after_code_files": [
          "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
          "tensorflow/core/ops/array_ops_test.cc||tensorflow/core/ops/array_ops_test.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
            "tensorflow/core/ops/array_ops_test.cc||tensorflow/core/ops/array_ops_test.cc"
          ],
          "candidate": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
            "tensorflow/core/ops/array_ops_test.cc||tensorflow/core/ops/array_ops_test.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc": [
          "File: tensorflow/core/ops/array_ops.cc -> tensorflow/core/ops/array_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2841:       ShapeHandle minmax;",
          "2842:       TF_RETURN_IF_ERROR(c->WithRank(c->input(1), minmax_rank, &minmax));",
          "2843:       TF_RETURN_IF_ERROR(c->Merge(c->input(2), minmax, &minmax));",
          "2845:         ShapeHandle input;",
          "2846:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2847:         DimensionHandle depth;",
          "",
          "[Removed Lines]",
          "2844:       if (axis != -1) {",
          "",
          "[Added Lines]",
          "2844:       if (axis < -1) {",
          "2845:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
          "2846:                                        axis);",
          "2847:       } else if (axis != -1) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2873:       ShapeHandle minmax;",
          "2874:       TF_RETURN_IF_ERROR(c->WithRank(c->input(1), minmax_rank, &minmax));",
          "2875:       TF_RETURN_IF_ERROR(c->Merge(c->input(2), minmax, &minmax));",
          "2877:         ShapeHandle input;",
          "2878:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2879:         DimensionHandle depth;",
          "",
          "[Removed Lines]",
          "2876:       if (axis != -1) {",
          "",
          "[Added Lines]",
          "2879:       if (axis < -1) {",
          "2880:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
          "2881:                                        axis);",
          "2882:       } else if (axis != -1) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2901:       ShapeHandle minmax;",
          "2902:       TF_RETURN_IF_ERROR(c->WithRank(c->input(2), minmax_rank, &minmax));",
          "2903:       TF_RETURN_IF_ERROR(c->Merge(c->input(3), minmax, &minmax));",
          "2905:         ShapeHandle input;",
          "2906:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2907:         DimensionHandle depth;",
          "",
          "[Removed Lines]",
          "2904:       if (axis != -1) {",
          "",
          "[Added Lines]",
          "2910:       if (axis < -1) {",
          "2911:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
          "2912:                                        axis);",
          "2913:       } else if (axis != -1) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2934:       ShapeHandle minmax;",
          "2935:       TF_RETURN_IF_ERROR(c->WithRank(c->input(1), minmax_rank, &minmax));",
          "2936:       TF_RETURN_IF_ERROR(c->Merge(c->input(2), minmax, &minmax));",
          "2938:         ShapeHandle input;",
          "2939:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2940:         DimensionHandle depth;",
          "",
          "[Removed Lines]",
          "2937:       if (axis != -1) {",
          "",
          "[Added Lines]",
          "2946:       if (axis < -1) {",
          "2947:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
          "2948:                                        axis);",
          "2949:       } else if (axis != -1) {",
          "",
          "---------------"
        ],
        "tensorflow/core/ops/array_ops_test.cc||tensorflow/core/ops/array_ops_test.cc": [
          "File: tensorflow/core/ops/array_ops_test.cc -> tensorflow/core/ops/array_ops_test.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1363:   INFER_ERROR(\"Shapes must be equal rank, but are 1 and 0\", op,",
          "1364:               \"[1,2,?,4,5];[];[1]\");",
          "1365:   INFER_ERROR(\"Shape must be rank 0 but is rank 1\", op, \"[1,2,?,4,5];[1];[1]\");",
          "1366: }",
          "1368: TEST(ArrayOpsTest, SpaceToBatch_ShapeFn) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1366:   (*op.node_def.mutable_attr())[\"axis\"].set_i(-2);",
          "1367:   INFER_ERROR(\"axis should be at least -1, got -2\", op, \"?;?;?\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a7509304282dd8b0a6d1af2db4312696d21edc88",
      "candidate_info": {
        "commit_hash": "a7509304282dd8b0a6d1af2db4312696d21edc88",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/a7509304282dd8b0a6d1af2db4312696d21edc88",
        "files": [
          "tensorflow/core/ops/array_ops.cc",
          "tensorflow/core/ops/array_ops_test.cc"
        ],
        "message": "Address QuantizeAndDequantizeV* heap oob. Added additional checks for the 'axis' attribute.\n\nPiperOrigin-RevId: 402446942\nChange-Id: Id2f6b82e4e740d0550329be02621c46466b5a5b9",
        "before_after_code_files": [
          "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
          "tensorflow/core/ops/array_ops_test.cc||tensorflow/core/ops/array_ops_test.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
            "tensorflow/core/ops/array_ops_test.cc||tensorflow/core/ops/array_ops_test.cc"
          ],
          "candidate": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
            "tensorflow/core/ops/array_ops_test.cc||tensorflow/core/ops/array_ops_test.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc": [
          "File: tensorflow/core/ops/array_ops.cc -> tensorflow/core/ops/array_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2854:       ShapeHandle minmax;",
          "2855:       TF_RETURN_IF_ERROR(c->WithRank(c->input(1), minmax_rank, &minmax));",
          "2856:       TF_RETURN_IF_ERROR(c->Merge(c->input(2), minmax, &minmax));",
          "2858:         ShapeHandle input;",
          "2859:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2860:         DimensionHandle depth;",
          "",
          "[Removed Lines]",
          "2857:       if (axis != -1) {",
          "",
          "[Added Lines]",
          "2857:       if (axis < -1) {",
          "2858:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
          "2859:                                        axis);",
          "2860:       } else if (axis != -1) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2886:       ShapeHandle minmax;",
          "2887:       TF_RETURN_IF_ERROR(c->WithRank(c->input(1), minmax_rank, &minmax));",
          "2888:       TF_RETURN_IF_ERROR(c->Merge(c->input(2), minmax, &minmax));",
          "2890:         ShapeHandle input;",
          "2891:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2892:         DimensionHandle depth;",
          "",
          "[Removed Lines]",
          "2889:       if (axis != -1) {",
          "",
          "[Added Lines]",
          "2892:       if (axis < -1) {",
          "2893:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
          "2894:                                        axis);",
          "2895:       } else if (axis != -1) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2914:       ShapeHandle minmax;",
          "2915:       TF_RETURN_IF_ERROR(c->WithRank(c->input(2), minmax_rank, &minmax));",
          "2916:       TF_RETURN_IF_ERROR(c->Merge(c->input(3), minmax, &minmax));",
          "2918:         ShapeHandle input;",
          "2919:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2920:         DimensionHandle depth;",
          "",
          "[Removed Lines]",
          "2917:       if (axis != -1) {",
          "",
          "[Added Lines]",
          "2923:       if (axis < -1) {",
          "2924:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
          "2925:                                        axis);",
          "2926:       } else if (axis != -1) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2947:       ShapeHandle minmax;",
          "2948:       TF_RETURN_IF_ERROR(c->WithRank(c->input(1), minmax_rank, &minmax));",
          "2949:       TF_RETURN_IF_ERROR(c->Merge(c->input(2), minmax, &minmax));",
          "2951:         ShapeHandle input;",
          "2952:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2953:         DimensionHandle depth;",
          "",
          "[Removed Lines]",
          "2950:       if (axis != -1) {",
          "",
          "[Added Lines]",
          "2959:       if (axis < -1) {",
          "2960:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
          "2961:                                        axis);",
          "2962:       } else if (axis != -1) {",
          "",
          "---------------"
        ],
        "tensorflow/core/ops/array_ops_test.cc||tensorflow/core/ops/array_ops_test.cc": [
          "File: tensorflow/core/ops/array_ops_test.cc -> tensorflow/core/ops/array_ops_test.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1374:   INFER_ERROR(\"Shapes must be equal rank, but are 1 and 0\", op,",
          "1375:               \"[1,2,?,4,5];[];[1]\");",
          "1376:   INFER_ERROR(\"Shape must be rank 0 but is rank 1\", op, \"[1,2,?,4,5];[1];[1]\");",
          "1377: }",
          "1379: TEST(ArrayOpsTest, SpaceToBatch_ShapeFn) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1377:   (*op.node_def.mutable_attr())[\"axis\"].set_i(-2);",
          "1378:   INFER_ERROR(\"axis should be at least -1, got -2\", op, \"?;?;?\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9415ec8af4c1ebd4ee0dccf601c8439faa982074",
      "candidate_info": {
        "commit_hash": "9415ec8af4c1ebd4ee0dccf601c8439faa982074",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/9415ec8af4c1ebd4ee0dccf601c8439faa982074",
        "files": [
          "tensorflow/core/ops/array_ops.cc",
          "tensorflow/core/ops/array_ops_test.cc"
        ],
        "message": "Address QuantizeAndDequantizeV* heap oob. Added additional checks for the 'axis' attribute.\n\nPiperOrigin-RevId: 402446942\nChange-Id: Id2f6b82e4e740d0550329be02621c46466b5a5b9",
        "before_after_code_files": [
          "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
          "tensorflow/core/ops/array_ops_test.cc||tensorflow/core/ops/array_ops_test.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
            "tensorflow/core/ops/array_ops_test.cc||tensorflow/core/ops/array_ops_test.cc"
          ],
          "candidate": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
            "tensorflow/core/ops/array_ops_test.cc||tensorflow/core/ops/array_ops_test.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc": [
          "File: tensorflow/core/ops/array_ops.cc -> tensorflow/core/ops/array_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2851:       ShapeHandle minmax;",
          "2852:       TF_RETURN_IF_ERROR(c->WithRank(c->input(1), minmax_rank, &minmax));",
          "2853:       TF_RETURN_IF_ERROR(c->Merge(c->input(2), minmax, &minmax));",
          "2855:         ShapeHandle input;",
          "2856:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2857:         DimensionHandle depth;",
          "",
          "[Removed Lines]",
          "2854:       if (axis != -1) {",
          "",
          "[Added Lines]",
          "2854:       if (axis < -1) {",
          "2855:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
          "2856:                                        axis);",
          "2857:       } else if (axis != -1) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2883:       ShapeHandle minmax;",
          "2884:       TF_RETURN_IF_ERROR(c->WithRank(c->input(1), minmax_rank, &minmax));",
          "2885:       TF_RETURN_IF_ERROR(c->Merge(c->input(2), minmax, &minmax));",
          "2887:         ShapeHandle input;",
          "2888:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2889:         DimensionHandle depth;",
          "",
          "[Removed Lines]",
          "2886:       if (axis != -1) {",
          "",
          "[Added Lines]",
          "2889:       if (axis < -1) {",
          "2890:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
          "2891:                                        axis);",
          "2892:       } else if (axis != -1) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2911:       ShapeHandle minmax;",
          "2912:       TF_RETURN_IF_ERROR(c->WithRank(c->input(2), minmax_rank, &minmax));",
          "2913:       TF_RETURN_IF_ERROR(c->Merge(c->input(3), minmax, &minmax));",
          "2915:         ShapeHandle input;",
          "2916:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2917:         DimensionHandle depth;",
          "",
          "[Removed Lines]",
          "2914:       if (axis != -1) {",
          "",
          "[Added Lines]",
          "2920:       if (axis < -1) {",
          "2921:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
          "2922:                                        axis);",
          "2923:       } else if (axis != -1) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2944:       ShapeHandle minmax;",
          "2945:       TF_RETURN_IF_ERROR(c->WithRank(c->input(1), minmax_rank, &minmax));",
          "2946:       TF_RETURN_IF_ERROR(c->Merge(c->input(2), minmax, &minmax));",
          "2948:         ShapeHandle input;",
          "2949:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2950:         DimensionHandle depth;",
          "",
          "[Removed Lines]",
          "2947:       if (axis != -1) {",
          "",
          "[Added Lines]",
          "2956:       if (axis < -1) {",
          "2957:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
          "2958:                                        axis);",
          "2959:       } else if (axis != -1) {",
          "",
          "---------------"
        ],
        "tensorflow/core/ops/array_ops_test.cc||tensorflow/core/ops/array_ops_test.cc": [
          "File: tensorflow/core/ops/array_ops_test.cc -> tensorflow/core/ops/array_ops_test.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1363:   INFER_ERROR(\"Shapes must be equal rank, but are 1 and 0\", op,",
          "1364:               \"[1,2,?,4,5];[];[1]\");",
          "1365:   INFER_ERROR(\"Shape must be rank 0 but is rank 1\", op, \"[1,2,?,4,5];[1];[1]\");",
          "1366: }",
          "1368: TEST(ArrayOpsTest, SpaceToBatch_ShapeFn) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1366:   (*op.node_def.mutable_attr())[\"axis\"].set_i(-2);",
          "1367:   INFER_ERROR(\"axis should be at least -1, got -2\", op, \"?;?;?\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}