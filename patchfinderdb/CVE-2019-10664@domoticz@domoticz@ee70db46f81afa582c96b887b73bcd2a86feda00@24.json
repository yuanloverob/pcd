{
  "cve_id": "CVE-2019-10664",
  "cve_desc": "Domoticz before 4.10578 allows SQL Injection via the idx parameter in CWebServer::GetFloorplanImage in WebServer.cpp.",
  "repo": "domoticz/domoticz",
  "patch_hash": "ee70db46f81afa582c96b887b73bcd2a86feda00",
  "patch_info": {
    "commit_hash": "ee70db46f81afa582c96b887b73bcd2a86feda00",
    "repo": "domoticz/domoticz",
    "commit_url": "https://github.com/domoticz/domoticz/commit/ee70db46f81afa582c96b887b73bcd2a86feda00",
    "files": [
      "main/WebServer.cpp"
    ],
    "message": "Fixed possible SQL Injection Vulnerability (Thanks to Fabio Carretto!)",
    "before_after_code_files": [
      "main/WebServer.cpp||main/WebServer.cpp"
    ]
  },
  "patch_diff": {
    "main/WebServer.cpp||main/WebServer.cpp": [
      "File: main/WebServer.cpp -> main/WebServer.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10772:     return;",
      "10773:    }",
      "10774:    std::vector<std::vector<std::string> > result;",
      "10776:    if (result.empty())",
      "10777:     return;",
      "10778:    reply::set_content(&rep, result[0][0].begin(), result[0][0].end());",
      "",
      "[Removed Lines]",
      "10775:    result = m_sql.safe_queryBlob(\"SELECT Image FROM Floorplans WHERE ID=%s\", idx.c_str());",
      "",
      "[Added Lines]",
      "10775:    result = m_sql.safe_queryBlob(\"SELECT Image FROM Floorplans WHERE ID=%d\", atol(idx.c_str()));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1576d5406a15a41c894461c3abe46a5f83d6c545",
      "candidate_info": {
        "commit_hash": "1576d5406a15a41c894461c3abe46a5f83d6c545",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/1576d5406a15a41c894461c3abe46a5f83d6c545",
        "files": [
          "hardware/NestOAuthAPI.cpp",
          "main/domoticz.cpp"
        ],
        "message": "Trace fix for old armada architecture Nest, Fixed compile warning",
        "before_after_code_files": [
          "hardware/NestOAuthAPI.cpp||hardware/NestOAuthAPI.cpp",
          "main/domoticz.cpp||main/domoticz.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "hardware/NestOAuthAPI.cpp||hardware/NestOAuthAPI.cpp": [
          "File: hardware/NestOAuthAPI.cpp -> hardware/NestOAuthAPI.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "696:  }",
          "697:  catch (std::exception& e)",
          "698:  {",
          "700:   return false;",
          "701:  }",
          "",
          "[Removed Lines]",
          "699:   _log.Log(LOG_ERROR, \"NestOAuthAPI: Failed to get thermostat serial (for now). Try again later.\");",
          "",
          "[Added Lines]",
          "699:   _log.Log(LOG_ERROR, \"NestOAuthAPI: Failed to get thermostat serial (for now). Trying again later..(%s)\",e.what());",
          "",
          "---------------"
        ],
        "main/domoticz.cpp||main/domoticz.cpp": [
          "File: main/domoticz.cpp -> main/domoticz.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:  int retval = prctl(PR_SET_PTRACER, PR_SET_PTRACER_ANY, 0, 0, 0);",
          "99:  pid_t intermediate_pid = fork();",
          "100:  if (intermediate_pid == -1)",
          "101:  {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "96: #ifdef PR_SET_PTRACER",
          "98: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "32a239241a9da599d482c249502acccdcdcf2336",
      "candidate_info": {
        "commit_hash": "32a239241a9da599d482c249502acccdcdcf2336",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/32a239241a9da599d482c249502acccdcdcf2336",
        "files": [
          "hardware/RFXComSerial.cpp",
          "main/mainworker.cpp"
        ],
        "message": "Corrected Chill in pTypeWeather",
        "before_after_code_files": [
          "hardware/RFXComSerial.cpp||hardware/RFXComSerial.cpp",
          "main/mainworker.cpp||main/mainworker.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "hardware/RFXComSerial.cpp||hardware/RFXComSerial.cpp": [
          "File: hardware/RFXComSerial.cpp -> hardware/RFXComSerial.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #define RETRY_DELAY 30",
          "28: extern std::string szStartupFolder;",
          "30: #define round(a) ( int ) ( a + .5 )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: #define RFX_WRITE_DELAY 300",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:  m_serial.setStopbits(serial::stopbits_one);",
          "83:  m_serial.setFlowcontrol(serial::flowcontrol_none);",
          "86:  m_serial.setTimeout(stimeout);",
          "87: }",
          "",
          "[Removed Lines]",
          "85:  serial::Timeout stimeout = serial::Timeout::simpleTimeout(100);",
          "",
          "[Added Lines]",
          "87:  serial::Timeout stimeout = serial::Timeout::simpleTimeout(200);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "682:   try",
          "683:   {",
          "684:    size_t twrite = m_serial.write((const uint8_t *)&output_buffer, tot_bytes);",
          "686:    if (twrite == tot_bytes)",
          "687:    {",
          "688:     int rcount = 0;",
          "",
          "[Removed Lines]",
          "685:    sleep_milliseconds(100);",
          "",
          "[Added Lines]",
          "687:    sleep_milliseconds(RFX_WRITE_DELAY);",
          "",
          "---------------"
        ],
        "main/mainworker.cpp||main/mainworker.cpp": [
          "File: main/mainworker.cpp -> main/mainworker.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10900:    WriteMessage(\" Invalid Temperature\");",
          "10901:    return;",
          "10902:   }",
          "10908:   {",
          "10910:   }",
          "10913:   if (subType = sTypeWEATHER2)",
          "10914:   {",
          "",
          "[Removed Lines]",
          "10903:   if (!pResponse->WEATHER.chillsign)",
          "10904:   {",
          "10905:    chill = float((pResponse->WEATHER.chillhigh * 256) + pResponse->WEATHER.chilllow) / 10.0f;",
          "10906:   }",
          "10907:   else",
          "10909:    chill = -(float(((pResponse->WEATHER.chillhigh) & 0x7F) * 256 + pResponse->WEATHER.chilllow) / 10.0f);",
          "10911:   pRFXDevice->SendWind(windID, BatteryLevel, intDirection, (float)intSpeed, (float)intGust, temp, chill, true, true, procResult.DeviceName, SignalLevel);",
          "",
          "[Added Lines]",
          "10904:   bool bHaveChill = false;",
          "10905:   if (1 == 0);// subType == sTypeWEATHERx)",
          "10907:    if (!pResponse->WEATHER.chillsign)",
          "10908:    {",
          "10909:     chill = float((pResponse->WEATHER.chillhigh * 256) + pResponse->WEATHER.chilllow) / 10.0f;",
          "10910:    }",
          "10911:    else",
          "10912:    {",
          "10913:     chill = -(float(((pResponse->WEATHER.chillhigh) & 0x7F) * 256 + pResponse->WEATHER.chilllow) / 10.0f);",
          "10914:    }",
          "10915:    bHaveChill = true;",
          "10917:   pRFXDevice->SendWind(windID, BatteryLevel, intDirection, (float)intSpeed, (float)intGust, temp, chill, true, bHaveChill, procResult.DeviceName, SignalLevel);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a60b4c737406ef9c85b57cd80349cdf015100930",
      "candidate_info": {
        "commit_hash": "a60b4c737406ef9c85b57cd80349cdf015100930",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/a60b4c737406ef9c85b57cd80349cdf015100930",
        "files": [
          "www/views/lights.html"
        ],
        "message": "Added Blinds T14/R15/T16 to lights.html",
        "before_after_code_files": [
          "www/views/lights.html||www/views/lights.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "www/views/lights.html||www/views/lights.html": [
          "File: www/views/lights.html -> www/views/lights.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "95:      <option value=\"211\">Blinds T11 ASP</option>",
          "96:      <option value=\"212\">Blinds T12 Confexx</option>",
          "97:      <option value=\"213\">Blinds T13 Screenline</option>",
          "98:      <option value=\"301\">Smartwares Radiator</option>",
          "99:      <option value=\"302\">Home Confort TEL-010</option>",
          "100:      <option value=\"303\">Selector Switch</option>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98:      <option value=\"214\">Blinds T14 Hualite</option>",
          "99:      <option value=\"215\">Blinds T15 RFU</option>",
          "100:      <option value=\"216\">Blinds T16 Zemismart</option>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f158b5f595d18a19f91473f81a055317e275f09b",
      "candidate_info": {
        "commit_hash": "f158b5f595d18a19f91473f81a055317e275f09b",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/f158b5f595d18a19f91473f81a055317e275f09b",
        "files": [
          "www/app/DevicesController.js"
        ],
        "message": "Devices tab, removed unnecessary zwave node id as this is part of the ID already",
        "before_after_code_files": [
          "www/app/DevicesController.js||www/app/DevicesController.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "www/app/DevicesController.js||www/app/DevicesController.js": [
          "File: www/app/DevicesController.js -> www/app/DevicesController.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "359:         itemSubIcons += '&nbsp;<img src=\"images/empty16.png\">';",
          "360:        }",
          "361:        var ID = item.ID;",
          "371:        if (item.Type == \"Lighting 1\") {",
          "372:         ID = String.fromCharCode(item.ID);",
          "373:        }",
          "",
          "[Removed Lines]",
          "362:               if (typeof(item.HardwareTypeVal) != 'undefined' && item.HardwareTypeVal == 21) {",
          "363:                 var ZWID = item.ID.substr(-4, 2);",
          "364:                 if (ZWID == '00') {",
          "365:                   ZWID = item.ID.substr(-2, 2);",
          "366:                 }",
          "367:                 ZWID = '0x' + ZWID;",
          "368:                 var ZWIDdec =  (\"00\" + parseInt(ZWID)).slice(-3);",
          "369:                 item.HardwareName = item.HardwareName + \" \" + ZWIDdec + ' (' + ZWID + ')';",
          "370:               }",
          "",
          "[Added Lines]",
          "365:        if (typeof(item.HardwareTypeVal) != 'undefined' && item.HardwareTypeVal == 21) {",
          "366:         var ZWID = item.ID.substr(-4, 2);",
          "367:         if (ZWID == '00') {",
          "368:         ZWID = item.ID.substr(-2, 2);",
          "369:         }",
          "370:         ZWID = '0x' + ZWID;",
          "371:         var ZWIDdec =  (\"00\" + parseInt(ZWID)).slice(-3);",
          "372:         item.HardwareName = item.HardwareName + \" \" + ZWIDdec + ' (' + ZWID + ')';",
          "373:        }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d1666ce23fa497e8e8ced83597ab8a8435558fed",
      "candidate_info": {
        "commit_hash": "d1666ce23fa497e8e8ced83597ab8a8435558fed",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/d1666ce23fa497e8e8ced83597ab8a8435558fed",
        "files": [
          "www/app/log/TemperatureLog.js",
          "www/js/domoticz.js"
        ],
        "message": "Better graph display for thermostat devices",
        "before_after_code_files": [
          "www/app/log/TemperatureLog.js||www/app/log/TemperatureLog.js",
          "www/js/domoticz.js||www/js/domoticz.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "www/app/log/TemperatureLog.js||www/app/log/TemperatureLog.js": [
          "File: www/app/log/TemperatureLog.js -> www/app/log/TemperatureLog.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:                     chart = $element",
          "40:                         .highcharts({",
          "41:                             chart: {",
          "43:                                 zoomType: 'x',",
          "44:                                 resetZoomButton: {",
          "45:                                     position: {",
          "",
          "[Removed Lines]",
          "42:                                 type: 'spline',",
          "",
          "[Added Lines]",
          "42:                                 type: getChartType(),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "121:                                             }",
          "122:                                         }",
          "123:                                     }",
          "125:                             },",
          "126:                             title: {",
          "127:                                 text: getChartTitle()",
          "",
          "[Removed Lines]",
          "124:                                 }",
          "",
          "[Added Lines]",
          "124:                                 },",
          "125:         line: {",
          "126:          lineWidth: 3,",
          "127:          states: {",
          "128:           hover: {",
          "129:            lineWidth: 3",
          "130:           }",
          "131:          },",
          "132:          marker: {",
          "133:           enabled: false,",
          "134:           states: {",
          "135:            hover: {",
          "136:             enabled: true,",
          "137:             symbol: 'circle',",
          "138:             radius: 5,",
          "139:             lineWidth: 1",
          "140:            }",
          "141:           }",
          "142:          }",
          "143:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "159:                         })",
          "160:                         .then(function (data) {",
          "161:                             if (typeof data.result != 'undefined') {",
          "163:                                 chart.redraw();",
          "164:                             }",
          "166:                             chart.yAxis[1].visibility = vm.range !== 'day';",
          "167:                         });",
          "168:                 }",
          "170:                 function getChartTitle() {",
          "171:                     var titlePrefix = vm.deviceType === 'Humidity'",
          "",
          "[Removed Lines]",
          "162:                                 AddDataToTempChart(data, chart, vm.range === 'day' ? 1 : 0);",
          "",
          "[Added Lines]",
          "181:                                 AddDataToTempChart(data, chart, vm.range === 'day' ? 1 : 0, (vm.deviceType === 'Thermostat'));",
          "188:                 function getChartType() {",
          "189:      if (vm.deviceType === 'Thermostat') return 'line';",
          "190:      return 'spline';",
          "191:                 }",
          "",
          "---------------"
        ],
        "www/js/domoticz.js||www/js/domoticz.js": [
          "File: www/js/domoticz.js -> www/js/domoticz.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1256:  }",
          "1257: }",
          "1260:  var datatablete = [];",
          "1261:  var datatabletm = [];",
          "1262:  var datatableta = [];",
          "",
          "[Removed Lines]",
          "1259: function AddDataToTempChart(data, chart, isday) {",
          "",
          "[Added Lines]",
          "1259: function AddDataToTempChart(data, chart, isday, isthermostat) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1531:     name: $.t('Temperature'),",
          "1532:     color: 'yellow',",
          "1533:     yAxis: 0,",
          "1534:     tooltip: {",
          "1535:      valueSuffix: ' \\u00B0' + $.myglobals.tempsign,",
          "1536:      valueDecimals: 1",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1534:     step: (isthermostat) ? 'left' : null,",
          "",
          "---------------"
        ]
      }
    }
  ]
}