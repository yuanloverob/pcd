{
  "cve_id": "CVE-2013-4151",
  "cve_desc": "The virtio_load function in virtio/virtio.c in QEMU 1.x before 1.7.2 allows remote attackers to execute arbitrary code via a crafted savevm image, which triggers an out-of-bounds write.",
  "repo": "qemu/qemu",
  "patch_hash": "cc45995294b92d95319b4782750a3580cabdbc0c",
  "patch_info": {
    "commit_hash": "cc45995294b92d95319b4782750a3580cabdbc0c",
    "repo": "qemu/qemu",
    "commit_url": "https://github.com/qemu/qemu/commit/cc45995294b92d95319b4782750a3580cabdbc0c",
    "files": [
      "hw/virtio/virtio.c"
    ],
    "message": "virtio: out-of-bounds buffer write on invalid state load\n\nCVE-2013-4151 QEMU 1.0 out-of-bounds buffer write in\nvirtio_load@hw/virtio/virtio.c\n\nSo we have this code since way back when:\n\n    num = qemu_get_be32(f);\n\n    for (i = 0; i < num; i++) {\n        vdev->vq[i].vring.num = qemu_get_be32(f);\n\narray of vqs has size VIRTIO_PCI_QUEUE_MAX, so\non invalid input this will write beyond end of buffer.\n\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nReviewed-by: Michael Roth <mdroth@linux.vnet.ibm.com>\nSigned-off-by: Juan Quintela <quintela@redhat.com>",
    "before_after_code_files": [
      "hw/virtio/virtio.c||hw/virtio/virtio.c"
    ]
  },
  "patch_diff": {
    "hw/virtio/virtio.c||hw/virtio/virtio.c": [
      "File: hw/virtio/virtio.c -> hw/virtio/virtio.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "892: int virtio_load(VirtIODevice *vdev, QEMUFile *f)",
      "893: {",
      "895:     uint32_t features;",
      "896:     uint32_t supported_features;",
      "897:     BusState *qbus = qdev_get_parent_bus(DEVICE(vdev));",
      "",
      "[Removed Lines]",
      "894:     int num, i, ret;",
      "",
      "[Added Lines]",
      "894:     int i, ret;",
      "895:     uint32_t num;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "920:     num = qemu_get_be32(f);",
      "922:     for (i = 0; i < num; i++) {",
      "923:         vdev->vq[i].vring.num = qemu_get_be32(f);",
      "924:         if (k->has_variable_vring_alignment) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "923:     if (num > VIRTIO_PCI_QUEUE_MAX) {",
      "924:         error_report(\"Invalid number of PCI queues: 0x%x\", num);",
      "925:         return -1;",
      "926:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5544b7e419fd47f6ad4552d30189e3a922acdfb1",
      "candidate_info": {
        "commit_hash": "5544b7e419fd47f6ad4552d30189e3a922acdfb1",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/5544b7e419fd47f6ad4552d30189e3a922acdfb1",
        "files": [
          "hw/virtio/virtio.c"
        ],
        "message": "virtio: out-of-bounds buffer write on invalid state load\n\nCVE-2013-4151 QEMU 1.0 out-of-bounds buffer write in\nvirtio_load@hw/virtio/virtio.c\n\nSo we have this code since way back when:\n\n    num = qemu_get_be32(f);\n\n    for (i = 0; i < num; i++) {\n        vdev->vq[i].vring.num = qemu_get_be32(f);\n\narray of vqs has size VIRTIO_PCI_QUEUE_MAX, so\non invalid input this will write beyond end of buffer.\n\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nReviewed-by: Michael Roth <mdroth@linux.vnet.ibm.com>\nSigned-off-by: Juan Quintela <quintela@redhat.com>\n(cherry picked from commit cc45995294b92d95319b4782750a3580cabdbc0c)\nSigned-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>",
        "before_after_code_files": [
          "hw/virtio/virtio.c||hw/virtio/virtio.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hw/virtio/virtio.c||hw/virtio/virtio.c"
          ],
          "candidate": [
            "hw/virtio/virtio.c||hw/virtio/virtio.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/virtio/virtio.c||hw/virtio/virtio.c": [
          "File: hw/virtio/virtio.c -> hw/virtio/virtio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "889: int virtio_load(VirtIODevice *vdev, QEMUFile *f)",
          "890: {",
          "892:     uint32_t features;",
          "893:     uint32_t supported_features;",
          "894:     BusState *qbus = qdev_get_parent_bus(DEVICE(vdev));",
          "",
          "[Removed Lines]",
          "891:     int num, i, ret;",
          "",
          "[Added Lines]",
          "891:     int i, ret;",
          "892:     uint32_t num;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "917:     num = qemu_get_be32(f);",
          "919:     for (i = 0; i < num; i++) {",
          "920:         vdev->vq[i].vring.num = qemu_get_be32(f);",
          "921:         if (k->has_variable_vring_alignment) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "920:     if (num > VIRTIO_PCI_QUEUE_MAX) {",
          "921:         error_report(\"Invalid number of PCI queues: 0x%x\", num);",
          "922:         return -1;",
          "923:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "48935f029f5ae7f6bd6f01b2c942a7f2f1a7bc9a",
      "candidate_info": {
        "commit_hash": "48935f029f5ae7f6bd6f01b2c942a7f2f1a7bc9a",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/48935f029f5ae7f6bd6f01b2c942a7f2f1a7bc9a",
        "files": [
          "hw/virtio/virtio.c"
        ],
        "message": "virtio: out-of-bounds buffer write on invalid state load\n\nCVE-2013-4151 QEMU 1.0 out-of-bounds buffer write in\nvirtio_load@hw/virtio/virtio.c\n\nSo we have this code since way back when:\n\n    num = qemu_get_be32(f);\n\n    for (i = 0; i < num; i++) {\n        vdev->vq[i].vring.num = qemu_get_be32(f);\n\narray of vqs has size VIRTIO_PCI_QUEUE_MAX, so\non invalid input this will write beyond end of buffer.\n\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nReviewed-by: Michael Roth <mdroth@linux.vnet.ibm.com>\nSigned-off-by: Juan Quintela <quintela@redhat.com>\n(cherry picked from commit cc45995294b92d95319b4782750a3580cabdbc0c)\nSigned-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>",
        "before_after_code_files": [
          "hw/virtio/virtio.c||hw/virtio/virtio.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hw/virtio/virtio.c||hw/virtio/virtio.c"
          ],
          "candidate": [
            "hw/virtio/virtio.c||hw/virtio/virtio.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/virtio/virtio.c||hw/virtio/virtio.c": [
          "File: hw/virtio/virtio.c -> hw/virtio/virtio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "898: int virtio_load(VirtIODevice *vdev, QEMUFile *f)",
          "899: {",
          "901:     uint32_t features;",
          "902:     uint32_t supported_features;",
          "903:     BusState *qbus = qdev_get_parent_bus(DEVICE(vdev));",
          "",
          "[Removed Lines]",
          "900:     int num, i, ret;",
          "",
          "[Added Lines]",
          "900:     int i, ret;",
          "901:     uint32_t num;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "929:     num = qemu_get_be32(f);",
          "931:     for (i = 0; i < num; i++) {",
          "932:         vdev->vq[i].vring.num = qemu_get_be32(f);",
          "933:         if (k->has_variable_vring_alignment) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "932:     if (num > VIRTIO_PCI_QUEUE_MAX) {",
          "933:         error_report(\"Invalid number of PCI queues: 0x%x\", num);",
          "934:         return -1;",
          "935:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}