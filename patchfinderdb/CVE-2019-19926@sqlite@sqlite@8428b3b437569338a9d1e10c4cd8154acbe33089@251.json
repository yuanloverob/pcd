{
  "cve_id": "CVE-2019-19926",
  "cve_desc": "multiSelect in select.c in SQLite 3.30.1 mishandles certain errors during parsing, as demonstrated by errors from sqlite3WindowRewrite() calls. NOTE: this vulnerability exists because of an incomplete fix for CVE-2019-19880.",
  "repo": "sqlite/sqlite",
  "patch_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
  "patch_info": {
    "commit_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/8428b3b437569338a9d1e10c4cd8154acbe33089",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c"
    ],
    "message": "Continuation of [e2bddcd4c55ba3cb]: Add another spot where it is necessary to abort early due to prior errors in sqlite3WindowRewrite().\n\nFossilOrigin-Name: cba2a2a44cdf138a629109bb0ad088ed4ef67fc66bed3e0373554681a39615d2",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 3d4c0bf8904135fa68c75801bfa738715cacc3b19dc8ad6ef550b11798d4b121",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2809:     }",
      "2810:   #endif",
      "2811:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2812:   if( pParse->nErr ) goto multi_select_end;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4dad7ed532ef1a6b50e5ebf4dedf2a4611a82159",
      "candidate_info": {
        "commit_hash": "4dad7ed532ef1a6b50e5ebf4dedf2a4611a82159",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4dad7ed532ef1a6b50e5ebf4dedf2a4611a82159",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/gencol1.test"
        ],
        "message": "When a table is part of a LEFT JOIN and should be a completely NULL row due to the semantics of a LEFT JOIN, make sure any generated columns on that row evaluate to NULL.  Ticket [3b84b42943644d6f]\n\nFossilOrigin-Name: 0271491438ad2a985aeff355173a8d0f1e5813954c82147bc68cb26cca5804c8",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/gencol1.test||test/gencol1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 1e3918ca2f2c1cfcfa44249b1d7b847d52cbb8d302a8d4a335c090cfdf22d7a1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3408:   Column *pCol,",
          "3409:   int regOut",
          "3410: ){",
          "3411:   sqlite3ExprCode(pParse, pCol->pDflt, regOut);",
          "3412:   if( pCol->affinity>=SQLITE_AFF_TEXT ){",
          "3415:   }",
          "3416: }",
          "",
          "[Removed Lines]",
          "3413:     sqlite3VdbeAddOp4(pParse->pVdbe, OP_Affinity, regOut, 1, 0,",
          "3414:                       &pCol->affinity, 1);",
          "",
          "[Added Lines]",
          "3411:   int iAddr;",
          "3412:   Vdbe *v = pParse->pVdbe;",
          "3413:   assert( v!=0 );",
          "3414:   assert( pParse->iSelfTab!=0 );",
          "3415:   if( pParse->iSelfTab>0 ){",
          "3416:     iAddr = sqlite3VdbeAddOp3(v, OP_IfNullRow, pParse->iSelfTab-1, 0, regOut);",
          "3417:   }else{",
          "3418:     iAddr = 0;",
          "3419:   }",
          "3422:     sqlite3VdbeAddOp4(v, OP_Affinity, regOut, 1, 0, &pCol->affinity, 1);",
          "3424:   if( iAddr ) sqlite3VdbeJumpHere(v, iAddr);",
          "",
          "---------------"
        ],
        "test/gencol1.test||test/gencol1.test": [
          "File: test/gencol1.test -> test/gencol1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "419:   SELECT a, quote(b) FROM t1",
          "420: } {9 NULL}",
          "422: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "422: # 2019-12-16 ticket 3b84b42943644d6f",
          "423: # When a table is the right table of a LEFT JOIN and the ON clause is",
          "424: # false, make sure any generated columns evaluate to NULL.",
          "425: reset_db",
          "426: do_execsql_test gencol1-16.10 {",
          "427:   CREATE TABLE t0(c0);",
          "428:   CREATE TABLE t1(c1, c2 AS(1));",
          "429:   INSERT INTO t0 VALUES(0);",
          "430:   SELECT c0, c1, c2 FROM t0 LEFT JOIN t1;",
          "431: } {0 {} {}}",
          "432: do_execsql_test gencol1-16.20 {",
          "433:   DROP TABLE t1;",
          "434:   CREATE TABLE t1(c1, c2 AS (c1 ISNULL));",
          "435:   SELECT c0, c1, c2 FROM t0 LEFT JOIN t1;",
          "436: } {0 {} {}}",
          "437: do_execsql_test gencol1-16.30 {",
          "438:   INSERT INTO t1(c1) VALUES(1),(NULL);",
          "439:   SELECT * FROM t1;",
          "440: } {1 0 {} 1}",
          "441: do_execsql_test gencol1-16.40 {",
          "442:   SELECT c0, c1, c2 FROM t0 LEFT JOIN t1 ON c0=c1;",
          "443: } {0 {} {}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d1d158bf5abbab97ee65462c7ee391693ce7ffd7",
      "candidate_info": {
        "commit_hash": "d1d158bf5abbab97ee65462c7ee391693ce7ffd7",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d1d158bf5abbab97ee65462c7ee391693ce7ffd7",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/sqliteInt.h",
          "src/vdbe.h",
          "src/vdbeaux.c"
        ],
        "message": "Additional small performance increase and size reduction to the sqlite3VdbeMakeLabel() mechanism.\n\nFossilOrigin-Name: 1bdee199a71e0a6c247b85e72de9e3a3099b7179c33288735721facef3b96459",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/vdbe.h||src/vdbe.h",
          "src/vdbeaux.c||src/vdbeaux.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4a0929ac76d8aa5dd65eac3b83d6bbf41e505e01d175ca0fb2b19ba02d439415",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h"
        ],
        "src/vdbe.h||src/vdbe.h": [
          "File: src/vdbe.h -> src/vdbe.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "156: #endif",
          "",
          "[Removed Lines]",
          "164: #define ADDR(X)  (-1-(X))",
          "",
          "[Added Lines]",
          "163: #define ADDR(X)  (~(X))",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "451: int sqlite3VdbeMakeLabel(Parse *pParse){",
          "453: }",
          "",
          "[Removed Lines]",
          "452:   return ADDR(pParse->nLabel++);",
          "",
          "[Added Lines]",
          "463:   return --pParse->nLabel;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "460: static SQLITE_NOINLINE void resizeResolveLabel(Parse *p, Vdbe *v, int j){",
          "462:   p->aLabel = sqlite3DbReallocOrFree(p->db, p->aLabel,",
          "463:                      nNewSize*sizeof(p->aLabel[0]));",
          "464:   if( p->aLabel==0 ){",
          "",
          "[Removed Lines]",
          "461:   int nNewSize = p->nLabel+10;",
          "",
          "[Added Lines]",
          "472:   int nNewSize = 10 - p->nLabel;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "476:   Parse *p = v->pParse;",
          "477:   int j = ADDR(x);",
          "478:   assert( v->magic==VDBE_MAGIC_INIT );",
          "480:   assert( j>=0 );",
          "481: #ifdef SQLITE_DEBUG",
          "482:   if( p->db->flags & SQLITE_VdbeAddopTrace ){",
          "483:     printf(\"RESOLVE LABEL %d to %d\\n\", x, v->nOp);",
          "484:   }",
          "485: #endif",
          "487:     resizeResolveLabel(p,v,j);",
          "488:   }else{",
          "",
          "[Removed Lines]",
          "479:   assert( j<p->nLabel );",
          "486:   if( p->nLabelAlloc < p->nLabel ){",
          "",
          "[Added Lines]",
          "490:   assert( j<-p->nLabel );",
          "497:   if( p->nLabelAlloc + p->nLabel < 0 ){",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "763:             assert( (sqlite3OpcodeProperty[pOp->opcode] & OPFLG_JUMP)!=0 );",
          "765:             pOp->p2 = aLabel[ADDR(pOp->p2)];",
          "766:           }",
          "767:           break;",
          "",
          "[Removed Lines]",
          "764:             assert( ADDR(pOp->p2)<pParse->nLabel );",
          "",
          "[Added Lines]",
          "775:             assert( ADDR(pOp->p2)<-pParse->nLabel );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a3fcc000cb7bd5b12816512834e6484c68658576",
      "candidate_info": {
        "commit_hash": "a3fcc000cb7bd5b12816512834e6484c68658576",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a3fcc000cb7bd5b12816512834e6484c68658576",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "src/resolve.c",
          "src/sqliteInt.h",
          "src/window.c",
          "test/window9.test"
        ],
        "message": "Ensure that SQLite does not attempt to process incompatible window functions in a single scan. Fix for [256741a1].\n\nFossilOrigin-Name: 4f5b2d938194fab7627486e2ced633def2c90d9d3328e3700612feb9dbfa3d9a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "src/resolve.c||src/resolve.c",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/window.c||src/window.c",
          "test/window9.test||test/window9.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b2e79f8ff0836fcc98a2df9377aad9137307c34058030ecd1b5d4ec3277ed36a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1325:     assert( pWin );",
          "1326:     assert( IsWindowFunc(pExpr) );",
          "1327:     assert( pWin->ppThis==0 );",
          "1334:   }",
          "1335:   return WRC_Continue;",
          "1336: }",
          "",
          "[Removed Lines]",
          "1328:     if( pSelect->pWin ){",
          "1329:       pSelect->pWin->ppThis = &pWin->pNextWin;",
          "1330:     }",
          "1331:     pWin->pNextWin = pSelect->pWin;",
          "1332:     pWin->ppThis = &pSelect->pWin;",
          "1333:     pSelect->pWin = pWin;",
          "",
          "[Added Lines]",
          "1328:     sqlite3WindowLink(pSelect, pWin);",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "908:           sqlite3WalkExprList(pWalker, pWin->pPartition);",
          "909:           sqlite3WalkExprList(pWalker, pWin->pOrderBy);",
          "910:           sqlite3WalkExpr(pWalker, pWin->pFilter);",
          "921:           pNC->ncFlags |= NC_HasWin;",
          "922:         }else",
          "",
          "[Removed Lines]",
          "911:           if( 0==pSel->pWin",
          "912:            || 0==sqlite3WindowCompare(pParse, pSel->pWin, pWin, 0)",
          "913:           ){",
          "914:             pWin->pNextWin = pSel->pWin;",
          "915:             if( pSel->pWin ){",
          "916:               pSel->pWin->ppThis = &pWin->pNextWin;",
          "917:             }",
          "918:             pSel->pWin = pWin;",
          "919:             pWin->ppThis = &pSel->pWin;",
          "920:           }",
          "",
          "[Added Lines]",
          "911:           sqlite3WindowLink(pSel, pWin);",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3609: void sqlite3WindowListDelete(sqlite3 *db, Window *p);",
          "3610: Window *sqlite3WindowAlloc(Parse*, int, int, Expr*, int , Expr*, u8);",
          "3611: void sqlite3WindowAttach(Parse*, Expr*, Window*);",
          "3612: int sqlite3WindowCompare(Parse*, Window*, Window*, int);",
          "3613: void sqlite3WindowCodeInit(Parse*, Window*);",
          "3614: void sqlite3WindowCodeStep(Parse*, Select*, WhereInfo*, int, int);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3612: void sqlite3WindowLink(Select *pSel, Window *pWin);",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1229:   }",
          "1230: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1238: void sqlite3WindowLink(Select *pSel, Window *pWin){",
          "1239:   if( 0==pSel->pWin",
          "1240:    || 0==sqlite3WindowCompare(0, pSel->pWin, pWin, 0)",
          "1241:   ){",
          "1242:     pWin->pNextWin = pSel->pWin;",
          "1243:     if( pSel->pWin ){",
          "1244:       pSel->pWin->ppThis = &pWin->pNextWin;",
          "1245:     }",
          "1246:     pSel->pWin = pWin;",
          "1247:     pWin->ppThis = &pSel->pWin;",
          "1248:   }",
          "1249: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1416:     int nArg = windowArgCount(pWin);",
          "1417:     int i;",
          "1419:     for(i=0; i<nArg; i++){",
          "1420:       if( i!=1 || pFunc->zName!=nth_valueName ){",
          "1421:         sqlite3VdbeAddOp3(v, OP_Column, csr, pWin->iArgCol+i, reg+i);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1438:     assert( bInverse==0 || pWin->eStart!=TK_UNBOUNDED );",
          "",
          "---------------"
        ],
        "test/window9.test||test/window9.test": [
          "File: test/window9.test -> test/window9.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "171:   } {~/ORDER/}",
          "172: }",
          "176: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "174: #-------------------------------------------------------------------------",
          "175: reset_db",
          "176: do_execsql_test 6.0 {",
          "177:   CREATE TABLE t0(c0);",
          "178:   INSERT INTO t0(c0) VALUES (0);",
          "179: }",
          "181: do_execsql_test 6.1 {",
          "182:   SELECT * FROM t0 WHERE",
          "183:   EXISTS (",
          "184:     SELECT MIN(c0) OVER (), CUME_DIST() OVER () FROM t0",
          "185:   ) >=1 AND",
          "186:   EXISTS (",
          "187:     SELECT MIN(c0) OVER (), CUME_DIST() OVER () FROM t0",
          "188:   ) <=1;",
          "189: } {0}",
          "191: do_execsql_test 6.2 {",
          "192:   SELECT * FROM t0 WHERE EXISTS (",
          "193:     SELECT MIN(c0) OVER (), CUME_DIST() OVER () FROM t0",
          "194:   )",
          "195:   BETWEEN 1 AND 1;",
          "196: } {0}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1d07f1d8c7bc6781e118ed6d36a651b52531e282",
      "candidate_info": {
        "commit_hash": "1d07f1d8c7bc6781e118ed6d36a651b52531e282",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1d07f1d8c7bc6781e118ed6d36a651b52531e282",
        "files": [
          "Makefile.in",
          "Makefile.msc",
          "main.mk",
          "manifest",
          "manifest.uuid",
          "src/test_tclsh.c",
          "src/test_vdbecov.c",
          "test/tester.tcl",
          "test/windowerr.tcl",
          "test/windowerr.test"
        ],
        "message": "If the library is built with SQLITE_VDBE_COVERAGE defined, have the Tcl tests generate a vdbe coverage report in file testdir/vdbe_coverage.txt.\n\nFossilOrigin-Name: f0ed714637bf30443d0551d9b6fececa00fc9dfe9669fe720c4598ef71c61e2c",
        "before_after_code_files": [
          "Makefile.in||Makefile.in",
          "Makefile.msc||Makefile.msc",
          "main.mk||main.mk",
          "manifest.uuid||manifest.uuid",
          "src/test_tclsh.c||src/test_tclsh.c",
          "src/test_vdbecov.c||src/test_vdbecov.c",
          "test/tester.tcl||test/tester.tcl",
          "test/windowerr.tcl||test/windowerr.tcl",
          "test/windowerr.test||test/windowerr.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.in||Makefile.in": [
          "File: Makefile.in -> Makefile.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "422:   $(TOP)/src/test_tclsh.c \\",
          "423:   $(TOP)/src/test_tclvar.c \\",
          "424:   $(TOP)/src/test_thread.c \\",
          "425:   $(TOP)/src/test_vfs.c \\",
          "426:   $(TOP)/src/test_windirent.c \\",
          "427:   $(TOP)/src/test_window.c \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "425:   $(TOP)/src/test_vdbecov.c \\",
          "",
          "---------------"
        ],
        "Makefile.msc||Makefile.msc": [
          "File: Makefile.msc -> Makefile.msc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1517:   $(TOP)\\src\\test_tclsh.c \\",
          "1518:   $(TOP)\\src\\test_tclvar.c \\",
          "1519:   $(TOP)\\src\\test_thread.c \\",
          "1520:   $(TOP)\\src\\test_vfs.c \\",
          "1521:   $(TOP)\\src\\test_windirent.c \\",
          "1522:   $(TOP)\\src\\test_window.c \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1520:   $(TOP)\\src\\test_vdbecov.c \\",
          "",
          "---------------"
        ],
        "main.mk||main.mk": [
          "File: main.mk -> main.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "348:   $(TOP)/src/test_tclsh.c \\",
          "349:   $(TOP)/src/test_tclvar.c \\",
          "350:   $(TOP)/src/test_thread.c \\",
          "351:   $(TOP)/src/test_vfs.c \\",
          "352:   $(TOP)/src/test_windirent.c \\",
          "353:   $(TOP)/src/test_window.c \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "351:   $(TOP)/src/test_vdbecov.c \\",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: fa37cf9a6aa3e4325674cb6af68f617d25e349c3f694d0117a19a36fc42daf15",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/test_tclsh.c||src/test_tclsh.c": [
          "File: src/test_tclsh.c -> src/test_tclsh.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "106: #endif",
          "107:   extern int TestExpert_Init(Tcl_Interp*);",
          "108:   extern int Sqlitetest_window_Init(Tcl_Interp *);",
          "110:   Tcl_CmdInfo cmdInfo;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "109:   extern int Sqlitetestvdbecov_Init(Tcl_Interp *);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "171: #endif",
          "172:   TestExpert_Init(interp);",
          "173:   Sqlitetest_window_Init(interp);",
          "175:   Tcl_CreateObjCommand(",
          "176:       interp, \"load_testfixture_extensions\", load_testfixture_extensions,0,0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "175:   Sqlitetestvdbecov_Init(interp);",
          "",
          "---------------"
        ],
        "src/test_vdbecov.c||src/test_vdbecov.c": [
          "File: src/test_vdbecov.c -> src/test_vdbecov.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: #include \"sqlite3.h\"",
          "17: #include \"sqliteInt.h\"",
          "18: #if defined(INCLUDE_SQLITE_TCL_H)",
          "19: #  include \"sqlite_tcl.h\"",
          "20: #else",
          "21: #  include \"tcl.h\"",
          "22: #endif",
          "24: #ifdef SQLITE_VDBE_COVERAGE",
          "26: static u8 aBranchArray[200000];",
          "28: static void test_vdbe_branch(",
          "29:   void *pCtx,",
          "30:   unsigned int iSrc,",
          "31:   unsigned char iBranch,",
          "32:   unsigned char iType",
          "33: ){",
          "34:   if( iSrc<sizeof(aBranchArray) ){",
          "35:     aBranchArray[iSrc] |= iBranch;",
          "36:   }",
          "37: }",
          "39: static void appendToList(Tcl_Obj *pList, int iLine, int iPath){",
          "40:   Tcl_Obj *pNew = Tcl_NewObj();",
          "41:   Tcl_IncrRefCount(pNew);",
          "42:   Tcl_ListObjAppendElement(0, pNew, Tcl_NewIntObj(iLine));",
          "43:   Tcl_ListObjAppendElement(0, pNew, Tcl_NewIntObj(iPath));",
          "44:   Tcl_ListObjAppendElement(0, pList, pNew);",
          "45:   Tcl_DecrRefCount(pNew);",
          "46: }",
          "49: static int SQLITE_TCLAPI test_vdbe_coverage(",
          "50:   ClientData cd,",
          "51:   Tcl_Interp *interp,",
          "52:   int objc,",
          "53:   Tcl_Obj *CONST objv[]",
          "54: ){",
          "55:   const char *aSub[] = { \"start\", \"report\", \"stop\", 0 };",
          "56:   int iSub = -1;",
          "57:   if( objc!=2 ){",
          "58:     Tcl_WrongNumArgs(interp, 1, objv, \"sub-command\");",
          "59:     return TCL_ERROR;",
          "60:   }",
          "62:   if( Tcl_GetIndexFromObj(interp, objv[1], aSub, \"sub-command\", 0, &iSub) ){",
          "63:     return TCL_ERROR;",
          "64:   }",
          "66:   Tcl_ResetResult(interp);",
          "67:   assert( iSub==0 || iSub==1 || iSub==2 );",
          "68:   switch( iSub ){",
          "70:       memset(aBranchArray, 0, sizeof(aBranchArray));",
          "71:       sqlite3_test_control(SQLITE_TESTCTRL_VDBE_COVERAGE, test_vdbe_branch, 0);",
          "72:       break;",
          "74:       int i;",
          "75:       Tcl_Obj *pRes = Tcl_NewObj();",
          "76:       Tcl_IncrRefCount(pRes);",
          "77:       for(i=0; i<sizeof(aBranchArray); i++){",
          "78:         u8 b = aBranchArray[i];",
          "79:         if( b ){",
          "80:           if( (b & 0x01)==0 ) appendToList(pRes, i, 0);",
          "81:           if( (b & 0x02)==0 ) appendToList(pRes, i, 1);",
          "82:           if( (b & 0x04)==0 ) appendToList(pRes, i, 2);",
          "83:         }",
          "84:       }",
          "85:       Tcl_SetObjResult(interp, pRes);",
          "86:       Tcl_DecrRefCount(pRes);",
          "87:       break;",
          "88:     };",
          "91:       sqlite3_test_control(SQLITE_TESTCTRL_VDBE_COVERAGE, 0, 0);",
          "92:       break;",
          "93:   }",
          "95:   return TCL_OK;",
          "96: }",
          "100: int Sqlitetestvdbecov_Init(Tcl_Interp *interp){",
          "101: #ifdef SQLITE_VDBE_COVERAGE",
          "102:   Tcl_CreateObjCommand(interp, \"vdbe_coverage\", test_vdbe_coverage, 0, 0);",
          "103: #endif",
          "104:   return TCL_OK;",
          "105: }",
          "107: #endif",
          "",
          "---------------"
        ],
        "test/tester.tcl||test/tester.tcl": [
          "File: test/tester.tcl -> test/tester.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "576:   if {$cmdlinearg(verbose)==\"\"} {",
          "577:     set cmdlinearg(verbose) 1",
          "578:   }",
          "579: }",
          "581: # Update the soft-heap-limit each time this script is run. In that",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "580:   if {[info commands vdbe_coverage]!=\"\"} {",
          "581:     vdbe_coverage start",
          "582:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1296:       memdebug_log_sql leaks.tcl",
          "1297:     }",
          "1298:   }",
          "1299:   foreach f [glob -nocomplain test.db-*-journal] {",
          "1300:     forcedelete $f",
          "1301:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1303:   if {[info commands vdbe_coverage]!=\"\"} {",
          "1304:     vdbe_coverage_report",
          "1305:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1305:   exit [expr {$nErr>0}]",
          "1306: }",
          "1308: # Display memory statistics for analysis and debugging purposes.",
          "1309: #",
          "1310: proc show_memstats {} {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1315: proc vdbe_coverage_report {} {",
          "1316:   puts \"Writing vdbe coverage report to vdbe_coverage.txt\"",
          "1317:   set lSrc [list]",
          "1318:   set iLine 0",
          "1319:   if {[file exists ../sqlite3.c]} {",
          "1320:     set fd [open ../sqlite3.c]",
          "1321:     set iLine",
          "1322:     while { ![eof $fd] } {",
          "1323:       set line [gets $fd]",
          "1324:       incr iLine",
          "1325:       if {[regexp {^/\\** Begin file (.*\\.c) \\**/} $line -> file]} {",
          "1326:         lappend lSrc [list $iLine $file]",
          "1327:       }",
          "1328:     }",
          "1329:     close $fd",
          "1330:   }",
          "1331:   set fd [open vdbe_coverage.txt w]",
          "1332:   foreach miss [vdbe_coverage report] {",
          "1333:     foreach {line branch} $miss {}",
          "1334:     set nextfile \"\"",
          "1335:     while {[llength $lSrc]>0 && [lindex $lSrc 0 0] < $line} {",
          "1336:       set nextfile [lindex $lSrc 0 1]",
          "1337:       set lSrc [lrange $lSrc 1 end]",
          "1338:     }",
          "1339:     if {$nextfile != \"\"} {",
          "1340:       puts $fd \"\"",
          "1341:       puts $fd \"### $nextfile ###\"",
          "1342:     }",
          "1343:     puts $fd \"Vdbe branch $line: path $branch never taken\"",
          "1344:   }",
          "1345:   close $fd",
          "1346: }",
          "",
          "---------------"
        ],
        "test/windowerr.tcl||test/windowerr.tcl": [
          "File: test/windowerr.tcl -> test/windowerr.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:   SELECT sum(a) OVER () AS xyz FROM t1 ORDER BY sum(xyz);",
          "56: }",
          "59: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58: errorsql_test 3.0 {",
          "59:   SELECT sum(a) OVER win FROM t1",
          "60:   WINDOW win AS (ROWS BETWEEN 'hello' PRECEDING AND 10 FOLLOWING)",
          "61: }",
          "62: errorsql_test 3.2 {",
          "63:   SELECT sum(a) OVER win FROM t1",
          "64:   WINDOW win AS (ROWS BETWEEN 10 PRECEDING AND x'ABCD' FOLLOWING)",
          "65: }",
          "",
          "---------------"
        ],
        "test/windowerr.test||test/windowerr.test": [
          "File: test/windowerr.test -> test/windowerr.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:   SELECT sum(a) OVER () AS xyz FROM t1 ORDER BY sum(xyz);",
          "97: } } } 1",
          "99: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "99: # PG says ERROR:  invalid input syntax for integer: \"hello\"",
          "100: do_test 3.0 { catch { execsql {",
          "101:   SELECT sum(a) OVER win FROM t1",
          "102:   WINDOW win AS (ROWS BETWEEN 'hello' PRECEDING AND 10 FOLLOWING)",
          "103: } } } 1",
          "105: # PG says ERROR:  argument of ROWS must be type bigint, not type bit",
          "106: do_test 3.2 { catch { execsql {",
          "107:   SELECT sum(a) OVER win FROM t1",
          "108:   WINDOW win AS (ROWS BETWEEN 10 PRECEDING AND x'ABCD' FOLLOWING)",
          "109: } } } 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3993397e6c2a1f754c52b4a4a999367e2ea8f0c9",
      "candidate_info": {
        "commit_hash": "3993397e6c2a1f754c52b4a4a999367e2ea8f0c9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3993397e6c2a1f754c52b4a4a999367e2ea8f0c9",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a buffer overrun triggered by a merge operation on a corrupt fts5 database.\n\nFossilOrigin-Name: 7ee3cd5b2cdf8db35f70400b3df58f7c421c78ae77c50f22b0ee22d5a3039429",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4145:       u8 aHdr[4] = {0x00, 0x00, 0x00, 0x00};",
          "4147:       iLeafRowid = FTS5_SEGMENT_ROWID(iId, pSeg->iTermLeafPgno);",
          "4149:       if( pData ){",
          "4150:         if( iOff>pData->szLeaf ){",
          "",
          "[Removed Lines]",
          "4148:       pData = fts5DataRead(p, iLeafRowid);",
          "",
          "[Added Lines]",
          "4148:       pData = fts5LeafRead(p, iLeafRowid);",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "5820:   SELECT snippet(t1, -1, '.', '..', '', 2 ) FROM t1('g h') ORDER BY rank;",
          "5821: } {0 {{.g.. .h..} {.g.. h} {.g.. .h..}}}",
          "5823: sqlite3_fts5_may_be_corrupt 0",
          "5824: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5823: #--------------------------------------------------------------------------",
          "5824: reset_db",
          "5825: do_test 45.0 {",
          "5826:   sqlite3 db {}",
          "5827:   db deserialize [decode_hexdb {",
          "5828: | size 24576 pagesize 4096 filename crash-0b162c9e69b999.db",
          "5829: | page 1 offset 0",
          "5830: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "5831: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 06   .....@  ........",
          "5832: |     32: 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00 04   ................",
          "5833: |     48: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "5834: |     96: 00 00 00 00 0d 00 00 00 06 0e 0f 00 0f aa 0f 53   ...............S",
          "5835: |    112: 0e e8 0e 8b 0e 33 0e 0f 00 00 00 00 00 00 00 00   .....3..........",
          "5836: |   3584: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 22   ................",
          "5837: |   3600: 06 06 17 11 11 01 31 74 61 62 6c 65 62 62 62 62   ......1tablebbbb",
          "5838: |   3616: 06 43 52 45 41 54 45 20 54 41 42 4c 45 20 62 62   .CREATE TABLE bb",
          "5839: |   3632: 28 61 29 56 05 06 17 1f 1f 01 7d 74 61 52 6c 65   (a)V.......taRle",
          "5840: |   3648: 74 31 5f 63 6f 6e 66 69 67 74 31 5f 63 6f 6e 66   t1_configt1_conf",
          "5841: |   3664: 69 67 05 43 52 45 41 54 45 20 54 41 42 4c 45 20   ig.CREATE TABLE",
          "5842: |   3680: 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b 20 50 52   't1_config'(k PR",
          "5843: |   3696: 49 4d 41 52 59 20 4b 45 59 2c 20 76 29 20 57 49   IMARY KEY, v) WI",
          "5844: |   3712: 54 48 4f 55 54 20 52 4f 57 49 44 5b 04 07 17 21   THOUT ROWID[...!",
          "5845: |   3728: 21 01 81 01 74 61 62 6c 65 74 31 5f 64 6f 73 73   !...tablet1_doss",
          "5846: |   3744: 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65 04 43 52   izet1_docsize.CR",
          "5847: |   3760: 45 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 64   EATE TABLE 't1_d",
          "5848: |   3776: 6f 63 73 69 7a 65 27 28 69 64 20 49 4e 54 45 47   ocsize'(id INTEG",
          "5849: |   3792: 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20   ER PRIMARY KEY,",
          "5850: |   3808: 73 7a 20 42 4c 4f 42 29 69 03 07 17 19 19 01 81   sz BLOB)i.......",
          "5851: |   3824: 2d 74 61 62 6c 65 74 31 5f 69 64 78 74 31 5f 69   -tablet1_idxt1_i",
          "5852: |   3840: 64 78 03 43 52 45 41 54 45 20 54 41 42 4c 45 20   dx.CREATE TABLE",
          "5853: |   3856: 27 74 31 5f 69 64 78 27 28 73 65 67 69 64 2c 20   't1_idx'(segid,",
          "5854: |   3872: 74 65 72 6d 2c 20 70 67 6e 6f 2c 20 50 52 49 4d   term, pgno, PRIM",
          "5855: |   3888: 41 52 59 20 4b 45 59 28 73 65 67 69 64 2c 20 74   ARY KEY(segid, t",
          "5856: |   3904: 65 72 6d 29 29 20 57 49 54 48 4f 55 54 20 52 4f   erm)) WITHOUT RO",
          "5857: |   3920: 57 49 44 55 02 07 17 1b 1b 01 81 01 74 61 62 6c   WIDU........tabl",
          "5858: |   3936: 65 74 31 5f 64 61 74 61 74 31 5f 64 61 74 61 02   et1_datat1_data.",
          "5859: |   3952: 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74 31   CREATE TABLE 't1",
          "5860: |   3968: 5f 64 61 74 61 27 28 69 64 20 49 4e 54 45 47 45   _data'(id INTEGE",
          "5861: |   3984: 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 62   R PRIMARY KEY, b",
          "5862: |   4000: 6c 6f 63 6b 20 42 4c 4f 42 29 54 01 07 17 11 11   lock BLOB)T.....",
          "5863: |   4016: 08 81 15 74 61 62 6c 65 74 31 74 31 43 52 45 41   ...tablet1t1CREA",
          "5864: |   4032: 54 45 20 56 49 52 54 55 41 4c 20 54 41 42 4c 45   TE VIRTUAL TABLE",
          "5865: |   4048: 20 74 31 20 55 53 49 4e 47 20 66 74 73 35 28 61    t1 USING fts5(a",
          "5866: |   4064: 2c 62 2c 70 72 65 66 69 78 3d 22 31 2c 32 2c 33   ,b,prefix=.1,2,3",
          "5867: |   4080: 2c 34 22 2c 20 63 6f 6e 74 65 6e 74 3d 22 22 29   ,4., content=..)",
          "5868: | page 2 offset 4096",
          "5869: |      0: 0d 0b 6a 00 37 09 4c 02 0f e7 09 4c 0f c6 0f a4   ..j.7.L....L....",
          "5870: |     16: 0f 88 0f 6d 0f 4b 0f 2c 0f 0e 0e ec 0e cd 0e ad   ...m.K.,........",
          "5871: |     32: 0e 8e 0e 6c 0e 4b 0e 29 0e 08 0d e6 0d c4 0d b5   ...l.K.)........",
          "5872: |     48: 0d 97 0d 76 0d 54 0d 31 0d 15 0c f3 0c d3 0c b5   ...v.T.1........",
          "5873: |     64: 0c 95 0c 73 0c 54 0c 32 0c 10 0b ee 0b cc 0b b0   ...s.T.2........",
          "5874: |     80: 0b 8d 0b 7e 0b 48 0b 2e 0b 0b 0a ef 0a cc 0a ad   ...~.H..........",
          "5875: |     96: 0a 8c 0a 6d 0a 4d 0a 2b 0a 0c 09 ec 09 ca 09 a8   ...m.M.+........",
          "5876: |    112: 09 86 09 63 0f f1 00 00 00 00 00 00 00 00 00 00   ...c............",
          "5877: |   2368: 00 00 00 00 00 00 00 00 00 00 00 00 15 0a 03 00   ................",
          "5878: |   2384: 30 00 00 00 01 01 03 35 00 03 01 01 12 02 01 12   0......5........",
          "5879: |   2400: 03 01 11 1c 8c 80 80 80 80 10 03 00 3e 00 00 00   ............>...",
          "5880: |   2416: 17 01 05 05 34 74 61 62 6c 03 02 03 01 04 77 68   ....4tabl.....wh",
          "5881: |   2432: 65 72 03 02 06 09 1b 8c 80 80 80 80 0f 03 00 3c   er.............<",
          "5882: |   2448: 00 00 00 16 05 34 66 75 73 34 03 02 02 01 04 6e   .....4fus4.....n",
          "5883: |   2464: 75 6d 62 03 06 01 04 09 1b 8c 80 80 80 80 0e 03   umb.............",
          "5884: |   2480: 00 3c 00 00 00 16 04 33 74 68 65 03 06 01 01 04   .<.....3the.....",
          "5885: |   2496: 01 03 77 68 65 03 02 04 04 0a 1b 8c 80 80 80 80   ..whe...........",
          "5886: |   2512: 0d 03 00 3c 00 00 00 16 04 33 6e 74 6d 03 06 01   ...<.....3ntm...",
          "5887: |   2528: 01 05 01 03 74 61 62 05 62 03 04 0a 19 8c 80 80   ....tab.b.......",
          "5888: |   2544: 80 80 0c 03 00 38 00 00 00 14 03 32 77 68 03 02   .....8.....2wh..",
          "5889: |   2560: 04 00 04 33 66 74 73 03 02 02 04 07 18 8c 80 80   ...3fts.........",
          "5890: |   2576: 80 80 0b 03 00 36 00 00 00 13 03 32 74 61 03 02   .....6.....2ta..",
          "5891: |   2592: 03 02 01 68 03 06 01 01 04 04 07 1b 8c 80 80 80   ...h............",
          "5892: |   2608: 80 0a 03 00 3c 00 00 00 16 03 32 6e 75 03 06 01   ....<.....2nu...",
          "5893: |   2624: 01 05 01 02 6f 66 03 06 01 01 06 04 09 19 8c 80   ....of..........",
          "5894: |   2640: 80 80 80 09 03 00 38 00 00 00 14 03 32 66 74 03   ......8.....2ft.",
          "5895: |   2656: 02 02 01 02 69 73 03 06 01 01 03 04 07 18 8c 80   ....is..........",
          "5896: |   2672: 80 80 80 08 03 00 36 00 00 00 13 02 31 74 03 08   ......6.....1t..",
          "5897: |   2688: 03 01 01 04 01 01 77 03 02 04 04 09 1a 8c 80 80   ......w.........",
          "5898: |   2704: 80 80 07 03 00 3a ff 00 00 15 02 31 6e 03 08 01   .....:.....1n...",
          "5899: |   2720: 01 02 05 01 01 6f 03 06 01 01 06 04 09 18 8c 80   .....o..........",
          "5900: |   2736: 80 80 80 06 03 00 36 00 00 00 13 04 02 31 66 03   ......6......1f.",
          "5901: |   2752: 02 02 01 01 69 03 06 01 01 03 05 06 1c 8c 80 80   ....i...........",
          "5902: |   2768: 80 80 05 03 00 3e 00 00 00 17 04 30 74 68 65 03   .....>.....0the.",
          "5903: |   2784: 06 01 01 04 01 05 77 68 65 72 65 03 02 04 0a 15   ......where.....",
          "5904: |   2800: 8c 80 80 80 80 04 03 00 30 00 00 00 11 01 01 06   ........0.......",
          "5905: |   2816: 06 30 74 61 62 6c 65 03 02 03 07 1c 8c 80 80 80   .0table.........",
          "5906: |   2832: 80 03 03 00 3e 00 00 00 17 07 30 6e 75 6d 62 65   ....>.....0numbe",
          "5907: |   2848: 72 03 06 01 01 05 01 02 6f 66 03 06 04 0d 13 8c   r.......of......",
          "5908: |   2864: 80 80 80 80 02 03 00 2c 00 00 00 0f 01 01 03 02   .......,........",
          "5909: |   2880: 30 6e 03 06 01 01 02 07 1b 8c 80 80 80 80 01 03   0n..............",
          "5910: |   2896: 00 3c 00 00 00 16 08 30 66 74 73 34 61 75 78 03   .<.....0fts4aux.",
          "5911: |   2912: 02 02 01 02 69 73 03 06 04 0c 00 00 00 14 2a 00   ....is........*.",
          "5912: |   2928: 00 00 01 01 02 24 00 02 01 01 12 02 01 12 08 88   .....$..........",
          "5913: |   2944: 80 80 80 80 11 03 00 16 00 00 01 05 02 1c 88 80   ................",
          "5914: |   2960: 80 80 80 11 03 00 3e 00 00 00 17 05 34 72 6f 77   ......>.....4row",
          "5915: |   2976: 73 02 06 01 01 05 01 04 74 68 65 72 02 02 04 0b   s.......ther....",
          "5916: |   2992: 15 88 80 80 80 80 10 03 00 30 00 00 00 11 02 01   .........0......",
          "5917: |   3008: 01 07 05 34 62 65 74 77 02 02 04 08 1b 88 80 80   ...4betw........",
          "5918: |   3024: 80 80 0f 03 00 3c 00 00 00 16 04 04 33 72 6f 77   .....<......3row",
          "5919: |   3040: 02 06 01 01 05 01 03 74 68 65 02 08 05 0a 1b 88   .......the......",
          "5920: |   3056: 80 80 80 80 0e 03 00 3c 00 00 00 16 02 01 02 04   .......<........",
          "5921: |   3072: 33 61 72 65 02 02 03 01 03 62 65 74 02 02 07 08   3are.....bet....",
          "5922: |   3088: 1b 88 80 80 80 80 0d 03 00 3c 00 00 00 16 03 32   .........<.....2",
          "5923: |   3104: 74 68 02 08 02 01 01 07 00 04 33 61 6e 64 02 06   th........3and..",
          "5924: |   3120: 04 0a 1b 88 80 80 80 80 0c 03 00 3c 00 00 00 16   ...........<....",
          "5925: |   3136: 03 32 69 6e 02 06 01 01 06 01 02 72 6f 02 06 01   .2in.......ro...",
          "5926: |   3152: 01 05 04 09 18 88 80 80 80 80 0b 03 00 36 00 00   .............6..",
          "5927: |   3168: 00 13 02 03 32 61 72 02 02 03 01 02 62 65 02 02   ....2ar.....be..",
          "5928: |   3184: 04 05 07 1b 88 80 80 80 80 0a 03 00 3c 00 00 00   ............<...",
          "5929: |   3200: 16 02 31 74 02 08 02 01 01 07 00 03 32 61 6e 02   ..1t........2an.",
          "5930: |   3216: 06 01 01 04 09 19 88 80 80 80 80 09 03 00 38 00   ..............8.",
          "5931: |   3232: 00 00 14 02 31 6e 02 06 01 01 03 01 01 72 02 06   ....1n.......r..",
          "5932: |   3248: 01 01 05 04 08 17 88 80 80 80 80 08 03 00 34 00   ..............4.",
          "5933: |   3264: 00 00 12 02 31 62 02 02 04 01 01 69 02 06 01 01   ....1b.....i....",
          "5934: |   3280: 06 04 06 19 88 80 80 80 80 07 03 00 38 00 00 00   ............8...",
          "5935: |   3296: 14 04 02 31 32 02 02 05 01 01 61 02 08 03 01 01   ...12.....a.....",
          "5936: |   3312: 02 05 06 1b 88 80 80 80 80 06 03 00 3c 00 00 00   ............<...",
          "5937: |   3328: 16 06 30 74 68 65 72 65 02 02 02 00 02 31 31 02   ..0there.....11.",
          "5938: |   3344: 06 01 01 04 0a 15 88 80 80 80 80 05 03 00 30 00   ..............0.",
          "5939: |   3360: 00 00 11 01 01 05 04 30 74 68 65 02 06 01 01 07   .......0the.....",
          "5940: |   3376: 07 1c 88 80 80 80 80 04 03 00 3e 00 00 00 17 01   ..........>.....",
          "5941: |   3392: 01 06 02 30 6e 02 06 01 01 03 01 04 72 6f 77 73   ...0n.......rows",
          "5942: |   3408: 02 06 07 08 1b 88 80 80 80 80 03 03 00 3c 00 00   .............<..",
          "5943: |   3424: 00 16 08 30 62 65 74 77 65 65 6e 02 02 04 01 02   ...0between.....",
          "5944: |   3440: 69 6e 02 06 04 0c 1a 88 80 80 80 80 02 03 00 3a   in.............:",
          "5945: |   3456: 00 00 00 15 04 30 61 6e 64 02 06 01 01 02 02 02   .....0and.......",
          "5946: |   3472: 72 65 02 02 03 04 0a 17 88 80 80 80 80 01 03 00   re..............",
          "5947: |   3488: 34 00 00 00 12 02 30 31 02 06 01 01 04 01 01 32   4.....01.......2",
          "5948: |   3504: 02 02 06 04 08 08 84 80 80 80 80 12 03 00 16 00   ................",
          "5949: |   3520: 00 00 05 04 1b 84 80 80 80 80 11 03 00 3c 00 00   .............<..",
          "5950: |   3536: 00 16 05 34 74 61 62 6c 01 06 01 01 05 02 03 65   ...4tabl.......e",
          "5951: |   3552: 72 6d 01 02 04 0b 1b 84 80 80 80 80 10 03 00 3c   rm.............<",
          "5952: |   3568: 00 00 00 16 05 34 65 61 63 68 01 02 03 01 04 70   .....4each.....p",
          "5953: |   3584: 72 65 73 01 02 05 04 09 1a 84 80 80 80 80 0f 03   res.............",
          "5954: |   3600: 00 3a 00 00 00 15 04 33 74 65 72 01 02 04 02 02   .:.....3ter.....",
          "5955: |   3616: 68 65 01 06 01 01 03 04 08 1b 84 80 80 80 80 0e   he..............",
          "5956: |   3632: 03 00 3c 00 00 00 16 04 33 70 72 65 01 02 05 01   ..<.....3pre....",
          "5957: |   3648: 03 74 61 62 01 06 01 01 05 04 08 1a 84 80 80 80   .tab............",
          "5958: |   3664: 80 0d 03 00 3a 00 00 00 15 04 33 66 6f 72 01 02   ....:.....3for..",
          "5959: |   3680: 02 02 02 74 73 01 06 01 01 04 04 08 1b 84 80 80   ...ts...........",
          "5960: |   3696: 80 80 0c 03 00 3c 00 00 00 16 03 32 74 68 01 06   .....<.....2th..",
          "5961: |   3712: 01 01 03 00 04 33 65 61 63 01 02 03 04 09 18 84   .....3eac.......",
          "5962: |   3728: 80 80 80 80 0b 03 00 36 00 00 00 13 03 32 74 61   .......6.....2ta",
          "5963: |   3744: 01 06 01 01 05 02 01 65 01 02 04 04 09 19 84 80   .......e........",
          "5964: |   3760: 80 80 80 0a 03 00 38 00 00 00 14 03 32 69 6e 01   ......8.....2in.",
          "5965: |   3776: 06 01 01 02 01 02 70 72 01 02 05 04 09 18 84 80   ......pr........",
          "5966: |   3792: 80 80 80 09 03 00 36 00 00 00 13 03 32 66 6f 01   ......6.....2fo.",
          "5967: |   3808: 02 02 02 01 74 01 06 01 01 04 04 07 1b 84 80 80   ....t...........",
          "5968: |   3824: 80 80 08 03 00 3c 00 00 00 16 02 31 74 01 0a 04   .....<.....1t...",
          "5969: |   3840: 01 01 03 04 00 03 32 65 61 01 02 03 04 0a 17 84   ......2ea.......",
          "5970: |   3856: 80 80 80 80 07 03 00 34 00 00 00 12 02 31 69 01   .......4.....1i.",
          "5971: |   3872: 06 01 01 02 01 01 70 01 02 05 04 08 18 84 80 80   ......p.........",
          "5972: |   3888: 80 80 06 03 00 36 00 00 00 13 02 31 65 01 02 03   .....6.....1e...",
          "5973: |   3904: 01 01 66 01 08 02 01 01 04 04 06 1b 84 80 80 80   ..f.............",
          "5974: |   3920: 80 05 03 00 3c 00 00 00 16 05 30 74 65 72 6d 01   ....<.....0term.",
          "5975: |   3936: 02 04 02 02 68 65 01 06 01 01 03 04 09 14 84 80   ....he..........",
          "5976: |   3952: 80 80 80 04 03 00 2e 00 00 00 10 06 30 74 61 62   ............0tab",
          "5977: |   3968: 6c 65 01 06 00 01 05 04 15 84 80 80 80 80 03 03   le..............",
          "5978: |   3984: 00 30 00 00 00 11 02 08 30 70 72 65 73 65 6e 74   .0......0present",
          "5979: |   4000: 01 02 05 05 1b 84 80 80 80 80 02 03 00 3c 00 00   .............<..",
          "5980: |   4016: 00 16 04 30 66 74 73 01 06 01 01 04 01 02 69 6e   ...0fts.......in",
          "5981: |   4032: 01 06 01 01 04 0a 1a 84 80 80 80 80 01 03 00 3a   ...............:",
          "5982: |   4048: 00 00 00 15 05 30 65 61 63 68 01 02 03 01 03 66   .....0each.....f",
          "5983: |   4064: 6f 72 01 02 02 04 09 06 01 03 00 12 03 0b 0f 00   or..............",
          "5984: |   4080: 00 08 8c 80 80 80 80 11 03 00 16 00 00 00 05 04   ................",
          "5985: | page 3 offset 8192",
          "5986: |      0: 0a 00 00 00 32 0e 4f 00 0f fa 10 f1 0f e9 0f e1   ....2.O.........",
          "5987: |     16: 0f d8 0f d1 0f c9 0f c1 0f b9 0f b1 0f a9 0f a0   ................",
          "5988: |     32: 0f 98 0f 90 0f 87 0f 80 0f 78 0f 71 0f 68 0f 5f   .........x.q.h._",
          "5989: |     48: bd 56 0f 4d 0f 41 0f 38 0f 2f 0f 26 0f 1d 0f 13   .V.M.A.8./.&....",
          "5990: |     64: 0f 0a 0f 01 0e f7 0e ee 0e e6 0e dd 0e d6 0e cd   ................",
          "5991: |     80: 0e c3 0e ba 0e b0 0e a8 0e 9f 0e 96 0e 8e 0e 85   ................",
          "5992: |     96: 0e 7c 0e 73 0e 6a 0e 60 0e 58 0e 4f 00 00 00 00   .|.s.j.`.X.O....",
          "5993: |   3648: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 08   ................",
          "5994: |   3664: 04 01 10 2f 03 34 74 20 07 04 01 0e 01 03 34 1e   .../.4t ......4.",
          "5995: |   3680: 09 04 01 12 01 03 33 74 68 1c 08 04 01 10 01 03   ......3th.......",
          "5996: |   3696: 33 6e 1a 08 04 01 10 01 03 32 77 18 08 04 01 10   3n.......2w.....",
          "5997: |   3712: 01 03 32 74 16 08 04 01 10 01 03 32 6e 14 07 04   ..2t.......2n...",
          "5998: |   3728: 01 0e 01 03 32 12 08 04 01 10 01 03 31 74 10 08   ....2.......1t..",
          "5999: |   3744: 04 01 10 01 03 31 6e 0e 07 04 01 0e 02 03 31 0c   .....1n.......1.",
          "6000: |   3760: 09 04 01 12 01 03 30 74 68 0a 08 04 01 10 01 03   ......0th.......",
          "6001: |   3776: 30 74 08 09 04 01 12 01 03 30 6e 75 06 08 04 01   0t.......0nu....",
          "6002: |   3792: 10 01 03 30 6e 04 06 04 01 0c 01 05 52 08 04 01   ...0n.......R...",
          "6003: |   3808: 10 01 02 34 72 22 07 04 01 0e 01 02 34 20 08 04   ...4r.......4 ..",
          "6004: |   3824: 01 10 01 02 33 72 1e 09 04 01 12 01 02 33 61 72   ....3r.......3ar",
          "6005: |   3840: 1c 08 04 01 10 01 02 32 74 1a 08 04 01 10 b3 02   .......2t.......",
          "6006: |   3856: 32 69 18 09 04 01 12 01 02 32 61 72 16 08 04 01   2i.......2ar....",
          "6007: |   3872: 10 01 02 31 74 14 08 04 01 10 01 02 31 6e 12 08   ...1t.......1n..",
          "6008: |   3888: 04 01 10 01 02 31 62 10 08 04 01 10 01 02 31 32   .....1b.......12",
          "6009: |   3904: 0e 0b 04 01 16 01 02 30 74 68 65 72 0c 08 04 01   .......0ther....",
          "6010: |   3920: 10 01 02 30 74 0a 08 04 01 10 01 02 30 6e 08 08   ...0t.......0n..",
          "6011: |   3936: 04 01 10 01 02 30 62 06 08 04 01 10 01 02 30 61   .....0b.......0a",
          "6012: |   3952: 04 06 04 01 0c 01 02 02 07 04 09 10 01 34 74 22   .............4t.",
          "6013: |   3968: 06 04 09 0e 01 34 20 08 04 09 12 01 33 74 65 1e   .....4 .....3te.",
          "6014: |   3984: 07 04 09 10 01 33 70 1c 07 04 09 10 01 33 66 1a   .....3p......3f.",
          "6015: |   4000: 08 04 09 12 01 32 74 68 18 07 04 09 10 01 32 74   .....2th......2t",
          "6016: |   4016: 16 07 04 09 10 01 32 69 14 07 04 09 10 01 32 66   ......2i......2f",
          "6017: |   4032: 12 07 04 09 10 01 31 74 10 07 04 09 10 01 31 69   ......1t......1i",
          "6018: |   4048: 0e 06 04 09 0e 01 31 0c 08 04 09 12 01 30 74 65   ......1......0te",
          "6019: |   4064: 0a 07 04 09 10 01 30 74 08 07 04 09 10 01 30 70   ......0t......0p",
          "6020: |   4080: 06 08 04 09 12 01 30 66 74 04 05 04 09 0c 01 02   ......0ft.......",
          "6021: | page 4 offset 12288",
          "6022: |      0: 0d 00 00 00 03 0f eb 00 0f f9 0f f2 0f eb 00 00   ................",
          "6023: |   4064: 00 00 00 00 00 00 00 00 00 00 00 05 03 03 00 10   ................",
          "6024: |   4080: 03 05 05 02 03 00 10 04 06 05 01 03 00 10 04 04   ................",
          "6025: | page 5 offset 16384",
          "6026: |      0: 0a 00 00 00 02 0f eb 00 0f eb 0f f4 00 00 00 00   ................",
          "6027: |   4064: 00 00 00 00 00 00 00 00 00 00 00 08 03 15 01 70   ...............p",
          "6028: |   4080: 67 73 7a 18 0b 03 1b 01 76 65 72 73 69 6f 6e 04   gsz.....version.",
          "6029: | page 6 offset 20480",
          "6030: |      0: 0d 00 00 00 03 0f f2 00 0f fc 0f f7 0f f2 00 00   ................",
          "6031: |   4080: 00 00 03 03 02 01 03 03 02 02 01 02 02 01 02 09   ................",
          "6032: }]} {}",
          "6034: do_catchsql_test 45.2 {",
          "6035:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6036:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6037:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6038:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6039:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6040:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6041:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6042:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6043:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6044:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6045:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6046:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6047:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6048:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6049:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6050:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6051: } {0 {}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 119d1609fa415894fdd0aa19440ca1c658bd01910838a4cfadbe0e304b033bfd",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}