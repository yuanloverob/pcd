{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b1163cc8b87547d4506de0b037fa1bd69781e818",
      "candidate_info": {
        "commit_hash": "b1163cc8b87547d4506de0b037fa1bd69781e818",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b1163cc8b87547d4506de0b037fa1bd69781e818",
        "files": [
          "apps/s_client.c"
        ],
        "message": "Fix a -Wsign-compare warning\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2940)\n(cherry picked from commit 96a5d7fdbaa7aea5e5090e0f7dc2973943986fc9)",
        "before_after_code_files": [
          "apps/s_client.c||apps/s_client.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/s_client.c||apps/s_client.c": [
          "File: apps/s_client.c -> apps/s_client.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "175:                    psk_key);",
          "176:         return 0;",
          "177:     }",
          "179:         BIO_printf(bio_err,",
          "180:                    \"psk buffer of callback is too small (%d) for key (%ld)\\n\",",
          "181:                    max_psk_len, key_len);",
          "",
          "[Removed Lines]",
          "178:     if (key_len > max_psk_len) {",
          "",
          "[Added Lines]",
          "178:     if (max_psk_len > INT_MAX || key_len > (long)max_psk_len) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c04b1434e6741cfc6b6c29db2c34b46f5ccd3d99",
      "candidate_info": {
        "commit_hash": "c04b1434e6741cfc6b6c29db2c34b46f5ccd3d99",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c04b1434e6741cfc6b6c29db2c34b46f5ccd3d99",
        "files": [
          "crypto/aes/asm/aesv8-armx.pl",
          "crypto/armv4cpuid.pl",
          "crypto/modes/asm/ghashv8-armx.pl"
        ],
        "message": "ARMv4 assembly pack: harmonize Thumb-ification of iOS build.\n\nThree modules were left behind in a285992763f3961f69a8d86bf7dfff020a08cef9.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2617)\n\n(cherry picked from commit c93f06c12f10c07cea935abd78a07a037e27f155)",
        "before_after_code_files": [
          "crypto/aes/asm/aesv8-armx.pl||crypto/aes/asm/aesv8-armx.pl",
          "crypto/armv4cpuid.pl||crypto/armv4cpuid.pl",
          "crypto/modes/asm/ghashv8-armx.pl||crypto/modes/asm/ghashv8-armx.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/aes/asm/aesv8-armx.pl||crypto/aes/asm/aesv8-armx.pl": [
          "File: crypto/aes/asm/aesv8-armx.pl -> crypto/aes/asm/aesv8-armx.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: .text",
          "60: ___",
          "61: $code.=\".arch armv8-a+crypto\\n\"   if ($flavour =~ /64/);",
          "66: # Assembler mnemonics are an eclectic mix of 32- and 64-bit syntax,",
          "67: # NEON is mostly 32-bit mnemonics, integer - mostly 64. Goal is to",
          "",
          "[Removed Lines]",
          "62: $code.=\".arch armv7-a\\n.fpu neon\\n.code 32\\n\" if ($flavour !~ /64/);",
          "63:   #^^^^^^ this is done to simplify adoption by not depending",
          "64:   # on latest binutils.",
          "",
          "[Added Lines]",
          "62: $code.=<<___      if ($flavour !~ /64/);",
          "63: .arch armv7-a // don't confuse not-so-latest binutils with argv8 :-)",
          "64: .fpu neon",
          "65: .code 32",
          "66: #undef __thumb2__",
          "67: ___",
          "",
          "---------------"
        ],
        "crypto/armv4cpuid.pl||crypto/armv4cpuid.pl": [
          "File: crypto/armv4cpuid.pl -> crypto/armv4cpuid.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: .thumb",
          "28: #else",
          "29: .code 32",
          "30: #endif",
          "32: .align 5",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: #undef __thumb2__",
          "",
          "---------------"
        ],
        "crypto/modes/asm/ghashv8-armx.pl||crypto/modes/asm/ghashv8-armx.pl": [
          "File: crypto/modes/asm/ghashv8-armx.pl -> crypto/modes/asm/ghashv8-armx.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "67: .text",
          "68: ___",
          "69: $code.=\".arch armv8-a+crypto\\n\" if ($flavour =~ /64/);",
          "72: ################################################################################",
          "73: # void gcm_init_v8(u128 Htable[16],const u64 H[2]);",
          "",
          "[Removed Lines]",
          "70: $code.=\".fpu neon\\n.code 32\\n\" if ($flavour !~ /64/);",
          "",
          "[Added Lines]",
          "70: $code.=<<___    if ($flavour !~ /64/);",
          "71: .fpu neon",
          "72: .code 32",
          "73: #undef __thumb2__",
          "74: ___",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a40b5be27e28eaf5a8be7193c8b6460bc6f851b4",
      "candidate_info": {
        "commit_hash": "a40b5be27e28eaf5a8be7193c8b6460bc6f851b4",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/a40b5be27e28eaf5a8be7193c8b6460bc6f851b4",
        "files": [
          "Configurations/unix-checker.pm",
          "Configurations/windows-checker.pm",
          "Configure"
        ],
        "message": "Add a platform specific configuration checker\n\nFor each platform, we may need to perform some basic checks to see\nthat available tools perform as we expect them.\n\nFor the moment, the added checkers test that Perl gives the expected\npath format.  This should help MingW users to see if they run an\nappropriate Perl implementation, for example.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2851)\n(cherry picked from commit d192a3aaeb76fc89f8285b4dc938c2bc0c37d0d4)",
        "before_after_code_files": [
          "Configurations/unix-checker.pm||Configurations/unix-checker.pm",
          "Configurations/windows-checker.pm||Configurations/windows-checker.pm"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/unix-checker.pm||Configurations/unix-checker.pm": [
          "File: Configurations/unix-checker.pm -> Configurations/unix-checker.pm",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #! /usr/bin/perl",
          "3: use Config;",
          "5: # Check that the perl implementation file modules generate paths that",
          "6: # we expect for the platform",
          "7: use File::Spec::Functions qw(:DEFAULT rel2abs);",
          "9: if (rel2abs('.') !~ m|/|) {",
          "10:     die <<EOF;",
          "13: This perl implementation doesn't produce Unix like paths (with forward slash",
          "14: directory separators).  Please use an implementation that matches your",
          "15: building platform.",
          "17: This Perl version: $Config{version} for $Config{archname}",
          "19: EOF",
          "20: }",
          "22: 1;",
          "",
          "---------------"
        ],
        "Configurations/windows-checker.pm||Configurations/windows-checker.pm": [
          "File: Configurations/windows-checker.pm -> Configurations/windows-checker.pm",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #! /usr/bin/perl",
          "3: use Config;",
          "5: # Check that the perl implementation file modules generate paths that",
          "6: # we expect for the platform",
          "7: use File::Spec::Functions qw(:DEFAULT rel2abs);",
          "9: if (rel2abs('.') !~ m|\\\\|) {",
          "10:     die <<EOF;",
          "13: This perl implementation doesn't produce Windows like paths (with backward",
          "14: slash directory separators).  Please use an implementation that matches your",
          "15: building platform.",
          "17: This Perl version: $Config{version} for $Config{archname}",
          "19: EOF",
          "20: }",
          "22: 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5a0d86c0e33eb7893517bc11c6bde188e81d5290",
      "candidate_info": {
        "commit_hash": "5a0d86c0e33eb7893517bc11c6bde188e81d5290",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/5a0d86c0e33eb7893517bc11c6bde188e81d5290",
        "files": [
          "test/asynctest.c"
        ],
        "message": "Add test to show wrong behavior of ASYNC_WAIT_CTX\n\nThis happens when a fd is added and then immediately removed from the\nASYNC_WAIT_CTX before pausing the job.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2581)\n(cherry picked from commit f44e63644d29e5908be52b7896d5031a5cf460eb)",
        "before_after_code_files": [
          "test/asynctest.c||test/asynctest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/asynctest.c||test/asynctest.c": [
          "File: test/asynctest.c -> test/asynctest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "49: {",
          "50:     ASYNC_JOB *job;",
          "51:     ASYNC_WAIT_CTX *waitctx;",
          "53:     job = ASYNC_get_current_job();",
          "54:     if (job == NULL)",
          "55:         return 0;",
          "56:     waitctx = ASYNC_get_wait_ctx(job);",
          "57:     if (waitctx == NULL)",
          "58:         return 0;",
          "59:     if (!ASYNC_WAIT_CTX_set_wait_fd(waitctx, waitctx, MAGIC_WAIT_FD, NULL, NULL))",
          "60:         return 0;",
          "61:     ASYNC_pause_job();",
          "63:     if (!ASYNC_WAIT_CTX_clear_fd(waitctx, waitctx))",
          "64:         return 0;",
          "",
          "[Removed Lines]",
          "52:     ASYNC_pause_job();",
          "",
          "[Added Lines]",
          "60:     ASYNC_pause_job();",
          "68:     if (!ASYNC_WAIT_CTX_clear_fd(waitctx, waitctx))",
          "69:         return 0;",
          "70:     ASYNC_pause_job();",
          "73:     if (!ASYNC_WAIT_CTX_set_wait_fd(waitctx, waitctx, MAGIC_WAIT_FD, NULL, NULL))",
          "74:         return 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "195:             || fd != MAGIC_WAIT_FD",
          "197:             || !ASYNC_WAIT_CTX_get_changed_fds(waitctx, NULL, &numfds, NULL,",
          "199:             || numfds != 1",
          "200:             || numdelfds != 0",
          "201:             || !ASYNC_WAIT_CTX_get_changed_fds(waitctx, &fd, &numfds, NULL,",
          "202:                                                &numdelfds)",
          "203:             || fd != MAGIC_WAIT_FD",
          "205:             || ASYNC_start_job(&job, waitctx, &funcret, waitfd, NULL, 0)",
          "207:             || !ASYNC_WAIT_CTX_get_all_fds(waitctx, NULL, &numfds)",
          "208:             || numfds != 0",
          "209:             || !ASYNC_WAIT_CTX_get_changed_fds(waitctx, NULL, &numfds, NULL,",
          "",
          "[Removed Lines]",
          "198:                                               &numdelfds)",
          "206:                 != ASYNC_FINISH",
          "",
          "[Added Lines]",
          "210:                                                &numdelfds)",
          "218:                 != ASYNC_PAUSE",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "213:             || !ASYNC_WAIT_CTX_get_changed_fds(waitctx, NULL, &numfds, &delfd,",
          "214:                                                &numdelfds)",
          "215:             || delfd != MAGIC_WAIT_FD",
          "216:             || funcret != 1) {",
          "217:         fprintf(stderr, \"test_ASYNC_get_wait_fd() failed\\n\");",
          "218:         ASYNC_WAIT_CTX_free(waitctx);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "229:             || ASYNC_start_job(&job, waitctx, &funcret, waitfd, NULL, 0)",
          "230:                 != ASYNC_FINISH",
          "231:             || !ASYNC_WAIT_CTX_get_all_fds(waitctx, NULL, &numfds)",
          "232:             || numfds != 0",
          "233:             || !ASYNC_WAIT_CTX_get_changed_fds(waitctx, NULL, &numfds, NULL,",
          "234:                                                &numdelfds)",
          "235:             || numfds != 0",
          "236:             || numdelfds != 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8e4fa6f7f0a1f648911088c2f1e432ca8c2b78e5",
      "candidate_info": {
        "commit_hash": "8e4fa6f7f0a1f648911088c2f1e432ca8c2b78e5",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/8e4fa6f7f0a1f648911088c2f1e432ca8c2b78e5",
        "files": [
          "crypto/asn1/x_int64.c"
        ],
        "message": "Fix x_int64.c\n\nClearing a misunderstanding.  The routines c2i_uint64_int() and\ni2c_uint64_int() expect to receive that internal values are absolute\nand with a separate sign flag, and the x_int64.c code handles values\nthat aren't absolute and have the sign bit embedded.  We therefore\nneed to convert between absolute and non-absolute values for the\nencoding of negative values to be correct.\n\n[extended tests]\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3160)\n(cherry picked from commit 429223d198aabacd129cf6dde5a4203b5af41737)",
        "before_after_code_files": [
          "crypto/asn1/x_int64.c||crypto/asn1/x_int64.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/x_int64.c||crypto/asn1/x_int64.c": [
          "File: crypto/asn1/x_int64.c -> crypto/asn1/x_int64.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:         && utmp == 0)",
          "53:         return -1;",
          "54:     if ((it->size & INTxx_FLAG_SIGNED) == INTxx_FLAG_SIGNED",
          "56:         neg = 1;",
          "58:     return i2c_uint64_int(cont, utmp, neg);",
          "59: }",
          "",
          "[Removed Lines]",
          "55:         && (int64_t)utmp < 0)",
          "",
          "[Added Lines]",
          "55:         && (int64_t)utmp < 0) {",
          "57:         utmp = 0 - utmp;",
          "59:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:         ASN1err(ASN1_F_UINT64_C2I, ASN1_R_TOO_LARGE);",
          "77:         return 0;",
          "78:     }",
          "79:     memcpy(cp, &utmp, sizeof(utmp));",
          "80:     return 1;",
          "81: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:     if (neg)",
          "84:         utmp = 0 - utmp;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "116:         && utmp == 0)",
          "117:         return -1;",
          "118:     if ((it->size & INTxx_FLAG_SIGNED) == INTxx_FLAG_SIGNED",
          "120:         neg = 1;",
          "122:     return i2c_uint64_int(cont, (uint64_t)utmp, neg);",
          "123: }",
          "125: static int uint32_c2i(ASN1_VALUE **pval, const unsigned char *cont, int len,",
          "126:                     int utype, char *free_cont, const ASN1_ITEM *it)",
          "127: {",
          "",
          "[Removed Lines]",
          "119:         && (int32_t)utmp < 0)",
          "",
          "[Added Lines]",
          "125:         && (int32_t)utmp < 0) {",
          "127:         utmp = 0 - utmp;",
          "129:     }",
          "139: #define ABS_INT32_MIN ((uint32_t)INT32_MAX + 1)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "136:         ASN1err(ASN1_F_UINT32_C2I, ASN1_R_ILLEGAL_NEGATIVE_VALUE);",
          "137:         return 0;",
          "138:     }",
          "145:     }",
          "146:     memcpy(cp, &utmp2, sizeof(utmp2));",
          "147:     return 1;",
          "148: }",
          "",
          "[Removed Lines]",
          "139:     utmp2 = (uint32_t)utmp;",
          "140:     if (utmp != utmp2",
          "141:         || ((it->size & INTxx_FLAG_SIGNED) == INTxx_FLAG_SIGNED",
          "142:             && !neg && utmp2 > INT32_MAX)) {",
          "143:         ASN1err(ASN1_F_UINT32_C2I, ASN1_R_TOO_LARGE);",
          "144:         return 0;",
          "",
          "[Added Lines]",
          "155:     if (neg) {",
          "156:         if (utmp > ABS_INT32_MIN) {",
          "157:             ASN1err(ASN1_F_UINT32_C2I, ASN1_R_TOO_SMALL);",
          "158:             return 0;",
          "159:         }",
          "160:         utmp = 0 - utmp;",
          "161:     } else {",
          "162:         if (((it->size & INTxx_FLAG_SIGNED) != 0 && utmp > INT32_MAX)",
          "163:             || ((it->size & INTxx_FLAG_SIGNED) == 0 && utmp > UINT32_MAX)) {",
          "164:             ASN1err(ASN1_F_UINT32_C2I, ASN1_R_TOO_LARGE);",
          "165:             return 0;",
          "166:         }",
          "168:     utmp2 = (uint32_t)utmp;",
          "",
          "---------------"
        ]
      }
    }
  ]
}