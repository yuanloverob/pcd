{
  "cve_id": "CVE-2019-8906",
  "cve_desc": "do_core_note in readelf.c in libmagic.a in file 5.35 has an out-of-bounds read because memcpy is misused.",
  "repo": "file/file",
  "patch_hash": "2858eaf99f6cc5aae129bcbf1e24ad160240185f",
  "patch_info": {
    "commit_hash": "2858eaf99f6cc5aae129bcbf1e24ad160240185f",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/2858eaf99f6cc5aae129bcbf1e24ad160240185f",
    "files": [
      "src/readelf.c"
    ],
    "message": "Avoid OOB read (found by ASAN reported by F. Alonso)",
    "before_after_code_files": [
      "src/readelf.c||src/readelf.c"
    ]
  },
  "patch_diff": {
    "src/readelf.c||src/readelf.c": [
      "File: src/readelf.c -> src/readelf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: #include \"file.h\"",
      "29: #ifndef lint",
      "31: #endif",
      "33: #ifdef BUILTIN_ELF",
      "",
      "[Removed Lines]",
      "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.156 2018/10/19 00:33:04 christos Exp $\")",
      "",
      "[Added Lines]",
      "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.157 2019/01/02 19:44:14 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "752:    char sbuf[512];",
      "753:    struct NetBSD_elfcore_procinfo pi;",
      "754:    memset(&pi, 0, sizeof(pi));",
      "757:    if (file_printf(ms, \", from '%.31s', pid=%u, uid=%u, \"",
      "758:        \"gid=%u, nlwps=%u, lwp=%u (signal %u/code %u)\",",
      "",
      "[Removed Lines]",
      "755:    memcpy(&pi, nbuf + doff, descsz);",
      "",
      "[Added Lines]",
      "755:    memcpy(&pi, nbuf + doff, MIN(descsz, sizeof(pi)));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1fffd3ee3165d068a49cdf7f1b0571382ba12088",
      "candidate_info": {
        "commit_hash": "1fffd3ee3165d068a49cdf7f1b0571382ba12088",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/1fffd3ee3165d068a49cdf7f1b0571382ba12088",
        "files": [
          "src/cdf_time.c",
          "src/compress.c",
          "src/file.c",
          "src/print.c",
          "src/readcdf.c",
          "src/readelf.c"
        ],
        "message": "cleanup __arraycount",
        "before_after_code_files": [
          "src/cdf_time.c||src/cdf_time.c",
          "src/compress.c||src/compress.c",
          "src/file.c||src/file.c",
          "src/print.c||src/print.c",
          "src/readcdf.c||src/readcdf.c",
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/cdf_time.c||src/cdf_time.c": [
          "File: src/cdf_time.c -> src/cdf_time.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #include <time.h>",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: cdf_time.c,v 1.18 2019/02/20 02:35:27 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: cdf_time.c,v 1.19 2019/03/12 20:43:05 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68: {",
          "69:  size_t m;",
          "72:   int sub = mdays[m] + (m == 1 && isleap(year));",
          "73:   if (days < sub)",
          "74:    return days;",
          "",
          "[Removed Lines]",
          "71:  for (m = 0; m < sizeof(mdays) / sizeof(mdays[0]); m++) {",
          "",
          "[Added Lines]",
          "71:  for (m = 0; m < __arraycount(mdays); m++) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "85: {",
          "86:  size_t m;",
          "89:   days -= mdays[m];",
          "90:   if (m == 1 && isleap(year))",
          "91:    days--;",
          "",
          "[Removed Lines]",
          "88:  for (m = 0; m < sizeof(mdays) / sizeof(mdays[0]); m++) {",
          "",
          "[Added Lines]",
          "88:  for (m = 0; m < __arraycount(mdays); m++) {",
          "",
          "---------------"
        ],
        "src/compress.c||src/compress.c": [
          "File: src/compress.c -> src/compress.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include \"file.h\"",
          "37: #ifndef lint",
          "39: #endif",
          "41: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "38: FILE_RCSID(\"@(#)$File: compress.c,v 1.115 2019/02/20 02:35:27 christos Exp $\")",
          "",
          "[Added Lines]",
          "38: FILE_RCSID(\"@(#)$File: compress.c,v 1.116 2019/03/12 20:43:05 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "180: private ssize_t swrite(int, const void *, size_t);",
          "181: #if HAVE_FORK",
          "183: private int uncompressbuf(int, size_t, size_t, const unsigned char *,",
          "184:     unsigned char **, size_t *);",
          "185: #ifdef BUILTIN_DECOMPRESS",
          "",
          "[Removed Lines]",
          "182: private size_t ncompr = sizeof(compr) / sizeof(compr[0]);",
          "",
          "[Added Lines]",
          "182: private size_t ncompr = __arraycount(compr);",
          "",
          "---------------"
        ],
        "src/file.c||src/file.c": [
          "File: src/file.c -> src/file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.179 2019/02/20 02:35:27 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.180 2019/03/12 20:43:05 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "244:    flags |= MAGIC_ERROR;",
          "245:    break;",
          "246:   case 'e':",
          "248:     if (strcmp(nv[i].name, optarg) == 0)",
          "249:      break;",
          "252:     errflg++;",
          "253:    else",
          "254:     flags |= nv[i].value;",
          "",
          "[Removed Lines]",
          "247:    for (i = 0; i < sizeof(nv) / sizeof(nv[0]); i++)",
          "251:    if (i == sizeof(nv) / sizeof(nv[0]))",
          "",
          "[Added Lines]",
          "247:    for (i = 0; i < __arraycount(nv); i++)",
          "251:    if (i == __arraycount(nv))",
          "",
          "---------------"
        ],
        "src/print.c||src/print.c": [
          "File: src/print.c -> src/print.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include <string.h>",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: print.c,v 1.84 2019/02/20 02:35:27 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: print.c,v 1.85 2019/03/12 20:43:05 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43: #endif",
          "44: #include <time.h>",
          "48: #include \"cdf.h\"",
          "50: #ifndef COMPILE_ONLY",
          "",
          "[Removed Lines]",
          "46: #define SZOF(a) (sizeof(a) / sizeof(a[0]))",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "66:    (void) fputc('~', stderr);",
          "67:   (void) fprintf(stderr, \"%c%u),\",",
          "68:       (CAST(size_t, m->in_op & FILE_OPS_MASK) <",
          "71:  }",
          "72:  (void) fprintf(stderr, \" %s%s\", (m->flag & UNSIGNED) ? \"u\" : \"\",",
          "",
          "[Removed Lines]",
          "69:       SZOF(optyp)) ? optyp[m->in_op & FILE_OPS_MASK] : '?',",
          "70:       m->in_offset);",
          "",
          "[Added Lines]",
          "67:       __arraycount(optyp)) ?",
          "68:       optyp[m->in_op & FILE_OPS_MASK] : '?', m->in_offset);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "112:    (void) fprintf(stderr, \"/%u\", m->str_range);",
          "113:  }",
          "114:  else {",
          "116:    (void) fputc(optyp[m->mask_op & FILE_OPS_MASK], stderr);",
          "117:   else",
          "118:    (void) fputc('?', stderr);",
          "",
          "[Removed Lines]",
          "115:   if (CAST(size_t, m->mask_op & FILE_OPS_MASK) < SZOF(optyp))",
          "",
          "[Added Lines]",
          "113:   if (CAST(size_t, m->mask_op & FILE_OPS_MASK) <",
          "114:       __arraycount(optyp))",
          "",
          "---------------"
        ],
        "src/readcdf.c||src/readcdf.c": [
          "File: src/readcdf.c -> src/readcdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #include \"file.h\"",
          "28: #ifndef lint",
          "30: #endif",
          "32: #include <assert.h>",
          "",
          "[Removed Lines]",
          "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.72 2019/02/20 02:35:27 christos Exp $\")",
          "",
          "[Added Lines]",
          "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.73 2019/03/12 20:43:05 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39: #include \"cdf.h\"",
          "40: #include \"magic.h\"",
          "46: #define NOTMIME(ms) (((ms)->flags & MAGIC_MIME) == 0)",
          "48: static const struct nv {",
          "",
          "[Removed Lines]",
          "42: #ifndef __arraycount",
          "43: #define __arraycount(a) (sizeof(a) / sizeof(a[0]))",
          "44: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.162 2019/02/20 02:35:27 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.163 2019/03/12 20:43:05 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "286: };",
          "291: #define NOFFSETS (clazz == ELFCLASS32 ? NOFFSETS32 : NOFFSETS64)",
          "",
          "[Removed Lines]",
          "288: #define NOFFSETS32 (sizeof(prpsoffsets32) / sizeof(prpsoffsets32[0]))",
          "289: #define NOFFSETS64 (sizeof(prpsoffsets64) / sizeof(prpsoffsets64[0]))",
          "",
          "[Added Lines]",
          "288: #define NOFFSETS32 __arraycount(prpsoffsets32)",
          "289: #define NOFFSETS64 __arraycount(prpsoffsets64)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6367a7c9b476767a692f76e78e3b355dc9386e48",
      "candidate_info": {
        "commit_hash": "6367a7c9b476767a692f76e78e3b355dc9386e48",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/6367a7c9b476767a692f76e78e3b355dc9386e48",
        "files": [
          "src/readelf.c"
        ],
        "message": "Add Linux PowerPC core offsets for Linux (which are off-by-4 of the regular offsets), after the regular Linux offsets so that there is no confusion. The linux offsets are tried first since they are before, so on PPC they should contain binary data and not match. Addition requested by: Ondrej Dubaj/Kamil Dudka",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.157 2019/01/02 19:44:14 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.158 2019/01/22 16:28:42 christos Exp $\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d955cefc956ba537cfc0556023a65fe80bd2d82b",
      "candidate_info": {
        "commit_hash": "d955cefc956ba537cfc0556023a65fe80bd2d82b",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/d955cefc956ba537cfc0556023a65fe80bd2d82b",
        "files": [
          "src/readelf.c"
        ],
        "message": "%td is for ptrdiff_t not for off_t.",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.168 2019/12/16 03:49:19 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.169 2019/12/17 15:27:27 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1349:  name_off = xsh_offset;",
          "1351:  if (fsize != SIZE_UNKNOWN && fsize < name_off) {",
          "1354:    return -1;",
          "1355:   return 0;",
          "1356:  }",
          "",
          "[Removed Lines]",
          "1352:   if (file_printf(ms, \", too large section header offset %td\",",
          "1353:       name_off) == -1)",
          "",
          "[Added Lines]",
          "1352:   if (file_printf(ms, \", too large section header offset %jd\",",
          "1353:       (intmax_t)name_off) == -1)",
          "",
          "---------------"
        ]
      }
    }
  ]
}