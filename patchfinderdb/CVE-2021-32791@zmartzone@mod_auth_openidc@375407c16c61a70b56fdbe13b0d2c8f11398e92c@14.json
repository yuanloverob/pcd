{
  "cve_id": "CVE-2021-32791",
  "cve_desc": "mod_auth_openidc is an authentication/authorization module for the Apache 2.x HTTP server that functions as an OpenID Connect Relying Party, authenticating users against an OpenID Connect Provider. In mod_auth_openidc before version 2.4.9, the AES GCM encryption in mod_auth_openidc uses a static IV and AAD. It is important to fix because this creates a static nonce and since aes-gcm is a stream cipher, this can lead to known cryptographic issues, since the same key is being reused. From 2.4.9 onwards this has been patched to use dynamic values through usage of cjose AES encryption routines.",
  "repo": "zmartzone/mod_auth_openidc",
  "patch_hash": "375407c16c61a70b56fdbe13b0d2c8f11398e92c",
  "patch_info": {
    "commit_hash": "375407c16c61a70b56fdbe13b0d2c8f11398e92c",
    "repo": "zmartzone/mod_auth_openidc",
    "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/375407c16c61a70b56fdbe13b0d2c8f11398e92c",
    "files": [
      ".gitignore",
      "ChangeLog",
      "Dockerfile",
      "configure.ac",
      "openidc.conf",
      "src/cache/common.c",
      "test/mod_auth_openidc.jmx"
    ],
    "message": "use encrypted JWTs for storing encrypted cache contents\n\n- avoid using static AAD/IV; thanks @niebardzo\n- bump to 2.4.9-dev\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
    "before_after_code_files": [
      "configure.ac||configure.ac",
      "openidc.conf||openidc.conf",
      "src/cache/common.c||src/cache/common.c",
      "test/mod_auth_openidc.jmx||test/mod_auth_openidc.jmx"
    ]
  },
  "patch_diff": {
    "configure.ac||configure.ac": [
      "File: configure.ac -> configure.ac",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
      "",
      "[Removed Lines]",
      "1: AC_INIT([mod_auth_openidc],[2.4.8.4],[hans.zandbelt@zmartzone.eu])",
      "",
      "[Added Lines]",
      "1: AC_INIT([mod_auth_openidc],[2.4.9-dev],[hans.zandbelt@zmartzone.eu])",
      "",
      "---------------"
    ],
    "openidc.conf||openidc.conf": [
      "File: openidc.conf -> openidc.conf",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: OIDCInfoHook iat access_token access_token_expires id_token userinfo refresh_token session",
      "27: <Location /protected>",
      "28:   AuthType openid-connect",
      "29:   Require valid-user",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "27: OIDCScope \"openid email profile\"",
      "",
      "---------------"
    ],
    "src/cache/common.c||src/cache/common.c": [
      "File: src/cache/common.c -> src/cache/common.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "244:  return rv;",
      "245: }",
      "477: }",
      "553: }",
      "560:  char *input = apr_psprintf(r->pool, \"%s:%s\", passphrase, key);",
      "561:  char *output = NULL;",
      "566:   return NULL;",
      "567:  }",
      "568:  return output;",
      "",
      "[Removed Lines]",
      "247: #define oidc_cache_crypto_openssl_error(r, fmt, ...) \\",
      "248:   oidc_error(r, \"%s: %s\", apr_psprintf(r->pool, fmt, ##__VA_ARGS__), ERR_error_string(ERR_get_error(), NULL))",
      "250: #define OIDC_CACHE_CIPHER       EVP_aes_256_gcm()",
      "251: #define OIDC_CACHE_TAG_LEN       16",
      "253: #if (OPENSSL_VERSION_NUMBER >= 0x10100005L && !defined(LIBRESSL_VERSION_NUMBER))",
      "254: #define OIDC_CACHE_CRYPTO_GET_TAG     EVP_CTRL_AEAD_GET_TAG",
      "255: #define OIDC_CACHE_CRYPTO_SET_TAG     EVP_CTRL_AEAD_SET_TAG",
      "256: #define OIDC_CACHE_CRYPTO_SET_IVLEN     EVP_CTRL_AEAD_SET_IVLEN",
      "257: #else",
      "258: #define OIDC_CACHE_CRYPTO_GET_TAG     EVP_CTRL_GCM_GET_TAG",
      "259: #define OIDC_CACHE_CRYPTO_SET_TAG     EVP_CTRL_GCM_SET_TAG",
      "260: #define OIDC_CACHE_CRYPTO_SET_IVLEN     EVP_CTRL_GCM_SET_IVLEN",
      "261: #endif",
      "266: static int oidc_cache_crypto_encrypt_impl(request_rec *r,",
      "267:   unsigned char *plaintext, int plaintext_len, const unsigned char *aad,",
      "268:   int aad_len, unsigned char *key, const unsigned char *iv, int iv_len,",
      "269:   unsigned char *ciphertext, const unsigned char *tag, int tag_len) {",
      "270:  EVP_CIPHER_CTX *ctx;",
      "272:  int len;",
      "274:  int ciphertext_len;",
      "277:  if (!(ctx = EVP_CIPHER_CTX_new())) {",
      "278:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_new\");",
      "279:   return -1;",
      "280:  }",
      "283:  if (!EVP_EncryptInit_ex(ctx, OIDC_CACHE_CIPHER, NULL, NULL, NULL)) {",
      "284:   oidc_cache_crypto_openssl_error(r, \"EVP_EncryptInit_ex\");",
      "285:   return -1;",
      "286:  }",
      "289:  if (!EVP_CIPHER_CTX_ctrl(ctx, OIDC_CACHE_CRYPTO_SET_IVLEN, iv_len, NULL)) {",
      "290:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_ctrl\");",
      "291:   return -1;",
      "292:  }",
      "295:  if (!EVP_EncryptInit_ex(ctx, NULL, NULL, key, iv)) {",
      "296:   oidc_cache_crypto_openssl_error(r, \"EVP_EncryptInit_ex\");",
      "297:   return -1;",
      "298:  }",
      "301:  if (!EVP_EncryptUpdate(ctx, NULL, &len, aad, aad_len)) {",
      "302:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptUpdate aad: aad_len=%d\",",
      "303:     aad_len);",
      "304:   return -1;",
      "305:  }",
      "308:  if (!EVP_EncryptUpdate(ctx, ciphertext, &len, plaintext, plaintext_len)) {",
      "309:   oidc_cache_crypto_openssl_error(r, \"EVP_EncryptUpdate ciphertext\");",
      "310:   return -1;",
      "311:  }",
      "312:  ciphertext_len = len;",
      "318:  if (!EVP_EncryptFinal_ex(ctx, ciphertext + len, &len)) {",
      "319:   oidc_cache_crypto_openssl_error(r, \"EVP_EncryptFinal_ex\");",
      "320:   return -1;",
      "321:  }",
      "322:  ciphertext_len += len;",
      "325:  if (!EVP_CIPHER_CTX_ctrl(ctx, OIDC_CACHE_CRYPTO_GET_TAG, tag_len,",
      "326:    (void *) tag)) {",
      "327:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_ctrl\");",
      "328:   return -1;",
      "329:  }",
      "332:  EVP_CIPHER_CTX_free(ctx);",
      "334:  return ciphertext_len;",
      "335: }",
      "340: static int oidc_cache_crypto_decrypt_impl(request_rec *r,",
      "341:   unsigned char *ciphertext, int ciphertext_len, const unsigned char *aad,",
      "342:   int aad_len, const unsigned char *tag, int tag_len, unsigned char *key,",
      "343:   const unsigned char *iv, int iv_len, unsigned char *plaintext) {",
      "344:  EVP_CIPHER_CTX *ctx;",
      "345:  int len;",
      "346:  int plaintext_len;",
      "347:  int ret;",
      "350:  if (!(ctx = EVP_CIPHER_CTX_new())) {",
      "351:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_new\");",
      "352:   return -1;",
      "353:  }",
      "356:  if (!EVP_DecryptInit_ex(ctx, OIDC_CACHE_CIPHER, NULL, NULL, NULL)) {",
      "357:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptInit_ex\");",
      "358:   return -1;",
      "359:  }",
      "362:  if (!EVP_CIPHER_CTX_ctrl(ctx, OIDC_CACHE_CRYPTO_SET_IVLEN, iv_len, NULL)) {",
      "363:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_ctrl\");",
      "364:   return -1;",
      "365:  }",
      "368:  if (!EVP_DecryptInit_ex(ctx, NULL, NULL, key, iv)) {",
      "369:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptInit_ex\");",
      "370:   return -1;",
      "371:  }",
      "374:  if (!EVP_DecryptUpdate(ctx, NULL, &len, aad, aad_len)) {",
      "375:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptUpdate aad: aad_len=%d\",",
      "376:     aad_len);",
      "377:   return -1;",
      "378:  }",
      "381:  if (!EVP_DecryptUpdate(ctx, plaintext, &len, ciphertext, ciphertext_len)) {",
      "382:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptUpdate ciphertext\");",
      "383:   return -1;",
      "384:  }",
      "385:  plaintext_len = len;",
      "388:  if (!EVP_CIPHER_CTX_ctrl(ctx, OIDC_CACHE_CRYPTO_SET_TAG, tag_len,",
      "389:    (void *) tag)) {",
      "390:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_ctrl\");",
      "391:   return -1;",
      "392:  }",
      "398:  ret = EVP_DecryptFinal_ex(ctx, plaintext + len, &len);",
      "401:  EVP_CIPHER_CTX_free(ctx);",
      "403:  if (ret > 0) {",
      "405:   plaintext_len += len;",
      "406:   return plaintext_len;",
      "407:  } else {",
      "409:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptFinal_ex\");",
      "410:   return -1;",
      "411:  }",
      "412: }",
      "417: static const unsigned char OIDC_CACHE_CRYPTO_GCM_AAD[] = { 0x4d, 0x23, 0xc3,",
      "418:   0xce, 0xc3, 0x34, 0xb4, 0x9b, 0xdb, 0x37, 0x0c, 0x43, 0x7f, 0xec, 0x78,",
      "419:   0xde };",
      "424: static const unsigned char OIDC_CACHE_CRYPTO_GCM_IV[] = { 0x00, 0x01, 0x02,",
      "425:   0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e,",
      "426:   0x0f };",
      "431: static int oidc_cache_crypto_encrypt(request_rec *r, const char *plaintext,",
      "432:   unsigned char *key, char **result) {",
      "433:  char *encoded = NULL, *p = NULL, *e_tag = NULL;",
      "434:  unsigned char *ciphertext = NULL;",
      "435:  int plaintext_len, ciphertext_len, encoded_len, e_tag_len;",
      "436:  unsigned char tag[OIDC_CACHE_TAG_LEN];",
      "439:  plaintext_len = strlen(plaintext) + 1;",
      "440:  ciphertext = apr_pcalloc(r->pool,",
      "441:    (plaintext_len + EVP_CIPHER_block_size(OIDC_CACHE_CIPHER)));",
      "443:  ciphertext_len = oidc_cache_crypto_encrypt_impl(r,",
      "444:    (unsigned char *) plaintext, plaintext_len,",
      "445:    OIDC_CACHE_CRYPTO_GCM_AAD, sizeof(OIDC_CACHE_CRYPTO_GCM_AAD), key,",
      "446:    OIDC_CACHE_CRYPTO_GCM_IV, sizeof(OIDC_CACHE_CRYPTO_GCM_IV),",
      "447:    ciphertext, tag, sizeof(tag));",
      "450:  encoded_len = oidc_base64url_encode(r, &encoded, (const char *) ciphertext,",
      "451:    ciphertext_len, 1);",
      "452:  if (encoded_len > 0) {",
      "453:   p = encoded;",
      "456:   e_tag_len = oidc_base64url_encode(r, &e_tag, (const char *) tag,",
      "457:     OIDC_CACHE_TAG_LEN, 1);",
      "460:   encoded = apr_pcalloc(r->pool, encoded_len + 1 + e_tag_len + 1);",
      "461:   memcpy(encoded, p, encoded_len);",
      "462:   p = encoded + encoded_len;",
      "464:   p++;",
      "467:   memcpy(p, e_tag, e_tag_len);",
      "468:   encoded_len += e_tag_len + 1;",
      "471:   encoded[encoded_len] = '\\0';",
      "474:  }",
      "476:  return encoded_len;",
      "482: static int oidc_cache_crypto_decrypt(request_rec *r, const char *cache_value,",
      "483:   unsigned char *key, unsigned char **plaintext) {",
      "485:  int len = -1;",
      "488:  char *encoded_tag = strstr(cache_value, \".\");",
      "489:  if (encoded_tag == NULL) {",
      "490:   oidc_error(r,",
      "491:     \"corrupted cache value: no tag separator found in encrypted value\");",
      "492:   return FALSE;",
      "493:  }",
      "496:  cache_value = apr_pstrmemdup(r->pool, cache_value,",
      "497:    strlen(cache_value) - strlen(encoded_tag));",
      "498:  encoded_tag++;",
      "501:  char *d_bytes = NULL;",
      "502:  int d_len = oidc_base64url_decode(r->pool, &d_bytes, cache_value);",
      "505:  char *t_bytes = NULL;",
      "506:  int t_len = oidc_base64url_decode(r->pool, &t_bytes, encoded_tag);",
      "509:  if ((d_len > 0) && (t_len > 0)) {",
      "513:     (d_len + EVP_CIPHER_block_size(OIDC_CACHE_CIPHER) - 1));",
      "517:   len = oidc_cache_crypto_decrypt_impl(r, (unsigned char *) d_bytes,",
      "518:     d_len, OIDC_CACHE_CRYPTO_GCM_AAD,",
      "519:     sizeof(OIDC_CACHE_CRYPTO_GCM_AAD), (unsigned char *) t_bytes,",
      "520:     t_len, key, OIDC_CACHE_CRYPTO_GCM_IV,",
      "521:     sizeof(OIDC_CACHE_CRYPTO_GCM_IV), *plaintext);",
      "524:   if (len > -1) {",
      "525:    (*plaintext)[len] = '\\0';",
      "526:   } else {",
      "528:   }",
      "530:  }",
      "532:  return len;",
      "533: }",
      "538: static unsigned char *oidc_cache_hash_passphrase(request_rec *r,",
      "539:   const char *passphrase) {",
      "541:  unsigned char *key = NULL;",
      "542:  unsigned int key_len = 0;",
      "543:  oidc_jose_error_t err;",
      "545:  if (oidc_jose_hash_bytes(r->pool, OIDC_JOSE_ALG_SHA256,",
      "546:    (const unsigned char *) passphrase, strlen(passphrase), &key,",
      "547:    &key_len, &err) == FALSE) {",
      "548:   oidc_error(r, \"oidc_jose_hash_bytes returned an error: %s\", err.text);",
      "549:   return NULL;",
      "550:  }",
      "552:  return key;",
      "558: static char *oidc_cache_get_hashed_key(request_rec *r, const char *passphrase,",
      "559:   const char *key) {",
      "562:  if (oidc_util_hash_string_and_base64url_encode(r, OIDC_JOSE_ALG_SHA256,",
      "563:    input, &output) == FALSE) {",
      "564:   oidc_error(r,",
      "565:     \"oidc_util_hash_string_and_base64url_encode returned an error\");",
      "",
      "[Added Lines]",
      "247: #define OIDC_CACHE_CRYPTO_JSON_KEY \"c\"",
      "252: static apr_byte_t oidc_cache_crypto_encrypt(request_rec *r, const char *plaintext, const char *key,",
      "253:   char **result) {",
      "254:  apr_byte_t rv = FALSE;",
      "255:  json_t *json = NULL;",
      "257:  json = json_object();",
      "258:  json_object_set_new(json, OIDC_CACHE_CRYPTO_JSON_KEY, json_string(plaintext));",
      "260:  rv = oidc_util_jwt_create(r, (const char*) key, json, result);",
      "262:  if (json)",
      "263:   json_decref(json);",
      "265:  return rv;",
      "271: static apr_byte_t oidc_cache_crypto_decrypt(request_rec *r, const char *cache_value,",
      "272:   const char *key, char **plaintext) {",
      "274:  apr_byte_t rv = FALSE;",
      "275:  json_t *json = NULL;",
      "277:  rv = oidc_util_jwt_verify(r, (const char*) key, cache_value, &json);",
      "278:  if (rv == FALSE)",
      "279:   goto end;",
      "281:  rv = oidc_json_object_get_string(r->pool, json, OIDC_CACHE_CRYPTO_JSON_KEY, plaintext, NULL);",
      "283:  end:",
      "285:  if (json)",
      "286:   json_decref(json);",
      "288:  return rv;",
      "294: static char* oidc_cache_get_hashed_key(request_rec *r, const char *passphrase, const char *key) {",
      "297:  if (oidc_util_hash_string_and_base64url_encode(r, OIDC_JOSE_ALG_SHA256, input, &output)",
      "298:    == FALSE) {",
      "299:   oidc_error(r, \"oidc_util_hash_string_and_base64url_encode returned an error\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "604:   goto out;",
      "605:  }",
      "611: out:",
      "",
      "[Removed Lines]",
      "607:  rc = (oidc_cache_crypto_decrypt(r, cache_value,",
      "608:    oidc_cache_hash_passphrase(r, cfg->crypto_passphrase),",
      "609:    (unsigned char **) value) > 0);",
      "",
      "[Added Lines]",
      "341:  rc = oidc_cache_crypto_decrypt(r, cache_value, cfg->crypto_passphrase, value);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "650:    goto out;",
      "652:   if (value != NULL) {",
      "656:     goto out;",
      "657:    value = encoded;",
      "658:   }",
      "",
      "[Removed Lines]",
      "653:    if (oidc_cache_crypto_encrypt(r, value,",
      "654:      oidc_cache_hash_passphrase(r, cfg->crypto_passphrase),",
      "655:      &encoded) <= 0)",
      "",
      "[Added Lines]",
      "385:    if (oidc_cache_crypto_encrypt(r, value, cfg->crypto_passphrase, &encoded) == FALSE)",
      "",
      "---------------"
    ],
    "test/mod_auth_openidc.jmx||test/mod_auth_openidc.jmx": [
      "File: test/mod_auth_openidc.jmx -> test/mod_auth_openidc.jmx",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: <?xml version=\"1.0\" encoding=\"UTF-8\"?>",
      "3:   <hashTree>",
      "4:     <TestPlan guiclass=\"TestPlanGui\" testclass=\"TestPlan\" testname=\"OpenID Connect Apache Module Test Plan\" enabled=\"true\">",
      "5:       <stringProp name=\"TestPlan.comments\"></stringProp>",
      "",
      "[Removed Lines]",
      "2: <jmeterTestPlan version=\"1.2\" properties=\"3.1\" jmeter=\"3.1.20170220\">",
      "",
      "[Added Lines]",
      "2: <jmeterTestPlan version=\"1.2\" properties=\"5.0\" jmeter=\"5.1.1.20190725\">",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "7:       <boolProp name=\"TestPlan.serialize_threadgroups\">false</boolProp>",
      "8:       <elementProp name=\"TestPlan.user_defined_variables\" elementType=\"Arguments\" guiclass=\"ArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">",
      "9:         <collectionProp name=\"Arguments.arguments\">",
      "12:             <stringProp name=\"Argument.value\">localhost.zmartzone.eu</stringProp>",
      "13:             <stringProp name=\"Argument.metadata\">=</stringProp>",
      "14:           </elementProp>",
      "",
      "[Removed Lines]",
      "10:           <elementProp name=\"X_APP_SERVER\" elementType=\"Argument\">",
      "11:             <stringProp name=\"Argument.name\">X_APP_SERVER</stringProp>",
      "",
      "[Added Lines]",
      "10:           <elementProp name=\"APP_SERVER\" elementType=\"Argument\">",
      "11:             <stringProp name=\"Argument.name\">APP_SERVER</stringProp>",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "57:           </elementProp>",
      "58:           <elementProp name=\"APP_PATH_ACCESS\" elementType=\"Argument\">",
      "59:             <stringProp name=\"Argument.name\">APP_PATH_ACCESS</stringProp>",
      "61:             <stringProp name=\"Argument.metadata\">=</stringProp>",
      "62:           </elementProp>",
      "63:         </collectionProp>",
      "",
      "[Removed Lines]",
      "60:             <stringProp name=\"Argument.value\">/protected/api/index.php</stringProp>",
      "",
      "[Added Lines]",
      "60:             <stringProp name=\"Argument.value\">/api/index.php</stringProp>",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "94:           </elementProp>",
      "95:           <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
      "96:           <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
      "99:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "100:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "101:           <stringProp name=\"HTTPSampler.path\">${APP_PATH_USER}</stringProp>",
      "",
      "[Removed Lines]",
      "97:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "98:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "104:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "105:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "106:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "109:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "110:         </HTTPSamplerProxy>",
      "111:         <hashTree>",
      "112:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab AuthorizationRequestPath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "107:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "108:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "106:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "107:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "108:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "125:           </elementProp>",
      "126:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "127:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "130:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "131:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "132:           <stringProp name=\"HTTPSampler.path\">/${AuthorizationRequestPath}</stringProp>",
      "",
      "[Removed Lines]",
      "128:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "129:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "135:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "136:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "137:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "140:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "141:         </HTTPSamplerProxy>",
      "142:         <hashTree>",
      "143:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab AuthzResumePath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "138:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "139:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "136:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "137:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "138:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "164:           </elementProp>",
      "165:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "166:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "169:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "170:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "171:           <stringProp name=\"HTTPSampler.path\">${AuthzResumePath}</stringProp>",
      "",
      "[Removed Lines]",
      "167:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "168:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "174:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "175:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "176:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "179:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "180:         </HTTPSamplerProxy>",
      "181:         <hashTree>",
      "182:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ResumeParam\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "177:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "178:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "174:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "175:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "176:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "226:           </elementProp>",
      "227:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "228:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "231:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "232:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "233:           <stringProp name=\"HTTPSampler.path\">/IdpSample/MainPage?cmd=login</stringProp>",
      "",
      "[Removed Lines]",
      "229:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "230:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "236:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "237:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "238:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "241:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "242:         </HTTPSamplerProxy>",
      "243:         <hashTree>",
      "244:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ResumePath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "239:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "240:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "235:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "236:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "237:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "257:           </elementProp>",
      "258:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "259:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "262:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "263:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "264:           <stringProp name=\"HTTPSampler.path\">${ResumePath}</stringProp>",
      "",
      "[Removed Lines]",
      "260:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "261:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "267:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "268:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "269:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "272:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "273:         </HTTPSamplerProxy>",
      "274:         <hashTree>",
      "275:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab RedirectURIPath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "270:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "271:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "265:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "266:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "267:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "321:           </elementProp>",
      "322:           <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
      "323:           <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
      "326:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "327:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "328:           <stringProp name=\"HTTPSampler.path\">/${RedirectURIPath}</stringProp>",
      "",
      "[Removed Lines]",
      "324:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "325:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "331:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "332:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "333:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "336:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "337:         </HTTPSamplerProxy>",
      "338:         <hashTree>",
      "339:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ApplicationPath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "334:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "335:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "328:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "329:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "330:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "367:           </elementProp>",
      "368:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "369:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "372:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "373:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "374:           <stringProp name=\"HTTPSampler.path\">${AuthzResumePath}</stringProp>",
      "",
      "[Removed Lines]",
      "370:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "371:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "377:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "378:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "379:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "382:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "383:         </HTTPSamplerProxy>",
      "384:         <hashTree>",
      "385:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab cSRFToken Parameter\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "380:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "381:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "373:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "374:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "375:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "441:           </elementProp>",
      "442:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "443:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "446:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "447:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "448:           <stringProp name=\"HTTPSampler.path\">${AuthzResumePath}</stringProp>",
      "",
      "[Removed Lines]",
      "444:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "445:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "451:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "452:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "453:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "456:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "457:         </HTTPSamplerProxy>",
      "458:         <hashTree>",
      "459:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab LocationPath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "454:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "455:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "446:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "447:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "448:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "472:           </elementProp>",
      "473:           <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
      "474:           <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
      "477:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "478:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "479:           <stringProp name=\"HTTPSampler.path\">/${LocationPath}</stringProp>",
      "",
      "[Removed Lines]",
      "475:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "476:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "482:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "483:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "484:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "487:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "488:         </HTTPSamplerProxy>",
      "489:         <hashTree>",
      "490:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ApplicationPath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "485:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "486:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "476:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "477:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "478:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "517:             </elementProp>",
      "518:             <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
      "519:             <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
      "522:             <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "523:             <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "524:             <stringProp name=\"HTTPSampler.path\">/${ApplicationPath}</stringProp>",
      "",
      "[Removed Lines]",
      "520:             <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "521:             <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "527:             <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "528:             <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "529:             <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "532:             <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "533:           </HTTPSamplerProxy>",
      "534:           <hashTree>",
      "535:             <ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Assert User Logged In\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "530:             <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "531:             <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "520:             <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "521:             <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "522:             <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "539:               <stringProp name=\"Assertion.test_field\">Assertion.response_data</stringProp>",
      "540:               <boolProp name=\"Assertion.assume_success\">false</boolProp>",
      "541:               <intProp name=\"Assertion.test_type\">2</intProp>",
      "542:             </ResponseAssertion>",
      "543:             <hashTree/>",
      "544:             <ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Assert Fake Header Removal\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "532:               <stringProp name=\"Assertion.custom_message\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "548:               <stringProp name=\"Assertion.test_field\">Assertion.response_data</stringProp>",
      "549:               <boolProp name=\"Assertion.assume_success\">false</boolProp>",
      "550:               <intProp name=\"Assertion.test_type\">6</intProp>",
      "551:             </ResponseAssertion>",
      "552:             <hashTree/>",
      "553:           </hashTree>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "542:               <stringProp name=\"Assertion.custom_message\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "567:           <stringProp name=\"shareMode\">shareMode.all</stringProp>",
      "568:           <boolProp name=\"stopThread\">false</boolProp>",
      "569:           <stringProp name=\"variableNames\">USERNAME,PASSWORD</stringProp>",
      "570:         </CSVDataSet>",
      "571:         <hashTree/>",
      "582:         <hashTree/>",
      "583:       </hashTree>",
      "584:       <ThreadGroup guiclass=\"ThreadGroupGui\" testclass=\"ThreadGroup\" testname=\"OAuth Resource Access\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "572:         <CSVDataSet guiclass=\"TestBeanGUI\" testclass=\"CSVDataSet\" testname=\"Hosts Data Set\" enabled=\"true\">",
      "573:           <stringProp name=\"filename\">hosts.txt</stringProp>",
      "574:           <stringProp name=\"fileEncoding\"></stringProp>",
      "575:           <stringProp name=\"variableNames\">APP_SERVER</stringProp>",
      "576:           <stringProp name=\"delimiter\">,</stringProp>",
      "577:           <boolProp name=\"quotedData\">false</boolProp>",
      "578:           <boolProp name=\"recycle\">true</boolProp>",
      "579:           <boolProp name=\"stopThread\">false</boolProp>",
      "580:           <stringProp name=\"shareMode\">shareMode.all</stringProp>",
      "581:         </CSVDataSet>",
      "",
      "[Added Lines]",
      "562:           <boolProp name=\"ignoreFirstLine\">false</boolProp>",
      "565:         <HeaderManager guiclass=\"HeaderPanel\" testclass=\"HeaderManager\" testname=\"HTTP Header Manager\" enabled=\"true\">",
      "566:           <collectionProp name=\"HeaderManager.headers\">",
      "567:             <elementProp name=\"\" elementType=\"Header\">",
      "568:               <stringProp name=\"Header.name\">Accept</stringProp>",
      "569:               <stringProp name=\"Header.value\">*/*</stringProp>",
      "570:             </elementProp>",
      "571:           </collectionProp>",
      "572:         </HeaderManager>",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "631:           </elementProp>",
      "632:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "633:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "636:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "637:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "638:           <stringProp name=\"HTTPSampler.path\">${AS_PATH_TOKEN}</stringProp>",
      "",
      "[Removed Lines]",
      "634:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "635:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "641:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "642:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "643:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "645:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "646:         </HTTPSamplerProxy>",
      "647:         <hashTree>",
      "648:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab AccessToken\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "644:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "634:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "635:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "661:               <stringProp name=\"Header.name\">Authorization</stringProp>",
      "662:               <stringProp name=\"Header.value\">bearer ${AccessToken}</stringProp>",
      "663:             </elementProp>",
      "664:           </collectionProp>",
      "665:         </HeaderManager>",
      "666:         <hashTree/>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "654:             <elementProp name=\"\" elementType=\"Header\">",
      "655:               <stringProp name=\"Header.name\">Accept</stringProp>",
      "656:               <stringProp name=\"Header.value\">application/json</stringProp>",
      "657:             </elementProp>",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "675:             </elementProp>",
      "676:             <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
      "677:             <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
      "680:             <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "681:             <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "682:             <stringProp name=\"HTTPSampler.path\">${APP_PATH_ACCESS}</stringProp>",
      "",
      "[Removed Lines]",
      "678:             <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "679:             <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "685:             <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "686:             <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "687:             <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "689:             <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "690:           </HTTPSamplerProxy>",
      "691:           <hashTree>",
      "692:             <ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Assert AS_USERNAME\" enabled=\"true\">",
      "693:               <collectionProp name=\"Asserion.test_strings\">",
      "694:                 <stringProp name=\"240033137\">\\[OIDC_CLAIM_Username\\] =&gt; ${AS_USERNAME}</stringProp>",
      "695:               </collectionProp>",
      "697:               <boolProp name=\"Assertion.assume_success\">false</boolProp>",
      "698:               <intProp name=\"Assertion.test_type\">2</intProp>",
      "699:             </ResponseAssertion>",
      "700:             <hashTree/>",
      "701:           </hashTree>",
      "702:         </hashTree>",
      "714:       </hashTree>",
      "715:       <ResultCollector guiclass=\"ViewResultsFullVisualizer\" testclass=\"ResultCollector\" testname=\"View Results Tree\" enabled=\"true\">",
      "716:         <boolProp name=\"ResultCollector.error_logging\">true</boolProp>",
      "",
      "[Removed Lines]",
      "688:             <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "696:               <stringProp name=\"Assertion.test_field\">Assertion.response_data_as_document</stringProp>",
      "703:         <CSVDataSet guiclass=\"TestBeanGUI\" testclass=\"CSVDataSet\" testname=\"Hosts Data Set\" enabled=\"true\">",
      "704:           <stringProp name=\"filename\">hosts.txt</stringProp>",
      "705:           <stringProp name=\"fileEncoding\"></stringProp>",
      "706:           <stringProp name=\"variableNames\">APP_SERVER</stringProp>",
      "707:           <stringProp name=\"delimiter\">,</stringProp>",
      "708:           <boolProp name=\"quotedData\">false</boolProp>",
      "709:           <boolProp name=\"recycle\">true</boolProp>",
      "710:           <boolProp name=\"stopThread\">false</boolProp>",
      "711:           <stringProp name=\"shareMode\">shareMode.all</stringProp>",
      "712:         </CSVDataSet>",
      "713:         <hashTree/>",
      "",
      "[Added Lines]",
      "681:             <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "682:             <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "689:               <stringProp name=\"Assertion.test_field\">Assertion.response_data</stringProp>",
      "692:               <stringProp name=\"Assertion.custom_message\"></stringProp>",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2f8f85ffd98fd1f5e4b5c7910093ca2817f2b1c1",
      "candidate_info": {
        "commit_hash": "2f8f85ffd98fd1f5e4b5c7910093ca2817f2b1c1",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/2f8f85ffd98fd1f5e4b5c7910093ca2817f2b1c1",
        "files": [
          "AUTHORS",
          "ChangeLog",
          "configure.ac",
          "src/jose.c",
          "src/jose.h",
          "src/proto.c"
        ],
        "message": "add \"x5t\" to JWT header in private_key_jwt client assertions\n\n- required for interoperability with Azure AD, see #762; thanks @juur\n- bump to 2.4.10.1rc4\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/jose.c||src/jose.c",
          "src/jose.h||src/jose.h",
          "src/proto.c||src/proto.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.10.1rc3],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.10.1rc4],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/jose.c||src/jose.c": [
          "File: src/jose.c -> src/jose.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "880:   oidc_jwt_hdr_set(jwt, CJOSE_HDR_KID, jwt->header.kid);",
          "881:  if (jwt->header.enc)",
          "882:   oidc_jwt_hdr_set(jwt, CJOSE_HDR_ENC, jwt->header.enc);",
          "884:  if (jwt->cjose_jws)",
          "885:   cjose_jws_release(jwt->cjose_jws);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "883:  if (jwt->header.x5t)",
          "884:   oidc_jwt_hdr_set(jwt, OIDC_JOSE_JWK_X5T_STR, jwt->header.x5t);",
          "",
          "---------------"
        ],
        "src/jose.h||src/jose.h": [
          "File: src/jose.h -> src/jose.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "204:  char *kid;",
          "206:  char *enc;",
          "207: } oidc_jwt_hdr_t;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "208:  char *x5t;",
          "",
          "---------------"
        ],
        "src/proto.c||src/proto.c": [
          "File: src/proto.c -> src/proto.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1867: #define OIDC_PROTO_JWT_ASSERTION_ASYMMETRIC_ALG CJOSE_HDR_ALG_RS256",
          "1872:   apr_table_t *params) {",
          "1873:  oidc_jwt_t *jwt = NULL;",
          "1874:  oidc_jwk_t *jwk = NULL;",
          "1877:  oidc_debug(r, \"enter\");",
          "",
          "[Removed Lines]",
          "1869: static apr_byte_t oidc_proto_endpoint_auth_private_key_jwt(request_rec *r,",
          "1870:   oidc_cfg *cfg, const char *client_id,",
          "1871:   const apr_array_header_t *client_signing_keys, const char *audience,",
          "1875:  const apr_array_header_t *signing_keys = NULL;",
          "",
          "[Added Lines]",
          "1869: static apr_byte_t oidc_proto_endpoint_auth_private_key_jwt(request_rec *r, oidc_cfg *cfg,",
          "1870:   const char *client_id, const apr_array_header_t *client_signing_keys, const char *audience,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1880:   return FALSE;",
          "1882:  if ((client_signing_keys != NULL) && (client_signing_keys->nelts > 0)) {",
          "1884:  } else if ((cfg->private_keys != NULL) && (cfg->private_keys->nelts > 0)) {",
          "1886:  } else {",
          "1889:   oidc_jwt_destroy(jwt);",
          "1890:   return FALSE;",
          "1891:  }",
          "1895:  jwt->header.kid = apr_pstrdup(r->pool, jwk->kid);",
          "1896:  jwt->header.alg = apr_pstrdup(r->pool, CJOSE_HDR_ALG_RS256);",
          "",
          "[Removed Lines]",
          "1883:   signing_keys = client_signing_keys;",
          "1885:   signing_keys = cfg->private_keys;",
          "1887:   oidc_error(r,",
          "1888:     \"no private keys have been configured to use for private_key_jwt client authentication (\" OIDCPrivateKeyFiles \")\");",
          "1893:  jwk = ((oidc_jwk_t**) signing_keys->elts)[0];",
          "",
          "[Added Lines]",
          "1881:   jwk = ((oidc_jwk_t**) client_signing_keys->elts)[0];",
          "1882:   jwt->header.x5t = apr_pstrdup(r->pool, jwk->x5t);",
          "1884:   jwk = ((oidc_jwk_t**) cfg->private_keys->elts)[0];",
          "1885:   if (cfg->public_keys->nelts > 0)",
          "1887:    jwt->header.x5t =",
          "1888:      apr_pstrdup(r->pool, ((oidc_jwk_t**) (cfg->public_keys->elts))[0]->x5t);",
          "1890:   oidc_error(r, \"no private keys have been configured to use for private_key_jwt client authentication (\" OIDCPrivateKeyFiles \")\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c09505f14787fcb6e46ab5d9b3bbafd0c844dac8",
      "candidate_info": {
        "commit_hash": "c09505f14787fcb6e46ab5d9b3bbafd0c844dac8",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/c09505f14787fcb6e46ab5d9b3bbafd0c844dac8",
        "files": [
          "ChangeLog",
          "src/cache/common.c",
          "src/mod_auth_openidc.h",
          "src/proto.c",
          "src/session.c",
          "src/util.c"
        ],
        "message": "strip (fixed) A256GCM JWT header from encrypted JWTS\n\nused for state cookies, cache encryption and by-value session cookies\nresulting in smaller cookies and reduced cache content size\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "src/cache/common.c||src/cache/common.c",
          "src/mod_auth_openidc.h||src/mod_auth_openidc.h",
          "src/proto.c||src/proto.c",
          "src/session.c||src/session.c",
          "src/util.c||src/util.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/cache/common.c||src/cache/common.c"
          ],
          "candidate": [
            "src/cache/common.c||src/cache/common.c"
          ]
        }
      },
      "candidate_diff": {
        "src/cache/common.c||src/cache/common.c": [
          "File: src/cache/common.c -> src/cache/common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "257:  json = json_object();",
          "258:  json_object_set_new(json, OIDC_CACHE_CRYPTO_JSON_KEY, json_string(plaintext));",
          "262:  if (json)",
          "263:   json_decref(json);",
          "",
          "[Removed Lines]",
          "260:  rv = oidc_util_jwt_create(r, (const char*) key, json, result);",
          "",
          "[Added Lines]",
          "260:  rv = oidc_util_jwt_create(r, (const char*) key, json, result, TRUE);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "274:  apr_byte_t rv = FALSE;",
          "275:  json_t *json = NULL;",
          "278:  if (rv == FALSE)",
          "279:   goto end;",
          "281:  rv = oidc_json_object_get_string(r->pool, json, OIDC_CACHE_CRYPTO_JSON_KEY, plaintext, NULL);",
          "285:  if (json)",
          "286:   json_decref(json);",
          "",
          "[Removed Lines]",
          "277:  rv = oidc_util_jwt_verify(r, (const char*) key, cache_value, &json);",
          "283:  end:",
          "",
          "[Added Lines]",
          "277:  rv = oidc_util_jwt_verify(r, (const char*) key, cache_value, &json, TRUE);",
          "283: end:",
          "",
          "---------------"
        ],
        "src/mod_auth_openidc.h||src/mod_auth_openidc.h": [
          "File: src/mod_auth_openidc.h -> src/mod_auth_openidc.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "784: apr_byte_t oidc_util_json_merge(request_rec *r, json_t *src, json_t *dst);",
          "785: int oidc_util_cookie_domain_valid(const char *hostname, char *cookie_domain);",
          "786: apr_byte_t oidc_util_hash_string_and_base64url_encode(request_rec *r, const char *openssl_hash_algo, const char *input, char **output);",
          "789: char *oidc_util_get_chunked_cookie(request_rec *r, const char *cookieName, int cookie_chunk_size);",
          "790: void oidc_util_set_chunked_cookie(request_rec *r, const char *cookieName, const char *cookieValue, apr_time_t expires, int chunkSize, const char *ext);",
          "791: apr_byte_t oidc_util_create_symmetric_key(request_rec *r, const char *client_secret, unsigned int r_key_len, const char *hash_algo, apr_byte_t set_kid, oidc_jwk_t **jwk);",
          "",
          "[Removed Lines]",
          "787: apr_byte_t oidc_util_jwt_create(request_rec *r, const char *secret, json_t *payload, char **compact_encoded_jwt);",
          "788: apr_byte_t oidc_util_jwt_verify(request_rec *r, const char *secret, const char *compact_encoded_jwt, json_t **result);",
          "",
          "[Added Lines]",
          "787: apr_byte_t oidc_util_jwt_create(request_rec *r, const char *secret, json_t *payload, char **compact_encoded_jwt, apr_byte_t strip_header);",
          "788: apr_byte_t oidc_util_jwt_verify(request_rec *r, const char *secret, const char *compact_encoded_jwt, json_t **result, apr_byte_t stripped_header);",
          "",
          "---------------"
        ],
        "src/proto.c||src/proto.c": [
          "File: src/proto.c -> src/proto.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "962: oidc_proto_state_t* oidc_proto_state_from_cookie(request_rec *r, oidc_cfg *c,",
          "963:   const char *cookieValue) {",
          "964:  json_t *result = NULL;",
          "966:  return result;",
          "967: }",
          "971:  char *cookieValue = NULL;",
          "973:  return cookieValue;",
          "974: }",
          "975: char* oidc_proto_state_to_string(request_rec *r,",
          "976:   oidc_proto_state_t *proto_state) {",
          "977:  return oidc_util_encode_json_object(r, proto_state, JSON_COMPACT);",
          "",
          "[Removed Lines]",
          "965:  oidc_util_jwt_verify(r, c->crypto_passphrase, cookieValue, &result);",
          "969: char* oidc_proto_state_to_cookie(request_rec *r, oidc_cfg *c,",
          "970:   oidc_proto_state_t *proto_state) {",
          "972:  oidc_util_jwt_create(r, c->crypto_passphrase, proto_state, &cookieValue);",
          "",
          "[Added Lines]",
          "965:  oidc_util_jwt_verify(r, c->crypto_passphrase, cookieValue, &result, TRUE);",
          "969: char* oidc_proto_state_to_cookie(request_rec *r, oidc_cfg *c, oidc_proto_state_t *proto_state) {",
          "971:  oidc_util_jwt_create(r, c->crypto_passphrase, proto_state, &cookieValue, TRUE);",
          "",
          "---------------"
        ],
        "src/session.c||src/session.c": [
          "File: src/session.c -> src/session.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "67: #define OIDC_SESSION_SID_KEY                      \"sid\"",
          "72:  if (encrypt == FALSE) {",
          "74:   return (*s_value != NULL);",
          "75:  }",
          "79:   return FALSE;",
          "81:  return TRUE;",
          "82: }",
          "87:  if (encrypt == FALSE) {",
          "88:   return oidc_util_decode_json_object(r, s_json, &z->state);",
          "89:  }",
          "95:   return FALSE;",
          "96:  }",
          "97:  return TRUE;",
          "",
          "[Removed Lines]",
          "69: static apr_byte_t oidc_session_encode(request_rec *r, oidc_cfg *c,",
          "70:   oidc_session_t *z, char **s_value, apr_byte_t encrypt) {",
          "77:  if (oidc_util_jwt_create(r, c->crypto_passphrase, z->state,",
          "78:    s_value) == FALSE)",
          "84: static apr_byte_t oidc_session_decode(request_rec *r, oidc_cfg *c,",
          "85:   oidc_session_t *z, const char *s_json, apr_byte_t encrypt) {",
          "91:  if (oidc_util_jwt_verify(r, c->crypto_passphrase, s_json,",
          "92:    &z->state) == FALSE) {",
          "93:   oidc_error(r,",
          "94:     \"could not verify secure JWT: cache value possibly corrupted\");",
          "",
          "[Added Lines]",
          "69: static apr_byte_t oidc_session_encode(request_rec *r, oidc_cfg *c, oidc_session_t *z,",
          "70:   char **s_value, apr_byte_t encrypt) {",
          "77:  if (oidc_util_jwt_create(r, c->crypto_passphrase, z->state, s_value, TRUE) == FALSE)",
          "83: static apr_byte_t oidc_session_decode(request_rec *r, oidc_cfg *c, oidc_session_t *z,",
          "84:   const char *s_json, apr_byte_t encrypt) {",
          "90:  if (oidc_util_jwt_verify(r, c->crypto_passphrase, s_json, &z->state, TRUE) == FALSE) {",
          "91:   oidc_error(r, \"could not verify secure JWT: cache value possibly corrupted\");",
          "",
          "---------------"
        ],
        "src/util.c||src/util.c": [
          "File: src/util.c -> src/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "132:  return apr_base64_decode(*dst, dec);",
          "133: }",
          "138:  apr_byte_t rv = FALSE;",
          "139:  oidc_jose_error_t err;",
          "",
          "[Removed Lines]",
          "135: apr_byte_t oidc_util_jwt_create(request_rec *r, const char *secret,",
          "136:   json_t *payload, char **compact_encoded_jwt) {",
          "",
          "[Added Lines]",
          "135: #define OIDC_JWT_HDR_DIR_A256GCM \"eyJhbGciOiAiZGlyIiwgImVuYyI6ICJBMjU2R0NNIn0..\"",
          "137: apr_byte_t oidc_util_jwt_create(request_rec *r, const char *secret, json_t *payload,",
          "138:   char **compact_encoded_jwt, apr_byte_t strip_header) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "142:  oidc_jwt_t *jwt = NULL;",
          "143:  oidc_jwt_t *jwe = NULL;",
          "147:   goto end;",
          "149:  jwt = oidc_jwt_new(r->pool, TRUE, FALSE);",
          "",
          "[Removed Lines]",
          "145:  if (oidc_util_create_symmetric_key(r, secret, 0, OIDC_JOSE_ALG_SHA256,",
          "146:    FALSE, &jwk) == FALSE)",
          "",
          "[Added Lines]",
          "147:  if (oidc_util_create_symmetric_key(r, secret, 0, OIDC_JOSE_ALG_SHA256, FALSE, &jwk) == FALSE)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "170:  jwe->header.enc = apr_pstrdup(r->pool, CJOSE_HDR_ENC_A256GCM);",
          "172:  const char *cser = oidc_jwt_serialize(r->pool, jwt, &err);",
          "175:   oidc_error(r, \"encrypting JWT failed: %s\", oidc_jose_e2s(r->pool, err));",
          "176:   goto end;",
          "177:  }",
          "179:  rv = TRUE;",
          "181: end:",
          "",
          "[Removed Lines]",
          "173:  if (oidc_jwt_encrypt(r->pool, jwe, jwk, cser, compact_encoded_jwt, &err)",
          "174:    == FALSE) {",
          "",
          "[Added Lines]",
          "174:  if (oidc_jwt_encrypt(r->pool, jwe, jwk, cser, compact_encoded_jwt, &err) == FALSE) {",
          "179:  if (strip_header == TRUE)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "192:  return rv;",
          "193: }",
          "201:  apr_byte_t rv = FALSE;",
          "202:  oidc_jose_error_t err;",
          "",
          "[Removed Lines]",
          "195: apr_byte_t oidc_util_jwt_verify(request_rec *r, const char *secret,",
          "196:   const char *compact_encoded_jwt, json_t **result) {",
          "198:  oidc_debug(r, \"enter: JWT header=%s\",",
          "199:    oidc_proto_peek_jwt_header(r, compact_encoded_jwt, NULL));",
          "",
          "[Added Lines]",
          "198: apr_byte_t oidc_util_jwt_verify(request_rec *r, const char *secret, const char *compact_encoded_jwt,",
          "199:   json_t **result, apr_byte_t stripped_header) {",
          "201:  oidc_debug(r, \"enter: JWT header=%s\", oidc_proto_peek_jwt_header(r, compact_encoded_jwt, NULL));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "204:  oidc_jwk_t *jwk = NULL;",
          "205:  oidc_jwt_t *jwt = NULL;",
          "209:   goto end;",
          "211:  apr_hash_t *keys = apr_hash_make(r->pool);",
          "212:  apr_hash_set(keys, \"\", APR_HASH_KEY_STRING, jwk);",
          "216:   oidc_error(r, \"parsing JWT failed: %s\", oidc_jose_e2s(r->pool, err));",
          "217:   goto end;",
          "218:  }",
          "",
          "[Removed Lines]",
          "207:  if (oidc_util_create_symmetric_key(r, secret, 0, OIDC_JOSE_ALG_SHA256,",
          "208:    FALSE, &jwk) == FALSE)",
          "214:  if (oidc_jwt_parse(r->pool, compact_encoded_jwt, &jwt, keys, &err)",
          "215:    == FALSE) {",
          "",
          "[Added Lines]",
          "209:  if (oidc_util_create_symmetric_key(r, secret, 0, OIDC_JOSE_ALG_SHA256, FALSE, &jwk) == FALSE)",
          "215:  if (stripped_header == TRUE)",
          "216:   compact_encoded_jwt =",
          "217:     apr_pstrcat(r->pool, OIDC_JWT_HDR_DIR_A256GCM, compact_encoded_jwt, NULL);",
          "219:  if (oidc_jwt_parse(r->pool, compact_encoded_jwt, &jwt, keys, &err) == FALSE) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "99a8d9e52a9ce661cf9e649c99f865d90b2cee44",
      "candidate_info": {
        "commit_hash": "99a8d9e52a9ce661cf9e649c99f865d90b2cee44",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/99a8d9e52a9ce661cf9e649c99f865d90b2cee44",
        "files": [
          "ChangeLog",
          "configure.ac",
          "src/mod_auth_openidc.c"
        ],
        "message": "make \"no issuer found in session\" a warning only\n\nbump to 2.4.9-dev\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/mod_auth_openidc.c||src/mod_auth_openidc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.8.2],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.9-dev],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/mod_auth_openidc.c||src/mod_auth_openidc.c": [
          "File: src/mod_auth_openidc.c -> src/mod_auth_openidc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "993:  const char *issuer = oidc_session_get_issuer(r, session);",
          "994:  if (issuer == NULL) {",
          "996:   return FALSE;",
          "997:  }",
          "",
          "[Removed Lines]",
          "995:   oidc_error(r, \"session corrupted: no issuer found in session\");",
          "",
          "[Added Lines]",
          "995:   oidc_warn(r, \"empty or invalid session: no issuer found\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "160a7f2ab3e610ea5b18368ee7c09c89c55bad2b",
      "candidate_info": {
        "commit_hash": "160a7f2ab3e610ea5b18368ee7c09c89c55bad2b",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/160a7f2ab3e610ea5b18368ee7c09c89c55bad2b",
        "files": [
          ".dockerignore",
          "docker-compose.yml",
          "test/Dockerfile",
          "test/keycloak.sh",
          "test/mod_auth_openidc.jmx",
          "test/openidc.conf"
        ],
        "message": "add docker-compose jmeter testing\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "test/keycloak.sh||test/keycloak.sh",
          "test/mod_auth_openidc.jmx||test/mod_auth_openidc.jmx",
          "test/openidc.conf||test/openidc.conf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "test/mod_auth_openidc.jmx||test/mod_auth_openidc.jmx"
          ],
          "candidate": [
            "test/mod_auth_openidc.jmx||test/mod_auth_openidc.jmx"
          ]
        }
      },
      "candidate_diff": {
        "test/keycloak.sh||test/keycloak.sh": [
          "File: test/keycloak.sh -> test/keycloak.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #!/bin/sh",
          "3: if [ -z \"$1\" ] ; then",
          "4:  /opt/jboss/startup-scripts/keycloak.sh create &",
          "5:  exit;",
          "6: fi",
          "8: PATH=\"${PATH}:${JBOSS_HOME}/bin\"",
          "10: while ! curl -k -s https://localhost:8443/auth/ > /dev/null ; do sleep 1 ; echo \".\"; done",
          "12: kcadm.sh config truststore --trustpass password /opt/jboss/keycloak/standalone/configuration/application.keystore",
          "13: kcadm.sh config credentials --server https://localhost:8443/auth --realm master --user \"${KEYCLOAK_USER}\" --password \"${KEYCLOAK_PASSWORD}\"",
          "15: CID=$(kcadm.sh create clients \\",
          "16:  -r master \\",
          "17:  -s 'redirectUris=[\"https://localhost/protected/\", \"https://apache/protected/\"]' \\",
          "18:  -s publicClient=false \\",
          "19:  -s clientAuthenticatorType=client-secret \\",
          "20:  -s clientId=myclient \\",
          "21:  -s secret=mysecret \\",
          "22:  -s enabled=true \\",
          "23:  -i)",
          "24: kcadm.sh get clients/$CID/installation/providers/keycloak-oidc-keycloak-json",
          "",
          "---------------"
        ],
        "test/mod_auth_openidc.jmx||test/mod_auth_openidc.jmx": [
          "File: test/mod_auth_openidc.jmx -> test/mod_auth_openidc.jmx",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?xml version=\"1.0\" encoding=\"UTF-8\"?>",
          "2: <jmeterTestPlan version=\"1.2\" properties=\"5.0\" jmeter=\"5.1.1.20190725\">",
          "3:   <hashTree>",
          "5:       <stringProp name=\"TestPlan.comments\"></stringProp>",
          "6:       <boolProp name=\"TestPlan.functional_mode\">false</boolProp>",
          "7:       <boolProp name=\"TestPlan.serialize_threadgroups\">false</boolProp>",
          "8:       <elementProp name=\"TestPlan.user_defined_variables\" elementType=\"Arguments\" guiclass=\"ArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">",
          "9:         <collectionProp name=\"Arguments.arguments\">",
          "13:             <stringProp name=\"Argument.metadata\">=</stringProp>",
          "14:           </elementProp>",
          "15:           <elementProp name=\"APP_PORT\" elementType=\"Argument\">",
          "",
          "[Removed Lines]",
          "4:     <TestPlan guiclass=\"TestPlanGui\" testclass=\"TestPlan\" testname=\"OpenID Connect Apache Module Test Plan\" enabled=\"true\">",
          "10:           <elementProp name=\"APP_SERVER\" elementType=\"Argument\">",
          "11:             <stringProp name=\"Argument.name\">APP_SERVER</stringProp>",
          "12:             <stringProp name=\"Argument.value\">localhost.zmartzone.eu</stringProp>",
          "",
          "[Added Lines]",
          "4:     <TestPlan guiclass=\"TestPlanGui\" testclass=\"TestPlan\" testname=\"mod_auth_openidc test plan\" enabled=\"true\">",
          "7:       <boolProp name=\"TestPlan.tearDown_on_shutdown\">true</boolProp>",
          "11:           <elementProp name=\"APP_HOST\" elementType=\"Argument\">",
          "12:             <stringProp name=\"Argument.name\">APP_HOST</stringProp>",
          "13:             <stringProp name=\"Argument.value\">apache</stringProp>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "17:             <stringProp name=\"Argument.value\">443</stringProp>",
          "18:             <stringProp name=\"Argument.metadata\">=</stringProp>",
          "19:           </elementProp>",
          "23:             <stringProp name=\"Argument.metadata\">=</stringProp>",
          "24:           </elementProp>",
          "61:             <stringProp name=\"Argument.metadata\">=</stringProp>",
          "62:           </elementProp>",
          "63:         </collectionProp>",
          "",
          "[Removed Lines]",
          "20:           <elementProp name=\"APP_PATH_USER\" elementType=\"Argument\">",
          "21:             <stringProp name=\"Argument.name\">APP_PATH_USER</stringProp>",
          "22:             <stringProp name=\"Argument.value\">/protected/index.php?param=sample</stringProp>",
          "25:           <elementProp name=\"AS_HOST\" elementType=\"Argument\">",
          "26:             <stringProp name=\"Argument.name\">AS_HOST</stringProp>",
          "27:             <stringProp name=\"Argument.value\">localhost</stringProp>",
          "28:             <stringProp name=\"Argument.metadata\">=</stringProp>",
          "29:           </elementProp>",
          "30:           <elementProp name=\"AS_PORT\" elementType=\"Argument\">",
          "31:             <stringProp name=\"Argument.name\">AS_PORT</stringProp>",
          "32:             <stringProp name=\"Argument.value\">9031</stringProp>",
          "33:             <stringProp name=\"Argument.metadata\">=</stringProp>",
          "34:           </elementProp>",
          "35:           <elementProp name=\"AS_PATH_TOKEN\" elementType=\"Argument\">",
          "36:             <stringProp name=\"Argument.name\">AS_PATH_TOKEN</stringProp>",
          "37:             <stringProp name=\"Argument.value\">/as/token.oauth2</stringProp>",
          "38:             <stringProp name=\"Argument.metadata\">=</stringProp>",
          "39:           </elementProp>",
          "40:           <elementProp name=\"AS_CLIENT_ID\" elementType=\"Argument\">",
          "41:             <stringProp name=\"Argument.name\">AS_CLIENT_ID</stringProp>",
          "42:             <stringProp name=\"Argument.value\">ro_client</stringProp>",
          "43:             <stringProp name=\"Argument.desc\">false</stringProp>",
          "44:             <stringProp name=\"Argument.metadata\">=</stringProp>",
          "45:           </elementProp>",
          "46:           <elementProp name=\"AS_USERNAME\" elementType=\"Argument\">",
          "47:             <stringProp name=\"Argument.name\">AS_USERNAME</stringProp>",
          "48:             <stringProp name=\"Argument.value\">joe</stringProp>",
          "49:             <stringProp name=\"Argument.desc\">false</stringProp>",
          "50:             <stringProp name=\"Argument.metadata\">=</stringProp>",
          "51:           </elementProp>",
          "52:           <elementProp name=\"AS_PASSWORD\" elementType=\"Argument\">",
          "53:             <stringProp name=\"Argument.name\">AS_PASSWORD</stringProp>",
          "54:             <stringProp name=\"Argument.value\">2Federate</stringProp>",
          "55:             <stringProp name=\"Argument.desc\">false</stringProp>",
          "56:             <stringProp name=\"Argument.metadata\">=</stringProp>",
          "57:           </elementProp>",
          "58:           <elementProp name=\"APP_PATH_ACCESS\" elementType=\"Argument\">",
          "59:             <stringProp name=\"Argument.name\">APP_PATH_ACCESS</stringProp>",
          "60:             <stringProp name=\"Argument.value\">/api/index.php</stringProp>",
          "",
          "[Added Lines]",
          "21:           <elementProp name=\"USERNAME\" elementType=\"Argument\">",
          "22:             <stringProp name=\"Argument.name\">USERNAME</stringProp>",
          "23:             <stringProp name=\"Argument.value\">admin</stringProp>",
          "26:           <elementProp name=\"PASSWORD\" elementType=\"Argument\">",
          "27:             <stringProp name=\"Argument.name\">PASSWORD</stringProp>",
          "28:             <stringProp name=\"Argument.value\">admin</stringProp>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "65:       <stringProp name=\"TestPlan.user_define_classpath\"></stringProp>",
          "66:     </TestPlan>",
          "67:     <hashTree>",
          "69:         <stringProp name=\"ThreadGroup.on_sample_error\">stoptest</stringProp>",
          "70:         <elementProp name=\"ThreadGroup.main_controller\" elementType=\"LoopController\" guiclass=\"LoopControlPanel\" testclass=\"LoopController\" testname=\"Loop Controller\" enabled=\"true\">",
          "71:           <boolProp name=\"LoopController.continue_forever\">false</boolProp>",
          "73:         </elementProp>",
          "78:         <boolProp name=\"ThreadGroup.scheduler\">false</boolProp>",
          "79:         <stringProp name=\"ThreadGroup.duration\"></stringProp>",
          "80:         <stringProp name=\"ThreadGroup.delay\"></stringProp>",
          "81:       </ThreadGroup>",
          "82:       <hashTree>",
          "122:           <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">",
          "123:             <collectionProp name=\"Arguments.arguments\"/>",
          "124:           </elementProp>",
          "165:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
          "166:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
          "168:           <stringProp name=\"HTTPSampler.method\">GET</stringProp>",
          "169:           <boolProp name=\"HTTPSampler.follow_redirects\">true</boolProp>",
          "170:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
          "172:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
          "173:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
          "175:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
          "176:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
          "177:         </HTTPSamplerProxy>",
          "178:         <hashTree>",
          "187:           <hashTree/>",
          "196:           <hashTree/>",
          "197:         </hashTree>",
          "199:           <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">",
          "200:             <collectionProp name=\"Arguments.arguments\">",
          "209:                 <boolProp name=\"HTTPArgument.always_encode\">true</boolProp>",
          "210:                 <stringProp name=\"Argument.value\">${USERNAME}</stringProp>",
          "211:                 <stringProp name=\"Argument.metadata\">=</stringProp>",
          "212:                 <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>",
          "214:               </elementProp>",
          "215:               <elementProp name=\"password\" elementType=\"HTTPArgument\">",
          "216:                 <boolProp name=\"HTTPArgument.always_encode\">true</boolProp>",
          "",
          "[Removed Lines]",
          "68:       <ThreadGroup guiclass=\"ThreadGroupGui\" testclass=\"ThreadGroup\" testname=\"OpenID Connect User Login\" enabled=\"true\">",
          "72:           <stringProp name=\"LoopController.loops\">5</stringProp>",
          "74:         <stringProp name=\"ThreadGroup.num_threads\">15</stringProp>",
          "75:         <stringProp name=\"ThreadGroup.ramp_time\">0</stringProp>",
          "76:         <longProp name=\"ThreadGroup.start_time\">1299167831000</longProp>",
          "77:         <longProp name=\"ThreadGroup.end_time\">1299167831000</longProp>",
          "83:         <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Initial Application Access\" enabled=\"true\">",
          "84:           <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">",
          "85:             <collectionProp name=\"Arguments.arguments\">",
          "86:               <elementProp name=\"jan\" elementType=\"HTTPArgument\">",
          "87:                 <boolProp name=\"HTTPArgument.always_encode\">true</boolProp>",
          "88:                 <stringProp name=\"Argument.value\">piet</stringProp>",
          "89:                 <stringProp name=\"Argument.metadata\">=</stringProp>",
          "90:                 <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>",
          "91:                 <stringProp name=\"Argument.name\">jan</stringProp>",
          "92:               </elementProp>",
          "93:             </collectionProp>",
          "94:           </elementProp>",
          "95:           <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
          "96:           <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
          "97:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
          "98:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
          "99:           <stringProp name=\"HTTPSampler.path\">${APP_PATH_USER}</stringProp>",
          "100:           <stringProp name=\"HTTPSampler.method\">GET</stringProp>",
          "101:           <boolProp name=\"HTTPSampler.follow_redirects\">false</boolProp>",
          "102:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
          "103:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
          "104:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
          "105:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
          "106:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
          "107:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
          "108:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
          "109:         </HTTPSamplerProxy>",
          "110:         <hashTree>",
          "111:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab AuthorizationRequestPath\" enabled=\"true\">",
          "112:             <stringProp name=\"RegexExtractor.useHeaders\">true</stringProp>",
          "113:             <stringProp name=\"RegexExtractor.refname\">AuthorizationRequestPath</stringProp>",
          "114:             <stringProp name=\"RegexExtractor.regex\">Location: https://(.*?)/(.*)</stringProp>",
          "115:             <stringProp name=\"RegexExtractor.template\">$2$</stringProp>",
          "116:             <stringProp name=\"RegexExtractor.default\">REGEX_FAILED</stringProp>",
          "117:             <stringProp name=\"RegexExtractor.match_number\">1</stringProp>",
          "118:           </RegexExtractor>",
          "119:           <hashTree/>",
          "120:         </hashTree>",
          "121:         <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Authorization Request\" enabled=\"true\">",
          "125:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
          "126:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
          "127:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
          "128:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
          "129:           <stringProp name=\"HTTPSampler.path\">/${AuthorizationRequestPath}</stringProp>",
          "130:           <stringProp name=\"HTTPSampler.method\">GET</stringProp>",
          "131:           <boolProp name=\"HTTPSampler.follow_redirects\">false</boolProp>",
          "132:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
          "133:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
          "134:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
          "135:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
          "136:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
          "137:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
          "138:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
          "139:         </HTTPSamplerProxy>",
          "140:         <hashTree>",
          "141:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab AuthzResumePath\" enabled=\"true\">",
          "142:             <stringProp name=\"RegexExtractor.useHeaders\">false</stringProp>",
          "143:             <stringProp name=\"RegexExtractor.refname\">AuthzResumePath</stringProp>",
          "144:             <stringProp name=\"RegexExtractor.regex\">&lt;form method=\\&quot;POST&quot;\\ action=\\&quot;(.+)&quot; autocomplete=&quot;off&quot;&gt;</stringProp>",
          "145:             <stringProp name=\"RegexExtractor.template\">$1$</stringProp>",
          "146:             <stringProp name=\"RegexExtractor.default\">REGEX_FAILED</stringProp>",
          "147:             <stringProp name=\"RegexExtractor.match_number\">1</stringProp>",
          "148:           </RegexExtractor>",
          "149:           <hashTree/>",
          "150:         </hashTree>",
          "151:         <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"OP Adapter Selection\" enabled=\"false\">",
          "152:           <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">",
          "153:             <collectionProp name=\"Arguments.arguments\">",
          "154:               <elementProp name=\"pfidpadapterid\" elementType=\"HTTPArgument\">",
          "155:                 <boolProp name=\"HTTPArgument.always_encode\">true</boolProp>",
          "156:                 <stringProp name=\"Argument.value\">OTIdPJava</stringProp>",
          "157:                 <stringProp name=\"Argument.metadata\">=</stringProp>",
          "158:                 <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>",
          "159:                 <stringProp name=\"Argument.name\">pfidpadapterid</stringProp>",
          "160:               </elementProp>",
          "161:             </collectionProp>",
          "162:           </elementProp>",
          "163:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
          "164:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
          "167:           <stringProp name=\"HTTPSampler.path\">${AuthzResumePath}</stringProp>",
          "171:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
          "174:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
          "179:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ResumeParam\" enabled=\"true\">",
          "180:             <stringProp name=\"RegexExtractor.useHeaders\">false</stringProp>",
          "181:             <stringProp name=\"RegexExtractor.refname\">ResumeParam</stringProp>",
          "182:             <stringProp name=\"RegexExtractor.regex\">&lt;input type=\\&quot;hidden\\&quot; name=\\&quot;resume\\&quot; value=\\&quot;(.+)\\&quot;&gt;</stringProp>",
          "183:             <stringProp name=\"RegexExtractor.template\">$1$</stringProp>",
          "184:             <stringProp name=\"RegexExtractor.default\">REGEX_FAILED</stringProp>",
          "185:             <stringProp name=\"RegexExtractor.match_number\">1</stringProp>",
          "186:           </RegexExtractor>",
          "188:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab LoginPath\" enabled=\"true\">",
          "189:             <stringProp name=\"RegexExtractor.useHeaders\">false</stringProp>",
          "190:             <stringProp name=\"RegexExtractor.refname\">LoginPath</stringProp>",
          "191:             <stringProp name=\"RegexExtractor.regex\">form method=\\&quot;post\\&quot; action=\\&quot;(.+)\\&quot;&gt;</stringProp>",
          "192:             <stringProp name=\"RegexExtractor.template\">$1$</stringProp>",
          "193:             <stringProp name=\"RegexExtractor.default\">REGEX_FAILED</stringProp>",
          "194:             <stringProp name=\"RegexExtractor.match_number\">1</stringProp>",
          "195:           </RegexExtractor>",
          "198:         <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Implict: OP User Login\" enabled=\"false\">",
          "201:               <elementProp name=\"resume\" elementType=\"HTTPArgument\">",
          "202:                 <boolProp name=\"HTTPArgument.always_encode\">true</boolProp>",
          "203:                 <stringProp name=\"Argument.value\">${ResumeParam}</stringProp>",
          "204:                 <stringProp name=\"Argument.metadata\">=</stringProp>",
          "205:                 <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>",
          "206:                 <stringProp name=\"Argument.name\">resume</stringProp>",
          "207:               </elementProp>",
          "208:               <elementProp name=\"userName\" elementType=\"HTTPArgument\">",
          "213:                 <stringProp name=\"Argument.name\">userName</stringProp>",
          "",
          "[Added Lines]",
          "36:       <ThreadGroup guiclass=\"ThreadGroupGui\" testclass=\"ThreadGroup\" testname=\"OpenID Connect\" enabled=\"true\">",
          "40:           <stringProp name=\"LoopController.loops\">20</stringProp>",
          "42:         <stringProp name=\"ThreadGroup.num_threads\">20</stringProp>",
          "43:         <stringProp name=\"ThreadGroup.ramp_time\">1</stringProp>",
          "49:         <CookieManager guiclass=\"CookiePanel\" testclass=\"CookieManager\" testname=\"HTTP Cookie Manager\" enabled=\"true\">",
          "50:           <collectionProp name=\"CookieManager.cookies\"/>",
          "51:           <boolProp name=\"CookieManager.clearEachIteration\">true</boolProp>",
          "52:         </CookieManager>",
          "53:         <hashTree/>",
          "54:         <HeaderManager guiclass=\"HeaderPanel\" testclass=\"HeaderManager\" testname=\"HTTP Header Manager\" enabled=\"true\">",
          "55:           <collectionProp name=\"HeaderManager.headers\">",
          "56:             <elementProp name=\"\" elementType=\"Header\">",
          "57:               <stringProp name=\"Header.name\">Accept</stringProp>",
          "58:               <stringProp name=\"Header.value\">text/html, */*</stringProp>",
          "59:             </elementProp>",
          "60:           </collectionProp>",
          "61:         </HeaderManager>",
          "62:         <hashTree/>",
          "63:         <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Unauthenticated Request\" enabled=\"true\">",
          "67:           <stringProp name=\"HTTPSampler.domain\">${APP_HOST}</stringProp>",
          "68:           <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
          "71:           <stringProp name=\"HTTPSampler.path\">/</stringProp>",
          "75:           <boolProp name=\"HTTPSampler.use_keepalive\">true</boolProp>",
          "82:           <XPathExtractor guiclass=\"XPathExtractorGui\" testclass=\"XPathExtractor\" testname=\"Extract Login URL\" enabled=\"true\">",
          "83:             <stringProp name=\"XPathExtractor.default\"></stringProp>",
          "84:             <stringProp name=\"XPathExtractor.refname\">LOGIN_URL</stringProp>",
          "85:             <stringProp name=\"XPathExtractor.matchNumber\">-1</stringProp>",
          "86:             <stringProp name=\"XPathExtractor.xpathQuery\">//form[@id=&quot;kc-form-login&quot;]/@action </stringProp>",
          "87:             <boolProp name=\"XPathExtractor.validate\">false</boolProp>",
          "88:             <boolProp name=\"XPathExtractor.tolerant\">true</boolProp>",
          "89:             <boolProp name=\"XPathExtractor.namespace\">false</boolProp>",
          "90:           </XPathExtractor>",
          "92:           <BeanShellPostProcessor guiclass=\"TestBeanGUI\" testclass=\"BeanShellPostProcessor\" testname=\"Extract Login Components\" enabled=\"true\">",
          "93:             <stringProp name=\"filename\"></stringProp>",
          "94:             <stringProp name=\"parameters\"></stringProp>",
          "95:             <boolProp name=\"resetInterpreter\">false</boolProp>",
          "96:             <stringProp name=\"script\">URL url = new URL(vars.get(&quot;LOGIN_URL&quot;));",
          "97: vars.put(&quot;LOGIN_PROTO&quot;, url.getProtocol());",
          "98: vars.put(&quot;LOGIN_HOST&quot;, url.getHost());",
          "99: vars.put(&quot;LOGIN_PORT&quot;, Integer.toString(url.getPort()));",
          "100: vars.put(&quot;LOGIN_PATH&quot;, url.getPath() + &quot;?&quot; + url.getQuery());</stringProp>",
          "101:           </BeanShellPostProcessor>",
          "104:         <DebugSampler guiclass=\"TestBeanGUI\" testclass=\"DebugSampler\" testname=\"Debug Sampler\" enabled=\"false\">",
          "105:           <boolProp name=\"displayJMeterProperties\">false</boolProp>",
          "106:           <boolProp name=\"displayJMeterVariables\">true</boolProp>",
          "107:           <boolProp name=\"displaySystemProperties\">false</boolProp>",
          "108:         </DebugSampler>",
          "109:         <hashTree/>",
          "110:         <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Login Request\" enabled=\"true\">",
          "113:               <elementProp name=\"username\" elementType=\"HTTPArgument\">",
          "118:                 <stringProp name=\"Argument.name\">username</stringProp>",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "221:               </elementProp>",
          "222:             </collectionProp>",
          "223:           </elementProp>",
          "227:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
          "367:           <stringProp name=\"HTTPSampler.method\">POST</stringProp>",
          "368:           <boolProp name=\"HTTPSampler.follow_redirects\">true</boolProp>",
          "369:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
          "371:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
          "372:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
          "374:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
          "375:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
          "376:         </HTTPSamplerProxy>",
          "377:         <hashTree>",
          "386:           <hashTree/>",
          "387:         </hashTree>",
          "574:       </hashTree>",
          "577:         <elementProp name=\"ThreadGroup.main_controller\" elementType=\"LoopController\" guiclass=\"LoopControlPanel\" testclass=\"LoopController\" testname=\"Loop Controller\" enabled=\"true\">",
          "578:           <boolProp name=\"LoopController.continue_forever\">false</boolProp>",
          "580:         </elementProp>",
          "585:         <boolProp name=\"ThreadGroup.scheduler\">false</boolProp>",
          "586:         <stringProp name=\"ThreadGroup.duration\"></stringProp>",
          "587:         <stringProp name=\"ThreadGroup.delay\"></stringProp>",
          "588:       </ThreadGroup>",
          "698:       <ResultCollector guiclass=\"ViewResultsFullVisualizer\" testclass=\"ResultCollector\" testname=\"View Results Tree\" enabled=\"true\">",
          "699:         <boolProp name=\"ResultCollector.error_logging\">true</boolProp>",
          "700:         <objProp>",
          "",
          "[Removed Lines]",
          "224:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
          "225:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
          "226:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
          "228:           <stringProp name=\"HTTPSampler.path\">/IdpSample/MainPage?cmd=login</stringProp>",
          "229:           <stringProp name=\"HTTPSampler.method\">POST</stringProp>",
          "230:           <boolProp name=\"HTTPSampler.follow_redirects\">false</boolProp>",
          "231:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
          "232:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
          "233:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
          "234:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
          "235:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
          "236:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
          "237:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
          "238:         </HTTPSamplerProxy>",
          "239:         <hashTree>",
          "240:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ResumePath\" enabled=\"true\">",
          "241:             <stringProp name=\"RegexExtractor.useHeaders\">true</stringProp>",
          "242:             <stringProp name=\"RegexExtractor.refname\">ResumePath</stringProp>",
          "243:             <stringProp name=\"RegexExtractor.regex\">Location: https://(.*?)/(.*)</stringProp>",
          "244:             <stringProp name=\"RegexExtractor.template\">$2$</stringProp>",
          "245:             <stringProp name=\"RegexExtractor.default\">REGEX_FAILED</stringProp>",
          "246:             <stringProp name=\"RegexExtractor.match_number\">1</stringProp>",
          "247:           </RegexExtractor>",
          "248:           <hashTree/>",
          "249:         </hashTree>",
          "250:         <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Implict: Resume Authorization\" enabled=\"false\">",
          "251:           <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">",
          "252:             <collectionProp name=\"Arguments.arguments\"/>",
          "253:           </elementProp>",
          "254:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
          "255:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
          "256:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
          "257:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
          "258:           <stringProp name=\"HTTPSampler.path\">${ResumePath}</stringProp>",
          "259:           <stringProp name=\"HTTPSampler.method\">POST</stringProp>",
          "260:           <boolProp name=\"HTTPSampler.follow_redirects\">false</boolProp>",
          "261:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
          "262:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
          "263:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
          "264:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
          "265:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
          "266:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
          "267:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
          "268:         </HTTPSamplerProxy>",
          "269:         <hashTree>",
          "270:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab RedirectURIPath\" enabled=\"true\">",
          "271:             <stringProp name=\"RegexExtractor.useHeaders\">true</stringProp>",
          "272:             <stringProp name=\"RegexExtractor.refname\">RedirectURIPath</stringProp>",
          "273:             <stringProp name=\"RegexExtractor.regex\">Location: https://(.*?)/(.*)#</stringProp>",
          "274:             <stringProp name=\"RegexExtractor.template\">$2$</stringProp>",
          "275:             <stringProp name=\"RegexExtractor.default\">REGEX_FAILED</stringProp>",
          "276:             <stringProp name=\"RegexExtractor.match_number\">1</stringProp>",
          "277:           </RegexExtractor>",
          "278:           <hashTree/>",
          "279:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab StateFragment\" enabled=\"true\">",
          "280:             <stringProp name=\"RegexExtractor.useHeaders\">true</stringProp>",
          "281:             <stringProp name=\"RegexExtractor.refname\">StateFragment</stringProp>",
          "282:             <stringProp name=\"RegexExtractor.regex\">Location: https://(.*?)#(.*?)state=(.*?)&amp;</stringProp>",
          "283:             <stringProp name=\"RegexExtractor.template\">$3$</stringProp>",
          "284:             <stringProp name=\"RegexExtractor.default\">REGEX_FAILED</stringProp>",
          "285:             <stringProp name=\"RegexExtractor.match_number\">1</stringProp>",
          "286:           </RegexExtractor>",
          "287:           <hashTree/>",
          "288:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab IDTokenFragment\" enabled=\"true\">",
          "289:             <stringProp name=\"RegexExtractor.useHeaders\">true</stringProp>",
          "290:             <stringProp name=\"RegexExtractor.refname\">IDTokenFragment</stringProp>",
          "291:             <stringProp name=\"RegexExtractor.regex\">Location: https://(.*?)#(.*?)id_token=(.*)</stringProp>",
          "292:             <stringProp name=\"RegexExtractor.template\">$3$</stringProp>",
          "293:             <stringProp name=\"RegexExtractor.default\">REGEX_FAILED</stringProp>",
          "294:             <stringProp name=\"RegexExtractor.match_number\">1</stringProp>",
          "295:           </RegexExtractor>",
          "296:           <hashTree/>",
          "297:         </hashTree>",
          "298:         <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Implicit: Authorization Response\" enabled=\"false\">",
          "299:           <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">",
          "300:             <collectionProp name=\"Arguments.arguments\">",
          "301:               <elementProp name=\"state\" elementType=\"HTTPArgument\">",
          "302:                 <boolProp name=\"HTTPArgument.always_encode\">false</boolProp>",
          "303:                 <stringProp name=\"Argument.value\">${StateFragment}</stringProp>",
          "304:                 <stringProp name=\"Argument.metadata\">=</stringProp>",
          "305:                 <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>",
          "306:                 <stringProp name=\"Argument.name\">state</stringProp>",
          "307:               </elementProp>",
          "308:               <elementProp name=\"id_token\" elementType=\"HTTPArgument\">",
          "309:                 <boolProp name=\"HTTPArgument.always_encode\">false</boolProp>",
          "310:                 <stringProp name=\"Argument.value\">${IDTokenFragment}</stringProp>",
          "311:                 <stringProp name=\"Argument.metadata\">=</stringProp>",
          "312:                 <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>",
          "313:                 <stringProp name=\"Argument.name\">id_token</stringProp>",
          "314:               </elementProp>",
          "315:             </collectionProp>",
          "316:           </elementProp>",
          "317:           <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
          "318:           <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
          "319:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
          "320:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
          "321:           <stringProp name=\"HTTPSampler.path\">/${RedirectURIPath}</stringProp>",
          "322:           <stringProp name=\"HTTPSampler.method\">POST</stringProp>",
          "323:           <boolProp name=\"HTTPSampler.follow_redirects\">false</boolProp>",
          "324:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
          "325:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
          "326:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
          "327:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
          "328:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
          "329:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
          "330:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
          "331:         </HTTPSamplerProxy>",
          "332:         <hashTree>",
          "333:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ApplicationPath\" enabled=\"true\">",
          "334:             <stringProp name=\"RegexExtractor.useHeaders\">true</stringProp>",
          "335:             <stringProp name=\"RegexExtractor.refname\">ApplicationPath</stringProp>",
          "336:             <stringProp name=\"RegexExtractor.regex\">Location: https://(.*?)/(.*)</stringProp>",
          "337:             <stringProp name=\"RegexExtractor.template\">$2$</stringProp>",
          "338:             <stringProp name=\"RegexExtractor.default\">REGEX_FAILED</stringProp>",
          "339:             <stringProp name=\"RegexExtractor.match_number\">1</stringProp>",
          "340:           </RegexExtractor>",
          "341:           <hashTree/>",
          "342:         </hashTree>",
          "343:         <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Basic: OP User Login Consent\" enabled=\"true\">",
          "344:           <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">",
          "345:             <collectionProp name=\"Arguments.arguments\">",
          "346:               <elementProp name=\"pf.username\" elementType=\"HTTPArgument\">",
          "347:                 <boolProp name=\"HTTPArgument.always_encode\">true</boolProp>",
          "348:                 <stringProp name=\"Argument.value\">${USERNAME}</stringProp>",
          "349:                 <stringProp name=\"Argument.metadata\">=</stringProp>",
          "350:                 <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>",
          "351:                 <stringProp name=\"Argument.name\">pf.username</stringProp>",
          "352:               </elementProp>",
          "353:               <elementProp name=\"pf.pass\" elementType=\"HTTPArgument\">",
          "354:                 <boolProp name=\"HTTPArgument.always_encode\">true</boolProp>",
          "355:                 <stringProp name=\"Argument.value\">${PASSWORD}</stringProp>",
          "356:                 <stringProp name=\"Argument.metadata\">=</stringProp>",
          "357:                 <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>",
          "358:                 <stringProp name=\"Argument.name\">pf.pass</stringProp>",
          "359:               </elementProp>",
          "360:             </collectionProp>",
          "361:           </elementProp>",
          "362:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
          "363:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
          "364:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
          "365:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
          "366:           <stringProp name=\"HTTPSampler.path\">${AuthzResumePath}</stringProp>",
          "370:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
          "373:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
          "378:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab cSRFToken Parameter\" enabled=\"true\">",
          "379:             <stringProp name=\"RegexExtractor.useHeaders\">false</stringProp>",
          "380:             <stringProp name=\"RegexExtractor.refname\">cSRFTokenParam</stringProp>",
          "381:             <stringProp name=\"RegexExtractor.regex\">&lt;input type=\\&quot;hidden\\&quot; name=\\&quot;cSRFToken\\&quot; value=\\&quot;(.+)\\&quot;/&gt;</stringProp>",
          "382:             <stringProp name=\"RegexExtractor.template\">$1$</stringProp>",
          "383:             <stringProp name=\"RegexExtractor.default\">REGEX_FAILED</stringProp>",
          "384:             <stringProp name=\"RegexExtractor.match_number\">1</stringProp>",
          "385:           </RegexExtractor>",
          "388:         <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Basic: OP User Consent\" enabled=\"true\">",
          "389:           <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">",
          "390:             <collectionProp name=\"Arguments.arguments\">",
          "391:               <elementProp name=\"check-user-approved-scope\" elementType=\"HTTPArgument\">",
          "392:                 <boolProp name=\"HTTPArgument.always_encode\">true</boolProp>",
          "393:                 <stringProp name=\"Argument.value\">true</stringProp>",
          "394:                 <stringProp name=\"Argument.metadata\">=</stringProp>",
          "395:                 <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>",
          "396:                 <stringProp name=\"Argument.name\">check-user-approved-scope</stringProp>",
          "397:               </elementProp>",
          "398:               <elementProp name=\"scope\" elementType=\"HTTPArgument\">",
          "399:                 <boolProp name=\"HTTPArgument.always_encode\">true</boolProp>",
          "400:                 <stringProp name=\"Argument.value\">openid</stringProp>",
          "401:                 <stringProp name=\"Argument.metadata\">=</stringProp>",
          "402:                 <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>",
          "403:                 <stringProp name=\"Argument.name\">scope</stringProp>",
          "404:               </elementProp>",
          "405:               <elementProp name=\"scope\" elementType=\"HTTPArgument\">",
          "406:                 <boolProp name=\"HTTPArgument.always_encode\">true</boolProp>",
          "407:                 <stringProp name=\"Argument.value\">email</stringProp>",
          "408:                 <stringProp name=\"Argument.metadata\">=</stringProp>",
          "409:                 <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>",
          "410:                 <stringProp name=\"Argument.name\">scope</stringProp>",
          "411:               </elementProp>",
          "412:               <elementProp name=\"scope\" elementType=\"HTTPArgument\">",
          "413:                 <boolProp name=\"HTTPArgument.always_encode\">true</boolProp>",
          "414:                 <stringProp name=\"Argument.value\">profile</stringProp>",
          "415:                 <stringProp name=\"Argument.metadata\">=</stringProp>",
          "416:                 <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>",
          "417:                 <stringProp name=\"Argument.name\">scope</stringProp>",
          "418:               </elementProp>",
          "419:               <elementProp name=\"cSRFToken\" elementType=\"HTTPArgument\">",
          "420:                 <boolProp name=\"HTTPArgument.always_encode\">true</boolProp>",
          "421:                 <stringProp name=\"Argument.value\">${cSRFTokenParam}</stringProp>",
          "422:                 <stringProp name=\"Argument.metadata\">=</stringProp>",
          "423:                 <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>",
          "424:                 <stringProp name=\"Argument.name\">cSRFToken</stringProp>",
          "425:               </elementProp>",
          "426:               <elementProp name=\"pf.oauth.authz.consent\" elementType=\"HTTPArgument\">",
          "427:                 <boolProp name=\"HTTPArgument.always_encode\">true</boolProp>",
          "428:                 <stringProp name=\"Argument.value\">allow</stringProp>",
          "429:                 <stringProp name=\"Argument.metadata\">=</stringProp>",
          "430:                 <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>",
          "431:                 <stringProp name=\"Argument.name\">pf.oauth.authz.consent</stringProp>",
          "432:               </elementProp>",
          "433:             </collectionProp>",
          "434:           </elementProp>",
          "435:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
          "436:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
          "437:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
          "438:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
          "439:           <stringProp name=\"HTTPSampler.path\">${AuthzResumePath}</stringProp>",
          "440:           <stringProp name=\"HTTPSampler.method\">POST</stringProp>",
          "441:           <boolProp name=\"HTTPSampler.follow_redirects\">false</boolProp>",
          "442:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
          "443:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
          "444:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
          "445:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
          "446:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
          "447:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
          "448:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
          "449:         </HTTPSamplerProxy>",
          "450:         <hashTree>",
          "451:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab LocationPath\" enabled=\"true\">",
          "452:             <stringProp name=\"RegexExtractor.useHeaders\">true</stringProp>",
          "453:             <stringProp name=\"RegexExtractor.refname\">LocationPath</stringProp>",
          "454:             <stringProp name=\"RegexExtractor.regex\">Location: https://(.*?)/(.*)</stringProp>",
          "455:             <stringProp name=\"RegexExtractor.template\">$2$</stringProp>",
          "456:             <stringProp name=\"RegexExtractor.default\">REGEX_FAILED</stringProp>",
          "457:             <stringProp name=\"RegexExtractor.match_number\">1</stringProp>",
          "458:           </RegexExtractor>",
          "459:           <hashTree/>",
          "460:         </hashTree>",
          "461:         <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Basic: Authorization Response\" enabled=\"true\">",
          "462:           <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">",
          "463:             <collectionProp name=\"Arguments.arguments\"/>",
          "464:           </elementProp>",
          "465:           <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
          "466:           <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
          "467:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
          "468:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
          "469:           <stringProp name=\"HTTPSampler.path\">/${LocationPath}</stringProp>",
          "470:           <stringProp name=\"HTTPSampler.method\">GET</stringProp>",
          "471:           <boolProp name=\"HTTPSampler.follow_redirects\">false</boolProp>",
          "472:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
          "473:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
          "474:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
          "475:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
          "476:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
          "477:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
          "478:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
          "479:         </HTTPSamplerProxy>",
          "480:         <hashTree>",
          "481:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ApplicationPath\" enabled=\"true\">",
          "482:             <stringProp name=\"RegexExtractor.useHeaders\">true</stringProp>",
          "483:             <stringProp name=\"RegexExtractor.refname\">ApplicationPath</stringProp>",
          "484:             <stringProp name=\"RegexExtractor.regex\">Location: https://(.*?)/(.*)</stringProp>",
          "485:             <stringProp name=\"RegexExtractor.template\">$2$</stringProp>",
          "486:             <stringProp name=\"RegexExtractor.default\">REGEX_FAILED</stringProp>",
          "487:             <stringProp name=\"RegexExtractor.match_number\">1</stringProp>",
          "488:           </RegexExtractor>",
          "489:           <hashTree/>",
          "490:         </hashTree>",
          "491:         <HeaderManager guiclass=\"HeaderPanel\" testclass=\"HeaderManager\" testname=\"Set Malicious Header\" enabled=\"false\">",
          "492:           <collectionProp name=\"HeaderManager.headers\">",
          "493:             <elementProp name=\"\" elementType=\"Header\">",
          "494:               <stringProp name=\"Header.name\">OIDC_CLAIM_BOGUS</stringProp>",
          "495:               <stringProp name=\"Header.value\">bogus</stringProp>",
          "496:             </elementProp>",
          "497:           </collectionProp>",
          "498:         </HeaderManager>",
          "499:         <hashTree/>",
          "500:         <LoopController guiclass=\"LoopControlPanel\" testclass=\"LoopController\" testname=\"Loop Authenticated Application Access\" enabled=\"true\">",
          "501:           <boolProp name=\"LoopController.continue_forever\">true</boolProp>",
          "502:           <stringProp name=\"LoopController.loops\">5</stringProp>",
          "503:         </LoopController>",
          "504:         <hashTree>",
          "505:           <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Authenticated Application Access\" enabled=\"true\">",
          "506:             <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">",
          "507:               <collectionProp name=\"Arguments.arguments\"/>",
          "508:             </elementProp>",
          "509:             <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
          "510:             <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
          "511:             <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
          "512:             <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
          "513:             <stringProp name=\"HTTPSampler.path\">/${ApplicationPath}</stringProp>",
          "514:             <stringProp name=\"HTTPSampler.method\">GET</stringProp>",
          "515:             <boolProp name=\"HTTPSampler.follow_redirects\">false</boolProp>",
          "516:             <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
          "517:             <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
          "518:             <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
          "519:             <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
          "520:             <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
          "521:             <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
          "522:             <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
          "523:           </HTTPSamplerProxy>",
          "524:           <hashTree>",
          "525:             <ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Assert User Logged In\" enabled=\"true\">",
          "526:               <collectionProp name=\"Asserion.test_strings\">",
          "527:                 <stringProp name=\"-1682027846\">\\[OIDC_CLAIM_sub\\] =&gt; ${USERNAME}</stringProp>",
          "528:               </collectionProp>",
          "529:               <stringProp name=\"Assertion.test_field\">Assertion.response_data</stringProp>",
          "530:               <boolProp name=\"Assertion.assume_success\">false</boolProp>",
          "531:               <intProp name=\"Assertion.test_type\">2</intProp>",
          "532:               <stringProp name=\"Assertion.custom_message\"></stringProp>",
          "533:             </ResponseAssertion>",
          "534:             <hashTree/>",
          "535:             <ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Assert Fake Header Removal\" enabled=\"true\">",
          "536:               <collectionProp name=\"Asserion.test_strings\">",
          "537:                 <stringProp name=\"-2019701846\">\\[OIDC_CLAIM_BOGUS\\] =&gt; bogus</stringProp>",
          "538:               </collectionProp>",
          "539:               <stringProp name=\"Assertion.test_field\">Assertion.response_data</stringProp>",
          "540:               <boolProp name=\"Assertion.assume_success\">false</boolProp>",
          "541:               <intProp name=\"Assertion.test_type\">6</intProp>",
          "542:               <stringProp name=\"Assertion.custom_message\"></stringProp>",
          "543:             </ResponseAssertion>",
          "544:             <hashTree/>",
          "545:           </hashTree>",
          "546:         </hashTree>",
          "547:         <CookieManager guiclass=\"CookiePanel\" testclass=\"CookieManager\" testname=\"HTTP Cookie Manager\" enabled=\"true\">",
          "548:           <collectionProp name=\"CookieManager.cookies\"/>",
          "549:           <boolProp name=\"CookieManager.clearEachIteration\">true</boolProp>",
          "550:           <stringProp name=\"CookieManager.policy\">rfc2109</stringProp>",
          "551:         </CookieManager>",
          "552:         <hashTree/>",
          "553:         <CSVDataSet guiclass=\"TestBeanGUI\" testclass=\"CSVDataSet\" testname=\"Username/Password Data Set\" enabled=\"true\">",
          "554:           <stringProp name=\"delimiter\">,</stringProp>",
          "555:           <stringProp name=\"fileEncoding\"></stringProp>",
          "556:           <stringProp name=\"filename\">users.txt</stringProp>",
          "557:           <boolProp name=\"quotedData\">false</boolProp>",
          "558:           <boolProp name=\"recycle\">true</boolProp>",
          "559:           <stringProp name=\"shareMode\">shareMode.all</stringProp>",
          "560:           <boolProp name=\"stopThread\">false</boolProp>",
          "561:           <stringProp name=\"variableNames\">USERNAME,PASSWORD</stringProp>",
          "562:           <boolProp name=\"ignoreFirstLine\">false</boolProp>",
          "563:         </CSVDataSet>",
          "564:         <hashTree/>",
          "565:         <HeaderManager guiclass=\"HeaderPanel\" testclass=\"HeaderManager\" testname=\"HTTP Header Manager\" enabled=\"true\">",
          "566:           <collectionProp name=\"HeaderManager.headers\">",
          "567:             <elementProp name=\"\" elementType=\"Header\">",
          "568:               <stringProp name=\"Header.name\">Accept</stringProp>",
          "569:               <stringProp name=\"Header.value\">*/*</stringProp>",
          "570:             </elementProp>",
          "571:           </collectionProp>",
          "572:         </HeaderManager>",
          "573:         <hashTree/>",
          "575:       <ThreadGroup guiclass=\"ThreadGroupGui\" testclass=\"ThreadGroup\" testname=\"OAuth Resource Access\" enabled=\"true\">",
          "576:         <stringProp name=\"ThreadGroup.on_sample_error\">stoptest</stringProp>",
          "579:           <stringProp name=\"LoopController.loops\">5</stringProp>",
          "581:         <stringProp name=\"ThreadGroup.num_threads\">15</stringProp>",
          "582:         <stringProp name=\"ThreadGroup.ramp_time\">0</stringProp>",
          "583:         <longProp name=\"ThreadGroup.start_time\">1388176686000</longProp>",
          "584:         <longProp name=\"ThreadGroup.end_time\">1388176686000</longProp>",
          "589:       <hashTree>",
          "590:         <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Token Request\" enabled=\"true\">",
          "591:           <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">",
          "592:             <collectionProp name=\"Arguments.arguments\">",
          "593:               <elementProp name=\"client_id\" elementType=\"HTTPArgument\">",
          "594:                 <boolProp name=\"HTTPArgument.always_encode\">false</boolProp>",
          "595:                 <stringProp name=\"Argument.value\">${AS_CLIENT_ID}</stringProp>",
          "596:                 <stringProp name=\"Argument.metadata\">=</stringProp>",
          "597:                 <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>",
          "598:                 <stringProp name=\"Argument.name\">client_id</stringProp>",
          "599:               </elementProp>",
          "600:               <elementProp name=\"grant_type\" elementType=\"HTTPArgument\">",
          "601:                 <boolProp name=\"HTTPArgument.always_encode\">false</boolProp>",
          "602:                 <stringProp name=\"Argument.value\">password</stringProp>",
          "603:                 <stringProp name=\"Argument.metadata\">=</stringProp>",
          "604:                 <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>",
          "605:                 <stringProp name=\"Argument.name\">grant_type</stringProp>",
          "606:               </elementProp>",
          "607:               <elementProp name=\"username\" elementType=\"HTTPArgument\">",
          "608:                 <boolProp name=\"HTTPArgument.always_encode\">false</boolProp>",
          "609:                 <stringProp name=\"Argument.value\">${AS_USERNAME}</stringProp>",
          "610:                 <stringProp name=\"Argument.metadata\">=</stringProp>",
          "611:                 <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>",
          "612:                 <stringProp name=\"Argument.name\">username</stringProp>",
          "613:               </elementProp>",
          "614:               <elementProp name=\"password\" elementType=\"HTTPArgument\">",
          "615:                 <boolProp name=\"HTTPArgument.always_encode\">false</boolProp>",
          "616:                 <stringProp name=\"Argument.value\">${AS_PASSWORD}</stringProp>",
          "617:                 <stringProp name=\"Argument.metadata\">=</stringProp>",
          "618:                 <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>",
          "619:                 <stringProp name=\"Argument.name\">password</stringProp>",
          "620:               </elementProp>",
          "621:             </collectionProp>",
          "622:           </elementProp>",
          "623:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
          "624:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
          "625:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
          "626:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
          "627:           <stringProp name=\"HTTPSampler.path\">${AS_PATH_TOKEN}</stringProp>",
          "628:           <stringProp name=\"HTTPSampler.method\">POST</stringProp>",
          "629:           <boolProp name=\"HTTPSampler.follow_redirects\">false</boolProp>",
          "630:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
          "631:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
          "632:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
          "633:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
          "634:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
          "635:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
          "636:         </HTTPSamplerProxy>",
          "637:         <hashTree>",
          "638:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab AccessToken\" enabled=\"true\">",
          "639:             <stringProp name=\"RegexExtractor.useHeaders\">false</stringProp>",
          "640:             <stringProp name=\"RegexExtractor.refname\">AccessToken</stringProp>",
          "641:             <stringProp name=\"RegexExtractor.regex\">\\&quot;access_token\\&quot;:\\&quot;(.+)\\&quot;,\\&quot;token_type\\&quot;</stringProp>",
          "642:             <stringProp name=\"RegexExtractor.template\">$1$</stringProp>",
          "643:             <stringProp name=\"RegexExtractor.default\">REGEX_FAILED</stringProp>",
          "644:             <stringProp name=\"RegexExtractor.match_number\">1</stringProp>",
          "645:           </RegexExtractor>",
          "646:           <hashTree/>",
          "647:         </hashTree>",
          "648:         <HeaderManager guiclass=\"HeaderPanel\" testclass=\"HeaderManager\" testname=\"Set Authorization Bearer Token\" enabled=\"true\">",
          "649:           <collectionProp name=\"HeaderManager.headers\">",
          "650:             <elementProp name=\"\" elementType=\"Header\">",
          "651:               <stringProp name=\"Header.name\">Authorization</stringProp>",
          "652:               <stringProp name=\"Header.value\">bearer ${AccessToken}</stringProp>",
          "653:             </elementProp>",
          "654:             <elementProp name=\"\" elementType=\"Header\">",
          "655:               <stringProp name=\"Header.name\">Accept</stringProp>",
          "656:               <stringProp name=\"Header.value\">application/json</stringProp>",
          "657:             </elementProp>",
          "658:           </collectionProp>",
          "659:         </HeaderManager>",
          "660:         <hashTree/>",
          "661:         <LoopController guiclass=\"LoopControlPanel\" testclass=\"LoopController\" testname=\"Loop Resource Access Requests\" enabled=\"true\">",
          "662:           <boolProp name=\"LoopController.continue_forever\">true</boolProp>",
          "663:           <stringProp name=\"LoopController.loops\">5</stringProp>",
          "664:         </LoopController>",
          "665:         <hashTree>",
          "666:           <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Resource Access\" enabled=\"true\">",
          "667:             <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">",
          "668:               <collectionProp name=\"Arguments.arguments\"/>",
          "669:             </elementProp>",
          "670:             <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
          "671:             <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
          "672:             <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
          "673:             <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
          "674:             <stringProp name=\"HTTPSampler.path\">${APP_PATH_ACCESS}</stringProp>",
          "675:             <stringProp name=\"HTTPSampler.method\">GET</stringProp>",
          "676:             <boolProp name=\"HTTPSampler.follow_redirects\">false</boolProp>",
          "677:             <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
          "678:             <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
          "679:             <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
          "680:             <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
          "681:             <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
          "682:             <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
          "683:           </HTTPSamplerProxy>",
          "684:           <hashTree>",
          "685:             <ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Assert AS_USERNAME\" enabled=\"true\">",
          "686:               <collectionProp name=\"Asserion.test_strings\">",
          "687:                 <stringProp name=\"240033137\">\\[OIDC_CLAIM_Username\\] =&gt; ${AS_USERNAME}</stringProp>",
          "688:               </collectionProp>",
          "689:               <stringProp name=\"Assertion.test_field\">Assertion.response_data</stringProp>",
          "690:               <boolProp name=\"Assertion.assume_success\">false</boolProp>",
          "691:               <intProp name=\"Assertion.test_type\">2</intProp>",
          "692:               <stringProp name=\"Assertion.custom_message\"></stringProp>",
          "693:             </ResponseAssertion>",
          "694:             <hashTree/>",
          "695:           </hashTree>",
          "696:         </hashTree>",
          "697:       </hashTree>",
          "",
          "[Added Lines]",
          "129:           <stringProp name=\"HTTPSampler.domain\">${LOGIN_HOST}</stringProp>",
          "130:           <stringProp name=\"HTTPSampler.port\">${LOGIN_PORT}</stringProp>",
          "131:           <stringProp name=\"HTTPSampler.protocol\">${LOGIN_PROTO}</stringProp>",
          "133:           <stringProp name=\"HTTPSampler.path\">${LOGIN_PATH}</stringProp>",
          "137:           <boolProp name=\"HTTPSampler.use_keepalive\">true</boolProp>",
          "144:           <JSONPathAssertion guiclass=\"JSONPathAssertionGui\" testclass=\"JSONPathAssertion\" testname=\"JSON Assertion\" enabled=\"true\">",
          "145:             <stringProp name=\"JSON_PATH\">$.headers.oidc_claim_preferred_username</stringProp>",
          "146:             <stringProp name=\"EXPECTED_VALUE\">admin</stringProp>",
          "147:             <boolProp name=\"JSONVALIDATION\">true</boolProp>",
          "148:             <boolProp name=\"EXPECT_NULL\">false</boolProp>",
          "149:             <boolProp name=\"INVERT\">false</boolProp>",
          "150:             <boolProp name=\"ISREGEX\">false</boolProp>",
          "151:           </JSONPathAssertion>",
          "155:       <ThreadGroup guiclass=\"ThreadGroupGui\" testclass=\"ThreadGroup\" testname=\"OAuth 2.0\" enabled=\"false\">",
          "156:         <stringProp name=\"ThreadGroup.on_sample_error\">stopthread</stringProp>",
          "159:           <stringProp name=\"LoopController.loops\">1</stringProp>",
          "161:         <stringProp name=\"ThreadGroup.num_threads\">1</stringProp>",
          "162:         <stringProp name=\"ThreadGroup.ramp_time\">1</stringProp>",
          "167:       <hashTree/>",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "723:             <assertionsResultsToSave>0</assertionsResultsToSave>",
          "724:             <bytes>true</bytes>",
          "725:             <sentBytes>true</sentBytes>",
          "726:             <threadCounts>true</threadCounts>",
          "727:             <idleTime>true</idleTime>",
          "728:             <connectTime>true</connectTime>",
          "729:           </value>",
          "730:         </objProp>",
          "757:         <stringProp name=\"filename\"></stringProp>",
          "758:       </ResultCollector>",
          "759:       <hashTree/>",
          "",
          "[Removed Lines]",
          "731:         <objProp>",
          "732:           <name></name>",
          "733:           <value class=\"SampleSaveConfiguration\">",
          "734:             <time>true</time>",
          "735:             <latency>true</latency>",
          "736:             <timestamp>true</timestamp>",
          "737:             <success>true</success>",
          "738:             <label>true</label>",
          "739:             <code>true</code>",
          "740:             <message>true</message>",
          "741:             <threadName>true</threadName>",
          "742:             <dataType>true</dataType>",
          "743:             <encoding>false</encoding>",
          "744:             <assertions>false</assertions>",
          "745:             <subresults>false</subresults>",
          "746:             <responseData>false</responseData>",
          "747:             <samplerData>false</samplerData>",
          "748:             <xml>false</xml>",
          "749:             <fieldNames>true</fieldNames>",
          "750:             <responseHeaders>false</responseHeaders>",
          "751:             <requestHeaders>false</requestHeaders>",
          "752:             <responseDataOnError>false</responseDataOnError>",
          "753:             <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>",
          "754:             <assertionsResultsToSave>0</assertionsResultsToSave>",
          "755:           </value>",
          "756:         </objProp>",
          "",
          "[Added Lines]",
          "196:             <url>true</url>",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "785:             <assertionsResultsToSave>0</assertionsResultsToSave>",
          "786:             <bytes>true</bytes>",
          "787:             <sentBytes>true</sentBytes>",
          "788:             <threadCounts>true</threadCounts>",
          "789:             <idleTime>true</idleTime>",
          "790:             <connectTime>true</connectTime>",
          "791:           </value>",
          "792:         </objProp>",
          "883:         <stringProp name=\"filename\"></stringProp>",
          "884:       </ResultCollector>",
          "885:       <hashTree/>",
          "",
          "[Removed Lines]",
          "793:         <objProp>",
          "794:           <name></name>",
          "795:           <value class=\"SampleSaveConfiguration\">",
          "796:             <time>true</time>",
          "797:             <latency>true</latency>",
          "798:             <timestamp>true</timestamp>",
          "799:             <success>true</success>",
          "800:             <label>true</label>",
          "801:             <code>true</code>",
          "802:             <message>true</message>",
          "803:             <threadName>true</threadName>",
          "804:             <dataType>true</dataType>",
          "805:             <encoding>false</encoding>",
          "806:             <assertions>true</assertions>",
          "807:             <subresults>true</subresults>",
          "808:             <responseData>false</responseData>",
          "809:             <samplerData>false</samplerData>",
          "810:             <xml>false</xml>",
          "811:             <fieldNames>false</fieldNames>",
          "812:             <responseHeaders>false</responseHeaders>",
          "813:             <requestHeaders>false</requestHeaders>",
          "814:             <responseDataOnError>false</responseDataOnError>",
          "815:             <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>",
          "816:             <assertionsResultsToSave>0</assertionsResultsToSave>",
          "817:             <bytes>true</bytes>",
          "818:           </value>",
          "819:         </objProp>",
          "820:         <stringProp name=\"filename\"></stringProp>",
          "821:       </ResultCollector>",
          "822:       <hashTree/>",
          "823:       <ResultCollector guiclass=\"RespTimeGraphVisualizer\" testclass=\"ResultCollector\" testname=\"Response Time Graph\" enabled=\"true\">",
          "824:         <boolProp name=\"ResultCollector.error_logging\">false</boolProp>",
          "825:         <objProp>",
          "826:           <name>saveConfig</name>",
          "827:           <value class=\"SampleSaveConfiguration\">",
          "828:             <time>true</time>",
          "829:             <latency>true</latency>",
          "830:             <timestamp>true</timestamp>",
          "831:             <success>true</success>",
          "832:             <label>true</label>",
          "833:             <code>true</code>",
          "834:             <message>true</message>",
          "835:             <threadName>true</threadName>",
          "836:             <dataType>true</dataType>",
          "837:             <encoding>false</encoding>",
          "838:             <assertions>true</assertions>",
          "839:             <subresults>true</subresults>",
          "840:             <responseData>false</responseData>",
          "841:             <samplerData>false</samplerData>",
          "842:             <xml>false</xml>",
          "843:             <fieldNames>true</fieldNames>",
          "844:             <responseHeaders>false</responseHeaders>",
          "845:             <requestHeaders>false</requestHeaders>",
          "846:             <responseDataOnError>false</responseDataOnError>",
          "847:             <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>",
          "848:             <assertionsResultsToSave>0</assertionsResultsToSave>",
          "849:             <bytes>true</bytes>",
          "850:             <sentBytes>true</sentBytes>",
          "851:             <threadCounts>true</threadCounts>",
          "852:             <idleTime>true</idleTime>",
          "853:             <connectTime>true</connectTime>",
          "854:           </value>",
          "855:         </objProp>",
          "856:         <objProp>",
          "857:           <name></name>",
          "858:           <value class=\"SampleSaveConfiguration\">",
          "859:             <time>true</time>",
          "860:             <latency>true</latency>",
          "861:             <timestamp>true</timestamp>",
          "862:             <success>true</success>",
          "863:             <label>true</label>",
          "864:             <code>true</code>",
          "865:             <message>true</message>",
          "866:             <threadName>true</threadName>",
          "867:             <dataType>true</dataType>",
          "868:             <encoding>false</encoding>",
          "869:             <assertions>true</assertions>",
          "870:             <subresults>true</subresults>",
          "871:             <responseData>false</responseData>",
          "872:             <samplerData>false</samplerData>",
          "873:             <xml>false</xml>",
          "874:             <fieldNames>false</fieldNames>",
          "875:             <responseHeaders>false</responseHeaders>",
          "876:             <requestHeaders>false</requestHeaders>",
          "877:             <responseDataOnError>false</responseDataOnError>",
          "878:             <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>",
          "879:             <assertionsResultsToSave>0</assertionsResultsToSave>",
          "880:             <bytes>true</bytes>",
          "881:           </value>",
          "882:         </objProp>",
          "",
          "[Added Lines]",
          "233:             <url>true</url>",
          "",
          "---------------"
        ],
        "test/openidc.conf||test/openidc.conf": [
          "File: test/openidc.conf -> test/openidc.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: LogLevel auth_openidc:debug",
          "4: LoadModule auth_openidc_module /usr/lib/apache2/modules/mod_auth_openidc.so",
          "5: OIDCProviderMetadataURL https://keycloak:8443/auth/realms/master/.well-known/openid-configuration",
          "7: OIDCRedirectURI /protected/",
          "8: OIDCSSLValidateServer Off",
          "9: OIDCClientID myclient",
          "10: OIDCClientSecret mysecret",
          "11: OIDCCryptoPassphrase 91827364",
          "13: OIDCInfoHook iat access_token access_token_expires id_token userinfo refresh_token session",
          "14: OIDCScope \"openid email profile\"",
          "16: <Location />",
          "17:   AuthType openid-connect",
          "18:   Require valid-user",
          "20:   ProxyPass http://echo/",
          "21:   ProxyPassReverse http://echo/",
          "22: </Location>",
          "24: OIDCOAuthSSLValidateServer Off",
          "25: #OIDCOAuthIntrospectionEndpoint https://keycloak:8443/auth/realms/master/protocol/openid-connect/token/introspect",
          "26: OIDCOAuthVerifyJwksUri https://keycloak:8443/auth/realms/master/protocol/openid-connect/certs",
          "28: <Location /api>",
          "29:   AuthType oauth20",
          "30:   Require valid-user",
          "31:   ProxyPass http://echo/headers",
          "32:   ProxyPassReverse http://echo/headers",
          "33: </Location>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a9a85193722e9a46a216a160092ffecb876a82d7",
      "candidate_info": {
        "commit_hash": "a9a85193722e9a46a216a160092ffecb876a82d7",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/a9a85193722e9a46a216a160092ffecb876a82d7",
        "files": [
          "ChangeLog",
          "configure.ac",
          "src/metadata.c"
        ],
        "message": "add grant_types to dynamic client registration request\n\n- conform OIDC test suite 4.0.5\n- bump to 2.4.4rc0\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/metadata.c||src/metadata.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.3],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.4rc0],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/metadata.c||src/metadata.c": [
          "File: src/metadata.c -> src/metadata.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "101: #define OIDC_METADATA_CLIENT_NAME                                  \"client_name\"",
          "102: #define OIDC_METADATA_REDIRECT_URIS                                \"redirect_uris\"",
          "103: #define OIDC_METADATA_RESPONSE_TYPES                               \"response_types\"",
          "104: #define OIDC_METADATA_TOKEN_ENDPOINT_AUTH_METHOD                   \"token_endpoint_auth_method\"",
          "105: #define OIDC_METADATA_CONTACTS                                     \"contacts\"",
          "106: #define OIDC_METADATA_INITIATE_LOGIN_URI                           \"initiate_login_uri\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "104: #define OIDC_METADATA_GRANT_TYPES                                  \"grant_types\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "506:  }",
          "507:  json_object_set_new(data, OIDC_METADATA_RESPONSE_TYPES, response_types);",
          "509:  if (provider->token_endpoint_auth != NULL) {",
          "510:   json_object_set_new(data, OIDC_METADATA_TOKEN_ENDPOINT_AUTH_METHOD,",
          "511:     json_string(provider->token_endpoint_auth));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "510:  json_object_set_new(data, OIDC_METADATA_GRANT_TYPES,",
          "511:    json_pack(\"[s, s, s]\", \"authorization_code\", \"implicit\",",
          "512:      \"refresh_token\"));",
          "",
          "---------------"
        ]
      }
    }
  ]
}