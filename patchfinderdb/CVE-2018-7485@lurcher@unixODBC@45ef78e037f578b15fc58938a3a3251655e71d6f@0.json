{
  "cve_id": "CVE-2018-7485",
  "cve_desc": "The SQLWriteFileDSN function in odbcinst/SQLWriteFileDSN.c in unixODBC 2.3.5 has strncpy arguments in the wrong order, which allows attackers to cause a denial of service or possibly have unspecified other impact.",
  "repo": "lurcher/unixODBC",
  "patch_hash": "45ef78e037f578b15fc58938a3a3251655e71d6f",
  "patch_info": {
    "commit_hash": "45ef78e037f578b15fc58938a3a3251655e71d6f",
    "repo": "lurcher/unixODBC",
    "commit_url": "https://github.com/lurcher/unixODBC/commit/45ef78e037f578b15fc58938a3a3251655e71d6f",
    "files": [
      "ChangeLog",
      "DriverManager/SQLGetDiagRecW.c",
      "DriverManager/SQLSetDescField.c",
      "DriverManager/SQLSetDescFieldW.c",
      "configure.ac",
      "exe/iusql.c",
      "odbcinst/SQLCreateDataSource.c",
      "odbcinst/SQLWriteFileDSN.c"
    ],
    "message": "New Pre Source",
    "before_after_code_files": [
      "DriverManager/SQLGetDiagRecW.c||DriverManager/SQLGetDiagRecW.c",
      "DriverManager/SQLSetDescField.c||DriverManager/SQLSetDescField.c",
      "DriverManager/SQLSetDescFieldW.c||DriverManager/SQLSetDescFieldW.c",
      "configure.ac||configure.ac",
      "exe/iusql.c||exe/iusql.c",
      "odbcinst/SQLCreateDataSource.c||odbcinst/SQLCreateDataSource.c",
      "odbcinst/SQLWriteFileDSN.c||odbcinst/SQLWriteFileDSN.c"
    ]
  },
  "patch_diff": {
    "DriverManager/SQLGetDiagRecW.c||DriverManager/SQLGetDiagRecW.c": [
      "File: DriverManager/SQLGetDiagRecW.c -> DriverManager/SQLGetDiagRecW.c"
    ],
    "DriverManager/SQLSetDescField.c||DriverManager/SQLSetDescField.c": [
      "File: DriverManager/SQLSetDescField.c -> DriverManager/SQLSetDescField.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "306:         return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );",
      "307:     }",
      "310:     {",
      "311:         __post_internal_error( &descriptor -> error,",
      "312:                 ERROR_07009, NULL,",
      "",
      "[Removed Lines]",
      "309:     if ( field_identifier == SQL_DESC_COUNT && (SQLINTEGER)value < 0 )",
      "",
      "[Added Lines]",
      "309:     if ( field_identifier == SQL_DESC_COUNT && (intptr_t)value < 0 )",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "315:         return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );",
      "316:     }",
      "321:     {",
      "322:         __post_internal_error( &descriptor -> error,",
      "323:                 ERROR_HY105, NULL,",
      "",
      "[Removed Lines]",
      "318:     if ( field_identifier == SQL_DESC_PARAMETER_TYPE && value != SQL_PARAM_INPUT",
      "319:         && value != SQL_PARAM_OUTPUT && value != SQL_PARAM_INPUT_OUTPUT &&",
      "320:         value != SQL_PARAM_INPUT_OUTPUT_STREAM && value != SQL_PARAM_OUTPUT_STREAM )",
      "",
      "[Added Lines]",
      "318:     if ( field_identifier == SQL_DESC_PARAMETER_TYPE && (intptr_t)value != SQL_PARAM_INPUT",
      "319:         && (intptr_t)value != SQL_PARAM_OUTPUT && (intptr_t)value != SQL_PARAM_INPUT_OUTPUT &&",
      "320:         (intptr_t)value != SQL_PARAM_INPUT_OUTPUT_STREAM && (intptr_t)value != SQL_PARAM_OUTPUT_STREAM )",
      "",
      "---------------"
    ],
    "DriverManager/SQLSetDescFieldW.c||DriverManager/SQLSetDescFieldW.c": [
      "File: DriverManager/SQLSetDescFieldW.c -> DriverManager/SQLSetDescFieldW.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "288:         return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );",
      "289:     }",
      "292:     {",
      "293:         __post_internal_error( &descriptor -> error,",
      "294:                 ERROR_07009, NULL,",
      "",
      "[Removed Lines]",
      "291:     if ( field_identifier == SQL_DESC_COUNT && (SQLINTEGER)value < 0 )",
      "",
      "[Added Lines]",
      "291:     if ( field_identifier == SQL_DESC_COUNT && (intptr_t)value < 0 )",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "297:         return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );",
      "298:     }",
      "303:     {",
      "304:         __post_internal_error( &descriptor -> error,",
      "305:                 ERROR_HY105, NULL,",
      "",
      "[Removed Lines]",
      "300:     if ( field_identifier == SQL_DESC_PARAMETER_TYPE && value != SQL_PARAM_INPUT",
      "301:         && value != SQL_PARAM_OUTPUT && value != SQL_PARAM_INPUT_OUTPUT &&",
      "302:         value != SQL_PARAM_INPUT_OUTPUT_STREAM && value != SQL_PARAM_OUTPUT_STREAM )",
      "",
      "[Added Lines]",
      "300:     if ( field_identifier == SQL_DESC_PARAMETER_TYPE && (intptr_t)value != SQL_PARAM_INPUT",
      "301:         && (intptr_t)value != SQL_PARAM_OUTPUT && (intptr_t)value != SQL_PARAM_INPUT_OUTPUT &&",
      "302:         (intptr_t)value != SQL_PARAM_INPUT_OUTPUT_STREAM && (intptr_t)value != SQL_PARAM_OUTPUT_STREAM )",
      "",
      "---------------"
    ],
    "configure.ac||configure.ac": [
      "File: configure.ac -> configure.ac",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: dnl Process this file with autoconf to produce a configure script.",
      "4: AM_INIT_AUTOMAKE",
      "6: dnl Checks for programs.",
      "",
      "[Removed Lines]",
      "3: AC_INIT([unixODBC], [2.3.5], nick@unixodbc.org, [unixODBC])",
      "",
      "[Added Lines]",
      "3: AC_INIT([unixODBC], [2.3.6pre], nick@unixodbc.org, [unixODBC])",
      "",
      "---------------"
    ],
    "exe/iusql.c||exe/iusql.c": [
      "File: exe/iusql.c -> exe/iusql.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "413:             if ( bVerbose ) DumpODBCLog( hEnv, hDbc, hStmt );",
      "414:             fprintf( stderr, \"[ISQL]ERROR: Could not SQLExecDirect\\n\" );",
      "415:             SQLFreeStmt( hStmt, SQL_DROP );",
      "417:             return 0;",
      "418:         }",
      "419:     }",
      "",
      "[Removed Lines]",
      "416:             free(szSepLine);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "odbcinst/SQLCreateDataSource.c||odbcinst/SQLCreateDataSource.c": [
      "File: odbcinst/SQLCreateDataSource.c -> odbcinst/SQLCreateDataSource.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "27:     if ( !in )",
      "28:     {",
      "30:     }",
      "32:     while ( in[ len ] != 0 || in[ len + 1 ] != 0 )",
      "",
      "[Removed Lines]",
      "29:         return in;",
      "",
      "[Added Lines]",
      "29:         return NULL;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "56:     if ( !in )",
      "57:     {",
      "59:     }",
      "61:     while ( in[ len ] != 0 )",
      "",
      "[Removed Lines]",
      "58:         return in;",
      "",
      "[Added Lines]",
      "58:         return NULL;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "84:     if ( !in )",
      "85:     {",
      "87:     }",
      "89:     while ( in[ len ] != 0 || in[ len + 1 ] != 0 )",
      "",
      "[Removed Lines]",
      "86:         return in;",
      "",
      "[Added Lines]",
      "86:         return NULL;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "113:     if ( !in )",
      "114:     {",
      "116:     }",
      "118:     while ( in[ len ] != 0 )",
      "",
      "[Removed Lines]",
      "115:         return in;",
      "",
      "[Added Lines]",
      "115:         return NULL;",
      "",
      "---------------"
    ],
    "odbcinst/SQLWriteFileDSN.c||odbcinst/SQLWriteFileDSN.c": [
      "File: odbcinst/SQLWriteFileDSN.c -> odbcinst/SQLWriteFileDSN.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "22:  if ( pszFileName[0] == '/' )",
      "23:  {",
      "25:  }",
      "26:  else",
      "27:  {",
      "",
      "[Removed Lines]",
      "24:   strncpy( szFileName, sizeof(szFileName) - 5, pszFileName );",
      "",
      "[Added Lines]",
      "24:   strncpy( szFileName, pszFileName, sizeof(szFileName) - 5 );",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fce0b999118eb471822723c82515966046b25676",
      "candidate_info": {
        "commit_hash": "fce0b999118eb471822723c82515966046b25676",
        "repo": "lurcher/unixODBC",
        "commit_url": "https://github.com/lurcher/unixODBC/commit/fce0b999118eb471822723c82515966046b25676",
        "files": [
          "ChangeLog",
          "DriverManager/SQLColAttribute.c",
          "DriverManager/SQLGetData.c",
          "DriverManager/SQLGetDiagField.c",
          "DriverManager/SQLGetFunctions.c",
          "DriverManager/SQLSetConnectAttr.c",
          "DriverManager/SQLSetConnectAttrW.c",
          "DriverManager/SQLSetEnvAttr.c",
          "DriverManager/SQLSetStmtAttrW.c",
          "DriverManager/SQLSpecialColumns.c",
          "DriverManager/SQLSpecialColumnsW.c",
          "DriverManager/__attribute.c",
          "config.h",
          "config.h.in",
          "configure.ac",
          "exe/odbc-config.c",
          "extras/snprintf.c",
          "include/sqltypes.h"
        ],
        "message": "New Release",
        "before_after_code_files": [
          "DriverManager/SQLColAttribute.c||DriverManager/SQLColAttribute.c",
          "DriverManager/SQLGetData.c||DriverManager/SQLGetData.c",
          "DriverManager/SQLGetDiagField.c||DriverManager/SQLGetDiagField.c",
          "DriverManager/SQLGetFunctions.c||DriverManager/SQLGetFunctions.c",
          "DriverManager/SQLSetConnectAttr.c||DriverManager/SQLSetConnectAttr.c",
          "DriverManager/SQLSetConnectAttrW.c||DriverManager/SQLSetConnectAttrW.c",
          "DriverManager/SQLSetEnvAttr.c||DriverManager/SQLSetEnvAttr.c",
          "DriverManager/SQLSetStmtAttrW.c||DriverManager/SQLSetStmtAttrW.c",
          "DriverManager/SQLSpecialColumns.c||DriverManager/SQLSpecialColumns.c",
          "DriverManager/SQLSpecialColumnsW.c||DriverManager/SQLSpecialColumnsW.c",
          "DriverManager/__attribute.c||DriverManager/__attribute.c",
          "config.h||config.h",
          "config.h.in||config.h.in",
          "configure.ac||configure.ac",
          "exe/odbc-config.c||exe/odbc-config.c",
          "extras/snprintf.c||extras/snprintf.c",
          "include/sqltypes.h||include/sqltypes.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "DriverManager/SQLColAttribute.c||DriverManager/SQLColAttribute.c": [
          "File: DriverManager/SQLColAttribute.c -> DriverManager/SQLColAttribute.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "600:                 case SQL_COLUMN_OWNER_NAME:",
          "601:                 case SQL_COLUMN_TABLE_NAME:",
          "602:                 case SQL_COLUMN_TYPE_NAME:",
          "609:                     if ( ret == SQL_SUCCESS && string_length )",
          "610:                     {",
          "",
          "[Removed Lines]",
          "603:                 case SQL_DESC_BASE_COLUMN_NAME:",
          "604:                 case SQL_DESC_BASE_TABLE_NAME:",
          "605:                 case SQL_DESC_LITERAL_PREFIX:",
          "606:                 case SQL_DESC_LITERAL_SUFFIX:",
          "607:                 case SQL_DESC_LOCAL_TYPE_NAME:",
          "608:                 case SQL_DESC_NAME:",
          "",
          "[Added Lines]",
          "603:               case SQL_DESC_BASE_COLUMN_NAME:",
          "604:               case SQL_DESC_BASE_TABLE_NAME:",
          "605:               case SQL_DESC_LITERAL_PREFIX:",
          "606:               case SQL_DESC_LITERAL_SUFFIX:",
          "607:               case SQL_DESC_LOCAL_TYPE_NAME:",
          "608:               case SQL_DESC_NAME:",
          "",
          "---------------"
        ],
        "DriverManager/SQLGetData.c||DriverManager/SQLGetData.c": [
          "File: DriverManager/SQLGetData.c -> DriverManager/SQLGetData.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "488:         {",
          "489:             statement -> interupted_state = statement -> state;",
          "490:             statement -> state = STATE_S11;",
          "492:     }",
          "493:     else if ( SQL_SUCCEEDED( ret ) && unicode_switch )",
          "494:     {",
          "",
          "[Removed Lines]",
          "491:         }",
          "",
          "[Added Lines]",
          "491:     }",
          "",
          "---------------"
        ],
        "DriverManager/SQLGetDiagField.c||DriverManager/SQLGetDiagField.c": [
          "File: DriverManager/SQLGetDiagField.c -> DriverManager/SQLGetDiagField.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "564:                 unicode_to_ansi_copy( diag_info_ptr, buffer_length, s1, SQL_NTS, __get_connection( head ), NULL );",
          "566:                 if ( string_length_ptr && *string_length_ptr > 0 )",
          "569:                 }",
          "570:             }",
          "572:             if ( s1 )",
          "574:                 free( s1 );",
          "577:             if ( SQL_SUCCEEDED( ret ) && diag_identifier == SQL_DIAG_SQLSTATE )",
          "578:             {",
          "",
          "[Removed Lines]",
          "567:                 {",
          "573:             {",
          "575:             }",
          "",
          "[Added Lines]",
          "567:             {",
          "573:    {",
          "575:    }",
          "",
          "---------------"
        ],
        "DriverManager/SQLGetFunctions.c||DriverManager/SQLGetFunctions.c": [
          "File: DriverManager/SQLGetFunctions.c -> DriverManager/SQLGetFunctions.c"
        ],
        "DriverManager/SQLSetConnectAttr.c||DriverManager/SQLSetConnectAttr.c": [
          "File: DriverManager/SQLSetConnectAttr.c -> DriverManager/SQLSetConnectAttr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "497:         case SQL_ATTR_APP_PARAM_DESC:",
          "498:         case SQL_ATTR_APP_ROW_DESC:",
          "501:         case SQL_ATTR_ENABLE_AUTO_IPD:",
          "502:         case SQL_ATTR_FETCH_BOOKMARK_PTR:",
          "503:         case SQL_ATTR_IMP_PARAM_DESC:",
          "",
          "[Removed Lines]",
          "499:         case SQL_ATTR_CURSOR_SCROLLABLE:",
          "500:         case SQL_ATTR_CURSOR_SENSITIVITY:",
          "",
          "[Added Lines]",
          "499:        case SQL_ATTR_CURSOR_SCROLLABLE:",
          "500:        case SQL_ATTR_CURSOR_SENSITIVITY:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "667:                 }",
          "668:                 else",
          "669:                 {",
          "673:             }",
          "674:             else",
          "675:             {",
          "",
          "[Removed Lines]",
          "670:                     sa -> str_attr = strdup( value );",
          "671:                     sa -> str_len = string_length;",
          "672:                 }",
          "",
          "[Added Lines]",
          "670:                 sa -> str_attr = strdup( value );",
          "671:                 sa -> str_len = string_length;",
          "672:             }",
          "",
          "---------------"
        ],
        "DriverManager/SQLSetConnectAttrW.c||DriverManager/SQLSetConnectAttrW.c": [
          "File: DriverManager/SQLSetConnectAttrW.c -> DriverManager/SQLSetConnectAttrW.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "433:         case SQL_ATTR_APP_PARAM_DESC:",
          "434:         case SQL_ATTR_APP_ROW_DESC:",
          "437:         case SQL_ATTR_ENABLE_AUTO_IPD:",
          "438:         case SQL_ATTR_FETCH_BOOKMARK_PTR:",
          "439:         case SQL_ATTR_IMP_PARAM_DESC:",
          "",
          "[Removed Lines]",
          "435:         case SQL_ATTR_CURSOR_SCROLLABLE:",
          "436:         case SQL_ATTR_CURSOR_SENSITIVITY:",
          "",
          "[Added Lines]",
          "435:        case SQL_ATTR_CURSOR_SCROLLABLE:",
          "436:        case SQL_ATTR_CURSOR_SENSITIVITY:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "603:                 }",
          "604:                 else",
          "605:                 {",
          "609:             }",
          "610:             else",
          "611:             {",
          "",
          "[Removed Lines]",
          "606:                     sa -> str_attr = unicode_to_ansi_alloc( value, string_length, connection, NULL );",
          "607:                     sa -> str_len = string_length;",
          "608:                 }",
          "",
          "[Added Lines]",
          "606:                 sa -> str_attr = unicode_to_ansi_alloc( value, string_length, connection, NULL );",
          "607:                 sa -> str_len = string_length;",
          "608:             }",
          "",
          "---------------"
        ],
        "DriverManager/SQLSetEnvAttr.c||DriverManager/SQLSetEnvAttr.c": [
          "File: DriverManager/SQLSetEnvAttr.c -> DriverManager/SQLSetEnvAttr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "198:     {",
          "199:       case SQL_ATTR_CONNECTION_POOLING:",
          "200:         {",
          "201:             SQLUINTEGER ptr = (SQLUINTEGER) value;",
          "203:             if ( ptr != SQL_CP_OFF &&",
          "204:                 ptr != SQL_CP_ONE_PER_DRIVER &&",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "201: #ifdef HAVE_PTRDIFF_T",
          "202:             SQLUINTEGER ptr = (ptrdiff_t) value;",
          "203: #else",
          "205: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "224:       case SQL_ATTR_CP_MATCH:",
          "225:         {",
          "226:             SQLUINTEGER ptr = (SQLUINTEGER) value;",
          "228:             if ( ptr != SQL_CP_STRICT_MATCH &&",
          "229:                 ptr != SQL_CP_RELAXED_MATCH )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "230: #ifdef HAVE_PTRDIFF_T",
          "231:             SQLUINTEGER ptr = (ptrdiff_t) value;",
          "232: #else",
          "234: #endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "248:       case SQL_ATTR_ODBC_VERSION:",
          "249:         {",
          "250:             SQLUINTEGER ptr = (SQLUINTEGER) value;",
          "252:             if ( ptr != SQL_OV_ODBC2 &&",
          "253:                     ptr != SQL_OV_ODBC3 &&",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "258: #ifdef HAVE_PTRDIFF_T",
          "259:             SQLUINTEGER ptr = (ptrdiff_t) value;",
          "260: #else",
          "262: #endif",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "291:       case SQL_ATTR_OUTPUT_NTS:",
          "292:         {",
          "293:             SQLUINTEGER ptr = (SQLUINTEGER) value;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "305: #ifdef HAVE_PTRDIFF_T",
          "306:             SQLUINTEGER ptr = (ptrdiff_t) value;",
          "307: #else",
          "309: #endif",
          "",
          "---------------"
        ],
        "DriverManager/SQLSetStmtAttrW.c||DriverManager/SQLSetStmtAttrW.c": [
          "File: DriverManager/SQLSetStmtAttrW.c -> DriverManager/SQLSetStmtAttrW.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "596:     if ( attribute == SQL_ATTR_METADATA_ID )",
          "597:     {",
          "598:         statement -> metadata_id = (SQLINTEGER) value;",
          "599:     }",
          "601:     if ( attribute == SQL_ATTR_IMP_ROW_DESC ||",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "598: #ifdef HAVE_PTRDIFF_T",
          "599:         statement -> metadata_id = (ptrdiff_t) value;",
          "600: #else",
          "602: #endif",
          "",
          "---------------"
        ],
        "DriverManager/SQLSpecialColumns.c||DriverManager/SQLSpecialColumns.c": [
          "File: DriverManager/SQLSpecialColumns.c -> DriverManager/SQLSpecialColumns.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "238:                 ERROR_HY090, NULL,",
          "239:                 statement -> connection -> environment -> requested_version );",
          "242:     }",
          "244:     if ( table_name == NULL )",
          "",
          "[Removed Lines]",
          "241:                 return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );",
          "",
          "[Added Lines]",
          "241:         return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );",
          "",
          "---------------"
        ],
        "DriverManager/SQLSpecialColumnsW.c||DriverManager/SQLSpecialColumnsW.c": [
          "File: DriverManager/SQLSpecialColumnsW.c -> DriverManager/SQLSpecialColumnsW.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "205:                 ERROR_HY090, NULL,",
          "206:                 statement -> connection -> environment -> requested_version );",
          "209:     }",
          "211:     if ( table_name == NULL )",
          "",
          "[Removed Lines]",
          "208:                 return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );",
          "",
          "[Added Lines]",
          "208:         return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );",
          "",
          "---------------"
        ],
        "DriverManager/__attribute.c||DriverManager/__attribute.c": [
          "File: DriverManager/__attribute.c -> DriverManager/__attribute.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1303:         if ( as -> is_int_type )",
          "1304:         {",
          "1305:             return (void*)(long) as -> int_value;",
          "1306:         }",
          "1307:         else",
          "1308:         {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1305: #ifdef HAVE_PTRDIFF_T",
          "1306:             return (void*)(ptrdiff_t) as -> int_value;",
          "1307: #else",
          "1309: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1365:         if ( as -> is_int_type )",
          "1366:         {",
          "1367:             return (void*)(long) as -> int_value;",
          "1368:         }",
          "1369:         else",
          "1370:         {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1371: #ifdef HAVE_PTRDIFF_T",
          "1372:             return (void*)(ptrdiff_t) as -> int_value;",
          "1373: #else",
          "1375: #endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1398: int dm_check_connection_attrs( DMHDBC connection, SQLINTEGER attribute, SQLPOINTER value )",
          "1399: {",
          "1400:     SQLINTEGER ival;",
          "1402:     ival = (SQLINTEGER) value;",
          "1404:     switch( attribute )",
          "1405:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1408: #ifdef HAVE_PTRDIFF_T",
          "1409:     ptrdiff_t ival;",
          "1410: #else",
          "1412: #endif",
          "1414: #ifdef HAVE_PTRDIFF_T",
          "1415:     ival = (ptrdiff_t) value;",
          "1416: #else",
          "1418: #endif",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1543: int dm_check_statement_attrs( DMHSTMT statement, SQLINTEGER attribute, SQLPOINTER value )",
          "1544: {",
          "1545:     SQLUINTEGER ival;",
          "1547:     ival = (SQLUINTEGER) value;",
          "1549:     switch( attribute )",
          "1550:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1561: #ifdef HAVE_PTRDIFF_T",
          "1562:     ptrdiff_t ival;",
          "1563: #else",
          "1565: #endif",
          "1567: #ifdef HAVE_PTRDIFF_T",
          "1568:     ival = (ptrdiff_t) value;",
          "1569: #else",
          "1571: #endif",
          "",
          "---------------"
        ],
        "config.h||config.h": [
          "File: config.h -> config.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "190: #define HAVE_PRELOADED_SYMBOLS 1",
          "193: #define HAVE_PUTENV 1",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "193: #define HAVE_PTRDIFF_T 1",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "235: #define HAVE_STDARG_H 1",
          "238: #define HAVE_STDINT_H 1",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "241: #define HAVE_STDDEF_H 1",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "351: #define LT_LIBEXT \"a\"",
          "",
          "[Removed Lines]",
          "348: #define LT_DLSEARCH_PATH \"/lib:/usr/lib:/usr/lib/digilent/adept:/usr/lib64/digilent/adept:/usr/lib/x86_64-linux-gnu/libfakeroot:/lib/i386-linux-gnu:/usr/lib/i386-linux-gnu:/lib/i686-linux-gnu:/usr/lib/i686-linux-gnu:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu/mesa-egl:/usr/lib/nvidia-304:/usr/lib32/nvidia-304:/lib32:/usr/lib32:/libx32:/usr/libx32:/usr/local/easysoft/lib:/usr/local/easysoft/unixODBC/lib\"",
          "",
          "[Added Lines]",
          "354: #define LT_DLSEARCH_PATH \"/lib:/usr/lib:/usr/lib/digilent/adept:/usr/lib64/digilent/adept:/usr/lib/x86_64-linux-gnu/libfakeroot:/lib/i386-linux-gnu:/usr/lib/i386-linux-gnu:/lib/i686-linux-gnu:/usr/lib/i686-linux-gnu:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu/mesa-egl:/usr/lib/nvidia-304:/usr/lib32/nvidia-304:/usr/lib/x86_64-linux-gnu/mir/clientplatform/mesa:/lib32:/usr/lib32:/libx32:/usr/libx32:/usr/local/easysoft/lib:/usr/local/easysoft/unixODBC/lib:/usr/local/easysoft/isam/lib:/usr/local/easysoft/oob/client\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "385: #define PACKAGE_NAME \"unixODBC\"",
          "391: #define PACKAGE_TARNAME \"unixODBC\"",
          "",
          "[Removed Lines]",
          "388: #define PACKAGE_STRING \"unixODBC 2.3.5-pre\"",
          "",
          "[Added Lines]",
          "394: #define PACKAGE_STRING \"unixODBC 2.3.5\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "394: #define PACKAGE_URL \"\"",
          "",
          "[Removed Lines]",
          "397: #define PACKAGE_VERSION \"2.3.5-pre\"",
          "",
          "[Added Lines]",
          "403: #define PACKAGE_VERSION \"2.3.5\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "435: #define SYSTEM_LIB_PATH \"/usr/local/lib\"",
          "",
          "[Removed Lines]",
          "432: #define SYSTEM_FILE_PATH \"/etc\"",
          "",
          "[Added Lines]",
          "438: #define SYSTEM_FILE_PATH \"/usr/local/etc\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "453: #define VERSION \"2.3.5-pre\"",
          "",
          "[Added Lines]",
          "459: #define VERSION \"2.3.5\"",
          "",
          "---------------"
        ],
        "config.h.in||config.h.in": [
          "File: config.h.in -> config.h.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "189: #undef HAVE_PRELOADED_SYMBOLS",
          "192: #undef HAVE_PUTENV",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "192: #undef HAVE_PTRDIFF_T",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "234: #undef HAVE_STDARG_H",
          "237: #undef HAVE_STDINT_H",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "240: #undef HAVE_STDDEF_H",
          "",
          "---------------"
        ],
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Process this file with autoconf to produce a configure script.",
          "4: AM_INIT_AUTOMAKE",
          "6: dnl Checks for programs.",
          "",
          "[Removed Lines]",
          "3: AC_INIT([unixODBC], [2.3.5-pre], nick@unixodbc.org, [unixODBC])",
          "",
          "[Added Lines]",
          "3: AC_INIT([unixODBC], [2.3.5], nick@unixodbc.org, [unixODBC])",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "297: AC_CHECK_LONG_LONG",
          "298: AC_CHECK_SIZEOF([long int])",
          "300: AC_CHECK_FUNCS( strcasecmp strncasecmp vsnprintf strtol atoll strtoll endpwent gettimeofday ftime time stricmp strnicmp getuid getpwuid nl_langinfo )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "299: AC_CHECK_TYPES([ptrdiff_t])",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "454: dnl Checks for header files.",
          "455: AC_HEADER_STDC",
          "459: INCLUDES=\"$INCLUDES $USER_INCLUDES\";",
          "",
          "[Removed Lines]",
          "457: AC_CHECK_HEADERS(malloc.h unistd.h pwd.h crypt.h limits.h synch.h strings.h string.h locale.h sys/malloc.h sys/types.h sys/sem.h stdarg.h varargs.h sys/time.h sys/timeb.h time.h langinfo.h )",
          "",
          "[Added Lines]",
          "458: AC_CHECK_HEADERS(malloc.h unistd.h pwd.h crypt.h limits.h synch.h strings.h string.h locale.h sys/malloc.h sys/types.h sys/sem.h stdarg.h varargs.h sys/time.h sys/timeb.h time.h langinfo.h stddef.h )",
          "",
          "---------------"
        ],
        "exe/odbc-config.c||exe/odbc-config.c": [
          "File: exe/odbc-config.c -> exe/odbc-config.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:     printf( \"#ifndef SIZEOF_LONG_INT\\n #define SIZEOF_LONG_INT %d\\n#endif\\n\", SIZEOF_LONG_INT );",
          "99: #endif",
          "103: #endif",
          "105: #ifdef DONT_TD_VOID",
          "106:     printf( \"#ifndef DONT_TD_VOID\\n #define DONT_TD_VOID\\n#endif\\n\" );",
          "107: #endif",
          "111: #endif",
          "113: #ifdef BUILD_LEGACY_64_BIT_MODE",
          "",
          "[Removed Lines]",
          "101: #ifdef ALLREADY_HAVE_WINDOWS_TYPE",
          "102:     printf( \"#ifndef ALLREADY_HAVE_WINDOWS_TYPE\\n #define ALLREADY_HAVE_WINDOWS_TYPE\\n#endif\\n\" );",
          "109: #ifdef DO_YOU_KNOW_WHAT_YOUR_ARE_DOING",
          "110:     printf( \"#ifndef DO_YOU_KNOW_WHAT_YOUR_ARE_DOING\\n #define DO_YOU_KNOW_WHAT_YOUR_ARE_DOING\\n#endif\\n\" );",
          "",
          "[Added Lines]",
          "101: #ifdef ALREADY_HAVE_WINDOWS_TYPE",
          "102:     printf( \"#ifndef ALREADY_HAVE_WINDOWS_TYPE\\n #define ALREADY_HAVE_WINDOWS_TYPE\\n#endif\\n\" );",
          "109: #ifdef DO_YOU_KNOW_WHAT_YOU_ARE_DOING",
          "110:     printf( \"#ifndef DO_YOU_KNOW_WHAT_YOU_ARE_DOING\\n #define DO_YOU_KNOW_WHAT_YOU_ARE_DOING\\n#endif\\n\" );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "157:     printf( \"-DSIZEOF_LONG_INT=%d \", SIZEOF_LONG_INT );",
          "158: #endif",
          "162: #endif",
          "164: #ifdef DONT_TD_VOID",
          "165:     printf( \"-DDONT_TD_VOID \" );",
          "166: #endif",
          "170: #endif",
          "172: #ifdef BUILD_LEGACY_64_BIT_MODE",
          "",
          "[Removed Lines]",
          "160: #ifdef ALLREADY_HAVE_WINDOWS_TYPE",
          "161:     printf( \"-DALLREADY_HAVE_WINDOWS_TYPE \" );",
          "168: #ifdef DO_YOU_KNOW_WHAT_YOUR_ARE_DOING",
          "169:     printf( \"-DDO_YOU_KNOW_WHAT_YOUR_ARE_DOING \" );",
          "",
          "[Added Lines]",
          "160: #ifdef ALREADY_HAVE_WINDOWS_TYPE",
          "161:     printf( \"-DALREADY_HAVE_WINDOWS_TYPE \" );",
          "168: #ifdef DO_YOU_KNOW_WHAT_YOU_ARE_DOING",
          "169:     printf( \"-DDO_YOU_KNOW_WHAT_YOU_ARE_DOING \" );",
          "",
          "---------------"
        ],
        "extras/snprintf.c||extras/snprintf.c": [
          "File: extras/snprintf.c -> extras/snprintf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "64: #define HAVE_LONG_DOUBLE",
          "66: #include <string.h>",
          "67: #include <ctype.h>",
          "68: #include <sys/types.h>",
          "69: #include \"uodbc_extras.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66: #ifdef HAVE_STDDEF_H",
          "67: #include <stddef.h>",
          "68: #endif",
          "71: #ifdef HAVE_SYS_TYPES_H",
          "73: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "344:  break;",
          "345:       case 'p':",
          "346:  strvalue = (char*) va_arg (args, void *);",
          "347:  fmtint (buffer, &currlen, maxlen, (long) strvalue, 16, min, max, flags);",
          "348:  break;",
          "349:       case 'n':",
          "350:  if (cflags == DP_C_SHORT)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "352: #ifdef HAVE_PTRDIFF_T",
          "353:  fmtint (buffer, &currlen, maxlen, (ptrdiff_t) strvalue, 16, min, max, flags);",
          "354: #else",
          "356: #endif",
          "",
          "---------------"
        ],
        "include/sqltypes.h||include/sqltypes.h": [
          "File: include/sqltypes.h -> include/sqltypes.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "64: #define FAR",
          "65: #define CALLBACK",
          "",
          "[Removed Lines]",
          "62: #ifndef ALLREADY_HAVE_WINDOWS_TYPE",
          "",
          "[Added Lines]",
          "62: #ifndef ALREADY_HAVE_WINDOWS_TYPE",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "174: #else",
          "175: typedef long            SQLINTEGER;",
          "176: typedef unsigned long   SQLUINTEGER;",
          "177: #define SQLLEN          SQLINTEGER",
          "178: #define SQLULEN         SQLUINTEGER",
          "179: #define SQLSETPOSIROW   SQLUSMALLINT",
          "180: typedef SQLULEN         SQLROWCOUNT;",
          "181: typedef SQLULEN         SQLROWSETSIZE;",
          "182: typedef SQLULEN         SQLTRANSID;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "180: #ifdef _WIN64",
          "181: typedef long long SQLLEN;",
          "182: typedef unsigned long long SQLULEN;",
          "183: typedef unsigned long long SQLSETPOSIROW;",
          "184: #else",
          "188: #endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "246: typedef unsigned char           UCHAR;",
          "247: typedef signed char             SCHAR;",
          "",
          "[Removed Lines]",
          "244: #ifndef ALLREADY_HAVE_WINDOWS_TYPE",
          "",
          "[Added Lines]",
          "254: #ifndef ALREADY_HAVE_WINDOWS_TYPE",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "427: #if (ODBCVER >= 0x0350)",
          "428: #ifdef GUID_DEFINED",
          "430: typedef GUID SQLGUID;",
          "431: #else",
          "432: typedef struct  tagSQLGUID",
          "",
          "[Removed Lines]",
          "429: #ifndef ALLREADY_HAVE_WINDOWS_TYPE",
          "",
          "[Added Lines]",
          "439: #ifndef ALREADY_HAVE_WINDOWS_TYPE",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4e149a143ec807a20f4056fbf5196070685a916f",
      "candidate_info": {
        "commit_hash": "4e149a143ec807a20f4056fbf5196070685a916f",
        "repo": "lurcher/unixODBC",
        "commit_url": "https://github.com/lurcher/unixODBC/commit/4e149a143ec807a20f4056fbf5196070685a916f",
        "files": [
          "ChangeLog",
          "configure.ac"
        ],
        "message": "Move to 2.3.7pre",
        "before_after_code_files": [
          "configure.ac||configure.ac"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Process this file with autoconf to produce a configure script.",
          "4: AM_INIT_AUTOMAKE",
          "6: dnl Checks for programs.",
          "",
          "[Removed Lines]",
          "3: AC_INIT([unixODBC], [2.3.6], nick@unixodbc.org, [unixODBC])",
          "",
          "[Added Lines]",
          "3: AC_INIT([unixODBC], [2.3.7pre], nick@unixodbc.org, [unixODBC])",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8640428ed8993dcb00b913c8f5a7021394798cfe",
      "candidate_info": {
        "commit_hash": "8640428ed8993dcb00b913c8f5a7021394798cfe",
        "repo": "lurcher/unixODBC",
        "commit_url": "https://github.com/lurcher/unixODBC/commit/8640428ed8993dcb00b913c8f5a7021394798cfe",
        "files": [
          "ChangeLog",
          "configure.ac"
        ],
        "message": "Release 2.3.7",
        "before_after_code_files": [
          "configure.ac||configure.ac"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Process this file with autoconf to produce a configure script.",
          "4: AM_INIT_AUTOMAKE",
          "6: dnl Checks for programs.",
          "",
          "[Removed Lines]",
          "3: AC_INIT([unixODBC], [2.3.7pre], nick@unixodbc.org, [unixODBC])",
          "",
          "[Added Lines]",
          "3: AC_INIT([unixODBC], [2.3.7], nick@unixodbc.org, [unixODBC])",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3ed836b3aaf6f1264667de143c889c71ade4b1eb",
      "candidate_info": {
        "commit_hash": "3ed836b3aaf6f1264667de143c889c71ade4b1eb",
        "repo": "lurcher/unixODBC",
        "commit_url": "https://github.com/lurcher/unixODBC/commit/3ed836b3aaf6f1264667de143c889c71ade4b1eb",
        "files": [
          "ChangeLog",
          "exe/isql.c",
          "exe/iusql.c"
        ],
        "message": "Allow isql to display longer messages\n\ngit-svn-id: svn+ssh://svn.code.sf.net/p/unixodbc/code/trunk@134 ab163d8d-7830-4be3-ba5a-e01213c9a3c2",
        "before_after_code_files": [
          "exe/isql.c||exe/isql.c",
          "exe/iusql.c||exe/iusql.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "exe/iusql.c||exe/iusql.c"
          ],
          "candidate": [
            "exe/iusql.c||exe/iusql.c"
          ]
        }
      },
      "candidate_diff": {
        "exe/isql.c||exe/isql.c": [
          "File: exe/isql.c -> exe/isql.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1732:     {",
          "1733:         if ( hStmt )",
          "1734:         {",
          "1736:             {",
          "1737:                 printf( \"[%s]%s\\n\", szSqlState, szError );",
          "1738:             }",
          "",
          "[Removed Lines]",
          "1735:             while ( SQLError( hEnv, hDbc, hStmt, szSqlState, &nNativeError, szError, 500, &nErrorMsg ) == SQL_SUCCESS )",
          "",
          "[Added Lines]",
          "1735:             while ( SQL_SUCCEEDED( SQLError( hEnv, hDbc, hStmt, szSqlState, &nNativeError, szError, 500, &nErrorMsg )))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1741:         if ( hDbc )",
          "1742:         {",
          "1744:             {",
          "1745:                 printf( \"[%s]%s\\n\", szSqlState, szError );",
          "1746:             }",
          "",
          "[Removed Lines]",
          "1743:             while ( SQLError( hEnv, hDbc, 0, szSqlState, &nNativeError, szError, 500, &nErrorMsg ) == SQL_SUCCESS )",
          "",
          "[Added Lines]",
          "1743:             while ( SQL_SUCCEEDED( SQLError( hEnv, hDbc, 0, szSqlState, &nNativeError, szError, 500, &nErrorMsg )))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1749:         if ( hEnv )",
          "1750:         {",
          "1752:             {",
          "1753:                 printf( \"[%s]%s\\n\", szSqlState, szError );",
          "1754:             }",
          "",
          "[Removed Lines]",
          "1751:             while ( SQLError( hEnv, 0, 0, szSqlState, &nNativeError, szError, 500, &nErrorMsg ) == SQL_SUCCESS )",
          "",
          "[Added Lines]",
          "1751:             while ( SQL_SUCCEEDED( SQLError( hEnv, 0, 0, szSqlState, &nNativeError, szError, 500, &nErrorMsg )))",
          "",
          "---------------"
        ],
        "exe/iusql.c||exe/iusql.c": [
          "File: exe/iusql.c -> exe/iusql.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "49: int     bVerbose                    = 0;",
          "50: SQLHENV hEnv                        = 0;",
          "51: SQLHDBC hDbc                        = 0;",
          "53: void UWriteHeaderNormal( SQLHSTMT hStmt, SQLTCHAR *szSepLine );",
          "54: void UWriteFooterNormal( SQLHSTMT hStmt, SQLTCHAR *szSepLine, SQLLEN nRows );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52: int     buseED                      = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "138:                 case 'v':",
          "139:                     bVerbose = 1;",
          "140:                     break;",
          "141:                 case '-':",
          "142:                     printf( \"unixODBC \" VERSION \"\\n\" );",
          "143:                     exit(0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "142:                 case 'e':",
          "143:                     buseED = 1;",
          "144:                     break;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "392:         return 0;",
          "393:     }",
          "413:     }",
          "420:     }",
          "422:     do",
          "",
          "[Removed Lines]",
          "395:     if ( SQLPrepare( hStmt, szUcSQL, SQL_NTS ) != SQL_SUCCESS )",
          "396:     {",
          "397:         if ( bVerbose ) DumpODBCLog( hEnv, hDbc, hStmt );",
          "398:         fprintf( stderr, \"[ISQL]ERROR: Could not SQLPrepare\\n\" );",
          "399:         SQLFreeStmt( hStmt, SQL_DROP );",
          "400:         return 0;",
          "401:     }",
          "403:     ret =  SQLExecute( hStmt );",
          "405:     if ( ret == SQL_NO_DATA )",
          "406:     {",
          "407:         fprintf( stderr, \"[ISQL]INFO: SQLExecute returned SQL_NO_DATA\\n\" );",
          "408:     }",
          "409:     else if ( ret == SQL_SUCCESS_WITH_INFO )",
          "410:     {",
          "411:         if ( bVerbose ) DumpODBCLog( hEnv, hDbc, hStmt );",
          "412:         fprintf( stderr, \"[ISQL]INFO: SQLExecute returned SQL_SUCCESS_WITH_INFO\\n\" );",
          "414:     else if ( ret != SQL_SUCCESS )",
          "415:     {",
          "416:         if ( bVerbose ) DumpODBCLog( hEnv, hDbc, hStmt );",
          "417:         fprintf( stderr, \"[ISQL]ERROR: Could not SQLExecute\\n\" );",
          "418:         SQLFreeStmt( hStmt, SQL_DROP );",
          "419:         return 0;",
          "",
          "[Added Lines]",
          "399:     if ( buseED ) {",
          "400:         ret = SQLExecDirect( hStmt, szUcSQL, SQL_NTS );",
          "402:         if ( ret == SQL_NO_DATA )",
          "403:         {",
          "404:             fprintf( stderr, \"[ISQL]INFO: SQLExecDirect returned SQL_NO_DATA\\n\" );",
          "405:         }",
          "406:         else if ( ret == SQL_SUCCESS_WITH_INFO )",
          "407:         {",
          "408:             if ( bVerbose ) DumpODBCLog( hEnv, hDbc, hStmt );",
          "409:             fprintf( stderr, \"[ISQL]INFO: SQLExecDirect returned SQL_SUCCESS_WITH_INFO\\n\" );",
          "410:         }",
          "411:         else if ( ret != SQL_SUCCESS )",
          "412:         {",
          "413:             if ( bVerbose ) DumpODBCLog( hEnv, hDbc, hStmt );",
          "414:             fprintf( stderr, \"[ISQL]ERROR: Could not SQLExecDirect\\n\" );",
          "415:             SQLFreeStmt( hStmt, SQL_DROP );",
          "416:             free(szSepLine);",
          "417:             return 0;",
          "418:         }",
          "420:     else {",
          "421:         if ( SQLPrepare( hStmt, szUcSQL, SQL_NTS ) != SQL_SUCCESS )",
          "422:         {",
          "423:             if ( bVerbose ) DumpODBCLog( hEnv, hDbc, hStmt );",
          "424:             fprintf( stderr, \"[ISQL]ERROR: Could not SQLPrepare\\n\" );",
          "425:             SQLFreeStmt( hStmt, SQL_DROP );",
          "426:             return 0;",
          "427:         }",
          "429:         ret =  SQLExecute( hStmt );",
          "431:         if ( ret == SQL_NO_DATA )",
          "432:         {",
          "433:             fprintf( stderr, \"[ISQL]INFO: SQLExecute returned SQL_NO_DATA\\n\" );",
          "434:         }",
          "435:         else if ( ret == SQL_SUCCESS_WITH_INFO )",
          "436:         {",
          "437:             if ( bVerbose ) DumpODBCLog( hEnv, hDbc, hStmt );",
          "438:             fprintf( stderr, \"[ISQL]INFO: SQLExecute returned SQL_SUCCESS_WITH_INFO\\n\" );",
          "439:         }",
          "440:         else if ( ret != SQL_SUCCESS )",
          "441:         {",
          "442:             if ( bVerbose ) DumpODBCLog( hEnv, hDbc, hStmt );",
          "443:             fprintf( stderr, \"[ISQL]ERROR: Could not SQLExecute\\n\" );",
          "444:             SQLFreeStmt( hStmt, SQL_DROP );",
          "445:             return 0;",
          "446:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6ebf06767e398dc0b7d4aa090e20f7814c2ae383",
      "candidate_info": {
        "commit_hash": "6ebf06767e398dc0b7d4aa090e20f7814c2ae383",
        "repo": "lurcher/unixODBC",
        "commit_url": "https://github.com/lurcher/unixODBC/commit/6ebf06767e398dc0b7d4aa090e20f7814c2ae383",
        "files": [
          "AUTHORS",
          "ChangeLog",
          "configure.ac",
          "exe/isql.c",
          "exe/iusql.c"
        ],
        "message": "Move to 2.3.8pre and add editline support",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "exe/isql.c||exe/isql.c",
          "exe/iusql.c||exe/iusql.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "exe/iusql.c||exe/iusql.c"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "exe/iusql.c||exe/iusql.c"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Process this file with autoconf to produce a configure script.",
          "4: AM_INIT_AUTOMAKE",
          "6: dnl Checks for programs.",
          "",
          "[Removed Lines]",
          "3: AC_INIT([unixODBC], [2.3.7], nick@unixodbc.org, [unixODBC])",
          "",
          "[Added Lines]",
          "3: AC_INIT([unixODBC], [2.3.8pre], nick@unixodbc.org, [unixODBC])",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:     esac],[readline=true])",
          "46: [  --enable-inicaching     build with ini file caching  support [default=yes]],",
          "47: [ case \"${enableval}\" in",
          "48:     yes) inicaching=true ;;",
          "",
          "[Removed Lines]",
          "45: AC_ARG_ENABLE( inicaching,",
          "",
          "[Added Lines]",
          "45: AC_ARG_ENABLE( editline,",
          "46: [  --enable-editline       build with editline  support [default=no]],",
          "47: [ case \"${enableval}\" in",
          "48:     yes) editline=true ;;",
          "49:     no) editline=false ;;",
          "51:     esac],[editline=false])",
          "53: AC_ARG_ENABLE( inicaching,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "235: AC_CHECK_LIB(m, pow, [ LIBADD_POW=\"-lm\" ], )",
          "236: AC_SUBST(LIBADD_POW)",
          "238: have_readline=\"no\"",
          "240: if test \"x$readline\" = \"xtrue\"; then",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "246: have_editline=\"no\"",
          "248: if test \"x$editline\" = \"xtrue\"; then",
          "249:   AC_CHECK_LIB_NOC(edit, readline,",
          "250:   [",
          "251:       READLINE=-ledit",
          "252:       have_editline=\"yes\"",
          "253:   ],",
          "254:   [",
          "255:       dnl try with -lcurses",
          "256:       AC_CHECK_LIB_NOC(edit, readline,",
          "257:       [",
          "258:           READLINE=\"-ledit -lcurses\"",
          "259:           have_editline=\"yes\"",
          "260:       ],",
          "261:       [",
          "262:       ],",
          "263:       -lcurses )",
          "264:   ])",
          "266:   if test \"x$have_editline\" = \"xyes\"; then",
          "267:       AC_CHECK_HEADERS(editline/readline.h, [AC_DEFINE([HAVE_EDITLINE], [1], [Add editline support])])",
          "268:       readline=false",
          "269:   fi",
          "270: fi",
          "",
          "---------------"
        ],
        "exe/isql.c||exe/isql.c": [
          "File: exe/isql.c -> exe/isql.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "17:     #include <readline/readline.h>",
          "18:     #include <readline/history.h>",
          "19: #endif",
          "21: #ifdef HAVE_SETLOCALE",
          "22:     #ifdef HAVE_LOCALE_H",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: #ifdef HAVE_EDITLINE",
          "21:     #include <editline/readline.h>",
          "22: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74:     int     line_buffer_size = 9000;",
          "75:     int     bufpos,linen;",
          "76:     char    prompt[24];",
          "80:     rlhistory = strdup(getenv(\"HOME\"));",
          "",
          "[Removed Lines]",
          "77: #ifdef HAVE_READLINE",
          "",
          "[Added Lines]",
          "80: #if defined(HAVE_EDITLINE) || defined(HAVE_READLINE)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "254:         if ( !bBatch )",
          "255:         {",
          "257:             line=readline( prompt );",
          "259:             {",
          "",
          "[Removed Lines]",
          "256: #ifdef HAVE_READLINE",
          "",
          "[Added Lines]",
          "259: #if defined(HAVE_EDITLINE) || defined(HAVE_READLINE)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "501:     write_history(rlhistory);",
          "502: #endif",
          "",
          "[Removed Lines]",
          "500: #ifdef HAVE_READLINE",
          "",
          "[Added Lines]",
          "503: #if defined(HAVE_EDITLINE) || defined(HAVE_READLINE)",
          "",
          "---------------"
        ],
        "exe/iusql.c||exe/iusql.c": [
          "File: exe/iusql.c -> exe/iusql.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:     #include <readline/readline.h>",
          "20:     #include <readline/history.h>",
          "21: #endif",
          "23: #ifdef HAVE_SETLOCALE",
          "24:     #ifdef HAVE_LOCALE_H",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #ifdef HAVE_EDITLINE",
          "23:     #include <editline/readline.h>",
          "24: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "199:     do",
          "200:     {",
          "201:         if ( !bBatch )",
          "203:             printf( \"SQL> \" );",
          "204: #else",
          "205:         {",
          "",
          "[Removed Lines]",
          "202: #ifndef HAVE_READLINE",
          "",
          "[Added Lines]",
          "205: #if !defined(HAVE_EDITLINE) && !defined(HAVE_READLINE)",
          "",
          "---------------"
        ]
      }
    }
  ]
}