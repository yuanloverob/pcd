{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "836344c90ed139f2e18bbcfb18d0ff2e2e42da81",
      "candidate_info": {
        "commit_hash": "836344c90ed139f2e18bbcfb18d0ff2e2e42da81",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/836344c90ed139f2e18bbcfb18d0ff2e2e42da81",
        "files": [
          "doc/api/child_processes.markdown",
          "lib/child_process.js"
        ],
        "message": "Add disconnect method to forked child processes\n\nThis disconnect method allows the child to exit gracefully.\nThis also adds a disconnect event and connect property.",
        "before_after_code_files": [
          "lib/child_process.js||lichild_process.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/child_process.js||lichild_process.js": [
          "File: lib/child_process.js -> lichild_process.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:     }",
          "86:   }",
          "88:   channel.onread = function(pool, offset, length, recvHandle) {",
          "89:     if (recvHandle && setSimultaneousAccepts) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "117:         start = i + 1;",
          "118:       }",
          "119:       jsonBuffer = jsonBuffer.slice(start);",
          "121:     } else {",
          "124:     }",
          "125:   };",
          "",
          "[Removed Lines]",
          "122:       channel.close();",
          "123:       target._channel = null;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "129:       throw new TypeError('message cannot be undefined');",
          "130:     }",
          "135:     if (channel.writeQueueSize > 1024 * 1024) {",
          "",
          "[Removed Lines]",
          "132:     if (!target._channel) throw new Error(\"channel closed\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "154:     return true;",
          "155:   };",
          "157:   channel.readStart();",
          "158: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "202:   if (!options.thread) setupChannel(child, options.stdinStream);",
          "210:   return child;",
          "211: };",
          "",
          "[Removed Lines]",
          "204:   child.on('exit', function() {",
          "205:     if (child._channel) {",
          "206:       child._channel.close();",
          "207:     }",
          "208:   });",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8a413b076eb3ad83e4445d54e78e238d1d09912c",
      "candidate_info": {
        "commit_hash": "8a413b076eb3ad83e4445d54e78e238d1d09912c",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/8a413b076eb3ad83e4445d54e78e238d1d09912c",
        "files": [
          "deps/uv/src/win/fs.c",
          "deps/uv/test/test-fs.c",
          "deps/uv/test/test-list.h"
        ],
        "message": "uv: upgrade to 3f1bad2",
        "before_after_code_files": [
          "deps/uv/src/win/fs.c||deps/uv/src/win/fs.c",
          "deps/uv/test/test-fs.c||deps/uv/test/test-fs.c",
          "deps/uv/test/test-list.h||deps/uv/test/test-list.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/src/win/fs.c||deps/uv/src/win/fs.c": [
          "File: deps/uv/src/win/fs.c -> deps/uv/src/win/fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "489: }",
          "492: void fs__stat(uv_fs_t* req, const wchar_t* path) {",
          "493:   HANDLE file;",
          "494:   WIN32_FIND_DATAW ent;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "492: #define IS_SLASH(c) \\",
          "493:   ((wchar_t) c == L'/' || (wchar_t) c == L'\\\\')",
          "494: #define IS_COLON(c) \\",
          "495:   ((wchar_t) c == L':')",
          "496: #define IS_LETTER(c) \\",
          "497:   ((((wchar_t) c >= L'a') && ((wchar_t) c <= L'z')) || \\",
          "498:    (((wchar_t) c >= L'A') && ((wchar_t) c <= L'Z')))",
          "499: #define IS_QUESTION(c) \\",
          "500:   ((wchar_t) c == L'?')",
          "503: static int uv__count_slash_separated_words(const wchar_t* pos,",
          "504:                                            const wchar_t* end,",
          "505:                                            int limit) {",
          "506:   char last_was_slash = 1, count = 0;",
          "508:   for (; pos < end; pos++) {",
          "509:     if (IS_SLASH(*pos)) {",
          "511:       if (last_was_slash) {",
          "512:         return 0;",
          "513:       } else {",
          "514:         last_was_slash = 1;",
          "515:       }",
          "516:     } else {",
          "517:       if (last_was_slash) {",
          "519:         count++;",
          "520:         if (count > limit) {",
          "521:           return -1;",
          "522:         }",
          "523:         last_was_slash = 0;",
          "524:       }",
          "525:     }",
          "526:   }",
          "528:   return count;",
          "529: }",
          "540: static int uv__is_root(const wchar_t* path) {",
          "541:   size_t len = wcslen(path);",
          "544:   if (len == 0 && IS_SLASH(path[0])) {",
          "545:     return 1;",
          "546:   }",
          "548:   if (len < 3) {",
          "549:     return 0;",
          "550:   }",
          "553:   if (IS_LETTER(path[0]) && IS_COLON(path[1]) && IS_SLASH(path[2])) {",
          "554:     return 1;",
          "555:   }",
          "557:   if (!IS_SLASH(path[0]) || !IS_SLASH(path[1])) {",
          "558:     return 0;",
          "559:   }",
          "562:   if (!IS_QUESTION(path[2])) {",
          "563:     return uv__count_slash_separated_words(path + 2, path + len, 2) == 2;",
          "564:   }",
          "566:   if (!IS_SLASH(path[3])) {",
          "567:     return 0;",
          "568:   }",
          "570:   if ((len == 6 || len == 7) &&",
          "571:       IS_LETTER(path[4]) && IS_COLON(path[5]) &&",
          "572:       (len == 6 || IS_SLASH(path[6]))) {",
          "573:     return 1;",
          "574:   }",
          "577:   if (len >= 8 &&",
          "578:       (path[4] == L'u' || path[4] == L'U') &&",
          "579:       (path[5] == L'n' || path[5] == L'N') &&",
          "580:       (path[6] == L'c' || path[6] == L'C') &&",
          "581:       IS_SLASH(path[7])) {",
          "582:     return uv__count_slash_separated_words(path + 8, path + len, 2) == 2;",
          "583:   }",
          "585:   return 0;",
          "586: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "497:   req->ptr = NULL;",
          "499:   file = FindFirstFileExW(path, FindExInfoStandard, &ent,",
          "500:     FindExSearchNameMatch, NULL, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "596:   if (uv__is_root(path)) {",
          "599:     DWORD drive_type = GetDriveTypeW(path);",
          "600:     if (drive_type == DRIVE_UNKNOWN || drive_type == DRIVE_NO_ROOT_DIR) {",
          "601:       req->last_error = ERROR_PATH_NOT_FOUND;",
          "602:       req->errorno = UV_ENOENT;",
          "603:       req->result = -1;",
          "604:       return;",
          "605:     }",
          "607:     memset(&req->stat, 0, sizeof req->stat);",
          "609:     req->stat.st_nlink = 1;",
          "610:     req->stat.st_mode = ((_S_IREAD|_S_IWRITE) + ((_S_IREAD|_S_IWRITE) >> 3) +",
          "611:         ((_S_IREAD|_S_IWRITE) >> 6)) | S_IFDIR;",
          "613:     req->last_error = ERROR_SUCCESS;",
          "614:     req->errorno = UV_OK;",
          "615:     req->result = 0;",
          "616:     req->ptr = &req->stat;",
          "617:     return;",
          "618:   }",
          "",
          "---------------"
        ],
        "deps/uv/test/test-fs.c||deps/uv/test/test-fs.c": [
          "File: deps/uv/test/test-fs.c -> deps/uv/test/test-fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "453: TEST_IMPL(fs_file_nametoolong) {",
          "454:   uv_fs_t req;",
          "455:   int r;",
          "457:   loop = uv_default_loop();",
          "460:   memset(name, 'a', TOO_LONG_NAME_LENGTH);",
          "461:   name[TOO_LONG_NAME_LENGTH] = 0;",
          "",
          "[Removed Lines]",
          "459:   char name[TOO_LONG_NAME_LENGTH + 1];",
          "",
          "[Added Lines]",
          "456:   char name[TOO_LONG_NAME_LENGTH + 1];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1288: }",
          "1291: TEST_IMPL(fs_futime) {",
          "1292:   utime_check_t checkme;",
          "1293:   const char* path = \"test_file\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1291: #ifdef _WIN32",
          "1292: TEST_IMPL(fs_stat_root) {",
          "1293:   int r;",
          "1294:   uv_loop_t* loop = uv_default_loop();",
          "1296:   r = uv_fs_stat(loop, &stat_req, \"c:\\\\\", NULL);",
          "1297:   ASSERT(r == 0);",
          "1299:   r = uv_fs_stat(loop, &stat_req, \"\\\\\\\\?\\\\C:\\\\\", NULL);",
          "1300:   ASSERT(r == 0);",
          "1302:   return 0;",
          "1303: }",
          "1304: #endif",
          "",
          "---------------"
        ],
        "deps/uv/test/test-list.h||deps/uv/test/test-list.h": [
          "File: deps/uv/test/test-list.h -> deps/uv/test/test-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "134: TEST_DECLARE   (environment_creation)",
          "135: TEST_DECLARE   (listen_with_simultaneous_accepts)",
          "136: TEST_DECLARE   (listen_no_simultaneous_accepts)",
          "137: #endif",
          "138: HELPER_DECLARE (tcp4_echo_server)",
          "139: HELPER_DECLARE (tcp6_echo_server)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "137: TEST_DECLARE   (fs_stat_root)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "267:   TEST_ENTRY  (environment_creation)",
          "268:   TEST_ENTRY  (listen_with_simultaneous_accepts)",
          "269:   TEST_ENTRY  (listen_no_simultaneous_accepts)",
          "270: #endif",
          "272:   TEST_ENTRY  (fs_file_noent)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "271:   TEST_ENTRY  (fs_stat_root)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6b26583e8450e837886b84610305698fa447fa7e",
      "candidate_info": {
        "commit_hash": "6b26583e8450e837886b84610305698fa447fa7e",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/6b26583e8450e837886b84610305698fa447fa7e",
        "files": [
          "deps/v8/build/common.gypi",
          "deps/v8/src/arm/full-codegen-arm.cc",
          "deps/v8/src/arm/lithium-codegen-arm.cc",
          "deps/v8/src/arm/macro-assembler-arm.cc",
          "deps/v8/src/hydrogen.cc",
          "deps/v8/src/ia32/full-codegen-ia32.cc",
          "deps/v8/src/ia32/lithium-codegen-ia32.cc",
          "deps/v8/src/list.h",
          "deps/v8/src/mips/full-codegen-mips.cc",
          "deps/v8/src/mips/lithium-codegen-mips.cc",
          "deps/v8/src/mips/macro-assembler-mips.cc",
          "deps/v8/src/objects.cc",
          "deps/v8/src/profile-generator.cc",
          "deps/v8/src/runtime.cc",
          "deps/v8/src/splay-tree.h",
          "deps/v8/src/version.cc",
          "deps/v8/src/x64/full-codegen-x64.cc",
          "deps/v8/src/x64/lithium-codegen-x64.cc",
          "deps/v8/test/mjsunit/regress/regress-115100.js",
          "deps/v8/test/mjsunit/regress/regress-133211.js",
          "deps/v8/test/mjsunit/regress/regress-133211b.js",
          "deps/v8/tools/gen-postmortem-metadata.py"
        ],
        "message": "v8: upgrade to v3.11.10.10",
        "before_after_code_files": [
          "deps/v8/build/common.gypi||deps/v8/build/common.gypi",
          "deps/v8/src/arm/full-codegen-arm.cc||deps/v8/src/arm/full-codegen-arm.cc",
          "deps/v8/src/arm/lithium-codegen-arm.cc||deps/v8/src/arm/lithium-codegen-arm.cc",
          "deps/v8/src/arm/macro-assembler-arm.cc||deps/v8/src/arm/macro-assembler-arm.cc",
          "deps/v8/src/hydrogen.cc||deps/v8/src/hydrogen.cc",
          "deps/v8/src/ia32/full-codegen-ia32.cc||deps/v8/src/ia32/full-codegen-ia32.cc",
          "deps/v8/src/ia32/lithium-codegen-ia32.cc||deps/v8/src/ia32/lithium-codegen-ia32.cc",
          "deps/v8/src/list.h||deps/v8/src/list.h",
          "deps/v8/src/mips/full-codegen-mips.cc||deps/v8/src/mips/full-codegen-mips.cc",
          "deps/v8/src/mips/lithium-codegen-mips.cc||deps/v8/src/mips/lithium-codegen-mips.cc",
          "deps/v8/src/mips/macro-assembler-mips.cc||deps/v8/src/mips/macro-assembler-mips.cc",
          "deps/v8/src/objects.cc||deps/v8/src/objects.cc",
          "deps/v8/src/profile-generator.cc||deps/v8/src/profile-generator.cc",
          "deps/v8/src/runtime.cc||deps/v8/src/runtime.cc",
          "deps/v8/src/splay-tree.h||deps/v8/src/splay-tree.h",
          "deps/v8/src/version.cc||deps/v8/src/version.cc",
          "deps/v8/src/x64/full-codegen-x64.cc||deps/v8/src/x64/full-codegen-x64.cc",
          "deps/v8/src/x64/lithium-codegen-x64.cc||deps/v8/src/x64/lithium-codegen-x64.cc",
          "deps/v8/test/mjsunit/regress/regress-115100.js||deps/v8/test/mjsunit/regress/regress-115100.js",
          "deps/v8/test/mjsunit/regress/regress-133211.js||deps/v8/test/mjsunit/regress/regress-133211.js",
          "deps/v8/test/mjsunit/regress/regress-133211b.js||deps/v8/test/mjsunit/regress/regress-133211b.js",
          "deps/v8/tools/gen-postmortem-metadata.py||deps/v8/tools/gen-postmortem-metadata.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/build/common.gypi||deps/v8/build/common.gypi": [
          "File: deps/v8/build/common.gypi -> deps/v8/build/common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "239:           'WIN32',",
          "240:         ],",
          "241:         'msvs_configuration_attributes': {",
          "242:           'IntermediateDirectory': '$(OutDir)\\\\obj\\\\$(ProjectName)',",
          "243:           'CharacterSet': '1',",
          "244:         },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "242:           'OutputDirectory': '<(DEPTH)\\\\build\\\\$(ConfigurationName)',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "270:         'target_conditions': [",
          "271:           ['_toolset==\"host\"', {",
          "272:             'variables': {",
          "274:             },",
          "275:             'cflags': [ '<(m32flag)' ],",
          "276:             'ldflags': [ '<(m32flag)' ],",
          "",
          "[Removed Lines]",
          "273:               'm32flag': '<!((echo | $(echo ${CXX_host:-$(which g++)}) -m32 -E - > /dev/null 2>&1) && echo \"-m32\" || true)',",
          "",
          "[Added Lines]",
          "274:               'm32flag': '<!((echo | $(echo ${CXX_host:-$(which g++)}) -m32 -E - > /dev/null 2>&1) && echo -n \"-m32\" || true)',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "280:           }],",
          "281:           ['_toolset==\"target\"', {",
          "282:             'variables': {",
          "284:             },",
          "285:             'cflags': [ '<(m32flag)' ],",
          "286:             'ldflags': [ '<(m32flag)' ],",
          "",
          "[Removed Lines]",
          "283:               'm32flag': '<!((echo | $(echo ${CXX_target:-${CXX:-$(which g++)}}) -m32 -E - > /dev/null 2>&1) && echo \"-m32\" || true)',",
          "",
          "[Added Lines]",
          "284:               'm32flag': '<!((echo | $(echo ${CXX_target:-${CXX:-$(which g++)}}) -m32 -E - > /dev/null 2>&1) && echo -n \"-m32\" || true)',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "323:         },",
          "324:         'conditions': [",
          "325:           ['OS==\"linux\" or OS==\"freebsd\" or OS==\"openbsd\" or OS==\"netbsd\"', {",
          "327:                         '-Wnon-virtual-dtor', '-Woverloaded-virtual' ],",
          "328:           }],",
          "329:         ],",
          "",
          "[Removed Lines]",
          "326:             'cflags': [ '-Wno-unused-parameter',",
          "",
          "[Added Lines]",
          "327:             'cflags': [ '-Wall', '<(werror)', '-W', '-Wno-unused-parameter',",
          "",
          "---------------"
        ],
        "deps/v8/src/arm/full-codegen-arm.cc||deps/v8/src/arm/full-codegen-arm.cc": [
          "File: deps/v8/src/arm/full-codegen-arm.cc -> deps/v8/src/arm/full-codegen-arm.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "328:   }",
          "329:   if (isolate()->IsDebuggerActive()) {",
          "332:   }",
          "333:   __ mov(r2, Operand(profiling_counter_));",
          "334:   __ mov(r3, Operand(Smi::FromInt(reset_value)));",
          "",
          "[Removed Lines]",
          "331:     reset_value = FLAG_interrupt_budget >> 4;",
          "",
          "[Added Lines]",
          "331:     reset_value = 10;",
          "",
          "---------------"
        ],
        "deps/v8/src/arm/lithium-codegen-arm.cc||deps/v8/src/arm/lithium-codegen-arm.cc": [
          "File: deps/v8/src/arm/lithium-codegen-arm.cc -> deps/v8/src/arm/lithium-codegen-arm.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2594:   } else {",
          "2598:     Heap* heap = type->GetHeap();",
          "2602:       __ ldr(result, FieldMemOperand(result, HeapObject::kMapOffset));",
          "2604:       DeoptimizeIf(ne, env);",
          "2606:     }",
          "2607:     __ LoadRoot(result, Heap::kUndefinedValueRootIndex);",
          "2608:   }",
          "",
          "[Removed Lines]",
          "2597:     HeapObject* current = HeapObject::cast((*type)->prototype());",
          "2599:     while (current != heap->null_value()) {",
          "2600:       Handle<HeapObject> link(current);",
          "2601:       __ LoadHeapObject(result, link);",
          "2603:       __ cmp(result, Operand(Handle<Map>(JSObject::cast(current)->map())));",
          "2605:       current = HeapObject::cast(current->map()->prototype());",
          "",
          "[Added Lines]",
          "2597:     Handle<HeapObject> current(HeapObject::cast((*type)->prototype()));",
          "2599:     while (*current != heap->null_value()) {",
          "2600:       __ LoadHeapObject(result, current);",
          "2602:       __ cmp(result, Operand(Handle<Map>(current->map())));",
          "2604:       current =",
          "2605:           Handle<HeapObject>(HeapObject::cast(current->map()->prototype()));",
          "",
          "---------------"
        ],
        "deps/v8/src/arm/macro-assembler-arm.cc||deps/v8/src/arm/macro-assembler-arm.cc": [
          "File: deps/v8/src/arm/macro-assembler-arm.cc -> deps/v8/src/arm/macro-assembler-arm.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2878:                  Context::SlotOffset(Context::JS_ARRAY_MAPS_INDEX)));",
          "2879:   size_t offset = expected_kind * kPointerSize +",
          "2880:       FixedArrayBase::kHeaderSize;",
          "2882:   b(ne, no_map_match);",
          "",
          "[Removed Lines]",
          "2881:   cmp(map_in_out, scratch);",
          "",
          "[Added Lines]",
          "2881:   ldr(ip, FieldMemOperand(scratch, offset));",
          "2882:   cmp(map_in_out, ip);",
          "",
          "---------------"
        ],
        "deps/v8/src/hydrogen.cc||deps/v8/src/hydrogen.cc": [
          "File: deps/v8/src/hydrogen.cc -> deps/v8/src/hydrogen.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "4702:     Object* proto = type->prototype();",
          "4704:     LookupResult proto_result(isolate());",
          "",
          "[Removed Lines]",
          "4701:   if (!lookup->IsProperty()) {",
          "",
          "[Added Lines]",
          "4701:   if (!lookup->IsProperty() && type->prototype()->IsJSReceiver()) {",
          "",
          "---------------"
        ],
        "deps/v8/src/ia32/full-codegen-ia32.cc||deps/v8/src/ia32/full-codegen-ia32.cc": [
          "File: deps/v8/src/ia32/full-codegen-ia32.cc -> deps/v8/src/ia32/full-codegen-ia32.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "318:     reset_value = Smi::kMaxValue;",
          "319:   }",
          "320:   __ mov(ebx, Immediate(profiling_counter_));",
          "321:   __ mov(FieldOperand(ebx, JSGlobalPropertyCell::kValueOffset),",
          "322:          Immediate(Smi::FromInt(reset_value)));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "320:   if (isolate()->IsDebuggerActive()) {",
          "322:     reset_value = 10;",
          "323:   }",
          "",
          "---------------"
        ],
        "deps/v8/src/ia32/lithium-codegen-ia32.cc||deps/v8/src/ia32/lithium-codegen-ia32.cc": [
          "File: deps/v8/src/ia32/lithium-codegen-ia32.cc -> deps/v8/src/ia32/lithium-codegen-ia32.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2325:   } else {",
          "2329:     Heap* heap = type->GetHeap();",
          "2333:       __ cmp(FieldOperand(result, HeapObject::kMapOffset),",
          "2335:       DeoptimizeIf(not_equal, env);",
          "2337:     }",
          "2338:     __ mov(result, factory()->undefined_value());",
          "2339:   }",
          "",
          "[Removed Lines]",
          "2328:     HeapObject* current = HeapObject::cast((*type)->prototype());",
          "2330:     while (current != heap->null_value()) {",
          "2331:       Handle<HeapObject> link(current);",
          "2332:       __ LoadHeapObject(result, link);",
          "2334:                           Handle<Map>(JSObject::cast(current)->map()));",
          "2336:       current = HeapObject::cast(current->map()->prototype());",
          "",
          "[Added Lines]",
          "2328:     Handle<HeapObject> current(HeapObject::cast((*type)->prototype()));",
          "2330:     while (*current != heap->null_value()) {",
          "2331:       __ LoadHeapObject(result, current);",
          "2333:                           Handle<Map>(current->map()));",
          "2335:       current =",
          "2336:           Handle<HeapObject>(HeapObject::cast(current->map()->prototype()));",
          "",
          "---------------"
        ],
        "deps/v8/src/list.h||deps/v8/src/list.h": [
          "File: deps/v8/src/list.h -> deps/v8/src/list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:     AllocationPolicy::Delete(p);",
          "75:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "78:   INLINE(void operator delete(void* p, AllocationPolicy allocator)) {",
          "79:     UNREACHABLE();",
          "80:   }",
          "",
          "---------------"
        ],
        "deps/v8/src/mips/full-codegen-mips.cc||deps/v8/src/mips/full-codegen-mips.cc": [
          "File: deps/v8/src/mips/full-codegen-mips.cc -> deps/v8/src/mips/full-codegen-mips.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "332:   }",
          "333:   if (isolate()->IsDebuggerActive()) {",
          "336:   }",
          "337:   __ li(a2, Operand(profiling_counter_));",
          "338:   __ li(a3, Operand(Smi::FromInt(reset_value)));",
          "",
          "[Removed Lines]",
          "335:     reset_value = FLAG_interrupt_budget >> 4;",
          "",
          "[Added Lines]",
          "335:     reset_value = 10;",
          "",
          "---------------"
        ],
        "deps/v8/src/mips/lithium-codegen-mips.cc||deps/v8/src/mips/lithium-codegen-mips.cc": [
          "File: deps/v8/src/mips/lithium-codegen-mips.cc -> deps/v8/src/mips/lithium-codegen-mips.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2338:   } else {",
          "2342:     Heap* heap = type->GetHeap();",
          "2346:       __ lw(result, FieldMemOperand(result, HeapObject::kMapOffset));",
          "2350:     }",
          "2351:     __ LoadRoot(result, Heap::kUndefinedValueRootIndex);",
          "2352:   }",
          "",
          "[Removed Lines]",
          "2341:     HeapObject* current = HeapObject::cast((*type)->prototype());",
          "2343:     while (current != heap->null_value()) {",
          "2344:       Handle<HeapObject> link(current);",
          "2345:       __ LoadHeapObject(result, link);",
          "2347:       DeoptimizeIf(ne, env,",
          "2348:           result, Operand(Handle<Map>(JSObject::cast(current)->map())));",
          "2349:       current = HeapObject::cast(current->map()->prototype());",
          "",
          "[Added Lines]",
          "2341:     Handle<HeapObject> current(HeapObject::cast((*type)->prototype()));",
          "2343:     while (*current != heap->null_value()) {",
          "2344:       __ LoadHeapObject(result, current);",
          "2346:       DeoptimizeIf(ne, env, result, Operand(Handle<Map>(current->map())));",
          "2347:       current =",
          "2348:           Handle<HeapObject>(HeapObject::cast(current->map()->prototype()));",
          "",
          "---------------"
        ],
        "deps/v8/src/mips/macro-assembler-mips.cc||deps/v8/src/mips/macro-assembler-mips.cc": [
          "File: deps/v8/src/mips/macro-assembler-mips.cc -> deps/v8/src/mips/macro-assembler-mips.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "4459:                 Context::SlotOffset(Context::JS_ARRAY_MAPS_INDEX)));",
          "4460:   size_t offset = expected_kind * kPointerSize +",
          "4461:       FixedArrayBase::kHeaderSize;",
          "4466:   offset = transitioned_kind * kPointerSize +",
          "",
          "[Removed Lines]",
          "4462:   lw(at, FieldMemOperand(scratch, offset));",
          "4463:   Branch(no_map_match, ne, map_in_out, Operand(at));",
          "",
          "[Added Lines]",
          "4462:   Branch(no_map_match, ne, map_in_out, Operand(scratch));",
          "",
          "---------------"
        ],
        "deps/v8/src/objects.cc||deps/v8/src/objects.cc": [
          "File: deps/v8/src/objects.cc -> deps/v8/src/objects.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "7388:             } else {",
          "7389:               keep_entry = true;",
          "7390:             }",
          "7392:             keep_entry = true;",
          "7393:           }",
          "7394:         } else {",
          "",
          "[Removed Lines]",
          "7391:           } else if (!getter->IsTheHole()) {",
          "",
          "[Added Lines]",
          "7391:           } else if (!setter->IsTheHole()) {",
          "",
          "---------------"
        ],
        "deps/v8/src/profile-generator.cc||deps/v8/src/profile-generator.cc": [
          "File: deps/v8/src/profile-generator.cc -> deps/v8/src/profile-generator.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2692:     Object* obj_document;",
          "2693:     if (global_obj->GetProperty(*document_string)->ToObject(&obj_document) &&",
          "2694:         obj_document->IsJSObject()) {",
          "2695:       JSObject* document = JSObject::cast(obj_document);",
          "2696:       Object* obj_url;",
          "2697:       if (document->GetProperty(*url_string)->ToObject(&obj_url) &&",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2697:       if (!Isolate::Current()->context() && obj_document->IsJSGlobalProxy())",
          "2698:         continue;",
          "",
          "---------------"
        ],
        "deps/v8/src/runtime.cc||deps/v8/src/runtime.cc": [
          "File: deps/v8/src/runtime.cc -> deps/v8/src/runtime.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1123:     elms->set(IS_ACCESSOR_INDEX, heap->true_value());",
          "1125:     AccessorPair* accessors = AccessorPair::cast(result.GetCallbackObject());",
          "1128:     }",
          "1131:     }",
          "1132:   } else {",
          "1133:     elms->set(IS_ACCESSOR_INDEX, heap->false_value());",
          "",
          "[Removed Lines]",
          "1126:     if (CheckAccess(*obj, *name, &result, v8::ACCESS_GET)) {",
          "1127:       elms->set(GETTER_INDEX, accessors->GetComponent(ACCESSOR_GETTER));",
          "1129:     if (CheckAccess(*obj, *name, &result, v8::ACCESS_SET)) {",
          "1130:       elms->set(SETTER_INDEX, accessors->GetComponent(ACCESSOR_SETTER));",
          "",
          "[Added Lines]",
          "1126:     Object* getter = accessors->GetComponent(ACCESSOR_GETTER);",
          "1127:     if (!getter->IsMap() && CheckAccess(*obj, *name, &result, v8::ACCESS_GET)) {",
          "1128:       elms->set(GETTER_INDEX, getter);",
          "1130:     Object* setter = accessors->GetComponent(ACCESSOR_SETTER);",
          "1131:     if (!setter->IsMap() && CheckAccess(*obj, *name, &result, v8::ACCESS_SET)) {",
          "1132:       elms->set(SETTER_INDEX, setter);",
          "",
          "---------------"
        ],
        "deps/v8/src/splay-tree.h||deps/v8/src/splay-tree.h": [
          "File: deps/v8/src/splay-tree.h -> deps/v8/src/splay-tree.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:                             AllocationPolicy allocator = AllocationPolicy())) {",
          "67:     return allocator.New(static_cast<int>(size));",
          "68:   }",
          "70:     AllocationPolicy::Delete(p);",
          "71:   }",
          "",
          "[Removed Lines]",
          "69:   INLINE(void operator delete(void* p, size_t)) {",
          "",
          "[Added Lines]",
          "69:   INLINE(void operator delete(void* p)) {",
          "73:   INLINE(void operator delete(void* p, AllocationPolicy policy)) {",
          "74:     UNREACHABLE();",
          "75:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "119:     INLINE(void* operator new(size_t size, AllocationPolicy allocator)) {",
          "120:       return allocator.New(static_cast<int>(size));",
          "121:     }",
          "123:       return AllocationPolicy::Delete(p);",
          "124:     }",
          "126:     Key key() { return key_; }",
          "127:     Value value() { return value_; }",
          "",
          "[Removed Lines]",
          "122:     INLINE(void operator delete(void* p, size_t)) {",
          "",
          "[Added Lines]",
          "126:     INLINE(void operator delete(void* p)) {",
          "131:     INLINE(void operator delete(void* p, AllocationPolicy allocator)) {",
          "132:       UNREACHABLE();",
          "133:     }",
          "",
          "---------------"
        ],
        "deps/v8/src/version.cc||deps/v8/src/version.cc": [
          "File: deps/v8/src/version.cc -> deps/v8/src/version.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #define MAJOR_VERSION     3",
          "36: #define MINOR_VERSION     11",
          "37: #define BUILD_NUMBER      10",
          "41: #define IS_CANDIDATE_VERSION 0",
          "",
          "[Removed Lines]",
          "38: #define PATCH_LEVEL       0",
          "",
          "[Added Lines]",
          "38: #define PATCH_LEVEL       10",
          "",
          "---------------"
        ],
        "deps/v8/src/x64/full-codegen-x64.cc||deps/v8/src/x64/full-codegen-x64.cc": [
          "File: deps/v8/src/x64/full-codegen-x64.cc -> deps/v8/src/x64/full-codegen-x64.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "311:     reset_value = Smi::kMaxValue;",
          "312:   }",
          "313:   __ movq(rbx, profiling_counter_, RelocInfo::EMBEDDED_OBJECT);",
          "314:   __ movq(kScratchRegister,",
          "315:           reinterpret_cast<uint64_t>(Smi::FromInt(reset_value)),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "313:   if (isolate()->IsDebuggerActive()) {",
          "315:     reset_value = 10;",
          "316:   }",
          "",
          "---------------"
        ],
        "deps/v8/src/x64/lithium-codegen-x64.cc||deps/v8/src/x64/lithium-codegen-x64.cc": [
          "File: deps/v8/src/x64/lithium-codegen-x64.cc -> deps/v8/src/x64/lithium-codegen-x64.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2218:   } else {",
          "2222:     Heap* heap = type->GetHeap();",
          "2226:       __ Cmp(FieldOperand(result, HeapObject::kMapOffset),",
          "2228:       DeoptimizeIf(not_equal, env);",
          "2230:     }",
          "2231:     __ LoadRoot(result, Heap::kUndefinedValueRootIndex);",
          "2232:   }",
          "",
          "[Removed Lines]",
          "2221:     HeapObject* current = HeapObject::cast((*type)->prototype());",
          "2223:     while (current != heap->null_value()) {",
          "2224:       Handle<HeapObject> link(current);",
          "2225:       __ LoadHeapObject(result, link);",
          "2227:                           Handle<Map>(JSObject::cast(current)->map()));",
          "2229:       current = HeapObject::cast(current->map()->prototype());",
          "",
          "[Added Lines]",
          "2221:     Handle<HeapObject> current(HeapObject::cast((*type)->prototype()));",
          "2223:     while (*current != heap->null_value()) {",
          "2224:       __ LoadHeapObject(result, current);",
          "2226:                           Handle<Map>(current->map()));",
          "2228:       current =",
          "2229:           Handle<HeapObject>(HeapObject::cast(current->map()->prototype()));",
          "",
          "---------------"
        ],
        "deps/v8/test/mjsunit/regress/regress-115100.js||deps/v8/test/mjsunit/regress/regress-115100.js": [
          "File: deps/v8/test/mjsunit/regress/regress-115100.js -> deps/v8/test/mjsunit/regress/regress-115100.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: function foo(obj) { obj.prop = 0; }",
          "31: function mk() { return Object.create(null); }",
          "33: foo(mk());",
          "34: foo(mk());",
          "35: %OptimizeFunctionOnNextCall(foo);",
          "36: foo(mk());",
          "",
          "---------------"
        ],
        "deps/v8/test/mjsunit/regress/regress-133211.js||deps/v8/test/mjsunit/regress/regress-133211.js": [
          "File: deps/v8/test/mjsunit/regress/regress-133211.js -> deps/v8/test/mjsunit/regress/regress-133211.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: var o = {};",
          "31: var x = {};",
          "32: Object.defineProperty(o, \"foo\", { get: undefined });",
          "33: Object.defineProperty(x, \"foo\", { get: undefined, set: undefined });",
          "34: var pd = Object.getOwnPropertyDescriptor(o, \"foo\");",
          "35: assertEquals(undefined, pd.set);",
          "",
          "---------------"
        ],
        "deps/v8/test/mjsunit/regress/regress-133211b.js||deps/v8/test/mjsunit/regress/regress-133211b.js": [
          "File: deps/v8/test/mjsunit/regress/regress-133211b.js -> deps/v8/test/mjsunit/regress/regress-133211b.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: setter = function(x) { return; }",
          "31: var o = {};",
          "32: Object.defineProperty(o, \"foo\", { set: setter });",
          "33: var x = {};",
          "34: Object.defineProperty(x, \"foo\", { set: setter });",
          "35: x.bar = 20;",
          "36: x = {};",
          "37: gc();",
          "38: o.foo = 20;",
          "39: assertEquals(undefined, o.foo);",
          "",
          "---------------"
        ],
        "deps/v8/tools/gen-postmortem-metadata.py||deps/v8/tools/gen-postmortem-metadata.py": [
          "File: deps/v8/tools/gen-postmortem-metadata.py -> deps/v8/tools/gen-postmortem-metadata.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:     { 'name': 'SmiValueShift',          'value': 'kSmiTagSize' },",
          "79:     { 'name': 'PointerSizeLog2',        'value': 'kPointerSizeLog2' },",
          "83:     { 'name': 'prop_idx_first',",
          "84:         'value': 'DescriptorArray::kFirstIndex' },",
          "85:     { 'name': 'prop_type_field',",
          "",
          "[Removed Lines]",
          "81:     { 'name': 'prop_idx_transitions',",
          "82:         'value': 'DescriptorArray::kTransitionsIndex' },",
          "",
          "[Added Lines]",
          "81:     { 'name': 'prop_idx_content',",
          "82:         'value': 'DescriptorArray::kContentArrayIndex' },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7dffbaf2ced12751b73e433b12721efa8b38ad5d",
      "candidate_info": {
        "commit_hash": "7dffbaf2ced12751b73e433b12721efa8b38ad5d",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/7dffbaf2ced12751b73e433b12721efa8b38ad5d",
        "files": [
          "lib/http.js",
          "test/simple/test-http-connect.js",
          "test/simple/test-http-upgrade-agent.js"
        ],
        "message": "http: Upgrade/CONNECT request should detach its socket earlier\n\nWith Upgrade or CONNECT request, http.ClientRequest emits 'close' event\nafter its socket is closed. However, after receiving a response, the socket\nis not under management by the request.\n\nhttp.ClientRequest should detach the socket before 'upgrade'/'connect'\nevent is emitted to pass the socket to a user. After that, it should\nemit 'close' event immediately without waiting for closing of the socket.\n\nFixes #2510.",
        "before_after_code_files": [
          "lib/http.js||lihttp.js",
          "test/simple/test-http-connect.js||test/simple/test-http-connect.js",
          "test/simple/test-http-upgrade-agent.js||test/simple/test-http-upgrade-agent.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/http.js||lihttp.js": [
          "File: lib/http.js -> lihttp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1195:         var eventName = req.method === 'CONNECT' ? 'connect' : 'upgrade';",
          "1196:         if (req.listeners(eventName).length) {",
          "1197:           req.upgradeOrConnect = true;",
          "1199:           socket.emit('agentRemove');",
          "1200:         } else {",
          "1202:           socket.destroy();",
          "",
          "[Removed Lines]",
          "1198:           req.emit(eventName, res, socket, bodyHead);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1316:       }",
          "1317:       if (cb) { cb(); }",
          "1318:     } else {",
          "1320:         if (method) {",
          "1321:           self.socket[method].apply(self.socket, arguments_);",
          "1322:         }",
          "",
          "[Removed Lines]",
          "1319:       self.socket.on('connect', function() {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-http-connect.js||test/simple/test-http-connect.js": [
          "File: test/simple/test-http-connect.js -> test/simple/test-http-connect.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:   }, function(res) {",
          "54:     assert(false);",
          "55:   });",
          "56:   req.on('connect', function(res, socket, firstBodyChunk) {",
          "57:     common.debug('Client got CONNECT request');",
          "58:     clientGotConnect = true;",
          "60:     var data = firstBodyChunk.toString();",
          "61:     socket.on('data', function(buf) {",
          "62:       data += buf.toString();",
          "63:     });",
          "64:     socket.on('end', function() {",
          "65:       assert.equal(data, 'HeadBody');",
          "66:       server.close();",
          "67:     });",
          "68:     socket.write('Body');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57:   var clientRequestClosed = false;",
          "58:   req.on('close', function() {",
          "59:     clientRequestClosed = true;",
          "60:   });",
          "67:     var name = 'localhost:' + common.PORT;",
          "68:     assert(!http.globalAgent.sockets.hasOwnProperty(name));",
          "69:     assert(!http.globalAgent.requests.hasOwnProperty(name));",
          "72:     assert(!socket.ondata);",
          "73:     assert(!socket.onend);",
          "74:     assert.equal(socket.listeners('connect').length, 0);",
          "75:     assert.equal(socket.listeners('data').length, 0);",
          "76:     assert.equal(socket.listeners('end').length, 0);",
          "77:     assert.equal(socket.listeners('free').length, 0);",
          "78:     assert.equal(socket.listeners('close').length, 0);",
          "79:     assert.equal(socket.listeners('error').length, 0);",
          "80:     assert.equal(socket.listeners('agentRemove').length, 0);",
          "88:       assert(clientRequestClosed);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79: process.on('exit', function() {",
          "80:   assert.ok(serverGotConnect);",
          "81:   assert.ok(clientGotConnect);",
          "87: });",
          "",
          "[Removed Lines]",
          "84:   var name = 'localhost:' + common.PORT;",
          "85:   assert(!http.globalAgent.sockets.hasOwnProperty(name));",
          "86:   assert(!http.globalAgent.requests.hasOwnProperty(name));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-http-upgrade-agent.js||test/simple/test-http-upgrade-agent.js": [
          "File: test/simple/test-http-upgrade-agent.js -> test/simple/test-http-upgrade-agent.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:                             'connection': 'upgrade',",
          "75:                             'upgrade': 'websocket' };",
          "76:     assert.deepEqual(expectedHeaders, res.headers);",
          "82:       socket.end();",
          "83:       srv.close();",
          "",
          "[Removed Lines]",
          "77:     assert.equal(http.globalAgent.sockets[name].length, 1);",
          "79:     process.nextTick(function() {",
          "81:       assert(!http.globalAgent.sockets.hasOwnProperty(name));",
          "",
          "[Added Lines]",
          "79:     assert(!http.globalAgent.sockets.hasOwnProperty(name));",
          "81:     req.on('close', function() {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "790d651f0dfae13f1e2b799820ab18ac09f251b7",
      "candidate_info": {
        "commit_hash": "790d651f0dfae13f1e2b799820ab18ac09f251b7",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/790d651f0dfae13f1e2b799820ab18ac09f251b7",
        "files": [
          "doc/api/http.markdown",
          "lib/http.js",
          "test/simple/test-http-response-end.js"
        ],
        "message": "http: make http.ServerResponse emit 'end'\n\nThis used to be the internal 'finish' event. Make it public so API users will\nknow when the response has been sent completely.\n\nFixes #3855.",
        "before_after_code_files": [
          "lib/http.js||lihttp.js",
          "test/simple/test-http-response-end.js||test/simple/test-http-response-end.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/http.js||lihttp.js": [
          "File: lib/http.js -> lihttp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "833:     assert(this instanceof ClientRequest);",
          "834:     DTRACE_HTTP_CLIENT_REQUEST(this, this.connection);",
          "835:   }",
          "837: };",
          "",
          "[Removed Lines]",
          "836:   this.emit('finish');",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1763:     res.on('finish', function() {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-http-response-end.js||test/simple/test-http-response-end.js": [
          "File: test/simple/test-http-response-end.js -> test/simple/test-http-response-end.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common');",
          "23: var assert = require('assert');",
          "24: var http = require('http');",
          "26: http.createServer(onRequest).listen(common.PORT, onListen);",
          "28: function onRequest(req, res) {",
          "29:   var gotEnd = 0;",
          "31:   res.on('close', assert.fail);",
          "33:   res.on('end', function() {",
          "34:     gotEnd++;",
          "35:   });",
          "37:   process.on('exit', function() {",
          "38:     assert.equal(gotEnd, 1);",
          "39:   });",
          "41:   res.writeHead(200);",
          "42:   res.end();",
          "43:   this.close();",
          "44: }",
          "46: function onListen() {",
          "47:   var req = http.get('http://127.0.0.1:' + common.PORT);",
          "48:   var gotEnd = 0;",
          "50:   req.on('close', assert.fail);",
          "52:   req.on('end', function() {",
          "53:     gotEnd++;",
          "54:   });",
          "56:   process.on('exit', function() {",
          "57:     assert.equal(gotEnd, 1);",
          "58:   });",
          "59: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}