{
  "cve_id": "CVE-2019-19244",
  "cve_desc": "sqlite3Select in select.c in SQLite 3.30.1 allows a crash if a sub-select uses both DISTINCT and window functions, and also has certain ORDER BY usage.",
  "repo": "sqlite/sqlite",
  "patch_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
  "patch_info": {
    "commit_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/e59c562b3f6894f84c715772c4b116d7b5c01348",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/window1.test"
    ],
    "message": "Fix a crash that could occur if a sub-select that uses both DISTINCT and window functions also used an ORDER BY that is the same as its select list.\n\nFossilOrigin-Name: bcdd66c1691955c697f3d756c2b035acfe98f6aad72e90b0021bab6e9023b3ba",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/window1.test||test/window1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 6a64fb6a2da6c98f1e87b55ad5689967e1db4eae2e08345471d95e28cd567e0f",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "6065:   if( (p->selFlags & (SF_Distinct|SF_Aggregate))==SF_Distinct",
      "6066:    && sqlite3ExprListCompare(sSort.pOrderBy, pEList, -1)==0",
      "6067:   ){",
      "6068:     p->selFlags &= ~SF_Distinct;",
      "6069:     pGroupBy = p->pGroupBy = sqlite3ExprListDup(db, pEList, 0);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6067:    && p->pWin==0",
      "",
      "---------------"
    ],
    "test/window1.test||test/window1.test": [
      "File: test/window1.test -> test/window1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "1243:   ALTER TABLE a0 RENAME TO S;",
      "1244: } {1 {error in view a: 1st ORDER BY term does not match any column in the result set}}",
      "1246: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1246: reset_db",
      "1247: do_execsql_test 33.1 {",
      "1248:   CREATE TABLE t1(aa, bb);",
      "1249:   INSERT INTO t1 VALUES(1, 2);",
      "1250:   INSERT INTO t1 VALUES(5, 6);",
      "1251:   CREATE TABLE t2(x);",
      "1252:   INSERT INTO t2 VALUES(1);",
      "1253: }",
      "1254: do_execsql_test 33.2 {",
      "1255:   SELECT (SELECT DISTINCT sum(aa) OVER() FROM t1 ORDER BY 1), x FROM t2",
      "1256:   ORDER BY 1;",
      "1257: } {6 1}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "232f278084b4cf54f21882248dcd961fc84c22d7",
      "candidate_info": {
        "commit_hash": "232f278084b4cf54f21882248dcd961fc84c22d7",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/232f278084b4cf54f21882248dcd961fc84c22d7",
        "files": [
          "ext/rtree/geopoly.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix the geopoly_svg() function so that it returns NULL when given zero arguments.\n\nFossilOrigin-Name: 120cb1768338eb86412fb69d4c7677247775bb37875ab3a98766cffd535f04cf",
        "before_after_code_files": [
          "ext/rtree/geopoly.c||ext/rtree/geopoly.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/rtree/geopoly.c||ext/rtree/geopoly.c": [
          "File: ext/rtree/geopoly.c -> ext/rtree/geopoly.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "395:   int argc,",
          "396:   sqlite3_value **argv",
          "397: ){",
          "399:   if( p ){",
          "400:     sqlite3 *db = sqlite3_context_db_handle(context);",
          "401:     sqlite3_str *x = sqlite3_str_new(db);",
          "",
          "[Removed Lines]",
          "398:   GeoPoly *p = geopolyFuncParam(context, argv[0], 0);",
          "",
          "[Added Lines]",
          "398:   GeoPoly *p;",
          "399:   if( argc<1 ) return;",
          "400:   p = geopolyFuncParam(context, argv[0], 0);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 703029ac6d24860230a8c30fcbf5e7e1da619e84f1cc9b9e65ebc74879a184d2",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c0efa4d3095f2ce07c084b00594497e17ca523fc",
      "candidate_info": {
        "commit_hash": "c0efa4d3095f2ce07c084b00594497e17ca523fc",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/c0efa4d3095f2ce07c084b00594497e17ca523fc",
        "files": [
          "Makefile.in",
          "Makefile.msc",
          "main.mk",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Use the \"fuzztest\" target in place of \"fastfuzztest\".\n\nFossilOrigin-Name: 7129e468fd182c1820cdfa2c66a81d1697e5d1580680b77c0df9bb0ae0049e0d",
        "before_after_code_files": [
          "Makefile.in||Makefile.in",
          "Makefile.msc||Makefile.msc",
          "main.mk||main.mk",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.in||Makefile.in": [
          "File: Makefile.in -> Makefile.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1259: # This is the common case.  Run many tests that do not take too long,",
          "1260: # including fuzzcheck, sqlite3_analyzer, and sqldiff tests.",
          "1261: #",
          "1264: # Run a test using valgrind.  This can take a really long time",
          "1265: # because valgrind is so much slower than a native machine.",
          "",
          "[Removed Lines]",
          "1262: test: fastfuzztest sourcetest $(TESTPROGS) tcltest",
          "",
          "[Added Lines]",
          "1262: test: fuzztest sourcetest $(TESTPROGS) tcltest",
          "",
          "---------------"
        ],
        "Makefile.msc||Makefile.msc": [
          "File: Makefile.msc -> Makefile.msc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2413: # This is the common case.  Run many tests that do not take too long,",
          "2414: # including fuzzcheck, sqlite3_analyzer, and sqldiff tests.",
          "2415: #",
          "2417:  @set PATH=$(LIBTCLPATH);$(PATH)",
          "2418:  .\\testfixture.exe $(TOP)\\test\\veryquick.test $(TESTOPTS)",
          "",
          "[Removed Lines]",
          "2416: test: $(TESTPROGS) sourcetest fastfuzztest",
          "",
          "[Added Lines]",
          "2416: test: $(TESTPROGS) sourcetest fuzztest",
          "",
          "---------------"
        ],
        "main.mk||main.mk": [
          "File: main.mk -> main.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "952: # The default test case.  Runs most of the faster standard TCL tests,",
          "953: # and fuzz tests, and sqlite3_analyzer and sqldiff tests.",
          "956: # Run a test using valgrind.  This can take a really long time",
          "957: # because valgrind is so much slower than a native machine.",
          "",
          "[Removed Lines]",
          "954: test: fastfuzztest sourcetest $(TESTPROGS) tcltest",
          "",
          "[Added Lines]",
          "954: test: fuzztest sourcetest $(TESTPROGS) tcltest",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3d44f1ee0f606409bc9c091dae2c9d2e78ada318a0de08437f4f4835a1a5d203",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "84422db987f3e26545760984ace02515eed1542c",
      "candidate_info": {
        "commit_hash": "84422db987f3e26545760984ace02515eed1542c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/84422db987f3e26545760984ace02515eed1542c",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/func.c",
          "src/util.c"
        ],
        "message": "Optimization to the round() SQL function for large input values without a fractional part.\n\nFossilOrigin-Name: e95138f5f4febde598f39e031d6e4f4d5ad0adbd8dcdd34fd0baaa78ab393417",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/func.c||src/func.c",
          "src/util.c||src/util.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ea748edecb261f2b862d542daff6e99a6fd8879a8ace94b440d99e110577d1c1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/func.c||src/func.c": [
          "File: src/func.c -> src/func.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "394:   }else{",
          "395:     zBuf = sqlite3_mprintf(\"%.*f\",n,r);",
          "396:     if( zBuf==0 ){",
          "",
          "[Removed Lines]",
          "390:   if( n==0 && r>=0 && r<LARGEST_INT64-1 ){",
          "391:     r = (double)((sqlite_int64)(r+0.5));",
          "392:   }else if( n==0 && r<0 && (-r)<LARGEST_INT64-1 ){",
          "393:     r = -(double)((sqlite_int64)((-r)+0.5));",
          "",
          "[Added Lines]",
          "390:   if( r<-4503599627370496.0 || r>+4503599627370496.0 ){",
          "392:   }else if( n==0 ){",
          "393:     r = (double)((sqlite_int64)(r+(r<0?-0.5:+0.5)));",
          "",
          "---------------"
        ],
        "src/util.c||src/util.c": [
          "File: src/util.c -> src/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "404:     int i;",
          "405:     incr = 2;",
          "406:     assert( SQLITE_UTF16LE==2 && SQLITE_UTF16BE==3 );",
          "407:     for(i=3-enc; i<length && z[i]==0; i+=2){}",
          "408:     if( i<length ) eType = -100;",
          "409:     zEnd = &z[i^1];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "407:     testcase( enc==SQLITE_UTF16LE );",
          "408:     testcase( enc==SQLITE_UTF16BE );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c5ea2d474d00c78683ec2739aaeddb8bab2d5e16",
      "candidate_info": {
        "commit_hash": "c5ea2d474d00c78683ec2739aaeddb8bab2d5e16",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/c5ea2d474d00c78683ec2739aaeddb8bab2d5e16",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Use _strdup() instead of strdup() on Windows builds of the CLI, to avoid a compiler warning reported on the mailing list.\n\nFossilOrigin-Name: a7126a4f4fb4e3e25be95d673323f835252bb2b427469616046a90b2acf64071",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b9eccef7825c61980678599358b62bc394283124653061ce163ead0c653f481d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "138: # ifndef unlink",
          "139: #  define unlink _unlink",
          "140: # endif",
          "141: # undef popen",
          "142: # define popen _popen",
          "143: # undef pclose",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "141: # ifndef strdup",
          "142: #  define strdup _strdup",
          "143: # endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "55b4c827fae95c394729c6968605863f5ce9eac5",
      "candidate_info": {
        "commit_hash": "55b4c827fae95c394729c6968605863f5ce9eac5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/55b4c827fae95c394729c6968605863f5ce9eac5",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/sqliteInt.h",
          "src/treeview.c",
          "src/where.c"
        ],
        "message": "In the \".wheretrace 0x100\" debugging mode, show the structure of the main parameters to sqlite3WhereBegin() calls.\n\nFossilOrigin-Name: fd598e475d353363e19adc27a671170f11ae9f6d8cad58cb2303fb2ad8ac6bec",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/treeview.c||src/treeview.c",
          "src/where.c||src/where.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 2660e9292ae2c229eb7c57a6a79bb19f0c970072f86750fbe9cca3113d44ffe4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h"
        ],
        "src/treeview.c||src/treeview.c": [
          "File: src/treeview.c -> src/treeview.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "176:     sqlite3TreeViewPush(pView, 1);",
          "177:   }",
          "178:   do{",
          "186:     if( cnt++ ) sqlite3TreeViewPop(pView);",
          "187:     if( p->pPrior ){",
          "188:       n = 1000;",
          "",
          "[Removed Lines]",
          "179:     sqlite3TreeViewLine(pView,",
          "180:       \"SELECT%s%s (%u/%p) selFlags=0x%x nSelectRow=%d\",",
          "181:       ((p->selFlags & SF_Distinct) ? \" DISTINCT\" : \"\"),",
          "182:       ((p->selFlags & SF_Aggregate) ? \" agg_flag\" : \"\"),",
          "183:       p->selId, p, p->selFlags,",
          "184:       (int)p->nSelectRow",
          "185:     );",
          "",
          "[Added Lines]",
          "179:     if( p->selFlags & SF_WhereBegin ){",
          "180:       sqlite3TreeViewLine(pView, \"sqlite3WhereBegin()\");",
          "181:     }else{",
          "182:       sqlite3TreeViewLine(pView,",
          "183:         \"SELECT%s%s (%u/%p) selFlags=0x%x nSelectRow=%d\",",
          "184:         ((p->selFlags & SF_Distinct) ? \" DISTINCT\" : \"\"),",
          "185:         ((p->selFlags & SF_Aggregate) ? \" agg_flag\" : \"\"),",
          "186:         p->selId, p, p->selFlags,",
          "187:         (int)p->nSelectRow",
          "188:       );",
          "189:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "199:       if( p->pWinDefn ) n++;",
          "200: #endif",
          "201:     }",
          "203: #ifndef SQLITE_OMIT_WINDOWFUNC",
          "204:     if( p->pWin ){",
          "205:       Window *pX;",
          "",
          "[Removed Lines]",
          "202:     sqlite3TreeViewExprList(pView, p->pEList, (n--)>0, \"result-set\");",
          "",
          "[Added Lines]",
          "206:     if( p->pEList ){",
          "207:       sqlite3TreeViewExprList(pView, p->pEList, n>0, \"result-set\");",
          "208:     }",
          "209:     n--;",
          "",
          "---------------"
        ],
        "src/where.c||src/where.c": [
          "File: src/where.c -> src/where.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4769:       sqlite3DebugPrintf(\", limit: %d\", iAuxArg);",
          "4770:     }",
          "4771:     sqlite3DebugPrintf(\")\\n\");",
          "4772:   }",
          "4774:     sqlite3WhereClausePrint(sWLB.pWC);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4772:     if( sqlite3WhereTrace & 0x100 ){",
          "4773:       Select sSelect;",
          "4774:       memset(&sSelect, 0, sizeof(sSelect));",
          "4775:       sSelect.selFlags = SF_WhereBegin;",
          "4776:       sSelect.pSrc = pTabList;",
          "4777:       sSelect.pWhere = pWhere;",
          "4778:       sSelect.pOrderBy = pOrderBy;",
          "4779:       sSelect.pEList = pResultSet;",
          "4780:       sqlite3TreeViewSelect(0, &sSelect, 0);",
          "4781:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}