{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9c9d136156abf4741bddf04ee83807bbc013f353",
      "candidate_info": {
        "commit_hash": "9c9d136156abf4741bddf04ee83807bbc013f353",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/9c9d136156abf4741bddf04ee83807bbc013f353",
        "files": [
          "include/openssl/ct.h"
        ],
        "message": "Remove obsolete error constant CT_F_CTLOG_NEW_NULL\n\nctlog_new_null() no longer exists.\n\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1554)\n(cherry picked from commit 333c2e43729a92cf37d4bd12d6a3531b4bd7e1da)",
        "before_after_code_files": [
          "include/openssl/ct.h||include/openssl/ct.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/ct.h||include/openssl/ct.h": [
          "File: include/openssl/ct.h -> include/openssl/ct.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "482: # define CT_F_CTLOG_NEW                                   117",
          "483: # define CT_F_CTLOG_NEW_FROM_BASE64                       118",
          "484: # define CT_F_CTLOG_NEW_FROM_CONF                         119",
          "486: # define CT_F_CTLOG_STORE_LOAD_CTX_NEW                    122",
          "487: # define CT_F_CTLOG_STORE_LOAD_FILE                       123",
          "488: # define CT_F_CTLOG_STORE_LOAD_LOG                        130",
          "",
          "[Removed Lines]",
          "485: # define CT_F_CTLOG_NEW_NULL                              120",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8afb9742aedc07e26f9930c1f859f8c0f204e77f",
      "candidate_info": {
        "commit_hash": "8afb9742aedc07e26f9930c1f859f8c0f204e77f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/8afb9742aedc07e26f9930c1f859f8c0f204e77f",
        "files": [
          "ssl/t1_lib.c"
        ],
        "message": "Disable encrypt_then_mac negotiation for DTLS.\n\nI use the word 'negotiation' advisedly. Because that's all we were doing.\nWe negotiated it, set the TLS1_FLAGS_ENCRYPT_THEN_MAC flag in our data\nstructure, and then utterly ignored it in both dtls_process_record()\nand do_dtls1_write().\n\nTurn it off for 1.1.0; we'll fix it for 1.1.1 and by the time that's\nreleased, hopefully 1.1.0b will be ancient history.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>",
        "before_after_code_files": [
          "ssl/t1_lib.c||ssl/t1_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/t1_lib.c||ssl/t1_lib.c": [
          "File: ssl/t1_lib.c -> ssl/t1_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1359:     if (!custom_ext_add(s, 0, &ret, limit, al))",
          "1360:         return NULL;",
          "1363: #ifndef OPENSSL_NO_CT",
          "1364:     if (s->ct_validation_callback != NULL) {",
          "1365:         s2n(TLSEXT_TYPE_signed_certificate_timestamp, ret);",
          "",
          "[Removed Lines]",
          "1361:     s2n(TLSEXT_TYPE_encrypt_then_mac, ret);",
          "1362:     s2n(0, ret);",
          "",
          "[Added Lines]",
          "1367:     if (!SSL_IS_DTLS(s)) {",
          "1368:         s2n(TLSEXT_TYPE_encrypt_then_mac, ret);",
          "1369:         s2n(0, ret);",
          "1370:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1600:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
          "1601:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
          "1602:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
          "",
          "[Removed Lines]",
          "1599:         if (s->s3->tmp.new_cipher->algorithm_mac == SSL_AEAD",
          "",
          "[Added Lines]",
          "1608:         if (SSL_IS_DTLS(s) || s->s3->tmp.new_cipher->algorithm_mac == SSL_AEAD",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f722f18e1a3560c13bd018711a30acca73c8d619",
      "candidate_info": {
        "commit_hash": "f722f18e1a3560c13bd018711a30acca73c8d619",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f722f18e1a3560c13bd018711a30acca73c8d619",
        "files": [
          "crypto/dso/dso_lib.c",
          "include/internal/dso.h",
          "util/libcrypto.num"
        ],
        "message": "Add a DSO_dsobyaddr() function\n\nThis works the same way as DSO_pathbyaddr() but instead returns a ptr to\nthe DSO that contains the provided symbol.\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\n(cherry picked from commit b39eda7ee69a9277c722f8789736e00dc680cda6)",
        "before_after_code_files": [
          "crypto/dso/dso_lib.c||crypto/dso/dso_lib.c",
          "include/internal/dso.h||include/internal/dso.h",
          "util/libcrypto.num||util/libcrypto.num"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/dso/dso_lib.c||crypto/dso/dso_lib.c": [
          "File: crypto/dso/dso_lib.c -> crypto/dso/dso_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:         return 1;",
          "74:     REF_ASSERT_ISNT(i < 0);",
          "79:     }",
          "81:     if ((dso->meth->finish != NULL) && !dso->meth->finish(dso)) {",
          "",
          "[Removed Lines]",
          "76:     if ((dso->meth->dso_unload != NULL) && !dso->meth->dso_unload(dso)) {",
          "77:         DSOerr(DSO_F_DSO_FREE, DSO_R_UNLOAD_FAILED);",
          "78:         return 0;",
          "",
          "[Added Lines]",
          "76:     if ((dso->flags & DSO_FLAG_NO_UNLOAD_ON_FREE) == 0) {",
          "77:         if ((dso->meth->dso_unload != NULL) && !dso->meth->dso_unload(dso)) {",
          "78:             DSOerr(DSO_F_DSO_FREE, DSO_R_UNLOAD_FAILED);",
          "79:             return 0;",
          "80:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "316:     return (*meth->pathbyaddr) (addr, path, sz);",
          "317: }",
          "319: void *DSO_global_lookup(const char *name)",
          "320: {",
          "321:     DSO_METHOD *meth = default_DSO_meth;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "321: DSO *DSO_dsobyaddr(void *addr, int flags)",
          "322: {",
          "323:     DSO *ret = NULL;",
          "324:     char *filename = NULL;",
          "325:     int len = DSO_pathbyaddr(addr, NULL, 0);",
          "327:     filename = OPENSSL_malloc(len);",
          "328:     if (filename != NULL",
          "329:             && DSO_pathbyaddr(addr, filename, len) == len)",
          "330:         ret = DSO_load(NULL, filename, NULL, flags);",
          "332:     OPENSSL_free(filename);",
          "333:     return ret;",
          "334: }",
          "",
          "---------------"
        ],
        "include/internal/dso.h||include/internal/dso.h": [
          "File: include/internal/dso.h -> include/internal/dso.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: # define DSO_FLAG_NAME_TRANSLATION_EXT_ONLY      0x02",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48: # define DSO_FLAG_NO_UNLOAD_ON_FREE              0x04",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "148: int DSO_pathbyaddr(void *addr, char *path, int sz);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "158: DSO *DSO_dsobyaddr(void *addr, int flags);",
          "",
          "---------------"
        ],
        "util/libcrypto.num||util/libcrypto.num": [
          "File: util/libcrypto.num -> util/libcrypto.num",
          "--- Hunk 1 ---",
          "[Context before]",
          "4207: OCSP_RESPID_set_by_key                  4158 1_1_0a EXIST::FUNCTION:OCSP",
          "4208: OCSP_RESPID_match                       4159 1_1_0a EXIST::FUNCTION:OCSP",
          "4209: DSO_pathbyaddr                          4170 1_1_0c EXIST::FUNCTION:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4210: DSO_dsobyaddr                           4171 1_1_0c EXIST::FUNCTION:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "07ebdfab079d1efc2d65e15f9f541fa1861ed4ff",
      "candidate_info": {
        "commit_hash": "07ebdfab079d1efc2d65e15f9f541fa1861ed4ff",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/07ebdfab079d1efc2d65e15f9f541fa1861ed4ff",
        "files": [
          "apps/vms_term_sock.c",
          "apps/vms_term_sock.h"
        ],
        "message": "Add copyright and license on apps/vms_term_sock.[ch]\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 0d0723e813870c2e7a009ec47e933668a1548531)",
        "before_after_code_files": [
          "apps/vms_term_sock.c||apps/vms_term_sock.c",
          "apps/vms_term_sock.h||apps/vms_term_sock.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/vms_term_sock.c||apps/vms_term_sock.c": [
          "File: apps/vms_term_sock.c -> apps/vms_term_sock.c"
        ],
        "apps/vms_term_sock.h||apps/vms_term_sock.h": [
          "File: apps/vms_term_sock.h -> apps/vms_term_sock.h"
        ]
      }
    },
    {
      "candidate_hash": "75249be2ce76a75953869f9d249ef0ec8f701d94",
      "candidate_info": {
        "commit_hash": "75249be2ce76a75953869f9d249ef0ec8f701d94",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/75249be2ce76a75953869f9d249ef0ec8f701d94",
        "files": [
          "crypto/dh/dh_key.c"
        ],
        "message": "Fix error handling in compute_key, BN_CTX_get can return NULL\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2132)\n(cherry picked from commit 7928ee4d685b727619555bc1ec0aee805f6fc8c4)",
        "before_after_code_files": [
          "crypto/dh/dh_key.c||crypto/dh/dh_key.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/dh/dh_key.c||crypto/dh/dh_key.c": [
          "File: crypto/dh/dh_key.c -> crypto/dh/dh_key.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "159:         goto err;",
          "160:     BN_CTX_start(ctx);",
          "161:     tmp = BN_CTX_get(ctx);",
          "163:     if (dh->priv_key == NULL) {",
          "164:         DHerr(DH_F_COMPUTE_KEY, DH_R_NO_PRIVATE_VALUE);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "162:     if (tmp == NULL)",
          "163:         goto err;",
          "",
          "---------------"
        ]
      }
    }
  ]
}