{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9c067c8991ac450c508d04d2387d6d5f41a41a92",
      "candidate_info": {
        "commit_hash": "9c067c8991ac450c508d04d2387d6d5f41a41a92",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/9c067c8991ac450c508d04d2387d6d5f41a41a92",
        "files": [
          "demos/bio/descrip.mms",
          "demos/bio/shared.opt",
          "demos/bio/static.opt"
        ],
        "message": "Crude VMS build files for demos/bio/\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 8c88c88b5ad43bbdf1f6e7602b6ac56c9031b153)",
        "before_after_code_files": [
          "demos/bio/descrip.mms||demos/bio/descrip.mms",
          "demos/bio/shared.opt||demos/bio/shared.opt",
          "demos/bio/static.opt||demos/bio/static.opt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "demos/bio/descrip.mms||demos/bio/descrip.mms": [
          "File: demos/bio/descrip.mms -> demos/bio/descrip.mms",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # This build description trusts that the following logical names are defined:",
          "2: #",
          "3: # For compilation: OPENSSL",
          "4: # For linking with shared libraries: OSSL$LIBCRYPTO_SHR and OSSL$LIBSSL_SHR",
          "5: # For linking with static libraries: OSSL$LIBCRYPTO and OSSL$LIBSSL",
          "6: #",
          "7: # These are normally defined with the OpenSSL startup procedure",
          "9: # By default, we link with the shared libraries",
          "10: SHARED = TRUE",
          "12: # Alternative, for linking with static libraries",
          "13: #SHARED = FALSE",
          "15: .FIRST :",
          "16:  IF \"$(SHARED)\" .EQS. \"TRUE\" THEN DEFINE OPT []shared.opt",
          "17:  IF \"$(SHARED)\" .NES. \"TRUE\" THEN DEFINE OPT []static.opt",
          "19: .LAST :",
          "20:  DEASSIGN OPT",
          "22: .DEFAULT :",
          "23:  @ !",
          "25: # Because we use an option file, we need to redefine this",
          "26: .obj.exe :",
          "27:  $(LINK) $(LINKFLAGS) $<,OPT:/OPT",
          "29: all : client-arg.exe client-conf.exe saccept.exe sconnect.exe -",
          "30:       server-arg.exe server-cmod.exe server-conf.exe",
          "32: client-arg.exe : client-arg.obj",
          "33: client-conf.exe : client-conf.obj",
          "34: saccept.exe : saccept.obj",
          "35: sconnect.exe : sconnect.obj",
          "36: server-arg.exe : server-arg.obj",
          "37: server-cmod.exe : server-cmod.obj",
          "38: server-conf.exe : server-conf.obj",
          "40: # Stoopid MMS doesn't infer this automatically...",
          "41: client-arg.obj : client-arg.c",
          "42: client-conf.obj : client-conf.c",
          "43: saccept.obj : saccept.c",
          "44: sconnect.obj : sconnect.c",
          "45: server-arg.obj : server-arg.c",
          "46: server-cmod.obj : server-cmod.c",
          "47: server-conf.obj : server-conf.c",
          "",
          "---------------"
        ],
        "demos/bio/shared.opt||demos/bio/shared.opt": [
          "File: demos/bio/shared.opt -> demos/bio/shared.opt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: OSSL$LIBSSL_SHR/SHARE",
          "2: OSSL$LIBCRYPTO_SHR/SHARE",
          "",
          "---------------"
        ],
        "demos/bio/static.opt||demos/bio/static.opt": [
          "File: demos/bio/static.opt -> demos/bio/static.opt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: OSSL$LIBSSL/LIB",
          "2: OSSL$LIBCRYPTO/LIB",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f506d8247709f82ec1b123819ea975afe45a55c5",
      "candidate_info": {
        "commit_hash": "f506d8247709f82ec1b123819ea975afe45a55c5",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f506d8247709f82ec1b123819ea975afe45a55c5",
        "files": [
          "demos/bio/client-arg.c",
          "demos/bio/client-conf.c",
          "demos/bio/saccept.c",
          "demos/bio/sconnect.c",
          "demos/bio/server-arg.c",
          "demos/bio/server-cmod.c",
          "demos/bio/server-conf.c"
        ],
        "message": "Fixup BIO demos for OpenSSL 1.1.x\n\nNote: server-cmod doesn't seem to do things right...  from loading\ncmod.cnf, it tries to load libssl_conf.so.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 16c6deed2c42d4cf4a7676a32b718d6a867f482a)",
        "before_after_code_files": [
          "demos/bio/client-arg.c||demos/bio/client-arg.c",
          "demos/bio/client-conf.c||demos/bio/client-conf.c",
          "demos/bio/saccept.c||demos/bio/saccept.c",
          "demos/bio/sconnect.c||demos/bio/sconnect.c",
          "demos/bio/server-arg.c||demos/bio/server-arg.c",
          "demos/bio/server-cmod.c||demos/bio/server-cmod.c",
          "demos/bio/server-conf.c||demos/bio/server-conf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "demos/bio/client-arg.c||demos/bio/client-arg.c": [
          "File: demos/bio/client-arg.c -> demos/bio/client-arg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:     const char *connect_str = \"localhost:4433\";",
          "24:     int nargs = argc - 1;",
          "30:     ctx = SSL_CTX_new(TLS_client_method());",
          "31:     cctx = SSL_CONF_CTX_new();",
          "32:     SSL_CONF_CTX_set_flags(cctx, SSL_CONF_FLAG_CLIENT);",
          "",
          "[Removed Lines]",
          "26:     ERR_load_crypto_strings();",
          "27:     ERR_load_SSL_strings();",
          "28:     SSL_library_init();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "demos/bio/client-conf.c||demos/bio/client-conf.c": [
          "File: demos/bio/client-conf.c -> demos/bio/client-conf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:     const char *connect_str = \"localhost:4433\";",
          "27:     long errline = -1;",
          "33:     conf = NCONF_new(NULL);",
          "35:     if (NCONF_load(conf, \"connect.cnf\", &errline) <= 0) {",
          "",
          "[Removed Lines]",
          "29:     ERR_load_crypto_strings();",
          "30:     ERR_load_SSL_strings();",
          "31:     SSL_library_init();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "demos/bio/saccept.c||demos/bio/saccept.c": [
          "File: demos/bio/saccept.c -> demos/bio/saccept.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: static int done = 0;",
          "30: {",
          "31:     done = 1;",
          "32: }",
          "",
          "[Removed Lines]",
          "29: void interrupt()",
          "",
          "[Added Lines]",
          "29: void interrupt(int sig)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58:     else",
          "59:         port = argv[1];",
          "66:     ctx = SSL_CTX_new(TLS_server_method());",
          "67:     if (!SSL_CTX_use_certificate_chain_file(ctx, CERT_FILE))",
          "68:         goto err;",
          "",
          "[Removed Lines]",
          "61:     SSL_load_error_strings();",
          "64:     OpenSSL_add_ssl_algorithms();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "demos/bio/sconnect.c||demos/bio/sconnect.c": [
          "File: demos/bio/sconnect.c -> demos/bio/sconnect.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:     sock_init();",
          "56: #endif",
          "63:     ssl_ctx = SSL_CTX_new(TLS_client_method());",
          "",
          "[Removed Lines]",
          "59:     SSL_load_error_strings();",
          "62:     OpenSSL_add_ssl_algorithms();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "demos/bio/server-arg.c||demos/bio/server-arg.c": [
          "File: demos/bio/server-arg.c -> demos/bio/server-arg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: #include <stdio.h>",
          "17: #include <signal.h>",
          "18: #include <openssl/err.h>",
          "19: #include <openssl/ssl.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: #include <string.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30:     char **args = argv + 1;",
          "31:     int nargs = argc - 1;",
          "38:     ctx = SSL_CTX_new(TLS_server_method());",
          "40:     cctx = SSL_CONF_CTX_new();",
          "",
          "[Removed Lines]",
          "33:     SSL_load_error_strings();",
          "36:     OpenSSL_add_ssl_algorithms();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "demos/bio/server-cmod.c||demos/bio/server-cmod.c": [
          "File: demos/bio/server-cmod.c -> demos/bio/server-cmod.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:     SSL_CTX *ctx;",
          "28:     int ret = 1, i;",
          "35:     if (CONF_modules_load_file(\"cmod.cnf\", \"testapp\", 0) <= 0) {",
          "36:         fprintf(stderr, \"Error processing config file\\n\");",
          "37:         goto err;",
          "",
          "[Removed Lines]",
          "30:     SSL_load_error_strings();",
          "33:     OpenSSL_add_ssl_algorithms();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "demos/bio/server-conf.c||demos/bio/server-conf.c": [
          "File: demos/bio/server-conf.c -> demos/bio/server-conf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: #include <stdio.h>",
          "17: #include <signal.h>",
          "18: #include <openssl/err.h>",
          "19: #include <openssl/ssl.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: #include <string.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33:     char buf[512];",
          "34:     int ret = 1, i;",
          "41:     conf = NCONF_new(NULL);",
          "",
          "[Removed Lines]",
          "36:     SSL_load_error_strings();",
          "39:     OpenSSL_add_ssl_algorithms();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "caa2427f0c743beb0f6d1736dc8c0e4e551a0e1f",
      "candidate_info": {
        "commit_hash": "caa2427f0c743beb0f6d1736dc8c0e4e551a0e1f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/caa2427f0c743beb0f6d1736dc8c0e4e551a0e1f",
        "files": [
          "ssl/statem/statem.c"
        ],
        "message": "Stop server from expecting Certificate message when not requested\n\nIn a non client-auth renegotiation where the original handshake *was*\nclient auth, then the server will expect the client to send a Certificate\nmessage anyway resulting in a connection failure.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1983)",
        "before_after_code_files": [
          "ssl/statem/statem.c||ssl/statem/statem.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/statem/statem.c||ssl/statem/statem.c": [
          "File: ssl/statem/statem.c -> ssl/statem/statem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "362:                 s->ctx->stats.sess_accept_renegotiate++;",
          "363:             }",
          "364:         } else {",
          "365:             s->ctx->stats.sess_connect++;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "365:             s->s3->tmp.cert_request = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "368:             memset(s->s3->client_random, 0, sizeof(s->s3->client_random));",
          "369:             s->hit = 0;",
          "372:             s->s3->tmp.cert_req = 0;",
          "374:             if (SSL_IS_DTLS(s)) {",
          "",
          "[Removed Lines]",
          "371:             s->s3->tmp.cert_request = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3d040392ff68e71171cbd5750f1d76efdb0516ca",
      "candidate_info": {
        "commit_hash": "3d040392ff68e71171cbd5750f1d76efdb0516ca",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/3d040392ff68e71171cbd5750f1d76efdb0516ca",
        "files": [
          "crypto/init.c"
        ],
        "message": "Do not set load_crypto_strings_inited when OPENSSL_NO_ERR is defined\n\nOnly set the load_crypto_strings_inited to 1 when err_load_crypto_strings_int was called.\n\nThis solves the following issue:\n- openssl is built with no-err\n- load_crypto_strings_inited is set to 1 during the OPENSSL_init_crypto call\n- During the cleanup: OPENSSL_cleanup, err_free_strings_int is called because load_crypto_strings_inited == 1\n- err_free_strings_int calls do_err_strings_init because it has never been called\n- Now do_err_strings_init calls OPENSSL_init_crypto\n- But since we are in the cleanup (stopped == 1) this results in an error:\n  CRYPTOerr(CRYPTO_F_OPENSSL_INIT_CRYPTO, ERR_R_INIT_FAIL);\n- which then tries to initialize everything we are trying to clean up: ERR_get_state, ossl_init_thread_start, etc\nReviewed-by: Tim Hudson <tjh@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1654)\n(cherry picked from commit a1f2b0e6e07a53c0ae2c81cba319b90e54210cd6)",
        "before_after_code_files": [
          "crypto/init.c||crypto/init.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/init.c||crypto/init.c": [
          "File: crypto/init.c -> crypto/init.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:                     \"err_load_crypto_strings_int()\\n\");",
          "104: # endif",
          "105:     ret = err_load_crypto_strings_int();",
          "107:     load_crypto_strings_inited = 1;",
          "108:     return ret;",
          "109: }",
          "",
          "[Removed Lines]",
          "106: #endif",
          "",
          "[Added Lines]",
          "107: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "58f5f4157bc3533ed7cace90e4e9a89e19497cba",
      "candidate_info": {
        "commit_hash": "58f5f4157bc3533ed7cace90e4e9a89e19497cba",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/58f5f4157bc3533ed7cace90e4e9a89e19497cba",
        "files": [
          "crypto/ui/ui_openssl.c"
        ],
        "message": "UI_OpenSSL()'s session opener fails on MacOS X\n\nIf on a non-tty stdin, TTY_get() will fail with errno == ENODEV.\nWe didn't catch that.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2039)\n(cherry picked from commit c901bccec6f747467e1af31473655c8290e32309)",
        "before_after_code_files": [
          "crypto/ui/ui_openssl.c||crypto/ui/ui_openssl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ui/ui_openssl.c||crypto/ui/ui_openssl.c": [
          "File: crypto/ui/ui_openssl.c -> crypto/ui/ui_openssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "423:         if (errno == EINVAL)",
          "424:             is_a_tty = 0;",
          "425:         else",
          "426: # endif",
          "427:             {",
          "428:                 char tmp_num[10];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "426: # endif",
          "427: # ifdef ENODEV",
          "432:         if (errno == ENODEV)",
          "433:             is_a_tty = 0;",
          "434:         else",
          "",
          "---------------"
        ]
      }
    }
  ]
}