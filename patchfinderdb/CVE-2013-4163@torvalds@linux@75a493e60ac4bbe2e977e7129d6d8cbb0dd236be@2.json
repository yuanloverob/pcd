{
  "cve_id": "CVE-2013-4163",
  "cve_desc": "The ip6_append_data_mtu function in net/ipv6/ip6_output.c in the IPv6 implementation in the Linux kernel through 3.10.3 does not properly maintain information about whether the IPV6_MTU setsockopt option had been specified, which allows local users to cause a denial of service (BUG and system crash) via a crafted application that uses the UDP_CORK option in a setsockopt system call.",
  "repo": "torvalds/linux",
  "patch_hash": "75a493e60ac4bbe2e977e7129d6d8cbb0dd236be",
  "patch_info": {
    "commit_hash": "75a493e60ac4bbe2e977e7129d6d8cbb0dd236be",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/75a493e60ac4bbe2e977e7129d6d8cbb0dd236be",
    "files": [
      "net/ipv6/ip6_output.c"
    ],
    "message": "ipv6: ip6_append_data_mtu did not care about pmtudisc and frag_size\n\nIf the socket had an IPV6_MTU value set, ip6_append_data_mtu lost track\nof this when appending the second frame on a corked socket. This results\nin the following splat:\n\n[37598.993962] ------------[ cut here ]------------\n[37598.994008] kernel BUG at net/core/skbuff.c:2064!\n[37598.994008] invalid opcode: 0000 [#1] SMP\n[37598.994008] Modules linked in: tcp_lp uvcvideo videobuf2_vmalloc videobuf2_memops videobuf2_core videodev media vfat fat usb_storage fuse ebtable_nat xt_CHECKSUM bridge stp llc ipt_MASQUERADE nf_conntrack_netbios_ns nf_conntrack_broadcast ip6table_mangle ip6t_REJECT nf_conntrack_ipv6 nf_defrag_ipv6 iptable_nat\n+nf_nat_ipv4 nf_nat iptable_mangle nf_conntrack_ipv4 nf_defrag_ipv4 xt_conntrack nf_conntrack ebtable_filter ebtables ip6table_filter ip6_tables be2iscsi iscsi_boot_sysfs bnx2i cnic uio cxgb4i cxgb4 cxgb3i cxgb3 mdio libcxgbi ib_iser rdma_cm ib_addr iw_cm ib_cm ib_sa ib_mad ib_core iscsi_tcp libiscsi_tcp libiscsi\n+scsi_transport_iscsi rfcomm bnep iTCO_wdt iTCO_vendor_support snd_hda_codec_conexant arc4 iwldvm mac80211 snd_hda_intel acpi_cpufreq mperf coretemp snd_hda_codec microcode cdc_wdm cdc_acm\n[37598.994008]  snd_hwdep cdc_ether snd_seq snd_seq_device usbnet mii joydev btusb snd_pcm bluetooth i2c_i801 e1000e lpc_ich mfd_core ptp iwlwifi pps_core snd_page_alloc mei cfg80211 snd_timer thinkpad_acpi snd tpm_tis soundcore rfkill tpm tpm_bios vhost_net tun macvtap macvlan kvm_intel kvm uinput binfmt_misc\n+dm_crypt i915 i2c_algo_bit drm_kms_helper drm i2c_core wmi video\n[37598.994008] CPU 0\n[37598.994008] Pid: 27320, comm: t2 Not tainted 3.9.6-200.fc18.x86_64 #1 LENOVO 27744PG/27744PG\n[37598.994008] RIP: 0010:[<ffffffff815443a5>]  [<ffffffff815443a5>] skb_copy_and_csum_bits+0x325/0x330\n[37598.994008] RSP: 0018:ffff88003670da18  EFLAGS: 00010202\n[37598.994008] RAX: ffff88018105c018 RBX: 0000000000000004 RCX: 00000000000006c0\n[37598.994008] RDX: ffff88018105a6c0 RSI: ffff88018105a000 RDI: ffff8801e1b0aa00\n[37598.994008] RBP: ffff88003670da78 R08: 0000000000000000 R09: ffff88018105c040\n[37598.994008] R10: ffff8801e1b0aa00 R11: 0000000000000000 R12: 000000000000fff8\n[37598.994008] R13: 00000000000004fc R14: 00000000ffff0504 R15: 0000000000000000\n[37598.994008] FS:  00007f28eea59740(0000) GS:ffff88023bc00000(0000) knlGS:0000000000000000\n[37598.994008] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b\n[37598.994008] CR2: 0000003d935789e0 CR3: 00000000365cb000 CR4: 00000000000407f0\n[37598.994008] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[37598.994008] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400\n[37598.994008] Process t2 (pid: 27320, threadinfo ffff88003670c000, task ffff88022c162ee0)\n[37598.994008] Stack:\n[37598.994008]  ffff88022e098a00 ffff88020f973fc0 0000000000000008 00000000000004c8\n[37598.994008]  ffff88020f973fc0 00000000000004c4 ffff88003670da78 ffff8801e1b0a200\n[37598.994008]  0000000000000018 00000000000004c8 ffff88020f973fc0 00000000000004c4\n[37598.994008] Call Trace:\n[37598.994008]  [<ffffffff815fc21f>] ip6_append_data+0xccf/0xfe0\n[37598.994008]  [<ffffffff8158d9f0>] ? ip_copy_metadata+0x1a0/0x1a0\n[37598.994008]  [<ffffffff81661f66>] ? _raw_spin_lock_bh+0x16/0x40\n[37598.994008]  [<ffffffff8161548d>] udpv6_sendmsg+0x1ed/0xc10\n[37598.994008]  [<ffffffff812a2845>] ? sock_has_perm+0x75/0x90\n[37598.994008]  [<ffffffff815c3693>] inet_sendmsg+0x63/0xb0\n[37598.994008]  [<ffffffff812a2973>] ? selinux_socket_sendmsg+0x23/0x30\n[37598.994008]  [<ffffffff8153a450>] sock_sendmsg+0xb0/0xe0\n[37598.994008]  [<ffffffff810135d1>] ? __switch_to+0x181/0x4a0\n[37598.994008]  [<ffffffff8153d97d>] sys_sendto+0x12d/0x180\n[37598.994008]  [<ffffffff810dfb64>] ? __audit_syscall_entry+0x94/0xf0\n[37598.994008]  [<ffffffff81020ed1>] ? syscall_trace_enter+0x231/0x240\n[37598.994008]  [<ffffffff8166a7e7>] tracesys+0xdd/0xe2\n[37598.994008] Code: fe 07 00 00 48 c7 c7 04 28 a6 81 89 45 a0 4c 89 4d b8 44 89 5d a8 e8 1b ac b1 ff 44 8b 5d a8 4c 8b 4d b8 8b 45 a0 e9 cf fe ff ff <0f> 0b 66 0f 1f 84 00 00 00 00 00 66 66 66 66 90 55 48 89 e5 48\n[37598.994008] RIP  [<ffffffff815443a5>] skb_copy_and_csum_bits+0x325/0x330\n[37598.994008]  RSP <ffff88003670da18>\n[37599.007323] ---[ end trace d69f6a17f8ac8eee ]---\n\nWhile there, also check if path mtu discovery is activated for this\nsocket. The logic was adapted from ip6_append_data when first writing\non the corked socket.\n\nThis bug was introduced with commit\n0c1833797a5a6ec23ea9261d979aa18078720b74 (\"ipv6: fix incorrect ipsec\nfragment\").\n\nv2:\na) Replace IPV6_PMTU_DISC_DO with IPV6_PMTUDISC_PROBE.\nb) Don't pass ipv6_pinfo to ip6_append_data_mtu (suggestion by Gao\n   feng, thanks!).\nc) Change mtu to unsigned int, else we get a warning about\n   non-matching types because of the min()-macro type-check.\n\nAcked-by: Gao feng <gaofeng@cn.fujitsu.com>\nCc: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org>\nSigned-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "before_after_code_files": [
      "net/ipv6/ip6_output.c||net/ipv6/ip6_output.c"
    ]
  },
  "patch_diff": {
    "net/ipv6/ip6_output.c||net/ipv6/ip6_output.c": [
      "File: net/ipv6/ip6_output.c -> net/ipv6/ip6_output.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1093:  return src ? kmemdup(src, (src->hdrlen + 1) * 8, gfp) : NULL;",
      "1094: }",
      "1097:     int *maxfraglen,",
      "1098:     unsigned int fragheaderlen,",
      "1099:     struct sk_buff *skb,",
      "1101: {",
      "1102:  if (!(rt->dst.flags & DST_XFRM_TUNNEL)) {",
      "1103:   if (skb == NULL) {",
      "",
      "[Removed Lines]",
      "1096: static void ip6_append_data_mtu(int *mtu,",
      "1100:     struct rt6_info *rt)",
      "",
      "[Added Lines]",
      "1096: static void ip6_append_data_mtu(unsigned int *mtu,",
      "1100:     struct rt6_info *rt,",
      "1101:     bool pmtuprobe)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1113:   }",
      "1115:          + fragheaderlen - sizeof(struct frag_hdr);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1114:        rt->dst.dev->mtu :",
      "1115:        dst_mtu(rt->dst.path));",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1126:  struct ipv6_pinfo *np = inet6_sk(sk);",
      "1127:  struct inet_cork *cork;",
      "1128:  struct sk_buff *skb, *skb_prev = NULL;",
      "1130:  int exthdrlen;",
      "1131:  int dst_exthdrlen;",
      "1132:  int hh_len;",
      "1134:  int copy;",
      "1135:  int err;",
      "1136:  int offset = 0;",
      "",
      "[Removed Lines]",
      "1129:  unsigned int maxfraglen, fragheaderlen;",
      "1133:  int mtu;",
      "",
      "[Added Lines]",
      "1132:  unsigned int maxfraglen, fragheaderlen, mtu;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1288:    if (skb == NULL || skb_prev == NULL)",
      "1289:     ip6_append_data_mtu(&mtu, &maxfraglen,",
      "1292:    skb_prev = skb;",
      "",
      "[Removed Lines]",
      "1290:           fragheaderlen, skb, rt);",
      "",
      "[Added Lines]",
      "1292:           fragheaderlen, skb, rt,",
      "1293:           np->pmtudisc ==",
      "1294:           IPV6_PMTUDISC_PROBE);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "960fd856fdc3b08b3638f3f9b6b4bfceb77660c7",
      "candidate_info": {
        "commit_hash": "960fd856fdc3b08b3638f3f9b6b4bfceb77660c7",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/960fd856fdc3b08b3638f3f9b6b4bfceb77660c7",
        "files": [
          "fs/ext4/balloc.c",
          "fs/ext4/super.c"
        ],
        "message": "ext4: fix ext4_get_group_number()\n\nThe function ext4_get_group_number() was introduced as an optimization\nin commit bd86298e60b8.  Unfortunately, this commit incorrectly\ncalculate the group number for file systems with a 1k block size (when\ns_first_data_block is 1 instead of zero).  This could cause the\nfollowing kernel BUG:\n\n[  568.877799] ------------[ cut here ]------------\n[  568.877833] kernel BUG at fs/ext4/mballoc.c:3728!\n[  568.877840] Oops: Exception in kernel mode, sig: 5 [#1]\n[  568.877845] SMP NR_CPUS=32 NUMA pSeries\n[  568.877852] Modules linked in: binfmt_misc\n[  568.877861] CPU: 1 PID: 3516 Comm: fs_mark Not tainted 3.10.0-03216-g7c6809f-dirty #1\n[  568.877867] task: c0000001fb0b8000 ti: c0000001fa954000 task.ti: c0000001fa954000\n[  568.877873] NIP: c0000000002f42a4 LR: c0000000002f4274 CTR: c000000000317ef8\n[  568.877879] REGS: c0000001fa956ed0 TRAP: 0700   Not tainted  (3.10.0-03216-g7c6809f-dirty)\n[  568.877884] MSR: 8000000000029032 <SF,EE,ME,IR,DR,RI>  CR: 24000428  XER: 00000000\n[  568.877902] SOFTE: 1\n[  568.877905] CFAR: c0000000002b5464\n[  568.877908]\nGPR00: 0000000000000001 c0000001fa957150 c000000000c6a408 c0000001fb588000\nGPR04: 0000000000003fff c0000001fa9571c0 c0000001fa9571c4 000138098c50625f\nGPR08: 1301200000000000 0000000000000002 0000000000000001 0000000000000000\nGPR12: 0000000024000422 c00000000f33a300 0000000000008000 c0000001fa9577f0\nGPR16: c0000001fb7d0100 c000000000c29190 c0000000007f46e8 c000000000a14672\nGPR20: 0000000000000001 0000000000000008 ffffffffffffffff 0000000000000000\nGPR24: 0000000000000100 c0000001fa957278 c0000001fdb2bc78 c0000001fa957288\nGPR28: 0000000000100100 c0000001fa957288 c0000001fb588000 c0000001fdb2bd10\n[  568.877993] NIP [c0000000002f42a4] .ext4_mb_release_group_pa+0xec/0x1c0\n[  568.877999] LR [c0000000002f4274] .ext4_mb_release_group_pa+0xbc/0x1c0\n[  568.878004] Call Trace:\n[  568.878008] [c0000001fa957150] [c0000000002f4274] .ext4_mb_release_group_pa+0xbc/0x1c0 (unreliable)\n[  568.878017] [c0000001fa957200] [c0000000002fb070] .ext4_mb_discard_lg_preallocations+0x394/0x444\n[  568.878025] [c0000001fa957340] [c0000000002fb45c] .ext4_mb_release_context+0x33c/0x734\n[  568.878032] [c0000001fa957440] [c0000000002fbcf8] .ext4_mb_new_blocks+0x4a4/0x5f4\n[  568.878039] [c0000001fa957510] [c0000000002ef56c] .ext4_ext_map_blocks+0xc28/0x1178\n[  568.878047] [c0000001fa957640] [c0000000002c1a94] .ext4_map_blocks+0x2c8/0x490\n[  568.878054] [c0000001fa957730] [c0000000002c536c] .ext4_writepages+0x738/0xc60\n[  568.878062] [c0000001fa957950] [c000000000168a78] .do_writepages+0x5c/0x80\n[  568.878069] [c0000001fa9579d0] [c00000000015d1c4] .__filemap_fdatawrite_range+0x88/0xb0\n[  568.878078] [c0000001fa957aa0] [c00000000015d23c] .filemap_write_and_wait_range+0x50/0xfc\n[  568.878085] [c0000001fa957b30] [c0000000002b8edc] .ext4_sync_file+0x220/0x3c4\n[  568.878092] [c0000001fa957be0] [c0000000001f849c] .vfs_fsync_range+0x64/0x80\n[  568.878098] [c0000001fa957c70] [c0000000001f84f0] .vfs_fsync+0x38/0x4c\n[  568.878105] [c0000001fa957d00] [c0000000001f87f4] .do_fsync+0x54/0x90\n[  568.878111] [c0000001fa957db0] [c0000000001f8894] .SyS_fsync+0x28/0x3c\n[  568.878120] [c0000001fa957e30] [c000000000009c88] syscall_exit+0x0/0x7c\n[  568.878125] Instruction dump:\n[  568.878130] 60000000 813d0034 81610070 38000000 7f8b4800 419e001c 813f007c 7d2bfe70\n[  568.878144] 7d604a78 7c005850 54000ffe 7c0007b4 <0b000000> e8a10076 e87f0090 7fa4eb78\n[  568.878160] ---[ end trace 594d911d9654770b ]---\n\nIn addition fix the STD_GROUP optimization so that it works for\nbigalloc file systems as well.\n\nSigned-off-by: \"Theodore Ts'o\" <tytso@mit.edu>\nReported-by: Li Zhong <lizhongfs@gmail.com>\nReviewed-by: Lukas Czerner <lczerner@redhat.com>\nCc: stable@vger.kernel.org  # 3.10",
        "before_after_code_files": [
          "fs/ext4/balloc.c||fs/ext4/balloc.c",
          "fs/ext4/super.c||fs/ext4/super.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fs/ext4/balloc.c||fs/ext4/balloc.c": [
          "File: fs/ext4/balloc.c -> fs/ext4/balloc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:  ext4_group_t group;",
          "40:  if (test_opt2(sb, STD_GROUP_SIZE))",
          "43:    (EXT4_BLOCK_SIZE_BITS(sb) + EXT4_CLUSTER_BITS(sb) + 3);",
          "44:  else",
          "45:   ext4_get_group_no_and_offset(sb, block, &group, NULL);",
          "",
          "[Removed Lines]",
          "41:   group = (le32_to_cpu(EXT4_SB(sb)->s_es->s_first_data_block) +",
          "42:     block) >>",
          "",
          "[Added Lines]",
          "41:   group = (block -",
          "42:     le32_to_cpu(EXT4_SB(sb)->s_es->s_first_data_block)) >>",
          "",
          "---------------"
        ],
        "fs/ext4/super.c||fs/ext4/super.c": [
          "File: fs/ext4/super.c -> fs/ext4/super.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3624:  sbi->s_addr_per_block_bits = ilog2(EXT4_ADDR_PER_BLOCK(sb));",
          "3625:  sbi->s_desc_per_block_bits = ilog2(EXT4_DESC_PER_BLOCK(sb));",
          "3631:  for (i = 0; i < 4; i++)",
          "3632:   sbi->s_hash_seed[i] = le32_to_cpu(es->s_hash_seed[i]);",
          "3633:  sbi->s_def_hash_version = es->s_def_hash_version;",
          "",
          "[Removed Lines]",
          "3628:  if (sbi->s_blocks_per_group == blocksize << 3)",
          "3629:   set_opt2(sb, STD_GROUP_SIZE);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3697:   goto failed_mount;",
          "3698:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3697:  if (sbi->s_blocks_per_group == clustersize << 3)",
          "3698:   set_opt2(sb, STD_GROUP_SIZE);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ef962df057aaafd714f5c22ba3de1be459571fdf",
      "candidate_info": {
        "commit_hash": "ef962df057aaafd714f5c22ba3de1be459571fdf",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/ef962df057aaafd714f5c22ba3de1be459571fdf",
        "files": [
          "fs/ocfs2/xattr.c"
        ],
        "message": "ocfs2: xattr: fix inlined xattr reflink\n\nInlined xattr shared free space of inode block with inlined data or data\nextent record, so the size of the later two should be adjusted when\ninlined xattr is enabled.  See ocfs2_xattr_ibody_init().  But this isn't\ndone well when reflink.  For inode with inlined data, its max inlined\ndata size is adjusted in ocfs2_duplicate_inline_data(), no problem.  But\nfor inode with data extent record, its record count isn't adjusted.  Fix\nit, or data extent record and inlined xattr may overwrite each other,\nthen cause data corruption or xattr failure.\n\nOne panic caused by this bug in our test environment is the following:\n\n  kernel BUG at fs/ocfs2/xattr.c:1435!\n  invalid opcode: 0000 [#1] SMP\n  Pid: 10871, comm: multi_reflink_t Not tainted 2.6.39-300.17.1.el5uek #1\n  RIP: ocfs2_xa_offset_pointer+0x17/0x20 [ocfs2]\n  RSP: e02b:ffff88007a587948  EFLAGS: 00010283\n  RAX: 0000000000000000 RBX: 0000000000000010 RCX: 00000000000051e4\n  RDX: ffff880057092060 RSI: 0000000000000f80 RDI: ffff88007a587a68\n  RBP: ffff88007a587948 R08: 00000000000062f4 R09: 0000000000000000\n  R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000010\n  R13: ffff88007a587a68 R14: 0000000000000001 R15: ffff88007a587c68\n  FS:  00007fccff7f06e0(0000) GS:ffff88007fc00000(0000) knlGS:0000000000000000\n  CS:  e033 DS: 0000 ES: 0000 CR0: 000000008005003b\n  CR2: 00000000015cf000 CR3: 000000007aa76000 CR4: 0000000000000660\n  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n  DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400\n  Process multi_reflink_t\n  Call Trace:\n    ocfs2_xa_reuse_entry+0x60/0x280 [ocfs2]\n    ocfs2_xa_prepare_entry+0x17e/0x2a0 [ocfs2]\n    ocfs2_xa_set+0xcc/0x250 [ocfs2]\n    ocfs2_xattr_ibody_set+0x98/0x230 [ocfs2]\n    __ocfs2_xattr_set_handle+0x4f/0x700 [ocfs2]\n    ocfs2_xattr_set+0x6c6/0x890 [ocfs2]\n    ocfs2_xattr_user_set+0x46/0x50 [ocfs2]\n    generic_setxattr+0x70/0x90\n    __vfs_setxattr_noperm+0x80/0x1a0\n    vfs_setxattr+0xa9/0xb0\n    setxattr+0xc3/0x120\n    sys_fsetxattr+0xa8/0xd0\n    system_call_fastpath+0x16/0x1b\n\nSigned-off-by: Junxiao Bi <junxiao.bi@oracle.com>\nReviewed-by: Jie Liu <jeff.liu@oracle.com>\nAcked-by: Joel Becker <jlbec@evilplan.org>\nCc: Mark Fasheh <mfasheh@suse.com>\nCc: Sunil Mushran <sunil.mushran@gmail.com>\nCc: <stable@kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
        "before_after_code_files": [
          "fs/ocfs2/xattr.c||fs/ocfs2/xattr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fs/ocfs2/xattr.c||fs/ocfs2/xattr.c": [
          "File: fs/ocfs2/xattr.c -> fs/ocfs2/xattr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6491:  }",
          "6493:  new_oi = OCFS2_I(args->new_inode);",
          "6494:  spin_lock(&new_oi->ip_lock);",
          "6495:  new_oi->ip_dyn_features |= OCFS2_HAS_XATTR_FL | OCFS2_INLINE_XATTR_FL;",
          "6496:  new_di->i_dyn_features = cpu_to_le16(new_oi->ip_dyn_features);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6498:  if (!(new_oi->ip_dyn_features & OCFS2_INLINE_DATA_FL) &&",
          "6499:      !(ocfs2_inode_is_fast_symlink(args->new_inode))) {",
          "6500:   struct ocfs2_extent_list *el = &new_di->id2.i_list;",
          "6501:   le16_add_cpu(&el->l_count, -(inline_size /",
          "6502:      sizeof(struct ocfs2_extent_rec)));",
          "6503:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "93b36cf3425b9bd9c56df7680fb237686b9c82ae",
      "candidate_info": {
        "commit_hash": "93b36cf3425b9bd9c56df7680fb237686b9c82ae",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/93b36cf3425b9bd9c56df7680fb237686b9c82ae",
        "files": [
          "include/linux/ipv6.h",
          "include/net/ip6_route.h",
          "include/uapi/linux/in6.h",
          "net/dccp/ipv6.c",
          "net/ipv6/ip6_output.c",
          "net/ipv6/ipv6_sockglue.c",
          "net/ipv6/tcp_ipv6.c",
          "net/ipv6/udp.c",
          "net/sctp/input.c"
        ],
        "message": "ipv6: support IPV6_PMTU_INTERFACE on sockets\n\nIPV6_PMTU_INTERFACE is the same as IPV6_PMTU_PROBE for ipv6. Add it\nnontheless for symmetry with IPv4 sockets. Also drop incoming MTU\ninformation if this mode is enabled.\n\nThe additional bit in ipv6_pinfo just eats in the padding behind the\nbitfield. There are no changes to the layout of the struct at all.\n\nSigned-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "include/linux/ipv6.h||include/linux/ipv6.h",
          "include/net/ip6_route.h||include/net/ip6_route.h",
          "include/uapi/linux/in6.h||include/uapi/linux/in6.h",
          "net/dccp/ipv6.c||net/dccp/ipv6.c",
          "net/ipv6/ip6_output.c||net/ipv6/ip6_output.c",
          "net/ipv6/ipv6_sockglue.c||net/ipv6/ipv6_sockglue.c",
          "net/ipv6/tcp_ipv6.c||net/ipv6/tcp_ipv6.c",
          "net/ipv6/udp.c||net/ipv6/udp.c",
          "net/sctp/input.c||net/sctp/input.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "net/ipv6/ip6_output.c||net/ipv6/ip6_output.c"
          ],
          "candidate": [
            "net/ipv6/ip6_output.c||net/ipv6/ip6_output.c"
          ]
        }
      },
      "candidate_diff": {
        "include/linux/ipv6.h||include/linux/ipv6.h": [
          "File: include/linux/ipv6.h -> include/linux/ipv6.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "192:  __u16   recverr:1,",
          "193:                          sndflow:1,",
          "195:     ipv6only:1,",
          "196:     srcprefs:3, /* 001: prefer temporary address",
          "",
          "[Removed Lines]",
          "194:     pmtudisc:2,",
          "",
          "[Added Lines]",
          "194:     pmtudisc:3,",
          "",
          "---------------"
        ],
        "include/net/ip6_route.h||include/net/ip6_route.h": [
          "File: include/net/ip6_route.h -> include/net/ip6_route.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "178: {",
          "179:  struct ipv6_pinfo *np = skb->sk ? inet6_sk(skb->sk) : NULL;",
          "182:         skb_dst(skb)->dev->mtu : dst_mtu(skb_dst(skb));",
          "183: }",
          "185: static inline struct in6_addr *rt6_nexthop(struct rt6_info *rt)",
          "186: {",
          "187:  return &rt->rt6i_gateway;",
          "",
          "[Removed Lines]",
          "181:  return (np && np->pmtudisc == IPV6_PMTUDISC_PROBE) ?",
          "",
          "[Added Lines]",
          "181:  return (np && np->pmtudisc >= IPV6_PMTUDISC_PROBE) ?",
          "185: static inline bool ip6_sk_accept_pmtu(const struct sock *sk)",
          "186: {",
          "187:  return inet6_sk(sk)->pmtudisc != IPV6_PMTUDISC_INTERFACE;",
          "188: }",
          "",
          "---------------"
        ],
        "include/uapi/linux/in6.h||include/uapi/linux/in6.h": [
          "File: include/uapi/linux/in6.h -> include/uapi/linux/in6.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "188: #define IPV6_PMTUDISC_WANT  1",
          "189: #define IPV6_PMTUDISC_DO  2",
          "190: #define IPV6_PMTUDISC_PROBE  3",
          "193: #define IPV6_FLOWLABEL_MGR 32",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "194: #define IPV6_PMTUDISC_INTERFACE  4",
          "",
          "---------------"
        ],
        "net/dccp/ipv6.c||net/dccp/ipv6.c": [
          "File: net/dccp/ipv6.c -> net/dccp/ipv6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "141:  if (type == ICMPV6_PKT_TOOBIG) {",
          "142:   struct dst_entry *dst = NULL;",
          "144:   if (sock_owned_by_user(sk))",
          "145:    goto out;",
          "146:   if ((1 << sk->sk_state) & (DCCPF_LISTEN | DCCPF_CLOSED))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "144:   if (!ip6_sk_accept_pmtu(sk))",
          "145:    goto out;",
          "",
          "---------------"
        ],
        "net/ipv6/ip6_output.c||net/ipv6/ip6_output.c": [
          "File: net/ipv6/ip6_output.c -> net/ipv6/ip6_output.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1165:   np->cork.hop_limit = hlimit;",
          "1166:   np->cork.tclass = tclass;",
          "1167:   if (rt->dst.flags & DST_XFRM_TUNNEL)",
          "1169:          rt->dst.dev->mtu : dst_mtu(&rt->dst);",
          "1170:   else",
          "1172:          rt->dst.dev->mtu : dst_mtu(rt->dst.path);",
          "1173:   if (np->frag_size < mtu) {",
          "1174:    if (np->frag_size)",
          "",
          "[Removed Lines]",
          "1168:    mtu = np->pmtudisc == IPV6_PMTUDISC_PROBE ?",
          "1171:    mtu = np->pmtudisc == IPV6_PMTUDISC_PROBE ?",
          "",
          "[Added Lines]",
          "1168:    mtu = np->pmtudisc >= IPV6_PMTUDISC_PROBE ?",
          "1171:    mtu = np->pmtudisc >= IPV6_PMTUDISC_PROBE ?",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1270:    if (skb == NULL || skb_prev == NULL)",
          "1271:     ip6_append_data_mtu(&mtu, &maxfraglen,",
          "1272:           fragheaderlen, skb, rt,",
          "1274:           IPV6_PMTUDISC_PROBE);",
          "1276:    skb_prev = skb;",
          "",
          "[Removed Lines]",
          "1273:           np->pmtudisc ==",
          "",
          "[Added Lines]",
          "1273:           np->pmtudisc >=",
          "",
          "---------------"
        ],
        "net/ipv6/ipv6_sockglue.c||net/ipv6/ipv6_sockglue.c": [
          "File: net/ipv6/ipv6_sockglue.c -> net/ipv6/ipv6_sockglue.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "722:  case IPV6_MTU_DISCOVER:",
          "723:   if (optlen < sizeof(int))",
          "724:    goto e_inval;",
          "726:    goto e_inval;",
          "727:   np->pmtudisc = val;",
          "728:   retv = 0;",
          "",
          "[Removed Lines]",
          "725:   if (val < IP_PMTUDISC_DONT || val > IP_PMTUDISC_PROBE)",
          "",
          "[Added Lines]",
          "725:   if (val < IPV6_PMTUDISC_DONT || val > IPV6_PMTUDISC_INTERFACE)",
          "",
          "---------------"
        ],
        "net/ipv6/tcp_ipv6.c||net/ipv6/tcp_ipv6.c": [
          "File: net/ipv6/tcp_ipv6.c -> net/ipv6/tcp_ipv6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "397:   if (sk->sk_state == TCP_LISTEN)",
          "398:    goto out;",
          "400:   tp->mtu_info = ntohl(info);",
          "401:   if (!sock_owned_by_user(sk))",
          "402:    tcp_v6_mtu_reduced(sk);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "400:   if (!ip6_sk_accept_pmtu(sk))",
          "401:    goto out;",
          "",
          "---------------"
        ],
        "net/ipv6/udp.c||net/ipv6/udp.c": [
          "File: net/ipv6/udp.c -> net/ipv6/udp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "538:  if (sk == NULL)",
          "539:   return;",
          "542:   ip6_sk_update_pmtu(skb, sk, info);",
          "543:  if (type == NDISC_REDIRECT) {",
          "544:   ip6_sk_redirect(skb, sk);",
          "545:   goto out;",
          "",
          "[Removed Lines]",
          "541:  if (type == ICMPV6_PKT_TOOBIG)",
          "",
          "[Added Lines]",
          "541:  if (type == ICMPV6_PKT_TOOBIG) {",
          "542:   if (!ip6_sk_accept_pmtu(sk))",
          "543:    goto out;",
          "545:  }",
          "",
          "---------------"
        ],
        "net/sctp/input.c||net/sctp/input.c": [
          "File: net/sctp/input.c -> net/sctp/input.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "389:  if (!t || (t->pathmtu <= pmtu))",
          "390:   return;",
          "392:  if (sock_owned_by_user(sk)) {",
          "393:   asoc->pmtu_pending = 1;",
          "394:   t->pmtu_pending = 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "392:  if (!ip6_sk_accept_pmtu(sk))",
          "393:   return;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e367c2d03dba4c9bcafad24688fadb79dd95b218",
      "candidate_info": {
        "commit_hash": "e367c2d03dba4c9bcafad24688fadb79dd95b218",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/e367c2d03dba4c9bcafad24688fadb79dd95b218",
        "files": [
          "net/ipv6/ip6_output.c"
        ],
        "message": "ipv6: ip6_append_data_mtu do not handle the mtu of the second fragment properly\n\nIn ip6_append_data_mtu(), when the xfrm mode is not tunnel(such as\ntransport),the ipsec header need to be added in the first fragment, so the mtu\nwill decrease to reserve space for it, then the second fragment come, the mtu\nshould be turn back, as the commit 0c1833797a5a6ec23ea9261d979aa18078720b74\nsaid.  however, in the commit a493e60ac4bbe2e977e7129d6d8cbb0dd236be, it use\n*mtu = min(*mtu, ...) to change the mtu, which lead to the new mtu is alway\nequal with the first fragment's. and cannot turn back.\n\nwhen I test through  ping6 -c1 -s5000 $ip (mtu=1280):\n...frag (0|1232) ESP(spi=0x00002000,seq=0xb), length 1232\n...frag (1232|1216)\n...frag (2448|1216)\n...frag (3664|1216)\n...frag (4880|164)\n\nwhich should be:\n...frag (0|1232) ESP(spi=0x00001000,seq=0x1), length 1232\n...frag (1232|1232)\n...frag (2464|1232)\n...frag (3696|1232)\n...frag (4928|116)\n\nso delete the min() when change back the mtu.\n\nSigned-off-by: Xin Long <lucien.xin@gmail.com>\nFixes: 75a493e60ac4bb (\"ipv6: ip6_append_data_mtu did not care about pmtudisc and frag_size\")\nAcked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "net/ipv6/ip6_output.c||net/ipv6/ip6_output.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "net/ipv6/ip6_output.c||net/ipv6/ip6_output.c"
          ],
          "candidate": [
            "net/ipv6/ip6_output.c||net/ipv6/ip6_output.c"
          ]
        }
      },
      "candidate_diff": {
        "net/ipv6/ip6_output.c||net/ipv6/ip6_output.c": [
          "File: net/ipv6/ip6_output.c -> net/ipv6/ip6_output.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1101:     unsigned int fragheaderlen,",
          "1102:     struct sk_buff *skb,",
          "1103:     struct rt6_info *rt,",
          "1105: {",
          "1106:  if (!(rt->dst.flags & DST_XFRM_TUNNEL)) {",
          "1107:   if (skb == NULL) {",
          "1111:   } else {",
          "1119:   }",
          "1121:          + fragheaderlen - sizeof(struct frag_hdr);",
          "",
          "[Removed Lines]",
          "1104:     bool pmtuprobe)",
          "1117:        rt->dst.dev->mtu :",
          "1118:        dst_mtu(rt->dst.path));",
          "",
          "[Added Lines]",
          "1104:     unsigned int orig_mtu)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1132:  struct ipv6_pinfo *np = inet6_sk(sk);",
          "1133:  struct inet_cork *cork;",
          "1134:  struct sk_buff *skb, *skb_prev = NULL;",
          "1136:  int exthdrlen;",
          "1137:  int dst_exthdrlen;",
          "1138:  int hh_len;",
          "",
          "[Removed Lines]",
          "1135:  unsigned int maxfraglen, fragheaderlen, mtu;",
          "",
          "[Added Lines]",
          "1133:  unsigned int maxfraglen, fragheaderlen, mtu, orig_mtu;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1214:   dst_exthdrlen = 0;",
          "1215:   mtu = cork->fragsize;",
          "1216:  }",
          "1218:  hh_len = LL_RESERVED_SPACE(rt->dst.dev);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1215:  orig_mtu = mtu;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1311:    if (skb == NULL || skb_prev == NULL)",
          "1312:     ip6_append_data_mtu(&mtu, &maxfraglen,",
          "1313:           fragheaderlen, skb, rt,",
          "1317:    skb_prev = skb;",
          "",
          "[Removed Lines]",
          "1314:           np->pmtudisc >=",
          "1315:           IPV6_PMTUDISC_PROBE);",
          "",
          "[Added Lines]",
          "1313:           orig_mtu);",
          "",
          "---------------"
        ]
      }
    }
  ]
}