{
  "cve_id": "CVE-2022-1974",
  "cve_desc": "A use-after-free flaw was found in the Linux kernel's NFC core functionality due to a race condition between kobject creation and delete. This vulnerability allows a local attacker with CAP_NET_ADMIN privilege to leak kernel information.",
  "repo": "torvalds/linux",
  "patch_hash": "da5c0f119203ad9728920456a0f52a6d850c01cd",
  "patch_info": {
    "commit_hash": "da5c0f119203ad9728920456a0f52a6d850c01cd",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/da5c0f119203ad9728920456a0f52a6d850c01cd",
    "files": [
      "net/nfc/core.c"
    ],
    "message": "nfc: replace improper check device_is_registered() in netlink related functions\n\nThe device_is_registered() in nfc core is used to check whether\nnfc device is registered in netlink related functions such as\nnfc_fw_download(), nfc_dev_up() and so on. Although device_is_registered()\nis protected by device_lock, there is still a race condition between\ndevice_del() and device_is_registered(). The root cause is that\nkobject_del() in device_del() is not protected by device_lock.\n\n   (cleanup task)         |     (netlink task)\n                          |\nnfc_unregister_device     | nfc_fw_download\n device_del               |  device_lock\n  ...                     |   if (!device_is_registered)//(1)\n  kobject_del//(2)        |   ...\n ...                      |  device_unlock\n\nThe device_is_registered() returns the value of state_in_sysfs and\nthe state_in_sysfs is set to zero in kobject_del(). If we pass check in\nposition (1), then set zero in position (2). As a result, the check\nin position (1) is useless.\n\nThis patch uses bool variable instead of device_is_registered() to judge\nwhether the nfc device is registered, which is well synchronized.\n\nFixes: 3e256b8f8dfa (\"NFC: add nfc subsystem core\")\nSigned-off-by: Duoming Zhou <duoming@zju.edu.cn>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "before_after_code_files": [
      "net/nfc/core.c||net/nfc/core.c"
    ]
  },
  "patch_diff": {
    "net/nfc/core.c||net/nfc/core.c": [
      "File: net/nfc/core.c -> net/nfc/core.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "39:  device_lock(&dev->dev);",
      "42:   rc = -ENODEV;",
      "43:   goto error;",
      "44:  }",
      "",
      "[Removed Lines]",
      "41:  if (!device_is_registered(&dev->dev)) {",
      "",
      "[Added Lines]",
      "41:  if (dev->shutting_down) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "95:  device_lock(&dev->dev);",
      "98:   rc = -ENODEV;",
      "99:   goto error;",
      "100:  }",
      "",
      "[Removed Lines]",
      "97:  if (!device_is_registered(&dev->dev)) {",
      "",
      "[Added Lines]",
      "97:  if (dev->shutting_down) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "143:  device_lock(&dev->dev);",
      "146:   rc = -ENODEV;",
      "147:   goto error;",
      "148:  }",
      "",
      "[Removed Lines]",
      "145:  if (!device_is_registered(&dev->dev)) {",
      "",
      "[Added Lines]",
      "145:  if (dev->shutting_down) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "208:  device_lock(&dev->dev);",
      "211:   rc = -ENODEV;",
      "212:   goto error;",
      "213:  }",
      "",
      "[Removed Lines]",
      "210:  if (!device_is_registered(&dev->dev)) {",
      "",
      "[Added Lines]",
      "210:  if (dev->shutting_down) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "247:  device_lock(&dev->dev);",
      "250:   rc = -ENODEV;",
      "251:   goto error;",
      "252:  }",
      "",
      "[Removed Lines]",
      "249:  if (!device_is_registered(&dev->dev)) {",
      "",
      "[Added Lines]",
      "249:  if (dev->shutting_down) {",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "292:  device_lock(&dev->dev);",
      "295:   rc = -ENODEV;",
      "296:   goto error;",
      "297:  }",
      "",
      "[Removed Lines]",
      "294:  if (!device_is_registered(&dev->dev)) {",
      "",
      "[Added Lines]",
      "294:  if (dev->shutting_down) {",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "336:  device_lock(&dev->dev);",
      "339:   rc = -ENODEV;",
      "340:   goto error;",
      "341:  }",
      "",
      "[Removed Lines]",
      "338:  if (!device_is_registered(&dev->dev)) {",
      "",
      "[Added Lines]",
      "338:  if (dev->shutting_down) {",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "402:  device_lock(&dev->dev);",
      "405:   rc = -ENODEV;",
      "406:   goto error;",
      "407:  }",
      "",
      "[Removed Lines]",
      "404:  if (!device_is_registered(&dev->dev)) {",
      "",
      "[Added Lines]",
      "404:  if (dev->shutting_down) {",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "449:  device_lock(&dev->dev);",
      "452:   rc = -ENODEV;",
      "453:   goto error;",
      "454:  }",
      "",
      "[Removed Lines]",
      "451:  if (!device_is_registered(&dev->dev)) {",
      "",
      "[Added Lines]",
      "451:  if (dev->shutting_down) {",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "496:  device_lock(&dev->dev);",
      "499:   rc = -ENODEV;",
      "500:   kfree_skb(skb);",
      "501:   goto error;",
      "",
      "[Removed Lines]",
      "498:  if (!device_is_registered(&dev->dev)) {",
      "",
      "[Added Lines]",
      "498:  if (dev->shutting_down) {",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "553:  device_lock(&dev->dev);",
      "556:   rc = -ENODEV;",
      "557:   goto error;",
      "558:  }",
      "",
      "[Removed Lines]",
      "555:  if (!device_is_registered(&dev->dev)) {",
      "",
      "[Added Lines]",
      "555:  if (dev->shutting_down) {",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "602:  device_lock(&dev->dev);",
      "605:   rc = -ENODEV;",
      "606:   goto error;",
      "607:  }",
      "",
      "[Removed Lines]",
      "604:  if (!device_is_registered(&dev->dev)) {",
      "",
      "[Added Lines]",
      "604:  if (dev->shutting_down) {",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "1134:    dev->rfkill = NULL;",
      "1135:   }",
      "1136:  }",
      "1137:  device_unlock(&dev->dev);",
      "1139:  rc = nfc_genl_device_added(dev);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1137:  dev->shutting_down = false;",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "1166:   rfkill_unregister(dev->rfkill);",
      "1167:   rfkill_destroy(dev->rfkill);",
      "1168:  }",
      "1169:  device_unlock(&dev->dev);",
      "1171:  if (dev->ops->check_presence) {",
      "1175:   del_timer_sync(&dev->check_pres_timer);",
      "1176:   cancel_work_sync(&dev->check_pres_work);",
      "1177:  }",
      "",
      "[Removed Lines]",
      "1172:   device_lock(&dev->dev);",
      "1173:   dev->shutting_down = true;",
      "1174:   device_unlock(&dev->dev);",
      "",
      "[Added Lines]",
      "1170:  dev->shutting_down = true;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3e3b5dfcd16a3e254aab61bd1e8c417dd4503102",
      "candidate_info": {
        "commit_hash": "3e3b5dfcd16a3e254aab61bd1e8c417dd4503102",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/3e3b5dfcd16a3e254aab61bd1e8c417dd4503102",
        "files": [
          "net/nfc/core.c"
        ],
        "message": "NFC: reorder the logic in nfc_{un,}register_device\n\nThere is a potential UAF between the unregistration routine and the NFC\nnetlink operations.\n\nThe race that cause that UAF can be shown as below:\n\n (FREE)                      |  (USE)\nnfcmrvl_nci_unregister_dev   |  nfc_genl_dev_up\n  nci_close_device           |\n  nci_unregister_device      |    nfc_get_device\n    nfc_unregister_device    |    nfc_dev_up\n      rfkill_destory         |\n      device_del             |      rfkill_blocked\n  ...                        |    ...\n\nThe root cause for this race is concluded below:\n1. The rfkill_blocked (USE) in nfc_dev_up is supposed to be placed after\nthe device_is_registered check.\n2. Since the netlink operations are possible just after the device_add\nin nfc_register_device, the nfc_dev_up() can happen anywhere during the\nrfkill creation process, which leads to data race.\n\nThis patch reorder these actions to permit\n1. Once device_del is finished, the nfc_dev_up cannot dereference the\nrfkill object.\n2. The rfkill_register need to be placed after the device_add of nfc_dev\nbecause the parent device need to be created first. So this patch keeps\nthe order but inject device_lock to prevent the data race.\n\nSigned-off-by: Lin Ma <linma@zju.edu.cn>\nFixes: be055b2f89b5 (\"NFC: RFKILL support\")\nReviewed-by: Jakub Kicinski <kuba@kernel.org>\nReviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>\nLink: https://lore.kernel.org/r/20211116152652.19217-1-linma@zju.edu.cn\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
        "before_after_code_files": [
          "net/nfc/core.c||net/nfc/core.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "net/nfc/core.c||net/nfc/core.c"
          ],
          "candidate": [
            "net/nfc/core.c||net/nfc/core.c"
          ]
        }
      },
      "candidate_diff": {
        "net/nfc/core.c||net/nfc/core.c": [
          "File: net/nfc/core.c -> net/nfc/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "95:  device_lock(&dev->dev);",
          "99:   goto error;",
          "100:  }",
          "104:   goto error;",
          "105:  }",
          "",
          "[Removed Lines]",
          "97:  if (dev->rfkill && rfkill_blocked(dev->rfkill)) {",
          "98:   rc = -ERFKILL;",
          "102:  if (!device_is_registered(&dev->dev)) {",
          "103:   rc = -ENODEV;",
          "",
          "[Added Lines]",
          "97:  if (!device_is_registered(&dev->dev)) {",
          "98:   rc = -ENODEV;",
          "102:  if (dev->rfkill && rfkill_blocked(dev->rfkill)) {",
          "103:   rc = -ERFKILL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1125:  if (rc)",
          "1126:   pr_err(\"Could not register llcp device\\n\");",
          "1133:  dev->rfkill = rfkill_alloc(dev_name(&dev->dev), &dev->dev,",
          "1134:        RFKILL_TYPE_NFC, &nfc_rfkill_ops, dev);",
          "1135:  if (dev->rfkill) {",
          "",
          "[Removed Lines]",
          "1128:  rc = nfc_genl_device_added(dev);",
          "1129:  if (rc)",
          "1130:   pr_debug(\"The userspace won't be notified that the device %s was added\\n\",",
          "1131:     dev_name(&dev->dev));",
          "",
          "[Added Lines]",
          "1128:  device_lock(&dev->dev);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1138:    dev->rfkill = NULL;",
          "1139:   }",
          "1140:  }",
          "1142:  return 0;",
          "1143: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1137:  device_unlock(&dev->dev);",
          "1139:  rc = nfc_genl_device_added(dev);",
          "1140:  if (rc)",
          "1141:   pr_debug(\"The userspace won't be notified that the device %s was added\\n\",",
          "1142:     dev_name(&dev->dev));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1155:  pr_debug(\"dev_name=%s\\n\", dev_name(&dev->dev));",
          "1157:  if (dev->rfkill) {",
          "1158:   rfkill_unregister(dev->rfkill);",
          "1159:   rfkill_destroy(dev->rfkill);",
          "1160:  }",
          "1162:  if (dev->ops->check_presence) {",
          "1163:   device_lock(&dev->dev);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1159:  rc = nfc_genl_device_removed(dev);",
          "1160:  if (rc)",
          "1161:   pr_debug(\"The userspace won't be notified that the device %s \"",
          "1162:     \"was removed\\n\", dev_name(&dev->dev));",
          "1164:  device_lock(&dev->dev);",
          "1169:  device_unlock(&dev->dev);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1167:   cancel_work_sync(&dev->check_pres_work);",
          "1168:  }",
          "1175:  nfc_llcp_unregister_device(dev);",
          "1177:  mutex_lock(&nfc_devlist_mutex);",
          "",
          "[Removed Lines]",
          "1170:  rc = nfc_genl_device_removed(dev);",
          "1171:  if (rc)",
          "1172:   pr_debug(\"The userspace won't be notified that the device %s \"",
          "1173:     \"was removed\\n\", dev_name(&dev->dev));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}