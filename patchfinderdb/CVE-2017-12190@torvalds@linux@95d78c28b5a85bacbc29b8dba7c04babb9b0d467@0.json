{
  "cve_id": "CVE-2017-12190",
  "cve_desc": "The bio_map_user_iov and bio_unmap_user functions in block/bio.c in the Linux kernel before 4.13.8 do unbalanced refcounting when a SCSI I/O vector has small consecutive buffers belonging to the same page. The bio_add_pc_page function merges them into one, but the page reference is never dropped. This causes a memory leak and possible system lockup (exploitable against the host OS by a guest OS user, if a SCSI disk is passed through to a virtual machine) due to an out-of-memory condition.",
  "repo": "torvalds/linux",
  "patch_hash": "95d78c28b5a85bacbc29b8dba7c04babb9b0d467",
  "patch_info": {
    "commit_hash": "95d78c28b5a85bacbc29b8dba7c04babb9b0d467",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/95d78c28b5a85bacbc29b8dba7c04babb9b0d467",
    "files": [
      "block/bio.c"
    ],
    "message": "fix unbalanced page refcounting in bio_map_user_iov\n\nbio_map_user_iov and bio_unmap_user do unbalanced pages refcounting if\nIO vector has small consecutive buffers belonging to the same page.\nbio_add_pc_page merges them into one, but the page reference is never\ndropped.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Vitaly Mayatskikh <v.mayatskih@gmail.com>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
    "before_after_code_files": [
      "block/bio.c||block/bio.c"
    ]
  },
  "patch_diff": {
    "block/bio.c||block/bio.c": [
      "File: block/bio.c -> block/bio.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1383:   offset = offset_in_page(uaddr);",
      "1384:   for (j = cur_page; j < page_limit; j++) {",
      "1385:    unsigned int bytes = PAGE_SIZE - offset;",
      "1387:    if (len <= 0)",
      "1388:     break;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1386:    unsigned short prev_bi_vcnt = bio->bi_vcnt;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1397:          bytes)",
      "1398:     break;",
      "1400:    len -= bytes;",
      "1401:    offset = 0;",
      "1402:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1405:    if (bio->bi_vcnt == prev_bi_vcnt)",
      "1406:     put_page(pages[j]);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "076098e51bd502402a7c166b5c2bb59a196e84e1",
      "candidate_info": {
        "commit_hash": "076098e51bd502402a7c166b5c2bb59a196e84e1",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/076098e51bd502402a7c166b5c2bb59a196e84e1",
        "files": [
          "block/bio.c"
        ],
        "message": "bio_map_user_iov(): switch to iov_iter_get_pages()/iov_iter_advance()\n\n... and to hell with iov_for_each() nonsense\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
        "before_after_code_files": [
          "block/bio.c||block/bio.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "block/bio.c||block/bio.c"
          ],
          "candidate": [
            "block/bio.c||block/bio.c"
          ]
        }
      },
      "candidate_diff": {
        "block/bio.c||block/bio.c": [
          "File: block/bio.c -> block/bio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1328:  struct page **pages;",
          "1329:  struct bio *bio;",
          "1330:  int cur_page = 0;",
          "1332:  struct iov_iter i;",
          "1333:  struct iovec iov;",
          "1334:  struct bio_vec *bvec;",
          "",
          "[Removed Lines]",
          "1331:  int ret, offset;",
          "",
          "[Added Lines]",
          "1331:  int ret;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1365:  if (!pages)",
          "1366:   goto out;",
          "1386:    goto out_unmap;",
          "1387:   }",
          "1392:    unsigned short prev_bi_vcnt = bio->bi_vcnt;",
          "1405:     break;",
          "",
          "[Removed Lines]",
          "1368:  iov_for_each(iov, i, *iter) {",
          "1369:   unsigned long uaddr = (unsigned long) iov.iov_base;",
          "1370:   unsigned long len = iov.iov_len;",
          "1371:   unsigned long end = (uaddr + len + PAGE_SIZE - 1) >> PAGE_SHIFT;",
          "1372:   unsigned long start = uaddr >> PAGE_SHIFT;",
          "1373:   const int local_nr_pages = end - start;",
          "1374:   const int page_limit = cur_page + local_nr_pages;",
          "1376:   ret = get_user_pages_fast(uaddr, local_nr_pages,",
          "1377:     (iter->type & WRITE) != WRITE,",
          "1378:     &pages[cur_page]);",
          "1379:   if (unlikely(ret < local_nr_pages)) {",
          "1380:    for (j = cur_page; j < page_limit; j++) {",
          "1381:     if (!pages[j])",
          "1382:      break;",
          "1383:     put_page(pages[j]);",
          "1384:    }",
          "1385:    ret = -EFAULT;",
          "1389:   offset = offset_in_page(uaddr);",
          "1390:   for (j = cur_page; j < page_limit; j++) {",
          "1391:    unsigned int bytes = PAGE_SIZE - offset;",
          "1394:    if (len <= 0)",
          "1395:     break;",
          "1397:    if (bytes > len)",
          "1398:     bytes = len;",
          "1403:    if (bio_add_pc_page(q, bio, pages[j], bytes, offset) <",
          "1404:          bytes)",
          "",
          "[Added Lines]",
          "1368:  i = *iter;",
          "1369:  while (iov_iter_count(&i)) {",
          "1370:   ssize_t bytes;",
          "1371:   size_t offs, added = 0;",
          "1372:   int npages;",
          "1374:   bytes = iov_iter_get_pages(&i, pages + cur_page, LONG_MAX,",
          "1375:       nr_pages - cur_page, &offs);",
          "1376:   if (unlikely(bytes <= 0)) {",
          "1377:    ret = bytes ? bytes : -EFAULT;",
          "1381:   npages = DIV_ROUND_UP(offs + bytes, PAGE_SIZE);",
          "1383:   for (j = cur_page; j < cur_page + npages; j++) {",
          "1384:    unsigned int n = PAGE_SIZE - offs;",
          "1387:    if (n > bytes)",
          "1388:     n = bytes;",
          "1393:    if (bio_add_pc_page(q, bio, pages[j], n, offs) < n)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1411:    if (bio->bi_vcnt == prev_bi_vcnt)",
          "1412:     put_page(pages[j]);",
          "1416:   }",
          "1423:    put_page(pages[j++]);",
          "1424:  }",
          "1426:  kfree(pages);",
          "",
          "[Removed Lines]",
          "1414:    len -= bytes;",
          "1415:    offset = 0;",
          "1418:   cur_page = j;",
          "1422:   while (j < page_limit)",
          "",
          "[Added Lines]",
          "1403:    added += n;",
          "1404:    bytes -= n;",
          "1405:    offs = 0;",
          "1407:   iov_iter_advance(&i, added);",
          "1412:   while (j < cur_page + npages)",
          "1414:   cur_page = j;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "98f0bc99055da5797fae0c35d3d18261d59df9ac",
      "candidate_info": {
        "commit_hash": "98f0bc99055da5797fae0c35d3d18261d59df9ac",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/98f0bc99055da5797fae0c35d3d18261d59df9ac",
        "files": [
          "block/bio.c"
        ],
        "message": "bio_map_user_iov(): move alignment check into the main loop\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
        "before_after_code_files": [
          "block/bio.c||block/bio.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "block/bio.c||block/bio.c"
          ],
          "candidate": [
            "block/bio.c||block/bio.c"
          ]
        }
      },
      "candidate_diff": {
        "block/bio.c||block/bio.c": [
          "File: block/bio.c -> block/bio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1344:    return ERR_PTR(-EINVAL);",
          "1346:   nr_pages += end - start;",
          "1352:  }",
          "1354:  if (!nr_pages)",
          "",
          "[Removed Lines]",
          "1350:   if (uaddr & queue_dma_alignment(q))",
          "1351:    return ERR_PTR(-EINVAL);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1374:   npages = DIV_ROUND_UP(offs + bytes, PAGE_SIZE);",
          "1396:   }",
          "",
          "[Removed Lines]",
          "1376:   for (j = 0; j < npages; j++) {",
          "1377:    unsigned int n = PAGE_SIZE - offs;",
          "1378:    unsigned short prev_bi_vcnt = bio->bi_vcnt;",
          "1380:    if (n > bytes)",
          "1381:     n = bytes;",
          "1383:    if (!bio_add_pc_page(q, bio, pages[j], n, offs))",
          "1384:     break;",
          "1390:    if (bio->bi_vcnt == prev_bi_vcnt)",
          "1391:     put_page(pages[j]);",
          "1393:    added += n;",
          "1394:    bytes -= n;",
          "1395:    offs = 0;",
          "1397:   iov_iter_advance(&i, added);",
          "",
          "[Added Lines]",
          "1371:   if (unlikely(offs & queue_dma_alignment(q))) {",
          "1372:    ret = -EINVAL;",
          "1373:    j = 0;",
          "1374:   } else {",
          "1375:    for (j = 0; j < npages; j++) {",
          "1376:     struct page *page = pages[j];",
          "1377:     unsigned int n = PAGE_SIZE - offs;",
          "1378:     unsigned short prev_bi_vcnt = bio->bi_vcnt;",
          "1380:     if (n > bytes)",
          "1381:      n = bytes;",
          "1383:     if (!bio_add_pc_page(q, bio, page, n, offs))",
          "1384:      break;",
          "1390:     if (bio->bi_vcnt == prev_bi_vcnt)",
          "1391:      put_page(page);",
          "1393:     added += n;",
          "1394:     bytes -= n;",
          "1395:     offs = 0;",
          "1396:    }",
          "1397:    iov_iter_advance(&i, added);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0a0f151364f5bf836ad1d4de6113adb103a6628c",
      "candidate_info": {
        "commit_hash": "0a0f151364f5bf836ad1d4de6113adb103a6628c",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/0a0f151364f5bf836ad1d4de6113adb103a6628c",
        "files": [
          "block/bio.c"
        ],
        "message": "bio_map_user_iov(): get rid of copying iov_iter\n\nwe do want *iter advanced\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
        "before_after_code_files": [
          "block/bio.c||block/bio.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "block/bio.c||block/bio.c"
          ],
          "candidate": [
            "block/bio.c||block/bio.c"
          ]
        }
      },
      "candidate_diff": {
        "block/bio.c||block/bio.c": [
          "File: block/bio.c -> block/bio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1333:  int j;",
          "1334:  struct bio *bio;",
          "1335:  int ret;",
          "1337:  struct bio_vec *bvec;",
          "1339:  if (!iov_iter_count(iter))",
          "",
          "[Removed Lines]",
          "1336:  struct iov_iter i;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1343:  if (!bio)",
          "1344:   return ERR_PTR(-ENOMEM);",
          "1348:   struct page **pages;",
          "1349:   ssize_t bytes;",
          "1350:   size_t offs, added = 0;",
          "1351:   int npages;",
          "1354:   if (unlikely(bytes <= 0)) {",
          "1355:    ret = bytes ? bytes : -EFAULT;",
          "1356:    goto out_unmap;",
          "",
          "[Removed Lines]",
          "1346:  i = *iter;",
          "1347:  while (iov_iter_count(&i)) {",
          "1353:   bytes = iov_iter_get_pages_alloc(&i, &pages, LONG_MAX, &offs);",
          "",
          "[Added Lines]",
          "1345:  while (iov_iter_count(iter)) {",
          "1351:   bytes = iov_iter_get_pages_alloc(iter, &pages, LONG_MAX, &offs);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1384:     bytes -= n;",
          "1385:     offs = 0;",
          "1386:    }",
          "1388:   }",
          "",
          "[Removed Lines]",
          "1387:    iov_iter_advance(&i, added);",
          "",
          "[Added Lines]",
          "1385:    iov_iter_advance(iter, added);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1408:  bio_get(bio);",
          "1410:  return bio;",
          "1412:  out_unmap:",
          "",
          "[Removed Lines]",
          "1409:  iov_iter_advance(iter, bio->bi_iter.bi_size);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "629e42bcc3d0bc04b4e0e40ef3f831507a4693bd",
      "candidate_info": {
        "commit_hash": "629e42bcc3d0bc04b4e0e40ef3f831507a4693bd",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/629e42bcc3d0bc04b4e0e40ef3f831507a4693bd",
        "files": [
          "block/bio.c"
        ],
        "message": "... and with iov_iter_get_pages_alloc() it becomes even simpler\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
        "before_after_code_files": [
          "block/bio.c||block/bio.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "block/bio.c||block/bio.c"
          ],
          "candidate": [
            "block/bio.c||block/bio.c"
          ]
        }
      },
      "candidate_diff": {
        "block/bio.c||block/bio.c": [
          "File: block/bio.c -> block/bio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1325: {",
          "1326:  int j;",
          "1327:  int nr_pages = 0;",
          "1329:  struct bio *bio;",
          "1331:  int ret;",
          "1332:  struct iov_iter i;",
          "1333:  struct iovec iov;",
          "",
          "[Removed Lines]",
          "1328:  struct page **pages;",
          "1330:  int cur_page = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1360:  if (!bio)",
          "1361:   return ERR_PTR(-ENOMEM);",
          "1368:  i = *iter;",
          "1369:  while (iov_iter_count(&i)) {",
          "1370:   ssize_t bytes;",
          "1371:   size_t offs, added = 0;",
          "1372:   int npages;",
          "1376:   if (unlikely(bytes <= 0)) {",
          "1377:    ret = bytes ? bytes : -EFAULT;",
          "1378:    goto out_unmap;",
          "",
          "[Removed Lines]",
          "1363:  ret = -ENOMEM;",
          "1364:  pages = kcalloc(nr_pages, sizeof(struct page *), gfp_mask);",
          "1365:  if (!pages)",
          "1366:   goto out;",
          "1374:   bytes = iov_iter_get_pages(&i, pages + cur_page, LONG_MAX,",
          "1375:       nr_pages - cur_page, &offs);",
          "",
          "[Added Lines]",
          "1363:   struct page **pages;",
          "1368:   bytes = iov_iter_get_pages_alloc(&i, &pages, LONG_MAX, &offs);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1381:   npages = DIV_ROUND_UP(offs + bytes, PAGE_SIZE);",
          "1384:    unsigned int n = PAGE_SIZE - offs;",
          "1385:    unsigned short prev_bi_vcnt = bio->bi_vcnt;",
          "",
          "[Removed Lines]",
          "1383:   for (j = cur_page; j < cur_page + npages; j++) {",
          "",
          "[Added Lines]",
          "1376:   for (j = 0; j < npages; j++) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1413:    put_page(pages[j++]);",
          "1415:  }",
          "1419:  bio_set_flag(bio, BIO_USER_MAPPED);",
          "",
          "[Removed Lines]",
          "1412:   while (j < cur_page + npages)",
          "1414:   cur_page = j;",
          "1417:  kfree(pages);",
          "",
          "[Added Lines]",
          "1405:   while (j < npages)",
          "1407:   kvfree(pages);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1431:  bio_for_each_segment_all(bvec, bio, j) {",
          "1432:   put_page(bvec->bv_page);",
          "1433:  }",
          "1436:  bio_put(bio);",
          "1437:  return ERR_PTR(ret);",
          "1438: }",
          "",
          "[Removed Lines]",
          "1434:  out:",
          "1435:  kfree(pages);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e2e115d18b76467274d8f818f8828ba168f9c80b",
      "candidate_info": {
        "commit_hash": "e2e115d18b76467274d8f818f8828ba168f9c80b",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/e2e115d18b76467274d8f818f8828ba168f9c80b",
        "files": [
          "block/bio.c"
        ],
        "message": "don't rely upon subsequent bio_add_pc_page() calls failing\n\n... they might actually succeed in some cases (when we are at the\nqueue-imposed segments limit, the next page is not mergable with\nthe last one we'd got in, but the first page covered by the next\niovec *is* mergable).  Make sure that once it's failed, we are\ndone with that bio.\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
        "before_after_code_files": [
          "block/bio.c||block/bio.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "block/bio.c||block/bio.c"
          ],
          "candidate": [
            "block/bio.c||block/bio.c"
          ]
        }
      },
      "candidate_diff": {
        "block/bio.c||block/bio.c": [
          "File: block/bio.c -> block/bio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1380:    if (n > bytes)",
          "1381:     n = bytes;",
          "1387:     break;",
          "",
          "[Removed Lines]",
          "1386:    if (bio_add_pc_page(q, bio, pages[j], n, offs) < n)",
          "",
          "[Added Lines]",
          "1383:    if (!bio_add_pc_page(q, bio, pages[j], n, offs))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1405:   while (j < npages)",
          "1406:    put_page(pages[j++]);",
          "1407:   kvfree(pages);",
          "1408:  }",
          "1410:  bio_set_flag(bio, BIO_USER_MAPPED);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1406:   if (bytes)",
          "1407:    break;",
          "",
          "---------------"
        ]
      }
    }
  ]
}