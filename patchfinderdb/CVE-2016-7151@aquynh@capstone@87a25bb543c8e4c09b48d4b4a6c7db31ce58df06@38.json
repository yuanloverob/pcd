{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "88edace09cd94cac323cb757b77f5d520e3ffdae",
      "candidate_info": {
        "commit_hash": "88edace09cd94cac323cb757b77f5d520e3ffdae",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/88edace09cd94cac323cb757b77f5d520e3ffdae",
        "files": [
          "Makefile",
          "include/capstone.h",
          "make.sh"
        ],
        "message": "improve dependency on header files *.h, and remove clean from make.sh. see PR #793",
        "before_after_code_files": [
          "include/capstone.h||include/capstone.h",
          "make.sh||make.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/capstone.h||include/capstone.h": [
          "File: include/capstone.h -> include/capstone.h"
        ],
        "make.sh||make.sh": [
          "File: make.sh -> make.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: # build iOS lib for all iDevices, or only specific device",
          "10: function build_iOS {",
          "12:  IOS_SDK=`xcrun --sdk iphoneos --show-sdk-path`",
          "13:  IOS_CC=`xcrun --sdk iphoneos -f clang`",
          "14:  IOS_CFLAGS=\"-Os -Wimplicit -isysroot $IOS_SDK\"",
          "",
          "[Removed Lines]",
          "11:  ${MAKE} clean",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55:     TOOLCHAIN=\"$NDK/toolchains/$CROSS$GCCVER/prebuilt/$HOSTOS-$HOSTARCH\"",
          "56:     PLATFORM=\"$NDK/platforms/$APILEVEL/arch-$TARGARCH\"",
          "60:     CROSS=\"$TOOLCHAIN/bin/$CROSS\" CFLAGS=\"--sysroot=$PLATFORM\" LDFLAGS=\"--sysroot=$PLATFORM\" ${MAKE} $*",
          "61: }",
          "",
          "[Removed Lines]",
          "58:  ${MAKE} clean",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "66:   export LIBARCHS=\"i386 x86_64\"",
          "67:  fi",
          "71:  if [ -n \"$CC\" ]; then",
          "72:   ${MAKE} CC=\"$CC\" $*",
          "73:  else",
          "",
          "[Removed Lines]",
          "69:  ${MAKE} clean",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f4aed6025f0bb7f630894a04c8f69cfb023bb4ce",
      "candidate_info": {
        "commit_hash": "f4aed6025f0bb7f630894a04c8f69cfb023bb4ce",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/f4aed6025f0bb7f630894a04c8f69cfb023bb4ce",
        "files": [
          "bindings/python/.gitignore",
          "bindings/python/BUILDING.txt",
          "bindings/python/Makefile",
          "bindings/python/README.txt",
          "bindings/python/setup.py",
          "bindings/python/setup_cython.py"
        ],
        "message": "Python: Make cython work with extreme prejudice",
        "before_after_code_files": [
          "bindings/python/setup.py||bindings/python/setup.py",
          "bindings/python/setup_cython.py||bindings/python/setup_cython.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/setup.py||bindings/python/setup.py": [
          "File: bindings/python/setup.py -> bindings/python/setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import glob",
          "4: import os",
          "5: import shutil",
          "7: import sys",
          "8: import platform",
          "",
          "[Removed Lines]",
          "6: import stat",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55:         pass",
          "57:     shutil.copytree(os.path.join(BUILD_DIR, \"arch\"), os.path.join(SRC_DIR, \"arch\"))",
          "60:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"*.[ch]\")))",
          "71:     for filename in src:",
          "72:         outpath = os.path.join(SRC_DIR, os.path.basename(filename))",
          "",
          "[Removed Lines]",
          "58:  shutil.copytree(os.path.join(BUILD_DIR, \"include\"), os.path.join(SRC_DIR, \"include\"))",
          "61:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"*.mk\"))",
          "63:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"Makefile\"))",
          "64:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"LICENSE*\"))",
          "65:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"README\"))",
          "66:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"*.TXT\"))",
          "67:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"RELEASE_NOTES\"))",
          "68:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"make.sh\"))",
          "69:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"CMakeLists.txt\"))",
          "",
          "[Added Lines]",
          "57:     shutil.copytree(os.path.join(BUILD_DIR, \"include\"), os.path.join(SRC_DIR, \"include\"))",
          "60:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"*.mk\")))",
          "62:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"Makefile\")))",
          "63:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"LICENSE*\")))",
          "64:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"README\")))",
          "65:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"*.TXT\")))",
          "66:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"RELEASE_NOTES\")))",
          "67:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"make.sh\")))",
          "68:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"CMakeLists.txt\")))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "101:         os.system('cmake -DCMAKE_BUILD_TYPE=RELEASE -DCAPSTONE_BUILD_TESTS=0 -DCAPSTONE_BUILD_STATIC=0 -G \"NMake Makefiles\" ..')",
          "102:         os.system(\"nmake\")",
          "103:     elif SYSTEM == \"cygwin\":",
          "107:         else:",
          "111:     else:   # Unix",
          "114:     shutil.copy(LIBRARY_FILE, LIBS_DIR)",
          "115:     if STATIC_LIBRARY_FILE: shutil.copy(STATIC_LIBRARY_FILE, LIBS_DIR)",
          "",
          "[Removed Lines]",
          "104:         os.chmod(\"make.sh\", stat.S_IREAD|stat.S_IEXEC)",
          "105:         if is_64bits:",
          "106:             os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes ./make.sh cygwin-mingw64\")",
          "108:             os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes ./make.sh cygwin-mingw32\")",
          "110:         so = \"capstone.dll\"",
          "112:         os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes ./make.sh\")",
          "",
          "[Added Lines]",
          "103:         if IS_64BITS:",
          "104:             os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes bash ./make.sh cygwin-mingw64\")",
          "106:             os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes bash ./make.sh cygwin-mingw32\")",
          "108:         os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes bash ./make.sh\")",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "154:     cmdclass['develop'] = custom_develop",
          "155: except ImportError:",
          "158: if 'bdist_wheel' in sys.argv and '--plat-name' not in sys.argv:",
          "159:     idx = sys.argv.index('bdist_wheel') + 1",
          "",
          "[Removed Lines]",
          "156:     print \"Proper 'develop' support unavailable.\"",
          "",
          "[Added Lines]",
          "152:     print(\"Proper 'develop' support unavailable.\")",
          "",
          "---------------"
        ],
        "bindings/python/setup_cython.py||bindings/python/setup_cython.py": [
          "File: bindings/python/setup_cython.py -> bindings/python/setup_cython.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: from distutils.core import setup",
          "2: from distutils.extension import Extension",
          "4: from Cython.Distutils import build_ext",
          "6: VERSION = '4.0'",
          "32: # clean package directory first",
          "33: #import os.path, shutil, sys",
          "",
          "[Removed Lines]",
          "3: from distutils.command.install_lib import install_lib as _install",
          "8: compile_args = ['-O3', '-fomit-frame-pointer']",
          "10: ext_modules = [",
          "11:     Extension(\"capstone.ccapstone\", [\"pyx/ccapstone.pyx\"], libraries=[\"capstone\"], extra_compile_args=compile_args),",
          "12:     Extension(\"capstone.arm\", [\"pyx/arm.pyx\"], extra_compile_args=compile_args),",
          "13:     Extension(\"capstone.arm_const\", [\"pyx/arm_const.pyx\"], extra_compile_args=compile_args),",
          "14:     Extension(\"capstone.arm64\", [\"pyx/arm64.pyx\"], extra_compile_args=compile_args),",
          "15:     Extension(\"capstone.arm64_const\", [\"pyx/arm64_const.pyx\"], extra_compile_args=compile_args),",
          "16:     Extension(\"capstone.m68k\", [\"pyx/m68k.pyx\"], extra_compile_args=compile_args),",
          "17:     Extension(\"capstone.m68k_const\", [\"pyx/m68k_const.pyx\"], extra_compile_args=compile_args),",
          "18:     Extension(\"capstone.mips\", [\"pyx/mips.pyx\"], extra_compile_args=compile_args),",
          "19:     Extension(\"capstone.mips_const\", [\"pyx/mips_const.pyx\"], extra_compile_args=compile_args),",
          "20:     Extension(\"capstone.ppc\", [\"pyx/ppc.pyx\"], extra_compile_args=compile_args),",
          "21:     Extension(\"capstone.ppc_const\", [\"pyx/ppc_const.pyx\"], extra_compile_args=compile_args),",
          "22:     Extension(\"capstone.x86\", [\"pyx/x86.pyx\"], extra_compile_args=compile_args),",
          "23:     Extension(\"capstone.x86_const\", [\"pyx/x86_const.pyx\"], extra_compile_args=compile_args),",
          "24:     Extension(\"capstone.sparc\", [\"pyx/sparc.pyx\"], extra_compile_args=compile_args),",
          "25:     Extension(\"capstone.sparc_const\", [\"pyx/sparc_const.pyx\"], extra_compile_args=compile_args),",
          "26:     Extension(\"capstone.systemz\", [\"pyx/systemz.pyx\"], extra_compile_args=compile_args),",
          "27:     Extension(\"capstone.sysz_const\", [\"pyx/sysz_const.pyx\"], extra_compile_args=compile_args),",
          "28:     Extension(\"capstone.xcore\", [\"pyx/xcore.pyx\"], extra_compile_args=compile_args),",
          "29:     Extension(\"capstone.xcore_const\", [\"pyx/xcore_const.pyx\"], extra_compile_args=compile_args)",
          "30: ]",
          "",
          "[Added Lines]",
          "3: from distutils.command.build import build",
          "8: SYSTEM = sys.platform",
          "9: VERSION = '3.0.4'",
          "11: # adapted from commit e504b81 of Nguyen Tan Cong",
          "12: # Reference: https://docs.python.org/2/library/platform.html#cross-platform",
          "13: IS_64BITS = sys.maxsize > 2**32",
          "15: # are we building from the repository or from a source distribution?",
          "16: ROOT_DIR = os.path.dirname(os.path.realpath(__file__))",
          "17: LIBS_DIR = os.path.join(ROOT_DIR, 'pyx', 'lib')",
          "18: HEADERS_DIR = os.path.join(ROOT_DIR, 'pyx', 'include')",
          "19: SRC_DIR = os.path.join(ROOT_DIR, 'src')",
          "20: BUILD_DIR = SRC_DIR if os.path.exists(SRC_DIR) else os.path.join(ROOT_DIR, '../..')",
          "21: PYPACKAGE_DIR = os.path.join(ROOT_DIR, 'capstone')",
          "22: CYPACKAGE_DIR = os.path.join(ROOT_DIR, 'pyx')",
          "24: if SYSTEM == 'darwin':",
          "25:     LIBRARY_FILE = \"libcapstone.dylib\"",
          "26:     STATIC_LIBRARY_FILE = 'libcapstone.a'",
          "27: elif SYSTEM in ('win32', 'cygwin'):",
          "28:     LIBRARY_FILE = \"capstone.dll\"",
          "29:     STATIC_LIBRARY_FILE = None",
          "30: else:",
          "31:     LIBRARY_FILE = \"libcapstone.so\"",
          "32:     STATIC_LIBRARY_FILE = 'libcapstone.a'",
          "34: compile_args = ['-O3', '-fomit-frame-pointer', '-I' + HEADERS_DIR]",
          "35: link_args = ['-L' + LIBS_DIR]",
          "37: ext_module_names = ['arm', 'arm_const', 'arm64', 'arm64_const', 'mips', 'mips_const', 'ppc', 'ppc_const', 'x86', 'x86_const', 'sparc', 'sparc_const', 'systemz', 'sysz_const', 'xcore', 'xcore_const']",
          "38: ext_modules = [Extension(\"capstone.ccapstone\",",
          "39:                          [\"pyx/ccapstone.pyx\"],",
          "40:                          libraries=[\"capstone\"],",
          "41:                          extra_compile_args=compile_args,",
          "42:                          extra_link_args=link_args)]",
          "43: ext_modules += [Extension(\"capstone.%s\" % name,",
          "44:                           [\"pyx/%s.pyx\" % name],",
          "45:                           extra_compile_args=compile_args,",
          "46:                           extra_link_args=link_args)",
          "47:                 for name in ext_module_names]",
          "49: def clean_bins():",
          "50:     shutil.rmtree(LIBS_DIR, ignore_errors=True)",
          "51:     shutil.rmtree(HEADERS_DIR, ignore_errors=True)",
          "53: def copy_pysources():",
          "54:     for fname in os.listdir(PYPACKAGE_DIR):",
          "55:         if not fname.endswith('.py'):",
          "56:             continue",
          "58:         if fname == '__init__.py':",
          "59:             shutil.copy(os.path.join(PYPACKAGE_DIR, fname), os.path.join(CYPACKAGE_DIR, fname))",
          "60:         else:",
          "61:             shutil.copy(os.path.join(PYPACKAGE_DIR, fname), os.path.join(CYPACKAGE_DIR, fname + 'x'))",
          "63: def build_libraries():",
          "64:     \"\"\"",
          "65:     Prepare the capstone directory for a binary distribution or installation.",
          "66:     Builds shared libraries and copies header files.",
          "68:     Will use a src/ dir if one exists in the current directory, otherwise assumes it's in the repo",
          "69:     \"\"\"",
          "70:     cwd = os.getcwd()",
          "71:     clean_bins()",
          "72:     os.mkdir(HEADERS_DIR)",
          "73:     os.mkdir(LIBS_DIR)",
          "75:     # copy public headers",
          "76:     shutil.copytree(os.path.join(BUILD_DIR, 'include'), os.path.join(HEADERS_DIR, 'capstone'))",
          "78:     os.chdir(BUILD_DIR)",
          "80:     # platform description refers at https://docs.python.org/2/library/sys.html#sys.platform",
          "81:     if SYSTEM == \"win32\":",
          "82:         # Windows build: this process requires few things:",
          "83:         #    - CMake + MSVC installed",
          "84:         #    - Run this command in an environment setup for MSVC",
          "85:         if not os.path.exists(\"build\"): os.mkdir(\"build\")",
          "86:         os.chdir(\"build\")",
          "87:         # Do not build tests & static library",
          "88:         os.system('cmake -DCMAKE_BUILD_TYPE=RELEASE -DCAPSTONE_BUILD_TESTS=0 -DCAPSTONE_BUILD_STATIC=0 -G \"NMake Makefiles\" ..')",
          "89:         os.system(\"nmake\")",
          "90:     elif SYSTEM == \"cygwin\":",
          "91:         if IS_64BITS:",
          "92:             os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes bash ./make.sh cygwin-mingw64\")",
          "93:         else:",
          "94:             os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes bash ./make.sh cygwin-mingw32\")",
          "96:     else:   # Unix",
          "97:         os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes bash ./make.sh\")",
          "99:     shutil.copy(LIBRARY_FILE, LIBS_DIR)",
          "100:     if STATIC_LIBRARY_FILE: shutil.copy(STATIC_LIBRARY_FILE, LIBS_DIR)",
          "101:     os.chdir(cwd)",
          "104: class custom_build(build):",
          "105:     def run(self):",
          "106:         log.info('Copying python sources')",
          "107:         copy_pysources()",
          "108:         log.info('Building C extensions')",
          "109:         build_libraries()",
          "110:         return build.run(self)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:     packages     = ['capstone'],",
          "47:     name         = 'capstone',",
          "48:     version      = VERSION,",
          "50:     ext_modules  = ext_modules,",
          "51:     author       = 'Nguyen Anh Quynh',",
          "52:     author_email = 'aquynh@gmail.com',",
          "",
          "[Removed Lines]",
          "49:     cmdclass     = {'build_ext': build_ext},",
          "",
          "[Added Lines]",
          "129:     cmdclass     = {'build_ext': build_ext, 'build': custom_build},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "56:                 'License :: OSI Approved :: BSD License',",
          "57:                 'Programming Language :: Python :: 2',",
          "58:                 ],",
          "59: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139:     include_package_data=True,",
          "140:     package_data={",
          "141:         \"capstone\": [\"lib/*\", \"include/capstone/*\"],",
          "142:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "445bcfdc6e73f747f871978109e174ee6e04e9ec",
      "candidate_info": {
        "commit_hash": "445bcfdc6e73f747f871978109e174ee6e04e9ec",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/445bcfdc6e73f747f871978109e174ee6e04e9ec",
        "files": [
          "msvc/capstone_static/capstone_static.vcxproj"
        ],
        "message": "change compile configuration",
        "before_after_code_files": [
          "msvc/capstone_static/capstone_static.vcxproj||msvc/capstone_static/capstone_static.vcxproj"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "msvc/capstone_static/capstone_static.vcxproj||msvc/capstone_static/capstone_static.vcxproj": [
          "File: msvc/capstone_static/capstone_static.vcxproj -> msvc/capstone_static/capstone_static.vcxproj",
          "--- Hunk 1 ---",
          "[Context before]",
          "194:       </PrecompiledHeader>",
          "195:       <WarningLevel>Level3</WarningLevel>",
          "196:       <Optimization>Disabled</Optimization>",
          "198:       <SDLCheck>true</SDLCheck>",
          "199:       <AdditionalIncludeDirectories>..\\..\\include;..\\headers;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "200:       <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>",
          "",
          "[Removed Lines]",
          "197:       <PreprocessorDefinitions>CAPSTONE_X86_ATT_DISABLE_NO;CAPSTONE_DIET_NO;CAPSTONE_X86_REDUCE_NO;CAPSTONE_HAS_ARM;CAPSTONE_HAS_ARM64;CAPSTONE_HAS_MIPS;CAPSTONE_HAS_POWERPC;CAPSTONE_HAS_SPARC;CAPSTONE_HAS_SYSZ;CAPSTONE_HAS_X86;CAPSTONE_HAS_XCORE;CAPSTONE_USE_SYS_DYN_MEM;WIN32;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "[Added Lines]",
          "197:       <PreprocessorDefinitions>CAPSTONE_X86_ATT_DISABLE;CAPSTONE_DIET;CAPSTONE_X86_REDUCE;CAPSTONE_HAS_X86;CAPSTONE_USE_SYS_DYN_MEM;WIN32;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "210:       </PrecompiledHeader>",
          "211:       <WarningLevel>Level3</WarningLevel>",
          "212:       <Optimization>Disabled</Optimization>",
          "214:       <SDLCheck>true</SDLCheck>",
          "215:       <AdditionalIncludeDirectories>..\\..\\include;..\\headers;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "216:       <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>",
          "",
          "[Removed Lines]",
          "213:       <PreprocessorDefinitions>CAPSTONE_X86_ATT_DISABLE_NO;CAPSTONE_DIET_NO;CAPSTONE_X86_REDUCE_NO;CAPSTONE_HAS_ARM;CAPSTONE_HAS_ARM64;CAPSTONE_HAS_MIPS;CAPSTONE_HAS_POWERPC;CAPSTONE_HAS_SPARC;CAPSTONE_HAS_SYSZ;CAPSTONE_HAS_X86;CAPSTONE_HAS_XCORE;WIN32;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "[Added Lines]",
          "213:       <PreprocessorDefinitions>CAPSTONE_X86_ATT_DISABLE;CAPSTONE_DIET;CAPSTONE_X86_REDUCE;CAPSTONE_HAS_X86;WIN32;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "229:       </PrecompiledHeader>",
          "230:       <WarningLevel>Level3</WarningLevel>",
          "231:       <Optimization>Disabled</Optimization>",
          "233:       <SDLCheck>true</SDLCheck>",
          "234:       <AdditionalIncludeDirectories>..\\..\\include;..\\headers;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "235:       <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>",
          "",
          "[Removed Lines]",
          "232:       <PreprocessorDefinitions>CAPSTONE_X86_ATT_DISABLE_NO;CAPSTONE_DIET_NO;CAPSTONE_X86_REDUCE_NO;CAPSTONE_HAS_ARM;CAPSTONE_HAS_ARM64;CAPSTONE_HAS_MIPS;CAPSTONE_HAS_POWERPC;CAPSTONE_HAS_SPARC;CAPSTONE_HAS_SYSZ;CAPSTONE_HAS_X86;CAPSTONE_HAS_XCORE;CAPSTONE_USE_SYS_DYN_MEM;WIN32;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "[Added Lines]",
          "232:       <PreprocessorDefinitions>CAPSTONE_X86_ATT_DISABLE;CAPSTONE_DIET;CAPSTONE_X86_REDUCE;CAPSTONE_HAS_X86;CAPSTONE_USE_SYS_DYN_MEM;WIN32;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "245:       </PrecompiledHeader>",
          "246:       <WarningLevel>Level3</WarningLevel>",
          "247:       <Optimization>Disabled</Optimization>",
          "249:       <SDLCheck>true</SDLCheck>",
          "250:       <AdditionalIncludeDirectories>..\\..\\include;..\\headers;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "251:       <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>",
          "",
          "[Removed Lines]",
          "248:       <PreprocessorDefinitions>CAPSTONE_X86_ATT_DISABLE_NO;CAPSTONE_DIET_NO;CAPSTONE_X86_REDUCE_NO;CAPSTONE_HAS_ARM;CAPSTONE_HAS_ARM64;CAPSTONE_HAS_MIPS;CAPSTONE_HAS_POWERPC;CAPSTONE_HAS_SPARC;CAPSTONE_HAS_SYSZ;CAPSTONE_HAS_X86;CAPSTONE_HAS_XCORE;WIN32;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "[Added Lines]",
          "248:       <PreprocessorDefinitions>CAPSTONE_X86_ATT_DISABLE;CAPSTONE_DIET;CAPSTONE_X86_REDUCE;CAPSTONE_HAS_X86;WIN32;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "266:       <Optimization>MaxSpeed</Optimization>",
          "267:       <FunctionLevelLinking>true</FunctionLevelLinking>",
          "268:       <IntrinsicFunctions>true</IntrinsicFunctions>",
          "270:       <SDLCheck>true</SDLCheck>",
          "271:       <AdditionalIncludeDirectories>..\\..\\include;..\\headers;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "272:       <RuntimeLibrary>MultiThreaded</RuntimeLibrary>",
          "",
          "[Removed Lines]",
          "269:       <PreprocessorDefinitions>CAPSTONE_X86_ATT_DISABLE_NO;CAPSTONE_DIET_NO;CAPSTONE_X86_REDUCE_NO;CAPSTONE_HAS_ARM;CAPSTONE_HAS_ARM64;CAPSTONE_HAS_MIPS;CAPSTONE_HAS_POWERPC;CAPSTONE_HAS_SPARC;CAPSTONE_HAS_SYSZ;CAPSTONE_HAS_X86;CAPSTONE_HAS_XCORE;CAPSTONE_USE_SYS_DYN_MEM;WIN32;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "[Added Lines]",
          "269:       <PreprocessorDefinitions>CAPSTONE_X86_ATT_DISABLE;CAPSTONE_DIET;CAPSTONE_X86_REDUCE;CAPSTONE_HAS_X86;CAPSTONE_USE_SYS_DYN_MEM;WIN32;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "286:       <Optimization>MaxSpeed</Optimization>",
          "287:       <FunctionLevelLinking>true</FunctionLevelLinking>",
          "288:       <IntrinsicFunctions>true</IntrinsicFunctions>",
          "290:       <SDLCheck>true</SDLCheck>",
          "291:       <AdditionalIncludeDirectories>..\\..\\include;..\\headers;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "292:       <RuntimeLibrary>",
          "",
          "[Removed Lines]",
          "289:       <PreprocessorDefinitions>CAPSTONE_X86_ATT_DISABLE_NO;CAPSTONE_DIET_NO;CAPSTONE_X86_REDUCE_NO;CAPSTONE_HAS_ARM;CAPSTONE_HAS_ARM64;CAPSTONE_HAS_MIPS;CAPSTONE_HAS_POWERPC;CAPSTONE_HAS_SPARC;CAPSTONE_HAS_SYSZ;CAPSTONE_HAS_X86;CAPSTONE_HAS_XCORE;WIN32;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "[Added Lines]",
          "289:       <PreprocessorDefinitions>CAPSTONE_X86_ATT_DISABLE;CAPSTONE_DIET;CAPSTONE_X86_REDUCE;CAPSTONE_HAS_X86;WIN32;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "308:       <Optimization>MaxSpeed</Optimization>",
          "309:       <FunctionLevelLinking>true</FunctionLevelLinking>",
          "310:       <IntrinsicFunctions>true</IntrinsicFunctions>",
          "312:       <SDLCheck>true</SDLCheck>",
          "313:       <AdditionalIncludeDirectories>..\\..\\include;..\\headers;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "314:       <RuntimeLibrary>MultiThreaded</RuntimeLibrary>",
          "",
          "[Removed Lines]",
          "311:       <PreprocessorDefinitions>CAPSTONE_X86_ATT_DISABLE_NO;CAPSTONE_DIET_NO;CAPSTONE_X86_REDUCE_NO;CAPSTONE_HAS_ARM;CAPSTONE_HAS_ARM64;CAPSTONE_HAS_MIPS;CAPSTONE_HAS_POWERPC;CAPSTONE_HAS_SPARC;CAPSTONE_HAS_SYSZ;CAPSTONE_HAS_X86;CAPSTONE_HAS_XCORE;CAPSTONE_USE_SYS_DYN_MEM;WIN32;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "[Added Lines]",
          "311:       <PreprocessorDefinitions>CAPSTONE_X86_ATT_DISABLE;CAPSTONE_DIET;CAPSTONE_X86_REDUCE;CAPSTONE_HAS_X86;CAPSTONE_USE_SYS_DYN_MEM;WIN32;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "328:       <Optimization>MaxSpeed</Optimization>",
          "329:       <FunctionLevelLinking>true</FunctionLevelLinking>",
          "330:       <IntrinsicFunctions>true</IntrinsicFunctions>",
          "332:       <SDLCheck>true</SDLCheck>",
          "333:       <AdditionalIncludeDirectories>..\\..\\include;..\\headers;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "334:       <RuntimeLibrary>",
          "",
          "[Removed Lines]",
          "331:       <PreprocessorDefinitions>CAPSTONE_X86_ATT_DISABLE_NO;CAPSTONE_DIET_NO;CAPSTONE_X86_REDUCE_NO;CAPSTONE_HAS_ARM;CAPSTONE_HAS_ARM64;CAPSTONE_HAS_MIPS;CAPSTONE_HAS_POWERPC;CAPSTONE_HAS_SPARC;CAPSTONE_HAS_SYSZ;CAPSTONE_HAS_X86;CAPSTONE_HAS_XCORE;WIN32;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "[Added Lines]",
          "331:       <PreprocessorDefinitions>CAPSTONE_X86_ATT_DISABLE;CAPSTONE_DIET;CAPSTONE_X86_REDUCE;CAPSTONE_HAS_X86;WIN32;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c871c05b2e858e6295ed719a1747b979dae5e9d7",
      "candidate_info": {
        "commit_hash": "c871c05b2e858e6295ed719a1747b979dae5e9d7",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/c871c05b2e858e6295ed719a1747b979dae5e9d7",
        "files": [
          "arch/AArch64/AArch64InstPrinter.c"
        ],
        "message": "AArch64 set good extender",
        "before_after_code_files": [
          "arch/AArch64/AArch64InstPrinter.c||arch/AArch64/AArch64InstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/AArch64/AArch64InstPrinter.c||arch/AArch64/AArch64InstPrinter.c": [
          "File: arch/AArch64/AArch64InstPrinter.c -> arch/AArch64/AArch64InstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1052:   switch(ExtType) {",
          "1053:    default: // never reach",
          "1054:    case AArch64_AM_UXTB:",
          "1056:     break;",
          "1057:    case AArch64_AM_UXTH:",
          "1059:     break;",
          "1060:    case AArch64_AM_UXTW:",
          "1061:     ext = ARM64_EXT_UXTW;",
          "1062:     break;",
          "1063:    case AArch64_AM_UXTX:",
          "1065:     break;",
          "1066:    case AArch64_AM_SXTB:",
          "1068:     break;",
          "1069:    case AArch64_AM_SXTH:",
          "1071:     break;",
          "1072:    case AArch64_AM_SXTW:",
          "1074:     break;",
          "1075:    case AArch64_AM_SXTX:",
          "1077:     break;",
          "1078:   }",
          "",
          "[Removed Lines]",
          "1055:     ext = ARM64_EXT_UXTW;",
          "1058:     ext = ARM64_EXT_UXTW;",
          "1064:     ext = ARM64_EXT_UXTW;",
          "1067:     ext = ARM64_EXT_UXTW;",
          "1070:     ext = ARM64_EXT_UXTW;",
          "1073:     ext = ARM64_EXT_UXTW;",
          "1076:     ext = ARM64_EXT_UXTW;",
          "",
          "[Added Lines]",
          "1055:     ext = ARM64_EXT_UXTB;",
          "1058:     ext = ARM64_EXT_UXTH;",
          "1064:     ext = ARM64_EXT_UXTX;",
          "1067:     ext = ARM64_EXT_SXTB;",
          "1070:     ext = ARM64_EXT_SXTH;",
          "1073:     ext = ARM64_EXT_SXTW;",
          "1076:     ext = ARM64_EXT_SXTX;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5bc875afc63c345347b66476a67c4202413fa75f",
      "candidate_info": {
        "commit_hash": "5bc875afc63c345347b66476a67c4202413fa75f",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/5bc875afc63c345347b66476a67c4202413fa75f",
        "files": [
          "include/capstone/x86.h"
        ],
        "message": "x86: fix X86_REL_ADDR macro - handle two-byte jump instructions",
        "before_after_code_files": [
          "include/capstone/x86.h||include/capstone/x86.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/capstone/x86.h||include/capstone/x86.h": [
          "File: include/capstone/x86.h -> include/capstone/x86.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: #include \"platform.h\"",
          "17: typedef enum x86_reg {",
          "",
          "[Removed Lines]",
          "14: #define X86_REL_ADDR(insn) (insn.address + insn.size + insn.detail->x86.disp)",
          "",
          "[Added Lines]",
          "14: #define X86_REL_ADDR(insn) (((insn).detail->x86.operands[0].type == X86_OP_IMM) \\",
          "15:  ? (uint64_t)((insn).detail->x86.operands[0].imm) \\",
          "16:  : (((insn).address + (insn).size) + (uint64_t)(insn).detail->x86.disp))",
          "",
          "---------------"
        ]
      }
    }
  ]
}