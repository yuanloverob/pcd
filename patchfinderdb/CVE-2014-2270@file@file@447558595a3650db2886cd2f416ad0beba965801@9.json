{
  "cve_id": "CVE-2014-2270",
  "cve_desc": "softmagic.c in file before 5.17 and libmagic allows context-dependent attackers to cause a denial of service (out-of-bounds memory access and crash) via crafted offsets in the softmagic of a PE executable.",
  "repo": "file/file",
  "patch_hash": "447558595a3650db2886cd2f416ad0beba965801",
  "patch_info": {
    "commit_hash": "447558595a3650db2886cd2f416ad0beba965801",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/447558595a3650db2886cd2f416ad0beba965801",
    "files": [
      "src/softmagic.c"
    ],
    "message": "PR/313: Aaron Reffett: Check properly for exceeding the offset.",
    "before_after_code_files": [
      "src/softmagic.c||src/softmagic.c"
    ]
  },
  "patch_diff": {
    "src/softmagic.c||src/softmagic.c": [
      "File: src/softmagic.c -> src/softmagic.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "32: #include \"file.h\"",
      "34: #ifndef lint",
      "38: #include \"magic.h\"",
      "",
      "[Removed Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.170 2014/01/06 02:25:32 christos Exp $\")",
      "",
      "[Added Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.171 2014/01/08 22:02:06 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "71: private void cvt_32(union VALUETYPE *, const struct magic *);",
      "72: private void cvt_64(union VALUETYPE *, const struct magic *);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "74: #define OFFSET_OOB(n, o, i) ((n) < (o) || (i) >= ((n) - (o)))",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1223:   }",
      "1224:   switch (in_type = cvt_flip(m->in_type, flip)) {",
      "1225:   case FILE_BYTE:",
      "1227:     return 0;",
      "1228:    if (off) {",
      "1229:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1226:    if (nbytes < offset || nbytes < (offset + 1))",
      "",
      "[Added Lines]",
      "1227:    if (OFFSET_OOB(nbytes, offset, 1))",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1258:     offset = ~offset;",
      "1259:    break;",
      "1260:   case FILE_BESHORT:",
      "1262:     return 0;",
      "1263:    if (off) {",
      "1264:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1261:    if (nbytes < offset || nbytes < (offset + 2))",
      "",
      "[Added Lines]",
      "1262:    if (OFFSET_OOB(nbytes, offset, 2))",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1310:     offset = ~offset;",
      "1311:    break;",
      "1312:   case FILE_LESHORT:",
      "1314:     return 0;",
      "1315:    if (off) {",
      "1316:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1313:    if (nbytes < offset || nbytes < (offset + 2))",
      "",
      "[Added Lines]",
      "1314:    if (OFFSET_OOB(nbytes, offset, 2))",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1362:     offset = ~offset;",
      "1363:    break;",
      "1364:   case FILE_SHORT:",
      "1366:     return 0;",
      "1367:    if (off) {",
      "1368:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1365:    if (nbytes < offset || nbytes < (offset + 2))",
      "",
      "[Added Lines]",
      "1366:    if (OFFSET_OOB(nbytes, offset, 2))",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1399:    break;",
      "1400:   case FILE_BELONG:",
      "1401:   case FILE_BEID3:",
      "1403:     return 0;",
      "1404:    if (off) {",
      "1405:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1402:    if (nbytes < offset || nbytes < (offset + 4))",
      "",
      "[Added Lines]",
      "1403:    if (OFFSET_OOB(nbytes, offset, 4))",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1470:    break;",
      "1471:   case FILE_LELONG:",
      "1472:   case FILE_LEID3:",
      "1474:     return 0;",
      "1475:    if (off) {",
      "1476:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1473:    if (nbytes < offset || nbytes < (offset + 4))",
      "",
      "[Added Lines]",
      "1474:    if (OFFSET_OOB(nbytes, offset, 4))",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1540:     offset = ~offset;",
      "1541:    break;",
      "1542:   case FILE_MELONG:",
      "1544:     return 0;",
      "1545:    if (off) {",
      "1546:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1543:    if (nbytes < offset || nbytes < (offset + 4))",
      "",
      "[Added Lines]",
      "1544:    if (OFFSET_OOB(nbytes, offset, 4))",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1610:     offset = ~offset;",
      "1611:    break;",
      "1612:   case FILE_LONG:",
      "1614:     return 0;",
      "1615:    if (off) {",
      "1616:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1613:    if (nbytes < offset || nbytes < (offset + 4))",
      "",
      "[Added Lines]",
      "1614:    if (OFFSET_OOB(nbytes, offset, 4))",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1688:  switch (m->type) {",
      "1689:  case FILE_BYTE:",
      "1691:    return 0;",
      "1692:   break;",
      "1694:  case FILE_SHORT:",
      "1695:  case FILE_BESHORT:",
      "1696:  case FILE_LESHORT:",
      "1698:    return 0;",
      "1699:   break;",
      "",
      "[Removed Lines]",
      "1697:   if (nbytes < (offset + 2))",
      "",
      "[Added Lines]",
      "1691:   if (OFFSET_OOB(nbytes, offset, 1))",
      "1698:   if (OFFSET_OOB(nbytes, offset, 2))",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "1713:  case FILE_FLOAT:",
      "1714:  case FILE_BEFLOAT:",
      "1715:  case FILE_LEFLOAT:",
      "1717:    return 0;",
      "1718:   break;",
      "1720:  case FILE_DOUBLE:",
      "1721:  case FILE_BEDOUBLE:",
      "1722:  case FILE_LEDOUBLE:",
      "1724:    return 0;",
      "1725:   break;",
      "1727:  case FILE_STRING:",
      "1728:  case FILE_PSTRING:",
      "1729:  case FILE_SEARCH:",
      "1731:    return 0;",
      "1732:   break;",
      "1734:  case FILE_REGEX:",
      "1736:    return 0;",
      "1737:   break;",
      "1739:  case FILE_INDIRECT:",
      "1741:    return 0;",
      "1742:   sbuf = ms->o.buf;",
      "1743:   soffset = ms->offset;",
      "",
      "[Removed Lines]",
      "1716:   if (nbytes < (offset + 4))",
      "1723:   if (nbytes < (offset + 8))",
      "1730:   if (nbytes < (offset + m->vallen))",
      "1735:   if (nbytes < offset)",
      "1740:   if (nbytes < offset)",
      "",
      "[Added Lines]",
      "1717:   if (OFFSET_OOB(nbytes, offset, 4))",
      "1724:   if (OFFSET_OOB(nbytes, offset, 8))",
      "1731:   if (OFFSET_OOB(nbytes, offset, m->vallen))",
      "1736:   if (OFFSET_OOB(nbytes, offset, 0))",
      "1741:   if (OFFSET_OOB(nbytes, offset, 0))",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "1761:   return rv;",
      "1763:  case FILE_USE:",
      "1765:    return 0;",
      "1766:   sbuf = m->value.s;",
      "1767:   if (*sbuf == '^') {",
      "",
      "[Removed Lines]",
      "1764:   if (nbytes < offset)",
      "",
      "[Added Lines]",
      "1765:   if (OFFSET_OOB(nbytes, offset, 0))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0056ec32255de1de973574b0300161a1568767d6",
      "candidate_info": {
        "commit_hash": "0056ec32255de1de973574b0300161a1568767d6",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/0056ec32255de1de973574b0300161a1568767d6",
        "files": [
          "doc/file.man",
          "doc/libmagic.man",
          "src/apprentice.c",
          "src/ascmagic.c",
          "src/file.c",
          "src/file.h",
          "src/funcs.c",
          "src/magic.c",
          "src/magic.h.in",
          "src/softmagic.c"
        ],
        "message": "add a limit to the number of times a name/use entries can be used.",
        "before_after_code_files": [
          "src/apprentice.c||src/apprentice.c",
          "src/ascmagic.c||src/ascmagic.c",
          "src/file.c||src/file.c",
          "src/file.h||src/file.h",
          "src/funcs.c||src/funcs.c",
          "src/magic.c||src/magic.c",
          "src/magic.h.in||src/magic.h.in",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/apprentice.c||src/apprentice.c": [
          "File: src/apprentice.c -> src/apprentice.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.224 2014/11/27 15:40:36 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.225 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "526:  ms->line = 0;",
          "527:  ms->indir_recursion = FILE_INDIR_RECURSION;",
          "528:  ms->name_recursion = FILE_NAME_RECURSION;",
          "529:  ms->shnum_max = FILE_ELF_SHNUM;",
          "530:  ms->phnum_max = FILE_ELF_PHNUM;",
          "531:  return ms;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "529:  ms->name_max = FILE_NAME_MAX;",
          "",
          "---------------"
        ],
        "src/ascmagic.c||src/ascmagic.c": [
          "File: src/ascmagic.c -> src/ascmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include \"file.h\"",
          "37: #ifndef lint",
          "41: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "38: FILE_RCSID(\"@(#)$File: ascmagic.c,v 1.88 2014/02/12 23:20:53 christos Exp $\")",
          "",
          "[Added Lines]",
          "38: FILE_RCSID(\"@(#)$File: ascmagic.c,v 1.89 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "147:       == NULL)",
          "148:    goto done;",
          "149:   if ((rv = file_softmagic(ms, utf8_buf,",
          "151:    rv = -1;",
          "152:  }",
          "",
          "[Removed Lines]",
          "150:       (size_t)(utf8_end - utf8_buf), 0, 0, TEXTTEST, text)) == 0)",
          "",
          "[Added Lines]",
          "150:       (size_t)(utf8_end - utf8_buf), 0, 0, NULL,",
          "151:       TEXTTEST, text)) == 0)",
          "",
          "---------------"
        ],
        "src/file.c||src/file.c": [
          "File: src/file.c -> src/file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.156 2014/11/27 15:40:36 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.157 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "123: } pm[] = {",
          "124:  { \"indir\", MAGIC_PARAM_INDIR_RECURSION, 0 },",
          "125:  { \"name\", MAGIC_PARAM_NAME_RECURSION, 0 },",
          "126:  { \"phnum\", MAGIC_PARAM_PHNUM_MAX, 0 },",
          "127:  { \"shnum\", MAGIC_PARAM_SHNUM_MAX, 0 },",
          "128: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "126:  { \"namenum\", MAGIC_PARAM_NAME_MAX, 0 },",
          "",
          "---------------"
        ],
        "src/file.h||src/file.h": [
          "File: src/file.h -> src/file.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "404:  uint16_t indir_recursion;",
          "405:  uint16_t name_recursion;",
          "406:  uint16_t shnum_max;",
          "407:  uint16_t phnum_max;",
          "408: #define FILE_INDIR_RECURSION 15",
          "409: #define FILE_NAME_RECURSION 40",
          "412: };",
          "",
          "[Removed Lines]",
          "410: #define FILE_ELF_SHNUM  32768",
          "411: #define FILE_ELF_PHNUM  128",
          "",
          "[Added Lines]",
          "406:  uint16_t name_max;",
          "411: #define FILE_NAME_MAX  30",
          "412: #define FILE_ELF_SHNUM  32768",
          "413: #define FILE_ELF_PHNUM  128",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "448:     unichar **, size_t *, const char **, const char **, const char **);",
          "449: protected int file_is_tar(struct magic_set *, const unsigned char *, size_t);",
          "450: protected int file_softmagic(struct magic_set *, const unsigned char *, size_t,",
          "452: protected int file_apprentice(struct magic_set *, const char *, int);",
          "453: protected int buffer_apprentice(struct magic_set *, struct magic **,",
          "454:     size_t *, size_t);",
          "",
          "[Removed Lines]",
          "451:     uint16_t, uint16_t, int, int);",
          "",
          "[Added Lines]",
          "453:     uint16_t, uint16_t, uint16_t *, int, int);",
          "",
          "---------------"
        ],
        "src/funcs.c||src/funcs.c": [
          "File: src/funcs.c -> src/funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "33: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.74 2014/11/23 13:54:27 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.75 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "229:  if ((ms->flags & MAGIC_NO_CHECK_SOFT) == 0)",
          "231:       looks_text)) != 0) {",
          "232:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "233:     (void)fprintf(stderr, \"softmagic %d\\n\", m);",
          "",
          "[Removed Lines]",
          "230:   if ((m = file_softmagic(ms, ubuf, nb, 0, 0, BINTEST,",
          "",
          "[Added Lines]",
          "230:   if ((m = file_softmagic(ms, ubuf, nb, 0, 0, NULL, BINTEST,",
          "",
          "---------------"
        ],
        "src/magic.c||src/magic.c": [
          "File: src/magic.c -> src/magic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #include \"file.h\"",
          "35: #ifndef lint",
          "39: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "36: FILE_RCSID(\"@(#)$File: magic.c,v 1.86 2014/11/27 15:40:36 christos Exp $\")",
          "",
          "[Added Lines]",
          "36: FILE_RCSID(\"@(#)$File: magic.c,v 1.87 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "547:  case MAGIC_PARAM_NAME_RECURSION:",
          "548:   ms->name_recursion = *(const size_t *)val;",
          "549:   return 0;",
          "550:  case MAGIC_PARAM_PHNUM_MAX:",
          "551:   ms->phnum_max = *(const size_t *)val;",
          "552:   return 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "550:  case MAGIC_PARAM_NAME_MAX:",
          "551:   ms->name_max = *(const size_t *)val;",
          "552:   return 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "569:  case MAGIC_PARAM_NAME_RECURSION:",
          "571:   return 0;",
          "572:  case MAGIC_PARAM_PHNUM_MAX:",
          "574:   return 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "575:  case MAGIC_PARAM_NAME_MAX:",
          "577:   return 0;",
          "",
          "---------------"
        ],
        "src/magic.h.in||src/magic.h.in": [
          "File: src/magic.h.in -> src/magic.h.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "106: #define MAGIC_PARAM_INDIR_RECURSION 0",
          "107: #define MAGIC_PARAM_NAME_RECURSION 1",
          "111: int magic_setparam(magic_t, int, const void *);",
          "112: int magic_getparam(magic_t, int, void *);",
          "",
          "[Removed Lines]",
          "108: #define MAGIC_PARAM_PHNUM_MAX  2",
          "109: #define MAGIC_PARAM_SHNUM_MAX  3",
          "",
          "[Added Lines]",
          "108: #define MAGIC_PARAM_NAME_MAX  2",
          "109: #define MAGIC_PARAM_PHNUM_MAX  3",
          "110: #define MAGIC_PARAM_SHNUM_MAX  4",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.199 2014/11/27 15:40:36 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.200 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45: private int match(struct magic_set *, struct magic *, uint32_t,",
          "46:     const unsigned char *, size_t, size_t, int, int, int, uint16_t, uint16_t,",
          "48: private int mget(struct magic_set *, const unsigned char *,",
          "49:     struct magic *, size_t, size_t, unsigned int, int, int, int, uint16_t,",
          "51: private int magiccheck(struct magic_set *, struct magic *);",
          "52: private int32_t mprint(struct magic_set *, struct magic *);",
          "53: private int32_t moffset(struct magic_set *, struct magic *);",
          "",
          "[Removed Lines]",
          "47:     int *, int *, int *);",
          "50:     uint16_t, int *, int *, int *);",
          "",
          "[Added Lines]",
          "47:     uint16_t *, int *, int *, int *);",
          "50:     uint16_t, uint16_t *, int *, int *, int *);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "72: protected int",
          "73: file_softmagic(struct magic_set *ms, const unsigned char *buf, size_t nbytes,",
          "75: {",
          "76:  struct mlist *ml;",
          "77:  int rv, printed_something = 0, need_separator = 0;",
          "79:  for (ml = ms->mlist[0]->next; ml != ms->mlist[0]; ml = ml->next)",
          "80:   if ((rv = match(ms, ml->magic, ml->nmagic, buf, nbytes, 0, mode,",
          "83:    return rv;",
          "85:  return 0;",
          "",
          "[Removed Lines]",
          "74:     uint16_t indir_level, uint16_t name_level, int mode, int text)",
          "81:       text, 0, indir_level, name_level, &printed_something,",
          "82:       &need_separator, NULL)) != 0)",
          "",
          "[Added Lines]",
          "74:     uint16_t indir_level, uint16_t name_level, uint16_t *name_count,",
          "75:  int mode, int text)",
          "79:  uint16_t nc;",
          "81:  if (name_count == NULL) {",
          "82:   nc = 0;",
          "83:   name_count = &nc;",
          "84:  }",
          "88:       text, 0, indir_level, name_level, name_count,",
          "89:       &printed_something, &need_separator, NULL)) != 0)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "134: private int",
          "135: match(struct magic_set *ms, struct magic *magic, uint32_t nmagic,",
          "136:     const unsigned char *s, size_t nbytes, size_t offset, int mode, int text,",
          "139: {",
          "140:  uint32_t magindex = 0;",
          "141:  unsigned int cont_level = 0;",
          "",
          "[Removed Lines]",
          "137:     int flip, uint16_t indir_level, uint16_t name_level, int *printed_something,",
          "138:     int *need_separator, int *returnval)",
          "",
          "[Added Lines]",
          "144:     int flip, uint16_t indir_level, uint16_t name_level, uint16_t *name_count,",
          "145:     int *printed_something, int *need_separator, int *returnval)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "174:   switch (mget(ms, s, m, nbytes, offset, cont_level, mode, text,",
          "177:   case -1:",
          "178:    return -1;",
          "179:   case 0:",
          "",
          "[Removed Lines]",
          "175:       flip, indir_level, name_level, printed_something,",
          "176:       need_separator, returnval)) {",
          "",
          "[Added Lines]",
          "182:       flip, indir_level, name_level, name_count,",
          "183:       printed_something, need_separator, returnval)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "261:    }",
          "262: #endif",
          "263:    switch (mget(ms, s, m, nbytes, offset, cont_level, mode,",
          "265:        printed_something, need_separator, returnval)) {",
          "266:    case -1:",
          "267:     return -1;",
          "",
          "[Removed Lines]",
          "264:        text, flip, indir_level, name_level,",
          "",
          "[Added Lines]",
          "271:        text, flip, indir_level, name_level, name_count,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1215: private int",
          "1216: mget(struct magic_set *ms, const unsigned char *s, struct magic *m,",
          "1217:     size_t nbytes, size_t o, unsigned int cont_level, int mode, int text,",
          "1220: {",
          "1221:  uint32_t offset = ms->offset;",
          "1222:  uint32_t lhs;",
          "",
          "[Removed Lines]",
          "1218:     int flip, uint16_t indir_level, uint16_t name_level, int *printed_something,",
          "1219:     int *need_separator, int *returnval)",
          "",
          "[Added Lines]",
          "1225:     int flip, uint16_t indir_level, uint16_t name_level, uint16_t *name_count,",
          "1226:     int *printed_something, int *need_separator, int *returnval)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1238:   return -1;",
          "1239:  }",
          "1241:  if (mcopy(ms, p, m->type, m->flag & INDIR, s, (uint32_t)(offset + o),",
          "1242:      (uint32_t)nbytes, m) == -1)",
          "1243:   return -1;",
          "1245:  if ((ms->flags & MAGIC_DEBUG) != 0) {",
          "1246:   fprintf(stderr, \"mget(type=%d, flag=%x, offset=%u, o=%\"",
          "1249:   mdebug(offset, (char *)(void *)p, sizeof(union VALUETYPE));",
          "1250: #ifndef COMPILE_ONLY",
          "1251:   file_mdump(m);",
          "",
          "[Removed Lines]",
          "1247:       SIZE_T_FORMAT \"u, \" \"nbytes=%\" SIZE_T_FORMAT \"u)\\n\",",
          "1248:       m->type, m->flag, offset, o, nbytes);",
          "",
          "[Added Lines]",
          "1248:  if (*name_count >= ms->name_max) {",
          "1249:   file_error(ms, 0, \"name use count (%hu) exceeded\",",
          "1251:   return -1;",
          "1252:  }",
          "1260:       SIZE_T_FORMAT \"u, \" \"nbytes=%\" SIZE_T_FORMAT",
          "1261:       \"u, il=%hu, nl=%hu nc=%hu)\\n\",",
          "1262:       m->type, m->flag, offset, o, nbytes,",
          "1263:       indir_level, name_level, *name_count);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1686:    return -1;",
          "1688:   rv = file_softmagic(ms, s + offset, nbytes - offset,",
          "1691:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "1692:    fprintf(stderr, \"indirect @offs=%u[%d]\\n\", offset, rv);",
          "",
          "[Removed Lines]",
          "1689:       indir_level + 1, name_level, BINTEST, text);",
          "",
          "[Added Lines]",
          "1704:       indir_level + 1, name_level, name_count, BINTEST, text);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1721:    file_error(ms, 0, \"cannot find entry `%s'\", rbuf);",
          "1722:    return -1;",
          "1723:   }",
          "1725:   oneed_separator = *need_separator;",
          "1726:   if (m->flag & NOSPACE)",
          "1728:   rv = match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,",
          "1730:       printed_something, need_separator, returnval);",
          "1731:   if (rv != 1)",
          "",
          "[Removed Lines]",
          "1729:       mode, text, flip, indir_level, name_level + 1,",
          "",
          "[Added Lines]",
          "1739:   (*name_count)++;",
          "1744:       mode, text, flip, indir_level, name_level + 1, name_count,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5d900e78c453722fe3c7fbb8dbcc5679e8d0665d",
      "candidate_info": {
        "commit_hash": "5d900e78c453722fe3c7fbb8dbcc5679e8d0665d",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/5d900e78c453722fe3c7fbb8dbcc5679e8d0665d",
        "files": [
          "src/softmagic.c"
        ],
        "message": "fix integer overflow preventing bounds check (Shane Huntley)",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.164 2013/03/06 02:57:02 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.165 2013/03/07 02:22:24 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1126: {",
          "1127:  uint32_t soffset, offset = ms->offset;",
          "1128:  uint32_t count = m->str_range;",
          "1130:  char *sbuf, *rbuf;",
          "1131:  union VALUETYPE *p = &ms->ms_value;",
          "1132:  struct mlist ml;",
          "",
          "[Removed Lines]",
          "1129:  int rv, oneed_separator;",
          "",
          "[Added Lines]",
          "1129:  int rv, oneed_separator, in_type;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1189:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "1190:     fprintf(stderr, \"indirect offs=%u\\n\", off);",
          "1191:   }",
          "1193:   case FILE_BYTE:",
          "1195:     return 0;",
          "1196:    if (off) {",
          "1197:     switch (m->in_op & FILE_OPS_MASK) {",
          "",
          "[Removed Lines]",
          "1192:   switch (cvt_flip(m->in_type, flip)) {",
          "1194:    if (nbytes < (offset + 1))",
          "",
          "[Added Lines]",
          "1192:   switch (in_type = cvt_flip(m->in_type, flip)) {",
          "1194:    if (nbytes < offset || nbytes < (offset + 1))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1226:     offset = ~offset;",
          "1227:    break;",
          "1228:   case FILE_BESHORT:",
          "1230:     return 0;",
          "1231:    if (off) {",
          "1232:     switch (m->in_op & FILE_OPS_MASK) {",
          "",
          "[Removed Lines]",
          "1229:    if (nbytes < (offset + 2))",
          "",
          "[Added Lines]",
          "1229:    if (nbytes < offset || nbytes < (offset + 2))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1278:     offset = ~offset;",
          "1279:    break;",
          "1280:   case FILE_LESHORT:",
          "1282:     return 0;",
          "1283:    if (off) {",
          "1284:     switch (m->in_op & FILE_OPS_MASK) {",
          "",
          "[Removed Lines]",
          "1281:    if (nbytes < (offset + 2))",
          "",
          "[Added Lines]",
          "1281:    if (nbytes < offset || nbytes < (offset + 2))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1330:     offset = ~offset;",
          "1331:    break;",
          "1332:   case FILE_SHORT:",
          "1334:     return 0;",
          "1335:    if (off) {",
          "1336:     switch (m->in_op & FILE_OPS_MASK) {",
          "",
          "[Removed Lines]",
          "1333:    if (nbytes < (offset + 2))",
          "",
          "[Added Lines]",
          "1333:    if (nbytes < offset || nbytes < (offset + 2))",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1367:    break;",
          "1368:   case FILE_BELONG:",
          "1369:   case FILE_BEID3:",
          "1371:     return 0;",
          "1372:    if (off) {",
          "1373:     switch (m->in_op & FILE_OPS_MASK) {",
          "",
          "[Removed Lines]",
          "1370:    if (nbytes < (offset + 4))",
          "",
          "[Added Lines]",
          "1370:    if (nbytes < offset || nbytes < (offset + 4))",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1438:    break;",
          "1439:   case FILE_LELONG:",
          "1440:   case FILE_LEID3:",
          "1442:     return 0;",
          "1443:    if (off) {",
          "1444:     switch (m->in_op & FILE_OPS_MASK) {",
          "",
          "[Removed Lines]",
          "1441:    if (nbytes < (offset + 4))",
          "",
          "[Added Lines]",
          "1441:    if (nbytes < offset || nbytes < (offset + 4))",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1508:     offset = ~offset;",
          "1509:    break;",
          "1510:   case FILE_MELONG:",
          "1512:     return 0;",
          "1513:    if (off) {",
          "1514:     switch (m->in_op & FILE_OPS_MASK) {",
          "",
          "[Removed Lines]",
          "1511:    if (nbytes < (offset + 4))",
          "",
          "[Added Lines]",
          "1511:    if (nbytes < offset || nbytes < (offset + 4))",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1578:     offset = ~offset;",
          "1579:    break;",
          "1580:   case FILE_LONG:",
          "1582:     return 0;",
          "1583:    if (off) {",
          "1584:     switch (m->in_op & FILE_OPS_MASK) {",
          "",
          "[Removed Lines]",
          "1581:    if (nbytes < (offset + 4))",
          "",
          "[Added Lines]",
          "1581:    if (nbytes < offset || nbytes < (offset + 4))",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1612:    if (m->in_op & FILE_OPINVERSE)",
          "1613:     offset = ~offset;",
          "1614:    break;",
          "1615:   }",
          "1618:   case FILE_LEID3:",
          "1619:   case FILE_BEID3:",
          "1620:    offset = ((((offset >>  0) & 0x7f) <<  0) |",
          "",
          "[Removed Lines]",
          "1617:   switch (cvt_flip(m->in_type, flip)) {",
          "",
          "[Added Lines]",
          "1615:   default:",
          "1616:    break;",
          "1619:   switch (in_type) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d6f8888a02bda2e0c75bc50d99554c6641ed551d",
      "candidate_info": {
        "commit_hash": "d6f8888a02bda2e0c75bc50d99554c6641ed551d",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/d6f8888a02bda2e0c75bc50d99554c6641ed551d",
        "files": [
          "src/softmagic.c"
        ],
        "message": "handle line terminators better.",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.207 2015/01/02 21:29:39 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.208 2015/01/05 00:16:01 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "518:    t = ms->offset + strlen(str);",
          "520:    if (*m->value.s == '\\0')",
          "523:    if (m->str_flags & STRING_TRIM) {",
          "524:     char *last;",
          "",
          "[Removed Lines]",
          "521:     str[strcspn(str, \"\\n\")] = '\\0';",
          "",
          "[Added Lines]",
          "521:     str[strcspn(str, \"\\r\\n\")] = '\\0';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "707:    uint32_t t;",
          "709:    if (*m->value.s == '\\0')",
          "711:    t = CAST(uint32_t, (ms->offset + strlen(p->s)));",
          "712:    if (m->type == FILE_PSTRING)",
          "713:     t += (uint32_t)file_pstring_length_size(m);",
          "",
          "[Removed Lines]",
          "710:     p->s[strcspn(p->s, \"\\n\")] = '\\0';",
          "",
          "[Added Lines]",
          "710:     p->s[strcspn(p->s, \"\\r\\n\")] = '\\0';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6f737ddfadb596d7d4a993f7ed2141ffd664a81c",
      "candidate_info": {
        "commit_hash": "6f737ddfadb596d7d4a993f7ed2141ffd664a81c",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/6f737ddfadb596d7d4a993f7ed2141ffd664a81c",
        "files": [
          "src/file.h",
          "src/funcs.c",
          "src/softmagic.c"
        ],
        "message": "- reduce recursion level from 20 to 10 and make a symbolic constant for it. - pull out the guts of saving and restoring the output buffer into functions   and take care not to overwrite the error message if an error happened.",
        "before_after_code_files": [
          "src/file.h||src/file.h",
          "src/funcs.c||src/funcs.c",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/file.h||src/file.h": [
          "File: src/file.h -> src/file.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "495: protected void file_regfree(file_regex_t *);",
          "496: protected void file_regerror(file_regex_t *, int, struct magic_set *);",
          "498: #ifndef COMPILE_ONLY",
          "499: extern const char *file_names[];",
          "500: extern const size_t file_nnames;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "498: typedef struct {",
          "499:  char *buf;",
          "500:  uint32_t offset;",
          "501: } file_pushbuf_t;",
          "503: protected file_pushbuf_t *file_push_buffer(struct magic_set *);",
          "504: protected char  *file_pop_buffer(struct magic_set *, file_pushbuf_t *);",
          "",
          "---------------"
        ],
        "src/funcs.c||src/funcs.c": [
          "File: src/funcs.c -> src/funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "33: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.72 2014/05/14 23:15:42 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.73 2014/09/10 18:41:51 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "491:  file_magerror(ms, \"regex error %d for `%s', (%s)\", rc, rx->pat,",
          "492:      errmsg);",
          "493: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "495: protected file_pushbuf_t *",
          "496: file_push_buffer(struct magic_set *ms)",
          "497: {",
          "498:  file_pushbuf_t *pb;",
          "500:  if (ms->event_flags & EVENT_HAD_ERR)",
          "501:   return NULL;",
          "503:  if ((pb = (CAST(file_pushbuf_t *, malloc(sizeof(*pb))))) == NULL)",
          "504:   return NULL;",
          "506:  pb->buf = ms->o.buf;",
          "507:  pb->offset = ms->offset;",
          "509:  ms->o.buf = NULL;",
          "510:  ms->offset = 0;",
          "512:  return pb;",
          "513: }",
          "515: protected char *",
          "516: file_pop_buffer(struct magic_set *ms, file_pushbuf_t *pb)",
          "517: {",
          "518:  char *rbuf;",
          "520:  if (ms->event_flags & EVENT_HAD_ERR) {",
          "521:   free(pb->buf);",
          "522:   free(pb);",
          "523:   return NULL;",
          "524:  }",
          "526:  rbuf = ms->o.buf;",
          "528:  ms->o.buf = pb->buf;",
          "529:  ms->offset = pb->offset;",
          "531:  free(pb);",
          "532:  return rbuf;",
          "533: }",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.196 2014/11/07 15:24:14 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.197 2014/11/11 17:48:23 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63: private void cvt_64(union VALUETYPE *, const struct magic *);",
          "65: #define OFFSET_OOB(n, o, i) ((n) < (o) || (i) > ((n) - (o)))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67: #define MAX_RECURSION_LEVEL 10",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1217:     int flip, int recursion_level, int *printed_something,",
          "1218:     int *need_separator, int *returnval)",
          "1219: {",
          "1221:  uint32_t lhs;",
          "1222:  int rv, oneed_separator, in_type;",
          "1224:  union VALUETYPE *p = &ms->ms_value;",
          "1225:  struct mlist ml;",
          "1228:   file_error(ms, 0, \"recursion nesting exceeded\");",
          "1229:   return -1;",
          "1230:  }",
          "",
          "[Removed Lines]",
          "1220:  uint32_t soffset, offset = ms->offset;",
          "1223:  char *sbuf, *rbuf;",
          "1227:  if (recursion_level >= 20) {",
          "",
          "[Added Lines]",
          "1223:  uint32_t offset = ms->offset;",
          "1225:  file_pushbuf_t *pb;",
          "1227:  char *rbuf;",
          "1231:  if (recursion_level >= MAX_RECURSION_LEVEL) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1669:  case FILE_INDIRECT:",
          "1670:   if (offset == 0)",
          "1671:    return 0;",
          "1672:   if (nbytes < offset)",
          "1673:    return 0;",
          "1678:   rv = file_softmagic(ms, s + offset, nbytes - offset,",
          "1679:       recursion_level, BINTEST, text);",
          "1680:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "1681:    fprintf(stderr, \"indirect @offs=%u[%d]\\n\", offset, rv);",
          "1685:   if (rv == 1) {",
          "1686:    if ((ms->flags & (MAGIC_MIME|MAGIC_APPLE)) == 0 &&",
          "1687:        file_printf(ms, F(ms, m, \"%u\"), offset) == -1) {",
          "",
          "[Removed Lines]",
          "1674:   sbuf = ms->o.buf;",
          "1675:   soffset = ms->offset;",
          "1676:   ms->o.buf = NULL;",
          "1677:   ms->offset = 0;",
          "1682:   rbuf = ms->o.buf;",
          "1683:   ms->o.buf = sbuf;",
          "1684:   ms->offset = soffset;",
          "",
          "[Added Lines]",
          "1680:   if ((pb = file_push_buffer(ms)) == NULL)",
          "1681:    return -1;",
          "1689:   rbuf = file_pop_buffer(ms, pb);",
          "1690:   if (rbuf == NULL)",
          "1691:    return -1;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1699:  case FILE_USE:",
          "1700:   if (nbytes < offset)",
          "1701:    return 0;",
          "1705:    flip = !flip;",
          "1706:   }",
          "1709:    return -1;",
          "1710:   }",
          "",
          "[Removed Lines]",
          "1702:   sbuf = m->value.s;",
          "1703:   if (*sbuf == '^') {",
          "1704:    sbuf++;",
          "1707:   if (file_magicfind(ms, sbuf, &ml) == -1) {",
          "1708:    file_error(ms, 0, \"cannot find entry `%s'\", sbuf);",
          "",
          "[Added Lines]",
          "1710:   rbuf = m->value.s;",
          "1711:   if (*rbuf == '^') {",
          "1712:    rbuf++;",
          "1715:   if (file_magicfind(ms, rbuf, &ml) == -1) {",
          "1716:    file_error(ms, 0, \"cannot find entry `%s'\", rbuf);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6bf45271eb8e0e6577b92042ce2003ba998d1686",
      "candidate_info": {
        "commit_hash": "6bf45271eb8e0e6577b92042ce2003ba998d1686",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/6bf45271eb8e0e6577b92042ce2003ba998d1686",
        "files": [
          "src/softmagic.c"
        ],
        "message": "Don't bail if there was no error, buf could have been NULL on entry.",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.201 2014/11/28 02:35:05 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.202 2014/11/28 02:46:39 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1700:    fprintf(stderr, \"indirect @offs=%u[%d]\\n\", offset, rv);",
          "1702:   rbuf = file_pop_buffer(ms, pb);",
          "1704:    return -1;",
          "1706:   if (rv == 1) {",
          "",
          "[Removed Lines]",
          "1703:   if (rbuf == NULL)",
          "",
          "[Added Lines]",
          "1703:   if (rbuf == NULL && ms->event_flags & EVENT_HAD_ERR)",
          "",
          "---------------"
        ]
      }
    }
  ]
}