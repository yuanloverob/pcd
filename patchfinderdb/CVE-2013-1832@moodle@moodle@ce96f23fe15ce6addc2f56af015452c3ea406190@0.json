{
  "cve_id": "CVE-2013-1832",
  "cve_desc": "repository/webdav/lib.php in Moodle 2.x through 2.1.10, 2.2.x before 2.2.8, 2.3.x before 2.3.5, and 2.4.x before 2.4.2 includes the WebDAV password in the configuration form, which allows remote authenticated administrators to obtain sensitive information by configuring an instance.",
  "repo": "moodle/moodle",
  "patch_hash": "ce96f23fe15ce6addc2f56af015452c3ea406190",
  "patch_info": {
    "commit_hash": "ce96f23fe15ce6addc2f56af015452c3ea406190",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/ce96f23fe15ce6addc2f56af015452c3ea406190",
    "files": [
      "repository/webdav/lib.php"
    ],
    "message": "MDL-37681 repository_webdav: improved form handling when configuring an instance",
    "before_after_code_files": [
      "repository/webdav/lib.php||repository/webdav/lib.php"
    ]
  },
  "patch_diff": {
    "repository/webdav/lib.php||repository/webdav/lib.php": [
      "File: repository/webdav/lib.php -> repository/webdav/lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "177:         $mform->addElement('select', 'webdav_auth', get_string('authentication', 'admin'), $choices);",
      "178:         $mform->addRule('webdav_auth', get_string('required'), 'required', null, 'client');",
      "181:         $mform->addElement('text', 'webdav_port', get_string('webdav_port', 'repository_webdav'), array('size' => '40'));",
      "182:         $mform->addElement('text', 'webdav_user', get_string('webdav_user', 'repository_webdav'), array('size' => '40'));",
      "184:     }",
      "185:     public function supported_returntypes() {",
      "186:         return (FILE_INTERNAL | FILE_EXTERNAL);",
      "",
      "[Removed Lines]",
      "183:         $mform->addElement('text', 'webdav_password', get_string('webdav_password', 'repository_webdav'), array('size' => '40'));",
      "",
      "[Added Lines]",
      "182:         $mform->addElement('password', 'webdav_password', get_string('webdav_password', 'repository_webdav'),",
      "183:             array('size' => '40'));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "46eec6e46b89a7e8e3f08e460d917f2d1a2959d8",
      "candidate_info": {
        "commit_hash": "46eec6e46b89a7e8e3f08e460d917f2d1a2959d8",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/46eec6e46b89a7e8e3f08e460d917f2d1a2959d8",
        "files": [
          "repository/webdav/lib.php"
        ],
        "message": "MDL-37681 repository_webdav: improved form handling when configuring an instance",
        "before_after_code_files": [
          "repository/webdav/lib.php||repository/webdav/lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "repository/webdav/lib.php||repository/webdav/lib.php"
          ],
          "candidate": [
            "repository/webdav/lib.php||repository/webdav/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "repository/webdav/lib.php||repository/webdav/lib.php": [
          "File: repository/webdav/lib.php -> repository/webdav/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "202:         $mform->addElement('select', 'webdav_auth', get_string('authentication', 'admin'), $choices);",
          "203:         $mform->addRule('webdav_auth', get_string('required'), 'required', null, 'client');",
          "206:         $mform->addElement('text', 'webdav_port', get_string('webdav_port', 'repository_webdav'), array('size' => '40'));",
          "207:         $mform->addElement('text', 'webdav_user', get_string('webdav_user', 'repository_webdav'), array('size' => '40'));",
          "209:     }",
          "210:     public function supported_returntypes() {",
          "211:         return (FILE_INTERNAL | FILE_EXTERNAL);",
          "",
          "[Removed Lines]",
          "208:         $mform->addElement('text', 'webdav_password', get_string('webdav_password', 'repository_webdav'), array('size' => '40'));",
          "",
          "[Added Lines]",
          "207:         $mform->addElement('password', 'webdav_password', get_string('webdav_password', 'repository_webdav'),",
          "208:             array('size' => '40'));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "92e592385784ec7ea5b5328a0c3c1608d321ad32",
      "candidate_info": {
        "commit_hash": "92e592385784ec7ea5b5328a0c3c1608d321ad32",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/92e592385784ec7ea5b5328a0c3c1608d321ad32",
        "files": [
          "repository/webdav/lib.php"
        ],
        "message": "MDL-37681 repository_webdav: improved form handling when configuring an instance",
        "before_after_code_files": [
          "repository/webdav/lib.php||repository/webdav/lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "repository/webdav/lib.php||repository/webdav/lib.php"
          ],
          "candidate": [
            "repository/webdav/lib.php||repository/webdav/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "repository/webdav/lib.php||repository/webdav/lib.php": [
          "File: repository/webdav/lib.php -> repository/webdav/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "177:         $mform->addElement('select', 'webdav_auth', get_string('authentication', 'admin'), $choices);",
          "178:         $mform->addRule('webdav_auth', get_string('required'), 'required', null, 'client');",
          "181:         $mform->addElement('text', 'webdav_port', get_string('webdav_port', 'repository_webdav'), array('size' => '40'));",
          "182:         $mform->addElement('text', 'webdav_user', get_string('webdav_user', 'repository_webdav'), array('size' => '40'));",
          "184:     }",
          "185:     public function supported_returntypes() {",
          "186:         return (FILE_INTERNAL | FILE_EXTERNAL);",
          "",
          "[Removed Lines]",
          "183:         $mform->addElement('text', 'webdav_password', get_string('webdav_password', 'repository_webdav'), array('size' => '40'));",
          "",
          "[Added Lines]",
          "182:         $mform->addElement('password', 'webdav_password', get_string('webdav_password', 'repository_webdav'),",
          "183:             array('size' => '40'));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0e94caf991d4e399726e5dc0769873d9f753a727",
      "candidate_info": {
        "commit_hash": "0e94caf991d4e399726e5dc0769873d9f753a727",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/0e94caf991d4e399726e5dc0769873d9f753a727",
        "files": [
          "repository/webdav/lib.php"
        ],
        "message": "MDL-37681 repository_webdav: improved form handling when configuring an instance",
        "before_after_code_files": [
          "repository/webdav/lib.php||repository/webdav/lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "repository/webdav/lib.php||repository/webdav/lib.php"
          ],
          "candidate": [
            "repository/webdav/lib.php||repository/webdav/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "repository/webdav/lib.php||repository/webdav/lib.php": [
          "File: repository/webdav/lib.php -> repository/webdav/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "177:         $mform->addElement('select', 'webdav_auth', get_string('authentication', 'admin'), $choices);",
          "178:         $mform->addRule('webdav_auth', get_string('required'), 'required', null, 'client');",
          "181:         $mform->addElement('text', 'webdav_port', get_string('webdav_port', 'repository_webdav'), array('size' => '40'));",
          "182:         $mform->addElement('text', 'webdav_user', get_string('webdav_user', 'repository_webdav'), array('size' => '40'));",
          "184:     }",
          "185:     public function supported_returntypes() {",
          "186:         return (FILE_INTERNAL | FILE_EXTERNAL);",
          "",
          "[Removed Lines]",
          "183:         $mform->addElement('text', 'webdav_password', get_string('webdav_password', 'repository_webdav'), array('size' => '40'));",
          "",
          "[Added Lines]",
          "182:         $mform->addElement('password', 'webdav_password', get_string('webdav_password', 'repository_webdav'),",
          "183:             array('size' => '40'));",
          "",
          "---------------"
        ]
      }
    }
  ]
}