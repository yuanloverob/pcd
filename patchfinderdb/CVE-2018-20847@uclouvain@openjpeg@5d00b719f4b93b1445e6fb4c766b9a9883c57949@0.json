{
  "cve_id": "CVE-2018-20847",
  "cve_desc": "An improper computation of p_tx0, p_tx1, p_ty0 and p_ty1 in the function opj_get_encoding_parameters in openjp2/pi.c in OpenJPEG through 2.3.0 can lead to an integer overflow.",
  "repo": "uclouvain/openjpeg",
  "patch_hash": "5d00b719f4b93b1445e6fb4c766b9a9883c57949",
  "patch_info": {
    "commit_hash": "5d00b719f4b93b1445e6fb4c766b9a9883c57949",
    "repo": "uclouvain/openjpeg",
    "commit_url": "https://github.com/uclouvain/openjpeg/commit/5d00b719f4b93b1445e6fb4c766b9a9883c57949",
    "files": [
      "src/lib/openjp2/pi.c",
      "src/lib/openjp2/tcd.c"
    ],
    "message": "[trunk] fixed a buffer overflow in opj_tcd_init_decode_tile\n\nUpdate issue 431",
    "before_after_code_files": [
      "src/lib/openjp2/pi.c||src/lib/openjp2/pi.c",
      "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c"
    ]
  },
  "patch_diff": {
    "src/lib/openjp2/pi.c||src/lib/openjp2/pi.c": [
      "File: src/lib/openjp2/pi.c -> src/lib/openjp2/pi.c"
    ],
    "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c": [
      "File: src/lib/openjp2/tcd.c -> src/lib/openjp2/tcd.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "709:  if (l_tccp->numresolutions == 0) {",
      "710:   fprintf(stderr, \"tiles require at least one resolution\\n\");",
      "",
      "[Removed Lines]",
      "704:  l_tile->x0 = opj_int_max((OPJ_INT32)(l_cp->tx0 + p * l_cp->tdx), (OPJ_INT32)l_image->x0);",
      "705:  l_tile->y0 = opj_int_max((OPJ_INT32)(l_cp->ty0 + q * l_cp->tdy), (OPJ_INT32)l_image->y0);",
      "706:  l_tile->x1 = opj_int_min((OPJ_INT32)(l_cp->tx0 + (p + 1) * l_cp->tdx), (OPJ_INT32)l_image->x1);",
      "707:  l_tile->y1 = opj_int_min((OPJ_INT32)(l_cp->ty0 + (q + 1) * l_cp->tdy), (OPJ_INT32)l_image->y1);",
      "",
      "[Added Lines]",
      "704:  l_tile->x0 = (OPJ_INT32)opj_uint_max(l_cp->tx0 + p * l_cp->tdx, l_image->x0);",
      "705:  l_tile->y0 = (OPJ_INT32)opj_uint_max(l_cp->ty0 + q * l_cp->tdy, l_image->y0);",
      "706:  l_tile->x1 = (OPJ_INT32)opj_uint_min(l_cp->tx0 + (p + 1) * l_cp->tdx, l_image->x1);",
      "707:  l_tile->y1 = (OPJ_INT32)opj_uint_min(l_cp->ty0 + (q + 1) * l_cp->tdy, l_image->y1);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c3629e37a206ec8a60da6c00dbc04bf4a28b2868",
      "candidate_info": {
        "commit_hash": "c3629e37a206ec8a60da6c00dbc04bf4a28b2868",
        "repo": "uclouvain/openjpeg",
        "commit_url": "https://github.com/uclouvain/openjpeg/commit/c3629e37a206ec8a60da6c00dbc04bf4a28b2868",
        "files": [
          "src/lib/openjp2/j2k.c",
          "src/lib/openjp2/t1.c",
          "src/lib/openjp2/t1.h",
          "src/lib/openjp2/tcd.c",
          "src/lib/openjp2/tcd.h"
        ],
        "message": "[trunk] significantly reduces memory for single tile RGB encoding (fixes issue 375)",
        "before_after_code_files": [
          "src/lib/openjp2/j2k.c||src/liopenjp2/j2k.c",
          "src/lib/openjp2/t1.c||src/liopenjp2/t1.c",
          "src/lib/openjp2/t1.h||src/liopenjp2/t1.h",
          "src/lib/openjp2/tcd.c||src/liopenjp2/tcd.c",
          "src/lib/openjp2/tcd.h||src/liopenjp2/tcd.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c"
          ],
          "candidate": [
            "src/lib/openjp2/tcd.c||src/liopenjp2/tcd.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/openjp2/j2k.c||src/liopenjp2/j2k.c": [
          "File: src/lib/openjp2/j2k.c -> src/liopenjp2/j2k.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "339: static OPJ_BOOL opj_j2k_update_image_data (opj_tcd_t * p_tcd, OPJ_BYTE * p_data, opj_image_t* p_output_image);",
          "341: static void opj_j2k_get_tile_data (opj_tcd_t * p_tcd, OPJ_BYTE * p_data);",
          "343: static OPJ_BOOL opj_j2k_post_write_tile (opj_j2k_t * p_j2k,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9756:                         opj_stream_private_t *p_stream,",
          "9757:                         opj_event_mgr_t * p_manager )",
          "9758: {",
          "9760:         OPJ_UINT32 l_nb_tiles;",
          "9765:         assert(p_j2k != 00);",
          "9766:         assert(p_stream != 00);",
          "9767:         assert(p_manager != 00);",
          "9776:         l_nb_tiles = p_j2k->m_cp.th * p_j2k->m_cp.tw;",
          "9777:         for (i=0;i<l_nb_tiles;++i) {",
          "9778:                 if (! opj_j2k_pre_write_tile(p_j2k,i,p_stream,p_manager)) {",
          "9780:                         return OPJ_FALSE;",
          "9781:                 }",
          "9790:                         }",
          "9793:                 }",
          "9797:                 if (! opj_j2k_post_write_tile (p_j2k,l_current_data,l_current_tile_size,p_stream,p_manager)) {",
          "9798:                         return OPJ_FALSE;",
          "9799:                 }",
          "9800:         }",
          "9803:         return OPJ_TRUE;",
          "9804: }",
          "",
          "[Removed Lines]",
          "9759:         OPJ_UINT32 i;",
          "9761:         OPJ_UINT32 l_max_tile_size, l_current_tile_size;",
          "9762:         OPJ_BYTE * l_current_data;",
          "9769:         l_current_data = (OPJ_BYTE*)opj_malloc(1000);",
          "9770:         if (! l_current_data) {",
          "9771:                 opj_event_msg(p_manager, EVT_ERROR, \"Not enough memory to encode all tiles\\n\");",
          "9772:                 return OPJ_FALSE;",
          "9773:         }",
          "9774:         l_max_tile_size = 1000;",
          "9779:                         opj_free(l_current_data);",
          "9783:                 l_current_tile_size = opj_tcd_get_encoded_tile_size(p_j2k->m_tcd);",
          "9784:                 if (l_current_tile_size > l_max_tile_size) {",
          "9785:                         OPJ_BYTE *l_new_current_data = (OPJ_BYTE *) opj_realloc(l_current_data, l_current_tile_size);",
          "9786:                         if (! l_new_current_data) {",
          "9787:                                 opj_free(l_current_data);",
          "9788:                                 opj_event_msg(p_manager, EVT_ERROR, \"Not enough memory to encode all tiles\\n\");",
          "9789:                                 return OPJ_FALSE;",
          "9791:                         l_current_data = l_new_current_data;",
          "9792:                         l_max_tile_size = l_current_tile_size;",
          "9795:                 opj_j2k_get_tile_data(p_j2k->m_tcd,l_current_data);",
          "9802:         opj_free(l_current_data);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "9891:         return OPJ_TRUE;",
          "9892: }",
          "9894: void opj_j2k_get_tile_data (opj_tcd_t * p_tcd, OPJ_BYTE * p_data)",
          "9895: {",
          "9896:         OPJ_UINT32 i,j,k = 0;",
          "9907:         for (i=0;i<p_tcd->image->numcomps;++i) {",
          "9926:                 switch (l_size_comp) {",
          "9927:                         case 1:",
          "",
          "[Removed Lines]",
          "9897:         OPJ_UINT32 l_width,l_height,l_stride, l_offset_x,l_offset_y, l_image_width;",
          "9898:         opj_image_comp_t * l_img_comp = 00;",
          "9899:         opj_tcd_tilecomp_t * l_tilec = 00;",
          "9900:         opj_image_t * l_image = 00;",
          "9901:         OPJ_UINT32 l_size_comp, l_remaining;",
          "9902:         OPJ_INT32 * l_src_ptr;",
          "9903:         l_tilec = p_tcd->tcd_image->tiles->comps;",
          "9904:         l_image = p_tcd->image;",
          "9905:         l_img_comp = l_image->comps;",
          "9910:                 if (l_remaining) {",
          "9911:                         ++l_size_comp;",
          "9912:                 }",
          "9914:                 if (l_size_comp == 3) {",
          "9915:                         l_size_comp = 4;",
          "9916:                 }",
          "9918:                 l_width  = (OPJ_UINT32)(l_tilec->x1 - l_tilec->x0);",
          "9919:                 l_height = (OPJ_UINT32)(l_tilec->y1 - l_tilec->y0);",
          "9920:                 l_offset_x = (OPJ_UINT32)opj_int_ceildiv((OPJ_INT32)l_image->x0, (OPJ_INT32)l_img_comp->dx);",
          "9921:                 l_offset_y = (OPJ_UINT32)opj_int_ceildiv((OPJ_INT32)l_image->y0, (OPJ_INT32)l_img_comp->dy);",
          "9922:                 l_image_width = (OPJ_UINT32)opj_int_ceildiv((OPJ_INT32)l_image->x1 - (OPJ_INT32)l_image->x0, (OPJ_INT32)l_img_comp->dx);",
          "9923:                 l_stride = l_image_width - l_width;",
          "9924:                 l_src_ptr = l_img_comp->data + ((OPJ_UINT32)l_tilec->x0 - l_offset_x) + ((OPJ_UINT32)l_tilec->y0 - l_offset_y) * l_image_width;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "9988:                                 }",
          "9989:                                 break;",
          "9990:                 }",
          "9994:         }",
          "9995: }",
          "",
          "[Removed Lines]",
          "9992:                 ++l_img_comp;",
          "9993:                 ++l_tilec;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "10010:         assert(p_j2k->m_specific_param.m_encoder.m_encoded_tile_data);",
          "10012:         l_tcd = p_j2k->m_tcd;",
          "10014:         l_tile_size = p_j2k->m_specific_param.m_encoder.m_encoded_tile_size;",
          "10015:         l_available_data = l_tile_size;",
          "10016:         l_current_data = p_j2k->m_specific_param.m_encoder.m_encoded_tile_data;",
          "10023:         l_nb_bytes_written = 0;",
          "10024:         if (! opj_j2k_write_first_tile_part(p_j2k,l_current_data,&l_nb_bytes_written,l_available_data,p_stream,p_manager)) {",
          "10025:                 return OPJ_FALSE;",
          "",
          "[Removed Lines]",
          "10018:         if (! opj_tcd_copy_tile_data(l_tcd,p_data,p_data_size)) {",
          "10019:                 opj_event_msg(p_manager, EVT_ERROR, \"Size mismatch between tile data and sent data.\" );",
          "10020:                 return OPJ_FALSE;",
          "10021:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "10490:                 return OPJ_FALSE;",
          "10491:         }",
          "10492:         else {",
          "10493:                 if (! opj_j2k_post_write_tile(p_j2k,p_data,p_data_size,p_stream,p_manager)) {",
          "10494:                         opj_event_msg(p_manager, EVT_ERROR, \"Error while opj_j2k_post_write_tile with tile index = %d\\n\", p_tile_index);",
          "10495:                         return OPJ_FALSE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/lib/openjp2/t1.c||src/liopenjp2/t1.c": [
          "File: src/lib/openjp2/t1.c -> src/liopenjp2/t1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "496:     opj_t1_enc_sigpass_step(",
          "497:       t1,",
          "498:       &t1->flags[((j+1) * t1->flags_stride) + i + 1],",
          "500:       orient,",
          "501:       bpno,",
          "502:       one,",
          "",
          "[Removed Lines]",
          "499:       &t1->data[(j * t1->w) + i],",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "718:     opj_t1_enc_refpass_step(",
          "719:       t1,",
          "720:       &t1->flags[((j+1) * t1->flags_stride) + i + 1],",
          "722:       bpno,",
          "723:       one,",
          "724:       nmsedec,",
          "",
          "[Removed Lines]",
          "721:       &t1->data[(j * t1->w) + i],",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "970:    }",
          "971:    if (agg) {",
          "972:     for (runlen = 0; runlen < 4; ++runlen) {",
          "974:       break;",
          "975:     }",
          "976:     opj_mqc_setcurctx(mqc, T1_CTXNO_AGG);",
          "",
          "[Removed Lines]",
          "973:      if (opj_int_abs(t1->data[((k + runlen)*t1->w) + i]) & one)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "989:     opj_t1_enc_clnpass_step(",
          "990:       t1,",
          "991:       &t1->flags[((j+1) * t1->flags_stride) + i + 1],",
          "993:       orient,",
          "994:       bpno,",
          "995:       one,",
          "",
          "[Removed Lines]",
          "992:       &t1->data[(j * t1->w) + i],",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1166:  OPJ_UINT32 datasize=w * h;",
          "1167:  OPJ_UINT32 flagssize;",
          "1175:   }",
          "1177:  }",
          "1180:  t1->flags_stride=w+2;",
          "1181:  flagssize=t1->flags_stride * (h+2);",
          "",
          "[Removed Lines]",
          "1169:  if(datasize > t1->datasize){",
          "1170:   opj_aligned_free(t1->data);",
          "1171:   t1->data = (OPJ_INT32*) opj_aligned_malloc(datasize * sizeof(OPJ_INT32));",
          "1172:   if(!t1->data){",
          "1174:    return OPJ_FALSE;",
          "1176:   t1->datasize=datasize;",
          "1178:  memset(t1->data,0,datasize * sizeof(OPJ_INT32));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1209: {",
          "1210:  opj_t1_t *l_t1 = 00;",
          "",
          "[Removed Lines]",
          "1208: opj_t1_t* opj_t1_create()",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1226:   opj_t1_destroy(l_t1);",
          "1227:   return 00;",
          "1228:  }",
          "1230:  return l_t1;",
          "1231: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1248:  opj_raw_destroy(p_t1->raw);",
          "1249:  p_t1->raw = 00;",
          "1252:   opj_aligned_free(p_t1->data);",
          "1253:   p_t1->data = 00;",
          "1254:  }",
          "",
          "[Removed Lines]",
          "1251:     if (p_t1->data) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1483:      for (cblkno = 0; cblkno < prc->cw * prc->ch; ++cblkno) {",
          "1484:       opj_tcd_cblk_enc_t* cblk = &prc->cblks.enc[cblkno];",
          "1486:       OPJ_INT32* restrict tiledp;",
          "1487:       OPJ_UINT32 cblk_w;",
          "1488:       OPJ_UINT32 cblk_h;",
          "1491:       OPJ_INT32 x = cblk->x0 - band->x0;",
          "1492:       OPJ_INT32 y = cblk->y0 - band->y0;",
          "",
          "[Removed Lines]",
          "1485:       OPJ_INT32 * restrict datap;",
          "1489:       OPJ_UINT32 i, j;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1507:        return OPJ_FALSE;",
          "1508:       }",
          "1511:       cblk_w = t1->w;",
          "1512:       cblk_h = t1->h;",
          "1514:       tiledp=&tilec->data[(OPJ_UINT32)y * tile_w + (OPJ_UINT32)x];",
          "1515:       if (tccp->qmfbid == 1) {",
          "1516:        for (j = 0; j < cblk_h; ++j) {",
          "1517:         for (i = 0; i < cblk_w; ++i) {",
          "1520:         }",
          "1521:        }",
          "1523:        for (j = 0; j < cblk_h; ++j) {",
          "1524:         for (i = 0; i < cblk_w; ++i) {",
          "1527:           opj_int_fix_mul(",
          "1528:           tmp,",
          "1529:           bandconst) >> (11 - T1_NMSEDEC_FRACBITS);",
          "1530:         }",
          "1531:        }",
          "1532:       }",
          "",
          "[Removed Lines]",
          "1510:       datap=t1->data;",
          "1518:          OPJ_INT32 tmp = tiledp[(j * tile_w) + i];",
          "1519:          datap[(j * cblk_w) + i] = tmp << T1_NMSEDEC_FRACBITS;",
          "1525:          OPJ_INT32 tmp = tiledp[(j * tile_w) + i];",
          "1526:          datap[(j * cblk_w) + i] =",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1574:  OPJ_UINT32 passtype;",
          "1575:  OPJ_INT32 nmsedec = 0;",
          "1576:  OPJ_INT32 max;",
          "1578:  OPJ_BYTE type = T1_TYPE_MQ;",
          "1579:  OPJ_FLOAT64 tempwmsedec;",
          "1581:  max = 0;",
          "1585:  }",
          "1587:  cblk->numbps = max ? (OPJ_UINT32)((opj_int_floorlog2(max) + 1) - T1_NMSEDEC_FRACBITS) : 0;",
          "",
          "[Removed Lines]",
          "1577:  OPJ_UINT32 i;",
          "1582:  for (i = 0; i < t1->w * t1->h; ++i) {",
          "1583:   OPJ_INT32 tmp = abs(t1->data[i]);",
          "1584:   max = opj_int_max(max, tmp);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/lib/openjp2/t1.h||src/liopenjp2/t1.h": [
          "File: src/lib/openjp2/t1.h -> src/liopenjp2/t1.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "104:  opj_raw_t *raw;",
          "107:  opj_flag_t *flags;",
          "108:  OPJ_UINT32 w;",
          "109:  OPJ_UINT32 h;",
          "110:  OPJ_UINT32 datasize;",
          "111:  OPJ_UINT32 flagssize;",
          "112:  OPJ_UINT32 flags_stride;",
          "113: } opj_t1_t;",
          "115: #define MACRO_t1_flags(x,y) t1->flags[((x)*(t1->flags_stride))+(y)]",
          "",
          "[Removed Lines]",
          "106:     OPJ_INT32 *data;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "150: opj_t1_t* opj_t1_create(void);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/lib/openjp2/tcd.c||src/liopenjp2/tcd.c": [
          "File: src/lib/openjp2/tcd.c -> src/liopenjp2/tcd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "611:         }",
          "612: }",
          "615: #define OPJ_MACRO_TCD_ALLOCATE(FUNCTION,TYPE,FRACTION,ELEMENT,FUNCTION_ELEMENT)                                                                                                                                       \\",
          "616: OPJ_BOOL FUNCTION (     opj_tcd_t *p_tcd,                        \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "695:                         - l_cp->m_specific_param.m_dec.m_reduce;    \\",
          "696:                 }                                                   \\",
          "697:                                                                     \\",
          "721:                                                                     \\",
          "722:                 l_data_size = l_tilec->numresolutions * (OPJ_UINT32)sizeof(opj_tcd_resolution_t);                                                                                                                          \\",
          "723:                                                                     \\",
          "",
          "[Removed Lines]",
          "698:                 if (l_tilec->data == 00) {                          \\",
          "699:                         l_tilec->data = (OPJ_INT32 *) opj_malloc(l_data_size);                                                                                                                                    \\",
          "700:                         if (! l_tilec->data ) {                     \\",
          "701:                                 return OPJ_FALSE;                   \\",
          "702:                         }                                           \\",
          "704:                                                                     \\",
          "705:                         l_tilec->data_size = l_data_size;           \\",
          "706:                 }                                                   \\",
          "707:                 else if (l_data_size > l_tilec->data_size) {        \\",
          "708:                         OPJ_INT32 * new_data = (OPJ_INT32 *) opj_realloc(l_tilec->data, l_data_size);                                                                                                             \\",
          "710:                         fprintf(stderr, \"Not enough memory to handle tile data\\n\");                                                                                                                               \\",
          "711:                         if (! new_data) {                           \\",
          "712:                                 opj_free(l_tilec->data);            \\",
          "713:                                 l_tilec->data = NULL;               \\",
          "714:                                 l_tilec->data_size = 0;             \\",
          "715:                                 return OPJ_FALSE;                   \\",
          "716:                         }                                           \\",
          "717:                         l_tilec->data = new_data;                   \\",
          "719:                         l_tilec->data_size = l_data_size;           \\",
          "720:                 }                                                   \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1457:                         l_tile_comp->resolutions = 00;",
          "1458:                 }",
          "1461:                         opj_free(l_tile_comp->data);",
          "1462:                         l_tile_comp->data = 00;",
          "1463:                 }",
          "1464:                 ++l_tile_comp;",
          "1465:         }",
          "",
          "[Removed Lines]",
          "1460:                 if (l_tile_comp->data) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1512:         opj_tccp_t * l_tccp = p_tcd->tcp->tccps;",
          "1516:         if (l_t1 == 00) {",
          "1517:                 return OPJ_FALSE;",
          "1518:         }",
          "",
          "[Removed Lines]",
          "1515:         l_t1 = opj_t1_create();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1947:         const OPJ_FLOAT64 * l_mct_norms;",
          "1948:         opj_tcp_t * l_tcp = p_tcd->tcp;",
          "1951:         if (l_t1 == 00) {",
          "1952:                 return OPJ_FALSE;",
          "1953:         }",
          "",
          "[Removed Lines]",
          "1950:         l_t1 = opj_t1_create();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/lib/openjp2/tcd.h||src/liopenjp2/tcd.h": [
          "File: src/lib/openjp2/tcd.h -> src/liopenjp2/tcd.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "346:                                  OPJ_BYTE * p_src,",
          "347:                                  OPJ_UINT32 p_src_length );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3e1fad2da494dcf54b27d4575d164c1719011e7c",
      "candidate_info": {
        "commit_hash": "3e1fad2da494dcf54b27d4575d164c1719011e7c",
        "repo": "uclouvain/openjpeg",
        "commit_url": "https://github.com/uclouvain/openjpeg/commit/3e1fad2da494dcf54b27d4575d164c1719011e7c",
        "files": [
          "src/lib/openjp2/tcd.c"
        ],
        "message": "[trunk] resets resno_decoded for each tile (fixes issue 399)",
        "before_after_code_files": [
          "src/lib/openjp2/tcd.c||src/liopenjp2/tcd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c"
          ],
          "candidate": [
            "src/lib/openjp2/tcd.c||src/liopenjp2/tcd.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/openjp2/tcd.c||src/liopenjp2/tcd.c": [
          "File: src/lib/openjp2/tcd.c -> src/liopenjp2/tcd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "677:         for(compno = 0; compno < l_tile->numcomps; ++compno) {      \\",
          "681:                 l_tilec->x0 = opj_int_ceildiv(l_tile->x0, (OPJ_INT32)l_image_comp->dx);                                                                                                                                          \\",
          "682:                 l_tilec->y0 = opj_int_ceildiv(l_tile->y0, (OPJ_INT32)l_image_comp->dy);                                                                                                                                          \\",
          "",
          "[Removed Lines]",
          "679:                                                                     \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ae1da37558796508abcaff73632fb2ab06decb9f",
      "candidate_info": {
        "commit_hash": "ae1da37558796508abcaff73632fb2ab06decb9f",
        "repo": "uclouvain/openjpeg",
        "commit_url": "https://github.com/uclouvain/openjpeg/commit/ae1da37558796508abcaff73632fb2ab06decb9f",
        "files": [
          "src/lib/openjp2/tcd.c",
          "src/lib/openjp2/tcd.h"
        ],
        "message": "[trunk] replace OPJ_MACRO_TCD_ALLOCATE macro by inlined function (fixes issue 433)",
        "before_after_code_files": [
          "src/lib/openjp2/tcd.c||src/liopenjp2/tcd.c",
          "src/lib/openjp2/tcd.h||src/liopenjp2/tcd.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c"
          ],
          "candidate": [
            "src/lib/openjp2/tcd.c||src/liopenjp2/tcd.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/openjp2/tcd.c||src/liopenjp2/tcd.c": [
          "File: src/lib/openjp2/tcd.c -> src/liopenjp2/tcd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:         fprintf(fd, \"}\\n\");",
          "104: }",
          "105: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "643: }",
          "",
          "[Removed Lines]",
          "646: #define OPJ_MACRO_TCD_ALLOCATE(FUNCTION,TYPE,FRACTION,ELEMENT,FUNCTION_ELEMENT)                                                                                                                                       \\",
          "647: OPJ_BOOL FUNCTION (     opj_tcd_t *p_tcd,                        \\",
          "648:                         OPJ_UINT32 p_tile_no                        \\",
          "649:                         )                                           \\",
          "650: {                                                                   \\",
          "651:         OPJ_UINT32 (*l_gain_ptr)(OPJ_UINT32) = 00;                  \\",
          "652:         OPJ_UINT32 compno, resno, bandno, precno, cblkno;           \\",
          "653:         opj_tcp_t * l_tcp = 00;                                  \\",
          "654:         opj_cp_t * l_cp = 00;                                    \\",
          "655:         opj_tcd_tile_t * l_tile = 00;                            \\",
          "656:         opj_tccp_t *l_tccp = 00;                                    \\",
          "657:         opj_tcd_tilecomp_t *l_tilec = 00;                        \\",
          "658:         opj_image_comp_t * l_image_comp = 00;                       \\",
          "659:         opj_tcd_resolution_t *l_res = 00;                        \\",
          "660:         opj_tcd_band_t *l_band = 00;                             \\",
          "661:         opj_stepsize_t * l_step_size = 00;                          \\",
          "662:         opj_tcd_precinct_t *l_current_precinct = 00;             \\",
          "663:         TYPE* l_code_block = 00;                                    \\",
          "664:         opj_image_t *l_image = 00;                                  \\",
          "665:         OPJ_UINT32 p,q;                                             \\",
          "666:         OPJ_UINT32 l_level_no;                                      \\",
          "667:         OPJ_UINT32 l_pdx, l_pdy;                                    \\",
          "668:         OPJ_UINT32 l_gain;                                          \\",
          "669:         OPJ_INT32 l_x0b, l_y0b;                                     \\",
          "671:         OPJ_INT32 l_tl_prc_x_start, l_tl_prc_y_start, l_br_prc_x_end, l_br_prc_y_end;                                                                                                                             \\",
          "673:         OPJ_UINT32 l_nb_precincts;                                  \\",
          "675:         OPJ_UINT32 l_nb_precinct_size;                              \\",
          "677:         OPJ_UINT32 l_nb_code_blocks;                                \\",
          "679:         OPJ_UINT32 l_nb_code_blocks_size;                           \\",
          "681:         OPJ_UINT32 l_data_size;                                     \\",
          "682:                                                                     \\",
          "683:         l_cp = p_tcd->cp;                                           \\",
          "684:         l_tcp = &(l_cp->tcps[p_tile_no]);                           \\",
          "685:         l_tile = p_tcd->tcd_image->tiles;                           \\",
          "686:         l_tccp = l_tcp->tccps;                                      \\",
          "687:         l_tilec = l_tile->comps;                                    \\",
          "688:         l_image = p_tcd->image;                                     \\",
          "689:         l_image_comp = p_tcd->image->comps;                         \\",
          "690:                                                                     \\",
          "691:         p = p_tile_no % l_cp->tw;       /* tile coordinates */      \\",
          "692:         q = p_tile_no / l_cp->tw;                                   \\",
          "694:                                                                     \\",
          "696:         l_tile->x0 = opj_int_max((OPJ_INT32)(l_cp->tx0 + p * l_cp->tdx), (OPJ_INT32)l_image->x0);                                                                                                                                             \\",
          "697:         l_tile->y0 = opj_int_max((OPJ_INT32)(l_cp->ty0 + q * l_cp->tdy), (OPJ_INT32)l_image->y0);                                                                                                                                             \\",
          "698:         l_tile->x1 = opj_int_min((OPJ_INT32)(l_cp->tx0 + (p + 1) * l_cp->tdx), (OPJ_INT32)l_image->x1);                                                                                                                                       \\",
          "699:         l_tile->y1 = opj_int_min((OPJ_INT32)(l_cp->ty0 + (q + 1) * l_cp->tdy), (OPJ_INT32)l_image->y1);                                                                                                                                       \\",
          "701:         if (l_tccp->numresolutions == 0) { \\",
          "702:             fprintf(stderr, \"tiles require at least one resolution\\n\"); \\",
          "703:             return OPJ_FALSE; \\",
          "704:         } \\",
          "706:                                                                     \\",
          "708:         for(compno = 0; compno < l_tile->numcomps; ++compno) {      \\",
          "710:                 l_image_comp->resno_decoded = 0;                                                    \\",
          "712:                 l_tilec->x0 = opj_int_ceildiv(l_tile->x0, (OPJ_INT32)l_image_comp->dx);                                                                                                                                          \\",
          "713:                 l_tilec->y0 = opj_int_ceildiv(l_tile->y0, (OPJ_INT32)l_image_comp->dy);                                                                                                                                          \\",
          "714:                 l_tilec->x1 = opj_int_ceildiv(l_tile->x1, (OPJ_INT32)l_image_comp->dx);                                                                                                                                          \\",
          "715:                 l_tilec->y1 = opj_int_ceildiv(l_tile->y1, (OPJ_INT32)l_image_comp->dy);                                                                                                                                          \\",
          "717:                                                                     \\",
          "718:                 l_data_size = (OPJ_UINT32)(l_tilec->x1 - l_tilec->x0)           \\",
          "720:                 l_tilec->numresolutions = l_tccp->numresolutions;   \\",
          "721:                 if (l_tccp->numresolutions < l_cp->m_specific_param.m_dec.m_reduce) {                                                                                                                             \\",
          "722:                         l_tilec->minimum_num_resolutions = 1;       \\",
          "723:                 }                                                   \\",
          "724:                 else {                                              \\",
          "725:                         l_tilec->minimum_num_resolutions = l_tccp->numresolutions                                                                                                                                 \\",
          "726:                         - l_cp->m_specific_param.m_dec.m_reduce;    \\",
          "727:                 }                                                   \\",
          "728:                                                                     \\",
          "729:         l_tilec->data_size_needed = l_data_size;            \\",
          "730:         if (p_tcd->m_is_decoder && !opj_alloc_tile_component_data(l_tilec)) { \\",
          "731:          return OPJ_FALSE;                                                   \\",
          "732:         }                                                                     \\",
          "733:                                                                     \\",
          "734:                 l_data_size = l_tilec->numresolutions * (OPJ_UINT32)sizeof(opj_tcd_resolution_t);                                                                                                                          \\",
          "735:                                                                     \\",
          "736:                 if (l_tilec->resolutions == 00) {                   \\",
          "737:                         l_tilec->resolutions = (opj_tcd_resolution_t *) opj_malloc(l_data_size);                                                                                                               \\",
          "738:                         if (! l_tilec->resolutions ) {              \\",
          "739:                                 return OPJ_FALSE;                   \\",
          "740:                         }                                           \\",
          "742:                         l_tilec->resolutions_size = l_data_size;    \\",
          "743:                         memset(l_tilec->resolutions,0,l_data_size); \\",
          "744:                 }                                                   \\",
          "745:                 else if (l_data_size > l_tilec->resolutions_size) { \\",
          "746:                         opj_tcd_resolution_t* new_resolutions = (opj_tcd_resolution_t *) opj_realloc(l_tilec->resolutions, l_data_size);                                                                    \\",
          "747:                         if (! new_resolutions) {                    \\",
          "749:                                 fprintf(stderr, \"Not enough memory to tile resolutions\\n\");                                                                                                                       \\",
          "750:                                 opj_free(l_tilec->resolutions);     \\",
          "751:                                 l_tilec->resolutions = NULL;        \\",
          "752:                                 l_tilec->resolutions_size = 0;      \\",
          "753:                                 return OPJ_FALSE;                   \\",
          "754:                         }                                           \\",
          "755:                         l_tilec->resolutions = new_resolutions;     \\",
          "757:                         memset(((OPJ_BYTE*) l_tilec->resolutions)+l_tilec->resolutions_size,0,l_data_size - l_tilec->resolutions_size);                                                                           \\",
          "758:                         l_tilec->resolutions_size = l_data_size;    \\",
          "759:                 }                                                   \\",
          "760:                                                                     \\",
          "761:                 l_level_no = l_tilec->numresolutions - 1;           \\",
          "762:                 l_res = l_tilec->resolutions;                       \\",
          "763:                 l_step_size = l_tccp->stepsizes;                    \\",
          "764:                 if (l_tccp->qmfbid == 0) {                          \\",
          "765:                         l_gain_ptr = &opj_dwt_getgain_real;         \\",
          "766:                 }                                                   \\",
          "767:                 else {                                              \\",
          "768:                         l_gain_ptr  = &opj_dwt_getgain;             \\",
          "769:                 }                                                   \\",
          "771:                                                                                                                                                                                                                   \\",
          "772:                 for(resno = 0; resno < l_tilec->numresolutions; ++resno) {                                                                                                                                        \\",
          "774:                         OPJ_INT32 tlcbgxstart, tlcbgystart /*, brcbgxend, brcbgyend*/;                                                                                                                                 \\",
          "775:                         OPJ_UINT32 cbgwidthexpn, cbgheightexpn;                                                                                                                                                   \\",
          "776:                         OPJ_UINT32 cblkwidthexpn, cblkheightexpn;                                                                                                                                                 \\",
          "777:                                                                                                                                                                                                                   \\",
          "779:                         l_res->x0 = opj_int_ceildivpow2(l_tilec->x0, (OPJ_INT32)l_level_no);                                                                                                                                     \\",
          "780:                         l_res->y0 = opj_int_ceildivpow2(l_tilec->y0, (OPJ_INT32)l_level_no);                                                                                                                                     \\",
          "781:                         l_res->x1 = opj_int_ceildivpow2(l_tilec->x1, (OPJ_INT32)l_level_no);                                                                                                                                     \\",
          "782:                         l_res->y1 = opj_int_ceildivpow2(l_tilec->y1, (OPJ_INT32)l_level_no);                                                                                                                                     \\",
          "785:                         l_pdx = l_tccp->prcw[resno];                                                                                                                                                              \\",
          "786:                         l_pdy = l_tccp->prch[resno];                                                                                                                                                              \\",
          "789:                         l_tl_prc_x_start = opj_int_floordivpow2(l_res->x0, (OPJ_INT32)l_pdx) << l_pdx;                                                                                                                           \\",
          "790:                         l_tl_prc_y_start = opj_int_floordivpow2(l_res->y0, (OPJ_INT32)l_pdy) << l_pdy;                                                                                                                           \\",
          "791:                         l_br_prc_x_end = opj_int_ceildivpow2(l_res->x1, (OPJ_INT32)l_pdx) << l_pdx;                                                                                                                              \\",
          "792:                         l_br_prc_y_end = opj_int_ceildivpow2(l_res->y1, (OPJ_INT32)l_pdy) << l_pdy;                                                                                                                              \\",
          "794:                                                                                                                                                                                                                   \\",
          "795:                         l_res->pw = (l_res->x0 == l_res->x1) ? 0 : (OPJ_UINT32)((l_br_prc_x_end - l_tl_prc_x_start) >> l_pdx);                                                                                                \\",
          "796:                         l_res->ph = (l_res->y0 == l_res->y1) ? 0 : (OPJ_UINT32)((l_br_prc_y_end - l_tl_prc_y_start) >> l_pdy);                                                                                                \\",
          "798:                                                                                                                                                                                                                   \\",
          "799:                         l_nb_precincts = l_res->pw * l_res->ph;                                                                                                                                                   \\",
          "800:                         l_nb_precinct_size = l_nb_precincts * (OPJ_UINT32)sizeof(opj_tcd_precinct_t);                                                                                                                      \\",
          "801:                         if (resno == 0) {                                                                                                                                                                         \\",
          "802:                                 tlcbgxstart = l_tl_prc_x_start;                                                                                                                                                   \\",
          "803:                                 tlcbgystart = l_tl_prc_y_start;                                                                                                                                                   \\",
          "806:                                 cbgwidthexpn = l_pdx;                                                                                                                                                             \\",
          "807:                                 cbgheightexpn = l_pdy;                                                                                                                                                            \\",
          "808:                                 l_res->numbands = 1;                                                                                                                                                              \\",
          "809:                         }                                                                                                                                                                                         \\",
          "810:                         else {                                                                                                                                                                                    \\",
          "811:                                 tlcbgxstart = opj_int_ceildivpow2(l_tl_prc_x_start, 1);                                                                                                                               \\",
          "812:                                 tlcbgystart = opj_int_ceildivpow2(l_tl_prc_y_start, 1);                                                                                                                               \\",
          "815:                                 cbgwidthexpn = l_pdx - 1;                                                                                                                                                         \\",
          "816:                                 cbgheightexpn = l_pdy - 1;                                                                                                                                                        \\",
          "817:                                 l_res->numbands = 3;                                                                                                                                                              \\",
          "818:                         }                                                                                                                                                                                         \\",
          "819:                                                                                                                                                                                                                   \\",
          "820:                         cblkwidthexpn = opj_uint_min(l_tccp->cblkw, cbgwidthexpn);                                                                                                                                    \\",
          "821:                         cblkheightexpn = opj_uint_min(l_tccp->cblkh, cbgheightexpn);                                                                                                                                  \\",
          "822:                         l_band = l_res->bands;                                                                                                                                                                    \\",
          "823:                                                                                                                                                                                                                   \\",
          "824:                         for (bandno = 0; bandno < l_res->numbands; ++bandno) {                                                                                                                                    \\",
          "825:                                 OPJ_INT32 numbps;                                                                                                                                                                 \\",
          "827:                                                                                                                                                                                                                   \\",
          "828:                                 if (resno == 0) {                                                                                                                                                                 \\",
          "829:                                         l_band->bandno = 0 ;                                                                                                                                                      \\",
          "830:                                         l_band->x0 = opj_int_ceildivpow2(l_tilec->x0, (OPJ_INT32)l_level_no);                                                                                                                    \\",
          "831:                                         l_band->y0 = opj_int_ceildivpow2(l_tilec->y0, (OPJ_INT32)l_level_no);                                                                                                                    \\",
          "832:                                         l_band->x1 = opj_int_ceildivpow2(l_tilec->x1, (OPJ_INT32)l_level_no);                                                                                                                    \\",
          "833:                                         l_band->y1 = opj_int_ceildivpow2(l_tilec->y1, (OPJ_INT32)l_level_no);                                                                                                                    \\",
          "834:                                 }                                                                                                                                                                                 \\",
          "835:                                 else {                                                                                                                                                                            \\",
          "836:                                         l_band->bandno = bandno + 1;                                                                                                                                              \\",
          "838:                                         l_x0b = l_band->bandno&1;                                                                                                                                                 \\",
          "840:                                         l_y0b = (OPJ_INT32)((l_band->bandno)>>1);                                                                                                                                              \\",
          "842:                                         l_band->x0 = opj_int_ceildivpow2(l_tilec->x0 - (1 << l_level_no) * l_x0b, (OPJ_INT32)(l_level_no + 1));                                                                                    \\",
          "843:                                         l_band->y0 = opj_int_ceildivpow2(l_tilec->y0 - (1 << l_level_no) * l_y0b, (OPJ_INT32)(l_level_no + 1));                                                                                    \\",
          "844:                                         l_band->x1 = opj_int_ceildivpow2(l_tilec->x1 - (1 << l_level_no) * l_x0b, (OPJ_INT32)(l_level_no + 1));                                                                                    \\",
          "845:                                         l_band->y1 = opj_int_ceildivpow2(l_tilec->y1 - (1 << l_level_no) * l_y0b, (OPJ_INT32)(l_level_no + 1));                                                                                    \\",
          "846:                                 }                                                                                                                                                                                 \\",
          "847:                                                                                                                                                                                                                   \\",
          "849:                                 l_gain = (*l_gain_ptr) (l_band->bandno);                                                                                                                                          \\",
          "850:                                 numbps = (OPJ_INT32)(l_image_comp->prec + l_gain);                                                                                                                                             \\",
          "851:                                 l_band->stepsize = (OPJ_FLOAT32)(((1.0 + l_step_size->mant / 2048.0) * pow(2.0, (OPJ_INT32) (numbps - l_step_size->expn)))) * FRACTION;                                           \\",
          "852:                                 l_band->numbps = l_step_size->expn + (OPJ_INT32)l_tccp->numgbits - 1;      /* WHY -1 ? */                                                                                                    \\",
          "853:                                                                                                                                                                                                                   \\",
          "854:                                 if (! l_band->precincts) {                                                                                                                                                        \\",
          "855:                                         l_band->precincts = (opj_tcd_precinct_t *) opj_malloc( /*3 * */ l_nb_precinct_size);                                                                                   \\",
          "856:                                         if (! l_band->precincts) {                                                                                                                                                \\",
          "857:                                                 return OPJ_FALSE;                                                                                                                                                 \\",
          "858:                                         }                                                                                                                                                                         \\",
          "860:                                         memset(l_band->precincts,0,l_nb_precinct_size);                                                                                                                           \\",
          "861:                                         l_band->precincts_data_size = l_nb_precinct_size;                                                                                                                         \\",
          "862:                                 }                                                                                                                                                                                 \\",
          "863:                                 else if (l_band->precincts_data_size < l_nb_precinct_size) {                                                                                                                      \\",
          "864:                                                                                                                                                                                                                   \\",
          "865:                                         opj_tcd_precinct_t * new_precincts = (opj_tcd_precinct_t *) opj_realloc(l_band->precincts,/*3 * */ l_nb_precinct_size);                                             \\",
          "866:                                         if (! new_precincts) {                                                                                                                                                    \\",
          "868:                                                 fprintf(stderr, \"Not enough memory to handle band precints\\n\");                                                                                                   \\",
          "869:                                                 opj_free(l_band->precincts);                                                                                                                                      \\",
          "870:                                                 l_band->precincts = NULL;                                                                                                                                         \\",
          "871:                                                 l_band->precincts_data_size = 0;                                                                                                                                  \\",
          "872:                                                 return OPJ_FALSE;                                                                                                                                                 \\",
          "873:                                         }                                                                                                                                                                         \\",
          "874:                                         l_band->precincts = new_precincts;                                                                                                                                        \\",
          "876:                                         memset(((OPJ_BYTE *) l_band->precincts) + l_band->precincts_data_size,0,l_nb_precinct_size - l_band->precincts_data_size);                                                \\",
          "877:                                         l_band->precincts_data_size = l_nb_precinct_size;                                                                                                                         \\",
          "878:                                 }                                                                                                                                                                                 \\",
          "879:                                                                                                                                                                                                                   \\",
          "880:                                 l_current_precinct = l_band->precincts;                                                                                                                                           \\",
          "881:                                 for     (precno = 0; precno < l_nb_precincts; ++precno) {                                                                                                                         \\",
          "882:                                         OPJ_INT32 tlcblkxstart, tlcblkystart, brcblkxend, brcblkyend;                                                                                                             \\",
          "883:                                         OPJ_INT32 cbgxstart = tlcbgxstart + (OPJ_INT32)(precno % l_res->pw) * (1 << cbgwidthexpn);                                                                                           \\",
          "884:                                         OPJ_INT32 cbgystart = tlcbgystart + (OPJ_INT32)(precno / l_res->pw) * (1 << cbgheightexpn);                                                                                          \\",
          "885:                                         OPJ_INT32 cbgxend = cbgxstart + (1 << cbgwidthexpn);                                                                                                                      \\",
          "886:                                         OPJ_INT32 cbgyend = cbgystart + (1 << cbgheightexpn);                                                                                                                     \\",
          "889:                                                                                                                                                                                                                   \\",
          "892:                                                                                                                                                                                                                   \\",
          "893:                                         l_current_precinct->x0 = opj_int_max(cbgxstart, l_band->x0);                                                                                                                  \\",
          "894:                                         l_current_precinct->y0 = opj_int_max(cbgystart, l_band->y0);                                                                                                                  \\",
          "895:                                         l_current_precinct->x1 = opj_int_min(cbgxend, l_band->x1);                                                                                                                    \\",
          "896:                                         l_current_precinct->y1 = opj_int_min(cbgyend, l_band->y1);                                                                                                                    \\",
          "898:                                                                                                                                                                                                                   \\",
          "899:                                         tlcblkxstart = opj_int_floordivpow2(l_current_precinct->x0, (OPJ_INT32)cblkwidthexpn) << cblkwidthexpn;                                                                                  \\",
          "901:                                         tlcblkystart = opj_int_floordivpow2(l_current_precinct->y0, (OPJ_INT32)cblkheightexpn) << cblkheightexpn;                                                                                \\",
          "903:                                         brcblkxend = opj_int_ceildivpow2(l_current_precinct->x1, (OPJ_INT32)cblkwidthexpn) << cblkwidthexpn;                                                                                     \\",
          "905:                                         brcblkyend = opj_int_ceildivpow2(l_current_precinct->y1, (OPJ_INT32)cblkheightexpn) << cblkheightexpn;                                                                                   \\",
          "907:                                         l_current_precinct->cw = (OPJ_UINT32)((brcblkxend - tlcblkxstart) >> cblkwidthexpn);                                                                                                    \\",
          "908:                                         l_current_precinct->ch = (OPJ_UINT32)((brcblkyend - tlcblkystart) >> cblkheightexpn);                                                                                                   \\",
          "909:                                                                                                                                                                                                                   \\",
          "910:                                         l_nb_code_blocks = l_current_precinct->cw * l_current_precinct->ch;                                                                                                       \\",
          "912:                                         l_nb_code_blocks_size = l_nb_code_blocks * (OPJ_UINT32)sizeof(TYPE);                                                                                                                  \\",
          "913:                                                                                                                                                                                                                   \\",
          "914:                                         if (! l_current_precinct->cblks.ELEMENT) {                                                                                                                                \\",
          "915:                                                 l_current_precinct->cblks.ELEMENT = (TYPE*) opj_malloc(l_nb_code_blocks_size);                                                                                    \\",
          "916:                                                 if (! l_current_precinct->cblks.ELEMENT ) {                                                                                                                       \\",
          "917:                                                         return OPJ_FALSE;                                                                                                                                         \\",
          "918:                                                 }                                                                                                                                                                 \\",
          "920:                                                                                                                                                                                                                   \\",
          "921:                                                 memset(l_current_precinct->cblks.ELEMENT,0,l_nb_code_blocks_size);                                                                                                \\",
          "922:                                                                                                                                                                                                                   \\",
          "923:                                                 l_current_precinct->block_size = l_nb_code_blocks_size;                                                                                                           \\",
          "924:                                         }                                                                                                                                                                         \\",
          "925:                                         else if (l_nb_code_blocks_size > l_current_precinct->block_size) {                                                                                                        \\",
          "926:                                                 TYPE *new_ELEMENT = (TYPE*) opj_realloc(l_current_precinct->cblks.ELEMENT, l_nb_code_blocks_size);                                                                \\",
          "927:                                                 if (! new_ELEMENT) {                                                                                                                                              \\",
          "928:                                                         opj_free(l_current_precinct->cblks.ELEMENT);                                                                                                              \\",
          "929:                                                         l_current_precinct->cblks.ELEMENT = NULL;                                                                                                                 \\",
          "930:                                                         l_current_precinct->block_size = 0;                                                                                                                       \\",
          "932:                                                         fprintf(stderr, \"Not enough memory for current precinct codeblock element\\n\");                                                                            \\",
          "933:                                                         return OPJ_FALSE;                                                                                                                                         \\",
          "934:                                                 }                                                                                                                                                                 \\",
          "935:                                                 l_current_precinct->cblks.ELEMENT = new_ELEMENT;                                                                                                                  \\",
          "937:                                                                                                                                                                                                                   \\",
          "938:                                                 memset(((OPJ_BYTE *) l_current_precinct->cblks.ELEMENT) + l_current_precinct->block_size                                                                          \\",
          "939:                                                                 ,0                                                                                                                                                \\",
          "940:                                                                 ,l_nb_code_blocks_size - l_current_precinct->block_size);                                                                                         \\",
          "941:                                                                                                                                                                                                                   \\",
          "942:                                                 l_current_precinct->block_size = l_nb_code_blocks_size;                                                                                                           \\",
          "943:                                         }                                                                                                                                                                         \\",
          "944:                                                                                                                                                                                                                   \\",
          "945:                                         if (! l_current_precinct->incltree) {                                                                                                                                     \\",
          "946:                                                 l_current_precinct->incltree = opj_tgt_create(l_current_precinct->cw,                                                                                              \\",
          "947:                                                                 l_current_precinct->ch);                                                                                                                          \\",
          "948:                                         }                                                                                                                                                                         \\",
          "949:                                         else{                                                                                                                                                                     \\",
          "950:                                                 l_current_precinct->incltree = opj_tgt_init(l_current_precinct->incltree,                                                                                             \\",
          "951:                                                                 l_current_precinct->cw,                                                                                                                           \\",
          "952:                                                                 l_current_precinct->ch);                                                                                                                          \\",
          "953:                                         }                                                                                                                                                                         \\",
          "954:                                                                                                                                                                                                                   \\",
          "955:                                         if (! l_current_precinct->incltree)     {                                                                                                                                 \\",
          "956:                                                 fprintf(stderr, \"WARNING: No incltree created.\\n\");                                                                                                               \\",
          "958:                                         }                                                                                                                                                                         \\",
          "959:                                                                                                                                                                                                                   \\",
          "960:                                         if (! l_current_precinct->imsbtree) {                                                                                                                                     \\",
          "961:                                                 l_current_precinct->imsbtree = opj_tgt_create(                                                                                                                     \\",
          "962:                                                                 l_current_precinct->cw,                                                                                                                           \\",
          "963:                                                                 l_current_precinct->ch);                                                                                                                          \\",
          "964:                                         }                                                                                                                                                                         \\",
          "965:                                         else {                                                                                                                                                                    \\",
          "966:                                                 l_current_precinct->imsbtree = opj_tgt_init(                                                                                                                          \\",
          "967:                                                                 l_current_precinct->imsbtree,                                                                                                                     \\",
          "968:                                                                 l_current_precinct->cw,                                                                                                                           \\",
          "969:                                                                 l_current_precinct->ch);                                                                                                                          \\",
          "970:                                         }                                                                                                                                                                         \\",
          "971:                                                                                                                                                                                                                   \\",
          "972:                                         if (! l_current_precinct->imsbtree) {                                                                                                                                     \\",
          "973:                                                 fprintf(stderr, \"WARNING: No imsbtree created.\\n\");                                                                                                               \\",
          "975:                                         }                                                                                                                                                                         \\",
          "976:                                                                                                                                                                                                                   \\",
          "977:                                         l_code_block = l_current_precinct->cblks.ELEMENT;                                                                                                                         \\",
          "978:                                                                                                                                                                                                                   \\",
          "979:                                         for (cblkno = 0; cblkno < l_nb_code_blocks; ++cblkno) {                                                                                                                   \\",
          "980:                                                 OPJ_INT32 cblkxstart = tlcblkxstart + (OPJ_INT32)(cblkno % l_current_precinct->cw) * (1 << cblkwidthexpn);                                                                   \\",
          "981:                                                 OPJ_INT32 cblkystart = tlcblkystart + (OPJ_INT32)(cblkno / l_current_precinct->cw) * (1 << cblkheightexpn);                                                                  \\",
          "982:                                                 OPJ_INT32 cblkxend = cblkxstart + (1 << cblkwidthexpn);                                                                                                           \\",
          "983:                                                 OPJ_INT32 cblkyend = cblkystart + (1 << cblkheightexpn);                                                                                                          \\",
          "984:                                                                                                                                                                                                                   \\",
          "985:                                                 if (! FUNCTION_ELEMENT(l_code_block)) {                                                                                                                           \\",
          "986:                                                         return OPJ_FALSE;                                                                                                                                         \\",
          "987:                                                 }                                                                                                                                                                 \\",
          "989:                                                 l_code_block->x0 = opj_int_max(cblkxstart, l_current_precinct->x0);                                                                                                   \\",
          "990:                                                 l_code_block->y0 = opj_int_max(cblkystart, l_current_precinct->y0);                                                                                                   \\",
          "991:                                                 l_code_block->x1 = opj_int_min(cblkxend, l_current_precinct->x1);                                                                                                     \\",
          "992:                                                 l_code_block->y1 = opj_int_min(cblkyend, l_current_precinct->y1);                                                                                                     \\",
          "993:                                                 ++l_code_block;                                                                                                                                                   \\",
          "994:                                         }                                                                                                                                                                         \\",
          "995:                                         ++l_current_precinct;                                                                                                                                                     \\",
          "996:                                 } /* precno */                                                                                                                                                                    \\",
          "997:                                 ++l_band;                                                                                                                                                                         \\",
          "998:                                 ++l_step_size;                                                                                                                                                                    \\",
          "999:                         } /* bandno */                                                                                                                                                                            \\",
          "1000:                         ++l_res;                                                                                                                                                                                  \\",
          "1001:                         --l_level_no;                                                                                                                                                                             \\",
          "1002:                 } /* resno */                                                                                                                                                                                     \\",
          "1003:                 ++l_tccp;                                                                                                                                                                                         \\",
          "1004:                 ++l_tilec;                                                                                                                                                                                        \\",
          "1005:                 ++l_image_comp;                                                                                                                                                                                   \\",
          "1006:         } /* compno */                                                                                                                                                                                            \\",
          "1007:         return OPJ_TRUE;                                                                                                                                                                                          \\",
          "1008: }                                                                                                                                                                                                                 \\",
          "1011: OPJ_MACRO_TCD_ALLOCATE(opj_tcd_init_encode_tile, opj_tcd_cblk_enc_t, 1.f, enc, opj_tcd_code_block_enc_allocate)",
          "1012: OPJ_MACRO_TCD_ALLOCATE(opj_tcd_init_decode_tile, opj_tcd_cblk_dec_t, 0.5f, dec, opj_tcd_code_block_dec_allocate)",
          "1014: #undef OPJ_MACRO_TCD_ALLOCATE",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/lib/openjp2/tcd.h||src/liopenjp2/tcd.h": [
          "File: src/lib/openjp2/tcd.h -> src/liopenjp2/tcd.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "123:   opj_tcd_cblk_enc_t* enc;",
          "124:   opj_tcd_cblk_dec_t* dec;",
          "125:  } cblks;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2e7b8fb9a1e03a59017dc3d453b176f343144c89",
      "candidate_info": {
        "commit_hash": "2e7b8fb9a1e03a59017dc3d453b176f343144c89",
        "repo": "uclouvain/openjpeg",
        "commit_url": "https://github.com/uclouvain/openjpeg/commit/2e7b8fb9a1e03a59017dc3d453b176f343144c89",
        "files": [
          "src/lib/openjp2/tcd.c"
        ],
        "message": "[trunk] Another final round of fixes for sign conversion warnings. Fixes issue 256",
        "before_after_code_files": [
          "src/lib/openjp2/tcd.c||src/liopenjp2/tcd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c"
          ],
          "candidate": [
            "src/lib/openjp2/tcd.c||src/liopenjp2/tcd.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/openjp2/tcd.c||src/liopenjp2/tcd.c": [
          "File: src/lib/openjp2/tcd.c -> src/liopenjp2/tcd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "347:                                                 n = cblk->numpassesinlayers;",
          "348:                                                 if (cblk->numpassesinlayers == 0) {",
          "349:                                                         if (value != 0) {",
          "351:                                                         } else {",
          "352:                                                                 n = cblk->numpassesinlayers;",
          "353:                                                         }",
          "354:                                                 } else {",
          "356:                                                 }",
          "358:                                                 layer->numpasses = n - cblk->numpassesinlayers;",
          "",
          "[Removed Lines]",
          "350:                                                                 n = 3 * value - 2 + cblk->numpassesinlayers;",
          "355:                                                         n = 3 * value + cblk->numpassesinlayers;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "660:                                                                     \\",
          "667:         if (l_tccp->numresolutions == 0) { \\",
          "668:             fprintf(stderr, \"tiles require at least one resolution\\n\"); \\",
          "",
          "[Removed Lines]",
          "662:         l_tile->x0 = opj_int_max(l_cp->tx0 + p * l_cp->tdx, l_image->x0);                                                                                                                                             \\",
          "663:         l_tile->y0 = opj_int_max(l_cp->ty0 + q * l_cp->tdy, l_image->y0);                                                                                                                                             \\",
          "664:         l_tile->x1 = opj_int_min(l_cp->tx0 + (p + 1) * l_cp->tdx, l_image->x1);                                                                                                                                       \\",
          "665:         l_tile->y1 = opj_int_min(l_cp->ty0 + (q + 1) * l_cp->tdy, l_image->y1);                                                                                                                                       \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "676:                                                                     \\",
          "683:                                                                     \\",
          "686:                 l_tilec->numresolutions = l_tccp->numresolutions;   \\",
          "687:                 if (l_tccp->numresolutions < l_cp->m_specific_param.m_dec.m_reduce) {                                                                                                                             \\",
          "688:                         l_tilec->minimum_num_resolutions = 1;       \\",
          "",
          "[Removed Lines]",
          "678:                 l_tilec->x0 = opj_int_ceildiv(l_tile->x0, l_image_comp->dx);                                                                                                                                          \\",
          "679:                 l_tilec->y0 = opj_int_ceildiv(l_tile->y0, l_image_comp->dy);                                                                                                                                          \\",
          "680:                 l_tilec->x1 = opj_int_ceildiv(l_tile->x1, l_image_comp->dx);                                                                                                                                          \\",
          "681:                 l_tilec->y1 = opj_int_ceildiv(l_tile->y1, l_image_comp->dy);                                                                                                                                          \\",
          "684:                 l_data_size = (l_tilec->x1 - l_tilec->x0)           \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "761:                         OPJ_UINT32 cblkwidthexpn, cblkheightexpn;                                                                                                                                                 \\",
          "762:                                                                                                                                                                                                                   \\",
          "770:                         l_pdx = l_tccp->prcw[resno];                                                                                                                                                              \\",
          "771:                         l_pdy = l_tccp->prch[resno];                                                                                                                                                              \\",
          "779:                                                                                                                                                                                                                   \\",
          "783:                                                                                                                                                                                                                   \\",
          "784:                         l_nb_precincts = l_res->pw * l_res->ph;                                                                                                                                                   \\",
          "",
          "[Removed Lines]",
          "764:                         l_res->x0 = opj_int_ceildivpow2(l_tilec->x0, l_level_no);                                                                                                                                     \\",
          "765:                         l_res->y0 = opj_int_ceildivpow2(l_tilec->y0, l_level_no);                                                                                                                                     \\",
          "766:                         l_res->x1 = opj_int_ceildivpow2(l_tilec->x1, l_level_no);                                                                                                                                     \\",
          "767:                         l_res->y1 = opj_int_ceildivpow2(l_tilec->y1, l_level_no);                                                                                                                                     \\",
          "774:                         l_tl_prc_x_start = opj_int_floordivpow2(l_res->x0, l_pdx) << l_pdx;                                                                                                                           \\",
          "775:                         l_tl_prc_y_start = opj_int_floordivpow2(l_res->y0, l_pdy) << l_pdy;                                                                                                                           \\",
          "776:                         l_br_prc_x_end = opj_int_ceildivpow2(l_res->x1, l_pdx) << l_pdx;                                                                                                                              \\",
          "777:                         l_br_prc_y_end = opj_int_ceildivpow2(l_res->y1, l_pdy) << l_pdy;                                                                                                                              \\",
          "780:                         l_res->pw = (l_res->x0 == l_res->x1) ? 0 : ((l_br_prc_x_end - l_tl_prc_x_start) >> l_pdx);                                                                                                \\",
          "781:                         l_res->ph = (l_res->y0 == l_res->y1) ? 0 : ((l_br_prc_y_end - l_tl_prc_y_start) >> l_pdy);                                                                                                \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "812:                                                                                                                                                                                                                   \\",
          "813:                                 if (resno == 0) {                                                                                                                                                                 \\",
          "814:                                         l_band->bandno = 0 ;                                                                                                                                                      \\",
          "819:                                 }                                                                                                                                                                                 \\",
          "820:                                 else {                                                                                                                                                                            \\",
          "821:                                         l_band->bandno = bandno + 1;                                                                                                                                              \\",
          "823:                                         l_x0b = l_band->bandno&1;                                                                                                                                                 \\",
          "831:                                 }                                                                                                                                                                                 \\",
          "832:                                                                                                                                                                                                                   \\",
          "834:                                 l_gain = (*l_gain_ptr) (l_band->bandno);                                                                                                                                          \\",
          "836:                                 l_band->stepsize = (OPJ_FLOAT32)(((1.0 + l_step_size->mant / 2048.0) * pow(2.0, (OPJ_INT32) (numbps - l_step_size->expn)))) * FRACTION;                                           \\",
          "838:                                                                                                                                                                                                                   \\",
          "839:                                 if (! l_band->precincts) {                                                                                                                                                        \\",
          "840:                                         l_band->precincts = (opj_tcd_precinct_t *) opj_malloc( /*3 * */ l_nb_precinct_size);                                                                                   \\",
          "",
          "[Removed Lines]",
          "815:                                         l_band->x0 = opj_int_ceildivpow2(l_tilec->x0, l_level_no);                                                                                                                    \\",
          "816:                                         l_band->y0 = opj_int_ceildivpow2(l_tilec->y0, l_level_no);                                                                                                                    \\",
          "817:                                         l_band->x1 = opj_int_ceildivpow2(l_tilec->x1, l_level_no);                                                                                                                    \\",
          "818:                                         l_band->y1 = opj_int_ceildivpow2(l_tilec->y1, l_level_no);                                                                                                                    \\",
          "825:                                         l_y0b = (l_band->bandno)>>1;                                                                                                                                              \\",
          "827:                                         l_band->x0 = opj_int_ceildivpow2(l_tilec->x0 - (1 << l_level_no) * l_x0b, l_level_no + 1);                                                                                    \\",
          "828:                                         l_band->y0 = opj_int_ceildivpow2(l_tilec->y0 - (1 << l_level_no) * l_y0b, l_level_no + 1);                                                                                    \\",
          "829:                                         l_band->x1 = opj_int_ceildivpow2(l_tilec->x1 - (1 << l_level_no) * l_x0b, l_level_no + 1);                                                                                    \\",
          "830:                                         l_band->y1 = opj_int_ceildivpow2(l_tilec->y1 - (1 << l_level_no) * l_y0b, l_level_no + 1);                                                                                    \\",
          "835:                                 numbps = l_image_comp->prec + l_gain;                                                                                                                                             \\",
          "837:                                 l_band->numbps = l_step_size->expn + l_tccp->numgbits - 1;      /* WHY -1 ? */                                                                                                    \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "865:                                 l_current_precinct = l_band->precincts;                                                                                                                                           \\",
          "866:                                 for     (precno = 0; precno < l_nb_precincts; ++precno) {                                                                                                                         \\",
          "867:                                         OPJ_INT32 tlcblkxstart, tlcblkystart, brcblkxend, brcblkyend;                                                                                                             \\",
          "870:                                         OPJ_INT32 cbgxend = cbgxstart + (1 << cbgwidthexpn);                                                                                                                      \\",
          "871:                                         OPJ_INT32 cbgyend = cbgystart + (1 << cbgheightexpn);                                                                                                                     \\",
          "",
          "[Removed Lines]",
          "868:                                         OPJ_INT32 cbgxstart = tlcbgxstart + (precno % l_res->pw) * (1 << cbgwidthexpn);                                                                                           \\",
          "869:                                         OPJ_INT32 cbgystart = tlcbgystart + (precno / l_res->pw) * (1 << cbgheightexpn);                                                                                          \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "881:                                         l_current_precinct->y1 = opj_int_min(cbgyend, l_band->y1);                                                                                                                    \\",
          "883:                                                                                                                                                                                                                   \\",
          "894:                                                                                                                                                                                                                   \\",
          "895:                                         l_nb_code_blocks = l_current_precinct->cw * l_current_precinct->ch;                                                                                                       \\",
          "",
          "[Removed Lines]",
          "884:                                         tlcblkxstart = opj_int_floordivpow2(l_current_precinct->x0, cblkwidthexpn) << cblkwidthexpn;                                                                                  \\",
          "886:                                         tlcblkystart = opj_int_floordivpow2(l_current_precinct->y0, cblkheightexpn) << cblkheightexpn;                                                                                \\",
          "888:                                         brcblkxend = opj_int_ceildivpow2(l_current_precinct->x1, cblkwidthexpn) << cblkwidthexpn;                                                                                     \\",
          "890:                                         brcblkyend = opj_int_ceildivpow2(l_current_precinct->y1, cblkheightexpn) << cblkheightexpn;                                                                                   \\",
          "892:                                         l_current_precinct->cw = (brcblkxend - tlcblkxstart) >> cblkwidthexpn;                                                                                                    \\",
          "893:                                         l_current_precinct->ch = (brcblkyend - tlcblkystart) >> cblkheightexpn;                                                                                                   \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "962:                                         l_code_block = l_current_precinct->cblks.ELEMENT;                                                                                                                         \\",
          "963:                                                                                                                                                                                                                   \\",
          "964:                                         for (cblkno = 0; cblkno < l_nb_code_blocks; ++cblkno) {                                                                                                                   \\",
          "967:                                                 OPJ_INT32 cblkxend = cblkxstart + (1 << cblkwidthexpn);                                                                                                           \\",
          "968:                                                 OPJ_INT32 cblkyend = cblkystart + (1 << cblkheightexpn);                                                                                                          \\",
          "969:                                                                                                                                                                                                                   \\",
          "",
          "[Removed Lines]",
          "965:                                                 OPJ_INT32 cblkxstart = tlcblkxstart + (cblkno % l_current_precinct->cw) * (1 << cblkwidthexpn);                                                                   \\",
          "966:                                                 OPJ_INT32 cblkystart = tlcblkystart + (cblkno / l_current_precinct->cw) * (1 << cblkheightexpn);                                                                  \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "07193e2a34aaf11d18ffe87877be3af536a3fec6",
      "candidate_info": {
        "commit_hash": "07193e2a34aaf11d18ffe87877be3af536a3fec6",
        "repo": "uclouvain/openjpeg",
        "commit_url": "https://github.com/uclouvain/openjpeg/commit/07193e2a34aaf11d18ffe87877be3af536a3fec6",
        "files": [
          "src/lib/openjp2/tcd.c"
        ],
        "message": "[trunk] remove more conversion warning in multi-lines macro. C allow simple tricks such as to find those: gcc -E tcd.c | sed '/^\\#/d' | indent -st -i2 > clean.c Update issue 256",
        "before_after_code_files": [
          "src/lib/openjp2/tcd.c||src/liopenjp2/tcd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c"
          ],
          "candidate": [
            "src/lib/openjp2/tcd.c||src/liopenjp2/tcd.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/openjp2/tcd.c||src/liopenjp2/tcd.c": [
          "File: src/lib/openjp2/tcd.c -> src/liopenjp2/tcd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "716:                         l_tilec->data_size = l_data_size;           \\",
          "717:                 }                                                   \\",
          "718:                                                                     \\",
          "720:                                                                     \\",
          "721:                 if (l_tilec->resolutions == 00) {                   \\",
          "722:                         l_tilec->resolutions = (opj_tcd_resolution_t *) opj_malloc(l_data_size);                                                                                                               \\",
          "",
          "[Removed Lines]",
          "719:                 l_data_size = l_tilec->numresolutions * sizeof(opj_tcd_resolution_t);                                                                                                                          \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "783:                                                                                                                                                                                                                   \\",
          "784:                         l_nb_precincts = l_res->pw * l_res->ph;                                                                                                                                                   \\",
          "786:                         if (resno == 0) {                                                                                                                                                                         \\",
          "787:                                 tlcbgxstart = l_tl_prc_x_start;                                                                                                                                                   \\",
          "788:                                 tlcbgystart = l_tl_prc_y_start;                                                                                                                                                   \\",
          "",
          "[Removed Lines]",
          "785:                         l_nb_precinct_size = l_nb_precincts * sizeof(opj_tcd_precinct_t);                                                                                                                      \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "894:                                                                                                                                                                                                                   \\",
          "895:                                         l_nb_code_blocks = l_current_precinct->cw * l_current_precinct->ch;                                                                                                       \\",
          "898:                                                                                                                                                                                                                   \\",
          "899:                                         if (! l_current_precinct->cblks.ELEMENT) {                                                                                                                                \\",
          "900:                                                 l_current_precinct->cblks.ELEMENT = (TYPE*) opj_malloc(l_nb_code_blocks_size);                                                                                    \\",
          "",
          "[Removed Lines]",
          "897:                                         l_nb_code_blocks_size = l_nb_code_blocks * sizeof(TYPE);                                                                                                                  \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}