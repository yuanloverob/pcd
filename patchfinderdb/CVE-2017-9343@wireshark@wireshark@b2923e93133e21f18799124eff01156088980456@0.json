{
  "cve_id": "CVE-2017-9343",
  "cve_desc": "In Wireshark 2.2.0 to 2.2.6 and 2.0.0 to 2.0.12, the MSNIP dissector misuses a NULL pointer. This was addressed in epan/dissectors/packet-msnip.c by validating an IPv4 address.",
  "repo": "wireshark/wireshark",
  "patch_hash": "b2923e93133e21f18799124eff01156088980456",
  "patch_info": {
    "commit_hash": "b2923e93133e21f18799124eff01156088980456",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/b2923e93133e21f18799124eff01156088980456",
    "files": [
      "epan/dissectors/packet-msnip.c"
    ],
    "message": "msnip: Verify pinfo->dst is a valid IPv4 address\n\nLink: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=1678\nBug: 13725\nChange-Id: Ib61733200658b4cca0bb0f45e5445b0ed3c12ab0\nReviewed-on: https://code.wireshark.org/review/21712\nReviewed-by: Peter Wu <peter@lekensteyn.nl>\nPetri-Dish: Peter Wu <peter@lekensteyn.nl>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>",
    "before_after_code_files": [
      "epan/dissectors/packet-msnip.c||epan/dissectors/packet-msnip.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-msnip.c||epan/dissectors/packet-msnip.c": [
      "File: epan/dissectors/packet-msnip.c -> epan/dissectors/packet-msnip.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "217:  guint32 dst = g_htonl(MC_ALL_IGMPV3_ROUTERS);",
      "223:  col_set_str(pinfo->cinfo, COL_PROTOCOL, \"MSNIP\");",
      "224:  col_clear(pinfo->cinfo, COL_INFO);",
      "",
      "[Removed Lines]",
      "220:  if (memcmp(pinfo->dst.data, &dst, 4))",
      "221:  return 0;",
      "",
      "[Added Lines]",
      "220:  if ((pinfo->dst.type != AT_IPv4) || memcmp(pinfo->dst.data, &dst, 4))",
      "221:   return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7c39a77e8b6ed204d7c1ec9afd712ef30ac2db26",
      "candidate_info": {
        "commit_hash": "7c39a77e8b6ed204d7c1ec9afd712ef30ac2db26",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/7c39a77e8b6ed204d7c1ec9afd712ef30ac2db26",
        "files": [
          "epan/dissectors/packet-msnip.c"
        ],
        "message": "msnip: Verify pinfo->dst is a valid IPv4 address\n\nLink: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=1678\nBug: 13725\nChange-Id: Ib61733200658b4cca0bb0f45e5445b0ed3c12ab0\nReviewed-on: https://code.wireshark.org/review/21712\nReviewed-by: Peter Wu <peter@lekensteyn.nl>\nPetri-Dish: Peter Wu <peter@lekensteyn.nl>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit b2923e93133e21f18799124eff01156088980456)\nReviewed-on: https://code.wireshark.org/review/21714\nPetri-Dish: Michael Mann <mmann78@netscape.net>",
        "before_after_code_files": [
          "epan/dissectors/packet-msnip.c||epan/dissectors/packet-msnip.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-msnip.c||epan/dissectors/packet-msnip.c"
          ],
          "candidate": [
            "epan/dissectors/packet-msnip.c||epan/dissectors/packet-msnip.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-msnip.c||epan/dissectors/packet-msnip.c": [
          "File: epan/dissectors/packet-msnip.c -> epan/dissectors/packet-msnip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "214:  guint32 dst = g_htonl(MC_ALL_IGMPV3_ROUTERS);",
          "220:  col_set_str(pinfo->cinfo, COL_PROTOCOL, \"MSNIP\");",
          "221:  col_clear(pinfo->cinfo, COL_INFO);",
          "",
          "[Removed Lines]",
          "217:  if (memcmp(pinfo->dst.data, &dst, 4))",
          "218:  return 0;",
          "",
          "[Added Lines]",
          "217:  if ((pinfo->dst.type != AT_IPv4) || memcmp(pinfo->dst.data, &dst, 4))",
          "218:   return 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "27556320b41904716b9c9f73ef8f4fe705d1e669",
      "candidate_info": {
        "commit_hash": "27556320b41904716b9c9f73ef8f4fe705d1e669",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/27556320b41904716b9c9f73ef8f4fe705d1e669",
        "files": [
          "epan/dissectors/packet-msnip.c"
        ],
        "message": "msnip: Verify pinfo->dst is a valid IPv4 address\n\nLink: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=1678\nBug: 13725\nChange-Id: Ib61733200658b4cca0bb0f45e5445b0ed3c12ab0\nReviewed-on: https://code.wireshark.org/review/21712\nReviewed-by: Peter Wu <peter@lekensteyn.nl>\nPetri-Dish: Peter Wu <peter@lekensteyn.nl>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit b2923e93133e21f18799124eff01156088980456)\nReviewed-on: https://code.wireshark.org/review/21713\nPetri-Dish: Michael Mann <mmann78@netscape.net>",
        "before_after_code_files": [
          "epan/dissectors/packet-msnip.c||epan/dissectors/packet-msnip.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-msnip.c||epan/dissectors/packet-msnip.c"
          ],
          "candidate": [
            "epan/dissectors/packet-msnip.c||epan/dissectors/packet-msnip.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-msnip.c||epan/dissectors/packet-msnip.c": [
          "File: epan/dissectors/packet-msnip.c -> epan/dissectors/packet-msnip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "214:  guint32 dst = g_htonl(MC_ALL_IGMPV3_ROUTERS);",
          "220:  col_set_str(pinfo->cinfo, COL_PROTOCOL, \"MSNIP\");",
          "221:  col_clear(pinfo->cinfo, COL_INFO);",
          "",
          "[Removed Lines]",
          "217:  if (memcmp(pinfo->dst.data, &dst, 4))",
          "218:  return 0;",
          "",
          "[Added Lines]",
          "217:  if ((pinfo->dst.type != AT_IPv4) || memcmp(pinfo->dst.data, &dst, 4))",
          "218:   return 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}