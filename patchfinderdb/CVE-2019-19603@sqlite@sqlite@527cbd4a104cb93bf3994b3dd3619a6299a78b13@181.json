{
  "cve_id": "CVE-2019-19603",
  "cve_desc": "SQLite 3.30.1 mishandles certain SELECT statements with a nonexistent VIEW, leading to an application crash.",
  "repo": "sqlite/sqlite",
  "patch_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
  "patch_info": {
    "commit_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/527cbd4a104cb93bf3994b3dd3619a6299a78b13",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/build.c",
      "src/sqliteInt.h",
      "test/altertab.test"
    ],
    "message": "Do not allow CREATE TABLE or CREATE VIEW of an object with a name that looks like a shadow table name.\n\nFossilOrigin-Name: 6aef58b629d89955f85f65191ba2be67b2adfac4f0327fe9a7141cb2705dbc00",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/build.c||src/build.c",
      "src/sqliteInt.h||src/sqliteInt.h",
      "test/altertab.test||test/altertab.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 8ad34d36a141fa8f5d9bd784dfeb892c983897a6dc6b867607cc668508acf944",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/build.c||src/build.c": [
      "File: src/build.c -> src/build.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "856:       }",
      "857:     }",
      "858:   }else{",
      "861:     ){",
      "862:       sqlite3ErrorMsg(pParse, \"object name reserved for internal use: %s\",",
      "863:                       zName);",
      "864:       return SQLITE_ERROR;",
      "865:     }",
      "866:   }",
      "867:   return SQLITE_OK;",
      "868: }",
      "",
      "[Removed Lines]",
      "859:     if( pParse->nested==0",
      "860:      && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7)",
      "",
      "[Added Lines]",
      "859:     if( (pParse->nested==0 && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7))",
      "860:      || (sqlite3ReadOnlyShadowTables(db) && sqlite3ShadowTableName(db, zName))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "2132: static int isShadowTableName(sqlite3 *db, char *zName){",
      "",
      "[Added Lines]",
      "2133: int sqlite3ShadowTableName(sqlite3 *db, const char *zName){",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2147:   if( pMod->pModule->xShadowName==0 ) return 0;",
      "2148:   return pMod->pModule->xShadowName(zTail+1);",
      "2149: }",
      "",
      "[Removed Lines]",
      "2150: #else",
      "2151: # define isShadowTableName(x,y) 0",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2190:   p = pParse->pNewTable;",
      "2191:   if( p==0 ) return;",
      "2194:     p->tabFlags |= TF_Shadow;",
      "2195:   }",
      "",
      "[Removed Lines]",
      "2193:   if( pSelect==0 && isShadowTableName(db, p->zName) ){",
      "",
      "[Added Lines]",
      "2192:   if( pSelect==0 && sqlite3ShadowTableName(db, p->zName) ){",
      "",
      "---------------"
    ],
    "src/sqliteInt.h||src/sqliteInt.h": [
      "File: src/sqliteInt.h -> src/sqliteInt.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "4548: #  define sqlite3VtabInSync(db) ((db)->nVTrans>0 && (db)->aVTrans==0)",
      "4549: #endif",
      "4550: int sqlite3ReadOnlyShadowTables(sqlite3 *db);",
      "4551: int sqlite3VtabEponymousTableInit(Parse*,Module*);",
      "4552: void sqlite3VtabEponymousTableClear(sqlite3*,Module*);",
      "4553: void sqlite3VtabMakeWritable(Parse*,Table*);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4551: #ifndef SQLITE_OMIT_VIRTUALTABLE",
      "4552:   int sqlite3ShadowTableName(sqlite3 *db, const char *zName);",
      "4553: #else",
      "4554: # define sqlite3ShadowTableName(A,B) 0",
      "4555: #endif",
      "",
      "---------------"
    ],
    "test/altertab.test||test/altertab.test": [
      "File: test/altertab.test -> test/altertab.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "547:   } {1 {table y1_segments may not be modified}}",
      "549:   do_catchsql_test 16.20 {",
      "554:     DROP TABLE y1_segments;",
      "555:   } {1 {table y1_segments may not be dropped}}",
      "557:   do_execsql_test 16.30 {",
      "558:     ALTER TABLE y1 RENAME TO z1;",
      "559:   }",
      "",
      "[Removed Lines]",
      "550:     ALTER TABLE y1_segments RENAME TO abc;",
      "551:   } {1 {table y1_segments may not be altered}}",
      "553:   do_catchsql_test 16.21 {",
      "",
      "[Added Lines]",
      "553:   do_catchsql_test 16.20 {",
      "554:     ALTER TABLE y1_segments RENAME TO abc;",
      "555:   } {1 {table y1_segments may not be altered}}",
      "556:   sqlite3_db_config db DEFENSIVE 0",
      "557:   do_catchsql_test 16.22 {",
      "558:     ALTER TABLE y1_segments RENAME TO abc;",
      "559:   } {0 {}}",
      "560:   sqlite3_db_config db DEFENSIVE 1",
      "561:   do_catchsql_test 16.23 {",
      "562:     CREATE TABLE y1_segments AS SELECT * FROM abc;",
      "563:   } {1 {object name reserved for internal use: y1_segments}}",
      "564:   do_catchsql_test 16.24 {",
      "565:     CREATE VIEW y1_segments AS SELECT * FROM abc;",
      "566:   } {1 {object name reserved for internal use: y1_segments}}",
      "567:   sqlite3_db_config db DEFENSIVE 0",
      "568:   do_catchsql_test 16.25 {",
      "569:     ALTER TABLE abc RENAME TO y1_segments;",
      "570:   } {0 {}}",
      "571:   sqlite3_db_config db DEFENSIVE 1",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "75db74fdaeaeef414793f03c0fea93fb6ed8c92b",
      "candidate_info": {
        "commit_hash": "75db74fdaeaeef414793f03c0fea93fb6ed8c92b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/75db74fdaeaeef414793f03c0fea93fb6ed8c92b",
        "files": [
          "ext/misc/fossildelta.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Improved comments on the fossildelta.c extension.\n\nFossilOrigin-Name: d7d23f0450d659b2c7df34e4df8623ca7b6fe3bd19422e3e9234515214ae8510",
        "before_after_code_files": [
          "ext/misc/fossildelta.c||ext/misc/fossildelta.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/misc/fossildelta.c||ext/misc/fossildelta.c": [
          "File: ext/misc/fossildelta.c -> ext/misc/fossildelta.c"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: fd085e9260bec18f968704abb2dd324d954baa121d13b67c3f5b801e9e3834aa",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d4a6744b501483c7e5bb06660906f9077f0d9835",
      "candidate_info": {
        "commit_hash": "d4a6744b501483c7e5bb06660906f9077f0d9835",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d4a6744b501483c7e5bb06660906f9077f0d9835",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c"
        ],
        "message": "Improvements to comments.  No changes to code.\n\nFossilOrigin-Name: 16eb0fc8f8cce51eaa5305ebc9f3bd8c8d935dd3ebebab6820e5629f9292eec2",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 480a5090befdc29eaeb6f0b22831c980d6ee92438d9b2e766de68b037ded38b8",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c"
        ]
      }
    },
    {
      "candidate_hash": "7525b87b6c579dce72c34029863c9b4ede832a83",
      "candidate_info": {
        "commit_hash": "7525b87b6c579dce72c34029863c9b4ede832a83",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7525b87b6c579dce72c34029863c9b4ede832a83",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/whereexpr.c",
          "test/indexexpr2.test"
        ],
        "message": "Posible fix for [d96eba87].\n\nFossilOrigin-Name: 89a25abfcd069aebdf817890e5c27f46de3000fb858ae01029e4528f9d677567",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/whereexpr.c||src/whereexpr.c",
          "test/indexexpr2.test||test/indexexpr2.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: cc42dd15100db28a9796254f69a4e367ea5eae29f546be055017cf3e12aa66ba",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/whereexpr.c||src/whereexpr.c": [
          "File: src/whereexpr.c -> src/whereexpr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "779:     for(j=0; j<2 && !okToChngToIN; j++){",
          "780:       pOrTerm = pOrWc->a;",
          "781:       for(i=pOrWc->nTerm-1; i>=0; i--, pOrTerm++){",
          "782:         assert( pOrTerm->eOperator & WO_EQ );",
          "783:         pOrTerm->wtFlags &= ~TERM_OR_OK;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "781:       Expr *pLeft = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "800:         }",
          "801:         iColumn = pOrTerm->u.leftColumn;",
          "802:         iCursor = pOrTerm->leftCursor;",
          "803:         break;",
          "804:       }",
          "805:       if( i<0 ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "804:         pLeft = pOrTerm->pExpr->pLeft;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "819:         assert( pOrTerm->eOperator & WO_EQ );",
          "820:         if( pOrTerm->leftCursor!=iCursor ){",
          "821:           pOrTerm->wtFlags &= ~TERM_OR_OK;",
          "823:           okToChngToIN = 0;",
          "824:         }else{",
          "825:           int affLeft, affRight;",
          "",
          "[Removed Lines]",
          "822:         }else if( pOrTerm->u.leftColumn!=iColumn ){",
          "",
          "[Added Lines]",
          "824:         }else if( pOrTerm->u.leftColumn!=iColumn || (iColumn==XN_EXPR",
          "825:                && sqlite3ExprCompare(pParse, pOrTerm->pExpr->pLeft, pLeft, -1)",
          "826:         )){",
          "",
          "---------------"
        ],
        "test/indexexpr2.test||test/indexexpr2.test": [
          "File: test/indexexpr2.test -> test/indexexpr2.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "231:   } {t2 t2abc t2cd t2def}",
          "232: }",
          "235: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "234: #-------------------------------------------------------------------------",
          "235: # Test that ticket [d96eba87] has been fixed.",
          "236: #",
          "237: do_execsql_test 5.0 {",
          "238:   CREATE TABLE t5(a INTEGER, b INTEGER);",
          "239:   INSERT INTO t5 VALUES(2, 4), (3, 9);",
          "240: }",
          "241: do_execsql_test 5.1 {",
          "242:   SELECT * FROM t5 WHERE abs(a)=2 or abs(b)=9;",
          "243: } {2 4 3 9}",
          "244: do_execsql_test 5.2 {",
          "245:   CREATE INDEX t5a ON t5( abs(a) );",
          "246:   CREATE INDEX t5b ON t5( abs(b) );",
          "247: }",
          "248: do_execsql_test 5.4 {",
          "249:   SELECT * FROM t5 WHERE abs(a)=2 or abs(b)=9;",
          "250: } {2 4 3 9}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "af97c3f35a095166ee5406ed73a1790dae025db6",
      "candidate_info": {
        "commit_hash": "af97c3f35a095166ee5406ed73a1790dae025db6",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/af97c3f35a095166ee5406ed73a1790dae025db6",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/resolve.c"
        ],
        "message": "Fix a case of the Expr.affinity to Expr.affExpr refactor that was missed in the [a29f2a7d07beff64] check-in.\n\nFossilOrigin-Name: 83450d10707e2c7c075f3930a8c231c49c593b9cdf0e6097b0187eb877755d2d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/resolve.c||src/resolve.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 30e6ee27a9fb78291c324ac9b80db4579280140430804ecd4692e312f9938525",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "689:       pExpr->y.pTab = pItem->pTab;",
          "690:       pExpr->iTable = pItem->iCursor;",
          "691:       pExpr->iColumn = -1;",
          "693:       break;",
          "694:     }",
          "695: #endif /* defined(SQLITE_ENABLE_UPDATE_DELETE_LIMIT)",
          "",
          "[Removed Lines]",
          "692:       pExpr->affinity = SQLITE_AFF_INTEGER;",
          "",
          "[Added Lines]",
          "692:       pExpr->affExpr = SQLITE_AFF_INTEGER;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ddd7421c9170317294e69a4287deda996a3cd3dc",
      "candidate_info": {
        "commit_hash": "ddd7421c9170317294e69a4287deda996a3cd3dc",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ddd7421c9170317294e69a4287deda996a3cd3dc",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/wherecode.c",
          "test/minmax4.test"
        ],
        "message": "If a query like \"SELECT min(a), b FROM t1\" visits no rows where \"a\" is not null, extract a value for \"b\" from one of the rows where \"a\" is null. Possible fix for ticket [41866dc37].\n\nFossilOrigin-Name: a7277ed0623dccdbf775ae6127611d6bc6e150f6942a048ab4281e5136c0e98d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/wherecode.c||src/wherecode.c",
          "test/minmax4.test||test/minmax4.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 961e2f08c35238bcb1d32430d16451a96807b2c4bbb194ee621128dd09cd3981",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/wherecode.c||src/wherecode.c": [
          "File: src/wherecode.c -> src/wherecode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1694:       VdbeCoverageIf(v, op==OP_SeekGE);  testcase( op==OP_SeekGE );",
          "1695:       VdbeCoverageIf(v, op==OP_SeekLE);  testcase( op==OP_SeekLE );",
          "1696:       VdbeCoverageIf(v, op==OP_SeekLT);  testcase( op==OP_SeekLT );",
          "1697:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1698:       if( bSeekPastNull && (pLoop->wsFlags & WHERE_TOP_LIMIT)==0 ){",
          "1704:         assert( startEq==0 && (op==OP_SeekGT || op==OP_SeekLT) );",
          "1705:         assert( (pWInfo->wctrlFlags&WHERE_ORDERBY_MIN)!=0 && pWInfo->nOBSat>0 );",
          "1706:         sqlite3VdbeChangeP2(v, -1, sqlite3VdbeCurrentAddr(v)+1);",
          "1707:         sqlite3VdbeAddOp2(v, OP_Goto, 0, sqlite3VdbeCurrentAddr(v)+2);",
          "1709:         op = aStartOp[(start_constraints<<2) + (1<<1) + bRev];",
          "1710:         assert( op!=0 );",
          "1711:         sqlite3VdbeAddOp4Int(v, op, iIdxCur, addrNxt, regBase, nConstraint);",
          "1712:         VdbeCoverage(v);",
          "1713:         VdbeCoverageIf(v, op==OP_SeekGE);  testcase( op==OP_SeekGE );",
          "1714:         VdbeCoverageIf(v, op==OP_SeekLE);  testcase( op==OP_SeekLE );",
          "1715:       }",
          "",
          "---------------"
        ],
        "test/minmax4.test||test/minmax4.test": [
          "File: test/minmax4.test -> test/minmax4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: set testdir [file dirname $argv0]",
          "21: source $testdir/tester.tcl",
          "23: ifcapable !compound {",
          "24:   finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: set testprefix minmax4",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "148:   }",
          "149: } {1 1 {} 2 2 2 3 3 5 5}",
          "153: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "152: #-------------------------------------------------------------------------",
          "153: foreach {tn sql} {",
          "154:   1 { CREATE INDEX i1 ON t1(a) }",
          "155:   2 { CREATE INDEX i1 ON t1(a DESC) }",
          "156:   3 { }",
          "157: } {",
          "158:   reset_db",
          "159:   do_execsql_test 3.$tn.0 {",
          "160:     CREATE TABLE t1(a, b);",
          "161:     INSERT INTO t1 VALUES(NULL, 1);",
          "162:   }",
          "163:   execsql $sql",
          "164:   do_execsql_test 3.$tn.1 {",
          "165:     SELECT min(a), b FROM t1;",
          "166:   } {{} 1}",
          "167:   do_execsql_test 3.$tn.2 {",
          "168:     SELECT min(a), b FROM t1 WHERE a<50;",
          "169:   } {{} {}}",
          "170:   do_execsql_test 3.$tn.3 {",
          "171:     INSERT INTO t1 VALUES(2, 2);",
          "172:   }",
          "173:   do_execsql_test 3.$tn.4 {",
          "174:     SELECT min(a), b FROM t1;",
          "175:   } {2 2}",
          "176:   do_execsql_test 3.$tn.5 {",
          "177:     SELECT min(a), b FROM t1 WHERE a<50;",
          "178:   } {2 2}",
          "179: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}