{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a9fc63f7a188fd96db656a5bef940b4ed2076560",
      "candidate_info": {
        "commit_hash": "a9fc63f7a188fd96db656a5bef940b4ed2076560",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/a9fc63f7a188fd96db656a5bef940b4ed2076560",
        "files": [
          "test/gc/test-http-client-connaborted.js",
          "test/gc/test-http-client-onerror.js",
          "test/gc/test-http-client-timeout.js",
          "test/gc/test-http-client.js",
          "test/gc/test-net-timeout.js"
        ],
        "message": "Clean up gc tests\n\nThis fixes the additional issues brought up in #3179.",
        "before_after_code_files": [
          "test/gc/test-http-client-connaborted.js||test/gc/test-http-client-connaborted.js",
          "test/gc/test-http-client-onerror.js||test/gc/test-http-client-onerror.js",
          "test/gc/test-http-client-timeout.js||test/gc/test-http-client-timeout.js",
          "test/gc/test-http-client.js||test/gc/test-http-client.js",
          "test/gc/test-net-timeout.js||test/gc/test-net-timeout.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/gc/test-http-client-connaborted.js||test/gc/test-http-client-connaborted.js": [
          "File: test/gc/test-http-client-connaborted.js -> test/gc/test-http-client-connaborted.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:     done    = 0,",
          "11:     count   = 0,",
          "12:     countGC = 0,",
          "14:     common = require('../common.js'),",
          "15:     assert = require('assert'),",
          "16:     PORT = common.PORT;",
          "",
          "[Removed Lines]",
          "13:     todo    = 18,",
          "",
          "[Added Lines]",
          "13:     todo    = 500,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:   countGC ++;",
          "46: }",
          "48: function statusLater() {",
          "50: }",
          "52: function status() {",
          "",
          "[Removed Lines]",
          "49:   setTimeout(status, 1);",
          "",
          "[Added Lines]",
          "48: var timer;",
          "50:   gc();",
          "51:   if (timer) clearTimeout(timer);",
          "52:   timer = setTimeout(status, 1);",
          "",
          "---------------"
        ],
        "test/gc/test-http-client-onerror.js||test/gc/test-http-client-onerror.js": [
          "File: test/gc/test-http-client-onerror.js -> test/gc/test-http-client-onerror.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:     done    = 0,",
          "12:     count   = 0,",
          "13:     countGC = 0,",
          "15:     common = require('../common.js'),",
          "16:     assert = require('assert'),",
          "17:     PORT = common.PORT;",
          "",
          "[Removed Lines]",
          "14:     todo    = 18,",
          "",
          "[Added Lines]",
          "14:     todo    = 500,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:   countGC ++;",
          "50: }",
          "52: function statusLater() {",
          "54: }",
          "56: function status() {",
          "",
          "[Removed Lines]",
          "53:   setTimeout(status, 1);",
          "",
          "[Added Lines]",
          "52: var timer;",
          "54:   gc();",
          "55:   if (timer) clearTimeout(timer);",
          "56:   timer = setTimeout(status, 1);",
          "",
          "---------------"
        ],
        "test/gc/test-http-client-timeout.js||test/gc/test-http-client-timeout.js": [
          "File: test/gc/test-http-client-timeout.js -> test/gc/test-http-client-timeout.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:     done    = 0,",
          "14:     count   = 0,",
          "15:     countGC = 0,",
          "17:     common = require('../common.js'),",
          "18:     assert = require('assert'),",
          "19:     PORT = common.PORT;",
          "",
          "[Removed Lines]",
          "16:     todo    = 18,",
          "",
          "[Added Lines]",
          "16:     todo    = 500,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "52:   countGC ++;",
          "53: }",
          "55: function statusLater() {",
          "57: }",
          "59: function status() {",
          "",
          "[Removed Lines]",
          "56:   setTimeout(status, 1);",
          "",
          "[Added Lines]",
          "55: var timer;",
          "57:   gc();",
          "58:   if (timer) clearTimeout(timer);",
          "59:   timer = setTimeout(status, 1);",
          "",
          "---------------"
        ],
        "test/gc/test-http-client.js||test/gc/test-http-client.js": [
          "File: test/gc/test-http-client.js -> test/gc/test-http-client.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:     done    = 0,",
          "11:     count   = 0,",
          "12:     countGC = 0,",
          "14:     common = require('../common.js'),",
          "15:     assert = require('assert'),",
          "16:     PORT = common.PORT;",
          "",
          "[Removed Lines]",
          "13:     todo    = 5,",
          "",
          "[Added Lines]",
          "13:     todo    = 500,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47:   countGC ++;",
          "48: }",
          "50: function statusLater() {",
          "52: }",
          "54: function status() {",
          "",
          "[Removed Lines]",
          "51:   setTimeout(status, 1);",
          "",
          "[Added Lines]",
          "50: var timer;",
          "52:   gc();",
          "53:   if (timer) clearTimeout(timer);",
          "54:   timer = setTimeout(status, 1);",
          "",
          "---------------"
        ],
        "test/gc/test-net-timeout.js||test/gc/test-net-timeout.js": [
          "File: test/gc/test-net-timeout.js -> test/gc/test-net-timeout.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:     done    = 0,",
          "14:     count   = 0,",
          "15:     countGC = 0,",
          "17:     common = require('../common.js'),",
          "18:     assert = require('assert'),",
          "19:     PORT = common.PORT;",
          "",
          "[Removed Lines]",
          "16:     todo    = 18,",
          "",
          "[Added Lines]",
          "16:     todo    = 500,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37:       count++;",
          "38:       weak(req, afterGC);",
          "40:   }",
          "41: }",
          "",
          "[Removed Lines]",
          "39:     })()",
          "",
          "[Added Lines]",
          "39:     })();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "44:   countGC ++;",
          "45: }",
          "47: function statusLater() {",
          "49: }",
          "51: function status() {",
          "",
          "[Removed Lines]",
          "48:   setTimeout(status, 1);",
          "",
          "[Added Lines]",
          "47: var timer;",
          "49:   gc();",
          "50:   if (timer) clearTimeout(timer);",
          "51:   timer = setTimeout(status, 1);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ca19e792c6fab644bec73ffb116cbc126e4da13f",
      "candidate_info": {
        "commit_hash": "ca19e792c6fab644bec73ffb116cbc126e4da13f",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/ca19e792c6fab644bec73ffb116cbc126e4da13f",
        "files": [
          "src/node_isolate.cc",
          "src/node_isolate.h"
        ],
        "message": "isolates: have node::Isolate manage the v8::Context",
        "before_after_code_files": [
          "src/node_isolate.cc||src/node_isolate.cc",
          "src/node_isolate.h||src/node_isolate.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_isolate.cc||src/node_isolate.cc": [
          "File: src/node_isolate.cc -> src/node_isolate.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:   assert(v8_isolate_->GetData() == NULL);",
          "48:   v8_isolate_->SetData(this);",
          "50:   globals_init(&globals_);",
          "51: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:   v8_context_ = v8::Context::New();",
          "51:   v8_context_->Enter();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "77:     it->callback_(it->arg_);",
          "78:     delete it;",
          "79:   }",
          "80: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84:   assert(v8_context_->InContext());",
          "85:   v8_context_->Exit();",
          "86:   v8_context_.Clear();",
          "87:   v8_context_.Dispose();",
          "89:   v8_isolate_->Exit();",
          "90:   v8_isolate_->Dispose();",
          "91:   v8_isolate_ = NULL;",
          "",
          "---------------"
        ],
        "src/node_isolate.h||src/node_isolate.h": [
          "File: src/node_isolate.h -> src/node_isolate.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:     return v8_isolate_;",
          "63:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:   v8::Handle<v8::Context> GetV8Context() {",
          "66:     NODE_ISOLATE_CHECK(this);",
          "67:     return v8_context_;",
          "68:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:   };",
          "84:   SLIST_HEAD(AtExitCallbacks, AtExitCallbackInfo) at_exit_callbacks_;",
          "85:   v8::Isolate* v8_isolate_;",
          "86:   uv_loop_t* loop_;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "90:   v8::Persistent<v8::Context> v8_context_;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dfcdd5b8aada95baf4c8365eb92f6507049b22ea",
      "candidate_info": {
        "commit_hash": "dfcdd5b8aada95baf4c8365eb92f6507049b22ea",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/dfcdd5b8aada95baf4c8365eb92f6507049b22ea",
        "files": [
          "doc/api/fs.markdown",
          "lib/fs.js",
          "test/simple/test-fs-open.js"
        ],
        "message": "fs: add sync open flags 'rs' and 'rs+'",
        "before_after_code_files": [
          "lib/fs.js||lifs.js",
          "test/simple/test-fs-open.js||test/simple/test-fs-open.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/fs.js||lifs.js": [
          "File: lib/fs.js -> lifs.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "211:   switch (flag) {",
          "212:     case 'r' : return O_RDONLY;",
          "213:     case 'r+' : return O_RDWR;",
          "215:     case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;",
          "216:     case 'wx' : // fall through",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-fs-open.js||test/simple/test-fs-open.js": [
          "File: test/simple/test-fs-open.js -> test/simple/test-fs-open.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:   if (err) {",
          "42:     throw err;",
          "43:   }",
          "45:   openFd = fd;",
          "46: });",
          "48: process.on('exit', function() {",
          "49:   assert.ok(openFd);",
          "50: });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47: var openFd2;",
          "48: fs.open(__filename, 'rs', function(err, fd) {",
          "49:   if (err) {",
          "50:     throw err;",
          "51:   }",
          "52:   openFd2 = fd;",
          "53: });",
          "57:   assert.ok(openFd2);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "27ddd14e9f6bb08e0c19211c752565d3f7355842",
      "candidate_info": {
        "commit_hash": "27ddd14e9f6bb08e0c19211c752565d3f7355842",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/27ddd14e9f6bb08e0c19211c752565d3f7355842",
        "files": [
          "lib/net.js"
        ],
        "message": "net.js: make Socket.bytesWritten work again\n\nEarlier string write optimizations broke it.",
        "before_after_code_files": [
          "lib/net.js||linet.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/net.js||linet.js": [
          "File: lib/net.js -> linet.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "116:   self.destroyed = false;",
          "117:   self.errorEmitted = false;",
          "118:   self.bytesRead = 0;",
          "122:   if (self._handle) {",
          "",
          "[Removed Lines]",
          "119:   self.bytesWritten = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "497:     throw new TypeError('First argument must be a buffer or a string.');",
          "498:   }",
          "503:   if (this._connecting) {",
          "504:     this._connectQueueSize += data.length;",
          "",
          "[Removed Lines]",
          "500:   this.bytesWritten += data.length;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "558:   writeReq.oncomplete = afterWrite;",
          "559:   writeReq.cb = cb;",
          "560:   this._pendingWriteReqs++;",
          "562:   return this._handle.writeQueueSize == 0;",
          "563: };",
          "566: function afterWrite(status, handle, req) {",
          "567:   var self = handle.socket;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0a414f4caad3430b4d73a69f54345245e1fad016",
      "candidate_info": {
        "commit_hash": "0a414f4caad3430b4d73a69f54345245e1fad016",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/0a414f4caad3430b4d73a69f54345245e1fad016",
        "files": [
          "lib/http.js"
        ],
        "message": "http: Remove socket ondata/onend in parser cleanup",
        "before_after_code_files": [
          "lib/http.js||lihttp.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/http.js||lihttp.js": [
          "File: lib/http.js -> lihttp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1256:     var freeParser = function() {",
          "1257:       if (parser) {",
          "1258:         parsers.free(parser);",
          "1259:         parser = null;",
          "1260:       }",
          "1261:     };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}