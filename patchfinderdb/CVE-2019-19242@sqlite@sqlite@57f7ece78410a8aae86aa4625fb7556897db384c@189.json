{
  "cve_id": "CVE-2019-19242",
  "cve_desc": "SQLite 3.30.1 mishandles pExpr->y.pTab, as demonstrated by the TK_COLUMN case in sqlite3ExprCodeTarget in expr.c.",
  "repo": "sqlite/sqlite",
  "patch_hash": "57f7ece78410a8aae86aa4625fb7556897db384c",
  "patch_info": {
    "commit_hash": "57f7ece78410a8aae86aa4625fb7556897db384c",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/57f7ece78410a8aae86aa4625fb7556897db384c",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/expr.c",
      "src/wherecode.c",
      "test/gencol1.test"
    ],
    "message": "Fix a problem that comes up when using generated columns that evaluate to a constant in an index and then making use of that index in a join.\n\nFossilOrigin-Name: 8b12e95fec7ce6e0de82a04ca3dfcf1a8e62e233b7382aa28a8a9be6e862b1af",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/expr.c||src/expr.c",
      "src/wherecode.c||src/wherecode.c",
      "test/gencol1.test||test/gencol1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 2d53a30cc23e53033af8e8666457654db5dcc453ed6cd176ce1d0bff4f528159",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/expr.c||src/expr.c": [
      "File: src/expr.c -> src/expr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3607:         int iReg = sqlite3ExprCodeTarget(pParse, pExpr->pLeft,target);",
      "3609:         if( aff>SQLITE_AFF_BLOB ){",
      "3610:           static const char zAff[] = \"B\\000C\\000D\\000E\";",
      "3611:           assert( SQLITE_AFF_BLOB=='A' );",
      "",
      "[Removed Lines]",
      "3608:         int aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);",
      "",
      "[Added Lines]",
      "3608:         int aff;",
      "3609:         if( pExpr->y.pTab ){",
      "3610:           aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);",
      "3611:         }else{",
      "3612:           aff = pExpr->affExpr;",
      "3613:         }",
      "",
      "---------------"
    ],
    "src/wherecode.c||src/wherecode.c": [
      "File: src/wherecode.c -> src/wherecode.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1141:   if( pExpr->op==TK_COLUMN ){",
      "1142:     IdxExprTrans *pX = p->u.pIdxTrans;",
      "1143:     if( pExpr->iTable==pX->iTabCur && pExpr->iColumn==pX->iTabCol ){",
      "1144:       pExpr->iTable = pX->iIdxCur;",
      "1145:       pExpr->iColumn = pX->iIdxCol;",
      "1146:       pExpr->y.pTab = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1144:       assert( pExpr->y.pTab!=0 );",
      "1145:       pExpr->affExpr = sqlite3TableColumnAffinity(pExpr->y.pTab,pExpr->iColumn);",
      "",
      "---------------"
    ],
    "test/gencol1.test||test/gencol1.test": [
      "File: test/gencol1.test -> test/gencol1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "243:   UPDATE t0 SET c0 = NULL;",
      "244: } {1 {generated column loop on \"c2\"}}",
      "247: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "246: # 2019-11-21 Problems in the new generated column logic",
      "247: # reported by Yongheng Chen and Rui Zhong",
      "248: do_execsql_test gencol1-9.10 {",
      "249:   DROP TABLE IF EXISTS t1;",
      "250:   DROP TABLE IF EXISTS t2;",
      "251:   CREATE TABLE t1(aa , bb AS (17) UNIQUE);",
      "252:   INSERT INTO t1 VALUES(17);",
      "253:   CREATE TABLE t2(cc);",
      "254:   INSERT INTO t2 VALUES(41);",
      "255:   SELECT * FROM t2 JOIN t1 WHERE t1.bb=t1.aa AND t1.bb=17;",
      "256: } {41 17 17}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7fc296aa662e02fc715facf50b6fb095794d7641",
      "candidate_info": {
        "commit_hash": "7fc296aa662e02fc715facf50b6fb095794d7641",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7fc296aa662e02fc715facf50b6fb095794d7641",
        "files": [
          "ext/rtree/rtree.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Early detection of a corrupt R-Tree in the R-Tree search algorithm.\n\nFossilOrigin-Name: 2bf5a4c16457562dc942bcc6ec06d9b4e795ef3ea8e31550e18857bbebd08a76",
        "before_after_code_files": [
          "ext/rtree/rtree.c||ext/rtree/rtree.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/rtree/rtree.c||ext/rtree/rtree.c": [
          "File: ext/rtree/rtree.c -> ext/rtree/rtree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1595:       x.iLevel = p->iLevel - 1;",
          "1596:       if( x.iLevel ){",
          "1597:         x.id = readInt64(pCellData);",
          "1598:         x.iCell = 0;",
          "1599:       }else{",
          "1600:         x.id = p->id;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1598:         for(ii=0; ii<pCur->nPoint; ii++){",
          "1599:           if( pCur->aPoint[ii].id==x.id ){",
          "1600:             RTREE_IS_CORRUPT(pRtree);",
          "1601:             return SQLITE_CORRUPT_VTAB;",
          "1602:           }",
          "1603:         }",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4e34e3615ff31f4a6432033797b2e1a6604007ea0e501d714ecb362632776150",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8055a3ead4b83cae2d68ffc0ce18ffd9364a0b24",
      "candidate_info": {
        "commit_hash": "8055a3ead4b83cae2d68ffc0ce18ffd9364a0b24",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8055a3ead4b83cae2d68ffc0ce18ffd9364a0b24",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzcheck.c",
          "test/ossfuzz.c"
        ],
        "message": "Improvements to the ossfuzz.c fuzz-testing module so that it works with -DSQLITE_OMIT_PROGRESS_CALLBACK and with -DSQLITE_OMIT_INIT.\n\nFossilOrigin-Name: d343f7d6b05865c282eb73a0e39dc396f2927982af45b3d045de03ef73715693",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/fuzzcheck.c||test/fuzzcheck.c",
          "test/ossfuzz.c||test/ossfuzz.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 6982f52f579d20b8a2965373731d41622bda7f09fbf82cc005bb378321829f4c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fuzzcheck.c||test/fuzzcheck.c": [
          "File: test/fuzzcheck.c -> test/fuzzcheck.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "405: static sqlite3_int64 timeOfDay(void){",
          "406:   static sqlite3_vfs *clockVfs = 0;",
          "407:   sqlite3_int64 t;",
          "409:   if( clockVfs->iVersion>=1 && clockVfs->xCurrentTimeInt64!=0 ){",
          "410:     clockVfs->xCurrentTimeInt64(clockVfs, &t);",
          "411:   }else{",
          "",
          "[Removed Lines]",
          "408:   if( clockVfs==0 ) clockVfs = sqlite3_vfs_find(0);",
          "",
          "[Added Lines]",
          "408:   if( clockVfs==0 ){",
          "409:     clockVfs = sqlite3_vfs_find(0);",
          "410:     if( clockVfs==0 ) return 0;",
          "411:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "869:   iBegin = timeOfDay();",
          "870: #ifdef __unix__",
          "871:   signal(SIGALRM, timeoutHandler);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "872:   sqlite3_initialize();",
          "",
          "---------------"
        ],
        "test/ossfuzz.c||test/ossfuzz.c": [
          "File: test/ossfuzz.c -> test/ossfuzz.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: static sqlite3_int64 timeOfDay(void){",
          "37:   static sqlite3_vfs *clockVfs = 0;",
          "38:   sqlite3_int64 t;",
          "40:   if( clockVfs->iVersion>=2 && clockVfs->xCurrentTimeInt64!=0 ){",
          "41:     clockVfs->xCurrentTimeInt64(clockVfs, &t);",
          "42:   }else{",
          "",
          "[Removed Lines]",
          "39:   if( clockVfs==0 ) clockVfs = sqlite3_vfs_find(0);",
          "",
          "[Added Lines]",
          "39:   if( clockVfs==0 ){",
          "40:     clockVfs = sqlite3_vfs_find(0);",
          "41:     if( clockVfs==0 ) return 0;",
          "42:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59: } FuzzCtx;",
          "",
          "[Removed Lines]",
          "61: #ifndef SQLITE_OMIT_PROGRESS_CALLBACK",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "74:   p->nCb++;",
          "75:   return rc;",
          "76: }",
          "",
          "[Removed Lines]",
          "77: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "105:   int i;",
          "106:   if( argv ){",
          "107:     for(i=0; i<argc; i++) sqlite3_free(sqlite3_mprintf(\"%s\", argv[i]));",
          "108:   }",
          "110: }",
          "",
          "[Removed Lines]",
          "104: static int exec_handler(void *pCnt, int argc, char **argv, char **namev){",
          "109:   return ((*(int*)pCnt)--)<=0;",
          "",
          "[Added Lines]",
          "106: static int exec_handler(void *pClientData, int argc, char **argv, char **namev){",
          "107:   FuzzCtx *p = (FuzzCtx*)pClientData;",
          "112:   return (p->execCnt--)<=0 || progress_handler(pClientData);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "134:   }",
          "137:   rc = sqlite3_open_v2(\"fuzz.db\", &cx.db,",
          "138:            SQLITE_OPEN_READWRITE | SQLITE_OPEN_CREATE | SQLITE_OPEN_MEMORY, 0);",
          "139:   if( rc ) return 0;",
          "",
          "[Removed Lines]",
          "141: #ifndef SQLITE_OMIT_PROGRESS_CALLBACK",
          "",
          "[Added Lines]",
          "139:   if( sqlite3_initialize() ) return 0;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "147:   cx.iLastCb = timeOfDay();",
          "149:   sqlite3_progress_handler(cx.db, 10, progress_handler, (void*)&cx);",
          "150: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "151: #ifndef SQLITE_OMIT_PROGRESS_CALLBACK",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "164:   execCnt = uSelector + 1;",
          "",
          "[Added Lines]",
          "167:   cx.execCnt = uSelector + 1;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "169: #ifndef SQLITE_OMIT_COMPLETE",
          "170:   sqlite3_complete(zSql);",
          "171: #endif",
          "175:   if( (mDebug & FUZZ_SHOW_ERRORS)!=0 && zErrMsg ){",
          "",
          "[Removed Lines]",
          "172:   sqlite3_exec(cx.db, zSql, exec_handler, (void*)&execCnt, &zErrMsg);",
          "",
          "[Added Lines]",
          "175:   sqlite3_exec(cx.db, zSql, exec_handler, (void*)&cx, &zErrMsg);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4b986b2a47cd3174382c66448fde87da21b9bc74",
      "candidate_info": {
        "commit_hash": "4b986b2a47cd3174382c66448fde87da21b9bc74",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4b986b2a47cd3174382c66448fde87da21b9bc74",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c"
        ],
        "message": "Patch makes balance_nonroot() slightly smaller and faster and more robust against corrupt databases.\n\nFossilOrigin-Name: 174da3c32c9caebd642c31cb594597ccd5bb2a7fc501b1f49aef0b7b4765bfca",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: fcc24edde471c2214add2dbc3a27da8890a7148105c5ffa024faf72457964a5f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7152:     int iCell = (iOld + pPg->aiOvfl[i]) - iNew;",
          "7153:     if( iCell>=0 && iCell<nNew ){",
          "7154:       pCellptr = &pPg->aCellIdx[iCell * 2];",
          "7157:       nCell++;",
          "7158:       if( pageInsertArray(",
          "7159:             pPg, pBegin, &pData, pCellptr,",
          "",
          "[Removed Lines]",
          "7155:       assert( nCell>=iCell );",
          "7156:       memmove(&pCellptr[2], pCellptr, (nCell - iCell) * 2);",
          "",
          "[Added Lines]",
          "7155:       if( nCell>iCell ){",
          "7156:         memmove(&pCellptr[2], pCellptr, (nCell - iCell) * 2);",
          "7157:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "95063c286768c880447ff66641e1a722c32d0b10",
      "candidate_info": {
        "commit_hash": "95063c286768c880447ff66641e1a722c32d0b10",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/95063c286768c880447ff66641e1a722c32d0b10",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Improve the \".recover\" command in the shell tool so that it is not confused by auto-vacuum databases. And so that it can recover tables for which one or more of the column names are SQL keywords.\n\nFossilOrigin-Name: 87d76047d6a3df31bc9b7c0cffa7b758236c124f87263a520850b019cbbc4c6e",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: d8e88248e3204b5f2b95b9b8921ee7ee2f7574ae81e6abd5b4f2ddf187f7d71b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "6397:       }",
          "6398:       i = 1;",
          "6399:       shellPreparePrintf(dbtmp, &rc, &pStmt,",
          "6401:           \"  FILTER (WHERE cid!=%d) OVER (ORDER BY %s cid) \"",
          "6402:           \"FROM pragma_table_info(%Q)\",",
          "6403:           bIntkey ? \", \" : \"\", pTab->iPk,",
          "",
          "[Removed Lines]",
          "6400:           \"SELECT %Q || group_concat(name, ', ') \"",
          "",
          "[Added Lines]",
          "6400:           \"SELECT %Q || group_concat(quote(name), ', ') \"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6619:     );",
          "6620:   }",
          "6622:   shellExec(pState->db, &rc,",
          "6623:     \"CREATE TABLE recovery.dbptr(\"",
          "6624:     \"      pgno, child, PRIMARY KEY(child, pgno)\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6625:   shellExec(pState->db, &rc,",
          "6626:     \"WITH ptrmap(pgno) AS (\"",
          "6627:     \"  SELECT 2 WHERE shell_int32(\"",
          "6628:     \"    (SELECT data FROM sqlite_dbpage WHERE pgno=1), 13\"",
          "6629:     \"  )\"",
          "6630:     \"    UNION ALL \"",
          "6631:     \"  SELECT pgno+1+(SELECT page_size FROM pragma_page_size)/5 AS pp \"",
          "6632:     \"  FROM ptrmap WHERE pp<=(SELECT page_count FROM pragma_page_count)\"",
          "6633:     \")\"",
          "6634:     \"REPLACE INTO recovery.freelist SELECT pgno FROM ptrmap\"",
          "6635:   );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6301c43f236543ecb174e2639a0201bb29580fbe",
      "candidate_info": {
        "commit_hash": "6301c43f236543ecb174e2639a0201bb29580fbe",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/6301c43f236543ecb174e2639a0201bb29580fbe",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c",
          "test/dbfuzz001.test"
        ],
        "message": "dbfuzz2 found a NEVER() that is sometimes true.\n\nFossilOrigin-Name: 1201615cbbd3070158ea5fab3d2c8c95f41b25d6da096a44cb9257a7b7405efc",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c",
          "test/dbfuzz001.test||test/dbfuzz001.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 997b65117f8c12dba5fb85434fde9765cdb0d2a49cc3e31979abba3e21350086",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7039:   assert( sqlite3PagerIswriteable(pParent->pDbPage) );",
          "7040:   assert( pPage->nOverflow==1 );",
          "",
          "[Removed Lines]",
          "7043:   if( NEVER(pPage->nCell==0) ) return SQLITE_CORRUPT_BKPT;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/dbfuzz001.test||test/dbfuzz001.test": [
          "File: test/dbfuzz001.test -> test/dbfuzz001.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:   finish_test",
          "19:   return",
          "20: }",
          "22: # In the following database file, there is 384 bytes of free space",
          "23: # on page 8 that does not appear on the freeblock list.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: database_may_be_corrupt",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "180:   DELETE FROM t3 WHERE x IS NOT NULL AND +rowid=6;",
          "181: } {}",
          "183: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "184: # This is a dbfuzz2-generate test case that can cause a page with",
          "185: # pPage->nCell==0 to enter the balancer.",
          "186: #",
          "187: do_test dbfuzz001-200 {",
          "188:   db deserialize [decode_hexdb {",
          "189:     | size 3076 pagesize 512 filename c03.db",
          "190:     | page 1 offset 0",
          "191:     |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "192:     |     16: 02 00 01 01 00 40 20 20 00 00 00 0c 00 00 00 07   .....@  ........",
          "193:     |     32: 00 00 00 00 00 00 00 00 00 00 00 08 00 00 00 04   ................",
          "194:     |     48: 00 00 00 00 00 00 00 03 e8 00 00 01 00 00 00 00   ................",
          "195:     |     80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0c   ................",
          "196:     |     96: 00 2e 2c 50 0d 00 00 00 06 01 06 00 01 da 01 b0   ..,P............",
          "197:     |    112: 01 56 01 86 01 2a 01 06 00 00 00 00 00 00 00 00   .V...*..........",
          "198:     |    128: 00 00 00 00 00 00 00 00 ef 00 00 00 00 00 00 00   ................",
          "199:     |    192: 00 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "200:     |    224: 00 00 00 00 00 00 00 00 00 00 00 00 00 ff e9 00   ................",
          "201:     |    256: 00 00 00 00 00 00 22 07 06 17 11 11 01 31 74 61   ......\"......1ta",
          "202:     |    272: 62 6c 65 74 34 74 34 07 43 52 45 41 54 45 20 54   blet4t4.CREATE T",
          "203:     |    288: 41 42 4c 45 20 74 34 28 78 29 2a 06 06 17 13 11   ABLE t4(x)*.....",
          "204:     |    304: 01 3f 69 6e 64 65 78 74 33 78 74 33 06 43 52 45   .?indext3xt3.CRE",
          "205:     |    320: 41 54 45 20 49 4e 44 45 58 20 74 33 64 20 4f 4e   ATE INDEX t3d ON",
          "206:     |    336: 20 74 33 28 78 29 2e 04 06 17 15 11 01 45 69 6e    t3(x).......Ein",
          "207:     |    352: 64 65 78 74 32 63 64 74 32 05 43 52 45 41 54 45   dext2cdt2.CREATE",
          "208:     |    368: 20 49 4e 44 45 58 20 74 32 63 64 20 4f 4e 20 74    INDEX t2cd ON t",
          "209:     |    384: 32 28 63 2c 64 29 28 05 06 17 11 11 01 3d 74 61   2(c,d)(......=ta",
          "210:     |    400: 62 6c 65 74 33 74 33 04 43 52 45 41 54 45 20 54   blet3t3.CREATE T",
          "211:     |    416: 41 42 4c 45 20 74 33 28 63 2c 78 2c 65 2c 66 29   ABLE t3(c,x,e,f)",
          "212:     |    432: 28 02 06 17 11 11 01 3d 74 61 62 6c 65 74 32 74   (......=tablet2t",
          "213:     |    448: 32 03 43 52 45 41 54 45 20 54 41 42 4c 45 20 74   2.CREATE TABLE t",
          "214:     |    464: 32 28 63 2c 64 2c 65 2c 66 29 24 01 06 17 11 11   2(c,d,e,f)$.....",
          "215:     |    480: 01 35 74 61 62 6c 65 74 31 74 31 02 43 52 45 41   .5tablet1t1.CREA",
          "216:     |    496: 54 45 20 54 41 42 4c 45 20 74 31 28 61 2c 62 29   TE TABLE t1(a,b)",
          "217:     | page 2 offset 512",
          "218:     |      0: 0d 00 00 00 04 01 cf 00 01 fa 01 f3 01 de 01 cf   ................",
          "219:     |    176: 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "220:     |    256: 00 00 14 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "221:     |    368: 00 00 00 00 00 00 00 00 00 00 00 00 1e 00 00 00   ................",
          "222:     |    416: 00 00 00 1b 00 00 00 00 04 00 00 00 00 00 00 00   ................",
          "223:     |    448: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0d   ................",
          "224:     |    464: 04 03 17 17 73 65 76 65 6e 65 69 67 68 74 13 03   ....seveneight..",
          "225:     |    480: 03 07 07 40 14 00 00 00 00 00 00 40 18 00 00 00   ...@.......@....",
          "226:     |    496: 00 00 00 05 02 03 01 01 03 04 04 01 03 09 01 02   ................",
          "227:     | page 3 offset 1024",
          "228:     |      0: 0d 00 00 00 08 01 54 00 01 f7 01 ec 01 c5 01 aa   ......T.........",
          "229:     |     16: 01 a1 01 96 01 6f 01 54 00 00 00 00 00 00 00 00   .....o.T........",
          "230:     |     32: 00 00 00 00 00 00 00 03 e8 00 00 00 00 00 00 00   ................",
          "231:     |    336: 00 00 00 00 19 08 05 16 17 17 17 65 69 67 68 74   ...........eight",
          "232:     |    352: 65 69 67 68 74 73 65 76 65 6e 73 65 76 ff ff ff   eightsevensev...",
          "233:     |    368: 0e 05 07 07 07 07 40 18 00 00 00 00 00 00 40 18   ......@.......@.",
          "234:     |    384: 00 00 00 00 00 00 40 14 00 00 00 00 00 00 40 14   ......@.......@.",
          "235:     |    400: 00 00 00 00 00 00 09 06 05 01 01 01 01 04 04 03   ................",
          "236:     |    416: 03 07 05 05 01 01 09 09 02 02 19 04 05 17 17 17   ................",
          "237:     |    432: 17 73 65 6f 65 6e 65 69 67 68 74 65 69 67 68 74   .seoeneighteight",
          "238:     |    448: 73 65 76 65 6e 25 03 05 07 07 07 07 40 14 00 00   seven%......@...",
          "239:     |    464: 00 00 00 00 40 18 00 00 00 00 00 00 40 18 00 00   ....@.......@...",
          "240:     |    480: 00 00 00 00 40 14 00 00 00 00 00 00 09 02 05 01   ....@...........",
          "241:     |    496: 01 01 01 03 04 04 03 07 01 05 09 01 01 09 02 02   ................",
          "242:     | page 4 offset 1536",
          "243:     |      0: 0d 00 00 00 00 00 10 00 00 00 00 00 00 00 00 00   ................",
          "244:     |    160: 00 00 00 ea 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "245:     |    336: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00   ............ ...",
          "246:     | page 5 offset 2048",
          "247:     |      0: 0a 00 00 00 08 01 96 00 01 fa 01 c4 01 f2 01 bc   ................",
          "248:     |     16: 01 dc 01 a6 01 96 01 cc 00 00 00 00 00 00 00 00   ................",
          "249:     |     48: 00 00 00 00 00 00 00 00 00 00 10 00 00 00 00 00   ................",
          "250:     |    288: 00 00 00 00 00 00 00 00 00 64 00 00 00 2b 00 00   .........d...+..",
          "251:     |    400: 00 00 00 00 00 00 0f 04 17 17 01 65 69 67 68 74   ...........eight",
          "252:     |    416: 65 69 6f 68 74 08 15 04 07 07 01 40 18 00 00 00   eioht......@....",
          "253:     |    432: 00 00 00 40 18 00 00 00 00 00 00 07 07 04 01 01   ...@............",
          "254:     |    448: 01 04 04 06 07 04 01 01 01 02 02 05 0f 04 17 17   ................",
          "255:     |    464: 01 73 65 76 65 6e 65 69 67 68 74 04 15 04 07 07   .seveneight.....",
          "256:     |    480: 01 40 14 00 00 00 00 00 00 40 18 00 00 00 00 00   .@.......@......",
          "257:     |    496: 00 03 07 04 01 01 01 03 04 02 05 04 09 01 09 02   ................",
          "258:     | page 6 offset 2560",
          "259:     |      0: 0a 00 00 00 00 02 00 00 00 00 00 00 00 0d 00 00   ................",
          "260:     |     16: 00 08 01 c2 00 01 fb 01 f6 01 f1 01 ec 01 e0 01   ................",
          "261:     |     32: d4 01 cb 01 c2 00 00 00 00 00 00 00 00 00 00 00   ................",
          "262:     |    160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 00   ................",
          "263:     |    448: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 07   ................",
          "264:     |    464: 08 02 17 65 69 67 68 74 07 07 02 17 65 69 67 68   ...eight....eigh",
          "265:     |    480: 74 0a 06 02 07 40 18 00 00 00 00 00 00 0a 05 02   t....@..........",
          "266:     |    496: 07 40 18 00 04 02 01 04 03 03 02 01 04 03 02 02   .@..............",
          "267:     | end x/c03.db",
          "268:   }]",
          "269:   catchsql {INSERT INTO t3 SELECT * FROM t2;}",
          "270: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ]
      }
    }
  ]
}