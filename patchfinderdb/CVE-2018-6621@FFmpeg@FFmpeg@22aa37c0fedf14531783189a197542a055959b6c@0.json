{
  "cve_id": "CVE-2018-6621",
  "cve_desc": "The decode_frame function in libavcodec/utvideodec.c in FFmpeg through 3.2 allows remote attackers to cause a denial of service (out of array read) via a crafted AVI file.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "22aa37c0fedf14531783189a197542a055959b6c",
  "patch_info": {
    "commit_hash": "22aa37c0fedf14531783189a197542a055959b6c",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/22aa37c0fedf14531783189a197542a055959b6c",
    "files": [
      "libavcodec/utvideodec.c"
    ],
    "message": "avcodec/utvideodec: Fix bytes left check in decode_frame()\n\nFixes: out of array read\nFixes: poc-2017.avi\n\nFound-by: GwanYeong Kim <gy741.kim@gmail.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 118e1b0b3370dd1c0da442901b486689efd1654b)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "before_after_code_files": [
      "libavcodec/utvideodec.c||libavcodec/utvideodec.c"
    ]
  },
  "patch_diff": {
    "libavcodec/utvideodec.c||libavcodec/utvideodec.c": [
      "File: libavcodec/utvideodec.c -> libavcodec/utvideodec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "534:             for (j = 0; j < c->slices; j++) {",
      "535:                 slice_end   = bytestream2_get_le32u(&gb);",
      "536:                 if (slice_end < 0 || slice_end < slice_start ||",
      "538:                     av_log(avctx, AV_LOG_ERROR, \"Incorrect slice size\\n\");",
      "539:                     return AVERROR_INVALIDDATA;",
      "540:                 }",
      "",
      "[Removed Lines]",
      "537:                     bytestream2_get_bytes_left(&gb) < slice_end) {",
      "",
      "[Added Lines]",
      "537:                     bytestream2_get_bytes_left(&gb) < slice_end + 1024LL) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "342f1da13489de6650349fff2206a81442d6c668",
      "candidate_info": {
        "commit_hash": "342f1da13489de6650349fff2206a81442d6c668",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/342f1da13489de6650349fff2206a81442d6c668",
        "files": [
          "libavcodec/utvideodec.c"
        ],
        "message": "avcodec/utvideodec: Fix bytes left check in decode_frame()\n\nFixes: out of array read\nFixes: poc-2017.avi\n\nFound-by: GwanYeong Kim <gy741.kim@gmail.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 118e1b0b3370dd1c0da442901b486689efd1654b)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/utvideodec.c||libavcodec/utvideodec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/utvideodec.c||libavcodec/utvideodec.c"
          ],
          "candidate": [
            "libavcodec/utvideodec.c||libavcodec/utvideodec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/utvideodec.c||libavcodec/utvideodec.c": [
          "File: libavcodec/utvideodec.c -> libavcodec/utvideodec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "561:             for (j = 0; j < c->slices; j++) {",
          "562:                 slice_end   = bytestream2_get_le32u(&gb);",
          "563:                 if (slice_end < 0 || slice_end < slice_start ||",
          "565:                     av_log(avctx, AV_LOG_ERROR, \"Incorrect slice size\\n\");",
          "566:                     return AVERROR_INVALIDDATA;",
          "567:                 }",
          "",
          "[Removed Lines]",
          "564:                     bytestream2_get_bytes_left(&gb) < slice_end) {",
          "",
          "[Added Lines]",
          "564:                     bytestream2_get_bytes_left(&gb) < slice_end + 1024LL) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0322f781777d4413bd57815ee9b5a7d6a0cfe716",
      "candidate_info": {
        "commit_hash": "0322f781777d4413bd57815ee9b5a7d6a0cfe716",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/0322f781777d4413bd57815ee9b5a7d6a0cfe716",
        "files": [
          "libavcodec/utvideodec.c"
        ],
        "message": "avcodec/utvideodec: Fix bytes left check in decode_frame()\n\nFixes: out of array read\nFixes: poc-2017.avi\n\nFound-by: GwanYeong Kim <gy741.kim@gmail.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 118e1b0b3370dd1c0da442901b486689efd1654b)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/utvideodec.c||libavcodec/utvideodec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/utvideodec.c||libavcodec/utvideodec.c"
          ],
          "candidate": [
            "libavcodec/utvideodec.c||libavcodec/utvideodec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/utvideodec.c||libavcodec/utvideodec.c": [
          "File: libavcodec/utvideodec.c -> libavcodec/utvideodec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "638:             for (j = 0; j < c->slices; j++) {",
          "639:                 slice_end   = bytestream2_get_le32u(&gb);",
          "640:                 if (slice_end < 0 || slice_end < slice_start ||",
          "642:                     av_log(avctx, AV_LOG_ERROR, \"Incorrect slice size\\n\");",
          "643:                     return AVERROR_INVALIDDATA;",
          "644:                 }",
          "",
          "[Removed Lines]",
          "641:                     bytestream2_get_bytes_left(&gb) < slice_end) {",
          "",
          "[Added Lines]",
          "641:                     bytestream2_get_bytes_left(&gb) < slice_end + 1024LL) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "118e1b0b3370dd1c0da442901b486689efd1654b",
      "candidate_info": {
        "commit_hash": "118e1b0b3370dd1c0da442901b486689efd1654b",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/118e1b0b3370dd1c0da442901b486689efd1654b",
        "files": [
          "libavcodec/utvideodec.c"
        ],
        "message": "avcodec/utvideodec: Fix bytes left check in decode_frame()\n\nFixes: out of array read\nFixes: poc-2017.avi\n\nFound-by: GwanYeong Kim <gy741.kim@gmail.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/utvideodec.c||libavcodec/utvideodec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/utvideodec.c||libavcodec/utvideodec.c"
          ],
          "candidate": [
            "libavcodec/utvideodec.c||libavcodec/utvideodec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/utvideodec.c||libavcodec/utvideodec.c": [
          "File: libavcodec/utvideodec.c -> libavcodec/utvideodec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "676:             for (j = 0; j < c->slices; j++) {",
          "677:                 slice_end   = bytestream2_get_le32u(&gb);",
          "678:                 if (slice_end < 0 || slice_end < slice_start ||",
          "680:                     av_log(avctx, AV_LOG_ERROR, \"Incorrect slice size\\n\");",
          "681:                     return AVERROR_INVALIDDATA;",
          "682:                 }",
          "",
          "[Removed Lines]",
          "679:                     bytestream2_get_bytes_left(&gb) < slice_end) {",
          "",
          "[Added Lines]",
          "679:                     bytestream2_get_bytes_left(&gb) < slice_end + 1024LL) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}