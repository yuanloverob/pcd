{
  "cve_id": "CVE-2014-6300",
  "cve_desc": "Cross-site scripting (XSS) vulnerability in the micro history implementation in phpMyAdmin 4.0.x before 4.0.10.3, 4.1.x before 4.1.14.4, and 4.2.x before 4.2.8.1 allows remote attackers to inject arbitrary web script or HTML, and consequently conduct a cross-site request forgery (CSRF) attack to create a root account, via a crafted URL, related to js/ajax.js.",
  "repo": "phpmyadmin/phpmyadmin",
  "patch_hash": "33b39f9f1dd9a4d27856530e5ac004e23b30e8ac",
  "patch_info": {
    "commit_hash": "33b39f9f1dd9a4d27856530e5ac004e23b30e8ac",
    "repo": "phpmyadmin/phpmyadmin",
    "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/33b39f9f1dd9a4d27856530e5ac004e23b30e8ac",
    "files": [
      "ChangeLog",
      "js/ajax.js",
      "js/whitelist.php",
      "libraries/Header.class.php",
      "libraries/Scripts.class.php"
    ],
    "message": "bug #4530 [security] DOM based XSS that results to a CSRF that creates a ROOT account in certain conditions\n\nSigned-off-by: Marc Delisle <marc@infomarc.info>",
    "before_after_code_files": [
      "js/ajax.js||js/ajax.js",
      "js/whitelist.php||js/whitelist.php",
      "libraries/Header.class.php||libraries/Header.class.php",
      "libraries/Scripts.class.php||libraries/Scripts.class.php"
    ]
  },
  "patch_diff": {
    "js/ajax.js||js/ajax.js": [
      "File: js/ajax.js -> js/ajax.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "783:     if (window.location.hash.substring(0, 8) == '#PMAURL-') {",
      "789:     } else {",
      "",
      "[Removed Lines]",
      "786:         window.location = window.location.hash.substring(",
      "787:             window.location.hash.indexOf(':') + 1",
      "788:         );",
      "",
      "[Added Lines]",
      "786:         var colon_position = window.location.hash.indexOf(':');",
      "787:         var questionmark_position = window.location.hash.indexOf('?');",
      "788:         if (colon_position != -1 && questionmark_position != -1 && colon_position < questionmark_position) {",
      "789:             var hash_url = window.location.hash.substring(colon_position + 1, questionmark_position);",
      "790:             if (PMA_gotoWhitelist.indexOf(hash_url) != -1) {",
      "791:                 window.location = window.location.hash.substring(",
      "792:                     colon_position + 1",
      "793:                 );",
      "794:             }",
      "795:         }",
      "",
      "---------------"
    ],
    "js/whitelist.php||js/whitelist.php": [
      "File: js/whitelist.php -> js/whitelist.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?php",
      "9: chdir('..');",
      "12: header('Content-Type: text/javascript; charset=UTF-8');",
      "16: header('Expires: ' . gmdate('D, d M Y H:i:s', time() + 3600) . ' GMT');",
      "20: define('PMA_MINIMUM_COMMON', true);",
      "21: require_once './libraries/common.inc.php';",
      "23: session_write_close();",
      "25: echo \"var PMA_gotoWhitelist = new Array();\\n\";",
      "26: $i = -1;",
      "27: foreach ($GLOBALS['goto_whitelist'] as $one_whitelist) {",
      "28:     $i++;",
      "29:     echo 'PMA_gotoWhitelist[' . $i . ']=\"' . $one_whitelist . '\";' . \"\\n\";",
      "30: }",
      "31: ?>",
      "",
      "---------------"
    ],
    "libraries/Header.class.php||libraries/Header.class.php": [
      "File: libraries/Header.class.php -> libraries/Header.class.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "145:     private function _addDefaultScripts()",
      "146:     {",
      "147:         $this->_scripts->addFile('jquery/jquery-1.8.3.min.js');",
      "148:         $this->_scripts->addFile('ajax.js');",
      "149:         $this->_scripts->addFile('keyhandler.js');",
      "150:         $this->_scripts->addFile('jquery/jquery-ui-1.9.2.custom.min.js');",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "148:         $params = array('lang' => $GLOBALS['lang']);",
      "149:         if (isset($GLOBALS['db'])) {",
      "150:             $params['db'] = $GLOBALS['db'];",
      "151:         }",
      "153:         $this->_scripts->addFile(",
      "154:             'whitelist.php' . PMA_URL_getCommon($params), false, true",
      "155:         );",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "179:         $this->_scripts->addFile('messages.php' . PMA_URL_getCommon($params));",
      "",
      "[Removed Lines]",
      "175:         $params = array('lang' => $GLOBALS['lang']);",
      "176:         if (isset($GLOBALS['db'])) {",
      "177:             $params['db'] = $GLOBALS['db'];",
      "178:         }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "libraries/Scripts.class.php||libraries/Scripts.class.php": [
      "File: libraries/Scripts.class.php -> libraries/Scripts.class.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "51:     private function _includeFiles($files)",
      "52:     {",
      "53:         $dynamic_scripts = \"\";",
      "54:         $scripts = array();",
      "55:         foreach ($files as $value) {",
      "56:             if (strpos($value['filename'], \"?\") !== false) {",
      "59:                 continue;",
      "60:             }",
      "61:             $include = true;",
      "",
      "[Removed Lines]",
      "57:                 $dynamic_scripts .= \"<script type='text/javascript' src='js/\"",
      "58:                     . $value['filename'] . \"'></script>\";",
      "",
      "[Added Lines]",
      "53:         $first_dynamic_scripts = \"\";",
      "58:                 if ($value['before_statics'] === true) {",
      "59:                     $first_dynamic_scripts .= \"<script type='text/javascript' src='js/\"",
      "60:                         . $value['filename'] . \"'></script>\";",
      "61:                 } else {",
      "62:                     $dynamic_scripts .= \"<script type='text/javascript' src='js/\"",
      "63:                         . $value['filename'] . \"'></script>\";",
      "64:                 }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "83:             '<script type=\"text/javascript\" src=\"%s\"></script>',",
      "84:             htmlspecialchars($url)",
      "85:         );",
      "87:     }",
      "",
      "[Removed Lines]",
      "86:         return $static_scripts . $dynamic_scripts;",
      "",
      "[Added Lines]",
      "92:         return $first_dynamic_scripts . $static_scripts . $dynamic_scripts;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "112:     {",
      "113:         $hash = md5($filename);",
      "114:         if (!empty($this->_files[$hash])) {",
      "",
      "[Removed Lines]",
      "111:     public function addFile($filename, $conditional_ie = false)",
      "",
      "[Added Lines]",
      "119:     public function addFile($filename, $conditional_ie = false, $before_statics = false)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "119:         $this->_files[$hash] = array(",
      "120:             'has_onload' => $has_onload,",
      "121:             'filename' => $filename,",
      "123:         );",
      "124:     }",
      "",
      "[Removed Lines]",
      "122:             'conditional_ie' => $conditional_ie",
      "",
      "[Added Lines]",
      "130:             'conditional_ie' => $conditional_ie,",
      "131:             'before_statics' => $before_statics",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "621772aa0d19d5f3ac21af2611c1dbda9b356506",
      "candidate_info": {
        "commit_hash": "621772aa0d19d5f3ac21af2611c1dbda9b356506",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/621772aa0d19d5f3ac21af2611c1dbda9b356506",
        "files": [
          "ChangeLog",
          "js/ajax.js",
          "js/whitelist.php",
          "libraries/Header.class.php",
          "libraries/Scripts.class.php"
        ],
        "message": "bug #4530 [security] DOM based XSS that results to a CSRF that creates a ROOT account in certain conditions\n\nSigned-off-by: Marc Delisle <marc@infomarc.info>",
        "before_after_code_files": [
          "js/ajax.js||js/ajax.js",
          "js/whitelist.php||js/whitelist.php",
          "libraries/Header.class.php||libraries/Header.class.php",
          "libraries/Scripts.class.php||libraries/Scripts.class.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "js/ajax.js||js/ajax.js",
            "js/whitelist.php||js/whitelist.php",
            "libraries/Header.class.php||libraries/Header.class.php",
            "libraries/Scripts.class.php||libraries/Scripts.class.php"
          ],
          "candidate": [
            "js/ajax.js||js/ajax.js",
            "js/whitelist.php||js/whitelist.php",
            "libraries/Header.class.php||libraries/Header.class.php",
            "libraries/Scripts.class.php||libraries/Scripts.class.php"
          ]
        }
      },
      "candidate_diff": {
        "js/ajax.js||js/ajax.js": [
          "File: js/ajax.js -> js/ajax.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "770:     if (window.location.hash.substring(0, 8) == '#PMAURL-') {",
          "776:     } else {",
          "",
          "[Removed Lines]",
          "773:         window.location = window.location.hash.substring(",
          "774:             window.location.hash.indexOf(':') + 1",
          "775:         );",
          "",
          "[Added Lines]",
          "773:         var colon_position = window.location.hash.indexOf(':');",
          "774:         var questionmark_position = window.location.hash.indexOf('?');",
          "775:         if (colon_position != -1 && questionmark_position != -1 && colon_position < questionmark_position) {",
          "776:             var hash_url = window.location.hash.substring(colon_position + 1, questionmark_position);",
          "777:             if (PMA_gotoWhitelist.indexOf(hash_url) != -1) {",
          "778:                 window.location = window.location.hash.substring(",
          "779:                     colon_position + 1",
          "780:                 );",
          "781:             }",
          "782:         }",
          "",
          "---------------"
        ],
        "js/whitelist.php||js/whitelist.php": [
          "File: js/whitelist.php -> js/whitelist.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "9: chdir('..');",
          "12: header('Content-Type: text/javascript; charset=UTF-8');",
          "16: header('Expires: ' . gmdate('D, d M Y H:i:s', time() + 3600) . ' GMT');",
          "20: define('PMA_MINIMUM_COMMON', true);",
          "21: require_once './libraries/common.inc.php';",
          "23: session_write_close();",
          "25: echo \"var PMA_gotoWhitelist = new Array();\\n\";",
          "26: $i = -1;",
          "27: foreach ($GLOBALS['goto_whitelist'] as $one_whitelist) {",
          "28:     $i++;",
          "29:     echo 'PMA_gotoWhitelist[' . $i . ']=\"' . $one_whitelist . '\";' . \"\\n\";",
          "30: }",
          "31: ?>",
          "",
          "---------------"
        ],
        "libraries/Header.class.php||libraries/Header.class.php": [
          "File: libraries/Header.class.php -> libraries/Header.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "145:     private function _addDefaultScripts()",
          "146:     {",
          "147:         $this->_scripts->addFile('jquery/jquery-1.8.3.min.js');",
          "148:         $this->_scripts->addFile('ajax.js');",
          "149:         $this->_scripts->addFile('keyhandler.js');",
          "150:         $this->_scripts->addFile('jquery/jquery-ui-1.9.2.custom.min.js');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "148:         $params = array('lang' => $GLOBALS['lang']);",
          "149:         if (isset($GLOBALS['db'])) {",
          "150:             $params['db'] = $GLOBALS['db'];",
          "151:         }",
          "153:         $this->_scripts->addFile(",
          "154:             'whitelist.php' . PMA_URL_getCommon($params), false, true",
          "155:         );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "179:         $this->_scripts->addFile('messages.php' . PMA_URL_getCommon($params));",
          "",
          "[Removed Lines]",
          "175:         $params = array('lang' => $GLOBALS['lang']);",
          "176:         if (isset($GLOBALS['db'])) {",
          "177:             $params['db'] = $GLOBALS['db'];",
          "178:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "libraries/Scripts.class.php||libraries/Scripts.class.php": [
          "File: libraries/Scripts.class.php -> libraries/Scripts.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "51:     private function _includeFiles($files)",
          "52:     {",
          "53:         $dynamic_scripts = \"\";",
          "54:         $params = array();",
          "55:         foreach ($files as $value) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53:         $first_dynamic_scripts = \"\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:                     $scripts[] = \"scripts[]=\" . $value['filename'];",
          "71:                 }",
          "72:             } else {",
          "75:             }",
          "76:         }",
          "77:         $static_scripts = sprintf(",
          "",
          "[Removed Lines]",
          "73:                 $dynamic_scripts .= \"<script type='text/javascript' src='js/\"",
          "74:                     . $value['filename'] . \"'></script>\";",
          "",
          "[Added Lines]",
          "74:                 if ($value['before_statics'] === true) {",
          "75:                     $first_dynamic_scripts .= \"<script type='text/javascript' src='js/\"",
          "76:                         . $value['filename'] . \"'></script>\";",
          "77:                 } else {",
          "78:                     $dynamic_scripts .= \"<script type='text/javascript' src='js/\"",
          "79:                         . $value['filename'] . \"'></script>\";",
          "80:                 }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "79:             . 'src=\"js/get_scripts.js.php%s&%s\"></script>',",
          "80:             PMA_URL_getCommon(array(), 'none'), implode(\"&\", $scripts)",
          "81:         );",
          "83:     }",
          "",
          "[Removed Lines]",
          "82:         return $static_scripts . $dynamic_scripts;",
          "",
          "[Added Lines]",
          "88:         return $first_dynamic_scripts . $static_scripts . $dynamic_scripts;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "108:     {",
          "109:         $hash = md5($filename);",
          "110:         if (empty($this->_files[$hash])) {",
          "",
          "[Removed Lines]",
          "107:     public function addFile($filename, $conditional_ie = false)",
          "",
          "[Added Lines]",
          "115:     public function addFile($filename, $conditional_ie = false, $before_statics = false)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "112:             $this->_files[$hash] = array(",
          "113:                 'has_onload' => $has_onload,",
          "114:                 'filename' => $filename,",
          "116:             );",
          "117:         }",
          "118:     }",
          "",
          "[Removed Lines]",
          "115:                 'conditional_ie' => $conditional_ie",
          "",
          "[Added Lines]",
          "123:                 'conditional_ie' => $conditional_ie,",
          "124:                 'before_statics' => $before_statics",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ab0dba4533f1d01dde43c1864413478c921cfe6b",
      "candidate_info": {
        "commit_hash": "ab0dba4533f1d01dde43c1864413478c921cfe6b",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/ab0dba4533f1d01dde43c1864413478c921cfe6b",
        "files": [
          "ChangeLog",
          "js/ajax.js",
          "js/whitelist.php",
          "libraries/Header.class.php",
          "libraries/Scripts.class.php"
        ],
        "message": "bug #4530 [security] DOM based XSS that results to a CSRF that creates a ROOT account in certain conditions\n\nSigned-off-by: Marc Delisle <marc@infomarc.info>",
        "before_after_code_files": [
          "js/ajax.js||js/ajax.js",
          "js/whitelist.php||js/whitelist.php",
          "libraries/Header.class.php||libraries/Header.class.php",
          "libraries/Scripts.class.php||libraries/Scripts.class.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "js/ajax.js||js/ajax.js",
            "js/whitelist.php||js/whitelist.php",
            "libraries/Header.class.php||libraries/Header.class.php",
            "libraries/Scripts.class.php||libraries/Scripts.class.php"
          ],
          "candidate": [
            "js/ajax.js||js/ajax.js",
            "js/whitelist.php||js/whitelist.php",
            "libraries/Header.class.php||libraries/Header.class.php",
            "libraries/Scripts.class.php||libraries/Scripts.class.php"
          ]
        }
      },
      "candidate_diff": {
        "js/ajax.js||js/ajax.js": [
          "File: js/ajax.js -> js/ajax.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "714:     if (window.location.hash.substring(0, 8) == '#PMAURL-') {",
          "720:     } else {",
          "",
          "[Removed Lines]",
          "717:         window.location = window.location.hash.substring(",
          "718:             window.location.hash.indexOf(':') + 1",
          "719:         );",
          "",
          "[Added Lines]",
          "717:         var colon_position = window.location.hash.indexOf(':');",
          "718:         var questionmark_position = window.location.hash.indexOf('?');",
          "719:         if (colon_position != -1 && questionmark_position != -1 && colon_position < questionmark_position) {",
          "720:             var hash_url = window.location.hash.substring(colon_position + 1, questionmark_position);",
          "721:             if (PMA_gotoWhitelist.indexOf(hash_url) != -1) {",
          "722:                 window.location = window.location.hash.substring(",
          "723:                     colon_position + 1",
          "724:                 );",
          "725:             }",
          "726:         }",
          "",
          "---------------"
        ],
        "js/whitelist.php||js/whitelist.php": [
          "File: js/whitelist.php -> js/whitelist.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "9: chdir('..');",
          "12: header('Content-Type: text/javascript; charset=UTF-8');",
          "16: header('Expires: ' . gmdate('D, d M Y H:i:s', time() + 3600) . ' GMT');",
          "20: define('PMA_MINIMUM_COMMON', true);",
          "21: require_once './libraries/common.inc.php';",
          "23: session_write_close();",
          "25: echo \"var PMA_gotoWhitelist = new Array();\\n\";",
          "26: $i = -1;",
          "27: foreach ($GLOBALS['goto_whitelist'] as $one_whitelist) {",
          "28:     $i++;",
          "29:     echo 'PMA_gotoWhitelist[' . $i . ']=\"' . $one_whitelist . '\";' . \"\\n\";",
          "30: }",
          "31: ?>",
          "",
          "---------------"
        ],
        "libraries/Header.class.php||libraries/Header.class.php": [
          "File: libraries/Header.class.php -> libraries/Header.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "147:     private function _addDefaultScripts()",
          "148:     {",
          "149:         $this->_scripts->addFile('jquery/jquery-1.8.3.min.js');",
          "150:         $this->_scripts->addFile('ajax.js');",
          "151:         $this->_scripts->addFile('keyhandler.js');",
          "152:         $this->_scripts->addFile('jquery/jquery-ui-1.9.2.custom.min.js');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "150:         $params = array('lang' => $GLOBALS['lang']);",
          "151:         if (isset($GLOBALS['db'])) {",
          "152:             $params['db'] = $GLOBALS['db'];",
          "153:         }",
          "156:         $this->_scripts->addFile(",
          "157:             'whitelist.php' . PMA_generate_common_url($params), false, true",
          "158:         );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "177:         $this->_scripts->addFile('messages.php' . PMA_generate_common_url($params));",
          "",
          "[Removed Lines]",
          "173:         $params = array('lang' => $GLOBALS['lang']);",
          "174:         if (isset($GLOBALS['db'])) {",
          "175:             $params['db'] = $GLOBALS['db'];",
          "176:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "libraries/Scripts.class.php||libraries/Scripts.class.php": [
          "File: libraries/Scripts.class.php -> libraries/Scripts.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "51:     private function _includeFiles($files)",
          "52:     {",
          "53:         $dynamic_scripts = \"\";",
          "54:         $params = array();",
          "55:         foreach ($files as $value) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53:         $first_dynamic_scripts = \"\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68:                     $params[] = \"scripts[]=\" . $value['filename'];",
          "69:                 }",
          "70:             } else {",
          "72:             }",
          "73:         }",
          "74:         $static_scripts = sprintf(",
          "75:             \"<script type='text/javascript' src='js/get_scripts.js.php?%s'></script>\",",
          "76:             implode(\"&\", $params)",
          "77:         );",
          "79:     }",
          "",
          "[Removed Lines]",
          "71:                 $dynamic_scripts .= \"<script type='text/javascript' src='js/\" . $value['filename'] . \"'></script>\";",
          "78:         return $static_scripts . $dynamic_scripts;",
          "",
          "[Added Lines]",
          "72:                 if ($value['before_statics'] === true) {",
          "73:                     $first_dynamic_scripts .= \"<script type='text/javascript' src='js/\" . $value['filename'] . \"'></script>\";",
          "74:                 } else {",
          "75:                     $dynamic_scripts .= \"<script type='text/javascript' src='js/\" . $value['filename'] . \"'></script>\";",
          "76:                 }",
          "83:         return $first_dynamic_scripts . $static_scripts . $dynamic_scripts;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "104:     {",
          "105:         $hash = md5($filename);",
          "106:         if (empty($this->_files[$hash])) {",
          "",
          "[Removed Lines]",
          "103:     public function addFile($filename, $conditional_ie = false)",
          "",
          "[Added Lines]",
          "110:     public function addFile($filename, $conditional_ie = false, $before_statics = false)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "108:             $this->_files[$hash] = array(",
          "109:                 'has_onload' => $has_onload,",
          "110:                 'filename' => $filename,",
          "112:             );",
          "113:         }",
          "114:     }",
          "",
          "[Removed Lines]",
          "111:                 'conditional_ie' => $conditional_ie",
          "",
          "[Added Lines]",
          "118:                 'conditional_ie' => $conditional_ie,",
          "119:                 'before_statics' => $before_statics",
          "",
          "---------------"
        ]
      }
    }
  ]
}