{
  "cve_id": "CVE-2022-21731",
  "cve_desc": "Tensorflow is an Open Source Machine Learning Framework. The implementation of shape inference for `ConcatV2` can be used to trigger a denial of service attack via a segfault caused by a type confusion. The `axis` argument is translated into `concat_dim` in the `ConcatShapeHelper` helper function. Then, a value for `min_rank` is computed based on `concat_dim`. This is then used to validate that the `values` tensor has at least the required rank. However, `WithRankAtLeast` receives the lower bound as a 64-bits value and then compares it against the maximum 32-bits integer value that could be represented. Due to the fact that `min_rank` is a 32-bits value and the value of `axis`, the `rank` argument is a negative value, so the error check is bypassed. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "08d7b00c0a5a20926363849f611729f53f3ec022",
  "patch_info": {
    "commit_hash": "08d7b00c0a5a20926363849f611729f53f3ec022",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/08d7b00c0a5a20926363849f611729f53f3ec022",
    "files": [
      "tensorflow/core/framework/common_shape_fns.cc",
      "tensorflow/python/kernel_tests/array_ops/concat_op_test.py"
    ],
    "message": "Fix Segfault in Concat V2 shape function.\n\nPiperOrigin-RevId: 412120654\nChange-Id: I3ff915faea694f9ad8b00024e9af2de9909011be",
    "before_after_code_files": [
      "tensorflow/core/framework/common_shape_fns.cc||tensorflow/core/framework/common_shape_fns.cc",
      "tensorflow/python/kernel_tests/array_ops/concat_op_test.py||tensorflow/python/kernel_tests/array_ops/concat_op_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/core/framework/common_shape_fns.cc||tensorflow/core/framework/common_shape_fns.cc": [
      "File: tensorflow/core/framework/common_shape_fns.cc -> tensorflow/core/framework/common_shape_fns.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "2005:   }",
      "2010:   ShapeHandle output_before;",
      "2011:   ShapeHandle output_after;",
      "",
      "[Removed Lines]",
      "2008:   const int min_rank = concat_dim < 0 ? -concat_dim : concat_dim + 1;",
      "",
      "[Added Lines]",
      "2008:   const int64 min_rank = concat_dim < 0 ? -concat_dim : concat_dim + 1;",
      "",
      "---------------"
    ],
    "tensorflow/python/kernel_tests/array_ops/concat_op_test.py||tensorflow/python/kernel_tests/array_ops/concat_op_test.py": [
      "File: tensorflow/python/kernel_tests/array_ops/concat_op_test.py -> tensorflow/python/kernel_tests/array_ops/concat_op_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "17: import numpy as np",
      "19: from tensorflow.python.framework import constant_op",
      "20: from tensorflow.python.framework import dtypes",
      "21: from tensorflow.python.framework import errors_impl",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "19: from tensorflow.python.eager import def_function",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "570:         t2 = [2]",
      "571:         gen_array_ops.concat_v2([t1, t2], 1).eval()",
      "573:   def testConcatNegativeAxis(self):",
      "574:     with test_util.use_gpu():",
      "575:       t1 = [[1, 2, 3], [4, 5, 6]]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "574:   def testConcatInvalidAxisInTfFunction(self):",
      "576:     @def_function.function",
      "577:     def concat_wrapper():",
      "578:       y = gen_array_ops.concat_v2(",
      "579:           values=[[1, 2, 3], [4, 5, 6]], axis=0xb500005b)",
      "580:       return y",
      "582:     with self.assertRaises(ValueError):",
      "583:       concat_wrapper()",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "da4a46539f90377de460ec6dfe75ae89b77e7b58",
      "candidate_info": {
        "commit_hash": "da4a46539f90377de460ec6dfe75ae89b77e7b58",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/da4a46539f90377de460ec6dfe75ae89b77e7b58",
        "files": [
          "tensorflow/core/framework/common_shape_fns.cc",
          "tensorflow/python/kernel_tests/concat_op_test.py"
        ],
        "message": "Fix Segfault in Concat V2 shape function.\n\nPiperOrigin-RevId: 412120654\nChange-Id: I3ff915faea694f9ad8b00024e9af2de9909011be",
        "before_after_code_files": [
          "tensorflow/core/framework/common_shape_fns.cc||tensorflow/core/framework/common_shape_fns.cc",
          "tensorflow/python/kernel_tests/concat_op_test.py||tensorflow/python/kernel_tests/concat_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/framework/common_shape_fns.cc||tensorflow/core/framework/common_shape_fns.cc"
          ],
          "candidate": [
            "tensorflow/core/framework/common_shape_fns.cc||tensorflow/core/framework/common_shape_fns.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/framework/common_shape_fns.cc||tensorflow/core/framework/common_shape_fns.cc": [
          "File: tensorflow/core/framework/common_shape_fns.cc -> tensorflow/core/framework/common_shape_fns.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1937:   }",
          "1942:   ShapeHandle output_before;",
          "1943:   ShapeHandle output_after;",
          "",
          "[Removed Lines]",
          "1940:   const int min_rank = concat_dim < 0 ? -concat_dim : concat_dim + 1;",
          "",
          "[Added Lines]",
          "1940:   const int64 min_rank = concat_dim < 0 ? -concat_dim : concat_dim + 1;",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/concat_op_test.py||tensorflow/python/kernel_tests/concat_op_test.py": [
          "File: tensorflow/python/kernel_tests/concat_op_test.py -> tensorflow/python/kernel_tests/concat_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import numpy as np",
          "23: from tensorflow.python.framework import constant_op",
          "24: from tensorflow.python.framework import dtypes",
          "25: from tensorflow.python.framework import errors_impl",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: from tensorflow.python.eager import def_function",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "574:         t2 = [2]",
          "575:         gen_array_ops.concat_v2([t1, t2], 1).eval()",
          "577:   def testConcatNegativeAxis(self):",
          "578:     with test_util.use_gpu():",
          "579:       t1 = [[1, 2, 3], [4, 5, 6]]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "578:   def testConcatInvalidAxisInTfFunction(self):",
          "580:     @def_function.function",
          "581:     def concat_wrapper():",
          "582:       y = gen_array_ops.concat_v2(",
          "583:           values=[[1, 2, 3], [4, 5, 6]], axis=0xb500005b)",
          "584:       return y",
          "586:     with self.assertRaises(ValueError):",
          "587:       concat_wrapper()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4c3b6bde12834b9d26c50b9b007cc59904b32de9",
      "candidate_info": {
        "commit_hash": "4c3b6bde12834b9d26c50b9b007cc59904b32de9",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/4c3b6bde12834b9d26c50b9b007cc59904b32de9",
        "files": [
          "tensorflow/core/framework/common_shape_fns.cc",
          "tensorflow/python/kernel_tests/concat_op_test.py"
        ],
        "message": "Fix Segfault in Concat V2 shape function.\n\nPiperOrigin-RevId: 412120654\nChange-Id: I3ff915faea694f9ad8b00024e9af2de9909011be",
        "before_after_code_files": [
          "tensorflow/core/framework/common_shape_fns.cc||tensorflow/core/framework/common_shape_fns.cc",
          "tensorflow/python/kernel_tests/concat_op_test.py||tensorflow/python/kernel_tests/concat_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/framework/common_shape_fns.cc||tensorflow/core/framework/common_shape_fns.cc"
          ],
          "candidate": [
            "tensorflow/core/framework/common_shape_fns.cc||tensorflow/core/framework/common_shape_fns.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/framework/common_shape_fns.cc||tensorflow/core/framework/common_shape_fns.cc": [
          "File: tensorflow/core/framework/common_shape_fns.cc -> tensorflow/core/framework/common_shape_fns.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1967:   }",
          "1972:   ShapeHandle output_before;",
          "1973:   ShapeHandle output_after;",
          "",
          "[Removed Lines]",
          "1970:   const int min_rank = concat_dim < 0 ? -concat_dim : concat_dim + 1;",
          "",
          "[Added Lines]",
          "1970:   const int64 min_rank = concat_dim < 0 ? -concat_dim : concat_dim + 1;",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/concat_op_test.py||tensorflow/python/kernel_tests/concat_op_test.py": [
          "File: tensorflow/python/kernel_tests/concat_op_test.py -> tensorflow/python/kernel_tests/concat_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import numpy as np",
          "23: from tensorflow.python.framework import constant_op",
          "24: from tensorflow.python.framework import dtypes",
          "25: from tensorflow.python.framework import errors_impl",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: from tensorflow.python.eager import def_function",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "574:         t2 = [2]",
          "575:         gen_array_ops.concat_v2([t1, t2], 1).eval()",
          "577:   def testConcatNegativeAxis(self):",
          "578:     with test_util.use_gpu():",
          "579:       t1 = [[1, 2, 3], [4, 5, 6]]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "578:   def testConcatInvalidAxisInTfFunction(self):",
          "580:     @def_function.function",
          "581:     def concat_wrapper():",
          "582:       y = gen_array_ops.concat_v2(",
          "583:           values=[[1, 2, 3], [4, 5, 6]], axis=0xb500005b)",
          "584:       return y",
          "586:     with self.assertRaises(ValueError):",
          "587:       concat_wrapper()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f4cb0436d8b790e792bc807ccccf4ded88692179",
      "candidate_info": {
        "commit_hash": "f4cb0436d8b790e792bc807ccccf4ded88692179",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/f4cb0436d8b790e792bc807ccccf4ded88692179",
        "files": [
          "tensorflow/core/framework/common_shape_fns.cc",
          "tensorflow/python/kernel_tests/concat_op_test.py"
        ],
        "message": "Fix Segfault in Concat V2 shape function.\n\nPiperOrigin-RevId: 412120654\nChange-Id: I3ff915faea694f9ad8b00024e9af2de9909011be",
        "before_after_code_files": [
          "tensorflow/core/framework/common_shape_fns.cc||tensorflow/core/framework/common_shape_fns.cc",
          "tensorflow/python/kernel_tests/concat_op_test.py||tensorflow/python/kernel_tests/concat_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/framework/common_shape_fns.cc||tensorflow/core/framework/common_shape_fns.cc"
          ],
          "candidate": [
            "tensorflow/core/framework/common_shape_fns.cc||tensorflow/core/framework/common_shape_fns.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/framework/common_shape_fns.cc||tensorflow/core/framework/common_shape_fns.cc": [
          "File: tensorflow/core/framework/common_shape_fns.cc -> tensorflow/core/framework/common_shape_fns.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2005:   }",
          "2010:   ShapeHandle output_before;",
          "2011:   ShapeHandle output_after;",
          "",
          "[Removed Lines]",
          "2008:   const int min_rank = concat_dim < 0 ? -concat_dim : concat_dim + 1;",
          "",
          "[Added Lines]",
          "2008:   const int64 min_rank = concat_dim < 0 ? -concat_dim : concat_dim + 1;",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/concat_op_test.py||tensorflow/python/kernel_tests/concat_op_test.py": [
          "File: tensorflow/python/kernel_tests/concat_op_test.py -> tensorflow/python/kernel_tests/concat_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import numpy as np",
          "23: from tensorflow.python.framework import constant_op",
          "24: from tensorflow.python.framework import dtypes",
          "25: from tensorflow.python.framework import errors_impl",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: from tensorflow.python.eager import def_function",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "574:         t2 = [2]",
          "575:         gen_array_ops.concat_v2([t1, t2], 1).eval()",
          "577:   def testConcatNegativeAxis(self):",
          "578:     with test_util.use_gpu():",
          "579:       t1 = [[1, 2, 3], [4, 5, 6]]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "578:   def testConcatInvalidAxisInTfFunction(self):",
          "580:     @def_function.function",
          "581:     def concat_wrapper():",
          "582:       y = gen_array_ops.concat_v2(",
          "583:           values=[[1, 2, 3], [4, 5, 6]], axis=0xb500005b)",
          "584:       return y",
          "586:     with self.assertRaises(ValueError):",
          "587:       concat_wrapper()",
          "",
          "---------------"
        ]
      }
    }
  ]
}