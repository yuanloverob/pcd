{
  "cve_id": "CVE-2021-37635",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of sparse reduction operations in TensorFlow can trigger accesses outside of bounds of heap allocated data. The [implementation](https://github.com/tensorflow/tensorflow/blob/a1bc56203f21a5a4995311825ffaba7a670d7747/tensorflow/core/kernels/sparse_reduce_op.cc#L217-L228) fails to validate that each reduction group does not overflow and that each corresponding index does not point to outside the bounds of the input tensor. We have patched the issue in GitHub commit 87158f43f05f2720a374f3e6d22a7aaa3a33f750. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "87158f43f05f2720a374f3e6d22a7aaa3a33f750",
  "patch_info": {
    "commit_hash": "87158f43f05f2720a374f3e6d22a7aaa3a33f750",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/87158f43f05f2720a374f3e6d22a7aaa3a33f750",
    "files": [
      "tensorflow/core/kernels/sparse_reduce_op.cc"
    ],
    "message": "Prevent heap OOB in sparse reduction ops.\n\nPiperOrigin-RevId: 387934524\nChange-Id: I894aa30f1e454f09b471d565b4a325da49322c1a",
    "before_after_code_files": [
      "tensorflow/core/kernels/sparse_reduce_op.cc||tensorflow/core/kernels/sparse_reduce_op.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/sparse_reduce_op.cc||tensorflow/core/kernels/sparse_reduce_op.cc": [
      "File: tensorflow/core/kernels/sparse_reduce_op.cc -> tensorflow/core/kernels/sparse_reduce_op.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "219:     sp.Reorder<T>(reduction.reorder_dims);",
      "220:     for (const auto &g : sp.group(reduction.group_by_dims)) {",
      "221:       Op::template Run<T>(ctx, reduced_val, g.template values<T>());",
      "222:       const int64_t idx = CoordinatesToFlatIndex(g.group(), output_strides);",
      "223:       out_flat(idx) = reduced_val();",
      "224:       VLOG(2) << \"coords: \" << absl::StrJoin(g.group(), \",\")",
      "225:               << \"; idx: \" << idx << \"; group \" << Op::Name() << \": \"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "222:       OP_REQUIRES(ctx,",
      "223:                   output_strides.empty() ||",
      "224:                   (g.group().size() == output_strides.size()),",
      "225:                   errors::Internal(",
      "226:                       \"Expected group size and output_strides size to match\",",
      "227:                       \", but got \", g.group().size(), \" and \",",
      "228:                       output_strides.size()));",
      "230:       OP_REQUIRES(ctx,",
      "231:                   idx >= 0 && idx < out_flat.size(),",
      "232:                   errors::Internal(",
      "233:                       \"Obtained a write index of \", idx,",
      "234:                       \" which is outside of bounds of [0, \",",
      "235:                       out_flat.size(), \")\"));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ba3e1285fd398b557118286b10b85066d48ef3de",
      "candidate_info": {
        "commit_hash": "ba3e1285fd398b557118286b10b85066d48ef3de",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/ba3e1285fd398b557118286b10b85066d48ef3de",
        "files": [
          "tensorflow/core/kernels/sparse_reduce_op.cc"
        ],
        "message": "Prevent heap OOB in sparse reduction ops.\n\nPiperOrigin-RevId: 387934524\nChange-Id: I894aa30f1e454f09b471d565b4a325da49322c1a",
        "before_after_code_files": [
          "tensorflow/core/kernels/sparse_reduce_op.cc||tensorflow/core/kernels/sparse_reduce_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/sparse_reduce_op.cc||tensorflow/core/kernels/sparse_reduce_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/sparse_reduce_op.cc||tensorflow/core/kernels/sparse_reduce_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/sparse_reduce_op.cc||tensorflow/core/kernels/sparse_reduce_op.cc": [
          "File: tensorflow/core/kernels/sparse_reduce_op.cc -> tensorflow/core/kernels/sparse_reduce_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "219:     sp.Reorder<T>(reduction.reorder_dims);",
          "220:     for (const auto &g : sp.group(reduction.group_by_dims)) {",
          "221:       Op::template Run<T>(ctx, reduced_val, g.template values<T>());",
          "222:       const int64 idx = CoordinatesToFlatIndex(g.group(), output_strides);",
          "223:       out_flat(idx) = reduced_val();",
          "224:       VLOG(2) << \"coords: \" << absl::StrJoin(g.group(), \",\")",
          "225:               << \"; idx: \" << idx << \"; group \" << Op::Name() << \": \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "222:       OP_REQUIRES(ctx,",
          "223:                   output_strides.empty() ||",
          "224:                   (g.group().size() == output_strides.size()),",
          "225:                   errors::Internal(",
          "226:                       \"Expected group size and output_strides size to match\",",
          "227:                       \", but got \", g.group().size(), \" and \",",
          "228:                       output_strides.size()));",
          "230:       OP_REQUIRES(ctx,",
          "231:                   idx >= 0 && idx < out_flat.size(),",
          "232:                   errors::Internal(",
          "233:                       \"Obtained a write index of \", idx,",
          "234:                       \" which is outside of bounds of [0, \",",
          "235:                       out_flat.size(), \")\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3f8bcc7e0c7ceaf06ab020e3d46762993dc73b8e",
      "candidate_info": {
        "commit_hash": "3f8bcc7e0c7ceaf06ab020e3d46762993dc73b8e",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/3f8bcc7e0c7ceaf06ab020e3d46762993dc73b8e",
        "files": [
          "tensorflow/core/kernels/sparse_reduce_op.cc"
        ],
        "message": "Prevent heap OOB in sparse reduction ops.\n\nPiperOrigin-RevId: 387934524\nChange-Id: I894aa30f1e454f09b471d565b4a325da49322c1a",
        "before_after_code_files": [
          "tensorflow/core/kernels/sparse_reduce_op.cc||tensorflow/core/kernels/sparse_reduce_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/sparse_reduce_op.cc||tensorflow/core/kernels/sparse_reduce_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/sparse_reduce_op.cc||tensorflow/core/kernels/sparse_reduce_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/sparse_reduce_op.cc||tensorflow/core/kernels/sparse_reduce_op.cc": [
          "File: tensorflow/core/kernels/sparse_reduce_op.cc -> tensorflow/core/kernels/sparse_reduce_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "219:     sp.Reorder<T>(reduction.reorder_dims);",
          "220:     for (const auto &g : sp.group(reduction.group_by_dims)) {",
          "221:       Op::template Run<T>(ctx, reduced_val, g.template values<T>());",
          "222:       const int64 idx = CoordinatesToFlatIndex(g.group(), output_strides);",
          "223:       out_flat(idx) = reduced_val();",
          "224:       VLOG(2) << \"coords: \" << absl::StrJoin(g.group(), \",\")",
          "225:               << \"; idx: \" << idx << \"; group \" << Op::Name() << \": \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "222:       OP_REQUIRES(ctx,",
          "223:                   output_strides.empty() ||",
          "224:                   (g.group().size() == output_strides.size()),",
          "225:                   errors::Internal(",
          "226:                       \"Expected group size and output_strides size to match\",",
          "227:                       \", but got \", g.group().size(), \" and \",",
          "228:                       output_strides.size()));",
          "230:       OP_REQUIRES(ctx,",
          "231:                   idx >= 0 && idx < out_flat.size(),",
          "232:                   errors::Internal(",
          "233:                       \"Obtained a write index of \", idx,",
          "234:                       \" which is outside of bounds of [0, \",",
          "235:                       out_flat.size(), \")\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b6863d773efb296c99d49d3e4a894d03a3ea1039",
      "candidate_info": {
        "commit_hash": "b6863d773efb296c99d49d3e4a894d03a3ea1039",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/b6863d773efb296c99d49d3e4a894d03a3ea1039",
        "files": [
          "tensorflow/core/kernels/sparse_reduce_op.cc"
        ],
        "message": "Prevent heap OOB in sparse reduction ops.\n\nPiperOrigin-RevId: 387934524\nChange-Id: I894aa30f1e454f09b471d565b4a325da49322c1a",
        "before_after_code_files": [
          "tensorflow/core/kernels/sparse_reduce_op.cc||tensorflow/core/kernels/sparse_reduce_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/sparse_reduce_op.cc||tensorflow/core/kernels/sparse_reduce_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/sparse_reduce_op.cc||tensorflow/core/kernels/sparse_reduce_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/sparse_reduce_op.cc||tensorflow/core/kernels/sparse_reduce_op.cc": [
          "File: tensorflow/core/kernels/sparse_reduce_op.cc -> tensorflow/core/kernels/sparse_reduce_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "219:     sp.Reorder<T>(reduction.reorder_dims);",
          "220:     for (const auto &g : sp.group(reduction.group_by_dims)) {",
          "221:       Op::template Run<T>(ctx, reduced_val, g.template values<T>());",
          "222:       const int64 idx = CoordinatesToFlatIndex(g.group(), output_strides);",
          "223:       out_flat(idx) = reduced_val();",
          "224:       VLOG(2) << \"coords: \" << absl::StrJoin(g.group(), \",\")",
          "225:               << \"; idx: \" << idx << \"; group \" << Op::Name() << \": \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "222:       OP_REQUIRES(ctx,",
          "223:                   output_strides.empty() ||",
          "224:                   (g.group().size() == output_strides.size()),",
          "225:                   errors::Internal(",
          "226:                       \"Expected group size and output_strides size to match\",",
          "227:                       \", but got \", g.group().size(), \" and \",",
          "228:                       output_strides.size()));",
          "230:       OP_REQUIRES(ctx,",
          "231:                   idx >= 0 && idx < out_flat.size(),",
          "232:                   errors::Internal(",
          "233:                       \"Obtained a write index of \", idx,",
          "234:                       \" which is outside of bounds of [0, \",",
          "235:                       out_flat.size(), \")\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8880ea8e6da9264aa7d6d32ee6ffe29f0fc4283d",
      "candidate_info": {
        "commit_hash": "8880ea8e6da9264aa7d6d32ee6ffe29f0fc4283d",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/8880ea8e6da9264aa7d6d32ee6ffe29f0fc4283d",
        "files": [
          "tensorflow/core/kernels/sparse_reduce_op.cc"
        ],
        "message": "Prevent heap OOB in sparse reduction ops.\n\nPiperOrigin-RevId: 387934524\nChange-Id: I894aa30f1e454f09b471d565b4a325da49322c1a",
        "before_after_code_files": [
          "tensorflow/core/kernels/sparse_reduce_op.cc||tensorflow/core/kernels/sparse_reduce_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/sparse_reduce_op.cc||tensorflow/core/kernels/sparse_reduce_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/sparse_reduce_op.cc||tensorflow/core/kernels/sparse_reduce_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/sparse_reduce_op.cc||tensorflow/core/kernels/sparse_reduce_op.cc": [
          "File: tensorflow/core/kernels/sparse_reduce_op.cc -> tensorflow/core/kernels/sparse_reduce_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "219:     sp.Reorder<T>(reduction.reorder_dims);",
          "220:     for (const auto &g : sp.group(reduction.group_by_dims)) {",
          "221:       Op::template Run<T>(ctx, reduced_val, g.template values<T>());",
          "222:       const int64 idx = CoordinatesToFlatIndex(g.group(), output_strides);",
          "223:       out_flat(idx) = reduced_val();",
          "224:       VLOG(2) << \"coords: \" << absl::StrJoin(g.group(), \",\")",
          "225:               << \"; idx: \" << idx << \"; group \" << Op::Name() << \": \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "222:       OP_REQUIRES(ctx,",
          "223:                   output_strides.empty() ||",
          "224:                   (g.group().size() == output_strides.size()),",
          "225:                   errors::Internal(",
          "226:                       \"Expected group size and output_strides size to match\",",
          "227:                       \", but got \", g.group().size(), \" and \",",
          "228:                       output_strides.size()));",
          "230:       OP_REQUIRES(ctx,",
          "231:                   idx >= 0 && idx < out_flat.size(),",
          "232:                   errors::Internal(",
          "233:                       \"Obtained a write index of \", idx,",
          "234:                       \" which is outside of bounds of [0, \",",
          "235:                       out_flat.size(), \")\"));",
          "",
          "---------------"
        ]
      }
    }
  ]
}