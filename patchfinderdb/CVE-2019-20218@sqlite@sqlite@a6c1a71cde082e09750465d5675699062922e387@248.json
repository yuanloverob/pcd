{
  "cve_id": "CVE-2019-20218",
  "cve_desc": "selectExpander in select.c in SQLite 3.30.1 proceeds with WITH stack unwinding even after a parsing error.",
  "repo": "sqlite/sqlite",
  "patch_hash": "a6c1a71cde082e09750465d5675699062922e387",
  "patch_info": {
    "commit_hash": "a6c1a71cde082e09750465d5675699062922e387",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/a6c1a71cde082e09750465d5675699062922e387",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/altertab3.test"
    ],
    "message": "Do not attempt to unwind the WITH stack in the Parse object following an error. This fixes a separate case to [de6e6d68].\n\nFossilOrigin-Name: d29edef93451cc67a5d69c1cce1b1832d9ca8fff1f600afdd51338b74d077b92",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/altertab3.test||test/altertab3.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 597896ed0ae9e2960a8f39576bd7f77a11dccc1da84b6a44ebb5c38d90ebc330",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4982:     return WRC_Abort;",
      "4983:   }",
      "",
      "[Removed Lines]",
      "4981:   if( db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "[Added Lines]",
      "4981:   if( pParse->nErr || db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "---------------"
    ],
    "test/altertab3.test||test/altertab3.test": [
      "File: test/altertab3.test -> test/altertab3.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "531:   ALTER TABLE t1 RENAME TO t1x;",
      "532: } {1 {error in trigger r1: no such table: main.t2}}",
      "534: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "534: #------------------------------------------------------------------------",
      "535: #",
      "536: reset_db",
      "537: do_execsql_test 23.1 {",
      "538:   CREATE TABLE v0 (a);",
      "539:   CREATE VIEW v2 (v3) AS",
      "540:     WITH x1 AS (SELECT * FROM v2)",
      "541:     SELECT v3 AS x, v3 AS y FROM v2;",
      "542: }",
      "544: do_catchsql_test 23.2 {",
      "545:   SELECT * FROM v2",
      "546: } {1 {view v2 is circularly defined}}",
      "548: db close",
      "549: sqlite3 db test.db",
      "551: do_catchsql_test 23.3 {",
      "552:   ALTER TABLE v0 RENAME TO t3 ;",
      "553: } {1 {error in view v2: view v2 is circularly defined}}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7dc3547eeb691d5397e9dc55206daab0927937d8",
      "candidate_info": {
        "commit_hash": "7dc3547eeb691d5397e9dc55206daab0927937d8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7dc3547eeb691d5397e9dc55206daab0927937d8",
        "files": [
          "Makefile.linux-gcc",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Updates to the default settings in Makefile.linux-gcc.\n\nFossilOrigin-Name: 3044cf6917ea8324175fc91657e9a5978af9748f72e1914bc361753f0b2d897d",
        "before_after_code_files": [
          "Makefile.linux-gcc||Makefile.linux-gcc",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.linux-gcc||Makefile.linux-gcc": [
          "File: Makefile.linux-gcc -> Makefile.linux-gcc",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: #### C Compiler and options for use in building executables that",
          "20: #    will run on the platform that is doing the build.",
          "21: #",
          "23: #BCC = /opt/ancic/bin/c89 -0",
          "25: #### If the target operating system supports the \"usleep()\" system",
          "",
          "[Removed Lines]",
          "22: BCC = gcc -g -O2",
          "",
          "[Added Lines]",
          "22: BCC = gcc -g -O0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38: #### Specify any extra linker options needed to make the library",
          "39: #    thread safe",
          "40: #",
          "44: #### Specify any extra libraries needed to access required functions.",
          "45: #",
          "",
          "[Removed Lines]",
          "41: #THREADLIB = -lpthread",
          "42: THREADLIB =",
          "",
          "[Added Lines]",
          "41: THREADLIB = -lpthread -lm -ldl",
          "42: #THREADLIB =",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "54: #    You can make the library go almost twice as fast if you compile",
          "55: #    with -DNDEBUG=1",
          "56: #",
          "63: #### The suffix to add to executable files.  \".exe\" for windows.",
          "64: #    Nothing for unix.",
          "",
          "[Removed Lines]",
          "57: #OPTS = -DSQLITE_DEBUG=2",
          "58: #OPTS = -DSQLITE_DEBUG=1",
          "59: #OPTS =",
          "60: OPTS = -DNDEBUG=1",
          "61: OPTS += -DHAVE_FDATASYNC=1",
          "",
          "[Added Lines]",
          "57: OPTS += -DSQLITE_DEBUG=1",
          "58: OPTS += -DSQLITE_ENABLE_WHERETRACE",
          "59: OPTS += -DSQLITE_ENABLE_SELECTTRACE",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "70: #    will run on the target platform.  This is usually the same",
          "71: #    as BCC, unless you are cross-compiling.",
          "72: #",
          "74: #TCC = gcc -g -O0 -Wall",
          "75: #TCC = gcc -g -O0 -Wall -fprofile-arcs -ftest-coverage",
          "76: #TCC = /opt/mingw/bin/i386-mingw32-gcc -O6",
          "",
          "[Removed Lines]",
          "73: TCC = gcc -O6",
          "",
          "[Added Lines]",
          "71: TCC = gcc -O0",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "92: #### Extra compiler options needed for programs that use the TCL library.",
          "93: #",
          "100: #### Linker options needed to link against the TCL library.",
          "101: #",
          "102: #LIBTCL = -ltcl -lm -ldl",
          "107: #### Additional objects for SQLite library when TCL support is enabled.",
          "108: #TCLOBJ =",
          "",
          "[Removed Lines]",
          "94: #TCL_FLAGS =",
          "95: #TCL_FLAGS = -DSTATIC_BUILD=1",
          "96: TCL_FLAGS = -I/home/drh/tcltk/8.5linux",
          "97: #TCL_FLAGS = -I/home/drh/tcltk/8.5win -DSTATIC_BUILD=1",
          "98: #TCL_FLAGS = -I/home/drh/tcltk/8.3hpux",
          "103: LIBTCL = /home/drh/tcltk/8.5linux/libtcl8.5g.a -lm -ldl",
          "104: #LIBTCL = /home/drh/tcltk/8.5win/libtcl85s.a -lmsvcrt",
          "105: #LIBTCL = /home/drh/tcltk/8.3hpux/libtcl8.3.a -ldld -lm -lc",
          "",
          "[Added Lines]",
          "92: TCL_FLAGS = -I/home/drh/tcl/include/tcl8.6",
          "97: LIBTCL = /home/drh/tcl/lib/libtcl8.6.a -lm -lpthread -ldl -lz",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5351e920f489562f959ab8a376ff720f845ea165e0cdc7c3a271aac53c2aa64a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f9231c34eb931d0e3a83a3a0f6dad2d324e01a41",
      "candidate_info": {
        "commit_hash": "f9231c34eb931d0e3a83a3a0f6dad2d324e01a41",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f9231c34eb931d0e3a83a3a0f6dad2d324e01a41",
        "files": [
          "ext/fts5/fts5_tokenize.c",
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "src/vdbe.h"
        ],
        "message": "Fix harmless compiler warnings.\n\nFossilOrigin-Name: b57c545a384ab5d62becf3164945b32b1e108b2fb4c8dbd939a1706c2079e18b",
        "before_after_code_files": [
          "ext/fts5/fts5_tokenize.c||ext/fts5/fts5_tokenize.c",
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "src/vdbe.h||src/vdbe.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_tokenize.c||ext/fts5/fts5_tokenize.c": [
          "File: ext/fts5/fts5_tokenize.c -> ext/fts5/fts5_tokenize.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "274:           if( bToken!=bTokenChars && sqlite3Fts5UnicodeIsdiacritic(iCode)==0 ){",
          "275:             int i;",
          "276:             for(i=0; i<nNew; i++){",
          "278:             }",
          "279:             memmove(&aNew[i+1], &aNew[i], (nNew-i)*sizeof(int));",
          "280:             aNew[i] = iCode;",
          "",
          "[Removed Lines]",
          "277:               if( aNew[i]>iCode ) break;",
          "",
          "[Added Lines]",
          "277:               if( (u32)aNew[i]>iCode ) break;",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e130319317e761193890ef75787a3c114b61166f518df019697be8e2c820ec54",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2693:     if( ExprHasProperty(pExpr, EP_Subrtn) ){",
          "2695:       if( ExprHasProperty(pExpr, EP_xIsSelect) ){",
          "2696:         ExplainQueryPlan((pParse, 0, \"REUSE LIST SUBQUERY %d\",",
          "2697:               pExpr->x.pSelect->selId));",
          "",
          "[Removed Lines]",
          "2694:       int addr = sqlite3VdbeAddOp0(v, OP_Once); VdbeCoverage(v);",
          "",
          "[Added Lines]",
          "2694:       addrOnce = sqlite3VdbeAddOp0(v, OP_Once); VdbeCoverage(v);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2699:       sqlite3VdbeAddOp2(v, OP_Gosub, pExpr->y.sub.regReturn,",
          "2700:                         pExpr->y.sub.iAddr);",
          "2701:       sqlite3VdbeAddOp2(v, OP_OpenDup, iTab, pExpr->iTable);",
          "2703:       return;",
          "2704:     }",
          "",
          "[Removed Lines]",
          "2702:       sqlite3VdbeJumpHere(v, addr);",
          "",
          "[Added Lines]",
          "2702:       sqlite3VdbeJumpHere(v, addrOnce);",
          "",
          "---------------"
        ],
        "src/vdbe.h||src/vdbe.h": [
          "File: src/vdbe.h -> src/vdbe.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "207:   void sqlite3VdbeExplain(Parse*,u8,const char*,...);",
          "208:   void sqlite3VdbeExplainPop(Parse*);",
          "209:   int sqlite3VdbeExplainParent(Parse*);",
          "211: # define ExplainQueryPlan(P)        sqlite3VdbeExplain P",
          "212: # define ExplainQueryPlanPop(P)     sqlite3VdbeExplainPop(P)",
          "213: # define ExplainQueryPlanParent(P)  sqlite3VdbeExplainParent(P)",
          "",
          "[Removed Lines]",
          "210:   void sqlite3ExplainBreakpoint(const char*,const char*);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7e6dc5d9081f20a52ae38d6f5009cbfaf3bf72dc",
      "candidate_info": {
        "commit_hash": "7e6dc5d9081f20a52ae38d6f5009cbfaf3bf72dc",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7e6dc5d9081f20a52ae38d6f5009cbfaf3bf72dc",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/util.c"
        ],
        "message": "Fix the previous check-in [db9acef14d492121] so that the amalgamation build works for systems for which lack HAVE_ISNAN.\n\nFossilOrigin-Name: 3cc55e09e6c1de2059d97bdddf2fdfbdcc62c584b513f56faf9d3a39ef80cddd",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/util.c||src/util.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: db9acef14d49212108c8082cc15a9b9b4a56b8afe4fe1104ddf62783739c1fbe",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/util.c||src/util.c": [
          "File: src/util.c -> src/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: #include \"sqliteInt.h\"",
          "19: #include <stdarg.h>",
          "",
          "[Removed Lines]",
          "20: #if HAVE_ISNAN || SQLITE_HAVE_ISNAN",
          "21: # include <math.h>",
          "22: #endif",
          "",
          "[Added Lines]",
          "20: #include <math.h>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e691dcb506e01077e8d3af90e19714eac1373eb4",
      "candidate_info": {
        "commit_hash": "e691dcb506e01077e8d3af90e19714eac1373eb4",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e691dcb506e01077e8d3af90e19714eac1373eb4",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/instr.test"
        ],
        "message": "Test cases for ticket [587791f92620090e]\n\nFossilOrigin-Name: ca0e3a83a1c015b346a791e6de03904d17a769c52dad0e3d71316c6e2e3f43c7",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/instr.test||test/instr.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3fb40f518086c1e8d11eb1f4134e965450dbedfa4277bce39ef1e969fc747d38",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/instr.test||test/instr.test": [
          "File: test/instr.test -> test/instr.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "257:   SELECT instr(a, b) FROM x1;",
          "258: } 0",
          "260: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "260: # 2019-09-16 ticket https://www.sqlite.org/src/info/587791f92620090e",
          "261: #",
          "262: do_execsql_test instr-2.0 {",
          "263:   DROP TABLE IF EXISTS t0;",
          "264:   CREATE TABLE t0(c0 PRIMARY KEY, c1);",
          "265:   INSERT INTO t0(c0) VALUES (x'bb'), (0);",
          "266:   SELECT COUNT(*) FROM t0 WHERE INSTR(x'aabb', t0.c0) ORDER BY t0.c0, t0.c1;",
          "267: } {1}",
          "268: do_execsql_test instr-2.1 {",
          "269:   SELECT quote(c0) FROM t0 WHERE INSTR(x'aabb', t0.c0) ORDER BY t0.c0, t0.c1;",
          "270: } {X'BB'}",
          "271: do_execsql_test instr-2.2 {",
          "272:   DROP TABLE IF EXISTS t1;",
          "273:   CREATE TABLE t1(x);",
          "274:   INSERT INTO t1(x) VALUES('text'),(x'bb');",
          "275:   SELECT quote(x) FROM t1 WHERE instr(x'aabb',x);",
          "276: } {X'BB'}",
          "277: do_execsql_test instr-2.3 {",
          "278:   SELECT quote(x) FROM t1 WHERE x>'zzz' AND instr(x'aabb',x);",
          "279: } {X'BB'}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "afb3f3c72c6cfaca39d4ef45b3ebcf319a2787a7",
      "candidate_info": {
        "commit_hash": "afb3f3c72c6cfaca39d4ef45b3ebcf319a2787a7",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/afb3f3c72c6cfaca39d4ef45b3ebcf319a2787a7",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/test_vdbecov.c",
          "test/tester.tcl",
          "test/window1.test"
        ],
        "message": "Add a test case to cover a missed VDBE branch generated by window.c.\n\nFossilOrigin-Name: b36813d6467c82159bd3bb69d34ac28fc161a13052ca67d7cf9ad75e2aaea9d5",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/test_vdbecov.c||src/test_vdbecov.c",
          "test/tester.tcl||test/tester.tcl",
          "test/window1.test||test/window1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f0ed714637bf30443d0551d9b6fececa00fc9dfe9669fe720c4598ef71c61e2c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/test_vdbecov.c||src/test_vdbecov.c": [
          "File: src/test_vdbecov.c -> src/test_vdbecov.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:   }",
          "37: }",
          "40:   Tcl_Obj *pNew = Tcl_NewObj();",
          "41:   Tcl_IncrRefCount(pNew);",
          "42:   Tcl_ListObjAppendElement(0, pNew, Tcl_NewIntObj(iLine));",
          "43:   Tcl_ListObjAppendElement(0, pNew, Tcl_NewIntObj(iPath));",
          "44:   Tcl_ListObjAppendElement(0, pList, pNew);",
          "45:   Tcl_DecrRefCount(pNew);",
          "46: }",
          "",
          "[Removed Lines]",
          "39: static void appendToList(Tcl_Obj *pList, int iLine, int iPath){",
          "",
          "[Added Lines]",
          "39: static void appendToList(",
          "40:   Tcl_Obj *pList,",
          "41:   int iLine,",
          "42:   int iPath,",
          "43:   const char *zNever",
          "44: ){",
          "49:   Tcl_ListObjAppendElement(0, pNew, Tcl_NewStringObj(zNever, -1));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:       Tcl_IncrRefCount(pRes);",
          "77:       for(i=0; i<sizeof(aBranchArray); i++){",
          "78:         u8 b = aBranchArray[i];",
          "79:         if( b ){",
          "83:         }",
          "84:       }",
          "85:       Tcl_SetObjResult(interp, pRes);",
          "",
          "[Removed Lines]",
          "80:           if( (b & 0x01)==0 ) appendToList(pRes, i, 0);",
          "81:           if( (b & 0x02)==0 ) appendToList(pRes, i, 1);",
          "82:           if( (b & 0x04)==0 ) appendToList(pRes, i, 2);",
          "",
          "[Added Lines]",
          "85:         int bFlag = ((b >> 4)==4);",
          "87:           if( (b & 0x01)==0 ){",
          "88:             appendToList(pRes, i, 0, bFlag ? \"less than\" : \"falls through\");",
          "89:           }",
          "90:           if( (b & 0x02)==0 ){",
          "91:             appendToList(pRes, i, 1, bFlag ? \"equal\" : \"taken\");",
          "92:           }",
          "93:           if( (b & 0x04)==0 ){",
          "94:             appendToList(pRes, i, 2, bFlag ? \"greater-than\" : \"NULL\");",
          "95:           }",
          "",
          "---------------"
        ],
        "test/tester.tcl||test/tester.tcl": [
          "File: test/tester.tcl -> test/tester.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "1330:   }",
          "1331:   set fd [open vdbe_coverage.txt w]",
          "1332:   foreach miss [vdbe_coverage report] {",
          "1334:     set nextfile \"\"",
          "1335:     while {[llength $lSrc]>0 && [lindex $lSrc 0 0] < $line} {",
          "1336:       set nextfile [lindex $lSrc 0 1]",
          "",
          "[Removed Lines]",
          "1333:     foreach {line branch} $miss {}",
          "",
          "[Added Lines]",
          "1333:     foreach {line branch never} $miss {}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1340:       puts $fd \"\"",
          "1341:       puts $fd \"### $nextfile ###\"",
          "1342:     }",
          "1344:   }",
          "1345:   close $fd",
          "1346: }",
          "",
          "[Removed Lines]",
          "1343:     puts $fd \"Vdbe branch $line: path $branch never taken\"",
          "",
          "[Added Lines]",
          "1343:     puts $fd \"Vdbe branch $line: never $never (path $branch)\"",
          "",
          "---------------"
        ],
        "test/window1.test||test/window1.test": [
          "File: test/window1.test -> test/window1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1067:   ) FROM t2",
          "1068: } {1 1  2 0  3 1  4 0}",
          "1072: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1070: #-------------------------------------------------------------------------",
          "1071: reset_db",
          "1072: do_execsql_test 27.0 {",
          "1073:   CREATE TABLE t1(x);",
          "1074:   INSERT INTO t1 VALUES(NULL), (1), (2), (3), (4), (5);",
          "1075: }",
          "1076: do_execsql_test 27.1 {",
          "1077:   SELECT min(x) FROM t1;",
          "1078: } {1}",
          "1079: do_execsql_test 27.2 {",
          "1080:   SELECT min(x) OVER win FROM t1",
          "1081:   WINDOW win AS (ORDER BY rowid ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING)",
          "1082: } {1 1 1 2 3 4}",
          "",
          "---------------"
        ]
      }
    }
  ]
}