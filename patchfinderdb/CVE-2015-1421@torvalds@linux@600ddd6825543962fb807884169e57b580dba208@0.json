{
  "cve_id": "CVE-2015-1421",
  "cve_desc": "Use-after-free vulnerability in the sctp_assoc_update function in net/sctp/associola.c in the Linux kernel before 3.18.8 allows remote attackers to cause a denial of service (slab corruption and panic) or possibly have unspecified other impact by triggering an INIT collision that leads to improper handling of shared-key data.",
  "repo": "torvalds/linux",
  "patch_hash": "600ddd6825543962fb807884169e57b580dba208",
  "patch_info": {
    "commit_hash": "600ddd6825543962fb807884169e57b580dba208",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/600ddd6825543962fb807884169e57b580dba208",
    "files": [
      "net/sctp/associola.c"
    ],
    "message": "net: sctp: fix slab corruption from use after free on INIT collisions\n\nWhen hitting an INIT collision case during the 4WHS with AUTH enabled, as\nalready described in detail in commit 1be9a950c646 (\"net: sctp: inherit\nauth_capable on INIT collisions\"), it can happen that we occasionally\nstill remotely trigger the following panic on server side which seems to\nhave been uncovered after the fix from commit 1be9a950c646 ...\n\n[  533.876389] BUG: unable to handle kernel paging request at 00000000ffffffff\n[  533.913657] IP: [<ffffffff811ac385>] __kmalloc+0x95/0x230\n[  533.940559] PGD 5030f2067 PUD 0\n[  533.957104] Oops: 0000 [#1] SMP\n[  533.974283] Modules linked in: sctp mlx4_en [...]\n[  534.939704] Call Trace:\n[  534.951833]  [<ffffffff81294e30>] ? crypto_init_shash_ops+0x60/0xf0\n[  534.984213]  [<ffffffff81294e30>] crypto_init_shash_ops+0x60/0xf0\n[  535.015025]  [<ffffffff8128c8ed>] __crypto_alloc_tfm+0x6d/0x170\n[  535.045661]  [<ffffffff8128d12c>] crypto_alloc_base+0x4c/0xb0\n[  535.074593]  [<ffffffff8160bd42>] ? _raw_spin_lock_bh+0x12/0x50\n[  535.105239]  [<ffffffffa0418c11>] sctp_inet_listen+0x161/0x1e0 [sctp]\n[  535.138606]  [<ffffffff814e43bd>] SyS_listen+0x9d/0xb0\n[  535.166848]  [<ffffffff816149a9>] system_call_fastpath+0x16/0x1b\n\n... or depending on the the application, for example this one:\n\n[ 1370.026490] BUG: unable to handle kernel paging request at 00000000ffffffff\n[ 1370.026506] IP: [<ffffffff811ab455>] kmem_cache_alloc+0x75/0x1d0\n[ 1370.054568] PGD 633c94067 PUD 0\n[ 1370.070446] Oops: 0000 [#1] SMP\n[ 1370.085010] Modules linked in: sctp kvm_amd kvm [...]\n[ 1370.963431] Call Trace:\n[ 1370.974632]  [<ffffffff8120f7cf>] ? SyS_epoll_ctl+0x53f/0x960\n[ 1371.000863]  [<ffffffff8120f7cf>] SyS_epoll_ctl+0x53f/0x960\n[ 1371.027154]  [<ffffffff812100d3>] ? anon_inode_getfile+0xd3/0x170\n[ 1371.054679]  [<ffffffff811e3d67>] ? __alloc_fd+0xa7/0x130\n[ 1371.080183]  [<ffffffff816149a9>] system_call_fastpath+0x16/0x1b\n\nWith slab debugging enabled, we can see that the poison has been overwritten:\n\n[  669.826368] BUG kmalloc-128 (Tainted: G        W     ): Poison overwritten\n[  669.826385] INFO: 0xffff880228b32e50-0xffff880228b32e50. First byte 0x6a instead of 0x6b\n[  669.826414] INFO: Allocated in sctp_auth_create_key+0x23/0x50 [sctp] age=3 cpu=0 pid=18494\n[  669.826424]  __slab_alloc+0x4bf/0x566\n[  669.826433]  __kmalloc+0x280/0x310\n[  669.826453]  sctp_auth_create_key+0x23/0x50 [sctp]\n[  669.826471]  sctp_auth_asoc_create_secret+0xcb/0x1e0 [sctp]\n[  669.826488]  sctp_auth_asoc_init_active_key+0x68/0xa0 [sctp]\n[  669.826505]  sctp_do_sm+0x29d/0x17c0 [sctp] [...]\n[  669.826629] INFO: Freed in kzfree+0x31/0x40 age=1 cpu=0 pid=18494\n[  669.826635]  __slab_free+0x39/0x2a8\n[  669.826643]  kfree+0x1d6/0x230\n[  669.826650]  kzfree+0x31/0x40\n[  669.826666]  sctp_auth_key_put+0x19/0x20 [sctp]\n[  669.826681]  sctp_assoc_update+0x1ee/0x2d0 [sctp]\n[  669.826695]  sctp_do_sm+0x674/0x17c0 [sctp]\n\nSince this only triggers in some collision-cases with AUTH, the problem at\nheart is that sctp_auth_key_put() on asoc->asoc_shared_key is called twice\nwhen having refcnt 1, once directly in sctp_assoc_update() and yet again\nfrom within sctp_auth_asoc_init_active_key() via sctp_assoc_update() on\nthe already kzfree'd memory, which is also consistent with the observation\nof the poison decrease from 0x6b to 0x6a (note: the overwrite is detected\nat a later point in time when poison is checked on new allocation).\n\nReference counting of auth keys revisited:\n\nShared keys for AUTH chunks are being stored in endpoints and associations\nin endpoint_shared_keys list. On endpoint creation, a null key is being\nadded; on association creation, all endpoint shared keys are being cached\nand thus cloned over to the association. struct sctp_shared_key only holds\na pointer to the actual key bytes, that is, struct sctp_auth_bytes which\nkeeps track of users internally through refcounting. Naturally, on assoc\nor enpoint destruction, sctp_shared_key are being destroyed directly and\nthe reference on sctp_auth_bytes dropped.\n\nUser space can add keys to either list via setsockopt(2) through struct\nsctp_authkey and by passing that to sctp_auth_set_key() which replaces or\nadds a new auth key. There, sctp_auth_create_key() creates a new sctp_auth_bytes\nwith refcount 1 and in case of replacement drops the reference on the old\nsctp_auth_bytes. A key can be set active from user space through setsockopt()\non the id via sctp_auth_set_active_key(), which iterates through either\nendpoint_shared_keys and in case of an assoc, invokes (one of various places)\nsctp_auth_asoc_init_active_key().\n\nsctp_auth_asoc_init_active_key() computes the actual secret from local's\nand peer's random, hmac and shared key parameters and returns a new key\ndirectly as sctp_auth_bytes, that is asoc->asoc_shared_key, plus drops\nthe reference if there was a previous one. The secret, which where we\neventually double drop the ref comes from sctp_auth_asoc_set_secret() with\nintitial refcount of 1, which also stays unchanged eventually in\nsctp_assoc_update(). This key is later being used for crypto layer to\nset the key for the hash in crypto_hash_setkey() from sctp_auth_calculate_hmac().\n\nTo close the loop: asoc->asoc_shared_key is freshly allocated secret\nmaterial and independant of the sctp_shared_key management keeping track\nof only shared keys in endpoints and assocs. Hence, also commit 4184b2a79a76\n(\"net: sctp: fix memory leak in auth key management\") is independant of\nthis bug here since it concerns a different layer (though same structures\nbeing used eventually). asoc->asoc_shared_key is reference dropped correctly\non assoc destruction in sctp_association_free() and when active keys are\nbeing replaced in sctp_auth_asoc_init_active_key(), it always has a refcount\nof 1. Hence, it's freed prematurely in sctp_assoc_update(). Simple fix is\nto remove that sctp_auth_key_put() from there which fixes these panics.\n\nFixes: 730fc3d05cd4 (\"[SCTP]: Implete SCTP-AUTH parameter processing\")\nSigned-off-by: Daniel Borkmann <dborkman@redhat.com>\nAcked-by: Vlad Yasevich <vyasevich@gmail.com>\nAcked-by: Neil Horman <nhorman@tuxdriver.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "before_after_code_files": [
      "net/sctp/associola.c||net/sctp/associola.c"
    ]
  },
  "patch_diff": {
    "net/sctp/associola.c||net/sctp/associola.c": [
      "File: net/sctp/associola.c -> net/sctp/associola.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1182:  asoc->peer.peer_hmacs = new->peer.peer_hmacs;",
      "1183:  new->peer.peer_hmacs = NULL;",
      "1186:  sctp_auth_asoc_init_active_key(asoc, GFP_ATOMIC);",
      "1187: }",
      "",
      "[Removed Lines]",
      "1185:  sctp_auth_key_put(asoc->asoc_shared_key);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "52bba9809a954d72bc77773bd560b9724b495eb7",
      "candidate_info": {
        "commit_hash": "52bba9809a954d72bc77773bd560b9724b495eb7",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/52bba9809a954d72bc77773bd560b9724b495eb7",
        "files": [
          "drivers/clk/clk.c"
        ],
        "message": "clk: Fix debugfs clk removal before inited\n\nSome of the clks can be registered & unregistered before the clk related debugfs\nentries are initialized at late_initcall. In the unregister path checking for only\ndentry before clk_debug_init() would lead dangling pointers in the debug clk list,\nbecause the list is already populated in register path and the clk pointer freed in\nunregister path.\nThe side effect of not removing it from the list is either a null pointer\ndereference or if lucky to boot the system, the number of clk entries in\ndebugfs disappear.\n\nWe could add more checks like if (inited && !clk->dentry) but just removing\nthe check for dentry made more sense as debugfs_remove_recursive() seems to be\nsafe with null pointers. This will ensure that the unregistering clk would be\nremoved from the debug list in all the code paths.\n\nWithout this patch kernel would crash with log:\nUnable to handle kernel NULL pointer dereference at virtual address 00000000\npgd = c0204000\n[00000000] *pgd=00000000\nInternal error: Oops: 5 [#1] SMP ARM\nModules linked in:\nCPU: 1 PID: 1 Comm: swapper/0 Tainted: G    B          3.19.0-rc3-00007-g412f9ba-dirty #840\nHardware name: Qualcomm (Flattened Device Tree)\ntask: ed948000 ti: ed944000 task.ti: ed944000\nPC is at strlen+0xc/0x40\nLR is at __create_file+0x64/0x1dc\npc : [<c04ee604>]    lr : [<c049f1c4>]    psr: 60000013\nsp : ed945e40  ip : ed945e50  fp : ed945e4c\nr10: 00000000  r9 : c1006094  r8 : 00000000\nr7 : 000041ed  r6 : 00000000  r5 : ed4af998  r4 : c11b5e28\nr3 : 00000000  r2 : ed945e38  r1 : a0000013  r0 : 00000000\nFlags: nZCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment kernel\nControl: 10c5787d  Table: 8020406a  DAC: 00000015\nProcess swapper/0 (pid: 1, stack limit = 0xed944248)\nStack: (0xed945e40 to 0xed946000)\n5e40: ed945e7c ed945e50 c049f1c4 c04ee604 c0fc2fa4 00000000 ecb748c0 c11c2b80\n5e60: c0beec04 0000011c c0fc2fa4 00000000 ed945e94 ed945e80 c049f3e0 c049f16c\n5e80: 00000000 00000000 ed945eac ed945e98 c08cbc50 c049f3c0 ecb748c0 c11c2b80\n5ea0: ed945ed4 ed945eb0 c0fc3080 c08cbc30 c0beec04 c107e1d8 ecdf0600 c107e1d8\n5ec0: c107e1d8 ecdf0600 ed945f54 ed945ed8 c0208ed4 c0fc2fb0 c026a784 c04ee628\n5ee0: ed945f0c ed945ef0 c0f5d600 c04ee604 c0f5d5ec ef7fcc7d c0b40ecc 0000011c\n5f00: ed945f54 ed945f10 c026a994 c0f5d5f8 c04ecc00 00000007 ef7fcc95 00000007\n5f20: c0e90744 c0dd0884 ed945f54 c106cde0 00000007 c117f8c0 0000011c c0f5d5ec\n5f40: c1006094 c100609c ed945f94 ed945f58 c0f5de34 c0208e50 00000007 00000007\n5f60: c0f5d5ec be9b5ae0 00000000 c117f8c0 c0af1680 00000000 00000000 00000000\n5f80: 00000000 00000000 ed945fac ed945f98 c0af169c c0f5dd2c ed944000 00000000\n5fa0: 00000000 ed945fb0 c020f298 c0af168c 00000000 00000000 00000000 00000000\n5fc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000\n5fe0: 00000000 00000000 00000000 00000000 00000013 00000000 ebcc6d33 bfffca73\n[<c04ee604>] (strlen) from [<c049f1c4>] (__create_file+0x64/0x1dc)\n[<c049f1c4>] (__create_file) from [<c049f3e0>] (debugfs_create_dir+0x2c/0x34)\n[<c049f3e0>] (debugfs_create_dir) from [<c08cbc50>] (clk_debug_create_one+0x2c/0x16c)\n[<c08cbc50>] (clk_debug_create_one) from [<c0fc3080>] (clk_debug_init+0xdc/0x144)\n[<c0fc3080>] (clk_debug_init) from [<c0208ed4>] (do_one_initcall+0x90/0x1e0)\n[<c0208ed4>] (do_one_initcall) from [<c0f5de34>] (kernel_init_freeable+0x114/0x1e0)\n[<c0f5de34>] (kernel_init_freeable) from [<c0af169c>] (kernel_init+0x1c/0xfc)\n[<c0af169c>] (kernel_init) from [<c020f298>] (ret_from_fork+0x14/0x3c)\nCode: c0b40ecc e1a0c00d e92dd800 e24cb004 (e5d02000)\n---[ end trace b940e45b5e25c1e7 ]---\n\nFixes: 6314b6796e3c \"clk: Don't hold prepare_lock across debugfs creation\"\nSigned-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>\nReviewed-by: Stephen Boyd <sboyd@codeaurora.org>\nSigned-off-by: Michael Turquette <mturquette@linaro.org>",
        "before_after_code_files": [
          "drivers/clk/clk.c||drivers/clk/clk.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/clk/clk.c||drivers/clk/clk.c": [
          "File: drivers/clk/clk.c -> drivers/clk/clk.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "343: static void clk_debug_unregister(struct clk *clk)",
          "344: {",
          "345:  mutex_lock(&clk_debug_lock);",
          "349:  hlist_del_init(&clk->debug_node);",
          "350:  debugfs_remove_recursive(clk->dentry);",
          "351:  clk->dentry = NULL;",
          "353:  mutex_unlock(&clk_debug_lock);",
          "354: }",
          "",
          "[Removed Lines]",
          "346:  if (!clk->dentry)",
          "347:   goto out;",
          "352: out:",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2aa5cf9e48f2f39cc255f8e29964df3ff9ca017b",
      "candidate_info": {
        "commit_hash": "2aa5cf9e48f2f39cc255f8e29964df3ff9ca017b",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/2aa5cf9e48f2f39cc255f8e29964df3ff9ca017b",
        "files": [
          "arch/powerpc/include/asm/eeh.h",
          "arch/powerpc/kernel/eeh_pe.c",
          "arch/powerpc/platforms/powernv/eeh-powernv.c"
        ],
        "message": "powerpc/eeh: Fix missed PE#0 on P7IOC\n\nPE#0 should be regarded as valid for P7IOC, while it's invalid for\nPHB3. The patch adds flag EEH_VALID_PE_ZERO to differentiate those\ntwo cases. Without the patch, we possibly see frozen PE#0 state is\ncleared without EEH recovery taken on P7IOC as following kernel logs\nindicate:\n\n[root@ltcfbl8eb ~]# dmesg\n       :\npci 0000:00     : [PE# 000] Secondary bus 0 associated with PE#0\npci 0000:01     : [PE# 001] Secondary bus 1 associated with PE#1\npci 0001:00     : [PE# 000] Secondary bus 0 associated with PE#0\npci 0001:01     : [PE# 001] Secondary bus 1 associated with PE#1\npci 0002:00     : [PE# 000] Secondary bus 0 associated with PE#0\npci 0002:01     : [PE# 001] Secondary bus 1 associated with PE#1\npci 0003:00     : [PE# 000] Secondary bus 0 associated with PE#0\npci 0003:01     : [PE# 001] Secondary bus 1 associated with PE#1\npci 0003:20     : [PE# 002] Secondary bus 32..63 associated with PE#2\n       :\nEEH: Clear non-existing PHB#3-PE#0\nEEH: PHB location: U78AE.001.WZS00M9-P1-002\n\nSigned-off-by: Gavin Shan <gwshan@linux.vnet.ibm.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>",
        "before_after_code_files": [
          "arch/powerpc/include/asm/eeh.h||arch/powerpc/include/asm/eeh.h",
          "arch/powerpc/kernel/eeh_pe.c||arch/powerpc/kernel/eeh_pe.c",
          "arch/powerpc/platforms/powernv/eeh-powernv.c||arch/powerpc/platforms/powernv/eeh-powernv.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/powerpc/include/asm/eeh.h||arch/powerpc/include/asm/eeh.h": [
          "File: arch/powerpc/include/asm/eeh.h -> arch/powerpc/include/asm/eeh.h"
        ],
        "arch/powerpc/kernel/eeh_pe.c||arch/powerpc/kernel/eeh_pe.c": [
          "File: arch/powerpc/kernel/eeh_pe.c -> arch/powerpc/kernel/eeh_pe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "239:  if (pe->type & EEH_PE_PHB)",
          "240:   return NULL;",
          "245:   return pe;",
          "248:  if (edev->config_addr &&",
          "",
          "[Removed Lines]",
          "243:  if (edev->pe_config_addr &&",
          "244:     (edev->pe_config_addr == pe->addr))",
          "",
          "[Added Lines]",
          "246:  if (eeh_has_flag(EEH_VALID_PE_ZERO)) {",
          "247:   if (edev->pe_config_addr == pe->addr)",
          "248:    return pe;",
          "249:  } else {",
          "250:   if (edev->pe_config_addr &&",
          "251:       (edev->pe_config_addr == pe->addr))",
          "253:  }",
          "",
          "---------------"
        ],
        "arch/powerpc/platforms/powernv/eeh-powernv.c||arch/powerpc/platforms/powernv/eeh-powernv.c": [
          "File: arch/powerpc/platforms/powernv/eeh-powernv.c -> arch/powerpc/platforms/powernv/eeh-powernv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:   if (phb->model == PNV_PHB_MODEL_P7IOC)",
          "70:    eeh_add_flag(EEH_ENABLE_IO_FOR_LOG);",
          "71:   break;",
          "72:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79:   if (phb->ioda.reserved_pe != 0)",
          "80:    eeh_add_flag(EEH_VALID_PE_ZERO);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0346dadbf041a2606bcb5bd27828b0d105897f4a",
      "candidate_info": {
        "commit_hash": "0346dadbf041a2606bcb5bd27828b0d105897f4a",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/0346dadbf041a2606bcb5bd27828b0d105897f4a",
        "files": [
          "mm/memcontrol.c"
        ],
        "message": "memcg: remove extra newlines from memcg oom kill log\n\nCommit e61734c55c24 (\"cgroup: remove cgroup->name\") added two extra\nnewlines to memcg oom kill log messages.  This makes dmesg hard to read\nand parse.  The issue affects 3.15+.\n\nExample:\n\n  Task in /t                          <<< extra #1\n   killed as a result of limit of /t\n                                      <<< extra #2\n  memory: usage 102400kB, limit 102400kB, failcnt 274712\n\nRemove the extra newlines from memcg oom kill messages, so the messages\nlook like:\n\n  Task in /t killed as a result of limit of /t\n  memory: usage 102400kB, limit 102400kB, failcnt 240649\n\nFixes: e61734c55c24 (\"cgroup: remove cgroup->name\")\nSigned-off-by: Greg Thelen <gthelen@google.com>\nAcked-by: Michal Hocko <mhocko@suse.cz>\nAcked-by: Johannes Weiner <hannes@cmpxchg.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
        "before_after_code_files": [
          "mm/memcontrol.c||mm/memcontrol.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "mm/memcontrol.c||mm/memcontrol.c": [
          "File: mm/memcontrol.c -> mm/memcontrol.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1478:  pr_info(\"Task in \");",
          "1479:  pr_cont_cgroup_path(task_cgroup(p, memory_cgrp_id));",
          "1481:  pr_cont_cgroup_path(memcg->css.cgroup);",
          "1484:  rcu_read_unlock();",
          "",
          "[Removed Lines]",
          "1480:  pr_info(\" killed as a result of limit of \");",
          "1482:  pr_info(\"\\n\");",
          "",
          "[Added Lines]",
          "1480:  pr_cont(\" killed as a result of limit of \");",
          "1482:  pr_cont(\"\\n\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9aa272b492e7551a9ee0e2c83c720ea013698485",
      "candidate_info": {
        "commit_hash": "9aa272b492e7551a9ee0e2c83c720ea013698485",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/9aa272b492e7551a9ee0e2c83c720ea013698485",
        "files": [
          "drivers/mtd/ubi/misc.c"
        ],
        "message": "UBI: fix soft lockup in ubi_check_volume()\n\nRunning mtd-utils/tests/ubi-tests/io_basic.c could cause\nsoft lockup or watchdog reset. It is because *updatevol*\nwill perform ubi_check_volume() after updating finish\nand this function will full scan the updated lebs if the\nvolume is initialized as STATIC_VOLUME.\n\nThis patch adds *cond_resched()* in the loop of lebs scan\nto avoid soft lockup.\n\nHelped by Richard Weinberger <richard@nod.at>\n\n[ 2158.067096] INFO: rcu_sched self-detected stall on CPU { 1}  (t=2101 jiffies g=1606 c=1605 q=56)\n[ 2158.172867] CPU: 1 PID: 2073 Comm: io_basic Tainted: G           O 3.10.53 #21\n[ 2158.172898] [<c000f624>] (unwind_backtrace+0x0/0x120) from [<c000c294>] (show_stack+0x10/0x14)\n[ 2158.172918] [<c000c294>] (show_stack+0x10/0x14) from [<c008ac3c>] (rcu_check_callbacks+0x1c0/0x660)\n[ 2158.172936] [<c008ac3c>] (rcu_check_callbacks+0x1c0/0x660) from [<c002b480>] (update_process_times+0x38/0x64)\n[ 2158.172953] [<c002b480>] (update_process_times+0x38/0x64) from [<c005ff38>] (tick_sched_handle+0x54/0x60)\n[ 2158.172966] [<c005ff38>] (tick_sched_handle+0x54/0x60) from [<c00601ac>] (tick_sched_timer+0x44/0x74)\n[ 2158.172978] [<c00601ac>] (tick_sched_timer+0x44/0x74) from [<c003f348>] (__run_hrtimer+0xc8/0x1b8)\n[ 2158.172992] [<c003f348>] (__run_hrtimer+0xc8/0x1b8) from [<c003fd9c>] (hrtimer_interrupt+0x128/0x2a4)\n[ 2158.173007] [<c003fd9c>] (hrtimer_interrupt+0x128/0x2a4) from [<c0246f1c>] (arch_timer_handler_virt+0x28/0x30)\n[ 2158.173022] [<c0246f1c>] (arch_timer_handler_virt+0x28/0x30) from [<c0086214>] (handle_percpu_devid_irq+0x9c/0x124)\n[ 2158.173036] [<c0086214>] (handle_percpu_devid_irq+0x9c/0x124) from [<c0082bd8>] (generic_handle_irq+0x20/0x30)\n[ 2158.173049] [<c0082bd8>] (generic_handle_irq+0x20/0x30) from [<c000969c>] (handle_IRQ+0x64/0x8c)\n[ 2158.173060] [<c000969c>] (handle_IRQ+0x64/0x8c) from [<c0008544>] (gic_handle_irq+0x3c/0x60)\n[ 2158.173074] [<c0008544>] (gic_handle_irq+0x3c/0x60) from [<c02f0f80>] (__irq_svc+0x40/0x50)\n[ 2158.173083] Exception stack(0xc4043c98 to 0xc4043ce0)\n[ 2158.173092] 3c80:                                                       c4043ce4 00000019\n[ 2158.173102] 3ca0: 1f8a865f c050ad10 1f8a864c 00000031 c04b5970 0003ebce 00000000 f3550000\n[ 2158.173113] 3cc0: bf00bc68 00000800 0003ebce c4043ce0 c0186d14 c0186cb8 80000013 ffffffff\n[ 2158.173130] [<c02f0f80>] (__irq_svc+0x40/0x50) from [<c0186cb8>] (read_current_timer+0x4/0x38)\n[ 2158.173145] [<c0186cb8>] (read_current_timer+0x4/0x38) from [<1f8a865f>] (0x1f8a865f)\n[ 2183.927097] BUG: soft lockup - CPU#1 stuck for 22s! [io_basic:2073]\n[ 2184.002229] Modules linked in: nandflash(O) [last unloaded: nandflash]\n\nSigned-off-by: Wang Kai <morgan.wang@huawei.com>\nSigned-off-by: hujianyang <hujianyang@huawei.com>\nSigned-off-by: Richard Weinberger <richard@nod.at>",
        "before_after_code_files": [
          "drivers/mtd/ubi/misc.c||drivers/mtd/ubi/misc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/mtd/ubi/misc.c||drivers/mtd/ubi/misc.c": [
          "File: drivers/mtd/ubi/misc.c -> drivers/mtd/ubi/misc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:  for (i = 0; i < vol->used_ebs; i++) {",
          "75:   int size;",
          "77:   if (i == vol->used_ebs - 1)",
          "78:    size = vol->last_eb_bytes;",
          "79:   else",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77:   cond_resched();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1aec42bcc07ef2b341aa4aa303fe325276db1178",
      "candidate_info": {
        "commit_hash": "1aec42bcc07ef2b341aa4aa303fe325276db1178",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/1aec42bcc07ef2b341aa4aa303fe325276db1178",
        "files": [
          "drivers/s390/net/qeth_core_main.c",
          "drivers/s390/net/qeth_l2_main.c",
          "drivers/s390/net/qeth_l3_main.c"
        ],
        "message": "390/qeth: Fix locking warning during qeth device setup\n\nDo not wait for channel command buffers in IPA commands.\nThe potential wait could be done while holding a spin lock and causes\nin recent kernels such a bug if kernel lock debugging is enabled:\n\nkernel: BUG: sleeping function called from invalid context at drivers/s390/net/qeth_core_main.c:\n794\nkernel: in_atomic(): 1, irqs_disabled(): 0, pid: 2031, name: NetworkManager\nkernel: 2 locks held by NetworkManager/2031:\nkernel:  #0:  (rtnl_mutex){+.+.+.}, at: [<00000000006e0d7a>] rtnetlink_rcv+0x32/0x50\nkernel:  #1:  (_xmit_ETHER){+.....}, at: [<00000000006cfe90>] dev_set_rx_mode+0x30/0x50\nkernel: CPU: 0 PID: 2031 Comm: NetworkManager Not tainted 3.18.0-rc5-next-20141124 #1\nkernel:        00000000275fb1f0 00000000275fb280 0000000000000002 0000000000000000\n               00000000275fb320 00000000275fb298 00000000275fb298 00000000007e326a\n               0000000000000000 000000000099ce2c 00000000009b4988 000000000000000b\n               00000000275fb2e0 00000000275fb280 0000000000000000 0000000000000000\n               0000000000000000 00000000001129c8 00000000275fb280 00000000275fb2e0\nkernel: Call Trace:\nkernel: ([<00000000001128b0>] show_trace+0xf8/0x158)\nkernel:  [<000000000011297a>] show_stack+0x6a/0xe8\nkernel:  [<00000000007e995a>] dump_stack+0x82/0xb0\nkernel:  [<000000000017d668>] ___might_sleep+0x170/0x228\nkernel:  [<000003ff80026f0e>] qeth_wait_for_buffer+0x36/0xd0 [qeth]\nkernel:  [<000003ff80026fe2>] qeth_get_ipacmd_buffer+0x3a/0xc0 [qeth]\nkernel:  [<000003ff80105078>] qeth_l3_send_setdelmc+0x58/0xf8 [qeth_l3]\nkernel:  [<000003ff8010b1fe>] qeth_l3_set_ip_addr_list+0x2c6/0x848 [qeth_l3]\nkernel:  [<000003ff8010bbb4>] qeth_l3_set_multicast_list+0x434/0xc48 [qeth_l3]\nkernel:  [<00000000006cfe9a>] dev_set_rx_mode+0x3a/0x50\nkernel:  [<00000000006cff90>] __dev_open+0xe0/0x140\nkernel:  [<00000000006d02a0>] __dev_change_flags+0xa0/0x178\nkernel:  [<00000000006d03a8>] dev_change_flags+0x30/0x70\nkernel:  [<00000000006e14ee>] do_setlink+0x346/0x9a0\n...\n\nThe device driver has plenty of command buffers available\nper channel for channel command communication.\nIn the extremely rare case when there is no command buffer\navailable, return a NULL pointer and issue a warning\nin the kernel log. The caller handles the case when\na NULL pointer is encountered and returns an error.\n\nIn the case the wait for command buffer is possible\n(because no lock is held as in the OSN case), still wait\nuntil a channel command buffer is available.\n\nSigned-off-by: Thomas Richter <tmricht@linux.vnet.ibm.com>\nSigned-off-by: Ursula Braun <ursula.braun@de.ibm.com>\nReviewed-by: Eugene Crosser <Eugene.Crosser@ru.ibm.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "drivers/s390/net/qeth_core_main.c||drivers/s390/net/qeth_core_main.c",
          "drivers/s390/net/qeth_l2_main.c||drivers/s390/net/qeth_l2_main.c",
          "drivers/s390/net/qeth_l3_main.c||drivers/s390/net/qeth_l3_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/s390/net/qeth_core_main.c||drivers/s390/net/qeth_core_main.c": [
          "File: drivers/s390/net/qeth_core_main.c -> drivers/s390/net/qeth_core_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1784:  QETH_DBF_TEXT(SETUP, 2, \"idxanswr\");",
          "1785:  card = CARD_FROM_CDEV(channel->ccwdev);",
          "1786:  iob = qeth_get_buffer(channel);",
          "1787:  iob->callback = idx_reply_cb;",
          "1788:  memcpy(&channel->ccw, READ_CCW, sizeof(struct ccw1));",
          "1789:  channel->ccw.count = QETH_BUFSIZE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1787:  if (!iob)",
          "1788:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1834:  QETH_DBF_TEXT(SETUP, 2, \"idxactch\");",
          "1836:  iob = qeth_get_buffer(channel);",
          "1837:  iob->callback = idx_reply_cb;",
          "1838:  memcpy(&channel->ccw, WRITE_CCW, sizeof(struct ccw1));",
          "1839:  channel->ccw.count = IDX_ACTIVATE_SIZE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1839:  if (!iob)",
          "1840:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2940:  struct qeth_cmd_buffer *iob;",
          "2941:  struct qeth_ipa_cmd *cmd;",
          "2947:  return iob;",
          "2948: }",
          "",
          "[Removed Lines]",
          "2943:  iob = qeth_wait_for_buffer(&card->write);",
          "2944:  cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "2945:  qeth_fill_ipacmd_header(card, cmd, ipacmd, prot);",
          "",
          "[Added Lines]",
          "2947:  iob = qeth_get_buffer(&card->write);",
          "2948:  if (iob) {",
          "2949:   cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "2950:   qeth_fill_ipacmd_header(card, cmd, ipacmd, prot);",
          "2951:  } else {",
          "2952:   dev_warn(&card->gdev->dev,",
          "2953:     \"The qeth driver ran out of channel command buffers\\n\");",
          "2954:   QETH_DBF_MESSAGE(1, \"%s The qeth driver ran out of channel command buffers\",",
          "2955:      dev_name(&card->gdev->dev));",
          "2956:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3000:  QETH_DBF_TEXT(SETUP, 2, \"strtlan\");",
          "3002:  iob = qeth_get_ipacmd_buffer(card, IPA_CMD_STARTLAN, 0);",
          "3003:  rc = qeth_send_ipa_cmd(card, iob, NULL, NULL);",
          "3004:  return rc;",
          "3005: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3014:  if (!iob)",
          "3015:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3046:  iob = qeth_get_ipacmd_buffer(card, IPA_CMD_SETADAPTERPARMS,",
          "3047:          QETH_PROT_IPV4);",
          "3054:  return iob;",
          "3055: }",
          "",
          "[Removed Lines]",
          "3048:  cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "3049:  cmd->data.setadapterparms.hdr.cmdlength = cmdlen;",
          "3050:  cmd->data.setadapterparms.hdr.command_code = command;",
          "3051:  cmd->data.setadapterparms.hdr.used_total = 1;",
          "3052:  cmd->data.setadapterparms.hdr.seq_no = 1;",
          "",
          "[Added Lines]",
          "3061:  if (iob) {",
          "3062:   cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "3063:   cmd->data.setadapterparms.hdr.cmdlength = cmdlen;",
          "3064:   cmd->data.setadapterparms.hdr.command_code = command;",
          "3065:   cmd->data.setadapterparms.hdr.used_total = 1;",
          "3066:   cmd->data.setadapterparms.hdr.seq_no = 1;",
          "3067:  }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3062:  QETH_CARD_TEXT(card, 3, \"queryadp\");",
          "3063:  iob = qeth_get_adapter_cmd(card, IPA_SETADP_QUERY_COMMANDS_SUPPORTED,",
          "3064:        sizeof(struct qeth_ipacmd_setadpparms));",
          "3065:  rc = qeth_send_ipa_cmd(card, iob, qeth_query_setadapterparms_cb, NULL);",
          "3066:  return rc;",
          "3067: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3080:  if (!iob)",
          "3081:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3113:  QETH_DBF_TEXT_(SETUP, 2, \"qipassi%i\", prot);",
          "3114:  iob = qeth_get_ipacmd_buffer(card, IPA_CMD_QIPASSIST, prot);",
          "3115:  rc = qeth_send_ipa_cmd(card, iob, qeth_query_ipassists_cb, NULL);",
          "3116:  return rc;",
          "3117: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3132:  if (!iob)",
          "3133:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "3151:   return -ENOMEDIUM;",
          "3152:  iob = qeth_get_adapter_cmd(card, IPA_SETADP_QUERY_SWITCH_ATTRIBUTES,",
          "3153:     sizeof(struct qeth_ipacmd_setadpparms_hdr));",
          "3154:  return qeth_send_ipa_cmd(card, iob,",
          "3155:     qeth_query_switch_attributes_cb, sw_info);",
          "3156: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3173:  if (!iob)",
          "3174:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3179:  QETH_DBF_TEXT(SETUP, 2, \"qdiagass\");",
          "3180:  iob = qeth_get_ipacmd_buffer(card, IPA_CMD_SET_DIAG_ASS, 0);",
          "3181:  cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "3182:  cmd->data.diagass.subcmd_len = 16;",
          "3183:  cmd->data.diagass.subcmd = QETH_DIAGS_CMD_QUERY;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3202:  if (!iob)",
          "3203:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3230:  QETH_DBF_TEXT(SETUP, 2, \"diagtrap\");",
          "3231:  iob = qeth_get_ipacmd_buffer(card, IPA_CMD_SET_DIAG_ASS, 0);",
          "3232:  cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "3233:  cmd->data.diagass.subcmd_len = 80;",
          "3234:  cmd->data.diagass.subcmd = QETH_DIAGS_CMD_TRAP;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3255:  if (!iob)",
          "3256:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "4195:  iob = qeth_get_adapter_cmd(card, IPA_SETADP_SET_PROMISC_MODE,",
          "4196:    sizeof(struct qeth_ipacmd_setadpparms));",
          "4197:  cmd = (struct qeth_ipa_cmd *)(iob->data + IPA_PDU_HEADER_SIZE);",
          "4198:  cmd->data.setadapterparms.data.mode = mode;",
          "4199:  qeth_send_ipa_cmd(card, iob, qeth_setadp_promisc_mode_cb, NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4222:  if (!iob)",
          "4223:   return;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "4265:  iob = qeth_get_adapter_cmd(card, IPA_SETADP_ALTER_MAC_ADDRESS,",
          "4266:        sizeof(struct qeth_ipacmd_setadpparms));",
          "4267:  cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "4268:  cmd->data.setadapterparms.data.change_addr.cmd = CHANGE_ADDR_READ_MAC;",
          "4269:  cmd->data.setadapterparms.data.change_addr.addr_size = OSA_ADDR_LEN;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4294:  if (!iob)",
          "4295:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "4377:  iob = qeth_get_adapter_cmd(card, IPA_SETADP_SET_ACCESS_CONTROL,",
          "4378:        sizeof(struct qeth_ipacmd_setadpparms_hdr) +",
          "4379:        sizeof(struct qeth_set_access_ctrl));",
          "4380:  cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "4381:  access_ctrl_req = &cmd->data.setadapterparms.data.set_access_ctrl;",
          "4382:  access_ctrl_req->subcmd_code = isolation;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4409:  if (!iob)",
          "4410:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "4621:  iob = qeth_get_adapter_cmd(card, IPA_SETADP_SET_SNMP_CONTROL,",
          "4622:        QETH_SNMP_SETADP_CMDLENGTH + req_len);",
          "4623:  cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "4624:  memcpy(&cmd->data.setadapterparms.data.snmp, &ureq->cmd, req_len);",
          "4625:  rc = qeth_send_ipa_snmp_cmd(card, iob, QETH_SETADP_BASE_LEN + req_len,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4654:  if (!iob) {",
          "4655:   rc = -ENOMEM;",
          "4656:   goto out;",
          "4657:  }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "4631:   if (copy_to_user(udata, qinfo.udata, qinfo.udata_len))",
          "4632:    rc = -EFAULT;",
          "4633:  }",
          "4635:  kfree(ureq);",
          "4636:  kfree(qinfo.udata);",
          "4637:  return rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4669: out:",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "4702:  iob = qeth_get_adapter_cmd(card, IPA_SETADP_QUERY_OAT,",
          "4703:        sizeof(struct qeth_ipacmd_setadpparms_hdr) +",
          "4704:        sizeof(struct qeth_query_oat));",
          "4705:  cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "4706:  oat_req = &cmd->data.setadapterparms.data.query_oat;",
          "4707:  oat_req->subcmd_code = oat_data.command;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4740:  if (!iob) {",
          "4741:   rc = -ENOMEM;",
          "4742:   goto out_free;",
          "4743:  }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "4767:   return -EOPNOTSUPP;",
          "4768:  iob = qeth_get_adapter_cmd(card, IPA_SETADP_QUERY_CARD_INFO,",
          "4769:   sizeof(struct qeth_ipacmd_setadpparms_hdr));",
          "4770:  return qeth_send_ipa_cmd(card, iob, qeth_query_card_info_cb,",
          "4771:      (void *)carrier_info);",
          "4772: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4809:  if (!iob)",
          "4810:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "5092:  card->options.adp.supported_funcs = 0;",
          "5093:  card->options.sbp.supported_funcs = 0;",
          "5094:  card->info.diagass_support = 0;",
          "5100:  return 0;",
          "5101: out:",
          "5102:  dev_warn(&card->gdev->dev, \"The qeth device driver failed to recover \"",
          "",
          "[Removed Lines]",
          "5095:  qeth_query_ipassists(card, QETH_PROT_IPV4);",
          "5096:  if (qeth_is_supported(card, IPA_SETADAPTERPARMS))",
          "5097:   qeth_query_setadapterparms(card);",
          "5098:  if (qeth_adp_supported(card, IPA_SETADP_SET_DIAG_ASSIST))",
          "5099:   qeth_query_setdiagass(card);",
          "",
          "[Added Lines]",
          "5136:  rc = qeth_query_ipassists(card, QETH_PROT_IPV4);",
          "5137:  if (rc == -ENOMEM)",
          "5138:   goto out;",
          "5139:  if (qeth_is_supported(card, IPA_SETADAPTERPARMS)) {",
          "5140:   rc = qeth_query_setadapterparms(card);",
          "5141:   if (rc < 0) {",
          "5142:    QETH_DBF_TEXT_(SETUP, 2, \"6err%d\", rc);",
          "5143:    goto out;",
          "5144:   }",
          "5145:  }",
          "5146:  if (qeth_adp_supported(card, IPA_SETADP_SET_DIAG_ASSIST)) {",
          "5147:   rc = qeth_query_setdiagass(card);",
          "5148:   if (rc < 0) {",
          "5149:    QETH_DBF_TEXT_(SETUP, 2, \"7err%d\", rc);",
          "5150:    goto out;",
          "5151:   }",
          "5152:  }",
          "",
          "---------------"
        ],
        "drivers/s390/net/qeth_l2_main.c||drivers/s390/net/qeth_l2_main.c": [
          "File: drivers/s390/net/qeth_l2_main.c -> drivers/s390/net/qeth_l2_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "132:  int rc;",
          "134:  if (retcode)",
          "136:  switch (retcode) {",
          "137:  case IPA_RC_SUCCESS:",
          "138:   rc = 0;",
          "",
          "[Removed Lines]",
          "135:   QETH_CARD_TEXT_(card, 2, \"err%d\", retcode);",
          "",
          "[Added Lines]",
          "135:   QETH_CARD_TEXT_(card, 2, \"err%04x\", retcode);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "154:  case IPA_RC_L2_MAC_NOT_FOUND:",
          "155:   rc = -ENOENT;",
          "156:   break;",
          "157:  default:",
          "158:   rc = -EIO;",
          "159:   break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "157:  case -ENOMEM:",
          "158:   rc = -ENOMEM;",
          "159:   break;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "302:  QETH_CARD_TEXT_(card, 4, \"L2sdv%x\", ipacmd);",
          "303:  iob = qeth_get_ipacmd_buffer(card, ipacmd, QETH_PROT_IPV4);",
          "304:  cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "305:  cmd->data.setdelvlan.vlan_id = i;",
          "306:  return qeth_send_ipa_cmd(card, iob,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "307:  if (!iob)",
          "308:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "323: {",
          "324:  struct qeth_card *card = dev->ml_priv;",
          "325:  struct qeth_vlan_vid *id;",
          "327:  QETH_CARD_TEXT_(card, 4, \"aid:%d\", vid);",
          "328:  if (!vid)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "331:  int rc;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "338:  id = kmalloc(sizeof(struct qeth_vlan_vid), GFP_ATOMIC);",
          "339:  if (id) {",
          "340:   id->vid = vid;",
          "342:   spin_lock_bh(&card->vlanlock);",
          "343:   list_add_tail(&id->list, &card->vid_list);",
          "344:   spin_unlock_bh(&card->vlanlock);",
          "",
          "[Removed Lines]",
          "341:   qeth_l2_send_setdelvlan(card, vid, IPA_CMD_SETVLAN);",
          "",
          "[Added Lines]",
          "347:   rc = qeth_l2_send_setdelvlan(card, vid, IPA_CMD_SETVLAN);",
          "348:   if (rc) {",
          "349:    kfree(id);",
          "350:    return rc;",
          "351:   }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "353: {",
          "354:  struct qeth_vlan_vid *id, *tmpid = NULL;",
          "355:  struct qeth_card *card = dev->ml_priv;",
          "357:  QETH_CARD_TEXT_(card, 4, \"kid:%d\", vid);",
          "358:  if (card->info.type == QETH_CARD_TYPE_OSM) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "366:  int rc = 0;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "373:  }",
          "374:  spin_unlock_bh(&card->vlanlock);",
          "375:  if (tmpid) {",
          "377:   kfree(tmpid);",
          "378:  }",
          "379:  qeth_l2_set_multicast_list(card->dev);",
          "381: }",
          "383: static int qeth_l2_stop_card(struct qeth_card *card, int recovery_mode)",
          "",
          "[Removed Lines]",
          "376:   qeth_l2_send_setdelvlan(card, vid, IPA_CMD_DELVLAN);",
          "380:  return 0;",
          "",
          "[Added Lines]",
          "387:   rc = qeth_l2_send_setdelvlan(card, vid, IPA_CMD_DELVLAN);",
          "391:  return rc;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "557:  QETH_CARD_TEXT(card, 2, \"L2sdmac\");",
          "558:  iob = qeth_get_ipacmd_buffer(card, ipacmd, QETH_PROT_IPV4);",
          "559:  cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "560:  cmd->data.setdelmac.mac_length = OSA_ADDR_LEN;",
          "561:  memcpy(&cmd->data.setdelmac.mac, mac, OSA_ADDR_LEN);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "570:  if (!iob)",
          "571:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "630:   if (rc) {",
          "631:    QETH_DBF_MESSAGE(2, \"couldn't get MAC address on \"",
          "632:     \"device %s: x%x\\n\", CARD_BUS_ID(card), rc);",
          "634:    return rc;",
          "635:   }",
          "636:   QETH_DBF_HEX(SETUP, 2, card->dev->dev_addr, OSA_ADDR_LEN);",
          "",
          "[Removed Lines]",
          "633:    QETH_DBF_TEXT_(SETUP, 2, \"1err%d\", rc);",
          "",
          "[Added Lines]",
          "646:    QETH_DBF_TEXT_(SETUP, 2, \"1err%04x\", rc);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "975:  recover_flag = card->state;",
          "976:  rc = qeth_core_hardsetup_card(card);",
          "977:  if (rc) {",
          "979:   rc = -ENODEV;",
          "980:   goto out_remove;",
          "981:  }",
          "",
          "[Removed Lines]",
          "978:   QETH_DBF_TEXT_(SETUP, 2, \"2err%d\", rc);",
          "",
          "[Added Lines]",
          "991:   QETH_DBF_TEXT_(SETUP, 2, \"2err%04x\", rc);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1710:  QETH_CARD_TEXT(card, 2, \"brqsuppo\");",
          "1711:  iob = qeth_get_ipacmd_buffer(card, IPA_CMD_SETBRIDGEPORT, 0);",
          "1712:  cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "1713:  cmd->data.sbp.hdr.cmdlength =",
          "1714:   sizeof(struct qeth_ipacmd_sbp_hdr) +",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1725:  if (!iob)",
          "1726:   return;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1784:  if (!(card->options.sbp.supported_funcs & IPA_SBP_QUERY_BRIDGE_PORTS))",
          "1785:   return -EOPNOTSUPP;",
          "1786:  iob = qeth_get_ipacmd_buffer(card, IPA_CMD_SETBRIDGEPORT, 0);",
          "1787:  cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "1788:  cmd->data.sbp.hdr.cmdlength =",
          "1789:   sizeof(struct qeth_ipacmd_sbp_hdr);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1802:  if (!iob)",
          "1803:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1796:  if (rc)",
          "1797:   return rc;",
          "1798:  rc = qeth_bridgeport_makerc(card, &cbctl, IPA_SBP_QUERY_BRIDGE_PORTS);",
          "1802: }",
          "1803: EXPORT_SYMBOL_GPL(qeth_bridgeport_query_ports);",
          "",
          "[Removed Lines]",
          "1799:  if (rc)",
          "1800:   return rc;",
          "1801:  return 0;",
          "",
          "[Added Lines]",
          "1816:  return rc;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1852:  if (!(card->options.sbp.supported_funcs & setcmd))",
          "1853:   return -EOPNOTSUPP;",
          "1854:  iob = qeth_get_ipacmd_buffer(card, IPA_CMD_SETBRIDGEPORT, 0);",
          "1855:  cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "1856:  cmd->data.sbp.hdr.cmdlength = cmdlength;",
          "1857:  cmd->data.sbp.hdr.command_code = setcmd;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1870:  if (!iob)",
          "1871:   return -ENOMEM;",
          "",
          "---------------"
        ],
        "drivers/s390/net/qeth_l3_main.c||drivers/s390/net/qeth_l3_main.c": [
          "File: drivers/s390/net/qeth_l3_main.c -> drivers/s390/net/qeth_l3_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "549:  QETH_CARD_TEXT(card, 4, \"setdelmc\");",
          "551:  iob = qeth_get_ipacmd_buffer(card, ipacmd, addr->proto);",
          "552:  cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "553:  memcpy(&cmd->data.setdelipm.mac, addr->mac, OSA_ADDR_LEN);",
          "554:  if (addr->proto == QETH_PROT_IPV6)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "552:  if (!iob)",
          "553:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "588:  QETH_CARD_TEXT_(card, 4, \"flags%02X\", flags);",
          "590:  iob = qeth_get_ipacmd_buffer(card, ipacmd, addr->proto);",
          "591:  cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "592:  if (addr->proto == QETH_PROT_IPV6) {",
          "593:   memcpy(cmd->data.setdelip6.ip_addr, &addr->u.a6.addr,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "593:  if (!iob)",
          "594:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "617:  QETH_CARD_TEXT(card, 4, \"setroutg\");",
          "618:  iob = qeth_get_ipacmd_buffer(card, IPA_CMD_SETRTG, prot);",
          "619:  cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "620:  cmd->data.setrtg.type = (type);",
          "621:  rc = qeth_send_ipa_cmd(card, iob, NULL, NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "623:  if (!iob)",
          "624:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1049:  QETH_CARD_TEXT(card, 4, \"getasscm\");",
          "1050:  iob = qeth_get_ipacmd_buffer(card, IPA_CMD_SETASSPARMS, prot);",
          "1059:  return iob;",
          "1060: }",
          "",
          "[Removed Lines]",
          "1052:  cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "1053:  cmd->data.setassparms.hdr.assist_no = ipa_func;",
          "1054:  cmd->data.setassparms.hdr.length = 8 + len;",
          "1055:  cmd->data.setassparms.hdr.command_code = cmd_code;",
          "1056:  cmd->data.setassparms.hdr.return_code = 0;",
          "1057:  cmd->data.setassparms.hdr.seq_no = 0;",
          "",
          "[Added Lines]",
          "1058:  if (iob) {",
          "1059:   cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "1060:   cmd->data.setassparms.hdr.assist_no = ipa_func;",
          "1061:   cmd->data.setassparms.hdr.length = 8 + len;",
          "1062:   cmd->data.setassparms.hdr.command_code = cmd_code;",
          "1063:   cmd->data.setassparms.hdr.return_code = 0;",
          "1064:   cmd->data.setassparms.hdr.seq_no = 0;",
          "1065:  }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1090:  QETH_CARD_TEXT(card, 4, \"simassp6\");",
          "1091:  iob = qeth_l3_get_setassparms_cmd(card, ipa_func, cmd_code,",
          "1092:            0, QETH_PROT_IPV6);",
          "1093:  rc = qeth_l3_send_setassparms(card, iob, 0, 0,",
          "1094:        qeth_l3_default_setassparms_cb, NULL);",
          "1095:  return rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1101:  if (!iob)",
          "1102:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1108:   length = sizeof(__u32);",
          "1109:  iob = qeth_l3_get_setassparms_cmd(card, ipa_func, cmd_code,",
          "1110:            length, QETH_PROT_IPV4);",
          "1111:  rc = qeth_l3_send_setassparms(card, iob, length, data,",
          "1112:        qeth_l3_default_setassparms_cb, NULL);",
          "1113:  return rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1121:  if (!iob)",
          "1122:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1495:  iob = qeth_get_ipacmd_buffer(card, IPA_CMD_CREATE_ADDR,",
          "1496:          QETH_PROT_IPV6);",
          "1497:  cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "1499:    card->info.unique_id;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1509:  if (!iob)",
          "1510:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1538:  iob = qeth_get_ipacmd_buffer(card, IPA_CMD_CREATE_ADDR,",
          "1539:          QETH_PROT_IPV6);",
          "1540:  cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "1542:    card->info.unique_id;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1554:  if (!iob)",
          "1555:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1611:  QETH_DBF_TEXT(SETUP, 2, \"diagtrac\");",
          "1613:  iob = qeth_get_ipacmd_buffer(card, IPA_CMD_SET_DIAG_ASS, 0);",
          "1614:  cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "1615:  cmd->data.diagass.subcmd_len = 16;",
          "1616:  cmd->data.diagass.subcmd = QETH_DIAGS_CMD_TRACE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1630:  if (!iob)",
          "1631:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2442:    IPA_CMD_ASS_ARP_QUERY_INFO,",
          "2443:    sizeof(struct qeth_arp_query_data) - sizeof(char),",
          "2444:    prot);",
          "2445:  cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);",
          "2446:  cmd->data.setassparms.data.query_arp.request_bits = 0x000F;",
          "2447:  cmd->data.setassparms.data.query_arp.reply_bits = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2463:  if (!iob)",
          "2464:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2535:            IPA_CMD_ASS_ARP_ADD_ENTRY,",
          "2536:            sizeof(struct qeth_arp_cache_entry),",
          "2537:            QETH_PROT_IPV4);",
          "2538:  rc = qeth_l3_send_setassparms(card, iob,",
          "2539:        sizeof(struct qeth_arp_cache_entry),",
          "2540:        (unsigned long) entry,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2558:  if (!iob)",
          "2559:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2574:            IPA_CMD_ASS_ARP_REMOVE_ENTRY,",
          "2575:            12,",
          "2576:            QETH_PROT_IPV4);",
          "2577:  rc = qeth_l3_send_setassparms(card, iob,",
          "2578:        12, (unsigned long)buf,",
          "2579:        qeth_l3_default_setassparms_cb, NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2599:  if (!iob)",
          "2600:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "3263: static int qeth_l3_setup_netdev(struct qeth_card *card)",
          "3264: {",
          "3265:  if (card->info.type == QETH_CARD_TYPE_OSD ||",
          "3266:      card->info.type == QETH_CARD_TYPE_OSX) {",
          "3267:   if ((card->info.link_type == QETH_LINK_TYPE_LANE_TR) ||",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3289:  int rc;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "3293:    return -ENODEV;",
          "3294:   card->dev->flags |= IFF_NOARP;",
          "3295:   card->dev->netdev_ops = &qeth_l3_netdev_ops;",
          "3297:   if (card->options.hsuid[0])",
          "3298:    memcpy(card->dev->perm_addr, card->options.hsuid, 9);",
          "3299:  } else",
          "",
          "[Removed Lines]",
          "3296:   qeth_l3_iqd_read_initial_mac(card);",
          "",
          "[Added Lines]",
          "3322:   rc = qeth_l3_iqd_read_initial_mac(card);",
          "3323:   if (rc)",
          "3324:    return rc;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "3360:  recover_flag = card->state;",
          "3361:  rc = qeth_core_hardsetup_card(card);",
          "3362:  if (rc) {",
          "3364:   rc = -ENODEV;",
          "3365:   goto out_remove;",
          "3366:  }",
          "",
          "[Removed Lines]",
          "3363:   QETH_DBF_TEXT_(SETUP, 2, \"2err%d\", rc);",
          "",
          "[Added Lines]",
          "3391:   QETH_DBF_TEXT_(SETUP, 2, \"2err%04x\", rc);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "3401: contin:",
          "3402:  rc = qeth_l3_setadapter_parms(card);",
          "3403:  if (rc)",
          "3405:  if (!card->options.sniffer) {",
          "3406:   rc = qeth_l3_start_ipassists(card);",
          "3407:   if (rc) {",
          "",
          "[Removed Lines]",
          "3404:   QETH_DBF_TEXT_(SETUP, 2, \"2err%d\", rc);",
          "",
          "[Added Lines]",
          "3432:   QETH_DBF_TEXT_(SETUP, 2, \"2err%04x\", rc);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "3410:   }",
          "3411:   rc = qeth_l3_setrouting_v4(card);",
          "3412:   if (rc)",
          "3414:   rc = qeth_l3_setrouting_v6(card);",
          "3415:   if (rc)",
          "3417:  }",
          "3418:  netif_tx_disable(card->dev);",
          "",
          "[Removed Lines]",
          "3413:    QETH_DBF_TEXT_(SETUP, 2, \"4err%d\", rc);",
          "3416:    QETH_DBF_TEXT_(SETUP, 2, \"5err%d\", rc);",
          "",
          "[Added Lines]",
          "3441:    QETH_DBF_TEXT_(SETUP, 2, \"4err%04x\", rc);",
          "3444:    QETH_DBF_TEXT_(SETUP, 2, \"5err%04x\", rc);",
          "",
          "---------------"
        ]
      }
    }
  ]
}