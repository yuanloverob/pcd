{
  "cve_id": "CVE-2013-4265",
  "cve_desc": "The av_reallocp_array function in libavutil/mem.c in FFmpeg before 2.0.1 has an unspecified impact and remote vectors related to a \"wrong return code\" and a resultant NULL pointer dereference.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "c94f9e854228e0ea00e1de8769d8d3f7cab84a55",
  "patch_info": {
    "commit_hash": "c94f9e854228e0ea00e1de8769d8d3f7cab84a55",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/c94f9e854228e0ea00e1de8769d8d3f7cab84a55",
    "files": [
      "libavutil/mem.c"
    ],
    "message": "avutil/mem: Fix flipped condition\n\nFixes return code and later null pointer dereference\n\nFound-by: Laurent Butti <laurentb@gmail.com>\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavutil/mem.c||libavutil/mem.c"
    ]
  },
  "patch_diff": {
    "libavutil/mem.c||libavutil/mem.c": [
      "File: libavutil/mem.c -> libavutil/mem.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "191: {",
      "192:     void **ptrptr = ptr;",
      "195:         return AVERROR(ENOMEM);",
      "196:     return 0;",
      "197: }",
      "",
      "[Removed Lines]",
      "194:     if (!*ptrptr && !(nmemb && size))",
      "",
      "[Added Lines]",
      "194:     if (!*ptrptr && nmemb && size)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "211374e52a933a2b3f21a4d6e66e9f1b0623e44e",
      "candidate_info": {
        "commit_hash": "211374e52a933a2b3f21a4d6e66e9f1b0623e44e",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/211374e52a933a2b3f21a4d6e66e9f1b0623e44e",
        "files": [
          "libavutil/mem.c"
        ],
        "message": "avutil/mem: Fix flipped condition\n\nFixes return code and later null pointer dereference\n\nFound-by: Laurent Butti <laurentb@gmail.com>\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit c94f9e854228e0ea00e1de8769d8d3f7cab84a55)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavutil/mem.c||libavutil/mem.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavutil/mem.c||libavutil/mem.c"
          ],
          "candidate": [
            "libavutil/mem.c||libavutil/mem.c"
          ]
        }
      },
      "candidate_diff": {
        "libavutil/mem.c||libavutil/mem.c": [
          "File: libavutil/mem.c -> libavutil/mem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "191: {",
          "192:     void **ptrptr = ptr;",
          "195:         return AVERROR(ENOMEM);",
          "196:     return 0;",
          "197: }",
          "",
          "[Removed Lines]",
          "194:     if (!*ptrptr && !(nmemb && size))",
          "",
          "[Added Lines]",
          "194:     if (!*ptrptr && nmemb && size)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fc962d4e7a7c3d799d9364d5427564c22ee3880c",
      "candidate_info": {
        "commit_hash": "fc962d4e7a7c3d799d9364d5427564c22ee3880c",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/fc962d4e7a7c3d799d9364d5427564c22ee3880c",
        "files": [
          "doc/APIchanges",
          "libavutil/mem.c",
          "libavutil/mem.h",
          "libavutil/version.h"
        ],
        "message": "mem: Add av_realloc_array and av_reallocp_array\n\nThese help avoiding overflows and simplify error handling.\n\nSigned-off-by: Martin Storsj\u00f6 <martin@martin.st>",
        "before_after_code_files": [
          "libavutil/mem.c||libavutil/mem.c",
          "libavutil/mem.h||libavutil/mem.h",
          "libavutil/version.h||libavutil/version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libavutil/mem.c||libavutil/mem.c"
          ],
          "candidate": [
            "libavutil/mem.c||libavutil/mem.c"
          ]
        }
      },
      "candidate_diff": {
        "libavutil/mem.c||libavutil/mem.c": [
          "File: libavutil/mem.c -> libavutil/mem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "136: #endif",
          "137: }",
          "139: void av_free(void *ptr)",
          "140: {",
          "141: #if CONFIG_MEMALIGN_HACK",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139: void *av_realloc_array(void *ptr, size_t nmemb, size_t size)",
          "140: {",
          "141:     if (size <= 0 || nmemb >= INT_MAX / size)",
          "142:         return NULL;",
          "143:     return av_realloc(ptr, nmemb * size);",
          "144: }",
          "146: int av_reallocp_array(void *ptr, size_t nmemb, size_t size)",
          "147: {",
          "148:     void **ptrptr = ptr;",
          "149:     void *ret;",
          "150:     if (size <= 0 || nmemb >= INT_MAX / size)",
          "151:         return AVERROR(ENOMEM);",
          "152:     if (nmemb <= 0) {",
          "153:         av_freep(ptr);",
          "154:         return 0;",
          "155:     }",
          "156:     ret = av_realloc(*ptrptr, nmemb * size);",
          "157:     if (!ret) {",
          "158:         av_freep(ptr);",
          "159:         return AVERROR(ENOMEM);",
          "160:     }",
          "162:     return 0;",
          "163: }",
          "",
          "---------------"
        ],
        "libavutil/mem.h||libavutil/mem.h": [
          "File: libavutil/mem.h -> libavutil/mem.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "112: void *av_realloc(void *ptr, size_t size) av_alloc_size(2);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "125: av_alloc_size(2, 3) void *av_realloc_array(void *ptr, size_t nmemb, size_t size);",
          "138: av_alloc_size(2, 3) int av_reallocp_array(void *ptr, size_t nmemb, size_t size);",
          "",
          "---------------"
        ],
        "libavutil/version.h||libavutil/version.h": [
          "File: libavutil/version.h -> libavutil/version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: #define LIBAVUTIL_VERSION_MAJOR 52",
          "41: #define LIBAVUTIL_VERSION_MICRO  0",
          "43: #define LIBAVUTIL_VERSION_INT   AV_VERSION_INT(LIBAVUTIL_VERSION_MAJOR, \\",
          "",
          "[Removed Lines]",
          "40: #define LIBAVUTIL_VERSION_MINOR 12",
          "",
          "[Added Lines]",
          "40: #define LIBAVUTIL_VERSION_MINOR 13",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fbc472da295e50c9bfa667f56a261e4d7acb1ccb",
      "candidate_info": {
        "commit_hash": "fbc472da295e50c9bfa667f56a261e4d7acb1ccb",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/fbc472da295e50c9bfa667f56a261e4d7acb1ccb",
        "files": [
          "libavutil/mem.c"
        ],
        "message": "avutil/mem: simplify av_reallocp_array() by using av_realloc_f()\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavutil/mem.c||libavutil/mem.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libavutil/mem.c||libavutil/mem.c"
          ],
          "candidate": [
            "libavutil/mem.c||libavutil/mem.c"
          ]
        }
      },
      "candidate_diff": {
        "libavutil/mem.c||libavutil/mem.c": [
          "File: libavutil/mem.c -> libavutil/mem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "190: int av_reallocp_array(void *ptr, size_t nmemb, size_t size)",
          "191: {",
          "192:     void **ptrptr = ptr;",
          "203:         return AVERROR(ENOMEM);",
          "206:     return 0;",
          "207: }",
          "",
          "[Removed Lines]",
          "193:     void *ret;",
          "194:     if (size <= 0 || nmemb >= INT_MAX / size)",
          "195:         return AVERROR(ENOMEM);",
          "196:     if (nmemb <= 0) {",
          "197:         av_freep(ptr);",
          "198:         return 0;",
          "199:     }",
          "200:     ret = av_realloc(*ptrptr, nmemb * size);",
          "201:     if (!ret) {",
          "202:         av_freep(ptr);",
          "204:     }",
          "",
          "[Added Lines]",
          "194:     if (!*ptrptr && !(nmemb && size))",
          "",
          "---------------"
        ]
      }
    }
  ]
}