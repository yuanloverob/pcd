{
  "cve_id": "CVE-2016-4006",
  "cve_desc": "epan/proto.c in Wireshark 1.12.x before 1.12.11 and 2.0.x before 2.0.3 does not limit the protocol-tree depth, which allows remote attackers to cause a denial of service (stack memory consumption and application crash) via a crafted packet.",
  "repo": "wireshark/wireshark",
  "patch_hash": "8dc9551e1d56290e6f7f02cc38b77e1d211fd4a5",
  "patch_info": {
    "commit_hash": "8dc9551e1d56290e6f7f02cc38b77e1d211fd4a5",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/8dc9551e1d56290e6f7f02cc38b77e1d211fd4a5",
    "files": [
      "epan/proto.c"
    ],
    "message": "Restrict the depth of the protocol tree.\n\nLimit the the protocol tree to 500 levels. This keeps us from running\nout of stack space in proto_tree_traverse_{pre,post}_order.\n\nBug: 12268\nChange-Id: I60f6b4487bf51a4d43da0429819a8a20fbdb313a\nReviewed-on: https://code.wireshark.org/review/14887\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Gerald Combs <gerald@wireshark.org>",
    "before_after_code_files": [
      "epan/proto.c||epan/proto.c"
    ]
  },
  "patch_diff": {
    "epan/proto.c||epan/proto.c": [
      "File: epan/proto.c -> epan/proto.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "57: #include <wsutil/plugins.h>",
      "59: #define SUBTREE_ONCE_ALLOCATION_NUMBER 8",
      "60: #define SUBTREE_MAX_LEVELS 256",
      "63: #define MAX_TREE_ITEMS (1 * 1000 * 1000)",
      "65: typedef struct __subtree_lvl {",
      "66:  gint        cursor_offset;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "66: #define MAX_TREE_LEVELS (5 * 100)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "4375: {",
      "4376:  proto_node *pnode, *tnode, *sibling;",
      "4377:  field_info *tfi;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4381:  int depth = 1;",
      "4388:  if (tree->first_child == NULL) {",
      "4389:   for (tnode = tree; tnode != NULL; tnode = tnode->parent) {",
      "4390:    depth++;",
      "4391:    if (G_UNLIKELY(depth > MAX_TREE_LEVELS)) {",
      "4392:     THROW_MESSAGE(DissectorError, wmem_strdup_printf(wmem_packet_scope(),",
      "4393:            \"Maximum tree depth %d exceeded for \\\"%s\\\" - \\\"%s\\\" (%s:%u)\",",
      "4394:            MAX_TREE_LEVELS,",
      "4395:            fi->hfinfo->name, fi->hfinfo->abbrev, G_STRFUNC, __LINE__));",
      "4396:    }",
      "4397:   }",
      "4398:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fcff25647d06365c916d8d83c14253866ccb32d3",
      "candidate_info": {
        "commit_hash": "fcff25647d06365c916d8d83c14253866ccb32d3",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/fcff25647d06365c916d8d83c14253866ccb32d3",
        "files": [
          "epan/proto.c"
        ],
        "message": "Restrict the depth of the protocol tree.\n\nLimit the the protocol tree to 500 levels. This keeps us from running\nout of stack space in proto_tree_traverse_{pre,post}_order.\n\nBug: 12268\nChange-Id: I60f6b4487bf51a4d43da0429819a8a20fbdb313a\nReviewed-on: https://code.wireshark.org/review/14887\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Gerald Combs <gerald@wireshark.org>\n(cherry picked from commit 8dc9551e1d56290e6f7f02cc38b77e1d211fd4a5)\nReviewed-on: https://code.wireshark.org/review/14905",
        "before_after_code_files": [
          "epan/proto.c||epan/proto.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/proto.c||epan/proto.c"
          ],
          "candidate": [
            "epan/proto.c||epan/proto.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/proto.c||epan/proto.c": [
          "File: epan/proto.c -> epan/proto.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "57: #include <wsutil/plugins.h>",
          "59: #define SUBTREE_ONCE_ALLOCATION_NUMBER 8",
          "60: #define SUBTREE_MAX_LEVELS 256",
          "63: #define MAX_TREE_ITEMS (1 * 1000 * 1000)",
          "66: typedef struct __subtree_lvl {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66: #define MAX_TREE_LEVELS (5 * 100)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4090: {",
          "4091:  proto_node *pnode, *tnode, *sibling;",
          "4092:  field_info *tfi;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4096:  int depth = 1;",
          "4103:  if (tree->first_child == NULL) {",
          "4104:   for (tnode = tree; tnode != NULL; tnode = tnode->parent) {",
          "4105:    depth++;",
          "4106:    if (G_UNLIKELY(depth > MAX_TREE_LEVELS)) {",
          "4107:     THROW_MESSAGE(DissectorError, wmem_strdup_printf(wmem_packet_scope(),",
          "4108:            \"Maximum tree depth %d exceeded for \\\"%s\\\" - \\\"%s\\\" (%s:%u)\",",
          "4109:            MAX_TREE_LEVELS,",
          "4110:            fi->hfinfo->name, fi->hfinfo->abbrev, G_STRFUNC, __LINE__));",
          "4111:    }",
          "4112:   }",
          "4113:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f5946221504c14ea056818ffd609f7aa5156da4f",
      "candidate_info": {
        "commit_hash": "f5946221504c14ea056818ffd609f7aa5156da4f",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/f5946221504c14ea056818ffd609f7aa5156da4f",
        "files": [
          "epan/proto.c"
        ],
        "message": "Restrict the depth of the protocol tree.\n\nLimit the the protocol tree to 500 levels. This keeps us from running\nout of stack space in proto_tree_traverse_{pre,post}_order.\n\nBug: 12268\nChange-Id: I60f6b4487bf51a4d43da0429819a8a20fbdb313a\nReviewed-on: https://code.wireshark.org/review/14887\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Gerald Combs <gerald@wireshark.org>\n(cherry picked from commit 8dc9551e1d56290e6f7f02cc38b77e1d211fd4a5)\nReviewed-on: https://code.wireshark.org/review/15010\n(cherry picked from commit c5a9678f5f601a86745e5108323a573171d23fac)\nReviewed-on: https://code.wireshark.org/review/15442\nReviewed-by: Balint Reczey <balint@balintreczey.hu>",
        "before_after_code_files": [
          "epan/proto.c||epan/proto.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/proto.c||epan/proto.c"
          ],
          "candidate": [
            "epan/proto.c||epan/proto.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/proto.c||epan/proto.c": [
          "File: epan/proto.c -> epan/proto.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "60: #include <wsutil/plugins.h>",
          "62: #define SUBTREE_ONCE_ALLOCATION_NUMBER 8",
          "63: #define SUBTREE_MAX_LEVELS 256",
          "66: #define MAX_TREE_ITEMS (1 * 1000 * 1000)",
          "69: typedef struct __subtree_lvl {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "69: #define MAX_TREE_LEVELS (5 * 100)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3757: {",
          "3758:  proto_node *pnode, *tnode, *sibling;",
          "3759:  field_info *tfi;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3763:  int depth = 1;",
          "3770:  if (tree->first_child == NULL) {",
          "3771:   for (tnode = tree; tnode != NULL; tnode = tnode->parent) {",
          "3772:    depth++;",
          "3773:    if (G_UNLIKELY(depth > MAX_TREE_LEVELS)) {",
          "3774:     THROW_MESSAGE(DissectorError, wmem_strdup_printf(wmem_packet_scope(),",
          "3775:            \"Maximum tree depth %d exceeded for \\\"%s\\\" - \\\"%s\\\" (%s:%u)\",",
          "3776:            MAX_TREE_LEVELS,",
          "3777:            fi->hfinfo->name, fi->hfinfo->abbrev, G_STRFUNC, __LINE__));",
          "3778:    }",
          "3779:   }",
          "3780:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c5a9678f5f601a86745e5108323a573171d23fac",
      "candidate_info": {
        "commit_hash": "c5a9678f5f601a86745e5108323a573171d23fac",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/c5a9678f5f601a86745e5108323a573171d23fac",
        "files": [
          "epan/proto.c"
        ],
        "message": "Restrict the depth of the protocol tree.\n\nLimit the the protocol tree to 500 levels. This keeps us from running\nout of stack space in proto_tree_traverse_{pre,post}_order.\n\nBug: 12268\nChange-Id: I60f6b4487bf51a4d43da0429819a8a20fbdb313a\nReviewed-on: https://code.wireshark.org/review/14887\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Gerald Combs <gerald@wireshark.org>\n(cherry picked from commit 8dc9551e1d56290e6f7f02cc38b77e1d211fd4a5)\nReviewed-on: https://code.wireshark.org/review/15010",
        "before_after_code_files": [
          "epan/proto.c||epan/proto.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/proto.c||epan/proto.c"
          ],
          "candidate": [
            "epan/proto.c||epan/proto.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/proto.c||epan/proto.c": [
          "File: epan/proto.c -> epan/proto.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: #include <wsutil/plugins.h>",
          "61: #define SUBTREE_ONCE_ALLOCATION_NUMBER 8",
          "62: #define SUBTREE_MAX_LEVELS 256",
          "65: #define MAX_TREE_ITEMS (1 * 1000 * 1000)",
          "68: typedef struct __subtree_lvl {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68: #define MAX_TREE_LEVELS (5 * 100)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3773: {",
          "3774:  proto_node *pnode, *tnode, *sibling;",
          "3775:  field_info *tfi;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3779:  int depth = 1;",
          "3786:  if (tree->first_child == NULL) {",
          "3787:   for (tnode = tree; tnode != NULL; tnode = tnode->parent) {",
          "3788:    depth++;",
          "3789:    if (G_UNLIKELY(depth > MAX_TREE_LEVELS)) {",
          "3790:     THROW_MESSAGE(DissectorError, wmem_strdup_printf(wmem_packet_scope(),",
          "3791:            \"Maximum tree depth %d exceeded for \\\"%s\\\" - \\\"%s\\\" (%s:%u)\",",
          "3792:            MAX_TREE_LEVELS,",
          "3793:            fi->hfinfo->name, fi->hfinfo->abbrev, G_STRFUNC, __LINE__));",
          "3794:    }",
          "3795:   }",
          "3796:  }",
          "",
          "---------------"
        ]
      }
    }
  ]
}