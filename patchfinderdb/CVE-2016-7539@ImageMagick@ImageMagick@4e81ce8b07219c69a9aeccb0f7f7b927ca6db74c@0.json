{
  "cve_id": "CVE-2016-7539",
  "cve_desc": "Memory leak in AcquireVirtualMemory in ImageMagick before 7 allows remote attackers to cause a denial of service (memory consumption) via unspecified vectors.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "4e81ce8b07219c69a9aeccb0f7f7b927ca6db74c",
  "patch_info": {
    "commit_hash": "4e81ce8b07219c69a9aeccb0f7f7b927ca6db74c",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/4e81ce8b07219c69a9aeccb0f7f7b927ca6db74c",
    "files": [
      "magick/cache.c"
    ],
    "message": "http://www.imagemagick.org/discourse-server/viewtopic.php?f=2&t=28946",
    "before_after_code_files": [
      "magick/cache.c||magick/cache.c"
    ]
  },
  "patch_diff": {
    "magick/cache.c||magick/cache.c": [
      "File: magick/cache.c -> magick/cache.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3371:   {",
      "3372:     if ((p == (PixelPacket *) NULL) || (r == (const PixelPacket *) NULL))",
      "3373:       break;",
      "3387:   }",
      "3388:   clip_nexus=DestroyPixelCacheNexus(clip_nexus,1);",
      "3389:   image_nexus=DestroyPixelCacheNexus(image_nexus,1);",
      "",
      "[Removed Lines]",
      "3374:     SetMagickPixelPacket(image,p,indexes+i,&alpha);",
      "3375:     SetMagickPixelPacket(image,q,nexus_indexes+i,&beta);",
      "3376:     MagickPixelCompositeMask(&beta,GetPixelIntensity(image,r),&alpha,",
      "3377:       alpha.opacity,&beta);",
      "3378:     SetPixelRed(q,ClampToQuantum(beta.red));",
      "3379:     SetPixelGreen(q,ClampToQuantum(beta.green));",
      "3380:     SetPixelBlue(q,ClampToQuantum(beta.blue));",
      "3381:     SetPixelOpacity(q,ClampToQuantum(beta.opacity));",
      "3382:     if (cache_info->active_index_channel != MagickFalse)",
      "3383:       SetPixelIndex(nexus_indexes+i,GetPixelIndex(indexes+i));",
      "3384:     p++;",
      "3385:     q++;",
      "3386:     r++;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3603:   MagickStatusType",
      "3604:     status;",
      "3607:     columns,",
      "3608:     packet_size;",
      "",
      "[Removed Lines]",
      "3606:   size_t",
      "",
      "[Added Lines]",
      "3593:   size_t",
      "3594:     columns,",
      "3595:     packet_size;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f4367385e0b631268338d0029c5cdad6251f669f",
      "candidate_info": {
        "commit_hash": "f4367385e0b631268338d0029c5cdad6251f669f",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/f4367385e0b631268338d0029c5cdad6251f669f",
        "files": [
          "MagickCore/cache.c"
        ],
        "message": "http://www.imagemagick.org/discourse-server/viewtopic.php?f=2&t=28946",
        "before_after_code_files": [
          "MagickCore/cache.c||MagickCore/cache.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "MagickCore/cache.c||MagickCore/cache.c": [
          "File: MagickCore/cache.c -> MagickCore/cache.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3169: %",
          "3170: %    o cache: the pixel cache.",
          "3171: %",
          "3185:     return((Quantum *) NULL);",
          "3186:   return((const Quantum *) nexus_info->pixels);",
          "3187: }",
          "",
          "[Removed Lines]",
          "3172: %    o nexus_info: the cache nexus to return the colormap pixels.",
          "3173: %",
          "3175: MagickPrivate const Quantum *GetVirtualPixelsNexus(const Cache cache,",
          "3176:   NexusInfo *magick_restrict nexus_info)",
          "3177: {",
          "3178:   CacheInfo",
          "3181:   assert(cache != (Cache) NULL);",
          "3182:   cache_info=(CacheInfo *) cache;",
          "3183:   assert(cache_info->signature == MagickCoreSignature);",
          "3184:   if (cache_info->storage_class == UndefinedClass)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3411:   if ((image->columns == 0) || (image->rows == 0))",
          "3412:     ThrowBinaryException(CacheError,\"NoPixelsDefinedInCache\",image->filename);",
          "3413:   cache_info=(CacheInfo *) image->cache;",
          "3415:   if ((AcquireMagickResource(WidthResource,image->columns) == MagickFalse) ||",
          "3416:       (AcquireMagickResource(HeightResource,image->rows) == MagickFalse))",
          "3417:     ThrowBinaryException(ResourceLimitError,\"PixelCacheAllocationFailed\",",
          "",
          "[Removed Lines]",
          "3414:   assert(cache_info->signature == MagickCoreSignature);",
          "",
          "[Added Lines]",
          "3401:   assert(cache_info->signature == MagickCoreSignature);",
          "3402:   if ((AcquireMagickResource(WidthResource,image->columns) == MagickFalse) ||",
          "3403:       (AcquireMagickResource(HeightResource,image->rows) == MagickFalse))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3603:             {",
          "3604:               cache_info->type=DiskCache;",
          "3605:               cache_info->pixels=source_info.pixels;",
          "3608:             {",
          "3610:                 Create file-backed memory-mapped pixel cache.",
          "",
          "[Removed Lines]",
          "3606:             }",
          "3607:           else",
          "",
          "[Added Lines]",
          "3595:             }",
          "3596:           else",
          "",
          "---------------"
        ]
      }
    }
  ]
}