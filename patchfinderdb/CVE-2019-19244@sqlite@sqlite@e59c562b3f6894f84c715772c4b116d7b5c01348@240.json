{
  "cve_id": "CVE-2019-19244",
  "cve_desc": "sqlite3Select in select.c in SQLite 3.30.1 allows a crash if a sub-select uses both DISTINCT and window functions, and also has certain ORDER BY usage.",
  "repo": "sqlite/sqlite",
  "patch_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
  "patch_info": {
    "commit_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/e59c562b3f6894f84c715772c4b116d7b5c01348",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/window1.test"
    ],
    "message": "Fix a crash that could occur if a sub-select that uses both DISTINCT and window functions also used an ORDER BY that is the same as its select list.\n\nFossilOrigin-Name: bcdd66c1691955c697f3d756c2b035acfe98f6aad72e90b0021bab6e9023b3ba",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/window1.test||test/window1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 6a64fb6a2da6c98f1e87b55ad5689967e1db4eae2e08345471d95e28cd567e0f",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "6065:   if( (p->selFlags & (SF_Distinct|SF_Aggregate))==SF_Distinct",
      "6066:    && sqlite3ExprListCompare(sSort.pOrderBy, pEList, -1)==0",
      "6067:   ){",
      "6068:     p->selFlags &= ~SF_Distinct;",
      "6069:     pGroupBy = p->pGroupBy = sqlite3ExprListDup(db, pEList, 0);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6067:    && p->pWin==0",
      "",
      "---------------"
    ],
    "test/window1.test||test/window1.test": [
      "File: test/window1.test -> test/window1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "1243:   ALTER TABLE a0 RENAME TO S;",
      "1244: } {1 {error in view a: 1st ORDER BY term does not match any column in the result set}}",
      "1246: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1246: reset_db",
      "1247: do_execsql_test 33.1 {",
      "1248:   CREATE TABLE t1(aa, bb);",
      "1249:   INSERT INTO t1 VALUES(1, 2);",
      "1250:   INSERT INTO t1 VALUES(5, 6);",
      "1251:   CREATE TABLE t2(x);",
      "1252:   INSERT INTO t2 VALUES(1);",
      "1253: }",
      "1254: do_execsql_test 33.2 {",
      "1255:   SELECT (SELECT DISTINCT sum(aa) OVER() FROM t1 ORDER BY 1), x FROM t2",
      "1256:   ORDER BY 1;",
      "1257: } {6 1}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c0b42437ab69d01daa61bd77f74badb95c82bd40",
      "candidate_info": {
        "commit_hash": "c0b42437ab69d01daa61bd77f74badb95c82bd40",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/c0b42437ab69d01daa61bd77f74badb95c82bd40",
        "files": [
          "ext/misc/dbdata.c",
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Fix a locking-page related problem with the \".recover\" command.\n\nFossilOrigin-Name: afdae10424f0f3d0f10a4b73e9732aa55c5ee664814d8ca0edd372cfb17c2445",
        "before_after_code_files": [
          "ext/misc/dbdata.c||ext/misc/dbdata.c",
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/misc/dbdata.c||ext/misc/dbdata.c": [
          "File: ext/misc/dbdata.c -> ext/misc/dbdata.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "92:   sqlite3_int64 iRowid;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92:   int szDb;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "303:   sqlite3_bind_int64(pStmt, 2, pgno);",
          "304:   if( SQLITE_ROW==sqlite3_step(pStmt) ){",
          "305:     int nCopy = sqlite3_column_bytes(pStmt, 0);",
          "314:     }",
          "315:   }",
          "316:   rc2 = sqlite3_reset(pStmt);",
          "319:   return rc;",
          "320: }",
          "",
          "[Removed Lines]",
          "306:     u8 *pPage = (u8*)sqlite3_malloc64(nCopy);",
          "307:     if( pPage==0 ){",
          "308:       rc = SQLITE_NOMEM;",
          "309:     }else{",
          "310:       const u8 *pCopy = sqlite3_column_blob(pStmt, 0);",
          "311:       memcpy(pPage, pCopy, nCopy);",
          "317:   if( *ppPage==0 ) rc = rc2;",
          "",
          "[Added Lines]",
          "307:     if( nCopy>0 ){",
          "308:       u8 *pPage;",
          "309:       pPage = (u8*)sqlite3_malloc64(nCopy);",
          "310:       if( pPage==0 ){",
          "311:         rc = SQLITE_NOMEM;",
          "312:       }else{",
          "313:         const u8 *pCopy = sqlite3_column_blob(pStmt, 0);",
          "314:         memcpy(pPage, pCopy, nCopy);",
          "315:       }",
          "321:   if( rc==SQLITE_OK ) rc = rc2;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "419:     int iOff = (pCsr->iPgno==1 ? 100 : 0);",
          "421:     if( pCsr->aPage==0 ){",
          "424:       pCsr->iCell = pTab->bPtr ? -2 : 0;",
          "425:       pCsr->nCell = get_uint16(&pCsr->aPage[iOff+3]);",
          "426:     }",
          "",
          "[Removed Lines]",
          "422:       rc = dbdataLoadPage(pCsr, pCsr->iPgno, &pCsr->aPage, &pCsr->nPage);",
          "423:       if( rc!=SQLITE_OK || pCsr->aPage==0 ) return rc;",
          "",
          "[Added Lines]",
          "426:       while( 1 ){",
          "427:         if( pCsr->bOnePage==0 && pCsr->iPgno>pCsr->szDb ) return SQLITE_OK;",
          "428:         rc = dbdataLoadPage(pCsr, pCsr->iPgno, &pCsr->aPage, &pCsr->nPage);",
          "429:         if( rc!=SQLITE_OK ) return rc;",
          "430:         if( pCsr->aPage ) break;",
          "431:         pCsr->iPgno++;",
          "432:       }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "574:   return pCsr->aPage==0;",
          "575: }",
          "579: static int dbdataFilter(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "586: static int dbdataDbsize(DbdataCursor *pCsr, const char *zSchema){",
          "587:   DbdataTable *pTab = (DbdataTable*)pCsr->base.pVtab;",
          "588:   char *zSql = 0;",
          "589:   int rc, rc2;",
          "590:   sqlite3_stmt *pStmt = 0;",
          "592:   zSql = sqlite3_mprintf(\"PRAGMA %Q.page_count\", zSchema);",
          "593:   if( zSql==0 ) return SQLITE_NOMEM;",
          "594:   rc = sqlite3_prepare_v2(pTab->db, zSql, -1, &pStmt, 0);",
          "595:   sqlite3_free(zSql);",
          "596:   if( rc==SQLITE_OK && sqlite3_step(pStmt)==SQLITE_ROW ){",
          "597:     pCsr->szDb = sqlite3_column_int(pStmt, 0);",
          "598:   }",
          "599:   rc2 = sqlite3_finalize(pStmt);",
          "600:   if( rc==SQLITE_OK ) rc = rc2;",
          "601:   return rc;",
          "602: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "594:   if( idxNum & 0x02 ){",
          "595:     pCsr->iPgno = sqlite3_value_int(argv[(idxNum & 0x01)]);",
          "596:     pCsr->bOnePage = 1;",
          "597:   }",
          "607:   }",
          "608:   if( rc==SQLITE_OK ){",
          "609:     rc = sqlite3_bind_text(pCsr->pStmt, 1, zSchema, -1, SQLITE_TRANSIENT);",
          "",
          "[Removed Lines]",
          "599:   if( pTab->pStmt ){",
          "600:     pCsr->pStmt = pTab->pStmt;",
          "601:     pTab->pStmt = 0;",
          "602:   }else{",
          "603:     rc = sqlite3_prepare_v2(pTab->db,",
          "604:         \"SELECT data FROM sqlite_dbpage(?) WHERE pgno=?\", -1,",
          "605:         &pCsr->pStmt, 0",
          "606:     );",
          "",
          "[Added Lines]",
          "624:   }else{",
          "625:     pCsr->nPage = dbdataDbsize(pCsr, zSchema);",
          "626:     rc = dbdataDbsize(pCsr, zSchema);",
          "629:   if( rc==SQLITE_OK ){",
          "630:     if( pTab->pStmt ){",
          "631:       pCsr->pStmt = pTab->pStmt;",
          "632:       pTab->pStmt = 0;",
          "633:     }else{",
          "634:       rc = sqlite3_prepare_v2(pTab->db,",
          "635:           \"SELECT data FROM sqlite_dbpage(?) WHERE pgno=?\", -1,",
          "636:           &pCsr->pStmt, 0",
          "637:       );",
          "638:     }",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 1da302d85d7ad4ba54f877117a45d667439fd2ef31dc70ea1d54dc1fba196e68",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "6165:   }",
          "6166: }",
          "6168: static void *shellMalloc(int *pRc, sqlite3_int64 nByte){",
          "6169:   void *pRet = 0;",
          "6170:   if( *pRc==SQLITE_OK ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6168: static void shellExecPrintf(sqlite3 *db, int *pRc, const char *zFmt, ...){",
          "6169:   char *z = 0;",
          "6170:   if( *pRc==SQLITE_OK ){",
          "6171:     va_list ap;",
          "6172:     va_start(ap, zFmt);",
          "6173:     z = sqlite3_vmprintf(zFmt, ap);",
          "6174:     va_end(ap);",
          "6175:     if( z==0 ){",
          "6177:     }else{",
          "6178:       shellExec(db, pRc, z);",
          "6179:     }",
          "6180:     sqlite3_free(z);",
          "6181:   }",
          "6182: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6416:     if( n<=17 && memcmp(\"-freelist-corrupt\", z, n)==0 ){",
          "6417:       bFreelist = 0;",
          "6418:     }",
          "6419:     else{",
          "6424:       return 1;",
          "6425:     }",
          "6426:   }",
          "6432:     \"CREATE TABLE recovery.dbptr(\"",
          "6433:     \"      pgno, child, PRIMARY KEY(child, pgno)\"",
          "6434:     \") WITHOUT ROWID;\"",
          "",
          "[Removed Lines]",
          "6420:       raw_printf(stderr,",
          "6421:         \"unexpected option: %s - expected \\\"--freelist-corrupt\\\"\\n\",",
          "6422:         azArg[i]",
          "6423:       );",
          "6428:   shellExec(pState->db, &rc,",
          "6431:     \"ATTACH '' AS recovery;\"",
          "6435:     \"INSERT OR IGNORE INTO dbptr(pgno, child) SELECT * FROM sqlite_dbptr;\"",
          "",
          "[Added Lines]",
          "6436:     if( n<=12 && memcmp(\"-recovery-db\", z, n)==0 && i<(nArg-1) ){",
          "6437:       i++;",
          "6438:       zRecoveryDb = azArg[i];",
          "6439:     }",
          "6441:       raw_printf(stderr, \"unexpected option: %s\\n\", azArg[i]);",
          "6442:       raw_printf(stderr, \"options are:\\n\");",
          "6443:       raw_printf(stderr, \"    --freelist-corrupt\\n\");",
          "6444:       raw_printf(stderr, \"    --recovery-db DATABASE\\n\");",
          "6449:   shellExecPrintf(pState->db, &rc,",
          "6452:     \"ATTACH %Q AS recovery;\"",
          "6453:     \"DROP TABLE IF EXISTS recovery.dbptr;\"",
          "6454:     \"DROP TABLE IF EXISTS recovery.freelist;\"",
          "6455:     \"DROP TABLE IF EXISTS recovery.map;\"",
          "6456:     \"DROP TABLE IF EXISTS recovery.schema;\"",
          "6460:     \"INSERT OR IGNORE INTO recovery.dbptr(pgno, child) \"",
          "6461:     \"    SELECT * FROM sqlite_dbptr;\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6445:     \"  SELECT child FROM recovery.dbptr GROUP BY child HAVING count(*)>1\"",
          "6446:     \");\"",
          "6449:   );",
          "6451:   if( bFreelist ){",
          "",
          "[Removed Lines]",
          "6448:     \"CREATE TABLE recovery.freelist(pgno INTEGER PRIMARY KEY);\"",
          "",
          "[Added Lines]",
          "6474:     \"CREATE TABLE recovery.freelist(pgno INTEGER PRIMARY KEY);\", zRecoveryDb",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dd579233e80a3304eb64544e9fb1876aa5005bff",
      "candidate_info": {
        "commit_hash": "dd579233e80a3304eb64544e9fb1876aa5005bff",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/dd579233e80a3304eb64544e9fb1876aa5005bff",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix another buffer overread in fts5 that may occur when accessing a corrupt database.\n\nFossilOrigin-Name: 760d14374d40bcd9ce3a89771c18dc236c9728553c4747c9b7452ee7b24f4140",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3104:   Fts5Colset *pColset,",
          "3105:   Fts5Buffer *pBuf",
          "3106: ){",
          "3108:     if( pColset==0 ){",
          "3109:       fts5ChunkIterate(p, pSeg, (void*)pBuf, fts5PoslistCallback);",
          "3110:     }else{",
          "",
          "[Removed Lines]",
          "3107:   if( 0==fts5BufferGrow(&p->rc, pBuf, pSeg->nPos) ){",
          "",
          "[Added Lines]",
          "3107:   if( 0==fts5BufferGrow(&p->rc, pBuf, pSeg->nPos+FTS5_DATA_ZERO_PADDING) ){",
          "3108:     memset(&pBuf->p[pBuf->n+pSeg->nPos], 0, FTS5_DATA_ZERO_PADDING);",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "6423:   WHERE rank MATCH 'bm25(1.0, 1.0)' ORDER BY rank;",
          "6424: } {1 {database disk image is malformed}}",
          "6427: sqlite3_fts5_may_be_corrupt 0",
          "6428: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6426: #--------------------------------------------------------------------------",
          "6427: reset_db",
          "6428: do_test 48.0 {",
          "6429:   sqlite3 db {}",
          "6430:   db deserialize [decode_hexdb {",
          "6431: | size 32768 pagesize 4096 filename crash-44a8305b4bd86f.db",
          "6432: | page 1 offset 0",
          "6433: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "6434: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 08   .....@  ........",
          "6435: |     32: 00 00 00 02 00 00 00 01 00 00 00 09 00 00 00 04   ................",
          "6436: |     48: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "6437: |     96: 00 00 00 00 0d 0f c7 00 07 0d 92 00 0f 8d 0f 36   ...............6",
          "6438: |    112: 0e cb 0e 6b 0e 0e 0d b6 0d 92 0d 92 00 00 00 00   ...k............",
          "6439: |   3472: 00 00 22 08 06 17 11 11 01 31 74 61 62 6c 65 74   .........1tablet",
          "6440: |   3488: 32 74 32 08 43 52 45 41 54 45 20 54 41 42 4c 45   2t2.CREATE TABLE",
          "6441: |   3504: 20 74 32 28 78 29 56 07 06 17 1f 1f 01 7d 74 61    t2(x)V.......ta",
          "6442: |   3520: 62 6c 65 74 31 5f 63 6f 6e 66 69 67 74 31 5f 63   blet1_configt1_c",
          "6443: |   3536: 6f 6e 66 69 67 07 43 52 45 41 54 45 20 54 41 42   onfig.CREATE TAB",
          "6444: |   3552: 4c 45 20 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b   LE 't1_config'(k",
          "6445: |   3568: 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29    PRIMARY KEY, v)",
          "6446: |   3584: 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5b 06    WITHOUT ROWID[.",
          "6447: |   3600: 07 17 21 21 01 81 01 74 61 62 6c 65 74 31 5f 64   ..!!...tablet1_d",
          "6448: |   3616: 6f 63 73 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65   ocsizet1_docsize",
          "6449: |   3632: 06 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74   .CREATE TABLE 't",
          "6450: |   3648: 31 5f 64 6f 63 73 69 7a 65 27 28 69 64 20 49 4e   1_docsize'(id IN",
          "6451: |   3664: 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45   TEGER PRIMARY KE",
          "6452: |   3680: 59 2c 20 73 7a 20 42 4c 4f 42 29 5e 05 07 17 21   Y, sz BLOB)^...!",
          "6453: |   3696: 21 01 81 07 74 61 62 6c 65 74 31 5f 63 6f 6e 74   !...tablet1_cont",
          "6454: |   3712: 65 6e 74 74 31 5f 63 6f 6e 74 65 6e 74 05 43 52   entt1_content.CR",
          "6455: |   3728: 45 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63   EATE TABLE 't1_c",
          "6456: |   3744: 6f 6e 74 65 6e 74 27 28 69 64 20 49 4e 54 45 47   ontent'(id INTEG",
          "6457: |   3760: 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20   ER PRIMARY KEY,",
          "6458: |   3776: 63 30 2c 20 63 31 2c 20 63 32 29 69 04 07 17 19   c0, c1, c2)i....",
          "6459: |   3792: 19 01 81 2d 74 61 62 6c 65 74 31 5f 69 64 78 74   ...-tablet1_idxt",
          "6460: |   3808: 31 5f 69 64 78 04 43 52 45 41 54 45 20 54 41 42   1_idx.CREATE TAB",
          "6461: |   3824: 4c 45 20 27 74 31 5f 69 64 78 27 28 73 65 67 69   LE 't1_idx'(segi",
          "6462: |   3840: 64 2c 20 74 65 72 6d 2c 20 70 67 6e 6f 2c 20 50   d, term, pgno, P",
          "6463: |   3856: 52 49 4d 41 52 59 20 4b 45 59 28 73 65 67 69 64   RIMARY KEY(segid",
          "6464: |   3872: 2c 20 74 65 72 6d 29 29 20 57 49 54 48 4f 55 54   , term)) WITHOUT",
          "6465: |   3888: 20 52 4f 57 49 44 55 03 07 17 1b 1b 01 81 01 74    ROWIDU........t",
          "6466: |   3904: 61 62 6c 65 74 31 5f 64 61 74 61 74 31 5f 64 61   ablet1_datat1_da",
          "6467: |   3920: 74 61 03 43 52 45 41 54 45 20 54 41 42 4c 45 20   ta.CREATE TABLE",
          "6468: |   3936: 27 74 31 5f 64 61 74 61 27 28 69 64 20 49 4e 54   't1_data'(id INT",
          "6469: |   3952: 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59   EGER PRIMARY KEY",
          "6470: |   3968: 2c 20 62 6c 6f 63 6b 20 42 4c 4f 42 29 38 02 06   , block BLOB)8..",
          "6471: |   3984: 17 11 11 08 5f 74 61 62 6c 65 74 31 74 31 43 52   ...._tablet1t1CR",
          "6472: |   4000: 45 41 54 45 20 56 49 52 54 55 41 4c 20 54 41 42   EATE VIRTUAL TAB",
          "6473: |   4016: 4c 45 20 74 31 20 55 53 49 4e 47 20 66 74 73 35   LE t1 USING fts5",
          "6474: |   4032: 28 61 2c 62 2c 63 29 00 00 00 39 00 00 00 00 00   (a,b,c)...9.....",
          "6475: | page 3 offset 8192",
          "6476: |      0: 0d 00 00 00 03 0c 94 00 0f e6 0f ef 0c 94 00 00   ................",
          "6477: |   3216: 00 00 00 00 86 4a 84 80 80 80 80 01 04 00 8d 18   .....J..........",
          "6478: |   3232: 00 00 03 2b 02 30 30 01 02 06 01 02 06 01 02 06   ...+.00.........",
          "6479: |   3248: 1f 02 03 01 02 03 01 02 03 01 08 32 30 31 36 30   ...........20160",
          "6480: |   3264: 36 30 39 01 02 07 01 02 07 01 02 07 01 01 34 01   609...........4.",
          "6481: |   3280: 02 05 01 02 05 01 02 05 01 01 35 01 02 04 01 02   ..........5.....",
          "6482: |   3296: 04 01 02 04 02 07 30 30 30 30 30 30 30 1c 02 04   ......0000000...",
          "6483: |   3312: 01 02 04 01 02 04 01 06 62 69 6e 62 72 79 03 06   ........binbry..",
          "6484: |   3328: 01 02 02 03 06 01 02 02 03 06 01 02 01 03 16 01   ................",
          "6485: |   3344: 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02   ................",
          "6486: |   3360: 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02 02   ................",
          "6487: |   3376: 03 04 71 02 02 03 06 01 02 02 01 08 63 6f 6d 70   ..q.........comp",
          "6488: |   3392: 69 6c 65 72 01 02 02 01 02 02 01 02 02 01 06 64   iler...........d",
          "6489: |   3408: 62 73 74 61 74 07 02 03 01 02 03 01 02 03 02 04   bstat...........",
          "6490: |   3424: 65 62 75 67 04 02 02 01 02 02 01 02 02 01 06 65   ebug...........e",
          "6491: |   3440: 6e 61 62 6c 65 07 02 02 01 02 02 01 02 02 01 02   nable...........",
          "6492: |   3456: 02 01 02 02 01 02 02 01 02 02 01 02 02 01 03 02   ................",
          "6493: |   3472: 01 02 02 01 02 02 01 02 02 01 02 02 01 02 02 01   ................",
          "6494: |   3488: 02 02 01 02 02 01 02 02 01 02 02 01 02 02 01 02   ................",
          "6495: |   3504: 02 01 02 02 02 08 78 74 65 6e 73 69 6f 6e 1f 02   ......xtension..",
          "6496: |   3520: 04 01 02 04 01 02 04 01 04 66 74 73 34 0a 02 03   .........fts4...",
          "6497: |   3536: 01 02 03 01 02 03 04 01 35 0d 02 03 01 02 03 01   ........5.......",
          "6498: |   3552: 02 03 01 03 67 63 63 01 02 03 01 02 03 01 02 03   ....gcc.........",
          "6499: |   3568: 02 06 65 6f 70 6f 6c 79 10 02 03 01 02 03 01 02   ..eopoly........",
          "6500: |   3584: 03 01 05 6a 73 6f 6e 31 13 02 03 01 02 03 01 02   ...json1........",
          "6501: |   3600: 03 01 04 6c 6f 61 64 1f 02 03 01 02 03 01 02 03   ...load.........",
          "6502: |   3616: 01 03 6d 61 78 1c 02 02 01 02 02 01 02 02 02 05   ..max...........",
          "6503: |   3632: 65 6d 6f 72 79 1c 02 03 01 02 03 01 02 03 04 04   emory...........",
          "6504: |   3648: 73 79 73 35 16 02 03 01 02 03 01 02 03 01 06 6e   sys5...........n",
          "6505: |   3664: 6f 63 61 73 65 02 06 01 02 02 03 06 01 02 02 03   ocase...........",
          "6506: |   3680: 06 01 02 02 03 06 01 02 02 03 06 01 02 02 13 06   ................",
          "6507: |   3696: 01 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01   ................",
          "6508: |   3712: 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02   ................",
          "6509: |   3728: 02 01 04 6f 6d 69 74 1f 02 02 01 02 02 01 02 02   ...omit.........",
          "6510: |   3744: 01 05 72 74 72 65 65 19 02 03 01 02 03 01 02 03   ..rtree.........",
          "6511: |   3760: 04 02 69 6d 01 06 01 02 02 03 06 01 02 02 03 06   ..im............",
          "6512: |   3776: 01 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01   ................",
          "6513: |   3792: 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02   ................",
          "6514: |   3808: 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02 02   ................",
          "6515: |   3824: 01 0a 74 68 72 65 61 64 73 61 66 65 22 02 02 01   ..threadsafe....",
          "6516: |   3840: 02 02 01 02 02 01 04 76 74 61 62 07 02 04 01 02   .......vtab.....",
          "6517: |   3856: 04 01 02 04 01 01 78 01 06 01 01 02 01 06 01 01   ......x.........",
          "6518: |   3872: 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02   ................",
          "6519: |   3888: 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01   ................",
          "6520: |   3904: 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06   ................",
          "6521: |   3920: 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01   ................",
          "6522: |   3936: 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01   ................",
          "6523: |   3952: 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02   ................",
          "6524: |   3968: 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01   ................",
          "6525: |   3984: 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06   ................",
          "6526: |   4000: 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01   ................",
          "6527: |   4016: 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01   ................",
          "6528: |   4032: 02 01 06 01 01 02 01 06 01 01 02 04 15 13 0c 0c   ................",
          "6529: |   4048: 12 44 13 11 0f 47 13 0f 0c 0e 11 10 0f 0e 10 0f   .D...G..........",
          "6530: |   4064: 44 0f 10 40 15 0f 07 01 03 00 14 24 5a 24 24 0f   D..@.......$Z$$.",
          "6531: |   4080: 0a 03 00 24 00 00 00 00 01 01 01 00 01 01 01 01   ...$............",
          "6532: | page 4 offset 12288",
          "6533: |      0: 0a 00 00 00 01 0f fa 00 0f fa 00 00 00 00 00 00   ................",
          "6534: |   4080: 00 00 00 00 00 00 00 00 00 00 05 04 09 0b 01 02   ................",
          "6535: | page 5 offset 16384",
          "6536: |      0: 0d 00 00 00 24 0c 0a 00 0f d8 0f af 0f 86 0f 74   ....$..........t",
          "6537: |     16: 0f 61 0f 4e 0f 2f 0f 0f 0e ef 0e d7 0e be 0e a5   .a.N./..........",
          "6538: |     32: 0e 8d 0e 74 0e 5b 0e 40 0e 24 0e 08 0d ef 0d d5   ...t.[.@.$......",
          "6539: |     48: 0d bb 0d a0 0d 84 0d 68 0d 4f 0d 35 0d 1b 0c fb   .......h.O.5....",
          "6540: |     64: 0c da 0c b9 0c 99 0c 78 0c 57 0c 3e 0c 24 0c 0a   .......x.W.>.$..",
          "6541: |   3072: 00 00 00 00 00 00 00 00 00 00 18 24 05 00 25 0f   ...........$..%.",
          "6542: |   3088: 19 54 48 52 45 41 44 53 41 46 45 3d 30 58 42 49   .THREADSAFE=0XBI",
          "6543: |   3104: 4f 41 52 59 18 23 05 00 25 0f 19 54 48 52 45 41   OARY.#..%..THREA",
          "6544: |   3120: 44 53 41 46 45 3d 30 58 4e 4f 43 41 53 45 17 22   DSAFE=0XNOCASE..",
          "6545: |   3136: 05 00 25 0f 17 54 48 52 45 41 44 53 41 46 45 3d   ..%..THREADSAFE=",
          "6546: |   3152: 30 58 52 54 52 49 4d 1f 21 05 00 33 0f 19 4f 4d   0XRTRIM.!..3..OM",
          "6547: |   3168: 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49 4f   IT LOAD EXTENSIO",
          "6548: |   3184: 4e 58 42 49 4e 41 52 59 1f 20 05 00 33 0f 19 4f   NXBINARY. ..3..O",
          "6549: |   3200: 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49   MIT LOAD EXTENSI",
          "6550: |   3216: 4f 4e 58 4e 4f 43 41 53 45 1e 1f 05 00 33 0f 17   ONXNOCASE....3..",
          "6551: |   3232: 4f 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53   OMIT LOAD EXTENS",
          "6552: |   3248: 49 4f 4e 58 52 54 52 49 4d 1f 1e 05 00 33 0f 19   IONXRTRIM....3..",
          "6553: |   3264: 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30 30   MAX MEMORY=50000",
          "6554: |   3280: 30 30 30 58 42 49 4e 41 52 59 1f 1d 05 00 33 0f   000XBINARY....3.",
          "6555: |   3296: 19 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30   .MAX MEMORY=5000",
          "6556: |   3312: 30 30 30 30 58 4e 4f 43 41 53 45 1e 1c 05 00 33   0000XNOCASE....3",
          "6557: |   3328: 0f 17 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30   ..MAX MEMORY=500",
          "6558: |   3344: 30 30 30 30 30 58 52 54 52 49 4d 18 1b 05 00 25   00000XRTRIM....%",
          "6559: |   3360: 0f 19 45 4e 41 42 4c 45 20 52 54 52 45 45 58 42   ..ENABLE RTREEXB",
          "6560: |   3376: 49 4e 41 52 59 18 1a 05 00 25 0f 19 45 4e 41 42   INARY....%..ENAB",
          "6561: |   3392: 4c 45 20 52 54 52 46 45 58 4e 4f 43 41 53 45 17   LE RTRFEXNOCASE.",
          "6562: |   3408: 19 05 00 25 0f 17 45 4e 41 42 4c 45 20 52 54 52   ...%..ENABLE RTR",
          "6563: |   3424: 45 45 58 52 54 52 49 4d 1a 18 05 00 29 0f 19 45   EEXRTRIM....)..E",
          "6564: |   3440: 4e 41 42 4c 45 20 4d 45 4d 53 59 53 35 58 42 49   NABLE MEMSYS5XBI",
          "6565: |   3456: 4e 41 52 59 1a 17 05 00 29 0f 19 45 4e 41 42 4c   NARY....)..ENABL",
          "6566: |   3472: 45 20 4d 45 4d 53 59 53 35 58 4e 4f 43 41 53 45   E MEMSYS5XNOCASE",
          "6567: |   3488: 19 16 05 00 29 0f 17 45 4e 41 42 4c 45 20 4d 45   ....)..ENABLE ME",
          "6568: |   3504: 4d 53 59 53 35 58 52 54 52 49 4d 18 15 05 00 25   MSYS5XRTRIM....%",
          "6569: |   3520: 0f 19 45 4e 41 42 4c 45 20 4a 53 4f 4e 31 58 42   ..ENABLE JSON1XB",
          "6570: |   3536: 49 4e 41 52 59 18 14 05 00 25 0f 19 45 4e 41 42   INARY....%..ENAB",
          "6571: |   3552: 4c 45 20 4a 53 4f 4e 31 58 4e 4f 43 41 53 45 17   LE JSON1XNOCASE.",
          "6572: |   3568: 13 05 00 25 0f 17 45 4e 41 42 4c 45 20 4a 53 4f   ...%..ENABLE JSO",
          "6573: |   3584: 4e 31 58 52 54 52 49 4d 1a 12 05 00 29 0f 19 45   N1XRTRIM....)..E",
          "6574: |   3600: 4e 41 42 4c 45 20 47 45 4f 50 4f 4c 59 57 42 49   NABLE GEOPOLYWBI",
          "6575: |   3616: 4e 41 52 59 1a 11 05 00 29 0f 19 45 4e 41 42 4c   NARY....)..ENABL",
          "6576: |   3632: 45 20 47 45 4f 50 4f 4c 59 58 4e 4f 42 41 53 45   E GEOPOLYXNOBASE",
          "6577: |   3648: 19 10 05 00 29 0f 17 45 4e 41 42 4c 45 20 47 45   ....)..ENABLE GE",
          "6578: |   3664: 4f 50 4f 4c 59 58 52 54 52 49 4d 17 0f 05 00 23   OPOLYXRTRIM....#",
          "6579: |   3680: 0f 19 45 4e 41 42 4c 45 20 46 54 53 35 58 42 49   ..ENABLE FTS5XBI",
          "6580: |   3696: 4e 41 52 59 17 0e 05 00 23 0f 19 45 4e 41 42 4c   NARY....#..ENABL",
          "6581: |   3712: 45 20 46 54 53 35 58 4e 4f 43 41 53 45 16 0d 05   E FTS5XNOCASE...",
          "6582: |   3728: 00 23 0f 17 45 4e 41 42 4c 45 20 46 54 53 35 58   .#..ENABLE FTS5X",
          "6583: |   3744: 52 54 52 49 4d 17 0c 05 00 23 0f 19 45 4e 41 42   RTRIM....#..ENAB",
          "6584: |   3760: 4c 45 20 46 54 53 34 58 42 49 4e 41 52 59 17 0b   LE FTS4XBINARY..",
          "6585: |   3776: 05 00 23 0f 19 45 4e 41 42 4c 45 20 46 54 53 34   ..#..ENABLE FTS4",
          "6586: |   3792: 58 4e 4f 43 41 53 45 16 0a 05 00 23 0f 17 45 4e   XNOCASE....#..EN",
          "6587: |   3808: 41 42 4c 45 20 46 54 53 34 58 52 54 52 49 4d 1e   ABLE FTS4XRTRIM.",
          "6588: |   3824: 09 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "6589: |   3840: 54 41 54 20 56 54 41 42 58 42 49 4e 41 52 59 1e   TAT VTABXBINARY.",
          "6590: |   3856: 08 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "6591: |   3872: 54 41 54 20 56 54 41 42 58 4e 4f 43 41 53 45 1d   TAT VTABXNOCASE.",
          "6592: |   3888: 07 05 00 31 0f 17 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "6593: |   3904: 54 41 54 20 66 54 41 42 58 52 54 52 49 4d 11 06   TAT fTABXRTRIM..",
          "6594: |   3920: 05 00 17 0f 19 44 45 42 55 47 58 42 49 4e 41 52   .....DEBUGXBINAR",
          "6595: |   3936: 59 11 05 05 00 17 0f 19 44 45 42 55 47 58 4e 4f   Y.......DEBUGXNO",
          "6596: |   3952: 43 41 53 45 10 04 05 00 17 0f 17 44 45 42 55 47   CASE.......DEBUG",
          "6597: |   3968: 58 62 54 52 49 4d 27 03 05 00 43 0f 19 43 4f 4d   XbTRIM'...C..COM",
          "6598: |   3984: 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e 30 20   PILER=gcc-5.4.0",
          "6599: |   4000: 32 30 31 36 30 36 30 39 52 02 49 4e 41 52 59 27   20160609R.INARY'",
          "6600: |   4016: 02 05 00 43 0f 19 43 4f 4d 50 49 4c 45 52 3d 67   ...C..COMPILER=g",
          "6601: |   4032: 63 63 2d 35 2e 34 2e 30 20 32 30 31 36 30 36 30   cc-5.4.0 2016060",
          "6602: |   4048: 39 58 4e 4f 43 41 53 45 26 01 05 00 43 0f 17 43   9XNOCASE&...C..C",
          "6603: |   4064: 4f 4d 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e   OMPILER=gcc-5.4.",
          "6604: |   4080: 30 20 32 30 31 36 30 36 30 39 58 52 54 52 49 4d   0 20160609XRTRIM",
          "6605: | page 6 offset 20480",
          "6606: |      0: 0d 00 00 00 24 0e e0 00 0f f8 0f f0 0f e8 0f e0   ....$...........",
          "6607: |     16: 0f d8 0f d0 0f c8 0f c0 0f b8 0f b0 0f a8 0f a0   ................",
          "6608: |     32: 0f 98 0f 90 0f 88 0f 80 0f 78 0f 70 0f 68 0f 60   .........x.p.h.`",
          "6609: |     48: 0f 58 0f 50 0f 48 0f 40 0f 38 0f 30 0f 28 0f 20   .X.P.H.@.8.0.(.",
          "6610: |     64: 0f 18 0f 10 0f 08 0f 00 0e f8 0e f0 0e e8 0e e0   ................",
          "6611: |   3808: 06 24 03 00 12 02 01 01 06 23 03 00 12 02 01 01   .$.......#......",
          "6612: |   3824: 06 22 03 00 12 02 01 01 06 21 03 00 12 03 01 01   .........!......",
          "6613: |   3840: 06 20 03 00 12 03 01 01 06 1f 03 00 12 03 01 01   . ..............",
          "6614: |   3856: 06 1e 03 00 12 03 01 01 06 1d 03 00 12 03 01 01   ................",
          "6615: |   3872: 06 1c 03 00 12 03 01 01 06 1b 03 00 12 02 01 01   ................",
          "6616: |   3888: 06 1a 03 00 12 02 01 01 06 19 03 00 12 02 01 01   ................",
          "6617: |   3904: 06 18 03 00 12 02 01 01 06 17 03 00 12 02 01 01   ................",
          "6618: |   3920: 06 16 03 00 12 02 01 01 06 15 03 00 12 02 01 01   ................",
          "6619: |   3936: 06 14 03 00 12 02 01 01 06 13 03 00 12 02 01 01   ................",
          "6620: |   3952: 06 12 03 00 12 02 01 01 06 11 03 00 12 02 01 01   ................",
          "6621: |   3968: 06 10 03 00 12 02 01 01 06 0f 03 00 12 02 01 01   ................",
          "6622: |   3984: 06 0e 03 00 12 02 01 01 06 0d 03 00 12 02 01 01   ................",
          "6623: |   4000: 06 0c 03 00 12 02 01 01 06 0b 03 00 12 02 01 01   ................",
          "6624: |   4016: 06 0a 03 00 12 02 01 01 06 09 03 00 12 03 01 01   ................",
          "6625: |   4032: 06 08 03 00 12 03 01 01 06 07 03 00 12 03 01 01   ................",
          "6626: |   4048: 06 06 03 00 12 01 01 01 06 05 03 00 12 01 01 01   ................",
          "6627: |   4064: 06 04 03 00 12 01 01 01 06 03 03 00 12 06 01 01   ................",
          "6628: |   4080: 06 02 03 00 12 06 01 01 06 01 03 00 12 06 01 01   ................",
          "6629: | page 7 offset 24576",
          "6630: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "6631: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "6632: | page 8 offset 28672",
          "6633: |      0: 0d 00 00 00 03 0f d6 00 0f f4 0f e9 0f d6 00 00   ................",
          "6634: |   4048: 00 00 00 00 00 00 11 03 02 2b 69 6e 74 65 67 72   .........+integr",
          "6635: |   4064: 69 74 79 2d 63 68 65 63 6b 09 02 02 1b 72 65 62   ity-check....reb",
          "6636: |   4080: 75 69 6c 64 0a 01 02 1d 6f 70 74 69 5d 69 71 a5   uild....opti]iq.",
          "6637: | end crash-44a8305b4bd86f.db",
          "6638: }]} {}",
          "6640: do_catchsql_test 48.1 {",
          "6641:   INSERT INTO t1(t1) VALUES('integrity-check');",
          "6642: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9a93c68a7673bda2e6c308d3b2798d0fb12fde399996cae24b1f0d5864adf355",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "871b13492d12c8279954ba047d992e8ef3bbfb96",
      "candidate_info": {
        "commit_hash": "871b13492d12c8279954ba047d992e8ef3bbfb96",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/871b13492d12c8279954ba047d992e8ef3bbfb96",
        "files": [
          "ext/misc/prefixes.c",
          "manifest",
          "manifest.uuid",
          "src/test1.c"
        ],
        "message": "Fix a problem preventing testfixture from being built with SQLITE_OMIT_VIRTUALTABLE.\n\nFossilOrigin-Name: d2cca36adc69d2c8e7707d70cbd75c497eae6a1a3f8a9dd18249ca6804c9db5f",
        "before_after_code_files": [
          "ext/misc/prefixes.c||ext/misc/prefixes.c",
          "manifest.uuid||manifest.uuid",
          "src/test1.c||src/test1.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/misc/prefixes.c||ext/misc/prefixes.c": [
          "File: ext/misc/prefixes.c -> ext/misc/prefixes.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #if !defined(SQLITEINT_H)",
          "23: #include \"sqlite3ext.h\"",
          "24: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #if !defined(SQLITE_CORE) || !defined(SQLITE_OMIT_VIRTUALTABLE)",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3087a0c31e9fbfaedb7cf10a2fda59bc22318ff178614aefcc00ac83d9a7bb14",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/test1.c||src/test1.c": [
          "File: src/test1.c -> src/test1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7141:   extern int sqlite3_ieee_init(sqlite3*,char**,const sqlite3_api_routines*);",
          "7142:   extern int sqlite3_nextchar_init(sqlite3*,char**,const sqlite3_api_routines*);",
          "7143:   extern int sqlite3_percentile_init(sqlite3*,char**,const sqlite3_api_routines*);",
          "7144:   extern int sqlite3_prefixes_init(sqlite3*,char**,const sqlite3_api_routines*);",
          "7145:   extern int sqlite3_regexp_init(sqlite3*,char**,const sqlite3_api_routines*);",
          "7146:   extern int sqlite3_remember_init(sqlite3*,char**,const sqlite3_api_routines*);",
          "7147:   extern int sqlite3_series_init(sqlite3*,char**,const sqlite3_api_routines*);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7144: #ifndef SQLITE_OMIT_VIRTUALTABLE",
          "7146: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7167:     { \"ieee754\",               sqlite3_ieee_init                 },",
          "7168:     { \"nextchar\",              sqlite3_nextchar_init             },",
          "7169:     { \"percentile\",            sqlite3_percentile_init           },",
          "7170:     { \"prefixes\",              sqlite3_prefixes_init             },",
          "7171:     { \"regexp\",                sqlite3_regexp_init               },",
          "7172:     { \"remember\",              sqlite3_remember_init             },",
          "7173:     { \"series\",                sqlite3_series_init               },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7172: #ifndef SQLITE_OMIT_VIRTUALTABLE",
          "7174: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e2dcc42e1f5bbbd3388ac824627116d0d6583996",
      "candidate_info": {
        "commit_hash": "e2dcc42e1f5bbbd3388ac824627116d0d6583996",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e2dcc42e1f5bbbd3388ac824627116d0d6583996",
        "files": [
          "manifest",
          "manifest.uuid",
          "tool/lemon.c"
        ],
        "message": "Fix a harmless memory leak in the Lemon parser generator utility program.\n\nFossilOrigin-Name: 1caff0fb0b2051e205e7a8cfd5dadf92680c52a88a441ded95b1ea6542db5f83",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "tool/lemon.c||tool/lemon.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ecf5caa7e9825a8b03d15ee525ec68be78c55926ddfaca27a040a7614caf0e85",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tool/lemon.c||tool/lemon.c": [
          "File: tool/lemon.c -> tool/lemon.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4675:   tplt_print(out,lemp,lemp->extracode,&lineno);",
          "4677:   fclose(in);",
          "4678:   fclose(out);",
          "4679:   return;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4677:   acttab_free(pActtab);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "efa363b84c43d63c706e7997085a2e5977aac64d",
      "candidate_info": {
        "commit_hash": "efa363b84c43d63c706e7997085a2e5977aac64d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/efa363b84c43d63c706e7997085a2e5977aac64d",
        "files": [
          "ext/misc/dbdata.c",
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Improve the performance of the .recover command.\n\nFossilOrigin-Name: a50768314d10d743a0cc013b434b516f0763e0a6c5b79655d8fefde7de53e869",
        "before_after_code_files": [
          "ext/misc/dbdata.c||ext/misc/dbdata.c",
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/misc/dbdata.c||ext/misc/dbdata.c": [
          "File: ext/misc/dbdata.c -> ext/misc/dbdata.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "169: static int dbdataDisconnect(sqlite3_vtab *pVtab){",
          "171:   return SQLITE_OK;",
          "172: }",
          "",
          "[Removed Lines]",
          "170:   sqlite3_free(pVtab);",
          "",
          "[Added Lines]",
          "171:   DbdataTable *pTab = (DbdataTable*)pVtab;",
          "172:   if( pTab ){",
          "173:     sqlite3_finalize(pTab->pStmt);",
          "174:     sqlite3_free(pVtab);",
          "175:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "189:   DbdataTable *pTab = (DbdataTable*)tab;",
          "190:   int i;",
          "191:   int iSchema = -1;",
          "192:   int iPgno = -1;",
          "193:   int colSchema = (pTab->bPtr ? DBPTR_COLUMN_SCHEMA : DBDATA_COLUMN_SCHEMA);",
          "197:     if( p->op==SQLITE_INDEX_CONSTRAINT_EQ ){",
          "198:       if( p->iColumn==colSchema ){",
          "199:         if( p->usable==0 ) return SQLITE_CONSTRAINT;",
          "",
          "[Removed Lines]",
          "188: static int dbdataBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){",
          "195:   for(i=0; i<pIdxInfo->nConstraint; i++){",
          "196:     struct sqlite3_index_constraint *p = &pIdxInfo->aConstraint[i];",
          "",
          "[Added Lines]",
          "193: static int dbdataBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdx){",
          "200:   for(i=0; i<pIdx->nConstraint; i++){",
          "201:     struct sqlite3_index_constraint *p = &pIdx->aConstraint[i];",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "206:   }",
          "208:   if( iSchema>=0 ){",
          "211:   }",
          "212:   if( iPgno>=0 ){",
          "215:   }",
          "217:   return SQLITE_OK;",
          "218: }",
          "",
          "[Removed Lines]",
          "209:     pIdxInfo->aConstraintUsage[iSchema].argvIndex = 1;",
          "210:     pIdxInfo->aConstraintUsage[iSchema].omit = 1;",
          "213:     pIdxInfo->aConstraintUsage[iPgno].argvIndex = 1 + (iSchema>=0);",
          "214:     pIdxInfo->aConstraintUsage[iPgno].omit = 1;",
          "216:   pIdxInfo->idxNum = (iSchema>=0 ? 0x01 : 0x00) | (iPgno>=0 ? 0x02 : 0x00);",
          "",
          "[Added Lines]",
          "214:     pIdx->aConstraintUsage[iSchema].argvIndex = 1;",
          "215:     pIdx->aConstraintUsage[iSchema].omit = 1;",
          "218:     pIdx->aConstraintUsage[iPgno].argvIndex = 1 + (iSchema>=0);",
          "219:     pIdx->aConstraintUsage[iPgno].omit = 1;",
          "220:     pIdx->estimatedCost = 100;",
          "221:     pIdx->estimatedRows =  50;",
          "223:     if( pTab->bPtr==0 && pIdx->nOrderBy && pIdx->aOrderBy[0].desc==0 ){",
          "224:       int iCol = pIdx->aOrderBy[0].iColumn;",
          "225:       if( pIdx->nOrderBy==1 ){",
          "226:         pIdx->orderByConsumed = (iCol==0 || iCol==1);",
          "227:       }else if( pIdx->nOrderBy==2 && pIdx->aOrderBy[1].desc==0 && iCol==0 ){",
          "228:         pIdx->orderByConsumed = (pIdx->aOrderBy[1].iColumn==1);",
          "229:       }",
          "230:     }",
          "232:   }else{",
          "233:     pIdx->estimatedCost = 100000000;",
          "234:     pIdx->estimatedRows = 1000000000;",
          "236:   pIdx->idxNum = (iSchema>=0 ? 0x01 : 0x00) | (iPgno>=0 ? 0x02 : 0x00);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "236: }",
          "238: static void dbdataResetCursor(DbdataCursor *pCsr){",
          "240:   pCsr->pStmt = 0;",
          "241:   pCsr->iPgno = 1;",
          "242:   pCsr->iCell = 0;",
          "",
          "[Removed Lines]",
          "239:   sqlite3_finalize(pCsr->pStmt);",
          "",
          "[Added Lines]",
          "259:   DbdataTable *pTab = (DbdataTable*)(pCsr->base.pVtab);",
          "260:   if( pTab->pStmt==0 ){",
          "261:     pTab->pStmt = pCsr->pStmt;",
          "262:   }else{",
          "263:     sqlite3_finalize(pCsr->pStmt);",
          "264:   }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "558: ){",
          "559:   DbdataCursor *pCsr = (DbdataCursor*)pCursor;",
          "560:   DbdataTable *pTab = (DbdataTable*)pCursor->pVtab;",
          "562:   const char *zSchema = \"main\";",
          "564:   dbdataResetCursor(pCsr);",
          "",
          "[Removed Lines]",
          "561:   int rc;",
          "",
          "[Added Lines]",
          "586:   int rc = SQLITE_OK;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "571:     pCsr->bOnePage = 1;",
          "572:   }",
          "578:   if( rc==SQLITE_OK ){",
          "579:     rc = sqlite3_bind_text(pCsr->pStmt, 1, zSchema, -1, SQLITE_TRANSIENT);",
          "580:   }else{",
          "",
          "[Removed Lines]",
          "574:   rc = sqlite3_prepare_v2(pTab->db,",
          "575:       \"SELECT data FROM sqlite_dbpage(?) WHERE pgno=?\", -1,",
          "576:       &pCsr->pStmt, 0",
          "577:   );",
          "",
          "[Added Lines]",
          "599:   if( pTab->pStmt ){",
          "600:     pCsr->pStmt = pTab->pStmt;",
          "601:     pTab->pStmt = 0;",
          "602:   }else{",
          "603:     rc = sqlite3_prepare_v2(pTab->db,",
          "604:         \"SELECT data FROM sqlite_dbpage(?) WHERE pgno=?\", -1,",
          "605:         &pCsr->pStmt, 0",
          "606:     );",
          "607:   }",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f95f0f02ab6c6cf45f25b613c7ab57f68249689d0a9eddf4c9518ddf0edad365",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "6460:     shellFinalize(&rc, pStmt);",
          "6461:   }",
          "6464:   shellPrepare(pState->db, &rc,",
          "6465:       \"SELECT root, intkey, max(maxlen) FROM recovery.map\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6465:   shellPrepare(pState->db, &rc,",
          "6466:       \"SELECT pgno FROM recovery.map WHERE root=?\", &pPages",
          "6467:   );",
          "6468:   shellPrepare(pState->db, &rc,",
          "6469:       \"SELECT max(field), group_concat(shell_escape_crnl(quote(value)), ', ')\"",
          "6470:       \"FROM sqlite_dbdata WHERE pgno = ? AND field != ?\"",
          "6471:       \"GROUP BY cell\", &pCells",
          "6472:   );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6476:     pTab = recoverNewTable(pState, &rc, iRoot, bIntkey, nCol);",
          "6477:     if( pTab ){",
          "6479:       if( 0==sqlite3_stricmp(pTab->zName, \"sqlite_sequence\") ){",
          "6480:         raw_printf(pState->out, \"DELETE FROM sqlite_sequence;\\n\");",
          "6481:       }",
          "6496:       }",
          "6498:     }",
          "6499:     recoverFreeTable(pTab);",
          "6500:   }",
          "6501:   shellFinalize(&rc, pLoop);",
          "6504:   if( rc==SQLITE_OK ){",
          "",
          "[Removed Lines]",
          "6478:       sqlite3_stmt *pData = 0;",
          "6482:       shellPreparePrintf(pState->db, &rc, &pData,",
          "6483:         \"SELECT max(field), group_concat(shell_escape_crnl(quote(value)),', ')\"",
          "6484:         \"FROM sqlite_dbdata WHERE pgno IN (\"",
          "6485:         \"  SELECT pgno FROM recovery.map WHERE root=%d\"",
          "6486:         \")\"",
          "6487:         \" AND field!=%d \"",
          "6488:         \"GROUP BY pgno, cell;\", iRoot, pTab->iPk",
          "6489:       );",
          "6490:       while( rc==SQLITE_OK && SQLITE_ROW==sqlite3_step(pData) ){",
          "6491:         int iMax = sqlite3_column_int(pData, 0);",
          "6492:         const char *zVal = (const char*)sqlite3_column_text(pData, 1);",
          "6493:         raw_printf(pState->out, \"INSERT INTO %s(%s) VALUES( %s );\\n\",",
          "6494:             pTab->zQuoted, pTab->azlCol[iMax>0?iMax:0], zVal",
          "6495:         );",
          "6497:       shellFinalize(&rc, pData);",
          "",
          "[Added Lines]",
          "6492:       sqlite3_bind_int(pPages, 1, iRoot);",
          "6493:       sqlite3_bind_int(pCells, 2, pTab->iPk);",
          "6494:       while( rc==SQLITE_OK && SQLITE_ROW==sqlite3_step(pPages) ){",
          "6495:         sqlite3_bind_int(pCells, 1, sqlite3_column_int(pPages, 0));",
          "6496:         while( rc==SQLITE_OK && SQLITE_ROW==sqlite3_step(pCells) ){",
          "6497:           int iMax = sqlite3_column_int(pCells, 0);",
          "6498:           const char *zVal = (const char*)sqlite3_column_text(pCells, 1);",
          "6499:           raw_printf(pState->out, \"INSERT INTO %s(%s) VALUES( %s );\\n\",",
          "6500:               pTab->zQuoted, pTab->azlCol[iMax>0?iMax:0], zVal",
          "6501:           );",
          "6502:         }",
          "6503:         shellReset(&rc, pCells);",
          "6505:       shellReset(&rc, pPages);",
          "6510:   shellFinalize(&rc, pPages);",
          "6511:   shellFinalize(&rc, pCells);",
          "",
          "---------------"
        ]
      }
    }
  ]
}