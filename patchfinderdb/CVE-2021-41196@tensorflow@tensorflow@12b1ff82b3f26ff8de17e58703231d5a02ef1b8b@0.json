{
  "cve_id": "CVE-2021-41196",
  "cve_desc": "TensorFlow is an open source platform for machine learning. In affected versions the Keras pooling layers can trigger a segfault if the size of the pool is 0 or if a dimension is negative. This is due to the TensorFlow's implementation of pooling operations where the values in the sliding window are not checked to be strictly positive. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "12b1ff82b3f26ff8de17e58703231d5a02ef1b8b",
  "patch_info": {
    "commit_hash": "12b1ff82b3f26ff8de17e58703231d5a02ef1b8b",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/12b1ff82b3f26ff8de17e58703231d5a02ef1b8b",
    "files": [
      "tensorflow/core/kernels/pooling_ops_3d.cc",
      "tensorflow/python/kernel_tests/pooling_ops_3d_test.py"
    ],
    "message": "Merge pull request #51975 from yongtang:51936-max_pool3d\n\nPiperOrigin-RevId: 401245519\nChange-Id: I67d2cbb0e21729b94186ca9bf82450ff93132ff2",
    "before_after_code_files": [
      "tensorflow/core/kernels/pooling_ops_3d.cc||tensorflow/core/kernels/pooling_ops_3d.cc",
      "tensorflow/python/kernel_tests/pooling_ops_3d_test.py||tensorflow/python/kernel_tests/pooling_ops_3d_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/pooling_ops_3d.cc||tensorflow/core/kernels/pooling_ops_3d.cc": [
      "File: tensorflow/core/kernels/pooling_ops_3d.cc -> tensorflow/core/kernels/pooling_ops_3d.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "141:     OP_REQUIRES(context, ksize_.size() == 5,",
      "142:                 errors::InvalidArgument(\"Sliding window ksize field must \"",
      "143:                                         \"specify 5 dimensions\"));",
      "144:     OP_REQUIRES_OK(context, context->GetAttr(\"strides\", &stride_));",
      "145:     OP_REQUIRES(context, stride_.size() == 5,",
      "146:                 errors::InvalidArgument(\"Sliding window stride field must \"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "144:     bool non_negative =",
      "145:         std::all_of(ksize_.begin(), ksize_.end(), [](int k) { return k > 0; });",
      "146:     OP_REQUIRES(context, non_negative,",
      "147:                 errors::InvalidArgument(\"Sliding window ksize field must \"",
      "148:                                         \"have non-negative dimensions\"));",
      "",
      "---------------"
    ],
    "tensorflow/python/kernel_tests/pooling_ops_3d_test.py||tensorflow/python/kernel_tests/pooling_ops_3d_test.py": [
      "File: tensorflow/python/kernel_tests/pooling_ops_3d_test.py -> tensorflow/python/kernel_tests/pooling_ops_3d_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "17: import numpy as np",
      "19: from tensorflow.python.framework import constant_op",
      "20: from tensorflow.python.framework import test_util",
      "21: from tensorflow.python.ops import gradient_checker",
      "22: from tensorflow.python.ops import gradients_impl",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "20: from tensorflow.python.framework import errors",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "501:         strides=(1, 1, 1),",
      "502:         padding=\"SAME\")",
      "505: if __name__ == \"__main__\":",
      "506:   test.main()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "505:   def testMaxPool3DZeroPoolSize(self):",
      "506:     # Test case for GitHub issue 51936.",
      "507:     for f in [nn_ops.max_pool3d, nn_ops.avg_pool3d]:",
      "508:       with self.session():",
      "509:         with self.assertRaises((errors.InvalidArgumentError, ValueError)):",
      "510:           input_sizes = [3, 4, 10, 11, 12]",
      "512:           input_data = 1.",
      "513:           input_tensor = constant_op.constant(",
      "514:               input_data, shape=input_sizes, name=\"input\")",
      "515:           pool_3d = f(input_tensor, ksize=[2, 2, 0], strides=1, padding=\"VALID\")",
      "516:           self.evaluate(pool_3d)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "eef5b36252238d1d84ec17cc0843b02d7ab4e863",
      "candidate_info": {
        "commit_hash": "eef5b36252238d1d84ec17cc0843b02d7ab4e863",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/eef5b36252238d1d84ec17cc0843b02d7ab4e863",
        "files": [
          "tensorflow/core/kernels/pooling_ops_3d.cc",
          "tensorflow/python/kernel_tests/pooling_ops_3d_test.py"
        ],
        "message": "Merge pull request #51975 from yongtang:51936-max_pool3d\n\nPiperOrigin-RevId: 401245519\nChange-Id: I67d2cbb0e21729b94186ca9bf82450ff93132ff2",
        "before_after_code_files": [
          "tensorflow/core/kernels/pooling_ops_3d.cc||tensorflow/core/kernels/pooling_ops_3d.cc",
          "tensorflow/python/kernel_tests/pooling_ops_3d_test.py||tensorflow/python/kernel_tests/pooling_ops_3d_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/pooling_ops_3d.cc||tensorflow/core/kernels/pooling_ops_3d.cc",
            "tensorflow/python/kernel_tests/pooling_ops_3d_test.py||tensorflow/python/kernel_tests/pooling_ops_3d_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/pooling_ops_3d.cc||tensorflow/core/kernels/pooling_ops_3d.cc",
            "tensorflow/python/kernel_tests/pooling_ops_3d_test.py||tensorflow/python/kernel_tests/pooling_ops_3d_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/pooling_ops_3d.cc||tensorflow/core/kernels/pooling_ops_3d.cc": [
          "File: tensorflow/core/kernels/pooling_ops_3d.cc -> tensorflow/core/kernels/pooling_ops_3d.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "141:     OP_REQUIRES(context, ksize_.size() == 5,",
          "142:                 errors::InvalidArgument(\"Sliding window ksize field must \"",
          "143:                                         \"specify 5 dimensions\"));",
          "144:     OP_REQUIRES_OK(context, context->GetAttr(\"strides\", &stride_));",
          "145:     OP_REQUIRES(context, stride_.size() == 5,",
          "146:                 errors::InvalidArgument(\"Sliding window stride field must \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "144:     bool non_negative =",
          "145:         std::all_of(ksize_.begin(), ksize_.end(), [](int k) { return k > 0; });",
          "146:     OP_REQUIRES(context, non_negative,",
          "147:                 errors::InvalidArgument(\"Sliding window ksize field must \"",
          "148:                                         \"have non-negative dimensions\"));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/pooling_ops_3d_test.py||tensorflow/python/kernel_tests/pooling_ops_3d_test.py": [
          "File: tensorflow/python/kernel_tests/pooling_ops_3d_test.py -> tensorflow/python/kernel_tests/pooling_ops_3d_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "510:         strides=(1, 1, 1),",
          "511:         padding=\"SAME\")",
          "514:   def testMaxPoolGradEagerShapeErrors(self):",
          "515:     with context.eager_mode():",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "513:   def testMaxPool3DZeroPoolSize(self):",
          "514:     # Test case for GitHub issue 51936.",
          "515:     for f in [nn_ops.max_pool3d, nn_ops.avg_pool3d]:",
          "516:       with self.session():",
          "517:         with self.assertRaises((errors.InvalidArgumentError, ValueError)):",
          "518:           input_sizes = [3, 4, 10, 11, 12]",
          "520:           input_data = 1.",
          "521:           input_tensor = constant_op.constant(",
          "522:               input_data, shape=input_sizes, name=\"input\")",
          "523:           pool_3d = f(input_tensor, ksize=[2, 2, 0], strides=1, padding=\"VALID\")",
          "524:           self.evaluate(pool_3d)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "533701cdb550f916590a19cb5ccbd6884af451f0",
      "candidate_info": {
        "commit_hash": "533701cdb550f916590a19cb5ccbd6884af451f0",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/533701cdb550f916590a19cb5ccbd6884af451f0",
        "files": [
          "tensorflow/core/kernels/pooling_ops_3d.cc",
          "tensorflow/python/kernel_tests/pooling_ops_3d_test.py"
        ],
        "message": "Merge pull request #51975 from yongtang:51936-max_pool3d\n\nPiperOrigin-RevId: 401245519\nChange-Id: I67d2cbb0e21729b94186ca9bf82450ff93132ff2",
        "before_after_code_files": [
          "tensorflow/core/kernels/pooling_ops_3d.cc||tensorflow/core/kernels/pooling_ops_3d.cc",
          "tensorflow/python/kernel_tests/pooling_ops_3d_test.py||tensorflow/python/kernel_tests/pooling_ops_3d_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/pooling_ops_3d.cc||tensorflow/core/kernels/pooling_ops_3d.cc",
            "tensorflow/python/kernel_tests/pooling_ops_3d_test.py||tensorflow/python/kernel_tests/pooling_ops_3d_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/pooling_ops_3d.cc||tensorflow/core/kernels/pooling_ops_3d.cc",
            "tensorflow/python/kernel_tests/pooling_ops_3d_test.py||tensorflow/python/kernel_tests/pooling_ops_3d_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/pooling_ops_3d.cc||tensorflow/core/kernels/pooling_ops_3d.cc": [
          "File: tensorflow/core/kernels/pooling_ops_3d.cc -> tensorflow/core/kernels/pooling_ops_3d.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "141:     OP_REQUIRES(context, ksize_.size() == 5,",
          "142:                 errors::InvalidArgument(\"Sliding window ksize field must \"",
          "143:                                         \"specify 5 dimensions\"));",
          "144:     OP_REQUIRES_OK(context, context->GetAttr(\"strides\", &stride_));",
          "145:     OP_REQUIRES(context, stride_.size() == 5,",
          "146:                 errors::InvalidArgument(\"Sliding window stride field must \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "144:     bool non_negative =",
          "145:         std::all_of(ksize_.begin(), ksize_.end(), [](int k) { return k > 0; });",
          "146:     OP_REQUIRES(context, non_negative,",
          "147:                 errors::InvalidArgument(\"Sliding window ksize field must \"",
          "148:                                         \"have non-negative dimensions\"));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/pooling_ops_3d_test.py||tensorflow/python/kernel_tests/pooling_ops_3d_test.py": [
          "File: tensorflow/python/kernel_tests/pooling_ops_3d_test.py -> tensorflow/python/kernel_tests/pooling_ops_3d_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import numpy as np",
          "23: from tensorflow.python.framework import constant_op",
          "24: from tensorflow.python.framework import test_util",
          "25: from tensorflow.python.ops import gradient_checker",
          "26: from tensorflow.python.ops import gradients_impl",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: from tensorflow.python.framework import errors",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "505:         strides=(1, 1, 1),",
          "506:         padding=\"SAME\")",
          "509: if __name__ == \"__main__\":",
          "510:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "509:   def testMaxPool3DZeroPoolSize(self):",
          "510:     # Test case for GitHub issue 51936.",
          "511:     for f in [nn_ops.max_pool3d, nn_ops.avg_pool3d]:",
          "512:       with self.session():",
          "513:         with self.assertRaises((errors.InvalidArgumentError, ValueError)):",
          "514:           input_sizes = [3, 4, 10, 11, 12]",
          "516:           input_data = 1.",
          "517:           input_tensor = constant_op.constant(",
          "518:               input_data, shape=input_sizes, name=\"input\")",
          "519:           pool_3d = f(input_tensor, ksize=[2, 2, 0], strides=1, padding=\"VALID\")",
          "520:           self.evaluate(pool_3d)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "94253f15b67f5d24bf3c67b0122279996b7130da",
      "candidate_info": {
        "commit_hash": "94253f15b67f5d24bf3c67b0122279996b7130da",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/94253f15b67f5d24bf3c67b0122279996b7130da",
        "files": [
          "tensorflow/core/kernels/pooling_ops_3d.cc",
          "tensorflow/python/kernel_tests/pooling_ops_3d_test.py"
        ],
        "message": "Merge pull request #51975 from yongtang:51936-max_pool3d\n\nPiperOrigin-RevId: 401245519\nChange-Id: I67d2cbb0e21729b94186ca9bf82450ff93132ff2",
        "before_after_code_files": [
          "tensorflow/core/kernels/pooling_ops_3d.cc||tensorflow/core/kernels/pooling_ops_3d.cc",
          "tensorflow/python/kernel_tests/pooling_ops_3d_test.py||tensorflow/python/kernel_tests/pooling_ops_3d_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/pooling_ops_3d.cc||tensorflow/core/kernels/pooling_ops_3d.cc",
            "tensorflow/python/kernel_tests/pooling_ops_3d_test.py||tensorflow/python/kernel_tests/pooling_ops_3d_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/pooling_ops_3d.cc||tensorflow/core/kernels/pooling_ops_3d.cc",
            "tensorflow/python/kernel_tests/pooling_ops_3d_test.py||tensorflow/python/kernel_tests/pooling_ops_3d_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/pooling_ops_3d.cc||tensorflow/core/kernels/pooling_ops_3d.cc": [
          "File: tensorflow/core/kernels/pooling_ops_3d.cc -> tensorflow/core/kernels/pooling_ops_3d.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "141:     OP_REQUIRES(context, ksize_.size() == 5,",
          "142:                 errors::InvalidArgument(\"Sliding window ksize field must \"",
          "143:                                         \"specify 5 dimensions\"));",
          "144:     OP_REQUIRES_OK(context, context->GetAttr(\"strides\", &stride_));",
          "145:     OP_REQUIRES(context, stride_.size() == 5,",
          "146:                 errors::InvalidArgument(\"Sliding window stride field must \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "144:     bool non_negative =",
          "145:         std::all_of(ksize_.begin(), ksize_.end(), [](int k) { return k > 0; });",
          "146:     OP_REQUIRES(context, non_negative,",
          "147:                 errors::InvalidArgument(\"Sliding window ksize field must \"",
          "148:                                         \"have non-negative dimensions\"));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/pooling_ops_3d_test.py||tensorflow/python/kernel_tests/pooling_ops_3d_test.py": [
          "File: tensorflow/python/kernel_tests/pooling_ops_3d_test.py -> tensorflow/python/kernel_tests/pooling_ops_3d_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import numpy as np",
          "23: from tensorflow.python.framework import constant_op",
          "24: from tensorflow.python.framework import test_util",
          "25: from tensorflow.python.ops import gradient_checker",
          "26: from tensorflow.python.ops import gradients_impl",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: from tensorflow.python.framework import errors",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "505:         strides=(1, 1, 1),",
          "506:         padding=\"SAME\")",
          "509: if __name__ == \"__main__\":",
          "510:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "509:   def testMaxPool3DZeroPoolSize(self):",
          "510:     # Test case for GitHub issue 51936.",
          "511:     for f in [nn_ops.max_pool3d, nn_ops.avg_pool3d]:",
          "512:       with self.session():",
          "513:         with self.assertRaises((errors.InvalidArgumentError, ValueError)):",
          "514:           input_sizes = [3, 4, 10, 11, 12]",
          "516:           input_data = 1.",
          "517:           input_tensor = constant_op.constant(",
          "518:               input_data, shape=input_sizes, name=\"input\")",
          "519:           pool_3d = f(input_tensor, ksize=[2, 2, 0], strides=1, padding=\"VALID\")",
          "520:           self.evaluate(pool_3d)",
          "",
          "---------------"
        ]
      }
    }
  ]
}