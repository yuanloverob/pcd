{
  "cve_id": "CVE-2011-3592",
  "cve_desc": "Multiple cross-site scripting (XSS) vulnerabilities in the PMA_unInlineEditRow function in js/sql.js in phpMyAdmin 3.4.x before 3.4.5 allow remote authenticated users to inject arbitrary web script or HTML via a (1) database name, (2) table name, or (3) column name that is not properly handled after an inline-editing operation.",
  "repo": "phpmyadmin/phpmyadmin",
  "patch_hash": "2f28ce9c800274190418da0945ce3647d36e1db6",
  "patch_info": {
    "commit_hash": "2f28ce9c800274190418da0945ce3647d36e1db6",
    "repo": "phpmyadmin/phpmyadmin",
    "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/2f28ce9c800274190418da0945ce3647d36e1db6",
    "files": [
      "ChangeLog",
      "js/sql.js"
    ],
    "message": "[security] Fixed XSS in Inline Edit on save action",
    "before_after_code_files": [
      "js/sql.js||js/sql.js"
    ]
  },
  "patch_diff": {
    "js/sql.js||js/sql.js": [
      "File: js/sql.js -> js/sql.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "1111:                     }",
      "1112:                 }",
      "1113:             }",
      "1115:         }",
      "1116:     })",
      "1117: }",
      "",
      "[Removed Lines]",
      "1114:             $this_sibling.html(new_html);",
      "",
      "[Added Lines]",
      "1114:             $this_sibling.text(new_html);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "701a668d354f8d6e8b47579a59feff4775dc820f",
      "candidate_info": {
        "commit_hash": "701a668d354f8d6e8b47579a59feff4775dc820f",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/701a668d354f8d6e8b47579a59feff4775dc820f",
        "files": [
          "js/sql.js"
        ],
        "message": "For bug #3220370, generate UPDATE only for modified columns and avoid POSTing if not needed",
        "before_after_code_files": [
          "js/sql.js||js/sql.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "js/sql.js||js/sql.js"
          ],
          "candidate": [
            "js/sql.js||js/sql.js"
          ]
        }
      },
      "candidate_diff": {
        "js/sql.js||js/sql.js": [
          "File: js/sql.js -> js/sql.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "779:         var sql_query = 'UPDATE `' + window.parent.table + '` SET ';",
          "781:         $input_siblings.each(function() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "781:         var need_to_post = false;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "807:             if (is_null) {",
          "808:                 sql_query += ' `' + field_name + \"`=NULL , \";",
          "809:             } else {",
          "810:                 if($this_field.is(\":not(.relation, .enum, .set)\")) {",
          "811:                     this_field_params[field_name] = $this_field.find('textarea').val();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "811:                 need_to_post = true;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "834:                         $.extend(relation_fields, this_field_params);",
          "835:                     }",
          "836:                 }",
          "838:             }",
          "839:         })",
          "",
          "[Removed Lines]",
          "837:                 sql_query += ' `' + field_name + \"`='\" + this_field_params[field_name].replace(/'/g, \"''\") + \"' , \";",
          "",
          "[Added Lines]",
          "840:                 if (this_field_params[field_name] != $this_field.data('original_data')) {",
          "841:                     sql_query += ' `' + field_name + \"`='\" + this_field_params[field_name].replace(/'/g, \"''\") + \"' , \";",
          "842:                     need_to_post = true;",
          "843:                 }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "853:         var transform_fields_list = $.param(transform_fields);",
          "860:                             'sql_query' : sql_query,",
          "861:                             'disp_direction' : disp_mode,",
          "862:                             'token' : window.parent.token,",
          "",
          "[Removed Lines]",
          "859:         var post_params = {'ajax_request' : true,",
          "",
          "[Added Lines]",
          "862:         var $del_hide=$(this).parent();",
          "863:         var $chg_submit=$(this);",
          "865:         if (need_to_post) {",
          "870:             var post_params = {'ajax_request' : true,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "871:                             'submit_type' : 'save'",
          "872:                           };",
          "968:                                 }",
          "969:                             }",
          "972:                     }",
          "974:             }",
          "",
          "[Removed Lines]",
          "875:          var $del_hide=$(this).parent();",
          "876:          var $chg_submit=$(this);",
          "878:         $.post('tbl_replace.php', post_params, function(data) {",
          "879:             if(data.success == true) {",
          "882:                  for ( var i=0;i<=2;i++) { $del_hide.next().remove(); }",
          "883:                  if(disp_mode!='vertical'){",
          "884:                      $chg_submit.empty();",
          "885:                      $chg_submit.html('<span class=\"nowrap\"></span>');",
          "886:                      $chg_submit.children('span.nowrap').text(PMA_messages['strInlineEdit']);",
          "887:                  }",
          "888:                  else {",
          "889:                      $chg_submit.children('span.nowrap').empty();",
          "890:                      $chg_submit.children('span.nowrap').append(data_vt);",
          "891:                  }",
          "893:                 PMA_ajaxShowMessage(data.message);",
          "896:                 $this_td.removeClass('inline_edit_active').addClass('inline_edit_anchor');",
          "899:                 $this_td.parent('tr').removeClass('noclick');",
          "900:                 if(disp_mode != 'vertical') {",
          "901:                     $this_td.parent('tr').removeClass('hover').find('td').removeClass('hover');",
          "902:                 } else {",
          "903:                     $this_td.parents('tbody').find('tr').find('td:eq(' + $this_td.index() + ')').removeClass('marked');",
          "904:                 }",
          "906:                 $input_siblings.each(function() {",
          "908:                     $this_sibling = $(this);",
          "910:                     var is_null = $this_sibling.find('input:checkbox').is(':checked');",
          "911:                     if (is_null) {",
          "912:                         $this_sibling.html('NULL');",
          "913:                         $this_sibling.addClass('null');",
          "914:                     } else {",
          "915:                         $this_sibling.removeClass('null');",
          "916:                         if($this_sibling.is(':not(.relation, .enum, .set)')) {",
          "920:                             var new_html = $this_sibling.find('textarea').val();",
          "922:                             if($this_sibling.is('.transformed')) {",
          "923:                                 var field_name = getFieldName($this_sibling, disp_mode);",
          "924:                                 $.each(data.transformations, function(key, value) {",
          "925:                                     if(key == field_name) {",
          "926:                                         if($this_sibling.is('.text_plain, .application_octetstream')) {",
          "927:                                             new_html = value;",
          "928:                                             return false;",
          "929:                                         }",
          "930:                                         else {",
          "931:                                             var new_value = $this_sibling.find('textarea').val();",
          "932:                                             new_html = $(value).append(new_value);",
          "933:                                             return false;",
          "934:                                         }",
          "935:                                     }",
          "936:                                 })",
          "937:                             }",
          "938:                         }",
          "939:                         else {",
          "940:                             var new_html = '';",
          "941:                             var new_value = '';",
          "942:                             $test_element = $this_sibling.find('select');",
          "943:                             if ($test_element.length != 0) {",
          "944:                                 new_value = $test_element.val();",
          "945:                             }",
          "947:                             $test_element = $this_sibling.find('span.curr_value');",
          "948:                             if ($test_element.length != 0) {",
          "949:                                 new_value = $test_element.text();",
          "950:                             }",
          "952:                             if($this_sibling.is('.relation')) {",
          "953:                                 var field_name = getFieldName($this_sibling, disp_mode);",
          "954:                                 $.each(data.relations, function(key, value) {",
          "955:                                     if(key == field_name) {",
          "956:                                         new_html = $(value).append(new_value);",
          "957:                                         return false;",
          "958:                                     }",
          "959:                                 })",
          "960:                             } else if ($this_sibling.is('.enum')) {",
          "961:                                 new_html = new_value;",
          "962:                             } else if ($this_sibling.is('.set')) {",
          "963:                                 if (new_value != null) {",
          "964:                                     $.each(new_value, function(key, value) {",
          "965:                                         new_html = new_html + value + ',';",
          "966:                                     })",
          "967:                                     new_html = new_html.substring(0, new_html.length-1);",
          "970:                         }",
          "971:                         $this_sibling.html(new_html);",
          "973:                 })",
          "975:             else {",
          "976:                 PMA_ajaxShowMessage(data.error);",
          "977:             };",
          "978:         }) // end $.post()",
          "979:     }) // End After editing, clicking again should post data",
          "980: }, 'top.frame_content') // end $(document).ready()",
          "",
          "[Added Lines]",
          "885:             $.post('tbl_replace.php', post_params, function(data) {",
          "886:                 if(data.success == true) {",
          "887:                     PMA_ajaxShowMessage(data.message);",
          "888:                     PMA_unInlineEditRow($del_hide, $chg_submit, $this_td, $input_siblings, data, disp_mode);",
          "889:                 } else {",
          "890:                     PMA_ajaxShowMessage(data.error);",
          "891:                 };",
          "892:             }) // end $.post()",
          "893:         } else {",
          "896:             PMA_unInlineEditRow($del_hide, $chg_submit, $this_td, $input_siblings, '', disp_mode);",
          "897:         }",
          "898:     }) // End After editing, clicking again should post data",
          "899: }, 'top.frame_content') // end $(document).ready()",
          "908: function PMA_unInlineEditRow($del_hide, $chg_submit, $this_td, $input_siblings, data, disp_mode) {",
          "912:     for ( var i = 0; i <= 2; i++) {",
          "913:         $del_hide.next().remove();",
          "914:     }",
          "915:     if(disp_mode != 'vertical'){",
          "916:         $chg_submit.empty();",
          "917:         $chg_submit.html('<span class=\"nowrap\"></span>');",
          "918:         $chg_submit.children('span.nowrap').text(PMA_messages['strInlineEdit']);",
          "919:     } else {",
          "920:         $chg_submit.children('span.nowrap').empty();",
          "921:         $chg_submit.children('span.nowrap').append(data_vt);",
          "922:     }",
          "925:     $this_td.removeClass('inline_edit_active').addClass('inline_edit_anchor');",
          "928:     $this_td.parent('tr').removeClass('noclick');",
          "929:     if(disp_mode != 'vertical') {",
          "930:         $this_td.parent('tr').removeClass('hover').find('td').removeClass('hover');",
          "931:     } else {",
          "932:         $this_td.parents('tbody').find('tr').find('td:eq(' + $this_td.index() + ')').removeClass('marked');",
          "933:     }",
          "935:     $input_siblings.each(function() {",
          "937:         $this_sibling = $(this);",
          "939:         var is_null = $this_sibling.find('input:checkbox').is(':checked');",
          "940:         if (is_null) {",
          "941:             $this_sibling.html('NULL');",
          "942:             $this_sibling.addClass('null');",
          "943:         } else {",
          "944:             $this_sibling.removeClass('null');",
          "945:             if($this_sibling.is(':not(.relation, .enum, .set)')) {",
          "949:                 var new_html = $this_sibling.find('textarea').val();",
          "951:                 if($this_sibling.is('.transformed')) {",
          "952:                     var field_name = getFieldName($this_sibling, disp_mode);",
          "953:                     if (typeof data.transformations != 'undefined') {",
          "954:                         $.each(data.transformations, function(key, value) {",
          "955:                             if(key == field_name) {",
          "956:                                 if($this_sibling.is('.text_plain, .application_octetstream')) {",
          "957:                                     new_html = value;",
          "958:                                     return false;",
          "959:                                 } else {",
          "960:                                     var new_value = $this_sibling.find('textarea').val();",
          "961:                                     new_html = $(value).append(new_value);",
          "962:                                     return false;",
          "965:                         })",
          "967:                 }",
          "968:             } else {",
          "969:                 var new_html = '';",
          "970:                 var new_value = '';",
          "971:                 $test_element = $this_sibling.find('select');",
          "972:                 if ($test_element.length != 0) {",
          "973:                     new_value = $test_element.val();",
          "974:                 }",
          "975:                 $test_element = $this_sibling.find('span.curr_value');",
          "976:                 if ($test_element.length != 0) {",
          "977:                     new_value = $test_element.text();",
          "978:                 }",
          "980:                 if($this_sibling.is('.relation')) {",
          "981:                     var field_name = getFieldName($this_sibling, disp_mode);",
          "982:                     if (typeof data.relations != 'undefined') {",
          "983:                         $.each(data.relations, function(key, value) {",
          "984:                             if(key == field_name) {",
          "985:                                 new_html = $(value).append(new_value);",
          "986:                                 return false;",
          "987:                             }",
          "988:                         })",
          "989:                     }",
          "990:                 } else if ($this_sibling.is('.enum')) {",
          "991:                     new_html = new_value;",
          "992:                 } else if ($this_sibling.is('.set')) {",
          "993:                     if (new_value != null) {",
          "994:                         $.each(new_value, function(key, value) {",
          "995:                             new_html = new_html + value + ',';",
          "996:                         })",
          "997:                         new_html = new_html.substring(0, new_html.length-1);",
          "998:                     }",
          "999:                 }",
          "1001:             $this_sibling.html(new_html);",
          "1002:         }",
          "1003:     })",
          "1004: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}