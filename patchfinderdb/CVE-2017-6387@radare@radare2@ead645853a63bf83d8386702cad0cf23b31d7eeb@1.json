{
  "cve_id": "CVE-2017-6387",
  "cve_desc": "The dex_loadcode function in libr/bin/p/bin_dex.c in radare2 1.2.1 allows remote attackers to cause a denial of service (out-of-bounds read and application crash) via a crafted DEX file.",
  "repo": "radare/radare2",
  "patch_hash": "ead645853a63bf83d8386702cad0cf23b31d7eeb",
  "patch_info": {
    "commit_hash": "ead645853a63bf83d8386702cad0cf23b31d7eeb",
    "repo": "radare/radare2",
    "commit_url": "https://github.com/radare/radare2/commit/ead645853a63bf83d8386702cad0cf23b31d7eeb",
    "files": [
      "libr/bin/p/bin_dex.c",
      "sys/asan.sh"
    ],
    "message": "fix #6857",
    "before_after_code_files": [
      "libr/bin/p/bin_dex.c||libr/bin/p/bin_dex.c",
      "sys/asan.sh||sys/asan.sh"
    ]
  },
  "patch_diff": {
    "libr/bin/p/bin_dex.c||libr/bin/p/bin_dex.c": [
      "File: libr/bin/p/bin_dex.c -> libr/bin/p/bin_dex.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1496:     continue;",
      "1497:    }",
      "1500:     continue;",
      "1501:    }",
      "",
      "[Removed Lines]",
      "1499:    if (bin->methods[i].class_id > bin->header.types_size - 1) {",
      "",
      "[Added Lines]",
      "1499:    if (bin->methods[i].class_id > bin->header.types_size) {",
      "",
      "---------------"
    ],
    "sys/asan.sh||sys/asan.sh": [
      "File: sys/asan.sh -> sys/asan.sh",
      "--- Hunk 1 ---",
      "[Context before]",
      "22: echo \"=========================================================================\"",
      "23: printf \"\\033[0m\"",
      "24: sleep 1",
      "27: for a in $ASAN ; do",
      "28:  export CFLAGS=\"${CFLAGS} -fsanitize=$a\"",
      "29: done",
      "32: echo 'int main(){return 0;}' > .a.c",
      "33: [ -z \"${CC}\" ] && CC=gcc",
      "",
      "[Removed Lines]",
      "25: export LDFLAGS=\"-lasan\"",
      "30: export CFLAGS=\"${CFLAGS} -lasan\"",
      "",
      "[Added Lines]",
      "25: #export LDFLAGS=\"-lasan\"",
      "30: #export CFLAGS=\"${CFLAGS} -lasan\"",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e607086e8fc593de5d4f26b4f23617e5c9dc174c",
      "candidate_info": {
        "commit_hash": "e607086e8fc593de5d4f26b4f23617e5c9dc174c",
        "repo": "radare/radare2",
        "commit_url": "https://github.com/radare/radare2/commit/e607086e8fc593de5d4f26b4f23617e5c9dc174c",
        "files": [
          "libr/bin/p/bin_dex.c"
        ],
        "message": "fix coverity issues (#5779)",
        "before_after_code_files": [
          "libr/bin/p/bin_dex.c||libr/bin/p/bin_dex.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libr/bin/p/bin_dex.c||libr/bin/p/bin_dex.c"
          ],
          "candidate": [
            "libr/bin/p/bin_dex.c||libr/bin/p/bin_dex.c"
          ]
        }
      },
      "candidate_diff": {
        "libr/bin/p/bin_dex.c||libr/bin/p/bin_dex.c": [
          "File: libr/bin/p/bin_dex.c -> libr/bin/p/bin_dex.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "226:  ut16 type_idx;",
          "228:  int size = 1; // TODO: NOT_SURE_ABOUT_IT",
          "229:  int pos = 0;",
          "230:  int i;",
          "",
          "[Removed Lines]",
          "227:  char * buff;",
          "",
          "[Added Lines]",
          "227:  char *buff = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "909:    }",
          "913:     continue;",
          "914:    }",
          "",
          "[Removed Lines]",
          "912:    if (bin->methods[i].class_id < 0  || bin->methods[i].class_id > bin->header.types_size) {",
          "",
          "[Added Lines]",
          "912:    if (bin->methods[i].class_id > bin->header.types_size) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "927:    char *method_name = dex_method_name (bin, i);",
          "928:    char *signature = dex_method_signature(bin, i);",
          "929:    if (method_name && *method_name) {",
          "937:     RBinImport *imp = R_NEW0 (RBinImport);",
          "938:     imp->name = r_str_newf (\"imp.%s.method.%s%s\", class_name, method_name, signature);",
          "",
          "[Removed Lines]",
          "931:     RBinSymbol *sym = R_NEW0 (RBinSymbol);",
          "932:     sym->name = r_str_newf (\"imp.%s.method.%s%s\", class_name, method_name, signature);",
          "933:     sym->type = r_str_const (\"IMPORT\");",
          "934:     sym->bind = r_str_const (\"NONE\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "943:     r_list_append (bin->imports_list, imp);",
          "944:    }",
          "945:    free (method_name);",
          "946:    free (class_name);",
          "947:   }",
          "948:   free (methods);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "939:    free (signature);",
          "",
          "---------------"
        ]
      }
    }
  ]
}