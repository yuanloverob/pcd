{
  "cve_id": "CVE-2019-20218",
  "cve_desc": "selectExpander in select.c in SQLite 3.30.1 proceeds with WITH stack unwinding even after a parsing error.",
  "repo": "sqlite/sqlite",
  "patch_hash": "a6c1a71cde082e09750465d5675699062922e387",
  "patch_info": {
    "commit_hash": "a6c1a71cde082e09750465d5675699062922e387",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/a6c1a71cde082e09750465d5675699062922e387",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/altertab3.test"
    ],
    "message": "Do not attempt to unwind the WITH stack in the Parse object following an error. This fixes a separate case to [de6e6d68].\n\nFossilOrigin-Name: d29edef93451cc67a5d69c1cce1b1832d9ca8fff1f600afdd51338b74d077b92",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/altertab3.test||test/altertab3.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 597896ed0ae9e2960a8f39576bd7f77a11dccc1da84b6a44ebb5c38d90ebc330",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4982:     return WRC_Abort;",
      "4983:   }",
      "",
      "[Removed Lines]",
      "4981:   if( db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "[Added Lines]",
      "4981:   if( pParse->nErr || db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "---------------"
    ],
    "test/altertab3.test||test/altertab3.test": [
      "File: test/altertab3.test -> test/altertab3.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "531:   ALTER TABLE t1 RENAME TO t1x;",
      "532: } {1 {error in trigger r1: no such table: main.t2}}",
      "534: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "534: #------------------------------------------------------------------------",
      "535: #",
      "536: reset_db",
      "537: do_execsql_test 23.1 {",
      "538:   CREATE TABLE v0 (a);",
      "539:   CREATE VIEW v2 (v3) AS",
      "540:     WITH x1 AS (SELECT * FROM v2)",
      "541:     SELECT v3 AS x, v3 AS y FROM v2;",
      "542: }",
      "544: do_catchsql_test 23.2 {",
      "545:   SELECT * FROM v2",
      "546: } {1 {view v2 is circularly defined}}",
      "548: db close",
      "549: sqlite3 db test.db",
      "551: do_catchsql_test 23.3 {",
      "552:   ALTER TABLE v0 RENAME TO t3 ;",
      "553: } {1 {error in view v2: view v2 is circularly defined}}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fbf6136c78d1754501203449d0d16cef3ab25663",
      "candidate_info": {
        "commit_hash": "fbf6136c78d1754501203449d0d16cef3ab25663",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/fbf6136c78d1754501203449d0d16cef3ab25663",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/shell4.test"
        ],
        "message": "Do not attempt to test the shell \".trace\" command in SQLITE_OMIT_TRACE builds.\n\nFossilOrigin-Name: 3839e9098107604e1526c2b1e813c019607077dfe39d7eeb92f3466518dec3b1",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/shell4.test||test/shell4.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: d2cca36adc69d2c8e7707d70cbd75c497eae6a1a3f8a9dd18249ca6804c9db5f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/shell4.test||test/shell4.test": [
          "File: test/shell4.test -> test/shell4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "106:        [regexp {Autoindex Inserts} $res]",
          "107: } {1 1 1}",
          "109: do_test shell4-2.1 {",
          "110:   catchcmd \":memory:\" \"CREATE TABLE t1(x);\\n.trace --unknown\"",
          "111: } {1 {Unknown option \"--unknown\" on \".trace\"}}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "109: ifcapable trace {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "115: do_test shell4-2.3 {",
          "116:   catchcmd \":memory:\" \".trace stdout\\n.dump\\n.trace off\\n\"",
          "117: } {/^0 {PRAGMA.*}$/}",
          "119: do_test shell4-2.4 {",
          "120:   catchcmd \":memory:\" \".trace stdout\\nCREATE TABLE t1(x);SELECT * FROM t1;\"",
          "121: } {0 {CREATE TABLE t1(x);",
          "",
          "[Removed Lines]",
          "118: ifcapable trace {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "75db74fdaeaeef414793f03c0fea93fb6ed8c92b",
      "candidate_info": {
        "commit_hash": "75db74fdaeaeef414793f03c0fea93fb6ed8c92b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/75db74fdaeaeef414793f03c0fea93fb6ed8c92b",
        "files": [
          "ext/misc/fossildelta.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Improved comments on the fossildelta.c extension.\n\nFossilOrigin-Name: d7d23f0450d659b2c7df34e4df8623ca7b6fe3bd19422e3e9234515214ae8510",
        "before_after_code_files": [
          "ext/misc/fossildelta.c||ext/misc/fossildelta.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/misc/fossildelta.c||ext/misc/fossildelta.c": [
          "File: ext/misc/fossildelta.c -> ext/misc/fossildelta.c"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: fd085e9260bec18f968704abb2dd324d954baa121d13b67c3f5b801e9e3834aa",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d4a6744b501483c7e5bb06660906f9077f0d9835",
      "candidate_info": {
        "commit_hash": "d4a6744b501483c7e5bb06660906f9077f0d9835",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d4a6744b501483c7e5bb06660906f9077f0d9835",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c"
        ],
        "message": "Improvements to comments.  No changes to code.\n\nFossilOrigin-Name: 16eb0fc8f8cce51eaa5305ebc9f3bd8c8d935dd3ebebab6820e5629f9292eec2",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 480a5090befdc29eaeb6f0b22831c980d6ee92438d9b2e766de68b037ded38b8",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c"
        ]
      }
    },
    {
      "candidate_hash": "af97c3f35a095166ee5406ed73a1790dae025db6",
      "candidate_info": {
        "commit_hash": "af97c3f35a095166ee5406ed73a1790dae025db6",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/af97c3f35a095166ee5406ed73a1790dae025db6",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/resolve.c"
        ],
        "message": "Fix a case of the Expr.affinity to Expr.affExpr refactor that was missed in the [a29f2a7d07beff64] check-in.\n\nFossilOrigin-Name: 83450d10707e2c7c075f3930a8c231c49c593b9cdf0e6097b0187eb877755d2d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/resolve.c||src/resolve.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 30e6ee27a9fb78291c324ac9b80db4579280140430804ecd4692e312f9938525",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "689:       pExpr->y.pTab = pItem->pTab;",
          "690:       pExpr->iTable = pItem->iCursor;",
          "691:       pExpr->iColumn = -1;",
          "693:       break;",
          "694:     }",
          "695: #endif /* defined(SQLITE_ENABLE_UPDATE_DELETE_LIMIT)",
          "",
          "[Removed Lines]",
          "692:       pExpr->affinity = SQLITE_AFF_INTEGER;",
          "",
          "[Added Lines]",
          "692:       pExpr->affExpr = SQLITE_AFF_INTEGER;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ddd7421c9170317294e69a4287deda996a3cd3dc",
      "candidate_info": {
        "commit_hash": "ddd7421c9170317294e69a4287deda996a3cd3dc",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ddd7421c9170317294e69a4287deda996a3cd3dc",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/wherecode.c",
          "test/minmax4.test"
        ],
        "message": "If a query like \"SELECT min(a), b FROM t1\" visits no rows where \"a\" is not null, extract a value for \"b\" from one of the rows where \"a\" is null. Possible fix for ticket [41866dc37].\n\nFossilOrigin-Name: a7277ed0623dccdbf775ae6127611d6bc6e150f6942a048ab4281e5136c0e98d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/wherecode.c||src/wherecode.c",
          "test/minmax4.test||test/minmax4.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 961e2f08c35238bcb1d32430d16451a96807b2c4bbb194ee621128dd09cd3981",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/wherecode.c||src/wherecode.c": [
          "File: src/wherecode.c -> src/wherecode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1694:       VdbeCoverageIf(v, op==OP_SeekGE);  testcase( op==OP_SeekGE );",
          "1695:       VdbeCoverageIf(v, op==OP_SeekLE);  testcase( op==OP_SeekLE );",
          "1696:       VdbeCoverageIf(v, op==OP_SeekLT);  testcase( op==OP_SeekLT );",
          "1697:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1698:       if( bSeekPastNull && (pLoop->wsFlags & WHERE_TOP_LIMIT)==0 ){",
          "1704:         assert( startEq==0 && (op==OP_SeekGT || op==OP_SeekLT) );",
          "1705:         assert( (pWInfo->wctrlFlags&WHERE_ORDERBY_MIN)!=0 && pWInfo->nOBSat>0 );",
          "1706:         sqlite3VdbeChangeP2(v, -1, sqlite3VdbeCurrentAddr(v)+1);",
          "1707:         sqlite3VdbeAddOp2(v, OP_Goto, 0, sqlite3VdbeCurrentAddr(v)+2);",
          "1709:         op = aStartOp[(start_constraints<<2) + (1<<1) + bRev];",
          "1710:         assert( op!=0 );",
          "1711:         sqlite3VdbeAddOp4Int(v, op, iIdxCur, addrNxt, regBase, nConstraint);",
          "1712:         VdbeCoverage(v);",
          "1713:         VdbeCoverageIf(v, op==OP_SeekGE);  testcase( op==OP_SeekGE );",
          "1714:         VdbeCoverageIf(v, op==OP_SeekLE);  testcase( op==OP_SeekLE );",
          "1715:       }",
          "",
          "---------------"
        ],
        "test/minmax4.test||test/minmax4.test": [
          "File: test/minmax4.test -> test/minmax4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: set testdir [file dirname $argv0]",
          "21: source $testdir/tester.tcl",
          "23: ifcapable !compound {",
          "24:   finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: set testprefix minmax4",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "148:   }",
          "149: } {1 1 {} 2 2 2 3 3 5 5}",
          "153: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "152: #-------------------------------------------------------------------------",
          "153: foreach {tn sql} {",
          "154:   1 { CREATE INDEX i1 ON t1(a) }",
          "155:   2 { CREATE INDEX i1 ON t1(a DESC) }",
          "156:   3 { }",
          "157: } {",
          "158:   reset_db",
          "159:   do_execsql_test 3.$tn.0 {",
          "160:     CREATE TABLE t1(a, b);",
          "161:     INSERT INTO t1 VALUES(NULL, 1);",
          "162:   }",
          "163:   execsql $sql",
          "164:   do_execsql_test 3.$tn.1 {",
          "165:     SELECT min(a), b FROM t1;",
          "166:   } {{} 1}",
          "167:   do_execsql_test 3.$tn.2 {",
          "168:     SELECT min(a), b FROM t1 WHERE a<50;",
          "169:   } {{} {}}",
          "170:   do_execsql_test 3.$tn.3 {",
          "171:     INSERT INTO t1 VALUES(2, 2);",
          "172:   }",
          "173:   do_execsql_test 3.$tn.4 {",
          "174:     SELECT min(a), b FROM t1;",
          "175:   } {2 2}",
          "176:   do_execsql_test 3.$tn.5 {",
          "177:     SELECT min(a), b FROM t1 WHERE a<50;",
          "178:   } {2 2}",
          "179: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}