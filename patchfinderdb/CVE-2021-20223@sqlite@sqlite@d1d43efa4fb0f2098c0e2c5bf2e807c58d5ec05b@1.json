{
  "cve_id": "CVE-2021-20223",
  "cve_desc": "",
  "repo": "sqlite/sqlite",
  "patch_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
  "patch_info": {
    "commit_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "files": [
      "ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test",
      "manifest",
      "manifest.uuid"
    ],
    "message": "Prevent fts5 tokenizer unicode61 from considering '\\0' to be a token characters, even if other characters of class \"Cc\" are.\n\nFossilOrigin-Name: b7b7bde9b7a03665e3691c6d51118965f216d2dfb1617f138b9f9e60e418ed2f",
    "before_after_code_files": [
      "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test",
      "manifest.uuid||manifest.uuid"
    ]
  },
  "patch_diff": {
    "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c": [
      "File: ext/fts5/fts5_unicode2.c -> ext/fts5/fts5_unicode2.c"
    ],
    "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test": [
      "File: ext/fts5/test/fts5tok1.test -> ext/fts5/test/fts5tok1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "111:   SELECT * FROM t4;",
      "112: } {1 {SQL logic error}}",
      "115: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "114: #-------------------------------------------------------------------------",
      "115: # Embedded 0x00 characters.",
      "116: #",
      "117: reset_db",
      "118: do_execsql_test 3.1.0 {",
      "119:   CREATE VIRTUAL TABLE t1 USING fts5(z);",
      "120:   CREATE VIRTUAL TABLE tt USING fts5vocab(t1, 'instance');",
      "121:   INSERT INTO t1 VALUES('abc' || char(0) || 'def');",
      "122:   SELECT * FROM tt;",
      "123: } { abc 1 z 0 def 1 z 1 }",
      "124: do_execsql_test 3.1.1 {",
      "125:   SELECT hex(z) FROM t1;",
      "126: } {61626300646566}",
      "127: do_execsql_test 3.1.2 {",
      "128:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "129: } {}",
      "131: do_execsql_test 3.2.0 {",
      "132:   CREATE VIRTUAL TABLE t2 USING fts5(z,",
      "133:       tokenize=\"unicode61 categories 'L* N* Co Cc'\"",
      "134:   );",
      "135:   CREATE VIRTUAL TABLE tu USING fts5vocab(t2, 'instance');",
      "137:   INSERT INTO t2 VALUES('abc' || char(0) || 'def');",
      "138:   SELECT * FROM tu;",
      "139: } { abc 1 z 0 def 1 z 1 }",
      "141: do_execsql_test 3.2.1 {",
      "142:   SELECT hex(z) FROM t1;",
      "143: } {61626300646566}",
      "145: do_execsql_test 3.2.2 {",
      "146:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "147: } {}",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 0e7e113d9f2c929c1f8a85e2cfad8e2e60f0e8770212b5e5320fb2a2c42911f8",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a01fda7113a61a1b02b6903c056e29f3919e0949",
      "candidate_info": {
        "commit_hash": "a01fda7113a61a1b02b6903c056e29f3919e0949",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a01fda7113a61a1b02b6903c056e29f3919e0949",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/tclsqlite.test"
        ],
        "message": "Disable a redundant test case that uses a very large stack, and hence is unable to run with -fsanitize=undefined,address.\n\nFossilOrigin-Name: 3c63f68e12af36e9fd9a3dd4daec9402e75e80bcd819d39c0215a427fd0d7803",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/tclsqlite.test||test/tclsqlite.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: cd0437ba5b13593ebe4ec30d6236623183f8cfa30ca8a0612662eccb282a863e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/tclsqlite.test||test/tclsqlite.test": [
          "File: test/tclsqlite.test -> test/tclsqlite.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "371:     db function r1 userfunc_r1",
          "372:     execsql {SELECT r1(10)}",
          "373:   } {55}",
          "377: }",
          "379: # Tests for the new transaction method",
          "",
          "[Removed Lines]",
          "374:   do_test tcl-9.11 {",
          "375:     execsql {SELECT r1(100)}",
          "376:   } {5050}",
          "",
          "[Added Lines]",
          "374:   # Fails under -fsanitize=address,undefined due to stack overflow",
          "375:   # do_test tcl-9.11 {",
          "376:   #   execsql {SELECT r1(100)}",
          "377:   # } {5050}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1ca037f41e5590aed29fbb1e61bd9175f7bc387f",
      "candidate_info": {
        "commit_hash": "1ca037f41e5590aed29fbb1e61bd9175f7bc387f",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1ca037f41e5590aed29fbb1e61bd9175f7bc387f",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/build.c",
          "src/vdbe.c"
        ],
        "message": "Fix BEGIN IMMEDIATE and BEGIN EXCLUSIVE so that they work even if one or more of the database files in the connection are read-only.  Test cases for this are in TH3.\n\nFossilOrigin-Name: 2fa08c3963f008d4723c3f4f4496abcb6d4b575c85ba4a911a6aed5730b5948b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/build.c||src/build.c",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 54b54f02c66c5aeaa3504c52a04614e2fb4d7260da8367840d5ea5a71cdc2fda",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4657:   if( !v ) return;",
          "4658:   if( type!=TK_DEFERRED ){",
          "4659:     for(i=0; i<db->nDb; i++){",
          "4661:       sqlite3VdbeUsesBtree(v, i);",
          "4662:     }",
          "4663:   }",
          "",
          "[Removed Lines]",
          "4660:       sqlite3VdbeAddOp2(v, OP_Transaction, i, (type==TK_EXCLUSIVE)+1);",
          "",
          "[Added Lines]",
          "4660:       int eTxnType;",
          "4661:       Btree *pBt = db->aDb[i].pBt;",
          "4662:       if( pBt && sqlite3BtreeIsReadonly(pBt) ){",
          "4664:       }else if( type==TK_EXCLUSIVE ){",
          "4666:       }else{",
          "4668:       }",
          "4669:       sqlite3VdbeAddOp2(v, OP_Transaction, i, eTxnType);",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3522:   assert( p->bIsReader );",
          "3523:   assert( p->readOnly==0 || pOp->p2==0 );",
          "3524:   assert( pOp->p1>=0 && pOp->p1<db->nDb );",
          "3525:   assert( DbMaskTest(p->btreeMask, pOp->p1) );",
          "3526:   if( pOp->p2 && (db->flags & SQLITE_QueryOnly)!=0 ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3525:   assert( pOp->p2>=0 && pOp->p2<=2 );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9191c702fcd7802a6155fbb3134a993ef036f7a5",
      "candidate_info": {
        "commit_hash": "9191c702fcd7802a6155fbb3134a993ef036f7a5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/9191c702fcd7802a6155fbb3134a993ef036f7a5",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Fix the -quote option on the CLI to set the correct column separator.\n\nFossilOrigin-Name: c778f8295c3c9b6cd6107b33fd7664ae75c97840fc974c9f971755a523f185c4",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 2173d4c6e3addc75964508f2fc8e42755376b3bc285286fa90df4831a6fa280b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "11015:       data.mode = MODE_List;",
          "11016:     }else if( strcmp(z,\"-quote\")==0 ){",
          "11017:       data.mode = MODE_Quote;",
          "11018:     }else if( strcmp(z,\"-line\")==0 ){",
          "11019:       data.mode = MODE_Line;",
          "11020:     }else if( strcmp(z,\"-column\")==0 ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11018:       sqlite3_snprintf(sizeof(data.colSeparator), data.colSeparator, SEP_Comma);",
          "11019:       sqlite3_snprintf(sizeof(data.rowSeparator), data.rowSeparator, SEP_Row);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e859e43bb87baa49cd3cdbbf81b4cbc9fe93d1de",
      "candidate_info": {
        "commit_hash": "e859e43bb87baa49cd3cdbbf81b4cbc9fe93d1de",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e859e43bb87baa49cd3cdbbf81b4cbc9fe93d1de",
        "files": [
          "VERSION",
          "configure",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Version number to 3.32.1.\n\nFossilOrigin-Name: 56e5063c326ffbfd3e3cb6f2b05718412aca2cb183274bfe11f5666effdd04b9",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ad7bb70af9bb68d192137188bb2528f1e9e43ad164c925174ca1dafc9e1f5339",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1d9ea27f7e7e053d99745b58b9109e063b4c03ad",
      "candidate_info": {
        "commit_hash": "1d9ea27f7e7e053d99745b58b9109e063b4c03ad",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1d9ea27f7e7e053d99745b58b9109e063b4c03ad",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Fix the \".excel\" command and the \".open -x\" and \".open -e\" command so that they work better when running from an in-memory database and on Windows and when running from a script.\n\nFossilOrigin-Name: 07752164c2bf00b6885808533bbdb2cefbf1bf281a887b0b4f6316649a6cb810",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: cb772b7a8fb53694cb267e74c11f49d2b9fd6920821c4e232f90ec35739c8904",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "4973:       zCmd = sqlite3_mprintf(\"%s %s\", zXdgOpenCmd, p->zTempFile);",
          "4974:       if( system(zCmd) ){",
          "4975:         utf8_printf(stderr, \"Failed: [%s]\\n\", zCmd);",
          "4976:       }",
          "4977:       sqlite3_free(zCmd);",
          "4978:       outputModePop(p);",
          "4979:       p->doXdgOpen = 0;",
          "4981:     }",
          "4983:   }",
          "",
          "[Removed Lines]",
          "4980:       sqlite3_sleep(100);",
          "",
          "[Added Lines]",
          "4976:       }else{",
          "4980:         sqlite3_sleep(2000);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5267:     sqlite3_file_control(p->db, 0, SQLITE_FCNTL_TEMPFILENAME, &p->zTempFile);",
          "5268:   }",
          "5269:   if( p->zTempFile==0 ){",
          "5270:     sqlite3_uint64 r;",
          "5271:     sqlite3_randomness(sizeof(r), &r);",
          "5273:   }else{",
          "5274:     p->zTempFile = sqlite3_mprintf(\"%z.%s\", p->zTempFile, zSuffix);",
          "5275:   }",
          "",
          "[Removed Lines]",
          "5272:     p->zTempFile = sqlite3_mprintf(\"temp%llx.%s\", r, zSuffix);",
          "",
          "[Added Lines]",
          "5276:     char *zTemp;",
          "5279:     zTemp = getenv(\"TEMP\");",
          "5280:     if( zTemp==0 ) zTemp = getenv(\"TMP\");",
          "5281:     if( zTemp==0 ){",
          "5282: #ifdef _WIN32",
          "5283:       zTemp = \"\\\\tmp\";",
          "5284: #else",
          "5285:       zTemp = \"/tmp\";",
          "5286: #endif",
          "5287:     }",
          "5288:     p->zTempFile = sqlite3_mprintf(\"%s/temp%llx.%s\", zTemp, r, zSuffix);",
          "",
          "---------------"
        ]
      }
    }
  ]
}