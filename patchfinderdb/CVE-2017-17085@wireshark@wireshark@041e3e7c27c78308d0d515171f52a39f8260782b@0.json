{
  "cve_id": "CVE-2017-17085",
  "cve_desc": "In Wireshark 2.4.0 to 2.4.2 and 2.2.0 to 2.2.10, the CIP Safety dissector could crash. This was addressed in epan/dissectors/packet-cipsafety.c by validating the packet length.",
  "repo": "wireshark/wireshark",
  "patch_hash": "041e3e7c27c78308d0d515171f52a39f8260782b",
  "patch_info": {
    "commit_hash": "041e3e7c27c78308d0d515171f52a39f8260782b",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/041e3e7c27c78308d0d515171f52a39f8260782b",
    "files": [
      "epan/dissectors/packet-cipsafety.c"
    ],
    "message": "CIP Safety: check packet length before dissecting\n\nOtherwise we can call CRC functions with a negative value, leading to\na segmentation fault.\n\nBug: 14250\nChange-Id: I394fa91a5cfa1700fb12441d4884c0367b39df8b\nReviewed-on: https://code.wireshark.org/review/24621\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-cipsafety.c||epan/dissectors/packet-cipsafety.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-cipsafety.c||epan/dissectors/packet-cipsafety.c": [
      "File: epan/dissectors/packet-cipsafety.c -> epan/dissectors/packet-cipsafety.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1512:    base_length = multicast ? 12 : 6;",
      "1514:    if (((conn_type == ECIDT_O2T) && (server_dir == FALSE)) ||",
      "1515:        ((conn_type == ECIDT_T2O) && (server_dir == TRUE)))",
      "1516:    {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1514:    if (item_length <= base_length) {",
      "1515:       expert_add_info(pinfo, item, &ei_mal_io);",
      "1516:       return;",
      "1517:    }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ec6972193c94b4bd59942ff64673407e43d9ce88",
      "candidate_info": {
        "commit_hash": "ec6972193c94b4bd59942ff64673407e43d9ce88",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/ec6972193c94b4bd59942ff64673407e43d9ce88",
        "files": [
          "epan/dissectors/packet-cipsafety.c"
        ],
        "message": "CIP Safety: check packet length before dissecting\n\nOtherwise we can call CRC functions with a negative value, leading to\na segmentation fault.\n\nBug: 14250\nChange-Id: I394fa91a5cfa1700fb12441d4884c0367b39df8b\nReviewed-on: https://code.wireshark.org/review/24621\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 041e3e7c27c78308d0d515171f52a39f8260782b)\nReviewed-on: https://code.wireshark.org/review/24642",
        "before_after_code_files": [
          "epan/dissectors/packet-cipsafety.c||epan/dissectors/packet-cipsafety.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-cipsafety.c||epan/dissectors/packet-cipsafety.c"
          ],
          "candidate": [
            "epan/dissectors/packet-cipsafety.c||epan/dissectors/packet-cipsafety.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-cipsafety.c||epan/dissectors/packet-cipsafety.c": [
          "File: epan/dissectors/packet-cipsafety.c -> epan/dissectors/packet-cipsafety.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1512:    base_length = multicast ? 12 : 6;",
          "1514:    if (((conn_type == ECIDT_O2T) && (server_dir == FALSE)) ||",
          "1515:        ((conn_type == ECIDT_T2O) && (server_dir == TRUE)))",
          "1516:    {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1514:    if (item_length <= base_length) {",
          "1515:       expert_add_info(pinfo, item, &ei_mal_io);",
          "1516:       return;",
          "1517:    }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f5939debe96e3c3953c6020818f1fbb80eb83ce8",
      "candidate_info": {
        "commit_hash": "f5939debe96e3c3953c6020818f1fbb80eb83ce8",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/f5939debe96e3c3953c6020818f1fbb80eb83ce8",
        "files": [
          "epan/dissectors/packet-cipsafety.c"
        ],
        "message": "CIP Safety: check packet length before dissecting\n\nOtherwise we can call CRC functions with a negative value, leading to\na segmentation fault.\n\nBug: 14250\nChange-Id: I394fa91a5cfa1700fb12441d4884c0367b39df8b\nReviewed-on: https://code.wireshark.org/review/24621\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 041e3e7c27c78308d0d515171f52a39f8260782b)\nReviewed-on: https://code.wireshark.org/review/24643",
        "before_after_code_files": [
          "epan/dissectors/packet-cipsafety.c||epan/dissectors/packet-cipsafety.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-cipsafety.c||epan/dissectors/packet-cipsafety.c"
          ],
          "candidate": [
            "epan/dissectors/packet-cipsafety.c||epan/dissectors/packet-cipsafety.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-cipsafety.c||epan/dissectors/packet-cipsafety.c": [
          "File: epan/dissectors/packet-cipsafety.c -> epan/dissectors/packet-cipsafety.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1420:    base_length = multicast ? 12 : 6;",
          "1422:    if (((conn_type == ECIDT_O2T) && (server_dir == FALSE)) ||",
          "1423:        ((conn_type == ECIDT_T2O) && (server_dir == TRUE)))",
          "1424:    {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1422:    if (item_length <= base_length) {",
          "1423:       expert_add_info(pinfo, item, &ei_mal_io);",
          "1424:       return;",
          "1425:    }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3d6da018e7969c23b172b37a9f556696783ca9b1",
      "candidate_info": {
        "commit_hash": "3d6da018e7969c23b172b37a9f556696783ca9b1",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/3d6da018e7969c23b172b37a9f556696783ca9b1",
        "files": [
          "epan/dissectors/packet-cipsafety.c"
        ],
        "message": "CIP Safety: base packet length can be used\n\nSlight adjustment to I394fa91a5cfa1700fb12441d4884c0367b39df8b\n\nChange-Id: Id097a39265f49a79f3d39855ef6b5c95ffe8c4f1\nReviewed-on: https://code.wireshark.org/review/24654\nReviewed-by: Michael Mann <mmann78@netscape.net>",
        "before_after_code_files": [
          "epan/dissectors/packet-cipsafety.c||epan/dissectors/packet-cipsafety.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-cipsafety.c||epan/dissectors/packet-cipsafety.c"
          ],
          "candidate": [
            "epan/dissectors/packet-cipsafety.c||epan/dissectors/packet-cipsafety.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-cipsafety.c||epan/dissectors/packet-cipsafety.c": [
          "File: epan/dissectors/packet-cipsafety.c -> epan/dissectors/packet-cipsafety.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1512:    base_length = multicast ? 12 : 6;",
          "1515:       expert_add_info(pinfo, item, &ei_mal_io);",
          "1516:       return;",
          "1517:    }",
          "",
          "[Removed Lines]",
          "1514:    if (item_length <= base_length) {",
          "",
          "[Added Lines]",
          "1514:    if (item_length < base_length) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}