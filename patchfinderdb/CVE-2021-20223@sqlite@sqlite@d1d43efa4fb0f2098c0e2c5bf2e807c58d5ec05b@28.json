{
  "cve_id": "CVE-2021-20223",
  "cve_desc": "",
  "repo": "sqlite/sqlite",
  "patch_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
  "patch_info": {
    "commit_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "files": [
      "ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test",
      "manifest",
      "manifest.uuid"
    ],
    "message": "Prevent fts5 tokenizer unicode61 from considering '\\0' to be a token characters, even if other characters of class \"Cc\" are.\n\nFossilOrigin-Name: b7b7bde9b7a03665e3691c6d51118965f216d2dfb1617f138b9f9e60e418ed2f",
    "before_after_code_files": [
      "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test",
      "manifest.uuid||manifest.uuid"
    ]
  },
  "patch_diff": {
    "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c": [
      "File: ext/fts5/fts5_unicode2.c -> ext/fts5/fts5_unicode2.c"
    ],
    "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test": [
      "File: ext/fts5/test/fts5tok1.test -> ext/fts5/test/fts5tok1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "111:   SELECT * FROM t4;",
      "112: } {1 {SQL logic error}}",
      "115: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "114: #-------------------------------------------------------------------------",
      "115: # Embedded 0x00 characters.",
      "116: #",
      "117: reset_db",
      "118: do_execsql_test 3.1.0 {",
      "119:   CREATE VIRTUAL TABLE t1 USING fts5(z);",
      "120:   CREATE VIRTUAL TABLE tt USING fts5vocab(t1, 'instance');",
      "121:   INSERT INTO t1 VALUES('abc' || char(0) || 'def');",
      "122:   SELECT * FROM tt;",
      "123: } { abc 1 z 0 def 1 z 1 }",
      "124: do_execsql_test 3.1.1 {",
      "125:   SELECT hex(z) FROM t1;",
      "126: } {61626300646566}",
      "127: do_execsql_test 3.1.2 {",
      "128:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "129: } {}",
      "131: do_execsql_test 3.2.0 {",
      "132:   CREATE VIRTUAL TABLE t2 USING fts5(z,",
      "133:       tokenize=\"unicode61 categories 'L* N* Co Cc'\"",
      "134:   );",
      "135:   CREATE VIRTUAL TABLE tu USING fts5vocab(t2, 'instance');",
      "137:   INSERT INTO t2 VALUES('abc' || char(0) || 'def');",
      "138:   SELECT * FROM tu;",
      "139: } { abc 1 z 0 def 1 z 1 }",
      "141: do_execsql_test 3.2.1 {",
      "142:   SELECT hex(z) FROM t1;",
      "143: } {61626300646566}",
      "145: do_execsql_test 3.2.2 {",
      "146:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "147: } {}",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 0e7e113d9f2c929c1f8a85e2cfad8e2e60f0e8770212b5e5320fb2a2c42911f8",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e94006eb4290b428c0fe16b2979540fdcc22a213",
      "candidate_info": {
        "commit_hash": "e94006eb4290b428c0fe16b2979540fdcc22a213",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e94006eb4290b428c0fe16b2979540fdcc22a213",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/parse.y",
          "tool/lemon.c"
        ],
        "message": "Enhance LEMON to provide the ability to mark a rules as one that will never reduce due to intervention of actions.  Use this new capability to designate the EXPLAIN rule as NEVER-REDUCES.\n\nFossilOrigin-Name: 136cdefb2f7b582ff1771ac7f9e733dc24c357605526cbfb1834937697c8a922",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/parse.y||src/parse.y",
          "tool/lemon.c||tool/lemon.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: aa3b0eb8c3438ddd3b660bc6bce4b1f4a0e3b5ec897079445231ee1b61210d6a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/parse.y||src/parse.y": [
          "File: src/parse.y -> src/parse.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "120: ecmd ::= SEMI.",
          "121: ecmd ::= cmdx SEMI.",
          "122: %ifndef SQLITE_OMIT_EXPLAIN",
          "124: explain ::= EXPLAIN.              { pParse->explain = 1; }",
          "125: explain ::= EXPLAIN QUERY PLAN.   { pParse->explain = 2; }",
          "126: %endif  SQLITE_OMIT_EXPLAIN",
          "",
          "[Removed Lines]",
          "123: ecmd ::= explain cmdx SEMI.",
          "",
          "[Added Lines]",
          "123: ecmd ::= explain cmdx SEMI.       {NEVER-REDUCE}",
          "",
          "---------------"
        ],
        "tool/lemon.c||tool/lemon.c": [
          "File: tool/lemon.c -> tool/lemon.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "304: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "302:   Boolean neverReduce;     /* Reduce is theoretically possible, but prevented",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2278: \"Code fragment beginning on this line is not the first \\",
          "2279: to follow the previous rule.\");",
          "2280:           psp->errorcnt++;",
          "2281:         }else{",
          "2282:           psp->prevrule->line = psp->tokenlineno;",
          "2283:           psp->prevrule->code = &x[1];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2283:         }else if( strcmp(x, \"{NEVER-REDUCE\")==0 ){",
          "2284:           psp->prevrule->neverReduce = 1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4745:     assert( rp->noCode );",
          "4746:     fprintf(out,\"      /* (%d) \", rp->iRule);",
          "4747:     writeRuleText(out, rp);",
          "4749:       fprintf(out, \" */ yytestcase(yyruleno==%d);\\n\", rp->iRule); lineno++;",
          "4750:     }else{",
          "4751:       fprintf(out, \" (OPTIMIZED OUT) */ assert(yyruleno!=%d);\\n\",",
          "",
          "[Removed Lines]",
          "4748:     if( rp->doesReduce ){",
          "",
          "[Added Lines]",
          "4752:     if( rp->neverReduce ){",
          "4753:       fprintf(out, \" (NEVER REDUCES) */ assert(yyruleno!=%d);\\n\",",
          "4754:               rp->iRule); lineno++;",
          "4755:     }else if( rp->doesReduce ){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a634c9e653713cfed97f4409486470bc817f514f",
      "candidate_info": {
        "commit_hash": "a634c9e653713cfed97f4409486470bc817f514f",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a634c9e653713cfed97f4409486470bc817f514f",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c"
        ],
        "message": "Window functions are never constant.\n\nFossilOrigin-Name: 35f0b5a8c7921f7419eeb11be8201fd6988047042fcaeffa297fc322bc480c1f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 54410f0e7710542d5159d0449898598d2b7f7676bfd993644ca47da1bf1fcdac",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1943:     case TK_FUNCTION:",
          "1945:         return WRC_Continue;",
          "1946:       }else{",
          "1947:         pWalker->eCode = 0;",
          "",
          "[Removed Lines]",
          "1944:       if( pWalker->eCode>=4 || ExprHasProperty(pExpr,EP_ConstFunc) ){",
          "",
          "[Added Lines]",
          "1944:       if( (pWalker->eCode>=4 || ExprHasProperty(pExpr,EP_ConstFunc))",
          "1945:        && !ExprHasProperty(pExpr, EP_WinFunc)",
          "1946:       ){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "786142a994c1bd35e62e2b9621b035716943719d",
      "candidate_info": {
        "commit_hash": "786142a994c1bd35e62e2b9621b035716943719d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/786142a994c1bd35e62e2b9621b035716943719d",
        "files": [
          "manifest",
          "manifest.uuid",
          "tool/mksqlite3c.tcl"
        ],
        "message": "If an amalgamation is created using SQLITE_ENABLE_UPDATE_DELETE_LIMIT, ensure that it can still be compiled without that option by setting the SQLITE_UDL_CAPABLE_PARSER flag in the preamble.\n\nFossilOrigin-Name: 5b905d7d7714d1d2c433ff58f5d6917d6d27302d44ca347aa740e768f1354b16",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "tool/mksqlite3c.tcl||tool/mksqlite3c.tcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5a74fa3f0a64f462c8add9beae231a9bbdd19e54d07b54f08726cb1411fc8d3a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tool/mksqlite3c.tcl||tool/mksqlite3c.tcl": [
          "File: tool/mksqlite3c.tcl -> tool/mksqlite3c.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "88: #endif}",
          "89: }",
          "91: # These are the header files used by SQLite.  The first time any of these",
          "92: # files are seen in a #include statement in the C code, include the complete",
          "93: # text of the file in-line.  The file only needs to be included once.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91: # Examine the parse.c file.  If it contains lines of the form:",
          "92: #",
          "93: #    \"#ifndef SQLITE_ENABLE_UPDATE_LIMIT",
          "94: #",
          "95: # then set the SQLITE_UDL_CAPABLE_PARSER flag in the amalgamation.",
          "96: #",
          "97: set in [open tsrc/parse.c]",
          "98: if {[regexp {ifndef SQLITE_ENABLE_UPDATE_DELETE_LIMIT} [read $in]]} {",
          "99:   puts $out \"#define SQLITE_UDL_CAPABLE_PARSER 1\"",
          "100: }",
          "101: close $in",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0c4f82051c7ff301ea78cf1d279005d2dc26ad19",
      "candidate_info": {
        "commit_hash": "0c4f82051c7ff301ea78cf1d279005d2dc26ad19",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/0c4f82051c7ff301ea78cf1d279005d2dc26ad19",
        "files": [
          "ext/misc/zipfile.c",
          "manifest",
          "manifest.uuid",
          "test/zipfile.test"
        ],
        "message": "Do not allow the zipfile virtual table to start a transaction if no filename has been specified.\n\nFossilOrigin-Name: 7405e982257611803792617f5d8142c54f9831b4a030f4de8607888c525e6289",
        "before_after_code_files": [
          "ext/misc/zipfile.c||ext/misc/zipfile.c",
          "manifest.uuid||manifest.uuid",
          "test/zipfile.test||test/zipfile.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/misc/zipfile.c||ext/misc/zipfile.c": [
          "File: ext/misc/zipfile.c -> ext/misc/zipfile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1444:   int rc = SQLITE_OK;",
          "1446:   assert( pTab->pWriteFd==0 );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1447:   if( pTab->zFile==0 ) return SQLITE_OK;",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 28900e5cab73f9edb9383d64a37e14fed0602966cb704ddffa60c0281698fd52",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/zipfile.test||test/zipfile.test": [
          "File: test/zipfile.test -> test/zipfile.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "834:   REPLACE INTO t2 values(null,null,null,null,null,10,null);",
          "835: } {}",
          "839: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "837: # 2020-01-02 Yongheng fuzzer discovery",
          "838: #",
          "839: do_catchsql_test 16.10 {",
          "840:   DELETE FROM zipfile;",
          "841: } {1 {zipfile() function requires an argument}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0b973c8bffd6686ea9c34c016f361f95719b1190",
      "candidate_info": {
        "commit_hash": "0b973c8bffd6686ea9c34c016f361f95719b1190",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/0b973c8bffd6686ea9c34c016f361f95719b1190",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/build.c"
        ],
        "message": "Add an ALWAYS() to a conditional which is apparently always true.\n\nFossilOrigin-Name: ea44c607b8038999a6bda4d761d95056aa4058d6c2891b7eee0715a50e703490",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/build.c||src/build.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 40d10e7aad5b899206e45d1f8606470a90a07049e15d94c3811cfe695f3a402e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2638:       sqlite3ColumnsFromExprList(pParse, pTable->pCheck,",
          "2639:                                  &pTable->nCol, &pTable->aCol);",
          "2640:       if( db->mallocFailed==0",
          "2642:        && pTable->nCol==pSel->pEList->nExpr",
          "2643:       ){",
          "2644:         sqlite3SelectAddColumnTypeAndCollation(pParse, pTable, pSel,",
          "",
          "[Removed Lines]",
          "2641:        && pParse->nErr==0",
          "",
          "[Added Lines]",
          "2641:        && ALWAYS(pParse->nErr==0)",
          "",
          "---------------"
        ]
      }
    }
  ]
}