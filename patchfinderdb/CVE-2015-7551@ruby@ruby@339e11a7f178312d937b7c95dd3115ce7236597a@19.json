{
  "cve_id": "CVE-2015-7551",
  "cve_desc": "The Fiddle::Handle implementation in ext/fiddle/handle.c in Ruby before 2.0.0-p648, 2.1 before 2.1.8, and 2.2 before 2.2.4, as distributed in Apple OS X before 10.11.4 and other products, mishandles tainting, which allows context-dependent attackers to execute arbitrary code or cause a denial of service (application crash) via a crafted string, related to the DL module and the libffi library.  NOTE: this vulnerability exists because of a CVE-2009-5147 regression.",
  "repo": "ruby/ruby",
  "patch_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
  "patch_info": {
    "commit_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
    "repo": "ruby/ruby",
    "commit_url": "https://github.com/ruby/ruby/commit/339e11a7f178312d937b7c95dd3115ce7236597a",
    "files": [
      "ChangeLog",
      "ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb",
      "version.h"
    ],
    "message": "merge revision(s): 53153 and 23405@ruby_1_9_1\n\n\t* ext/fiddle/handle.c: check tainted string arguments.\n\t  Patch provided by tenderlove and nobu.\n\n\t* test/fiddle/test_handle.rb (class TestHandle): add test for above.\n\n\t* ext/dl/handle.c (rb_dlhandle_initialize): prohibits DL::dlopen\n\t  with a tainted name of library.\n\t  Patch by sheepman <sheepman AT sheepman.sakura.ne.jp>.\n\n\t* ext/dl/handle.c (rb_dlhandle_sym): ditto\n\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53156 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
    "before_after_code_files": [
      "ext/fiddle/handle.c||ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb",
      "version.h||version.h"
    ]
  },
  "patch_diff": {
    "ext/fiddle/handle.c||ext/fiddle/handle.c": [
      "File: ext/fiddle/handle.c -> ext/fiddle/handle.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #include <ruby.h>",
      "2: #include <fiddle.h>",
      "4: VALUE rb_cHandle;",
      "6: struct dl_handle {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4: #define SafeStringValueCStr(v) (rb_check_safe_obj(rb_string_value(&v)), StringValueCStr(v))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "143:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "144:  break;",
      "145:       case 1:",
      "147:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "148:  break;",
      "149:       case 2:",
      "151:  cflag = NUM2INT(flag);",
      "152:  break;",
      "153:       default:",
      "",
      "[Removed Lines]",
      "146:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "150:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "",
      "[Added Lines]",
      "148:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "152:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "263:     return PTR2NUM(fiddle_handle);",
      "264: }",
      "",
      "[Removed Lines]",
      "266: static VALUE fiddle_handle_sym(void *handle, const char *symbol);",
      "",
      "[Added Lines]",
      "268: static VALUE fiddle_handle_sym(void *handle, VALUE symbol);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "282:  rb_raise(rb_eFiddleError, \"closed handle\");",
      "283:     }",
      "286: }",
      "288: #ifndef RTLD_NEXT",
      "",
      "[Removed Lines]",
      "285:     return fiddle_handle_sym(fiddle_handle->ptr, StringValueCStr(sym));",
      "",
      "[Added Lines]",
      "287:     return fiddle_handle_sym(fiddle_handle->ptr, sym);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "305: static VALUE",
      "306: rb_fiddle_handle_s_sym(VALUE self, VALUE sym)",
      "307: {",
      "309: }",
      "311: static VALUE",
      "313: {",
      "314: #if defined(HAVE_DLERROR)",
      "315:     const char *err;",
      "",
      "[Removed Lines]",
      "308:     return fiddle_handle_sym(RTLD_NEXT, StringValueCStr(sym));",
      "312: fiddle_handle_sym(void *handle, const char *name)",
      "",
      "[Added Lines]",
      "310:     return fiddle_handle_sym(RTLD_NEXT, sym);",
      "314: fiddle_handle_sym(void *handle, VALUE symbol)",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "318: # define CHECK_DLERROR",
      "319: #endif",
      "320:     void (*func)();",
      "322:     rb_secure(2);",
      "323: #ifdef HAVE_DLERROR",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:     const char *name = SafeStringValueCStr(symbol);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "367:     }",
      "368: #endif",
      "369:     if( !func ){",
      "371:     }",
      "373:     return PTR2NUM(func);",
      "",
      "[Removed Lines]",
      "370:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%s\\\"\", name);",
      "",
      "[Added Lines]",
      "373:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%\"PRIsVALUE\"\\\"\", symbol);",
      "",
      "---------------"
    ],
    "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb": [
      "File: test/fiddle/test_handle.rb -> test/fiddle/test_handle.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "11:     include Test::Unit::Assertions",
      "13:     def test_to_i",
      "14:       handle = Fiddle::Handle.new(LIBC_SO)",
      "15:       assert_kind_of Integer, handle.to_i",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13:     def test_safe_handle_open",
      "14:       t = Thread.new do",
      "15:         $SAFE = 1",
      "16:         Fiddle::Handle.new(LIBC_SO.taint)",
      "17:       end",
      "18:       assert_raise(SecurityError) { t.value }",
      "19:     end",
      "21:     def test_safe_function_lookup",
      "22:       t = Thread.new do",
      "23:         h = Fiddle::Handle.new(LIBC_SO)",
      "24:         $SAFE = 1",
      "25:         h[\"qsort\".taint]",
      "26:       end",
      "27:       assert_raise(SecurityError) { t.value }",
      "28:     end",
      "",
      "---------------"
    ],
    "version.h||version.h": [
      "File: version.h -> version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #define RUBY_VERSION \"2.1.8\"",
      "2: #define RUBY_RELEASE_DATE \"2015-12-16\"",
      "5: #define RUBY_RELEASE_YEAR 2015",
      "6: #define RUBY_RELEASE_MONTH 12",
      "",
      "[Removed Lines]",
      "3: #define RUBY_PATCHLEVEL 438",
      "",
      "[Added Lines]",
      "3: #define RUBY_PATCHLEVEL 439",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "694463ba9b0574b6483614a256114e55a740d821",
      "candidate_info": {
        "commit_hash": "694463ba9b0574b6483614a256114e55a740d821",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/694463ba9b0574b6483614a256114e55a740d821",
        "files": [
          "ChangeLog",
          "test/drb/test_drb.rb",
          "test/rinda/test_rinda.rb",
          "version.h"
        ],
        "message": "merge revision(s) 51916: [Backport #11543]\n\n\t* test/drb/test_drb.rb: Run Rinda/DRb tests on localhost. [Fix GH-1027]\n\t  patch by voxik.\n\n\t* test/rinda/test_rinda.rb: ditto\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@52353 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "test/drb/test_drb.rb||test/drtest_drb.rb",
          "test/rindtest_rinda.rb||test/rinda/test_rinda.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "test/drb/test_drb.rb||test/drtest_drb.rb": [
          "File: test/drb/test_drb.rb -> test/drtest_drb.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "194:     setup_service 'ut_drb.rb'",
          "195:     super",
          "196:     @server = (1..3).collect do |n|",
          "198:     end",
          "199:   end",
          "",
          "[Removed Lines]",
          "197:       DRb::DRbServer.new(nil, Onecky.new(n.to_s))",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/rindtest_rinda.rb||test/rinda/test_rinda.rb": [
          "File: test/rindtest_rinda.rb -> test/rinda/test_rinda.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "483:     service = DRb.start_service(\"druby://localhost:0\", @ts_base)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "491:       DRb.start_service(\"druby://localhost:0\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "507:       DRb.start_service(\"druby://localhost:0\")",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "525:   @server = DRb.primary_server || DRb.start_service(\"druby://localhost:0\")",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.8\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "7: #define RUBY_RELEASE_DAY 29",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-09-29\"",
          "3: #define RUBY_PATCHLEVEL 405",
          "6: #define RUBY_RELEASE_MONTH 9",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-10-29\"",
          "3: #define RUBY_PATCHLEVEL 406",
          "6: #define RUBY_RELEASE_MONTH 10",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f1cb00f82ec567b4d61df0435fbc357efeb7cc00",
      "candidate_info": {
        "commit_hash": "f1cb00f82ec567b4d61df0435fbc357efeb7cc00",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/f1cb00f82ec567b4d61df0435fbc357efeb7cc00",
        "files": [
          "ChangeLog",
          "ext/pty/pty.c",
          "version.h"
        ],
        "message": "merge revision(s) 49776: [Backport #9144]\n\n\t* ext/pty/pty.c: AIX supports autopush.\n\t  Patch by Perry Smith [ruby-core:58539] [Bug #9144]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@50570 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "ext/pty/pty.c||ext/pty/pty.c",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/pty/pty.c||ext/pty/pty.c": [
          "File: ext/pty/pty.c -> ext/pty/pty.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "262:     if ((slavefd = rb_cloexec_open(slavedevice, O_RDWR|O_NOCTTY, 0)) == -1) goto error;",
          "263:     rb_update_max_fd(slavefd);",
          "266:     if (ioctl(slavefd, I_PUSH, \"ptem\") == -1) goto error;",
          "267:     if (ioctl(slavefd, I_PUSH, \"ldterm\") == -1) goto error;",
          "268:     if (ioctl(slavefd, I_PUSH, \"ttcompat\") == -1) goto error;",
          "",
          "[Removed Lines]",
          "265: #if defined(I_PUSH) && !defined(__linux__)",
          "",
          "[Added Lines]",
          "265: #if defined(I_PUSH) && !defined(__linux__) && !defined(_AIX)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "346:     if (no_mesg(slavedevice, nomesg) == -1) goto error;",
          "347:     if((slavefd = rb_cloexec_open(slavedevice, O_RDWR, 0)) == -1) goto error;",
          "348:     rb_update_max_fd(slavefd);",
          "350:     if(ioctl(slavefd, I_PUSH, \"ptem\") == -1) goto error;",
          "351:     if(ioctl(slavefd, I_PUSH, \"ldterm\") == -1) goto error;",
          "352:     ioctl(slavefd, I_PUSH, \"ttcompat\");",
          "",
          "[Removed Lines]",
          "349: #if defined(I_PUSH) && !defined(__linux__)",
          "",
          "[Added Lines]",
          "349: #if defined(I_PUSH) && !defined(__linux__) && !defined(_AIX)",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 5",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-05-20\"",
          "3: #define RUBY_PATCHLEVEL 345",
          "7: #define RUBY_RELEASE_DAY 20",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-05-21\"",
          "3: #define RUBY_PATCHLEVEL 346",
          "7: #define RUBY_RELEASE_DAY 21",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "14c7be2e5a5738b7f5fa55bc9cefd43a2e8a02d2",
      "candidate_info": {
        "commit_hash": "14c7be2e5a5738b7f5fa55bc9cefd43a2e8a02d2",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/14c7be2e5a5738b7f5fa55bc9cefd43a2e8a02d2",
        "files": [
          "ChangeLog",
          "dln.c",
          "version.h"
        ],
        "message": "merge revision(s) 50416: [Backport #11111]\n\n\tdln.c: fix EXTERNAL_PREFIX\n\n\t* configure.in (EXPORT_PREFIX): revert r50410.\n\n\t* dln.c (EXTERNAL_PREFIX): define by predefined macros.\n  configured EXPORT_PREFIX is different thing.\n\n\t* win32/Makefile.sub: r50414-50415.\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@50469 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "dln.c||dln.c",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "dln.c||dln.c": [
          "File: dln.c -> dln.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "108: #ifndef FUNCNAME_PATTERN",
          "109: # if defined(__hp9000s300) || ((defined(__NetBSD__) || defined(__FreeBSD__) || defined(__OpenBSD__)) && !defined(__ELF__)) || defined(__BORLANDC__) || defined(NeXT) || defined(__WATCOMC__) || defined(MACOSX_DYLD)",
          "111: # else",
          "113: # endif",
          "114: #endif",
          "116: #if defined __CYGWIN__ || defined DOSISH",
          "",
          "[Removed Lines]",
          "110: #  define FUNCNAME_PREFIX \"_Init_\"",
          "112: #  define FUNCNAME_PREFIX \"Init_\"",
          "",
          "[Added Lines]",
          "110: #  define EXTERNAL_PREFIX \"_\"",
          "112: #  define EXTERNAL_PREFIX \"\"",
          "114: # define FUNCNAME_PREFIX EXTERNAL_PREFIX\"Init_\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1340:      goto failed;",
          "1341:  }",
          "1343:  init_fct = (void(*)())(VALUE)dlsym(handle, buf);",
          "1344: #ifdef __native_client__",
          "1345:  strcpy(file, orig);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1344: # if defined RUBY_EXPORT",
          "1345:  {",
          "1346:      static const char incompatible[] = \"incompatible library version\";",
          "1347:      void *ex = dlsym(handle, EXTERNAL_PREFIX\"ruby_xmalloc\");",
          "1348:      if (ex && ex != ruby_xmalloc) {",
          "1350: #   if defined __APPLE__",
          "1352:   rb_fatal(\"%s - %s\", incompatible, file);",
          "1353: #   else",
          "1354:   dlclose(handle);",
          "1355:   error = incompatible;",
          "1356:   goto failed;",
          "1357: #   endif",
          "1358:      }",
          "1359:  }",
          "1360: # endif",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "2: #define RUBY_RELEASE_DATE \"2015-05-11\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 5",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 341",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 342",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7829c32eaf4bfbd0bdd4a63cf13dd09929057c8c",
      "candidate_info": {
        "commit_hash": "7829c32eaf4bfbd0bdd4a63cf13dd09929057c8c",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/7829c32eaf4bfbd0bdd4a63cf13dd09929057c8c",
        "files": [
          "ChangeLog",
          "lib/fileutils.rb",
          "test/fileutils/test_fileutils.rb",
          "version.h"
        ],
        "message": "merge revision(s) 50141: [Backport #11021]\n\n\t* lib/fileutils.rb (FileUtils#mv): show the exact target path in\n\t  the error message instead of the destination parent directory\n\t  name.  patched by Joao Britto <jabcalves AT gmail.com> at\n\t  [ruby-core:68706].  [Bug #11021]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@50397 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "lib/fileutils.rb||lib/fileutils.rb",
          "test/fileutils/test_fileutils.rb||test/fileutils/test_fileutils.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "lib/fileutils.rb||lib/fileutils.rb": [
          "File: lib/fileutils.rb -> lib/fileutils.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "516:       begin",
          "517:         if destent.exist?",
          "518:           if destent.directory?",
          "520:           else",
          "521:             destent.remove_file if rename_cannot_overwrite_file?",
          "522:           end",
          "",
          "[Removed Lines]",
          "519:             raise Errno::EEXIST, dest",
          "",
          "[Added Lines]",
          "519:             raise Errno::EEXIST, d",
          "",
          "---------------"
        ],
        "test/fileutils/test_fileutils.rb||test/fileutils/test_fileutils.rb": [
          "File: test/fileutils/test_fileutils.rb -> test/fileutils/test_fileutils.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "391:     mkdir 'tmp/tmpdir'",
          "392:     mkdir_p 'tmp/dest2/tmpdir'",
          "394:       mv 'tmp/tmpdir', 'tmp/dest2'",
          "395:     }",
          "396:     mkdir 'tmp/dest2/tmpdir/junk'",
          "",
          "[Removed Lines]",
          "393:     assert_raise(Errno::EEXIST) {",
          "",
          "[Added Lines]",
          "393:     assert_raise_with_message(Errno::EEXIST, %r' - tmp/dest2/tmpdir\\z',",
          "394:                               '[ruby-core:68706] [Bug #11021]') {",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "2: #define RUBY_RELEASE_DATE \"2015-04-28\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 4",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 339",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 340",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "585287338ed2eb6f1443d838911632eff243a998",
      "candidate_info": {
        "commit_hash": "585287338ed2eb6f1443d838911632eff243a998",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/585287338ed2eb6f1443d838911632eff243a998",
        "files": [
          "ChangeLog",
          "class.c",
          "test/ruby/test_refinement.rb",
          "version.h",
          "vm_core.h",
          "vm_insnhelper.c"
        ],
        "message": "merge revision(s) r49685,r49687: [Backport #10885]\n\n\t* vm_insnhelper.c (rb_vm_rewrite_cref_stack): copy nd_refinements\n\t  of orignal crefs. It fixes segmentation fault when calling\n\t  refined method in duplicate module. [ruby-dev:48878] [Bug #10885]\n\n\t* vm_core.h, class.c: change accordingly.\n\n\t* test/ruby/test_refinement.rb: add a test for above.\n\t  of original crefs. It fixes segmentation fault when calling\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49995 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "class.c||class.c",
          "test/ruby/test_refinement.rb||test/ruby/test_refinement.rb",
          "version.h||version.h",
          "vm_core.h||vm_core.h",
          "vm_insnhelper.c||vm_insnhelper.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "class.c||class.c": [
          "File: class.c -> class.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "232:     return rb_class_boot(super);",
          "233: }",
          "254: static void",
          "255: clone_method(VALUE klass, ID mid, const rb_method_entry_t *me)",
          "256: {",
          "",
          "[Removed Lines]",
          "235: static void",
          "236: rewrite_cref_stack(NODE *node, VALUE old_klass, VALUE new_klass, NODE **new_cref_ptr)",
          "237: {",
          "238:     NODE *new_node;",
          "239:     while (node) {",
          "240:  if (node->nd_clss == old_klass) {",
          "241:      new_node = NEW_CREF(new_klass);",
          "242:      RB_OBJ_WRITE(new_node, &new_node->nd_next, node->nd_next);",
          "244:      return;",
          "245:  }",
          "246:  new_node = NEW_CREF(node->nd_clss);",
          "247:  node = node->nd_next;",
          "249:  new_cref_ptr = &new_node->nd_next;",
          "250:     }",
          "252: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "260:  NODE *new_cref;",
          "261:  newiseqval = rb_iseq_clone(me->def->body.iseq->self, klass);",
          "262:  GetISeqPtr(newiseqval, iseq);",
          "264:  RB_OBJ_WRITE(iseq->self, &iseq->cref_stack, new_cref);",
          "265:  rb_add_method(klass, mid, VM_METHOD_TYPE_ISEQ, iseq, me->flag);",
          "266:  RB_GC_GUARD(newiseqval);",
          "",
          "[Removed Lines]",
          "263:  rewrite_cref_stack(me->def->body.iseq->cref_stack, me->klass, klass, &new_cref);",
          "",
          "[Added Lines]",
          "244:  rb_vm_rewrite_cref_stack(me->def->body.iseq->cref_stack, me->klass, klass, &new_cref);",
          "",
          "---------------"
        ],
        "test/ruby/test_refinement.rb||test/ruby/test_refinement.rb": [
          "File: test/ruby/test_refinement.rb -> test/ruby/test_refinement.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1358:                    :foo, bug10826)",
          "1359:   end",
          "1361:   private",
          "1363:   def eval_using(mod, s)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1361:   def test_call_refined_method_in_duplicate_module",
          "1362:     bug10885 = '[ruby-dev:48878]'",
          "1363:     assert_in_out_err([], <<-INPUT, [], [], bug10885)",
          "1364:       module M",
          "1365:         refine Object do",
          "1366:           def raise",
          "1367:             # do nothing",
          "1368:           end",
          "1369:         end",
          "1371:         class << self",
          "1372:           using M",
          "1373:           def m0",
          "1374:             raise",
          "1375:           end",
          "1376:         end",
          "1378:         using M",
          "1379:         def M.m1",
          "1380:           raise",
          "1381:         end",
          "1382:       end",
          "1384:       M.dup.m0",
          "1385:       M.dup.m1",
          "1386:     INPUT",
          "1387:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "2: #define RUBY_RELEASE_DATE \"2015-03-18\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 3",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 316",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 317",
          "",
          "---------------"
        ],
        "vm_core.h||vm_core.h": [
          "File: vm_core.h -> vm_core.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "897: int rb_autoloading_value(VALUE mod, ID id, VALUE* value);",
          "899: #define sysstack_error GET_VM()->special_exceptions[ruby_error_sysstack]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "899: void rb_vm_rewrite_cref_stack(NODE *node, VALUE old_klass, VALUE new_klass, NODE **new_cref_ptr);",
          "",
          "---------------"
        ],
        "vm_insnhelper.c||vm_insnhelper.c": [
          "File: vm_insnhelper.c -> vm_insnhelper.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "278:     return cref;",
          "279: }",
          "281: static NODE *",
          "282: vm_cref_push(rb_thread_t *th, VALUE klass, int noex, rb_block_t *blockptr)",
          "283: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "281: void",
          "282: rb_vm_rewrite_cref_stack(NODE *node, VALUE old_klass, VALUE new_klass, NODE **new_cref_ptr)",
          "283: {",
          "284:     NODE *new_node;",
          "285:     while (node) {",
          "286:  if (node->nd_clss == old_klass) {",
          "287:      new_node = NEW_CREF(new_klass);",
          "288:      COPY_CREF_OMOD(new_node, node);",
          "289:      RB_OBJ_WRITE(new_node, &new_node->nd_next, node->nd_next);",
          "291:      return;",
          "292:  }",
          "293:  new_node = NEW_CREF(node->nd_clss);",
          "294:  COPY_CREF_OMOD(new_node, node);",
          "295:  node = node->nd_next;",
          "297:  new_cref_ptr = &new_node->nd_next;",
          "298:     }",
          "300: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}