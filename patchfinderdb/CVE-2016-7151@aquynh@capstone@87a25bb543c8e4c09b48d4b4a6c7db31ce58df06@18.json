{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f04254a87c5fed7abddc3aa607ec8bc7f67bfc6a",
      "candidate_info": {
        "commit_hash": "f04254a87c5fed7abddc3aa607ec8bc7f67bfc6a",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/f04254a87c5fed7abddc3aa607ec8bc7f67bfc6a",
        "files": [
          "include/arm.h",
          "include/arm64.h",
          "include/mips.h",
          "include/ppc.h",
          "include/sparc.h",
          "include/systemz.h",
          "include/x86.h",
          "include/xcore.h"
        ],
        "message": "Swiched from stdint.h to myinttypes.h",
        "before_after_code_files": [
          "include/arm.h||include/arm.h",
          "include/arm64.h||include/arm64.h",
          "include/mips.h||include/mips.h",
          "include/ppc.h||include/ppc.h",
          "include/sparc.h||include/sparc.h",
          "include/systemz.h||include/systemz.h",
          "include/x86.h||include/x86.h",
          "include/xcore.h||include/xcore.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/arm.h||include/arm.h": [
          "File: include/arm.h -> include/arm.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: extern \"C\" {",
          "9: #endif",
          "12: #include \"platform.h\"",
          "14: #ifdef _MSC_VER",
          "",
          "[Removed Lines]",
          "11: #include <stdint.h>",
          "",
          "[Added Lines]",
          "11: #include \"../myinttypes.h\"",
          "",
          "---------------"
        ],
        "include/arm64.h||include/arm64.h": [
          "File: include/arm64.h -> include/arm64.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: extern \"C\" {",
          "9: #endif",
          "12: #include \"platform.h\"",
          "14: #ifdef _MSC_VER",
          "",
          "[Removed Lines]",
          "11: #include <stdint.h>",
          "",
          "[Added Lines]",
          "11: #include \"../myinttypes.h\"",
          "",
          "---------------"
        ],
        "include/mips.h||include/mips.h": [
          "File: include/mips.h -> include/mips.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: extern \"C\" {",
          "9: #endif",
          "12: #include \"platform.h\"",
          "",
          "[Removed Lines]",
          "11: #include <stdint.h>",
          "",
          "[Added Lines]",
          "11: #include \"../myinttypes.h\"",
          "",
          "---------------"
        ],
        "include/ppc.h||include/ppc.h": [
          "File: include/ppc.h -> include/ppc.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: extern \"C\" {",
          "9: #endif",
          "12: #include \"platform.h\"",
          "14: #ifdef _MSC_VER",
          "",
          "[Removed Lines]",
          "11: #include <stdint.h>",
          "",
          "[Added Lines]",
          "11: #include \"../myinttypes.h\"",
          "",
          "---------------"
        ],
        "include/sparc.h||include/sparc.h": [
          "File: include/sparc.h -> include/sparc.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: extern \"C\" {",
          "9: #endif",
          "12: #include \"platform.h\"",
          "",
          "[Removed Lines]",
          "11: #include <stdint.h>",
          "",
          "[Added Lines]",
          "11: #include \"../myinttypes.h\"",
          "",
          "---------------"
        ],
        "include/systemz.h||include/systemz.h": [
          "File: include/systemz.h -> include/systemz.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: extern \"C\" {",
          "9: #endif",
          "12: #include \"platform.h\"",
          "14: #ifdef _MSC_VER",
          "",
          "[Removed Lines]",
          "11: #include <stdint.h>",
          "",
          "[Added Lines]",
          "11: #include \"../myinttypes.h\"",
          "",
          "---------------"
        ],
        "include/x86.h||include/x86.h": [
          "File: include/x86.h -> include/x86.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: extern \"C\" {",
          "9: #endif",
          "14: #define X86_REL_ADDR(insn) (insn.address + insn.size + insn.detail->x86.disp)",
          "",
          "[Removed Lines]",
          "11: #include <stdint.h>",
          "",
          "[Added Lines]",
          "11: #include \"../myinttypes.h\"",
          "",
          "---------------"
        ],
        "include/xcore.h||include/xcore.h": [
          "File: include/xcore.h -> include/xcore.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: extern \"C\" {",
          "9: #endif",
          "12: #include \"platform.h\"",
          "14: #ifdef _MSC_VER",
          "",
          "[Removed Lines]",
          "11: #include <stdint.h>",
          "",
          "[Added Lines]",
          "11: #include \"../myinttypes.h\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d3155db362dee12c93aa0df59de183250e32d1a1",
      "candidate_info": {
        "commit_hash": "d3155db362dee12c93aa0df59de183250e32d1a1",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/d3155db362dee12c93aa0df59de183250e32d1a1",
        "files": [
          "arch/X86/X86DisassemblerDecoder.c"
        ],
        "message": "Fix use of uninitialized value for some instructions\n\nCaught by Valgrind:\n\n    Conditional jump or move depends on uninitialised value(s)\n       at 0xD5BB6F: readModRM (X86DisassemblerDecoder.c:1528)\n       by 0xD5BF02: getIDWithAttrMask (X86DisassemblerDecoder.c:1101)\n       by 0xD5CC5E: getID (X86DisassemblerDecoder.c:1249)\n       by 0xD5CC5E: decodeInstruction (X86DisassemblerDecoder.c:2335)\n       by 0xD52009: X86_getInstruction (X86Disassembler.c:822)\n       by 0xD51781: cs_disasm (cs.c:503)",
        "before_after_code_files": [
          "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c": [
          "File: arch/X86/X86DisassemblerDecoder.c -> arch/X86/X86DisassemblerDecoder.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "922:  insn->opcodeType = ONEBYTE;",
          "924:  if (insn->vectorExtensionType == TYPE_EVEX) {",
          "925:   switch (mmFromEVEX2of4(insn->vectorExtensionPrefix[1])) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "923:  insn->firstByte = 0x00;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0148b043b71b3d0086356c57f7ad421c5f696f7c",
      "candidate_info": {
        "commit_hash": "0148b043b71b3d0086356c57f7ad421c5f696f7c",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/0148b043b71b3d0086356c57f7ad421c5f696f7c",
        "files": [
          "cs.c"
        ],
        "message": "Fix instruction size define",
        "before_after_code_files": [
          "cs.c||cs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cs.c||cs.c": [
          "File: cs.c -> cs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: #include \"utils.h\"",
          "18: #include \"MCRegisterInfo.h\"",
          "21: #define INSN_CACHE_SIZE 32",
          "22: #else",
          "",
          "[Removed Lines]",
          "20: #ifdef CAPSTONE_USE_SYS_DYN_MEM",
          "",
          "[Added Lines]",
          "20: #if !defined(CAPSTONE_HAS_OSXKERNEL) && !defined(CAPSTONE_DIET)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6cd1ab12a8f6afbf926f93505e5ad6749c4d0aff",
      "candidate_info": {
        "commit_hash": "6cd1ab12a8f6afbf926f93505e5ad6749c4d0aff",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/6cd1ab12a8f6afbf926f93505e5ad6749c4d0aff",
        "files": [
          "arch/ARM/ARMInstPrinter.c"
        ],
        "message": "arm: POP {reg} read/write SP register. this fixes #913",
        "before_after_code_files": [
          "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c": [
          "File: arch/ARM/ARMInstPrinter.c -> arch/ARM/ARMInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "690:          MI->flat_insn->detail->arm.operands[MI->flat_insn->detail->arm.op_count].reg = MCOperand_getReg(MCInst_getOperand(MI, 0));",
          "691:          MI->flat_insn->detail->arm.operands[MI->flat_insn->detail->arm.op_count].access = CS_AC_READ;",
          "692:          MI->flat_insn->detail->arm.op_count++;",
          "693:         }",
          "694:         SStream_concat0(O, \"}\");",
          "695:         return;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "694:                                     MI->flat_insn->detail->regs_read[MI->flat_insn->detail->regs_read_count] = ARM_REG_SP;",
          "695:                                     MI->flat_insn->detail->regs_read_count++;",
          "696:                                     MI->flat_insn->detail->regs_write[MI->flat_insn->detail->regs_write_count] = ARM_REG_SP;",
          "697:                                     MI->flat_insn->detail->regs_write_count++;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "18e8cee2dbfeb70060747264a953624c1fbf655f",
      "candidate_info": {
        "commit_hash": "18e8cee2dbfeb70060747264a953624c1fbf655f",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/18e8cee2dbfeb70060747264a953624c1fbf655f",
        "files": [
          "arch/M68K/M68KDisassembler.c"
        ],
        "message": "Fixed incorrect 8-bit displacement\n\n8-bit displacement was treated as unsigned while it should actually be signed.",
        "before_after_code_files": [
          "arch/M68K/M68KDisassembler.c||arch/M68K/M68KDisassembler.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/M68K/M68KDisassembler.c||arch/M68K/M68KDisassembler.c": [
          "File: arch/M68K/M68KDisassembler.c -> arch/M68K/M68KDisassembler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "409:    op->address_mode = M68K_AM_AREGI_INDEX_8_BIT_DISP;",
          "410:   }",
          "413:  }",
          "415:  if (EXT_INDEX_SCALE(extension)) {",
          "",
          "[Removed Lines]",
          "412:   op->mem.disp = extension & 0xff;",
          "",
          "[Added Lines]",
          "412:   op->mem.disp = (int8_t)(extension & 0xff);",
          "",
          "---------------"
        ]
      }
    }
  ]
}