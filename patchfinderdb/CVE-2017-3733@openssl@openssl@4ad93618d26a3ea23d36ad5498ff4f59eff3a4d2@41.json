{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bb5b56af4c3b9e43a698f01b70732c62d3642583",
      "candidate_info": {
        "commit_hash": "bb5b56af4c3b9e43a698f01b70732c62d3642583",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/bb5b56af4c3b9e43a698f01b70732c62d3642583",
        "files": [
          "crypto/async/async_wait.c"
        ],
        "message": "Remove fd from the list when the engine clears the wait context before pause\n\nThis fixes the num of fds added/removed returned by ASYNC_WAIT_CTX_get_changed_fds\n\nPreviously, the numbers were not consistent with the fds actually written in\nthe buffers since the fds that have been both added and removed are explicitly\nignored in the loop.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2581)\n(cherry picked from commit f89dd6738a0ec2b6cfb05a3cc5fa38843dc27d2f)",
        "before_after_code_files": [
          "crypto/async/async_wait.c||crypto/async/async_wait.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/async/async_wait.c||crypto/async/async_wait.c": [
          "File: crypto/async/async_wait.c -> crypto/async/async_wait.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "148:             continue;",
          "149:         }",
          "150:         if (curr->key == key) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "152:             if (curr->add == 1) {",
          "153:                 if (ctx->fds == curr) {",
          "154:                     ctx->fds = curr->next;",
          "155:                 }",
          "156:                 else {",
          "157:                     struct fd_lookup_st *prev = ctx->fds;",
          "158:                     while (prev->next != curr && prev->next != NULL) {",
          "159:                         prev = prev->next;",
          "160:                     }",
          "161:                     if (prev->next == NULL) {",
          "162:                         return 1;",
          "163:                     }",
          "164:                     prev->next = curr->next;",
          "165:                 }",
          "171:                 if (curr->cleanup != NULL)",
          "172:                     curr->cleanup(ctx, curr->key, curr->fd, curr->custom_data);",
          "173:                 OPENSSL_free(curr);",
          "174:                 ctx->numadd--;",
          "175:                 return 1;",
          "176:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b649ffcaea38864270ad6c2362ed0ef639749707",
      "candidate_info": {
        "commit_hash": "b649ffcaea38864270ad6c2362ed0ef639749707",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b649ffcaea38864270ad6c2362ed0ef639749707",
        "files": [
          "test/recipes/25-test_crl.t"
        ],
        "message": "Add a couple of test to check CRL fingerprint\n\nReviewed-by: Kurt Roeckx <kurt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2314)\n(cherry picked from commit 929860d0e6112f5c7766d9ea036c3f8bd8d3d719)",
        "before_after_code_files": [
          "test/recipes/25-test_crl.t||test/recipes/25-test_crl.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/25-test_crl.t||test/recipes/25-test_crl.t": [
          "File: test/recipes/25-test_crl.t -> test/recipes/25-test_crl.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: setup(\"test_crl\");",
          "20: require_ok(srctop_file('test','recipes','tconversion.pl'));",
          "",
          "[Removed Lines]",
          "18: plan tests => 3;",
          "",
          "[Added Lines]",
          "18: plan tests => 5;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24: };",
          "26: ok(run(test(['crltest'])));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: ok(compare1stline([qw{openssl crl -noout -fingerprint -in},",
          "29:                    srctop_file('test', 'testcrl.pem')],",
          "30:                   'SHA1 Fingerprint=BA:F4:1B:AD:7A:9B:2F:09:16:BC:60:A7:0E:CE:79:2E:36:00:E7:B2'));",
          "31: ok(compare1stline([qw{openssl crl -noout -fingerprint -sha256 -in},",
          "32:                    srctop_file('test', 'testcrl.pem')],",
          "33:                   'SHA256 Fingerprint=B3:A9:FD:A7:2E:8C:3D:DF:D0:F1:C3:1A:96:60:B5:FD:B0:99:7C:7F:0E:E4:34:F5:DB:87:62:36:BC:F1:BC:1B'));",
          "35: sub compare1stline {",
          "36:     my ($cmdarray, $str) = @_;",
          "37:     my @lines = run(app($cmdarray), capture => 1);",
          "39:     return 1 if $lines[0] =~ m|^\\Q${str}\\E\\R$|;",
          "40:     note \"Got      \", $lines[0];",
          "41:     note \"Expected \", $str;",
          "42:     return 0;",
          "43: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c028052c4cfc39dc99f735f1743b18867547129f",
      "candidate_info": {
        "commit_hash": "c028052c4cfc39dc99f735f1743b18867547129f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c028052c4cfc39dc99f735f1743b18867547129f",
        "files": [
          "crypto/threads_win.c"
        ],
        "message": "Revert \"Fixed deadlock in CRYPTO_THREAD_run_once for Windows\"\n\nThis reverts commit edc18749bd5dfb7e12513d3978f78f9b56104fd6.\n\nThe proposed fix is incorrect. It marks the \"run_once\" code as having\nfinished before it has. The intended semantics of run_once is that no\nthreads should proceed until the code has run exactly once. With this\nchange the \"second\" thread will think the run_once code has already been\nrun and will continue, even though it is still in progress. This could\nresult in a crash or other incorrect behaviour.\n\nReviewed-by: Tim Hudson <tjh@openssl.org>",
        "before_after_code_files": [
          "crypto/threads_win.c||crypto/threads_win.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/threads_win.c||crypto/threads_win.c": [
          "File: crypto/threads_win.c -> crypto/threads_win.c"
        ]
      }
    },
    {
      "candidate_hash": "ded9d1076cffc912ed7c40256b6202876a2b6caa",
      "candidate_info": {
        "commit_hash": "ded9d1076cffc912ed7c40256b6202876a2b6caa",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ded9d1076cffc912ed7c40256b6202876a2b6caa",
        "files": [
          "apps/ca.c",
          "apps/srp.c"
        ],
        "message": "Fix some more memory leaks with TXT_DB_insert.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2684)\n(cherry picked from commit 0fbaef9e64fa10446aff805791befaa2b967e322)",
        "before_after_code_files": [
          "apps/ca.c||apps/ca.c",
          "apps/srp.c||apps/srp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/ca.c||apps/ca.c": [
          "File: apps/ca.c -> apps/ca.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2063:         row[DB_rev_date] = NULL;",
          "2064:         row[DB_file] = OPENSSL_strdup(\"unknown\");",
          "2066:         irow = app_malloc(sizeof(*irow) * (DB_NUMBER + 1), \"row ptr\");",
          "2068:             irow[i] = row[i];",
          "2071:         irow[DB_NUMBER] = NULL;",
          "2073:         if (!TXT_DB_insert(db->db, irow)) {",
          "2074:             BIO_printf(bio_err, \"failed to update database\\n\");",
          "2075:             BIO_printf(bio_err, \"TXT_DB error number %ld\\n\", db->db->error);",
          "2076:             goto end;",
          "2077:         }",
          "2080:         if (type == -1)",
          "2081:             ok = 1;",
          "",
          "[Removed Lines]",
          "2067:         for (i = 0; i < DB_NUMBER; i++) {",
          "2069:             row[i] = NULL;",
          "2070:         }",
          "",
          "[Added Lines]",
          "2066:         if (row[DB_type] == NULL || row[DB_file] == NULL) {",
          "2067:             BIO_printf(bio_err, \"Memory allocation failure\\n\");",
          "2068:             goto end;",
          "2069:         }",
          "2072:         for (i = 0; i < DB_NUMBER; i++)",
          "2079:             OPENSSL_free(irow);",
          "2083:         for (i = 0; i < DB_NUMBER; i++)",
          "2084:             row[i] = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2108:     }",
          "2109:     ok = 1;",
          "2110:  end:",
          "2112:         OPENSSL_free(row[i]);",
          "2114:     return (ok);",
          "2115: }",
          "",
          "[Removed Lines]",
          "2111:     for (i = 0; i < DB_NUMBER; i++) {",
          "2113:     }",
          "",
          "[Added Lines]",
          "2118:     for (i = 0; i < DB_NUMBER; i++)",
          "",
          "---------------"
        ],
        "apps/srp.c||apps/srp.c": [
          "File: apps/srp.c -> apps/srp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "92:     int i;",
          "94:     irow = app_malloc(sizeof(*irow) * (DB_NUMBER + 1), \"row pointers\");",
          "96:         irow[i] = row[i];",
          "99:     irow[DB_NUMBER] = NULL;",
          "101:     if (!TXT_DB_insert(db->db, irow)) {",
          "",
          "[Removed Lines]",
          "95:     for (i = 0; i < DB_NUMBER; i++) {",
          "97:         row[i] = NULL;",
          "98:     }",
          "",
          "[Added Lines]",
          "95:     for (i = 0; i < DB_NUMBER; i++)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c9c1a63d58c7950484347d153a2150b4587e7a53",
      "candidate_info": {
        "commit_hash": "c9c1a63d58c7950484347d153a2150b4587e7a53",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c9c1a63d58c7950484347d153a2150b4587e7a53",
        "files": [
          "ssl/t1_ext.c"
        ],
        "message": "Rework error handling of custom_ext_meth_add towards strong exception safety.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2636)\n(cherry picked from commit ed874fac6399d5064d6eb8fe2022b918aeaf75af)",
        "before_after_code_files": [
          "ssl/t1_ext.c||ssl/t1_ext.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/t1_ext.c||ssl/t1_ext.c": [
          "File: ssl/t1_ext.c -> ssl/t1_ext.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "181:     tmp = OPENSSL_realloc(exts->meths,",
          "182:                           (exts->meths_count + 1) * sizeof(custom_ext_method));",
          "188:         return 0;",
          "191:     exts->meths = tmp;",
          "192:     meth = exts->meths + exts->meths_count;",
          "",
          "[Removed Lines]",
          "184:     if (tmp == NULL) {",
          "185:         OPENSSL_free(exts->meths);",
          "186:         exts->meths = NULL;",
          "187:         exts->meths_count = 0;",
          "189:     }",
          "",
          "[Added Lines]",
          "184:     if (tmp == NULL)",
          "",
          "---------------"
        ]
      }
    }
  ]
}