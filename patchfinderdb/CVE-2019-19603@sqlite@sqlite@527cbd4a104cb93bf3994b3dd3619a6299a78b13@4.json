{
  "cve_id": "CVE-2019-19603",
  "cve_desc": "SQLite 3.30.1 mishandles certain SELECT statements with a nonexistent VIEW, leading to an application crash.",
  "repo": "sqlite/sqlite",
  "patch_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
  "patch_info": {
    "commit_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/527cbd4a104cb93bf3994b3dd3619a6299a78b13",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/build.c",
      "src/sqliteInt.h",
      "test/altertab.test"
    ],
    "message": "Do not allow CREATE TABLE or CREATE VIEW of an object with a name that looks like a shadow table name.\n\nFossilOrigin-Name: 6aef58b629d89955f85f65191ba2be67b2adfac4f0327fe9a7141cb2705dbc00",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/build.c||src/build.c",
      "src/sqliteInt.h||src/sqliteInt.h",
      "test/altertab.test||test/altertab.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 8ad34d36a141fa8f5d9bd784dfeb892c983897a6dc6b867607cc668508acf944",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/build.c||src/build.c": [
      "File: src/build.c -> src/build.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "856:       }",
      "857:     }",
      "858:   }else{",
      "861:     ){",
      "862:       sqlite3ErrorMsg(pParse, \"object name reserved for internal use: %s\",",
      "863:                       zName);",
      "864:       return SQLITE_ERROR;",
      "865:     }",
      "866:   }",
      "867:   return SQLITE_OK;",
      "868: }",
      "",
      "[Removed Lines]",
      "859:     if( pParse->nested==0",
      "860:      && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7)",
      "",
      "[Added Lines]",
      "859:     if( (pParse->nested==0 && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7))",
      "860:      || (sqlite3ReadOnlyShadowTables(db) && sqlite3ShadowTableName(db, zName))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "2132: static int isShadowTableName(sqlite3 *db, char *zName){",
      "",
      "[Added Lines]",
      "2133: int sqlite3ShadowTableName(sqlite3 *db, const char *zName){",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2147:   if( pMod->pModule->xShadowName==0 ) return 0;",
      "2148:   return pMod->pModule->xShadowName(zTail+1);",
      "2149: }",
      "",
      "[Removed Lines]",
      "2150: #else",
      "2151: # define isShadowTableName(x,y) 0",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2190:   p = pParse->pNewTable;",
      "2191:   if( p==0 ) return;",
      "2194:     p->tabFlags |= TF_Shadow;",
      "2195:   }",
      "",
      "[Removed Lines]",
      "2193:   if( pSelect==0 && isShadowTableName(db, p->zName) ){",
      "",
      "[Added Lines]",
      "2192:   if( pSelect==0 && sqlite3ShadowTableName(db, p->zName) ){",
      "",
      "---------------"
    ],
    "src/sqliteInt.h||src/sqliteInt.h": [
      "File: src/sqliteInt.h -> src/sqliteInt.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "4548: #  define sqlite3VtabInSync(db) ((db)->nVTrans>0 && (db)->aVTrans==0)",
      "4549: #endif",
      "4550: int sqlite3ReadOnlyShadowTables(sqlite3 *db);",
      "4551: int sqlite3VtabEponymousTableInit(Parse*,Module*);",
      "4552: void sqlite3VtabEponymousTableClear(sqlite3*,Module*);",
      "4553: void sqlite3VtabMakeWritable(Parse*,Table*);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4551: #ifndef SQLITE_OMIT_VIRTUALTABLE",
      "4552:   int sqlite3ShadowTableName(sqlite3 *db, const char *zName);",
      "4553: #else",
      "4554: # define sqlite3ShadowTableName(A,B) 0",
      "4555: #endif",
      "",
      "---------------"
    ],
    "test/altertab.test||test/altertab.test": [
      "File: test/altertab.test -> test/altertab.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "547:   } {1 {table y1_segments may not be modified}}",
      "549:   do_catchsql_test 16.20 {",
      "554:     DROP TABLE y1_segments;",
      "555:   } {1 {table y1_segments may not be dropped}}",
      "557:   do_execsql_test 16.30 {",
      "558:     ALTER TABLE y1 RENAME TO z1;",
      "559:   }",
      "",
      "[Removed Lines]",
      "550:     ALTER TABLE y1_segments RENAME TO abc;",
      "551:   } {1 {table y1_segments may not be altered}}",
      "553:   do_catchsql_test 16.21 {",
      "",
      "[Added Lines]",
      "553:   do_catchsql_test 16.20 {",
      "554:     ALTER TABLE y1_segments RENAME TO abc;",
      "555:   } {1 {table y1_segments may not be altered}}",
      "556:   sqlite3_db_config db DEFENSIVE 0",
      "557:   do_catchsql_test 16.22 {",
      "558:     ALTER TABLE y1_segments RENAME TO abc;",
      "559:   } {0 {}}",
      "560:   sqlite3_db_config db DEFENSIVE 1",
      "561:   do_catchsql_test 16.23 {",
      "562:     CREATE TABLE y1_segments AS SELECT * FROM abc;",
      "563:   } {1 {object name reserved for internal use: y1_segments}}",
      "564:   do_catchsql_test 16.24 {",
      "565:     CREATE VIEW y1_segments AS SELECT * FROM abc;",
      "566:   } {1 {object name reserved for internal use: y1_segments}}",
      "567:   sqlite3_db_config db DEFENSIVE 0",
      "568:   do_catchsql_test 16.25 {",
      "569:     ALTER TABLE abc RENAME TO y1_segments;",
      "570:   } {0 {}}",
      "571:   sqlite3_db_config db DEFENSIVE 1",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "29ddbbbf36cd67743d25dd6280c1788de8e4c021",
      "candidate_info": {
        "commit_hash": "29ddbbbf36cd67743d25dd6280c1788de8e4c021",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/29ddbbbf36cd67743d25dd6280c1788de8e4c021",
        "files": [
          "ext/fts3/fts3_tokenizer.c",
          "manifest",
          "manifest.uuid",
          "src/sqlite.h.in",
          "src/test_func.c",
          "src/vdbe.c",
          "src/vdbeInt.h",
          "src/vdbeapi.c",
          "src/vdbemem.c",
          "test/fts3atoken.test",
          "test/func.test"
        ],
        "message": "Add the sqlite3_value_frombind() interface.  Use that interface to improve fts3_tokenizer().\n\nFossilOrigin-Name: b3f2c3205a28dc21ea7080e5e1ba246ce9c9b90c1309262ca11d8e40943ed677",
        "before_after_code_files": [
          "ext/fts3/fts3_tokenizer.c||ext/fts3/fts3_tokenizer.c",
          "manifest.uuid||manifest.uuid",
          "src/sqlite.h.in||src/sqlite.h.in",
          "src/test_func.c||src/test_func.c",
          "src/vdbe.c||src/vdbe.c",
          "src/vdbeInt.h||src/vdbeInt.h",
          "src/vdbeapi.c||src/vdbeapi.c",
          "src/vdbemem.c||src/vdbemem.c",
          "test/fts3atoken.test||test/fts3atoken.test",
          "test/func.test||test/func.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_tokenizer.c||ext/fts3/fts3_tokenizer.c": [
          "File: ext/fts3/fts3_tokenizer.c -> ext/fts3/fts3_tokenizer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:   nName = sqlite3_value_bytes(argv[0])+1;",
          "81:   if( argc==2 ){",
          "83:       void *pOld;",
          "84:       int n = sqlite3_value_bytes(argv[1]);",
          "85:       if( zName==0 || n!=sizeof(pPtr) ){",
          "",
          "[Removed Lines]",
          "82:     if( fts3TokenizerEnabled(context) ){",
          "",
          "[Added Lines]",
          "82:     if( fts3TokenizerEnabled(context) || sqlite3_value_frombind(argv[1]) ){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "106:       return;",
          "107:     }",
          "108:   }",
          "110:     sqlite3_result_blob(context, (void *)&pPtr, sizeof(pPtr), SQLITE_TRANSIENT);",
          "111:   }",
          "112: }",
          "",
          "[Removed Lines]",
          "109:   if( fts3TokenizerEnabled(context) ){",
          "",
          "[Added Lines]",
          "109:   if( fts3TokenizerEnabled(context) || sqlite3_value_frombind(argv[0]) ){",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3fde627616030ca0de87169467e2e453fdc91154942e3a3a92a221df5923b2d2",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqlite.h.in||src/sqlite.h.in": [
          "File: src/sqlite.h.in -> src/sqlite.h.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "5085: int sqlite3_value_type(sqlite3_value*);",
          "5086: int sqlite3_value_numeric_type(sqlite3_value*);",
          "5087: int sqlite3_value_nochange(sqlite3_value*);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5095: int sqlite3_value_frombind(sqlite3_value*);",
          "",
          "---------------"
        ],
        "src/test_func.c||src/test_func.c": [
          "File: src/test_func.c -> src/test_func.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "630:   sqlite3_result_int(context, (int)sqlite3_value_subtype(argv[0]));",
          "631: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "638: static void test_frombind(",
          "639:   sqlite3_context *context,",
          "640:   int argc,",
          "641:   sqlite3_value **argv",
          "642: ){",
          "643:   sqlite3_uint64 m = 0;",
          "644:   int i;",
          "645:   for(i=0; i<argc && i<63; i++){",
          "646:     if( sqlite3_value_frombind(argv[i]) ) m |= ((sqlite3_uint64)1)<<i;",
          "647:   }",
          "648:   sqlite3_result_int64(context, (sqlite3_int64)m);",
          "649: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "675:     { \"test_zeroblob\",  1, SQLITE_UTF8|SQLITE_DETERMINISTIC, test_zeroblob},",
          "676:     { \"test_getsubtype\",       1, SQLITE_UTF8, test_getsubtype},",
          "677:     { \"test_setsubtype\",       2, SQLITE_UTF8, test_setsubtype},",
          "678:   };",
          "679:   int i;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "696:     { \"test_frombind\",        -1, SQLITE_UTF8, test_frombind},",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1256:     goto too_big;",
          "1257:   }",
          "1258:   pOut = &aMem[pOp->p2];",
          "1260:   UPDATE_MAX_BLOBSIZE(pOut);",
          "1261:   break;",
          "1262: }",
          "",
          "[Removed Lines]",
          "1259:   sqlite3VdbeMemShallowCopy(pOut, pVar, MEM_Static);",
          "",
          "[Added Lines]",
          "1259:   if( VdbeMemDynamic(pOut) ) sqlite3VdbeMemSetNull(pOut);",
          "1260:   memcpy(pOut, pVar, MEMCELLSIZE);",
          "1261:   pOut->flags &= ~(MEM_Dyn|MEM_Ephem);",
          "1262:   pOut->flags |= MEM_Static|MEM_FromBind;",
          "",
          "---------------"
        ],
        "src/vdbeInt.h||src/vdbeInt.h": [
          "File: src/vdbeInt.h -> src/vdbeInt.h"
        ],
        "src/vdbeapi.c||src/vdbeapi.c": [
          "File: src/vdbeapi.c -> src/vdbeapi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "275:   return (pVal->flags&(MEM_Null|MEM_Zero))==(MEM_Null|MEM_Zero);",
          "276: }",
          "280: sqlite3_value *sqlite3_value_dup(const sqlite3_value *pOrig){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "279: int sqlite3_value_frombind(sqlite3_value *pVal){",
          "280:   return (pVal->flags&MEM_FromBind)!=0;",
          "281: }",
          "",
          "---------------"
        ],
        "src/vdbemem.c||src/vdbemem.c": [
          "File: src/vdbemem.c -> src/vdbemem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:               ((p->flags&MEM_Static)!=0 ? 1 : 0) <= 1 );",
          "61:                            |MEM_Dyn|MEM_Ephem|MEM_Static))==0 );",
          "62:     }else{",
          "",
          "[Removed Lines]",
          "60:       assert( (p->flags & ~(MEM_Null|MEM_Term|MEM_Subtype",
          "",
          "[Added Lines]",
          "60:       assert( (p->flags & ~(MEM_Null|MEM_Term|MEM_Subtype|MEM_FromBind",
          "",
          "---------------"
        ],
        "test/fts3atoken.test||test/fts3atoken.test": [
          "File: test/fts3atoken.test -> test/fts3atoken.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:   }",
          "87: } {{There was movement at the station}}",
          "89: sqlite3_db_config db SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER 0",
          "90: do_catchsql_test 1.6 {",
          "91:   SELECT fts3_tokenizer('blah', fts3_tokenizer('simple')) IS NULL;",
          "92: } {1 {fts3tokenize disabled}}",
          "95: #--------------------------------------------------------------------------",
          "96: # Test cases fts3atoken-2.* test error cases in the scalar function based",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89: unset -nocomplain simple blah2name simplename",
          "90: set simplename \"simple\"",
          "91: set blah2name \"blah2\"",
          "92: set simple [db one {SELECT fts3_tokenizer('simple')}]",
          "97: do_test fts3atoken-1.7 {",
          "98:   execsql {",
          "99:     SELECT fts3_tokenizer('blah2', $simple) IS NULL;",
          "100:   }",
          "101: } {1}",
          "103: # With ENABLE_FTS3_TOKENIZER off, the fts3_tokenzer(1) function",
          "104: # returns NULL unless the first parameter is a bound parameter.",
          "105: # If the first parameter is a bound parameter, then fts3_tokenizer(1)",
          "106: # returns the actual pointer value as a BLOB.",
          "107: #",
          "108: do_test fts3atoken-1.8 {",
          "109:   execsql {",
          "110:     SELECT fts3_tokenizer($blah2name) == fts3_tokenizer($simplename),",
          "111:            typeof(fts3_tokenizer($blah2name)),",
          "112:            typeof(fts3_tokenizer('blah2')),",
          "113:            typeof(fts3_tokenizer($simplename)),",
          "114:            typeof(fts3_tokenizer('simple'));",
          "115:   }",
          "116: } {1 blob null blob null}",
          "118: # With ENABLE_FTS3_TOKENIZER on, fts3_tokenizer() always returns",
          "119: # the BLOB pointer, regardless the parameter",
          "120: #",
          "121: sqlite3_db_config db SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER 1",
          "122: do_test fts3atoken-1.9 {",
          "123:   execsql {",
          "124:     SELECT fts3_tokenizer('blah2') == fts3_tokenizer('simple'),",
          "125:            typeof(fts3_tokenizer($blah2name)),",
          "126:            typeof(fts3_tokenizer('blah2')),",
          "127:            typeof(fts3_tokenizer($simplename)),",
          "128:            typeof(fts3_tokenizer('simple'));",
          "129:   }",
          "130: } {1 blob blob blob blob}",
          "",
          "---------------"
        ],
        "test/func.test||test/func.test": [
          "File: test/func.test -> test/func.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1391: do_execsql_test func-31.1 {",
          "1392:   SELECT char(), length(char()), typeof(char())",
          "1393: } {{} 0 text}",
          "1394: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1395: # sqlite3_value_frombind()",
          "1396: #",
          "1397: do_execsql_test func-32.100 {",
          "1398:   SELECT test_frombind(1,2,3,4);",
          "1399: } {0}",
          "1400: do_execsql_test func-32.110 {",
          "1401:   SELECT test_frombind(1,2,?,4);",
          "1402: } {4}",
          "1403: do_execsql_test func-32.120 {",
          "1404:   SELECT test_frombind(1,(?),4,?+7);",
          "1405: } {2}",
          "1406: do_execsql_test func-32.130 {",
          "1407:   DROP TABLE IF EXISTS t1;",
          "1408:   CREATE TABLE t1(a,b,c,e,f);",
          "1409:   INSERT INTO t1 VALUES(1,2.5,'xyz',x'e0c1b2a3',null);",
          "1410:   SELECT test_frombind(a,b,c,e,f,$xyz) FROM t1;",
          "1411: } {32}",
          "1412: do_execsql_test func-32.140 {",
          "1413:   SELECT test_frombind(a,b,c,e,f,$xyz+f) FROM t1;",
          "1414: } {0}",
          "1415: do_execsql_test func-32.150 {",
          "1416:   SELECT test_frombind(x.a,y.b,x.c,:123,y.e,x.f,$xyz+y.f) FROM t1 x, t1 y;",
          "1417: } {8}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d430c2eb46e0fd8ce179037d12f68b8125d24a25",
      "candidate_info": {
        "commit_hash": "d430c2eb46e0fd8ce179037d12f68b8125d24a25",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d430c2eb46e0fd8ce179037d12f68b8125d24a25",
        "files": [
          "LICENSE.md",
          "README.md",
          "ext/fts5/fts5Int.h",
          "ext/fts5/fts5_hash.c",
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5aa.test",
          "manifest",
          "manifest.uuid",
          "src/alter.c",
          "src/os_unix.c",
          "src/sqlite.h.in",
          "src/vdbeaux.c",
          "src/wherecode.c",
          "test/altertab3.test",
          "test/sessionfuzz.c",
          "test/window8.tcl",
          "test/window8.test"
        ],
        "message": "Update this branch with latest trunk changes.\n\nFossilOrigin-Name: 98cc26598718e5557ee00aa77336024c91e483ec6de650e172ad1b44a6f0a77b",
        "before_after_code_files": [
          "ext/fts5/fts5Int.h||ext/fts5/fts5Int.h",
          "ext/fts5/fts5_hash.c||ext/fts5/fts5_hash.c",
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5aa.test||ext/fts5/test/fts5aa.test",
          "manifest.uuid||manifest.uuid",
          "src/alter.c||src/alter.c",
          "src/os_unix.c||src/os_unix.c",
          "src/sqlite.h.in||src/sqlite.h.in",
          "src/vdbeaux.c||src/vdbeaux.c",
          "src/wherecode.c||src/wherecode.c",
          "test/altertab3.test||test/altertab3.test",
          "test/sessionfuzz.c||test/sessionfuzz.c",
          "test/window8.tcl||test/window8.tcl",
          "test/window8.test||test/window8.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5Int.h||ext/fts5/fts5Int.h": [
          "File: ext/fts5/fts5Int.h -> ext/fts5/fts5Int.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "584: int sqlite3Fts5HashQuery(",
          "589: );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "586:   int nPre,",
          "",
          "---------------"
        ],
        "ext/fts5/fts5_hash.c||ext/fts5/fts5_hash.c": [
          "File: ext/fts5/fts5_hash.c -> ext/fts5/fts5_hash.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "187:   return SQLITE_OK;",
          "188: }",
          "191:   if( p->iSzPoslist ){",
          "193:     if( pHash->eDetail==FTS5_DETAIL_NONE ){",
          "195:       if( p->bDel ){",
          "197:         if( p->bContent ){",
          "199:         }",
          "200:       }",
          "201:     }else{",
          "205:       assert( p->bDel==0 || p->bDel==1 );",
          "",
          "[Removed Lines]",
          "190: static void fts5HashAddPoslistSize(Fts5Hash *pHash, Fts5HashEntry *p){",
          "192:     u8 *pPtr = (u8*)p;",
          "194:       assert( p->nData==p->iSzPoslist );",
          "196:         pPtr[p->nData++] = 0x00;",
          "198:           pPtr[p->nData++] = 0x00;",
          "",
          "[Added Lines]",
          "190: static int fts5HashAddPoslistSize(",
          "191:   Fts5Hash *pHash,",
          "192:   Fts5HashEntry *p,",
          "193:   Fts5HashEntry *p2",
          "194: ){",
          "195:   int nRet = 0;",
          "197:     u8 *pPtr = p2 ? (u8*)p2 : (u8*)p;",
          "198:     int nData = p->nData;",
          "200:       assert( nData==p->iSzPoslist );",
          "202:         pPtr[nData++] = 0x00;",
          "204:           pPtr[nData++] = 0x00;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "209:         int nByte = sqlite3Fts5GetVarintLen((u32)nPos);",
          "210:         memmove(&pPtr[p->iSzPoslist + nByte], &pPtr[p->iSzPoslist + 1], nSz);",
          "211:         sqlite3Fts5PutVarint(&pPtr[p->iSzPoslist], nPos);",
          "213:       }",
          "214:     }",
          "219:   }",
          "220: }",
          "",
          "[Removed Lines]",
          "212:         p->nData += (nByte-1);",
          "216:     p->iSzPoslist = 0;",
          "217:     p->bDel = 0;",
          "218:     p->bContent = 0;",
          "",
          "[Added Lines]",
          "218:         nData += (nByte-1);",
          "222:     nRet = nData - p->nData;",
          "223:     if( p2==0 ){",
          "224:       p->iSzPoslist = 0;",
          "225:       p->bDel = 0;",
          "226:       p->bContent = 0;",
          "227:       p->nData = nData;",
          "228:     }",
          "230:   return nRet;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "330:   if( iRowid!=p->iRowid ){",
          "332:     p->nData += sqlite3Fts5PutVarint(&pPtr[p->nData], iRowid - p->iRowid);",
          "333:     p->iRowid = iRowid;",
          "334:     bNew = 1;",
          "",
          "[Removed Lines]",
          "331:     fts5HashAddPoslistSize(pHash, p);",
          "",
          "[Added Lines]",
          "342:     fts5HashAddPoslistSize(pHash, p, 0);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "445:   for(iSlot=0; iSlot<pHash->nSlot; iSlot++){",
          "446:     Fts5HashEntry *pIter;",
          "447:     for(pIter=pHash->aSlot[iSlot]; pIter; pIter=pIter->pHashNext){",
          "449:         Fts5HashEntry *pEntry = pIter;",
          "450:         pEntry->pScanNext = 0;",
          "451:         for(i=0; ap[i]; i++){",
          "",
          "[Removed Lines]",
          "448:       if( pTerm==0 || 0==memcmp(fts5EntryKey(pIter), pTerm, nTerm) ){",
          "",
          "[Added Lines]",
          "459:       if( pTerm==0",
          "460:        || (pIter->nKey+1>=nTerm && 0==memcmp(fts5EntryKey(pIter), pTerm, nTerm))",
          "461:       ){",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "474: int sqlite3Fts5HashQuery(",
          "479: ){",
          "480:   unsigned int iHash = fts5HashKey(pHash->nSlot, (const u8*)pTerm, nTerm);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "489:   int nPre,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "488:   }",
          "490:   if( p ){",
          "494:   }else{",
          "497:   }",
          "",
          "[Removed Lines]",
          "491:     fts5HashAddPoslistSize(pHash, p);",
          "",
          "[Added Lines]",
          "505:     int nHashPre = sizeof(Fts5HashEntry) + nTerm + 1;",
          "506:     int nList = p->nData - nHashPre;",
          "507:     u8 *pRet = (u8*)(*ppOut = sqlite3_malloc64(nPre + nList + 10));",
          "508:     if( pRet ){",
          "509:       Fts5HashEntry *pFaux = (Fts5HashEntry*)&pRet[nPre-nHashPre];",
          "510:       memcpy(&pRet[nPre], &((u8*)p)[nHashPre], nList);",
          "511:       nList += fts5HashAddPoslistSize(pHash, p, pFaux);",
          "513:     }else{",
          "515:       return SQLITE_NOMEM;",
          "516:     }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "525:   if( (p = pHash->pScan) ){",
          "526:     char *zKey = fts5EntryKey(p);",
          "527:     int nTerm = (int)strlen(zKey);",
          "",
          "[Removed Lines]",
          "528:     fts5HashAddPoslistSize(pHash, p);",
          "",
          "[Added Lines]",
          "551:     fts5HashAddPoslistSize(pHash, p, 0);",
          "",
          "---------------"
        ],
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2459: ){",
          "2461:   int nList = 0;",
          "2462:   const u8 *z = 0;",
          "2463:   int n = 0;",
          "2465:   assert( p->pHash );",
          "2466:   assert( p->rc==SQLITE_OK );",
          "2468:   if( pTerm==0 || (flags & FTS5INDEX_QUERY_SCAN) ){",
          "2469:     p->rc = sqlite3Fts5HashScanInit(p->pHash, (const char*)pTerm, nTerm);",
          "2470:     sqlite3Fts5HashScanEntry(p->pHash, (const char**)&z, &pList, &nList);",
          "2471:     n = (z ? (int)strlen((const char*)z) : 0);",
          "2472:   }else{",
          "2475:     z = pTerm;",
          "2476:     n = nTerm;",
          "2477:   }",
          "2481:     sqlite3Fts5BufferSet(&p->rc, &pIter->term, n, z);",
          "2485:     pLeaf->nn = pLeaf->szLeaf = nList;",
          "2486:     pIter->pLeaf = pLeaf;",
          "2487:     pIter->iLeafOffset = fts5GetVarint(pLeaf->p, (u64*)&pIter->iRowid);",
          "",
          "[Removed Lines]",
          "2460:   const u8 *pList = 0;",
          "2473:     pIter->flags |= FTS5_SEGITER_ONETERM;",
          "2474:     sqlite3Fts5HashQuery(p->pHash, (const char*)pTerm, nTerm, &pList, &nList);",
          "2479:   if( pList ){",
          "2480:     Fts5Data *pLeaf;",
          "2482:     pLeaf = fts5IdxMalloc(p, sizeof(Fts5Data));",
          "2483:     if( pLeaf==0 ) return;",
          "2484:     pLeaf->p = (u8*)pList;",
          "",
          "[Added Lines]",
          "2463:   Fts5Data *pLeaf = 0;",
          "2469:     const u8 *pList = 0;",
          "2474:     if( pList ){",
          "2475:       pLeaf = fts5IdxMalloc(p, sizeof(Fts5Data));",
          "2476:       if( pLeaf ){",
          "2477:         pLeaf->p = pList;",
          "2478:       }",
          "2479:     }",
          "2481:     p->rc = sqlite3Fts5HashQuery(p->pHash, sizeof(Fts5Data),",
          "2482:         (const char*)pTerm, nTerm, (void**)&pLeaf, &nList",
          "2483:     );",
          "2484:     if( pLeaf ){",
          "2485:       pLeaf->p = (u8*)&pLeaf[1];",
          "2486:     }",
          "2489:     pIter->flags |= FTS5_SEGITER_ONETERM;",
          "2492:   if( pLeaf ){",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5aa.test||ext/fts5/test/fts5aa.test": [
          "File: ext/fts5/test/fts5aa.test -> ext/fts5/test/fts5aa.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "427:   db eval { UPDATE n1_config SET v=50 WHERE k='version' }",
          "428:   set fd [db incrblob main n1_data block 10]",
          "429:   fconfigure $fd -encoding binary -translation binary",
          "431:   close $fd",
          "432: }",
          "433: db func funk funk",
          "",
          "[Removed Lines]",
          "430:   puts -nonewline $fd \"\\x44\\x45\"",
          "",
          "[Added Lines]",
          "430: #  puts -nonewline $fd \"\\x44\\x45\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "603:   SELECT * FROM t11, t10 WHERE t10.rowid IS NULL;",
          "604: }",
          "606: }",
          "608: expand_all_sql db",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "606: #-------------------------------------------------------------------------",
          "607: do_execsql_test 24.0 {",
          "608:   CREATE VIRTUAL TABLE t12 USING fts5(x, detail=%DETAIL%);",
          "609:   INSERT INTO t12 VALUES('aaaa');",
          "610: }",
          "611: do_execsql_test 24.1 {",
          "612:   BEGIN;",
          "613:     DELETE FROM t12 WHERE rowid=1;",
          "614:     SELECT * FROM t12('aaaa');",
          "615:     INSERT INTO t12 VALUES('aaaa');",
          "616:   END;",
          "617: }",
          "618: do_execsql_test 24.2 {",
          "619:   INSERT INTO t12(t12) VALUES('integrity-check');",
          "620: }",
          "621: do_execsql_test 24.3 {",
          "622:     SELECT * FROM t12('aaaa');",
          "623: } {aaaa}",
          "625: #-------------------------------------------------------------------------",
          "626: do_execsql_test 25.0 {",
          "627:   CREATE VIRTUAL TABLE t13 USING fts5(x, detail=%DETAIL%);",
          "628: }",
          "629: do_execsql_test 25.1 {",
          "630:   BEGIN;",
          "631:   INSERT INTO t13 VALUES('AAAA');",
          "632: SELECT * FROM t13('BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB*');",
          "634:   END;",
          "635: }",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a6d61dfd4780eccfce5f7a5ead6c04e3b78bc4a461551fd7dd602550e0d51084",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/alter.c||src/alter.c": [
          "File: src/alter.c -> src/alter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "166:   }",
          "167: #endif",
          "174:   v = sqlite3GetVdbe(pParse);",
          "175:   if( v==0 ){",
          "176:     goto exit_rename_table;",
          "177:   }",
          "180:   zTabName = pTab->zName;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "177:   sqlite3MayAbort(pParse);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "243:     int i = ++pParse->nMem;",
          "244:     sqlite3VdbeLoadString(v, i, zName);",
          "245:     sqlite3VdbeAddOp4(v, OP_VRename, i, 0, 0,(const char*)pVTab, P4_VTAB);",
          "247:   }",
          "248: #endif",
          "",
          "[Removed Lines]",
          "246:     sqlite3MayAbort(pParse);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "567:   zNew = sqlite3NameFromToken(db, pNew);",
          "568:   if( !zNew ) goto exit_rename_column;",
          "569:   assert( pNew->n>0 );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "566:   sqlite3MayAbort(pParse);",
          "",
          "---------------"
        ],
        "src/os_unix.c||src/os_unix.c": [
          "File: src/os_unix.c -> src/os_unix.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7822:     UNIXVFS(\"unix\",          autolockIoFinder ),",
          "7823: #elif OS_VXWORKS",
          "7824:     UNIXVFS(\"unix\",          vxworksIoFinder ),",
          "7828: #else",
          "7829:     UNIXVFS(\"unix\",          posixIoFinder ),",
          "7830: #endif",
          "",
          "[Removed Lines]",
          "7825: #elif __Fuchsia__",
          "7827:     UNIXVFS(\"unix\",          dotlockIoFinder ),",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqlite.h.in||src/sqlite.h.in": [
          "File: src/sqlite.h.in -> src/sqlite.h.in"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "637:     int opcode = pOp->opcode;",
          "638:     if( opcode==OP_Destroy || opcode==OP_VUpdate || opcode==OP_VRename",
          "639:      || opcode==OP_VDestroy",
          "640:      || ((opcode==OP_Halt || opcode==OP_HaltIfNull)",
          "641:       && ((pOp->p1)!=SQLITE_OK && pOp->p2==OE_Abort))",
          "642:     ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "640:      || (opcode==OP_Function0 && pOp->p4.pFunc->funcFlags&SQLITE_FUNC_INTERNAL)",
          "",
          "---------------"
        ],
        "src/wherecode.c||src/wherecode.c": [
          "File: src/wherecode.c -> src/wherecode.c"
        ],
        "test/altertab3.test||test/altertab3.test": [
          "File: test/altertab3.test -> test/altertab3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:   SELECT sql FROM sqlite_master WHERE name = 'v1'",
          "82: } {{CREATE VIEW v1 AS SELECT * FROM t1 WHERE a=1 OR (bbb IN ())}}",
          "86: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84: #-------------------------------------------------------------------------",
          "85: reset_db",
          "86: do_execsql_test 4.0 {",
          "87:   CREATE TABLE t1(a, b);",
          "88:   CREATE TABLE t3(e, f);",
          "89:   CREATE TRIGGER tr1 AFTER INSERT ON t1 BEGIN",
          "90:     INSERT INTO t2 VALUES(new.a, new.b);",
          "91:   END;",
          "92: }",
          "94: do_catchsql_test 4.1.2 {",
          "95:   BEGIN;",
          "96:     ALTER TABLE t3 RENAME TO t4;",
          "97: } {1 {error in trigger tr1: no such table: main.t2}}",
          "98: do_execsql_test 4.1.2 {",
          "99:   COMMIT;",
          "100: }",
          "101: do_execsql_test 4.1.3 {",
          "102:   SELECT * FROM sqlite_master WHERE type='table' AND name!='t1';",
          "103: } {table t3 t3 3 {CREATE TABLE t3(e, f)}}",
          "106: do_catchsql_test 4.2.1 {",
          "107:   BEGIN;",
          "108:     ALTER TABLE t3 RENAME e TO eee;",
          "109: } {1 {error in trigger tr1: no such table: main.t2}}",
          "110: do_execsql_test 4.2.2 {",
          "111:   COMMIT;",
          "112: }",
          "113: do_execsql_test 4.2.3 {",
          "114:   SELECT * FROM sqlite_master WHERE type='table' AND name!='t1';",
          "115: } {table t3 t3 3 {CREATE TABLE t3(e, f)}}",
          "",
          "---------------"
        ],
        "test/sessionfuzz.c||test/sessionfuzz.c": [
          "File: test/sessionfuzz.c -> test/sessionfuzz.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "830: ){",
          "831:   (void)NotUsed;",
          "832:   (void)p;",
          "834:   return SQLITE_CHANGESET_OMIT;",
          "835: }",
          "",
          "[Removed Lines]",
          "833:   printf(\"Conflict %d\\n\", eConflict);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/window8.tcl||test/window8.tcl": [
          "File: test/window8.tcl -> test/window8.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:   execsql_test 1.$tn.7 \"",
          "97:     SELECT a, b, sum(c) OVER (ORDER BY a,b $f2) FROM t3 ORDER BY 1, 2, 3;",
          "98:   \"",
          "99: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100:   execsql_test 1.$tn.8 \"",
          "101:     SELECT a, b,",
          "102:       sum(c) OVER (ORDER BY a $f2),",
          "103:       sum(c) OVER (ORDER BY a $frame),",
          "104:       sum(c) OVER (ORDER BY a,b $f2),",
          "105:       sum(c) OVER (ORDER BY a,b $frame)",
          "106:     FROM t3 ORDER BY 1, 2, 3;",
          "107:   \"",
          "",
          "---------------"
        ],
        "test/window8.test||test/window8.test": [
          "File: test/window8.test -> test/window8.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "178:   JJ aa 40937   JJ aa 40937   JJ aa 40937   JJ bb 42951   JJ bb 42951",
          "179:   JJ bb 42951   JJ bb 42951}",
          "181: do_execsql_test 1.2.1 {",
          "182:   SELECT a, b, sum(c) OVER (ORDER BY a  GROUPS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t3 ORDER BY 1, 2, 3;",
          "183: } {AA aa 4685   AA aa 4685   AA aa 4685   AA aa 4685   AA bb 4685   AA bb 4685",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "181: do_execsql_test 1.1.8 {",
          "182:   SELECT a, b,",
          "183:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING  EXCLUDE CURRENT ROW),",
          "184:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING ),",
          "185:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING  EXCLUDE CURRENT ROW),",
          "186:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING )",
          "187:     FROM t3 ORDER BY 1, 2, 3;",
          "188: } {AA aa {} {} {} {}   AA aa {} {} {} {}   AA aa {} {} {} {}",
          "189:   AA aa {} {} {} {}   AA bb {} {} 2307 2307   AA bb {} {} 2307 2307",
          "190:   AA bb {} {} 2307 2307   AA bb {} {} 2307 2307   BB aa 4685 4685 4685 4685",
          "191:   BB aa 4685 4685 4685 4685   BB aa 4685 4685 4685 4685",
          "192:   BB aa 4685 4685 4685 4685   BB aa 4685 4685 4685 4685",
          "193:   BB aa 4685 4685 4685 4685   BB bb 4685 4685 7558 7558",
          "194:   BB bb 4685 4685 7558 7558   BB bb 4685 4685 7558 7558",
          "195:   BB bb 4685 4685 7558 7558   BB bb 4685 4685 7558 7558",
          "196:   BB bb 4685 4685 7558 7558   CC aa 12025 12025 12025 12025",
          "197:   CC aa 12025 12025 12025 12025   CC aa 12025 12025 12025 12025",
          "198:   CC aa 12025 12025 12025 12025   CC bb 12025 12025 13979 13979",
          "199:   CC bb 12025 12025 13979 13979   DD aa 15147 15147 15147 15147",
          "200:   DD aa 15147 15147 15147 15147   DD aa 15147 15147 15147 15147",
          "201:   DD bb 15147 15147 16472 16472   DD bb 15147 15147 16472 16472",
          "202:   DD bb 15147 15147 16472 16472   DD bb 15147 15147 16472 16472",
          "203:   EE aa 19179 19179 19179 19179   EE aa 19179 19179 19179 19179",
          "204:   EE bb 19179 19179 20069 20069   EE bb 19179 19179 20069 20069",
          "205:   EE bb 19179 19179 20069 20069   FF aa 21718 21718 21718 21718",
          "206:   FF aa 21718 21718 21718 21718   FF aa 21718 21718 21718 21718",
          "207:   FF aa 21718 21718 21718 21718   FF bb 21718 21718 23881 23881",
          "208:   FF bb 21718 21718 23881 23881   FF bb 21718 21718 23881 23881",
          "209:   FF bb 21718 21718 23881 23881   FF bb 21718 21718 23881 23881",
          "210:   FF bb 21718 21718 23881 23881   GG aa 27386 27386 27386 27386",
          "211:   GG aa 27386 27386 27386 27386   GG aa 27386 27386 27386 27386",
          "212:   GG aa 27386 27386 27386 27386   GG bb 27386 27386 28983 28983",
          "213:   GG bb 27386 27386 28983 28983   GG bb 27386 27386 28983 28983",
          "214:   GG bb 27386 27386 28983 28983   HH aa 31854 31854 31854 31854",
          "215:   HH aa 31854 31854 31854 31854   HH aa 31854 31854 31854 31854",
          "216:   HH bb 31854 31854 34103 34103   HH bb 31854 31854 34103 34103",
          "217:   HH bb 31854 31854 34103 34103   HH bb 31854 31854 34103 34103",
          "218:   HH bb 31854 31854 34103 34103   HH bb 31854 31854 34103 34103",
          "219:   II aa 37297 37297 37297 37297   II aa 37297 37297 37297 37297",
          "220:   II bb 37297 37297 38347 38347   II bb 37297 37297 38347 38347",
          "221:   II bb 37297 37297 38347 38347   II bb 37297 37297 38347 38347",
          "222:   II bb 37297 37297 38347 38347   JJ aa 40937 40937 40937 40937",
          "223:   JJ aa 40937 40937 40937 40937   JJ aa 40937 40937 40937 40937",
          "224:   JJ aa 40937 40937 40937 40937   JJ bb 40937 40937 42951 42951",
          "225:   JJ bb 40937 40937 42951 42951   JJ bb 40937 40937 42951 42951",
          "226:   JJ bb 40937 40937 42951 42951}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "303:   JJ aa 42052   JJ aa 42183   JJ aa 42717   JJ aa 42838   JJ bb 43898",
          "304:   JJ bb 44383   JJ bb 44401   JJ bb 44480}",
          "306: do_execsql_test 1.3.1 {",
          "307:   SELECT a, b, sum(c) OVER (ORDER BY a  GROUPS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING ) FROM t3 ORDER BY 1, 2, 3;",
          "308: } {AA aa 12025   AA aa 12025   AA aa 12025   AA aa 12025   AA bb 12025",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "353: do_execsql_test 1.2.8 {",
          "354:   SELECT a, b,",
          "355:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW  EXCLUDE CURRENT ROW),",
          "356:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ),",
          "357:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW  EXCLUDE CURRENT ROW),",
          "358:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW )",
          "359:     FROM t3 ORDER BY 1, 2, 3;",
          "360: } {AA aa 3751 4685 1373 2307   AA aa 3774 4685 1396 2307",
          "361:   AA aa 4446 4685 2068 2307   AA aa 4462 4685 2084 2307",
          "362:   AA bb 3815 4685 3815 4685   AA bb 4058 4685 4058 4685",
          "363:   AA bb 4113 4685 4113 4685   AA bb 4376 4685 4376 4685",
          "364:   BB aa 11263 12025 6796 7558   BB aa 11365 12025 6898 7558",
          "365:   BB aa 11613 12025 7146 7558   BB aa 11626 12025 7159 7558",
          "366:   BB aa 11632 12025 7165 7558   BB aa 11778 12025 7311 7558",
          "367:   BB bb 11185 12025 11185 12025   BB bb 11233 12025 11233 12025",
          "368:   BB bb 11239 12025 11239 12025   BB bb 11314 12025 11314 12025",
          "369:   BB bb 11320 12025 11320 12025   BB bb 11392 12025 11392 12025",
          "370:   CC aa 14388 15147 13220 13979   CC aa 14540 15147 13372 13979",
          "371:   CC aa 14717 15147 13549 13979   CC aa 14989 15147 13821 13979",
          "372:   CC bb 14325 15147 14325 15147   CC bb 14801 15147 14801 15147",
          "373:   DD aa 18334 19179 15627 16472   DD aa 18923 19179 16216 16472",
          "374:   DD aa 18955 19179 16248 16472   DD bb 18220 19179 18220 19179",
          "375:   DD bb 18385 19179 18385 19179   DD bb 18463 19179 18463 19179",
          "376:   DD bb 18941 19179 18941 19179   EE aa 20941 21718 19292 20069",
          "377:   EE aa 21605 21718 19956 20069   EE bb 20950 21718 20950 21718",
          "378:   EE bb 21089 21718 21089 21718   EE bb 21466 21718 21466 21718",
          "379:   FF aa 26716 27386 23211 23881   FF aa 26719 27386 23214 23881",
          "380:   FF aa 26768 27386 23263 23881   FF aa 27178 27386 23673 23881",
          "381:   FF bb 26448 27386 26448 27386   FF bb 26516 27386 26516 27386",
          "382:   FF bb 26660 27386 26660 27386   FF bb 26812 27386 26812 27386",
          "383:   FF bb 27091 27386 27091 27386   FF bb 27284 27386 27284 27386",
          "384:   GG aa 31220 31854 28349 28983   GG aa 31374 31854 28503 28983",
          "385:   GG aa 31519 31854 28648 28983   GG aa 31706 31854 28835 28983",
          "386:   GG bb 30916 31854 30916 31854   GG bb 30925 31854 30925 31854",
          "387:   GG bb 31010 31854 31010 31854   GG bb 31694 31854 31694 31854",
          "388:   HH aa 36318 37297 33124 34103   HH aa 36507 37297 33313 34103",
          "389:   HH aa 36817 37297 33623 34103   HH bb 36334 37297 36334 37297",
          "390:   HH bb 36567 37297 36567 37297   HH bb 36614 37297 36614 37297",
          "391:   HH bb 36942 37297 36942 37297   HH bb 36967 37297 36967 37297",
          "392:   HH bb 37164 37297 37164 37297   II aa 40285 40937 37695 38347",
          "393:   II aa 40539 40937 37949 38347   II bb 40132 40937 40132 40937",
          "394:   II bb 40266 40937 40266 40937   II bb 40494 40937 40494 40937",
          "395:   II bb 40516 40937 40516 40937   II bb 40687 40937 40687 40937",
          "396:   JJ aa 43838 44737 42052 42951   JJ aa 43969 44737 42183 42951",
          "397:   JJ aa 44503 44737 42717 42951   JJ aa 44624 44737 42838 42951",
          "398:   JJ bb 43898 44737 43898 44737   JJ bb 44383 44737 44383 44737",
          "399:   JJ bb 44401 44737 44401 44737   JJ bb 44480 44737 44480 44737}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "428:   II bb 42701   JJ aa 43838   JJ aa 43969   JJ aa 44503   JJ aa 44624",
          "429:   JJ bb 43898   JJ bb 44383   JJ bb 44401   JJ bb 44480}",
          "431: do_execsql_test 1.4.1 {",
          "432:   SELECT a, b, sum(c) OVER (ORDER BY a  GROUPS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t3 ORDER BY 1, 2, 3;",
          "433: } {AA aa 44737   AA aa 44737   AA aa 44737   AA aa 44737   AA bb 44737",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "526: do_execsql_test 1.3.8 {",
          "527:   SELECT a, b,",
          "528:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING  EXCLUDE CURRENT ROW),",
          "529:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING ),",
          "530:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING  EXCLUDE CURRENT ROW),",
          "531:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING )",
          "532:     FROM t3 ORDER BY 1, 2, 3;",
          "533: } {AA aa 11091 12025 3751 4685   AA aa 11114 12025 3774 4685",
          "534:   AA aa 11786 12025 4446 4685   AA aa 11802 12025 4462 4685",
          "535:   AA bb 11155 12025 6688 7558   AA bb 11398 12025 6931 7558",
          "536:   AA bb 11453 12025 6986 7558   AA bb 11716 12025 7249 7558",
          "537:   BB aa 14385 15147 11263 12025   BB aa 14487 15147 11365 12025",
          "538:   BB aa 14735 15147 11613 12025   BB aa 14748 15147 11626 12025",
          "539:   BB aa 14754 15147 11632 12025   BB aa 14900 15147 11778 12025",
          "540:   BB bb 14307 15147 13139 13979   BB bb 14355 15147 13187 13979",
          "541:   BB bb 14361 15147 13193 13979   BB bb 14436 15147 13268 13979",
          "542:   BB bb 14442 15147 13274 13979   BB bb 14514 15147 13346 13979",
          "543:   CC aa 18420 19179 14388 15147   CC aa 18572 19179 14540 15147",
          "544:   CC aa 18749 19179 14717 15147   CC aa 19021 19179 14989 15147",
          "545:   CC bb 18357 19179 15650 16472   CC bb 18833 19179 16126 16472",
          "546:   DD aa 20873 21718 18334 19179   DD aa 21462 21718 18923 19179",
          "547:   DD aa 21494 21718 18955 19179   DD bb 20759 21718 19110 20069",
          "548:   DD bb 20924 21718 19275 20069   DD bb 21002 21718 19353 20069",
          "549:   DD bb 21480 21718 19831 20069   EE aa 26609 27386 20941 21718",
          "550:   EE aa 27273 27386 21605 21718   EE bb 26618 27386 23113 23881",
          "551:   EE bb 26757 27386 23252 23881   EE bb 27134 27386 23629 23881",
          "552:   FF aa 31184 31854 26716 27386   FF aa 31187 31854 26719 27386",
          "553:   FF aa 31236 31854 26768 27386   FF aa 31646 31854 27178 27386",
          "554:   FF bb 30916 31854 28045 28983   FF bb 30984 31854 28113 28983",
          "555:   FF bb 31128 31854 28257 28983   FF bb 31280 31854 28409 28983",
          "556:   FF bb 31559 31854 28688 28983   FF bb 31752 31854 28881 28983",
          "557:   GG aa 36663 37297 31220 31854   GG aa 36817 37297 31374 31854",
          "558:   GG aa 36962 37297 31519 31854   GG aa 37149 37297 31706 31854",
          "559:   GG bb 36359 37297 33165 34103   GG bb 36368 37297 33174 34103",
          "560:   GG bb 36453 37297 33259 34103   GG bb 37137 37297 33943 34103",
          "561:   HH aa 39958 40937 36318 37297   HH aa 40147 40937 36507 37297",
          "562:   HH aa 40457 40937 36817 37297   HH bb 39974 40937 37384 38347",
          "563:   HH bb 40207 40937 37617 38347   HH bb 40254 40937 37664 38347",
          "564:   HH bb 40582 40937 37992 38347   HH bb 40607 40937 38017 38347",
          "565:   HH bb 40804 40937 38214 38347   II aa 44085 44737 40285 40937",
          "566:   II aa 44339 44737 40539 40937   II bb 43932 44737 42146 42951",
          "567:   II bb 44066 44737 42280 42951   II bb 44294 44737 42508 42951",
          "568:   II bb 44316 44737 42530 42951   II bb 44487 44737 42701 42951",
          "569:   JJ aa 43838 44737 43838 44737   JJ aa 43969 44737 43969 44737",
          "570:   JJ aa 44503 44737 44503 44737   JJ aa 44624 44737 44624 44737",
          "571:   JJ bb 43898 44737 43898 44737   JJ bb 44383 44737 44383 44737",
          "572:   JJ bb 44401 44737 44401 44737   JJ bb 44480 44737 44480 44737}",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "553:   II bb 44316   II bb 44487   JJ aa 43838   JJ aa 43969   JJ aa 44503",
          "554:   JJ aa 44624   JJ bb 43898   JJ bb 44383   JJ bb 44401   JJ bb 44480}",
          "556: do_execsql_test 1.5.1 {",
          "557:   SELECT a, b, sum(c) OVER (ORDER BY a  GROUPS BETWEEN 1 PRECEDING         AND 2 PRECEDING ) FROM t3 ORDER BY 1, 2, 3;",
          "558: } {AA aa {}   AA aa {}   AA aa {}   AA aa {}   AA bb {}   AA bb {}   AA bb {}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "699: do_execsql_test 1.4.8 {",
          "700:   SELECT a, b,",
          "701:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING  EXCLUDE CURRENT ROW),",
          "702:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ),",
          "703:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING  EXCLUDE CURRENT ROW),",
          "704:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )",
          "705:     FROM t3 ORDER BY 1, 2, 3;",
          "706: } {AA aa 43803 44737 43803 44737   AA aa 43826 44737 43826 44737",
          "707:   AA aa 44498 44737 44498 44737   AA aa 44514 44737 44514 44737",
          "708:   AA bb 43867 44737 43867 44737   AA bb 44110 44737 44110 44737",
          "709:   AA bb 44165 44737 44165 44737   AA bb 44428 44737 44428 44737",
          "710:   BB aa 43975 44737 43975 44737   BB aa 44077 44737 44077 44737",
          "711:   BB aa 44325 44737 44325 44737   BB aa 44338 44737 44338 44737",
          "712:   BB aa 44344 44737 44344 44737   BB aa 44490 44737 44490 44737",
          "713:   BB bb 43897 44737 43897 44737   BB bb 43945 44737 43945 44737",
          "714:   BB bb 43951 44737 43951 44737   BB bb 44026 44737 44026 44737",
          "715:   BB bb 44032 44737 44032 44737   BB bb 44104 44737 44104 44737",
          "716:   CC aa 43978 44737 43978 44737   CC aa 44130 44737 44130 44737",
          "717:   CC aa 44307 44737 44307 44737   CC aa 44579 44737 44579 44737",
          "718:   CC bb 43915 44737 43915 44737   CC bb 44391 44737 44391 44737",
          "719:   DD aa 43892 44737 43892 44737   DD aa 44481 44737 44481 44737",
          "720:   DD aa 44513 44737 44513 44737   DD bb 43778 44737 43778 44737",
          "721:   DD bb 43943 44737 43943 44737   DD bb 44021 44737 44021 44737",
          "722:   DD bb 44499 44737 44499 44737   EE aa 43960 44737 43960 44737",
          "723:   EE aa 44624 44737 44624 44737   EE bb 43969 44737 43969 44737",
          "724:   EE bb 44108 44737 44108 44737   EE bb 44485 44737 44485 44737",
          "725:   FF aa 44067 44737 44067 44737   FF aa 44070 44737 44070 44737",
          "726:   FF aa 44119 44737 44119 44737   FF aa 44529 44737 44529 44737",
          "727:   FF bb 43799 44737 43799 44737   FF bb 43867 44737 43867 44737",
          "728:   FF bb 44011 44737 44011 44737   FF bb 44163 44737 44163 44737",
          "729:   FF bb 44442 44737 44442 44737   FF bb 44635 44737 44635 44737",
          "730:   GG aa 44103 44737 44103 44737   GG aa 44257 44737 44257 44737",
          "731:   GG aa 44402 44737 44402 44737   GG aa 44589 44737 44589 44737",
          "732:   GG bb 43799 44737 43799 44737   GG bb 43808 44737 43808 44737",
          "733:   GG bb 43893 44737 43893 44737   GG bb 44577 44737 44577 44737",
          "734:   HH aa 43758 44737 43758 44737   HH aa 43947 44737 43947 44737",
          "735:   HH aa 44257 44737 44257 44737   HH bb 43774 44737 43774 44737",
          "736:   HH bb 44007 44737 44007 44737   HH bb 44054 44737 44054 44737",
          "737:   HH bb 44382 44737 44382 44737   HH bb 44407 44737 44407 44737",
          "738:   HH bb 44604 44737 44604 44737   II aa 44085 44737 44085 44737",
          "739:   II aa 44339 44737 44339 44737   II bb 43932 44737 43932 44737",
          "740:   II bb 44066 44737 44066 44737   II bb 44294 44737 44294 44737",
          "741:   II bb 44316 44737 44316 44737   II bb 44487 44737 44487 44737",
          "742:   JJ aa 43838 44737 43838 44737   JJ aa 43969 44737 43969 44737",
          "743:   JJ aa 44503 44737 44503 44737   JJ aa 44624 44737 44624 44737",
          "744:   JJ bb 43898 44737 43898 44737   JJ bb 44383 44737 44383 44737",
          "745:   JJ bb 44401 44737 44401 44737   JJ bb 44480 44737 44480 44737}",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "658:   II bb {}   II bb {}   JJ aa {}   JJ aa {}   JJ aa {}   JJ aa {}   JJ bb {}",
          "659:   JJ bb {}   JJ bb {}   JJ bb {}}",
          "661: do_execsql_test 1.6.1 {",
          "662:   SELECT a, b, sum(c) OVER (ORDER BY a  GROUPS BETWEEN 2 PRECEDING         AND 1 PRECEDING ) FROM t3 ORDER BY 1, 2, 3;",
          "663: } {AA aa {}   AA aa {}   AA aa {}   AA aa {}   AA bb {}   AA bb {}   AA bb {}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "852: do_execsql_test 1.5.8 {",
          "853:   SELECT a, b,",
          "854:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN 1 PRECEDING         AND 2 PRECEDING  EXCLUDE CURRENT ROW),",
          "855:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN 1 PRECEDING         AND 2 PRECEDING ),",
          "856:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN 1 PRECEDING         AND 2 PRECEDING  EXCLUDE CURRENT ROW),",
          "857:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN 1 PRECEDING         AND 2 PRECEDING )",
          "858:     FROM t3 ORDER BY 1, 2, 3;",
          "859: } {AA aa {} {} {} {}   AA aa {} {} {} {}   AA aa {} {} {} {}",
          "860:   AA aa {} {} {} {}   AA bb {} {} {} {}   AA bb {} {} {} {}",
          "861:   AA bb {} {} {} {}   AA bb {} {} {} {}   BB aa {} {} {} {}",
          "862:   BB aa {} {} {} {}   BB aa {} {} {} {}   BB aa {} {} {} {}",
          "863:   BB aa {} {} {} {}   BB aa {} {} {} {}   BB bb {} {} {} {}",
          "864:   BB bb {} {} {} {}   BB bb {} {} {} {}   BB bb {} {} {} {}",
          "865:   BB bb {} {} {} {}   BB bb {} {} {} {}   CC aa {} {} {} {}",
          "866:   CC aa {} {} {} {}   CC aa {} {} {} {}   CC aa {} {} {} {}",
          "867:   CC bb {} {} {} {}   CC bb {} {} {} {}   DD aa {} {} {} {}",
          "868:   DD aa {} {} {} {}   DD aa {} {} {} {}   DD bb {} {} {} {}",
          "869:   DD bb {} {} {} {}   DD bb {} {} {} {}   DD bb {} {} {} {}",
          "870:   EE aa {} {} {} {}   EE aa {} {} {} {}   EE bb {} {} {} {}",
          "871:   EE bb {} {} {} {}   EE bb {} {} {} {}   FF aa {} {} {} {}",
          "872:   FF aa {} {} {} {}   FF aa {} {} {} {}   FF aa {} {} {} {}",
          "873:   FF bb {} {} {} {}   FF bb {} {} {} {}   FF bb {} {} {} {}",
          "874:   FF bb {} {} {} {}   FF bb {} {} {} {}   FF bb {} {} {} {}",
          "875:   GG aa {} {} {} {}   GG aa {} {} {} {}   GG aa {} {} {} {}",
          "876:   GG aa {} {} {} {}   GG bb {} {} {} {}   GG bb {} {} {} {}",
          "877:   GG bb {} {} {} {}   GG bb {} {} {} {}   HH aa {} {} {} {}",
          "878:   HH aa {} {} {} {}   HH aa {} {} {} {}   HH bb {} {} {} {}",
          "879:   HH bb {} {} {} {}   HH bb {} {} {} {}   HH bb {} {} {} {}",
          "880:   HH bb {} {} {} {}   HH bb {} {} {} {}   II aa {} {} {} {}",
          "881:   II aa {} {} {} {}   II bb {} {} {} {}   II bb {} {} {} {}",
          "882:   II bb {} {} {} {}   II bb {} {} {} {}   II bb {} {} {} {}",
          "883:   JJ aa {} {} {} {}   JJ aa {} {} {} {}   JJ aa {} {} {} {}",
          "884:   JJ aa {} {} {} {}   JJ bb {} {} {} {}   JJ bb {} {} {} {}",
          "885:   JJ bb {} {} {} {}   JJ bb {} {} {} {}}",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "777:   JJ aa 3640   JJ aa 3640   JJ aa 3640   JJ aa 3640   JJ bb 4604   JJ bb 4604",
          "778:   JJ bb 4604   JJ bb 4604}",
          "780: do_execsql_test 1.7.1 {",
          "781:   SELECT a, b, sum(c) OVER (ORDER BY a  GROUPS BETWEEN 3 PRECEDING         AND 1 PRECEDING ) FROM t3 ORDER BY 1, 2, 3;",
          "782: } {AA aa {}   AA aa {}   AA aa {}   AA aa {}   AA bb {}   AA bb {}   AA bb {}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1006: do_execsql_test 1.6.8 {",
          "1007:   SELECT a, b,",
          "1008:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN 2 PRECEDING         AND 1 PRECEDING  EXCLUDE CURRENT ROW),",
          "1009:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN 2 PRECEDING         AND 1 PRECEDING ),",
          "1010:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN 2 PRECEDING         AND 1 PRECEDING  EXCLUDE CURRENT ROW),",
          "1011:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN 2 PRECEDING         AND 1 PRECEDING )",
          "1012:     FROM t3 ORDER BY 1, 2, 3;",
          "1013: } {AA aa {} {} {} {}   AA aa {} {} {} {}   AA aa {} {} {} {}",
          "1014:   AA aa {} {} {} {}   AA bb {} {} 2307 2307   AA bb {} {} 2307 2307",
          "1015:   AA bb {} {} 2307 2307   AA bb {} {} 2307 2307   BB aa 4685 4685 4685 4685",
          "1016:   BB aa 4685 4685 4685 4685   BB aa 4685 4685 4685 4685",
          "1017:   BB aa 4685 4685 4685 4685   BB aa 4685 4685 4685 4685",
          "1018:   BB aa 4685 4685 4685 4685   BB bb 4685 4685 5251 5251",
          "1019:   BB bb 4685 4685 5251 5251   BB bb 4685 4685 5251 5251",
          "1020:   BB bb 4685 4685 5251 5251   BB bb 4685 4685 5251 5251",
          "1021:   BB bb 4685 4685 5251 5251   CC aa 12025 12025 7340 7340",
          "1022:   CC aa 12025 12025 7340 7340   CC aa 12025 12025 7340 7340",
          "1023:   CC aa 12025 12025 7340 7340   CC bb 12025 12025 6421 6421",
          "1024:   CC bb 12025 12025 6421 6421   DD aa 10462 10462 3122 3122",
          "1025:   DD aa 10462 10462 3122 3122   DD aa 10462 10462 3122 3122",
          "1026:   DD bb 10462 10462 2493 2493   DD bb 10462 10462 2493 2493",
          "1027:   DD bb 10462 10462 2493 2493   DD bb 10462 10462 2493 2493",
          "1028:   EE aa 7154 7154 4032 4032   EE aa 7154 7154 4032 4032",
          "1029:   EE bb 7154 7154 3597 3597   EE bb 7154 7154 3597 3597",
          "1030:   EE bb 7154 7154 3597 3597   FF aa 6571 6571 2539 2539",
          "1031:   FF aa 6571 6571 2539 2539   FF aa 6571 6571 2539 2539",
          "1032:   FF aa 6571 6571 2539 2539   FF bb 6571 6571 3812 3812",
          "1033:   FF bb 6571 6571 3812 3812   FF bb 6571 6571 3812 3812",
          "1034:   FF bb 6571 6571 3812 3812   FF bb 6571 6571 3812 3812",
          "1035:   FF bb 6571 6571 3812 3812   GG aa 8207 8207 5668 5668",
          "1036:   GG aa 8207 8207 5668 5668   GG aa 8207 8207 5668 5668",
          "1037:   GG aa 8207 8207 5668 5668   GG bb 8207 8207 5102 5102",
          "1038:   GG bb 8207 8207 5102 5102   GG bb 8207 8207 5102 5102",
          "1039:   GG bb 8207 8207 5102 5102   HH aa 10136 10136 4468 4468",
          "1040:   HH aa 10136 10136 4468 4468   HH aa 10136 10136 4468 4468",
          "1041:   HH bb 10136 10136 5120 5120   HH bb 10136 10136 5120 5120",
          "1042:   HH bb 10136 10136 5120 5120   HH bb 10136 10136 5120 5120",
          "1043:   HH bb 10136 10136 5120 5120   HH bb 10136 10136 5120 5120",
          "1044:   II aa 9911 9911 5443 5443   II aa 9911 9911 5443 5443",
          "1045:   II bb 9911 9911 4244 4244   II bb 9911 9911 4244 4244",
          "1046:   II bb 9911 9911 4244 4244   II bb 9911 9911 4244 4244",
          "1047:   II bb 9911 9911 4244 4244   JJ aa 9083 9083 3640 3640",
          "1048:   JJ aa 9083 9083 3640 3640   JJ aa 9083 9083 3640 3640",
          "1049:   JJ aa 9083 9083 3640 3640   JJ bb 9083 9083 4604 4604",
          "1050:   JJ bb 9083 9083 4604 4604   JJ bb 9083 9083 4604 4604",
          "1051:   JJ bb 9083 9083 4604 4604}",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "896:   JJ aa 6834   JJ aa 6834   JJ aa 6834   JJ aa 6834   JJ bb 5654   JJ bb 5654",
          "897:   JJ bb 5654   JJ bb 5654}",
          "899: do_execsql_test 1.8.1 {",
          "900:   SELECT a, b, sum(c) OVER (ORDER BY a  GROUPS BETWEEN 3 PRECEDING         AND 0 PRECEDING ) FROM t3 ORDER BY 1, 2, 3;",
          "901: } {AA aa 4685   AA aa 4685   AA aa 4685   AA aa 4685   AA bb 4685   AA bb 4685",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1172: do_execsql_test 1.7.8 {",
          "1173:   SELECT a, b,",
          "1174:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN 3 PRECEDING         AND 1 PRECEDING  EXCLUDE CURRENT ROW),",
          "1175:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN 3 PRECEDING         AND 1 PRECEDING ),",
          "1176:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN 3 PRECEDING         AND 1 PRECEDING  EXCLUDE CURRENT ROW),",
          "1177:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN 3 PRECEDING         AND 1 PRECEDING )",
          "1178:     FROM t3 ORDER BY 1, 2, 3;",
          "1179: } {AA aa {} {} {} {}   AA aa {} {} {} {}   AA aa {} {} {} {}",
          "1180:   AA aa {} {} {} {}   AA bb {} {} 2307 2307   AA bb {} {} 2307 2307",
          "1181:   AA bb {} {} 2307 2307   AA bb {} {} 2307 2307   BB aa 4685 4685 4685 4685",
          "1182:   BB aa 4685 4685 4685 4685   BB aa 4685 4685 4685 4685",
          "1183:   BB aa 4685 4685 4685 4685   BB aa 4685 4685 4685 4685",
          "1184:   BB aa 4685 4685 4685 4685   BB bb 4685 4685 7558 7558",
          "1185:   BB bb 4685 4685 7558 7558   BB bb 4685 4685 7558 7558",
          "1186:   BB bb 4685 4685 7558 7558   BB bb 4685 4685 7558 7558",
          "1187:   BB bb 4685 4685 7558 7558   CC aa 12025 12025 9718 9718",
          "1188:   CC aa 12025 12025 9718 9718   CC aa 12025 12025 9718 9718",
          "1189:   CC aa 12025 12025 9718 9718   CC bb 12025 12025 9294 9294",
          "1190:   CC bb 12025 12025 9294 9294   DD aa 15147 15147 7589 7589",
          "1191:   DD aa 15147 15147 7589 7589   DD aa 15147 15147 7589 7589",
          "1192:   DD bb 15147 15147 4447 4447   DD bb 15147 15147 4447 4447",
          "1193:   DD bb 15147 15147 4447 4447   DD bb 15147 15147 4447 4447",
          "1194:   EE aa 14494 14494 5200 5200   EE aa 14494 14494 5200 5200",
          "1195:   EE bb 14494 14494 4922 4922   EE bb 14494 14494 4922 4922",
          "1196:   EE bb 14494 14494 4922 4922   FF aa 9693 9693 5246 5246",
          "1197:   FF aa 9693 9693 5246 5246   FF aa 9693 9693 5246 5246",
          "1198:   FF aa 9693 9693 5246 5246   FF bb 9693 9693 4702 4702",
          "1199:   FF bb 9693 9693 4702 4702   FF bb 9693 9693 4702 4702",
          "1200:   FF bb 9693 9693 4702 4702   FF bb 9693 9693 4702 4702",
          "1201:   FF bb 9693 9693 4702 4702   GG aa 12239 12239 7317 7317",
          "1202:   GG aa 12239 12239 7317 7317   GG aa 12239 12239 7317 7317",
          "1203:   GG aa 12239 12239 7317 7317   GG bb 12239 12239 7265 7265",
          "1204:   GG bb 12239 12239 7265 7265   GG bb 12239 12239 7265 7265",
          "1205:   GG bb 12239 12239 7265 7265   HH aa 12675 12675 7973 7973",
          "1206:   HH aa 12675 12675 7973 7973   HH aa 12675 12675 7973 7973",
          "1207:   HH bb 12675 12675 6717 6717   HH bb 12675 12675 6717 6717",
          "1208:   HH bb 12675 12675 6717 6717   HH bb 12675 12675 6717 6717",
          "1209:   HH bb 12675 12675 6717 6717   HH bb 12675 12675 6717 6717",
          "1210:   II aa 15579 15579 8314 8314   II aa 15579 15579 8314 8314",
          "1211:   II bb 15579 15579 6493 6493   II bb 15579 15579 6493 6493",
          "1212:   II bb 15579 15579 6493 6493   II bb 15579 15579 6493 6493",
          "1213:   II bb 15579 15579 6493 6493   JJ aa 13551 13551 6834 6834",
          "1214:   JJ aa 13551 13551 6834 6834   JJ aa 13551 13551 6834 6834",
          "1215:   JJ aa 13551 13551 6834 6834   JJ bb 13551 13551 5654 5654",
          "1216:   JJ bb 13551 13551 5654 5654   JJ bb 13551 13551 5654 5654",
          "1217:   JJ bb 13551 13551 5654 5654}",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1018:   II bb 8640   II bb 8662   II bb 8833   JJ aa 7949   JJ aa 8080   JJ aa 8614",
          "1019:   JJ aa 8735   JJ bb 6601   JJ bb 7086   JJ bb 7104   JJ bb 7183}",
          "1021: do_execsql_test 1.9.1 {",
          "1022:   SELECT a, b, sum(c) OVER (ORDER BY a  GROUPS BETWEEN 2 PRECEDING         AND CURRENT ROW ) FROM t3 ORDER BY 1, 2, 3;",
          "1023: } {AA aa 4685   AA aa 4685   AA aa 4685   AA aa 4685   AA bb 4685   AA bb 4685",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1341: do_execsql_test 1.8.8 {",
          "1342:   SELECT a, b,",
          "1343:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN 3 PRECEDING         AND 0 PRECEDING  EXCLUDE CURRENT ROW),",
          "1344:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN 3 PRECEDING         AND 0 PRECEDING ),",
          "1345:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN 3 PRECEDING         AND 0 PRECEDING  EXCLUDE CURRENT ROW),",
          "1346:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN 3 PRECEDING         AND 0 PRECEDING )",
          "1347:     FROM t3 ORDER BY 1, 2, 3;",
          "1348: } {AA aa 3751 4685 1373 2307   AA aa 3774 4685 1396 2307",
          "1349:   AA aa 4446 4685 2068 2307   AA aa 4462 4685 2084 2307",
          "1350:   AA bb 3815 4685 3815 4685   AA bb 4058 4685 4058 4685",
          "1351:   AA bb 4113 4685 4113 4685   AA bb 4376 4685 4376 4685",
          "1352:   BB aa 11263 12025 6796 7558   BB aa 11365 12025 6898 7558",
          "1353:   BB aa 11613 12025 7146 7558   BB aa 11626 12025 7159 7558",
          "1354:   BB aa 11632 12025 7165 7558   BB aa 11778 12025 7311 7558",
          "1355:   BB bb 11185 12025 11185 12025   BB bb 11233 12025 11233 12025",
          "1356:   BB bb 11239 12025 11239 12025   BB bb 11314 12025 11314 12025",
          "1357:   BB bb 11320 12025 11320 12025   BB bb 11392 12025 11392 12025",
          "1358:   CC aa 14388 15147 10913 11672   CC aa 14540 15147 11065 11672",
          "1359:   CC aa 14717 15147 11242 11672   CC aa 14989 15147 11514 11672",
          "1360:   CC bb 14325 15147 9640 10462   CC bb 14801 15147 10116 10462",
          "1361:   DD aa 18334 19179 8069 8914   DD aa 18923 19179 8658 8914",
          "1362:   DD aa 18955 19179 8690 8914   DD bb 18220 19179 6195 7154",
          "1363:   DD bb 18385 19179 6360 7154   DD bb 18463 19179 6438 7154",
          "1364:   DD bb 18941 19179 6916 7154   EE aa 16256 17033 5313 6090",
          "1365:   EE aa 16920 17033 5977 6090   EE bb 16265 17033 5803 6571",
          "1366:   EE bb 16404 17033 5942 6571   EE bb 16781 17033 6319 6571",
          "1367:   FF aa 14691 15361 6739 7409   FF aa 14694 15361 6742 7409",
          "1368:   FF aa 14743 15361 6791 7409   FF aa 15153 15361 7201 7409",
          "1369:   FF bb 14423 15361 7269 8207   FF bb 14491 15361 7337 8207",
          "1370:   FF bb 14635 15361 7481 8207   FF bb 14787 15361 7633 8207",
          "1371:   FF bb 15066 15361 7912 8207   FF bb 15259 15361 8105 8207",
          "1372:   GG aa 16073 16707 8280 8914   GG aa 16227 16707 8434 8914",
          "1373:   GG aa 16372 16707 8579 8914   GG aa 16559 16707 8766 8914",
          "1374:   GG bb 15769 16707 9198 10136   GG bb 15778 16707 9207 10136",
          "1375:   GG bb 15863 16707 9292 10136   GG bb 16547 16707 9976 10136",
          "1376:   HH aa 17139 18118 9243 10222   HH aa 17328 18118 9432 10222",
          "1377:   HH aa 17638 18118 9742 10222   HH bb 17155 18118 8948 9911",
          "1378:   HH bb 17388 18118 9181 9911   HH bb 17435 18118 9228 9911",
          "1379:   HH bb 17763 18118 9556 9911   HH bb 17788 18118 9581 9911",
          "1380:   HH bb 17985 18118 9778 9911   II aa 18567 19219 8712 9364",
          "1381:   II aa 18821 19219 8966 9364   II bb 18414 19219 8278 9083",
          "1382:   II bb 18548 19219 8412 9083   II bb 18776 19219 8640 9083",
          "1383:   II bb 18798 19219 8662 9083   II bb 18969 19219 8833 9083",
          "1384:   JJ aa 16452 17351 7949 8848   JJ aa 16583 17351 8080 8848",
          "1385:   JJ aa 17117 17351 8614 8848   JJ aa 17238 17351 8735 8848",
          "1386:   JJ bb 16512 17351 6601 7440   JJ bb 16997 17351 7086 7440",
          "1387:   JJ bb 17015 17351 7104 7440   JJ bb 17094 17351 7183 7440}",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1139:   JJ aa 4755   JJ aa 4886   JJ aa 5420   JJ aa 5541   JJ bb 5551   JJ bb 6036",
          "1140:   JJ bb 6054   JJ bb 6133}",
          "1142: do_execsql_test 1.10.1 {",
          "1143:   SELECT a, b, sum(c) OVER (ORDER BY a  GROUPS BETWEEN 3 PRECEDING         AND 0 FOLLOWING ) FROM t3 ORDER BY 1, 2, 3;",
          "1144: } {AA aa 4685   AA aa 4685   AA aa 4685   AA aa 4685   AA bb 4685   AA bb 4685",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1510: do_execsql_test 1.9.8 {",
          "1511:   SELECT a, b,",
          "1512:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN 2 PRECEDING         AND CURRENT ROW  EXCLUDE CURRENT ROW),",
          "1513:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN 2 PRECEDING         AND CURRENT ROW ),",
          "1514:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN 2 PRECEDING         AND CURRENT ROW  EXCLUDE CURRENT ROW),",
          "1515:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN 2 PRECEDING         AND CURRENT ROW )",
          "1516:     FROM t3 ORDER BY 1, 2, 3;",
          "1517: } {AA aa 3751 4685 1373 2307   AA aa 3774 4685 1396 2307",
          "1518:   AA aa 4446 4685 2068 2307   AA aa 4462 4685 2084 2307",
          "1519:   AA bb 3815 4685 3815 4685   AA bb 4058 4685 4058 4685",
          "1520:   AA bb 4113 4685 4113 4685   AA bb 4376 4685 4376 4685",
          "1521:   BB aa 11263 12025 6796 7558   BB aa 11365 12025 6898 7558",
          "1522:   BB aa 11613 12025 7146 7558   BB aa 11626 12025 7159 7558",
          "1523:   BB aa 11632 12025 7165 7558   BB aa 11778 12025 7311 7558",
          "1524:   BB bb 11185 12025 8878 9718   BB bb 11233 12025 8926 9718",
          "1525:   BB bb 11239 12025 8932 9718   BB bb 11314 12025 9007 9718",
          "1526:   BB bb 11320 12025 9013 9718   BB bb 11392 12025 9085 9718",
          "1527:   CC aa 14388 15147 8535 9294   CC aa 14540 15147 8687 9294",
          "1528:   CC aa 14717 15147 8864 9294   CC aa 14989 15147 9136 9294",
          "1529:   CC bb 14325 15147 6767 7589   CC bb 14801 15147 7243 7589",
          "1530:   DD aa 13649 14494 3602 4447   DD aa 14238 14494 4191 4447",
          "1531:   DD aa 14270 14494 4223 4447   DD bb 13535 14494 4241 5200",
          "1532:   DD bb 13700 14494 4406 5200   DD bb 13778 14494 4484 5200",
          "1533:   DD bb 14256 14494 4962 5200   EE aa 8916 9693 4145 4922",
          "1534:   EE aa 9580 9693 4809 4922   EE bb 8925 9693 4478 5246",
          "1535:   EE bb 9064 9693 4617 5246   EE bb 9441 9693 4994 5246",
          "1536:   FF aa 11569 12239 4032 4702   FF aa 11572 12239 4035 4702",
          "1537:   FF aa 11621 12239 4084 4702   FF aa 12031 12239 4494 4702",
          "1538:   FF bb 11301 12239 6379 7317   FF bb 11369 12239 6447 7317",
          "1539:   FF bb 11513 12239 6591 7317   FF bb 11665 12239 6743 7317",
          "1540:   FF bb 11944 12239 7022 7317   FF bb 12137 12239 7215 7317",
          "1541:   GG aa 12041 12675 6631 7265   GG aa 12195 12675 6785 7265",
          "1542:   GG aa 12340 12675 6930 7265   GG aa 12527 12675 7117 7265",
          "1543:   GG bb 11737 12675 7035 7973   GG bb 11746 12675 7044 7973",
          "1544:   GG bb 11831 12675 7129 7973   GG bb 12515 12675 7813 7973",
          "1545:   HH aa 14600 15579 5738 6717   HH aa 14789 15579 5927 6717",
          "1546:   HH aa 15099 15579 6237 6717   HH bb 14616 15579 7351 8314",
          "1547:   HH bb 14849 15579 7584 8314   HH bb 14896 15579 7631 8314",
          "1548:   HH bb 15224 15579 7959 8314   HH bb 15249 15579 7984 8314",
          "1549:   HH bb 15446 15579 8181 8314   II aa 12899 13551 5841 6493",
          "1550:   II aa 13153 13551 6095 6493   II bb 12746 13551 6029 6834",
          "1551:   II bb 12880 13551 6163 6834   II bb 13108 13551 6391 6834",
          "1552:   II bb 13130 13551 6413 6834   II bb 13301 13551 6584 6834",
          "1553:   JJ aa 11984 12883 4755 5654   JJ aa 12115 12883 4886 5654",
          "1554:   JJ aa 12649 12883 5420 5654   JJ aa 12770 12883 5541 5654",
          "1555:   JJ bb 12044 12883 5551 6390   JJ bb 12529 12883 6036 6390",
          "1556:   JJ bb 12547 12883 6054 6390   JJ bb 12626 12883 6133 6390}",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1261:   II bb 8640   II bb 8662   II bb 8833   JJ aa 7949   JJ aa 8080   JJ aa 8614",
          "1262:   JJ aa 8735   JJ bb 6601   JJ bb 7086   JJ bb 7104   JJ bb 7183}",
          "1264: do_execsql_test 1.11.1 {",
          "1265:   SELECT a, b, sum(c) OVER (ORDER BY a  GROUPS BETWEEN 2 PRECEDING         AND UNBOUNDED FOLLOWING ) FROM t3 ORDER BY 1, 2, 3;",
          "1266: } {AA aa 44737   AA aa 44737   AA aa 44737   AA aa 44737   AA bb 44737",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1680: do_execsql_test 1.10.8 {",
          "1681:   SELECT a, b,",
          "1682:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN 3 PRECEDING         AND 0 FOLLOWING  EXCLUDE CURRENT ROW),",
          "1683:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN 3 PRECEDING         AND 0 FOLLOWING ),",
          "1684:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN 3 PRECEDING         AND 0 FOLLOWING  EXCLUDE CURRENT ROW),",
          "1685:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN 3 PRECEDING         AND 0 FOLLOWING )",
          "1686:     FROM t3 ORDER BY 1, 2, 3;",
          "1687: } {AA aa 3751 4685 1373 2307   AA aa 3774 4685 1396 2307",
          "1688:   AA aa 4446 4685 2068 2307   AA aa 4462 4685 2084 2307",
          "1689:   AA bb 3815 4685 3815 4685   AA bb 4058 4685 4058 4685",
          "1690:   AA bb 4113 4685 4113 4685   AA bb 4376 4685 4376 4685",
          "1691:   BB aa 11263 12025 6796 7558   BB aa 11365 12025 6898 7558",
          "1692:   BB aa 11613 12025 7146 7558   BB aa 11626 12025 7159 7558",
          "1693:   BB aa 11632 12025 7165 7558   BB aa 11778 12025 7311 7558",
          "1694:   BB bb 11185 12025 11185 12025   BB bb 11233 12025 11233 12025",
          "1695:   BB bb 11239 12025 11239 12025   BB bb 11314 12025 11314 12025",
          "1696:   BB bb 11320 12025 11320 12025   BB bb 11392 12025 11392 12025",
          "1697:   CC aa 14388 15147 10913 11672   CC aa 14540 15147 11065 11672",
          "1698:   CC aa 14717 15147 11242 11672   CC aa 14989 15147 11514 11672",
          "1699:   CC bb 14325 15147 9640 10462   CC bb 14801 15147 10116 10462",
          "1700:   DD aa 18334 19179 8069 8914   DD aa 18923 19179 8658 8914",
          "1701:   DD aa 18955 19179 8690 8914   DD bb 18220 19179 6195 7154",
          "1702:   DD bb 18385 19179 6360 7154   DD bb 18463 19179 6438 7154",
          "1703:   DD bb 18941 19179 6916 7154   EE aa 16256 17033 5313 6090",
          "1704:   EE aa 16920 17033 5977 6090   EE bb 16265 17033 5803 6571",
          "1705:   EE bb 16404 17033 5942 6571   EE bb 16781 17033 6319 6571",
          "1706:   FF aa 14691 15361 6739 7409   FF aa 14694 15361 6742 7409",
          "1707:   FF aa 14743 15361 6791 7409   FF aa 15153 15361 7201 7409",
          "1708:   FF bb 14423 15361 7269 8207   FF bb 14491 15361 7337 8207",
          "1709:   FF bb 14635 15361 7481 8207   FF bb 14787 15361 7633 8207",
          "1710:   FF bb 15066 15361 7912 8207   FF bb 15259 15361 8105 8207",
          "1711:   GG aa 16073 16707 8280 8914   GG aa 16227 16707 8434 8914",
          "1712:   GG aa 16372 16707 8579 8914   GG aa 16559 16707 8766 8914",
          "1713:   GG bb 15769 16707 9198 10136   GG bb 15778 16707 9207 10136",
          "1714:   GG bb 15863 16707 9292 10136   GG bb 16547 16707 9976 10136",
          "1715:   HH aa 17139 18118 9243 10222   HH aa 17328 18118 9432 10222",
          "1716:   HH aa 17638 18118 9742 10222   HH bb 17155 18118 8948 9911",
          "1717:   HH bb 17388 18118 9181 9911   HH bb 17435 18118 9228 9911",
          "1718:   HH bb 17763 18118 9556 9911   HH bb 17788 18118 9581 9911",
          "1719:   HH bb 17985 18118 9778 9911   II aa 18567 19219 8712 9364",
          "1720:   II aa 18821 19219 8966 9364   II bb 18414 19219 8278 9083",
          "1721:   II bb 18548 19219 8412 9083   II bb 18776 19219 8640 9083",
          "1722:   II bb 18798 19219 8662 9083   II bb 18969 19219 8833 9083",
          "1723:   JJ aa 16452 17351 7949 8848   JJ aa 16583 17351 8080 8848",
          "1724:   JJ aa 17117 17351 8614 8848   JJ aa 17238 17351 8735 8848",
          "1725:   JJ bb 16512 17351 6601 7440   JJ bb 16997 17351 7086 7440",
          "1726:   JJ bb 17015 17351 7104 7440   JJ bb 17094 17351 7183 7440}",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1386:   II bb 10213   II bb 10384   JJ aa 6541   JJ aa 6672   JJ aa 7206",
          "1387:   JJ aa 7327   JJ bb 5551   JJ bb 6036   JJ bb 6054   JJ bb 6133}",
          "1389: do_execsql_test 1.12.1 {",
          "1390:   SELECT a, b, sum(c) OVER (ORDER BY a  GROUPS BETWEEN CURRENT ROW         AND 0 FOLLOWING ) FROM t3 ORDER BY 1, 2, 3;",
          "1391: } {AA aa 4685   AA aa 4685   AA aa 4685   AA aa 4685   AA bb 4685   AA bb 4685",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1853: do_execsql_test 1.11.8 {",
          "1854:   SELECT a, b,",
          "1855:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN 2 PRECEDING         AND UNBOUNDED FOLLOWING  EXCLUDE CURRENT ROW),",
          "1856:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN 2 PRECEDING         AND UNBOUNDED FOLLOWING ),",
          "1857:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN 2 PRECEDING         AND UNBOUNDED FOLLOWING  EXCLUDE CURRENT ROW),",
          "1858:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN 2 PRECEDING         AND UNBOUNDED FOLLOWING )",
          "1859:     FROM t3 ORDER BY 1, 2, 3;",
          "1860: } {AA aa 43803 44737 43803 44737   AA aa 43826 44737 43826 44737",
          "1861:   AA aa 44498 44737 44498 44737   AA aa 44514 44737 44514 44737",
          "1862:   AA bb 43867 44737 43867 44737   AA bb 44110 44737 44110 44737",
          "1863:   AA bb 44165 44737 44165 44737   AA bb 44428 44737 44428 44737",
          "1864:   BB aa 43975 44737 43975 44737   BB aa 44077 44737 44077 44737",
          "1865:   BB aa 44325 44737 44325 44737   BB aa 44338 44737 44338 44737",
          "1866:   BB aa 44344 44737 44344 44737   BB aa 44490 44737 44490 44737",
          "1867:   BB bb 43897 44737 41590 42430   BB bb 43945 44737 41638 42430",
          "1868:   BB bb 43951 44737 41644 42430   BB bb 44026 44737 41719 42430",
          "1869:   BB bb 44032 44737 41725 42430   BB bb 44104 44737 41797 42430",
          "1870:   CC aa 43978 44737 39293 40052   CC aa 44130 44737 39445 40052",
          "1871:   CC aa 44307 44737 39622 40052   CC aa 44579 44737 39894 40052",
          "1872:   CC bb 43915 44737 36357 37179   CC bb 44391 44737 36833 37179",
          "1873:   DD aa 39207 40052 31867 32712   DD aa 39796 40052 32456 32712",
          "1874:   DD aa 39828 40052 32488 32712   DD bb 39093 40052 29799 30758",
          "1875:   DD bb 39258 40052 29964 30758   DD bb 39336 40052 30042 30758",
          "1876:   DD bb 39814 40052 30520 30758   EE aa 31935 32712 28813 29590",
          "1877:   EE aa 32599 32712 29477 29590   EE bb 31944 32712 27497 28265",
          "1878:   EE bb 32083 32712 27636 28265   EE bb 32460 32712 28013 28265",
          "1879:   FF aa 28920 29590 24888 25558   FF aa 28923 29590 24891 25558",
          "1880:   FF aa 28972 29590 24940 25558   FF aa 29382 29590 25350 25558",
          "1881:   FF bb 28652 29590 23730 24668   FF bb 28720 29590 23798 24668",
          "1882:   FF bb 28864 29590 23942 24668   FF bb 29016 29590 24094 24668",
          "1883:   FF bb 29295 29590 24373 24668   FF bb 29488 29590 24566 24668",
          "1884:   GG aa 24924 25558 22385 23019   GG aa 25078 25558 22539 23019",
          "1885:   GG aa 25223 25558 22684 23019   GG aa 25410 25558 22871 23019",
          "1886:   GG bb 24620 25558 19918 20856   GG bb 24629 25558 19927 20856",
          "1887:   GG bb 24714 25558 20012 20856   GG bb 25398 25558 20696 20856",
          "1888:   HH aa 22040 23019 16372 17351   HH aa 22229 23019 16561 17351",
          "1889:   HH aa 22539 23019 16871 17351   HH bb 22056 23019 14791 15754",
          "1890:   HH bb 22289 23019 15024 15754   HH bb 22336 23019 15071 15754",
          "1891:   HH bb 22664 23019 15399 15754   HH bb 22689 23019 15424 15754",
          "1892:   HH bb 22886 23019 15621 15754   II aa 16699 17351 12231 12883",
          "1893:   II aa 16953 17351 12485 12883   II bb 16546 17351 9829 10634",
          "1894:   II bb 16680 17351 9963 10634   II bb 16908 17351 10191 10634",
          "1895:   II bb 16930 17351 10213 10634   II bb 17101 17351 10384 10634",
          "1896:   JJ aa 11984 12883 6541 7440   JJ aa 12115 12883 6672 7440",
          "1897:   JJ aa 12649 12883 7206 7440   JJ aa 12770 12883 7327 7440",
          "1898:   JJ bb 12044 12883 5551 6390   JJ bb 12529 12883 6036 6390",
          "1899:   JJ bb 12547 12883 6054 6390   JJ bb 12626 12883 6133 6390}",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1503:   JJ aa 1115   JJ aa 1246   JJ aa 1780   JJ aa 1901   JJ bb 947   JJ bb 1432",
          "1504:   JJ bb 1450   JJ bb 1529}",
          "1506: do_execsql_test 1.13.1 {",
          "1507:   SELECT a, b, sum(c) OVER (ORDER BY a  GROUPS BETWEEN CURRENT ROW         AND 1 FOLLOWING ) FROM t3 ORDER BY 1, 2, 3;",
          "1508: } {AA aa 12025   AA aa 12025   AA aa 12025   AA aa 12025   AA bb 12025",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2018: do_execsql_test 1.12.8 {",
          "2019:   SELECT a, b,",
          "2020:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN CURRENT ROW         AND 0 FOLLOWING  EXCLUDE CURRENT ROW),",
          "2021:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN CURRENT ROW         AND 0 FOLLOWING ),",
          "2022:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN CURRENT ROW         AND 0 FOLLOWING  EXCLUDE CURRENT ROW),",
          "2023:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN CURRENT ROW         AND 0 FOLLOWING )",
          "2024:     FROM t3 ORDER BY 1, 2, 3;",
          "2025: } {AA aa 3751 4685 1373 2307   AA aa 3774 4685 1396 2307",
          "2026:   AA aa 4446 4685 2068 2307   AA aa 4462 4685 2084 2307",
          "2027:   AA bb 3815 4685 1508 2378   AA bb 4058 4685 1751 2378",
          "2028:   AA bb 4113 4685 1806 2378   AA bb 4376 4685 2069 2378",
          "2029:   BB aa 6578 7340 2111 2873   BB aa 6680 7340 2213 2873",
          "2030:   BB aa 6928 7340 2461 2873   BB aa 6941 7340 2474 2873",
          "2031:   BB aa 6947 7340 2480 2873   BB aa 7093 7340 2626 2873",
          "2032:   BB bb 6500 7340 3627 4467   BB bb 6548 7340 3675 4467",
          "2033:   BB bb 6554 7340 3681 4467   BB bb 6629 7340 3756 4467",
          "2034:   BB bb 6635 7340 3762 4467   BB bb 6707 7340 3834 4467",
          "2035:   CC aa 2363 3122 1195 1954   CC aa 2515 3122 1347 1954",
          "2036:   CC aa 2692 3122 1524 1954   CC aa 2964 3122 1796 1954",
          "2037:   CC bb 2300 3122 346 1168   CC bb 2776 3122 822 1168",
          "2038:   DD aa 3187 4032 480 1325   DD aa 3776 4032 1069 1325",
          "2039:   DD aa 3808 4032 1101 1325   DD bb 3073 4032 1748 2707",
          "2040:   DD bb 3238 4032 1913 2707   DD bb 3316 4032 1991 2707",
          "2041:   DD bb 3794 4032 2469 2707   EE aa 1762 2539 113 890",
          "2042:   EE aa 2426 2539 777 890   EE bb 1771 2539 881 1649",
          "2043:   EE bb 1910 2539 1020 1649   EE bb 2287 2539 1397 1649",
          "2044:   FF aa 4998 5668 1493 2163   FF aa 5001 5668 1496 2163",
          "2045:   FF aa 5050 5668 1545 2163   FF aa 5460 5668 1955 2163",
          "2046:   FF bb 4730 5668 2567 3505   FF bb 4798 5668 2635 3505",
          "2047:   FF bb 4942 5668 2779 3505   FF bb 5094 5668 2931 3505",
          "2048:   FF bb 5373 5668 3210 3505   FF bb 5566 5668 3403 3505",
          "2049:   GG aa 3834 4468 963 1597   GG aa 3988 4468 1117 1597",
          "2050:   GG aa 4133 4468 1262 1597   GG aa 4320 4468 1449 1597",
          "2051:   GG bb 3530 4468 1933 2871   GG bb 3539 4468 1942 2871",
          "2052:   GG bb 3624 4468 2027 2871   GG bb 4308 4468 2711 2871",
          "2053:   HH aa 4464 5443 1270 2249   HH aa 4653 5443 1459 2249",
          "2054:   HH aa 4963 5443 1769 2249   HH bb 4480 5443 2231 3194",
          "2055:   HH bb 4713 5443 2464 3194   HH bb 4760 5443 2511 3194",
          "2056:   HH bb 5088 5443 2839 3194   HH bb 5113 5443 2864 3194",
          "2057:   HH bb 5310 5443 3061 3194   II aa 2988 3640 398 1050",
          "2058:   II aa 3242 3640 652 1050   II bb 2835 3640 1785 2590",
          "2059:   II bb 2969 3640 1919 2590   II bb 3197 3640 2147 2590",
          "2060:   II bb 3219 3640 2169 2590   II bb 3390 3640 2340 2590",
          "2061:   JJ aa 2901 3800 1115 2014   JJ aa 3032 3800 1246 2014",
          "2062:   JJ aa 3566 3800 1780 2014   JJ aa 3687 3800 1901 2014",
          "2063:   JJ bb 2961 3800 947 1786   JJ bb 3446 3800 1432 1786",
          "2064:   JJ bb 3464 3800 1450 1786   JJ bb 3543 3800 1529 1786}",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1621:   JJ aa 2901   JJ aa 3032   JJ aa 3566   JJ aa 3687   JJ bb 947   JJ bb 1432",
          "1622:   JJ bb 1450   JJ bb 1529}",
          "1624: do_execsql_test 1.14.1 {",
          "1625:   SELECT a, b, sum(c) OVER (ORDER BY a  GROUPS BETWEEN CURRENT ROW         AND 100 FOLLOWING ) FROM t3 ORDER BY 1, 2, 3;",
          "1626: } {AA aa 44737   AA aa 44737   AA aa 44737   AA aa 44737   AA bb 44737",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2184: do_execsql_test 1.13.8 {",
          "2185:   SELECT a, b,",
          "2186:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN CURRENT ROW         AND 1 FOLLOWING  EXCLUDE CURRENT ROW),",
          "2187:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN CURRENT ROW         AND 1 FOLLOWING ),",
          "2188:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN CURRENT ROW         AND 1 FOLLOWING  EXCLUDE CURRENT ROW),",
          "2189:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN CURRENT ROW         AND 1 FOLLOWING )",
          "2190:     FROM t3 ORDER BY 1, 2, 3;",
          "2191: } {AA aa 11091 12025 3751 4685   AA aa 11114 12025 3774 4685",
          "2192:   AA aa 11786 12025 4446 4685   AA aa 11802 12025 4462 4685",
          "2193:   AA bb 11155 12025 4381 5251   AA bb 11398 12025 4624 5251",
          "2194:   AA bb 11453 12025 4679 5251   AA bb 11716 12025 4942 5251",
          "2195:   BB aa 9700 10462 6578 7340   BB aa 9802 10462 6680 7340",
          "2196:   BB aa 10050 10462 6928 7340   BB aa 10063 10462 6941 7340",
          "2197:   BB aa 10069 10462 6947 7340   BB aa 10215 10462 7093 7340",
          "2198:   BB bb 9622 10462 5581 6421   BB bb 9670 10462 5629 6421",
          "2199:   BB bb 9676 10462 5635 6421   BB bb 9751 10462 5710 6421",
          "2200:   BB bb 9757 10462 5716 6421   BB bb 9829 10462 5788 6421",
          "2201:   CC aa 6395 7154 2363 3122   CC aa 6547 7154 2515 3122",
          "2202:   CC aa 6724 7154 2692 3122   CC aa 6996 7154 2964 3122",
          "2203:   CC bb 6332 7154 1671 2493   CC bb 6808 7154 2147 2493",
          "2204:   DD aa 5726 6571 3187 4032   DD aa 6315 6571 3776 4032",
          "2205:   DD aa 6347 6571 3808 4032   DD bb 5612 6571 2638 3597",
          "2206:   DD bb 5777 6571 2803 3597   DD bb 5855 6571 2881 3597",
          "2207:   DD bb 6333 6571 3359 3597   EE aa 7430 8207 1762 2539",
          "2208:   EE aa 8094 8207 2426 2539   EE bb 7439 8207 3044 3812",
          "2209:   EE bb 7578 8207 3183 3812   EE bb 7955 8207 3560 3812",
          "2210:   FF aa 9466 10136 4998 5668   FF aa 9469 10136 5001 5668",
          "2211:   FF aa 9518 10136 5050 5668   FF aa 9928 10136 5460 5668",
          "2212:   FF bb 9198 10136 4164 5102   FF bb 9266 10136 4232 5102",
          "2213:   FF bb 9410 10136 4376 5102   FF bb 9562 10136 4528 5102",
          "2214:   FF bb 9841 10136 4807 5102   FF bb 10034 10136 5000 5102",
          "2215:   GG aa 9277 9911 3834 4468   GG aa 9431 9911 3988 4468",
          "2216:   GG aa 9576 9911 4133 4468   GG aa 9763 9911 4320 4468",
          "2217:   GG bb 8973 9911 4182 5120   GG bb 8982 9911 4191 5120",
          "2218:   GG bb 9067 9911 4276 5120   GG bb 9751 9911 4960 5120",
          "2219:   HH aa 8104 9083 4464 5443   HH aa 8293 9083 4653 5443",
          "2220:   HH aa 8603 9083 4963 5443   HH bb 8120 9083 3281 4244",
          "2221:   HH bb 8353 9083 3514 4244   HH bb 8400 9083 3561 4244",
          "2222:   HH bb 8728 9083 3889 4244   HH bb 8753 9083 3914 4244",
          "2223:   HH bb 8950 9083 4111 4244   II aa 6788 7440 2988 3640",
          "2224:   II aa 7042 7440 3242 3640   II bb 6635 7440 3799 4604",
          "2225:   II bb 6769 7440 3933 4604   II bb 6997 7440 4161 4604",
          "2226:   II bb 7019 7440 4183 4604   II bb 7190 7440 4354 4604",
          "2227:   JJ aa 2901 3800 2901 3800   JJ aa 3032 3800 3032 3800",
          "2228:   JJ aa 3566 3800 3566 3800   JJ aa 3687 3800 3687 3800",
          "2229:   JJ bb 2961 3800 947 1786   JJ bb 3446 3800 1432 1786",
          "2230:   JJ bb 3464 3800 1450 1786   JJ bb 3543 3800 1529 1786}",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1746:   II bb 6140   JJ aa 2901   JJ aa 3032   JJ aa 3566   JJ aa 3687   JJ bb 947",
          "1747:   JJ bb 1432   JJ bb 1450   JJ bb 1529}",
          "1749: do_execsql_test 1.15.1 {",
          "1750:   SELECT a, b, sum(c) OVER (ORDER BY a  GROUPS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t3 ORDER BY 1, 2, 3;",
          "1751: } {AA aa 44737   AA aa 44737   AA aa 44737   AA aa 44737   AA bb 44737",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2357: do_execsql_test 1.14.8 {",
          "2358:   SELECT a, b,",
          "2359:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN CURRENT ROW         AND 100 FOLLOWING  EXCLUDE CURRENT ROW),",
          "2360:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN CURRENT ROW         AND 100 FOLLOWING ),",
          "2361:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN CURRENT ROW         AND 100 FOLLOWING  EXCLUDE CURRENT ROW),",
          "2362:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN CURRENT ROW         AND 100 FOLLOWING )",
          "2363:     FROM t3 ORDER BY 1, 2, 3;",
          "2364: } {AA aa 43803 44737 43803 44737   AA aa 43826 44737 43826 44737",
          "2365:   AA aa 44498 44737 44498 44737   AA aa 44514 44737 44514 44737",
          "2366:   AA bb 43867 44737 41560 42430   AA bb 44110 44737 41803 42430",
          "2367:   AA bb 44165 44737 41858 42430   AA bb 44428 44737 42121 42430",
          "2368:   BB aa 39290 40052 39290 40052   BB aa 39392 40052 39392 40052",
          "2369:   BB aa 39640 40052 39640 40052   BB aa 39653 40052 39653 40052",
          "2370:   BB aa 39659 40052 39659 40052   BB aa 39805 40052 39805 40052",
          "2371:   BB bb 39212 40052 36339 37179   BB bb 39260 40052 36387 37179",
          "2372:   BB bb 39266 40052 36393 37179   BB bb 39341 40052 36468 37179",
          "2373:   BB bb 39347 40052 36474 37179   BB bb 39419 40052 36546 37179",
          "2374:   CC aa 31953 32712 31953 32712   CC aa 32105 32712 32105 32712",
          "2375:   CC aa 32282 32712 32282 32712   CC aa 32554 32712 32554 32712",
          "2376:   CC bb 31890 32712 29936 30758   CC bb 32366 32712 30412 30758",
          "2377:   DD aa 28745 29590 28745 29590   DD aa 29334 29590 29334 29590",
          "2378:   DD aa 29366 29590 29366 29590   DD bb 28631 29590 27306 28265",
          "2379:   DD bb 28796 29590 27471 28265   DD bb 28874 29590 27549 28265",
          "2380:   DD bb 29352 29590 28027 28265   EE aa 24781 25558 24781 25558",
          "2381:   EE aa 25445 25558 25445 25558   EE bb 24790 25558 23900 24668",
          "2382:   EE bb 24929 25558 24039 24668   EE bb 25306 25558 24416 24668",
          "2383:   FF aa 22349 23019 22349 23019   FF aa 22352 23019 22352 23019",
          "2384:   FF aa 22401 23019 22401 23019   FF aa 22811 23019 22811 23019",
          "2385:   FF bb 22081 23019 19918 20856   FF bb 22149 23019 19986 20856",
          "2386:   FF bb 22293 23019 20130 20856   FF bb 22445 23019 20282 20856",
          "2387:   FF bb 22724 23019 20561 20856   FF bb 22917 23019 20754 20856",
          "2388:   GG aa 16717 17351 16717 17351   GG aa 16871 17351 16871 17351",
          "2389:   GG aa 17016 17351 17016 17351   GG aa 17203 17351 17203 17351",
          "2390:   GG bb 16413 17351 14816 15754   GG bb 16422 17351 14825 15754",
          "2391:   GG bb 16507 17351 14910 15754   GG bb 17191 17351 15594 15754",
          "2392:   HH aa 11904 12883 11904 12883   HH aa 12093 12883 12093 12883",
          "2393:   HH aa 12403 12883 12403 12883   HH bb 11920 12883 9671 10634",
          "2394:   HH bb 12153 12883 9904 10634   HH bb 12200 12883 9951 10634",
          "2395:   HH bb 12528 12883 10279 10634   HH bb 12553 12883 10304 10634",
          "2396:   HH bb 12750 12883 10501 10634   II aa 6788 7440 6788 7440",
          "2397:   II aa 7042 7440 7042 7440   II bb 6635 7440 5585 6390",
          "2398:   II bb 6769 7440 5719 6390   II bb 6997 7440 5947 6390",
          "2399:   II bb 7019 7440 5969 6390   II bb 7190 7440 6140 6390",
          "2400:   JJ aa 2901 3800 2901 3800   JJ aa 3032 3800 3032 3800",
          "2401:   JJ aa 3566 3800 3566 3800   JJ aa 3687 3800 3687 3800",
          "2402:   JJ bb 2961 3800 947 1786   JJ bb 3446 3800 1432 1786",
          "2403:   JJ bb 3464 3800 1450 1786   JJ bb 3543 3800 1529 1786}",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1871:   II bb 6140   JJ aa 2901   JJ aa 3032   JJ aa 3566   JJ aa 3687   JJ bb 947",
          "1872:   JJ bb 1432   JJ bb 1450   JJ bb 1529}",
          "1874: do_execsql_test 1.16.1 {",
          "1875:   SELECT a, b, sum(c) OVER (ORDER BY a  GROUPS BETWEEN 0 FOLLOWING         AND 0 FOLLOWING ) FROM t3 ORDER BY 1, 2, 3;",
          "1876: } {AA aa 4685   AA aa 4685   AA aa 4685   AA aa 4685   AA bb 4685   AA bb 4685",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2530: do_execsql_test 1.15.8 {",
          "2531:   SELECT a, b,",
          "2532:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING  EXCLUDE CURRENT ROW),",
          "2533:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ),",
          "2534:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING  EXCLUDE CURRENT ROW),",
          "2535:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING )",
          "2536:     FROM t3 ORDER BY 1, 2, 3;",
          "2537: } {AA aa 43803 44737 43803 44737   AA aa 43826 44737 43826 44737",
          "2538:   AA aa 44498 44737 44498 44737   AA aa 44514 44737 44514 44737",
          "2539:   AA bb 43867 44737 41560 42430   AA bb 44110 44737 41803 42430",
          "2540:   AA bb 44165 44737 41858 42430   AA bb 44428 44737 42121 42430",
          "2541:   BB aa 39290 40052 39290 40052   BB aa 39392 40052 39392 40052",
          "2542:   BB aa 39640 40052 39640 40052   BB aa 39653 40052 39653 40052",
          "2543:   BB aa 39659 40052 39659 40052   BB aa 39805 40052 39805 40052",
          "2544:   BB bb 39212 40052 36339 37179   BB bb 39260 40052 36387 37179",
          "2545:   BB bb 39266 40052 36393 37179   BB bb 39341 40052 36468 37179",
          "2546:   BB bb 39347 40052 36474 37179   BB bb 39419 40052 36546 37179",
          "2547:   CC aa 31953 32712 31953 32712   CC aa 32105 32712 32105 32712",
          "2548:   CC aa 32282 32712 32282 32712   CC aa 32554 32712 32554 32712",
          "2549:   CC bb 31890 32712 29936 30758   CC bb 32366 32712 30412 30758",
          "2550:   DD aa 28745 29590 28745 29590   DD aa 29334 29590 29334 29590",
          "2551:   DD aa 29366 29590 29366 29590   DD bb 28631 29590 27306 28265",
          "2552:   DD bb 28796 29590 27471 28265   DD bb 28874 29590 27549 28265",
          "2553:   DD bb 29352 29590 28027 28265   EE aa 24781 25558 24781 25558",
          "2554:   EE aa 25445 25558 25445 25558   EE bb 24790 25558 23900 24668",
          "2555:   EE bb 24929 25558 24039 24668   EE bb 25306 25558 24416 24668",
          "2556:   FF aa 22349 23019 22349 23019   FF aa 22352 23019 22352 23019",
          "2557:   FF aa 22401 23019 22401 23019   FF aa 22811 23019 22811 23019",
          "2558:   FF bb 22081 23019 19918 20856   FF bb 22149 23019 19986 20856",
          "2559:   FF bb 22293 23019 20130 20856   FF bb 22445 23019 20282 20856",
          "2560:   FF bb 22724 23019 20561 20856   FF bb 22917 23019 20754 20856",
          "2561:   GG aa 16717 17351 16717 17351   GG aa 16871 17351 16871 17351",
          "2562:   GG aa 17016 17351 17016 17351   GG aa 17203 17351 17203 17351",
          "2563:   GG bb 16413 17351 14816 15754   GG bb 16422 17351 14825 15754",
          "2564:   GG bb 16507 17351 14910 15754   GG bb 17191 17351 15594 15754",
          "2565:   HH aa 11904 12883 11904 12883   HH aa 12093 12883 12093 12883",
          "2566:   HH aa 12403 12883 12403 12883   HH bb 11920 12883 9671 10634",
          "2567:   HH bb 12153 12883 9904 10634   HH bb 12200 12883 9951 10634",
          "2568:   HH bb 12528 12883 10279 10634   HH bb 12553 12883 10304 10634",
          "2569:   HH bb 12750 12883 10501 10634   II aa 6788 7440 6788 7440",
          "2570:   II aa 7042 7440 7042 7440   II bb 6635 7440 5585 6390",
          "2571:   II bb 6769 7440 5719 6390   II bb 6997 7440 5947 6390",
          "2572:   II bb 7019 7440 5969 6390   II bb 7190 7440 6140 6390",
          "2573:   JJ aa 2901 3800 2901 3800   JJ aa 3032 3800 3032 3800",
          "2574:   JJ aa 3566 3800 3566 3800   JJ aa 3687 3800 3687 3800",
          "2575:   JJ bb 2961 3800 947 1786   JJ bb 3446 3800 1432 1786",
          "2576:   JJ bb 3464 3800 1450 1786   JJ bb 3543 3800 1529 1786}",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1988:   JJ aa 1115   JJ aa 1246   JJ aa 1780   JJ aa 1901   JJ bb 947   JJ bb 1432",
          "1989:   JJ bb 1450   JJ bb 1529}",
          "1991: do_execsql_test 1.17.1 {",
          "1992:   SELECT a, b, sum(c) OVER (ORDER BY a  GROUPS BETWEEN 1 FOLLOWING         AND 0 FOLLOWING ) FROM t3 ORDER BY 1, 2, 3;",
          "1993: } {AA aa {}   AA aa {}   AA aa {}   AA aa {}   AA bb {}   AA bb {}   AA bb {}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2695: do_execsql_test 1.16.8 {",
          "2696:   SELECT a, b,",
          "2697:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN 0 FOLLOWING         AND 0 FOLLOWING  EXCLUDE CURRENT ROW),",
          "2698:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN 0 FOLLOWING         AND 0 FOLLOWING ),",
          "2699:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN 0 FOLLOWING         AND 0 FOLLOWING  EXCLUDE CURRENT ROW),",
          "2700:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN 0 FOLLOWING         AND 0 FOLLOWING )",
          "2701:     FROM t3 ORDER BY 1, 2, 3;",
          "2702: } {AA aa 3751 4685 1373 2307   AA aa 3774 4685 1396 2307",
          "2703:   AA aa 4446 4685 2068 2307   AA aa 4462 4685 2084 2307",
          "2704:   AA bb 3815 4685 1508 2378   AA bb 4058 4685 1751 2378",
          "2705:   AA bb 4113 4685 1806 2378   AA bb 4376 4685 2069 2378",
          "2706:   BB aa 6578 7340 2111 2873   BB aa 6680 7340 2213 2873",
          "2707:   BB aa 6928 7340 2461 2873   BB aa 6941 7340 2474 2873",
          "2708:   BB aa 6947 7340 2480 2873   BB aa 7093 7340 2626 2873",
          "2709:   BB bb 6500 7340 3627 4467   BB bb 6548 7340 3675 4467",
          "2710:   BB bb 6554 7340 3681 4467   BB bb 6629 7340 3756 4467",
          "2711:   BB bb 6635 7340 3762 4467   BB bb 6707 7340 3834 4467",
          "2712:   CC aa 2363 3122 1195 1954   CC aa 2515 3122 1347 1954",
          "2713:   CC aa 2692 3122 1524 1954   CC aa 2964 3122 1796 1954",
          "2714:   CC bb 2300 3122 346 1168   CC bb 2776 3122 822 1168",
          "2715:   DD aa 3187 4032 480 1325   DD aa 3776 4032 1069 1325",
          "2716:   DD aa 3808 4032 1101 1325   DD bb 3073 4032 1748 2707",
          "2717:   DD bb 3238 4032 1913 2707   DD bb 3316 4032 1991 2707",
          "2718:   DD bb 3794 4032 2469 2707   EE aa 1762 2539 113 890",
          "2719:   EE aa 2426 2539 777 890   EE bb 1771 2539 881 1649",
          "2720:   EE bb 1910 2539 1020 1649   EE bb 2287 2539 1397 1649",
          "2721:   FF aa 4998 5668 1493 2163   FF aa 5001 5668 1496 2163",
          "2722:   FF aa 5050 5668 1545 2163   FF aa 5460 5668 1955 2163",
          "2723:   FF bb 4730 5668 2567 3505   FF bb 4798 5668 2635 3505",
          "2724:   FF bb 4942 5668 2779 3505   FF bb 5094 5668 2931 3505",
          "2725:   FF bb 5373 5668 3210 3505   FF bb 5566 5668 3403 3505",
          "2726:   GG aa 3834 4468 963 1597   GG aa 3988 4468 1117 1597",
          "2727:   GG aa 4133 4468 1262 1597   GG aa 4320 4468 1449 1597",
          "2728:   GG bb 3530 4468 1933 2871   GG bb 3539 4468 1942 2871",
          "2729:   GG bb 3624 4468 2027 2871   GG bb 4308 4468 2711 2871",
          "2730:   HH aa 4464 5443 1270 2249   HH aa 4653 5443 1459 2249",
          "2731:   HH aa 4963 5443 1769 2249   HH bb 4480 5443 2231 3194",
          "2732:   HH bb 4713 5443 2464 3194   HH bb 4760 5443 2511 3194",
          "2733:   HH bb 5088 5443 2839 3194   HH bb 5113 5443 2864 3194",
          "2734:   HH bb 5310 5443 3061 3194   II aa 2988 3640 398 1050",
          "2735:   II aa 3242 3640 652 1050   II bb 2835 3640 1785 2590",
          "2736:   II bb 2969 3640 1919 2590   II bb 3197 3640 2147 2590",
          "2737:   II bb 3219 3640 2169 2590   II bb 3390 3640 2340 2590",
          "2738:   JJ aa 2901 3800 1115 2014   JJ aa 3032 3800 1246 2014",
          "2739:   JJ aa 3566 3800 1780 2014   JJ aa 3687 3800 1901 2014",
          "2740:   JJ bb 2961 3800 947 1786   JJ bb 3446 3800 1432 1786",
          "2741:   JJ bb 3464 3800 1450 1786   JJ bb 3543 3800 1529 1786}",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2093:   II bb {}   II bb {}   JJ aa {}   JJ aa {}   JJ aa {}   JJ aa {}   JJ bb {}",
          "2094:   JJ bb {}   JJ bb {}   JJ bb {}}",
          "2096: do_execsql_test 1.18.1 {",
          "2097:   SELECT a, b, sum(c) OVER (ORDER BY a  GROUPS BETWEEN 1 FOLLOWING         AND 5 FOLLOWING ) FROM t3 ORDER BY 1, 2, 3;",
          "2098: } {AA aa 22701   AA aa 22701   AA aa 22701   AA aa 22701   AA bb 22701",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2848: do_execsql_test 1.17.8 {",
          "2849:   SELECT a, b,",
          "2850:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN 1 FOLLOWING         AND 0 FOLLOWING  EXCLUDE CURRENT ROW),",
          "2851:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN 1 FOLLOWING         AND 0 FOLLOWING ),",
          "2852:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN 1 FOLLOWING         AND 0 FOLLOWING  EXCLUDE CURRENT ROW),",
          "2853:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN 1 FOLLOWING         AND 0 FOLLOWING )",
          "2854:     FROM t3 ORDER BY 1, 2, 3;",
          "2855: } {AA aa {} {} {} {}   AA aa {} {} {} {}   AA aa {} {} {} {}",
          "2856:   AA aa {} {} {} {}   AA bb {} {} {} {}   AA bb {} {} {} {}",
          "2857:   AA bb {} {} {} {}   AA bb {} {} {} {}   BB aa {} {} {} {}",
          "2858:   BB aa {} {} {} {}   BB aa {} {} {} {}   BB aa {} {} {} {}",
          "2859:   BB aa {} {} {} {}   BB aa {} {} {} {}   BB bb {} {} {} {}",
          "2860:   BB bb {} {} {} {}   BB bb {} {} {} {}   BB bb {} {} {} {}",
          "2861:   BB bb {} {} {} {}   BB bb {} {} {} {}   CC aa {} {} {} {}",
          "2862:   CC aa {} {} {} {}   CC aa {} {} {} {}   CC aa {} {} {} {}",
          "2863:   CC bb {} {} {} {}   CC bb {} {} {} {}   DD aa {} {} {} {}",
          "2864:   DD aa {} {} {} {}   DD aa {} {} {} {}   DD bb {} {} {} {}",
          "2865:   DD bb {} {} {} {}   DD bb {} {} {} {}   DD bb {} {} {} {}",
          "2866:   EE aa {} {} {} {}   EE aa {} {} {} {}   EE bb {} {} {} {}",
          "2867:   EE bb {} {} {} {}   EE bb {} {} {} {}   FF aa {} {} {} {}",
          "2868:   FF aa {} {} {} {}   FF aa {} {} {} {}   FF aa {} {} {} {}",
          "2869:   FF bb {} {} {} {}   FF bb {} {} {} {}   FF bb {} {} {} {}",
          "2870:   FF bb {} {} {} {}   FF bb {} {} {} {}   FF bb {} {} {} {}",
          "2871:   GG aa {} {} {} {}   GG aa {} {} {} {}   GG aa {} {} {} {}",
          "2872:   GG aa {} {} {} {}   GG bb {} {} {} {}   GG bb {} {} {} {}",
          "2873:   GG bb {} {} {} {}   GG bb {} {} {} {}   HH aa {} {} {} {}",
          "2874:   HH aa {} {} {} {}   HH aa {} {} {} {}   HH bb {} {} {} {}",
          "2875:   HH bb {} {} {} {}   HH bb {} {} {} {}   HH bb {} {} {} {}",
          "2876:   HH bb {} {} {} {}   HH bb {} {} {} {}   II aa {} {} {} {}",
          "2877:   II aa {} {} {} {}   II bb {} {} {} {}   II bb {} {} {} {}",
          "2878:   II bb {} {} {} {}   II bb {} {} {} {}   II bb {} {} {} {}",
          "2879:   JJ aa {} {} {} {}   JJ aa {} {} {} {}   JJ aa {} {} {} {}",
          "2880:   JJ aa {} {} {} {}   JJ bb {} {} {} {}   JJ bb {} {} {} {}",
          "2881:   JJ bb {} {} {} {}   JJ bb {} {} {} {}}",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2218:   JJ aa 1786   JJ aa 1786   JJ aa 1786   JJ bb {}   JJ bb {}   JJ bb {}",
          "2219:   JJ bb {}}",
          "2221: do_execsql_test 1.19.1 {",
          "2222:   SELECT a, b, sum(c) OVER (ORDER BY a  GROUPS BETWEEN 1 FOLLOWING         AND UNBOUNDED FOLLOWING ) FROM t3 ORDER BY 1, 2, 3;",
          "2223: } {AA aa 40052   AA aa 40052   AA aa 40052   AA aa 40052   AA bb 40052",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3008: do_execsql_test 1.18.8 {",
          "3009:   SELECT a, b,",
          "3010:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN 1 FOLLOWING         AND 5 FOLLOWING  EXCLUDE CURRENT ROW),",
          "3011:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN 1 FOLLOWING         AND 5 FOLLOWING ),",
          "3012:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN 1 FOLLOWING         AND 5 FOLLOWING  EXCLUDE CURRENT ROW),",
          "3013:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN 1 FOLLOWING         AND 5 FOLLOWING )",
          "3014:     FROM t3 ORDER BY 1, 2, 3;",
          "3015: } {AA aa 22701 22701 12840 12840   AA aa 22701 22701 12840 12840",
          "3016:   AA aa 22701 22701 12840 12840   AA aa 22701 22701 12840 12840",
          "3017:   AA bb 22701 22701 11787 11787   AA bb 22701 22701 11787 11787",
          "3018:   AA bb 22701 22701 11787 11787   AA bb 22701 22701 11787 11787",
          "3019:   BB aa 19829 19829 11621 11621   BB aa 19829 19829 11621 11621",
          "3020:   BB aa 19829 19829 11621 11621   BB aa 19829 19829 11621 11621",
          "3021:   BB aa 19829 19829 11621 11621   BB aa 19829 19829 11621 11621",
          "3022:   BB bb 19829 19829 8044 8044   BB bb 19829 19829 8044 8044",
          "3023:   BB bb 19829 19829 8044 8044   BB bb 19829 19829 8044 8044",
          "3024:   BB bb 19829 19829 8044 8044   BB bb 19829 19829 8044 8044",
          "3025:   CC aa 22150 22150 7739 7739   CC aa 22150 22150 7739 7739",
          "3026:   CC aa 22150 22150 7739 7739   CC aa 22150 22150 7739 7739",
          "3027:   CC bb 22150 22150 8734 8734   CC bb 22150 22150 8734 8734",
          "3028:   DD aa 21758 21758 10914 10914   DD aa 21758 21758 10914 10914",
          "3029:   DD aa 21758 21758 10914 10914   DD bb 21758 21758 9804 9804",
          "3030:   DD bb 21758 21758 9804 9804   DD bb 21758 21758 9804 9804",
          "3031:   DD bb 21758 21758 9804 9804   EE aa 23019 23019 11785 11785",
          "3032:   EE aa 23019 23019 11785 11785   EE bb 23019 23019 12385 12385",
          "3033:   EE bb 23019 23019 12385 12385   EE bb 23019 23019 12385 12385",
          "3034:   FF aa 17351 17351 13416 13416   FF aa 17351 17351 13416 13416",
          "3035:   FF aa 17351 17351 13416 13416   FF aa 17351 17351 13416 13416",
          "3036:   FF bb 17351 17351 10961 10961   FF bb 17351 17351 10961 10961",
          "3037:   FF bb 17351 17351 10961 10961   FF bb 17351 17351 10961 10961",
          "3038:   FF bb 17351 17351 10961 10961   FF bb 17351 17351 10961 10961",
          "3039:   GG aa 12883 12883 11954 11954   GG aa 12883 12883 11954 11954",
          "3040:   GG aa 12883 12883 11954 11954   GG aa 12883 12883 11954 11954",
          "3041:   GG bb 12883 12883 11097 11097   GG bb 12883 12883 11097 11097",
          "3042:   GG bb 12883 12883 11097 11097   GG bb 12883 12883 11097 11097",
          "3043:   HH aa 7440 7440 10634 10634   HH aa 7440 7440 10634 10634",
          "3044:   HH aa 7440 7440 10634 10634   HH bb 7440 7440 7440 7440",
          "3045:   HH bb 7440 7440 7440 7440   HH bb 7440 7440 7440 7440",
          "3046:   HH bb 7440 7440 7440 7440   HH bb 7440 7440 7440 7440",
          "3047:   HH bb 7440 7440 7440 7440   II aa 3800 3800 6390 6390",
          "3048:   II aa 3800 3800 6390 6390   II bb 3800 3800 3800 3800",
          "3049:   II bb 3800 3800 3800 3800   II bb 3800 3800 3800 3800",
          "3050:   II bb 3800 3800 3800 3800   II bb 3800 3800 3800 3800",
          "3051:   JJ aa {} {} 1786 1786   JJ aa {} {} 1786 1786   JJ aa {} {} 1786 1786",
          "3052:   JJ aa {} {} 1786 1786   JJ bb {} {} {} {}   JJ bb {} {} {} {}",
          "3053:   JJ bb {} {} {} {}   JJ bb {} {} {} {}}",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2343:   JJ aa 1786   JJ aa 1786   JJ aa 1786   JJ aa 1786   JJ bb {}   JJ bb {}",
          "2344:   JJ bb {}   JJ bb {}}",
          "2346: do_execsql_test 2.1.1 {",
          "2347:   SELECT row_number() OVER win",
          "2348:     FROM t3",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3180: do_execsql_test 1.19.8 {",
          "3181:   SELECT a, b,",
          "3182:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN 1 FOLLOWING         AND UNBOUNDED FOLLOWING  EXCLUDE CURRENT ROW),",
          "3183:       sum(c) OVER (ORDER BY a  GROUPS BETWEEN 1 FOLLOWING         AND UNBOUNDED FOLLOWING ),",
          "3184:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN 1 FOLLOWING         AND UNBOUNDED FOLLOWING  EXCLUDE CURRENT ROW),",
          "3185:       sum(c) OVER (ORDER BY a,b  GROUPS BETWEEN 1 FOLLOWING         AND UNBOUNDED FOLLOWING )",
          "3186:     FROM t3 ORDER BY 1, 2, 3;",
          "3187: } {AA aa 40052 40052 42430 42430   AA aa 40052 40052 42430 42430",
          "3188:   AA aa 40052 40052 42430 42430   AA aa 40052 40052 42430 42430",
          "3189:   AA bb 40052 40052 40052 40052   AA bb 40052 40052 40052 40052",
          "3190:   AA bb 40052 40052 40052 40052   AA bb 40052 40052 40052 40052",
          "3191:   BB aa 32712 32712 37179 37179   BB aa 32712 32712 37179 37179",
          "3192:   BB aa 32712 32712 37179 37179   BB aa 32712 32712 37179 37179",
          "3193:   BB aa 32712 32712 37179 37179   BB aa 32712 32712 37179 37179",
          "3194:   BB bb 32712 32712 32712 32712   BB bb 32712 32712 32712 32712",
          "3195:   BB bb 32712 32712 32712 32712   BB bb 32712 32712 32712 32712",
          "3196:   BB bb 32712 32712 32712 32712   BB bb 32712 32712 32712 32712",
          "3197:   CC aa 29590 29590 30758 30758   CC aa 29590 29590 30758 30758",
          "3198:   CC aa 29590 29590 30758 30758   CC aa 29590 29590 30758 30758",
          "3199:   CC bb 29590 29590 29590 29590   CC bb 29590 29590 29590 29590",
          "3200:   DD aa 25558 25558 28265 28265   DD aa 25558 25558 28265 28265",
          "3201:   DD aa 25558 25558 28265 28265   DD bb 25558 25558 25558 25558",
          "3202:   DD bb 25558 25558 25558 25558   DD bb 25558 25558 25558 25558",
          "3203:   DD bb 25558 25558 25558 25558   EE aa 23019 23019 24668 24668",
          "3204:   EE aa 23019 23019 24668 24668   EE bb 23019 23019 23019 23019",
          "3205:   EE bb 23019 23019 23019 23019   EE bb 23019 23019 23019 23019",
          "3206:   FF aa 17351 17351 20856 20856   FF aa 17351 17351 20856 20856",
          "3207:   FF aa 17351 17351 20856 20856   FF aa 17351 17351 20856 20856",
          "3208:   FF bb 17351 17351 17351 17351   FF bb 17351 17351 17351 17351",
          "3209:   FF bb 17351 17351 17351 17351   FF bb 17351 17351 17351 17351",
          "3210:   FF bb 17351 17351 17351 17351   FF bb 17351 17351 17351 17351",
          "3211:   GG aa 12883 12883 15754 15754   GG aa 12883 12883 15754 15754",
          "3212:   GG aa 12883 12883 15754 15754   GG aa 12883 12883 15754 15754",
          "3213:   GG bb 12883 12883 12883 12883   GG bb 12883 12883 12883 12883",
          "3214:   GG bb 12883 12883 12883 12883   GG bb 12883 12883 12883 12883",
          "3215:   HH aa 7440 7440 10634 10634   HH aa 7440 7440 10634 10634",
          "3216:   HH aa 7440 7440 10634 10634   HH bb 7440 7440 7440 7440",
          "3217:   HH bb 7440 7440 7440 7440   HH bb 7440 7440 7440 7440",
          "3218:   HH bb 7440 7440 7440 7440   HH bb 7440 7440 7440 7440",
          "3219:   HH bb 7440 7440 7440 7440   II aa 3800 3800 6390 6390",
          "3220:   II aa 3800 3800 6390 6390   II bb 3800 3800 3800 3800",
          "3221:   II bb 3800 3800 3800 3800   II bb 3800 3800 3800 3800",
          "3222:   II bb 3800 3800 3800 3800   II bb 3800 3800 3800 3800",
          "3223:   JJ aa {} {} 1786 1786   JJ aa {} {} 1786 1786   JJ aa {} {} 1786 1786",
          "3224:   JJ aa {} {} 1786 1786   JJ bb {} {} {} {}   JJ bb {} {} {} {}",
          "3225:   JJ bb {} {} {} {}   JJ bb {} {} {} {}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "203b1ea0f5d6bb7b8b1c68bcb7e4563a233df872",
      "candidate_info": {
        "commit_hash": "203b1ea0f5d6bb7b8b1c68bcb7e4563a233df872",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/203b1ea0f5d6bb7b8b1c68bcb7e4563a233df872",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c"
        ],
        "message": "Detect when an attempt is made to write to a pointer map page that is also being used as a btree page and report corruption.\n\nFossilOrigin-Name: 3036fd71ac7063359b04a0ed54a6c63a380eb7ff75cd29ed27486d4259066aee",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e0994e99955cf11f23dba029b5ed7f150f467887558848d5f03510e2fb5855f9",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "993:     return;",
          "994:   }",
          "995:   offset = PTRMAP_PTROFFSET(iPtrmap, key);",
          "996:   if( offset<0 ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "995:   if( ((char*)sqlite3PagerGetExtra(pDbPage))[0]!=0 ){",
          "1000:     goto ptrmap_exit;",
          "1001:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d5c851c1cbcb96d541fa7e6e20342c2a437434e9",
      "candidate_info": {
        "commit_hash": "d5c851c1cbcb96d541fa7e6e20342c2a437434e9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d5c851c1cbcb96d541fa7e6e20342c2a437434e9",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "src/fkey.c",
          "src/parse.y",
          "src/select.c",
          "src/sqliteInt.h",
          "src/where.c",
          "src/wherecode.c"
        ],
        "message": "Streamline the processing of the AND operator.  Slightly smaller and faster.\n\nFossilOrigin-Name: 7713996aa99ce6dd35b5a2db74dd26658fb8d9817169b2a7531cdef6edb41403",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "src/fkey.c||src/fkey.c",
          "src/parse.y||src/parse.y",
          "src/select.c||src/select.c",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/where.c||src/where.c",
          "src/wherecode.c||src/wherecode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/sqliteInt.h||src/sqliteInt.h"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/sqliteInt.h||src/sqliteInt.h"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 03f2e78899fad99b0a0951b3a408268276954d4cd785389ed9a0192c9217f6fe",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "851: ){",
          "852:   Expr *p;",
          "863:     sqlite3ExprAttachSubtrees(pParse->db, p, pLeft, pRight);",
          "866:     sqlite3ExprCheckHeight(pParse, p->nHeight);",
          "867:   }",
          "868:   return p;",
          "869: }",
          "",
          "[Removed Lines]",
          "853:   if( op==TK_AND && pParse->nErr==0 && !IN_RENAME_OBJECT ){",
          "855:     p = sqlite3ExprAnd(pParse->db, pLeft, pRight);",
          "856:   }else{",
          "857:     p = sqlite3DbMallocRawNN(pParse->db, sizeof(Expr));",
          "858:     if( p ){",
          "859:       memset(p, 0, sizeof(Expr));",
          "860:       p->op = op & 0xff;",
          "861:       p->iAgg = -1;",
          "862:     }",
          "864:   }",
          "865:   if( p ) {",
          "",
          "[Added Lines]",
          "853:   p = sqlite3DbMallocRawNN(pParse->db, sizeof(Expr));",
          "854:   if( p ){",
          "855:     memset(p, 0, sizeof(Expr));",
          "856:     p->op = op & 0xff;",
          "857:     p->iAgg = -1;",
          "860:   }else{",
          "861:     sqlite3ExprDelete(pParse->db, pLeft);",
          "862:     sqlite3ExprDelete(pParse->db, pRight);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "924:     return pRight;",
          "925:   }else if( pRight==0 ){",
          "926:     return pLeft;",
          "927:   }else if( exprAlwaysFalse(pLeft) || exprAlwaysFalse(pRight) ){",
          "928:     sqlite3ExprDelete(db, pLeft);",
          "929:     sqlite3ExprDelete(db, pRight);",
          "930:     return sqlite3ExprAlloc(db, TK_INTEGER, &sqlite3IntTokens[0], 0);",
          "931:   }else{",
          "935:   }",
          "936: }",
          "",
          "[Removed Lines]",
          "922: Expr *sqlite3ExprAnd(sqlite3 *db, Expr *pLeft, Expr *pRight){",
          "923:   if( pLeft==0 ){",
          "932:     Expr *pNew = sqlite3ExprAlloc(db, TK_AND, 0, 0);",
          "933:     sqlite3ExprAttachSubtrees(db, pNew, pLeft, pRight);",
          "934:     return pNew;",
          "",
          "[Added Lines]",
          "918: Expr *sqlite3ExprAnd(Parse *pParse, Expr *pLeft, Expr *pRight){",
          "919:   sqlite3 *db = pParse->db;",
          "920:   if( pLeft==0  ){",
          "924:   }else if( pParse->nErr || IN_RENAME_OBJECT ){",
          "925:     return sqlite3PExpr(pParse, TK_AND, pLeft, pRight);",
          "931:     return sqlite3PExpr(pParse, TK_AND, pLeft, pRight);",
          "",
          "---------------"
        ],
        "src/fkey.c||src/fkey.c": [
          "File: src/fkey.c -> src/fkey.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "591:     zCol = pFKey->pFrom->aCol[iCol].zName;",
          "592:     pRight = sqlite3Expr(db, TK_ID, zCol);",
          "593:     pEq = sqlite3PExpr(pParse, TK_EQ, pLeft, pRight);",
          "595:   }",
          "",
          "[Removed Lines]",
          "594:     pWhere = sqlite3ExprAnd(db, pWhere, pEq);",
          "",
          "[Added Lines]",
          "594:     pWhere = sqlite3ExprAnd(pParse, pWhere, pEq);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "625:         pLeft = exprTableRegister(pParse, pTab, regData, iCol);",
          "626:         pRight = sqlite3Expr(db, TK_ID, pTab->aCol[iCol].zName);",
          "627:         pEq = sqlite3PExpr(pParse, TK_IS, pLeft, pRight);",
          "629:       }",
          "630:       pNe = sqlite3PExpr(pParse, TK_NOT, pAll, 0);",
          "631:     }",
          "633:   }",
          "",
          "[Removed Lines]",
          "628:         pAll = sqlite3ExprAnd(db, pAll, pEq);",
          "632:     pWhere = sqlite3ExprAnd(db, pWhere, pNe);",
          "",
          "[Added Lines]",
          "628:         pAll = sqlite3ExprAnd(pParse, pAll, pEq);",
          "632:     pWhere = sqlite3ExprAnd(pParse, pWhere, pNe);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1235:             sqlite3ExprAlloc(db, TK_ID, &tToCol, 0)),",
          "1236:           sqlite3ExprAlloc(db, TK_ID, &tFromCol, 0)",
          "1237:       );",
          "",
          "[Removed Lines]",
          "1238:       pWhere = sqlite3ExprAnd(db, pWhere, pEq);",
          "",
          "[Added Lines]",
          "1238:       pWhere = sqlite3ExprAnd(pParse, pWhere, pEq);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1251:               sqlite3ExprAlloc(db, TK_ID, &tNew, 0),",
          "1252:               sqlite3ExprAlloc(db, TK_ID, &tToCol, 0))",
          "1253:             );",
          "1255:       }",
          "1257:       if( action!=OE_Restrict && (action!=OE_Cascade || pChanges) ){",
          "",
          "[Removed Lines]",
          "1254:         pWhen = sqlite3ExprAnd(db, pWhen, pEq);",
          "",
          "[Added Lines]",
          "1254:         pWhen = sqlite3ExprAnd(pParse, pWhen, pEq);",
          "",
          "---------------"
        ],
        "src/parse.y||src/parse.y": [
          "File: src/parse.y -> src/parse.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "1064:   }",
          "1065: }",
          "1068: expr(A) ::= expr(A) OR(OP) expr(Y).     {A=sqlite3PExpr(pParse,@OP,A,Y);}",
          "1069: expr(A) ::= expr(A) LT|GT|GE|LE(OP) expr(Y).",
          "1070:                                         {A=sqlite3PExpr(pParse,@OP,A,Y);}",
          "",
          "[Removed Lines]",
          "1067: expr(A) ::= expr(A) AND(OP) expr(Y).    {A=sqlite3PExpr(pParse,@OP,A,Y);}",
          "",
          "[Added Lines]",
          "1067: expr(A) ::= expr(A) AND expr(Y).        {A=sqlite3ExprAnd(pParse,A,Y);}",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "490:     if( pRight->pOn ){",
          "491:       if( isOuter ) setJoinExpr(pRight->pOn, pRight->iCursor);",
          "493:       pRight->pOn = 0;",
          "494:     }",
          "",
          "[Removed Lines]",
          "492:       p->pWhere = sqlite3ExprAnd(pParse->db, p->pWhere, pRight->pOn);",
          "",
          "[Added Lines]",
          "492:       p->pWhere = sqlite3ExprAnd(pParse, p->pWhere, pRight->pOn);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4034:     if( isLeftJoin>0 ){",
          "4035:       setJoinExpr(pWhere, iNewParent);",
          "4036:     }",
          "4038:     if( db->mallocFailed==0 ){",
          "4039:       SubstContext x;",
          "4040:       x.pParse = pParse;",
          "",
          "[Removed Lines]",
          "4037:     pParent->pWhere = sqlite3ExprAnd(db, pWhere, pParent->pWhere);",
          "",
          "[Added Lines]",
          "4037:     pParent->pWhere = sqlite3ExprAnd(pParse, pWhere, pParent->pWhere);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4369:       x.pEList = pSubq->pEList;",
          "4370:       pNew = substExpr(&x, pNew);",
          "4371:       if( pSubq->selFlags & SF_Aggregate ){",
          "4373:       }else{",
          "4375:       }",
          "4376:       pSubq = pSubq->pPrior;",
          "4377:     }",
          "",
          "[Removed Lines]",
          "4372:         pSubq->pHaving = sqlite3ExprAnd(pParse->db, pSubq->pHaving, pNew);",
          "4374:         pSubq->pWhere = sqlite3ExprAnd(pParse->db, pSubq->pWhere, pNew);",
          "",
          "[Added Lines]",
          "4372:         pSubq->pHaving = sqlite3ExprAnd(pParse, pSubq->pHaving, pNew);",
          "4374:         pSubq->pWhere = sqlite3ExprAnd(pParse, pSubq->pWhere, pNew);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5418:       if( pNew ){",
          "5419:         Expr *pWhere = pS->pWhere;",
          "5420:         SWAP(Expr, *pNew, *pExpr);",
          "5422:         pS->pWhere = pNew;",
          "5423:         pWalker->eCode = 1;",
          "5424:       }",
          "",
          "[Removed Lines]",
          "5421:         pNew = sqlite3ExprAnd(db, pWhere, pNew);",
          "",
          "[Added Lines]",
          "5421:         pNew = sqlite3ExprAnd(pWalker->pParse, pWhere, pNew);",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3854: void sqlite3ExprAttachSubtrees(sqlite3*,Expr*,Expr*,Expr*);",
          "3855: Expr *sqlite3PExpr(Parse*, int, Expr*, Expr*);",
          "3856: void sqlite3PExprAddSelect(Parse*, Expr*, Select*);",
          "3858: Expr *sqlite3ExprFunction(Parse*,ExprList*, Token*, int);",
          "3859: void sqlite3ExprAssignVarNumber(Parse*, Expr*, u32);",
          "3860: void sqlite3ExprDelete(sqlite3*, Expr*);",
          "",
          "[Removed Lines]",
          "3857: Expr *sqlite3ExprAnd(sqlite3*,Expr*, Expr*);",
          "",
          "[Added Lines]",
          "3857: Expr *sqlite3ExprAnd(Parse*,Expr*, Expr*);",
          "",
          "---------------"
        ],
        "src/where.c||src/where.c": [
          "File: src/where.c -> src/where.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "737:      && (pTerm->wtFlags & TERM_VIRTUAL)==0",
          "738:      && !ExprHasProperty(pExpr, EP_FromJoin)",
          "739:      && sqlite3ExprIsTableConstant(pExpr, pSrc->iCursor) ){",
          "741:                                 sqlite3ExprDup(pParse->db, pExpr, 0));",
          "742:     }",
          "743:     if( termCanDriveIndex(pTerm, pSrc, notReady) ){",
          "",
          "[Removed Lines]",
          "740:       pPartial = sqlite3ExprAnd(pParse->db, pPartial,",
          "",
          "[Added Lines]",
          "740:       pPartial = sqlite3ExprAnd(pParse, pPartial,",
          "",
          "---------------"
        ],
        "src/wherecode.c||src/wherecode.c": [
          "File: src/wherecode.c -> src/wherecode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "999:     }",
          "1003:   }",
          "1004:   if( pExpr!=0 ){",
          "1005:     sWalker.xExprCallback = codeCursorHintFixExpr;",
          "",
          "[Removed Lines]",
          "1002:     pExpr = sqlite3ExprAnd(db, pExpr, sqlite3ExprDup(db, pTerm->pExpr, 0));",
          "",
          "[Added Lines]",
          "1002:     pExpr = sqlite3ExprAnd(pParse, pExpr, sqlite3ExprDup(db, pTerm->pExpr, 0));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1964:         if( (pWC->a[iTerm].eOperator & WO_ALL)==0 ) continue;",
          "1965:         testcase( pWC->a[iTerm].wtFlags & TERM_ORINFO );",
          "1966:         pExpr = sqlite3ExprDup(db, pExpr, 0);",
          "1968:       }",
          "1969:       if( pAndExpr ){",
          "",
          "[Removed Lines]",
          "1967:         pAndExpr = sqlite3ExprAnd(db, pAndExpr, pExpr);",
          "",
          "[Added Lines]",
          "1967:         pAndExpr = sqlite3ExprAnd(pParse, pAndExpr, pExpr);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "195a843691e2c08686c36f85ab3a4000ed9e3e2b",
      "candidate_info": {
        "commit_hash": "195a843691e2c08686c36f85ab3a4000ed9e3e2b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/195a843691e2c08686c36f85ab3a4000ed9e3e2b",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/loadext.c",
          "src/malloc.c",
          "src/pragma.c",
          "src/pragma.h",
          "src/sqlite.h.in",
          "src/sqlite3ext.h",
          "src/test1.c",
          "src/treeview.c",
          "test/fuzzcheck.c",
          "test/ossfuzz.c",
          "test/tester.tcl",
          "tool/mkpragmatab.tcl"
        ],
        "message": "Add support for the sqlite3_hard_heap_limit64() interface and the hard_heap_limit pragma.\n\nFossilOrigin-Name: 6399c47ea89c5766274bd6abdc9b6a85fe5b7f6c1078972c2f58e624bae59b7c",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/loadext.c||src/loadext.c",
          "src/malloc.c||src/malloc.c",
          "src/pragma.c||src/pragma.c",
          "src/pragma.h||src/pragma.h",
          "src/sqlite.h.in||src/sqlite.h.in",
          "src/sqlite3ext.h||src/sqlite3ext.h",
          "src/test1.c||src/test1.c",
          "src/treeview.c||src/treeview.c",
          "test/fuzzcheck.c||test/fuzzcheck.c",
          "test/ossfuzz.c||test/ossfuzz.c",
          "test/tester.tcl||test/tester.tcl",
          "tool/mkpragmatab.tcl||tool/mkpragmatab.tcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5baffcda7d5a42a99fa905faa834f14b94b1e2a26b5221f15d8ae8f1f5e3236a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/loadext.c||src/loadext.c": [
          "File: src/loadext.c -> src/loadext.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "468: #else",
          "469:   0,",
          "470: #endif",
          "471: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "472:   sqlite3_hard_heap_limit64,",
          "",
          "---------------"
        ],
        "src/malloc.c||src/malloc.c": [
          "File: src/malloc.c -> src/malloc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #endif",
          "33: }",
          "38: static SQLITE_WSD struct Mem0Global {",
          "46:   int nearlyFull;",
          "49: #define mem0 GLOBAL(struct Mem0Global, mem0)",
          "",
          "[Removed Lines]",
          "47: } mem0 = { 0, 0, 0 };",
          "",
          "[Added Lines]",
          "38: #ifndef SQLITE_MAX_MEMORY",
          "39: # define SQLITE_MAX_MEMORY 0",
          "40: #endif",
          "55: } mem0 = { 0, SQLITE_MAX_MEMORY, SQLITE_MAX_MEMORY, 0 };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "91:     sqlite3_mutex_leave(mem0.mutex);",
          "92:     return priorLimit;",
          "93:   }",
          "94:   mem0.alarmThreshold = n;",
          "95:   nUsed = sqlite3StatusValue(SQLITE_STATUS_MEMORY_USED);",
          "96:   mem0.nearlyFull = (n>0 && n<=nUsed);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "109:   if( mem0.hardLimit>0 && (n>mem0.hardLimit || n==0) ){",
          "110:     n = mem0.hardLimit;",
          "111:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "104:   sqlite3_soft_heap_limit64(n);",
          "105: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "137: sqlite3_int64 sqlite3_hard_heap_limit64(sqlite3_int64 n){",
          "138:   sqlite3_int64 priorLimit;",
          "139: #ifndef SQLITE_OMIT_AUTOINIT",
          "140:   int rc = sqlite3_initialize();",
          "141:   if( rc ) return -1;",
          "142: #endif",
          "143:   sqlite3_mutex_enter(mem0.mutex);",
          "144:   priorLimit = mem0.hardLimit;",
          "145:   if( n>=0 ){",
          "146:     mem0.hardLimit = n;",
          "147:     if( n<mem0.alarmThreshold || mem0.alarmThreshold==0 ){",
          "148:       mem0.alarmThreshold = n;",
          "149:     }",
          "150:   }",
          "151:   sqlite3_mutex_leave(mem0.mutex);",
          "152:   return priorLimit;",
          "153: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "191:   nFull = sqlite3GlobalConfig.m.xRoundup(n);",
          "200:   sqlite3StatusHighwater(SQLITE_STATUS_MALLOC_SIZE, n);",
          "201:   if( mem0.alarmThreshold>0 ){",
          "202:     sqlite3_int64 nUsed = sqlite3StatusValue(SQLITE_STATUS_MEMORY_USED);",
          "203:     if( nUsed >= mem0.alarmThreshold - nFull ){",
          "204:       mem0.nearlyFull = 1;",
          "205:       sqlite3MallocAlarm(nFull);",
          "206:     }else{",
          "207:       mem0.nearlyFull = 0;",
          "208:     }",
          "",
          "[Removed Lines]",
          "193: #ifdef SQLITE_MAX_MEMORY",
          "194:   if( sqlite3StatusValue(SQLITE_STATUS_MEMORY_USED)+nFull>SQLITE_MAX_MEMORY ){",
          "196:     return;",
          "197:   }",
          "198: #endif",
          "",
          "[Added Lines]",
          "248:       if( mem0.hardLimit ){",
          "249:         nUsed = sqlite3StatusValue(SQLITE_STATUS_MEMORY_USED);",
          "250:         if( nUsed >= mem0.hardLimit - nFull ){",
          "252:           return;",
          "253:         }",
          "254:       }",
          "",
          "---------------"
        ],
        "src/pragma.c||src/pragma.c": [
          "File: src/pragma.c -> src/pragma.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2089:     break;",
          "2090:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2103:   case PragTyp_HARD_HEAP_LIMIT: {",
          "2104:     sqlite3_int64 N;",
          "2105:     if( zRight && sqlite3DecOrHexToI64(zRight, &N)==SQLITE_OK ){",
          "2106:       sqlite3_int64 iPrior = sqlite3_hard_heap_limit64(-1);",
          "2107:       if( N>0 && (iPrior==0 || iPrior>N) ) sqlite3_hard_heap_limit64(N);",
          "2108:     }",
          "2109:     returnSingleInt(v, sqlite3_hard_heap_limit64(-1));",
          "2110:     break;",
          "2111:   }",
          "",
          "---------------"
        ],
        "src/pragma.h||src/pragma.h": [
          "File: src/pragma.h -> src/pragma.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: #define PragTyp_FOREIGN_KEY_CHECK             13",
          "22: #define PragTyp_FOREIGN_KEY_LIST              14",
          "23: #define PragTyp_FUNCTION_LIST                 15",
          "",
          "[Removed Lines]",
          "24: #define PragTyp_INCREMENTAL_VACUUM            16",
          "25: #define PragTyp_INDEX_INFO                    17",
          "26: #define PragTyp_INDEX_LIST                    18",
          "27: #define PragTyp_INTEGRITY_CHECK               19",
          "28: #define PragTyp_JOURNAL_MODE                  20",
          "29: #define PragTyp_JOURNAL_SIZE_LIMIT            21",
          "30: #define PragTyp_LOCK_PROXY_FILE               22",
          "31: #define PragTyp_LOCKING_MODE                  23",
          "32: #define PragTyp_PAGE_COUNT                    24",
          "33: #define PragTyp_MMAP_SIZE                     25",
          "34: #define PragTyp_MODULE_LIST                   26",
          "35: #define PragTyp_OPTIMIZE                      27",
          "36: #define PragTyp_PAGE_SIZE                     28",
          "37: #define PragTyp_PRAGMA_LIST                   29",
          "38: #define PragTyp_SECURE_DELETE                 30",
          "39: #define PragTyp_SHRINK_MEMORY                 31",
          "40: #define PragTyp_SOFT_HEAP_LIMIT               32",
          "41: #define PragTyp_SYNCHRONOUS                   33",
          "42: #define PragTyp_TABLE_INFO                    34",
          "43: #define PragTyp_TEMP_STORE                    35",
          "44: #define PragTyp_TEMP_STORE_DIRECTORY          36",
          "45: #define PragTyp_THREADS                       37",
          "46: #define PragTyp_WAL_AUTOCHECKPOINT            38",
          "47: #define PragTyp_WAL_CHECKPOINT                39",
          "48: #define PragTyp_ACTIVATE_EXTENSIONS           40",
          "49: #define PragTyp_KEY                           41",
          "50: #define PragTyp_LOCK_STATUS                   42",
          "51: #define PragTyp_STATS                         43",
          "",
          "[Added Lines]",
          "24: #define PragTyp_HARD_HEAP_LIMIT               16",
          "25: #define PragTyp_INCREMENTAL_VACUUM            17",
          "26: #define PragTyp_INDEX_INFO                    18",
          "27: #define PragTyp_INDEX_LIST                    19",
          "28: #define PragTyp_INTEGRITY_CHECK               20",
          "29: #define PragTyp_JOURNAL_MODE                  21",
          "30: #define PragTyp_JOURNAL_SIZE_LIMIT            22",
          "31: #define PragTyp_LOCK_PROXY_FILE               23",
          "32: #define PragTyp_LOCKING_MODE                  24",
          "33: #define PragTyp_PAGE_COUNT                    25",
          "34: #define PragTyp_MMAP_SIZE                     26",
          "35: #define PragTyp_MODULE_LIST                   27",
          "36: #define PragTyp_OPTIMIZE                      28",
          "37: #define PragTyp_PAGE_SIZE                     29",
          "38: #define PragTyp_PRAGMA_LIST                   30",
          "39: #define PragTyp_SECURE_DELETE                 31",
          "40: #define PragTyp_SHRINK_MEMORY                 32",
          "41: #define PragTyp_SOFT_HEAP_LIMIT               33",
          "42: #define PragTyp_SYNCHRONOUS                   34",
          "43: #define PragTyp_TABLE_INFO                    35",
          "44: #define PragTyp_TEMP_STORE                    36",
          "45: #define PragTyp_TEMP_STORE_DIRECTORY          37",
          "46: #define PragTyp_THREADS                       38",
          "47: #define PragTyp_WAL_AUTOCHECKPOINT            39",
          "48: #define PragTyp_WAL_CHECKPOINT                40",
          "49: #define PragTyp_ACTIVATE_EXTENSIONS           41",
          "50: #define PragTyp_KEY                           42",
          "51: #define PragTyp_LOCK_STATUS                   43",
          "52: #define PragTyp_STATS                         44",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "320: #endif",
          "321: #endif",
          "322: #if defined(SQLITE_HAS_CODEC)",
          "323:  {/* zName:     */ \"hexkey\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "323:  {/* zName:     */ \"hard_heap_limit\",",
          "",
          "---------------"
        ],
        "src/sqlite.h.in||src/sqlite.h.in": [
          "File: src/sqlite.h.in -> src/sqlite.h.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "6190: sqlite3_int64 sqlite3_soft_heap_limit64(sqlite3_int64 N);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6205: sqlite3_int64 sqlite3_hard_heap_limit64(sqlite3_int64 N);",
          "",
          "---------------"
        ],
        "src/sqlite3ext.h||src/sqlite3ext.h": [
          "File: src/sqlite3ext.h -> src/sqlite3ext.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "324:   int (*value_frombind)(sqlite3_value*);",
          "326:   int (*drop_modules)(sqlite3*,const char**);",
          "327: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "327:   sqlite3_int64 (*hard_heap_limit64)(sqlite3_int64);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "618: #define sqlite3_value_frombind         sqlite3_api->frombind",
          "620: #define sqlite3_drop_modules           sqlite3_api->drop_modules",
          "623: #if !defined(SQLITE_CORE) && !defined(SQLITE_OMIT_LOAD_EXTENSION)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "622: #define sqlite3_hard_heap_limit64      sqlite3_api->hard_heap_limit64",
          "",
          "---------------"
        ],
        "src/test1.c||src/test1.c": [
          "File: src/test1.c -> src/test1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5526:   return TCL_OK;",
          "5527: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5536: static int SQLITE_TCLAPI test_hard_heap_limit(",
          "5537:   void * clientData,",
          "5538:   Tcl_Interp *interp,",
          "5539:   int objc,",
          "5540:   Tcl_Obj *CONST objv[]",
          "5541: ){",
          "5542:   sqlite3_int64 amt;",
          "5543:   Tcl_WideInt N = -1;",
          "5544:   if( objc!=1 && objc!=2 ){",
          "5545:     Tcl_WrongNumArgs(interp, 1, objv, \"?N?\");",
          "5546:     return TCL_ERROR;",
          "5547:   }",
          "5548:   if( objc==2 ){",
          "5549:     if( Tcl_GetWideIntFromObj(interp, objv[1], &N) ) return TCL_ERROR;",
          "5550:   }",
          "5551:   amt = sqlite3_hard_heap_limit64(N);",
          "5552:   Tcl_SetObjResult(interp, Tcl_NewWideIntObj(amt));",
          "5553:   return TCL_OK;",
          "5554: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7978:      { \"sqlite3_db_filename\",           test_db_filename,        0},",
          "7979:      { \"sqlite3_db_readonly\",           test_db_readonly,        0},",
          "7980:      { \"sqlite3_soft_heap_limit\",       test_soft_heap_limit,    0},",
          "7981:      { \"sqlite3_thread_cleanup\",        test_thread_cleanup,     0},",
          "7982:      { \"sqlite3_pager_refcounts\",       test_pager_refcounts,    0},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8008:      { \"sqlite3_soft_heap_limit64\",     test_soft_heap_limit,    0},",
          "8009:      { \"sqlite3_hard_heap_limit64\",     test_hard_heap_limit,    0},",
          "",
          "---------------"
        ],
        "src/treeview.c||src/treeview.c": [
          "File: src/treeview.c -> src/treeview.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:     va_start(ap, zFormat);",
          "67:     sqlite3_str_vappendf(&acc, zFormat, ap);",
          "68:     va_end(ap);",
          "70:     sqlite3_str_append(&acc, \"\\n\", 1);",
          "71:   }",
          "72:   sqlite3StrAccumFinish(&acc);",
          "",
          "[Removed Lines]",
          "69:     assert( acc.nChar>0 );",
          "",
          "[Added Lines]",
          "69:     assert( acc.nChar>0 || acc.accError );",
          "",
          "---------------"
        ],
        "test/fuzzcheck.c||test/fuzzcheck.c": [
          "File: test/fuzzcheck.c -> test/fuzzcheck.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "454: static int lengthLimit = 1000000;",
          "457: static int vdbeOpLimit = 25000;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "457: static sqlite3_int64 heapLimit = 1000000000;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "777:   if( lengthLimit>0 ){",
          "778:     sqlite3_limit(cx.db, SQLITE_LIMIT_LENGTH, lengthLimit);",
          "779:   }",
          "781:   if( nDb>=20 && aDb[18]==2 && aDb[19]==2 ){",
          "782:     aDb[18] = aDb[19] = 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "783:   sqlite3_hard_heap_limit64(heapLimit);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1391:         infoFlag = 1;",
          "1392:       }else",
          "1393:       if( strcmp(z,\"limit-mem\")==0 ){",
          "1398:         if( i>=argc-1 ) fatalError(\"missing arguments on %s\", argv[i]);",
          "1399:         nMem = integerValue(argv[++i]);",
          "1401:       }else",
          "1402:       if( strcmp(z,\"limit-vdbe\")==0 ){",
          "1403:         vdbeLimitFlag = 1;",
          "",
          "[Removed Lines]",
          "1394: #if !defined(SQLITE_ENABLE_MEMSYS3) && !defined(SQLITE_ENABLE_MEMSYS5)",
          "1395:         fatalError(\"the %s option requires -DSQLITE_ENABLE_MEMSYS5 or _MEMSYS3\",",
          "1396:                    argv[i]);",
          "1397: #else",
          "1400: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1586:           ossFuzzThisDb = sqlite3_column_int(pStmt,1);",
          "1587:           if( verboseFlag ) printf(\"Config: oss-fuzz=%d\\n\", ossFuzzThisDb);",
          "1588:         }",
          "1594:           nMemThisDb = sqlite3_column_int(pStmt,1);",
          "1595:           if( verboseFlag ) printf(\"Config: limit-mem=%d\\n\", nMemThisDb);",
          "1597:         }",
          "1598:       }",
          "1599:       sqlite3_finalize(pStmt);",
          "",
          "[Removed Lines]",
          "1589:         if( strcmp(zName, \"limit-mem\")==0 && !nativeMalloc ){",
          "1590: #if !defined(SQLITE_ENABLE_MEMSYS3) && !defined(SQLITE_ENABLE_MEMSYS5)",
          "1591:           fatalError(\"the limit-mem option requires -DSQLITE_ENABLE_MEMSYS5\"",
          "1592:                      \" or _MEMSYS3\");",
          "1593: #else",
          "1596: #endif",
          "",
          "[Added Lines]",
          "1588:         if( strcmp(zName, \"limit-mem\")==0 ){",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1722:     sqlite3_shutdown();",
          "1727:       }",
          "1729:     }",
          "",
          "[Removed Lines]",
          "1723:     if( nMemThisDb>0 && !nativeMalloc ){",
          "1724:       pHeap = realloc(pHeap, nMemThisDb);",
          "1725:       if( pHeap==0 ){",
          "1726:         fatalError(\"failed to allocate %d bytes of heap memory\", nMem);",
          "1728:       sqlite3_config(SQLITE_CONFIG_HEAP, pHeap, nMemThisDb, 128);",
          "",
          "[Added Lines]",
          "1717:     if( nMemThisDb>0 && nMem==0 ){",
          "1718:       if( !nativeMalloc ){",
          "1719:         pHeap = realloc(pHeap, nMemThisDb);",
          "1720:         if( pHeap==0 ){",
          "1721:           fatalError(\"failed to allocate %d bytes of heap memory\", nMem);",
          "1722:         }",
          "1723:         sqlite3_config(SQLITE_CONFIG_HEAP, pHeap, nMemThisDb, 128);",
          "1724:       }else{",
          "1725:         sqlite3_hard_heap_limit64((sqlite3_int64)nMemThisDb);",
          "1727:     }else{",
          "1728:       sqlite3_hard_heap_limit64(0);",
          "",
          "---------------"
        ],
        "test/ossfuzz.c||test/ossfuzz.c": [
          "File: test/ossfuzz.c -> test/ossfuzz.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "156:   sqlite3_limit(cx.db, SQLITE_LIMIT_VDBE_OP, 25000);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "159:   sqlite3_hard_heap_limit64(20000000);",
          "",
          "---------------"
        ],
        "test/tester.tcl||test/tester.tcl": [
          "File: test/tester.tcl -> test/tester.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "388:   puts {Options:",
          "389:   --pause                  Wait for user input before continuing",
          "390:   --soft-heap-limit=N      Set the soft-heap-limit to N",
          "391:   --maxerror=N             Quit after N errors",
          "392:   --verbose=(0|1)          Control the amount of output.  Default '1'",
          "393:   --output=FILE            set --verbose=2 and output to FILE.  Implies -q",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "391:   --hard-heap-limit=N      Set the hard-heap-limit to N",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "408:   #",
          "409:   #   --pause",
          "410:   #   --soft-heap-limit=NN",
          "411:   #   --maxerror=NN",
          "412:   #   --malloctrace=N",
          "413:   #   --backtrace=N",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "412:   #   --hard-heap-limit=NN",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "424:   #   --help",
          "425:   #",
          "426:   set cmdlinearg(soft-heap-limit)    0",
          "427:   set cmdlinearg(maxerror)        1000",
          "428:   set cmdlinearg(malloctrace)        0",
          "429:   set cmdlinearg(backtrace)         10",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "429:   set cmdlinearg(hard-heap-limit)    0",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "450:       {^-+soft-heap-limit=.+$} {",
          "451:         foreach {dummy cmdlinearg(soft-heap-limit)} [split $a =] break",
          "452:       }",
          "453:       {^-+maxerror=.+$} {",
          "454:         foreach {dummy cmdlinearg(maxerror)} [split $a =] break",
          "455:       }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "456:       {^-+hard-heap-limit=.+$} {",
          "457:         foreach {dummy cmdlinearg(hard-heap-limit)} [split $a =] break",
          "458:       }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "586: # way if an individual test file changes the soft-heap-limit, it",
          "587: # will be reset at the start of the next test file.",
          "588: #",
          "591: # Create a test database",
          "592: #",
          "",
          "[Removed Lines]",
          "589: sqlite3_soft_heap_limit $cmdlinearg(soft-heap-limit)",
          "",
          "[Added Lines]",
          "595: sqlite3_soft_heap_limit64 $cmdlinearg(soft-heap-limit)",
          "596: sqlite3_hard_heap_limit64 $cmdlinearg(hard-heap-limit)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1207:   db close",
          "1208:   sqlite3_reset_auto_extension",
          "1211:   set nTest [incr_ntest]",
          "1212:   set nErr [set_test_counter errors]",
          "",
          "[Removed Lines]",
          "1210:   sqlite3_soft_heap_limit 0",
          "",
          "[Added Lines]",
          "1217:   sqlite3_soft_heap_limit64 0",
          "1218:   sqlite3_hard_heap_limit64 0",
          "",
          "---------------"
        ],
        "tool/mkpragmatab.tcl||tool/mkpragmatab.tcl": [
          "File: tool/mkpragmatab.tcl -> tool/mkpragmatab.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "401:   NAME: soft_heap_limit",
          "402:   FLAG: Result0",
          "404:   NAME: threads",
          "405:   FLAG: Result0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "404:   NAME: hard_heap_limit",
          "405:   FLAG: Result0",
          "",
          "---------------"
        ]
      }
    }
  ]
}