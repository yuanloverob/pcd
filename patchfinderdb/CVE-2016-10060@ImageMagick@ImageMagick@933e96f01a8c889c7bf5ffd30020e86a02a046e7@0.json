{
  "cve_id": "CVE-2016-10060",
  "cve_desc": "The ConcatenateImages function in MagickWand/magick-cli.c in ImageMagick before 7.0.1-10 does not check the return value of the fputc function, which allows remote attackers to cause a denial of service (application crash) via a crafted file.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "933e96f01a8c889c7bf5ffd30020e86a02a046e7",
  "patch_info": {
    "commit_hash": "933e96f01a8c889c7bf5ffd30020e86a02a046e7",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/933e96f01a8c889c7bf5ffd30020e86a02a046e7",
    "files": [
      "MagickWand/magick-cli.c"
    ],
    "message": "https://github.com/ImageMagick/ImageMagick/issues/196",
    "before_after_code_files": [
      "MagickWand/magick-cli.c||MagickWand/magick-cli.c"
    ]
  },
  "patch_diff": {
    "MagickWand/magick-cli.c||MagickWand/magick-cli.c": [
      "File: MagickWand/magick-cli.c -> MagickWand/magick-cli.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "636:    The option is not formally documented.",
      "638:       magick -concatenate files... output",
      "640:    This is much like the UNIX \"cat\" command, but for both UNIX and Windows,",
      "641:    however the last argument provides the output filename.",
      "643: static MagickBooleanType ConcatenateImages(int argc,char **argv,",
      "644:      ExceptionInfo *exception )",
      "645: {",
      "646:   FILE",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "645: {",
      "646:   FILE",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "650:   int",
      "651:     c;",
      "664:   }",
      "666: #if 0",
      "667:     fprintf(stderr, \"DEBUG: Concatenate Image: \\\"%s\\\"\\n\", argv[i]);",
      "668: #endif",
      "669:     input=fopen_utf8(argv[i],\"rb\");",
      "671:         ThrowFileException(exception,FileOpenError,\"UnableToOpenFile\",argv[i]);",
      "672:         continue;",
      "673:       }",
      "674:     for (c=fgetc(input); c != EOF; c=fgetc(input))",
      "676:     (void) fclose(input);",
      "677:     (void) remove_utf8(argv[i]);",
      "678:   }",
      "",
      "[Removed Lines]",
      "653:   register ssize_t",
      "654:     i;",
      "656:   if (ExpandFilenames(&argc,&argv) == MagickFalse)",
      "657:     ThrowFileException(exception,ResourceLimitError,\"MemoryAllocationFailed\",",
      "658:          GetExceptionMessage(errno));",
      "660:   output=fopen_utf8(argv[argc-1],\"wb\");",
      "661:   if (output == (FILE *) NULL) {",
      "662:     ThrowFileException(exception,FileOpenError,\"UnableToOpenFile\",argv[argc-1]);",
      "663:     return(MagickFalse);",
      "665:   for (i=2; i < (ssize_t) (argc-1); i++) {",
      "670:     if (input == (FILE *) NULL) {",
      "675:       (void) fputc((char) c,output);",
      "",
      "[Added Lines]",
      "656:   register ssize_t",
      "659:   if (ExpandFilenames(&argc,&argv) == MagickFalse)",
      "660:     ThrowFileException(exception,ResourceLimitError,\"MemoryAllocationFailed\",",
      "661:       GetExceptionMessage(errno));",
      "662:   output=fopen_utf8(argv[argc-1],\"wb\");",
      "663:   if (output == (FILE *) NULL)",
      "664:     {",
      "665:       ThrowFileException(exception,FileOpenError,\"UnableToOpenFile\",",
      "666:         argv[argc-1]);",
      "668:     }",
      "669:   status=MagickTrue;",
      "674:       {",
      "675:         ThrowFileException(exception,FileOpenError,\"UnableToOpenFile\",argv[i]);",
      "680:         status=MagickFalse;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4e914bbe371433f0590cefdf3bd5f3a5710069f9",
      "candidate_info": {
        "commit_hash": "4e914bbe371433f0590cefdf3bd5f3a5710069f9",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/4e914bbe371433f0590cefdf3bd5f3a5710069f9",
        "files": [
          "coders/tiff.c"
        ],
        "message": "https://github.com/ImageMagick/ImageMagick/issues/196",
        "before_after_code_files": [
          "coders/tiff.c||coders/tiff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "coders/tiff.c||coders/tiff.c": [
          "File: coders/tiff.c -> coders/tiff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "390:   length=fwrite(\"\\032\\001\\005\\000\\001\\000\\000\\000\",1,8,file);",
          "391:   length=WriteLSBLong(file,(size_t) (strip_offset-8));",
          "392:   length=fwrite(\"\\033\\001\\005\\000\\001\\000\\000\\000\",1,8,file);",
          "393:   length=WriteLSBLong(file,(size_t) (strip_offset-8));",
          "395:   length=fwrite(\"\\000\\000\\000\\000\",1,4,file);",
          "396:   length=WriteLSBLong(file,(long) image->resolution.x);",
          "397:   length=WriteLSBLong(file,1);",
          "",
          "[Removed Lines]",
          "394:   length=fwrite(\"\\050\\001\\003\\000\\001\\000\\000\\000\\002\\000\\000\\000\",1,12,file);",
          "",
          "[Added Lines]",
          "393:   length=WriteLSBLong(file,(size_t) (strip_offset-8));",
          "395:   length=fwrite(\"\\000\\000\\000\\000\",1,4,file);",
          "396:   length=WriteLSBLong(file,(long) image->resolution.x);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "413:     {",
          "414:       (void) CopyMagickString(image->filename,image_info->filename,",
          "415:         MagickPathExtent);",
          "416:       (void) CopyMagickString(image->magick_filename,image_info->filename,",
          "417:         MagickPathExtent);",
          "418:       (void) CopyMagickString(image->magick,\"GROUP4\",MagickPathExtent);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "418:       (void) CopyMagickString(image->magick_filename,image_info->filename,",
          "419:         MagickPathExtent);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8ed56f49e4eb858c26420324d74882a22089fe3d",
      "candidate_info": {
        "commit_hash": "8ed56f49e4eb858c26420324d74882a22089fe3d",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/8ed56f49e4eb858c26420324d74882a22089fe3d",
        "files": [
          "coders/tiff.c"
        ],
        "message": "https://github.com/ImageMagick/ImageMagick/issues/352 https://github.com/ImageMagick/ImageMagick/issues/196",
        "before_after_code_files": [
          "coders/tiff.c||coders/tiff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "coders/tiff.c||coders/tiff.c": [
          "File: coders/tiff.c -> coders/tiff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "366:   file=(FILE *) NULL;",
          "367:   unique_file=AcquireUniqueFileResource(filename);",
          "368:   if (unique_file != -1)",
          "369:     file=fdopen(unique_file,\"wb\");",
          "370:   if ((unique_file == -1) || (file == (FILE *) NULL))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "368:   if (unique_file != -1)",
          "369:     file=fdopen(unique_file,\"wb\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "397:   length=WriteLSBLong(file,(long) image->resolution.x);",
          "398:   length=WriteLSBLong(file,1);",
          "399:   status=MagickTrue;",
          "400:   for (length=0; (c=ReadBlobByte(image)) != EOF; length++)",
          "401:     if (fputc(c,file) != c)",
          "402:       status=MagickFalse;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "402:   for (length=0; (c=ReadBlobByte(image)) != EOF; length++)",
          "403:     if (fputc(c,file) != c)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5d0a441fe7d90e3449f2103ed88c32cec28595e6",
      "candidate_info": {
        "commit_hash": "5d0a441fe7d90e3449f2103ed88c32cec28595e6",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/5d0a441fe7d90e3449f2103ed88c32cec28595e6",
        "files": [
          "MagickCore/color.c",
          "MagickCore/constitute.c",
          "MagickCore/delegate.c",
          "MagickCore/display.c",
          "MagickCore/enhance.c",
          "MagickCore/hashmap.c",
          "MagickCore/magick-type.h",
          "MagickCore/morphology.c",
          "MagickCore/property.c",
          "MagickWand/magick-cli.c",
          "MagickWand/magick-image.c",
          "MagickWand/operation.c"
        ],
        "message": "Removed IfMagickFalse",
        "before_after_code_files": [
          "MagickCore/color.c||MagickCore/color.c",
          "MagickCore/constitute.c||MagickCore/constitute.c",
          "MagickCore/delegate.c||MagickCore/delegate.c",
          "MagickCore/display.c||MagickCore/display.c",
          "MagickCore/enhance.c||MagickCore/enhance.c",
          "MagickCore/hashmap.c||MagickCore/hashmap.c",
          "MagickCore/magick-type.h||MagickCore/magick-type.h",
          "MagickCore/morphology.c||MagickCore/morphology.c",
          "MagickCore/property.c||MagickCore/property.c",
          "MagickWand/magick-cli.c||MagickWand/magick-cli.c",
          "MagickWand/magick-image.c||MagickWand/magick-image.c",
          "MagickWand/operation.c||MagickWand/operation.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MagickWand/magick-cli.c||MagickWand/magick-cli.c"
          ],
          "candidate": [
            "MagickWand/magick-cli.c||MagickWand/magick-cli.c"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/color.c||MagickCore/color.c": [
          "File: MagickCore/color.c -> MagickCore/color.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "888:     color_info->name=(char *) p->name;",
          "889:     GetPixelInfo((Image *) NULL,&color_info->color);",
          "890:     color_info->color.red=(double) ScaleCharToQuantum(p->red);",
          "892:     color_info->color.blue=(double) ScaleCharToQuantum(p->blue);",
          "893:     color_info->color.alpha=(double) (QuantumRange*p->alpha);",
          "894:     color_info->compliance=(ComplianceType) p->compliance;",
          "",
          "[Removed Lines]",
          "891:     color_info->color.green=(double) ScaleCharToQuantum(p->green);",
          "",
          "[Added Lines]",
          "891:     color_info->color.green=(double) ScaleCharToQuantum(p->green);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "945: %  The format of the ColorComponentTerminus method is:",
          "946: %",
          "947: %      ColorComponentTerminus(void)",
          "951: static void *DestroyColorElement(void *color_info)",
          "",
          "[Removed Lines]",
          "948: %",
          "",
          "[Added Lines]",
          "948: %",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1008: MagickExport const ColorInfo *GetColorCompliance(const char *name,",
          "1009:   const ComplianceType compliance,ExceptionInfo *exception)",
          "1010: {",
          "1012:     colorname[MagickPathExtent];",
          "1014:   register const ColorInfo",
          "",
          "[Removed Lines]",
          "1011:   char",
          "",
          "[Added Lines]",
          "1011:   char",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2090:                 }",
          "2091:             }",
          "2092:         }",
          "2094:       }",
          "2095:     if (LocaleCompare(keyword,\"<color\") == 0)",
          "2096:       {",
          "",
          "[Removed Lines]",
          "2093:         continue;",
          "",
          "[Added Lines]",
          "2093:         continue;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2373:           (void) CopyMagickString(colorspace,name+i+2,MagickPathExtent);",
          "2374:           for (j=0; colorspace[j] != '\\0'; j++)",
          "2376:               break;",
          "2377:           colorspace[j--]='\\0';",
          "2378:           i+=j+3;",
          "",
          "[Removed Lines]",
          "2375:             if (colorspace[j] == ',')",
          "",
          "[Added Lines]",
          "2375:             if (colorspace[j] == ',')",
          "",
          "---------------"
        ],
        "MagickCore/constitute.c||MagickCore/constitute.c": [
          "File: MagickCore/constitute.c -> MagickCore/constitute.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1034:             lsb_first=1;",
          "1035:             image->endian=(*(char *) &lsb_first) == 1 ? LSBEndian : MSBEndian;",
          "1036:          }",
          "1038:   (void) SyncImageProfiles(image);",
          "1039:   DisassociateImageStream(image);",
          "1040:   option=GetImageOption(image_info,\"delegate:bimodal\");",
          "",
          "[Removed Lines]",
          "1037:     }",
          "",
          "[Added Lines]",
          "1037:     }",
          "",
          "---------------"
        ],
        "MagickCore/delegate.c||MagickCore/delegate.c": [
          "File: MagickCore/delegate.c -> MagickCore/delegate.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "644: %      character string.",
          "645: %",
          "646: %    o encode: Specifies the encode delegate we are searching for as a",
          "648: %",
          "649: %    o exception: return any errors or warnings in this structure.",
          "650: %",
          "",
          "[Removed Lines]",
          "647: %      character string.",
          "",
          "[Added Lines]",
          "647: %      character string.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "789:   p=GetDelegateInfo(\"*\",\"*\",exception);",
          "790:   if (p == (const DelegateInfo *) NULL)",
          "792:   delegates=(const DelegateInfo **) AcquireQuantumMemory((size_t)",
          "793:     GetNumberOfElementsInLinkedList(delegate_cache)+1UL,sizeof(*delegates));",
          "794:   if (delegates == (const DelegateInfo **) NULL)",
          "",
          "[Removed Lines]",
          "791:     return((const DelegateInfo **) NULL);",
          "",
          "[Added Lines]",
          "791:     return((const DelegateInfo **) NULL);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "882:   assert(pattern != (char *) NULL);",
          "883:   (void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\",pattern);",
          "887:   p=GetDelegateInfo(\"*\",\"*\",exception);",
          "889:     return((char **) NULL);",
          "890:   delegates=(char **) AcquireQuantumMemory((size_t)",
          "891:     GetNumberOfElementsInLinkedList(delegate_cache)+1UL,sizeof(*delegates));",
          "",
          "[Removed Lines]",
          "885:   assert(number_delegates != (size_t *) NULL);",
          "888:   if (p == (const DelegateInfo *) NULL)",
          "",
          "[Added Lines]",
          "885:   assert(number_delegates != (size_t *) NULL);",
          "888:   if (p == (const DelegateInfo *) NULL)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1603:         }",
          "1604:         continue;",
          "1605:       }",
          "1607:       {",
          "1609:           Delegate element.",
          "",
          "[Removed Lines]",
          "1606:     if (LocaleCompare(keyword,\"<delegate\") == 0)",
          "",
          "[Added Lines]",
          "1606:     if (LocaleCompare(keyword,\"<delegate\") == 0)",
          "",
          "---------------"
        ],
        "MagickCore/display.c||MagickCore/display.c": [
          "File: MagickCore/display.c -> MagickCore/display.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2258:   if (y < (int) (font_info->ascent+font_info->descent))",
          "2259:     y=(int) font_info->ascent+font_info->descent;",
          "2260:   if (((int) font_info->max_bounds.width > (int) windows->image.width) ||",
          "2262:     return(MagickFalse);",
          "2266:   annotate_info=(XAnnotateInfo *) AcquireMagickMemory(sizeof(*annotate_info));",
          "2267:   if (annotate_info == (XAnnotateInfo *) NULL)",
          "",
          "[Removed Lines]",
          "2261:       ((font_info->ascent+font_info->descent) >= (int) windows->image.height))",
          "2264:     Initialize annotate structure.",
          "",
          "[Added Lines]",
          "2261:       ((font_info->ascent+font_info->descent) >= (int) windows->image.height))",
          "2264:     Initialize annotate structure.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3108:     Draw line as pointer moves until the mouse button is released.",
          "3110:   chop_info.width=0;",
          "3112:   chop_info.x=0;",
          "3113:   chop_info.y=0;",
          "3114:   distance=0;",
          "",
          "[Removed Lines]",
          "3111:   chop_info.height=0;",
          "",
          "[Added Lines]",
          "3111:   chop_info.height=0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3731:           (width*(windows->image.x+x_offset)/windows->image.ximage->width+x);",
          "3732:         y_offset=(int)",
          "3733:           (height*(windows->image.y+y_offset)/windows->image.ximage->height+y);",
          "3735:           continue;",
          "3736:         if ((x_offset >= (int) (*image)->columns) ||",
          "3737:             (y_offset >= (int) (*image)->rows))",
          "",
          "[Removed Lines]",
          "3734:         if ((x_offset < 0) || (y_offset < 0))",
          "",
          "[Added Lines]",
          "3734:         if ((x_offset < 0) || (y_offset < 0))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3776:                     (*image)->columns,1,exception);",
          "3777:                   if (q == (Quantum *) NULL)",
          "3778:                     break;",
          "3780:                   {",
          "3781:                     GetPixelInfoPixel(*image,q,&pixel);",
          "3782:                     if (IsFuzzyEquivalencePixelInfo(&pixel,&target))",
          "",
          "[Removed Lines]",
          "3779:                   for (x=0; x < (int) (*image)->columns; x++)",
          "",
          "[Added Lines]",
          "3779:                   for (x=0; x < (int) (*image)->columns; x++)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3835:                   ScaleShortToQuantum(border_color.blue);",
          "3836:               }",
          "3837:             draw_info=CloneDrawInfo(resource_info->image_info,",
          "3839:             (void) QueryColorCompliance(resource_info->pen_colors[pen_id],",
          "3840:               AllCompliance,&draw_info->fill,exception);",
          "3841:             (void) FloodfillPaintImage(*image,draw_info,&target,",
          "",
          "[Removed Lines]",
          "3838:               (DrawInfo *) NULL);",
          "",
          "[Added Lines]",
          "3838:               (DrawInfo *) NULL);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3850:               Update color information using reset algorithm.",
          "3852:             if (IfMagickFalse(SetImageStorageClass(*image,DirectClass,exception)) )",
          "3854:             for (y=0; y < (int) (*image)->rows; y++)",
          "3855:             {",
          "3856:               q=QueueCacheViewAuthenticPixels(image_view,0,(ssize_t) y,",
          "",
          "[Removed Lines]",
          "3853:               return(MagickFalse);",
          "",
          "[Added Lines]",
          "3853:               return(MagickFalse);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4321:       int",
          "4322:         y;",
          "4325:         opacity;",
          "4327:       register int",
          "",
          "[Removed Lines]",
          "4324:       Quantum",
          "",
          "[Added Lines]",
          "4324:       Quantum",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "4336:       (void) SetImageAlphaChannel(composite_image,OpaqueAlphaChannel,exception);",
          "4337:       opacity=(Quantum) (ScaleQuantumToChar(QuantumRange)-",
          "4338:         ((ssize_t) ScaleQuantumToChar(QuantumRange)*blend)/100);",
          "4340:         return(MagickFalse);",
          "4341:       image->alpha_trait=BlendPixelTrait;",
          "4342:       image_view=AcquireAuthenticCacheView(image,exception);",
          "",
          "[Removed Lines]",
          "4339:       if (IfMagickFalse(SetImageStorageClass(image,DirectClass,exception)) )",
          "",
          "[Added Lines]",
          "4339:       if (SetImageStorageClass(image,DirectClass,exception) == MagickFalse)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "4447:   x=0;",
          "4448:   y=0;",
          "4452:   XSetCursorState(display,windows,MagickTrue);",
          "4453:   (void) XFlush(display);",
          "",
          "[Removed Lines]",
          "4450:     Resize image to fit Image window dimensions.",
          "",
          "[Added Lines]",
          "4450:     Resize image to fit Image window dimensions.",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "4879:   do",
          "4880:   {",
          "4884:     x=(int) crop_info.x;",
          "4885:     y=(int) crop_info.y;",
          "",
          "[Removed Lines]",
          "4882:       Size rectangle as pointer moves until the mouse button is released.",
          "",
          "[Added Lines]",
          "4882:       Size rectangle as pointer moves until the mouse button is released.",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "5342:   crop_info.width=(unsigned int) (scale_factor*crop_info.width+0.5);",
          "5343:   scale_factor=(double) height/windows->image.ximage->height;",
          "5344:   crop_info.y+=y;",
          "5346:   crop_info.height=(unsigned int) (scale_factor*crop_info.height+0.5);",
          "5347:   crop_image=CropImage(image,&crop_info,exception);",
          "5348:   XSetCursorState(display,windows,MagickFalse);",
          "",
          "[Removed Lines]",
          "5345:   crop_info.y=(ssize_t) (scale_factor*crop_info.y+0.5);",
          "",
          "[Added Lines]",
          "5345:   crop_info.y=(ssize_t) (scale_factor*crop_info.y+0.5);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "5357:       return(MagickTrue);",
          "5358:     }",
          "5362:   if (IfMagickFalse(SetImageStorageClass(image,DirectClass,exception)) )",
          "5363:     return(MagickFalse);",
          "",
          "[Removed Lines]",
          "5360:     Cut image.",
          "",
          "[Added Lines]",
          "5360:     Cut image.",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "7205:     }",
          "7206:     case SelectCommand:",
          "7207:     {",
          "7209:         status;",
          "",
          "[Removed Lines]",
          "7208:       int",
          "",
          "[Added Lines]",
          "7208:       int",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "7225:     {",
          "7227:         Save image.",
          "7229:       status=XSaveImage(display,resource_info,windows,*image,exception);",
          "7230:       if (IfMagickFalse(status) )",
          "7231:         {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "7305:         Create canvas.",
          "7308:         \"%s:%s\",format,color);",
          "7309:       (void) CloneString(&image_info->size,geometry);",
          "7310:       nexus=ReadImage(image_info,exception);",
          "",
          "[Removed Lines]",
          "7307:       (void) FormatLocaleString(image_info->filename,MagickPathExtent,",
          "",
          "[Added Lines]",
          "7307:       (void) FormatLocaleString(image_info->filename,MagickPathExtent,",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "7346:       break;",
          "7347:     }",
          "7348:     case CutCommand:",
          "7351:         Cut image.",
          "",
          "[Removed Lines]",
          "7349:     {",
          "",
          "[Added Lines]",
          "7349:     {",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "7494:           windows->image.crop_geometry=(char *)",
          "7495:             RelinquishMagickMemory(windows->image.crop_geometry);",
          "7496:           windows->image.crop_geometry=(char *) NULL;",
          "7498:           windows->image.y=0;",
          "7499:         }",
          "7500:       XConfigureImageColormap(display,resource_info,windows,*image,exception);",
          "",
          "[Removed Lines]",
          "7497:           windows->image.x=0;",
          "",
          "[Added Lines]",
          "7497:           windows->image.x=0;",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "7578:       CatchException(exception);",
          "7579:       XSetCursorState(display,windows,MagickFalse);",
          "7580:       if (windows->image.crop_geometry != (char *) NULL)",
          "7583:             Flip crop geometry.",
          "",
          "[Removed Lines]",
          "7581:         {",
          "",
          "[Added Lines]",
          "7581:         {",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "7592:       if (windows->image.orphan != MagickFalse )",
          "7593:         break;",
          "7594:       (void) XConfigureImage(display,resource_info,windows,*image,exception);",
          "7596:     }",
          "7597:     case RotateRightCommand:",
          "7598:     {",
          "",
          "[Removed Lines]",
          "7595:       break;",
          "",
          "[Added Lines]",
          "7595:       break;",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "7606:             (*image)->filename);",
          "7607:           break;",
          "7608:         }",
          "7610:     }",
          "7611:     case RotateLeftCommand:",
          "7612:     {",
          "",
          "[Removed Lines]",
          "7609:       break;",
          "",
          "[Added Lines]",
          "7609:       break;",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "7720:         break;",
          "7721:       windows->image.window_changes.width=(int) (*image)->columns;",
          "7722:       windows->image.window_changes.height=(int) (*image)->rows;",
          "7724:       (void) XConfigureImage(display,resource_info,windows,*image,exception);",
          "7725:       break;",
          "7726:     }",
          "",
          "[Removed Lines]",
          "7723:       XConfigureImageColormap(display,resource_info,windows,*image,exception);",
          "",
          "[Added Lines]",
          "7723:       XConfigureImageColormap(display,resource_info,windows,*image,exception);",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "8777:       XCheckRefreshWindows(display,windows);",
          "8778:       flags=ParseGeometry(radius,&geometry_info);",
          "8779:       if ((flags & SigmaValue) == 0)",
          "8781:       charcoal_image=CharcoalImage(*image,geometry_info.rho,geometry_info.sigma,",
          "8782:         exception);",
          "8783:       if (charcoal_image != (Image *) NULL)",
          "",
          "[Removed Lines]",
          "8780:         geometry_info.sigma=geometry_info.rho;",
          "",
          "[Added Lines]",
          "8780:         geometry_info.sigma=geometry_info.rho;",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "8791:         break;",
          "8792:       XConfigureImageColormap(display,resource_info,windows,*image,exception);",
          "8793:       (void) XConfigureImage(display,resource_info,windows,*image,exception);",
          "8795:     }",
          "8796:     case AnnotateCommand:",
          "8797:     {",
          "",
          "[Removed Lines]",
          "8794:       break;",
          "",
          "[Added Lines]",
          "8794:       break;",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "8805:             (*image)->filename);",
          "8806:           break;",
          "8807:         }",
          "8809:     }",
          "8810:     case DrawCommand:",
          "8811:     {",
          "",
          "[Removed Lines]",
          "8808:       break;",
          "",
          "[Added Lines]",
          "8808:       break;",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "8819:             (*image)->filename);",
          "8820:           break;",
          "8821:         }",
          "8823:     }",
          "8824:     case ColorCommand:",
          "8825:     {",
          "",
          "[Removed Lines]",
          "8822:       break;",
          "",
          "[Added Lines]",
          "8822:       break;",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "8834:           break;",
          "8835:         }",
          "8836:       break;",
          "8838:     case MatteCommand:",
          "8839:     {",
          "",
          "[Removed Lines]",
          "8837:     }",
          "",
          "[Added Lines]",
          "8837:     }",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "8986:           image_info->filename);",
          "8987:       value=GetImageProperty(*image,\"comment\",exception);",
          "8988:       if (value == (char *) NULL)",
          "8990:       else",
          "8991:         {",
          "8992:           register const char",
          "",
          "[Removed Lines]",
          "8989:         unique_file=close(unique_file)-1;",
          "",
          "[Added Lines]",
          "8989:         unique_file=close(unique_file)-1;",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "9016:           char",
          "9020:           if (comment != (char *) NULL)",
          "9021:             {",
          "9022:               (void) SetImageProperty(*image,\"comment\",comment,exception);",
          "",
          "[Removed Lines]",
          "9019:           comment=FileToString(image_info->filename,~0UL,exception);",
          "",
          "[Added Lines]",
          "9019:           comment=FileToString(image_info->filename,~0UL,exception);",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "9104:       if (*preview_type == '\\0')",
          "9105:         break;",
          "9109:       XSetCursorState(display,windows,MagickTrue);",
          "9110:       XCheckRefreshWindows(display,windows);",
          "",
          "[Removed Lines]",
          "9107:         Show image preview.",
          "",
          "[Added Lines]",
          "9107:         Show image preview.",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "9137:     {",
          "9138:       Image",
          "9142:         Show image histogram.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "9176:           XNoticeWidget(display,windows,",
          "9177:             \"Image does not have any matte information\",(*image)->filename);",
          "9178:           break;",
          "9181:         Show image matte.",
          "",
          "[Removed Lines]",
          "9179:         }",
          "",
          "[Added Lines]",
          "9179:         }",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "9189:       (void) FormatLocaleString((*image)->filename,MagickPathExtent,\"matte:%s\",",
          "9190:         filename);",
          "9191:       status=WriteImage(image_info,*image,exception);",
          "9193:       matte_image=ReadImage(image_info,exception);",
          "9194:       (void) RelinquishUniqueFileResource(filename);",
          "9195:       if (matte_image == (Image *) NULL)",
          "",
          "[Removed Lines]",
          "9192:       (void) CopyMagickString(image_info->filename,filename,MagickPathExtent);",
          "",
          "[Added Lines]",
          "9192:       (void) CopyMagickString(image_info->filename,filename,MagickPathExtent);",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "9220:       break;",
          "9221:     }",
          "9222:     case SlideShowCommand:",
          "9224:       static char",
          "9225:         delay[MagickPathExtent] = \"5\";",
          "",
          "[Removed Lines]",
          "9223:     {",
          "",
          "[Added Lines]",
          "9223:     {",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "9275:       mozilla_atom=XInternAtom(display,\"_MOZILLA_VERSION\",MagickFalse);",
          "9276:       mozilla_window=XWindowByProperty(display,root_window,mozilla_atom);",
          "9277:       if (mozilla_window != (Window) NULL)",
          "9279:           char",
          "9280:             command[MagickPathExtent],",
          "",
          "[Removed Lines]",
          "9278:         {",
          "",
          "[Added Lines]",
          "9278:         {",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "9599: %",
          "9600: %    o display: Specifies a connection to an X server;  returned from",
          "9601: %      XOpenDisplay.",
          "9603: %    o resource_info: Specifies a pointer to a X11 XResourceInfo structure.",
          "9604: %",
          "9605: %    o windows: Specifies a pointer to a XWindows structure.",
          "",
          "[Removed Lines]",
          "9602: %",
          "",
          "[Added Lines]",
          "9602: %",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "10082:         int",
          "10084:           y;",
          "",
          "[Removed Lines]",
          "10083:           x,",
          "",
          "[Added Lines]",
          "10083:           x,",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "10125:               break;",
          "10126:             SetPixelAlpha(*image,(Quantum) StringToLong(matte),q);",
          "10127:             (void) SyncCacheViewAuthenticPixels(image_view,exception);",
          "10129:           }",
          "10130:           case ReplaceMethod:",
          "10131:           {",
          "",
          "[Removed Lines]",
          "10128:             break;",
          "",
          "[Added Lines]",
          "10128:             break;",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "10174:             (void) GetOneVirtualPixelInfo(*image,",
          "10175:               GetPixelCacheVirtualMethod(*image),(ssize_t) x_offset,(ssize_t)",
          "10176:               y_offset,&target,exception);",
          "10178:               {",
          "10179:                 target.red=(double) ScaleShortToQuantum(",
          "10180:                   border_color.red);",
          "",
          "[Removed Lines]",
          "10177:             if (method == FillToBorderMethod)",
          "",
          "[Added Lines]",
          "10177:             if (method == FillToBorderMethod)",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "10187:               (DrawInfo *) NULL);",
          "10188:             draw_info->fill.alpha=(double) ClampToQuantum(",
          "10189:               StringToDouble(matte,(char **) NULL));",
          "10191:             (void) FloodfillPaintImage(*image,draw_info,&target,(ssize_t)",
          "10192:               x_offset,(ssize_t) y_offset,",
          "10193:               method != FloodfillMethod ? MagickTrue : MagickFalse,exception);",
          "",
          "[Removed Lines]",
          "10190:             channel_mask=SetImageChannelMask(*image,AlphaChannel);",
          "",
          "[Added Lines]",
          "10190:             channel_mask=SetImageChannelMask(*image,AlphaChannel);",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "10258: %",
          "10259: %    o resource_info: Specifies a pointer to a X11 XResourceInfo structure.",
          "10260: %",
          "10262: %",
          "10263: %    o command: A value other than zero indicates that the file is selected",
          "10264: %      from the command line argument list.",
          "",
          "[Removed Lines]",
          "10261: %    o windows: Specifies a pointer to a XWindows structure.",
          "",
          "[Added Lines]",
          "10261: %    o windows: Specifies a pointer to a XWindows structure.",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "11488:     }",
          "11489:   } while ((state & ExitState) == 0);",
          "11490:   (void) XSelectInput(display,windows->image.id,",
          "11492:   if ((state & EscapeState) != 0)",
          "11493:     {",
          "",
          "[Removed Lines]",
          "11491:     windows->image.attributes.event_mask);",
          "",
          "[Added Lines]",
          "11491:     windows->image.attributes.event_mask);",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "12305:                 break;",
          "12306:               }",
          "12307:             }",
          "12309:           }",
          "12310:           case MotionNotify:",
          "12311:           {",
          "",
          "[Removed Lines]",
          "12308:             break;",
          "",
          "[Added Lines]",
          "12308:             break;",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "12750:             Convert Alt-Button3 to Button2.",
          "12753:           event->xbutton.state&=(~Mod1Mask);",
          "12754:         }",
          "12755:       if (event->xbutton.window == windows->backdrop.id)",
          "",
          "[Removed Lines]",
          "12752:           event->xbutton.button=Button2;",
          "",
          "[Added Lines]",
          "12752:           event->xbutton.button=Button2;",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "12788:             XMakeMagnifyImage(display,windows,exception);",
          "12789:             if (event->type == ButtonRelease)",
          "12790:               (void) XWithdrawWindow(display,windows->info.id,",
          "12792:             break;",
          "12793:           }",
          "12794:       break;",
          "",
          "[Removed Lines]",
          "12791:                 windows->info.screen);",
          "",
          "[Added Lines]",
          "12791:                 windows->info.screen);",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "13202:   {",
          "13203:     case TileLoadCommand:",
          "13204:     {",
          "13206:         Load tile image.",
          "13208:       XCheckRefreshWindows(display,windows);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "13273:         Ensure all the images exist.",
          "13275:       tile=0;",
          "13276:       GetPixelInfo(image,&pixel);",
          "13277:       for (p=image->directory; *p != '\\0'; p++)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "13643:   MagickBooleanType",
          "13644:     backdrop;",
          "13646:   MagickStatusType",
          "13647:     status;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "13707:   (void) SetImageOption(read_info,\"jpeg:size\",\"120x120\");",
          "13708:   (void) CloneString(&read_info->size,DefaultTileGeometry);",
          "13709:   (void) SetImageInfoProgressMonitor(read_info,(MagickProgressMonitor) NULL,",
          "13711:   images=NewImageList();",
          "13712:   XSetCursorState(display,windows,MagickTrue);",
          "13713:   XCheckRefreshWindows(display,windows);",
          "",
          "[Removed Lines]",
          "13710:     (void *) NULL);",
          "",
          "[Added Lines]",
          "13710:     (void *) NULL);",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "13928:   resources.colormap=SharedColormap;",
          "13929:   XMakeStandardColormap(display,visual_info,&resources,image,map_info,&pixel,",
          "13930:     exception);",
          "13932:     Graphic context superclass.",
          "13934:   context_values.background=pixel.background_color.pixel;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "14688:     (void) XFreeGC(display,pixel->highlight_context);",
          "14689:   pixel->highlight_context=XCreateGC(display,windows->context.id,",
          "14690:     (size_t) (context_mask | GCPlaneMask),&context_values);",
          "14692:     ThrowXWindowFatalException(XServerFatalError,\"UnableToCreateGraphicContext\",",
          "14693:       display_image->filename);",
          "14694:   (void) XDestroyWindow(display,windows->context.id);",
          "",
          "[Removed Lines]",
          "14691:   if (pixel->highlight_context == (GC) NULL)",
          "",
          "[Added Lines]",
          "14691:   if (pixel->highlight_context == (GC) NULL)",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "14936:     StructureNotifyMask;",
          "14937:   manager_hints->flags=InputHint | StateHint | WindowGroupHint;",
          "14938:   manager_hints->input=MagickTrue;",
          "14940:   manager_hints->window_group=windows->image.id;",
          "14941:   XMakeWindow(display,root_window,argv,argc,class_hints,manager_hints,",
          "14942:     &windows->widget);",
          "",
          "[Removed Lines]",
          "14939:   manager_hints->initial_state=NormalState;",
          "",
          "[Added Lines]",
          "14939:   manager_hints->initial_state=NormalState;",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "15005:   windows->magnify.attributes.event_mask=ButtonPressMask | ButtonReleaseMask |",
          "15006:     ExposureMask | KeyPressMask | KeyReleaseMask | OwnerGrabButtonMask |",
          "15007:     StructureNotifyMask;",
          "15009:   manager_hints->input=MagickTrue;",
          "15010:   manager_hints->initial_state=NormalState;",
          "15011:   manager_hints->window_group=windows->image.id;",
          "",
          "[Removed Lines]",
          "15008:   manager_hints->flags=InputHint | StateHint | WindowGroupHint;",
          "",
          "[Added Lines]",
          "15008:   manager_hints->flags=InputHint | StateHint | WindowGroupHint;",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "15031:     &windows->pan.width,&windows->pan.height);",
          "15032:   windows->pan.flags|=PPosition;",
          "15033:   windows->pan.immutable=MagickTrue;",
          "15035:     ButtonReleaseMask | ExposureMask | KeyPressMask | KeyReleaseMask |",
          "15036:     StructureNotifyMask;",
          "15037:   manager_hints->flags=InputHint | StateHint | WindowGroupHint;",
          "15038:   manager_hints->input=MagickFalse;",
          "15040:   manager_hints->window_group=windows->image.id;",
          "15041:   XMakeWindow(display,root_window,argv,argc,class_hints,manager_hints,",
          "15042:     &windows->pan);",
          "",
          "[Removed Lines]",
          "15034:   windows->pan.attributes.event_mask=ButtonMotionMask | ButtonPressMask |",
          "15039:   manager_hints->initial_state=NormalState;",
          "",
          "[Added Lines]",
          "15034:   windows->pan.attributes.event_mask=ButtonMotionMask | ButtonPressMask |",
          "15039:   manager_hints->initial_state=NormalState;",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "15079:     windows->magnify.width,windows->magnify.height,exception);",
          "15080:   if (IfMagickFalse(status))",
          "15081:     ThrowXWindowFatalException(XServerFatalError,\"UnableToCreateXImage\",",
          "15083:   if (windows->magnify.mapped != MagickFalse )",
          "15084:     (void) XMapRaised(display,windows->magnify.id);",
          "15085:   if (windows->pan.mapped != MagickFalse )",
          "",
          "[Removed Lines]",
          "15082:       display_image->filename);",
          "",
          "[Added Lines]",
          "15082:       display_image->filename);",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "15545:         if (event.xclient.message_type != windows->wm_protocols)",
          "15546:           break;",
          "15547:         if (*event.xclient.data.l != (long) windows->wm_delete_window)",
          "15549:         (void) XWithdrawWindow(display,event.xclient.window,",
          "15550:           visual_info->screen);",
          "15551:         if (event.xclient.window == windows->image.id)",
          "",
          "[Removed Lines]",
          "15548:           break;",
          "",
          "[Added Lines]",
          "15548:           break;",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "15559:               Restore original image size when pan window is deleted.",
          "15562:             windows->image.window_changes.height=windows->image.ximage->height;",
          "15563:             (void) XConfigureImage(display,resource_info,windows,",
          "15564:               display_image,exception);",
          "",
          "[Removed Lines]",
          "15561:             windows->image.window_changes.width=windows->image.ximage->width;",
          "",
          "[Added Lines]",
          "15561:             windows->image.window_changes.width=windows->image.ximage->width;",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "15572:             \"Configure Notify: 0x%lx %dx%d+%d+%d %d\",event.xconfigure.window,",
          "15573:             event.xconfigure.width,event.xconfigure.height,event.xconfigure.x,",
          "15574:             event.xconfigure.y,event.xconfigure.send_event);",
          "15576:           {",
          "15578:               Image window has a new configuration.",
          "",
          "[Removed Lines]",
          "15575:         if (event.xconfigure.window == windows->image.id)",
          "",
          "[Added Lines]",
          "15575:         if (event.xconfigure.window == windows->image.id)",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "15586:                   Position the transient windows relative of the Image window.",
          "15589:                   if (IfMagickFalse(windows->command.mapped) )",
          "15590:                     {",
          "15591:                       windows->command.x=event.xconfigure.x-",
          "",
          "[Removed Lines]",
          "15588:                 if (windows->command.geometry == (char *) NULL)",
          "",
          "[Added Lines]",
          "15588:                 if (windows->command.geometry == (char *) NULL)",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "15647:             windows->image.height=(unsigned int) event.xconfigure.height;",
          "15648:             windows->image.x=0;",
          "15649:             windows->image.y=0;",
          "15651:               {",
          "15652:                 windows->image.x=vid_info.x;",
          "15653:                 windows->image.y=vid_info.y;",
          "",
          "[Removed Lines]",
          "15650:             if (display_image->montage != (char *) NULL)",
          "",
          "[Added Lines]",
          "15650:             if (display_image->montage != (char *) NULL)",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "16057:             windows->icon.mapped=MagickFalse;",
          "16058:             break;",
          "16059:           }",
          "16061:           {",
          "16062:             windows->command.mapped=MagickFalse;",
          "16063:             break;",
          "",
          "[Removed Lines]",
          "16060:         if (event.xunmap.window == windows->command.id)",
          "",
          "[Added Lines]",
          "16060:         if (event.xunmap.window == windows->command.id)",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "16091:   } while (!(*state & ExitState));",
          "16092:   if ((*state & ExitState) == 0)",
          "16093:     (void) XMagickCommand(display,resource_info,windows,FreeBuffersCommand,",
          "16095:   else",
          "16096:     if (resource_info->confirm_edit != MagickFalse )",
          "16097:       {",
          "",
          "[Removed Lines]",
          "16094:       &display_image,exception);",
          "",
          "[Added Lines]",
          "16094:       &display_image,exception);",
          "",
          "---------------"
        ],
        "MagickCore/enhance.c||MagickCore/enhance.c": [
          "File: MagickCore/enhance.c -> MagickCore/enhance.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "324:     y;",
          "326:   assert(image != (Image *) NULL);",
          "328:   if (image->debug != MagickFalse)",
          "331:   assert(clut_image->signature == MagickCoreSignature);",
          "332:   if( IfMagickFalse(SetImageStorageClass(image,DirectClass,exception)) )",
          "333:     return(MagickFalse);",
          "",
          "[Removed Lines]",
          "327:   assert(image->signature == MagickCoreSignature);",
          "329:     (void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\",image->filename);",
          "330:   assert(clut_image != (Image *) NULL);",
          "",
          "[Added Lines]",
          "327:   assert(image->signature == MagickCoreSignature);",
          "329:     (void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\",image->filename);",
          "330:   assert(clut_image != (Image *) NULL);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "407:           pixel.black))].black;",
          "408:       traits=GetPixelChannelTraits(image,AlphaPixelChannel);",
          "409:       if ((traits & UpdatePixelTrait) != 0)",
          "411:           pixel.alpha))].alpha;",
          "412:       SetPixelViaPixelInfo(image,&pixel,q);",
          "413:       q+=GetPixelChannels(image);",
          "",
          "[Removed Lines]",
          "410:         pixel.alpha=clut_map[ScaleQuantumToMap(ClampToQuantum(",
          "",
          "[Added Lines]",
          "410:         pixel.alpha=clut_map[ScaleQuantumToMap(ClampToQuantum(",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "418:       {",
          "419:         MagickBooleanType",
          "420:           proceed;",
          "422: #if defined(MAGICKCORE_OPENMP_SUPPORT)",
          "423:         #pragma omp critical (MagickCore_ClutImage)",
          "424: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "783:         0.07217f*GetPixelBlue(image,q);",
          "784:       SetPixelRed(image,ClampToQuantum(luma+color_correction.saturation*",
          "785:         (cdl_map[ScaleQuantumToMap(GetPixelRed(image,q))].red-luma)),q);",
          "787:         (cdl_map[ScaleQuantumToMap(GetPixelGreen(image,q))].green-luma)),q);",
          "788:       SetPixelBlue(image,ClampToQuantum(luma+color_correction.saturation*",
          "789:         (cdl_map[ScaleQuantumToMap(GetPixelBlue(image,q))].blue-luma)),q);",
          "",
          "[Removed Lines]",
          "786:       SetPixelGreen(image,ClampToQuantum(luma+color_correction.saturation*",
          "",
          "[Added Lines]",
          "786:       SetPixelGreen(image,ClampToQuantum(luma+color_correction.saturation*",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "795:       {",
          "796:         MagickBooleanType",
          "797:           proceed;",
          "799: #if defined(MAGICKCORE_OPENMP_SUPPORT)",
          "800:         #pragma omp critical (MagickCore_ColorDecisionListImageChannel)",
          "801: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "952:     {",
          "953:       red=(double) GetPixelRed(image,q);",
          "954:       green=(double) GetPixelGreen(image,q);",
          "956:       Contrast(sign,&red,&green,&blue);",
          "957:       SetPixelRed(image,ClampToQuantum(red),q);",
          "958:       SetPixelGreen(image,ClampToQuantum(green),q);",
          "",
          "[Removed Lines]",
          "955:       blue=(double) GetPixelBlue(image,q);",
          "",
          "[Added Lines]",
          "955:       blue=(double) GetPixelBlue(image,q);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "963:       status=MagickFalse;",
          "964:     if (image->progress_monitor != (MagickProgressMonitor) NULL)",
          "965:       {",
          "967:           proceed;",
          "969: #if defined(MAGICKCORE_OPENMP_SUPPORT)",
          "",
          "[Removed Lines]",
          "966:         MagickBooleanType",
          "",
          "[Added Lines]",
          "966:         MagickBooleanType",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1702:           continue;",
          "1703:         }",
          "1704:       for (j=0; j < (ssize_t) GetPixelChannels(image); j++)",
          "1706:         PixelChannel channel=GetPixelChannelChannel(image,j);",
          "1707:         PixelTrait traits=GetPixelChannelTraits(image,channel);",
          "1708:         if (((traits & UpdatePixelTrait) == 0) || (black[j] == white[j]))",
          "",
          "[Removed Lines]",
          "1705:       {",
          "",
          "[Added Lines]",
          "1705:       {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1713:       q+=GetPixelChannels(image);",
          "1714:     }",
          "1715:     if( IfMagickFalse(SyncCacheViewAuthenticPixels(image_view,exception)) )",
          "1717:     if (image->progress_monitor != (MagickProgressMonitor) NULL)",
          "1718:       {",
          "1719:         MagickBooleanType",
          "",
          "[Removed Lines]",
          "1716:       status=MagickFalse;",
          "",
          "[Added Lines]",
          "1716:       status=MagickFalse;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1887:       for (j=0; j < (ssize_t) GetPixelChannels(image); j++)",
          "1888:       {",
          "1889:         PixelChannel channel=GetPixelChannelChannel(image,j);",
          "1891:         if ((traits & UpdatePixelTrait) == 0)",
          "1892:           continue;",
          "1893: #if !defined(MAGICKCORE_HDRI_SUPPORT)",
          "",
          "[Removed Lines]",
          "1890:         PixelTrait traits=GetPixelChannelTraits(image,channel);",
          "",
          "[Added Lines]",
          "1890:         PixelTrait traits=GetPixelChannelTraits(image,channel);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1899:       q+=GetPixelChannels(image);",
          "1900:     }",
          "1901:     if( IfMagickFalse(SyncCacheViewAuthenticPixels(image_view,exception)) )",
          "1903:     if (image->progress_monitor != (MagickProgressMonitor) NULL)",
          "1904:       {",
          "1905:         MagickBooleanType",
          "",
          "[Removed Lines]",
          "1902:       status=MagickFalse;",
          "",
          "[Added Lines]",
          "1902:       status=MagickFalse;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1960:   MagickBooleanType",
          "1961:     status;",
          "1964:     progress;",
          "1966:   ssize_t",
          "1967:     y;",
          "",
          "[Removed Lines]",
          "1963:   MagickOffsetType",
          "",
          "[Added Lines]",
          "1963:   MagickOffsetType",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2087:               blue=DecodePixelGamma(blue);",
          "2088:             }",
          "2089:           intensity=0.212656*red+0.715158*green+0.072186*blue;",
          "2091:         }",
          "2092:         case RMSPixelIntensityMethod:",
          "2093:         {",
          "",
          "[Removed Lines]",
          "2090:           break;",
          "",
          "[Added Lines]",
          "2090:           break;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2099:       SetPixelGray(image,ClampToQuantum(intensity),q);",
          "2100:       q+=GetPixelChannels(image);",
          "2101:     }",
          "2103:       status=MagickFalse;",
          "2104:     if (image->progress_monitor != (MagickProgressMonitor) NULL)",
          "2105:       {",
          "",
          "[Removed Lines]",
          "2102:     if (IfMagickFalse(SyncCacheViewAuthenticPixels(image_view,exception)))",
          "",
          "[Added Lines]",
          "2102:     if (SyncCacheViewAuthenticPixels(image_view,exception) == MagickFalse)",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2183:     zero;",
          "2185:   size_t",
          "2187:     length,",
          "2188:     level;",
          "",
          "[Removed Lines]",
          "2186:     cube_size,",
          "",
          "[Added Lines]",
          "2186:     cube_size,",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2277:       CompositePixelInfoAreaBlend(&pixel3,pixel3.alpha,&pixel4,pixel4.alpha,",
          "2278:         point.z,&pixel);",
          "2279:       if ((GetPixelRedTraits(image) & UpdatePixelTrait) != 0)",
          "2281:       if ((GetPixelGreenTraits(image) & UpdatePixelTrait) != 0)",
          "2282:         SetPixelGreen(image,ClampToQuantum(pixel.green),q);",
          "2283:       if ((GetPixelBlueTraits(image) & UpdatePixelTrait) != 0)",
          "",
          "[Removed Lines]",
          "2280:         SetPixelRed(image,ClampToQuantum(pixel.red),q);",
          "",
          "[Added Lines]",
          "2280:         SetPixelRed(image,ClampToQuantum(pixel.red),q);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2288:       if (((GetPixelAlphaTraits(image) & UpdatePixelTrait) != 0) &&",
          "2289:           (image->alpha_trait != UndefinedPixelTrait))",
          "2290:         SetPixelAlpha(image,ClampToQuantum(pixel.alpha),q);",
          "2292:     }",
          "2293:     if( IfMagickFalse(SyncCacheViewAuthenticPixels(image_view,exception)) )",
          "2294:       status=MagickFalse;",
          "",
          "[Removed Lines]",
          "2291:       q+=GetPixelChannels(image);",
          "",
          "[Added Lines]",
          "2291:       q+=GetPixelChannels(image);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2448:       if (GetPixelReadMask(image,q) == 0)",
          "2449:         {",
          "2451:           continue;",
          "2452:         }",
          "2453:       for (j=0; j < (ssize_t) GetPixelChannels(image); j++)",
          "",
          "[Removed Lines]",
          "2450:           q+=GetPixelChannels(image);",
          "",
          "[Added Lines]",
          "2450:           q+=GetPixelChannels(image);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2458:           continue;",
          "2459:         q[j]=ClampToQuantum(LevelPixel(black_point,white_point,gamma,",
          "2460:           (double) q[j]));",
          "2462:       q+=GetPixelChannels(image);",
          "2463:     }",
          "2464:     if( IfMagickFalse(SyncCacheViewAuthenticPixels(image_view,exception)) )",
          "",
          "[Removed Lines]",
          "2461:       }",
          "",
          "[Added Lines]",
          "2461:       }",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2602:       register ssize_t",
          "2603:         j;",
          "2606:         {",
          "2607:           q+=GetPixelChannels(image);",
          "2608:           continue;",
          "",
          "[Removed Lines]",
          "2605:       if (GetPixelReadMask(image,q) == 0)",
          "",
          "[Added Lines]",
          "2605:       if (GetPixelReadMask(image,q) == 0)",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2613:         PixelTrait traits=GetPixelChannelTraits(image,channel);",
          "2614:         if ((traits & UpdatePixelTrait) == 0)",
          "2615:           continue;",
          "2617:       }",
          "2618:       q+=GetPixelChannels(image);",
          "2619:     }",
          "",
          "[Removed Lines]",
          "2616:         q[j]=LevelizeValue(q[j]);",
          "",
          "[Added Lines]",
          "2616:         q[j]=LevelizeValue(q[j]);",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "2679: %",
          "2681: MagickExport MagickBooleanType LevelImageColors(Image *image,",
          "2685:   ChannelType",
          "2686:     channel_mask;",
          "2688:   MagickStatusType",
          "2689:     status;",
          "",
          "[Removed Lines]",
          "2682:   const PixelInfo *black_color,const PixelInfo *white_color,",
          "2683:   const MagickBooleanType invert,ExceptionInfo *exception)",
          "2684: {",
          "",
          "[Added Lines]",
          "2682:   const PixelInfo *black_color,const PixelInfo *white_color,",
          "2683:   const MagickBooleanType invert,ExceptionInfo *exception)",
          "2684: {",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "3160:     progress;",
          "3162:   MagickStatusType",
          "3165:   register ssize_t",
          "3166:     i;",
          "",
          "[Removed Lines]",
          "3163:     flags;",
          "",
          "[Added Lines]",
          "3163:     flags;",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "3346:         }",
          "3347:         case LCHabColorspace:",
          "3348:         {",
          "3350:             &red,&green,&blue);",
          "3351:           break;",
          "3352:         }",
          "",
          "[Removed Lines]",
          "3349:           ModulateLCHab(percent_brightness,percent_saturation,percent_hue,",
          "",
          "[Added Lines]",
          "3349:           ModulateLCHab(percent_brightness,percent_saturation,percent_hue,",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "3357:             &red,&green,&blue);",
          "3358:           break;",
          "3359:         }",
          "3361:       SetPixelRed(image,ClampToQuantum(red),q);",
          "3362:       SetPixelGreen(image,ClampToQuantum(green),q);",
          "3363:       SetPixelBlue(image,ClampToQuantum(blue),q);",
          "",
          "[Removed Lines]",
          "3360:       }",
          "",
          "[Added Lines]",
          "3360:       }",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "3484:         {",
          "3485:           register ssize_t",
          "3486:             j;",
          "3488:           if ((GetPixelReadMask(image,q) == 0) ||",
          "3489:               IsPixelGray(image,q) != MagickFalse)",
          "3490:             {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "3496:             PixelChannel channel=GetPixelChannelChannel(image,j);",
          "3497:             PixelTrait traits=GetPixelChannelTraits(image,channel);",
          "3498:             if ((traits & UpdatePixelTrait) == 0)",
          "3500:             q[j]=QuantumRange-q[j];",
          "3501:           }",
          "3502:           q+=GetPixelChannels(image);",
          "",
          "[Removed Lines]",
          "3499:               continue;",
          "",
          "[Added Lines]",
          "3499:               continue;",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "3546:       }",
          "3547:     for (x=0; x < (ssize_t) image->columns; x++)",
          "3548:     {",
          "3550:         j;",
          "3552:       if (GetPixelReadMask(image,q) == 0)",
          "",
          "[Removed Lines]",
          "3549:       register ssize_t",
          "",
          "[Added Lines]",
          "3549:       register ssize_t",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "3557:       for (j=0; j < (ssize_t) GetPixelChannels(image); j++)",
          "3558:       {",
          "3559:         PixelChannel channel=GetPixelChannelChannel(image,j);",
          "3561:         if ((traits & UpdatePixelTrait) == 0)",
          "3562:           continue;",
          "3563:         q[j]=QuantumRange-q[j];",
          "",
          "[Removed Lines]",
          "3560:         PixelTrait traits=GetPixelChannelTraits(image,channel);",
          "",
          "[Added Lines]",
          "3560:         PixelTrait traits=GetPixelChannelTraits(image,channel);",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "3853:     for (x=0; x < (ssize_t) image->columns; x++)",
          "3854:     {",
          "3855:       register ssize_t",
          "3858:       if (GetPixelReadMask(image,q) == 0)",
          "3859:         {",
          "",
          "[Removed Lines]",
          "3856:         i;",
          "",
          "[Added Lines]",
          "3856:         i;",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "3865:         PixelChannel channel=GetPixelChannelChannel(image,i);",
          "3866:         PixelTrait traits=GetPixelChannelTraits(image,channel);",
          "3867:         if ((traits & UpdatePixelTrait) == 0)",
          "3869:         if( sharpen != MagickFalse )",
          "3870:           q[i]=ScaledSig(q[i]);",
          "3871:         else",
          "",
          "[Removed Lines]",
          "3868:           continue;",
          "",
          "[Added Lines]",
          "3868:           continue;",
          "",
          "---------------"
        ],
        "MagickCore/hashmap.c||MagickCore/hashmap.c": [
          "File: MagickCore/hashmap.c -> MagickCore/hashmap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "502:   void",
          "505:   assert(hashmap_info != (HashmapInfo *) NULL);",
          "506:   assert(hashmap_info->signature == MagickCoreSignature);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "561:   register EntryInfo",
          "567:   assert(hashmap_info != (HashmapInfo *) NULL);",
          "",
          "[Removed Lines]",
          "564:   void",
          "",
          "[Added Lines]",
          "564:   void",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1551:     }",
          "1552:   else",
          "1553:     {",
          "1555:       entry=(EntryInfo *) GetNextValueInLinkedList(list_info);",
          "1556:       for (i=0; entry != (EntryInfo *) NULL; i++)",
          "1557:       {",
          "1558:         if (entry->hash == next->hash)",
          "1559:           {",
          "1560:             MagickBooleanType",
          "1563:             compare=MagickTrue;",
          "1564:             if (hashmap_info->compare !=",
          "",
          "[Removed Lines]",
          "1554:       list_info->next=list_info->head;",
          "1561:               compare;",
          "",
          "[Added Lines]",
          "1554:       list_info->next=list_info->head;",
          "1561:               compare;",
          "",
          "---------------"
        ],
        "MagickCore/magick-type.h||MagickCore/magick-type.h": [
          "File: MagickCore/magick-type.h -> MagickCore/magick-type.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "148:   MagickTrue = 1",
          "149: } MagickBooleanType;",
          "169:   The IsNaN test is for special floating point numbers of value Nan (not a",
          "170:   number). NaN's are defined as part of the IEEE standard for floating point",
          "",
          "[Removed Lines]",
          "152:    Define some short-hand macros for handling MagickBooleanType",
          "153:    and uses fast C typing with C boolean operations",
          "155:      Is  -- returns a MagickBooleanType (for storage)",
          "156:      If  -- returns C integer boolean (for if's and while's)",
          "158:    IfMagickFalse()    Not the MagickBooleanType to C integer Boolean",
          "160: #if 1",
          "162: #  define IfMagickFalse(v) (!(int)(v))",
          "163: #else",
          "165: #  define IfMagickFalse(v) ((v) == MagickFalse)",
          "166: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "MagickCore/morphology.c||MagickCore/morphology.c": [
          "File: MagickCore/morphology.c -> MagickCore/morphology.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4137:   curr_kernel = (KernelInfo *) kernel;",
          "",
          "[Removed Lines]",
          "4138:   bias=0.0;",
          "",
          "[Added Lines]",
          "4138:   bias=0.0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4147:       artifact = GetImageArtifact(image,\"convolve:bias\");",
          "4148:       if ( artifact != (const char *) NULL) {",
          "4150:           (void) ThrowMagickException(exception,GetMagickModule(),",
          "4151:                OptionWarning,\"InvalidSetting\",\"'%s' '%s'\",",
          "4152:                \"convolve:bias\",artifact);",
          "",
          "[Removed Lines]",
          "4149:         if (IfMagickFalse(IsGeometry(artifact)))",
          "",
          "[Added Lines]",
          "4149:         if (IsGeometry(artifact) == MagickFalse)",
          "",
          "---------------"
        ],
        "MagickCore/property.c||MagickCore/property.c": [
          "File: MagickCore/property.c -> MagickCore/property.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "612:   if (count < 3)",
          "614:   sub_number=1;",
          "616:     sub_number=(ssize_t) StringToLong(&name[1]);",
          "617:   sub_number=MagickMax(sub_number,1L);",
          "618:   resource=(char *) NULL;",
          "",
          "[Removed Lines]",
          "615:   if (*name == '#')",
          "",
          "[Added Lines]",
          "615:   if (*name == '#')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1813:           xx=(size_t) ((int) ReadPropertyMSBLong(&blob,&length));",
          "1814:           x=(ssize_t) xx;",
          "1815:           if (xx > 2147483647)",
          "1817:           y=(ssize_t) yy;",
          "1818:           if (yy > 2147483647)",
          "1819:             y=(ssize_t) yy-4294967295U-1;",
          "",
          "[Removed Lines]",
          "1816:             x=(ssize_t) xx-4294967295U-1;",
          "",
          "[Added Lines]",
          "1816:             x=(ssize_t) xx-4294967295U-1;",
          "",
          "---------------"
        ],
        "MagickWand/magick-cli.c||MagickWand/magick-cli.c": [
          "File: MagickWand/magick-cli.c -> MagickWand/magick-cli.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "181:       if ( option_type == UndefinedOptionFlag ||",
          "182:            (option_type & NonMagickOptionFlag) != 0 ) {",
          "183: #if MagickCommandDebug >= 3",
          "185:                     cli_wand->line, cli_wand->line, option);",
          "186: #endif",
          "187:         if ( IfMagickFalse(IsCommandOption(option))) {",
          "",
          "[Removed Lines]",
          "184:         (void) FormatLocaleFile(stderr, \"Script %u,%u Non-Option: \\\"%s\\\"\\n\",",
          "",
          "[Added Lines]",
          "184:         (void) FormatLocaleFile(stderr, \"Script %u,%u Non-Option: \\\"%s\\\"\\n\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "192:         }",
          "193:         CLIWandException(OptionFatalError,\"UnrecognizedOption\",option);",
          "197:       if ( count >= 1 ) {",
          "198:         if( IfMagickFalse(GetScriptToken(token_info)) )",
          "",
          "[Removed Lines]",
          "195:       }",
          "",
          "[Added Lines]",
          "195:       }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "200:         CloneString(&arg1,token_info->token);",
          "201:       }",
          "202:       else",
          "205:       if ( count >= 2 ) {",
          "206:         if( IfMagickFalse(GetScriptToken(token_info)) )",
          "",
          "[Removed Lines]",
          "203:         CloneString(&arg1,(char *) NULL);",
          "",
          "[Added Lines]",
          "203:         CloneString(&arg1,(char *) NULL);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "415:       if ( option_type == UndefinedOptionFlag ||",
          "416:            (option_type & NonMagickOptionFlag) != 0 ) {",
          "418:         (void) FormatLocaleFile(stderr, \"CLI arg %d Non-Option: \\\"%s\\\"\\n\",",
          "419:              i, option);",
          "420: #endif",
          "",
          "[Removed Lines]",
          "417: #if MagickCommandDebug >= 3",
          "",
          "[Added Lines]",
          "417: #if MagickCommandDebug >= 3",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "601:        \"Usage: %s [ {option} | {image} ... ] {output_image}\\n\",name);",
          "602:     (void) FormatLocaleFile(stdout,",
          "603:        \"       %s [ {option} | {image} ... ] -script {filename} [ {script_args} ...]\\n\",",
          "605:   }",
          "606:   (void) FormatLocaleFile(stdout,",
          "607:     \"       %s -help | -version | -usage | -list {option}\\n\\n\",name);",
          "",
          "[Removed Lines]",
          "604:        name);",
          "",
          "[Added Lines]",
          "604:        name);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "650:   int",
          "653:   register ssize_t",
          "654:     i;",
          "",
          "[Removed Lines]",
          "651:     c;",
          "",
          "[Added Lines]",
          "651:     c;",
          "",
          "---------------"
        ],
        "MagickWand/magick-image.c||MagickWand/magick-image.c": [
          "File: MagickWand/magick-image.c -> MagickWand/magick-image.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5577: }",
          "5581: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",
          "5582: %                                                                             %",
          "5583: %                                                                             %",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11629:   if (statistic_image == (Image *) NULL)",
          "11630:     return(MagickFalse);",
          "11631:   ReplaceImageInList(&wand->images,statistic_image);",
          "11633: }",
          "",
          "[Removed Lines]",
          "11632:   return(MagickTrue);",
          "",
          "[Added Lines]",
          "11632:   return(MagickTrue);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "11864:   if ((wand->images == (Image *) NULL) ||",
          "11865:       (texture_wand->images == (Image *) NULL))",
          "11866:     {",
          "11868:         \"ContainsNoImages\",\"`%s'\",wand->name);",
          "11869:       return((MagickWand *) NULL);",
          "11870:     }",
          "",
          "[Removed Lines]",
          "11867:       (void) ThrowMagickException(wand->exception,GetMagickModule(),WandError,",
          "",
          "[Added Lines]",
          "11867:       (void) ThrowMagickException(wand->exception,GetMagickModule(),WandError,",
          "",
          "---------------"
        ],
        "MagickWand/operation.c||MagickWand/operation.c": [
          "File: MagickWand/operation.c -> MagickWand/operation.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "493:         {",
          "494:           _image_info->antialias =",
          "495:             _draw_info->stroke_antialias =",
          "497:           break;",
          "498:         }",
          "499:       if (LocaleCompare(\"attenuate\",option+1) == 0)",
          "",
          "[Removed Lines]",
          "496:               _draw_info->text_antialias = ArgBoolean;",
          "",
          "[Added Lines]",
          "496:               _draw_info->text_antialias = ArgBoolean;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "534:       if (LocaleCompare(\"bias\",option+1) == 0)",
          "535:         {",
          "538:              Usage outside a direct convolve operation is actally non-sensible!",
          "540:              SyncImageSettings() used to set per-image attribute.",
          "",
          "[Removed Lines]",
          "537:              as it is actually rarely used except in direct convolve operations",
          "",
          "[Added Lines]",
          "537:              as it is actually rarely used except in direct convolve operations",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "554:         }",
          "555:       if (LocaleCompare(\"blue-primary\",option+1) == 0)",
          "556:         {",
          "558:              Used by many coders including PNG",
          "559:              SyncImageSettings() used to set per-image attribute.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "596:     }",
          "597:     case 'c':",
          "598:     {",
          "600:         {",
          "601:           MagickSizeType",
          "602:             limit;",
          "",
          "[Removed Lines]",
          "599:       if (LocaleCompare(\"cache\",option+1) == 0)",
          "",
          "[Added Lines]",
          "599:       if (LocaleCompare(\"cache\",option+1) == 0)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "708:           break;",
          "709:         }",
          "710:       if (LocaleCompare(\"delay\",option+1) == 0)",
          "713:              FUTURE: Option should also be used for \"-morph\" (color morphing)",
          "",
          "[Removed Lines]",
          "711:         {",
          "",
          "[Added Lines]",
          "711:         {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "720:         }",
          "721:       if (LocaleCompare(\"density\",option+1) == 0)",
          "722:         {",
          "724:              Basically as density can be in a XxY form!",
          "726:              SyncImageSettings() used to set per-image attribute.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "732:           (void) CloneString(&_draw_info->density,_image_info->density);",
          "733:           break;",
          "734:         }",
          "736:         {",
          "738:              SyncImageSettings() used to set per-image attribute.",
          "",
          "[Removed Lines]",
          "735:       if (LocaleCompare(\"depth\",option+1) == 0)",
          "",
          "[Added Lines]",
          "735:       if (LocaleCompare(\"depth\",option+1) == 0)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "772:           (void) SetImageOption(_image_info,option+1,ArgOption(\"undefined\"));",
          "773:           break;",
          "774:         }",
          "776:         {",
          "",
          "[Removed Lines]",
          "775:       if (LocaleCompare(\"dissimilarity-threshold\",option+1) == 0)",
          "",
          "[Added Lines]",
          "775:       if (LocaleCompare(\"dissimilarity-threshold\",option+1) == 0)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "862:           if (_draw_info->fill_pattern != (Image *) NULL)",
          "863:             _draw_info->fill_pattern=DestroyImage(_draw_info->fill_pattern);",
          "866:           sans=AcquireExceptionInfo();",
          "867:           status=QueryColorCompliance(arg1,AllCompliance,&color,sans);",
          "868:           sans=DestroyExceptionInfo(sans);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "910:              Image attribute used for color compare operations",
          "911:              SyncImageSettings() used to set per-image attribute.",
          "913:              FUTURE: Can't find anything else using _image_info->fuzz directly!",
          "914:                      convert structure attribute to 'option' string",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "939:         }",
          "940:       if (LocaleCompare(\"green-primary\",option+1) == 0)",
          "941:         {",
          "943:              SyncImageSettings() used to set per-image attribute.",
          "944:              Used directly by many coders",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1000:             CLIWandExceptArgBreak(OptionError,\"UnrecognizedInterlaceType\",",
          "1001:                                       option,arg1);",
          "1002:           _image_info->interlace=(InterlaceType) parse;",
          "1004:           break;",
          "1005:         }",
          "1006:       if (LocaleCompare(\"interline-spacing\",option+1) == 0)",
          "",
          "[Removed Lines]",
          "1003:           (void) SetImageOption(_image_info,option+1,arg1);",
          "",
          "[Added Lines]",
          "1003:           (void) SetImageOption(_image_info,option+1,arg1);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1020:           if (parse < 0)",
          "1021:             CLIWandExceptArgBreak(OptionError,\"UnrecognizedInterpolateMethod\",",
          "1022:                                       option,arg1);",
          "1024:           break;",
          "1025:         }",
          "1026:       if (LocaleCompare(\"interword-spacing\",option+1) == 0)",
          "",
          "[Removed Lines]",
          "1023:           (void) SetImageOption(_image_info,option+1,arg1);",
          "",
          "[Added Lines]",
          "1023:           (void) SetImageOption(_image_info,option+1,arg1);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1032:           break;",
          "1033:         }",
          "1034:       CLIWandExceptionBreak(OptionError,\"UnrecognizedOption\",option);",
          "1036:     case 'k':",
          "1037:     {",
          "1038:       if (LocaleCompare(\"kerning\",option+1) == 0)",
          "",
          "[Removed Lines]",
          "1035:     }",
          "",
          "[Added Lines]",
          "1035:     }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1084:           (void) SetImageOption(_image_info,option+1,ArgOption(NULL));",
          "1085:           break;",
          "1087:       if (LocaleCompare(\"loop\",option+1) == 0)",
          "1088:         {",
          "",
          "[Removed Lines]",
          "1086:         }",
          "",
          "[Added Lines]",
          "1086:         }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1208:       if (LocaleCompare(\"ping\",option+1) == 0)",
          "1209:         {",
          "1210:           _image_info->ping = ArgBoolean;",
          "1212:         }",
          "1213:       if (LocaleCompare(\"pointsize\",option+1) == 0)",
          "1214:         {",
          "",
          "[Removed Lines]",
          "1211:           break;",
          "",
          "[Added Lines]",
          "1211:           break;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1224:             _draw_info->pointsize=12.0;",
          "1225:           }",
          "1227:         }",
          "1228:       if (LocaleCompare(\"precision\",option+1) == 0)",
          "1229:         {",
          "",
          "[Removed Lines]",
          "1226:           break;",
          "",
          "[Added Lines]",
          "1226:           break;",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1245:         }",
          "1247:       CLIWandExceptionBreak(OptionError,\"UnrecognizedOption\",option);",
          "1249:     case 'q':",
          "1250:     {",
          "1251:       if (LocaleCompare(\"quality\",option+1) == 0)",
          "",
          "[Removed Lines]",
          "1248:     }",
          "",
          "[Added Lines]",
          "1248:     }",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1291:     {",
          "1292:       if (LocaleCompare(\"red-primary\",option+1) == 0)",
          "1293:         {",
          "1295:              Used by many coders",
          "1296:              SyncImageSettings() used to set per-image attribute.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1318:         }",
          "1319:       CLIWandExceptionBreak(OptionError,\"UnrecognizedOption\",option);",
          "1320:     }",
          "1322:     {",
          "1323:       if (LocaleCompare(\"sampling-factor\",option+1) == 0)",
          "1324:         {",
          "",
          "[Removed Lines]",
          "1321:     case 's':",
          "",
          "[Added Lines]",
          "1321:     case 's':",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1328:           (void) CloneString(&_image_info->sampling_factor,ArgOption(NULL));",
          "1329:           break;",
          "1330:         }",
          "1332:         {",
          "1334:              What ??? Why ????",
          "",
          "[Removed Lines]",
          "1331:       if (LocaleCompare(\"scene\",option+1) == 0)",
          "",
          "[Added Lines]",
          "1331:       if (LocaleCompare(\"scene\",option+1) == 0)",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1336:           if (IfSetOption && IfMagickFalse(IsGeometry(arg1)))",
          "1337:             CLIWandExceptArgBreak(OptionError,\"InvalidArgument\",option,arg1);",
          "1338:           (void) SetImageOption(_image_info,option+1,ArgOption(NULL));",
          "1340:           break;",
          "1341:         }",
          "1342:       if (LocaleCompare(\"seed\",option+1) == 0)",
          "",
          "[Removed Lines]",
          "1339:           _image_info->scene=StringToUnsignedLong(ArgOption(\"0\"));",
          "",
          "[Added Lines]",
          "1339:           _image_info->scene=StringToUnsignedLong(ArgOption(\"0\"));",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1386:           if (_draw_info->stroke_pattern != (Image *) NULL)",
          "1387:             _draw_info->stroke_pattern=DestroyImage(_draw_info->stroke_pattern);",
          "1390:           sans=AcquireExceptionInfo();",
          "1391:           status=QueryColorCompliance(arg1,AllCompliance,&color,sans);",
          "1392:           sans=DestroyExceptionInfo(sans);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1394:           if (IfMagickFalse(status))",
          "1395:             _draw_info->stroke_pattern=GetImageCache(_image_info,arg1,_exception);",
          "1396:           else",
          "1398:           break;",
          "1399:         }",
          "1400:       if (LocaleCompare(\"strokewidth\",option+1) == 0)",
          "",
          "[Removed Lines]",
          "1397:             _draw_info->stroke=color;",
          "",
          "[Added Lines]",
          "1397:             _draw_info->stroke=color;",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1457:                                  ?GetImageCache(_image_info,arg1,_exception)",
          "1458:                                  :DestroyImage(_draw_info->fill_pattern);",
          "1459:           break;",
          "1461:       if (LocaleCompare(\"tile-offset\",option+1) == 0)",
          "1462:         {",
          "",
          "[Removed Lines]",
          "1460:         }",
          "",
          "[Added Lines]",
          "1460:         }",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1471:         {",
          "1473:              _image_info only used for generating new images.",
          "1476:              Note that +transparent-color, means fall-back to image",
          "1477:              attribute so ImageOption is deleted, not set to a default.",
          "",
          "[Removed Lines]",
          "1474:              SyncImageSettings() used to set per-image attribute.",
          "",
          "[Added Lines]",
          "1474:              SyncImageSettings() used to set per-image attribute.",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1579:           break;",
          "1580:         }",
          "1581:       if (LocaleCompare(\"white-point\",option+1) == 0)",
          "1584:              SyncImageSettings() used to set per-image attribute.",
          "",
          "[Removed Lines]",
          "1582:         {",
          "",
          "[Added Lines]",
          "1582:         {",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1752:           if ((flags & SigmaValue) == 0)",
          "1753:             geometry_info.sigma=1.0;",
          "1754:           new_image=AdaptiveBlurImage(_image,geometry_info.rho,",
          "1756:           break;",
          "1757:         }",
          "1758:       if (LocaleCompare(\"adaptive-resize\",option+1) == 0)",
          "",
          "[Removed Lines]",
          "1755:             geometry_info.sigma,_exception);",
          "",
          "[Added Lines]",
          "1755:             geometry_info.sigma,_exception);",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1828:           new_image=AutoOrientImage(_image,_image->orientation,_exception);",
          "1829:           break;",
          "1830:         }",
          "1832:     }",
          "1833:     case 'b':",
          "1834:     {",
          "",
          "[Removed Lines]",
          "1831:       CLIWandExceptionBreak(OptionError,\"UnrecognizedOption\",option);",
          "",
          "[Added Lines]",
          "1831:       CLIWandExceptionBreak(OptionError,\"UnrecognizedOption\",option);",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "1966:             geometry_info.sigma=1.0;",
          "1967:           if ((flags & XiValue) == 0)",
          "1968:             geometry_info.xi=1.0;",
          "1970:             _exception);",
          "1971:           break;",
          "1972:         }",
          "",
          "[Removed Lines]",
          "1969:           new_image=CharcoalImage(_image,geometry_info.rho,geometry_info.sigma,",
          "",
          "[Added Lines]",
          "1969:           new_image=CharcoalImage(_image,geometry_info.rho,geometry_info.sigma,",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "2012:           if (IfPlusOp) {",
          "2015:             break;",
          "2016:           }",
          "2017:           mask_image=GetImageCache(_image_info,arg1,_exception);",
          "",
          "[Removed Lines]",
          "2014:             (void) SetImageMask(_image,ReadPixelMask,(Image *) NULL,_exception);",
          "",
          "[Added Lines]",
          "2014:             (void) SetImageMask(_image,ReadPixelMask,(Image *) NULL,_exception);",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "2030:               break;",
          "2031:             for (x=0; x < (ssize_t) mask_image->columns; x++)",
          "2032:             {",
          "2034:                 SetPixelAlpha(mask_image,(Quantum)",
          "2035:                   GetPixelIntensity(mask_image,q),q);",
          "2036:               SetPixelGray(mask_image,GetPixelAlpha(mask_image,q),q);",
          "",
          "[Removed Lines]",
          "2033:               if (mask_image->alpha_trait == UndefinedPixelTrait)",
          "",
          "[Added Lines]",
          "2033:               if (mask_image->alpha_trait == UndefinedPixelTrait)",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "2049:         }",
          "2050:       if (LocaleCompare(\"clip-path\",option+1) == 0)",
          "2051:         {",
          "2054:           break;",
          "2055:         }",
          "",
          "[Removed Lines]",
          "2052:           (void) ClipImagePath(_image,arg1,IsNormalOp,_exception);",
          "",
          "[Added Lines]",
          "2052:           (void) ClipImagePath(_image,arg1,IsNormalOp,_exception);",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "2100:              That seems to be a little strange!",
          "2102:           (void) TransformImageColorspace(_image,",
          "2104:                     _exception);",
          "2105:           break;",
          "2106:         }",
          "",
          "[Removed Lines]",
          "2103:                     IfNormalOp ? _image_info->colorspace : sRGBColorspace,",
          "",
          "[Added Lines]",
          "2103:                     IfNormalOp ? _image_info->colorspace : sRGBColorspace,",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "2164:             kernel_info->values[j]*=gamma;",
          "2165:           new_image=MorphologyImage(_image,CorrelateMorphology,1,kernel_info,",
          "2166:             _exception);",
          "2168:           break;",
          "2169:         }",
          "2170:       if (LocaleCompare(\"crop\",option+1) == 0)",
          "2171:         {",
          "2173:           if (IfMagickFalse(IsGeometry(arg1)))",
          "2175:           new_image=CropImageToTiles(_image,arg1,_exception);",
          "2176:           break;",
          "2177:         }",
          "",
          "[Removed Lines]",
          "2167:           kernel_info=DestroyKernelInfo(kernel_info);",
          "2174:             CLIWandExceptArgBreak(OptionError,\"InvalidArgument\",option,arg1);",
          "",
          "[Added Lines]",
          "2167:           kernel_info=DestroyKernelInfo(kernel_info);",
          "2174:             CLIWandExceptArgBreak(OptionError,\"InvalidArgument\",option,arg1);",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "2214:           (void) SetImageDepth(_image,_image_info->depth,_exception);",
          "2215:           break;",
          "2216:         }",
          "2218:         {",
          "2219:           double",
          "2220:             threshold;",
          "",
          "[Removed Lines]",
          "2217:       if (LocaleCompare(\"deskew\",option+1) == 0)",
          "",
          "[Added Lines]",
          "2217:       if (LocaleCompare(\"deskew\",option+1) == 0)",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "2248:                                       option,arg1);",
          "2249:           if ((DistortImageMethod) parse == ResizeDistortion)",
          "2250:             {",
          "2252:                  resize_args[2];",
          "",
          "[Removed Lines]",
          "2251:                double",
          "",
          "[Added Lines]",
          "2251:                double",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "2331:       if (LocaleCompare(\"evaluate\",option+1) == 0)",
          "2332:         {",
          "2333:           double",
          "2336:           parse = ParseCommandOption(MagickEvaluateOptions,MagickFalse,arg1);",
          "2337:           if ( parse < 0 )",
          "",
          "[Removed Lines]",
          "2334:             constant;",
          "",
          "[Added Lines]",
          "2334:             constant;",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "2340:           if (IfMagickFalse(IsGeometry(arg2)))",
          "2341:             CLIWandExceptArgBreak(OptionError,\"InvalidArgument\",option,arg2);",
          "2342:           constant=StringToDoubleInterval(arg2,(double) QuantumRange+1.0);",
          "2344:                _exception);",
          "2345:           break;",
          "2346:         }",
          "",
          "[Removed Lines]",
          "2343:           (void) EvaluateImage(_image,(MagickEvaluateOperator)parse,constant,",
          "",
          "[Added Lines]",
          "2343:           (void) EvaluateImage(_image,(MagickEvaluateOperator)parse,constant,",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "2369:         {",
          "2370:           new_image=FlopImage(_image,_exception);",
          "2371:           break;",
          "2373:       if (LocaleCompare(\"floodfill\",option+1) == 0)",
          "2374:         {",
          "2375:           PixelInfo",
          "",
          "[Removed Lines]",
          "2372:         }",
          "",
          "[Added Lines]",
          "2372:         }",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "2394:           const char*",
          "2395:             value;",
          "2397:           value=GetImageOption(_image_info,\"compose\");",
          "2399:           if (value != (const char *) NULL)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "2438:       CLIWandExceptionBreak(OptionError,\"UnrecognizedOption\",option);",
          "2439:     }",
          "2440:     case 'g':",
          "2442:       if (LocaleCompare(\"gamma\",option+1) == 0)",
          "2443:         {",
          "2444:           double",
          "",
          "[Removed Lines]",
          "2441:     {",
          "",
          "[Added Lines]",
          "2441:     {",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "2488:             FUTURE: Why if no 'offset' does this resize ALL images?",
          "2489:             Also why is the setting recorded in the IMAGE non-sense!",
          "2493:               if (_image->geometry != (char *) NULL)",
          "2494:                 _image->geometry=DestroyString(_image->geometry);",
          "",
          "[Removed Lines]",
          "2491:           if (IfPlusOp)",
          "",
          "[Added Lines]",
          "2491:           if (IfPlusOp)",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "2563:             CLIWandExceptArgBreak(OptionError,\"InvalidArgument\",option,arg1);",
          "2564:           new_image=ImplodeImage(_image,geometry_info.rho,_image->interpolate,",
          "2565:                _exception);",
          "2567:         }",
          "2568:       if (LocaleCompare(\"interpolative-resize\",option+1) == 0)",
          "2569:         {",
          "",
          "[Removed Lines]",
          "2566:           break;",
          "",
          "[Added Lines]",
          "2566:           break;",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "2708:           if ((flags & SigmaValue) == 0)",
          "2709:             white_point=(double) _image->columns*_image->rows-",
          "2710:               black_point;",
          "2712:           break;",
          "2713:         }",
          "2714:       if (LocaleCompare(\"liquid-rescale\",option+1) == 0)",
          "",
          "[Removed Lines]",
          "2711:           (void) LinearStretchImage(_image,black_point,white_point,_exception);",
          "",
          "[Added Lines]",
          "2711:           (void) LinearStretchImage(_image,black_point,white_point,_exception);",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "2794:       if (LocaleCompare(\"mode\",option+1) == 0)",
          "2795:         {",
          "2798:           (void) CLISimpleOperatorImage(cli_wand,\"-statistic\",\"Mode\",arg1,exception);",
          "2799:           break;",
          "2800:         }",
          "",
          "[Removed Lines]",
          "2797:           CLIWandWarnReplaced(\"-statistic Mode\");",
          "",
          "[Added Lines]",
          "2797:           CLIWandWarnReplaced(\"-statistic Mode\");",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "3056:         {",
          "3057:           flags=ParseGeometry(arg1,&geometry_info);",
          "3058:           if ((flags & RhoValue) == 0)",
          "3060:           new_image=RotationalBlurImage(_image,geometry_info.rho,_exception);",
          "3061:           break;",
          "3062:         }",
          "",
          "[Removed Lines]",
          "3059:             CLIWandExceptArgBreak(OptionError,\"InvalidArgument\",option,arg1);",
          "",
          "[Added Lines]",
          "3059:             CLIWandExceptArgBreak(OptionError,\"InvalidArgument\",option,arg1);",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "3064:         {",
          "3065:           if (IfMagickFalse(IsGeometry(arg1)))",
          "3066:             CLIWandExceptArgBreak(OptionError,\"InvalidArgument\",option,arg1);",
          "3068:           (void) RaiseImage(_image,&geometry,IsNormalOp,_exception);",
          "3069:           break;",
          "3070:         }",
          "",
          "[Removed Lines]",
          "3067:           flags=ParsePageGeometry(_image,arg1,&geometry,_exception);",
          "",
          "[Added Lines]",
          "3067:           flags=ParsePageGeometry(_image,arg1,&geometry,_exception);",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "3111:             break;",
          "3112:           (void) RemapImage(_quantize_info,_image,remap_image,_exception);",
          "3113:           remap_image=DestroyImage(remap_image);",
          "3115:         }",
          "3116:       if (LocaleCompare(\"repage\",option+1) == 0)",
          "3117:         {",
          "",
          "[Removed Lines]",
          "3114:           break;",
          "",
          "[Added Lines]",
          "3114:           break;",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "3134:             CLIWandExceptArgBreak(OptionError,\"InvalidArgument\",option,arg1);",
          "3135:           if ((flags & SigmaValue) == 0)",
          "3136:             geometry_info.sigma=geometry_info.rho;",
          "3138:             geometry_info.sigma,_image->filter,_exception);",
          "3139:           break;",
          "3140:         }",
          "",
          "[Removed Lines]",
          "3137:           new_image=ResampleImage(_image,geometry_info.rho,",
          "",
          "[Added Lines]",
          "3137:           new_image=ResampleImage(_image,geometry_info.rho,",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "3143:           if (IfMagickFalse(IsGeometry(arg1)))",
          "3144:             CLIWandExceptArgBreak(OptionError,\"InvalidArgument\",option,arg1);",
          "3145:           (void) ParseRegionGeometry(_image,arg1,&geometry,_exception);",
          "3147:             _image->filter,_exception);",
          "3148:           break;",
          "3149:         }",
          "",
          "[Removed Lines]",
          "3146:           new_image=ResizeImage(_image,geometry.width,geometry.height,",
          "",
          "[Added Lines]",
          "3146:           new_image=ResizeImage(_image,geometry.width,geometry.height,",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "3168:           break;",
          "3169:         }",
          "3170:       CLIWandExceptionBreak(OptionError,\"UnrecognizedOption\",option);",
          "3172:     case 's':",
          "3173:     {",
          "3174:       if (LocaleCompare(\"sample\",option+1) == 0)",
          "",
          "[Removed Lines]",
          "3171:     }",
          "",
          "[Added Lines]",
          "3171:     }",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "3178:             CLIWandExceptArgBreak(OptionError,\"InvalidArgument\",option,arg1);",
          "3179:           (void) ParseRegionGeometry(_image,arg1,&geometry,_exception);",
          "3180:           new_image=SampleImage(_image,geometry.width,geometry.height,",
          "3182:           break;",
          "3183:         }",
          "3184:       if (LocaleCompare(\"scale\",option+1) == 0)",
          "",
          "[Removed Lines]",
          "3181:             _exception);",
          "",
          "[Added Lines]",
          "3181:             _exception);",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "3219:       if (LocaleCompare(\"separate\",option+1) == 0)",
          "3220:         {",
          "3223:           new_image=SeparateImages(_image,_exception);",
          "3224:           break;",
          "3225:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "3265:             geometry_info.sigma=1.0;",
          "3266:           if ((flags & XiValue) == 0)",
          "3267:             geometry_info.xi=0.0;",
          "3269:            _exception);",
          "3270:           break;",
          "3271:         }",
          "",
          "[Removed Lines]",
          "3268:           new_image=SharpenImage(_image,geometry_info.rho,geometry_info.sigma,",
          "",
          "[Added Lines]",
          "3268:           new_image=SharpenImage(_image,geometry_info.rho,geometry_info.sigma,",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "3309:             CLIWandExceptArgBreak(OptionError,\"InvalidArgument\",option,arg1);",
          "3310:           if ((flags & SigmaValue) == 0)",
          "3311:             geometry_info.sigma=1.0;",
          "3313:             geometry_info.sigma,geometry_info.xi,_exception);",
          "3314:           break;",
          "3315:         }",
          "",
          "[Removed Lines]",
          "3312:           new_image=SketchImage(_image,geometry_info.rho,",
          "",
          "[Added Lines]",
          "3312:           new_image=SketchImage(_image,geometry_info.rho,",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "3327:           if ( parse < 0 )",
          "3328:             CLIWandExceptArgBreak(OptionError,\"UnrecognizedSparseColorMethod\",",
          "3329:                 option,arg1);",
          "3331:                _exception);",
          "3332:           break;",
          "3333:         }",
          "",
          "[Removed Lines]",
          "3330:           new_image=SparseColorOption(_image,(SparseColorMethod)parse,arg2,",
          "",
          "[Added Lines]",
          "3330:           new_image=SparseColorOption(_image,(SparseColorMethod)parse,arg2,",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "3383:     case 't':",
          "3384:     {",
          "3385:       if (LocaleCompare(\"threshold\",option+1) == 0)",
          "3387:           double",
          "3388:             threshold;",
          "",
          "[Removed Lines]",
          "3386:         {",
          "",
          "[Added Lines]",
          "3386:         {",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "3392:             if (IfMagickFalse(IsGeometry(arg1)))",
          "3393:               CLIWandExceptArgBreak(OptionError,\"InvalidArgument\",option,arg1);",
          "3394:             threshold=StringToDoubleInterval(arg1,(double) QuantumRange+1.0);",
          "3396:           (void) BilevelImage(_image,threshold,_exception);",
          "3397:           break;",
          "3398:         }",
          "",
          "[Removed Lines]",
          "3395:           }",
          "",
          "[Added Lines]",
          "3395:           }",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "3401:           if (IfMagickFalse(IsGeometry(arg1)))",
          "3402:             CLIWandExceptArgBreak(OptionError,\"InvalidArgument\",option,arg1);",
          "3403:           (void) ParseRegionGeometry(_image,arg1,&geometry,_exception);",
          "3405:             _exception);",
          "3406:           break;",
          "3407:         }",
          "",
          "[Removed Lines]",
          "3404:           new_image=ThumbnailImage(_image,geometry.width,geometry.height,",
          "",
          "[Added Lines]",
          "3404:           new_image=ThumbnailImage(_image,geometry.width,geometry.height,",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "3533:             CLIWandExceptArgBreak(OptionError,\"InvalidArgument\",option,arg1);",
          "3534:           if ((flags & SigmaValue) == 0)",
          "3535:             geometry_info.sigma=1.0;",
          "3537:                _image->interpolate,_exception);",
          "3538:           break;",
          "3539:         }",
          "",
          "[Removed Lines]",
          "3536:           new_image=WaveImage(_image,geometry_info.rho,geometry_info.sigma,",
          "",
          "[Added Lines]",
          "3536:           new_image=WaveImage(_image,geometry_info.rho,geometry_info.sigma,",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "3928:             OffsetInfo",
          "3929:               offset;",
          "3931:             RectangleInfo",
          "3935:               Copy image pixels.",
          "",
          "[Removed Lines]",
          "3932:               geometry;",
          "",
          "[Added Lines]",
          "3932:               geometry;",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "3970:       if (LocaleCompare(\"duplicate\",option+1) == 0)",
          "3971:         {",
          "3972:           if (IfNormalOp)",
          "3974:               const char",
          "",
          "[Removed Lines]",
          "3973:             {",
          "",
          "[Added Lines]",
          "3973:             {",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "4073:         }",
          "4074:       if (LocaleCompare(\"insert\",option+1) == 0)",
          "4075:         {",
          "",
          "[Removed Lines]",
          "4076:           Image",
          "",
          "[Added Lines]",
          "4076:           Image",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "4258:           (void) RemapImages(_quantize_info,_images,(Image *) NULL,_exception);",
          "4259:           break;",
          "4260:         }",
          "4262:         break;",
          "4263:       if (LocaleCompare(\"morph\",option+1) == 0)",
          "4264:         {",
          "",
          "[Removed Lines]",
          "4261:       if (LocaleCompare(\"metric\",option+1) == 0)",
          "",
          "[Added Lines]",
          "4261:       if (LocaleCompare(\"metric\",option+1) == 0)",
          "",
          "---------------",
          "--- Hunk 66 ---",
          "[Context before]",
          "4389:       CLIWandExceptionBreak(OptionError,\"UnrecognizedOption\",option);",
          "4390:     }",
          "4391:     case 's':",
          "4393:       if (LocaleCompare(\"smush\",option+1) == 0)",
          "4394:         {",
          "",
          "[Removed Lines]",
          "4392:     {",
          "",
          "[Added Lines]",
          "4392:     {",
          "",
          "---------------",
          "--- Hunk 67 ---",
          "[Context before]",
          "4658:       int      argc;",
          "4659:       char     **argv;",
          "4660:       ssize_t  i;",
          "4662:       argc = 1;",
          "4663:       argv = (char **) &arg1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 68 ---",
          "[Context before]",
          "4921:           }",
          "4922:         MagickResetIterator(&cli_wand->wand);",
          "4923:         arg1=DestroyString((char *)arg1);",
          "4925:      }",
          "4926:     if (LocaleCompare(\"clone\",option+1) == 0) {",
          "4927:         Image",
          "",
          "[Removed Lines]",
          "4924:         break;",
          "",
          "[Added Lines]",
          "4924:         break;",
          "",
          "---------------"
        ]
      }
    }
  ]
}