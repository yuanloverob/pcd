{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "31046a9f1ff573fc435bf9c5319ec101a91c57c1",
      "candidate_info": {
        "commit_hash": "31046a9f1ff573fc435bf9c5319ec101a91c57c1",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/31046a9f1ff573fc435bf9c5319ec101a91c57c1",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vtab.c"
        ],
        "message": "The xDestroy method of a module might be NULL if the schema is corrupt.\n\nFossilOrigin-Name: 0457e7d1961ab1f63e31d9028a9064a895f5c3fcfb56ba25e4f37e90197e3a9f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vtab.c||src/vtab.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 136cdefb2f7b582ff1771ac7f9e733dc24c357605526cbfb1834937697c8a922",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vtab.c||src/vtab.c": [
          "File: src/vtab.c -> src/vtab.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "892:     }",
          "893:     p = vtabDisconnectAll(db, pTab);",
          "894:     xDestroy = p->pMod->pModule->xDestroy;",
          "896:     pTab->nTabRef++;",
          "899:     if( rc==SQLITE_OK ){",
          "900:       assert( pTab->pVTable==p && p->pNext==0 );",
          "",
          "[Removed Lines]",
          "897:     rc = xDestroy(p->pVtab);",
          "",
          "[Added Lines]",
          "896:     rc = xDestroy ? xDestroy(p->pVtab) : SQLITE_OK;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2712b022abeb6c3d3ca0f1253bbbcca404e52b8a",
      "candidate_info": {
        "commit_hash": "2712b022abeb6c3d3ca0f1253bbbcca404e52b8a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/2712b022abeb6c3d3ca0f1253bbbcca404e52b8a",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c",
          "test/view.test"
        ],
        "message": "Ensure that when the col in an operator like \"val IN(col)\" is a column of a view, its affinity is not used to coerce val. Fix for [0a5e2c1d].\n\nFossilOrigin-Name: 17b3d2218c02a4005d4c96471c452105b54abb25901ae62990b01f0c955135fe",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c",
          "test/view.test||test/view.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 509c1ba26a4c12c63ecf04ddfa2f175eaf4dd9b96ab7be15faebd36deb0a0a31",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3476:           pNew->iRightJoinTable = pExpr->iRightJoinTable;",
          "3477:           ExprSetProperty(pNew, EP_FromJoin);",
          "3478:         }",
          "3479:         sqlite3ExprDelete(db, pExpr);",
          "3480:         pExpr = pNew;",
          "3481:       }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3479:         if( pNew && ExprHasProperty(pExpr,EP_Generic) ){",
          "3480:           ExprSetProperty(pNew, EP_Generic);",
          "3481:         }",
          "",
          "---------------"
        ],
        "test/view.test||test/view.test": [
          "File: test/view.test -> test/view.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "761:   SELECT 1 FROM (SELECT t0.c0 AS c0, AVG(t0.c1) AS c1 FROM t0) WHERE c0<c1",
          "762: } {1}",
          "764: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "764: #-------------------------------------------------------------------------",
          "765: reset_db",
          "766: do_execsql_test view-28.0 {",
          "767:   CREATE TABLE t0(c0 TEXT);",
          "768:   CREATE VIEW v0(c0) AS SELECT t0.c0 FROM t0;",
          "769:   INSERT INTO t0(c0) VALUES ('0');",
          "770: }",
          "771: do_execsql_test view-28.1 {",
          "772:   SELECT 0 IN (c0) FROM t0;",
          "773: } {0}",
          "774: do_execsql_test view-28.2 {",
          "775:   SELECT 0 IN (c0) FROM (SELECT c0 FROM t0);",
          "776: } {0}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bd462bcc10bb1545d39359ff29cb521819ab656d",
      "candidate_info": {
        "commit_hash": "bd462bcc10bb1545d39359ff29cb521819ab656d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/bd462bcc10bb1545d39359ff29cb521819ab656d",
        "files": [
          "ext/expert/expert1.test",
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "src/vdbe.h",
          "src/vdbeaux.c",
          "src/wherecode.c",
          "test/autoindex1.test",
          "test/bestindex3.test",
          "test/cost.test",
          "test/eqp.test",
          "test/join5.test",
          "test/tkt-80ba201079.test",
          "test/where7.test",
          "test/where9.test",
          "test/whereI.test",
          "test/with3.test"
        ],
        "message": "Improvements to EXPLAIN QUERY PLAN formatting.  The MULTI-INDEX OR now shows a separate \"INDEX\" subtree for each index.  SCALAR SUBQUERY entries provide a subquery number that is related back to the .selecttrace output.\n\nFossilOrigin-Name: 7153552bac51295c56a1c42ca79d57195851e232509f9e9610375692f48c7e86",
        "before_after_code_files": [
          "ext/expert/expert1.test||ext/expert/expert1.test",
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "src/vdbe.h||src/vdbe.h",
          "src/vdbeaux.c||src/vdbeaux.c",
          "src/wherecode.c||src/wherecode.c",
          "test/autoindex1.test||test/autoindex1.test",
          "test/bestindex3.test||test/bestindex3.test",
          "test/cost.test||test/cost.test",
          "test/eqp.test||test/eqp.test",
          "test/join5.test||test/join5.test",
          "test/tkt-80ba201079.test||test/tkt-80ba201079.test",
          "test/where7.test||test/where7.test",
          "test/where9.test||test/where9.test",
          "test/whereI.test||test/whereI.test",
          "test/with3.test||test/with3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/expert/expert1.test||ext/expert/expert1.test": [
          "File: ext/expert/expert1.test -> ext/expert/expert1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "243:   CREATE INDEX t7_idx_00000062 ON t7(b);",
          "244:   CREATE INDEX t7_idx_00000061 ON t7(a);",
          "245:   MULTI-INDEX OR",
          "248: }",
          "250: # rowid terms.",
          "",
          "[Removed Lines]",
          "246:     SEARCH TABLE t7 USING INDEX t7_idx_00000061 (a=?)",
          "247:     SEARCH TABLE t7 USING INDEX t7_idx_00000062 (b=?)",
          "",
          "[Added Lines]",
          "246:     INDEX 1",
          "247:       SEARCH TABLE t7 USING INDEX t7_idx_00000061 (a=?)",
          "248:     INDEX 2",
          "249:       SEARCH TABLE t7 USING INDEX t7_idx_00000062 (b=?)",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e53781f5bdf5c7b7d91ffe76565ea2fe5d1b3a9b162b3a88a7017bbe785d4c72",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2693:     if( ExprHasProperty(pExpr, EP_Subrtn) ){",
          "2695:       sqlite3VdbeAddOp2(v, OP_Gosub, pExpr->y.sub.regReturn,",
          "2696:                         pExpr->y.sub.iAddr);",
          "2697:       sqlite3VdbeAddOp2(v, OP_OpenDup, iTab, pExpr->iTable);",
          "2698:       return;",
          "2699:     }",
          "",
          "[Removed Lines]",
          "2694:       sqlite3VdbeAddOp2(v, OP_Once, 0, sqlite3VdbeCurrentAddr(v)+3);",
          "",
          "[Added Lines]",
          "2694:       int addr = sqlite3VdbeAddOp0(v, OP_Once); VdbeCoverage(v);",
          "2695:       if( ExprHasProperty(pExpr, EP_xIsSelect) ){",
          "2696:         ExplainQueryPlan((pParse, 0, \"REUSE LIST SUBQUERY %d\",",
          "2697:               pExpr->x.pSelect->selId));",
          "2698:       }",
          "2702:       sqlite3VdbeJumpHere(v, addr);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2746:     if( ALWAYS(pEList->nExpr==nVal) ){",
          "2747:       SelectDest dest;",
          "2748:       int i;",
          "2750:       dest.zAffSdst = exprINAffinity(pParse, pExpr);",
          "2751:       pSelect->iLimit = 0;",
          "2752:       testcase( pSelect->selFlags & SF_Distinct );",
          "",
          "[Removed Lines]",
          "2749:       sqlite3SelectDestInit(&dest, SRT_Set, pExpr->iTable);",
          "",
          "[Added Lines]",
          "2754:       sqlite3SelectDestInit(&dest, SRT_Set, iTab);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2812:       if( isRowid && sqlite3ExprIsInteger(pE2, &iValToIns) ){",
          "2814:       }else{",
          "2815:         r3 = sqlite3ExprCodeTarget(pParse, pE2, r1);",
          "2816:         if( isRowid ){",
          "2817:           sqlite3VdbeAddOp2(v, OP_MustBeInt, r3,",
          "2818:                             sqlite3VdbeCurrentAddr(v)+2);",
          "2819:           VdbeCoverage(v);",
          "2821:         }else{",
          "2822:           sqlite3VdbeAddOp4(v, OP_MakeRecord, r3, 1, r2, &affinity, 1);",
          "2824:         }",
          "2825:       }",
          "2826:     }",
          "",
          "[Removed Lines]",
          "2813:         sqlite3VdbeAddOp3(v, OP_InsertInt, pExpr->iTable, r2, iValToIns);",
          "2820:           sqlite3VdbeAddOp3(v, OP_Insert, pExpr->iTable, r2, r3);",
          "2823:           sqlite3VdbeAddOp4Int(v, OP_IdxInsert, pExpr->iTable, r2, r3, 1);",
          "",
          "[Added Lines]",
          "2818:         sqlite3VdbeAddOp3(v, OP_InsertInt, iTab, r2, iValToIns);",
          "2825:           sqlite3VdbeAddOp3(v, OP_Insert, iTab, r2, r3);",
          "2828:           sqlite3VdbeAddOp4Int(v, OP_IdxInsert, iTab, r2, r3, 1);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2865:   Vdbe *v = pParse->pVdbe;",
          "2866:   assert( v!=0 );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2872:   testcase( pExpr->op==TK_EXISTS );",
          "2873:   testcase( pExpr->op==TK_SELECT );",
          "2874:   assert( pExpr->op==TK_EXISTS || pExpr->op==TK_SELECT );",
          "2875:   assert( ExprHasProperty(pExpr, EP_xIsSelect) );",
          "2876:   pSel = pExpr->x.pSelect;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2881:     if( ExprHasProperty(pExpr, EP_Subrtn) ){",
          "2882:       sqlite3VdbeAddOp2(v, OP_Gosub, pExpr->y.sub.regReturn,",
          "2883:                         pExpr->y.sub.iAddr);",
          "2884:       return pExpr->iTable;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2892:       ExplainQueryPlan((pParse, 0, \"REUSE SUBQUERY %d\", pSel->selId));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2915:   nReg = pExpr->op==TK_SELECT ? pSel->pEList->nExpr : 1;",
          "2916:   sqlite3SelectDestInit(&dest, 0, pParse->nMem+1);",
          "2917:   pParse->nMem += nReg;",
          "",
          "[Removed Lines]",
          "2907:   testcase( pExpr->op==TK_EXISTS );",
          "2908:   testcase( pExpr->op==TK_SELECT );",
          "2909:   assert( pExpr->op==TK_EXISTS || pExpr->op==TK_SELECT );",
          "2910:   assert( ExprHasProperty(pExpr, EP_xIsSelect) );",
          "2912:   pSel = pExpr->x.pSelect;",
          "2913:   ExplainQueryPlan((pParse, 1, \"%sSCALAR SUBQUERY\",",
          "2914:         addrOnce?\"\":\"CORRELATED \"));",
          "",
          "[Added Lines]",
          "2918:   ExplainQueryPlan((pParse, 1, \"%sSCALAR SUBQUERY %d\",",
          "2919:         addrOnce?\"\":\"CORRELATED \", pSel->selId));",
          "",
          "---------------"
        ],
        "src/vdbe.h||src/vdbe.h": [
          "File: src/vdbe.h -> src/vdbe.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "208:   void sqlite3VdbeExplain(Parse*,u8,const char*,...);",
          "209:   void sqlite3VdbeExplainPop(Parse*);",
          "210:   int sqlite3VdbeExplainParent(Parse*);",
          "211: # define ExplainQueryPlan(P)        sqlite3VdbeExplain P",
          "212: # define ExplainQueryPlanPop(P)     sqlite3VdbeExplainPop(P)",
          "213: # define ExplainQueryPlanParent(P)  sqlite3VdbeExplainParent(P)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "211:   void sqlite3ExplainBreakpoint(const char*,const char*);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "215: # define ExplainQueryPlan(P)",
          "216: # define ExplainQueryPlanPop(P)",
          "217: # define ExplainQueryPlanParent(P) 0",
          "218: #endif",
          "219: void sqlite3VdbeAddParseSchemaOp(Vdbe*,int,char*);",
          "220: void sqlite3VdbeChangeOpcode(Vdbe*, u32 addr, u8);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "220: #endif",
          "221: #if defined(SQLITE_DEBUG) && !defined(SQLITE_OMIT_EXPLAIN)",
          "222:   void sqlite3ExplainBreakpoint(const char*,const char*);",
          "223: #else",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "350: }",
          "358: void sqlite3VdbeExplain(Parse *pParse, u8 bPush, const char *zFmt, ...){",
          "360:     char *zMsg;",
          "361:     Vdbe *v;",
          "362:     va_list ap;",
          "",
          "[Removed Lines]",
          "359:   if( pParse->explain==2 ){",
          "",
          "[Added Lines]",
          "356: #if defined(SQLITE_DEBUG)",
          "357: void sqlite3ExplainBreakpoint(const char *z1, const char *z2){",
          "358:   (void)z1;",
          "359:   (void)z2;",
          "360: }",
          "361: #endif",
          "370: #if !defined(SQLITE_DEBUG)",
          "371:   if( pParse->explain==2 )",
          "372: #endif",
          "373:   {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "368:     iThis = v->nOp;",
          "369:     sqlite3VdbeAddOp4(v, OP_Explain, iThis, pParse->addrExplain, 0,",
          "370:                       zMsg, P4_DYNAMIC);",
          "372:   }",
          "373: }",
          "",
          "[Removed Lines]",
          "371:     if( bPush) pParse->addrExplain = iThis;",
          "",
          "[Added Lines]",
          "385:     sqlite3ExplainBreakpoint(bPush?\"PUSH\":\"\", sqlite3VdbeGetOp(v,-1)->p4.z);",
          "386:     if( bPush){",
          "387:       pParse->addrExplain = iThis;",
          "388:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "378: void sqlite3VdbeExplainPop(Parse *pParse){",
          "379:   pParse->addrExplain = sqlite3VdbeExplainParent(pParse);",
          "380: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "396:   sqlite3ExplainBreakpoint(\"POP\", 0);",
          "",
          "---------------"
        ],
        "src/wherecode.c||src/wherecode.c": [
          "File: src/wherecode.c -> src/wherecode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "213:     }",
          "214: #endif",
          "215:     zMsg = sqlite3StrAccumFinish(&str);",
          "216:     ret = sqlite3VdbeAddOp4(v, OP_Explain, sqlite3VdbeCurrentAddr(v),",
          "217:                             pParse->addrExplain, 0, zMsg,P4_DYNAMIC);",
          "218:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "216:     sqlite3ExplainBreakpoint(\"\",zMsg);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1951:           pOrExpr = pAndExpr;",
          "1952:         }",
          "1954:         WHERETRACE(0xffff, (\"Subplan for OR-clause:\\n\"));",
          "1955:         pSubWInfo = sqlite3WhereBegin(pParse, pOrTab, pOrExpr, 0, 0,",
          "1956:                                       wctrlFlags, iCovCur);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1955:         ExplainQueryPlan((pParse, 1, \"INDEX %d\", ii+1));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2056:           sqlite3WhereEnd(pSubWInfo);",
          "2057:         }",
          "2058:       }",
          "2059:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2059:           ExplainQueryPlanPop(pParse);",
          "",
          "---------------"
        ],
        "test/autoindex1.test||test/autoindex1.test": [
          "File: test/autoindex1.test -> test/autoindex1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "280:   |--MATERIALIZE xxxxxx",
          "281:   |  |--SCAN TABLE sheep AS s",
          "282:   |  |--SEARCH TABLE flock_owner AS prev USING INDEX sqlite_autoindex_flock_owner_1 (flock_no=? AND owner_change_date<?)",
          "284:   |     `--SEARCH TABLE flock_owner AS later USING COVERING INDEX sqlite_autoindex_flock_owner_1 (flock_no=? AND owner_change_date>? AND owner_change_date<?)",
          "285:   |--SCAN TABLE sheep AS x USING INDEX sheep_reg_flock_index",
          "286:   `--SEARCH SUBQUERY xxxxxx AS y USING AUTOMATIC COVERING INDEX (sheep_no=?)",
          "",
          "[Removed Lines]",
          "283:   |  `--CORRELATED SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "283:   |  `--CORRELATED SCALAR SUBQUERY xxxxxx",
          "",
          "---------------"
        ],
        "test/bestindex3.test||test/bestindex3.test": [
          "File: test/bestindex3.test -> test/bestindex3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "90: } {",
          "91:   QUERY PLAN",
          "92:   `--MULTI-INDEX OR",
          "95: }",
          "97: do_eqp_test 1.4 {",
          "",
          "[Removed Lines]",
          "93:      |--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:a EQ ?",
          "94:      `--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:b EQ ?",
          "",
          "[Added Lines]",
          "93:      |--INDEX 1",
          "94:      |  `--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:a EQ ?",
          "95:      `--INDEX 2",
          "96:         `--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:b EQ ?",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99: } {",
          "100:   QUERY PLAN",
          "101:   `--MULTI-INDEX OR",
          "104: }",
          "106: do_execsql_test 1.5 {",
          "",
          "[Removed Lines]",
          "102:      |--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:a LIKE ?",
          "103:      `--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:b EQ ?",
          "",
          "[Added Lines]",
          "104:      |--INDEX 1",
          "105:      |  `--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:a LIKE ?",
          "106:      `--INDEX 2",
          "107:         `--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:b EQ ?",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "150:   } [string map {\"\\n  \" \\n} {",
          "151:     QUERY PLAN",
          "152:     `--MULTI-INDEX OR",
          "155:   }]",
          "156: }",
          "",
          "[Removed Lines]",
          "153:        |--SEARCH TABLE t2 USING INDEX t2x (x>? AND x<?)",
          "154:        `--SEARCH TABLE t2 USING INDEX t2y (y=?)",
          "",
          "[Added Lines]",
          "157:        |--INDEX 1",
          "158:        |  `--SEARCH TABLE t2 USING INDEX t2x (x>? AND x<?)",
          "159:        `--INDEX 2",
          "160:           `--SEARCH TABLE t2 USING INDEX t2y (y=?)",
          "",
          "---------------"
        ],
        "test/cost.test||test/cost.test": [
          "File: test/cost.test -> test/cost.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "58: } {",
          "59:   QUERY PLAN",
          "60:   |--MULTI-INDEX OR",
          "64:   `--USE TEMP B-TREE FOR ORDER BY",
          "65: }",
          "",
          "[Removed Lines]",
          "61:   |  |--SEARCH TABLE t5 USING INDEX t5b (b=?)",
          "62:   |  |--SEARCH TABLE t5 USING INDEX t5c (c=?)",
          "63:   |  `--SEARCH TABLE t5 USING INDEX t5d (d=?)",
          "",
          "[Added Lines]",
          "61:   |  |--INDEX 1",
          "62:   |  |  `--SEARCH TABLE t5 USING INDEX t5b (b=?)",
          "63:   |  |--INDEX 2",
          "64:   |  |  `--SEARCH TABLE t5 USING INDEX t5c (c=?)",
          "65:   |  `--INDEX 3",
          "66:   |     `--SEARCH TABLE t5 USING INDEX t5d (d=?)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "124: } {",
          "125:   QUERY PLAN",
          "126:   |--MULTI-INDEX OR",
          "129:   `--USE TEMP B-TREE FOR ORDER BY",
          "130: }",
          "",
          "[Removed Lines]",
          "127:   |  |--SEARCH TABLE t3 USING INDEX t3i1 (b>? AND b<?)",
          "128:   |  `--SEARCH TABLE t3 USING INDEX t3i2 (c=?)",
          "",
          "[Added Lines]",
          "130:   |  |--INDEX 1",
          "131:   |  |  `--SEARCH TABLE t3 USING INDEX t3i1 (b>? AND b<?)",
          "132:   |  `--INDEX 2",
          "133:   |     `--SEARCH TABLE t3 USING INDEX t3i2 (c=?)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "149: } {",
          "150:   QUERY PLAN",
          "151:   |--MULTI-INDEX OR",
          "154:   `--USE TEMP B-TREE FOR ORDER BY",
          "155: }",
          "",
          "[Removed Lines]",
          "152:   |  |--SEARCH TABLE t1 USING INDEX t1b (b>? AND b<?)",
          "153:   |  `--SEARCH TABLE t1 USING INDEX t1b (b=?)",
          "",
          "[Added Lines]",
          "157:   |  |--INDEX 1",
          "158:   |  |  `--SEARCH TABLE t1 USING INDEX t1b (b>? AND b<?)",
          "159:   |  `--INDEX 2",
          "160:   |     `--SEARCH TABLE t1 USING INDEX t1b (b=?)",
          "",
          "---------------"
        ],
        "test/eqp.test||test/eqp.test": [
          "File: test/eqp.test -> test/eqp.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: } {",
          "46:   QUERY PLAN",
          "47:   |--MULTI-INDEX OR",
          "50:   `--SCAN TABLE t2",
          "51: }",
          "52: do_eqp_test 1.3 {",
          "",
          "[Removed Lines]",
          "48:   |  |--SEARCH TABLE t1 USING INDEX i1 (a=?)",
          "49:   |  `--SEARCH TABLE t1 USING INDEX i2 (b=?)",
          "",
          "[Added Lines]",
          "48:   |  |--INDEX 1",
          "49:   |  |  `--SEARCH TABLE t1 USING INDEX i1 (a=?)",
          "50:   |  `--INDEX 2",
          "51:   |     `--SEARCH TABLE t1 USING INDEX i2 (b=?)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55:   QUERY PLAN",
          "56:   |--SCAN TABLE t2",
          "57:   `--MULTI-INDEX OR",
          "60: }",
          "61: do_eqp_test 1.3 {",
          "62:   SELECT a FROM t1 ORDER BY a",
          "",
          "[Removed Lines]",
          "58:      |--SEARCH TABLE t1 USING INDEX i1 (a=?)",
          "59:      `--SEARCH TABLE t1 USING INDEX i2 (b=?)",
          "",
          "[Added Lines]",
          "60:      |--INDEX 1",
          "61:      |  `--SEARCH TABLE t1 USING INDEX i1 (a=?)",
          "62:      `--INDEX 2",
          "63:         `--SEARCH TABLE t1 USING INDEX i2 (b=?)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "225: } {",
          "226:   QUERY PLAN",
          "227:   |--SCAN TABLE t1",
          "229:      `--SCAN TABLE t1 AS sub",
          "230: }",
          "231: do_eqp_test 3.1.2 {",
          "",
          "[Removed Lines]",
          "228:   `--SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "232:   `--SCALAR SUBQUERY xxxxxx",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "233: } {",
          "234:   QUERY PLAN",
          "235:   |--SCAN TABLE t1",
          "237:      `--SCAN TABLE t1 AS sub",
          "238: }",
          "239: do_eqp_test 3.1.3 {",
          "",
          "[Removed Lines]",
          "236:   `--SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "240:   `--SCALAR SUBQUERY xxxxxx",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "241: } {",
          "242:   QUERY PLAN",
          "243:   |--SCAN TABLE t1",
          "245:      |--SCAN TABLE t1 AS sub",
          "246:      `--USE TEMP B-TREE FOR ORDER BY",
          "247: }",
          "",
          "[Removed Lines]",
          "244:   `--SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "248:   `--SCALAR SUBQUERY xxxxxx",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "250: } {",
          "251:   QUERY PLAN",
          "252:   |--SCAN TABLE t1",
          "254:      `--SCAN TABLE t2 USING COVERING INDEX t2i1",
          "255: }",
          "",
          "[Removed Lines]",
          "253:   `--SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "257:   `--SCALAR SUBQUERY xxxxxx",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "302: } {",
          "303:   QUERY PLAN",
          "304:   |--SCAN TABLE t1",
          "306:      `--SCAN TABLE t2",
          "307: }",
          "",
          "[Removed Lines]",
          "305:   `--CORRELATED SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "309:   `--CORRELATED SCALAR SUBQUERY xxxxxx",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "813:   |--MATERIALIZE xxxxxx",
          "814:   |  |--SCAN TABLE forumpost AS x USING INDEX forumthread",
          "815:   |  |--USING ROWID SEARCH ON TABLE private FOR IN-OPERATOR",
          "817:   |  |  |--SEARCH TABLE forumpost USING COVERING INDEX forumthread (froot=?)",
          "818:   |  |  `--USING ROWID SEARCH ON TABLE private FOR IN-OPERATOR",
          "819:   |  `--USE TEMP B-TREE FOR ORDER BY",
          "",
          "[Removed Lines]",
          "816:   |  |--CORRELATED SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "820:   |  |--CORRELATED SCALAR SUBQUERY xxxxxx",
          "",
          "---------------"
        ],
        "test/join5.test||test/join5.test": [
          "File: test/join5.test -> test/join5.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "267:   QUERY PLAN",
          "268:   |--SCAN TABLE t1",
          "269:   `--MULTI-INDEX OR",
          "272: }",
          "274: do_execsql_test 7.3 {",
          "",
          "[Removed Lines]",
          "270:      |--SEARCH TABLE t2 USING INDEX t2xy (x=? AND y=?)",
          "271:      `--SEARCH TABLE t2 USING INDEX t2xy (x=? AND y=?)",
          "",
          "[Added Lines]",
          "270:      |--INDEX 1",
          "271:      |  `--SEARCH TABLE t2 USING INDEX t2xy (x=? AND y=?)",
          "272:      `--INDEX 2",
          "273:         `--SEARCH TABLE t2 USING INDEX t2xy (x=? AND y=?)",
          "",
          "---------------"
        ],
        "test/tkt-80ba201079.test||test/tkt-80ba201079.test": [
          "File: test/tkt-80ba201079.test -> test/tkt-80ba201079.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "110: } {300 object_change 2048}",
          "111: do_test tkt-80ba2-201 {",
          "112:   db eval {",
          "113:     CREATE INDEX timeline_entry_id_idx on timeline(entry_id);",
          "114:     SELECT entry_type,",
          "115:            entry_types.name,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "113: PRAGMA vdbe_debug=on;",
          "114: PRAGMA vdbe_addoptrace=on;",
          "",
          "---------------"
        ],
        "test/where7.test||test/where7.test": [
          "File: test/where7.test -> test/where7.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "23353: } {",
          "23354:   QUERY PLAN",
          "23355:   |--MULTI-INDEX OR",
          "23358:   |--SEARCH TABLE t302 USING INDEX t302_c8_c3 (c8=? AND c3>?)",
          "23359:   `--USE TEMP B-TREE FOR ORDER BY",
          "23360: }",
          "",
          "[Removed Lines]",
          "23356:   |  |--SEARCH TABLE t301 USING COVERING INDEX t301_c4 (c4=?)",
          "23357:   |  `--SEARCH TABLE t301 USING INTEGER PRIMARY KEY (rowid=?)",
          "",
          "[Added Lines]",
          "23356:   |  |--INDEX 1",
          "23357:   |  |  `--SEARCH TABLE t301 USING COVERING INDEX t301_c4 (c4=?)",
          "23358:   |  `--INDEX 2",
          "23359:   |     `--SEARCH TABLE t301 USING INTEGER PRIMARY KEY (rowid=?)",
          "",
          "---------------"
        ],
        "test/where9.test||test/where9.test": [
          "File: test/where9.test -> test/where9.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "364:     QUERY PLAN",
          "365:     |--SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid=?)",
          "366:     `--MULTI-INDEX OR",
          "369:   }]",
          "370:   do_eqp_test where9-3.2 {",
          "371:     SELECT coalesce(t2.a,9999)",
          "",
          "[Removed Lines]",
          "367:        |--SEARCH TABLE t2 USING INDEX t2d (d=?)",
          "368:        `--SEARCH TABLE t2 USING COVERING INDEX t2f (f=?)",
          "",
          "[Added Lines]",
          "367:        |--INDEX 1",
          "368:        |  `--SEARCH TABLE t2 USING INDEX t2d (d=?)",
          "369:        `--INDEX 3",
          "370:           `--SEARCH TABLE t2 USING COVERING INDEX t2f (f=?)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "375:     QUERY PLAN",
          "376:     |--SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid=?)",
          "377:     `--MULTI-INDEX OR",
          "380:   }]",
          "381: }",
          "",
          "[Removed Lines]",
          "378:        |--SEARCH TABLE t2 USING INDEX t2d (d=?)",
          "379:        `--SEARCH TABLE t2 USING COVERING INDEX t2f (f=?)",
          "",
          "[Added Lines]",
          "380:        |--INDEX 1",
          "381:        |  `--SEARCH TABLE t2 USING INDEX t2d (d=?)",
          "382:        `--INDEX 2",
          "383:           `--SEARCH TABLE t2 USING COVERING INDEX t2f (f=?)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "456: } {",
          "457:   QUERY PLAN",
          "458:   `--MULTI-INDEX OR",
          "461: }",
          "463: # In contrast, b=1000 is preferred over any OR-clause.",
          "",
          "[Removed Lines]",
          "459:      |--SEARCH TABLE t1 USING INDEX t1c (c=?)",
          "460:      `--SEARCH TABLE t1 USING INDEX t1d (d=?)",
          "",
          "[Added Lines]",
          "463:      |--INDEX 1",
          "464:      |  `--SEARCH TABLE t1 USING INDEX t1c (c=?)",
          "465:      `--INDEX 2",
          "466:         `--SEARCH TABLE t1 USING INDEX t1d (d=?)",
          "",
          "---------------"
        ],
        "test/whereI.test||test/whereI.test": [
          "File: test/whereI.test -> test/whereI.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: } {",
          "32:   QUERY PLAN",
          "33:   `--MULTI-INDEX OR",
          "36: }",
          "38: do_execsql_test 1.2 {",
          "",
          "[Removed Lines]",
          "34:      |--SEARCH TABLE t1 USING INDEX i1 (b=?)",
          "35:      `--SEARCH TABLE t1 USING INDEX i2 (c=?)",
          "",
          "[Added Lines]",
          "34:      |--INDEX 1",
          "35:      |  `--SEARCH TABLE t1 USING INDEX i1 (b=?)",
          "36:      `--INDEX 2",
          "37:         `--SEARCH TABLE t1 USING INDEX i2 (c=?)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61: } {",
          "62:   QUERY PLAN",
          "63:   `--MULTI-INDEX OR",
          "66: }",
          "68: do_execsql_test 2.2 {",
          "",
          "[Removed Lines]",
          "64:      |--SEARCH TABLE t2 USING INDEX i3 (b=?)",
          "65:      `--SEARCH TABLE t2 USING INDEX i4 (c=?)",
          "",
          "[Added Lines]",
          "66:      |--INDEX 1",
          "67:      |  `--SEARCH TABLE t2 USING INDEX i3 (b=?)",
          "68:      `--INDEX 2",
          "69:         `--SEARCH TABLE t2 USING INDEX i4 (c=?)",
          "",
          "---------------"
        ],
        "test/with3.test||test/with3.test": [
          "File: test/with3.test -> test/with3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:   |--MATERIALIZE xxxxxx",
          "121:   |  |--SETUP",
          "122:   |  |  |--SCAN CONSTANT ROW",
          "124:   |  |     `--SCAN TABLE w2",
          "125:   |  `--RECURSIVE STEP",
          "126:   |     |--SCAN TABLE w1",
          "",
          "[Removed Lines]",
          "123:   |  |  `--SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "123:   |  |  `--SCALAR SUBQUERY xxxxxx",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8c9bcb2328b6c2fdd41520911bf67e0cb199f995",
      "candidate_info": {
        "commit_hash": "8c9bcb2328b6c2fdd41520911bf67e0cb199f995",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8c9bcb2328b6c2fdd41520911bf67e0cb199f995",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c",
          "test/orderbyA.test",
          "test/tkt-b75a9ca6b0.test"
        ],
        "message": "Allow SQLite to omit redundant ORDER BY sorts in the case where a SELECT statement has GROUP BY and ORDER BY clauses that use the same expressions, even when the ORDER BY expressions are marked \"DESC\".\n\nFossilOrigin-Name: 20f7951bb238ddc0b8932a55145df426b6fdf7b8631e069345902c853c90f191",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c",
          "test/orderbyA.test||test/orderbyA.test",
          "test/tkt-b75a9ca6b0.test||test/tkt-b75a9ca6b0.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c17078af6046ba3cb0d7819c915a800c851d7368e13d149140db2a124df32bab",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6223:       }",
          "6224:       assert( 66==sqlite3LogEst(100) );",
          "6225:       if( p->nSelectRow>66 ) p->nSelectRow = 66;",
          "6226:     }else{",
          "6227:       assert( 0==sqlite3LogEst(1) );",
          "6228:       p->nSelectRow = 0;",
          "6229:     }",
          "6244:     addrEnd = sqlite3VdbeMakeLabel(pParse);",
          "",
          "[Removed Lines]",
          "6239:     if( sqlite3ExprListCompare(pGroupBy, sSort.pOrderBy, -1)==0 ){",
          "6240:       orderByGrp = 1;",
          "6241:     }",
          "",
          "[Added Lines]",
          "6235:       if( sSort.pOrderBy && pGroupBy->nExpr==sSort.pOrderBy->nExpr ){",
          "6236:         int i;",
          "6242:         for(i=0; i<pGroupBy->nExpr; i++){",
          "6243:           u8 sortFlags = sSort.pOrderBy->a[i].sortFlags & KEYINFO_ORDER_DESC;",
          "6244:           pGroupBy->a[i].sortFlags = sortFlags;",
          "6245:         }",
          "6246:         if( sqlite3ExprListCompare(pGroupBy, sSort.pOrderBy, -1)==0 ){",
          "6247:           orderByGrp = 1;",
          "6248:         }",
          "6249:       }",
          "",
          "---------------"
        ],
        "test/orderbyA.test||test/orderbyA.test": [
          "File: test/orderbyA.test -> test/orderbyA.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # 2019-09-21",
          "2: #",
          "3: # The author disclaims copyright to this source code.  In place of",
          "4: # a legal notice, here is a blessing:",
          "5: #",
          "6: #    May you do good and not evil.",
          "7: #    May you find forgiveness for yourself and forgive others.",
          "8: #    May you share freely, never taking more than you give.",
          "9: #",
          "10: #***********************************************************************",
          "11: # This file implements regression tests for SQLite library.",
          "12: #",
          "13: # Specifically, it tests cases where the expressions in a GROUP BY",
          "14: # clause are the same as those in the ORDER BY clause.",
          "15: #",
          "17: set testdir [file dirname $argv0]",
          "18: source $testdir/tester.tcl",
          "19: set ::testprefix orderbyA",
          "21: proc do_sortcount_test {tn sql cnt res} {",
          "22:   set eqp [execsql \"EXPLAIN QUERY PLAN $sql\"]",
          "23:   set rcnt [regexp -all {USE TEMP} $eqp]",
          "24:   uplevel [list do_test         $tn.1 [list set {} $rcnt] $cnt]",
          "25:   uplevel [list do_execsql_test $tn.2 $sql $res]",
          "26: }",
          "28: do_execsql_test 1.0 {",
          "29:   CREATE TABLE t1(a, b, c);",
          "30:   INSERT INTO t1 VALUES('one',   1, 11);",
          "31:   INSERT INTO t1 VALUES('three', 7, 11);",
          "32:   INSERT INTO t1 VALUES('one',   2, 11);",
          "33:   INSERT INTO t1 VALUES('one',   3, 11);",
          "34:   INSERT INTO t1 VALUES('two',   4, 11);",
          "35:   INSERT INTO t1 VALUES('two',   6, 11);",
          "36:   INSERT INTO t1 VALUES('three', 8, 11);",
          "37:   INSERT INTO t1 VALUES('two',   5, 11);",
          "38:   INSERT INTO t1 VALUES('three', 9, 11);",
          "39: }",
          "41: foreach {tn idx} {",
          "42:   1 {}",
          "43:   2 {CREATE INDEX i1 ON t1(a)}",
          "44:   3 {CREATE INDEX i1 ON t1(a DESC)}",
          "45: } {",
          "46:   execsql { DROP INDEX IF EXISTS i1 }",
          "47:   execsql $idx",
          "49:   # $match is the number of temp-table sorts we expect if the GROUP BY",
          "50:   # can use the same sort order as the ORDER BY. $nomatch is the number",
          "51:   # of expected sorts if the GROUP BY and ORDER BY are not compatible.",
          "52:   set match   1",
          "53:   set nomatch 2",
          "54:   if {$tn>=2} {",
          "55:     set match   0",
          "56:     set nomatch 1",
          "57:   }",
          "59:   do_sortcount_test 1.$tn.1.1 {",
          "60:     SELECT a, sum(b) FROM t1 GROUP BY a ORDER BY a",
          "61:   } $match {one 6 three 24 two 15}",
          "62:   do_sortcount_test 1.$tn.1.2 {",
          "63:     SELECT a, sum(b) FROM t1 GROUP BY a ORDER BY a DESC",
          "64:   } $match {two 15 three 24 one 6}",
          "66:   do_sortcount_test 1.$tn.2.1 {",
          "67:     SELECT a, sum(b) FROM t1 GROUP BY a ORDER BY a||''",
          "68:   } $nomatch {one 6 three 24 two 15}",
          "69:   do_sortcount_test 1.$tn.2.2 {",
          "70:     SELECT a, sum(b) FROM t1 GROUP BY a ORDER BY a||'' DESC",
          "71:   } $nomatch {two 15 three 24 one 6}",
          "73:   do_sortcount_test 1.$tn.3.1 {",
          "74:     SELECT a, sum(b) FROM t1 GROUP BY a ORDER BY a NULLS LAST",
          "75:   } $nomatch {one 6 three 24 two 15}",
          "76:   do_sortcount_test 1.$tn.3.2 {",
          "77:     SELECT a, sum(b) FROM t1 GROUP BY a ORDER BY a DESC NULLS FIRST",
          "78:   } $nomatch {two 15 three 24 one 6}",
          "79: }",
          "81: #-------------------------------------------------------------------------",
          "82: do_execsql_test 2.0 {",
          "83:   CREATE TABLE t2(a, b, c);",
          "84:   INSERT INTO t2 VALUES(1, 'one', 1);",
          "85:   INSERT INTO t2 VALUES(1, 'two', 2);",
          "86:   INSERT INTO t2 VALUES(1, 'one', 3);",
          "87:   INSERT INTO t2 VALUES(1, 'two', 4);",
          "88:   INSERT INTO t2 VALUES(1, 'one', 5);",
          "89:   INSERT INTO t2 VALUES(1, 'two', 6);",
          "91:   INSERT INTO t2 VALUES(2, 'one', 7);",
          "92:   INSERT INTO t2 VALUES(2, 'two', 8);",
          "93:   INSERT INTO t2 VALUES(2, 'one', 9);",
          "94:   INSERT INTO t2 VALUES(2, 'two', 10);",
          "95:   INSERT INTO t2 VALUES(2, 'one', 11);",
          "96:   INSERT INTO t2 VALUES(2, 'two', 12);",
          "98:   INSERT INTO t2 VALUES(NULL, 'one', 13);",
          "99:   INSERT INTO t2 VALUES(NULL, 'two', 14);",
          "100:   INSERT INTO t2 VALUES(NULL, 'one', 15);",
          "101:   INSERT INTO t2 VALUES(NULL, 'two', 16);",
          "102:   INSERT INTO t2 VALUES(NULL, 'one', 17);",
          "103:   INSERT INTO t2 VALUES(NULL, 'two', 18);",
          "104: }",
          "106: foreach {tn idx} {",
          "107:   1 {}",
          "109:   2 { CREATE INDEX i2 ON t2(a, b)           }",
          "110:   3 { CREATE INDEX i2 ON t2(a DESC, b DESC) }",
          "112:   4 { CREATE INDEX i2 ON t2(a, b DESC)      }",
          "113:   5 { CREATE INDEX i2 ON t2(a DESC, b)      }",
          "114: } {",
          "115:   execsql { DROP INDEX IF EXISTS i2 }",
          "116:   execsql $idx",
          "119:   set nSort [expr ($tn==2 || $tn==3) ? 0 : 1]",
          "120:   do_sortcount_test 2.$tn.1.1 {",
          "121:     SELECT a, b, sum(c) FROM t2 GROUP BY a, b ORDER BY a, b;",
          "122:   } $nSort {{} one 45  {} two 48  1 one 9  1 two 12  2 one 27  2 two 30}",
          "123:   do_sortcount_test 2.$tn.1.2 {",
          "124:     SELECT a, b, sum(c) FROM t2 GROUP BY a, b ORDER BY a DESC, b DESC;",
          "125:   } $nSort {2 two 30  2 one 27  1 two 12  1 one 9  {} two 48  {} one 45}",
          "127:   set nSort [expr ($tn==4 || $tn==5) ? 0 : 1]",
          "128:   do_sortcount_test 2.$tn.2.1 {",
          "129:     SELECT a, b, sum(c) FROM t2 GROUP BY a, b ORDER BY a, b DESC;",
          "130:   } $nSort { {} two 48  {} one 45  1 two 12  1 one 9  2 two 30 2 one 27 }",
          "131:   do_sortcount_test 2.$tn.2.2 {",
          "132:     SELECT a, b, sum(c) FROM t2 GROUP BY a, b ORDER BY a DESC, b;",
          "133:   } $nSort { 2 one 27  2 two 30  1 one 9  1 two 12  {} one 45 {} two 48 }",
          "135:   # ORDER BY can never piggyback on the GROUP BY sort if it uses",
          "136:   # non-standard NULLS behaviour.",
          "137:   set nSort [expr $tn==1 ? 2 : 1]",
          "138:   do_sortcount_test 2.$tn.3.1 {",
          "139:     SELECT a, b, sum(c) FROM t2 GROUP BY a, b ORDER BY a, b DESC NULLS FIRST;",
          "140:   } $nSort { {} two 48  {} one 45  1 two 12  1 one 9  2 two 30 2 one 27 }",
          "141:   do_sortcount_test 2.$tn.3.2 {",
          "142:     SELECT a, b, sum(c) FROM t2 GROUP BY a, b ORDER BY a DESC, b NULLS LAST;",
          "143:   } $nSort { 2 one 27  2 two 30  1 one 9  1 two 12  {} one 45 {} two 48 }",
          "144: }",
          "147: finish_test",
          "",
          "---------------"
        ],
        "test/tkt-b75a9ca6b0.test||test/tkt-b75a9ca6b0.test": [
          "File: test/tkt-b75a9ca6b0.test -> test/tkt-b75a9ca6b0.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "60:   {1 3  2 2  3 1} {$idxscan*$sort}",
          "62:   8 \"SELECT * FROM t1 GROUP BY x, y ORDER BY x DESC, y DESC\"",
          "65:   9 \"SELECT * FROM t1 GROUP BY x, y ORDER BY x ASC, y ASC\"",
          "66:   {1 3  2 2  3 1} {$idxscan}",
          "",
          "[Removed Lines]",
          "63:   {3 1  2 2  1 3} {$idxscan*$sort}",
          "",
          "[Added Lines]",
          "63:   {3 1  2 2  1 3} {$idxscan}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bcf1f41a62808f74a318f921aae28b2ff4f03712",
      "candidate_info": {
        "commit_hash": "bcf1f41a62808f74a318f921aae28b2ff4f03712",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/bcf1f41a62808f74a318f921aae28b2ff4f03712",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "Add new test cases in test/fuzzdata8.db\n\nFossilOrigin-Name: 97bdc090f30610cc5dd29101452d1647550387f9c6f742e50f1e07c3cf68a147",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 174da3c32c9caebd642c31cb594597ccd5bb2a7fc501b1f49aef0b7b4765bfca",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}