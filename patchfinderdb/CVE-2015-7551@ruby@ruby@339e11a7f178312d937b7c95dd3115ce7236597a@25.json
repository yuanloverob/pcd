{
  "cve_id": "CVE-2015-7551",
  "cve_desc": "The Fiddle::Handle implementation in ext/fiddle/handle.c in Ruby before 2.0.0-p648, 2.1 before 2.1.8, and 2.2 before 2.2.4, as distributed in Apple OS X before 10.11.4 and other products, mishandles tainting, which allows context-dependent attackers to execute arbitrary code or cause a denial of service (application crash) via a crafted string, related to the DL module and the libffi library.  NOTE: this vulnerability exists because of a CVE-2009-5147 regression.",
  "repo": "ruby/ruby",
  "patch_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
  "patch_info": {
    "commit_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
    "repo": "ruby/ruby",
    "commit_url": "https://github.com/ruby/ruby/commit/339e11a7f178312d937b7c95dd3115ce7236597a",
    "files": [
      "ChangeLog",
      "ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb",
      "version.h"
    ],
    "message": "merge revision(s): 53153 and 23405@ruby_1_9_1\n\n\t* ext/fiddle/handle.c: check tainted string arguments.\n\t  Patch provided by tenderlove and nobu.\n\n\t* test/fiddle/test_handle.rb (class TestHandle): add test for above.\n\n\t* ext/dl/handle.c (rb_dlhandle_initialize): prohibits DL::dlopen\n\t  with a tainted name of library.\n\t  Patch by sheepman <sheepman AT sheepman.sakura.ne.jp>.\n\n\t* ext/dl/handle.c (rb_dlhandle_sym): ditto\n\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53156 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
    "before_after_code_files": [
      "ext/fiddle/handle.c||ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb",
      "version.h||version.h"
    ]
  },
  "patch_diff": {
    "ext/fiddle/handle.c||ext/fiddle/handle.c": [
      "File: ext/fiddle/handle.c -> ext/fiddle/handle.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #include <ruby.h>",
      "2: #include <fiddle.h>",
      "4: VALUE rb_cHandle;",
      "6: struct dl_handle {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4: #define SafeStringValueCStr(v) (rb_check_safe_obj(rb_string_value(&v)), StringValueCStr(v))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "143:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "144:  break;",
      "145:       case 1:",
      "147:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "148:  break;",
      "149:       case 2:",
      "151:  cflag = NUM2INT(flag);",
      "152:  break;",
      "153:       default:",
      "",
      "[Removed Lines]",
      "146:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "150:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "",
      "[Added Lines]",
      "148:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "152:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "263:     return PTR2NUM(fiddle_handle);",
      "264: }",
      "",
      "[Removed Lines]",
      "266: static VALUE fiddle_handle_sym(void *handle, const char *symbol);",
      "",
      "[Added Lines]",
      "268: static VALUE fiddle_handle_sym(void *handle, VALUE symbol);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "282:  rb_raise(rb_eFiddleError, \"closed handle\");",
      "283:     }",
      "286: }",
      "288: #ifndef RTLD_NEXT",
      "",
      "[Removed Lines]",
      "285:     return fiddle_handle_sym(fiddle_handle->ptr, StringValueCStr(sym));",
      "",
      "[Added Lines]",
      "287:     return fiddle_handle_sym(fiddle_handle->ptr, sym);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "305: static VALUE",
      "306: rb_fiddle_handle_s_sym(VALUE self, VALUE sym)",
      "307: {",
      "309: }",
      "311: static VALUE",
      "313: {",
      "314: #if defined(HAVE_DLERROR)",
      "315:     const char *err;",
      "",
      "[Removed Lines]",
      "308:     return fiddle_handle_sym(RTLD_NEXT, StringValueCStr(sym));",
      "312: fiddle_handle_sym(void *handle, const char *name)",
      "",
      "[Added Lines]",
      "310:     return fiddle_handle_sym(RTLD_NEXT, sym);",
      "314: fiddle_handle_sym(void *handle, VALUE symbol)",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "318: # define CHECK_DLERROR",
      "319: #endif",
      "320:     void (*func)();",
      "322:     rb_secure(2);",
      "323: #ifdef HAVE_DLERROR",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:     const char *name = SafeStringValueCStr(symbol);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "367:     }",
      "368: #endif",
      "369:     if( !func ){",
      "371:     }",
      "373:     return PTR2NUM(func);",
      "",
      "[Removed Lines]",
      "370:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%s\\\"\", name);",
      "",
      "[Added Lines]",
      "373:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%\"PRIsVALUE\"\\\"\", symbol);",
      "",
      "---------------"
    ],
    "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb": [
      "File: test/fiddle/test_handle.rb -> test/fiddle/test_handle.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "11:     include Test::Unit::Assertions",
      "13:     def test_to_i",
      "14:       handle = Fiddle::Handle.new(LIBC_SO)",
      "15:       assert_kind_of Integer, handle.to_i",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13:     def test_safe_handle_open",
      "14:       t = Thread.new do",
      "15:         $SAFE = 1",
      "16:         Fiddle::Handle.new(LIBC_SO.taint)",
      "17:       end",
      "18:       assert_raise(SecurityError) { t.value }",
      "19:     end",
      "21:     def test_safe_function_lookup",
      "22:       t = Thread.new do",
      "23:         h = Fiddle::Handle.new(LIBC_SO)",
      "24:         $SAFE = 1",
      "25:         h[\"qsort\".taint]",
      "26:       end",
      "27:       assert_raise(SecurityError) { t.value }",
      "28:     end",
      "",
      "---------------"
    ],
    "version.h||version.h": [
      "File: version.h -> version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #define RUBY_VERSION \"2.1.8\"",
      "2: #define RUBY_RELEASE_DATE \"2015-12-16\"",
      "5: #define RUBY_RELEASE_YEAR 2015",
      "6: #define RUBY_RELEASE_MONTH 12",
      "",
      "[Removed Lines]",
      "3: #define RUBY_PATCHLEVEL 438",
      "",
      "[Added Lines]",
      "3: #define RUBY_PATCHLEVEL 439",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5727caf689097592fedf0a33420e1b8136c50c1a",
      "candidate_info": {
        "commit_hash": "5727caf689097592fedf0a33420e1b8136c50c1a",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/5727caf689097592fedf0a33420e1b8136c50c1a",
        "files": [
          "configure.in",
          "test/ruby/test_sprintf.rb",
          "version.h"
        ],
        "message": "merge revision(s) r47129,r48844: [Backport #10120]\n\n\tconfigure.in: remove SSE options\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@50067 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "configure.in||configure.in",
          "test/ruby/test_sprintf.rb||test/ruby/test_sprintf.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "configure.in||configure.in": [
          "File: configure.in -> configure.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "863:     for oflag in -fno-fast-math; do",
          "864:  RUBY_TRY_CFLAGS($oflag, [RUBY_APPEND_OPTION(optflags, $oflag)])",
          "865:     done",
          "882: fi",
          "884: AC_ARG_WITH(opt-dir,",
          "",
          "[Removed Lines]",
          "866:     AS_CASE([\"$target\"],",
          "867:  [*-darwin*], [",
          "868:      # doesn't seem necessary on Mac OS X",
          "869:  ],",
          "870:  [[i[4-6]86*|i386*mingw*]], [",
          "871:      RUBY_TRY_CFLAGS(-msse2 -mfpmath=sse, [",
          "872:   RUBY_APPEND_OPTION(XCFLAGS, -msse2 -mfpmath=sse)",
          "873:      ])",
          "874:             AS_CASE([\"$XCFLAGS\"],",
          "875:                 [[*-msse2*]], [",
          "876:                     RUBY_TRY_CFLAGS(-mstackrealign, [",
          "877:                         RUBY_APPEND_OPTION(XCFLAGS, -mstackrealign)",
          "878:                     ])",
          "879:                 ])",
          "880:  ]",
          "881:     )",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/ruby/test_sprintf.rb||test/ruby/test_sprintf.rb": [
          "File: test/ruby/test_sprintf.rb -> test/ruby/test_sprintf.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "194:                  sprintf(\"%20.0f\", 36893488147419107329.0))",
          "195:     assert_equal(\" Inf\", sprintf(\"% 0e\", 1.0/0.0), \"moved from btest/knownbug\")",
          "196:     assert_equal(\"       -0.\", sprintf(\"%#10.0f\", -0.5), \"[ruby-dev:42552]\")",
          "199:   end",
          "201:   def test_float_hex",
          "",
          "[Removed Lines]",
          "197:     assert_equal(\"0x1p+2\",   sprintf('%.0a', Float('0x1.fp+1')),   \"[ruby-dev:42551]\")",
          "198:     assert_equal(\"-0x1.0p+2\", sprintf('%.1a', Float('-0x1.ffp+1')), \"[ruby-dev:42551]\")",
          "",
          "[Added Lines]",
          "197:     # out of spec",
          "198:     #assert_equal(\"0x1p+2\",   sprintf('%.0a', Float('0x1.fp+1')),   \"[ruby-dev:42551]\")",
          "199:     #assert_equal(\"-0x1.0p+2\", sprintf('%.1a', Float('-0x1.ffp+1')), \"[ruby-dev:42551]\")",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 3",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-03-22\"",
          "3: #define RUBY_PATCHLEVEL 320",
          "7: #define RUBY_RELEASE_DAY 22",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-03-24\"",
          "3: #define RUBY_PATCHLEVEL 321",
          "7: #define RUBY_RELEASE_DAY 24",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e41ee7cf3347ced6e689c198dbf3c5900009d70f",
      "candidate_info": {
        "commit_hash": "e41ee7cf3347ced6e689c198dbf3c5900009d70f",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/e41ee7cf3347ced6e689c198dbf3c5900009d70f",
        "files": [
          "ChangeLog",
          "ext/socket/socket.c",
          "version.h"
        ],
        "message": "merge revision(s) 53677: [Backport #11877]\n\n        * ext/socket/socket.c (sock_gethostname): support unlimited size\n          hostname.\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53936 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "ext/socket/socket.c||ext/socket/socket.c",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/socket/socket.c||ext/socket/socket.c": [
          "File: ext/socket/socket.c -> ext/socket/socket.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1000: #ifndef HOST_NAME_MAX",
          "1001: #  define HOST_NAME_MAX 1024",
          "1002: #endif",
          "1005:     rb_secure(3);",
          "1011: }",
          "1012: #else",
          "1013: #ifdef HAVE_UNAME",
          "",
          "[Removed Lines]",
          "1003:     char buf[HOST_NAME_MAX+1];",
          "1006:     if (gethostname(buf, (int)sizeof buf - 1) < 0)",
          "1007:  rb_sys_fail(\"gethostname(3)\");",
          "1009:     buf[sizeof buf - 1] = '\\0';",
          "1010:     return rb_str_new2(buf);",
          "",
          "[Added Lines]",
          "1003:     long len = HOST_NAME_MAX;",
          "1004:     VALUE name;",
          "1007:     name = rb_str_new(0, len);",
          "1008:     while (gethostname(RSTRING_PTR(name), len) < 0) {",
          "1009:  int e = errno;",
          "1010:  switch (e) {",
          "1011:    case ENAMETOOLONG:",
          "1012: #ifdef __linux__",
          "1013:    case EINVAL:",
          "1015: #endif",
          "1016:      break;",
          "1017:    default:",
          "1018:      rb_syserr_fail(e, \"gethostname(3)\");",
          "1019:  }",
          "1020:  rb_str_modify_expand(name, len);",
          "1021:  len += len;",
          "1022:     }",
          "1023:     rb_str_resize(name, strlen(RSTRING_PTR(name)));",
          "1024:     return name;",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.9\"",
          "2: #define RUBY_RELEASE_DATE \"2016-02-25\"",
          "5: #define RUBY_RELEASE_YEAR 2016",
          "6: #define RUBY_RELEASE_MONTH 2",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 454",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 455",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bc090868b8e480ac4d179bc6b7d2ba65d4f82aef",
      "candidate_info": {
        "commit_hash": "bc090868b8e480ac4d179bc6b7d2ba65d4f82aef",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/bc090868b8e480ac4d179bc6b7d2ba65d4f82aef",
        "files": [
          "ChangeLog",
          "test/ruby/test_settracefunc.rb",
          "version.h",
          "vm.c"
        ],
        "message": "merge revision(s) 51713: [Backport #11492] [Backport #11646]\n\n\t* vm.c (hook_before_rewind): prevent kicking :return event while\n\t  finishing vm_exec func because invoke_block_from_c() kick a :return\n\t  event for bmethods.\n\t  [Bug #11492]\n\n\t* test/ruby/test_settracefunc.rb: add a test.\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@52639 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "test/ruby/test_settracefunc.rb||test/ruby/test_settracefunc.rb",
          "version.h||version.h",
          "vm.c||vm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "test/ruby/test_settracefunc.rb||test/ruby/test_settracefunc.rb": [
          "File: test/ruby/test_settracefunc.rb -> test/ruby/test_settracefunc.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1184:     end",
          "1185:   end",
          "1187:   def test_recursive",
          "1188:     assert_ruby_status [], %q{",
          "1189:       stack = []",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1187:   class C11492",
          "1188:     define_method(:foo_return){",
          "1189:       return true",
          "1190:     }",
          "1191:     define_method(:foo_break){",
          "1192:       break true",
          "1193:     }",
          "1194:   end",
          "1196:   def test_define_method_on_return",
          "1197:     # return",
          "1198:     events = []",
          "1199:     obj = C11492.new",
          "1200:     TracePoint.new(:call, :return){|tp|",
          "1201:       next unless target_thread?",
          "1202:       events << [tp.event, tp.method_id]",
          "1203:     }.enable{",
          "1204:       obj.foo_return",
          "1205:     }",
          "1206:     assert_equal([[:call, :foo_return], [:return, :foo_return]], events, 'Bug #11492')",
          "1208:     # break",
          "1209:     events = []",
          "1210:     obj = C11492.new",
          "1211:     TracePoint.new(:call, :return){|tp|",
          "1212:       next unless target_thread?",
          "1213:       events << [tp.event, tp.method_id]",
          "1214:     }.enable{",
          "1215:       obj.foo_break",
          "1216:     }",
          "1217:     assert_equal([[:call, :foo_break], [:return, :foo_break]], events, 'Bug #11492')",
          "1219:     # set_trace_func",
          "1220:     # return",
          "1221:     events = []",
          "1222:     begin",
          "1223:       set_trace_func(lambda{|event, file, lineno, mid, binding, klass|",
          "1224:         next unless target_thread?",
          "1225:         case event",
          "1226:         when 'call', 'return'",
          "1227:           events << [event, mid]",
          "1228:         end",
          "1229:       })",
          "1230:       obj.foo_return",
          "1231:       set_trace_func(nil)",
          "1233:       assert_equal([['call', :foo_return], ['return', :foo_return]], events, 'Bug #11492')",
          "1234:     ensure",
          "1235:     end",
          "1237:     # break",
          "1238:     events = []",
          "1239:     begin",
          "1240:       set_trace_func(lambda{|event, file, lineno, mid, binding, klass|",
          "1241:         next unless target_thread?",
          "1242:         case event",
          "1243:         when 'call', 'return'",
          "1244:           events << [event, mid]",
          "1245:         end",
          "1246:       })",
          "1247:       obj.foo_break",
          "1248:       set_trace_func(nil)",
          "1250:       assert_equal([['call', :foo_break], ['return', :foo_break]], events, 'Bug #11492')",
          "1251:     ensure",
          "1252:     end",
          "1253:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.8\"",
          "2: #define RUBY_RELEASE_DATE \"2015-11-18\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 11",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 414",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 415",
          "",
          "---------------"
        ],
        "vm.c||vm.c": [
          "File: vm.c -> vm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1286: #endif",
          "1288: static void",
          "1290: {",
          "1291:     switch (VM_FRAME_TYPE(th->cfp)) {",
          "1292:       case VM_FRAME_MAGIC_METHOD:",
          "",
          "[Removed Lines]",
          "1289: hook_before_rewind(rb_thread_t *th, rb_control_frame_t *cfp)",
          "",
          "[Added Lines]",
          "1289: hook_before_rewind(rb_thread_t *th, rb_control_frame_t *cfp, int will_finish_vm_exec)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1297:       case VM_FRAME_MAGIC_LAMBDA:",
          "1298:  if (VM_FRAME_TYPE_BMETHOD_P(th->cfp)) {",
          "1299:      EXEC_EVENT_HOOK(th, RUBY_EVENT_B_RETURN, th->cfp->self, 0, 0, Qnil);",
          "1301:  }",
          "1302:  else {",
          "1303:      EXEC_EVENT_HOOK_AND_POP_FRAME(th, RUBY_EVENT_B_RETURN, th->cfp->self, 0, 0, Qnil);",
          "",
          "[Removed Lines]",
          "1300:      EXEC_EVENT_HOOK_AND_POP_FRAME(th, RUBY_EVENT_RETURN, th->cfp->self, th->cfp->me->called_id, th->cfp->me->klass, Qnil);",
          "",
          "[Added Lines]",
          "1301:      if (!will_finish_vm_exec) {",
          "1303:   EXEC_EVENT_HOOK_AND_POP_FRAME(th, RUBY_EVENT_RETURN, th->cfp->self,",
          "1304:            th->cfp->me->called_id,",
          "1305:            th->cfp->me->klass, Qnil);",
          "1306:      }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1476:    if (!catch_iseqval) {",
          "1477:        th->errinfo = Qnil;",
          "1478:        result = GET_THROWOBJ_VAL(err);",
          "1480:        vm_pop_frame(th);",
          "1481:        goto finish_vme;",
          "1482:    }",
          "",
          "[Removed Lines]",
          "1479:        hook_before_rewind(th, th->cfp);",
          "",
          "[Added Lines]",
          "1485:        hook_before_rewind(th, th->cfp, TRUE);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1615:  }",
          "1616:  else {",
          "1620:      if (VM_FRAME_TYPE_FINISH_P(th->cfp)) {",
          "1621:   vm_pop_frame(th);",
          "",
          "[Removed Lines]",
          "1618:      hook_before_rewind(th, th->cfp);",
          "",
          "[Added Lines]",
          "1624:      hook_before_rewind(th, th->cfp, FALSE);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a57c9250608f6e0de74d659010ad7476a866cdea",
      "candidate_info": {
        "commit_hash": "a57c9250608f6e0de74d659010ad7476a866cdea",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/a57c9250608f6e0de74d659010ad7476a866cdea",
        "files": [
          "lib/cmath.rb",
          "version.h"
        ],
        "message": "merge revision(s) 50793,51120: [Backport #11162]\n\n\t* lib/cmath.rb: [DOC] Add docs [ci skip][Fix GH-909][Bug #11162]\n\tPatch provided by @davydovanton\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@51121 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "lib/cmath.rb||lib/cmath.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "lib/cmath.rb||lib/cmath.rb": [
          "File: lib/cmath.rb -> lib/cmath.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: ##",
          "2: # CMath is a library that provides trigonometric and transcendental",
          "4: #",
          "5: # == Usage",
          "6: #",
          "8: #",
          "9: #   require \"cmath\"",
          "10: #",
          "12: #",
          "14: #",
          "16: module CMath",
          "",
          "[Removed Lines]",
          "3: # functions for complex numbers.",
          "7: # To start using this library, simply:",
          "11: # Square root of a negative number is a complex number.",
          "13: #   CMath.sqrt(-9)  #=> 0+3.0i",
          "",
          "[Added Lines]",
          "2: # = Trigonometric and transcendental functions for complex numbers.",
          "3: #",
          "5: # functions for complex numbers. The functions in this module accept",
          "6: # integers, floating-point numbers or complex numbers as arguments.",
          "7: #",
          "8: # Note that the selection of functions is similar, but not identical,",
          "9: # to that in module math. The reason for having two modules is that",
          "10: # some users aren\u2019t interested in complex numbers, and perhaps don\u2019t",
          "11: # even know what they are. They would rather have Math.sqrt(-1) raise",
          "12: # an exception than return a complex number.",
          "16: # To start using this library, simply require cmath library:",
          "20: # And after call any CMath function. For example:",
          "21: #",
          "22: #   CMath.sqrt(-9)          #=> 0+3.0i",
          "23: #   CMath.exp(0 + 0i)       #=> 1.0+0.0i",
          "24: #   CMath.log10(-5.to_c)    #=> (0.6989700043360187+1.3643763538418412i)",
          "27: # For more information you can see Complec class.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:   ##",
          "45:   # Math::E raised to the +z+ power",
          "46:   #",
          "50:   def exp(z)",
          "51:     begin",
          "52:       if z.real?",
          "",
          "[Removed Lines]",
          "47:   #   exp(Complex(0,0))      #=> 1.0+0.0i",
          "48:   #   exp(Complex(0,PI))     #=> -1.0+1.2246467991473532e-16i",
          "49:   #   exp(Complex(0,PI/2.0)) #=> 6.123233995736766e-17+1.0i",
          "",
          "[Added Lines]",
          "60:   #   CMath.exp(2i) #=> (-0.4161468365471424+0.9092974268256817i)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "62:   end",
          "64:   ##",
          "66:   # it will be the base of logarithm.",
          "67:   #",
          "69:   def log(*args)",
          "70:     begin",
          "71:       z, b = args",
          "",
          "[Removed Lines]",
          "65:   # Returns the natural logarithm of Complex.  If a second argument is given,",
          "68:   #   log(Complex(0,0)) #=> -Infinity+0.0i",
          "",
          "[Added Lines]",
          "76:   # Returns the natural logarithm of Complex. If a second argument is given,",
          "79:   #   CMath.log(1 + 4i)     #=> (1.416606672028108+1.3258176636680326i)",
          "80:   #   CMath.log(1 + 4i, 10) #=> (0.6152244606891369+0.5757952953408879i)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "89:   ##",
          "90:   # returns the base 2 logarithm of +z+",
          "91:   def log2(z)",
          "92:     begin",
          "93:       if z.real? and z >= 0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:   #",
          "104:   #   CMath.log2(-1) => (0.0+4.532360141827194i)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "103:   ##",
          "104:   # returns the base 10 logarithm of +z+",
          "105:   def log10(z)",
          "106:     begin",
          "107:       if z.real? and z >= 0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "119:   #",
          "120:   #   CMath.log10(-1) #=> (0.0+1.3643763538418412i)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "117:   ##",
          "118:   # Returns the non-negative square root of Complex.",
          "122:   def sqrt(z)",
          "123:     begin",
          "124:       if z.real?",
          "",
          "[Removed Lines]",
          "119:   #   sqrt(-1)            #=> 0+1.0i",
          "120:   #   sqrt(Complex(-1,0)) #=> 0.0+1.0i",
          "121:   #   sqrt(Complex(0,8))  #=> 2.0+2.0i",
          "",
          "[Added Lines]",
          "135:   #",
          "136:   #   CMath.sqrt(-1 + 0i) #=> 0.0+1.0i",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "145:   ##",
          "146:   # returns the principal value of the cube root of +z+",
          "147:   def cbrt(z)",
          "148:     z ** (1.0/3)",
          "149:   end",
          "151:   ##",
          "152:   # returns the sine of +z+, where +z+ is given in radians",
          "153:   def sin(z)",
          "154:     begin",
          "155:       if z.real?",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "162:   #",
          "163:   #   CMath.cbrt(1 + 4i) #=> (1.449461632813119+0.6858152562177092i)",
          "170:   #",
          "171:   #   CMath.sin(1 + 1i) #=> (1.2984575814159773+0.6349639147847361i)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "166:   ##",
          "167:   # returns the cosine of +z+, where +z+ is given in radians",
          "168:   def cos(z)",
          "169:     begin",
          "170:       if z.real?",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "187:   #",
          "188:   #   CMath.cos(1 + 1i) #=> (0.8337300251311491-0.9888977057628651i)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "181:   ##",
          "182:   # returns the tangent of +z+, where +z+ is given in radians",
          "183:   def tan(z)",
          "184:     begin",
          "185:       if z.real?",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "204:   #",
          "205:   #   CMath.tan(1 + 1i) #=> (0.27175258531951174+1.0839233273386943i)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "195:   ##",
          "196:   # returns the hyperbolic sine of +z+, where +z+ is given in radians",
          "197:   def sinh(z)",
          "198:     begin",
          "199:       if z.real?",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "220:   #",
          "221:   #   CMath.sinh(1 + 1i) #=> (0.6349639147847361+1.2984575814159773i)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "210:   ##",
          "211:   # returns the hyperbolic cosine of +z+, where +z+ is given in radians",
          "212:   def cosh(z)",
          "213:     begin",
          "214:       if z.real?",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "237:   #",
          "238:   #   CMath.cosh(1 + 1i) #=> (0.8337300251311491+0.9888977057628651i)",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "225:   ##",
          "226:   # returns the hyperbolic tangent of +z+, where +z+ is given in radians",
          "227:   def tanh(z)",
          "228:     begin",
          "229:       if z.real?",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "254:   #",
          "255:   #   CMath.tanh(1 + 1i) #=> (1.0839233273386943+0.27175258531951174i)",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "239:   ##",
          "240:   # returns the arc sine of +z+",
          "241:   def asin(z)",
          "242:     begin",
          "243:       if z.real? and z >= -1 and z <= 1",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "270:   #",
          "271:   #   CMath.asin(1 + 1i) #=> (0.6662394324925153+1.0612750619050355i)",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "253:   ##",
          "254:   # returns the arc cosine of +z+",
          "255:   def acos(z)",
          "256:     begin",
          "257:       if z.real? and z >= -1 and z <= 1",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "286:   #",
          "287:   #   CMath.acos(1 + 1i) #=> (0.9045568943023813-1.0612750619050357i)",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "267:   ##",
          "268:   # returns the arc tangent of +z+",
          "269:   def atan(z)",
          "270:     begin",
          "271:       if z.real?",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "302:   #",
          "303:   #   CMath.atan(1 + 1i) #=> (1.0172219678978514+0.4023594781085251i)",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "281:   ##",
          "282:   # returns the arc tangent of +y+ divided by +x+ using the signs of +y+ and",
          "283:   # +x+ to determine the quadrant",
          "284:   def atan2(y,x)",
          "285:     begin",
          "286:       if y.real? and x.real?",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "319:   #",
          "320:   #   CMath.atan2(1 + 1i, 0) #=> (1.5707963267948966+0.0i)",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "296:   ##",
          "297:   # returns the inverse hyperbolic sine of +z+",
          "298:   def asinh(z)",
          "299:     begin",
          "300:       if z.real?",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "335:   #",
          "336:   #   CMath.asinh(1 + 1i) #=> (1.0612750619050357+0.6662394324925153i)",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "310:   ##",
          "311:   # returns the inverse hyperbolic cosine of +z+",
          "312:   def acosh(z)",
          "313:     begin",
          "314:       if z.real? and z >= 1",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "351:   #",
          "352:   #   CMath.acosh(1 + 1i) #=> (1.0612750619050357+0.9045568943023813i)",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "324:   ##",
          "325:   # returns the inverse hyperbolic tangent of +z+",
          "326:   def atanh(z)",
          "327:     begin",
          "328:       if z.real? and z >= -1 and z <= 1",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "367:   #",
          "368:   #   CMath.atanh(1 + 1i) #=> (0.4023594781085251+1.0172219678978514i)",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "2: #define RUBY_RELEASE_DATE \"2015-07-03\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 7",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 371",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 372",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e25bb03ee94d125612c50d868e7895deeb043b1b",
      "candidate_info": {
        "commit_hash": "e25bb03ee94d125612c50d868e7895deeb043b1b",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/e25bb03ee94d125612c50d868e7895deeb043b1b",
        "files": [
          "test/rubygems/test_gem_remote_fetcher.rb",
          "version.h"
        ],
        "message": "merge revision(s) 50972:\n\n\ttest_gem_remote_fetcher.rb: get rid of errors\n\n\t* test/rubygems/test_gem_remote_fetcher.rb (start_ssl_server):\n  temporary measure for \"dh key too small\" error of OpenSSL\n  1.0.2c+.\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@51176 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "test/rubygems/test_gem_remote_fetcher.rb||test/rubygems/test_gem_remote_fetcher.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "test/rubygems/test_gem_remote_fetcher.rb||test/rubygems/test_gem_remote_fetcher.rb": [
          "File: test/rubygems/test_gem_remote_fetcher.rb -> test/rubygems/test_gem_remote_fetcher.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "744:       server.mount_proc(\"/insecure_redirect\") { |req, res|",
          "745:         res.set_redirect(WEBrick::HTTPStatus::MovedPermanently, req.query['to'])",
          "746:       }",
          "748:       t = Thread.new do",
          "749:         begin",
          "750:           server.start",
          "",
          "[Removed Lines]",
          "747:       server.ssl_context.tmp_dh_callback = proc { OpenSSL::PKey::DH.new 128 }",
          "",
          "[Added Lines]",
          "747:       server.ssl_context.tmp_dh_callback = proc {|_, _, k| OpenSSL::PKey::DH.new(k) }",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 7",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-07-03\"",
          "3: #define RUBY_PATCHLEVEL 376",
          "7: #define RUBY_RELEASE_DAY 3",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-07-07\"",
          "3: #define RUBY_PATCHLEVEL 377",
          "7: #define RUBY_RELEASE_DAY 7",
          "",
          "---------------"
        ]
      }
    }
  ]
}