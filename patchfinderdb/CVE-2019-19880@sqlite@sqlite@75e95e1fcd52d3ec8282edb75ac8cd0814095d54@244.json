{
  "cve_id": "CVE-2019-19880",
  "cve_desc": "exprListAppendList in window.c in SQLite 3.30.1 allows attackers to trigger an invalid pointer dereference because constant integer values in ORDER BY clauses of window definitions are mishandled.",
  "repo": "sqlite/sqlite",
  "patch_hash": "75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
  "patch_info": {
    "commit_hash": "75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/window.c"
    ],
    "message": "When processing constant integer values in ORDER BY clauses of window definitions (see check-in [7e4809eadfe99ebf]) be sure to fully disable the constant value to avoid an invalid pointer dereference if the expression is ever duplicated. This fixes a crash report from Yongheng and Rui.\n\nFossilOrigin-Name: 1ca0bd982ab1183bbafce0d260e4dceda5eb766ed2e7793374a88d1ae0bdd2ca",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/window.c||src/window.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 8223e79f987feda5c8e51ec52cec6798cca16d070b10558939e2888ca1a25b8e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/window.c||src/window.c": [
      "File: src/window.c -> src/window.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "895:     int nInit = pList ? pList->nExpr : 0;",
      "896:     for(i=0; i<pAppend->nExpr; i++){",
      "897:       Expr *pDup = sqlite3ExprDup(pParse->db, pAppend->a[i].pExpr, 0);",
      "898:       if( bIntToNull && pDup && pDup->op==TK_INTEGER ){",
      "899:         pDup->op = TK_NULL;",
      "900:         pDup->flags &= ~(EP_IntValue|EP_IsTrue|EP_IsFalse);",
      "901:       }",
      "902:       pList = sqlite3ExprListAppend(pParse, pList, pDup);",
      "903:       if( pList ) pList->a[nInit+i].sortFlags = pAppend->a[i].sortFlags;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "898:       assert( pDup==0 || !ExprHasProperty(pDup, EP_MemToken) );",
      "902:         pDup->u.zToken = 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ed968fa4cb464906e5b0f5148f1f21038a311728",
      "candidate_info": {
        "commit_hash": "ed968fa4cb464906e5b0f5148f1f21038a311728",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ed968fa4cb464906e5b0f5148f1f21038a311728",
        "files": [
          "ext/rtree/rtree.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Avoid integer overflow when computing the array of a bounding box with the rtree_i32 virtual table.\n\nFossilOrigin-Name: b352f1590d20a574b0681e011ececcf4f41fa5b157503d330e03939404aca0e9",
        "before_after_code_files": [
          "ext/rtree/rtree.c||ext/rtree/rtree.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/rtree/rtree.c||ext/rtree/rtree.c": [
          "File: ext/rtree/rtree.c -> ext/rtree/rtree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1999: #endif",
          "2000:   {",
          "2001:     switch( pRtree->nDim ){",
          "2007:     }",
          "2008:   }",
          "2009:   return area;",
          "",
          "[Removed Lines]",
          "2002:       case 5:  area  = p->aCoord[9].i - p->aCoord[8].i;",
          "2003:       case 4:  area *= p->aCoord[7].i - p->aCoord[6].i;",
          "2004:       case 3:  area *= p->aCoord[5].i - p->aCoord[4].i;",
          "2005:       case 2:  area *= p->aCoord[3].i - p->aCoord[2].i;",
          "2006:       default: area *= p->aCoord[1].i - p->aCoord[0].i;",
          "",
          "[Added Lines]",
          "2002:       case 5:  area  = (i64)p->aCoord[9].i - (i64)p->aCoord[8].i;",
          "2003:       case 4:  area *= (i64)p->aCoord[7].i - (i64)p->aCoord[6].i;",
          "2004:       case 3:  area *= (i64)p->aCoord[5].i - (i64)p->aCoord[4].i;",
          "2005:       case 2:  area *= (i64)p->aCoord[3].i - (i64)p->aCoord[2].i;",
          "2006:       default: area *= (i64)p->aCoord[1].i - (i64)p->aCoord[0].i;",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 048add13fc10e69ae504a49c4663612381d928b2cf1f9cdab4ff34bd40f601a3",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "32d0f64e8dc1ce478a48e6ebcc400e71a3deb8aa",
      "candidate_info": {
        "commit_hash": "32d0f64e8dc1ce478a48e6ebcc400e71a3deb8aa",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/32d0f64e8dc1ce478a48e6ebcc400e71a3deb8aa",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/whereexpr.c",
          "test/like.test"
        ],
        "message": "Do not attempt the LIKE optimization on a column with numeric affinity if the rhs of the operator begins with whitespace. Fix for ticket [fd76310a5e].\n\nFossilOrigin-Name: 94b58ab059cba9771e75f16d1460f313104a8fb879f9f8805725d362aa58cbcd",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/whereexpr.c||src/whereexpr.c",
          "test/like.test||test/like.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b141bae3f6d16c0ebb59dac9b02086a4370839e71ade34004f647b09b1083d1d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/whereexpr.c||src/whereexpr.c": [
          "File: src/whereexpr.c -> src/whereexpr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "279:         if( sqlite3Isdigit(zNew[0])",
          "280:          || zNew[0]=='-'",
          "281:          || zNew[0]=='+'",
          "282:          || zNew[iTo-1]=='0'-1",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "280:          || sqlite3Isspace(zNew[0])",
          "",
          "---------------"
        ],
        "test/like.test||test/like.test": [
          "File: test/like.test -> test/like.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: set testdir [file dirname $argv0]",
          "19: source $testdir/tester.tcl",
          "21: # Create some sample data to work with.",
          "22: #",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: set testprefix like",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1095: } {/SEARCH/}",
          "1096: }",
          "1098: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1099: #-------------------------------------------------------------------------",
          "1100: # Tests for ticket [b1d8c79314].",
          "1101: #",
          "1102: reset_db",
          "1103: do_execsql_test 16.0 {",
          "1104:   CREATE TABLE t1(a INTEGER COLLATE NOCASE);",
          "1105:   CREATE INDEX i1 ON t1(a);",
          "1106:   INSERT INTO t1 VALUES(' 1x');",
          "1107:   INSERT INTO t1 VALUES(' 1-');",
          "1108: }",
          "1109: do_execsql_test 16.1 {",
          "1110:   SELECT * FROM t1 WHERE a LIKE ' 1%';",
          "1111: } {{ 1x} { 1-}}",
          "1112: do_execsql_test 16.2 {",
          "1113:   SELECT * FROM t1 WHERE a LIKE ' 1-';",
          "1114: } {{ 1-}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "80f6bfc064eac13c408aa7e46e2e154d1d40f297",
      "candidate_info": {
        "commit_hash": "80f6bfc064eac13c408aa7e46e2e154d1d40f297",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/80f6bfc064eac13c408aa7e46e2e154d1d40f297",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/aggnested.test"
        ],
        "message": "Improvements to the algorithm that determines which SELECT in a sequence of nested SELECT statements that an aggregate function belongs to.  This resolves an issue identified by dbsqlfuzz.\n\nFossilOrigin-Name: d768007473f4ed40abbdf2c7e501b580b1cc37c1620c7cb90af1f208a8c35145",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/aggnested.test||test/aggnested.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4145b3e05051ba6729105157a876793ad14a05d895fc10fe704f437eab16ea93",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5297:     }",
          "5298:     if( i<nSrc ){",
          "5299:       p->nThis++;",
          "5301:       p->nOther++;",
          "5302:     }",
          "5303:   }",
          "",
          "[Removed Lines]",
          "5300:     }else{",
          "",
          "[Added Lines]",
          "5300:     }else if( nSrc==0 || pExpr->iTable<pSrc->a[0].iCursor ){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5314:   Walker w;",
          "5315:   struct SrcCount cnt;",
          "5316:   assert( pExpr->op==TK_AGG_FUNCTION );",
          "5317:   w.xExprCallback = exprSrcCount;",
          "5319:   w.u.pSrcCount = &cnt;",
          "5320:   cnt.pSrc = pSrcList;",
          "5321:   cnt.nThis = 0;",
          "",
          "[Removed Lines]",
          "5318:   w.xSelectCallback = 0;",
          "",
          "[Added Lines]",
          "5320:   memset(&w, 0, sizeof(w));",
          "5322:   w.xSelectCallback = sqlite3SelectWalkNoop;",
          "",
          "---------------"
        ],
        "test/aggnested.test||test/aggnested.test": [
          "File: test/aggnested.test -> test/aggnested.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: #",
          "3: # The author disclaims copyright to this source code.  In place of",
          "4: # a legal notice, here is a blessing:",
          "",
          "[Removed Lines]",
          "1: # 2012 August 23",
          "",
          "[Added Lines]",
          "1: # 2012-08-23",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "232:      GROUP BY id1;",
          "233:   }",
          "234: } {12 2 34 4}",
          "237: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "236: # 2019-08-31",
          "237: # Problem found by dbsqlfuzz",
          "238: #",
          "239: do_execsql_test aggnested-4.1 {",
          "240:   DROP TABLE IF EXISTS aa;",
          "241:   DROP TABLE IF EXISTS bb;",
          "242:   CREATE TABLE aa(x INT);  INSERT INTO aa(x) VALUES(123);",
          "243:   CREATE TABLE bb(y INT);  INSERT INTO bb(y) VALUES(456);",
          "244:   SELECT (SELECT sum(x+(SELECT y)) FROM bb) FROM aa;",
          "245: } {579}",
          "246: do_execsql_test aggnested-4.2 {",
          "247:   SELECT (SELECT sum(x+y) FROM bb) FROM aa;",
          "248: } {579}",
          "249: do_execsql_test aggnested-4.3 {",
          "250:   DROP TABLE IF EXISTS tx;",
          "251:   DROP TABLE IF EXISTS ty;",
          "252:   CREATE TABLE tx(x INT);",
          "253:   INSERT INTO tx VALUES(1),(2),(3),(4),(5);",
          "254:   CREATE TABLE ty(y INT);",
          "255:   INSERT INTO ty VALUES(91),(92),(93);",
          "256:   SELECT min((SELECT count(y) FROM ty)) FROM tx;",
          "257: } {3}",
          "258: do_execsql_test aggnested-4.4 {",
          "259:   SELECT max((SELECT a FROM (SELECT count(*) AS a FROM ty) AS s)) FROM tx;",
          "260: } {3}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4b48c727219aab785d87ace3c44482779480922a",
      "candidate_info": {
        "commit_hash": "4b48c727219aab785d87ace3c44482779480922a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4b48c727219aab785d87ace3c44482779480922a",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a \"jump depends on unititialized value\" valgrind error in fts5 triggered by corrupt database records.\n\nFossilOrigin-Name: 6b6751cd90601a1e2744a7d233c973291ecb783801b9327c3b99734dd22bcd27",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "713: static Fts5Data *fts5LeafRead(Fts5Index *p, i64 iRowid){",
          "714:   Fts5Data *pRet = fts5DataRead(p, iRowid);",
          "715:   if( pRet ){",
          "717:       p->rc = FTS5_CORRUPT;",
          "718:       fts5DataRelease(pRet);",
          "719:       pRet = 0;",
          "",
          "[Removed Lines]",
          "716:     if( pRet->szLeaf>pRet->nn ){",
          "",
          "[Added Lines]",
          "716:     if( pRet->nn<4 || pRet->szLeaf>pRet->nn ){",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "9693:   SELECT ( MATCH (t1,591)) FROM t1 WHERE t1 MATCH 'e*e\u0178'",
          "9694: } {1 {database disk image is malformed}}",
          "9698: sqlite3_fts5_may_be_corrupt 0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9696: #-------------------------------------------------------------------------",
          "9697: #",
          "9698: reset_db",
          "9699: do_test 66.0 {",
          "9700:   sqlite3 db {}",
          "9701:   db deserialize [decode_hexdb {",
          "9702: .open --hexdb",
          "9703: | size 28672 pagesize 4096 filename crash-37cecb4e784e9f.db",
          "9704: | page 1 offset 0",
          "9705: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "9706: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 07   .....@  ........",
          "9707: |     96: 00 00 00 00 0d 00 00 00 07 0d d2 00 0f c4 0f 6d   ...............m",
          "9708: |    112: 0f 02 0e ab 0e 4e 0d f6 0d d2 00 00 00 00 00 00   .....N..........",
          "9709: |   3536: 00 00 22 07 06 17 11 11 01 31 74 61 62 6c 65 74   .........1tablet",
          "9710: |   3552: 32 74 32 07 43 52 45 41 54 45 20 54 41 42 4c 45   2t2.CREATE TABLE",
          "9711: |   3568: 20 74 32 28 78 29 56 06 06 17 1f 1f 01 7d 74 61    t2(x)V.......ta",
          "9712: |   3584: 62 6c 65 74 31 5f 63 6f 6e 66 69 67 74 31 5f 63   blet1_configt1_c",
          "9713: |   3600: 6f 6e 66 69 67 06 43 52 45 41 54 45 20 54 41 42   onfig.CREATE TAB",
          "9714: |   3616: 4c 45 20 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b   LE 't1_config'(k",
          "9715: |   3632: 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29    PRIMARY KEY, v)",
          "9716: |   3648: 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5b 05    WITHOUT ROWID[.",
          "9717: |   3664: 07 17 21 21 01 81 01 74 61 62 6c 65 74 31 5f 64   ..!!...tablet1_d",
          "9718: |   3680: 6f 63 73 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65   ocsizet1_docsize",
          "9719: |   3696: 05 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74   .CREATE TABLE 't",
          "9720: |   3712: 31 5f 64 6f 63 73 69 7a 65 27 28 69 64 20 49 4e   1_docsize'(id IN",
          "9721: |   3728: 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45   TEGER PRIMARY KE",
          "9722: |   3744: 59 2c 20 73 7a 20 42 4c 4f 42 29 55 04 06 17 21   Y, sz BLOB)U...!",
          "9723: |   3760: 21 01 77 74 61 62 6c 65 74 31 5f 63 6f 6e 74 65   !.wtablet1_conte",
          "9724: |   3776: 6e 74 74 31 5f 63 6f 6e 74 65 6e 74 04 43 52 45   ntt1_content.CRE",
          "9725: |   3792: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63 6f   ATE TABLE 't1_co",
          "9726: |   3808: 6e 74 65 6e 74 27 28 69 64 20 49 4e 54 45 47 45   ntent'(id INTEGE",
          "9727: |   3824: 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 63   R PRIMARY KEY, c",
          "9728: |   3840: 30 29 69 03 07 17 19 19 01 81 2d 74 61 62 6c 65   0)i.......-table",
          "9729: |   3856: 74 31 5f 69 64 78 74 31 5f 69 64 78 03 43 52 45   t1_idxt1_idx.CRE",
          "9730: |   3872: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 69 64   ATE TABLE 't1_id",
          "9731: |   3888: 78 27 28 73 65 67 69 64 2c 20 74 65 72 6d 2c 20   x'(segid, term,",
          "9732: |   3904: 70 67 6e 6f 2c 20 50 52 49 4d 41 52 59 20 4b 45   pgno, PRIMARY KE",
          "9733: |   3920: 59 28 73 65 67 69 64 2c 20 74 65 72 6d 29 29 20   Y(segid, term))",
          "9734: |   3936: 57 49 54 48 4f 55 54 20 52 4f 57 49 44 55 02 07   WITHOUT ROWIDU..",
          "9735: |   3952: 17 1b 1b 01 81 01 74 61 62 6c 65 74 31 5f 64 61   ......tablet1_da",
          "9736: |   3968: 74 61 74 31 5f 64 61 74 61 02 43 52 45 41 54 45   tat1_data.CREATE",
          "9737: |   3984: 20 54 41 42 4c 45 20 27 74 31 5f 64 61 74 61 27    TABLE 't1_data'",
          "9738: |   4000: 28 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   (id INTEGER PRIM",
          "9739: |   4016: 41 52 49 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42   ARI KEY, block B",
          "9740: |   4032: 4c 4f 42 29 3a 01 06 17 11 11 08 63 74 61 62 6c   LOB):......ctabl",
          "9741: |   4048: 65 74 31 74 31 43 52 45 41 54 45 20 56 49 52 54   et1t1CREATE VIRT",
          "9742: |   4064: 55 41 4c 20 54 41 42 4c 45 20 74 31 20 55 53 49   UAL TABLE t1 USI",
          "9743: |   4080: 4e 47 20 66 74 73 35 28 63 6f 6e 74 65 6e 74 29   NG fts5(content)",
          "9744: | page 2 offset 4096",
          "9745: |      0: 0d 00 00 00 03 0f bd 00 0f e8 0f ef 0f bd 00 01   ................",
          "9746: |   4016: 00 00 00 00 00 00 00 00 00 00 00 00 00 24 84 80   .............$..",
          "9747: |   4032: 80 80 80 01 03 00 4e 00 00 00 1e 06 30 61 62 61   ......N.....0aba",
          "9748: |   4048: 63 6b 01 02 02 04 02 66 74 02 02 02 04 04 6e 64   ck.....ft.....nd",
          "9749: |   4064: 6f 6e 03 02 02 04 0a 07 05 01 03 00 10 03 03 0f   on..............",
          "9750: |   4080: 0a 03 00 24 00 00 00 00 01 01 01 00 01 00 01 01   ...$............",
          "9751: | page 3 offset 8192",
          "9752: |      0: 0a 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "9753: |   4080: 00 00 00 00 00 00 00 00 00 00 05 04 09 0c 01 02   ................",
          "9754: | page 4 offset 12288",
          "9755: |      0: 0d 00 00 00 03 0f e0 00 0f f6 0f ec 0f e0 00 00   ................",
          "9756: |   4064: 0a 03 03 00 1b 61 62 61 6e 64 6f 6e 08 02 03 00   .....abandon....",
          "9757: |   4080: 17 61 62 61 66 74 08 01 03 00 17 61 62 61 63 6b   .abaft.....aback",
          "9758: | page 5 offset 16384",
          "9759: |      0: 0d 00 00 00 03 0f ee 00 0f fa 0f f4 0f ee 00 00   ................",
          "9760: |   4064: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 03   ................",
          "9761: |   4080: 03 00 0e 01 04 02 03 00 0e 01 04 01 03 00 0e 01   ................",
          "9762: | page 6 offset 20480",
          "9763: |      0: 0a 00 00 01 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "9764: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "9765: | page 7 offset 24576",
          "9766: |      0: 0d 00 00 00 03 0f d6 00 0f f4 0f e1 0f d6 00 00   ................",
          "9767: |   4048: 00 00 00 00 00 00 09 01 52 1b 72 65 62 75 69 6c   ........R.rebuil",
          "9768: |   4064: 64 11 02 02 2b 69 6e 74 65 67 72 69 74 79 2d 63   d...+integrity-c",
          "9769: |   4080: 68 65 63 6b 0a 01 02 1d 6f 70 74 69 6d 69 7a 65   heck....optimize",
          "9770: | end crash-37cecb4e784e9f.db",
          "9771: }]} {}",
          "9773: do_catchsql_test 66.1 {",
          "9774:   INSERT INTO t1(t1) VALUES('integrity-check');",
          "9775: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: d49047c1b59bbfd05204af9973cdb0fab51b4d2661b550aec10d917fff94dc9b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4245e0456d8387d867a73ab3d986aabcf3725ff2",
      "candidate_info": {
        "commit_hash": "4245e0456d8387d867a73ab3d986aabcf3725ff2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4245e0456d8387d867a73ab3d986aabcf3725ff2",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in",
          "test/altertab3.test"
        ],
        "message": "Fix a minor error in a test script, and harmless compiler warnings in the CLI code.\n\nFossilOrigin-Name: eaa34626e497d3af132dd8f13eddbbda89365d369ed43212a5f788175b3d6198",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in",
          "test/altertab3.test||test/altertab3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ebb81dad1f43dac4636cd44d4055d1d4b198c675f73e23c5a2d8d992ae27fe1f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "6562:     char *z = azArg[i];",
          "6563:     int n;",
          "6564:     if( z[0]=='-' && z[1]=='-' ) z++;",
          "6566:     if( n<=17 && memcmp(\"-freelist-corrupt\", z, n)==0 ){",
          "6567:       bFreelist = 0;",
          "6568:     }else",
          "",
          "[Removed Lines]",
          "6565:     n = strlen(z);",
          "",
          "[Added Lines]",
          "6565:     n = strlen30(z);",
          "",
          "---------------"
        ],
        "test/altertab3.test||test/altertab3.test": [
          "File: test/altertab3.test -> test/altertab3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "204:   db2 eval { INSERT INTO t2 VALUES (1), (2), (3) }",
          "205:   db close",
          "206: } {}",
          "208: #-------------------------------------------------------------------------",
          "209: reset_db",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "207: db2 close",
          "",
          "---------------"
        ]
      }
    }
  ]
}