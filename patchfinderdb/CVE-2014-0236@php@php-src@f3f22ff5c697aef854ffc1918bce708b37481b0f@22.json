{
  "cve_id": "CVE-2014-0236",
  "cve_desc": "file before 5.18, as used in the Fileinfo component in PHP before 5.6.0, allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a zero root_storage value in a CDF file, related to cdf.c and readcdf.c.",
  "repo": "php/php-src",
  "patch_hash": "f3f22ff5c697aef854ffc1918bce708b37481b0f",
  "patch_info": {
    "commit_hash": "f3f22ff5c697aef854ffc1918bce708b37481b0f",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/f3f22ff5c697aef854ffc1918bce708b37481b0f",
    "files": [
      "NEWS",
      "ext/fileinfo/libmagic/cdf.c",
      "ext/fileinfo/libmagic/cdf.h",
      "ext/fileinfo/libmagic/readcdf.c"
    ],
    "message": "Fixed bug #67329 fileinfo: NULL pointer deference flaw by processing certain CDF files",
    "before_after_code_files": [
      "ext/fileinfo/libmagic/cdf.c||ext/fileinfo/libmagic/cdf.c",
      "ext/fileinfo/libmagic/cdf.h||ext/fileinfo/libmagic/cdf.h",
      "ext/fileinfo/libmagic/readcdf.c||ext/fileinfo/libmagic/readcdf.c"
    ]
  },
  "patch_diff": {
    "ext/fileinfo/libmagic/cdf.c||ext/fileinfo/libmagic/cdf.c": [
      "File: ext/fileinfo/libmagic/cdf.c -> ext/fileinfo/libmagic/cdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: #include \"file.h\"",
      "37: #ifndef lint",
      "39: #endif",
      "41: #include <assert.h>",
      "",
      "[Removed Lines]",
      "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.53 2013/02/26 16:20:42 christos Exp $\")",
      "",
      "[Added Lines]",
      "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.55 2014/02/27 23:26:17 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "689: int",
      "690: cdf_read_short_stream(const cdf_info_t *info, const cdf_header_t *h,",
      "692: {",
      "693:  size_t i;",
      "694:  const cdf_directory_t *d;",
      "696:  for (i = 0; i < dir->dir_len; i++)",
      "697:   if (dir->dir_tab[i].d_type == CDF_DIR_TYPE_ROOT_STORAGE)",
      "698:    break;",
      "",
      "[Removed Lines]",
      "691:     const cdf_sat_t *sat, const cdf_dir_t *dir, cdf_stream_t *scn)",
      "",
      "[Added Lines]",
      "691:     const cdf_sat_t *sat, const cdf_dir_t *dir, cdf_stream_t *scn,",
      "692:     const cdf_directory_t **root)",
      "",
      "---------------"
    ],
    "ext/fileinfo/libmagic/cdf.h||ext/fileinfo/libmagic/cdf.h": [
      "File: ext/fileinfo/libmagic/cdf.h -> ext/fileinfo/libmagic/cdf.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "300: int cdf_read_ssat(const cdf_info_t *, const cdf_header_t *, const cdf_sat_t *,",
      "301:     cdf_sat_t *);",
      "302: int cdf_read_short_stream(const cdf_info_t *, const cdf_header_t *,",
      "304: int cdf_read_property_info(const cdf_stream_t *, const cdf_header_t *, uint32_t,",
      "305:     cdf_property_info_t **, size_t *, size_t *);",
      "306: int cdf_read_summary_info(const cdf_info_t *, const cdf_header_t *,",
      "",
      "[Removed Lines]",
      "303:     const cdf_sat_t *, const cdf_dir_t *, cdf_stream_t *);",
      "",
      "[Added Lines]",
      "303:     const cdf_sat_t *, const cdf_dir_t *, cdf_stream_t *,",
      "304:     const cdf_directory_t **);",
      "",
      "---------------"
    ],
    "ext/fileinfo/libmagic/readcdf.c||ext/fileinfo/libmagic/readcdf.c": [
      "File: ext/fileinfo/libmagic/readcdf.c -> ext/fileinfo/libmagic/readcdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "26: #include \"file.h\"",
      "28: #ifndef lint",
      "30: #endif",
      "32: #include <stdlib.h>",
      "",
      "[Removed Lines]",
      "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.37 2014/01/06 13:41:18 rrt Exp $\")",
      "",
      "[Added Lines]",
      "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.40 2014/03/06 15:23:33 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "77: # define strcasestr strstr",
      "78: #endif",
      "80: private const char *",
      "81: cdf_app_to_mime(const char *vbuf, const struct nv *nv)",
      "82: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "80: static const struct cv {",
      "81:  uint64_t clsid[2];",
      "82:  const char *mime;",
      "83: } clsid2mime[] = {",
      "84:  {",
      "85: #ifdef PHP_WIN32",
      "86:   { 0x00000000000c1084ui64, 0x46000000000000c0ui64 },",
      "87: #else",
      "88:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU },",
      "89: #endif",
      "90:   \"x-msi\",",
      "91:  }",
      "92: }, clsid2desc[] = {",
      "93:  {",
      "94: #ifdef PHP_WIN32",
      "95:   { 0x00000000000c1084ui64, 0x46000000000000c0ui64 },",
      "96: #else",
      "97:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU },",
      "98: #endif",
      "99:   \"MSI Installer\",",
      "100:  },",
      "101: };",
      "103: private const char *",
      "104: cdf_clsid_to_mime(const uint64_t clsid[2], const struct cv *cv)",
      "105: {",
      "106:  size_t i;",
      "107:  for (i = 0; cv[i].mime != NULL; i++) {",
      "108:   if (clsid[0] == cv[i].clsid[0] && clsid[1] == cv[i].clsid[1])",
      "109:    return cv[i].mime;",
      "110:  }",
      "111:  return NULL;",
      "112: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "96: private int",
      "97: cdf_file_property_info(struct magic_set *ms, const cdf_property_info_t *info,",
      "99: {",
      "100:         size_t i;",
      "101:         cdf_timestamp_t tp;",
      "",
      "[Removed Lines]",
      "98:     size_t count)",
      "",
      "[Added Lines]",
      "132:     size_t count, const cdf_directory_t *root_storage)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "108:  memset(&ts, 0, sizeof(ts));",
      "110:         for (i = 0; i < count; i++) {",
      "111:                 cdf_print_property_name(buf, sizeof(buf), info[i].pi_id);",
      "112:                 switch (info[i].pi_type) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "144:         if (!NOTMIME(ms) && root_storage)",
      "145:   str = cdf_clsid_to_mime(root_storage->d_storage_uuid, clsid2mime);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "163:                                                     buf, vbuf) == -1)",
      "164:                                                         return -1;",
      "165:                                         }",
      "167:         CDF_PROPERTY_NAME_OF_APPLICATION) {",
      "168:      str = cdf_app_to_mime(vbuf, app2mime);",
      "169:     }",
      "",
      "[Removed Lines]",
      "166:                                 } else if (info[i].pi_id ==",
      "",
      "[Added Lines]",
      "203:                                 } else if (str == NULL && info[i].pi_id ==",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "218: private int",
      "219: cdf_file_summary_info(struct magic_set *ms, const cdf_header_t *h,",
      "221: {",
      "222:         cdf_summary_info_header_t si;",
      "223:         cdf_property_info_t *info;",
      "",
      "[Removed Lines]",
      "220:     const cdf_stream_t *sst)",
      "",
      "[Added Lines]",
      "257:     const cdf_stream_t *sst, const cdf_directory_t *root_storage)",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "228:                 return -1;",
      "230:         if (NOTMIME(ms)) {",
      "231:                 if (file_printf(ms, \"Composite Document File V2 Document\")",
      "232:       == -1)",
      "233:                         return -1;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "268:   const char *str;",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "255:                                 return -2;",
      "256:                         break;",
      "257:                 }",
      "261:         free(info);",
      "263:         return m == -1 ? -2 : m;",
      "",
      "[Removed Lines]",
      "258:         }",
      "260:         m = cdf_file_property_info(ms, info, count);",
      "",
      "[Added Lines]",
      "297:   if (root_storage) {",
      "298:    str = cdf_clsid_to_mime(root_storage->d_storage_uuid, clsid2desc);",
      "299:    if (str)",
      "300:     if (file_printf(ms, \", %s\", str) == -1)",
      "301:      return -2;",
      "302:    }",
      "303:   }",
      "305:         m = cdf_file_property_info(ms, info, count, root_storage);",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "275:         int i;",
      "276:         const char *expn = \"\";",
      "277:         const char *corrupt = \"corrupt: \";",
      "279:         info.i_fd = fd;",
      "280:         info.i_buf = buf;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:         const cdf_directory_t *root_storage;",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "308:                 goto out2;",
      "309:         }",
      "312:                 expn = \"Cannot read short stream\";",
      "313:                 goto out3;",
      "314:         }",
      "",
      "[Removed Lines]",
      "311:         if ((i = cdf_read_short_stream(&info, &h, &sat, &dir, &sst)) == -1) {",
      "",
      "[Added Lines]",
      "357:         if ((i = cdf_read_short_stream(&info, &h, &sat, &dir, &sst,",
      "358:      &root_storage)) == -1) {",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "329: #ifdef CDF_DEBUG",
      "330:         cdf_dump_summary_info(&h, &scn);",
      "331: #endif",
      "334:  if (i == 0) {",
      "335:   const char *str = NULL;",
      "336:   cdf_directory_t *d;",
      "337:   char name[__arraycount(d->d_name)];",
      "338:   size_t j, k;",
      "340:    d = &dir.dir_tab[j];",
      "341:    for (k = 0; k < sizeof(name); k++)",
      "342:     name[k] = (char)cdf_tole2(d->d_name[k]);",
      "349:   }",
      "350:   if (NOTMIME(ms)) {",
      "351:    if (str != NULL) {",
      "",
      "[Removed Lines]",
      "332:         if ((i = cdf_file_summary_info(ms, &h, &scn)) < 0)",
      "333:                 expn = \"Can't expand summary_info\";",
      "339:   for (j = 0; j < dir.dir_len; j++) {",
      "343:    if (NOTMIME(ms))",
      "344:     str = cdf_app_to_mime(name, name2desc);",
      "345:    else",
      "346:     str = cdf_app_to_mime(name, name2mime);",
      "347:    if (str != NULL)",
      "348:     break;",
      "",
      "[Added Lines]",
      "379:         if ((i = cdf_file_summary_info(ms, &h, &scn, root_storage)) < 0)",
      "380:             expn = \"Can't expand summary_info\";",
      "388:   for (j = 0; str == NULL && j < dir.dir_len; j++) {",
      "392:    str = cdf_app_to_mime(name,",
      "393:        NOTMIME(ms) ? name2desc : name2mime);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "244c289f9cc29c25fcd9988d0ffefa693c27ae32",
      "candidate_info": {
        "commit_hash": "244c289f9cc29c25fcd9988d0ffefa693c27ae32",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/244c289f9cc29c25fcd9988d0ffefa693c27ae32",
        "files": [
          "build/build.mk",
          "svnclean.bat",
          "vcsclean",
          "win32/build/cvsclean.js",
          "win32/build/svnclean.js"
        ],
        "message": "Removed cvsclean and svnclean tools",
        "before_after_code_files": [
          "build/build.mk||build/build.mk",
          "svnclean.bat||svnclean.bat",
          "win32/build/cvsclean.js||win32/build/cvsclean.js",
          "win32/build/svnclean.js||win32/build/svnclean.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "build/build.mk||build/build.mk": [
          "File: build/build.mk -> build/build.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #  +----------------------------------------------------------------------+",
          "2: #  | PHP Version 5                                                        |",
          "3: #  +----------------------------------------------------------------------+",
          "5: #  +----------------------------------------------------------------------+",
          "6: #  | This source file is subject to version 3.01 of the PHP license,      |",
          "7: #  | that is bundled with this package in the file LICENSE, and is        |",
          "",
          "[Removed Lines]",
          "4: #  | Copyright (c) 1997-2006 The PHP Group                                |",
          "",
          "[Added Lines]",
          "4: #  | Copyright (c) 1997-2014 The PHP Group                                |",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "14: #  | Author: Sascha Schumann <sascha@schumann.cx>                         |",
          "15: #  +----------------------------------------------------------------------+",
          "16: #",
          "19: #",
          "20: # Makefile to generate build tools",
          "21: #",
          "",
          "[Removed Lines]",
          "17: # $Id$",
          "18: #",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "61:  md5sum $$distname.tar.bz2; \\",
          "62:  bzip2 -t $$distname.tar.bz2",
          "74: gitclean-work:",
          "75:  @if (test ! -f '.git/info/exclude' || grep -s \"git-ls-files\" .git/info/exclude); then \\",
          "76:   (echo \"Rebuild .git/info/exclude\" && echo '*.o' > .git/info/exclude && git svn propget svn:ignore | grep -v config.nice >> .git/info/exclude); \\",
          "",
          "[Removed Lines]",
          "64: cvsclean-work:",
          "65:  @for i in `find . -name .cvsignore`; do \\",
          "66:   (cd `dirname $$i` 2>/dev/null && rm -rf `cat .cvsignore | grep -v config.nice | sed 's/[[:space:]]/ /g'` *.o *.a *.lo *.la *.gcno *.gcda .libs || true); \\",
          "67:  done",
          "69: svnclean-work:",
          "70:  @for i in `find . -type d ! -path '*/.svn/*' | grep -v '.svn'`; do \\",
          "71:   (cd $$i 2>/dev/null && rm -rf `svn propget svn:ignore . | grep -v config.nice` *.o *.a *.lo *.la *.gcno *.gcda .libs || true); \\",
          "72:  done",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "svnclean.bat||svnclean.bat": [
          "File: svnclean.bat -> svnclean.bat",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "win32/build/cvsclean.js||win32/build/cvsclean.js": [
          "File: win32/build/cvsclean.js -> win32/build/cvsclean.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "win32/build/svnclean.js||win32/build/svnclean.js": [
          "File: win32/build/svnclean.js -> win32/build/svnclean.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5ec5c80dc4431baed0dc828ab1b20d3fd45cd1b3",
      "candidate_info": {
        "commit_hash": "5ec5c80dc4431baed0dc828ab1b20d3fd45cd1b3",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/5ec5c80dc4431baed0dc828ab1b20d3fd45cd1b3",
        "files": [
          ".travis.yml",
          "travis/compile.sh"
        ],
        "message": "enable phpdbg for the travis build, and also run the testsuite for it",
        "before_after_code_files": [
          "travis/compile.sh||travis/compile.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "travis/compile.sh||travis/compile.sh": [
          "File: travis/compile.sh -> travis/compile.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: --with-bz2 \\",
          "48: --with-openssl \\",
          "49: --with-gmp \\",
          "51: make --quiet",
          "",
          "[Removed Lines]",
          "50: --enable-bcmath",
          "",
          "[Added Lines]",
          "50: --enable-bcmath \\",
          "51: --enable-phpdbg",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "06a03bbfa60bedb3f30bb2908449fc30d54f848e",
      "candidate_info": {
        "commit_hash": "06a03bbfa60bedb3f30bb2908449fc30d54f848e",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/06a03bbfa60bedb3f30bb2908449fc30d54f848e",
        "files": [
          "NEWS",
          "ext/mysqli/mysqli_nonapi.c"
        ],
        "message": "Fix mysqli build when building against libmysqlclient.",
        "before_after_code_files": [
          "ext/mysqli/mysqli_nonapi.c||ext/mysqli/mysqli_nonapi.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ext/mysqli/mysqli_nonapi.c||ext/mysqli/mysqli_nonapi.c": [
          "File: ext/mysqli/mysqli_nonapi.c -> ext/mysqli/mysqli_nonapi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "575:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Empty query\");",
          "576:   RETURN_FALSE;",
          "577:  }",
          "578:  if ((resultmode & ~MYSQLI_ASYNC) != MYSQLI_USE_RESULT && (resultmode & ~(MYSQLI_ASYNC | MYSQLI_STORE_RESULT_COPY_DATA)) != MYSQLI_STORE_RESULT) {",
          "579:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid value for resultmode\");",
          "580:   RETURN_FALSE;",
          "581:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "578: #ifdef MYSQLI_USE_MYSQLND",
          "580: #else",
          "581:  if ((resultmode & ~MYSQLI_ASYNC) != MYSQLI_USE_RESULT && (resultmode & ~MYSQLI_ASYNC) != MYSQLI_STORE_RESULT) {",
          "582: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "609:   RETURN_TRUE;",
          "610:  }",
          "612:  switch (resultmode & ~(MYSQLI_ASYNC | MYSQLI_STORE_RESULT_COPY_DATA)) {",
          "613:   case MYSQLI_STORE_RESULT:",
          "614: #ifdef MYSQLI_USE_MYSQLND",
          "615:    if (resultmode & MYSQLI_STORE_RESULT_COPY_DATA) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "616: #ifdef MYSQLI_USE_MYSQLND",
          "618: #else",
          "619:  switch (resultmode & ~MYSQLI_ASYNC) {",
          "620: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e9c9169e05e0f9753151c16e6a0806f9c5c614bb",
      "candidate_info": {
        "commit_hash": "e9c9169e05e0f9753151c16e6a0806f9c5c614bb",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/e9c9169e05e0f9753151c16e6a0806f9c5c614bb",
        "files": [
          "ext/openssl/tests/bug65538_002.phpt"
        ],
        "message": "skip this test which fails without network",
        "before_after_code_files": [
          "ext/openssl/tests/bug65538_002.phpt||ext/openssl/tests/bug65538_002.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ext/openssl/tests/bug65538_002.phpt||ext/openssl/tests/bug65538_002.phpt": [
          "File: ext/openssl/tests/bug65538_002.phpt -> ext/openssl/tests/bug65538_002.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: --SKIPIF--",
          "4: <?php",
          "5: if (!extension_loaded('openssl')) die('skip, openssl required');",
          "6: --FILE--",
          "7: <?php",
          "8: $clientCtx = stream_context_create(['ssl' => [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: if (getenv(\"SKIP_ONLINE_TESTS\")) die(\"skip online test\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "79519f7e30f35838203e13dc31d45426d6d28ab3",
      "candidate_info": {
        "commit_hash": "79519f7e30f35838203e13dc31d45426d6d28ab3",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/79519f7e30f35838203e13dc31d45426d6d28ab3",
        "files": [
          "phpdbg.c"
        ],
        "message": "Fix possible segfault depending on memory location...",
        "before_after_code_files": [
          "phpdbg.c||phpdbg.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "phpdbg.c||phpdbg.c": [
          "File: phpdbg.c -> phpdbg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "159:  zend_hash_init(&PHPDBG_G(bp)[PHPDBG_BREAK_COND], 8, NULL, php_phpdbg_destroy_bp_condition, 0);",
          "160:  zend_hash_init(&PHPDBG_G(bp)[PHPDBG_BREAK_MAP], 8, NULL, NULL, 0);",
          "164:  zend_hash_init(&PHPDBG_G(seek), 8, NULL, NULL, 0);",
          "165:  zend_hash_init(&PHPDBG_G(registered), 8, NULL, php_phpdbg_destroy_registered, 0);",
          "",
          "[Removed Lines]",
          "162:  phpdbg_setup_watchpoints(TSRMLS_C);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1256:    mm_heap->use_zend_alloc = 0;",
          "1257:   }",
          "1259:   PHPDBG_G(original_free_function) = mm_heap->_free;",
          "1260:   mm_heap->_free = phpdbg_watch_efree;",
          "1264: #if defined(ZEND_SIGNALS) && !defined(_WIN32)",
          "1265:   zend_try {",
          "",
          "[Removed Lines]",
          "1262:   zend_activate(TSRMLS_C);",
          "",
          "[Added Lines]",
          "1257:   zend_activate(TSRMLS_C);",
          "1262:   phpdbg_setup_watchpoints(TSRMLS_C);",
          "",
          "---------------"
        ]
      }
    }
  ]
}