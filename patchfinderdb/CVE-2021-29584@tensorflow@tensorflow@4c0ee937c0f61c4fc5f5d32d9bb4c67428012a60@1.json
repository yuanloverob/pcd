{
  "cve_id": "CVE-2021-29584",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. An attacker can trigger a denial of service via a `CHECK`-fail in caused by an integer overflow in constructing a new tensor shape. This is because the implementation(https://github.com/tensorflow/tensorflow/blob/0908c2f2397c099338b901b067f6495a5b96760b/tensorflow/core/kernels/sparse_split_op.cc#L66-L70) builds a dense shape without checking that the dimensions would not result in overflow. The `TensorShape` constructor(https://github.com/tensorflow/tensorflow/blob/6f9896890c4c703ae0a0845394086e2e1e523299/tensorflow/core/framework/tensor_shape.cc#L183-L188) uses a `CHECK` operation which triggers when `InitDims`(https://github.com/tensorflow/tensorflow/blob/6f9896890c4c703ae0a0845394086e2e1e523299/tensorflow/core/framework/tensor_shape.cc#L212-L296) returns a non-OK status. This is a legacy implementation of the constructor and operations should use `BuildTensorShapeBase` or `AddDimWithStatus` to prevent `CHECK`-failures in the presence of overflows. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60",
  "patch_info": {
    "commit_hash": "4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60",
    "files": [
      "tensorflow/core/kernels/sparse_split_op.cc"
    ],
    "message": "Prevent overflow in sparse op\n\nPiperOrigin-RevId: 372442006\nChange-Id: I60fe31cd7e56fb3501e97c63500caf902ddeee96",
    "before_after_code_files": [
      "tensorflow/core/kernels/sparse_split_op.cc||tensorflow/core/kernels/sparse_split_op.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/sparse_split_op.cc||tensorflow/core/kernels/sparse_split_op.cc": [
      "File: tensorflow/core/kernels/sparse_split_op.cc -> tensorflow/core/kernels/sparse_split_op.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "63:                                         input_shape.vec<int64>()(axis),",
      "64:                                         \"), got \", num_split_));",
      "66:     sparse::SparseTensor sparse_tensor;",
      "67:     OP_REQUIRES_OK(context,",
      "72:     std::vector<sparse::SparseTensor> outputs;",
      "73:     OP_REQUIRES_OK(context, sparse::SparseTensor::Split<T>(",
      "",
      "[Removed Lines]",
      "68:                    sparse::SparseTensor::Create(",
      "69:                        input_indices, input_values,",
      "70:                        TensorShape(input_shape.vec<int64>()), &sparse_tensor));",
      "",
      "[Added Lines]",
      "67:     TensorShape dense_shape;",
      "68:     const auto input_shape_flat = input_shape.flat<int64>();",
      "69:     for (int i = 0; i < input_shape.NumElements(); i++) {",
      "70:       OP_REQUIRES_OK(context,",
      "71:                      dense_shape.AddDimWithStatus(input_shape_flat(i)));",
      "72:     }",
      "76:                    sparse::SparseTensor::Create(input_indices, input_values,",
      "77:                                                 dense_shape, &sparse_tensor));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "57888835d732922a3279c93ad16c272645cf251d",
      "candidate_info": {
        "commit_hash": "57888835d732922a3279c93ad16c272645cf251d",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/57888835d732922a3279c93ad16c272645cf251d",
        "files": [
          "tensorflow/core/kernels/sparse_split_op.cc"
        ],
        "message": "Prevent overflow in sparse op\n\nPiperOrigin-RevId: 372442006\nChange-Id: I60fe31cd7e56fb3501e97c63500caf902ddeee96",
        "before_after_code_files": [
          "tensorflow/core/kernels/sparse_split_op.cc||tensorflow/core/kernels/sparse_split_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/sparse_split_op.cc||tensorflow/core/kernels/sparse_split_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/sparse_split_op.cc||tensorflow/core/kernels/sparse_split_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/sparse_split_op.cc||tensorflow/core/kernels/sparse_split_op.cc": [
          "File: tensorflow/core/kernels/sparse_split_op.cc -> tensorflow/core/kernels/sparse_split_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "63:                                 input_shape.vec<int64>()(split_dim), \"), got \",",
          "64:                                 num_split_));",
          "66:     sparse::SparseTensor sparse_tensor;",
          "67:     OP_REQUIRES_OK(context,",
          "72:     std::vector<sparse::SparseTensor> outputs;",
          "73:     OP_REQUIRES_OK(context,",
          "",
          "[Removed Lines]",
          "68:                    sparse::SparseTensor::Create(",
          "69:                        input_indices, input_values,",
          "70:                        TensorShape(input_shape.vec<int64>()), &sparse_tensor));",
          "",
          "[Added Lines]",
          "67:     TensorShape dense_shape;",
          "68:     const auto input_shape_flat = input_shape.flat<int64>();",
          "69:     for (int i = 0; i < input_shape.NumElements(); i++) {",
          "70:       OP_REQUIRES_OK(context,",
          "71:                      dense_shape.AddDimWithStatus(input_shape_flat(i)));",
          "72:     }",
          "76:                    sparse::SparseTensor::Create(input_indices, input_values,",
          "77:                                                 dense_shape, &sparse_tensor));",
          "",
          "---------------"
        ]
      }
    }
  ]
}