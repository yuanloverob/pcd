{
  "cve_id": "CVE-2013-3232",
  "cve_desc": "The nr_recvmsg function in net/netrom/af_netrom.c in the Linux kernel before 3.9-rc7 does not initialize a certain data structure, which allows local users to obtain sensitive information from kernel stack memory via a crafted recvmsg or recvfrom system call.",
  "repo": "torvalds/linux",
  "patch_hash": "c802d759623acbd6e1ee9fbdabae89159a513913",
  "patch_info": {
    "commit_hash": "c802d759623acbd6e1ee9fbdabae89159a513913",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/c802d759623acbd6e1ee9fbdabae89159a513913",
    "files": [
      "net/netrom/af_netrom.c"
    ],
    "message": "netrom: fix invalid use of sizeof in nr_recvmsg()\n\nsizeof() when applied to a pointer typed expression gives the size of the\npointer, not that of the pointed data.\nIntroduced by commit 3ce5ef(netrom: fix info leak via msg_name in nr_recvmsg)\n\nSigned-off-by: Wei Yongjun <yongjun_wei@trendmicro.com.cn>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "before_after_code_files": [
      "net/netrom/af_netrom.c||net/netrom/af_netrom.c"
    ]
  },
  "patch_diff": {
    "net/netrom/af_netrom.c||net/netrom/af_netrom.c": [
      "File: net/netrom/af_netrom.c -> net/netrom/af_netrom.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1173:  }",
      "1175:  if (sax != NULL) {",
      "1177:   sax->sax25_family = AF_NETROM;",
      "1178:   skb_copy_from_linear_data_offset(skb, 7, sax->sax25_call.ax25_call,",
      "1179:          AX25_ADDR_LEN);",
      "",
      "[Removed Lines]",
      "1176:   memset(sax, 0, sizeof(sax));",
      "",
      "[Added Lines]",
      "1176:   memset(sax, 0, sizeof(*sax));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3ce5efad47b62c57a4f5c54248347085a750ce0e",
      "candidate_info": {
        "commit_hash": "3ce5efad47b62c57a4f5c54248347085a750ce0e",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/3ce5efad47b62c57a4f5c54248347085a750ce0e",
        "files": [
          "net/netrom/af_netrom.c"
        ],
        "message": "netrom: fix info leak via msg_name in nr_recvmsg()\n\nIn case msg_name is set the sockaddr info gets filled out, as\nrequested, but the code fails to initialize the padding bytes of\nstruct sockaddr_ax25 inserted by the compiler for alignment. Also\nthe sax25_ndigis member does not get assigned, leaking four more\nbytes.\n\nBoth issues lead to the fact that the code will leak uninitialized\nkernel stack bytes in net/socket.c.\n\nFix both issues by initializing the memory with memset(0).\n\nCc: Ralf Baechle <ralf@linux-mips.org>\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "net/netrom/af_netrom.c||net/netrom/af_netrom.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "net/netrom/af_netrom.c||net/netrom/af_netrom.c"
          ],
          "candidate": [
            "net/netrom/af_netrom.c||net/netrom/af_netrom.c"
          ]
        }
      },
      "candidate_diff": {
        "net/netrom/af_netrom.c||net/netrom/af_netrom.c": [
          "File: net/netrom/af_netrom.c -> net/netrom/af_netrom.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1173:  }",
          "1175:  if (sax != NULL) {",
          "1176:   sax->sax25_family = AF_NETROM;",
          "1177:   skb_copy_from_linear_data_offset(skb, 7, sax->sax25_call.ax25_call,",
          "1178:          AX25_ADDR_LEN);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1176:   memset(sax, 0, sizeof(sax));",
          "",
          "---------------"
        ]
      }
    }
  ]
}