{
  "cve_id": "CVE-2017-6952",
  "cve_desc": "Integer overflow in the cs_winkernel_malloc function in winkernel_mm.c in Capstone 3.0.4 and earlier allows attackers to cause a denial of service (heap-based buffer overflow in a kernel driver) or possibly have unspecified other impact via a large value.",
  "repo": "aquynh/capstone",
  "patch_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
  "patch_info": {
    "commit_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/6fe86eef621b9849f51a5e1e5d73258a93440403",
    "files": [
      "windows/winkernel_mm.c"
    ],
    "message": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.",
    "before_after_code_files": [
      "windows/winkernel_mm.c||windows/winkernel_mm.c"
    ]
  },
  "patch_diff": {
    "windows/winkernel_mm.c||windows/winkernel_mm.c": [
      "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: #include \"winkernel_mm.h\"",
      "5: #include <ntddk.h>",
      "8: static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <Ntintsafe.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: #pragma prefast(suppress : 30030)  // Allocating executable POOL_TYPE memory",
      "38:  if (!block) {",
      "39:   return NULL;",
      "40:  }",
      "",
      "[Removed Lines]",
      "36:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "37:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
      "",
      "[Added Lines]",
      "37:  size_t number_of_bytes = 0;",
      "38:  CS_WINKERNEL_MEMBLOCK *block = NULL;",
      "42:  if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {",
      "43:   return NULL;",
      "44:  }",
      "45:  block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "46:    NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d5f075a17a481b4d03c1a233cf72ebf8954875ad",
      "candidate_info": {
        "commit_hash": "d5f075a17a481b4d03c1a233cf72ebf8954875ad",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/d5f075a17a481b4d03c1a233cf72ebf8954875ad",
        "files": [
          "arch/X86/X86Disassembler.c"
        ],
        "message": "x86: LES is invalid in x64. see #904",
        "before_after_code_files": [
          "arch/X86/X86Disassembler.c||arch/X86/X86Disassembler.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86Disassembler.c||arch/X86/X86Disassembler.c": [
          "File: arch/X86/X86Disassembler.c -> arch/X86/X86Disassembler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "954:   result = (!translateInstruction(instr, &insn)) ?  true : false;",
          "955:   if (result) {",
          "956:    instr->imm_size = insn.immSize;",
          "957:    if (handle->detail) {",
          "958:     update_pub_insn(instr->flat_insn, &insn, instr->x86_prefix);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "957:    if (handle->mode & CS_MODE_64 &&",
          "958:     (instr->Opcode == X86_LES16rm || instr->Opcode == X86_LES32rm))",
          "960:     return false;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0237e4ca0cf3687e60e3f7626d144ff07d1aecf5",
      "candidate_info": {
        "commit_hash": "0237e4ca0cf3687e60e3f7626d144ff07d1aecf5",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/0237e4ca0cf3687e60e3f7626d144ff07d1aecf5",
        "files": [
          "arch/ARM/ARMMappingInsn.inc"
        ],
        "message": "arm: fix operand access info for Bcc & BL. see issue #826",
        "before_after_code_files": [
          "arch/ARM/ARMMappingInsn.inc||arch/ARM/ARMMappingInsn.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/ARM/ARMMappingInsn.inc||arch/ARM/ARMMappingInsn.inc": [
          "File: arch/ARM/ARMMappingInsn.inc -> arch/ARM/ARMMappingInsn.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "148: {",
          "149:  ARM_BL, ARM_INS_BL,",
          "150: #ifndef CAPSTONE_DIET",
          "152: #endif",
          "153: },",
          "154: {",
          "",
          "[Removed Lines]",
          "151:  { ARM_REG_PC, 0 }, { ARM_REG_LR, 0 }, { ARM_GRP_CALL, ARM_GRP_ARM, 0 }, 1, 0",
          "",
          "[Added Lines]",
          "151:  { ARM_REG_PC, 0 }, { ARM_REG_LR, ARM_REG_PC, 0 }, { ARM_GRP_CALL, ARM_GRP_ARM, 0 }, 1, 0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "202: {",
          "203:  ARM_Bcc, ARM_INS_B,",
          "204: #ifndef CAPSTONE_DIET",
          "206: #endif",
          "207: },",
          "208: {",
          "",
          "[Removed Lines]",
          "205:  { 0 }, { 0 }, { ARM_GRP_ARM, 0 }, 1, 0",
          "",
          "[Added Lines]",
          "205:  { ARM_REG_PC, 0 }, { ARM_REG_PC, 0 }, { ARM_GRP_ARM, 0 }, 1, 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6b88d1d51eadf7175a8f8a11b690684443b11359",
      "candidate_info": {
        "commit_hash": "6b88d1d51eadf7175a8f8a11b690684443b11359",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/6b88d1d51eadf7175a8f8a11b690684443b11359",
        "files": [
          "arch/X86/X86DisassemblerDecoder.c"
        ],
        "message": "x86: handle some AVX & segment-related instructions properly. this fixes a segfault reported by @revskills",
        "before_after_code_files": [
          "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c": [
          "File: arch/X86/X86DisassemblerDecoder.c -> arch/X86/X86DisassemblerDecoder.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1708:   } \\",
          "1709:   switch (type) {                                           \\",
          "1710:    default:                                              \\",
          "1713:    case TYPE_Rv:                                         \\",
          "1714:     return (uint8_t)(base + index);                   \\",
          "1715:    case TYPE_R8:                                         \\",
          "",
          "[Removed Lines]",
          "1712:     return 0;                                             \\",
          "",
          "[Added Lines]",
          "1712:     return 0;                                         \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1737:    case TYPE_VK1:                                        \\",
          "1738:    case TYPE_VK8:                                        \\",
          "1739:    case TYPE_VK16:                                       \\",
          "1740:     return prefix##_K0 + index;                       \\",
          "1741:    case TYPE_MM64:                                       \\",
          "1742:    case TYPE_MM32:                                       \\",
          "1743:    case TYPE_MM:                                         \\",
          "1744:     return prefix##_MM0 + (index & 7);                \\",
          "1745:    case TYPE_SEGMENTREG:                                 \\",
          "1747:    case TYPE_DEBUGREG:                                   \\",
          "1748:     if (index > 7)                                    \\",
          "1750:     return prefix##_DR0 + index;                      \\",
          "1751:    case TYPE_CONTROLREG:                                 \\",
          "1752:     return prefix##_CR0 + index;                      \\",
          "1754:  }",
          "",
          "[Removed Lines]",
          "1746:     return prefix##_ES + (index & 7);                 \\",
          "1753:   }                                                     \\",
          "",
          "[Added Lines]",
          "1740:     if (index > 7)                                    \\",
          "1748:     if (index > 5)                                    \\",
          "1750:     return prefix##_ES + index;                       \\",
          "1757:   }                                                         \\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c62fe10d7bc0022a91a328d0c43268a23c9cfc62",
      "candidate_info": {
        "commit_hash": "c62fe10d7bc0022a91a328d0c43268a23c9cfc62",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/c62fe10d7bc0022a91a328d0c43268a23c9cfc62",
        "files": [
          "nmake-x86.bat"
        ],
        "message": "add nmake-x86.bat",
        "before_after_code_files": [
          "nmake-x86.bat||nmake-x86.bat"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "nmake-x86.bat||nmake-x86.bat": [
          "File: nmake-x86.bat -> nmake-x86.bat",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: :: Capstone disassembler engine (www.capstone-engine.org)",
          "2: :: Build Capstone libs (capstone.dll & capstone.lib) on Windows with CMake & Nmake",
          "3: :: By Nguyen Anh Quynh, 2017",
          "5: cmake -DCMAKE_BUILD_TYPE=Release SUPPORTED_ARCHITECTURES=X86 -G \"NMake Makefiles\" ..",
          "6: nmake",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "86e9dd494c904bd85c46909e0044ad75397d637d",
      "candidate_info": {
        "commit_hash": "86e9dd494c904bd85c46909e0044ad75397d637d",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/86e9dd494c904bd85c46909e0044ad75397d637d",
        "files": [
          "bindings/java/capstone/M68k_const.java",
          "bindings/ocaml/m68k_const.ml"
        ],
        "message": "bindings: update Java & Ocaml after recent change on M68k interface",
        "before_after_code_files": [
          "bindings/javcapstone/M68k_const.java||bindings/java/capstone/M68k_const.java",
          "bindings/ocaml/m68k_const.ml||bindings/ocaml/m68k_const.ml"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/javcapstone/M68k_const.java||bindings/java/capstone/M68k_const.java": [
          "File: bindings/javcapstone/M68k_const.java -> bindings/java/capstone/M68k_const.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86:  public static final int M68K_OP_FP_SINGLE = 4;",
          "87:  public static final int M68K_OP_FP_DOUBLE = 5;",
          "88:  public static final int M68K_OP_REG_BITS = 6;",
          "89:  public static final int M68K_OP_REG_PAIR = 7;",
          "",
          "---------------"
        ],
        "bindings/ocaml/m68k_const.ml||bindings/ocaml/m68k_const.ml": [
          "File: bindings/ocaml/m68k_const.ml -> bindings/ocaml/m68k_const.ml",
          "--- Hunk 1 ---",
          "[Context before]",
          "80: let _M68K_OP_REG = 1;;",
          "81: let _M68K_OP_IMM = 2;;",
          "82: let _M68K_OP_MEM = 3;;",
          "87: let _M68K_CPU_SIZE_NONE = 0;;",
          "88: let _M68K_CPU_SIZE_BYTE = 1;;",
          "",
          "[Removed Lines]",
          "83: let _M68K_OP_FP = 4;;",
          "84: let _M68K_OP_REG_BITS = 5;;",
          "85: let _M68K_OP_REG_PAIR = 6;;",
          "",
          "[Added Lines]",
          "83: let _M68K_OP_FP_SINGLE = 4;;",
          "84: let _M68K_OP_FP_DOUBLE = 5;;",
          "85: let _M68K_OP_REG_BITS = 6;;",
          "86: let _M68K_OP_REG_PAIR = 7;;",
          "",
          "---------------"
        ]
      }
    }
  ]
}