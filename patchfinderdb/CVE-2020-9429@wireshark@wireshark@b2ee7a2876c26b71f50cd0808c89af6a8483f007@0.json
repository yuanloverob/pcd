{
  "cve_id": "CVE-2020-9429",
  "cve_desc": "In Wireshark 3.2.0 to 3.2.1, the WireGuard dissector could crash. This was addressed in epan/dissectors/packet-wireguard.c by handling the situation where a certain data structure intentionally has a NULL value.",
  "repo": "wireshark/wireshark",
  "patch_hash": "b2ee7a2876c26b71f50cd0808c89af6a8483f007",
  "patch_info": {
    "commit_hash": "b2ee7a2876c26b71f50cd0808c89af6a8483f007",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/b2ee7a2876c26b71f50cd0808c89af6a8483f007",
    "files": [
      "epan/dissectors/packet-wireguard.c"
    ],
    "message": "WireGuard: fix null pointer crash\n\nIt was assumed that the WireGuard dissector is always called on the\nfirst pass before the second pass. That might not be the case when the\nheuristics dissector sets a conversation dissector later in the stream.\nBe prepared to handle this case. Do not simply abort, the previous\npackets may be valid data messages.\n\nBug: 16394\nChange-Id: Id5bf38c07f4d1bffd4b372e92d9a8784e094829a\nReviewed-on: https://code.wireshark.org/review/36148\nPetri-Dish: Peter Wu <peter@lekensteyn.nl>\nTested-by: Petri Dish Buildbot\nReviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-wireguard.c||epan/dissectors/packet-wireguard.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-wireguard.c||epan/dissectors/packet-wireguard.c": [
      "File: epan/dissectors/packet-wireguard.c -> epan/dissectors/packet-wireguard.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1378:                 wg_process_initiation(tvb, hs);",
      "1379:             }",
      "1380:         }",
      "1382:         hs = wg_pinfo->session->hs;",
      "1383:     }",
      "",
      "[Removed Lines]",
      "1381:     } else if (wg_pinfo->session) {",
      "",
      "[Added Lines]",
      "1381:     } else if (wg_pinfo && wg_pinfo->session) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1412:         wg_sessions_insert(sender_id, session);",
      "1413:         wg_pinfo->session = session;",
      "1414:     }",
      "1416:     if (session) {",
      "1417:         ti = proto_tree_add_uint(wg_tree, hf_wg_stream, tvb, 0, 0, session->stream);",
      "1418:         proto_item_set_generated(ti);",
      "",
      "[Removed Lines]",
      "1415:     wg_session_t *session = wg_pinfo->session;",
      "",
      "[Added Lines]",
      "1415:     wg_session_t *session = wg_pinfo ? wg_pinfo->session : NULL;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1451:         }",
      "1453:     } else {",
      "1455:     }",
      "1457:     wg_dissect_pubkey(wg_tree, tvb, 12, TRUE);",
      "",
      "[Removed Lines]",
      "1454:         session = wg_pinfo->session;",
      "",
      "[Added Lines]",
      "1454:         session = wg_pinfo ? wg_pinfo->session : NULL;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1510:         }",
      "1512:     } else {",
      "1514:     }",
      "1515:     if (session) {",
      "1516:         ti = proto_tree_add_uint(wg_tree, hf_wg_stream, tvb, 0, 0, session->stream);",
      "",
      "[Removed Lines]",
      "1513:         session = wg_pinfo->session;",
      "",
      "[Added Lines]",
      "1513:         session = wg_pinfo ? wg_pinfo->session : NULL;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1559:             wg_pinfo->receiver_is_initiator = receiver_is_initiator;",
      "1560:         }",
      "1561:     } else {",
      "1563:     }",
      "1564:     if (session) {",
      "1565:         ti = proto_tree_add_uint(wg_tree, hf_wg_stream, tvb, 0, 0, session->stream);",
      "",
      "[Removed Lines]",
      "1562:         session = wg_pinfo->session;",
      "",
      "[Added Lines]",
      "1562:         session = wg_pinfo ? wg_pinfo->session : NULL;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "73c5fff899f253c44a72657048aec7db6edee571",
      "candidate_info": {
        "commit_hash": "73c5fff899f253c44a72657048aec7db6edee571",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/73c5fff899f253c44a72657048aec7db6edee571",
        "files": [
          "epan/dissectors/packet-wireguard.c"
        ],
        "message": "WireGuard: fix null pointer crash\n\nIt was assumed that the WireGuard dissector is always called on the\nfirst pass before the second pass. That might not be the case when the\nheuristics dissector sets a conversation dissector later in the stream.\nBe prepared to handle this case. Do not simply abort, the previous\npackets may be valid data messages.\n\nBug: 16394\nChange-Id: Id5bf38c07f4d1bffd4b372e92d9a8784e094829a\nReviewed-on: https://code.wireshark.org/review/36148\nPetri-Dish: Peter Wu <peter@lekensteyn.nl>\nTested-by: Petri Dish Buildbot\nReviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>\n(cherry picked from commit b2ee7a2876c26b71f50cd0808c89af6a8483f007)\nReviewed-on: https://code.wireshark.org/review/36159\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-wireguard.c||epan/dissectors/packet-wireguard.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-wireguard.c||epan/dissectors/packet-wireguard.c"
          ],
          "candidate": [
            "epan/dissectors/packet-wireguard.c||epan/dissectors/packet-wireguard.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-wireguard.c||epan/dissectors/packet-wireguard.c": [
          "File: epan/dissectors/packet-wireguard.c -> epan/dissectors/packet-wireguard.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1378:                 wg_process_initiation(tvb, hs);",
          "1379:             }",
          "1380:         }",
          "1382:         hs = wg_pinfo->session->hs;",
          "1383:     }",
          "",
          "[Removed Lines]",
          "1381:     } else if (wg_pinfo->session) {",
          "",
          "[Added Lines]",
          "1381:     } else if (wg_pinfo && wg_pinfo->session) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1412:         wg_sessions_insert(sender_id, session);",
          "1413:         wg_pinfo->session = session;",
          "1414:     }",
          "1416:     if (session) {",
          "1417:         ti = proto_tree_add_uint(wg_tree, hf_wg_stream, tvb, 0, 0, session->stream);",
          "1418:         proto_item_set_generated(ti);",
          "",
          "[Removed Lines]",
          "1415:     wg_session_t *session = wg_pinfo->session;",
          "",
          "[Added Lines]",
          "1415:     wg_session_t *session = wg_pinfo ? wg_pinfo->session : NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1451:         }",
          "1453:     } else {",
          "1455:     }",
          "1457:     wg_dissect_pubkey(wg_tree, tvb, 12, TRUE);",
          "",
          "[Removed Lines]",
          "1454:         session = wg_pinfo->session;",
          "",
          "[Added Lines]",
          "1454:         session = wg_pinfo ? wg_pinfo->session : NULL;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1510:         }",
          "1512:     } else {",
          "1514:     }",
          "1515:     if (session) {",
          "1516:         ti = proto_tree_add_uint(wg_tree, hf_wg_stream, tvb, 0, 0, session->stream);",
          "",
          "[Removed Lines]",
          "1513:         session = wg_pinfo->session;",
          "",
          "[Added Lines]",
          "1513:         session = wg_pinfo ? wg_pinfo->session : NULL;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1559:             wg_pinfo->receiver_is_initiator = receiver_is_initiator;",
          "1560:         }",
          "1561:     } else {",
          "1563:     }",
          "1564:     if (session) {",
          "1565:         ti = proto_tree_add_uint(wg_tree, hf_wg_stream, tvb, 0, 0, session->stream);",
          "",
          "[Removed Lines]",
          "1562:         session = wg_pinfo->session;",
          "",
          "[Added Lines]",
          "1562:         session = wg_pinfo ? wg_pinfo->session : NULL;",
          "",
          "---------------"
        ]
      }
    }
  ]
}