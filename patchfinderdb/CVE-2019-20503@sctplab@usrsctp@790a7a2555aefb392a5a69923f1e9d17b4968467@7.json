{
  "cve_id": "CVE-2019-20503",
  "cve_desc": "usrsctp before 2019-12-20 has out-of-bounds reads in sctp_load_addresses_from_init.",
  "repo": "sctplab/usrsctp",
  "patch_hash": "790a7a2555aefb392a5a69923f1e9d17b4968467",
  "patch_info": {
    "commit_hash": "790a7a2555aefb392a5a69923f1e9d17b4968467",
    "repo": "sctplab/usrsctp",
    "commit_url": "https://github.com/sctplab/usrsctp/commit/790a7a2555aefb392a5a69923f1e9d17b4968467",
    "files": [
      "usrsctplib/netinet/sctp_auth.c",
      "usrsctplib/netinet/sctp_pcb.c"
    ],
    "message": "Improve input validation for some parameters having a too small reported length.\n\nThanks to Natalie Silvanovich from Google for finding one of these\nissues in the SCTP userland stack and reporting it.",
    "before_after_code_files": [
      "usrsctplib/netinet/sctp_auth.c||usrsctplib/netinet/sctp_auth.c",
      "usrsctplib/netinet/sctp_pcb.c||usrsctplib/netinet/sctp_pcb.c"
    ]
  },
  "patch_diff": {
    "usrsctplib/netinet/sctp_auth.c||usrsctplib/netinet/sctp_auth.c": [
      "File: usrsctplib/netinet/sctp_auth.c -> usrsctplib/netinet/sctp_auth.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: #ifdef __FreeBSD__",
      "36: #include <sys/cdefs.h>",
      "38: #endif",
      "40: #include <netinet/sctp_os.h>",
      "",
      "[Removed Lines]",
      "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_auth.c 352438 2019-09-17 09:46:42Z tuexen $\");",
      "",
      "[Added Lines]",
      "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_auth.c 355931 2019-12-20 15:25:08Z tuexen $\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1421:   ptype = ntohs(phdr->param_type);",
      "1422:   plen = ntohs(phdr->param_length);",
      "1425:    break;",
      "1427:   if (ptype == SCTP_RANDOM) {",
      "",
      "[Removed Lines]",
      "1424:   if ((plen == 0) || (offset + plen > length))",
      "",
      "[Added Lines]",
      "1424:   if ((plen < sizeof(struct sctp_paramhdr)) ||",
      "1425:       (offset + plen > length))",
      "",
      "---------------"
    ],
    "usrsctplib/netinet/sctp_pcb.c||usrsctplib/netinet/sctp_pcb.c": [
      "File: usrsctplib/netinet/sctp_pcb.c -> usrsctplib/netinet/sctp_pcb.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: #ifdef __FreeBSD__",
      "36: #include <sys/cdefs.h>",
      "38: #endif",
      "40: #include <netinet/sctp_os.h>",
      "",
      "[Removed Lines]",
      "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 353477 2019-10-13 16:14:04Z markj $\");",
      "",
      "[Added Lines]",
      "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 355931 2019-12-20 15:25:08Z tuexen $\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "7247:   if (offset + plen > limit) {",
      "7248:    break;",
      "7249:   }",
      "7251:    break;",
      "7252:   }",
      "7253: #ifdef INET",
      "",
      "[Removed Lines]",
      "7250:   if (plen == 0) {",
      "",
      "[Added Lines]",
      "7250:   if (plen < sizeof(struct sctp_paramhdr)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "7463:    if (plen > sizeof(lstore)) {",
      "7464:     return (-23);",
      "7465:    }",
      "7466:    phdr = sctp_get_next_param(m, offset,",
      "7467:          (struct sctp_paramhdr *)&lstore,",
      "7468:          plen);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7466:    if (plen < sizeof(struct sctp_asconf_addrv4_param)) {",
      "7467:     return (-101);",
      "7468:    }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "390beeb7f0f7f43e922ff01c13c9bae7d9fa2060",
      "candidate_info": {
        "commit_hash": "390beeb7f0f7f43e922ff01c13c9bae7d9fa2060",
        "repo": "sctplab/usrsctp",
        "commit_url": "https://github.com/sctplab/usrsctp/commit/390beeb7f0f7f43e922ff01c13c9bae7d9fa2060",
        "files": [
          "usrsctplib/netinet/sctp_pcb.c",
          "usrsctplib/netinet/sctp_structs.h",
          "usrsctplib/netinet/sctputil.c"
        ],
        "message": "Remove unused timer.\n\nThanks to Taylor Brandstetter for providing the patch.",
        "before_after_code_files": [
          "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c",
          "usrsctplib/netinet/sctp_structs.h||usrsctplinetinet/sctp_structs.h",
          "usrsctplib/netinet/sctputil.c||usrsctplinetinet/sctputil.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c": [
          "File: usrsctplib/netinet/sctp_pcb.c -> usrsctplinetinet/sctp_pcb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 356377 2020-01-05 14:06:40Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3189:  stcb->asoc.strreset_timer.ep = (void *)new_inp;",
          "3190:  stcb->asoc.shut_guard_timer.ep = (void *)new_inp;",
          "3191:  stcb->asoc.autoclose_timer.ep = (void *)new_inp;",
          "3193:  stcb->asoc.delete_prim_timer.ep = (void *)new_inp;",
          "3195:  TAILQ_FOREACH(net, &stcb->asoc.nets, sctp_next) {",
          "",
          "[Removed Lines]",
          "3192:  stcb->asoc.delayed_event_timer.ep = (void *)new_inp;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3931:  }",
          "3933:  sctp_timer_stop(SCTP_TIMER_TYPE_NEWCOOKIE, inp, NULL, NULL,",
          "3936:  if (inp->control) {",
          "3937:   sctp_m_freem(inp->control);",
          "",
          "[Removed Lines]",
          "3934:    SCTP_FROM_SCTP_PCB + SCTP_LOC_1);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5168:  SCTP_OS_TIMER_INIT(&asoc->asconf_timer.timer);",
          "5169:  SCTP_OS_TIMER_INIT(&asoc->shut_guard_timer.timer);",
          "5170:  SCTP_OS_TIMER_INIT(&asoc->autoclose_timer.timer);",
          "5172:  SCTP_OS_TIMER_INIT(&asoc->delete_prim_timer.timer);",
          "5174:  LIST_INSERT_HEAD(&inp->sctp_asoc_list, stcb, sctp_tcblist);",
          "",
          "[Removed Lines]",
          "5171:  SCTP_OS_TIMER_INIT(&asoc->delayed_event_timer.timer);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "5551:  asoc->autoclose_timer.self = NULL;",
          "5552:  (void)SCTP_OS_TIMER_STOP(&asoc->shut_guard_timer.timer);",
          "5553:  asoc->shut_guard_timer.self = NULL;",
          "5557:  (void)SCTP_OS_TIMER_STOP(&asoc->delete_prim_timer.timer);",
          "5558:  asoc->delete_prim_timer.self = NULL;",
          "",
          "[Removed Lines]",
          "5554:  (void)SCTP_OS_TIMER_STOP(&asoc->delayed_event_timer.timer);",
          "5555:  asoc->delayed_event_timer.self = NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "5738:  (void)SCTP_OS_TIMER_STOP(&asoc->asconf_timer.timer);",
          "5739:  (void)SCTP_OS_TIMER_STOP(&asoc->shut_guard_timer.timer);",
          "5740:  (void)SCTP_OS_TIMER_STOP(&asoc->autoclose_timer.timer);",
          "5742:  TAILQ_FOREACH(net, &asoc->nets, sctp_next) {",
          "5743:   (void)SCTP_OS_TIMER_STOP(&net->rxt_timer.timer);",
          "5744:   (void)SCTP_OS_TIMER_STOP(&net->pmtu_timer.timer);",
          "",
          "[Removed Lines]",
          "5741:  (void)SCTP_OS_TIMER_STOP(&asoc->delayed_event_timer.timer);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_structs.h||usrsctplinetinet/sctp_structs.h": [
          "File: usrsctplib/netinet/sctp_structs.h -> usrsctplinetinet/sctp_structs.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #ifndef _NETINET_SCTP_STRUCTS_H_",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_structs.h 345467 2019-03-24 12:13:05Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctputil.c||usrsctplinetinet/sctputil.c": [
          "File: usrsctplib/netinet/sctputil.c -> usrsctplinetinet/sctputil.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctputil.c 356376 2020-01-05 13:56:32Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "820:  (void)SCTP_OS_TIMER_STOP(&asoc->strreset_timer.timer);",
          "821:  (void)SCTP_OS_TIMER_STOP(&asoc->asconf_timer.timer);",
          "822:  (void)SCTP_OS_TIMER_STOP(&asoc->autoclose_timer.timer);",
          "824:  TAILQ_FOREACH(net, &asoc->nets, sctp_next) {",
          "825:   (void)SCTP_OS_TIMER_STOP(&net->pmtu_timer.timer);",
          "826:   (void)SCTP_OS_TIMER_STOP(&net->hb_timer.timer);",
          "",
          "[Removed Lines]",
          "823:  (void)SCTP_OS_TIMER_STOP(&asoc->delayed_event_timer.timer);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5cd6fe9cf797cab7745f75dff30efbee1c7730f6",
      "candidate_info": {
        "commit_hash": "5cd6fe9cf797cab7745f75dff30efbee1c7730f6",
        "repo": "sctplab/usrsctp",
        "commit_url": "https://github.com/sctplab/usrsctp/commit/5cd6fe9cf797cab7745f75dff30efbee1c7730f6",
        "files": [
          "usrsctplib/netinet/sctp_input.c",
          "usrsctplib/netinet/sctp_output.c",
          "usrsctplib/netinet/sctp_pcb.c",
          "usrsctplib/netinet/sctputil.c"
        ],
        "message": "Remove dead stores reported by clang",
        "before_after_code_files": [
          "usrsctplib/netinet/sctp_input.c||usrsctplinetinet/sctp_input.c",
          "usrsctplib/netinet/sctp_output.c||usrsctplinetinet/sctp_output.c",
          "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c",
          "usrsctplib/netinet/sctputil.c||usrsctplinetinet/sctputil.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "usrsctplib/netinet/sctp_input.c||usrsctplinetinet/sctp_input.c": [
          "File: usrsctplib/netinet/sctp_input.c -> usrsctplinetinet/sctp_input.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #if defined(__FreeBSD__) && !defined(__Userspace__)",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_input.c 366474 2020-10-06 09:51:40Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4539:  struct sctp_idata_chunk *idata_chunk;",
          "4540:  uint32_t bottle_bw, on_queue;",
          "4541:  uint32_t offset, chk_len;",
          "4543:  uint16_t pktdrp_len;",
          "4544:  uint8_t pktdrp_flags;",
          "",
          "[Removed Lines]",
          "4542:  uint16_t trunc_len;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4549:  pktdrp_len = ntohs(cp->ch.chunk_length);",
          "4550:  KASSERT(limit <= pktdrp_len, (\"Inconsistent limit\"));",
          "4551:  if (pktdrp_flags & SCTP_PACKET_TRUNCATED) {",
          "4555:    return;",
          "4556:   }",
          "4559:  }",
          "4560:  limit -= sizeof(struct sctp_pktdrop_chunk);",
          "4561:  offset = 0;",
          "",
          "[Removed Lines]",
          "4552:   trunc_len = ntohs(cp->trunc_len);",
          "4553:   if (trunc_len <= pktdrp_len - sizeof(struct sctp_pktdrop_chunk)) {",
          "4557:  } else {",
          "4558:   trunc_len = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_output.c||usrsctplinetinet/sctp_output.c": [
          "File: usrsctplib/netinet/sctp_output.c -> usrsctplinetinet/sctp_output.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #if defined(__FreeBSD__) && !defined(__Userspace__)",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_output.c 366114 2020-09-24 12:26:06Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9389:    } else {",
          "9390:     asoc->ifp_had_enobuf = 0;",
          "",
          "[Removed Lines]",
          "9387:     ctl_cnt = bundle_at = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "9989:  }",
          "9990: #endif",
          "9991:  SCTP_TCB_LOCK_ASSERT(stcb);",
          "9993:  no_fragmentflg = 1;",
          "9994:  fwd_tsn = 0;",
          "",
          "[Removed Lines]",
          "9992:  tmr_started = ctl_cnt = bundle_at = error = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c": [
          "File: usrsctplib/netinet/sctp_pcb.c -> usrsctplinetinet/sctp_pcb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #if defined(__FreeBSD__) && !defined(__Userspace__)",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 366248 2020-09-29 09:36:06Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5083:  LIST_INSERT_HEAD(head, stcb, sctp_asocs);",
          "5084:  SCTP_INP_INFO_WUNLOCK();",
          "5088:   if (asoc->strmout) {",
          "5089:    SCTP_FREE(asoc->strmout, SCTP_M_STRMO);",
          "",
          "[Removed Lines]",
          "5086:  if ((err = sctp_add_remote_addr(stcb, firstaddr, NULL, port, SCTP_DO_SETSCOPE, SCTP_ALLOC_ASOC))) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctputil.c||usrsctplinetinet/sctputil.c": [
          "File: usrsctplib/netinet/sctputil.c -> usrsctplinetinet/sctputil.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #if defined(__FreeBSD__) && !defined(__Userspace__)",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctputil.c 365071 2020-09-01 21:19:14Z mjg $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1794:  CURVNET_SET((struct vnet *)tmr->vnet);",
          "1795:  NET_EPOCH_ENTER(et);",
          "1796: #endif",
          "1798:  released_asoc_reference = false;",
          "1800: #ifdef SCTP_AUDITING_ENABLED",
          "",
          "[Removed Lines]",
          "1797:  did_output = 1;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2073:   op_err = sctp_generate_cause(SCTP_BASE_SYSCTL(sctp_diag_info_code),",
          "2074:                                \"Shutdown guard timer expired\");",
          "2075:   sctp_abort_an_association(inp, stcb, op_err, SCTP_SO_NOT_LOCKED);",
          "2078:   goto out_decr;",
          "2079:  case SCTP_TIMER_TYPE_AUTOCLOSE:",
          "",
          "[Removed Lines]",
          "2076:   did_output = true;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2167: #ifdef INVARIANTS",
          "2168:   panic(\"Unknown timer type %d\", type);",
          "2169: #else",
          "2171:   goto out;",
          "2172: #endif",
          "2173:  }",
          "",
          "[Removed Lines]",
          "2170:   did_output = false;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2264:          (\"sctp_timer_start of type %d: inp = %p, stcb->sctp_ep %p\",",
          "2265:           t_type, stcb, stcb->sctp_ep));",
          "2266:  tmr = NULL;",
          "2268:  if (stcb != NULL) {",
          "2269:   SCTP_TCB_LOCK_ASSERT(stcb);",
          "2270:  } else if (inp != NULL) {",
          "",
          "[Removed Lines]",
          "2267:  to_ticks = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2ae03e53d789c9e3c638398ac54cffa3aaf55aae",
      "candidate_info": {
        "commit_hash": "2ae03e53d789c9e3c638398ac54cffa3aaf55aae",
        "repo": "sctplab/usrsctp",
        "commit_url": "https://github.com/sctplab/usrsctp/commit/2ae03e53d789c9e3c638398ac54cffa3aaf55aae",
        "files": [
          "usrsctplib/netinet/sctp_constants.h",
          "usrsctplib/netinet/sctp_indata.c",
          "usrsctplib/netinet/sctp_os.h",
          "usrsctplib/netinet/sctp_output.c",
          "usrsctplib/netinet/sctp_pcb.c",
          "usrsctplib/netinet/sctp_usrreq.c"
        ],
        "message": "Sync FreeBSD Ids.",
        "before_after_code_files": [
          "usrsctplib/netinet/sctp_constants.h||usrsctplinetinet/sctp_constants.h",
          "usrsctplib/netinet/sctp_indata.c||usrsctplinetinet/sctp_indata.c",
          "usrsctplib/netinet/sctp_os.h||usrsctplinetinet/sctp_os.h",
          "usrsctplib/netinet/sctp_output.c||usrsctplinetinet/sctp_output.c",
          "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c",
          "usrsctplib/netinet/sctp_usrreq.c||usrsctplinetinet/sctp_usrreq.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "usrsctplib/netinet/sctp_constants.h||usrsctplinetinet/sctp_constants.h": [
          "File: usrsctplib/netinet/sctp_constants.h -> usrsctplinetinet/sctp_constants.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #ifndef _NETINET_SCTP_CONSTANTS_H_",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_constants.h 359405 2020-03-28 20:25:45Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_indata.c||usrsctplinetinet/sctp_indata.c": [
          "File: usrsctplib/netinet/sctp_indata.c -> usrsctplinetinet/sctp_indata.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_indata.c 361243 2020-05-19 07:23:35Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_os.h||usrsctplinetinet/sctp_os.h": [
          "File: usrsctplib/netinet/sctp_os.h -> usrsctplinetinet/sctp_os.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #ifndef _NETINET_SCTP_OS_H_",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_os.h 235828 2012-05-23 11:26:28Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_output.c||usrsctplinetinet/sctp_output.c": [
          "File: usrsctplib/netinet/sctp_output.c -> usrsctplinetinet/sctp_output.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_output.c 361243 2020-05-19 07:23:35Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c": [
          "File: usrsctplib/netinet/sctp_pcb.c -> usrsctplinetinet/sctp_pcb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 361243 2020-05-19 07:23:35Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_usrreq.c||usrsctplinetinet/sctp_usrreq.c": [
          "File: usrsctplib/netinet/sctp_usrreq.c -> usrsctplinetinet/sctp_usrreq.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_usrreq.c 361226 2020-05-18 19:35:46Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}