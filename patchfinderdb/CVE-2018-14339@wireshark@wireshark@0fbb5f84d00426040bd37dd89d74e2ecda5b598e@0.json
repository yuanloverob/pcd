{
  "cve_id": "CVE-2018-14339",
  "cve_desc": "In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, the MMSE dissector could go into an infinite loop. This was addressed in epan/proto.c by adding offset and length validation.",
  "repo": "wireshark/wireshark",
  "patch_hash": "0fbb5f84d00426040bd37dd89d74e2ecda5b598e",
  "patch_info": {
    "commit_hash": "0fbb5f84d00426040bd37dd89d74e2ecda5b598e",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/0fbb5f84d00426040bd37dd89d74e2ecda5b598e",
    "files": [
      "epan/proto.c"
    ],
    "message": "Do bounds checking of the offset and length in proto_tree_add_string().\n\nThrow an exception if they don't correspond to data available in the\npacket - and do so even if the protocol tree argument is null, so that\nwe catch very long strings that could cause the offset to overflow.\n\nAsk why we try to handle a null pointer passed as the string argument,\nwhile we're at it.\n\nBug: 14738\nChange-Id: I2fa79ad0dcd1f41608844a573e045197ac60aa62\nReviewed-on: https://code.wireshark.org/review/28179\nReviewed-by: Guy Harris <guy@alum.mit.edu>",
    "before_after_code_files": [
      "epan/proto.c||epan/proto.c"
    ]
  },
  "patch_diff": {
    "epan/proto.c||epan/proto.c": [
      "File: epan/proto.c -> epan/proto.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4181: {",
      "4182:  proto_item   *pi;",
      "4183:  header_field_info *hfinfo;",
      "4185:  CHECK_FOR_NULL_TREE(tree);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4184:  gint    item_length;",
      "4186:  PROTO_REGISTRAR_GET_NTH(hfindex, hfinfo);",
      "4187:  get_hfi_length(hfinfo, tvb, start, &length, &item_length, ENC_NA);",
      "4194:  if (item_length != 0)",
      "4195:   test_length(hfinfo, tvb, start, item_length, ENC_NA);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "85eea345861c3a911b358c2f06b39e7ac52b294f",
      "candidate_info": {
        "commit_hash": "85eea345861c3a911b358c2f06b39e7ac52b294f",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/85eea345861c3a911b358c2f06b39e7ac52b294f",
        "files": [
          "epan/proto.c"
        ],
        "message": "Do bounds checking of the offset and length in proto_tree_add_string().\n\nThrow an exception if they don't correspond to data available in the\npacket - and do so even if the protocol tree argument is null, so that\nwe catch very long strings that could cause the offset to overflow.\n\nAsk why we try to handle a null pointer passed as the string argument,\nwhile we're at it.\n\nBug: 14738\nChange-Id: I2fa79ad0dcd1f41608844a573e045197ac60aa62\nReviewed-on: https://code.wireshark.org/review/28179\nReviewed-by: Guy Harris <guy@alum.mit.edu>\n(cherry picked from commit 0fbb5f84d00426040bd37dd89d74e2ecda5b598e)\nReviewed-on: https://code.wireshark.org/review/28181",
        "before_after_code_files": [
          "epan/proto.c||epan/proto.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/proto.c||epan/proto.c"
          ],
          "candidate": [
            "epan/proto.c||epan/proto.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/proto.c||epan/proto.c": [
          "File: epan/proto.c -> epan/proto.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3876: {",
          "3877:  proto_item   *pi;",
          "3878:  header_field_info *hfinfo;",
          "3880:  CHECK_FOR_NULL_TREE(tree);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3879:  gint    item_length;",
          "3881:  PROTO_REGISTRAR_GET_NTH(hfindex, hfinfo);",
          "3882:  get_hfi_length(hfinfo, tvb, start, &length, &item_length, ENC_NA);",
          "3889:  if (item_length != 0)",
          "3890:   test_length(hfinfo, tvb, start, item_length, ENC_NA);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9aa3dc783081da0508dc5f7c438e5b10b4b7c145",
      "candidate_info": {
        "commit_hash": "9aa3dc783081da0508dc5f7c438e5b10b4b7c145",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/9aa3dc783081da0508dc5f7c438e5b10b4b7c145",
        "files": [
          "epan/proto.c"
        ],
        "message": "Do bounds checking of the offset and length in proto_tree_add_string().\n\nThrow an exception if they don't correspond to data available in the\npacket - and do so even if the protocol tree argument is null, so that\nwe catch very long strings that could cause the offset to overflow.\n\nAsk why we try to handle a null pointer passed as the string argument,\nwhile we're at it.\n\nBug: 14738\nChange-Id: I2fa79ad0dcd1f41608844a573e045197ac60aa62\nReviewed-on: https://code.wireshark.org/review/28179\nReviewed-by: Guy Harris <guy@alum.mit.edu>\n(cherry picked from commit 0fbb5f84d00426040bd37dd89d74e2ecda5b598e)\nReviewed-on: https://code.wireshark.org/review/28180",
        "before_after_code_files": [
          "epan/proto.c||epan/proto.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/proto.c||epan/proto.c"
          ],
          "candidate": [
            "epan/proto.c||epan/proto.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/proto.c||epan/proto.c": [
          "File: epan/proto.c -> epan/proto.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4143: {",
          "4144:  proto_item   *pi;",
          "4145:  header_field_info *hfinfo;",
          "4147:  CHECK_FOR_NULL_TREE(tree);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4146:  gint    item_length;",
          "4148:  PROTO_REGISTRAR_GET_NTH(hfindex, hfinfo);",
          "4149:  get_hfi_length(hfinfo, tvb, start, &length, &item_length, ENC_NA);",
          "4156:  if (item_length != 0)",
          "4157:   test_length(hfinfo, tvb, start, item_length, ENC_NA);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3b77c0a596a8071aebc1de71e3f79e5e15e919ca",
      "candidate_info": {
        "commit_hash": "3b77c0a596a8071aebc1de71e3f79e5e15e919ca",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/3b77c0a596a8071aebc1de71e3f79e5e15e919ca",
        "files": [
          "epan/proto.c"
        ],
        "message": "Do bounds checking of the offset and length in proto_tree_add_string().\n\nThrow an exception if they don't correspond to data available in the\npacket - and do so even if the protocol tree argument is null, so that\nwe catch very long strings that could cause the offset to overflow.\n\nAsk why we try to handle a null pointer passed as the string argument,\nwhile we're at it.\n\nBug: 14738\nChange-Id: I2fa79ad0dcd1f41608844a573e045197ac60aa62\nReviewed-on: https://code.wireshark.org/review/28179\nReviewed-by: Guy Harris <guy@alum.mit.edu>\n(cherry picked from commit 0fbb5f84d00426040bd37dd89d74e2ecda5b598e)\nReviewed-on: https://code.wireshark.org/review/28182",
        "before_after_code_files": [
          "epan/proto.c||epan/proto.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/proto.c||epan/proto.c"
          ],
          "candidate": [
            "epan/proto.c||epan/proto.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/proto.c||epan/proto.c": [
          "File: epan/proto.c -> epan/proto.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3516: {",
          "3517:  proto_item   *pi;",
          "3518:  header_field_info *hfinfo;",
          "3520:  CHECK_FOR_NULL_TREE(tree);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3519:  gint    item_length;",
          "3521:  PROTO_REGISTRAR_GET_NTH(hfindex, hfinfo);",
          "3522:  get_hfi_length(hfinfo, tvb, start, &length, &item_length, ENC_NA);",
          "3529:  if (item_length != 0)",
          "3530:   test_length(hfinfo, tvb, start, item_length, ENC_NA);",
          "",
          "---------------"
        ]
      }
    }
  ]
}