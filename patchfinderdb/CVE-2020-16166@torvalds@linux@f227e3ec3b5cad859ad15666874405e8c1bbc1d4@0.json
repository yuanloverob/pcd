{
  "cve_id": "CVE-2020-16166",
  "cve_desc": "The Linux kernel through 5.7.11 allows remote attackers to make observations that help to obtain sensitive information about the internal state of the network RNG, aka CID-f227e3ec3b5c. This is related to drivers/char/random.c and kernel/time/timer.c.",
  "repo": "torvalds/linux",
  "patch_hash": "f227e3ec3b5cad859ad15666874405e8c1bbc1d4",
  "patch_info": {
    "commit_hash": "f227e3ec3b5cad859ad15666874405e8c1bbc1d4",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/f227e3ec3b5cad859ad15666874405e8c1bbc1d4",
    "files": [
      "drivers/char/random.c",
      "include/linux/random.h",
      "kernel/time/timer.c",
      "lib/random32.c"
    ],
    "message": "random32: update the net random state on interrupt and activity\n\nThis modifies the first 32 bits out of the 128 bits of a random CPU's\nnet_rand_state on interrupt or CPU activity to complicate remote\nobservations that could lead to guessing the network RNG's internal\nstate.\n\nNote that depending on some network devices' interrupt rate moderation\nor binding, this re-seeding might happen on every packet or even almost\nnever.\n\nIn addition, with NOHZ some CPUs might not even get timer interrupts,\nleaving their local state rarely updated, while they are running\nnetworked processes making use of the random state.  For this reason, we\nalso perform this update in update_process_times() in order to at least\nupdate the state when there is user or system activity, since it's the\nonly case we care about.\n\nReported-by: Amit Klein <aksecurity@gmail.com>\nSuggested-by: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Eric Dumazet <edumazet@google.com>\nCc: \"Jason A. Donenfeld\" <Jason@zx2c4.com>\nCc: Andy Lutomirski <luto@kernel.org>\nCc: Kees Cook <keescook@chromium.org>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Willy Tarreau <w@1wt.eu>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "before_after_code_files": [
      "drivers/char/random.c||drivers/char/random.c",
      "include/linux/random.h||include/linux/random.h",
      "kernel/time/timer.c||kernel/time/timer.c",
      "lib/random32.c||lib/random32.c"
    ]
  },
  "patch_diff": {
    "drivers/char/random.c||drivers/char/random.c": [
      "File: drivers/char/random.c -> drivers/char/random.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1278:  fast_mix(fast_pool);",
      "1279:  add_interrupt_bench(cycles);",
      "1281:  if (unlikely(crng_init == 0)) {",
      "1282:   if ((fast_pool->count >= 64) &&",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1280:  this_cpu_add(net_rand_state.s1, fast_pool->pool[cycles & 3]);",
      "",
      "---------------"
    ],
    "include/linux/random.h||include/linux/random.h": [
      "File: include/linux/random.h -> include/linux/random.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "11: #include <linux/kernel.h>",
      "12: #include <linux/list.h>",
      "13: #include <linux/once.h>",
      "15: #include <uapi/linux/random.h>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14: #include <linux/percpu.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "119:  __u32 s1, s2, s3, s4;",
      "120: };",
      "122: u32 prandom_u32_state(struct rnd_state *state);",
      "123: void prandom_bytes_state(struct rnd_state *state, void *buf, size_t nbytes);",
      "124: void prandom_seed_full_state(struct rnd_state __percpu *pcpu_state);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "123: DECLARE_PER_CPU(struct rnd_state, net_rand_state) __latent_entropy;",
      "",
      "---------------"
    ],
    "kernel/time/timer.c||kernel/time/timer.c": [
      "File: kernel/time/timer.c -> kernel/time/timer.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "43: #include <linux/sched/debug.h>",
      "44: #include <linux/slab.h>",
      "45: #include <linux/compat.h>",
      "47: #include <linux/uaccess.h>",
      "48: #include <asm/unistd.h>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "46: #include <linux/random.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1742:  scheduler_tick();",
      "1743:  if (IS_ENABLED(CONFIG_POSIX_TIMERS))",
      "1744:   run_posix_cpu_timers();",
      "1745: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1752:  this_cpu_add(net_rand_state.s1, rol32(jiffies, 24) + user_tick);",
      "",
      "---------------"
    ],
    "lib/random32.c||lib/random32.c": [
      "File: lib/random32.c -> lib/random32.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "48: }",
      "49: #endif",
      "",
      "[Removed Lines]",
      "51: static DEFINE_PER_CPU(struct rnd_state, net_rand_state) __latent_entropy;",
      "",
      "[Added Lines]",
      "51: DEFINE_PER_CPU(struct rnd_state, net_rand_state) __latent_entropy;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "83bdc7275e6206f560d247be856bceba3e1ed8f2",
      "candidate_info": {
        "commit_hash": "83bdc7275e6206f560d247be856bceba3e1ed8f2",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/83bdc7275e6206f560d247be856bceba3e1ed8f2",
        "files": [
          "include/linux/random.h",
          "lib/random32.c"
        ],
        "message": "random32: remove net_rand_state from the latent entropy gcc plugin\n\nIt turns out that the plugin right now ends up being really unhappy\nabout the change from 'static' to 'extern' storage that happened in\ncommit f227e3ec3b5c (\"random32: update the net random state on interrupt\nand activity\").\n\nThis is probably a trivial fix for the latent_entropy plugin, but for\nnow, just remove net_rand_state from the list of things the plugin\nworries about.\n\nReported-by: Stephen Rothwell <sfr@canb.auug.org.au>\nCc: Emese Revfy <re.emese@gmail.com>\nCc: Kees Cook <keescook@chromium.org>\nCc: Willy Tarreau <w@1wt.eu>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
        "before_after_code_files": [
          "include/linux/random.h||include/linux/random.h",
          "lib/random32.c||lib/random32.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "include/linux/random.h||include/linux/random.h",
            "lib/random32.c||lib/random32.c"
          ],
          "candidate": [
            "include/linux/random.h||include/linux/random.h",
            "lib/random32.c||lib/random32.c"
          ]
        }
      },
      "candidate_diff": {
        "include/linux/random.h||include/linux/random.h": [
          "File: include/linux/random.h -> include/linux/random.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:  __u32 s1, s2, s3, s4;",
          "121: };",
          "125: u32 prandom_u32_state(struct rnd_state *state);",
          "126: void prandom_bytes_state(struct rnd_state *state, void *buf, size_t nbytes);",
          "",
          "[Removed Lines]",
          "123: DECLARE_PER_CPU(struct rnd_state, net_rand_state) __latent_entropy;",
          "",
          "[Added Lines]",
          "123: DECLARE_PER_CPU(struct rnd_state, net_rand_state);",
          "",
          "---------------"
        ],
        "lib/random32.c||lib/random32.c": [
          "File: lib/random32.c -> lib/random32.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "48: }",
          "49: #endif",
          "",
          "[Removed Lines]",
          "51: DEFINE_PER_CPU(struct rnd_state, net_rand_state) __latent_entropy;",
          "",
          "[Added Lines]",
          "51: DEFINE_PER_CPU(struct rnd_state, net_rand_state);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1c9df907da83812e4f33b59d3d142c864d9da57f",
      "candidate_info": {
        "commit_hash": "1c9df907da83812e4f33b59d3d142c864d9da57f",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/1c9df907da83812e4f33b59d3d142c864d9da57f",
        "files": [
          "include/linux/random.h"
        ],
        "message": "random: fix circular include dependency on arm64 after addition of percpu.h\n\nDaniel D\u00edaz and Kees Cook independently reported that commit\nf227e3ec3b5c (\"random32: update the net random state on interrupt and\nactivity\") broke arm64 due to a circular dependency on include files\nsince the addition of percpu.h in random.h.\n\nThe correct fix would definitely be to move all the prandom32 stuff out\nof random.h but for backporting, a smaller solution is preferred.\n\nThis one replaces linux/percpu.h with asm/percpu.h, and this fixes the\nproblem on x86_64, arm64, arm, and mips.  Note that moving percpu.h\naround didn't change anything and that removing it entirely broke\ndifferently.  When backporting, such options might still be considered\nif this patch fails to help.\n\n[ It turns out that an alternate fix seems to be to just remove the\n  troublesome <asm/pointer_auth.h> remove from the arm64 <asm/smp.h>\n  that causes the circular dependency.\n\n  But we might as well do the whole belt-and-suspenders thing, and\n  minimize inclusion in <linux/random.h> too. Either will fix the\n  problem, and both are good changes.   - Linus ]\n\nReported-by: Daniel D\u00edaz <daniel.diaz@linaro.org>\nReported-by: Kees Cook <keescook@chromium.org>\nTested-by: Marc Zyngier <maz@kernel.org>\nFixes: f227e3ec3b5c\nCc: Stephen Rothwell <sfr@canb.auug.org.au>\nSigned-off-by: Willy Tarreau <w@1wt.eu>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
        "before_after_code_files": [
          "include/linux/random.h||include/linux/random.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "include/linux/random.h||include/linux/random.h"
          ],
          "candidate": [
            "include/linux/random.h||include/linux/random.h"
          ]
        }
      },
      "candidate_diff": {
        "include/linux/random.h||include/linux/random.h": [
          "File: include/linux/random.h -> include/linux/random.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: #include <linux/kernel.h>",
          "12: #include <linux/list.h>",
          "13: #include <linux/once.h>",
          "16: #include <uapi/linux/random.h>",
          "",
          "[Removed Lines]",
          "14: #include <linux/percpu.h>",
          "",
          "[Added Lines]",
          "14: #include <asm/percpu.h>",
          "",
          "---------------"
        ]
      }
    }
  ]
}