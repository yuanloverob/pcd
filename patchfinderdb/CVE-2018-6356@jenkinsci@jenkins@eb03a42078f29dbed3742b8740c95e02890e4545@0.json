{
  "cve_id": "CVE-2018-6356",
  "cve_desc": "Jenkins before 2.107 and Jenkins LTS before 2.89.4 did not properly prevent specifying relative paths that escape a base directory for URLs accessing plugin resource files. This allowed users with Overall/Read permission to download files from the Jenkins master they should not have access to. On Windows, any file accessible to the Jenkins master process could be downloaded. On other operating systems, any file within the Jenkins home directory accessible to the Jenkins master process could be downloaded.",
  "repo": "jenkinsci/jenkins",
  "patch_hash": "eb03a42078f29dbed3742b8740c95e02890e4545",
  "patch_info": {
    "commit_hash": "eb03a42078f29dbed3742b8740c95e02890e4545",
    "repo": "jenkinsci/jenkins",
    "commit_url": "https://github.com/jenkinsci/jenkins/commit/eb03a42078f29dbed3742b8740c95e02890e4545",
    "files": [
      "core/src/main/java/hudson/Plugin.java",
      "test/src/test/java/hudson/PluginTest.java"
    ],
    "message": "[SECURITY-705] Path traversal vulnerability in Plugin.doDynamic.",
    "before_after_code_files": [
      "core/src/main/java/hudson/Plugin.java||core/src/main/java/hudson/Plugin.java",
      "test/src/test/java/hudson/PluginTest.java||test/src/test/java/hudson/PluginTest.java"
    ]
  },
  "patch_diff": {
    "core/src/main/java/hudson/Plugin.java||core/src/main/java/hudson/Plugin.java": [
      "File: core/src/main/java/hudson/Plugin.java -> core/src/main/java/hudson/Plugin.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "36: import javax.servlet.ServletContext;",
      "37: import javax.servlet.ServletException;",
      "38: import java.io.IOException;",
      "39: import java.io.File;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "38: import javax.servlet.http.HttpServletResponse;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "42: import com.thoughtworks.xstream.XStream;",
      "43: import hudson.init.Initializer;",
      "44: import hudson.init.Terminator;",
      "47: import jenkins.model.GlobalConfiguration;",
      "",
      "[Removed Lines]",
      "45: import java.net.URI;",
      "46: import java.net.URISyntaxException;",
      "48: import org.kohsuke.stapler.HttpResponses;",
      "",
      "[Added Lines]",
      "46: import java.net.URL;",
      "47: import java.util.logging.Logger;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "82: public abstract class Plugin implements Saveable {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "84:     private static final Logger LOGGER = Logger.getLogger(Plugin.class.getName());",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "224:     public void doDynamic(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException {",
      "225:         String path = req.getRestOfPath();",
      "229:         }",
      "",
      "[Removed Lines]",
      "227:         if (path.startsWith(\"/META-INF/\") || path.startsWith(\"/WEB-INF/\")) {",
      "228:             throw HttpResponses.notFound();",
      "231:         if(path.length()==0)",
      "232:             path = \"/\";",
      "",
      "[Added Lines]",
      "229:         if (path.isEmpty() || path.contains(\"..\") || path.contains(\"%\") || path.contains(\"META-INF\") || path.contains(\"WEB-INF\")) {",
      "230:             LOGGER.warning(\"rejecting possibly malicious \" + req.getRequestURIWithQueryString());",
      "231:             rsp.sendError(HttpServletResponse.SC_BAD_REQUEST);",
      "232:             return;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "240:         long expires = staticLink ? TimeUnit2.DAYS.toMillis(365) : -1;",
      "248:     }",
      "",
      "[Removed Lines]",
      "243:         try {",
      "244:             rsp.serveLocalizedFile(req, wrapper.baseResourceURL.toURI().resolve(new URI(null, '.' + path, null)).toURL(), expires);",
      "245:         } catch (URISyntaxException x) {",
      "246:             throw new IOException(x);",
      "247:         }",
      "",
      "[Added Lines]",
      "244:         rsp.serveLocalizedFile(req, new URL(wrapper.baseResourceURL, '.' + path), expires);",
      "",
      "---------------"
    ],
    "test/src/test/java/hudson/PluginTest.java||test/src/test/java/hudson/PluginTest.java": [
      "File: test/src/test/java/hudson/PluginTest.java -> test/src/test/java/hudson/PluginTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "35:     @Rule public JenkinsRule r = new JenkinsRule();",
      "38:     @Test public void doDynamic() throws Exception {",
      "39:         r.createWebClient().goTo(\"plugin/credentials/images/24x24/credentials.png\", \"image/png\");",
      "41:         r.createWebClient().assertFails(\"plugin/credentials/images/../images/24x24/credentials.png\", HttpServletResponse.SC_BAD_REQUEST);",
      "43:         r.createWebClient().assertFails(\"plugin/credentials/images/%2E%2E/images/24x24/credentials.png\", HttpServletResponse.SC_INTERNAL_SERVER_ERROR); // IAE from TokenList.<init>",
      "49:     }",
      "51: }",
      "",
      "[Removed Lines]",
      "37:     @Issue({\"SECURITY-131\", \"SECURITY-155\"})",
      "44:         r.createWebClient().assertFails(\"plugin/credentials/images/%252E%252E/images/24x24/credentials.png\", HttpServletResponse.SC_NOT_FOUND); // SECURITY-131",
      "45:         r.createWebClient().assertFails(\"plugin/credentials/images/%25252E%25252E/images/24x24/credentials.png\", HttpServletResponse.SC_NOT_FOUND); // just checking",
      "47:         r.createWebClient().assertFails(\"plugin/credentials/WEB-INF/licenses.xml\", HttpServletResponse.SC_NOT_FOUND);",
      "48:         r.createWebClient().assertFails(\"plugin/credentials/META-INF/MANIFEST.MF\", HttpServletResponse.SC_NOT_FOUND);",
      "",
      "[Added Lines]",
      "37:     @Issue({\"SECURITY-131\", \"SECURITY-155\", \"SECURITY-705\"})",
      "44:         r.createWebClient().assertFails(\"plugin/credentials/images/%252E%252E/images/24x24/credentials.png\", HttpServletResponse.SC_BAD_REQUEST); // SECURITY-131",
      "45:         r.createWebClient().assertFails(\"plugin/credentials/images/%25252E%25252E/images/24x24/credentials.png\", HttpServletResponse.SC_BAD_REQUEST); // just checking",
      "47:         r.createWebClient().assertFails(\"plugin/credentials/images/..%2fWEB-INF/licenses.xml\", HttpServletResponse.SC_BAD_REQUEST);",
      "48:         r.createWebClient().assertFails(\"plugin/credentials/images/%2e%2e%2fWEB-INF/licenses.xml\", HttpServletResponse.SC_BAD_REQUEST);",
      "49:         r.createWebClient().assertFails(\"plugin/credentials/images/%2e.%2fWEB-INF/licenses.xml\", HttpServletResponse.SC_BAD_REQUEST);",
      "50:         r.createWebClient().assertFails(\"plugin/credentials/images/..%2f..%2f..%2f\" + r.jenkins.getRootDir().getName() + \"%2fsecrets%2fmaster.key\", HttpServletResponse.SC_BAD_REQUEST);",
      "52:         r.createWebClient().assertFails(\"plugin/credentials/WEB-INF/licenses.xml\", HttpServletResponse.SC_BAD_REQUEST);",
      "53:         r.createWebClient().assertFails(\"plugin/credentials/META-INF/MANIFEST.MF\", HttpServletResponse.SC_BAD_REQUEST);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f46842c7a2c916170ac457a039a2f7f019afd885",
      "candidate_info": {
        "commit_hash": "f46842c7a2c916170ac457a039a2f7f019afd885",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f46842c7a2c916170ac457a039a2f7f019afd885",
        "files": [
          "core/src/main/java/hudson/Plugin.java",
          "test/src/test/java/hudson/PluginTest_SEC925.java"
        ],
        "message": "[SECURITY-925]",
        "before_after_code_files": [
          "core/src/main/java/hudson/Plugin.java||core/src/main/java/hudson/Plugin.java",
          "test/src/test/java/hudson/PluginTest_SEC925.java||test/src/test/java/hudson/PluginTest_SEC925.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/hudson/Plugin.java||core/src/main/java/hudson/Plugin.java"
          ],
          "candidate": [
            "core/src/main/java/hudson/Plugin.java||core/src/main/java/hudson/Plugin.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/hudson/Plugin.java||core/src/main/java/hudson/Plugin.java": [
          "File: core/src/main/java/hudson/Plugin.java -> core/src/main/java/hudson/Plugin.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "228:         String path = req.getRestOfPath();",
          "230:         String pathUC = path.toUpperCase(Locale.ENGLISH);",
          "232:             LOGGER.warning(\"rejecting possibly malicious \" + req.getRequestURIWithQueryString());",
          "233:             rsp.sendError(HttpServletResponse.SC_BAD_REQUEST);",
          "234:             return;",
          "",
          "[Removed Lines]",
          "231:         if (path.isEmpty() || path.contains(\"..\") || path.startsWith(\".\") || path.contains(\"%\") || pathUC.contains(\"META-INF\") || pathUC.contains(\"WEB-INF\")) {",
          "",
          "[Added Lines]",
          "231:         if (path.isEmpty() || path.contains(\"..\") || path.startsWith(\".\") || path.contains(\"%\")",
          "232:                 || pathUC.contains(\"META-INF\") || pathUC.contains(\"WEB-INF\")",
          "234:                 || pathUC.equals(\"/.TIMESTAMP2\")",
          "235:         ) {",
          "",
          "---------------"
        ],
        "test/src/test/java/hudson/PluginTest_SEC925.java||test/src/test/java/hudson/PluginTest_SEC925.java": [
          "File: test/src/test/java/hudson/PluginTest_SEC925.java -> test/src/test/java/hudson/PluginTest_SEC925.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package hudson;",
          "3: import hudson.model.UpdateCenter;",
          "4: import jenkins.model.Jenkins;",
          "5: import org.junit.Rule;",
          "6: import org.junit.Test;",
          "7: import org.jvnet.hudson.test.Issue;",
          "8: import org.jvnet.hudson.test.JenkinsRule;",
          "10: import javax.servlet.http.HttpServletResponse;",
          "11: import java.util.Arrays;",
          "12: import java.util.List;",
          "13: import java.util.concurrent.Future;",
          "16: public class PluginTest_SEC925 {",
          "18:     @Rule",
          "19:     public JenkinsRule r = new JenkinsRule();",
          "21:     @Test",
          "22:     @Issue(\"SECURITY-925\")",
          "23:     public void preventTimestamp2_toBeServed() throws Exception {",
          "25:         Jenkins.getInstance().getUpdateCenter().getSites().get(0).updateDirectlyNow(false);",
          "26:         List<Future<UpdateCenter.UpdateCenterJob>> pluginInstalled = r.jenkins.pluginManager.install(Arrays.asList(\"credentials\"), true);",
          "28:         for (Future<UpdateCenter.UpdateCenterJob> job : pluginInstalled) {",
          "29:             job.get();",
          "30:         }",
          "31:         r.createWebClient().assertFails(\"plugin/credentials/.timestamp2\", HttpServletResponse.SC_BAD_REQUEST);",
          "32:     }",
          "33: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9de62915807deab61d6e780eed660428f9889b51",
      "candidate_info": {
        "commit_hash": "9de62915807deab61d6e780eed660428f9889b51",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9de62915807deab61d6e780eed660428f9889b51",
        "files": [
          "core/src/main/java/hudson/Plugin.java",
          "test/src/test/java/hudson/PluginTest.java"
        ],
        "message": "[SECURITY-705] Additional precautions.",
        "before_after_code_files": [
          "core/src/main/java/hudson/Plugin.java||core/src/main/java/hudson/Plugin.java",
          "test/src/test/java/hudson/PluginTest.java||test/src/test/java/hudson/PluginTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/hudson/Plugin.java||core/src/main/java/hudson/Plugin.java",
            "test/src/test/java/hudson/PluginTest.java||test/src/test/java/hudson/PluginTest.java"
          ],
          "candidate": [
            "core/src/main/java/hudson/Plugin.java||core/src/main/java/hudson/Plugin.java",
            "test/src/test/java/hudson/PluginTest.java||test/src/test/java/hudson/PluginTest.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/hudson/Plugin.java||core/src/main/java/hudson/Plugin.java": [
          "File: core/src/main/java/hudson/Plugin.java -> core/src/main/java/hudson/Plugin.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "228:         String path = req.getRestOfPath();",
          "230:         String pathUC = path.toUpperCase(Locale.ENGLISH);",
          "232:             LOGGER.warning(\"rejecting possibly malicious \" + req.getRequestURIWithQueryString());",
          "233:             rsp.sendError(HttpServletResponse.SC_BAD_REQUEST);",
          "234:             return;",
          "",
          "[Removed Lines]",
          "231:         if (path.isEmpty() || path.contains(\"..\") || path.contains(\"%\") || pathUC.contains(\"META-INF\") || pathUC.contains(\"WEB-INF\")) {",
          "",
          "[Added Lines]",
          "231:         if (path.isEmpty() || path.contains(\"..\") || path.startsWith(\".\") || path.contains(\"%\") || pathUC.contains(\"META-INF\") || pathUC.contains(\"WEB-INF\")) {",
          "",
          "---------------"
        ],
        "test/src/test/java/hudson/PluginTest.java||test/src/test/java/hudson/PluginTest.java": [
          "File: test/src/test/java/hudson/PluginTest.java -> test/src/test/java/hudson/PluginTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:     @Issue({\"SECURITY-131\", \"SECURITY-155\", \"SECURITY-705\"})",
          "38:     @Test public void doDynamic() throws Exception {",
          "39:         r.createWebClient().goTo(\"plugin/credentials/images/24x24/credentials.png\", \"image/png\");",
          "43:         r.createWebClient().assertFails(\"plugin/credentials/images/%2E%2E/images/24x24/credentials.png\", HttpServletResponse.SC_INTERNAL_SERVER_ERROR); // IAE from TokenList.<init>",
          "44:         r.createWebClient().assertFails(\"plugin/credentials/images/%252E%252E/images/24x24/credentials.png\", HttpServletResponse.SC_BAD_REQUEST); // SECURITY-131",
          "45:         r.createWebClient().assertFails(\"plugin/credentials/images/%25252E%25252E/images/24x24/credentials.png\", HttpServletResponse.SC_BAD_REQUEST); // just checking",
          "47:         r.createWebClient().assertFails(\"plugin/credentials/images/..%2fWEB-INF/licenses.xml\", HttpServletResponse.SC_BAD_REQUEST);",
          "48:         r.createWebClient().assertFails(\"plugin/credentials/images/%2e%2e%2fWEB-INF/licenses.xml\", HttpServletResponse.SC_BAD_REQUEST);",
          "49:         r.createWebClient().assertFails(\"plugin/credentials/images/%2e.%2fWEB-INF/licenses.xml\", HttpServletResponse.SC_BAD_REQUEST);",
          "50:         r.createWebClient().assertFails(\"plugin/credentials/images/..%2f..%2f..%2f\" + r.jenkins.getRootDir().getName() + \"%2fsecrets%2fmaster.key\", HttpServletResponse.SC_BAD_REQUEST);",
          "52:         r.createWebClient().assertFails(\"plugin/credentials/WEB-INF/licenses.xml\", HttpServletResponse.SC_BAD_REQUEST);",
          "53:         r.createWebClient().assertFails(\"plugin/credentials/META-INF/MANIFEST.MF\", HttpServletResponse.SC_BAD_REQUEST);",
          "",
          "[Removed Lines]",
          "41:         r.createWebClient().assertFails(\"plugin/credentials/images/../images/24x24/credentials.png\", HttpServletResponse.SC_BAD_REQUEST);",
          "",
          "[Added Lines]",
          "40:         r.createWebClient().goTo(\"plugin/credentials/images/../images/24x24/credentials.png\", \"image/png\"); // collapsed somewhere before it winds up in restOfPath",
          "46:         r.createWebClient().assertFails(\"plugin/credentials/./credentials.jpi\", /* Path collapsed to simply `credentials.jpi` before entering */ HttpServletResponse.SC_NOT_FOUND);",
          "50:         r.createWebClient().assertFails(\"plugin/credentials/\" + r.jenkins.getRootDir() + \"/secrets/master.key\", /* ./ prepended anyway */ HttpServletResponse.SC_NOT_FOUND);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8830d68f5fe21f344be3496984bc4470bfcd0564",
      "candidate_info": {
        "commit_hash": "8830d68f5fe21f344be3496984bc4470bfcd0564",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/8830d68f5fe21f344be3496984bc4470bfcd0564",
        "files": [
          "core/src/main/java/hudson/Plugin.java",
          "test/src/test/java/hudson/PluginTest.java"
        ],
        "message": "[SECURITY-717] Plugin.doDynamic check for WEB-INF or META-INF should be case-insensitive.",
        "before_after_code_files": [
          "core/src/main/java/hudson/Plugin.java||core/src/main/java/hudson/Plugin.java",
          "test/src/test/java/hudson/PluginTest.java||test/src/test/java/hudson/PluginTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/hudson/Plugin.java||core/src/main/java/hudson/Plugin.java",
            "test/src/test/java/hudson/PluginTest.java||test/src/test/java/hudson/PluginTest.java"
          ],
          "candidate": [
            "core/src/main/java/hudson/Plugin.java||core/src/main/java/hudson/Plugin.java",
            "test/src/test/java/hudson/PluginTest.java||test/src/test/java/hudson/PluginTest.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/hudson/Plugin.java||core/src/main/java/hudson/Plugin.java": [
          "File: core/src/main/java/hudson/Plugin.java -> core/src/main/java/hudson/Plugin.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: import hudson.init.Initializer;",
          "45: import hudson.init.Terminator;",
          "46: import java.net.URL;",
          "47: import java.util.logging.Logger;",
          "48: import jenkins.model.GlobalConfiguration;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47: import java.util.Locale;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "226:     public void doDynamic(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException {",
          "227:         String path = req.getRestOfPath();",
          "230:             LOGGER.warning(\"rejecting possibly malicious \" + req.getRequestURIWithQueryString());",
          "231:             rsp.sendError(HttpServletResponse.SC_BAD_REQUEST);",
          "232:             return;",
          "",
          "[Removed Lines]",
          "229:         if (path.isEmpty() || path.contains(\"..\") || path.contains(\"%\") || path.contains(\"META-INF\") || path.contains(\"WEB-INF\")) {",
          "",
          "[Added Lines]",
          "230:         String pathUC = path.toUpperCase(Locale.ENGLISH);",
          "231:         if (path.isEmpty() || path.contains(\"..\") || path.contains(\"%\") || pathUC.contains(\"META-INF\") || pathUC.contains(\"WEB-INF\")) {",
          "",
          "---------------"
        ],
        "test/src/test/java/hudson/PluginTest.java||test/src/test/java/hudson/PluginTest.java": [
          "File: test/src/test/java/hudson/PluginTest.java -> test/src/test/java/hudson/PluginTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:         r.createWebClient().assertFails(\"plugin/credentials/WEB-INF/licenses.xml\", HttpServletResponse.SC_BAD_REQUEST);",
          "53:         r.createWebClient().assertFails(\"plugin/credentials/META-INF/MANIFEST.MF\", HttpServletResponse.SC_BAD_REQUEST);",
          "54:     }",
          "56: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54:         r.createWebClient().assertFails(\"plugin/credentials/web-inf/licenses.xml\", HttpServletResponse.SC_BAD_REQUEST);",
          "55:         r.createWebClient().assertFails(\"plugin/credentials/meta-inf/manifest.mf\", HttpServletResponse.SC_BAD_REQUEST);",
          "",
          "---------------"
        ]
      }
    }
  ]
}