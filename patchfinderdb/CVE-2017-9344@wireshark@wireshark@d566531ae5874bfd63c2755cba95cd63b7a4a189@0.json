{
  "cve_id": "CVE-2017-9344",
  "cve_desc": "In Wireshark 2.2.0 to 2.2.6 and 2.0.0 to 2.0.12, the Bluetooth L2CAP dissector could divide by zero. This was addressed in epan/dissectors/packet-btl2cap.c by validating an interval value.",
  "repo": "wireshark/wireshark",
  "patch_hash": "d566531ae5874bfd63c2755cba95cd63b7a4a189",
  "patch_info": {
    "commit_hash": "d566531ae5874bfd63c2755cba95cd63b7a4a189",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/d566531ae5874bfd63c2755cba95cd63b7a4a189",
    "files": [
      "epan/dissectors/packet-btl2cap.c"
    ],
    "message": "BT L2CAP: avoid a division by 0\n\nBug: 13701\nChange-Id: Ie433ecd932dcfc40fa6d3fdc3fa00139c64584a2\nReviewed-on: https://code.wireshark.org/review/21618\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-btl2cap.c||epan/dissectors/packet-btl2cap.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-btl2cap.c||epan/dissectors/packet-btl2cap.c": [
      "File: epan/dissectors/packet-btl2cap.c -> epan/dissectors/packet-btl2cap.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1684:     item = proto_tree_add_item(tree, hf_btl2cap_slave_latency, tvb, offset, 2, ENC_LITTLE_ENDIAN);",
      "1685:     slave_latency = tvb_get_letohs(tvb, offset);",
      "1688:         expert_add_info(pinfo, item, &ei_btl2cap_parameter_mismatch);",
      "1690:     offset += 2;",
      "",
      "[Removed Lines]",
      "1687:     if(slave_latency >= 500 || slave_latency > 10.0 * tvb_get_letohs(tvb, offset + 2) / (max_interval *1.25))",
      "",
      "[Added Lines]",
      "1687:     if(slave_latency >= 500 || max_interval == 0 ||",
      "1688:        slave_latency > 10.0 * tvb_get_letohs(tvb, offset + 2) / (max_interval *1.25))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3318:     };",
      "3320:     static ei_register_info ei[] = {",
      "3322:         { &ei_btl2cap_sdulength_bad, { \"btl2cap.sdulength.bad\", PI_MALFORMED, PI_WARN, \"SDU length bad\", EXPFILL }},",
      "3323:         { &ei_btl2cap_length_bad, { \"btl2cap.length.bad\", PI_MALFORMED, PI_WARN, \"Length too short\", EXPFILL }},",
      "3324:         { &ei_btl2cap_unknown_command_code, { \"btl2cap.unknown_command_code\", PI_PROTOCOL, PI_WARN, \"Unknown Command Code\", EXPFILL }},",
      "",
      "[Removed Lines]",
      "3321:         { &ei_btl2cap_parameter_mismatch, { \"btl2cap.parameter_mismatch\", PI_PROTOCOL, PI_WARN, \"Unexpected frame\", EXPFILL }},",
      "",
      "[Added Lines]",
      "3322:         { &ei_btl2cap_parameter_mismatch, { \"btl2cap.parameter_mismatch\", PI_PROTOCOL, PI_WARN, \"Parameter mismatch\", EXPFILL }},",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6308ae03d82a29a2e3d75e1c325c8a9f6c44dcdf",
      "candidate_info": {
        "commit_hash": "6308ae03d82a29a2e3d75e1c325c8a9f6c44dcdf",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/6308ae03d82a29a2e3d75e1c325c8a9f6c44dcdf",
        "files": [
          "epan/dissectors/packet-btl2cap.c"
        ],
        "message": "BT L2CAP: avoid a division by 0\n\nBug: 13701\nChange-Id: Ie433ecd932dcfc40fa6d3fdc3fa00139c64584a2\nReviewed-on: https://code.wireshark.org/review/21618\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit d566531ae5874bfd63c2755cba95cd63b7a4a189)\nReviewed-on: https://code.wireshark.org/review/21622",
        "before_after_code_files": [
          "epan/dissectors/packet-btl2cap.c||epan/dissectors/packet-btl2cap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-btl2cap.c||epan/dissectors/packet-btl2cap.c"
          ],
          "candidate": [
            "epan/dissectors/packet-btl2cap.c||epan/dissectors/packet-btl2cap.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-btl2cap.c||epan/dissectors/packet-btl2cap.c": [
          "File: epan/dissectors/packet-btl2cap.c -> epan/dissectors/packet-btl2cap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1296:     proto_item_append_text(item, \" LL Connection Events\");",
          "1297:     slave_latency = tvb_get_letohs(tvb, offset);",
          "1300:         expert_add_info(pinfo, item, &ei_btl2cap_parameter_mismatch);",
          "1302:     offset += 2;",
          "",
          "[Removed Lines]",
          "1299:     if(slave_latency >= 500 || slave_latency > 10.0 * tvb_get_letohs(tvb, offset + 2) / (max_interval *1.25))",
          "",
          "[Added Lines]",
          "1299:     if(slave_latency >= 500 || max_interval == 0 ||",
          "1300:        slave_latency > 10.0 * tvb_get_letohs(tvb, offset + 2) / (max_interval *1.25))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2626:     };",
          "2628:     static ei_register_info ei[] = {",
          "2630:         { &ei_btl2cap_sdulength_bad, { \"btl2cap.sdulength.bad\", PI_MALFORMED, PI_WARN, \"SDU length bad\", EXPFILL }},",
          "2631:         { &ei_btl2cap_length_bad, { \"btl2cap.length.bad\", PI_MALFORMED, PI_WARN, \"Length bad\", EXPFILL }},",
          "2632:         { &ei_btl2cap_unknown_command_code, { \"btl2cap.unknown_command_code\", PI_PROTOCOL, PI_WARN, \"Unknown Command Code\", EXPFILL }},",
          "",
          "[Removed Lines]",
          "2629:         { &ei_btl2cap_parameter_mismatch, { \"btl2cap.parameter_mismatch\", PI_PROTOCOL, PI_WARN, \"Unexpected frame\", EXPFILL }},",
          "",
          "[Added Lines]",
          "2630:         { &ei_btl2cap_parameter_mismatch, { \"btl2cap.parameter_mismatch\", PI_PROTOCOL, PI_WARN, \"Parameter mismatch\", EXPFILL }},",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "330bcb5d532630adab242f213eb3fd34f7bc16e3",
      "candidate_info": {
        "commit_hash": "330bcb5d532630adab242f213eb3fd34f7bc16e3",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/330bcb5d532630adab242f213eb3fd34f7bc16e3",
        "files": [
          "epan/dissectors/packet-btl2cap.c"
        ],
        "message": "BT L2CAP: avoid a division by 0\n\nBug: 13701\nChange-Id: Ie433ecd932dcfc40fa6d3fdc3fa00139c64584a2\nReviewed-on: https://code.wireshark.org/review/21618\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit d566531ae5874bfd63c2755cba95cd63b7a4a189)\nReviewed-on: https://code.wireshark.org/review/21621",
        "before_after_code_files": [
          "epan/dissectors/packet-btl2cap.c||epan/dissectors/packet-btl2cap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-btl2cap.c||epan/dissectors/packet-btl2cap.c"
          ],
          "candidate": [
            "epan/dissectors/packet-btl2cap.c||epan/dissectors/packet-btl2cap.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-btl2cap.c||epan/dissectors/packet-btl2cap.c": [
          "File: epan/dissectors/packet-btl2cap.c -> epan/dissectors/packet-btl2cap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1361:     proto_item_append_text(item, \" LL Connection Events\");",
          "1362:     slave_latency = tvb_get_letohs(tvb, offset);",
          "1365:         expert_add_info(pinfo, item, &ei_btl2cap_parameter_mismatch);",
          "1367:     offset += 2;",
          "",
          "[Removed Lines]",
          "1364:     if(slave_latency >= 500 || slave_latency > 10.0 * tvb_get_letohs(tvb, offset + 2) / (max_interval *1.25))",
          "",
          "[Added Lines]",
          "1364:     if(slave_latency >= 500 || max_interval == 0 ||",
          "1365:        slave_latency > 10.0 * tvb_get_letohs(tvb, offset + 2) / (max_interval *1.25))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2806:     };",
          "2808:     static ei_register_info ei[] = {",
          "2810:         { &ei_btl2cap_sdulength_bad, { \"btl2cap.sdulength.bad\", PI_MALFORMED, PI_WARN, \"SDU length bad\", EXPFILL }},",
          "2811:         { &ei_btl2cap_length_bad, { \"btl2cap.length.bad\", PI_MALFORMED, PI_WARN, \"Length too short\", EXPFILL }},",
          "2812:         { &ei_btl2cap_unknown_command_code, { \"btl2cap.unknown_command_code\", PI_PROTOCOL, PI_WARN, \"Unknown Command Code\", EXPFILL }},",
          "",
          "[Removed Lines]",
          "2809:         { &ei_btl2cap_parameter_mismatch, { \"btl2cap.parameter_mismatch\", PI_PROTOCOL, PI_WARN, \"Unexpected frame\", EXPFILL }},",
          "",
          "[Added Lines]",
          "2810:         { &ei_btl2cap_parameter_mismatch, { \"btl2cap.parameter_mismatch\", PI_PROTOCOL, PI_WARN, \"Parameter mismatch\", EXPFILL }},",
          "",
          "---------------"
        ]
      }
    }
  ]
}