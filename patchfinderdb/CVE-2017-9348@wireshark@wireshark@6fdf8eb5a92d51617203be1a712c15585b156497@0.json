{
  "cve_id": "CVE-2017-9348",
  "cve_desc": "In Wireshark 2.2.0 to 2.2.6, the DOF dissector could read past the end of a buffer. This was addressed in epan/dissectors/packet-dof.c by validating a size value.",
  "repo": "wireshark/wireshark",
  "patch_hash": "6fdf8eb5a92d51617203be1a712c15585b156497",
  "patch_info": {
    "commit_hash": "6fdf8eb5a92d51617203be1a712c15585b156497",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/6fdf8eb5a92d51617203be1a712c15585b156497",
    "files": [
      "epan/dissectors/packet-dof.c"
    ],
    "message": "DOF: Fix buffer overflow (read)\n\nPerform sanity check on buffer length parsed from data. Check buffer\nsize before reading value.\n\nChange-Id: I8beaf8860b39426d79867b0dd2221e57e32da8e0\nLink: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=1151\nBug: 13608\nReviewed-on: https://code.wireshark.org/review/21287\nReviewed-by: Peter Wu <peter@lekensteyn.nl>\nPetri-Dish: Peter Wu <peter@lekensteyn.nl>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>",
    "before_after_code_files": [
      "epan/dissectors/packet-dof.c||epan/dissectors/packet-dof.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-dof.c||epan/dissectors/packet-dof.c": [
      "File: epan/dissectors/packet-dof.c -> epan/dissectors/packet-dof.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3894:         break;",
      "3895:     }",
      "3897:     value = buffer[used++] & mask;",
      "3898:     while (used < size)",
      "3899:         value = (value << 8) | buffer[used++];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3906:     if (size > *bufLength)",
      "3907:         return 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3902:     return (value);",
      "3903: }",
      "3906: {",
      "3911:     return size;",
      "3912: }",
      "3919: static guint32 DOFObjectID_GetDataSize(const DOFObjectID self)",
      "3920: {",
      "3921:     return ((*((const guint8 *)self->oid + DOFObjectID_GetClassSize(self))) & OID_DATA_LEN_MASK);",
      "",
      "[Removed Lines]",
      "3905: static guint32 DOFObjectID_GetClassSize_Bytes(const guint8 *pBytes)",
      "3907:     guint32 size = 4;",
      "3909:     (void)OALMarshal_UncompressValue(DOFOBJECTID_MAX_CLASS_SIZE, &size, pBytes);",
      "3914: static guint32 DOFObjectID_GetClassSize(DOFObjectID self)",
      "3915: {",
      "3916:     return DOFObjectID_GetClassSize_Bytes(self->oid);",
      "3917: }",
      "",
      "[Added Lines]",
      "3917: static guint32 DOFObjectID_GetClassSize(DOFObjectID self)",
      "3919:     guint32 size = self->len;",
      "3921:     (void)OALMarshal_UncompressValue(DOFOBJECTID_MAX_CLASS_SIZE, &size, self->oid);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7fe55f96672b7bf2b4ceb9ae039a0f43eddd3151",
      "candidate_info": {
        "commit_hash": "7fe55f96672b7bf2b4ceb9ae039a0f43eddd3151",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/7fe55f96672b7bf2b4ceb9ae039a0f43eddd3151",
        "files": [
          "epan/dissectors/packet-dof.c"
        ],
        "message": "DOF: Fix buffer overflow (read)\n\nPerform sanity check on buffer length parsed from data. Check buffer\nsize before reading value.\n\nChange-Id: I8beaf8860b39426d79867b0dd2221e57e32da8e0\nLink: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=1151\nBug: 13608\nReviewed-on: https://code.wireshark.org/review/21287\nReviewed-by: Peter Wu <peter@lekensteyn.nl>\nPetri-Dish: Peter Wu <peter@lekensteyn.nl>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit 6fdf8eb5a92d51617203be1a712c15585b156497)\nReviewed-on: https://code.wireshark.org/review/21290\nPetri-Dish: Michael Mann <mmann78@netscape.net>",
        "before_after_code_files": [
          "epan/dissectors/packet-dof.c||epan/dissectors/packet-dof.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-dof.c||epan/dissectors/packet-dof.c"
          ],
          "candidate": [
            "epan/dissectors/packet-dof.c||epan/dissectors/packet-dof.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-dof.c||epan/dissectors/packet-dof.c": [
          "File: epan/dissectors/packet-dof.c -> epan/dissectors/packet-dof.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3884:         break;",
          "3885:     }",
          "3887:     value = buffer[used++] & mask;",
          "3888:     while (used < size)",
          "3889:         value = (value << 8) | buffer[used++];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3896:     if (size > *bufLength)",
          "3897:         return 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3892:     return (value);",
          "3893: }",
          "3896: {",
          "3901:     return size;",
          "3902: }",
          "3909: static guint32 DOFObjectID_GetDataSize(const DOFObjectID self)",
          "3910: {",
          "3911:     return ((*((const guint8 *)self->oid + DOFObjectID_GetClassSize(self))) & OID_DATA_LEN_MASK);",
          "",
          "[Removed Lines]",
          "3895: static guint32 DOFObjectID_GetClassSize_Bytes(const guint8 *pBytes)",
          "3897:     guint32 size = 4;",
          "3899:     (void)OALMarshal_UncompressValue(DOFOBJECTID_MAX_CLASS_SIZE, &size, pBytes);",
          "3904: static guint32 DOFObjectID_GetClassSize(DOFObjectID self)",
          "3905: {",
          "3906:     return DOFObjectID_GetClassSize_Bytes(self->oid);",
          "3907: }",
          "",
          "[Added Lines]",
          "3907: static guint32 DOFObjectID_GetClassSize(DOFObjectID self)",
          "3909:     guint32 size = self->len;",
          "3911:     (void)OALMarshal_UncompressValue(DOFOBJECTID_MAX_CLASS_SIZE, &size, self->oid);",
          "",
          "---------------"
        ]
      }
    }
  ]
}