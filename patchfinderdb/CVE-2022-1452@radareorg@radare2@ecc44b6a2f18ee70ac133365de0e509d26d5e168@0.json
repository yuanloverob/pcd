{
  "cve_id": "CVE-2022-1452",
  "cve_desc": "Out-of-bounds Read in r_bin_java_bootstrap_methods_attr_new function in GitHub repository radareorg/radare2 prior to 5.7.0. The bug causes the program reads data past the end 2f the intented buffer. Typically, this can allow attackers to read sensitive information from other memory locations or cause a crash. More details see [CWE-125: Out-of-bounds read](https://cwe.mitre.org/data/definitions/125.html).",
  "repo": "radareorg/radare2",
  "patch_hash": "ecc44b6a2f18ee70ac133365de0e509d26d5e168",
  "patch_info": {
    "commit_hash": "ecc44b6a2f18ee70ac133365de0e509d26d5e168",
    "repo": "radareorg/radare2",
    "commit_url": "https://github.com/radareorg/radare2/commit/ecc44b6a2f18ee70ac133365de0e509d26d5e168",
    "files": [
      "shlr/java/class.c"
    ],
    "message": "Fix oobread in java parser ##crash\n\n* Reported by @bet4it via @huntrdev\n* BountyID c8f4c2de-7d96-4ad4-857a-c099effca2d6\n* Reproducer: bootstrap.class",
    "before_after_code_files": [
      "shlr/java/class.c||shlr/java/class.c"
    ]
  },
  "patch_diff": {
    "shlr/java/class.c||shlr/java/class.c": [
      "File: shlr/java/class.c -> shlr/java/class.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "6933:  offset += 6;",
      "6934:  if (attr) {",
      "6935:   attr->type = R_BIN_JAVA_ATTR_TYPE_BOOTSTRAP_METHODS_ATTR;",
      "6936:   attr->info.bootstrap_methods_attr.num_bootstrap_methods = R_BIN_JAVA_USHORT (buffer, offset);",
      "6937:   offset += 2;",
      "6938:   attr->info.bootstrap_methods_attr.bootstrap_methods = r_list_newf (r_bin_java_bootstrap_method_free);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6936:   if (offset + 8 > sz)  {",
      "6937:    free (attr);",
      "6938:    return NULL;",
      "6939:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0927ed3ae99444e7b47b84e43118deb10fe37529",
      "candidate_info": {
        "commit_hash": "0927ed3ae99444e7b47b84e43118deb10fe37529",
        "repo": "radareorg/radare2",
        "commit_url": "https://github.com/radareorg/radare2/commit/0927ed3ae99444e7b47b84e43118deb10fe37529",
        "files": [
          "shlr/java/class.c"
        ],
        "message": "Fix oobread crash in java parser ##crash\n\n* Reported by @bet4it via @huntrdev\n* BountyID: 229a2e0d-9e5c-402f-9a24-57fa2eb1aaa7\n* Reproducer: poc4java",
        "before_after_code_files": [
          "shlr/java/class.c||shlr/java/class.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/radareorg/radare2/pull/19993"
        ],
        "olp_code_files": {
          "patch": [
            "shlr/java/class.c||shlr/java/class.c"
          ],
          "candidate": [
            "shlr/java/class.c||shlr/java/class.c"
          ]
        }
      },
      "candidate_diff": {
        "shlr/java/class.c||shlr/java/class.c": [
          "File: shlr/java/class.c -> shlr/java/class.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1957: }",
          "1959: R_API ut8 *r_bin_java_get_attr_buf(RBinJavaObj *bin, ut64 sz, const ut64 offset, const ut8 *buf, const ut64 len) {",
          "1961:  int pending = len - offset;",
          "1962:  const ut8 *a_buf = offset + buf;",
          "1964:  if (!attr_buf) {",
          "1965:   eprintf (\"Unable to allocate enough bytes (0x%04\"PFMT64x",
          "1966:    \") to read in the attribute.\\n\", sz);",
          "",
          "[Removed Lines]",
          "1960:  ut8 *attr_buf = NULL;",
          "1963:  attr_buf = (ut8 *) calloc (pending + 1, 1);",
          "",
          "[Added Lines]",
          "1963:  ut8 *attr_buf = (ut8 *) calloc (pending + 1, 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3559:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "3560:  if (attr) {",
          "3561:   attr->type = R_BIN_JAVA_ATTR_TYPE_CONST_VALUE_ATTR;",
          "3563:   offset += 2;",
          "3564:   attr->size = offset;",
          "3565:  }",
          "",
          "[Removed Lines]",
          "3562:   attr->info.constant_value_attr.constantvalue_idx = R_BIN_JAVA_USHORT (buffer, offset);",
          "",
          "[Added Lines]",
          "3562:   if (offset + 4 < sz) {",
          "3563:    attr->info.constant_value_attr.constantvalue_idx = R_BIN_JAVA_USHORT (buffer, offset);",
          "3564:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7080: R_API RBinJavaAttrInfo *r_bin_java_rti_annotations_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
          "7081:  ut32 i = 0;",
          "7083:  ut64 offset = 0;",
          "7085:  offset += 6;",
          "7086:  if (attr) {",
          "7087:   attr->type = R_BIN_JAVA_ATTR_TYPE_RUNTIME_INVISIBLE_ANNOTATION_ATTR;",
          "",
          "[Removed Lines]",
          "7082:  RBinJavaAttrInfo *attr = NULL;",
          "7084:  attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "",
          "[Added Lines]",
          "7085:  if (buf_offset + 32 >= sz) {",
          "7086:   return NULL;",
          "7087:  }",
          "7088:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "",
          "---------------"
        ]
      }
    }
  ]
}