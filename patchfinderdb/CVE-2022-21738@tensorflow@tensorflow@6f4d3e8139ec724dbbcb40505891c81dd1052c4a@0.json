{
  "cve_id": "CVE-2022-21738",
  "cve_desc": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `SparseCountSparseOutput` can be made to crash a TensorFlow process by an integer overflow whose result is then used in a memory allocation. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "6f4d3e8139ec724dbbcb40505891c81dd1052c4a",
  "patch_info": {
    "commit_hash": "6f4d3e8139ec724dbbcb40505891c81dd1052c4a",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/6f4d3e8139ec724dbbcb40505891c81dd1052c4a",
    "files": [
      "tensorflow/core/kernels/count_ops.cc"
    ],
    "message": "Prevent crash due to integer overflow followed by allocating negative sized array.\n\nPiperOrigin-RevId: 414891322\nChange-Id: I5df390e0dc1d9f115209293708950cdf9306931c",
    "before_after_code_files": [
      "tensorflow/core/kernels/count_ops.cc||tensorflow/core/kernels/count_ops.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/count_ops.cc||tensorflow/core/kernels/count_ops.cc": [
      "File: tensorflow/core/kernels/count_ops.cc -> tensorflow/core/kernels/count_ops.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "13: limitations under the License.",
      "16: #include \"absl/container/flat_hash_map.h\"",
      "17: #include \"tensorflow/core/framework/op_kernel.h\"",
      "18: #include \"tensorflow/core/framework/op_requires.h\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "16: #include <limits>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "24: namespace tensorflow {",
      "26: template <class T>",
      "27: using BatchedMap = std::vector<absl::flat_hash_map<int64_t, T>>;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "29: static int kMaxBatches = std::numeric_limits<int>::max();",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "236:     bool is_1d = shape.NumElements() == 1;",
      "237:     int num_batches = is_1d ? 1 : shape_vector(0);",
      "239:     const auto values_values = values.flat<T>();",
      "240:     const auto weight_values = weights.flat<W>();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "243:     OP_REQUIRES(",
      "244:         context, 0 < num_batches && num_batches < kMaxBatches,",
      "245:         errors::InvalidArgument(\"Cannot allocate \", num_batches,",
      "246:                                 \" batches, is the dense shape too wide?\"));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c00ed52b50c5e786cea3cbccd40ea186481b719b",
      "candidate_info": {
        "commit_hash": "c00ed52b50c5e786cea3cbccd40ea186481b719b",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/c00ed52b50c5e786cea3cbccd40ea186481b719b",
        "files": [
          "tensorflow/core/kernels/count_ops.cc"
        ],
        "message": "Prevent crash due to integer overflow followed by allocating negative sized array.\n\nPiperOrigin-RevId: 414891322\nChange-Id: I5df390e0dc1d9f115209293708950cdf9306931c",
        "before_after_code_files": [
          "tensorflow/core/kernels/count_ops.cc||tensorflow/core/kernels/count_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/count_ops.cc||tensorflow/core/kernels/count_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/count_ops.cc||tensorflow/core/kernels/count_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/count_ops.cc||tensorflow/core/kernels/count_ops.cc": [
          "File: tensorflow/core/kernels/count_ops.cc -> tensorflow/core/kernels/count_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: limitations under the License.",
          "16: #include \"absl/container/flat_hash_map.h\"",
          "17: #include \"tensorflow/core/framework/op_kernel.h\"",
          "18: #include \"tensorflow/core/framework/op_requires.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: #include <limits>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24: namespace tensorflow {",
          "26: template <class T>",
          "27: using BatchedMap = std::vector<absl::flat_hash_map<int64, T>>;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: static int kMaxBatches = std::numeric_limits<int>::max();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "236:     bool is_1d = shape.NumElements() == 1;",
          "237:     auto shape_vector = shape.flat<int64>();",
          "238:     int num_batches = is_1d ? 1 : shape_vector(0);",
          "240:     for (int b = 0; b < shape_vector.size(); b++) {",
          "241:       OP_REQUIRES(context, shape_vector(b) >= 0,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "244:     OP_REQUIRES(",
          "245:         context, 0 < num_batches && num_batches < kMaxBatches,",
          "246:         errors::InvalidArgument(\"Cannot allocate \", num_batches,",
          "247:                                 \" batches, is the dense shape too wide?\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1dcb98b0c8ef1ec2fbe6c4dbfc4c28a08486f9bd",
      "candidate_info": {
        "commit_hash": "1dcb98b0c8ef1ec2fbe6c4dbfc4c28a08486f9bd",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/1dcb98b0c8ef1ec2fbe6c4dbfc4c28a08486f9bd",
        "files": [
          "tensorflow/core/kernels/count_ops.cc"
        ],
        "message": "Prevent crash due to integer overflow followed by allocating negative sized array.\n\nPiperOrigin-RevId: 414891322\nChange-Id: I5df390e0dc1d9f115209293708950cdf9306931c",
        "before_after_code_files": [
          "tensorflow/core/kernels/count_ops.cc||tensorflow/core/kernels/count_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/count_ops.cc||tensorflow/core/kernels/count_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/count_ops.cc||tensorflow/core/kernels/count_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/count_ops.cc||tensorflow/core/kernels/count_ops.cc": [
          "File: tensorflow/core/kernels/count_ops.cc -> tensorflow/core/kernels/count_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: limitations under the License.",
          "16: #include \"absl/container/flat_hash_map.h\"",
          "17: #include \"tensorflow/core/framework/op_kernel.h\"",
          "18: #include \"tensorflow/core/framework/op_requires.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: #include <limits>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24: namespace tensorflow {",
          "26: template <class T>",
          "27: using BatchedMap = std::vector<absl::flat_hash_map<int64_t, T>>;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: static int kMaxBatches = std::numeric_limits<int>::max();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "236:     bool is_1d = shape.NumElements() == 1;",
          "237:     int num_batches = is_1d ? 1 : shape_vector(0);",
          "239:     const auto values_values = values.flat<T>();",
          "240:     const auto weight_values = weights.flat<W>();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "243:     OP_REQUIRES(",
          "244:         context, 0 < num_batches && num_batches < kMaxBatches,",
          "245:         errors::InvalidArgument(\"Cannot allocate \", num_batches,",
          "246:                                 \" batches, is the dense shape too wide?\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "613bef16c399a62bc88d5fa9b213eabb263aef4a",
      "candidate_info": {
        "commit_hash": "613bef16c399a62bc88d5fa9b213eabb263aef4a",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/613bef16c399a62bc88d5fa9b213eabb263aef4a",
        "files": [
          "tensorflow/core/kernels/count_ops.cc"
        ],
        "message": "Prevent crash due to integer overflow followed by allocating negative sized array.\n\nPiperOrigin-RevId: 414891322\nChange-Id: I5df390e0dc1d9f115209293708950cdf9306931c",
        "before_after_code_files": [
          "tensorflow/core/kernels/count_ops.cc||tensorflow/core/kernels/count_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/count_ops.cc||tensorflow/core/kernels/count_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/count_ops.cc||tensorflow/core/kernels/count_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/count_ops.cc||tensorflow/core/kernels/count_ops.cc": [
          "File: tensorflow/core/kernels/count_ops.cc -> tensorflow/core/kernels/count_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: limitations under the License.",
          "16: #include \"absl/container/flat_hash_map.h\"",
          "17: #include \"tensorflow/core/framework/op_kernel.h\"",
          "18: #include \"tensorflow/core/framework/op_requires.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: #include <limits>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24: namespace tensorflow {",
          "26: template <class T>",
          "27: using BatchedMap = std::vector<absl::flat_hash_map<int64, T>>;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: static int kMaxBatches = std::numeric_limits<int>::max();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "236:     bool is_1d = shape.NumElements() == 1;",
          "237:     auto shape_vector = shape.flat<int64>();",
          "238:     int num_batches = is_1d ? 1 : shape_vector(0);",
          "240:     for (int b = 0; b < shape_vector.size(); b++) {",
          "241:       OP_REQUIRES(context, shape_vector(b) >= 0,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "244:     OP_REQUIRES(",
          "245:         context, 0 < num_batches && num_batches < kMaxBatches,",
          "246:         errors::InvalidArgument(\"Cannot allocate \", num_batches,",
          "247:                                 \" batches, is the dense shape too wide?\"));",
          "",
          "---------------"
        ]
      }
    }
  ]
}