{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ddcccb65185cdf51b17433ad2a63abc7fedb1e2e",
      "candidate_info": {
        "commit_hash": "ddcccb65185cdf51b17433ad2a63abc7fedb1e2e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ddcccb65185cdf51b17433ad2a63abc7fedb1e2e",
        "files": [
          "crypto/mem_sec.c",
          "test/secmemtest.c"
        ],
        "message": "Fix infinite loops in secure memory allocation.\n\nRemove assertion when mmap() fails.\nOnly give the 1<<31 limit test as an example.\n\nFix the small arena test to just check for the symptom of the infinite\nloop (i.e. initialized set on failure), rather than the actual infinite\nloop. This avoids some valgrind errors.\n\nBackport of:\nPR #3512 commit fee423bb68869de02fceaceefbc847e98213574b\nPR #3510 commit a486561b691d6293a901b412172ca0c6d1ffc0dc\nPR #3455 commit c8e89d58a5d44b9dd657d6d13a5a10d1d4d30733\nPR #3449 commit 7031ddac94d0ae616d1b0670263a9265ce672cd2\n\nIssue 1:\n\nsh.bittable_size is a size_t but i is and int, which can result in\nfreelist == -1 if sh.bittable_size exceeds an int.\n\nThis seems to result in an OPENSSL_assert due to invalid allocation\nsize, so maybe that is \"ok.\"\n\nWorse, if sh.bittable_size is exactly 1<<31, then this becomes an\ninfinite loop (because 1<<31 is a negative int, so it can be shifted\nright forever and sticks at -1).\n\nIssue 2:\n\nCRYPTO_secure_malloc_init() sets secure_mem_initialized=1 even when\nsh_init() returns 0.\n\nIf sh_init() fails, we end up with secure_mem_initialized=1 but\nsh.minsize=0. If you then call secure_malloc(), which then calls,\nsh_malloc(), this then enters an infite loop since 0 << anything will\nnever be larger than size.\n\nIssue 3:\n\nThat same sh_malloc loop will loop forever for a size greater\nthan size_t/2 because i will proceed (assuming sh.minsize=16):\ni=16, 32, 64, ..., size_t/8, size_t/4, size_t/2, 0, 0, 0, 0, ....\nThis sequence will never be larger than \"size\".\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3453)",
        "before_after_code_files": [
          "crypto/mem_sec.c||crypto/mem_sec.c",
          "test/secmemtest.c||test/secmemtest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/mem_sec.c||crypto/mem_sec.c": [
          "File: crypto/mem_sec.c -> crypto/mem_sec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:         sec_malloc_lock = CRYPTO_THREAD_lock_new();",
          "69:         if (sec_malloc_lock == NULL)",
          "70:             return 0;",
          "73:     }",
          "75:     return ret;",
          "",
          "[Removed Lines]",
          "71:         ret = sh_init(size, minsize);",
          "72:         secure_mem_initialized = 1;",
          "",
          "[Added Lines]",
          "71:         if ((ret = sh_init(size, minsize)) != 0) {",
          "72:             secure_mem_initialized = 1;",
          "73:         } else {",
          "74:             CRYPTO_THREAD_lock_free(sec_malloc_lock);",
          "75:             sec_malloc_lock = NULL;",
          "76:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "85:         sh_done();",
          "86:         secure_mem_initialized = 0;",
          "87:         CRYPTO_THREAD_lock_free(sec_malloc_lock);",
          "88:         return 1;",
          "89:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92:         sec_malloc_lock = NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "337: static int sh_init(size_t size, int minsize)",
          "338: {",
          "340:     size_t pgsize;",
          "341:     size_t aligned;",
          "",
          "[Removed Lines]",
          "339:     int i, ret;",
          "",
          "[Added Lines]",
          "344:     int ret;",
          "345:     size_t i;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "414:             close(fd);",
          "415:         }",
          "416:     }",
          "418:     if (sh.map_result == MAP_FAILED)",
          "419:         goto err;",
          "420:     sh.arena = (char *)(sh.map_result + pgsize);",
          "",
          "[Removed Lines]",
          "417:     OPENSSL_assert(sh.map_result != MAP_FAILED);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "482:     size_t i;",
          "483:     char *chunk;",
          "485:     list = sh.freelist_size - 1;",
          "486:     for (i = sh.minsize; i < size; i <<= 1)",
          "487:         list--;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "490:     if (size > sh.arena_size)",
          "491:         return NULL;",
          "",
          "---------------"
        ],
        "test/secmemtest.c||test/secmemtest.c": [
          "File: test/secmemtest.c -> test/secmemtest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #include <openssl/crypto.h>",
          "12: #define perror_line()    perror_line1(__LINE__)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10: #include <stdio.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "90:         perror_line();",
          "91:         return 1;",
          "92:     }",
          "94:     OPENSSL_secure_free(r);",
          "95: #else",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "95:     fprintf(stderr, \"Possible infinite loop: allocate more than available\\n\");",
          "96:     if (!CRYPTO_secure_malloc_init(32768, 16)) {",
          "97:         perror_line();",
          "98:         return 1;",
          "99:     }",
          "100:     if (OPENSSL_secure_malloc((size_t)-1) != NULL) {",
          "101:         perror_line();",
          "102:         return 1;",
          "103:     }",
          "104:     if (!CRYPTO_secure_malloc_done()) {",
          "105:         perror_line();",
          "106:         return 1;",
          "107:     }",
          "113:     if (!CRYPTO_secure_malloc_init(16, 16) &&",
          "114:         CRYPTO_secure_malloc_initialized()) {",
          "115:         CRYPTO_secure_malloc_done();",
          "116:         perror_line();",
          "117:         return 1;",
          "118:     }",
          "136: # if 0",
          "144:     if (sizeof(size_t) > 4) {",
          "145:         fprintf(stderr, \"Possible infinite loop: 1<<31 limit\\n\");",
          "146:         if (CRYPTO_secure_malloc_init((size_t)1<<34, (size_t)1<<4) == 0) {",
          "147:             perror_line();",
          "148:         } else if (!CRYPTO_secure_malloc_done()) {",
          "149:             perror_line();",
          "150:             return 1;",
          "151:         }",
          "152:     }",
          "153: # endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "144428dcaa1356e19bebba42a7c41caae35c65bb",
      "candidate_info": {
        "commit_hash": "144428dcaa1356e19bebba42a7c41caae35c65bb",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/144428dcaa1356e19bebba42a7c41caae35c65bb",
        "files": [
          "test/recipes/70-test_sslcbcpadding.t",
          "test/recipes/70-test_sslcertstatus.t",
          "test/recipes/70-test_sslextension.t",
          "test/recipes/70-test_sslmessages.t",
          "test/recipes/70-test_sslrecords.t",
          "test/recipes/70-test_sslsessiontick.t",
          "test/recipes/70-test_sslskewith0p.t",
          "test/recipes/70-test_sslvertol.t",
          "test/recipes/70-test_tlsextms.t"
        ],
        "message": "Enable TLSProxy tests on Windows\n\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\n(Merged from https://github.com/openssl/openssl/pull/5096)",
        "before_after_code_files": [
          "test/recipes/70-test_sslcbcpadding.t||test/recipes/70-test_sslcbcpadding.t",
          "test/recipes/70-test_sslcertstatus.t||test/recipes/70-test_sslcertstatus.t",
          "test/recipes/70-test_sslextension.t||test/recipes/70-test_sslextension.t",
          "test/recipes/70-test_sslmessages.t||test/recipes/70-test_sslmessages.t",
          "test/recipes/70-test_sslrecords.t||test/recipes/70-test_sslrecords.t",
          "test/recipes/70-test_sslsessiontick.t||test/recipes/70-test_sslsessiontick.t",
          "test/recipes/70-test_sslskewith0p.t||test/recipes/70-test_sslskewith0p.t",
          "test/recipes/70-test_sslvertol.t||test/recipes/70-test_sslvertol.t",
          "test/recipes/70-test_tlsextms.t||test/recipes/70-test_tlsextms.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/70-test_sslcbcpadding.t||test/recipes/70-test_sslcbcpadding.t": [
          "File: test/recipes/70-test_sslcbcpadding.t -> test/recipes/70-test_sslcbcpadding.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: setup($test_name);",
          "17: plan skip_all => \"TLSProxy isn't usable on $^O\"",
          "20: plan skip_all => \"$test_name needs the dynamic engine feature enabled\"",
          "21:     if disabled(\"engine\") || disabled(\"dynamic-engine\");",
          "",
          "[Removed Lines]",
          "18:     if $^O =~ /^(VMS|MSWin32)$/;",
          "",
          "[Added Lines]",
          "18:     if $^O =~ /^(VMS)$/;",
          "",
          "---------------"
        ],
        "test/recipes/70-test_sslcertstatus.t||test/recipes/70-test_sslcertstatus.t": [
          "File: test/recipes/70-test_sslcertstatus.t -> test/recipes/70-test_sslcertstatus.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: setup($test_name);",
          "17: plan skip_all => \"TLSProxy isn't usable on $^O\"",
          "20: plan skip_all => \"$test_name needs the dynamic engine feature enabled\"",
          "21:     if disabled(\"engine\") || disabled(\"dynamic-engine\");",
          "",
          "[Removed Lines]",
          "18:     if $^O =~ /^(VMS|MSWin32)$/;",
          "",
          "[Added Lines]",
          "18:     if $^O =~ /^(VMS)$/;",
          "",
          "---------------"
        ],
        "test/recipes/70-test_sslextension.t||test/recipes/70-test_sslextension.t": [
          "File: test/recipes/70-test_sslextension.t -> test/recipes/70-test_sslextension.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: setup($test_name);",
          "17: plan skip_all => \"TLSProxy isn't usable on $^O\"",
          "20: plan skip_all => \"$test_name needs the dynamic engine feature enabled\"",
          "21:     if disabled(\"engine\") || disabled(\"dynamic-engine\");",
          "",
          "[Removed Lines]",
          "18:     if $^O =~ /^(VMS|MSWin32)$/;",
          "",
          "[Added Lines]",
          "18:     if $^O =~ /^(VMS)$/;",
          "",
          "---------------"
        ],
        "test/recipes/70-test_sslmessages.t||test/recipes/70-test_sslmessages.t": [
          "File: test/recipes/70-test_sslmessages.t -> test/recipes/70-test_sslmessages.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: setup($test_name);",
          "17: plan skip_all => \"TLSProxy isn't usable on $^O\"",
          "20: plan skip_all => \"$test_name needs the dynamic engine feature enabled\"",
          "21:     if disabled(\"engine\") || disabled(\"dynamic-engine\");",
          "",
          "[Removed Lines]",
          "18:     if $^O =~ /^(VMS|MSWin32)$/;",
          "",
          "[Added Lines]",
          "18:     if $^O =~ /^(VMS)$/;",
          "",
          "---------------"
        ],
        "test/recipes/70-test_sslrecords.t||test/recipes/70-test_sslrecords.t": [
          "File: test/recipes/70-test_sslrecords.t -> test/recipes/70-test_sslrecords.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: setup($test_name);",
          "17: plan skip_all => \"TLSProxy isn't usable on $^O\"",
          "20: plan skip_all => \"$test_name needs the dynamic engine feature enabled\"",
          "21:     if disabled(\"engine\") || disabled(\"dynamic-engine\");",
          "",
          "[Removed Lines]",
          "18:     if $^O =~ /^(VMS|MSWin32)$/;",
          "",
          "[Added Lines]",
          "18:     if $^O =~ /^(VMS)$/;",
          "",
          "---------------"
        ],
        "test/recipes/70-test_sslsessiontick.t||test/recipes/70-test_sslsessiontick.t": [
          "File: test/recipes/70-test_sslsessiontick.t -> test/recipes/70-test_sslsessiontick.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: setup($test_name);",
          "18: plan skip_all => \"TLSProxy isn't usable on $^O\"",
          "21: plan skip_all => \"$test_name needs the dynamic engine feature enabled\"",
          "22:     if disabled(\"engine\") || disabled(\"dynamic-engine\");",
          "",
          "[Removed Lines]",
          "19:     if $^O =~ /^(VMS|MSWin32)$/;",
          "",
          "[Added Lines]",
          "19:     if $^O =~ /^(VMS)$/;",
          "",
          "---------------"
        ],
        "test/recipes/70-test_sslskewith0p.t||test/recipes/70-test_sslskewith0p.t": [
          "File: test/recipes/70-test_sslskewith0p.t -> test/recipes/70-test_sslskewith0p.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: setup($test_name);",
          "17: plan skip_all => \"TLSProxy isn't usable on $^O\"",
          "20: plan skip_all => \"$test_name needs the dynamic engine feature enabled\"",
          "21:     if disabled(\"engine\") || disabled(\"dynamic-engine\");",
          "",
          "[Removed Lines]",
          "18:     if $^O =~ /^(VMS|MSWin32)$/;",
          "",
          "[Added Lines]",
          "18:     if $^O =~ /^(VMS)$/;",
          "",
          "---------------"
        ],
        "test/recipes/70-test_sslvertol.t||test/recipes/70-test_sslvertol.t": [
          "File: test/recipes/70-test_sslvertol.t -> test/recipes/70-test_sslvertol.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: setup($test_name);",
          "17: plan skip_all => \"TLSProxy isn't usable on $^O\"",
          "20: plan skip_all => \"$test_name needs the dynamic engine feature enabled\"",
          "21:     if disabled(\"engine\") || disabled(\"dynamic-engine\");",
          "",
          "[Removed Lines]",
          "18:     if $^O =~ /^(VMS|MSWin32)$/;",
          "",
          "[Added Lines]",
          "18:     if $^O =~ /^(VMS)$/;",
          "",
          "---------------"
        ],
        "test/recipes/70-test_tlsextms.t||test/recipes/70-test_tlsextms.t": [
          "File: test/recipes/70-test_tlsextms.t -> test/recipes/70-test_tlsextms.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: setup($test_name);",
          "18: plan skip_all => \"TLSProxy isn't usable on $^O\"",
          "21: plan skip_all => \"$test_name needs the dynamic engine feature enabled\"",
          "22:     if disabled(\"engine\") || disabled(\"dynamic-engine\");",
          "",
          "[Removed Lines]",
          "19:     if $^O =~ /^(VMS|MSWin32)$/;",
          "",
          "[Added Lines]",
          "19:     if $^O =~ /^(VMS)$/;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8456e4c0af2524be106d55dd58f4bea681d50e48",
      "candidate_info": {
        "commit_hash": "8456e4c0af2524be106d55dd58f4bea681d50e48",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/8456e4c0af2524be106d55dd58f4bea681d50e48",
        "files": [
          "crypto/aes/asm/aes-s390x.pl",
          "crypto/modes/asm/ghash-s390x.pl",
          "crypto/sha/asm/sha1-s390x.pl",
          "crypto/sha/asm/sha512-s390x.pl"
        ],
        "message": "s390x assembly pack: remove capability double-checking.\n\nAn instruction's QUERY function is executed at initialization, iff the required\nMSA level is installed. Therefore, it is sufficient to check the bits returned\nby the QUERY functions. The MSA level does not have to be checked at every\nfunction call.\ncrypto/aes/asm/aes-s390x.pl: The AES key schedule must be computed if the\nrequired KM or KMC function codes are not available. Formally, the availability\nof a KMC function code does not imply the availability of the corresponding KM\nfunction code.\n\nSigned-off-by: Patrick Steuer <patrick.steuer@de.ibm.com>\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4501)\n\n(cherry picked from commit af1d638730bdfad85a7fa8c3f157b2828eda7c1d)",
        "before_after_code_files": [
          "crypto/aes/asm/aes-s390x.pl||crypto/aes/asm/aes-s390x.pl",
          "crypto/modes/asm/ghash-s390x.pl||crypto/modes/asm/ghash-s390x.pl",
          "crypto/shasm/sha1-s390x.pl||crypto/sha/asm/sha1-s390x.pl",
          "crypto/shasm/sha512-s390x.pl||crypto/sha/asm/sha512-s390x.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/aes/asm/aes-s390x.pl||crypto/aes/asm/aes-s390x.pl": [
          "File: crypto/aes/asm/aes-s390x.pl -> crypto/aes/asm/aes-s390x.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "813: .Lproceed:",
          "814: ___",
          "815: $code.=<<___ if (!$softonly);",
          "817:  lhi %r5,-128",
          "818:  lhi %r0,18",
          "819:  ar %r5,$bits",
          "",
          "[Removed Lines]",
          "816:  # convert bits to km code, [128,192,256]->[18,19,20]",
          "",
          "[Added Lines]",
          "816:  # convert bits to km(c) code, [128,192,256]->[18,19,20]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "821:  ar %r5,%r0",
          "823:  larl %r1,OPENSSL_s390xcap_P",
          "828:  llihh %r0,0x8000",
          "829:  srlg %r0,%r0,0(%r5)",
          "831:  jz .Lekey_internal",
          "833:  lmg %r0,%r1,0($inp) # just copy 128 bits...",
          "",
          "[Removed Lines]",
          "824:  lg %r0,0(%r1)",
          "825:  tmhl %r0,0x4000 # check for message-security assist",
          "826:  jz .Lekey_internal",
          "830:  ng %r0,48(%r1) # check kmc capability vector",
          "",
          "[Added Lines]",
          "826:  ng %r0,32(%r1) # check availability of both km...",
          "827:  ng %r0,48(%r1) # ...and kmc support for given key length",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "842:  stg %r1,24($key)",
          "843: 1: st $bits,236($key) # save bits [for debugging purposes]",
          "844:  lgr $t0,%r5",
          "846:  lghi %r2,0",
          "847:  br %r14",
          "848: ___",
          "",
          "[Removed Lines]",
          "845:  st %r5,240($key) # save km code",
          "",
          "[Added Lines]",
          "842:  st %r5,240($key) # save km(c) code",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1440: .Lctr32_hw_switch:",
          "1441: ___",
          "1442: $code.=<<___ if (!$softonly && 0);# kmctr code was measured to be ~12% slower",
          "1448:  llgfr $s0,%r0",
          "1449:  lgr $s1,%r1",
          "1450:  larl %r1,OPENSSL_s390xcap_P",
          "",
          "[Removed Lines]",
          "1443:  larl $s0,OPENSSL_s390xcap_P",
          "1444:  lg $s0,8($s0)",
          "1445:  tmhh $s0,0x0004 # check for message_security-assist-4",
          "1446:  jz .Lctr32_km_loop",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "crypto/modes/asm/ghash-s390x.pl||crypto/modes/asm/ghash-s390x.pl": [
          "File: crypto/modes/asm/ghash-s390x.pl -> crypto/modes/asm/ghash-s390x.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "88: ___",
          "89: $code.=<<___ if(!$softonly && 0); # hardware is slow for single block...",
          "90:  larl %r1,OPENSSL_s390xcap_P",
          "94:  lghi %r0,0",
          "95:  lg %r1,24(%r1) # load second word of kimd capabilities vector",
          "96:  tmhh %r1,0x4000 # check for function 65",
          "",
          "[Removed Lines]",
          "91:  lg %r0,0(%r1)",
          "92:  tmhl %r0,0x4000 # check for message-security-assist",
          "93:  jz .Lsoft_gmult",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "126: ___",
          "127: $code.=<<___ if(!$softonly);",
          "128:  larl %r1,OPENSSL_s390xcap_P",
          "137:  jz .Lsoft_ghash",
          "138:  lghi %r0,65  # function 65",
          "139:  la %r1,0($Xi) # H lies right after Xi in gcm128_context",
          "",
          "[Removed Lines]",
          "129:  lg %r0,0(%r1)",
          "130:  tmhl %r0,0x4000 # check for message-security-assist",
          "131:  jz .Lsoft_ghash",
          "132:  lghi %r0,0",
          "133:  la %r1,16($sp)",
          "134:  .long 0xb93e0004 # kimd %r0,%r4",
          "135:  lg %r1,24($sp)",
          "136:  tmhh %r1,0x4000 # check for function 65",
          "",
          "[Added Lines]",
          "126:  lg %r0,24(%r1) # load second word of kimd capabilities vector",
          "127:  tmhh %r0,0x4000 # check for function 65",
          "",
          "---------------"
        ],
        "crypto/shasm/sha1-s390x.pl||crypto/sha/asm/sha1-s390x.pl": [
          "File: crypto/shasm/sha1-s390x.pl -> crypto/sha/asm/sha1-s390x.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "crypto/shasm/sha512-s390x.pl||crypto/sha/asm/sha512-s390x.pl": [
          "File: crypto/shasm/sha512-s390x.pl -> crypto/sha/asm/sha512-s390x.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6672ca4e860a56973f5dfe502276e2f5709ddfca",
      "candidate_info": {
        "commit_hash": "6672ca4e860a56973f5dfe502276e2f5709ddfca",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/6672ca4e860a56973f5dfe502276e2f5709ddfca",
        "files": [
          "crypto/bio/b_sock2.c"
        ],
        "message": "Fix setting of IPV6_V6ONLY on Windows\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/5156)",
        "before_after_code_files": [
          "crypto/bio/b_sock2.c||crypto/bio/b_sock2.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bio/b_sock2.c||crypto/bio/b_sock2.c": [
          "File: crypto/bio/b_sock2.c -> crypto/bio/b_sock2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "200:     }",
          "202: # ifdef IPV6_V6ONLY",
          "204:         if (setsockopt(sock, IPPROTO_IPV6, IPV6_V6ONLY, &on, sizeof(on)) != 0) {",
          "205:             SYSerr(SYS_F_SETSOCKOPT, get_last_socket_error());",
          "206:             BIOerr(BIO_F_BIO_LISTEN, BIO_R_LISTEN_V6_ONLY);",
          "",
          "[Removed Lines]",
          "203:     if ((options & BIO_SOCK_V6_ONLY) && BIO_ADDR_family(addr) == AF_INET6) {",
          "",
          "[Added Lines]",
          "205:     if (BIO_ADDR_family(addr) == AF_INET6) {",
          "210:         on = options & BIO_SOCK_V6_ONLY ? 1 : 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b81cfa07ada850fd287d0a0c82ba280907f18ce7",
      "candidate_info": {
        "commit_hash": "b81cfa07ada850fd287d0a0c82ba280907f18ce7",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b81cfa07ada850fd287d0a0c82ba280907f18ce7",
        "files": [
          "Configure",
          "test/build.info",
          "test/recipes/40-test_rehash.t",
          "test/recipes/80-test_ssl_new.t",
          "test/run_tests.pl",
          "util/OpenSSL/Glob.pm",
          "util/mkdef.pl",
          "util/process_docs.pl"
        ],
        "message": "Perl: Use our own globbing wrapper rather than File::Glob::glob\n\nFile::Glob::glob is deprecated, it's use generates this kind of\nmessage:\n\n    File::Glob::glob() will disappear in perl 5.30. Use File::Glob::bsd_glob() instead. at ../master/Configure line 277.\n\nThe first idea was to use a construction that makes the caller glob()\nuse File::Glob::bsd_glob().  That turned out not to work well\neverywhere, so instead, we make our own wrapper, OpenSSL::Glob and use\nthat.\n\nFixes #4636\n\n(this is an adaptation of #4040 and part of #4069, for 1.1.0)\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4666)",
        "before_after_code_files": [
          "test/build.info||test/build.info",
          "test/recipes/40-test_rehash.t||test/recipes/40-test_rehash.t",
          "test/recipes/80-test_ssl_new.t||test/recipes/80-test_ssl_new.t",
          "test/run_tests.pl||test/run_tests.pl",
          "util/OpenSSL/Glob.pm||util/OpenSSL/Glob.pm",
          "util/mkdef.pl||util/mkdef.pl",
          "util/process_docs.pl||util/process_docs.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/build.info||test/build.info": [
          "File: test/build.info -> test/build.info",
          "--- Hunk 1 ---",
          "[Context before]",
          "293: {-",
          "294:    use File::Spec::Functions;",
          "295:    use File::Basename;",
          "298:    my @nogo_headers = ( \"asn1_mac.h\",",
          "299:                         \"__decc_include_prologue.h\",",
          "",
          "[Removed Lines]",
          "296:    use if $^O ne \"VMS\", 'File::Glob' => qw/glob/;",
          "",
          "[Added Lines]",
          "296:    use OpenSSL::Glob;",
          "",
          "---------------"
        ],
        "test/recipes/40-test_rehash.t||test/recipes/40-test_rehash.t": [
          "File: test/recipes/40-test_rehash.t -> test/recipes/40-test_rehash.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: use File::Spec::Functions;",
          "14: use File::Copy;",
          "15: use File::Basename;",
          "17: use OpenSSL::Test qw/:DEFAULT srctop_file/;",
          "19: setup(\"test_rehash\");",
          "",
          "[Removed Lines]",
          "16: use if $^O ne \"VMS\", 'File::Glob' => qw/glob/;",
          "",
          "[Added Lines]",
          "16: use OpenSSL::Glob;",
          "",
          "---------------"
        ],
        "test/recipes/80-test_ssl_new.t||test/recipes/80-test_ssl_new.t": [
          "File: test/recipes/80-test_ssl_new.t -> test/recipes/80-test_ssl_new.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: use File::Basename;",
          "14: use File::Compare qw/compare_text/;",
          "17: use OpenSSL::Test qw/:DEFAULT srctop_dir srctop_file/;",
          "18: use OpenSSL::Test::Utils qw/disabled alldisabled available_protocols/;",
          "",
          "[Removed Lines]",
          "15: use if $^O ne \"VMS\", 'File::Glob' => qw/glob/;",
          "",
          "[Added Lines]",
          "15: use OpenSSL::Glob;",
          "",
          "---------------"
        ],
        "test/run_tests.pl||test/run_tests.pl": [
          "File: test/run_tests.pl -> test/run_tests.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: use File::Spec::Functions qw/catdir catfile curdir abs2rel rel2abs/;",
          "18: use File::Basename;",
          "20: use Module::Load::Conditional qw(can_load);",
          "22: my $TAP_Harness = can_load(modules => { 'TAP::Harness' => undef })",
          "",
          "[Removed Lines]",
          "19: use if $^O ne \"VMS\", 'File::Glob' => qw/glob/;",
          "",
          "[Added Lines]",
          "19: use FindBin;",
          "20: use lib \"$FindBin::Bin/../util\";",
          "21: use OpenSSL::Glob;",
          "",
          "---------------"
        ],
        "util/OpenSSL/Glob.pm||util/OpenSSL/Glob.pm": [
          "File: util/OpenSSL/Glob.pm -> util/OpenSSL/Glob.pm",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package OpenSSL::Glob;",
          "3: use strict;",
          "4: use warnings;",
          "6: use File::Glob;",
          "8: use Exporter;",
          "9: use vars qw($VERSION @ISA @EXPORT);",
          "11: $VERSION = '0.1';",
          "12: @ISA = qw(Exporter);",
          "13: @EXPORT = qw(glob);",
          "15: sub glob {",
          "16:     goto &File::Glob::bsd_glob if $^O ne \"VMS\";",
          "17:     goto &CORE::glob;",
          "18: }",
          "20: 1;",
          "21: __END__",
          "",
          "---------------"
        ],
        "util/mkdef.pl||util/mkdef.pl": [
          "File: util/mkdef.pl -> util/mkdef.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "48: use lib \".\";",
          "49: use configdata;",
          "50: use File::Spec::Functions;",
          "52: my $debug=0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51: use File::Basename;",
          "52: use FindBin;",
          "53: use lib \"$FindBin::Bin\";",
          "54: use OpenSSL::Glob;",
          "",
          "---------------"
        ],
        "util/process_docs.pl||util/process_docs.pl": [
          "File: util/process_docs.pl -> util/process_docs.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: use File::Basename;",
          "14: use File::Copy;",
          "15: use File::Path;",
          "17: use Getopt::Long;",
          "18: use Pod::Usage;",
          "",
          "[Removed Lines]",
          "16: use if $^O ne \"VMS\", 'File::Glob' => qw/glob/;",
          "",
          "[Added Lines]",
          "16: use FindBin;",
          "17: use lib \"$FindBin::Bin\";",
          "18: use OpenSSL::Glob;",
          "",
          "---------------"
        ]
      }
    }
  ]
}