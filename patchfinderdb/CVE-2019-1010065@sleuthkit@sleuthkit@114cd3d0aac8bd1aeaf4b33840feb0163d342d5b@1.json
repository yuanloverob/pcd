{
  "cve_id": "CVE-2019-1010065",
  "cve_desc": "The Sleuth Kit 4.6.0 and earlier is affected by: Integer Overflow. The impact is: Opening crafted disk image triggers crash in tsk/fs/hfs_dent.c:237. The component is: Overflow in fls tool used on HFS image. Bug is in tsk/fs/hfs.c file in function hfs_cat_traverse() in lines: 952, 1062. The attack vector is: Victim must open a crafted HFS filesystem image.",
  "repo": "sleuthkit/sleuthkit",
  "patch_hash": "114cd3d0aac8bd1aeaf4b33840feb0163d342d5b",
  "patch_info": {
    "commit_hash": "114cd3d0aac8bd1aeaf4b33840feb0163d342d5b",
    "repo": "sleuthkit/sleuthkit",
    "commit_url": "https://github.com/sleuthkit/sleuthkit/commit/114cd3d0aac8bd1aeaf4b33840feb0163d342d5b",
    "files": [
      "tsk/fs/hfs.c"
    ],
    "message": "hfs: fix keylen check in hfs_cat_traverse()\n\nIf key->key_len is 65535, calculating \"uint16_t keylen' would\ncause an overflow:\n\n   uint16_t keylen;\n   ...\n   keylen = 2 + tsk_getu16(hfs->fs_info.endian, key->key_len)\n\nso the code bypasses the sanity check \"if (keylen > nodesize)\"\nwhich results in crash later:\n\n    ./toolfs/fstools/fls -b 512 -f hfs <image>\n    =================================================================\n    ==16==ERROR: AddressSanitizer: SEGV on unknown address 0x6210000256a4 (pc 0x00000054812b bp 0x7ffca548a8f0 sp 0x7ffca548a480 T0)\n    ==16==The signal is caused by a READ memory access.\n        #0 0x54812a in hfs_dir_open_meta_cb /fuzzing/sleuthkit/tsk/fs/hfs_dent.c:237:20\n        #1 0x51a96c in hfs_cat_traverse /fuzzing/sleuthkit/tsk/fs/hfs.c:1082:21\n        #2 0x547785 in hfs_dir_open_meta /fuzzing/sleuthkit/tsk/fs/hfs_dent.c:480:9\n        #3 0x50f57d in tsk_fs_dir_open_meta /fuzzing/sleuthkit/tsk/fs/fs_dir.c:290:14\n        #4 0x54af17 in tsk_fs_path2inum /fuzzing/sleuthkit/tsk/fs/ifind_lib.c:237:23\n        #5 0x522266 in hfs_open /fuzzing/sleuthkit/tsk/fs/hfs.c:6579:9\n        #6 0x508e89 in main /fuzzing/sleuthkit/tools/fstools/fls.cpp:267:19\n        #7 0x7f9daf67c2b0 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x202b0)\n        #8 0x41d679 in _start (/fuzzing/sleuthkit/tools/fstools/fls+0x41d679)\n\nMake 'keylen' int type to prevent the overflow and fix that.\nNow, I get proper error message instead of crash:\n    ./toolfs/fstools/fls -b 512 -f hfs <image>\n    General file system error (hfs_cat_traverse: length of key 3 in leaf node 1 too large (65537 vs 4096))",
    "before_after_code_files": [
      "tsk/fs/hfs.c||tsk/fs/hfs.c"
    ]
  },
  "patch_diff": {
    "tsk/fs/hfs.c||tsk/fs/hfs.c": [
      "File: tsk/fs/hfs.c -> tsk/fs/hfs.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "937:                 size_t rec_off;",
      "938:                 hfs_btree_key_cat *key;",
      "939:                 uint8_t retval;",
      "943:                 rec_off =",
      "",
      "[Removed Lines]",
      "940:                 uint16_t keylen;",
      "",
      "[Added Lines]",
      "940:                 int keylen;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1042:                 size_t rec_off;",
      "1043:                 hfs_btree_key_cat *key;",
      "1044:                 uint8_t retval;",
      "1048:                 rec_off =",
      "",
      "[Removed Lines]",
      "1045:                 uint16_t keylen;",
      "",
      "[Added Lines]",
      "1045:                 int keylen;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fa3c5d8768369592ca2ffc75a16db9838a46c519",
      "candidate_info": {
        "commit_hash": "fa3c5d8768369592ca2ffc75a16db9838a46c519",
        "repo": "sleuthkit/sleuthkit",
        "commit_url": "https://github.com/sleuthkit/sleuthkit/commit/fa3c5d8768369592ca2ffc75a16db9838a46c519",
        "files": [
          "bindings/java/src/org/sleuthkit/datamodel/Account.java",
          "bindings/java/src/org/sleuthkit/datamodel/AccountDeviceInstance.java",
          "bindings/java/src/org/sleuthkit/datamodel/CommunicationsFilter.java",
          "bindings/java/src/org/sleuthkit/datamodel/CommunicationsManager.java",
          "bindings/java/src/org/sleuthkit/datamodel/DeviceFilter.java",
          "bindings/java/src/org/sleuthkit/datamodel/SubFilter.java"
        ],
        "message": "876: added CommunicationsManager API for CVT milestone #1  - list of Account device instances",
        "before_after_code_files": [
          "bindings/javsrc/org/sleuthkit/datamodel/Account.java||bindings/java/src/org/sleuthkit/datamodel/Account.java",
          "bindings/javsrc/org/sleuthkit/datamodel/AccountDeviceInstance.java||bindings/java/src/org/sleuthkit/datamodel/AccountDeviceInstance.java",
          "bindings/javsrc/org/sleuthkit/datamodel/CommunicationsFilter.java||bindings/java/src/org/sleuthkit/datamodel/CommunicationsFilter.java",
          "bindings/javsrc/org/sleuthkit/datamodel/CommunicationsManager.java||bindings/java/src/org/sleuthkit/datamodel/CommunicationsManager.java",
          "bindings/javsrc/org/sleuthkit/datamodel/DeviceFilter.java||bindings/java/src/org/sleuthkit/datamodel/DeviceFilter.java",
          "bindings/javsrc/org/sleuthkit/datamodel/SubFilter.java||bindings/java/src/org/sleuthkit/datamodel/SubFilter.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/javsrc/org/sleuthkit/datamodel/Account.java||bindings/java/src/org/sleuthkit/datamodel/Account.java": [
          "File: bindings/javsrc/org/sleuthkit/datamodel/Account.java -> bindings/java/src/org/sleuthkit/datamodel/Account.java"
        ],
        "bindings/javsrc/org/sleuthkit/datamodel/AccountDeviceInstance.java||bindings/java/src/org/sleuthkit/datamodel/AccountDeviceInstance.java": [
          "File: bindings/javsrc/org/sleuthkit/datamodel/AccountDeviceInstance.java -> bindings/java/src/org/sleuthkit/datamodel/AccountDeviceInstance.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: package org.sleuthkit.datamodel;",
          "28: public class AccountDeviceInstance {",
          "29:  private final Account account;",
          "30:  private final String deviceID;",
          "32:  AccountDeviceInstance(Account account, String deviceId) {",
          "33:   this.account = account;",
          "34:   this.deviceID = deviceId;",
          "35:  }",
          "42:  public Account getAccount(){",
          "43:   return this.account;",
          "44:  }",
          "51:  public String getDeviceId(){",
          "52:   return this.deviceID;",
          "53:  }",
          "55: }",
          "",
          "---------------"
        ],
        "bindings/javsrc/org/sleuthkit/datamodel/CommunicationsFilter.java||bindings/java/src/org/sleuthkit/datamodel/CommunicationsFilter.java": [
          "File: bindings/javsrc/org/sleuthkit/datamodel/CommunicationsFilter.java -> bindings/java/src/org/sleuthkit/datamodel/CommunicationsFilter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: package org.sleuthkit.datamodel;",
          "21: import java.util.ArrayList;",
          "22: import java.util.List;",
          "28: public class CommunicationsFilter {",
          "30:  private final List<SubFilter> andFilters;",
          "37:  public List<SubFilter> getAndFilters() {",
          "38:   return andFilters;",
          "39:  }",
          "44:  public void addAndFilter(SubFilter subFilter) {",
          "45:   andFilters.add(subFilter);",
          "46:  }",
          "48:  CommunicationsFilter()",
          "49:  {",
          "50:   this.andFilters = new ArrayList<SubFilter>();",
          "53:  }",
          "55: }",
          "",
          "---------------"
        ],
        "bindings/javsrc/org/sleuthkit/datamodel/CommunicationsManager.java||bindings/java/src/org/sleuthkit/datamodel/CommunicationsManager.java": [
          "File: bindings/javsrc/org/sleuthkit/datamodel/CommunicationsManager.java -> bindings/java/src/org/sleuthkit/datamodel/CommunicationsManager.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: import java.util.Arrays;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53:  private final List<Integer> RELATIONSHIP_ARTIFACT_TYPE_IDS = Arrays.asList(",
          "54:    BlackboardArtifact.ARTIFACT_TYPE.TSK_MESSAGE.getTypeID(),",
          "55:    BlackboardArtifact.ARTIFACT_TYPE.TSK_EMAIL_MSG.getTypeID(),",
          "56:    BlackboardArtifact.ARTIFACT_TYPE.TSK_CONTACT.getTypeID(),",
          "57:    BlackboardArtifact.ARTIFACT_TYPE.TSK_CALLLOG.getTypeID()",
          "58:   );",
          "59:  private String RELATIONSHIP_ARTIFACT_TYPE_IDS_CSV_STR;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70:   RELATIONSHIP_ARTIFACT_TYPE_IDS_CSV_STR = buildCSVString(RELATIONSHIP_ARTIFACT_TYPE_IDS);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "895:    rs = connection.executeQuery(s, \"SELECT account_types.type_name as type_name,\"",
          "896:      + \" account_types.display_name as display_name,\"",
          "897:      + \" accounts.account_id as account_id,\"",
          "899:      + \" FROM accounts as accounts\"",
          "900:      + \" JOIN account_types as account_types\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1195:  public List<AccountDeviceInstance> getAccountDeviceInstancesWithRelationships(CommunicationsFilter filter) throws TskCoreException {",
          "1197:   CaseDbConnection connection = db.getConnection();",
          "1198:   db.acquireSharedLock();",
          "1199:   Statement s = null;",
          "1200:   ResultSet rs = null;",
          "1201:   try {",
          "1202:    s = connection.createStatement();",
          "1204:    String queryStr = \"SELECT DISTINCT accounts.account_id as account_id,\"",
          "1205:      + \" dsi.device_id as device_id\"",
          "1206:      + \" FROM accounts AS accounts\"",
          "1207:      + \" JOIN account_to_instances_map AS aim\"",
          "1208:      + \"  ON accounts.account_id = aim.account_id\"",
          "1209:      + \" JOIN blackboard_artifacts AS arts\"",
          "1210:      + \"  ON aim.account_instance_id = arts.artifact_id\"",
          "1211:      + \" JOIN data_source_info as dsi\"",
          "1212:      + \"  ON arts.data_source_obj_id = dsi.obj_id\"",
          "1213:      + \" WHERE accounts.account_id IN\"",
          "1214:      + \"  ( SELECT DISTINCT account1_id from relationships\"",
          "1215:      + \"    UNION \"",
          "1216:      + \"    SELECT DISTINCT account2_id from relationships )\";",
          "1220:    System.out.println(\"RAMAN QueryStr = \" + queryStr );",
          "1223:    rs = connection.executeQuery(s, queryStr); //NON-NLS",
          "1225:    ArrayList<AccountDeviceInstance> accountDeviceInstances = new ArrayList<AccountDeviceInstance>();",
          "1226:    while (rs.next()) {",
          "1228:     long account_id = rs.getLong(\"account_id\");",
          "1229:     String deviceID = rs.getString(\"device_id\");",
          "1230:     Account account = this.getAccount(account_id);",
          "1232:     accountDeviceInstances.add(new AccountDeviceInstance(account, deviceID));",
          "1233:    }",
          "1234:    return accountDeviceInstances;",
          "1235:   } catch (SQLException ex) {",
          "1236:    throw new TskCoreException(\"Error getting account device instances. \" + ex.getMessage(), ex);",
          "1237:   } finally {",
          "1238:    closeResultSet(rs);",
          "1239:    closeStatement(s);",
          "1240:    connection.close();",
          "1241:    db.releaseSharedLock();",
          "1242:   }",
          "1244:  }",
          "1256:  public long getRelationshipsCountByDevice(String deviceId) throws TskCoreException {",
          "1258:   System.out.println(\"RAMAN getRelationshipsCountByDevice deviceId = \" + deviceId );",
          "1262:   List<Long> ds_ids =  db.getDataSourceObjIds( deviceId);",
          "1263:   String datasource_obj_ids_list = buildCSVString(ds_ids);",
          "1265:   CaseDbConnection connection = db.getConnection();",
          "1266:   db.acquireSharedLock();",
          "1267:   Statement s = null;",
          "1268:   ResultSet rs = null;",
          "1269:   try {",
          "1270:    s = connection.createStatement();",
          "1272:    String queryStr = \"SELECT COUNT(*) AS count \"",
          "1273:      + \" FROM blackboard_artifacts as artifacts\"",
          "1274:         + \" JOIN relationships AS relationships\"",
          "1275:      + \"  ON artifacts.artifact_id = relationships.communication_artifact_id\"",
          "1276:      + \" WHERE artifacts.data_source_obj_id IN ( \" + datasource_obj_ids_list + \" )\"",
          "1277:      + \" AND   artifacts.artifact_type_id IN ( \" + RELATIONSHIP_ARTIFACT_TYPE_IDS_CSV_STR + \" )\";",
          "1279:    System.out.println(\"RAMAN QueryStr = \" + queryStr );",
          "1282:    rs = connection.executeQuery(s, queryStr); //NON-NLS",
          "1284:    rs.next();",
          "1285:    return (rs.getLong(\"count\"));",
          "1288:   } catch (SQLException ex) {",
          "1289:    throw new TskCoreException(\"Error getting relationships bteween accounts. \" + ex.getMessage(), ex);",
          "1290:   } finally {",
          "1291:    closeResultSet(rs);",
          "1292:    closeStatement(s);",
          "1293:    connection.close();",
          "1294:    db.releaseSharedLock();",
          "1295:   }",
          "1297:  }",
          "1308:  public long getRelationshipsCount(CommunicationsFilter filter, AccountDeviceInstance accountDeviceInstance) throws TskCoreException {",
          "1310:   long account_id = accountDeviceInstance.getAccount().getAccountId();",
          "1314:   List<Long> ds_ids =  db.getDataSourceObjIds( accountDeviceInstance.getDeviceId());",
          "1315:   String datasource_obj_ids_list = buildCSVString(ds_ids);",
          "1317:   CaseDbConnection connection = db.getConnection();",
          "1318:   db.acquireSharedLock();",
          "1319:   Statement s = null;",
          "1320:   ResultSet rs = null;",
          "1321:   try {",
          "1322:    s = connection.createStatement();",
          "1324:    String queryStr = \"SELECT COUNT(*) AS count \"",
          "1325:      + \" FROM blackboard_artifacts as artifacts\"",
          "1326:         + \" JOIN relationships AS relationships\"",
          "1327:      + \"  ON artifacts.artifact_id = relationships.communication_artifact_id\"",
          "1328:      + \" WHERE artifacts.data_source_obj_id IN ( \" + datasource_obj_ids_list + \" )\"",
          "1329:      + \" AND artifacts.artifact_type_id IN ( \" + RELATIONSHIP_ARTIFACT_TYPE_IDS_CSV_STR + \" )\"",
          "1330:      + \" AND ( relationships.account1_id = \" + account_id + \" OR  relationships.account2_id = \" + account_id + \" )\";",
          "1332:    System.out.println(\"RAMAN QueryStr = \" + queryStr );",
          "1336:    rs = connection.executeQuery(s, queryStr); //NON-NLS",
          "1338:    rs.next();",
          "1339:    return (rs.getLong(\"count\"));",
          "1342:   } catch (SQLException ex) {",
          "1343:    throw new TskCoreException(\"Error getting relationships count for account device instance. \" + ex.getMessage(), ex);",
          "1344:   } finally {",
          "1345:    closeResultSet(rs);",
          "1346:    closeStatement(s);",
          "1347:    connection.close();",
          "1348:    db.releaseSharedLock();",
          "1349:   }",
          "1351:  }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1411:  private static <T> String buildCSVString(Collection<T> values) {",
          "1412:   if (values==null || values.isEmpty()) return \"\";",
          "1413:   StringBuilder result = new StringBuilder();",
          "1414:   for (T val : values) {",
          "1415:    result.append(val);",
          "1416:    result.append(\",\");",
          "1417:   }",
          "1418:   return result.substring(0, result.length() - 1);",
          "1419:  }",
          "",
          "---------------"
        ],
        "bindings/javsrc/org/sleuthkit/datamodel/DeviceFilter.java||bindings/java/src/org/sleuthkit/datamodel/DeviceFilter.java": [
          "File: bindings/javsrc/org/sleuthkit/datamodel/DeviceFilter.java -> bindings/java/src/org/sleuthkit/datamodel/DeviceFilter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: package org.sleuthkit.datamodel;",
          "21: import java.util.List;",
          "27: public class DeviceFilter implements SubFilter {",
          "29:  private final List<String> deviceIds;",
          "31:  DeviceFilter(List<String> deviceIds) {",
          "32:   this.deviceIds = deviceIds;",
          "33:  }",
          "40:  public List<String> getdeviceIds() {",
          "41:   return deviceIds;",
          "42:  }",
          "44:  @Override",
          "45:  public String getDescription() {",
          "46:   return \"Filters accounts and relationships by device id\";",
          "47:  }",
          "49: }",
          "",
          "---------------"
        ],
        "bindings/javsrc/org/sleuthkit/datamodel/SubFilter.java||bindings/java/src/org/sleuthkit/datamodel/SubFilter.java": [
          "File: bindings/javsrc/org/sleuthkit/datamodel/SubFilter.java -> bindings/java/src/org/sleuthkit/datamodel/SubFilter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: package org.sleuthkit.datamodel;",
          "25: public interface SubFilter {",
          "30:  public String getDescription();",
          "31: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7d2370474539b423ec18ba20d3d6ce4502692ecf",
      "candidate_info": {
        "commit_hash": "7d2370474539b423ec18ba20d3d6ce4502692ecf",
        "repo": "sleuthkit/sleuthkit",
        "commit_url": "https://github.com/sleuthkit/sleuthkit/commit/7d2370474539b423ec18ba20d3d6ce4502692ecf",
        "files": [
          "bindings/java/src/org/sleuthkit/datamodel/CommunicationsManager.java"
        ],
        "message": "870: Build filters API for milestone #2   - Added filtering to getRelationshipsCount()",
        "before_after_code_files": [
          "bindings/javsrc/org/sleuthkit/datamodel/CommunicationsManager.java||bindings/java/src/org/sleuthkit/datamodel/CommunicationsManager.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/javsrc/org/sleuthkit/datamodel/CommunicationsManager.java||bindings/java/src/org/sleuthkit/datamodel/CommunicationsManager.java": [
          "File: bindings/javsrc/org/sleuthkit/datamodel/CommunicationsManager.java -> bindings/java/src/org/sleuthkit/datamodel/CommunicationsManager.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1206:    Set<String> applicableFilters = new HashSet<String>();",
          "1207:    applicableFilters.add(DeviceFilter.class.getName());",
          "1208:    applicableFilters.add(AccountTypeFilter.class.getName());",
          "1211:    String filterSQL = getCommunicationsFilterSQL(filter, applicableFilters);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1320:    Set<String> applicableFilters = new HashSet<String>();",
          "1321:    applicableFilters.add(DeviceFilter.class.getName());",
          "1324:    String filterSQL = getCommunicationsFilterSQL(filter, applicableFilters);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1422:  private String getCommunicationsFilterSQL(CommunicationsFilter commFilter, Set<String> applicableFilters) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1432:    if (applicableFilters.contains(subFilter.getClass().getName())) {",
          "1433:     if (first) {",
          "1434:      first = false;",
          "1435:     } else {",
          "1436:      sqlSB.append(\" AND \");",
          "1437:     }",
          "1438:     sqlSB.append(\"( \");",
          "1439:     sqlSB.append(subFilter.getSQL(this));",
          "1440:     sqlSB.append(\" )\");",
          "1442:     System.out.println(\"RAMAN Found INAPPLICABLE filter of type = \" + subFilter.getClass().getName());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9d22783dbe2e6e2d8be26159382709206bef4959",
      "candidate_info": {
        "commit_hash": "9d22783dbe2e6e2d8be26159382709206bef4959",
        "repo": "sleuthkit/sleuthkit",
        "commit_url": "https://github.com/sleuthkit/sleuthkit/commit/9d22783dbe2e6e2d8be26159382709206bef4959",
        "files": [
          "tsk/fs/apfs_compat.cpp"
        ],
        "message": "Fixed content_ptr object construction issue that was causing crashes on Linux. (issue #2)",
        "before_after_code_files": [
          "tsk/fs/apfs_compat.cpp||tsk/fs/apfs_compat.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tsk/fs/apfs_compat.cpp||tsk/fs/apfs_compat.cpp": [
          "File: tsk/fs/apfs_compat.cpp -> tsk/fs/apfs_compat.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "547:   auto inode_ptr = static_cast<APFSJObject*>(fs_file->meta->content_ptr);",
          "550:   if (!inode_ptr->valid()) {",
          "551:     tsk_error_reset();",
          "552:     tsk_error_set_errno(TSK_ERR_FS_INODE_NUM);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "549:   new (inode_ptr) APFSJObject(obj(addr));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f1618bbb41efe63a152b1676f32137e96eef02c9",
      "candidate_info": {
        "commit_hash": "f1618bbb41efe63a152b1676f32137e96eef02c9",
        "repo": "sleuthkit/sleuthkit",
        "commit_url": "https://github.com/sleuthkit/sleuthkit/commit/f1618bbb41efe63a152b1676f32137e96eef02c9",
        "files": [
          "bindings/java/src/org/sleuthkit/datamodel/AccountTypeFilter.java",
          "bindings/java/src/org/sleuthkit/datamodel/CommunicationsManager.java",
          "bindings/java/src/org/sleuthkit/datamodel/DeviceFilter.java",
          "bindings/java/src/org/sleuthkit/datamodel/SubFilter.java"
        ],
        "message": "870: API filters for milestone #2  - Pushed SQL constructions down into filters.",
        "before_after_code_files": [
          "bindings/javsrc/org/sleuthkit/datamodel/AccountTypeFilter.java||bindings/java/src/org/sleuthkit/datamodel/AccountTypeFilter.java",
          "bindings/javsrc/org/sleuthkit/datamodel/CommunicationsManager.java||bindings/java/src/org/sleuthkit/datamodel/CommunicationsManager.java",
          "bindings/javsrc/org/sleuthkit/datamodel/DeviceFilter.java||bindings/java/src/org/sleuthkit/datamodel/DeviceFilter.java",
          "bindings/javsrc/org/sleuthkit/datamodel/SubFilter.java||bindings/java/src/org/sleuthkit/datamodel/SubFilter.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/javsrc/org/sleuthkit/datamodel/AccountTypeFilter.java||bindings/java/src/org/sleuthkit/datamodel/AccountTypeFilter.java": [
          "File: bindings/javsrc/org/sleuthkit/datamodel/AccountTypeFilter.java -> bindings/java/src/org/sleuthkit/datamodel/AccountTypeFilter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: import java.util.ArrayList;",
          "22: import java.util.List;",
          "42:  public List<Account.Type> getAccountTypes() {",
          "43:   return new ArrayList<Account.Type>(accountTypes);",
          "63:  @Override",
          "64:  public String getSQL(CommunicationsManager commsManager) {",
          "65:   if (accountTypes.isEmpty()) {",
          "66:    return \"\";",
          "67:   }",
          "69:   String sql = \"\";",
          "70:   List<Integer> type_ids = new ArrayList<Integer>();",
          "71:   for (Account.Type accountType : accountTypes) {",
          "72:    type_ids.add(commsManager.getAccountTypeId(accountType));",
          "73:   }",
          "75:   String account_type_ids_list = CommunicationsManager.buildCSVString(type_ids);",
          "76:   if (!account_type_ids_list.isEmpty()) {",
          "77:    sql = \" account_types.account_type_id IN ( \" + account_type_ids_list + \" )\";",
          "78:   }",
          "80:   return sql;",
          "81:  }",
          "",
          "---------------"
        ],
        "bindings/javsrc/org/sleuthkit/datamodel/CommunicationsManager.java||bindings/java/src/org/sleuthkit/datamodel/CommunicationsManager.java": [
          "File: bindings/javsrc/org/sleuthkit/datamodel/CommunicationsManager.java -> bindings/java/src/org/sleuthkit/datamodel/CommunicationsManager.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58:  );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "173:  SleuthkitCase getSleuthkitCase() {",
          "174:   return this.db;",
          "175:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1211:    System.out.println(\"RAMAN FilterSQL = \" + filterSQL);",
          "1212:    System.out.println(\"RAMAN QueryStr = \" + queryStr);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1232:   }",
          "1247:   List<Long> ds_ids = db.getDataSourceObjIds(deviceId);",
          "1258:      + \" JOIN relationships AS relationships\"",
          "1263:    System.out.println(\"RAMAN QueryStr = \" + queryStr);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1297:   List<Long> ds_ids = db.getDataSourceObjIds(accountDeviceInstance.getDeviceId());",
          "1308:      + \" JOIN relationships AS relationships\"",
          "1320:    System.out.println(\"RAMAN FilterSQL = \" + filterSQL);",
          "1321:    System.out.println(\"RAMAN QueryStr = \" + queryStr);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1344:  int getAccountTypeId(Account.Type accountType) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1394:  static <T> String buildCSVString(Collection<T> values) {",
          "1395:   if (values == null || values.isEmpty()) {",
          "1397:   }",
          "1414:   if (null == commFilter || commFilter.getAndFilters().isEmpty()) {",
          "1416:   }",
          "1420:   for (SubFilter subFilter : commFilter.getAndFilters()) {",
          "1423:    } else {",
          "1427:    sqlSB.append(subFilter.getSQL(this));",
          "1431:   return \"( \" + sqlSB.toString() + \" )\";",
          "",
          "---------------"
        ],
        "bindings/javsrc/org/sleuthkit/datamodel/DeviceFilter.java||bindings/java/src/org/sleuthkit/datamodel/DeviceFilter.java": [
          "File: bindings/javsrc/org/sleuthkit/datamodel/DeviceFilter.java -> bindings/java/src/org/sleuthkit/datamodel/DeviceFilter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: import java.util.ArrayList;",
          "22: import java.util.List;",
          "24: import java.util.logging.Level;",
          "25: import java.util.logging.Logger;",
          "44:  public List<String> getdeviceIds() {",
          "45:   return new ArrayList<String>(deviceIds);",
          "65:  @Override",
          "66:  public String getSQL(CommunicationsManager commsManager) {",
          "67:   if (deviceIds.isEmpty()) {",
          "68:    return \"\";",
          "69:   }",
          "71:   String sql = \"\";",
          "72:   List<Long> ds_ids = new ArrayList<Long>();",
          "73:   for (String deviceId : deviceIds) {",
          "74:    try {",
          "75:     ds_ids.addAll(commsManager.getSleuthkitCase().getDataSourceObjIds(deviceId));",
          "76:    } catch (TskCoreException ex) {",
          "77:     Logger.getLogger(DeviceFilter.class.getName()).log(Level.WARNING, \"failed to get datasource object ids for deviceId\", ex);",
          "78:    }",
          "79:   }",
          "81:   String datasource_obj_ids_list = CommunicationsManager.buildCSVString(ds_ids);",
          "82:   if (!datasource_obj_ids_list.isEmpty()) {",
          "83:    sql = \" artifacts.data_source_obj_id IN ( \" + datasource_obj_ids_list + \" )\";",
          "84:   }",
          "86:   return sql;",
          "87:  }",
          "",
          "---------------"
        ],
        "bindings/javsrc/org/sleuthkit/datamodel/SubFilter.java||bindings/java/src/org/sleuthkit/datamodel/SubFilter.java": [
          "File: bindings/javsrc/org/sleuthkit/datamodel/SubFilter.java -> bindings/java/src/org/sleuthkit/datamodel/SubFilter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:  public String getSQL(CommunicationsManager commsManager);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4132cacd48dfc7131c1e555ec2cfe1fe45946c9c",
      "candidate_info": {
        "commit_hash": "4132cacd48dfc7131c1e555ec2cfe1fe45946c9c",
        "repo": "sleuthkit/sleuthkit",
        "commit_url": "https://github.com/sleuthkit/sleuthkit/commit/4132cacd48dfc7131c1e555ec2cfe1fe45946c9c",
        "files": [
          "tsk/fs/apfs.cpp",
          "tsk/fs/apfs_compat.cpp",
          "tsk/fs/apfs_fs.hpp",
          "tsk/fs/apfs_open.cpp",
          "tsk/fs/tsk_apfs.h",
          "tsk/fs/tsk_apfs.hpp",
          "tsk/pool/Makefile.am",
          "tsk/pool/apfs_compat.cpp",
          "tsk/pool/apfs_compat.hpp",
          "tsk/pool/apfs_pool.cpp",
          "tsk/pool/apfs_pool_compat.cpp",
          "tsk/pool/apfs_pool_compat.hpp",
          "tsk/pool/pool_compat.hpp",
          "tsk/pool/pool_open.cpp",
          "tsk/pool/pool_read.cpp",
          "tsk/pool/tsk_apfs.hpp",
          "tsk/util/lw_shared_ptr.hpp",
          "tsk/util/span.hpp",
          "win32/libtsk/libtsk.vcxproj",
          "win32/libtsk/libtsk.vcxproj.filters"
        ],
        "message": "More MSVC fixes (issue #1)",
        "before_after_code_files": [
          "tsk/fs/apfs.cpp||tsk/fs/apfs.cpp",
          "tsk/fs/apfs_compat.cpp||tsk/fs/apfs_compat.cpp",
          "tsk/fs/apfs_fs.hpp||tsk/fs/apfs_fs.hpp",
          "tsk/fs/apfs_open.cpp||tsk/fs/apfs_open.cpp",
          "tsk/fs/tsk_apfs.h||tsk/fs/tsk_apfs.h",
          "tsk/fs/tsk_apfs.hpp||tsk/fs/tsk_apfs.hpp",
          "tsk/pool/Makefile.am||tsk/pool/Makefile.am",
          "tsk/pool/apfs_pool.cpp||tsk/pool/apfs_pool.cpp",
          "tsk/pool/apfs_compat.cpp||tsk/pool/apfs_pool_compat.cpp",
          "tsk/pool/pool_compat.hpp||tsk/pool/pool_compat.hpp",
          "tsk/pool/pool_open.cpp||tsk/pool/pool_open.cpp",
          "tsk/pool/pool_read.cpp||tsk/pool/pool_read.cpp",
          "tsk/pool/tsk_apfs.hpp||tsk/pool/tsk_apfs.hpp",
          "tsk/util/lw_shared_ptr.hpp||tsk/util/lw_shared_ptr.hpp",
          "tsk/util/span.hpp||tsk/util/span.hpp",
          "win32/libtsk/libtsk.vcxproj||win32/libtsk/libtsk.vcxproj",
          "win32/libtsk/libtsk.vcxproj.filters||win32/libtsk/libtsk.vcxproj.filters"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tsk/fs/apfs.cpp||tsk/fs/apfs.cpp": [
          "File: tsk/fs/apfs.cpp -> tsk/fs/apfs.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "575:   using key_type = struct {",
          "576:     uint64_t xid_and_type;",
          "579:       return bitfield_value(xid_and_type, 60, 0);",
          "580:     }",
          "583:       return bitfield_value(xid_and_type, 4, 60);",
          "584:     }",
          "585:   };",
          "",
          "[Removed Lines]",
          "578:     constexpr uint64_t snap_xid() const noexcept {",
          "582:     constexpr uint64_t type() const noexcept {",
          "",
          "[Added Lines]",
          "578:     inline uint64_t snap_xid() const noexcept {",
          "582:     inline uint64_t type() const noexcept {",
          "",
          "---------------"
        ],
        "tsk/fs/apfs_compat.cpp||tsk/fs/apfs_compat.cpp": [
          "File: tsk/fs/apfs_compat.cpp -> tsk/fs/apfs_compat.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: #include \"decmpfs.h\"",
          "4: #include \"tsk_fs_i.h\"",
          "7: #include \"apfs_compat.hpp\"",
          "9: #include <cstring>",
          "",
          "[Removed Lines]",
          "1: #include <libtsk.h>",
          "6: #include \"../pool/apfs_compat.hpp\"",
          "",
          "[Added Lines]",
          "1: #include \"../libtsk.h\"",
          "6: #include \"../pool/apfs_pool_compat.hpp\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12: extern \"C\" void error_detected(uint32_t errnum, const char* errstr, ...);",
          "13: extern \"C\" void error_returned(const char* errstr, ...);",
          "16:     const TSK_POOL_INFO* pool_info) noexcept {",
          "17:   const auto pool = static_cast<APFSPoolCompat*>(pool_info->impl);",
          "18:   return *pool;",
          "19: }",
          "22:   const auto fs = static_cast<APFSFSCompat*>(fs_info->impl);",
          "23:   return *fs;",
          "24: }",
          "",
          "[Removed Lines]",
          "15: static constexpr const APFSPoolCompat& to_pool(",
          "21: static constexpr APFSFSCompat& to_fs(const TSK_FS_INFO* fs_info) noexcept {",
          "",
          "[Added Lines]",
          "15: static inline const APFSPoolCompat& to_pool(",
          "21: static inline APFSFSCompat& to_fs(const TSK_FS_INFO* fs_info) noexcept {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "43:   return TSK_FS_ATTR_TYPE_APFS_EXT_ATTR;",
          "44: }",
          "48:   switch (type) {",
          "49:     case APFS_ITEM_TYPE_FIFO:",
          "50:       return TSK_FS_NAME_TYPE_FIFO;",
          "",
          "[Removed Lines]",
          "46: static constexpr TSK_FS_NAME_TYPE_ENUM to_name_type(",
          "47:     APFS_ITEM_TYPE type) noexcept {",
          "",
          "[Added Lines]",
          "46: static TSK_FS_NAME_TYPE_ENUM to_name_type(APFS_ITEM_TYPE type) noexcept {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "67:   }",
          "68: }",
          "72:   switch (type) {",
          "73:     case APFS_ITEM_TYPE_FIFO:",
          "74:       return TSK_FS_META_TYPE_FIFO;",
          "",
          "[Removed Lines]",
          "70: static constexpr TSK_FS_META_TYPE_ENUM to_meta_type(",
          "71:     APFS_ITEM_TYPE type) noexcept {",
          "",
          "[Added Lines]",
          "69: static TSK_FS_META_TYPE_ENUM to_meta_type(APFS_ITEM_TYPE type) noexcept {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "91:   }",
          "92: }",
          "95:   switch (type) {",
          "96:     case TSK_FS_META_TYPE_FIFO:",
          "97:       return \"Named Pipe (FIFO)\";",
          "",
          "[Removed Lines]",
          "94: static constexpr const char* to_string(TSK_FS_META_TYPE_ENUM type) noexcept {",
          "",
          "[Added Lines]",
          "92: static const char* to_string(TSK_FS_META_TYPE_ENUM type) noexcept {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "121:   }",
          "122: }",
          "125:   switch (typeNum) {",
          "126:     case TSK_FS_ATTR_TYPE_DEFAULT:",
          "127:       return \"DFLT\";",
          "",
          "[Removed Lines]",
          "124: static constexpr const char* attr_type_name(uint32_t typeNum) noexcept {",
          "",
          "[Added Lines]",
          "122: static const char* attr_type_name(uint32_t typeNum) noexcept {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "856:       return 1;",
          "857:     }",
          "862:                                       (size_t)decmpfs_attr->size,",
          "863:                                       TSK_FS_FILE_READ_FLAG_NONE);",
          "",
          "[Removed Lines]",
          "859:     char buffer[decmpfs_attr->size];",
          "861:     const auto ret = tsk_fs_attr_read(decmpfs_attr, (TSK_OFF_T)0, buffer,",
          "",
          "[Added Lines]",
          "857:     auto buffer = std::make_unique<char[]>(decmpfs_attr->size);",
          "859:     const auto ret = tsk_fs_attr_read(decmpfs_attr, (TSK_OFF_T)0, buffer.get(),",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "874:       return 1;",
          "875:     }",
          "878:     const auto ct =",
          "879:         tsk_getu32(TSK_LIT_ENDIAN, decmpfs_header->compression_type);",
          "880:     const auto uncompressed_size =",
          "",
          "[Removed Lines]",
          "877:     const auto decmpfs_header = reinterpret_cast<DECMPFS_DISK_HEADER*>(buffer);",
          "",
          "[Added Lines]",
          "875:     const auto decmpfs_header =",
          "876:         reinterpret_cast<DECMPFS_DISK_HEADER*>(buffer.get());",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "886:       case DECMPFS_TYPE_ZLIB_ATTR:",
          "888:                                          uncompressed_size)) {",
          "889:           return 1;",
          "890:         }",
          "891:         break;",
          "893:       case DECMPFS_TYPE_LZVN_ATTR:",
          "895:                                          uncompressed_size)) {",
          "896:           return 1;",
          "897:         }",
          "",
          "[Removed Lines]",
          "887:         if (!decmpfs_file_read_zlib_attr(file, buffer, decmpfs_attr->size,",
          "894:         if (!decmpfs_file_read_lzvn_attr(file, buffer, decmpfs_attr->size,",
          "",
          "[Added Lines]",
          "886:         if (!decmpfs_file_read_zlib_attr(file, buffer.get(), decmpfs_attr->size,",
          "893:         if (!decmpfs_file_read_lzvn_attr(file, buffer.get(), decmpfs_attr->size,",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1337:           .snapshots();",
          "1342:   (*list)->num_snapshots = snapshots.size();",
          "",
          "[Removed Lines]",
          "1340:       sizeof(apfs_snapshot_list) + sizeof(apfs_snapshot[snapshots.size()]));",
          "",
          "[Added Lines]",
          "1339:       sizeof(apfs_snapshot_list) + sizeof(apfs_snapshot) * snapshots.size());",
          "",
          "---------------"
        ],
        "tsk/fs/apfs_fs.hpp||tsk/fs/apfs_fs.hpp": [
          "File: tsk/fs/apfs_fs.hpp -> tsk/fs/apfs_fs.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:   using key_type = struct {",
          "48:     uint64_t oid_and_type;",
          "51:       return bitfield_value(oid_and_type, 60, 0);",
          "52:     }",
          "55:       return bitfield_value(oid_and_type, 4, 60);",
          "56:     }",
          "57:   };",
          "",
          "[Removed Lines]",
          "50:     constexpr uint64_t oid() const noexcept {",
          "54:     constexpr uint64_t type() const noexcept {",
          "",
          "[Added Lines]",
          "50:     inline uint64_t oid() const noexcept {",
          "54:     inline uint64_t type() const noexcept {",
          "",
          "---------------"
        ],
        "tsk/fs/apfs_open.cpp||tsk/fs/apfs_open.cpp": [
          "File: tsk/fs/apfs_open.cpp -> tsk/fs/apfs_open.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: #include \"apfs_compat.hpp\"",
          "4: #include \"tsk_fs_i.h\"",
          "7:   tsk_error_reset();",
          "9:   if (pool_info == nullptr) {",
          "",
          "[Removed Lines]",
          "1: #include <libtsk.h>",
          "6: TSK_FS_INFO* apfs_open(const TSK_POOL_INFO* pool_info, apfs_block_num vol_block, TSK_FS_TYPE_ENUM fstype, const char* pass) {",
          "",
          "[Added Lines]",
          "1: #include \"../libtsk.h\"",
          "6: TSK_FS_INFO* apfs_open(const TSK_POOL_INFO* pool_info, apfs_block_num vol_block,",
          "7:                        TSK_FS_TYPE_ENUM fstype, const char* pass) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "13:     return nullptr;",
          "14:   }",
          "17:     tsk_error_reset();",
          "18:     tsk_error_set_errno(TSK_ERR_FS_ARG);",
          "19:     tsk_error_set_errstr(\"tsk_apfs_open: invalid fstype\");",
          "",
          "[Removed Lines]",
          "16: if (fstype != TSK_FS_TYPE_APFS) {",
          "",
          "[Added Lines]",
          "17:   if (fstype != TSK_FS_TYPE_APFS) {",
          "",
          "---------------"
        ],
        "tsk/fs/tsk_apfs.h||tsk/fs/tsk_apfs.h": [
          "File: tsk/fs/tsk_apfs.h -> tsk/fs/tsk_apfs.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "474:   uint16_t type;       // 0x10",
          "475:   uint16_t length;     // 0x12",
          "476:   uint32_t padding14;  // 0x14",
          "478: } apfs_keybag_key;",
          "479: static_assert(sizeof(apfs_keybag_key) == 0x18, \"improperly aligned struct\");",
          "",
          "[Removed Lines]",
          "477:   uint8_t data[0];",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tsk/fs/tsk_apfs.hpp||tsk/fs/tsk_apfs.hpp": [
          "File: tsk/fs/tsk_apfs.hpp -> tsk/fs/tsk_apfs.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "176:  public:",
          "180:   APFSBtreeNodeIterator(const Node *node, uint32_t index);",
          "",
          "[Removed Lines]",
          "178:   constexpr APFSBtreeNodeIterator() noexcept = default;",
          "",
          "[Added Lines]",
          "178:   APFSBtreeNodeIterator() noexcept = default;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "187:   virtual ~APFSBtreeNodeIterator() = default;",
          "190:       : _node{rhs._node}, _index{rhs._index} {",
          "191:     if (_node->is_leaf()) {",
          "192:       _val = rhs._val;",
          "",
          "[Removed Lines]",
          "189:   constexpr APFSBtreeNodeIterator(const APFSBtreeNodeIterator &rhs) noexcept",
          "",
          "[Added Lines]",
          "189:   APFSBtreeNodeIterator(const APFSBtreeNodeIterator &rhs) noexcept",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "195:     }",
          "196:   }",
          "200:     if (this != &rhs) {",
          "201:       this->~APFSBtreeNodeIterator();",
          "202:       new (this) APFSBtreeNodeIterator(rhs);",
          "",
          "[Removed Lines]",
          "198:   constexpr APFSBtreeNodeIterator &operator=(",
          "199:       const APFSBtreeNodeIterator &rhs) noexcept {",
          "",
          "[Added Lines]",
          "198:   APFSBtreeNodeIterator &operator=(const APFSBtreeNodeIterator &rhs) noexcept {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "205:     return (*this);",
          "206:   };",
          "209:       : _node{std::move(rhs._node)}, _index{std::move(rhs._index)} {",
          "210:     if (_node->is_leaf()) {",
          "211:       _val = std::move(rhs._val);",
          "",
          "[Removed Lines]",
          "208:   constexpr APFSBtreeNodeIterator(APFSBtreeNodeIterator &&rhs) noexcept",
          "",
          "[Added Lines]",
          "207:   APFSBtreeNodeIterator(APFSBtreeNodeIterator &&rhs) noexcept",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "214:     }",
          "215:   };",
          "219:     if (this != &rhs) {",
          "220:       this->~APFSBtreeNodeIterator();",
          "221:       new (this)",
          "",
          "[Removed Lines]",
          "217:   constexpr APFSBtreeNodeIterator &operator=(",
          "218:       APFSBtreeNodeIterator &&rhs) noexcept {",
          "",
          "[Added Lines]",
          "216:   APFSBtreeNodeIterator &operator=(APFSBtreeNodeIterator &&rhs) noexcept {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "225:     return (*this);",
          "226:   }",
          "229:     if (_node == nullptr) {",
          "230:       return false;",
          "231:     }",
          "",
          "[Removed Lines]",
          "228:   constexpr bool is_valid() const noexcept {",
          "",
          "[Added Lines]",
          "226:   bool is_valid() const noexcept {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "233:     return (_index < _node->key_count());",
          "234:   }",
          "237:     if (_index >= _node->key_count()) {",
          "238:       return _val;",
          "239:     }",
          "",
          "[Removed Lines]",
          "236:   constexpr reference operator*() const noexcept {",
          "",
          "[Added Lines]",
          "234:   reference operator*() const noexcept {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "247:     return _child_it->operator*();",
          "248:   }",
          "251:     if (_index >= _node->key_count()) {",
          "252:       return nullptr;",
          "253:     }",
          "",
          "[Removed Lines]",
          "250:   constexpr pointer operator->() const noexcept {",
          "",
          "[Added Lines]",
          "248:   pointer operator->() const noexcept {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "293:     return (*this);",
          "294:   }",
          "297:     APFSBtreeNodeIterator it{(*this)};",
          "299:     this->operator++();",
          "",
          "[Removed Lines]",
          "296:   constexpr APFSBtreeNodeIterator operator++(int) {",
          "",
          "[Added Lines]",
          "294:   APFSBtreeNodeIterator operator++(int) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "301:     return it;",
          "302:   }",
          "306:     if (this == &rhs) {",
          "307:       return true;",
          "",
          "[Removed Lines]",
          "304:   constexpr bool operator==(const APFSBtreeNodeIterator &rhs) const noexcept {",
          "",
          "[Added Lines]",
          "302:   bool operator==(const APFSBtreeNodeIterator &rhs) const noexcept {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "327:     return (*_child_it == *rhs._child_it);",
          "328:   }",
          "331:     return !this->operator==(rhs);",
          "332:   }",
          "",
          "[Removed Lines]",
          "330:   constexpr bool operator!=(const APFSBtreeNodeIterator &rhs) const noexcept {",
          "",
          "[Added Lines]",
          "328:   bool operator!=(const APFSBtreeNodeIterator &rhs) const noexcept {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "434:       throw std::runtime_error(\"APFSBtreeNode: invalid object type\");",
          "435:     }",
          "442:   }",
          "444:   inline bool is_root() const noexcept {",
          "",
          "[Removed Lines]",
          "437:     _table_data = {",
          "438:         .toc = {_storage.data() + toffset()},",
          "439:         .voff = _storage.data() + voffset(),",
          "440:         .koff = _storage.data() + koffset(),",
          "441:     };",
          "",
          "[Added Lines]",
          "435:     _table_data.toc = {_storage.data() + toffset()};",
          "436:     _table_data.voff = _storage.data() + voffset();",
          "437:     _table_data.koff = _storage.data() + koffset();",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "474:  public:",
          "475:   using iterator = APFSBtreeNodeIterator<APFSBtreeNode>;",
          "480:   template <typename T, typename Compare>",
          "",
          "[Removed Lines]",
          "477:   constexpr iterator begin() const { return {this, 0}; }",
          "478:   constexpr iterator end() const { return {this, key_count()}; }",
          "481:   constexpr iterator find(const T &value, Compare comp) const {",
          "",
          "[Added Lines]",
          "473:   iterator begin() const { return {this, 0}; }",
          "474:   iterator end() const { return {this, key_count()}; }",
          "477:   iterator find(const T &value, Compare comp) const {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "755:   const APFSSpacemanCIB::bm_entry _entry;",
          "756:   uint32_t _hint{};",
          "",
          "[Removed Lines]",
          "750:   constexpr static auto no_bits_left = std::numeric_limits<uint32_t>::max();",
          "753:   constexpr static auto cached_bits = sizeof(uintptr_t) * 8;",
          "",
          "[Added Lines]",
          "746:   static constexpr auto no_bits_left = std::numeric_limits<uint32_t>::max();",
          "749:   static constexpr auto cached_bits = sizeof(uintptr_t) * 8;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "925:     uint8_t salt[0x10];",
          "926:     wrapped_kek(Guid &&uuid, const std::unique_ptr<uint8_t[]> &);",
          "930:       return bit_is_set(flags, 57);",
          "931:     }",
          "935:       return bit_is_set(flags, 58);",
          "936:     }",
          "",
          "[Removed Lines]",
          "928:     constexpr bool hw_crypt() const noexcept {",
          "933:     constexpr bool cs() const noexcept {",
          "",
          "[Added Lines]",
          "924:     inline bool hw_crypt() const noexcept {",
          "929:     inline bool cs() const noexcept {",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "947:     uint8_t vek[0x20]{};",
          "948:     bool unlocked{};",
          "952:       return bitfield_value(vek_flags, 8, 16);",
          "953:     }",
          "957:       return bit_is_set(vek_flags, 56);",
          "958:     }",
          "962:       return bit_is_set(vek_flags, 57);",
          "963:     }",
          "",
          "[Removed Lines]",
          "950:     constexpr uint64_t unk16() const noexcept {",
          "955:     constexpr bool hw_crypt() const noexcept {",
          "960:     constexpr bool cs() const noexcept {",
          "",
          "[Added Lines]",
          "946:     inline uint64_t unk16() const noexcept {",
          "951:     inline bool hw_crypt() const noexcept {",
          "956:     inline bool cs() const noexcept {",
          "",
          "---------------"
        ],
        "tsk/pool/Makefile.am||tsk/pool/Makefile.am": [
          "File: tsk/pool/Makefile.am -> tsk/pool/Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: noinst_LTLIBRARIES = libtskpool.la",
          "6: libtskpool_la_SOURCES = pool_open.cpp pool_read.cpp pool_types.cpp \\",
          "9: indent:",
          "10:  indent *.c *.cpp *.h *.hpp",
          "",
          "[Removed Lines]",
          "7:  apfs_compat.cpp apfs_pool.cpp",
          "",
          "[Added Lines]",
          "7:  apfs_pool_compat.cpp apfs_pool.cpp",
          "",
          "---------------"
        ],
        "tsk/pool/apfs_pool.cpp||tsk/pool/apfs_pool.cpp": [
          "File: tsk/pool/apfs_pool.cpp -> tsk/pool/apfs_pool.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #include \"tsk_apfs.hpp\"",
          "5: #include \"../fs/tsk_apfs.hpp\"",
          "6: #include \"../fs/tsk_fs_i.h\"",
          "",
          "[Removed Lines]",
          "3: #include <libtsk.h>",
          "",
          "[Added Lines]",
          "3: #include \"../libtsk.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "52:   }",
          "54:   _vol_blocks = nxsb->volume_blocks();",
          "56:   _hw_crypto = !bit_is_set(nxsb->sb()->flags, APFS_NXSB_FLAGS_CRYPTO_SW);",
          "57: }",
          "",
          "[Removed Lines]",
          "55:   _num_vols = _vol_blocks.size();",
          "",
          "[Added Lines]",
          "55:   _num_vols = static_cast<int>(_vol_blocks.size());",
          "",
          "---------------"
        ],
        "tsk/pool/apfs_compat.cpp||tsk/pool/apfs_pool_compat.cpp": [
          "File: tsk/pool/apfs_compat.cpp -> tsk/pool/apfs_pool_compat.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: #include \"../fs/apfs_fs.hpp\"",
          "4: #include \"../fs/tsk_apfs.hpp\"",
          "",
          "[Removed Lines]",
          "1: #include \"apfs_compat.hpp\"",
          "",
          "[Added Lines]",
          "1: #include \"apfs_pool_compat.hpp\"",
          "",
          "---------------"
        ],
        "tsk/pool/pool_compat.hpp||tsk/pool/pool_compat.hpp": [
          "File: tsk/pool/pool_compat.hpp -> tsk/pool/pool_compat.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:           typename = std::enable_if_t<std::is_base_of<TSKPool, T>::value>>",
          "10: class TSKPoolCompat : public T {",
          "11:  protected:",
          "32:   TSKPoolCompat(const TSKPoolCompat &) = delete;",
          "",
          "[Removed Lines]",
          "12:   TSK_POOL_INFO _info{",
          "14:       .tag = TSK_POOL_INFO_TAG,",
          "15:       .ctype = TSK_POOL_TYPE_UNSUPP,",
          "16:       .block_size = this->block_size(),",
          "17:       .num_blocks = this->num_blocks(),",
          "18:       .num_vols = this->num_vols(),",
          "19:       .vol_list = nullptr,",
          "20:       .close =",
          "21:           [](const TSK_POOL_INFO *pool) {",
          "22:             delete static_cast<TSKPoolCompat *>(pool->impl);",
          "23:           },",
          "24:       .poolstat =",
          "25:           [](const TSK_POOL_INFO *pool, FILE *hFile) {",
          "26:             return static_cast<TSKPoolCompat *>(pool->impl)->poolstat(hFile);",
          "27:           },",
          "28:       .impl = this,",
          "29:   };",
          "",
          "[Added Lines]",
          "12:   TSK_POOL_INFO _info{};",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:   TSKPoolCompat(TSK_POOL_TYPE_ENUM type, Args &&... args) noexcept(",
          "42:       std::is_nothrow_constructible<T, Args...>::value)",
          "43:       : T(std::forward<Args>(args)...) {",
          "44:     _info.ctype = type;",
          "45:   }",
          "49:   virtual ~TSKPoolCompat() {",
          "50:     if (_info.vol_list != nullptr) {",
          "",
          "[Removed Lines]",
          "47:   constexpr const TSK_POOL_INFO &pool_info() const noexcept { return _info; }",
          "",
          "[Added Lines]",
          "28:     _info.tag = TSK_POOL_INFO_TAG;",
          "30:     _info.block_size = this->block_size();",
          "31:     _info.num_blocks = this->num_blocks();",
          "32:     _info.num_vols = this->num_vols();",
          "33:     _info.vol_list = nullptr;",
          "34:     _info.close = [](const TSK_POOL_INFO *pool) {",
          "35:       delete static_cast<TSKPoolCompat *>(pool->impl);",
          "36:     };",
          "37:     _info.poolstat = [](const TSK_POOL_INFO *pool, FILE *hFile) {",
          "38:       return static_cast<TSKPoolCompat *>(pool->impl)->poolstat(hFile);",
          "39:     };",
          "40:     _info.impl = this;",
          "43:   inline const TSK_POOL_INFO &pool_info() const noexcept { return _info; }",
          "",
          "---------------"
        ],
        "tsk/pool/pool_open.cpp||tsk/pool/pool_open.cpp": [
          "File: tsk/pool/pool_open.cpp -> tsk/pool/pool_open.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #include \"../fs/tsk_apfs.hpp\"",
          "4: #include \"pool_compat.hpp\"",
          "6: #include \"../img/tsk_img.h\"",
          "",
          "[Removed Lines]",
          "3: #include \"apfs_compat.hpp\"",
          "",
          "[Added Lines]",
          "3: #include \"apfs_pool_compat.hpp\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:     return nullptr;",
          "45:   }",
          "50:   for (auto i = 0; i < num_vols; i++) {",
          "51:     const auto &part = parts[i];",
          "",
          "[Removed Lines]",
          "47:   TSK_IMG_INFO *imgs[num_vols];",
          "48:   TSK_OFF_T offsets[num_vols];",
          "",
          "[Added Lines]",
          "47:   auto imgs = std::make_unique<TSK_IMG_INFO *[]>(num_vols);",
          "48:   auto offsets = std::make_unique<TSK_OFF_T[]>(num_vols);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "62:     offsets[i] = offset;",
          "63:   }",
          "66: }",
          "68: const TSK_POOL_INFO *tsk_pool_open_img_sing(TSK_IMG_INFO *img, TSK_OFF_T offset,",
          "",
          "[Removed Lines]",
          "65:   return tsk_pool_open_img(num_vols, imgs, offsets, type);",
          "",
          "[Added Lines]",
          "65:   return tsk_pool_open_img(num_vols, imgs.get(), offsets.get(), type);",
          "",
          "---------------"
        ],
        "tsk/pool/pool_read.cpp||tsk/pool/pool_read.cpp": [
          "File: tsk/pool/pool_read.cpp -> tsk/pool/pool_read.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: #include \"pool_compat.hpp\"",
          "4: #include \"tsk_pool.hpp\"",
          "",
          "[Removed Lines]",
          "1: #include <libtsk.h>",
          "",
          "[Added Lines]",
          "1: #include \"../libtsk.h\"",
          "",
          "---------------"
        ],
        "tsk/pool/tsk_apfs.hpp||tsk/pool/tsk_apfs.hpp": [
          "File: tsk/pool/tsk_apfs.hpp -> tsk/pool/tsk_apfs.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: #include \"tsk_pool.hpp\"",
          "7: #include <array>",
          "8: #include <unordered_map>",
          "10: #include \"../fs/tsk_apfs.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: #include <memory>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:   void dump() const noexcept;",
          "46:     if (this == &rhs) {",
          "47:       return true;",
          "48:     }",
          "",
          "[Removed Lines]",
          "45:   constexpr bool operator==(const APFSBlock &rhs) const noexcept {",
          "",
          "[Added Lines]",
          "46:   inline bool operator==(const APFSBlock &rhs) const noexcept {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "50:     return (&_pool == &rhs._pool && _block_num == rhs._block_num);",
          "51:   }",
          "54:     return !this->operator==(rhs);",
          "55:   }",
          "59: };",
          "61: class APFSPool : public TSKPool {",
          "",
          "[Removed Lines]",
          "53:   constexpr bool operator!=(const APFSBlock &rhs) const noexcept {",
          "57:   constexpr apfs_block_num block_num() const noexcept { return _block_num; }",
          "58:   constexpr const APFSPool &pool() const noexcept { return _pool; }",
          "",
          "[Added Lines]",
          "54:   inline bool operator!=(const APFSBlock &rhs) const noexcept {",
          "58:   inline apfs_block_num block_num() const noexcept { return _block_num; }",
          "59:   inline const APFSPool &pool() const noexcept { return _pool; }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "85:            apfs_block_num nx_block_num = APFS_POOL_NX_BLOCK_LAST_KNOWN_GOOD);",
          "92:   APFSPool(const APFSPool &) = delete;",
          "",
          "[Removed Lines]",
          "88:   APFSPool(APFSPool &&) noexcept = default;",
          "89:   APFSPool &operator=(APFSPool &&) noexcept = default;",
          "",
          "[Added Lines]",
          "89:   APFSPool(APFSPool &&) = default;",
          "90:   APFSPool &operator=(APFSPool &&) = default;",
          "",
          "---------------"
        ],
        "tsk/util/lw_shared_ptr.hpp||tsk/util/lw_shared_ptr.hpp": [
          "File: tsk/util/lw_shared_ptr.hpp -> tsk/util/lw_shared_ptr.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: class lw_shared_ptr {",
          "18:  public:",
          "30:       : _val{rhs._val}, _count{rhs._count} {",
          "31:     if (_count != nullptr) {",
          "32:       (*_count)++;",
          "",
          "[Removed Lines]",
          "20:   constexpr lw_shared_ptr() noexcept = default;",
          "23:   constexpr lw_shared_ptr(std::nullptr_t) noexcept : lw_shared_ptr() {}",
          "29:   constexpr lw_shared_ptr(const lw_shared_ptr& rhs) noexcept",
          "",
          "[Added Lines]",
          "20:   lw_shared_ptr() noexcept = default;",
          "23:   lw_shared_ptr(std::nullptr_t) noexcept : lw_shared_ptr() {}",
          "29:   lw_shared_ptr(const lw_shared_ptr& rhs) noexcept",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:   template <typename U>",
          "42:       : _val{val}, _count{rhs._count} {",
          "43:     if (_count != nullptr) {",
          "44:       (*_count)++;",
          "",
          "[Removed Lines]",
          "41:   constexpr lw_shared_ptr(const lw_shared_ptr<U>& rhs, T* val) noexcept",
          "",
          "[Added Lines]",
          "41:   lw_shared_ptr(const lw_shared_ptr<U>& rhs, T* val) noexcept",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "53:       : _val{rhs._val}, _count{rhs._count} {",
          "54:     if (this == &rhs) {",
          "55:       return;",
          "",
          "[Removed Lines]",
          "52:   constexpr lw_shared_ptr(lw_shared_ptr&& rhs) noexcept",
          "",
          "[Added Lines]",
          "52:   lw_shared_ptr(lw_shared_ptr&& rhs) noexcept",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "66:   template <typename U,",
          "67:             typename = std::enable_if_t<std::is_convertible<U*, T*>::value>>",
          "69:       : _val{rhs._val}, _count{rhs._count} {",
          "70:     if ((lw_shared_ptr<U>*)this == &rhs) {",
          "71:       return;",
          "",
          "[Removed Lines]",
          "68:   constexpr lw_shared_ptr(lw_shared_ptr<U>&& rhs) noexcept",
          "",
          "[Added Lines]",
          "68:   lw_shared_ptr(lw_shared_ptr<U>&& rhs) noexcept",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "79:   template <typename... Args>",
          "",
          "[Removed Lines]",
          "80:   constexpr lw_shared_ptr(in_place_t, Args&&... args) {",
          "",
          "[Added Lines]",
          "80:   lw_shared_ptr(in_place_t, Args&&... args) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "95:   }",
          "",
          "[Removed Lines]",
          "98:   constexpr lw_shared_ptr(T&& rhs) {",
          "",
          "[Added Lines]",
          "98:   lw_shared_ptr(T&& rhs) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "144:     if ((*this) != rhs) {",
          "145:       this->~lw_shared_ptr();",
          "146:       new (this) lw_shared_ptr(rhs);",
          "",
          "[Removed Lines]",
          "143:   constexpr lw_shared_ptr& operator=(const lw_shared_ptr& rhs) noexcept {",
          "",
          "[Added Lines]",
          "143:   lw_shared_ptr& operator=(const lw_shared_ptr& rhs) noexcept {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "158:   template <typename U,",
          "159:             typename = std::enable_if_t<std::is_convertible<U*, T*>::value>>",
          "161:     if ((*this) != rhs) {",
          "162:       this->~lw_shared_ptr();",
          "163:       new (this) lw_shared_ptr(rhs);",
          "",
          "[Removed Lines]",
          "160:   constexpr lw_shared_ptr& operator=(const lw_shared_ptr<U>& rhs) noexcept {",
          "",
          "[Added Lines]",
          "160:   lw_shared_ptr& operator=(const lw_shared_ptr<U>& rhs) noexcept {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "179:     if ((*this) != rhs) {",
          "180:       this->~lw_shared_ptr();",
          "181:       new (this) lw_shared_ptr(std::forward<lw_shared_ptr>(rhs));",
          "",
          "[Removed Lines]",
          "178:   constexpr lw_shared_ptr& operator=(lw_shared_ptr&& rhs) noexcept {",
          "",
          "[Added Lines]",
          "178:   lw_shared_ptr& operator=(lw_shared_ptr&& rhs) noexcept {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "196:   template <typename U,",
          "197:             typename = std::enable_if_t<std::is_convertible<U*, T*>::value>>",
          "199:     if ((*this) != rhs) {",
          "200:       this->~lw_shared_ptr();",
          "201:       new (this) lw_shared_ptr(std::forward<lw_shared_ptr<U>>(rhs));",
          "",
          "[Removed Lines]",
          "198:   constexpr lw_shared_ptr& operator=(lw_shared_ptr<U>&& rhs) noexcept {",
          "",
          "[Added Lines]",
          "198:   lw_shared_ptr& operator=(lw_shared_ptr<U>&& rhs) noexcept {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "205:   };",
          "224:   template <typename U>",
          "226:     return _val == rhs._val;",
          "227:   }",
          "",
          "[Removed Lines]",
          "208:   constexpr explicit operator bool() const noexcept { return _val != nullptr; }",
          "211:   constexpr bool operator==(std::nullptr_t) const noexcept {",
          "212:     return _val == nullptr;",
          "213:   }",
          "216:   constexpr bool operator!=(std::nullptr_t) const noexcept {",
          "217:     return _val != nullptr;",
          "218:   }",
          "225:   constexpr bool operator==(const lw_shared_ptr<U>& rhs) const noexcept {",
          "",
          "[Added Lines]",
          "208:   explicit operator bool() const noexcept { return _val != nullptr; }",
          "211:   bool operator==(std::nullptr_t) const noexcept { return _val == nullptr; }",
          "214:   bool operator!=(std::nullptr_t) const noexcept { return _val != nullptr; }",
          "221:   bool operator==(const lw_shared_ptr<U>& rhs) const noexcept {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "233:   template <typename U>",
          "235:     return _val != rhs._val;",
          "236:   }",
          "",
          "[Removed Lines]",
          "234:   constexpr bool operator!=(const lw_shared_ptr<U>& rhs) const noexcept {",
          "",
          "[Added Lines]",
          "230:   bool operator!=(const lw_shared_ptr<U>& rhs) const noexcept {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "242:   template <typename U>",
          "244:     return _val < rhs._val;",
          "245:   }",
          "",
          "[Removed Lines]",
          "243:   constexpr bool operator<(const lw_shared_ptr<U>& rhs) const noexcept {",
          "",
          "[Added Lines]",
          "239:   bool operator<(const lw_shared_ptr<U>& rhs) const noexcept {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "251:   template <typename U>",
          "253:     return _val <= rhs._val;",
          "254:   }",
          "",
          "[Removed Lines]",
          "252:   constexpr bool operator<=(const lw_shared_ptr<U>& rhs) const noexcept {",
          "",
          "[Added Lines]",
          "248:   bool operator<=(const lw_shared_ptr<U>& rhs) const noexcept {",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "260:   template <typename U>",
          "262:     return _val > rhs._val;",
          "263:   }",
          "",
          "[Removed Lines]",
          "261:   constexpr bool operator>(const lw_shared_ptr<U>& rhs) const noexcept {",
          "",
          "[Added Lines]",
          "257:   bool operator>(const lw_shared_ptr<U>& rhs) const noexcept {",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "269:   template <typename U>",
          "271:     return _val >= rhs._val;",
          "272:   }",
          "281:   template <typename... Args>",
          "283:       std::is_nothrow_constructible<T, Args...>::value) {",
          "284:     (*this) = T(std::forward<Args>(args)...);",
          "285:   }",
          "289:     using std::swap;",
          "290:     swap(_val, rhs._val);",
          "291:     swap(_count, rhs._count);",
          "292:   }",
          "313:     if (_val != nullptr) {",
          "314:       return *_count + 1;",
          "315:     }",
          "",
          "[Removed Lines]",
          "270:   constexpr bool operator>=(const lw_shared_ptr<U>& rhs) const noexcept {",
          "277:   constexpr void reset() noexcept { (*this) = {}; }",
          "282:   constexpr void reset(Args&&... args) noexcept(",
          "288:   constexpr void swap(lw_shared_ptr& rhs) noexcept {",
          "295:   constexpr T& operator*() const noexcept { return *_val; }",
          "298:   constexpr T* operator->() const { return _val; }",
          "301:   constexpr T* get() const {",
          "302:     if (_val == nullptr) {",
          "303:       return nullptr;",
          "304:     }",
          "306:     return _val;",
          "307:   }",
          "312:   constexpr unsigned use_count() const noexcept {",
          "",
          "[Added Lines]",
          "266:   bool operator>=(const lw_shared_ptr<U>& rhs) const noexcept {",
          "273:   void reset() noexcept { (*this) = {}; }",
          "278:   void reset(Args&&... args) noexcept(",
          "284:   void swap(lw_shared_ptr& rhs) noexcept {",
          "291:   T& operator*() const noexcept { return *_val; }",
          "294:   T* operator->() const { return _val; }",
          "297:   T* get() const { return _val; }",
          "302:   unsigned use_count() const noexcept {",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "331: template <typename T>",
          "333:   lhs.swap(rhs);",
          "334: }",
          "338: template <typename T, typename... Args>",
          "340:     std::is_nothrow_constructible<T, Args...>::value) {",
          "341:   return {in_place, std::forward<Args>(args)...};",
          "342: }",
          "344: template <typename T, typename U>",
          "346:   return lw_shared_ptr<T>{r, static_cast<T*>(r.get())};",
          "347: }",
          "349: template <typename T, typename U>",
          "351:   return lw_shared_ptr<T>{r, dynamic_cast<T*>(r.get())};",
          "352: }",
          "354: template <typename T, typename U>",
          "356:   return lw_shared_ptr<T>{r, const_cast<T*>(r.get())};",
          "357: }",
          "359: template <typename T, typename U>",
          "362:   return lw_shared_ptr<T>{r, reinterpret_cast<T*>(r.get())};",
          "363: }",
          "",
          "[Removed Lines]",
          "332: constexpr void swap(lw_shared_ptr<T>& lhs, lw_shared_ptr<T>& rhs) noexcept {",
          "339: constexpr lw_shared_ptr<T> make_lw_shared(Args&&... args) noexcept(",
          "345: constexpr lw_shared_ptr<T> lw_static_pointer_cast(const lw_shared_ptr<U>& r) {",
          "350: constexpr lw_shared_ptr<T> lw_dynamic_pointer_cast(const lw_shared_ptr<U>& r) {",
          "355: constexpr lw_shared_ptr<T> lw_const_pointer_cast(const lw_shared_ptr<U>& r) {",
          "360: constexpr lw_shared_ptr<T> lw_reinterpret_pointer_cast(",
          "361:     const lw_shared_ptr<U>& r) {",
          "",
          "[Added Lines]",
          "322: void swap(lw_shared_ptr<T>& lhs, lw_shared_ptr<T>& rhs) noexcept {",
          "329: lw_shared_ptr<T> make_lw_shared(Args&&... args) noexcept(",
          "335: lw_shared_ptr<T> lw_static_pointer_cast(const lw_shared_ptr<U>& r) {",
          "340: lw_shared_ptr<T> lw_dynamic_pointer_cast(const lw_shared_ptr<U>& r) {",
          "345: lw_shared_ptr<T> lw_const_pointer_cast(const lw_shared_ptr<U>& r) {",
          "350: lw_shared_ptr<T> lw_reinterpret_pointer_cast(const lw_shared_ptr<U>& r) {",
          "",
          "---------------"
        ],
        "tsk/util/span.hpp||tsk/util/span.hpp": [
          "File: tsk/util/span.hpp -> tsk/util/span.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:   index_type _count{};",
          "24:  public:",
          "30:   template <size_t N>",
          "34:       : span(first, std::distance(first, last)) {}",
          "46: };",
          "48: struct memory_view : public span<char> {",
          "49:   using span::span;",
          "51:   template <typename T>",
          "",
          "[Removed Lines]",
          "25:   constexpr span() noexcept = default;",
          "26:   constexpr span(std::nullptr_t) noexcept : span() {}",
          "28:   constexpr span(pointer p, index_type n) noexcept : _storage{p}, _count{n} {}",
          "31:   constexpr span(element_type (&arr)[N]) noexcept : span(arr, N) {}",
          "33:   constexpr span(pointer first, pointer last) noexcept",
          "36:   constexpr span(const span&) noexcept = default;",
          "37:   constexpr span& operator=(const span&) noexcept = default;",
          "39:   constexpr span(span&&) noexcept = default;",
          "40:   constexpr span& operator=(span&&) noexcept = default;",
          "42:   constexpr index_type count() const noexcept { return _count; }",
          "44:   constexpr bool valid() const noexcept { return _storage != nullptr; }",
          "45:   constexpr pointer data() const noexcept { return _storage; }",
          "52:   constexpr T* as() const {",
          "",
          "[Added Lines]",
          "25:   span() noexcept = default;",
          "26:   span(std::nullptr_t) noexcept : span() {}",
          "28:   span(pointer p, index_type n) noexcept : _storage{p}, _count{n} {}",
          "31:   span(element_type (&arr)[N]) noexcept : span(arr, N) {}",
          "33:   span(pointer first, pointer last) noexcept",
          "36:   index_type count() const noexcept { return _count; }",
          "38:   bool valid() const noexcept { return _storage != nullptr; }",
          "39:   pointer data() const noexcept { return _storage; }",
          "46:   T* as() const {",
          "",
          "---------------"
        ],
        "win32/libtsk/libtsk.vcxproj||win32/libtsk/libtsk.vcxproj": [
          "File: win32/libtsk/libtsk.vcxproj -> win32/libtsk/libtsk.vcxproj",
          "--- Hunk 1 ---",
          "[Context before]",
          "193:     <ClCompile>",
          "194:       <Optimization>Disabled</Optimization>",
          "195:       <AdditionalIncludeDirectories>$(ProjectDir)\\..\\..\\;$(LIBVMDK_HOME)\\include;$(LIBVHDI_HOME)\\include;$(LIBEWF_HOME)\\include;$(LIBEWF_HOME)\\..\\zlib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "197:       <MinimalRebuild>true</MinimalRebuild>",
          "198:       <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>",
          "199:       <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>",
          "",
          "[Removed Lines]",
          "196:       <PreprocessorDefinitions>_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;HAVE_LIBEWF;HAVE_LIBVMDK;HAVE_LIBVHDI;HAVE_LIBZ;WIN32;_DEBUG;_LIB;_ITERATOR_DEBUG_LEVEL=2;WINVER=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "[Added Lines]",
          "196:       <PreprocessorDefinitions>NOMINMAX;_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;HAVE_LIBEWF;HAVE_LIBVMDK;HAVE_LIBVHDI;HAVE_LIBZ;WIN32;_DEBUG;_LIB;_ITERATOR_DEBUG_LEVEL=2;WINVER=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "202:       <WarningLevel>Level3</WarningLevel>",
          "203:       <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>",
          "204:       <CompileAs>Default</CompileAs>",
          "205:     </ClCompile>",
          "206:     <PostBuildEvent>",
          "207:       <Command>copy \"$(LIBEWF_HOME)\\msvscpp\\release\\libewf.dll\" \"$(OutDir)\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "205:       <DisableSpecificWarnings>4200;4814;5030</DisableSpecificWarnings>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "214:     <ClCompile>",
          "215:       <Optimization>Disabled</Optimization>",
          "216:       <AdditionalIncludeDirectories>$(ProjectDir)\\..\\..\\;$(LIBVMDK_HOME)\\include;$(LIBVHDI_HOME)\\include;$(LIBEWF_HOME)\\include;$(LIBEWF_HOME)\\..\\zlib;$(POSTGRESQL_HOME_32)\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "218:       <MinimalRebuild>true</MinimalRebuild>",
          "219:       <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>",
          "220:       <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>",
          "",
          "[Removed Lines]",
          "217:       <PreprocessorDefinitions>_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;HAVE_LIBVMDK;HAVE_LIBEWF;HAVE_LIBZ;HAVE_LIBVHDI;WIN32;_DEBUG;HAVE_LIBPQ_;_LIB;WINVER=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "[Added Lines]",
          "218:       <PreprocessorDefinitions>NOMINMAX;_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;HAVE_LIBVMDK;HAVE_LIBEWF;HAVE_LIBZ;HAVE_LIBVHDI;WIN32;_DEBUG;HAVE_LIBPQ_;_LIB;WINVER=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "223:       <WarningLevel>Level3</WarningLevel>",
          "224:       <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>",
          "225:       <CompileAs>Default</CompileAs>",
          "226:     </ClCompile>",
          "227:     <PostBuildEvent>",
          "228:       <Command>copy \"$(LIBVMDK_HOME)\\msvscpp\\release\\libvmdk.dll\" \"$(OutDir)\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "227:       <DisableSpecificWarnings>4200;4814;5030</DisableSpecificWarnings>",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "248:     <ClCompile>",
          "249:       <Optimization>Disabled</Optimization>",
          "250:       <AdditionalIncludeDirectories>$(ProjectDir)\\..\\..\\;$(LIBVMDK_HOME)\\include;$(LIBVHDI_HOME)\\include;$(LIBEWF_HOME)\\include;$(LIBEWF_HOME)\\..\\zlib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "252:       <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>",
          "253:       <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>",
          "254:       <PrecompiledHeader>",
          "255:       </PrecompiledHeader>",
          "256:       <WarningLevel>Level3</WarningLevel>",
          "257:       <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>",
          "258:     </ClCompile>",
          "259:     <PostBuildEvent>",
          "260:       <Command>copy \"$(LIBEWF_HOME)\\msvscpp\\x64\\release\\libewf.dll\" \"$(OutDir)\"",
          "",
          "[Removed Lines]",
          "251:       <PreprocessorDefinitions>_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;HAVE_LIBEWF;HAVE_LIBVMDK;HAVE_LIBVHDI;HAVE_LIBZ;WIN32;_DEBUG;_LIB;WINVER=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "[Added Lines]",
          "253:       <PreprocessorDefinitions>NOMINMAX;_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;HAVE_LIBEWF;HAVE_LIBVMDK;HAVE_LIBVHDI;HAVE_LIBZ;WIN32;_DEBUG;_LIB;WINVER=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "260:       <DisableSpecificWarnings>4200;4814;5030</DisableSpecificWarnings>",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "267:     <ClCompile>",
          "268:       <Optimization>Disabled</Optimization>",
          "269:       <AdditionalIncludeDirectories>$(ProjectDir)\\..\\..\\;$(LIBVMDK_HOME)\\include;$(LIBVHDI_HOME)\\include;$(LIBEWF_HOME)\\include;$(LIBEWF_HOME)\\..\\zlib;$(POSTGRESQL_HOME_64)\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "271:       <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>",
          "272:       <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>",
          "273:       <PrecompiledHeader>",
          "274:       </PrecompiledHeader>",
          "275:       <WarningLevel>Level3</WarningLevel>",
          "276:       <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>",
          "277:     </ClCompile>",
          "278:     <PostBuildEvent>",
          "279:       <Command>copy \"$(LIBEWF_HOME)\\msvscpp\\x64\\release\\libewf.dll\" \"$(OutDir)\"",
          "",
          "[Removed Lines]",
          "270:       <PreprocessorDefinitions>_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;HAVE_LIBEWF;HAVE_LIBZ;HAVE_LIBVMDK;HAVE_LIBVHDI;WIN32;_DEBUG;HAVE_LIBPQ_;_LIB;WINVER=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "[Added Lines]",
          "273:       <PreprocessorDefinitions>NOMINMAX;_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;HAVE_LIBEWF;HAVE_LIBZ;HAVE_LIBVMDK;HAVE_LIBVHDI;WIN32;_DEBUG;HAVE_LIBPQ_;_LIB;WINVER=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "280:       <DisableSpecificWarnings>4200;4814;5030</DisableSpecificWarnings>",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "298:       <Optimization>MaxSpeed</Optimization>",
          "299:       <IntrinsicFunctions>true</IntrinsicFunctions>",
          "300:       <AdditionalIncludeDirectories>$(ProjectDir)\\..\\..\\;$(LIBVMDK_HOME)\\include;$(LIBVHDI_HOME)\\include;$(LIBEWF_HOME)\\include;$(LIBEWF_HOME)\\..\\zlib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "302:       <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>",
          "303:       <FunctionLevelLinking>true</FunctionLevelLinking>",
          "304:       <PrecompiledHeader>",
          "305:       </PrecompiledHeader>",
          "306:       <WarningLevel>Level3</WarningLevel>",
          "307:       <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>",
          "308:     </ClCompile>",
          "309:     <PostBuildEvent>",
          "310:       <Command>copy \"$(LIBEWF_HOME)\\msvscpp\\release\\libewf.dll\" \"$(OutDir)\"",
          "",
          "[Removed Lines]",
          "301:       <PreprocessorDefinitions>_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;HAVE_LIBEWF;HAVE_LIBZ;HAVE_LIBVMDK;HAVE_LIBVHDI;WIN32;NDEBUG;_LIB;WINVER=0x0501;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "[Added Lines]",
          "305:       <PreprocessorDefinitions>NOMINMAX;_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;HAVE_LIBEWF;HAVE_LIBZ;HAVE_LIBVMDK;HAVE_LIBVHDI;WIN32;NDEBUG;_LIB;WINVER=0x0501;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "312:       <DisableSpecificWarnings>4200;4814;5030</DisableSpecificWarnings>",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "320:       <Optimization>MaxSpeed</Optimization>",
          "321:       <IntrinsicFunctions>true</IntrinsicFunctions>",
          "322:       <AdditionalIncludeDirectories>$(ProjectDir)\\..\\..\\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "324:       <RuntimeLibrary>MultiThreaded</RuntimeLibrary>",
          "325:       <FunctionLevelLinking>true</FunctionLevelLinking>",
          "326:       <PrecompiledHeader>",
          "",
          "[Removed Lines]",
          "323:       <PreprocessorDefinitions>_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;WIN32;NDEBUG;_LIB;WINVER=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "[Added Lines]",
          "328:       <PreprocessorDefinitions>NOMINMAX;_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;WIN32;NDEBUG;_LIB;WINVER=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "328:       <WarningLevel>Level3</WarningLevel>",
          "329:       <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>",
          "330:       <CompileAsManaged>false</CompileAsManaged>",
          "331:     </ClCompile>",
          "332:     <PostBuildEvent>",
          "333:       <Command>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "336:       <DisableSpecificWarnings>4200;4814;5030</DisableSpecificWarnings>",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "339:       <Optimization>MaxSpeed</Optimization>",
          "340:       <IntrinsicFunctions>true</IntrinsicFunctions>",
          "341:       <AdditionalIncludeDirectories>$(ProjectDir)\\..\\..\\;$(LIBVMDK_HOME)\\include;$(LIBVHDI_HOME)\\include;$(LIBEWF_HOME)\\include;$(LIBEWF_HOME)\\..\\zlib;$(POSTGRESQL_HOME_32)\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "343:       <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>",
          "344:       <FunctionLevelLinking>true</FunctionLevelLinking>",
          "345:       <PrecompiledHeader>",
          "346:       </PrecompiledHeader>",
          "347:       <WarningLevel>Level3</WarningLevel>",
          "348:       <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>",
          "349:     </ClCompile>",
          "350:     <PostBuildEvent>",
          "351:       <Command>copy \"$(LIBVMDK_HOME)\\msvscpp\\release\\libvmdk.dll\" \"$(OutDir)\"",
          "",
          "[Removed Lines]",
          "342:       <PreprocessorDefinitions>_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;HAVE_LIBVMDK;HAVE_LIBVHDI;HAVE_LIBEWF;HAVE_LIBZ;WIN32;NDEBUG;HAVE_LIBPQ_;_LIB;WINVER=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "[Added Lines]",
          "348:       <PreprocessorDefinitions>NOMINMAX;_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;HAVE_LIBVMDK;HAVE_LIBVHDI;HAVE_LIBEWF;HAVE_LIBZ;WIN32;NDEBUG;HAVE_LIBPQ_;_LIB;WINVER=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "355:       <DisableSpecificWarnings>4200;4814;5030</DisableSpecificWarnings>",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "373:       <Optimization>MaxSpeed</Optimization>",
          "374:       <IntrinsicFunctions>true</IntrinsicFunctions>",
          "375:       <AdditionalIncludeDirectories>$(ProjectDir)\\..\\..\\;$(LIBVMDK_HOME)\\include;$(LIBVHDI_HOME)\\include;$(LIBEWF_HOME)\\include;$(LIBEWF_HOME)\\..\\zlib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "377:       <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>",
          "378:       <FunctionLevelLinking>true</FunctionLevelLinking>",
          "379:       <PrecompiledHeader>",
          "380:       </PrecompiledHeader>",
          "381:       <WarningLevel>Level3</WarningLevel>",
          "382:       <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>",
          "383:     </ClCompile>",
          "384:     <PostBuildEvent>",
          "385:       <Command>copy \"$(LIBEWF_HOME)\\msvscpp\\x64\\release\\libewf.dll\" \"$(OutDir)\"",
          "",
          "[Removed Lines]",
          "376:       <PreprocessorDefinitions>_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;HAVE_LIBEWF;HAVE_LIBVMDK;HAVE_LIBVHDI;HAVE_LIBZ;WIN32;NDEBUG;_LIB;WINVER=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "[Added Lines]",
          "383:       <PreprocessorDefinitions>NOMINMAX;_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;HAVE_LIBEWF;HAVE_LIBVMDK;HAVE_LIBVHDI;HAVE_LIBZ;WIN32;NDEBUG;_LIB;WINVER=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "390:       <DisableSpecificWarnings>4200;4814;5030</DisableSpecificWarnings>",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "395:       <Optimization>MaxSpeed</Optimization>",
          "396:       <IntrinsicFunctions>true</IntrinsicFunctions>",
          "397:       <AdditionalIncludeDirectories>$(ProjectDir)\\..\\..\\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "399:       <RuntimeLibrary>MultiThreaded</RuntimeLibrary>",
          "400:       <FunctionLevelLinking>true</FunctionLevelLinking>",
          "401:       <PrecompiledHeader>",
          "",
          "[Removed Lines]",
          "398:       <PreprocessorDefinitions>_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;WIN32;NDEBUG;_LIB;WINVER=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "[Added Lines]",
          "406:       <PreprocessorDefinitions>NOMINMAX;_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;WIN32;NDEBUG;_LIB;WINVER=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "403:       <WarningLevel>Level3</WarningLevel>",
          "404:       <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>",
          "405:       <CompileAsManaged>false</CompileAsManaged>",
          "406:     </ClCompile>",
          "407:     <PostBuildEvent>",
          "408:       <Command>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "414:       <DisableSpecificWarnings>4200;4814;5030</DisableSpecificWarnings>",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "414:       <Optimization>MaxSpeed</Optimization>",
          "415:       <IntrinsicFunctions>true</IntrinsicFunctions>",
          "416:       <AdditionalIncludeDirectories>$(ProjectDir)\\..\\..\\;$(LIBVMDK_HOME)\\include;$(LIBVHDI_HOME)\\include;$(LIBEWF_HOME)\\include;$(LIBEWF_HOME)\\..\\zlib;$(POSTGRESQL_HOME_64)\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "418:       <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>",
          "419:       <FunctionLevelLinking>true</FunctionLevelLinking>",
          "420:       <PrecompiledHeader>",
          "421:       </PrecompiledHeader>",
          "422:       <WarningLevel>Level3</WarningLevel>",
          "423:       <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>",
          "424:     </ClCompile>",
          "425:     <PostBuildEvent>",
          "426:       <Command>copy \"$(LIBEWF_HOME)\\msvscpp\\x64\\release\\libewf.dll\" \"$(OutDir)\"",
          "",
          "[Removed Lines]",
          "417:       <PreprocessorDefinitions>_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;HAVE_LIBEWF;HAVE_LIBZ;HAVE_LIBVMDK;HAVE_LIBVHDI;WIN32;NDEBUG;HAVE_LIBPQ_;_LIB;WINVER=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "[Added Lines]",
          "426:       <PreprocessorDefinitions>NOMINMAX;_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;HAVE_LIBEWF;HAVE_LIBZ;HAVE_LIBVMDK;HAVE_LIBVHDI;WIN32;NDEBUG;HAVE_LIBPQ_;_LIB;WINVER=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "433:       <DisableSpecificWarnings>4200;4814;5030</DisableSpecificWarnings>",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "447:     <ClCompile>",
          "448:       <Optimization>Disabled</Optimization>",
          "449:       <AdditionalIncludeDirectories>$(ProjectDir)\\..\\..\\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "451:       <MinimalRebuild>true</MinimalRebuild>",
          "452:       <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>",
          "453:       <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>",
          "",
          "[Removed Lines]",
          "450:       <PreprocessorDefinitions>_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;WIN32;_DEBUG;_LIB;WINVER=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "[Added Lines]",
          "460:       <PreprocessorDefinitions>NOMINMAX;_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;WIN32;_DEBUG;_LIB;WINVER=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "455:       </PrecompiledHeader>",
          "456:       <WarningLevel>Level3</WarningLevel>",
          "457:       <DebugInformationFormat>EditAndContinue</DebugInformationFormat>",
          "458:     </ClCompile>",
          "459:   </ItemDefinitionGroup>",
          "460:   <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug_NoLibs|x64'\">",
          "461:     <ClCompile>",
          "462:       <Optimization>Disabled</Optimization>",
          "463:       <AdditionalIncludeDirectories>$(ProjectDir)\\..\\..\\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "465:       <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>",
          "466:       <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>",
          "467:       <PrecompiledHeader>",
          "468:       </PrecompiledHeader>",
          "469:       <WarningLevel>Level3</WarningLevel>",
          "470:       <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>",
          "471:     </ClCompile>",
          "472:   </ItemDefinitionGroup>",
          "473:   <ItemGroup>",
          "",
          "[Removed Lines]",
          "464:       <PreprocessorDefinitions>_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;WIN32;_DEBUG;_LIB;WINVER=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "",
          "[Added Lines]",
          "468:       <DisableSpecificWarnings>4200;4814;5030</DisableSpecificWarnings>",
          "475:       <PreprocessorDefinitions>NOMINMAX;_CRT_SECURE_NO_DEPRECATE;GUID_WINDOWS;_CRT_SECURE_NO_WARNINGS;WIN32;_DEBUG;_LIB;WINVER=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "482:       <DisableSpecificWarnings>4200;4814;5030</DisableSpecificWarnings>",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "475:     <ClCompile Include=\"..\\..\\tsk\\auto\\guid.cpp\" />",
          "476:     <ClCompile Include=\"..\\..\\tsk\\auto\\is_image_supported.cpp\" />",
          "477:     <ClCompile Include=\"..\\..\\tsk\\auto\\tsk_db.cpp\" />",
          "478:     <ClCompile Include=\"..\\..\\tsk\\fs\\exfatfs_dent.c\" />",
          "479:     <ClCompile Include=\"..\\..\\tsk\\fs\\exfatfs.c\" />",
          "480:     <ClCompile Include=\"..\\..\\tsk\\fs\\exfatfs_meta.c\" />",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "490:     <ClCompile Include=\"..\\..\\tsk\\fs\\apfs.cpp\" />",
          "491:     <ClCompile Include=\"..\\..\\tsk\\fs\\apfs_compat.cpp\" />",
          "492:     <ClCompile Include=\"..\\..\\tsk\\fs\\apfs_fs.cpp\" />",
          "493:     <ClCompile Include=\"..\\..\\tsk\\fs\\apfs_open.cpp\" />",
          "494:     <ClCompile Include=\"..\\..\\tsk\\fs\\decmpfs.c\" />",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "487:     <ClCompile Include=\"..\\..\\tsk\\img\\img_writer.cpp\" />",
          "488:     <ClCompile Include=\"..\\..\\tsk\\img\\vhd.c\" />",
          "489:     <ClCompile Include=\"..\\..\\tsk\\img\\vmdk.c\" />",
          "490:     <ClCompile Include=\"..\\..\\tsk\\vs\\bsd.c\" />",
          "491:     <ClCompile Include=\"..\\..\\tsk\\vs\\dos.c\" />",
          "492:     <ClCompile Include=\"..\\..\\tsk\\vs\\gpt.c\" />",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "507:     <ClCompile Include=\"..\\..\\tsk\\pool\\apfs_pool_compat.cpp\" />",
          "508:     <ClCompile Include=\"..\\..\\tsk\\pool\\apfs_pool.cpp\" />",
          "509:     <ClCompile Include=\"..\\..\\tsk\\pool\\pool_open.cpp\" />",
          "510:     <ClCompile Include=\"..\\..\\tsk\\pool\\pool_read.cpp\" />",
          "511:     <ClCompile Include=\"..\\..\\tsk\\pool\\pool_types.cpp\" />",
          "512:     <ClCompile Include=\"..\\..\\tsk\\util\\crypto.cpp\" />",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "580:     <ClInclude Include=\"..\\..\\tsk\\auto\\tsk_db.h\" />",
          "581:     <ClInclude Include=\"..\\..\\tsk\\auto\\tsk_db_postgresql.h\" />",
          "582:     <ClInclude Include=\"..\\..\\tsk\\auto\\tsk_is_image_supported.h\" />",
          "583:     <ClInclude Include=\"..\\..\\tsk\\fs\\tsk_exfatfs.h\" />",
          "584:     <ClInclude Include=\"..\\..\\tsk\\fs\\tsk_fatxxfs.h\" />",
          "585:     <ClInclude Include=\"..\\..\\tsk\\hashdb\\tsk_hash_info.h\" />",
          "586:     <ClInclude Include=\"..\\..\\tsk\\img\\img_writer.h\" />",
          "587:     <ClInclude Include=\"..\\..\\tsk\\img\\vhd.h\" />",
          "588:     <ClInclude Include=\"..\\..\\tsk\\img\\vmdk.h\" />",
          "589:     <ClInclude Include=\"..\\..\\tsk\\vs\\tsk_bsd.h\" />",
          "590:     <ClInclude Include=\"..\\..\\tsk\\vs\\tsk_dos.h\" />",
          "591:     <ClInclude Include=\"..\\..\\tsk\\vs\\tsk_gpt.h\" />",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "606:     <ClInclude Include=\"..\\..\\tsk\\fs\\apfs_compat.hpp\" />",
          "607:     <ClInclude Include=\"..\\..\\tsk\\fs\\apfs_fs.h\" />",
          "608:     <ClInclude Include=\"..\\..\\tsk\\fs\\apfs_fs.hpp\" />",
          "609:     <ClInclude Include=\"..\\..\\tsk\\fs\\decmpfs.h\" />",
          "610:     <ClInclude Include=\"..\\..\\tsk\\fs\\tsk_apfs.h\" />",
          "611:     <ClInclude Include=\"..\\..\\tsk\\fs\\tsk_apfs.hpp\" />",
          "618:     <ClInclude Include=\"..\\..\\tsk\\libtsk.h\" />",
          "619:     <ClInclude Include=\"..\\..\\tsk\\pool\\apfs_pool_compat.hpp\" />",
          "620:     <ClInclude Include=\"..\\..\\tsk\\pool\\pool_compat.hpp\" />",
          "621:     <ClInclude Include=\"..\\..\\tsk\\pool\\tsk_apfs.h\" />",
          "622:     <ClInclude Include=\"..\\..\\tsk\\pool\\tsk_apfs.hpp\" />",
          "623:     <ClInclude Include=\"..\\..\\tsk\\pool\\tsk_pool.h\" />",
          "624:     <ClInclude Include=\"..\\..\\tsk\\pool\\tsk_pool.hpp\" />",
          "625:     <ClInclude Include=\"..\\..\\tsk\\util\\crypto.hpp\" />",
          "626:     <ClInclude Include=\"..\\..\\tsk\\util\\lw_shared_ptr.hpp\" />",
          "627:     <ClInclude Include=\"..\\..\\tsk\\util\\span.hpp\" />",
          "",
          "---------------"
        ],
        "win32/libtsk/libtsk.vcxproj.filters||win32/libtsk/libtsk.vcxproj.filters": [
          "File: win32/libtsk/libtsk.vcxproj.filters -> win32/libtsk/libtsk.vcxproj.filters",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:     <Filter Include=\"img\">",
          "20:       <UniqueIdentifier>{36ca1943-034a-4915-a0ac-ede5f6e26bfd}</UniqueIdentifier>",
          "21:     </Filter>",
          "22:   </ItemGroup>",
          "23:   <ItemGroup>",
          "24:     <ClCompile Include=\"..\\..\\tsk\\vs\\bsd.c\">",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22:     <Filter Include=\"pool\">",
          "23:       <UniqueIdentifier>{7cbe036c-983e-47eb-b83e-499ecc668ffd}</UniqueIdentifier>",
          "24:     </Filter>",
          "25:     <Filter Include=\"util\">",
          "26:       <UniqueIdentifier>{5ae960da-f555-42cd-bc00-eba8c536e79b}</UniqueIdentifier>",
          "27:     </Filter>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "327:     <ClCompile Include=\"..\\..\\tsk\\fs\\lzvn.c\">",
          "328:       <Filter>fs</Filter>",
          "329:     </ClCompile>",
          "330:   </ItemGroup>",
          "331:   <ItemGroup>",
          "332:     <ClInclude Include=\"..\\..\\tsk\\vs\\tsk_bsd.h\">",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "336:     <ClCompile Include=\"..\\..\\tsk\\pool\\apfs_pool.cpp\">",
          "337:       <Filter>pool</Filter>",
          "338:     </ClCompile>",
          "339:     <ClCompile Include=\"..\\..\\tsk\\pool\\pool_open.cpp\">",
          "340:       <Filter>pool</Filter>",
          "341:     </ClCompile>",
          "342:     <ClCompile Include=\"..\\..\\tsk\\pool\\pool_read.cpp\">",
          "343:       <Filter>pool</Filter>",
          "344:     </ClCompile>",
          "345:     <ClCompile Include=\"..\\..\\tsk\\pool\\pool_types.cpp\">",
          "346:       <Filter>pool</Filter>",
          "347:     </ClCompile>",
          "348:     <ClCompile Include=\"..\\..\\tsk\\util\\crypto.cpp\">",
          "349:       <Filter>util</Filter>",
          "350:     </ClCompile>",
          "351:     <ClCompile Include=\"..\\..\\tsk\\fs\\apfs_open.cpp\">",
          "352:       <Filter>fs</Filter>",
          "353:     </ClCompile>",
          "354:     <ClCompile Include=\"..\\..\\tsk\\fs\\apfs.cpp\">",
          "355:       <Filter>fs</Filter>",
          "356:     </ClCompile>",
          "357:     <ClCompile Include=\"..\\..\\tsk\\fs\\apfs_compat.cpp\">",
          "358:       <Filter>fs</Filter>",
          "359:     </ClCompile>",
          "360:     <ClCompile Include=\"..\\..\\tsk\\fs\\apfs_fs.cpp\">",
          "361:       <Filter>fs</Filter>",
          "362:     </ClCompile>",
          "363:     <ClCompile Include=\"..\\..\\tsk\\fs\\decmpfs.c\">",
          "364:       <Filter>fs</Filter>",
          "365:     </ClCompile>",
          "366:     <ClCompile Include=\"..\\..\\tsk\\pool\\apfs_pool_compat.cpp\">",
          "367:       <Filter>pool</Filter>",
          "368:     </ClCompile>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "455:     <ClInclude Include=\"..\\..\\tsk\\img\\img_writer.h\">",
          "456:       <Filter>img</Filter>",
          "457:     </ClInclude>",
          "458:   </ItemGroup>",
          "459: </Project>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "497:     <ClInclude Include=\"..\\..\\tsk\\fs\\tsk_apfs.h\">",
          "498:       <Filter>fs</Filter>",
          "499:     </ClInclude>",
          "500:     <ClInclude Include=\"..\\..\\tsk\\fs\\tsk_apfs.hpp\">",
          "501:       <Filter>fs</Filter>",
          "502:     </ClInclude>",
          "503:     <ClInclude Include=\"..\\..\\tsk\\pool\\pool_compat.hpp\">",
          "504:       <Filter>pool</Filter>",
          "505:     </ClInclude>",
          "506:     <ClInclude Include=\"..\\..\\tsk\\pool\\tsk_apfs.h\">",
          "507:       <Filter>pool</Filter>",
          "508:     </ClInclude>",
          "509:     <ClInclude Include=\"..\\..\\tsk\\pool\\tsk_apfs.hpp\">",
          "510:       <Filter>pool</Filter>",
          "511:     </ClInclude>",
          "512:     <ClInclude Include=\"..\\..\\tsk\\pool\\tsk_pool.h\">",
          "513:       <Filter>pool</Filter>",
          "514:     </ClInclude>",
          "515:     <ClInclude Include=\"..\\..\\tsk\\pool\\tsk_pool.hpp\">",
          "516:       <Filter>pool</Filter>",
          "517:     </ClInclude>",
          "518:     <ClInclude Include=\"..\\..\\tsk\\util\\crypto.hpp\">",
          "519:       <Filter>util</Filter>",
          "520:     </ClInclude>",
          "521:     <ClInclude Include=\"..\\..\\tsk\\util\\lw_shared_ptr.hpp\">",
          "522:       <Filter>util</Filter>",
          "523:     </ClInclude>",
          "524:     <ClInclude Include=\"..\\..\\tsk\\util\\span.hpp\">",
          "525:       <Filter>util</Filter>",
          "526:     </ClInclude>",
          "527:     <ClInclude Include=\"..\\..\\tsk\\libtsk.h\" />",
          "528:     <ClInclude Include=\"..\\..\\tsk\\fs\\apfs_compat.hpp\">",
          "529:       <Filter>fs</Filter>",
          "530:     </ClInclude>",
          "531:     <ClInclude Include=\"..\\..\\tsk\\fs\\apfs_fs.h\">",
          "532:       <Filter>fs</Filter>",
          "533:     </ClInclude>",
          "534:     <ClInclude Include=\"..\\..\\tsk\\fs\\apfs_fs.hpp\">",
          "535:       <Filter>fs</Filter>",
          "536:     </ClInclude>",
          "537:     <ClInclude Include=\"..\\..\\tsk\\fs\\decmpfs.h\">",
          "538:       <Filter>fs</Filter>",
          "539:     </ClInclude>",
          "540:     <ClInclude Include=\"..\\..\\tsk\\pool\\apfs_pool_compat.hpp\">",
          "541:       <Filter>pool</Filter>",
          "542:     </ClInclude>",
          "",
          "---------------"
        ]
      }
    }
  ]
}