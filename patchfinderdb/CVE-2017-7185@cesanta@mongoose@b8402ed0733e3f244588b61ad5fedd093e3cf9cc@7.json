{
  "cve_id": "CVE-2017-7185",
  "cve_desc": "Use-after-free vulnerability in the mg_http_multipart_wait_for_boundary function in mongoose.c in Cesanta Mongoose Embedded Web Server Library 6.7 and earlier and Mongoose OS 1.2 and earlier allows remote attackers to cause a denial of service (crash) via a multipart/form-data POST request without a MIME boundary string.",
  "repo": "cesanta/mongoose",
  "patch_hash": "b8402ed0733e3f244588b61ad5fedd093e3cf9cc",
  "patch_info": {
    "commit_hash": "b8402ed0733e3f244588b61ad5fedd093e3cf9cc",
    "repo": "cesanta/mongoose",
    "commit_url": "https://github.com/cesanta/mongoose/commit/b8402ed0733e3f244588b61ad5fedd093e3cf9cc",
    "files": [
      "mongoose.c"
    ],
    "message": "Fix crash in multipart handling\n\nClose cesanta/dev#6974\n\nPUBLISHED_FROM=4d4e4a46eceba10aec8dacb7f8f58bd078c92307",
    "before_after_code_files": [
      "mongoose.c||mongoose.c"
    ]
  },
  "patch_diff": {
    "mongoose.c||mongoose.c": [
      "File: mongoose.c -> mongoose.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "5961:   struct mbuf *io = &c->recv_mbuf;",
      "5962:   struct mg_http_proto_data *pd = mg_http_get_proto_data(c);",
      "5964:   if ((int) io->len < pd->mp_stream.boundary_len + 2) {",
      "5965:     return 0;",
      "5966:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5964:   if (pd->mp_stream.boundary == NULL) {",
      "5965:     pd->mp_stream.state = MPS_FINALIZE;",
      "5966:     DBG((\"Invalid request: boundary not initilaized\"));",
      "5967:     return 0;",
      "5968:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d85d95a40bb3f11a0be6adc6da56f6ca31b37737",
      "candidate_info": {
        "commit_hash": "d85d95a40bb3f11a0be6adc6da56f6ca31b37737",
        "repo": "cesanta/mongoose",
        "commit_url": "https://github.com/cesanta/mongoose/commit/d85d95a40bb3f11a0be6adc6da56f6ca31b37737",
        "files": [
          "mongoose.c"
        ],
        "message": "Fix potential out-of-bound\n\nPUBLISHED_FROM=71b40189bcedbe9338915c1aad939835125dad26",
        "before_after_code_files": [
          "mongoose.c||mongoose.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/cesanta/mongoose/pull/855"
        ],
        "olp_code_files": {
          "patch": [
            "mongoose.c||mongoose.c"
          ],
          "candidate": [
            "mongoose.c||mongoose.c"
          ]
        }
      },
      "candidate_diff": {
        "mongoose.c||mongoose.c": [
          "File: mongoose.c -> mongoose.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1136: int mg_vcmp(const struct mg_str *str1, const char *str2) WEAK;",
          "1137: int mg_vcmp(const struct mg_str *str1, const char *str2) {",
          "1138:   size_t n2 = strlen(str2), n1 = str1->len;",
          "1140:   if (r == 0) {",
          "1141:     return n1 - n2;",
          "1142:   }",
          "",
          "[Removed Lines]",
          "1139:   int r = memcmp(str1->p, str2, (n1 < n2) ? n1 : n2);",
          "",
          "[Added Lines]",
          "1139:   int r = strncmp(str1->p, str2, (n1 < n2) ? n1 : n2);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3e59e1c465b39bebbb596df38be451307906109b",
      "candidate_info": {
        "commit_hash": "3e59e1c465b39bebbb596df38be451307906109b",
        "repo": "cesanta/mongoose",
        "commit_url": "https://github.com/cesanta/mongoose/commit/3e59e1c465b39bebbb596df38be451307906109b",
        "files": [
          "docs/c-api/net.h/struct_mg_mgr.md",
          "mongoose.h"
        ],
        "message": "Fix formatting\n\nPUBLISHED_FROM=1803e726eee7bb64496d70389655083eb70257ab",
        "before_after_code_files": [
          "mongoose.h||mongoose.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/cesanta/mongoose/pull/855"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "mongoose.h||mongoose.h": [
          "File: mongoose.h -> mongoose.h"
        ]
      }
    },
    {
      "candidate_hash": "2b2816cfe43c74056f8bba6da008e3252febb5fd",
      "candidate_info": {
        "commit_hash": "2b2816cfe43c74056f8bba6da008e3252febb5fd",
        "repo": "cesanta/mongoose",
        "commit_url": "https://github.com/cesanta/mongoose/commit/2b2816cfe43c74056f8bba6da008e3252febb5fd",
        "files": [
          "mongoose.c"
        ],
        "message": "Store reassembled WS frame length in proto_data\n\nPUBLISHED_FROM=7bbe7dd20dca8435c786dca30200a4973ae0827d",
        "before_after_code_files": [
          "mongoose.c||mongoose.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/cesanta/mongoose/pull/855"
        ],
        "olp_code_files": {
          "patch": [
            "mongoose.c||mongoose.c"
          ],
          "candidate": [
            "mongoose.c||mongoose.c"
          ]
        }
      },
      "candidate_diff": {
        "mongoose.c||mongoose.c": [
          "File: mongoose.c -> mongoose.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5344:   struct mg_connection *linked_conn;",
          "5345: };",
          "5347: struct mg_http_proto_data {",
          "5348: #if MG_ENABLE_FILESYSTEM",
          "5349:   struct mg_http_proto_data_file file;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5347: struct mg_ws_proto_data {",
          "5349: };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5353: #endif",
          "5354: #if MG_ENABLE_HTTP_STREAMING_MULTIPART",
          "5355:   struct mg_http_multipart_stream mp_stream;",
          "5356: #endif",
          "5357:   struct mg_http_proto_data_chuncked chunk;",
          "5358:   struct mg_http_endpoint *endpoints;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5360: #endif",
          "5361: #if MG_ENABLE_HTTP_WEBSOCKET",
          "5362:   struct mg_ws_proto_data ws_data;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "9169:   }",
          "9170: }",
          "9172: static int mg_deliver_websocket_data(struct mg_connection *nc) {",
          "9174:   uint64_t i, data_len = 0, frame_len = 0, buf_len = nc->recv_mbuf.len, len,",
          "9175:               mask_len = 0, header_len = 0;",
          "9176:   unsigned char *p = (unsigned char *) nc->recv_mbuf.buf, *buf = p,",
          "9179:   int ok;",
          "9180:   int reass = buf_len > 0 && mg_is_ws_fragment(p[0]) &&",
          "9181:               !(nc->flags & MG_F_WEBSOCKET_NO_DEFRAG);",
          "9188:   }",
          "9190:   if (buf_len >= 2) {",
          "9193:     if (len < 126 && buf_len >= mask_len) {",
          "9194:       data_len = len;",
          "9195:       header_len = 2 + mask_len;",
          "",
          "[Removed Lines]",
          "9184:   if (reass && !mg_is_ws_first_fragment(p[0]) &&",
          "9185:       buf_len >= 1 + sizeof(*sizep) && buf_len >= 1 + sizeof(*sizep) + *sizep) {",
          "9186:     buf += 1 + sizeof(*sizep) + *sizep;",
          "9187:     buf_len -= 1 + sizeof(*sizep) + *sizep;",
          "9191:     len = buf[1] & 127;",
          "9192:     mask_len = buf[1] & 128 ? 4 : 0;",
          "",
          "[Added Lines]",
          "9179: static struct mg_ws_proto_data *mg_ws_get_proto_data(struct mg_connection *nc) {",
          "9180:   struct mg_http_proto_data *htd = mg_http_get_proto_data(nc);",
          "9181:   return (htd != NULL ? &htd->ws_data : NULL);",
          "9182: };",
          "9190:   struct mg_ws_proto_data *wsd = mg_ws_get_proto_data(nc);",
          "9196:   if (reass && !mg_is_ws_first_fragment(p[0]) && buf_len >= 1 &&",
          "9197:       buf_len >= 1 + wsd->reass_len) {",
          "9198:     buf += 1 + wsd->reass_len;",
          "9199:     buf_len -= 1 + wsd->reass_len;",
          "9203:     len = buf[1] & 0x7f;",
          "9204:     mask_len = buf[1] & 0x80 ? 4 : 0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "9229:     if (reass) {",
          "9231:       if (mg_is_ws_first_fragment(wsm.flags)) {",
          "9236:       }",
          "9239:       memmove(buf, wsm.data, e - wsm.data);",
          "9241:       nc->recv_mbuf.len -= wsm.data - buf;",
          "9244:       if (wsm.flags & 0x80) {",
          "9247:         mg_handle_incoming_websocket_frame(nc, &wsm);",
          "9249:       }",
          "9250:     } else {",
          "9252:       mg_handle_incoming_websocket_frame(nc, &wsm);",
          "9254:     }",
          "",
          "[Removed Lines]",
          "9232:         mbuf_resize(&nc->recv_mbuf, nc->recv_mbuf.size + sizeof(*sizep));",
          "9234:         buf = p + 1 + sizeof(*sizep);",
          "9240:       (*sizep) += wsm.size;",
          "9245:         wsm.data = p + 1 + sizeof(*sizep);",
          "9246:         wsm.size = *sizep;",
          "9248:         mbuf_remove(&nc->recv_mbuf, 1 + sizeof(*sizep) + *sizep);",
          "",
          "[Added Lines]",
          "9245:         buf = p + 1;",
          "9246:         wsd->reass_len = 0;",
          "9251:       wsd->reass_len += wsm.size;",
          "9256:         wsm.data = p + 1;",
          "9257:         wsm.size = wsd->reass_len;",
          "9259:         mbuf_remove(&nc->recv_mbuf, 1 + wsd->reass_len);",
          "9260:         wsd->reass_len = 0;",
          "9266:       wsd->reass_len = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c8416cc17d3fc79bdcae59f418375a60330adaca",
      "candidate_info": {
        "commit_hash": "c8416cc17d3fc79bdcae59f418375a60330adaca",
        "repo": "cesanta/mongoose",
        "commit_url": "https://github.com/cesanta/mongoose/commit/c8416cc17d3fc79bdcae59f418375a60330adaca",
        "files": [
          "mongoose.c"
        ],
        "message": "NULL out name server field properly\n\nFixes https://github.com/cesanta/mongoose-os/issues/260\n\nPUBLISHED_FROM=e95076915d52edb2298e3ea386281c277e42c89a",
        "before_after_code_files": [
          "mongoose.c||mongoose.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/cesanta/mongoose/pull/855"
        ],
        "olp_code_files": {
          "patch": [
            "mongoose.c||mongoose.c"
          ],
          "candidate": [
            "mongoose.c||mongoose.c"
          ]
        }
      },
      "candidate_diff": {
        "mongoose.c||mongoose.c": [
          "File: mongoose.c -> mongoose.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "11130: void mg_set_nameserver(struct mg_mgr *mgr, const char *nameserver) {",
          "11131:   MG_FREE((char *) mgr->nameserver);",
          "11132:   if (nameserver != NULL) {",
          "11133:     mgr->nameserver = strdup(nameserver);",
          "11134:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11132:   mgr->nameserver = NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ec752645ee0cc3c7fd738ff6ac5b3b6f480fa97c",
      "candidate_info": {
        "commit_hash": "ec752645ee0cc3c7fd738ff6ac5b3b6f480fa97c",
        "repo": "cesanta/mongoose",
        "commit_url": "https://github.com/cesanta/mongoose/commit/ec752645ee0cc3c7fd738ff6ac5b3b6f480fa97c",
        "files": [
          "examples/ajax_upload/Makefile",
          "examples/ajax_upload/ajax_upload.c",
          "examples/ajax_upload/index.html"
        ],
        "message": "Remove ajax_upload\n\nPUBLISHED_FROM=599ccd99e7bf422cac5e8b1f5ccebe3cac2780e8",
        "before_after_code_files": [
          "examples/ajax_upload/ajax_upload.c||examples/ajax_upload/ajax_upload.c",
          "examples/ajax_upload/index.html||examples/ajax_upload/index.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/cesanta/mongoose/pull/855"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/ajax_upload/ajax_upload.c||examples/ajax_upload/ajax_upload.c": [
          "File: examples/ajax_upload/ajax_upload.c -> examples/ajax_upload/ajax_upload.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "examples/ajax_upload/index.html||examples/ajax_upload/index.html": [
          "File: examples/ajax_upload/index.html -> examples/ajax_upload/index.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}