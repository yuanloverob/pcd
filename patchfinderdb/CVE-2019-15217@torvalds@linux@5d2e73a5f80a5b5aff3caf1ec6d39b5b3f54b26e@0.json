{
  "cve_id": "CVE-2019-15217",
  "cve_desc": "An issue was discovered in the Linux kernel before 5.2.3. There is a NULL pointer dereference caused by a malicious USB device in the drivers/media/usb/zr364xx/zr364xx.c driver.",
  "repo": "torvalds/linux",
  "patch_hash": "5d2e73a5f80a5b5aff3caf1ec6d39b5b3f54b26e",
  "patch_info": {
    "commit_hash": "5d2e73a5f80a5b5aff3caf1ec6d39b5b3f54b26e",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/5d2e73a5f80a5b5aff3caf1ec6d39b5b3f54b26e",
    "files": [
      "drivers/media/usb/zr364xx/zr364xx.c"
    ],
    "message": "media: usb:zr364xx:Fix KASAN:null-ptr-deref Read in zr364xx_vidioc_querycap\n\nSyzKaller hit the null pointer deref while reading from uninitialized\nudev->product in zr364xx_vidioc_querycap().\n\n==================================================================\nBUG: KASAN: null-ptr-deref in read_word_at_a_time+0xe/0x20\ninclude/linux/compiler.h:274\nRead of size 1 at addr 0000000000000000 by task v4l_id/5287\n\nCPU: 1 PID: 5287 Comm: v4l_id Not tainted 5.1.0-rc3-319004-g43151d6 #6\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS\nGoogle 01/01/2011\nCall Trace:\n  __dump_stack lib/dump_stack.c:77 [inline]\n  dump_stack+0xe8/0x16e lib/dump_stack.c:113\n  kasan_report.cold+0x5/0x3c mm/kasan/report.c:321\n  read_word_at_a_time+0xe/0x20 include/linux/compiler.h:274\n  strscpy+0x8a/0x280 lib/string.c:207\n  zr364xx_vidioc_querycap+0xb5/0x210 drivers/media/usb/zr364xx/zr364xx.c:706\n  v4l_querycap+0x12b/0x340 drivers/media/v4l2-core/v4l2-ioctl.c:1062\n  __video_do_ioctl+0x5bb/0xb40 drivers/media/v4l2-core/v4l2-ioctl.c:2874\n  video_usercopy+0x44e/0xf00 drivers/media/v4l2-core/v4l2-ioctl.c:3056\n  v4l2_ioctl+0x14e/0x1a0 drivers/media/v4l2-core/v4l2-dev.c:364\n  vfs_ioctl fs/ioctl.c:46 [inline]\n  file_ioctl fs/ioctl.c:509 [inline]\n  do_vfs_ioctl+0xced/0x12f0 fs/ioctl.c:696\n  ksys_ioctl+0xa0/0xc0 fs/ioctl.c:713\n  __do_sys_ioctl fs/ioctl.c:720 [inline]\n  __se_sys_ioctl fs/ioctl.c:718 [inline]\n  __x64_sys_ioctl+0x74/0xb0 fs/ioctl.c:718\n  do_syscall_64+0xcf/0x4f0 arch/x86/entry/common.c:290\n  entry_SYSCALL_64_after_hwframe+0x49/0xbe\nRIP: 0033:0x7f3b56d8b347\nCode: 90 90 90 48 8b 05 f1 fa 2a 00 64 c7 00 26 00 00 00 48 c7 c0 ff ff ff\nff c3 90 90 90 90 90 90 90 90 90 90 b8 10 00 00 00 0f 05 <48> 3d 01 f0 ff\nff 73 01 c3 48 8b 0d c1 fa 2a 00 31 d2 48 29 c2 64\nRSP: 002b:00007ffe005d5d68 EFLAGS: 00000202 ORIG_RAX: 0000000000000010\nRAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007f3b56d8b347\nRDX: 00007ffe005d5d70 RSI: 0000000080685600 RDI: 0000000000000003\nRBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000202 R12: 0000000000400884\nR13: 00007ffe005d5ec0 R14: 0000000000000000 R15: 0000000000000000\n==================================================================\n\nFor this device udev->product is not initialized and accessing it causes a NULL pointer deref.\n\nThe fix is to check for NULL before strscpy() and copy empty string, if\nproduct is NULL\n\nReported-by: syzbot+66010012fd4c531a1a96@syzkaller.appspotmail.com\nSigned-off-by: Vandana BN <bnvandana@gmail.com>\nSigned-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>\nSigned-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>",
    "before_after_code_files": [
      "drivers/mediusb/zr364xx/zr364xx.c||drivers/media/uszr364xx/zr364xx.c"
    ]
  },
  "patch_diff": {
    "drivers/mediusb/zr364xx/zr364xx.c||drivers/media/uszr364xx/zr364xx.c": [
      "File: drivers/mediusb/zr364xx/zr364xx.c -> drivers/media/uszr364xx/zr364xx.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5b0efb4d670c8b53b25c166967efd2a02b309e05",
      "candidate_info": {
        "commit_hash": "5b0efb4d670c8b53b25c166967efd2a02b309e05",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/5b0efb4d670c8b53b25c166967efd2a02b309e05",
        "files": [
          "drivers/net/wireless/realtek/rtw88/main.c"
        ],
        "message": "rtw88: avoid circular locking between local->iflist_mtx and rtwdev->mutex\n\nRemove circular lock dependency by using atomic version of interfaces\niterate in watch_dog_work(), hence avoid taking local->iflist_mtx\n(rtw_vif_watch_dog_iter() only update some data, it can be called from\natomic context). Fixes below LOCKDEP warning:\n\n[ 1157.219415] ======================================================\n[ 1157.225772] [ INFO: possible circular locking dependency detected ]\n[ 1157.232150] 3.10.0-1043.el7.sgruszka1.x86_64.debug #1 Not tainted\n[ 1157.238346] -------------------------------------------------------\n[ 1157.244635] kworker/u4:2/14490 is trying to acquire lock:\n[ 1157.250194]  (&rtwdev->mutex){+.+.+.}, at: [<ffffffffc098322b>] rtw_ops_config+0x2b/0x90 [rtw88]\n[ 1157.259151]\nbut task is already holding lock:\n[ 1157.265085]  (&local->iflist_mtx){+.+...}, at: [<ffffffffc0b8ab7a>] ieee80211_mgd_probe_ap.part.28+0xca/0x160 [mac80211]\n[ 1157.276169]\nwhich lock already depends on the new lock.\n\n[ 1157.284488]\nthe existing dependency chain (in reverse order) is:\n[ 1157.292101]\n-> #2 (&local->iflist_mtx){+.+...}:\n[ 1157.296919]        [<ffffffffbc741a29>] lock_acquire+0x99/0x1e0\n[ 1157.302955]        [<ffffffffbce72793>] mutex_lock_nested+0x93/0x410\n[ 1157.309416]        [<ffffffffc0b6038f>] ieee80211_iterate_interfaces+0x2f/0x60 [mac80211]\n[ 1157.317730]        [<ffffffffc09811ab>] rtw_watch_dog_work+0xcb/0x130 [rtw88]\n[ 1157.325003]        [<ffffffffbc6d77bc>] process_one_work+0x22c/0x720\n[ 1157.331481]        [<ffffffffbc6d7dd6>] worker_thread+0x126/0x3b0\n[ 1157.337589]        [<ffffffffbc6e107f>] kthread+0xef/0x100\n[ 1157.343260]        [<ffffffffbce848b7>] ret_from_fork_nospec_end+0x0/0x39\n[ 1157.350091]\n-> #1 ((&(&rtwdev->watch_dog_work)->work)){+.+...}:\n[ 1157.356314]        [<ffffffffbc741a29>] lock_acquire+0x99/0x1e0\n[ 1157.362427]        [<ffffffffbc6d570b>] flush_work+0x5b/0x310\n[ 1157.368287]        [<ffffffffbc6d740e>] __cancel_work_timer+0xae/0x170\n[ 1157.374940]        [<ffffffffbc6d7583>] cancel_delayed_work_sync+0x13/0x20\n[ 1157.381930]        [<ffffffffc0982b49>] rtw_core_stop+0x29/0x50 [rtw88]\n[ 1157.388679]        [<ffffffffc098bee6>] rtw_enter_ips+0x16/0x20 [rtw88]\n[ 1157.395428]        [<ffffffffc0983242>] rtw_ops_config+0x42/0x90 [rtw88]\n[ 1157.402173]        [<ffffffffc0b13343>] ieee80211_hw_config+0xc3/0x680 [mac80211]\n[ 1157.409854]        [<ffffffffc0b3925b>] ieee80211_do_open+0x69b/0x9c0 [mac80211]\n[ 1157.417418]        [<ffffffffc0b395e9>] ieee80211_open+0x69/0x70 [mac80211]\n[ 1157.424496]        [<ffffffffbcd03442>] __dev_open+0xe2/0x160\n[ 1157.430356]        [<ffffffffbcd03773>] __dev_change_flags+0xa3/0x180\n[ 1157.436922]        [<ffffffffbcd03879>] dev_change_flags+0x29/0x60\n[ 1157.443224]        [<ffffffffbcda14c4>] devinet_ioctl+0x794/0x890\n[ 1157.449331]        [<ffffffffbcda27b5>] inet_ioctl+0x75/0xa0\n[ 1157.455087]        [<ffffffffbccd54eb>] sock_do_ioctl+0x2b/0x60\n[ 1157.461178]        [<ffffffffbccd5753>] sock_ioctl+0x233/0x310\n[ 1157.467109]        [<ffffffffbc8bd820>] do_vfs_ioctl+0x410/0x6c0\n[ 1157.473233]        [<ffffffffbc8bdb71>] SyS_ioctl+0xa1/0xc0\n[ 1157.478914]        [<ffffffffbce84a5e>] system_call_fastpath+0x25/0x2a\n[ 1157.485569]\n-> #0 (&rtwdev->mutex){+.+.+.}:\n[ 1157.490022]        [<ffffffffbc7409d1>] __lock_acquire+0xec1/0x1630\n[ 1157.496305]        [<ffffffffbc741a29>] lock_acquire+0x99/0x1e0\n[ 1157.502413]        [<ffffffffbce72793>] mutex_lock_nested+0x93/0x410\n[ 1157.508890]        [<ffffffffc098322b>] rtw_ops_config+0x2b/0x90 [rtw88]\n[ 1157.515724]        [<ffffffffc0b13343>] ieee80211_hw_config+0xc3/0x680 [mac80211]\n[ 1157.523370]        [<ffffffffc0b8a4ca>] ieee80211_recalc_ps.part.27+0x9a/0x180 [mac80211]\n[ 1157.531685]        [<ffffffffc0b8abc5>] ieee80211_mgd_probe_ap.part.28+0x115/0x160 [mac80211]\n[ 1157.540353]        [<ffffffffc0b8b40d>] ieee80211_beacon_connection_loss_work+0x4d/0x80 [mac80211]\n[ 1157.549513]        [<ffffffffbc6d77bc>] process_one_work+0x22c/0x720\n[ 1157.555886]        [<ffffffffbc6d7dd6>] worker_thread+0x126/0x3b0\n[ 1157.562170]        [<ffffffffbc6e107f>] kthread+0xef/0x100\n[ 1157.567765]        [<ffffffffbce848b7>] ret_from_fork_nospec_end+0x0/0x39\n[ 1157.574579]\nother info that might help us debug this:\n\n[ 1157.582788] Chain exists of:\n  &rtwdev->mutex --> (&(&rtwdev->watch_dog_work)->work) --> &local->iflist_mtx\n\n[ 1157.593024]  Possible unsafe locking scenario:\n\n[ 1157.599046]        CPU0                    CPU1\n[ 1157.603653]        ----                    ----\n[ 1157.608258]   lock(&local->iflist_mtx);\n[ 1157.612180]                                lock((&(&rtwdev->watch_dog_work)->work));\n[ 1157.620074]                                lock(&local->iflist_mtx);\n[ 1157.626555]   lock(&rtwdev->mutex);\n[ 1157.630124]\n *** DEADLOCK ***\n\n[ 1157.636148] 4 locks held by kworker/u4:2/14490:\n[ 1157.640755]  #0:  (%s#6){.+.+.+}, at: [<ffffffffbc6d774a>] process_one_work+0x1ba/0x720\n[ 1157.648965]  #1:  ((&ifmgd->beacon_connection_loss_work)){+.+.+.}, at: [<ffffffffbc6d774a>] process_one_work+0x1ba/0x720\n[ 1157.659950]  #2:  (&wdev->mtx){+.+.+.}, at: [<ffffffffc0b8aad5>] ieee80211_mgd_probe_ap.part.28+0x25/0x160 [mac80211]\n[ 1157.670901]  #3:  (&local->iflist_mtx){+.+...}, at: [<ffffffffc0b8ab7a>] ieee80211_mgd_probe_ap.part.28+0xca/0x160 [mac80211]\n[ 1157.682466]\n\nFixes: e3037485c68e (\"rtw88: new Realtek 802.11ac driver\")\nSigned-off-by: Stanislaw Gruszka <sgruszka@redhat.com>\nAcked-by: Yan-Hsuan Chuang <yhchuang@realtek.com>\nSigned-off-by: Kalle Valo <kvalo@codeaurora.org>",
        "before_after_code_files": [
          "drivers/net/wireless/realtek/rtw88/main.c||drivers/net/wireless/realtek/rtw88/main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/net/wireless/realtek/rtw88/main.c||drivers/net/wireless/realtek/rtw88/main.c": [
          "File: drivers/net/wireless/realtek/rtw88/main.c -> drivers/net/wireless/realtek/rtw88/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "162:  rtwdev->stats.tx_cnt = 0;",
          "163:  rtwdev->stats.rx_cnt = 0;",
          "",
          "[Removed Lines]",
          "165:  rtw_iterate_vifs(rtwdev, rtw_vif_watch_dog_iter, &data);",
          "",
          "[Added Lines]",
          "166:  rtw_iterate_vifs_atomic(rtwdev, rtw_vif_watch_dog_iter, &data);",
          "",
          "---------------"
        ]
      }
    }
  ]
}