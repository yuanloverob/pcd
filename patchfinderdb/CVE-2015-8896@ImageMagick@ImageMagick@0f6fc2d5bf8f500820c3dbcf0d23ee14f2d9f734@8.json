{
  "cve_id": "CVE-2015-8896",
  "cve_desc": "Integer truncation issue in coders/pict.c in ImageMagick before 7.0.5-0 allows remote attackers to cause a denial of service (application crash) via a crafted .pict file.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734",
  "patch_info": {
    "commit_hash": "0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734",
    "files": [
      "MagickCore/memory.c",
      "MagickCore/studio.h",
      "MagickCore/version.c",
      "MagickCore/version.h",
      "MagickWand/studio.h",
      "coders/icon.c",
      "coders/pict.c",
      "configure",
      "configure.ac"
    ],
    "message": "",
    "before_after_code_files": [
      "MagickCore/memory.c||MagickCore/memory.c",
      "MagickCore/studio.h||MagickCore/studio.h",
      "MagickCore/version.c||MagickCore/version.c",
      "MagickCore/version.h||MagickCore/version.h",
      "MagickWand/studio.h||MagickWand/studio.h",
      "coders/icon.c||coders/icon.c",
      "coders/pict.c||coders/pict.c",
      "configure.ac||configure.ac"
    ]
  },
  "patch_diff": {
    "MagickCore/memory.c||MagickCore/memory.c": [
      "File: MagickCore/memory.c -> MagickCore/memory.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "606:     }",
      "607:   if ((memory_info->blob == NULL) &&",
      "608:       (AcquireMagickResource(MapResource,length) != MagickFalse))",
      "611:         Heap memory failed, try anonymous memory mapping.",
      "",
      "[Removed Lines]",
      "609:     {",
      "",
      "[Added Lines]",
      "609:     {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "615:         memory_info->type=MapVirtualMemory;",
      "616:       else",
      "617:         RelinquishMagickResource(MapResource,length);",
      "619:   if (memory_info->blob == NULL)",
      "621:       int",
      "627:       file=AcquireUniqueFileResource(memory_info->filename);",
      "628:       if (file != -1)",
      "629:         {",
      "",
      "[Removed Lines]",
      "618:     }",
      "620:     {",
      "622:         file;",
      "625:         Anonymous memory mapping failed, try file-backed memory mapping.",
      "",
      "[Added Lines]",
      "619:   if ((memory_info->blob == NULL) &&",
      "620:       (AcquireMagickResource(DiskResource,length) != MagickFalse))",
      "621:     {",
      "623:         file;",
      "628:       file=AcquireUniqueFileResource(memory_info->filename);",
      "629:       if (file == -1)",
      "631:       else",
      "632:         {",
      "633:           if ((lseek(file,length-1,SEEK_SET) < 0) || (write(file,\"\",1) != 1))",
      "634:             RelinquishMagickResource(DiskResource,length);",
      "635:           else",
      "636:             {",
      "637:               if (AcquireMagickResource(MapResource,length) == MagickFalse)",
      "638:                 RelinquishMagickResource(DiskResource,length);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1033: %",
      "1035: MagickExport MemoryInfo *RelinquishVirtualMemory(MemoryInfo *memory_info)",
      "1037:   assert(memory_info != (MemoryInfo *) NULL);",
      "1038:   assert(memory_info->signature == MagickSignature);",
      "1039:   if (memory_info->blob != (void *) NULL)",
      "",
      "[Removed Lines]",
      "1036: {",
      "",
      "[Added Lines]",
      "1048: {",
      "1049:   assert(memory_info != (MemoryInfo *) NULL);",
      "1050:   assert(memory_info->signature == MagickSignature);",
      "1051:   if (memory_info->blob != (void *) NULL)",
      "",
      "---------------"
    ],
    "MagickCore/studio.h||MagickCore/studio.h": [
      "File: MagickCore/studio.h -> MagickCore/studio.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "46: #if defined(_magickcore_inline) && !defined(inline)",
      "47: # define inline  _magickcore_inline",
      "48: #endif",
      "52: # if defined(__cplusplus) || defined(c_plusplus)",
      "53: #  undef inline",
      "54: # endif",
      "",
      "[Removed Lines]",
      "49: #if defined(_magickcore_restrict) && !defined(restrict)",
      "50: # define restrict  _magickcore_restrict",
      "51: #endif",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "75: #  include <stdlib.h>",
      "76: # endif",
      "77: #endif",
      "78: #if defined(MAGICKCORE_HAVE_STRING_H)",
      "79: # if !defined(STDC_HEADERS) && defined(MAGICKCORE_HAVE_MEMORY_H)",
      "80: #  include <memory.h>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "75: #if defined(_magickcore_restrict) && !defined(restrict)",
      "76: # define restrict  _magickcore_restrict",
      "77: #endif",
      "",
      "---------------"
    ],
    "MagickCore/version.c||MagickCore/version.c": [
      "File: MagickCore/version.c -> MagickCore/version.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "219: %      const char *GetMagickFeatures(void)",
      "220: %",
      "221: %  No parameters are required.",
      "224: MagickExport const char *GetMagickFeatures(void)",
      "225: {",
      "226:   return \"DPC\"",
      "227: #if defined(MAGICKCORE_BUILD_MODULES) || defined(_DLL)",
      "228:   \" Modules\"",
      "229: #endif",
      "230: #if defined(MAGICKCORE_HDRI_SUPPORT)",
      "231:   \" HDRI\"",
      "232: #endif",
      "233: #if defined(MAGICKCORE_OPENCL_SUPPORT)",
      "234:   \" OpenCL\"",
      "235: #endif",
      "",
      "[Removed Lines]",
      "222: %",
      "",
      "[Added Lines]",
      "222: %",
      "224: MagickExport const char *GetMagickFeatures(void)",
      "225: {",
      "226:   return \"DPC\"",
      "231:   \" Cipher\"",
      "232: #endif",
      "233: #if defined(MAGICKCORE_HDRI_SUPPORT)",
      "239: #if defined(MAGICKCORE_OPENCL_SUPPORT)",
      "240:   \" OpenCL\"",
      "241: #endif",
      "",
      "---------------"
    ],
    "MagickCore/version.h||MagickCore/version.h": [
      "File: MagickCore/version.h -> MagickCore/version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "28: #define MagickPackageName \"ImageMagick\"",
      "29: #define MagickCopyright  \"Copyright (C) 1999-2015 ImageMagick Studio LLC\"",
      "31: #define MagickLibVersion  0x700",
      "32: #define MagickLibVersionText  \"7.0.0\"",
      "33: #define MagickLibVersionNumber  0,0,0",
      "",
      "[Removed Lines]",
      "30: #define MagickSVNRevision  \"18658:18662M\"",
      "",
      "[Added Lines]",
      "30: #define MagickSVNRevision  \"18670M\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "48: #define MagickppLibAddendum  \"-0\"",
      "49: #define MagickppLibInterface  0",
      "50: #define MagickppLibMinInterface  0",
      "52: #define MagickChangeDate   \"20120427\"",
      "53: #define MagickAuthoritativeLicense  \\",
      "54:   \"http://www.imagemagick.org/script/license.php\"",
      "55: #define MagickAuthoritativeURL  \"http://www.imagemagick.org\"",
      "57: #define MagickDelegates \"bzlib djvu mpeg fftw fpx fontconfig freetype jbig jng jpeg lcms lzma openexr pango png ps tiff webp x xml zlib\"",
      "58: #define MagickHomeURL  \"file:///usr/local/share/doc/ImageMagick-7/index.html\"",
      "59: #if (MAGICKCORE_QUANTUM_DEPTH == 8)",
      "",
      "[Removed Lines]",
      "51: #define MagickReleaseDate  \"2015-05-26\"",
      "56: #define MagickFeatures \"DPC HDRI OpenMP\"",
      "",
      "[Added Lines]",
      "51: #define MagickReleaseDate  \"2015-05-29\"",
      "56: #define MagickFeatures \"DPC HDRI Cipher OpenMP\"",
      "",
      "---------------"
    ],
    "MagickWand/studio.h||MagickWand/studio.h": [
      "File: MagickWand/studio.h -> MagickWand/studio.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "46: #if defined(_magickcore_inline) && !defined(inline)",
      "47: # define inline _magickcore_inline",
      "48: #endif",
      "52: # if defined(__cplusplus) || defined(c_plusplus)",
      "53: #  undef inline",
      "54: # endif",
      "",
      "[Removed Lines]",
      "49: #if defined(_magickcore_restrict) && !defined(restrict)",
      "50: # define restrict  _magickcore_restrict",
      "51: #endif",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "77: #  include <stdlib.h>",
      "78: # endif",
      "79: #endif",
      "80: #if defined(MAGICKCORE_HAVE_STRING_H)",
      "81: # if !defined(STDC_HEADERS) && defined(MAGICKCORE_HAVE_MEMORY_H)",
      "82: #  include <memory.h>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "77: #if defined(_magickcore_restrict) && !defined(restrict)",
      "78: # define restrict  _magickcore_restrict",
      "79: #endif",
      "",
      "---------------"
    ],
    "coders/icon.c||coders/icon.c": [
      "File: coders/icon.c -> coders/icon.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "183:     size_t",
      "184:       size;",
      "189:     size=(size_t)strtol(p,&q,10);",
      "190:     if (p == q || size < 16 || size > 256)",
      "",
      "[Removed Lines]",
      "186:     while ((isspace((int) ((unsigned char) *p)) != 0))",
      "187:       p++;",
      "",
      "[Added Lines]",
      "186:     while ((isspace((int) ((unsigned char) *p)) != 0))",
      "187:       p++;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "355:         unsigned char",
      "359:           Icon image encoded as a compressed PNG image.",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "coders/pict.c||coders/pict.c": [
      "File: coders/pict.c -> coders/pict.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1637:     source_rectangle;",
      "1639:   register const Quantum",
      "1642:   register ssize_t",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1649:     storage_class;",
      "1651:   ssize_t",
      "1654:   unsigned char",
      "",
      "[Removed Lines]",
      "1652:     y;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1682:     Initialize image info.",
      "1685:   size_rectangle.left=0;",
      "1686:   size_rectangle.bottom=(short) image->rows;",
      "1687:   size_rectangle.right=(short) image->columns;",
      "",
      "[Removed Lines]",
      "1684:   size_rectangle.top=0;",
      "",
      "[Added Lines]",
      "1684:   size_rectangle.top=0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1711:   y_resolution=image->resolution.y != 0.0 ? image->resolution.y :",
      "1712:     DefaultResolution;",
      "1713:   storage_class=image->storage_class;",
      "1715:     storage_class=DirectClass;",
      "1716:   if (storage_class == DirectClass)",
      "1717:     {",
      "",
      "[Removed Lines]",
      "1714:   if (image_info->compression == JPEGCompression)",
      "",
      "[Added Lines]",
      "1714:   if (image_info->compression == JPEGCompression)",
      "",
      "---------------"
    ],
    "configure.ac||configure.ac": [
      "File: configure.ac -> configure.ac",
      "--- Hunk 1 ---",
      "[Context before]",
      "643: if test \"$enable_cipher\" = 'yes'; then",
      "644:     AC_DEFINE(CIPHER_SUPPORT,1,[permit enciphering and deciphering image pixels])",
      "645: fi",
      "647: # Build a zero-configuration version of ImageMagick.",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "645:     MAGICK_FEATURES=\"Cipher $MAGICK_FEATURES\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "654: if test \"$enable_zero_configuration\" = 'yes'; then",
      "655:     AC_DEFINE(ZERO_CONFIGURATION_SUPPORT,1,[Build self-contained, embeddable, zero-configuration ImageMagick])",
      "657: fi",
      "659: # Build a high dynamic range version of ImageMagick.",
      "",
      "[Removed Lines]",
      "656:     MAGICK_FEATURES=\"Zero-Configuration $MAGICK_FEATURES\"",
      "",
      "[Added Lines]",
      "657:     MAGICK_FEATURES=\"Zero-configuration $MAGICK_FEATURES\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3996: if test \"$build_modules\" != 'no'; then",
      "3997:     MAGICK_DEP_LIBS=\"$USER_LIBS $LCMS_LIBS $FREETYPE_LIBS $LQR_LIBS $FFTW_LIBS $FONTCONFIG_LIBS $XEXT_LIBS $IPC_LIBS $X11_LIBS $XT_LIBS $LZMA_LIBS $BZLIB_LIBS $ZLIB_LIBS $LTDL_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"",
      "3998: else",
      "4000: fi",
      "4001: AC_SUBST(MAGICK_DEP_LIBS)",
      "",
      "[Removed Lines]",
      "3999:     MAGICK_DEP_LIBS=\"$USER_LIBS $JBIG_LIBS $LCMS_LIBS $TIFF_LIBS $FREETYPE_LIBS $JPEG_LIBS $GS_LIBS $LQR_LIBS $PNG_LIBS $AUTOTRACE_LIBS $DJVU_LIBS $FFTW_LIBS $FPX_LIBS $FONTCONFIG_LIBS $WEBP_LIBS $WMF_LIBS $DPS_LIBS $XEXT_LIBS $XT_LIBS $IPC_LIBS $X11_LIBS $LZMA_LIBS $BZLIB_LIBS $OPENEXR_LIBS $OPENJPEG_LIBS $PANGO_LIBS $RSVG_LIBS $XML_LIBS $GVC_LIBS $ZLIB_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"",
      "",
      "[Added Lines]",
      "4000:     MAGICK_DEP_LIBS=\"$USER_LIBS $JBIG_LIBS $LCMS_LIBS $TIFF_LIBS $FREETYPE_LIBS $JPEG_LIBS $GS_LIBS $LQR_LIBS $PNG_LIBS $AUTOTRACE_LIBS $DJVU_LIBS $FFTW_LIBS $FPX_LIBS $FONTCONFIG_LIBS $WEBP_LIBS $WMF_LIBS $DPS_LIBS $XEXT_LIBS $XT_LIBS $IPC_LIBS $X11_LIBS $LZMA_LIBS $BZLIB_LIBS $OPENEXR_LIBS $LIBOPENJP2_LIB $PANGO_LIBS $RSVG_LIBS $XML_LIBS $GVC_LIBS $ZLIB_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "146497a94d7dfad98c3e2ad03ce3b099fa17c2bb",
      "candidate_info": {
        "commit_hash": "146497a94d7dfad98c3e2ad03ce3b099fa17c2bb",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/146497a94d7dfad98c3e2ad03ce3b099fa17c2bb",
        "files": [
          "MagickCore/version.h",
          "Makefile.in",
          "PerlMagick/Makefile.PL",
          "configure",
          "m4/ax_append_flag.m4",
          "m4/ax_c___attribute__.m4",
          "m4/ax_check_compile_flag.m4",
          "m4/ax_compiler_vendor.m4",
          "m4/ax_cxx_bool.m4",
          "m4/ax_gcc_archflag.m4",
          "m4/pkg.m4"
        ],
        "message": "",
        "before_after_code_files": [
          "MagickCore/version.h||MagickCore/version.h",
          "Makefile.in||Makefile.in",
          "PerlMagick/Makefile.PL||PerlMagick/Makefile.PL",
          "m4/ax_append_flag.m4||m4/ax_append_flag.m4",
          "m4/ax_c___attribute__.m4||m4/ax_c___attribute__.m4",
          "m4/ax_check_compile_flag.m4||m4/ax_check_compile_flag.m4",
          "m4/ax_compiler_vendor.m4||m4/ax_compiler_vendor.m4",
          "m4/ax_cxx_bool.m4||m4/ax_cxx_bool.m4",
          "m4/ax_gcc_archflag.m4||m4/ax_gcc_archflag.m4",
          "m4/pkg.m4||m4/pkg.m4"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MagickCore/version.h||MagickCore/version.h"
          ],
          "candidate": [
            "MagickCore/version.h||MagickCore/version.h"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/version.h||MagickCore/version.h": [
          "File: MagickCore/version.h -> MagickCore/version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define MagickPackageName \"ImageMagick\"",
          "29: #define MagickCopyright  \"Copyright (C) 1999-2015 ImageMagick Studio LLC\"",
          "31: #define MagickLibVersion  0x700",
          "32: #define MagickLibVersionText  \"7.0.0\"",
          "33: #define MagickLibVersionNumber  0,0,0",
          "",
          "[Removed Lines]",
          "30: #define MagickSVNRevision  \"18557:18574M\"",
          "",
          "[Added Lines]",
          "30: #define MagickSVNRevision  \"18557:18577M\"",
          "",
          "---------------"
        ],
        "Makefile.in||Makefile.in": [
          "File: Makefile.in -> Makefile.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "2802: PERSISTINCLUDE_DIR = @PERSISTINCLUDE_DIR@",
          "2803: PGPDecodeDelegate = @PGPDecodeDelegate@",
          "2804: PKG_CONFIG = @PKG_CONFIG@",
          "2805: PNG_LIBS = @PNG_LIBS@",
          "2806: POVDelegate = @POVDelegate@",
          "2807: POW_LIB = @POW_LIB@",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2805: PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@",
          "2806: PKG_CONFIG_PATH = @PKG_CONFIG_PATH@",
          "",
          "---------------"
        ],
        "PerlMagick/Makefile.PL||PerlMagick/Makefile.PL": [
          "File: PerlMagick/Makefile.PL -> PerlMagick/Makefile.PL",
          "--- Hunk 1 ---",
          "[Context before]",
          "163: # defaults for LIBS & INC & CCFLAGS params that we later pass to Writemakefile",
          "164: my $INC_magick = '-I../ -I.. -pthread -I/usr/include/pango-1.0 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/libdrm -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/libpng16 -DMAGICKCORE_HDRI_ENABLE=1 -DMAGICKCORE_QUANTUM_DEPTH=16 -I/usr/include/libxml2 -I\"' . $Config{'usrinc'} . '/ImageMagick\"';",
          "165: my $LIBS_magick = '-L../MagickCore/.libs -lMagickCore-7.Q16HDRI -lperl -lm';",
          "167: my $LDFLAGS_magick   = \"-L../MagickCore/.libs -lMagickCore-7.Q16HDRI $Config{'ldflags'} \";",
          "168: my $LDDLFLAGS_magick = \"-L../MagickCore/.libs -lMagickCore-7.Q16HDRI $Config{'lddlflags'} \";",
          "",
          "[Removed Lines]",
          "166: my $CCFLAGS_magick = \"$Config{'ccflags'} -pthread -I/usr/include/OpenEXR -I/usr/include/libdrm -I/usr/include/freetype2 -I/usr/include/libpng16 -fopenmp -g -O2 -Wall -mtune=corei7-avx -fexceptions -pthread -DMAGICKCORE_HDRI_ENABLE=1 -DMAGICKCORE_QUANTUM_DEPTH=16\";",
          "",
          "[Added Lines]",
          "166: my $CCFLAGS_magick = \"$Config{'ccflags'} -pthread -I/usr/include/OpenEXR -I/usr/include/libdrm -I/usr/include/freetype2 -I/usr/include/libpng16 -fopenmp -g -O2 -Wall -mtune=sandybridge -fexceptions -pthread -DMAGICKCORE_HDRI_ENABLE=1 -DMAGICKCORE_QUANTUM_DEPTH=16\";",
          "",
          "---------------"
        ],
        "m4/ax_append_flag.m4||m4/ax_append_flag.m4": [
          "File: m4/ax_append_flag.m4 -> m4/ax_append_flag.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "49: #   modified version of the Autoconf Macro, you may extend this special",
          "50: #   exception to the GPL to apply to your modified version as well.",
          "54: AC_DEFUN([AX_APPEND_FLAG],",
          "68: AS_VAR_POPDEF([FLAGS])dnl",
          "69: ])dnl AX_APPEND_FLAG",
          "",
          "[Removed Lines]",
          "52: #serial 2",
          "55: [AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX",
          "56: AS_VAR_PUSHDEF([FLAGS], [m4_default($2,_AC_LANG_PREFIX[FLAGS])])dnl",
          "57: AS_VAR_SET_IF(FLAGS,",
          "58:   [case \" AS_VAR_GET(FLAGS) \" in",
          "60:       AC_RUN_LOG([: FLAGS already contains $1])",
          "61:       ;;",
          "63:       AC_RUN_LOG([: FLAGS=\"$FLAGS $1\"])",
          "64:       AS_VAR_SET(FLAGS, [\"AS_VAR_GET(FLAGS) $1\"])",
          "65:       ;;",
          "66:    esac],",
          "67:   [AS_VAR_SET(FLAGS,[\"$1\"])])",
          "",
          "[Added Lines]",
          "52: #serial 5",
          "55: [dnl",
          "56: AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_SET_IF",
          "57: AS_VAR_PUSHDEF([FLAGS], [m4_default($2,_AC_LANG_PREFIX[FLAGS])])",
          "58: AS_VAR_SET_IF(FLAGS,[",
          "59:   AS_CASE([\" AS_VAR_GET(FLAGS) \"],",
          "60:     [*\" $1 \"*], [AC_RUN_LOG([: FLAGS already contains $1])],",
          "61:     [",
          "62:      AS_VAR_APPEND(FLAGS,\" $1\")",
          "63:      AC_RUN_LOG([: FLAGS=\"$FLAGS\"])",
          "64:     ])",
          "65:   ],",
          "66:   [",
          "67:   AS_VAR_SET(FLAGS,[$1])",
          "68:   AC_RUN_LOG([: FLAGS=\"$FLAGS\"])",
          "69:   ])",
          "",
          "---------------"
        ],
        "m4/ax_c___attribute__.m4||m4/ax_c___attribute__.m4": [
          "File: m4/ax_c___attribute__.m4 -> m4/ax_c___attribute__.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:     [AC_COMPILE_IFELSE(",
          "51:       [AC_LANG_PROGRAM(",
          "52:  [[#include <stdlib.h>",
          "54:    static void",
          "55:    foo(void) {",
          "56:        exit(1);",
          "",
          "[Removed Lines]",
          "53:    static void foo(void) __attribute__ ((__unused__));",
          "",
          "[Added Lines]",
          "53:    static void foo(void) __attribute__ ((unused));",
          "",
          "---------------"
        ],
        "m4/ax_check_compile_flag.m4||m4/ax_check_compile_flag.m4": [
          "File: m4/ax_check_compile_flag.m4 -> m4/ax_check_compile_flag.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "55: #   modified version of the Autoconf Macro, you may extend this special",
          "56: #   exception to the GPL to apply to your modified version as well.",
          "60: AC_DEFUN([AX_CHECK_COMPILE_FLAG],",
          "62: AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl",
          "63: AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [",
          "64:   ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS",
          "",
          "[Removed Lines]",
          "58: #serial 3",
          "61: [AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX",
          "",
          "[Added Lines]",
          "58: #serial 4",
          "61: [AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "67:     [AS_VAR_SET(CACHEVAR,[yes])],",
          "68:     [AS_VAR_SET(CACHEVAR,[no])])",
          "69:   _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])",
          "71:   [m4_default([$2], :)],",
          "72:   [m4_default([$3], :)])",
          "73: AS_VAR_POPDEF([CACHEVAR])dnl",
          "",
          "[Removed Lines]",
          "70: AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],",
          "",
          "[Added Lines]",
          "70: AS_VAR_IF(CACHEVAR,yes,",
          "",
          "---------------"
        ],
        "m4/ax_compiler_vendor.m4||m4/ax_compiler_vendor.m4": [
          "File: m4/ax_compiler_vendor.m4 -> m4/ax_compiler_vendor.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: #   modified version of the Autoconf Macro, you may extend this special",
          "45: #   exception to the GPL to apply to your modified version as well.",
          "49: AC_DEFUN([AX_COMPILER_VENDOR],",
          "50: [AC_CACHE_CHECK([for _AC_LANG compiler vendor], ax_cv_[]_AC_LANG_ABBREV[]_compiler_vendor,",
          "51:   [# note: don't check for gcc first since some other compilers define __GNUC__",
          "52:   vendors=\"intel:     __ICC,__ECC,__INTEL_COMPILER",
          "53:            ibm:       __xlc__,__xlC__,__IBMC__,__IBMCPP__",
          "54:            pathscale: __PATHCC__,__PATHSCALE__",
          "55:            clang:     __clang__",
          "56:            fujitsu:   __FUJITSU",
          "57:            gnu:       __GNUC__",
          "58:            sun:       __SUNPRO_C,__SUNPRO_CC",
          "59:            hp:        __HP_cc,__HP_aCC",
          "60:            dec:       __DECC,__DECCXX,__DECC_VER,__DECCXX_VER",
          "62:            comeau:    __COMO__",
          "64:            kai:       __KCC",
          "65:            lcc:       __LCC__",
          "66:            sgi:       __sgi,sgi",
          "",
          "[Removed Lines]",
          "47: #serial 12",
          "61:            borland:   __BORLANDC__,__TURBOC__",
          "63:            cray:      _CRAYC",
          "",
          "[Added Lines]",
          "47: #serial 15",
          "51:   dnl Please add if possible support to ax_compiler_version.m4",
          "57:            cray:      _CRAYC",
          "63:            borland:   __BORLANDC__,__CODEGEARC__,__TURBOC__",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68:            metrowerks: __MWERKS__",
          "69:            watcom:    __WATCOMC__",
          "70:            portland:  __PGI",
          "71:            unknown:   UNKNOWN\"",
          "72:   for ventest in $vendors; do",
          "73:     case $ventest in",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72:     tcc:       __TINYC__",
          "",
          "---------------"
        ],
        "m4/ax_cxx_bool.m4||m4/ax_cxx_bool.m4": [
          "File: m4/ax_cxx_bool.m4 -> m4/ax_cxx_bool.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: #   and this notice are preserved. This file is offered as-is, without any",
          "24: #   warranty.",
          "28: AU_ALIAS([AC_CXX_BOOL], [AX_CXX_BOOL])",
          "29: AC_DEFUN([AX_CXX_BOOL],",
          "45: ])",
          "",
          "[Removed Lines]",
          "26: #serial 6",
          "30: [AC_CACHE_CHECK(whether the compiler recognizes bool as a built-in type,",
          "31: ax_cv_cxx_bool,",
          "32: [AC_LANG_SAVE",
          "33:  AC_LANG_CPLUSPLUS",
          "34:  AC_TRY_COMPILE([",
          "35: int f(int  x){return 1;}",
          "36: int f(char x){return 1;}",
          "37: int f(bool x){return 1;}",
          "38: ],[bool b = true; return f(b);],",
          "39:  ax_cv_cxx_bool=yes, ax_cv_cxx_bool=no)",
          "40:  AC_LANG_RESTORE",
          "41: ])",
          "42: if test \"$ax_cv_cxx_bool\" = yes; then",
          "43:   AC_DEFINE(HAVE_BOOL,,[define if bool is a built-in type])",
          "44: fi",
          "",
          "[Added Lines]",
          "26: #serial 7",
          "30: [dnl",
          "31:  AC_CACHE_CHECK(whether the compiler recognizes bool as a built-in type,",
          "32:    ax_cv_cxx_bool,",
          "33:    [dnl",
          "34:      AC_LANG_PUSH([C++])",
          "35:      AC_COMPILE_IFELSE([dnl",
          "36:        AC_LANG_PROGRAM([int f(int  x){return 1;}",
          "37:                         int f(char x){return 1;}",
          "38:                         int f(bool x){return 1;}],",
          "39:                        [bool b = true; return f(b);])],",
          "40:        ax_cv_cxx_bool=yes, ax_cv_cxx_bool=no)",
          "41:      AC_LANG_POP([C++])",
          "42:   ])",
          "43:   AS_IF([test \"X$ax_cv_cxx_bool\" = Xyes],",
          "44:         [AC_DEFINE(HAVE_BOOL,,[define if bool is a built-in type])])",
          "",
          "---------------"
        ],
        "m4/ax_gcc_archflag.m4||m4/ax_gcc_archflag.m4": [
          "File: m4/ax_gcc_archflag.m4 -> m4/ax_gcc_archflag.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: #",
          "37: #   Copyright (c) 2008 Steven G. Johnson <stevenj@alum.mit.edu>",
          "38: #   Copyright (c) 2008 Matteo Frigo",
          "40: #",
          "41: #   This program is free software: you can redistribute it and/or modify it",
          "42: #   under the terms of the GNU General Public License as published by the",
          "",
          "[Removed Lines]",
          "39: #   Copyright (c) 2012 Tsukasa Oi",
          "",
          "[Added Lines]",
          "39: #   Copyright (c) 2014 Tsukasa Oi",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64: #   modified version of the Autoconf Macro, you may extend this special",
          "65: #   exception to the GPL to apply to your modified version as well.",
          "69: AC_DEFUN([AX_GCC_ARCHFLAG],",
          "70: [AC_REQUIRE([AC_PROG_CC])",
          "71: AC_REQUIRE([AC_CANONICAL_HOST])",
          "72: AC_REQUIRE([AC_PROG_SED])",
          "74: AC_ARG_WITH(gcc-arch, [AS_HELP_STRING([--with-gcc-arch=<arch>], [use architecture <arch> for gcc -march/-mtune, instead of guessing])],",
          "75:  ax_gcc_arch=$withval, ax_gcc_arch=yes)",
          "",
          "[Removed Lines]",
          "67: #serial 14",
          "",
          "[Added Lines]",
          "67: #serial 17",
          "73: AC_REQUIRE([AX_COMPILER_VENDOR])",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "90:      AX_GCC_X86_CPUID(0)",
          "91:      AX_GCC_X86_CPUID(1)",
          "92:      case $ax_cv_gcc_x86_cpuid_0 in",
          "94:           case $ax_cv_gcc_x86_cpuid_1 in",
          "115:           esac ;;",
          "117:           case $ax_cv_gcc_x86_cpuid_1 in",
          "139:           esac ;;",
          "141:     case $ax_cv_gcc_x86_cpuid_1 in",
          "146:     esac ;;",
          "147:      esac",
          "148:      if test x\"$ax_gcc_arch\" = x; then # fallback",
          "",
          "[Removed Lines]",
          "110:   case $host_cpu in",
          "111:            x86_64*) ax_gcc_arch=\"nocona pentium4 pentiumpro\" ;;",
          "113:          esac ;;",
          "126:         AX_GCC_X86_CPUID(0x80000006) # L2 cache size",
          "127:         case $ax_cv_gcc_x86_cpuid_0x80000006 in",
          "129:    ax_gcc_arch=\"athlon-xp athlon-4 athlon k7\" ;;",
          "131:         esac ;;",
          "",
          "[Added Lines]",
          "115:      # fallback",
          "137:      # fallback",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "198: fi # guess arch",
          "200: if test \"x$ax_gcc_arch\" != x -a \"x$ax_gcc_arch\" != xno; then",
          "212:   done",
          "213:   test \"x$ax_cv_gcc_archflag\" = xunknown || break",
          "214: done",
          "",
          "[Removed Lines]",
          "201: for arch in $ax_gcc_arch; do",
          "202:   if test \"x[]m4_default([$1],yes)\" = xyes; then # if we require portable code",
          "203:     flags=\"-mtune=$arch\"",
          "204:     # -mcpu=$arch and m$arch generate nonportable code on every arch except",
          "205:     # x86.  And some other arches (e.g. Alpha) don't accept -mtune.  Grrr.",
          "206:     case $host_cpu in i*86|x86_64*) flags=\"$flags -mcpu=$arch -m$arch\";; esac",
          "207:   else",
          "208:     flags=\"-march=$arch -mcpu=$arch -m$arch\"",
          "209:   fi",
          "210:   for flag in $flags; do",
          "211:     AX_CHECK_COMPILE_FLAG($flag, [ax_cv_gcc_archflag=$flag; break])",
          "",
          "[Added Lines]",
          "209: if test \"x[]m4_default([$1],yes)\" = xyes; then # if we require portable code",
          "210:   flag_prefixes=\"-mtune=\"",
          "211:   if test \"x$ax_cv_[]_AC_LANG_ABBREV[]_compiler_vendor\" = xclang; then flag_prefixes=\"-march=\"; fi",
          "212:   # -mcpu=$arch and m$arch generate nonportable code on every arch except",
          "213:   # x86.  And some other arches (e.g. Alpha) don't accept -mtune.  Grrr.",
          "214:   case $host_cpu in i*86|x86_64*|amd64*) flag_prefixes=\"$flag_prefixes -mcpu= -m\";; esac",
          "215: else",
          "216:   flag_prefixes=\"-march= -mcpu= -m\"",
          "217: fi",
          "218: for flag_prefix in $flag_prefixes; do",
          "219:   for arch in $ax_gcc_arch; do",
          "220:     flag=\"$flag_prefix$arch\"",
          "221:     AX_CHECK_COMPILE_FLAG($flag, [if test \"x$ax_cv_[]_AC_LANG_ABBREV[]_compiler_vendor\" = xclang; then",
          "222:       if test \"x[]m4_default([$1],yes)\" = xyes; then",
          "223:  if test \"x$flag\" = \"x-march=$arch\"; then flag=-mtune=$arch; fi",
          "224:       fi",
          "225:     fi; ax_cv_gcc_archflag=$flag; break])",
          "",
          "---------------"
        ],
        "m4/pkg.m4||m4/pkg.m4": [
          "File: m4/pkg.m4 -> m4/pkg.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # pkg.m4 - Macros to locate and utilise pkg-config.            -*- Autoconf -*-",
          "2: #",
          "3: # Copyright \u00a9 2004 Scott James Remnant <scott@netsplit.com>.",
          "4: #",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: # serial 1 (pkg-config-0.24)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25: # ----------------------------------",
          "26: AC_DEFUN([PKG_PROG_PKG_CONFIG],",
          "27: [m4_pattern_forbid([^_?PKG_[A-Z_]+$])",
          "30: if test \"x$ac_cv_env_PKG_CONFIG_set\" != \"xset\"; then",
          "31:  AC_PATH_TOOL([PKG_CONFIG], [pkg-config])",
          "32: fi",
          "",
          "[Removed Lines]",
          "28: m4_pattern_allow([^PKG_CONFIG(_PATH)?$])",
          "29: AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])dnl",
          "",
          "[Added Lines]",
          "29: m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])",
          "30: m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])",
          "31: AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])",
          "32: AC_ARG_VAR([PKG_CONFIG_PATH], [directories to add to pkg-config's search path])",
          "33: AC_ARG_VAR([PKG_CONFIG_LIBDIR], [path overriding pkg-config's built-in search path])",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "48: # Check to see whether a particular set of modules exists.  Similar",
          "49: # to PKG_CHECK_MODULES(), but does not set variables or print errors.",
          "50: #",
          "55: # --------------------------------------------------------------",
          "56: AC_DEFUN([PKG_CHECK_EXISTS],",
          "57: [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl",
          "58: if test -n \"$PKG_CONFIG\" && \\",
          "59:     AC_RUN_LOG([$PKG_CONFIG --exists --print-errors \"$1\"]); then",
          "61: m4_ifvaln([$3], [else",
          "62:   $3])dnl",
          "63: fi])",
          "66: # _PKG_CONFIG([VARIABLE], [COMMAND], [MODULES])",
          "67: # ---------------------------------------------",
          "68: m4_define([_PKG_CONFIG],",
          "",
          "[Removed Lines]",
          "51: #",
          "52: # Similar to PKG_CHECK_MODULES, make sure that the first instance of",
          "53: # this or PKG_CHECK_MODULES is called, or make sure to call",
          "54: # PKG_CHECK_EXISTS manually",
          "60:   m4_ifval([$2], [$2], [:])",
          "",
          "[Added Lines]",
          "55: # Please remember that m4 expands AC_REQUIRE([PKG_PROG_PKG_CONFIG])",
          "56: # only at the first occurence in configure.ac, so if the first place",
          "57: # it's called might be skipped (such as if it is within an \"if\", you",
          "58: # have to call PKG_CHECK_EXISTS manually",
          "64:   m4_default([$2], [:])",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "70:     pkg_cv_[]$1=\"$$1\"",
          "71:  elif test -n \"$PKG_CONFIG\"; then",
          "72:     PKG_CHECK_EXISTS([$3],",
          "74:        [pkg_failed=yes])",
          "75:  else",
          "76:     pkg_failed=untried",
          "",
          "[Removed Lines]",
          "73:                      [pkg_cv_[]$1=`$PKG_CONFIG --[]$2 \"$3\" 2>/dev/null`],",
          "",
          "[Added Lines]",
          "76:                      [pkg_cv_[]$1=`$PKG_CONFIG --[]$2 \"$3\" 2>/dev/null`",
          "77:         test \"x$?\" != \"x0\" && pkg_failed=yes ],",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "115: See the pkg-config man page for more details.])",
          "117: if test $pkg_failed = yes; then",
          "118:         _PKG_SHORT_ERRORS_SUPPORTED",
          "119:         if test $_pkg_short_errors_supported = yes; then",
          "121:         else",
          "123:         fi",
          "124:  # Put the nasty error message in config.log where it belongs",
          "125:  echo \"$$1[]_PKG_ERRORS\" >&AS_MESSAGE_LOG_FD",
          "128: [Package requirements ($2) were not met:",
          "130: $$1_PKG_ERRORS",
          "",
          "[Removed Lines]",
          "120:          $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors \"$2\" 2>&1`",
          "122:          $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors \"$2\" 2>&1`",
          "127:  ifelse([$4], , [AC_MSG_ERROR(dnl",
          "",
          "[Added Lines]",
          "122:     AC_MSG_RESULT([no])",
          "125:          $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs \"$2\" 2>&1`",
          "127:          $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs \"$2\" 2>&1`",
          "132:  m4_default([$4], [AC_MSG_ERROR(",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "132: Consider adjusting the PKG_CONFIG_PATH environment variable if you",
          "133: installed software in a non-standard prefix.",
          "139: elif test $pkg_failed = untried; then",
          "141: [The pkg-config script could not be found or is too old.  Make sure it",
          "142: is in your PATH or set the PKG_CONFIG environment variable to the full",
          "143: path to pkg-config.",
          "145: _PKG_TEXT",
          "149: else",
          "150:  $1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS",
          "151:  $1[]_LIBS=$pkg_cv_[]$1[]_LIBS",
          "152:         AC_MSG_RESULT([yes])",
          "154: fi[]dnl",
          "155: ])# PKG_CHECK_MODULES",
          "",
          "[Removed Lines]",
          "135: _PKG_TEXT",
          "136: ])],",
          "137:   [AC_MSG_RESULT([no])",
          "138:                 $4])",
          "140:  ifelse([$4], , [AC_MSG_FAILURE(dnl",
          "147: To get pkg-config, see <http://pkg-config.freedesktop.org/>.])],",
          "148:   [$4])",
          "153:  ifelse([$3], , :, [$3])",
          "",
          "[Added Lines]",
          "140: _PKG_TEXT])[]dnl",
          "141:         ])",
          "143:       AC_MSG_RESULT([no])",
          "144:  m4_default([$4], [AC_MSG_FAILURE(",
          "151: To get pkg-config, see <http://pkg-config.freedesktop.org/>.])[]dnl",
          "152:         ])",
          "157:  $3",
          "162: # PKG_INSTALLDIR(DIRECTORY)",
          "163: # -------------------------",
          "164: # Substitutes the variable pkgconfigdir as the location where a module",
          "165: # should install pkg-config .pc files. By default the directory is",
          "166: # $libdir/pkgconfig, but the default can be changed by passing",
          "167: # DIRECTORY. The user can override through the --with-pkgconfigdir",
          "168: # parameter.",
          "169: AC_DEFUN([PKG_INSTALLDIR],",
          "170: [m4_pushdef([pkg_default], [m4_default([$1], ['${libdir}/pkgconfig'])])",
          "171: m4_pushdef([pkg_description],",
          "172:     [pkg-config installation directory @<:@]pkg_default[@:>@])",
          "173: AC_ARG_WITH([pkgconfigdir],",
          "174:     [AS_HELP_STRING([--with-pkgconfigdir], pkg_description)],,",
          "175:     [with_pkgconfigdir=]pkg_default)",
          "176: AC_SUBST([pkgconfigdir], [$with_pkgconfigdir])",
          "177: m4_popdef([pkg_default])",
          "178: m4_popdef([pkg_description])",
          "179: ]) dnl PKG_INSTALLDIR",
          "182: # PKG_NOARCH_INSTALLDIR(DIRECTORY)",
          "183: # -------------------------",
          "184: # Substitutes the variable noarch_pkgconfigdir as the location where a",
          "185: # module should install arch-independent pkg-config .pc files. By",
          "186: # default the directory is $datadir/pkgconfig, but the default can be",
          "187: # changed by passing DIRECTORY. The user can override through the",
          "188: # --with-noarch-pkgconfigdir parameter.",
          "189: AC_DEFUN([PKG_NOARCH_INSTALLDIR],",
          "190: [m4_pushdef([pkg_default], [m4_default([$1], ['${datadir}/pkgconfig'])])",
          "191: m4_pushdef([pkg_description],",
          "192:     [pkg-config arch-independent installation directory @<:@]pkg_default[@:>@])",
          "193: AC_ARG_WITH([noarch-pkgconfigdir],",
          "194:     [AS_HELP_STRING([--with-noarch-pkgconfigdir], pkg_description)],,",
          "195:     [with_noarch_pkgconfigdir=]pkg_default)",
          "196: AC_SUBST([noarch_pkgconfigdir], [$with_noarch_pkgconfigdir])",
          "197: m4_popdef([pkg_default])",
          "198: m4_popdef([pkg_description])",
          "199: ]) dnl PKG_NOARCH_INSTALLDIR",
          "202: # PKG_CHECK_VAR(VARIABLE, MODULE, CONFIG-VARIABLE,",
          "203: # [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])",
          "204: # -------------------------------------------",
          "205: # Retrieves the value of the pkg-config variable for the given module.",
          "206: AC_DEFUN([PKG_CHECK_VAR],",
          "207: [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl",
          "208: AC_ARG_VAR([$1], [value of $3 for $2, overriding pkg-config])dnl",
          "210: _PKG_CONFIG([$1], [variable=\"][$3][\"], [$2])",
          "211: AS_VAR_COPY([$1], [pkg_cv_][$1])",
          "213: AS_VAR_IF([$1], [\"\"], [$5], [$4])dnl",
          "214: ])# PKG_CHECK_VAR",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "22007ae1964aac7c5f776f6db6ff9f58ada776ef",
      "candidate_info": {
        "commit_hash": "22007ae1964aac7c5f776f6db6ff9f58ada776ef",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/22007ae1964aac7c5f776f6db6ff9f58ada776ef",
        "files": [
          "MagickCore/version.h",
          "configure",
          "configure.ac"
        ],
        "message": "",
        "before_after_code_files": [
          "MagickCore/version.h||MagickCore/version.h",
          "configure.ac||configure.ac"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MagickCore/version.h||MagickCore/version.h",
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "MagickCore/version.h||MagickCore/version.h",
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/version.h||MagickCore/version.h": [
          "File: MagickCore/version.h -> MagickCore/version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define MagickPackageName \"ImageMagick\"",
          "29: #define MagickCopyright  \"Copyright (C) 1999-2014 ImageMagick Studio LLC\"",
          "31: #define MagickLibVersion  0x700",
          "32: #define MagickLibVersionText  \"7.0.0\"",
          "33: #define MagickLibVersionNumber  1,0,0",
          "",
          "[Removed Lines]",
          "30: #define MagickSVNRevision  \"16921:16936M\"",
          "",
          "[Added Lines]",
          "30: #define MagickSVNRevision  \"16921:16940M\"",
          "",
          "---------------"
        ],
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "1445:   AC_MSG_RESULT()",
          "1446:   failed=0",
          "1447:   passed=0",
          "1450:   AC_MSG_CHECKING(if jemalloc memory allocation library is complete)",
          "1451:   if test $passed -gt 0; then",
          "1452:     if test $failed -gt 0; then",
          "",
          "[Removed Lines]",
          "1448:   AC_CHECK_HEADER([jemalloc/jemalloc.h],[passed=`expr $passed + 1`,failed=`expr $failed + 1`])",
          "1449:   AC_CHECK_LIB(jemalloc,[malloc_stats_print],[passed=`expr $passed + 1`,failed=`expr $failed + 1`],)",
          "",
          "[Added Lines]",
          "1448:   AC_CHECK_HEADER([jemalloc/jemalloc.h],[passed=`expr $passed + 1`],[failed=`expr $failed + 1`])",
          "1449:   AC_CHECK_LIB(jemalloc,[malloc_stats_print],[passed=`expr $passed + 1`],[failed=`expr $failed + 1`],)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2174484dfa68a594e2f9ad17f46217b6120db18d",
      "candidate_info": {
        "commit_hash": "2174484dfa68a594e2f9ad17f46217b6120db18d",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/2174484dfa68a594e2f9ad17f46217b6120db18d",
        "files": [
          "MagickCore/memory.c",
          "coders/pict.c",
          "coders/rle.c",
          "coders/sun.c",
          "coders/viff.c"
        ],
        "message": "https://github.com/ImageMagick/ImageMagick/issues/82 https://github.com/ImageMagick/ImageMagick/issues/81 https://github.com/ImageMagick/ImageMagick/issues/80 https://github.com/ImageMagick/ImageMagick/issues/77",
        "before_after_code_files": [
          "MagickCore/memory.c||MagickCore/memory.c",
          "coders/pict.c||coders/pict.c",
          "coders/rle.c||coders/rle.c",
          "coders/sun.c||coders/sun.c",
          "coders/viff.c||coders/viff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MagickCore/memory.c||MagickCore/memory.c",
            "coders/pict.c||coders/pict.c"
          ],
          "candidate": [
            "MagickCore/memory.c||MagickCore/memory.c",
            "coders/pict.c||coders/pict.c"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/memory.c||MagickCore/memory.c": [
          "File: MagickCore/memory.c -> MagickCore/memory.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "233: %      void *AcquireAlignedMemory(const size_t count,const size_t quantum)",
          "234: %",
          "235: %  A description of each parameter follows:",
          "236: %",
          "237: %    o count: the number of quantum elements to allocate.",
          "238: %",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "236: %",
          "237: %    o count: the number of quantum elements to allocate.",
          "238: %",
          "239: %    o quantum: the number of bytes in each quantum.",
          "240: %",
          "242: static MagickBooleanType CheckMemoryOverflow(const size_t count,",
          "243:   const size_t quantum)",
          "244: {",
          "245:   size_t",
          "246:     size;",
          "248:   size=count*quantum;",
          "249:   if ((count == 0) || (quantum != (size/count)))",
          "250:     {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "247:   size_t",
          "248:     alignment,",
          "255:   size=count*quantum;",
          "256:   if ((count == 0) || (quantum != (size/count)))",
          "257:     {",
          "258:       errno=ENOMEM;",
          "259:       return((void *) NULL);",
          "",
          "[Removed Lines]",
          "249:     extent,",
          "250:     size;",
          "252:   void",
          "",
          "[Added Lines]",
          "264:     extent,",
          "265:     size;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "528: %      void *AcquireQuantumMemory(const size_t count,const size_t quantum)",
          "529: %",
          "530: %  A description of each parameter follows:",
          "532: %    o count: the number of quantum elements to allocate.",
          "540:     size;",
          "542:   size=count*quantum;",
          "543:   if ((count == 0) || (quantum != (size/count)))",
          "",
          "[Removed Lines]",
          "531: %",
          "533: %",
          "534: %    o quantum: the number of bytes in each quantum.",
          "535: %",
          "537: MagickExport void *AcquireQuantumMemory(const size_t count,const size_t quantum)",
          "538: {",
          "539:   size_t",
          "",
          "[Added Lines]",
          "543: %",
          "545: %",
          "546: %    o quantum: the number of bytes in each quantum.",
          "547: %",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "571: %",
          "572: %    o count: the number of quantum elements to allocate.",
          "573: %",
          "575: %",
          "583:   size_t",
          "584:     length;",
          "586:   length=count*quantum;",
          "588:     {",
          "590:       return((MemoryInfo *) NULL);",
          "592:   memory_info=(MemoryInfo *) MagickAssumeAligned(AcquireAlignedMemory(1,",
          "593:     sizeof(*memory_info)));",
          "594:   if (memory_info == (MemoryInfo *) NULL)",
          "595:     ThrowFatalException(ResourceLimitFatalError,\"MemoryAllocationFailed\");",
          "596:   (void) ResetMagickMemory(memory_info,0,sizeof(*memory_info));",
          "597:   memory_info->length=length;",
          "600:     {",
          "601:       memory_info->blob=AcquireAlignedMemory(1,length);",
          "602:       if (memory_info->blob != NULL)",
          "603:         {",
          "605:           return(memory_info);",
          "606:         }",
          "607:     }",
          "608:   RelinquishMagickResource(MemoryResource,length);",
          "609:   if (AcquireMagickResource(MapResource,length) != MagickFalse)",
          "612:         Heap memory failed, try anonymous memory mapping.",
          "",
          "[Removed Lines]",
          "574: %    o quantum: the number of bytes in each quantum.",
          "577: MagickExport MemoryInfo *AcquireVirtualMemory(const size_t count,",
          "578:   const size_t quantum)",
          "579: {",
          "580:   MemoryInfo",
          "587:   if ((count == 0) || (quantum != (length/count)))",
          "589:       errno=ENOMEM;",
          "591:     }",
          "598:   memory_info->signature=MagickCoreSignature;",
          "599:   if (AcquireMagickResource(MemoryResource,length) != MagickFalse)",
          "604:           memory_info->type=AlignedVirtualMemory;",
          "610:     {",
          "",
          "[Added Lines]",
          "583: %    o quantum: the number of bytes in each quantum.",
          "586: MagickExport MemoryInfo *AcquireVirtualMemory(const size_t count,",
          "592:   size_t",
          "593:     extent;",
          "595:   if (CheckMemoryOverflow(count,quantum) != MagickFalse)",
          "597:   memory_info=(MemoryInfo *) MagickAssumeAligned(AcquireAlignedMemory(1,",
          "604:   memory_info->signature=MagickCoreSignature;",
          "605:   if (AcquireMagickResource(MemoryResource,extent) != MagickFalse)",
          "610:           memory_info->type=AlignedVirtualMemory;",
          "616:     {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "620:       if (AcquireMagickResource(DiskResource,length) != MagickFalse)",
          "621:         {",
          "622:           int",
          "627:             If the MapResource request failed, there is no point in trying",
          "628:             file-backed memory mapping.",
          "",
          "[Removed Lines]",
          "623:             file;",
          "626:             Anonymous memory mapping failed, try file-backed memory mapping.",
          "",
          "[Added Lines]",
          "629:             file;",
          "632:             Anonymous memory mapping failed, try file-backed memory mapping.",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "639:                       (void) close(file);",
          "640:                       memory_info->type=MapVirtualMemory;",
          "641:                       return(memory_info);",
          "643:                 }",
          "645:                 File-backed memory mapping failed, delete the temporary file.",
          "648:               (void) RelinquishUniqueFileResource(memory_info->filename);",
          "650:             }",
          "",
          "[Removed Lines]",
          "642:                     }",
          "647:               (void) close(file);",
          "",
          "[Added Lines]",
          "648:                     }",
          "653:               (void) close(file);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1208: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",
          "1209: %",
          "1210: %  ResizeQuantumMemory() changes the size of the memory and returns a pointer",
          "1212: %  lesser of the new and old sizes.",
          "1215: %",
          "1216: %      void *ResizeQuantumMemory(void *memory,const size_t count,",
          "1218: %",
          "1219: %  A description of each parameter follows:",
          "1221: %    o memory: A pointer to a memory allocation.",
          "1222: %",
          "1223: %    o count: the number of quantum elements to allocate.",
          "1224: %",
          "",
          "[Removed Lines]",
          "1211: %  to the (possibly moved) block.  The contents will be unchanged up to the",
          "1213: %",
          "1214: %  The format of the ResizeQuantumMemory method is:",
          "1217: %        const size_t quantum)",
          "1220: %",
          "",
          "[Added Lines]",
          "1217: %  to the (possibly moved) block.  The contents will be unchanged up to the",
          "1219: %",
          "1224: %",
          "1225: %  A description of each parameter follows:",
          "",
          "---------------"
        ],
        "coders/pict.c||coders/pict.c": [
          "File: coders/pict.c -> coders/pict.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2003:               green=scanline+2*image->columns;",
          "2004:               blue=scanline+3*image->columns;",
          "2005:             }",
          "",
          "[Removed Lines]",
          "2006:           for (x=0; x < (ssize_t) image->columns; x++)",
          "2007:           {",
          "",
          "[Added Lines]",
          "2006:           for (x=0; x < (ssize_t) image->columns; x++)",
          "",
          "---------------"
        ],
        "coders/rle.c||coders/rle.c": [
          "File: coders/rle.c -> coders/rle.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "314:     number_pixels=(MagickSizeType) image->columns*image->rows;",
          "315:     number_planes_filled=(number_planes % 2 == 0) ? number_planes :",
          "316:       number_planes+1;",
          "319:       ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
          "320:     pixel_info_length=image->columns*image->rows*number_planes_filled;",
          "321:     pixel_info=AcquireVirtualMemory(pixel_info_length,sizeof(*pixels));",
          "322:     if (pixel_info == (MemoryInfo *) NULL)",
          "323:       ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
          "",
          "[Removed Lines]",
          "317:     if ((number_pixels*number_planes_filled) != (size_t) (number_pixels*",
          "318:          number_planes_filled))",
          "",
          "[Added Lines]",
          "317:     if ((number_pixels*number_planes_filled) != (size_t) (number_pixels*",
          "318:          number_planes_filled))",
          "319:       ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
          "320:     if (image->rows < (image->rows*number_planes_filled*sizeof(*pixels)))",
          "323:       number_planes_filled*sizeof(*pixels));",
          "",
          "---------------"
        ],
        "coders/sun.c||coders/sun.c": [
          "File: coders/sun.c -> coders/sun.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "431:         ((bytes_per_line/sun_info.depth) != sun_info.width))",
          "432:       ThrowReaderException(ResourceLimitError,\"ImproperImageHeader\");",
          "433:     bytes_per_line+=15;",
          "435:     if ((bytes_per_line >> 1) != (sun_info.width*sun_info.depth+15))",
          "436:       ThrowReaderException(ResourceLimitError,\"ImproperImageHeader\");",
          "437:     bytes_per_line>>=4;",
          "438:     sun_pixels=(unsigned char *) AcquireQuantumMemory(height,",
          "439:       bytes_per_line*sizeof(*sun_pixels));",
          "",
          "[Removed Lines]",
          "434:     bytes_per_line<<=1;",
          "",
          "[Added Lines]",
          "434:     bytes_per_line<<=1;",
          "437:     bytes_per_line>>=4;",
          "438:     sun_pixels=(unsigned char *) AcquireQuantumMemory(height,",
          "",
          "---------------"
        ],
        "coders/viff.c||coders/viff.c": [
          "File: coders/viff.c -> coders/viff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "407:           case VFF_MAPTYP_FLOAT: bytes_per_pixel=4; break;",
          "408:           case VFF_MAPTYP_DOUBLE: bytes_per_pixel=8; break;",
          "409:           default: bytes_per_pixel=1; break;",
          "410:         }",
          "411:         image->colors=viff_info.map_columns;",
          "412:         if (AcquireImageColormap(image,image->colors,exception) == MagickFalse)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "410:         }",
          "411:         image->colors=viff_info.map_columns;",
          "412:         if (AcquireImageColormap(image,image->colors,exception) == MagickFalse)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a29f2b8b7de8c644a26c39959b4f6dbea68542ac",
      "candidate_info": {
        "commit_hash": "a29f2b8b7de8c644a26c39959b4f6dbea68542ac",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/a29f2b8b7de8c644a26c39959b4f6dbea68542ac",
        "files": [
          "MagickCore/cache-private.h",
          "MagickCore/cache-view.h",
          "MagickCore/cache.c",
          "MagickCore/compress.h",
          "MagickCore/distribute-cache-private.h",
          "MagickCore/magick-baseconfig.h",
          "MagickCore/quantum.h",
          "MagickCore/version.h",
          "config/config.h.in",
          "configure",
          "configure.ac"
        ],
        "message": "",
        "before_after_code_files": [
          "MagickCore/cache-private.h||MagickCore/cache-private.h",
          "MagickCore/cache-view.h||MagickCore/cache-view.h",
          "MagickCore/cache.c||MagickCore/cache.c",
          "MagickCore/compress.h||MagickCore/compress.h",
          "MagickCore/distribute-cache-private.h||MagickCore/distribute-cache-private.h",
          "MagickCore/magick-baseconfig.h||MagickCore/magick-baseconfig.h",
          "MagickCore/quantum.h||MagickCore/quantum.h",
          "MagickCore/version.h||MagickCore/version.h",
          "config/config.h.in||config/config.h.in",
          "configure.ac||configure.ac"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MagickCore/version.h||MagickCore/version.h",
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "MagickCore/version.h||MagickCore/version.h",
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/cache-private.h||MagickCore/cache-private.h": [
          "File: MagickCore/cache-private.h -> MagickCore/cache-private.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "246: extern MagickPrivate MagickBooleanType",
          "247:   CacheComponentGenesis(void),",
          "249:     magick_hot_spot,",
          "250:   SyncImagePixelCache(Image *,ExceptionInfo *);",
          "",
          "[Removed Lines]",
          "248:   SyncAuthenticPixelCacheNexus(Image *,NexusInfo *,ExceptionInfo *)",
          "",
          "[Added Lines]",
          "248:   SyncAuthenticPixelCacheNexus(Image *,NexusInfo *restrict,ExceptionInfo *)",
          "",
          "---------------"
        ],
        "MagickCore/cache-view.h||MagickCore/cache-view.h": [
          "File: MagickCore/cache-view.h -> MagickCore/cache-view.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "74: extern MagickExport MagickBooleanType",
          "77:   GetOneCacheViewVirtualMethodPixel(const CacheView *,const VirtualPixelMethod,",
          "78:     const ssize_t,const ssize_t,Quantum *,ExceptionInfo *),",
          "81:   GetOneCacheViewVirtualPixelInfo(const CacheView *,const ssize_t,const ssize_t,",
          "82:     PixelInfo *,ExceptionInfo *),",
          "83:   SetCacheViewStorageClass(CacheView *,const ClassType,ExceptionInfo *),",
          "87: extern MagickExport MagickSizeType",
          "88:   GetCacheViewExtent(const CacheView *);",
          "",
          "[Removed Lines]",
          "75:   GetOneCacheViewAuthenticPixel(const CacheView *,const ssize_t,const ssize_t,",
          "76:     Quantum *,ExceptionInfo *),",
          "79:   GetOneCacheViewVirtualPixel(const CacheView *,const ssize_t,const ssize_t,",
          "80:     Quantum *,ExceptionInfo *),",
          "84:   SetCacheViewVirtualPixelMethod(CacheView *,const VirtualPixelMethod),",
          "85:   SyncCacheViewAuthenticPixels(CacheView *,ExceptionInfo *) magick_hot_spot;",
          "",
          "[Added Lines]",
          "75:   GetOneCacheViewAuthenticPixel(const CacheView *restrict,const ssize_t,",
          "76:     const ssize_t,Quantum *restrict,ExceptionInfo *),",
          "79:   GetOneCacheViewVirtualPixel(const CacheView *restrict,const ssize_t,",
          "80:     const ssize_t,Quantum *restrict,ExceptionInfo *),",
          "84:   SetCacheViewVirtualPixelMethod(CacheView *restrict,const VirtualPixelMethod),",
          "85:   SyncCacheViewAuthenticPixels(CacheView *restrict,ExceptionInfo *)",
          "86:     magick_hot_spot;",
          "",
          "---------------"
        ],
        "MagickCore/cache.c||MagickCore/cache.c": [
          "File: MagickCore/cache.c -> MagickCore/cache.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "120: static MagickBooleanType",
          "121:   GetOneAuthenticPixelFromCache(Image *,const ssize_t,const ssize_t,Quantum *,",
          "124:     const ssize_t,const ssize_t,Quantum *,ExceptionInfo *),",
          "127:   ReadPixelCacheMetacontent(CacheInfo *,NexusInfo *,ExceptionInfo *),",
          "128:   SyncAuthenticPixelsCache(Image *,ExceptionInfo *),",
          "129:   WritePixelCachePixels(CacheInfo *,NexusInfo *,ExceptionInfo *),",
          "",
          "[Removed Lines]",
          "122:     ExceptionInfo *),",
          "123:   GetOneVirtualPixelFromCache(const Image *,const VirtualPixelMethod,",
          "125:   OpenPixelCache(Image *,const MapMode,ExceptionInfo *),",
          "126:   ReadPixelCachePixels(CacheInfo *,NexusInfo *,ExceptionInfo *),",
          "",
          "[Added Lines]",
          "122:     ExceptionInfo *),",
          "123:   GetOneVirtualPixelFromCache(const Image *,const VirtualPixelMethod,",
          "124:     const ssize_t,const ssize_t,Quantum *,ExceptionInfo *),",
          "126:   ReadPixelCachePixels(CacheInfo *restrict,NexusInfo *restrict,ExceptionInfo *),",
          "127:   ReadPixelCacheMetacontent(CacheInfo *restrict,NexusInfo *restrict,",
          "",
          "---------------"
        ],
        "MagickCore/compress.h||MagickCore/compress.h": [
          "File: MagickCore/compress.h -> MagickCore/compress.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: extern MagickExport MagickBooleanType",
          "55:   HuffmanDecodeImage(Image *,ExceptionInfo *),",
          "56:   HuffmanEncodeImage(const ImageInfo *,Image *,Image *,ExceptionInfo *),",
          "61: extern MagickExport void",
          "62:   Ascii85Encode(Image *,const unsigned char),",
          "",
          "[Removed Lines]",
          "57:   LZWEncodeImage(Image *,const size_t,unsigned char *,ExceptionInfo *),",
          "58:   PackbitsEncodeImage(Image *,const size_t,unsigned char *,ExceptionInfo *),",
          "59:   ZLIBEncodeImage(Image *,const size_t,unsigned char *,ExceptionInfo *);",
          "",
          "[Added Lines]",
          "57:   LZWEncodeImage(Image *,const size_t,unsigned char *restrict,ExceptionInfo *),",
          "58:   PackbitsEncodeImage(Image *,const size_t,unsigned char *restrict,",
          "59:     ExceptionInfo *),",
          "60:   ZLIBEncodeImage(Image *,const size_t,unsigned char *restrict,ExceptionInfo *);",
          "",
          "---------------"
        ],
        "MagickCore/distribute-cache-private.h||MagickCore/distribute-cache-private.h": [
          "File: MagickCore/distribute-cache-private.h -> MagickCore/distribute-cache-private.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:   ReadDistributePixelCacheMetacontent(DistributeCacheInfo *,",
          "66:     const RectangleInfo *,const MagickSizeType,unsigned char *),",
          "67:   ReadDistributePixelCachePixels(DistributeCacheInfo *,const RectangleInfo *,",
          "69:   WriteDistributePixelCacheMetacontent(DistributeCacheInfo *,",
          "70:     const RectangleInfo *,const MagickSizeType,const unsigned char *),",
          "71:   WriteDistributePixelCachePixels(DistributeCacheInfo *,const RectangleInfo *,",
          "74: #if defined(__cplusplus) || defined(c_plusplus)",
          "75: }",
          "",
          "[Removed Lines]",
          "68:     const MagickSizeType,unsigned char *),",
          "72:     const MagickSizeType,const unsigned char *);",
          "",
          "[Added Lines]",
          "68:     const MagickSizeType,unsigned char *restrict),",
          "72:     const MagickSizeType,const unsigned char *restrict);",
          "",
          "---------------"
        ],
        "MagickCore/magick-baseconfig.h||MagickCore/magick-baseconfig.h": [
          "File: MagickCore/magick-baseconfig.h -> MagickCore/magick-baseconfig.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "620: #define MAGICKCORE_HAVE_SELECT 1",
          "621: #endif",
          "624: #ifndef MAGICKCORE_HAVE_SETLOCALE",
          "625: #define MAGICKCORE_HAVE_SETLOCALE 1",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "624: #ifndef MAGICKCORE_HAVE_SENDFILE",
          "625: #define MAGICKCORE_HAVE_SENDFILE 1",
          "626: #endif",
          "",
          "---------------"
        ],
        "MagickCore/quantum.h||MagickCore/quantum.h": [
          "File: MagickCore/quantum.h -> MagickCore/quantum.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "171: extern MagickExport size_t",
          "172:   ExportQuantumPixels(const Image *,CacheView *,QuantumInfo *,const QuantumType,",
          "174:   GetQuantumExtent(const Image *,const QuantumInfo *,const QuantumType),",
          "175:   ImportQuantumPixels(const Image *,CacheView *,QuantumInfo *,const QuantumType,",
          "178: extern MagickExport void",
          "179:   GetQuantumInfo(const ImageInfo *,QuantumInfo *),",
          "",
          "[Removed Lines]",
          "173:     unsigned char *,ExceptionInfo *),",
          "176:     const unsigned char *,ExceptionInfo *);",
          "",
          "[Added Lines]",
          "173:     unsigned char *restrict,ExceptionInfo *),",
          "176:     const unsigned char *restrict,ExceptionInfo *);",
          "",
          "---------------"
        ],
        "MagickCore/version.h||MagickCore/version.h": [
          "File: MagickCore/version.h -> MagickCore/version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define MagickPackageName \"ImageMagick\"",
          "29: #define MagickCopyright  \"Copyright (C) 1999-2015 ImageMagick Studio LLC\"",
          "31: #define MagickLibVersion  0x700",
          "32: #define MagickLibVersionText  \"7.0.0\"",
          "33: #define MagickLibVersionNumber  0,0,0",
          "",
          "[Removed Lines]",
          "30: #define MagickSVNRevision  \"18670M\"",
          "",
          "[Added Lines]",
          "30: #define MagickSVNRevision  \"18670:18677M\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48: #define MagickppLibAddendum  \"-0\"",
          "49: #define MagickppLibInterface  0",
          "50: #define MagickppLibMinInterface  0",
          "52: #define MagickChangeDate   \"20120427\"",
          "53: #define MagickAuthoritativeLicense  \\",
          "54:   \"http://www.imagemagick.org/script/license.php\"",
          "",
          "[Removed Lines]",
          "51: #define MagickReleaseDate  \"2015-05-29\"",
          "",
          "[Added Lines]",
          "51: #define MagickReleaseDate  \"2015-05-30\"",
          "",
          "---------------"
        ],
        "config/config.h.in||config/config.h.in": [
          "File: config/config.h.in -> config/config.h.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "406: #undef HAVE_SELECT",
          "409: #undef HAVE_SETLOCALE",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "409: #undef HAVE_SENDFILE",
          "",
          "---------------"
        ],
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "1198:   MAGICK_FEATURES=\"DPC $MAGICK_FEATURES\"",
          "1199: ])",
          "1203: #",
          "1204: # Check for clock_gettime().",
          "",
          "[Removed Lines]",
          "1201: AC_CHECK_FUNCS([acosh _aligned_malloc asinh atanh atoll atexit cabs carg cimag creal clock ctime_r directio _exit execvp fchmod floor fork ftime ftruncate getc_unlocked getcwd getpid getexecname getdtablesize getpagesize getrlimit getrusage gettimeofday gmtime_r isnan j0 j1 lltostr localtime_r lstat memmove memset mkstemp munmap nanosleep newlocale _NSGetExecutablePath pclose _pclose poll popen _popen posix_fadvise posix_fallocate posix_madvise posix_memalign posix_spawnp pow pread pwrite qsort_r raise rand_r readlink readdir_r realpath select seekdir setlocale socket sqrt setvbuf stat strchr strrchr strcspn strdup strpbrk strspn strstr strtod strtod_l strtol strtoul symlink sysconf sigemptyset sigaction spawnvp strerror strlcat strlcpy strcasecmp strncasecmp telldir tempnam times ulltostr uselocale usleep utime vfprintf vfprintf_l vsprintf vsnprintf vsnprintf_l waitpid _wfopen _wstat])",
          "",
          "[Added Lines]",
          "1201: AC_CHECK_FUNCS([acosh _aligned_malloc asinh atanh atoll atexit cabs carg cimag creal clock ctime_r directio _exit execvp fchmod floor fork ftime ftruncate getc_unlocked getcwd getpid getexecname getdtablesize getpagesize getrlimit getrusage gettimeofday gmtime_r isnan j0 j1 lltostr localtime_r lstat memmove memset mkstemp munmap nanosleep newlocale _NSGetExecutablePath pclose _pclose poll popen _popen posix_fadvise posix_fallocate posix_madvise posix_memalign posix_spawnp pow pread pwrite qsort_r raise rand_r readlink readdir_r realpath select seekdir sendfile setlocale socket sqrt setvbuf stat strchr strrchr strcspn strdup strpbrk strspn strstr strtod strtod_l strtol strtoul symlink sysconf sigemptyset sigaction spawnvp strerror strlcat strlcpy strcasecmp strncasecmp telldir tempnam times ulltostr uselocale usleep utime vfprintf vfprintf_l vsprintf vsnprintf vsnprintf_l waitpid _wfopen _wstat])",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d5e1d16711bdb347982990c35823192f83eb485c",
      "candidate_info": {
        "commit_hash": "d5e1d16711bdb347982990c35823192f83eb485c",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/d5e1d16711bdb347982990c35823192f83eb485c",
        "files": [
          "MagickCore/version.h",
          "configure",
          "configure.ac"
        ],
        "message": "",
        "before_after_code_files": [
          "MagickCore/version.h||MagickCore/version.h",
          "configure.ac||configure.ac"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MagickCore/version.h||MagickCore/version.h",
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "MagickCore/version.h||MagickCore/version.h",
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/version.h||MagickCore/version.h": [
          "File: MagickCore/version.h -> MagickCore/version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define MagickPackageName \"ImageMagick\"",
          "29: #define MagickCopyright  \"Copyright (C) 1999-2015 ImageMagick Studio LLC\"",
          "31: #define MagickLibVersion  0x700",
          "32: #define MagickLibVersionText  \"7.0.0\"",
          "33: #define MagickLibVersionNumber  0,0,0",
          "",
          "[Removed Lines]",
          "30: #define MagickSVNRevision  \"18670:18682M\"",
          "",
          "[Added Lines]",
          "30: #define MagickSVNRevision  \"18670:18687M\"",
          "",
          "---------------"
        ],
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3997: if test \"$build_modules\" != 'no'; then",
          "3998:     MAGICK_DEP_LIBS=\"$USER_LIBS $LCMS_LIBS $FREETYPE_LIBS $LQR_LIBS $FFTW_LIBS $FONTCONFIG_LIBS $XEXT_LIBS $IPC_LIBS $X11_LIBS $XT_LIBS $LZMA_LIBS $BZLIB_LIBS $ZLIB_LIBS $LTDL_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"",
          "3999: else",
          "4001: fi",
          "4002: AC_SUBST(MAGICK_DEP_LIBS)",
          "",
          "[Removed Lines]",
          "4000:     MAGICK_DEP_LIBS=\"$USER_LIBS $JBIG_LIBS $LCMS_LIBS $TIFF_LIBS $FREETYPE_LIBS $JPEG_LIBS $GS_LIBS $LQR_LIBS $PNG_LIBS $AUTOTRACE_LIBS $DJVU_LIBS $FFTW_LIBS $FPX_LIBS $FONTCONFIG_LIBS $WEBP_LIBS $WMF_LIBS $DPS_LIBS $XEXT_LIBS $XT_LIBS $IPC_LIBS $X11_LIBS $LZMA_LIBS $BZLIB_LIBS $OPENEXR_LIBS $LIBOPENJP2_LIB $PANGO_LIBS $RSVG_LIBS $XML_LIBS $GVC_LIBS $ZLIB_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"",
          "",
          "[Added Lines]",
          "4000:     MAGICK_DEP_LIBS=\"$USER_LIBS $JBIG_LIBS $LCMS_LIBS $TIFF_LIBS $FREETYPE_LIBS $JPEG_LIBS $GS_LIBS $LQR_LIBS $PNG_LIBS $AUTOTRACE_LIBS $DJVU_LIBS $FFTW_LIBS $FPX_LIBS $FONTCONFIG_LIBS $WEBP_LIBS $WMF_LIBS $DPS_LIBS $XEXT_LIBS $XT_LIBS $IPC_LIBS $X11_LIBS $LZMA_LIBS $BZLIB_LIBS $OPENEXR_LIBS $LIBOPENJP2_LIBS $PANGO_LIBS $RSVG_LIBS $XML_LIBS $GVC_LIBS $ZLIB_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}