{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "caa2427f0c743beb0f6d1736dc8c0e4e551a0e1f",
      "candidate_info": {
        "commit_hash": "caa2427f0c743beb0f6d1736dc8c0e4e551a0e1f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/caa2427f0c743beb0f6d1736dc8c0e4e551a0e1f",
        "files": [
          "ssl/statem/statem.c"
        ],
        "message": "Stop server from expecting Certificate message when not requested\n\nIn a non client-auth renegotiation where the original handshake *was*\nclient auth, then the server will expect the client to send a Certificate\nmessage anyway resulting in a connection failure.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1983)",
        "before_after_code_files": [
          "ssl/statem/statem.c||ssl/statem/statem.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/statem/statem.c||ssl/statem/statem.c": [
          "File: ssl/statem/statem.c -> ssl/statem/statem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "362:                 s->ctx->stats.sess_accept_renegotiate++;",
          "363:             }",
          "364:         } else {",
          "365:             s->ctx->stats.sess_connect++;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "365:             s->s3->tmp.cert_request = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "368:             memset(s->s3->client_random, 0, sizeof(s->s3->client_random));",
          "369:             s->hit = 0;",
          "372:             s->s3->tmp.cert_req = 0;",
          "374:             if (SSL_IS_DTLS(s)) {",
          "",
          "[Removed Lines]",
          "371:             s->s3->tmp.cert_request = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "58f5f4157bc3533ed7cace90e4e9a89e19497cba",
      "candidate_info": {
        "commit_hash": "58f5f4157bc3533ed7cace90e4e9a89e19497cba",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/58f5f4157bc3533ed7cace90e4e9a89e19497cba",
        "files": [
          "crypto/ui/ui_openssl.c"
        ],
        "message": "UI_OpenSSL()'s session opener fails on MacOS X\n\nIf on a non-tty stdin, TTY_get() will fail with errno == ENODEV.\nWe didn't catch that.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2039)\n(cherry picked from commit c901bccec6f747467e1af31473655c8290e32309)",
        "before_after_code_files": [
          "crypto/ui/ui_openssl.c||crypto/ui/ui_openssl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ui/ui_openssl.c||crypto/ui/ui_openssl.c": [
          "File: crypto/ui/ui_openssl.c -> crypto/ui/ui_openssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "423:         if (errno == EINVAL)",
          "424:             is_a_tty = 0;",
          "425:         else",
          "426: # endif",
          "427:             {",
          "428:                 char tmp_num[10];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "426: # endif",
          "427: # ifdef ENODEV",
          "432:         if (errno == ENODEV)",
          "433:             is_a_tty = 0;",
          "434:         else",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1cb83aff0e7e27f027fbe4fdf1b6c101ce4cff00",
      "candidate_info": {
        "commit_hash": "1cb83aff0e7e27f027fbe4fdf1b6c101ce4cff00",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/1cb83aff0e7e27f027fbe4fdf1b6c101ce4cff00",
        "files": [
          "crypto/aes/asm/vpaes-ppc.pl",
          "crypto/chacha/asm/chacha-ppc.pl"
        ],
        "message": "PPC assembler pack: add some PPC970/G5 performance data.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit cebb186989067b39fca6ebc378e4957408f6e701)",
        "before_after_code_files": [
          "crypto/aes/asm/vpaes-ppc.pl||crypto/aes/asm/vpaes-ppc.pl",
          "crypto/chachasm/chacha-ppc.pl||crypto/chacha/asm/chacha-ppc.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/aes/asm/vpaes-ppc.pl||crypto/aes/asm/vpaes-ppc.pl": [
          "File: crypto/aes/asm/vpaes-ppc.pl -> crypto/aes/asm/vpaes-ppc.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: # 128-bit key.",
          "22: #",
          "23: #  aes-ppc.pl  this",
          "25: # POWER6 42.7/54.3/(28.2) 63.0/92.8(**)",
          "26: # POWER7 32.3/42.9/(18.4) 18.5/23.3",
          "27: #",
          "",
          "[Removed Lines]",
          "24: # G4e  35.5/52.1/(23.8) 11.9(*)/15.4",
          "",
          "[Added Lines]",
          "24: # PPC74x0/G4e 35.5/52.1/(23.8) 11.9(*)/15.4",
          "25: # PPC970/G5 37.9/55.0/(28.5) 22.2/28.5",
          "",
          "---------------"
        ],
        "crypto/chachasm/chacha-ppc.pl||crypto/chacha/asm/chacha-ppc.pl": [
          "File: crypto/chachasm/chacha-ppc.pl -> crypto/chacha/asm/chacha-ppc.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: # PPC74x0/G4e  6.81/+310% 4.66",
          "27: # PPC970/G5  9.29/+160% 4.60",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0adaabf6cd9ef104468edd353d721cd2d7afca5e",
      "candidate_info": {
        "commit_hash": "0adaabf6cd9ef104468edd353d721cd2d7afca5e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0adaabf6cd9ef104468edd353d721cd2d7afca5e",
        "files": [
          "crypto/cmac/cmac.c"
        ],
        "message": "Don't free in cleanup routine\n\nCleanse instead, and free in the free routine.\n\nSeems to have been introduced in commit\n846ec07d904f9cc81d486db0db14fb84f61ff6e5 when EVP_CIPHER_CTX was made\nopaque.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2798)\n(cherry picked from commit 5c6c4c5c333c8ac469e53521cf747ff527b8813a)",
        "before_after_code_files": [
          "crypto/cmac/cmac.c||crypto/cmac/cmac.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/cmac/cmac.c||crypto/cmac/cmac.c": [
          "File: crypto/cmac/cmac.c -> crypto/cmac/cmac.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: void CMAC_CTX_cleanup(CMAC_CTX *ctx)",
          "62: {",
          "64:     OPENSSL_cleanse(ctx->tbl, EVP_MAX_BLOCK_LENGTH);",
          "65:     OPENSSL_cleanse(ctx->k1, EVP_MAX_BLOCK_LENGTH);",
          "66:     OPENSSL_cleanse(ctx->k2, EVP_MAX_BLOCK_LENGTH);",
          "",
          "[Removed Lines]",
          "63:     EVP_CIPHER_CTX_free(ctx->cctx);",
          "",
          "[Added Lines]",
          "63:     EVP_CIPHER_CTX_cleanup(ctx->cctx);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "78:     if (!ctx)",
          "79:         return;",
          "80:     CMAC_CTX_cleanup(ctx);",
          "81:     OPENSSL_free(ctx);",
          "82: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81:     EVP_CIPHER_CTX_free(ctx->cctx);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a1aa0386081c4be6e020f1b84a55056ae9f6ad04",
      "candidate_info": {
        "commit_hash": "a1aa0386081c4be6e020f1b84a55056ae9f6ad04",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/a1aa0386081c4be6e020f1b84a55056ae9f6ad04",
        "files": [
          "fuzz/cms.c",
          "fuzz/server.c"
        ],
        "message": "[fuzzers] do not fail fuzzers with empty input\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n\nGH: #1788\n(cherry picked from commit ba7407002d899b614d4728da9004594f947ff3da)",
        "before_after_code_files": [
          "fuzz/cms.c||fuzz/cms.c",
          "fuzz/server.c||fuzz/server.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fuzz/cms.c||fuzz/cms.c": [
          "File: fuzz/cms.c -> fuzz/cms.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: int FuzzerTestOneInput(const uint8_t *buf, size_t len) {",
          "24:     CMS_ContentInfo *i;",
          "27:     OPENSSL_assert((size_t)BIO_write(in, buf, len) == len);",
          "28:     i = d2i_CMS_bio(in, NULL);",
          "29:     CMS_ContentInfo_free(i);",
          "",
          "[Removed Lines]",
          "25:     BIO *in = BIO_new(BIO_s_mem());",
          "",
          "[Added Lines]",
          "25:     BIO *in;",
          "26:     if (!len) {",
          "27:         return 0;",
          "28:     }",
          "30:     in = BIO_new(BIO_s_mem());",
          "",
          "---------------"
        ],
        "fuzz/server.c||fuzz/server.c": [
          "File: fuzz/server.c -> fuzz/server.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "217: }",
          "219: int FuzzerTestOneInput(const uint8_t *buf, size_t len) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "220:     SSL *server;",
          "221:     BIO *in;",
          "222:     BIO *out;",
          "223:     if (!len) {",
          "224:         return 0;",
          "225:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "230:     SSL_set_bio(server, in, out);",
          "231:     SSL_set_accept_state(server);",
          "232:     OPENSSL_assert((size_t)BIO_write(in, buf, len) == len);",
          "",
          "[Removed Lines]",
          "227:     SSL *server = SSL_new(ctx);",
          "228:     BIO *in = BIO_new(BIO_s_mem());",
          "229:     BIO *out = BIO_new(BIO_s_mem());",
          "",
          "[Added Lines]",
          "233:     server = SSL_new(ctx);",
          "234:     in = BIO_new(BIO_s_mem());",
          "235:     out = BIO_new(BIO_s_mem());",
          "",
          "---------------"
        ]
      }
    }
  ]
}