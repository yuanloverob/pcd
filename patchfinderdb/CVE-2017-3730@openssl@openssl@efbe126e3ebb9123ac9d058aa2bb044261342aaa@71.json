{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a59b90bf491410f1f2bc4540cc21f1980fd14c5b",
      "candidate_info": {
        "commit_hash": "a59b90bf491410f1f2bc4540cc21f1980fd14c5b",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/a59b90bf491410f1f2bc4540cc21f1980fd14c5b",
        "files": [
          "crypto/bn/asm/x86_64-mont5.pl"
        ],
        "message": "bn/asm/x86_64-mont5.pl: fix carry bug in bn_sqr8x_internal.\n\nCVE-2017-3732\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
        "before_after_code_files": [
          "crypto/bn/asm/x86_64-mont5.pl||crypto/bn/asm/x86_64-mont5.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/asm/x86_64-mont5.pl||crypto/bn/asm/x86_64-mont5.pl": [
          "File: crypto/bn/asm/x86_64-mont5.pl -> crypto/bn/asm/x86_64-mont5.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "1934:  mov \\$8,%ecx",
          "1935:  jmp .L8x_tail",
          "1937: .align 32",
          "1938: .L8x_tail_done:",
          "1939:  add (%rdx),%r8  # can this overflow?",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1937: .align 32",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1941:  adc \\$0,%r10",
          "1942:  adc \\$0,%r11",
          "1943:  adc \\$0,%r12",
          "1948:      # of multiplication",
          "1949:  xor %rax,%rax",
          "",
          "[Removed Lines]",
          "1944:  adc \\$0,%r13",
          "1945:  adc \\$0,%r14",
          "1946:  adc \\$0,%r15  # can't overflow, because we",
          "1947:      # started with \"overhung\" part",
          "",
          "[Added Lines]",
          "1945:  adc \\$0,%r13",
          "1946:  adc \\$0,%r14",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3384:  lea 8*8($tptr),$tptr",
          "3385:  sbb %rax,%rax",
          "3386:  sub \\$8,%rcx  # mov \\$-8,%rcx",
          "3388:  xor $carry,$carry  # of=0, cf=0",
          "3389:  mov %rax,16+8(%rsp)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3392: .align 32",
          "3393: .Lsqrx8x_tail_done:",
          "3398:  adc \\$0,%r12",
          "3399:  adc \\$0,%r13",
          "3400:  adc \\$0,%r14",
          "",
          "[Removed Lines]",
          "3394:  add 24+8(%rsp),%r8  # can this overflow?",
          "3395:  adc \\$0,%r9",
          "3396:  adc \\$0,%r10",
          "3397:  adc \\$0,%r11",
          "",
          "[Added Lines]",
          "3394:  add 24+8(%rsp),%r8  # can this overflow?",
          "3395:  adc \\$0,%r9",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3409:   movq %xmm3,%rcx",
          "3410:  adc 8*1($tptr),%r9",
          "3411:   mov 8*7($nptr),$carry",
          "3413:  adc 8*2($tptr),%r10",
          "3414:  adc 8*3($tptr),%r11",
          "3415:  adc 8*4($tptr),%r12",
          "",
          "[Removed Lines]",
          "3412:   movq %xmm2,$nptr  # restore $nptr",
          "",
          "[Added Lines]",
          "3410:   movq %xmm2,$nptr  # restore $nptr",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4bc54bf8b45ca0997ab6ffb13cc32b3ae1979ccc",
      "candidate_info": {
        "commit_hash": "4bc54bf8b45ca0997ab6ffb13cc32b3ae1979ccc",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/4bc54bf8b45ca0997ab6ffb13cc32b3ae1979ccc",
        "files": [
          "ssl/record/rec_layer_s3.c"
        ],
        "message": "Abort on unrecognised warning alerts\n\nA peer continually sending unrecognised warning alerts could mean that we\nmake no progress on a connection. We should abort rather than continuing if\nwe receive an unrecognised warning alert.\n\nThanks to Shi Lei for reporting this issue.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 77a6be4dfc2ecf406c2559a99bea51317ce0f533)",
        "before_after_code_files": [
          "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
          "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1351:                 goto f_err;",
          "1352:             }",
          "1353: #ifdef SSL_AD_MISSING_SRP_USERNAME",
          "1356: #endif",
          "1357:         } else if (alert_level == SSL3_AL_FATAL) {",
          "1358:             char tmp[16];",
          "",
          "[Removed Lines]",
          "1354:             else if (alert_descr == SSL_AD_MISSING_SRP_USERNAME)",
          "1355:                 return (0);",
          "",
          "[Added Lines]",
          "1354:             else if (alert_descr == SSL_AD_MISSING_SRP_USERNAME) {",
          "1355:                 return 0;",
          "1356:             }",
          "1358:             else {",
          "1359:                 al = SSL_AD_HANDSHAKE_FAILURE;",
          "1360:                 SSLerr(SSL_F_SSL3_READ_BYTES, SSL_R_UNKNOWN_ALERT_TYPE);",
          "1361:                 goto f_err;",
          "1362:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "32ee80362c2e79ca47b02bd2cd4f22259bf66798",
      "candidate_info": {
        "commit_hash": "32ee80362c2e79ca47b02bd2cd4f22259bf66798",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/32ee80362c2e79ca47b02bd2cd4f22259bf66798",
        "files": [
          "Makefile.shared"
        ],
        "message": "HPUX: Add the forgotten $(DSTDIR) when linking DSOs\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1802)\n(cherry picked from commit f46661de7806b5bae507d17185bda2bafd6c20d8)",
        "before_after_code_files": [
          "Makefile.shared||Makefile.shared"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.shared||Makefile.shared": [
          "File: Makefile.shared -> Makefile.shared",
          "--- Hunk 1 ---",
          "[Context before]",
          "497:  expr $(PLATFORM) : 'hpux64' > /dev/null && ALLSYMSFLAGS='-Wl,+forceload'; \\",
          "498:  SHAREDFLAGS=\"$(CFLAGS) $(SHARED_LDFLAGS) -Wl,-B,symbolic,+vnocompatwarnings,-z,+s,+h,$$SHLIB$$SHLIB_SUFFIX,+cdp,../:,+cdp,./:\"; \\",
          "499:  fi; \\",
          "502: link_shlib.hpux:",
          "503:  @if $(DETECT_GNU_LD); then $(DO_GNU_SO); else \\",
          "504:  $(CALC_VERSIONS); \\",
          "",
          "[Removed Lines]",
          "500:  rm -f $$SHLIB$$SHLIB_SUFFIX || :; \\",
          "501:  $(LINK_SO_DSO) && chmod a=rx $$SHLIB$$SHLIB_SUFFIX",
          "",
          "[Added Lines]",
          "500:  rm -f $(DSTDIR)/$$SHLIB$$SHLIB_SUFFIX || :; \\",
          "501:  $(LINK_SO_DSO) && chmod a=rx $(DSTDIR)/$$SHLIB$$SHLIB_SUFFIX",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "510:  expr $(PLATFORM) : 'hpux64' > /dev/null && ALLSYMSFLAGS='-Wl,+forceload'; \\",
          "511:  SHAREDFLAGS=\"$(CFLAGS) $(SHARED_LDFLAGS) -Wl,-B,symbolic,+vnocompatwarnings,-z,+s,+h,$$SHLIB$$SHLIB_SOVER$$SHLIB_SUFFIX,+cdp,../:,+cdp,./:\"; \\",
          "512:  fi; \\",
          "515: link_app.hpux:",
          "516:  @if $(DETECT_GNU_LD); then $(DO_GNU_APP); else \\",
          "517:  LDFLAGS=\"$(CFLAGS) $(LDFLAGS) -Wl,+s,+cdp,../:,+cdp,./:\"; \\",
          "",
          "[Removed Lines]",
          "513:  rm -f $$SHLIB$$SHLIB_SOVER$$SHLIB_SUFFIX || :; \\",
          "514:  $(LINK_SO_SHLIB) && chmod a=rx $$SHLIB$$SHLIB_SOVER$$SHLIB_SUFFIX",
          "",
          "[Added Lines]",
          "513:  rm -f $(DSTDIR)/$$SHLIB$$SHLIB_SOVER$$SHLIB_SUFFIX || :; \\",
          "514:  $(LINK_SO_SHLIB) && chmod a=rx $(DSTDIR)/$$SHLIB$$SHLIB_SOVER$$SHLIB_SUFFIX",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8934b0949c95eb865935481b9adf4f475a5b7aa9",
      "candidate_info": {
        "commit_hash": "8934b0949c95eb865935481b9adf4f475a5b7aa9",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/8934b0949c95eb865935481b9adf4f475a5b7aa9",
        "files": [
          "test/sslapitest.c"
        ],
        "message": "Remove blank line.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
        "before_after_code_files": [
          "test/sslapitest.c||test/sslapitest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/sslapitest.c||test/sslapitest.c": [
          "File: test/sslapitest.c -> test/sslapitest.c"
        ]
      }
    },
    {
      "candidate_hash": "cee0cdbc618d89f6e9eb14c360be8230b8397095",
      "candidate_info": {
        "commit_hash": "cee0cdbc618d89f6e9eb14c360be8230b8397095",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/cee0cdbc618d89f6e9eb14c360be8230b8397095",
        "files": [
          "ssl/ssl_sess.c"
        ],
        "message": "Fix a ssl session leak due to OOM in lh_SSL_SESSION_insert\n\n- s == NULL can mean c is a new session *or* lh_insert was\n  unable to create a hash entry.\n- use lh_SSL_SESSION_retrieve to check for this error condition.\n- If it happens simply remove the extra reference again.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2138)\n(cherry picked from commit 38088ce9934a90d4aea486edbff864f3935342e6)",
        "before_after_code_files": [
          "ssl/ssl_sess.c||ssl/ssl_sess.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/ssl_sess.c||ssl/ssl_sess.c": [
          "File: ssl/ssl_sess.c -> ssl/ssl_sess.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "662:         s = NULL;",
          "663:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "663:     } else if (s == NULL &&",
          "664:                lh_SSL_SESSION_retrieve(ctx->sessions, c) == NULL) {",
          "671:         s = c;",
          "",
          "---------------"
        ]
      }
    }
  ]
}