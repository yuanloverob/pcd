{
  "cve_id": "CVE-2020-11810",
  "cve_desc": "An issue was discovered in OpenVPN 2.4.x before 2.4.9. An attacker can inject a data channel v2 (P_DATA_V2) packet using a victim's peer-id. Normally such packets are dropped, but if this packet arrives before the data channel crypto parameters have been initialized, the victim's connection will be dropped. This requires careful timing due to the small time window (usually within a few seconds) between the victim client connection starting and the server PUSH_REPLY response back to the client. This attack will only work if Negotiable Cipher Parameters (NCP) is in use.",
  "repo": "OpenVPN/openvpn",
  "patch_hash": "37bc691e7d26ea4eb61a8a434ebd7a9ae76225ab",
  "patch_info": {
    "commit_hash": "37bc691e7d26ea4eb61a8a434ebd7a9ae76225ab",
    "repo": "OpenVPN/openvpn",
    "commit_url": "https://github.com/OpenVPN/openvpn/commit/37bc691e7d26ea4eb61a8a434ebd7a9ae76225ab",
    "files": [
      "src/openvpn/multi.c"
    ],
    "message": "Fix illegal client float (CVE-2020-11810)\n\nThere is a time frame between allocating peer-id and initializing data\nchannel key (which is performed on receiving push request or on async\npush-reply) in which the existing peer-id float checks do not work right.\n\nIf a \"rogue\" data channel packet arrives during that time frame from\nanother address and  with same peer-id, this would cause client to float\nto that new address. This is because:\n\n - tls_pre_decrypt() sets packet length to zero if\n   data channel key has not been initialized, which leads to\n\n - openvpn_decrypt() returns true if packet length is zero,\n   which leads to\n\n - process_incoming_link_part1() returns true, which\n   calls multi_process_float(), which commits float\n\nNote that problem doesn't happen when data channel key is initialized,\nsince in this case openvpn_decrypt() returns false.\n\nThe net effect of this behaviour is that the VPN session for the\n\"victim client\" is broken.  Since the \"attacker client\" does not have\nsuitable keys, it can not inject or steal VPN traffic from the other\nsession.  The time window is small and it can not be used to attack\na specific client's session, unless some other way is found to make it\ndisconnect and reconnect first.\n\nCVE-2020-11810 has been assigned to acknowledge this risk.\n\nFix illegal float by adding buffer length check (\"is this packet still\nconsidered valid\") before calling multi_process_float().\n\nTrac: #1272\nCVE: 2020-11810\n\nSigned-off-by: Lev Stipakov <lev@openvpn.net>\nAcked-by: Arne Schwabe <arne@rfc2549.org>\nAcked-by: Antonio Quartulli <antonio@openvpn.net>\nAcked-by: Gert Doering <gert@greenie.muc.de>\nMessage-Id: <20200415073017.22839-1-lstipakov@gmail.com>\nURL: https://www.mail-archive.com/openvpn-devel@lists.sourceforge.net/msg19720.html\nSigned-off-by: Gert Doering <gert@greenie.muc.de>",
    "before_after_code_files": [
      "src/openvpn/multi.c||src/openvpn/multi.c"
    ]
  },
  "patch_diff": {
    "src/openvpn/multi.c||src/openvpn/multi.c": [
      "File: src/openvpn/multi.c -> src/openvpn/multi.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2577:             orig_buf = c->c2.buf.data;",
      "2578:             if (process_incoming_link_part1(c, lsi, floated))",
      "2579:             {",
      "2581:                 {",
      "2582:                     multi_process_float(m, m->pending);",
      "2583:                 }",
      "",
      "[Removed Lines]",
      "2580:                 if (floated)",
      "",
      "[Added Lines]",
      "2581:                 if (floated && c->c2.buf.len > 0)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f7b318f811bb43c0d3aa7f337ec6242ed2c33881",
      "candidate_info": {
        "commit_hash": "f7b318f811bb43c0d3aa7f337ec6242ed2c33881",
        "repo": "OpenVPN/openvpn",
        "commit_url": "https://github.com/OpenVPN/openvpn/commit/f7b318f811bb43c0d3aa7f337ec6242ed2c33881",
        "files": [
          "src/openvpn/multi.c"
        ],
        "message": "Fix illegal client float (CVE-2020-11810)\n\nThere is a time frame between allocating peer-id and initializing data\nchannel key (which is performed on receiving push request or on async\npush-reply) in which the existing peer-id float checks do not work right.\n\nIf a \"rogue\" data channel packet arrives during that time frame from\nanother address and  with same peer-id, this would cause client to float\nto that new address. This is because:\n\n - tls_pre_decrypt() sets packet length to zero if\n   data channel key has not been initialized, which leads to\n\n - openvpn_decrypt() returns true if packet length is zero,\n   which leads to\n\n - process_incoming_link_part1() returns true, which\n   calls multi_process_float(), which commits float\n\nNote that problem doesn't happen when data channel key is initialized,\nsince in this case openvpn_decrypt() returns false.\n\nThe net effect of this behaviour is that the VPN session for the\n\"victim client\" is broken.  Since the \"attacker client\" does not have\nsuitable keys, it can not inject or steal VPN traffic from the other\nsession.  The time window is small and it can not be used to attack\na specific client's session, unless some other way is found to make it\ndisconnect and reconnect first.\n\nCVE-2020-11810 has been assigned to acknowledge this risk.\n\nFix illegal float by adding buffer length check (\"is this packet still\nconsidered valid\") before calling multi_process_float().\n\nTrac: #1272\nCVE: 2020-11810\n\nSigned-off-by: Lev Stipakov <lev@openvpn.net>\nAcked-by: Arne Schwabe <arne@rfc2549.org>\nAcked-by: Antonio Quartulli <antonio@openvpn.net>\nAcked-by: Gert Doering <gert@greenie.muc.de>\nMessage-Id: <20200415073017.22839-1-lstipakov@gmail.com>\nURL: https://www.mail-archive.com/openvpn-devel@lists.sourceforge.net/msg19720.html\nSigned-off-by: Gert Doering <gert@greenie.muc.de>\n(cherry picked from commit 37bc691e7d26ea4eb61a8a434ebd7a9ae76225ab)",
        "before_after_code_files": [
          "src/openvpn/multi.c||src/openvpn/multi.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/openvpn/multi.c||src/openvpn/multi.c"
          ],
          "candidate": [
            "src/openvpn/multi.c||src/openvpn/multi.c"
          ]
        }
      },
      "candidate_diff": {
        "src/openvpn/multi.c||src/openvpn/multi.c": [
          "File: src/openvpn/multi.c -> src/openvpn/multi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2562:             orig_buf = c->c2.buf.data;",
          "2563:             if (process_incoming_link_part1(c, lsi, floated))",
          "2564:             {",
          "2566:                 {",
          "2567:                     multi_process_float(m, m->pending);",
          "2568:                 }",
          "",
          "[Removed Lines]",
          "2565:                 if (floated)",
          "",
          "[Added Lines]",
          "2566:                 if (floated && c->c2.buf.len > 0)",
          "",
          "---------------"
        ]
      }
    }
  ]
}