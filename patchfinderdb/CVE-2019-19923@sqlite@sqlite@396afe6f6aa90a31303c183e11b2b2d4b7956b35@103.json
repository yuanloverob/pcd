{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0ba323476a40484243f93019ab6f2dc6df7befd1",
      "candidate_info": {
        "commit_hash": "0ba323476a40484243f93019ab6f2dc6df7befd1",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/0ba323476a40484243f93019ab6f2dc6df7befd1",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/dbfuzz2.c"
        ],
        "message": "Fix dbfuzz2 so that it will compile on systems that do not support getrlimit().\n\nFossilOrigin-Name: 36295dcebcb5487f2a462eabb41900ac28b8e839898ef0fae0aa4730bf9b0671",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/dbfuzz2.c||test/dbfuzz2.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8fb0c6d5a38e77aa4c5f394fb8af1b0c7c6a4790e932aabc213a3078ee9acaf6",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/dbfuzz2.c||test/dbfuzz2.c": [
          "File: test/dbfuzz2.c -> test/dbfuzz2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "377:       free(pIn);",
          "378:     }",
          "379:   }",
          "380:   if( eVerbosity>0 ){",
          "381:     struct rusage x;",
          "382:     printf(\"SQLite %s\\n\", sqlite3_sourceid());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "380: #ifdef RUSAGE_SELF",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "385:       printf(\"Maximum RSS = %ld KB\\n\", x.ru_maxrss);",
          "386:     }",
          "387:   }",
          "388:   return 0;",
          "389: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "389: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dac7e69dc2bbfa895cb31c2f9305c11ff4fba51c",
      "candidate_info": {
        "commit_hash": "dac7e69dc2bbfa895cb31c2f9305c11ff4fba51c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/dac7e69dc2bbfa895cb31c2f9305c11ff4fba51c",
        "files": [
          "ext/lsm1/Makefile",
          "ext/lsm1/test/lsm1_simple.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Add some extra tests for the lsm virtual table module.\n\nFossilOrigin-Name: 4cb009b0f724f72eaea90e45488122f7c2a7d0caf31a8422da4060469507e921",
        "before_after_code_files": [
          "ext/lsm1/test/lsm1_simple.test||ext/lsm1/test/lsm1_simple.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/lsm1/test/lsm1_simple.test||ext/lsm1/test/lsm1_simple.test": [
          "File: ext/lsm1/test/lsm1_simple.test -> ext/lsm1/test/lsm1_simple.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "88: do_execsql_test 211 {",
          "89:   SELECT quote(a), quote(lsm1_key), quote(lsm1_value), '|' FROM x1;",
          "90: } {'12' X'3132' X'05320000000000000A401FFB42ABE9DB' | '15' X'3135' X'4284C6' | '8' X'38' X'2162616E6A6F1633323105' |}",
          "93: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91: do_execsql_test 212 {",
          "92:   SELECT quote(a), quote(lsm1_key), quote(lsm1_value) FROM x1 WHERE a='12';",
          "93: } {'12' X'3132' X'05320000000000000A401FFB42ABE9DB'}",
          "95: #-------------------------------------------------------------------------",
          "96: reset_db",
          "97: forcedelete testlsm.db",
          "98: load_lsm1_vtab db",
          "99: do_execsql_test 300 {",
          "100:   CREATE VIRTUAL TABLE x1 USING lsm1(testlsm.db,a,TEXT,b,c,d);",
          "101: }",
          "102: do_eqp_test 310 {",
          "103:   SELECT * FROM x1 WHERE a=?",
          "104: } {SCAN TABLE x1 VIRTUAL TABLE INDEX 0:}",
          "106: do_eqp_test 320 {",
          "107:   SELECT * FROM x1 WHERE a>?",
          "108: } {SCAN TABLE x1 VIRTUAL TABLE INDEX 2:}",
          "110: do_eqp_test 330 {",
          "111:   SELECT * FROM x1 WHERE a<?",
          "112: } {SCAN TABLE x1 VIRTUAL TABLE INDEX 3:}",
          "113: do_eqp_test 340 {",
          "114:   SELECT * FROM x1 WHERE a BETWEEN ? AND ?",
          "115: } {SCAN TABLE x1 VIRTUAL TABLE INDEX 1:}",
          "117: #-------------------------------------------------------------------------",
          "118: reset_db",
          "119: forcedelete testlsm.db",
          "120: load_lsm1_vtab db",
          "121: do_execsql_test 400 {",
          "122:   CREATE VIRTUAL TABLE x1 USING lsm1(testlsm.db,a,TEXT,b);",
          "123:   INSERT INTO x1 VALUES('one', 1);",
          "124:   INSERT INTO x1 VALUES('two', 2);",
          "125:   INSERT INTO x1 VALUES('three', 3);",
          "126:   INSERT INTO x1 VALUES('four', 4);",
          "127:   INSERT INTO x1 VALUES('five', 5);",
          "128: }",
          "129: do_execsql_test 410 {",
          "130:   SELECT b FROM x1 WHERE a = 'two'",
          "131: } {2}",
          "132: do_execsql_test 411 {",
          "133:   SELECT b FROM x1 WHERE a = 'one'",
          "134: } {1}",
          "135: do_execsql_test 412 {",
          "136:   SELECT b FROM x1 WHERE a = 'five'",
          "137: } {5}",
          "139: do_execsql_test 420 {",
          "140:   SELECT b FROM x1 WHERE a BETWEEN 'one' AND 'three';",
          "141: } {1 3}",
          "142: do_execsql_test 421 {",
          "143:   SELECT b FROM x1 WHERE a BETWEEN 'five' AND 'two';",
          "144: } {5 4 1 3 2}",
          "145: do_execsql_test 421 {",
          "146:   SELECT b FROM x1 WHERE a > 'five';",
          "147: } {4 1 3 2}",
          "148: do_execsql_test 421 {",
          "149:   SELECT b FROM x1 WHERE a <= 'three';",
          "150: } {3 1 4 5}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 7496e872a1a50ac65ad04709365a43038fb015ac9c690196de3cb02ce54c2e57",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4ec4dd701ffa459a68c0382e102df86160c10039",
      "candidate_info": {
        "commit_hash": "4ec4dd701ffa459a68c0382e102df86160c10039",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4ec4dd701ffa459a68c0382e102df86160c10039",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/sqliteInt.h"
        ],
        "message": "Remove unused macros formerly used to define built-in aggregate functions.\n\nFossilOrigin-Name: 3ef0d44edd0354cda9b6237f992cb67a2170ee8f1f464b1f38ac36e3a133bc71",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/sqliteInt.h||src/sqliteInt.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c6af9f655b73200ecc0c4189698e421af6ca584babdc76e73a36d468b2eea1f9",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h"
        ]
      }
    },
    {
      "candidate_hash": "3f4f6823ac81ca47056367153b851ae96888708b",
      "candidate_info": {
        "commit_hash": "3f4f6823ac81ca47056367153b851ae96888708b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3f4f6823ac81ca47056367153b851ae96888708b",
        "files": [
          "ext/fts3/fts3_aux.c",
          "manifest",
          "manifest.uuid",
          "src/btree.c"
        ],
        "message": "Fix harmless compiler warnings.\n\nFossilOrigin-Name: 9a93c68a7673bda2e6c308d3b2798d0fb12fde399996cae24b1f0d5864adf355",
        "before_after_code_files": [
          "ext/fts3/fts3_aux.c||ext/fts3/fts3_aux.c",
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_aux.c||ext/fts3/fts3_aux.c": [
          "File: ext/fts3/fts3_aux.c -> ext/fts3/fts3_aux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "417:     if( zStr ){",
          "418:       pCsr->filter.zTerm = sqlite3_mprintf(\"%s\", zStr);",
          "419:       if( pCsr->filter.zTerm==0 ) return SQLITE_NOMEM;",
          "421:     }",
          "422:   }",
          "424:   if( iLe>=0 ){",
          "425:     pCsr->zStop = sqlite3_mprintf(\"%s\", sqlite3_value_text(apVal[iLe]));",
          "426:     if( pCsr->zStop==0 ) return SQLITE_NOMEM;",
          "428:   }",
          "430:   if( iLangid>=0 ){",
          "",
          "[Removed Lines]",
          "420:       pCsr->filter.nTerm = strlen(pCsr->filter.zTerm);",
          "427:     pCsr->nStop = strlen(pCsr->zStop);",
          "",
          "[Added Lines]",
          "420:       pCsr->filter.nTerm = (int)strlen(pCsr->filter.zTerm);",
          "427:     pCsr->nStop = (int)strlen(pCsr->zStop);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e744d2dd93a78235e6c1d938b08232183b5ce7e355d1b7daf2199e585b03c106",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6825:   assert( i<iEnd );",
          "6826:   j = get2byte(&aData[hdr+5]);",
          "6828:   memcpy(&pTmp[j], &aData[j], usableSize - j);",
          "6830:   for(k=0; pCArray->ixNx[k]<=i && ALWAYS(k<NB*2); k++){}",
          "",
          "[Removed Lines]",
          "6827:   if( NEVER(j>usableSize) ){ j = 0; }",
          "",
          "[Added Lines]",
          "6827:   if( NEVER(j>(u32)usableSize) ){ j = 0; }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6a1bfc9a6d5b2367a84d367290d3bf5dba708a16",
      "candidate_info": {
        "commit_hash": "6a1bfc9a6d5b2367a84d367290d3bf5dba708a16",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/6a1bfc9a6d5b2367a84d367290d3bf5dba708a16",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/os_unix.c"
        ],
        "message": "Changes to the unix VFS that allegedly enable it to build of Fuchsia. We have no way of testing this.\n\nFossilOrigin-Name: be21a6416d47ff7db995006a0422b745044d9b8bb5bad3c53342aa6e2e524771",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/os_unix.c||src/os_unix.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: af84774d1eebcfe6a61b564b4edf280ad3c3a93f39b7f70b6fcc56f7bbdfb9eb",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/os_unix.c||src/os_unix.c": [
          "File: src/os_unix.c -> src/os_unix.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7822:     UNIXVFS(\"unix\",          autolockIoFinder ),",
          "7823: #elif OS_VXWORKS",
          "7824:     UNIXVFS(\"unix\",          vxworksIoFinder ),",
          "7825: #else",
          "7826:     UNIXVFS(\"unix\",          posixIoFinder ),",
          "7827: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7825: #elif __Fuchsia__",
          "7827:     UNIXVFS(\"unix\",          dotlockIoFinder ),",
          "",
          "---------------"
        ]
      }
    }
  ]
}