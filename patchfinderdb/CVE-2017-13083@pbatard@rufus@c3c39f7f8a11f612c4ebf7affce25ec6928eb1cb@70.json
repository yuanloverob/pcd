{
  "cve_id": "CVE-2017-13083",
  "cve_desc": "Akeo Consulting Rufus prior to version 2.17.1187 does not adequately validate the integrity of updates downloaded over HTTP, allowing an attacker to easily convince a user to execute arbitrary code",
  "repo": "pbatard/rufus",
  "patch_hash": "c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
  "patch_info": {
    "commit_hash": "c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
    "repo": "pbatard/rufus",
    "commit_url": "https://github.com/pbatard/rufus/commit/c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
    "files": [
      "res/localization/rufus.loc",
      "src/pki.c",
      "src/rufus.rc",
      "src/stdlg.c"
    ],
    "message": "[pki] fix https://www.kb.cert.org/vuls/id/403768\n\n* This commit effectively fixes https://www.kb.cert.org/vuls/id/403768 (CVE-2017-13083) as\n  it is described per its revision 11, which is the latest revision at the time of this commit,\n  by disabling Windows prompts, enacted during signature validation, that allow the user to\n  bypass the intended signature verification checks.\n* It needs to be pointed out that the vulnerability (\"allow(ing) the use of a self-signed\n  certificate\"), which relies on the end-user actively ignoring a Windows prompt that tells\n  them that the update failed the signature validation whilst also advising against running it,\n  is being fully addressed, even as the update protocol remains HTTP.\n* It also need to be pointed out that the extended delay (48 hours) between the time the\n  vulnerability was reported and the moment it is fixed in our codebase has to do with\n  the fact that the reporter chose to deviate from standard security practices by not\n  disclosing the details of the vulnerability with us, be it publicly or privately,\n  before creating the cert.org report. The only advance notification we received was a\n  generic note about the use of HTTP vs HTTPS, which, as have established, is not\n  immediately relevant to addressing the reported vulnerability.\n* Closes #1009\n* Note: The other vulnerability scenario described towards the end of #1009, which\n  doesn't have to do with the \"lack of CA checking\", will be addressed separately.",
    "before_after_code_files": [
      "res/localization/rufus.loc||res/localization/rufus.loc",
      "src/pki.c||src/pki.c",
      "src/rufus.rc||src/rufus.rc",
      "src/stdlg.c||src/stdlg.c"
    ]
  },
  "patch_diff": {
    "res/localization/rufus.loc||res/localization/rufus.loc": [
      "File: res/localization/rufus.loc -> res/localization/rufus.loc",
      "--- Hunk 1 ---",
      "[Context before]",
      "487: # eg. \"Partitioning (MBR)...\"",
      "488: t MSG_238 \"Partitioning (%s)...\"",
      "489: t MSG_239 \"Deleting partitions...\"",
      "490: t MSG_241 \"Downloading: %0.1f%%\"",
      "491: t MSG_242 \"Failed to download file.\"",
      "492: t MSG_243 \"Checking for Rufus updates...\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "490: t MSG_240 \"The signature for the downloaded update can not be validated. This could mean that your \"",
      "491:  \"system is improperly configured for signature validation or indicate a malicious download.\\n\\n\"",
      "492:  \"The download will be deleted. Please check the log for more details.\"",
      "",
      "---------------"
    ],
    "src/pki.c||src/pki.c": [
      "File: src/pki.c -> src/pki.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "53:  static char error_string[64];",
      "54:  DWORD error_code = GetLastError();",
      "57:   return WindowsErrorString();",
      "59:  switch (error_code) {",
      "",
      "[Removed Lines]",
      "56:  if ((error_code >> 16) != 0x8009)",
      "",
      "[Added Lines]",
      "56:  if (((error_code >> 16) != 0x8009) && ((error_code >> 16) != 0x800B))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "113:   return \"Cannot complete usage check.\";",
      "114:  case CRYPT_E_NO_TRUSTED_SIGNER:",
      "115:   return \"None of the signers of the cryptographic message or certificate trust list is trusted.\";",
      "116:  default:",
      "117:   static_sprintf(error_string, \"Unknown PKI error 0x%08lX\", error_code);",
      "118:   return error_string;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "116:  case CERT_E_UNTRUSTEDROOT:",
      "117:   return \"The root certificate is not trusted.\";",
      "118:  case TRUST_E_NOSIGNATURE:",
      "119:   return \"Not digitally signed.\";",
      "120:  case TRUST_E_EXPLICIT_DISTRUST:",
      "121:   return \"One of the certificates used was marked as untrusted by the user.\";",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "268:  }",
      "270:  trust_data.cbStruct = sizeof(trust_data);",
      "273:  trust_data.fdwRevocationChecks = WTD_REVOKE_WHOLECHAIN;",
      "",
      "[Removed Lines]",
      "271:  trust_data.dwUIChoice = WTD_UI_ALL;",
      "",
      "[Added Lines]",
      "283:  trust_data.dwUIChoice = WTD_UI_NONE;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "279:  r = WinVerifyTrust(NULL, &guid_generic_verify, &trust_data);",
      "280:  safe_free(trust_file.pcwszFilePath);",
      "282:  return r;",
      "283: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "293:  switch (r) {",
      "294:  case ERROR_SUCCESS:",
      "295:   break;",
      "296:  case TRUST_E_NOSIGNATURE:",
      "298:   uprintf(\"PKI: File does not appear to be signed: %s\", WinPKIErrorString());",
      "299:   MessageBoxExU(hDlg, lmprintf(MSG_284), lmprintf(MSG_283), MB_OK | MB_ICONERROR | MB_IS_RTL, selected_langid);",
      "300:   break;",
      "301:  default:",
      "302:   uprintf(\"PKI: Failed to validate signature: %s\", WinPKIErrorString());",
      "303:   MessageBoxExU(hDlg, lmprintf(MSG_240), lmprintf(MSG_283), MB_OK | MB_ICONERROR | MB_IS_RTL, selected_langid);",
      "304:   break;",
      "305:  }",
      "",
      "---------------"
    ],
    "src/rufus.rc||src/rufus.rc": [
      "File: src/rufus.rc -> src/rufus.rc",
      "--- Hunk 1 ---",
      "[Context before]",
      "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
      "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
      "35: EXSTYLE WS_EX_ACCEPTFILES",
      "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
      "38: BEGIN",
      "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
      "",
      "[Removed Lines]",
      "36: CAPTION \"Rufus 2.17.1186\"",
      "",
      "[Added Lines]",
      "36: CAPTION \"Rufus 2.17.1187\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "368: VS_VERSION_INFO VERSIONINFO",
      "371:  FILEFLAGSMASK 0x3fL",
      "372: #ifdef _DEBUG",
      "373:  FILEFLAGS 0x1L",
      "",
      "[Removed Lines]",
      "369:  FILEVERSION 2,17,1186,0",
      "370:  PRODUCTVERSION 2,17,1186,0",
      "",
      "[Added Lines]",
      "369:  FILEVERSION 2,17,1187,0",
      "370:  PRODUCTVERSION 2,17,1187,0",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "384:         BEGIN",
      "385:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
      "386:             VALUE \"FileDescription\", \"Rufus\"",
      "388:             VALUE \"InternalName\", \"Rufus\"",
      "389:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
      "390:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
      "391:             VALUE \"OriginalFilename\", \"rufus.exe\"",
      "392:             VALUE \"ProductName\", \"Rufus\"",
      "394:         END",
      "395:     END",
      "396:     BLOCK \"VarFileInfo\"",
      "",
      "[Removed Lines]",
      "387:             VALUE \"FileVersion\", \"2.17.1186\"",
      "393:             VALUE \"ProductVersion\", \"2.17.1186\"",
      "",
      "[Added Lines]",
      "387:             VALUE \"FileVersion\", \"2.17.1187\"",
      "393:             VALUE \"ProductVersion\", \"2.17.1187\"",
      "",
      "---------------"
    ],
    "src/stdlg.c||src/stdlg.c": [
      "File: src/stdlg.c -> src/stdlg.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674:    case 2:  // Launch newer version and close this one",
      "1675:     Sleep(1000); // Add a delay on account of antivirus scanners",
      "1678:      break;",
      "1680:     memset(&si, 0, sizeof(si));",
      "1681:     memset(&pi, 0, sizeof(pi));",
      "",
      "[Removed Lines]",
      "1677:     if (ValidateSignature(hDlg, filepath) != NO_ERROR)",
      "",
      "[Added Lines]",
      "1677:     if (ValidateSignature(hDlg, filepath) != NO_ERROR) {",
      "1679:      _unlinkU(filepath);",
      "1680:      EnableWindow(GetDlgItem(hDlg, IDC_DOWNLOAD), FALSE);",
      "1682:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0d45bae5e56883d2af04712c97464133701e199f",
      "candidate_info": {
        "commit_hash": "0d45bae5e56883d2af04712c97464133701e199f",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/0d45bae5e56883d2af04712c97464133701e199f",
        "files": [
          "ChangeLog.txt",
          "res/localization/ChangeLog.txt",
          "res/localization/rufus.loc",
          "src/rufus.rc"
        ],
        "message": "[loc] commit latest localization updates",
        "before_after_code_files": [
          "res/localization/rufus.loc||res/localization/rufus.loc",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "res/localization/rufus.loc||res/localization/rufus.loc": [
          "File: res/localization/rufus.loc -> res/localization/rufus.loc",
          "--- Hunk 1 ---",
          "[Context before]",
          "93: # http://download.microsoft.com/download/9/5/E/95EF66AF-9026-4BB0-A41D-A4F81802D92C/%5BMS-LCID%5D.pdf",
          "94: # for the LCID (0x####) codes you should use",
          "95: l \"en-US\" \"English (English)\" 0x0409, 0x0809, 0x0c09, 0x1009, 0x1409, 0x1809, 0x1c09, 0x2009, 0x2409, 0x2809, 0x2c09, 0x3009, 0x3409, 0x3809, 0x3c09, 0x4009, 0x4409, 0x4809",
          "98: # Main dialog",
          "99: g IDD_DIALOG",
          "",
          "[Removed Lines]",
          "96: v 1.0.20",
          "",
          "[Added Lines]",
          "96: v 1.0.21",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "555: t MSG_290 \"File Indexing\"",
          "556: t MSG_291 \"Version selection\"",
          "557: t MSG_292 \"Please select the version of Windows you want to install:\"",
          "559: ################################################################################",
          "560: ############################# TRANSLATOR END COPY ##############################",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "558: t MSG_293 \"Unsupported Windows version\"",
          "559: t MSG_294 \"This version of Windows is no longer supported by Rufus.\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5056: ################################################################################",
          "5057: l \"fr-FR\" \"French (Fran\u00e7ais)\" 0x040c, 0x080c, 0x0c0c, 0x100c, 0x140c, 0x180c, 0x1c0c, 0x200c, 0x240c, 0x280c, 0x2c0c, 0x300c, 0x340c, 0x380c, 0xe40c",
          "5059: b \"en-US\"",
          "5061: g IDD_DIALOG",
          "",
          "[Removed Lines]",
          "5058: v 1.0.20",
          "",
          "[Added Lines]",
          "5060: v 1.0.21",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5473:  \"pourrait indiquer une activit\u00e9 malicieuse...\\n\u00cates-vous certain de vouloir lancer ce fichier?\"",
          "5474: t MSG_286 \"Effacement \u00e0 z\u00e9ro : %0.1f%% compl\u00e9t\u00e9\"",
          "5475: t MSG_287 \"D\u00e9tection disques non-USB d\u00e9tachables\"",
          "5477: ################################################################################",
          "5478: l \"de-DE\" \"German (Deutsch)\" 0x0407, 0x0807, 0x0c07, 0x1007, 0x1407",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5478: t MSG_288 \"Privil\u00e8ges \u00e9lev\u00e9s manquants\"",
          "5479: t MSG_289 \"Cette application peut seulement \u00eatre ex\u00e9cut\u00e9e avec privil\u00e8ges administratifs\"",
          "5480: t MSG_290 \"Indexation de fichiers\"",
          "5481: t MSG_291 \"S\u00e9lection de version\"",
          "5482: t MSG_292 \"S\u00e9lectionnez la version de Windows que vous souhaitez installer :\"",
          "5483: t MSG_293 \"Version de Windows non support\u00e9e\"",
          "5484: t MSG_294 \"Cette version de Windows n'est plus support\u00e9e par Rufus.\"",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 2.12.1021\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 2.12.1022\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "336: VS_VERSION_INFO VERSIONINFO",
          "339:  FILEFLAGSMASK 0x3fL",
          "340: #ifdef _DEBUG",
          "341:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "337:  FILEVERSION 2,12,1021,0",
          "338:  PRODUCTVERSION 2,12,1021,0",
          "",
          "[Added Lines]",
          "337:  FILEVERSION 2,12,1022,0",
          "338:  PRODUCTVERSION 2,12,1022,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "352:         BEGIN",
          "353:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "354:             VALUE \"FileDescription\", \"Rufus\"",
          "356:             VALUE \"InternalName\", \"Rufus\"",
          "357:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
          "358:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "359:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "360:             VALUE \"ProductName\", \"Rufus\"",
          "362:         END",
          "363:     END",
          "364:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "355:             VALUE \"FileVersion\", \"2.12.1021\"",
          "361:             VALUE \"ProductVersion\", \"2.12.1021\"",
          "",
          "[Added Lines]",
          "355:             VALUE \"FileVersion\", \"2.12.1022\"",
          "361:             VALUE \"ProductVersion\", \"2.12.1022\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f1aeb632672022ddc470d22c80049121a921e4b6",
      "candidate_info": {
        "commit_hash": "f1aeb632672022ddc470d22c80049121a921e4b6",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/f1aeb632672022ddc470d22c80049121a921e4b6",
        "files": [
          "res/localization/rufus.loc",
          "src/rufus.rc"
        ],
        "message": "[loc] update Azerbaijani translation to latest",
        "before_after_code_files": [
          "res/localization/rufus.loc||res/localization/rufus.loc",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "res/localization/rufus.loc||res/localization/rufus.loc": [
          "File: res/localization/rufus.loc -> res/localization/rufus.loc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1004: ################################################################################",
          "1005: l \"az-AZ\" \"Azerbaijani (Az\u0259rbaycanca)\" 0x042c, 0x782c",
          "1007: b \"en-US\"",
          "1009: # Main dialog",
          "",
          "[Removed Lines]",
          "1006: v 1.0.21",
          "",
          "[Added Lines]",
          "1006: v 1.0.22",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1488: t MSG_292 \"Xahi\u015f edirik y\u00fckl\u0259m\u0259k ist\u0259diyiniz Windows versiyas\u0131n\u0131 se\u00e7in:\"",
          "1489: t MSG_293 \"D\u0259st\u0259kl\u0259nm\u0259y\u0259n bir Windows versiyas\u0131\"",
          "1490: t MSG_294 \"Bu versiya art\u0131q Rufus t\u0259r\u0259find\u0259n d\u0259st\u0259kl\u0259nir.\"",
          "1492: ######################################################################",
          "1493: l \"bg-BG\" \"Bulgarian (\u0411\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438)\" 0x0402",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1491: t MSG_295 \"X\u0259b\u0259rdarl\u0131q: R\u0259smi olamyan versiya\"",
          "1492: t MSG_296 \"Bu versiya Rufus t\u0259r\u0259find\u0259n t\u0259qdim olunmay\u0131b yaradan(lar).\\n\\n\u0130stifad\u0259 etm\u0259yinizd\u0259n \u0259minsiniz?\"",
          "1493: t MSG_297 \"Uy\u011fun olmayan ISO a\u015fkarland\u0131\"",
          "1494: t MSG_298 \"Se\u00e7diyiniz ISO fayl\u0131 uy\u011fun deyil \u00f6l\u00e7\u00fc: %s m\u0259lumat \u00e7atmad\u0131!\\n\\nBu fayl\u0131 se\u00e7in Siz s\u00fcr\u0259tli y\u00fckl\u0259m\u0259k \u00fc\u00e7\u00fcn, \u0130nterneti yoxlamal\u0131s\u0131n\u0131z \"",
          "1495:  \"MD5 v\u0259 SHA n\u0259zar\u0259t c\u0259ml\u0259ri uy\u011fundur.\\n\\nBacaraca\u011f\u0131n\u0131za diqq\u0259tinizi y\u00f6n\u0259ldin '#' buttona vuraraq Rufus MD5 or SHA-n\u0131 hesablay\u0131n.\"",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 2.16.1146\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 2.16.1147\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "368: VS_VERSION_INFO VERSIONINFO",
          "371:  FILEFLAGSMASK 0x3fL",
          "372: #ifdef _DEBUG",
          "373:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "369:  FILEVERSION 2,16,1146,0",
          "370:  PRODUCTVERSION 2,16,1146,0",
          "",
          "[Added Lines]",
          "369:  FILEVERSION 2,16,1147,0",
          "370:  PRODUCTVERSION 2,16,1147,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "384:         BEGIN",
          "385:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "386:             VALUE \"FileDescription\", \"Rufus\"",
          "388:             VALUE \"InternalName\", \"Rufus\"",
          "389:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
          "390:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "391:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "392:             VALUE \"ProductName\", \"Rufus\"",
          "394:         END",
          "395:     END",
          "396:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "387:             VALUE \"FileVersion\", \"2.16.1146\"",
          "393:             VALUE \"ProductVersion\", \"2.16.1146\"",
          "",
          "[Added Lines]",
          "387:             VALUE \"FileVersion\", \"2.16.1147\"",
          "393:             VALUE \"ProductVersion\", \"2.16.1147\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dbc92e3adcc8b0f61de578ac137b10f218f482a7",
      "candidate_info": {
        "commit_hash": "dbc92e3adcc8b0f61de578ac137b10f218f482a7",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/dbc92e3adcc8b0f61de578ac137b10f218f482a7",
        "files": [
          "src/format.c",
          "src/iso.c",
          "src/rufus.h",
          "src/rufus.rc"
        ],
        "message": "[core] add support for Windows XP x64 and Server 2003 x64 ISOs\n\n* Closes #1167",
        "before_after_code_files": [
          "src/format.c||src/format.c",
          "src/iso.c||src/iso.c",
          "src/rufus.h||src/rufus.h",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "src/format.c||src/format.c": [
          "File: src/format.c -> src/format.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1167: static BOOL SetupWinPE(char drive_letter)",
          "1168: {",
          "1169:  char src[64], dst[32];",
          "1174:  const char *rdisk_zero = \"rdisk(0)\";",
          "1175:  const LARGE_INTEGER liZero = { {0, 0} };",
          "1176:  char setupsrcdev[64];",
          "",
          "[Removed Lines]",
          "1170:  const char* basedir[] = { \"i386\", \"minint\" };",
          "1171:  const char* patch_str_org[] = { \"\\\\minint\\\\txtsetup.sif\", \"\\\\minint\\\\system32\\\\\" };",
          "1172:  const char* patch_str_rep[] = { \"\\\\i386\\\\txtsetup.sif\", \"\\\\i386\\\\system32\\\\\" };",
          "1173:  const char *win_nt_bt_org = \"$win_nt$.~bt\", *win_nt_bt_rep = \"i386\";",
          "",
          "[Added Lines]",
          "1170:  const char* basedir[3] = { \"i386\", \"amd64\", \"minint\" };",
          "1171:  const char* patch_str_org[2] = { \"\\\\minint\\\\txtsetup.sif\", \"\\\\minint\\\\system32\\\\\" };",
          "1172:  const char* patch_str_rep[2][2] = { { \"\\\\i386\\\\txtsetup.sif\", \"\\\\i386\\\\system32\\\\\" } ,",
          "1173:           { \"\\\\amd64\\\\txtsetup.sif\", \"\\\\amd64\\\\system32\\\\\" } };",
          "1174:  const char *win_nt_bt_org = \"$win_nt$.~bt\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1179:  BOOL r = FALSE;",
          "1180:  char* buffer = NULL;",
          "1184:  static_sprintf(setupsrcdev, \"SetupSourceDevice = \\\"\\\\device\\\\harddisk%d\\\\partition1\\\"\",",
          "1185:   ComboBox_GetCurSel(hDiskID));",
          "1188:  static_sprintf(dst, \"%c:\\\\ntdetect.com\", drive_letter);",
          "1189:  CopyFileA(src, dst, TRUE);",
          "1190:  if (!img_report.uses_minint) {",
          "1192:   static_sprintf(src, \"%c:\\\\%s\\\\txtsetup.sif\", drive_letter, basedir[index]);",
          "1193:   static_sprintf(dst, \"%c:\\\\txtsetup.sif\", drive_letter);",
          "1194:   if (!CopyFileA(src, dst, TRUE)) {",
          "",
          "[Removed Lines]",
          "1182:  index = ((img_report.winpe&WINPE_I386) == WINPE_I386)?0:1;",
          "1187:  static_sprintf(src, \"%c:\\\\%s\\\\ntdetect.com\", drive_letter, basedir[index]);",
          "",
          "[Added Lines]",
          "1183:  if ((img_report.winpe & WINPE_AMD64) == WINPE_AMD64)",
          "1184:   index = 1;",
          "1185:  else if ((img_report.winpe & WINPE_MININT) == WINPE_MININT)",
          "1186:   index = 2;",
          "1191:  static_sprintf(src, \"%c:\\\\%s\\\\ntdetect.com\", drive_letter, basedir[2*(index/2)]);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1201:   uprintf(\"Successfully added '%s' to %s\\n\", setupsrcdev, dst);",
          "1202:  }",
          "1205:  static_sprintf(dst, \"%c:\\\\BOOTMGR\", drive_letter);",
          "1206:  if (!CopyFileA(src, dst, TRUE)) {",
          "1207:   uprintf(\"Did not copy %s as %s: %s\\n\", src, dst, WindowsErrorString());",
          "",
          "[Removed Lines]",
          "1204:  static_sprintf(src, \"%c:\\\\%s\\\\setupldr.bin\", drive_letter,  basedir[index]);",
          "",
          "[Added Lines]",
          "1208:  static_sprintf(src, \"%c:\\\\%s\\\\setupldr.bin\", drive_letter,  basedir[2*(index/2)]);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1213:   if (img_report.uses_minint) {",
          "1214:    uprintf(\"Detected \\\\minint directory with /minint option: nothing to patch\\n\");",
          "1215:    r = TRUE;",
          "1217:    uprintf(\"Detected \\\\minint directory only but no /minint option: not sure what to do\\n\");",
          "1218:   }",
          "1219:   goto out;",
          "",
          "[Removed Lines]",
          "1216:   } else if (!(img_report.winpe&WINPE_I386)) {",
          "",
          "[Added Lines]",
          "1220:   } else if (!(img_report.winpe&(WINPE_I386|WINPE_AMD64))) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1254:  for (i=1; i<size-32; i++) {",
          "1255:   for (j=0; j<ARRAYSIZE(patch_str_org); j++) {",
          "1256:    if (safe_strnicmp(&buffer[i], patch_str_org[j], strlen(patch_str_org[j])-1) == 0) {",
          "1260:    }",
          "1261:   }",
          "1262:  }",
          "",
          "[Removed Lines]",
          "1257:     uprintf(\"  0x%08X: '%s' -> '%s'\\n\", i, &buffer[i], patch_str_rep[j]);",
          "1258:     strcpy(&buffer[i], patch_str_rep[j]);",
          "1259:     i += (DWORD)max(strlen(patch_str_org[j]), strlen(patch_str_rep[j])); // in case org is a substring of rep",
          "",
          "[Added Lines]",
          "1261:     uprintf(\"  0x%08X: '%s' -> '%s'\\n\", i, &buffer[i], patch_str_rep[index][j]);",
          "1262:     strcpy(&buffer[i], patch_str_rep[index][j]);",
          "1263:     i += (DWORD)max(strlen(patch_str_org[j]), strlen(patch_str_rep[index][j])); // in case org is a substring of rep",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1270:     buffer[i+6] = 0x30 + ComboBox_GetCurSel(hDiskID);",
          "1271:     uprintf(\"  0x%08X: '%s' -> 'rdisk(%c)'\\n\", i, rdisk_zero, buffer[i+6]);",
          "1272:    }",
          "1274:    if (safe_strnicmp(&buffer[i], win_nt_bt_org, strlen(win_nt_bt_org)-1) == 0) {",
          "1280:    }",
          "1281:   }",
          "1282:  }",
          "",
          "[Removed Lines]",
          "1275:     uprintf(\"  0x%08X: '%s' -> '%s%s'\\n\", i, &buffer[i], win_nt_bt_rep, &buffer[i+strlen(win_nt_bt_org)]);",
          "1276:     strcpy(&buffer[i], win_nt_bt_rep);",
          "1278:     buffer[i+strlen(win_nt_bt_rep)] = buffer[i+strlen(win_nt_bt_org)];",
          "1279:     buffer[i+strlen(win_nt_bt_rep)+1] = 0;",
          "",
          "[Added Lines]",
          "1279:     uprintf(\"  0x%08X: '%s' -> '%s%s'\\n\", i, &buffer[i], basedir[index], &buffer[i+strlen(win_nt_bt_org)]);",
          "1280:     strcpy(&buffer[i], basedir[index]);",
          "1282:     buffer[i+strlen(basedir[index])] = buffer[i+strlen(win_nt_bt_org)];",
          "1283:     buffer[i+strlen(basedir[index])+1] = 0;",
          "",
          "---------------"
        ],
        "src/iso.c||src/iso.c": [
          "File: src/iso.c -> src/iso.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "84: static const char* grub_cfg = \"grub.cfg\";",
          "85: static const char* syslinux_cfg[] = { \"isolinux.cfg\", \"syslinux.cfg\", \"extlinux.conf\" };",
          "86: static const char* isolinux_bin[] = { \"isolinux.bin\", \"boot.bin\" };",
          "88: static const char* pe_file[] = { \"ntdetect.com\", \"setupldr.bin\", \"txtsetup.sif\" };",
          "89: static const char* reactos_name = \"setupldr.sys\"; // TODO: freeldr.sys doesn't seem to work",
          "90: static const char* kolibri_name = \"kolibri.img\";",
          "",
          "[Removed Lines]",
          "87: static const char* pe_dirname[] = { \"/i386\", \"/minint\" };",
          "",
          "[Added Lines]",
          "87: static const char* pe_dirname[] = { \"/i386\", \"/amd64\", \"/minint\" };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "222:      static_sprintf(img_report.install_wim_path, \"?:\\\\%s\\\\%s\", &install_wim_path[1], install_wim_name[i]);",
          "223:   }",
          "226:   for (i=0; i<ARRAYSIZE(pe_dirname); i++)",
          "227:    if (safe_stricmp(psz_dirname, pe_dirname[i]) == 0)",
          "228:     for (j=0; j<ARRAYSIZE(pe_file); j++)",
          "229:      if (safe_stricmp(psz_basename, pe_file[j]) == 0)",
          "232:   if (props->is_syslinux_cfg) {",
          "",
          "[Removed Lines]",
          "230:       img_report.winpe |= (1<<i)<<(ARRAYSIZE(pe_dirname)*j);",
          "",
          "[Added Lines]",
          "230:       img_report.winpe |= (1<<j)<<(ARRAYSIZE(pe_dirname)*i);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "664:  udf_dirent_t* p_udf_root;",
          "665:  char *tmp, *buf, *ext;",
          "666:  char path[MAX_PATH], path2[16];",
          "668:  const char* tmp_sif = \".\\\\txtsetup.sif~\";",
          "669:  iso_extension_mask_t iso_extension_mask = ISO_EXTENSION_ALL;",
          "670:  char* spacing = \"  \";",
          "",
          "[Removed Lines]",
          "667:  const char* basedir[] = { \"i386\", \"minint\" };",
          "",
          "[Added Lines]",
          "667:  const char* basedir[] = { \"i386\", \"amd64\", \"minint\" };",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "861:    static_sprintf(path, \"/%s/txtsetup.sif\",",
          "863:    ExtractISOFile(src_iso, path, tmp_sif, FILE_ATTRIBUTE_NORMAL);",
          "864:    tmp = get_token_data_file(\"OsLoadOptions\", tmp_sif);",
          "865:    if (tmp != NULL) {",
          "",
          "[Removed Lines]",
          "862:     basedir[((img_report.winpe&WINPE_I386) == WINPE_I386)?0:1]);",
          "",
          "[Added Lines]",
          "862:     basedir[((img_report.winpe&WINPE_I386) == WINPE_I386)?0:((img_report.winpe&WINPE_AMD64) == WINPE_AMD64?1:2)]);",
          "",
          "---------------"
        ],
        "src/rufus.h||src/rufus.h": [
          "File: src/rufus.h -> src/rufus.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "254: #define OLD_C32_THRESHOLD   { 53500, 148000 }",
          "259: #define MAX_WIM_VERSION     0x000E0000",
          "260: #define HAS_KOLIBRIOS(r)    (r.has_kolibrios)",
          "261: #define HAS_REACTOS(r)      (r.reactos_path[0] != 0)",
          "",
          "[Removed Lines]",
          "257: #define WINPE_MININT        0x2A",
          "258: #define WINPE_I386          0x15",
          "",
          "[Added Lines]",
          "257: #define WINPE_I386          0x0007",
          "258: #define WINPE_AMD64         0x0023",
          "259: #define WINPE_MININT        0x01C0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "263: #define HAS_SYSLINUX(r)     (r.sl_version != 0)",
          "264: #define HAS_BOOTMGR(r)      (r.has_bootmgr)",
          "265: #define HAS_INSTALL_WIM(r)  (r.install_wim_path[0] != 0)",
          "267: #define HAS_WINDOWS(r)      (HAS_BOOTMGR(r) || (r.uses_minint) || HAS_WINPE(r))",
          "268: #define HAS_WIN7_EFI(r)     ((r.has_efi == 1) && HAS_INSTALL_WIM(r))",
          "269: #define HAS_EFI_IMG(r)      (r.efi_img_path[0] != 0)",
          "",
          "[Removed Lines]",
          "266: #define HAS_WINPE(r)        (((r.winpe & WINPE_MININT) == WINPE_MININT)||((r.winpe & WINPE_I386) == WINPE_I386))",
          "",
          "[Added Lines]",
          "267: #define HAS_WINPE(r)        (((r.winpe & WINPE_I386) == WINPE_I386)||((r.winpe & WINPE_AMD64) == WINPE_AMD64)||((r.winpe & WINPE_MININT) == WINPE_MININT))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "286:  uint32_t install_wim_version;",
          "287:  BOOLEAN is_iso;",
          "288:  BOOLEAN is_bootable_img;",
          "290:  uint8_t has_efi;",
          "291:  BOOLEAN has_4GB_file;",
          "292:  BOOLEAN has_long_filename;",
          "",
          "[Removed Lines]",
          "289:  uint8_t winpe;",
          "",
          "[Added Lines]",
          "290:  uint16_t winpe;",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 232, 326",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 9, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Drive Properties\",IDS_DRIVE_PROPERTIES_TXT,8,6,53,12,NOT WS_GROUP",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 3.1.1321\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 3.1.1322\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "391: VS_VERSION_INFO VERSIONINFO",
          "394:  FILEFLAGSMASK 0x3fL",
          "395: #ifdef _DEBUG",
          "396:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "392:  FILEVERSION 3,1,1321,0",
          "393:  PRODUCTVERSION 3,1,1321,0",
          "",
          "[Added Lines]",
          "392:  FILEVERSION 3,1,1322,0",
          "393:  PRODUCTVERSION 3,1,1322,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "407:         BEGIN",
          "408:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "409:             VALUE \"FileDescription\", \"Rufus\"",
          "411:             VALUE \"InternalName\", \"Rufus\"",
          "412:             VALUE \"LegalCopyright\", \"\ufffd 2011-2018 Pete Batard (GPL v3)\"",
          "413:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "414:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "415:             VALUE \"ProductName\", \"Rufus\"",
          "417:         END",
          "418:     END",
          "419:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "410:             VALUE \"FileVersion\", \"3.1.1321\"",
          "416:             VALUE \"ProductVersion\", \"3.1.1321\"",
          "",
          "[Added Lines]",
          "410:             VALUE \"FileVersion\", \"3.1.1322\"",
          "416:             VALUE \"ProductVersion\", \"3.1.1322\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d620d8848d16c545e0d7b326f494e1edf24d5f0b",
      "candidate_info": {
        "commit_hash": "d620d8848d16c545e0d7b326f494e1edf24d5f0b",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/d620d8848d16c545e0d7b326f494e1edf24d5f0b",
        "files": [
          "src/rufus.c",
          "src/rufus.rc"
        ],
        "message": "[loc] fix RTL display of ISO truncation notification\n\n* Also don't use MessageBoxU where unneeded",
        "before_after_code_files": [
          "src/rufus.c||src/rufus.c",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "src/rufus.c||src/rufus.c": [
          "File: src/rufus.c -> src/rufus.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "972:  if (img_report.mismatch_size > 0) {",
          "973:   uprintf(\"  ERROR: Detected that file on disk has been truncated by %s!\",",
          "974:    SizeToHumanReadable(img_report.mismatch_size, FALSE, FALSE));",
          "977:  } else if (img_report.mismatch_size < 0) {",
          "979:   uprintf(\"  Note: File on disk is larger than reported ISO size by %s...\",",
          "",
          "[Removed Lines]",
          "975:   MessageBoxU(hMainDialog, lmprintf(MSG_298, SizeToHumanReadable(img_report.mismatch_size, FALSE, FALSE)),",
          "976:    lmprintf(MSG_297), MB_ICONWARNING);",
          "",
          "[Added Lines]",
          "975:   MessageBoxExU(hMainDialog, lmprintf(MSG_298, SizeToHumanReadable(img_report.mismatch_size, FALSE, FALSE)),",
          "976:    lmprintf(MSG_297), MB_ICONWARNING | MB_IS_RTL, selected_langid);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3197:  if ( (!get_supported_locales(loc_file))",
          "3198:    || ((selected_locale = ((locale_name == NULL)?get_locale_from_lcid(lcid, TRUE):get_locale_from_name(locale_name, TRUE))) == NULL) ) {",
          "3199:   uprintf(\"FATAL: Could not access locale!\");",
          "3201:    \"Fatal error\", MB_ICONSTOP|MB_SYSTEMMODAL);",
          "3202:   goto out;",
          "3203:  }",
          "",
          "[Removed Lines]",
          "3200:   MessageBoxU(NULL, \"The locale data is missing or invalid. This application will now exit.\",",
          "",
          "[Added Lines]",
          "3200:   MessageBoxA(NULL, \"The locale data is missing or invalid. This application will now exit.\",",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 2.16.1167\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 2.16.1168\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "368: VS_VERSION_INFO VERSIONINFO",
          "371:  FILEFLAGSMASK 0x3fL",
          "372: #ifdef _DEBUG",
          "373:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "369:  FILEVERSION 2,16,1167,0",
          "370:  PRODUCTVERSION 2,16,1167,0",
          "",
          "[Added Lines]",
          "369:  FILEVERSION 2,16,1168,0",
          "370:  PRODUCTVERSION 2,16,1168,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "384:         BEGIN",
          "385:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "386:             VALUE \"FileDescription\", \"Rufus\"",
          "388:             VALUE \"InternalName\", \"Rufus\"",
          "389:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
          "390:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "391:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "392:             VALUE \"ProductName\", \"Rufus\"",
          "394:         END",
          "395:     END",
          "396:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "387:             VALUE \"FileVersion\", \"2.16.1167\"",
          "393:             VALUE \"ProductVersion\", \"2.16.1167\"",
          "",
          "[Added Lines]",
          "387:             VALUE \"FileVersion\", \"2.16.1168\"",
          "393:             VALUE \"ProductVersion\", \"2.16.1168\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d5babb5e7240f0a5188a953c28bef48e44e8a1b4",
      "candidate_info": {
        "commit_hash": "d5babb5e7240f0a5188a953c28bef48e44e8a1b4",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/d5babb5e7240f0a5188a953c28bef48e44e8a1b4",
        "files": [
          "src/rufus.c",
          "src/rufus.rc",
          "src/stdio.c"
        ],
        "message": "[ui] disable controls prior to format checks\n\n* Also send Unicode strings to the debug output facility, since Windows 10\n  *FINALLY* added Unicode processing support there...",
        "before_after_code_files": [
          "src/rufus.c||src/rufus.c",
          "src/rufus.rc||src/rufus.rc",
          "src/stdio.c||src/stdio.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "src/rufus.c||src/rufus.c": [
          "File: src/rufus.c -> src/rufus.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2515:    if (format_thid != NULL) {",
          "2516:     return (INT_PTR)TRUE;",
          "2517:    }",
          "2518:    FormatStatus = 0;",
          "2519:    StrArrayClear(&BlockingProcess);",
          "2520:    format_op_in_progress = TRUE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2519:    EnableControls(FALSE);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2528:    nDeviceIndex = ComboBox_GetCurSel(hDeviceList);",
          "2529:    if (nDeviceIndex != CB_ERR) {",
          "2530:     if (!zero_drive) {",
          "2538:      fs = (int)ComboBox_GetItemData(hFileSystem, ComboBox_GetCurSel(hFileSystem));",
          "",
          "[Removed Lines]",
          "2531:      if ((IsChecked(IDC_BOOT)) && (!BootCheck())) {",
          "2532:       format_op_in_progress = FALSE;",
          "2533:       PROCESS_QUEUED_EVENTS;",
          "2534:       break;",
          "2535:      }",
          "",
          "[Added Lines]",
          "2533:      if ((IsChecked(IDC_BOOT)) && (!BootCheck()))",
          "2534:       goto aborted_start;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2558:       i = SelectionDialog(lmprintf(MSG_274), lmprintf(MSG_275, iso_image, dd_image, iso_image, dd_image),",
          "2559:        choices, 2);",
          "2560:       if (i < 0) { // Cancel",
          "2564:       } else if (i == 2) {",
          "2565:        selection_default = BT_IMG;",
          "2566:        SetComboEntry(hBootType, selection_default);",
          "",
          "[Removed Lines]",
          "2561:        format_op_in_progress = FALSE;",
          "2562:        PROCESS_QUEUED_EVENTS;",
          "2563:        break;",
          "",
          "[Added Lines]",
          "2560:        goto aborted_start;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2568:      }",
          "2569:     }",
          "2578:     GetWindowTextU(hDeviceList, tmp, ARRAYSIZE(tmp));",
          "2579:     if (MessageBoxExU(hMainDialog, lmprintf(MSG_003, tmp),",
          "2586:     if ((SelectedDrive.nPartitions > 1) && (MessageBoxExU(hMainDialog, lmprintf(MSG_093),",
          "2593:     if ((!zero_drive) && (IsChecked(IDC_BOOT)) && (SelectedDrive.SectorSize != 512) &&",
          "2594:      (MessageBoxExU(hMainDialog, lmprintf(MSG_196, SelectedDrive.SectorSize),",
          "2603:     DeviceNum = (DWORD)ComboBox_GetItemData(hDeviceList, nDeviceIndex);",
          "2604:     InitProgress(zero_drive);",
          "2605:     format_thid = CreateThread(NULL, 0, FormatThread, (LPVOID)(uintptr_t)DeviceNum, 0, NULL);",
          "",
          "[Removed Lines]",
          "2571:     if (!CheckDriveAccess()) {",
          "2572:      format_op_in_progress = FALSE;",
          "2573:      zero_drive = FALSE;",
          "2574:      PROCESS_QUEUED_EVENTS;",
          "2575:      break;",
          "2576:     }",
          "2580:      APPLICATION_NAME, MB_OKCANCEL|MB_ICONWARNING|MB_IS_RTL, selected_langid) == IDCANCEL) {",
          "2581:      format_op_in_progress = FALSE;",
          "2582:      zero_drive = FALSE;",
          "2583:      PROCESS_QUEUED_EVENTS;",
          "2584:      break;",
          "2585:     }",
          "2587:      lmprintf(MSG_094), MB_OKCANCEL|MB_ICONWARNING|MB_IS_RTL, selected_langid) == IDCANCEL)) {",
          "2588:      format_op_in_progress = FALSE;",
          "2589:      zero_drive = FALSE;",
          "2590:      PROCESS_QUEUED_EVENTS;",
          "2591:      break;",
          "2592:     }",
          "2595:       lmprintf(MSG_197), MB_OKCANCEL|MB_ICONWARNING|MB_IS_RTL, selected_langid) == IDCANCEL)) {",
          "2596:      format_op_in_progress = FALSE;",
          "2597:      PROCESS_QUEUED_EVENTS;",
          "2598:      break;",
          "2599:     }",
          "2602:     EnableControls(FALSE);",
          "",
          "[Added Lines]",
          "2568:     if (!CheckDriveAccess())",
          "2569:      goto aborted_start;",
          "2573:      APPLICATION_NAME, MB_OKCANCEL|MB_ICONWARNING|MB_IS_RTL, selected_langid) == IDCANCEL)",
          "2574:      goto aborted_start;",
          "2576:      lmprintf(MSG_094), MB_OKCANCEL|MB_ICONWARNING|MB_IS_RTL, selected_langid) == IDCANCEL))",
          "2577:      goto aborted_start;",
          "2580:       lmprintf(MSG_197), MB_OKCANCEL|MB_ICONWARNING|MB_IS_RTL, selected_langid) == IDCANCEL))",
          "2581:      goto aborted_start;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2607:      uprintf(\"Unable to start formatting thread\");",
          "2608:      FormatStatus = ERROR_SEVERITY_ERROR|FAC(FACILITY_STORAGE)|APPERR(ERROR_CANT_START_THREAD);",
          "2609:      PostMessage(hMainDialog, UM_FORMAT_COMPLETED, (WPARAM)FALSE, 0);",
          "2610:     }",
          "2622:    }",
          "2623:    break;",
          "2624:   case IDC_HASH:",
          "2625:    if ((format_thid == NULL) && (image_path != NULL)) {",
          "",
          "[Removed Lines]",
          "2611:     uprintf(\"\\r\\nFormat operation started\");",
          "2612:     PrintInfo(0, -1);",
          "2613:     timer = 0;",
          "2614:     safe_sprintf(szTimer, sizeof(szTimer), \"00:00:00\");",
          "2615:     SendMessageA(hStatus, SB_SETTEXTA, SBT_OWNERDRAW | SB_SECTION_RIGHT, (LPARAM)szTimer);",
          "2616:     SetTimer(hMainDialog, TID_APP_TIMER, 1000, ClockTimer);",
          "2617:    }",
          "2618:    if (format_thid == NULL) {",
          "2619:     format_op_in_progress = FALSE;",
          "2620:     zero_drive = FALSE;",
          "2621:     PROCESS_QUEUED_EVENTS;",
          "",
          "[Added Lines]",
          "2590:     } else {",
          "2591:      uprintf(\"\\r\\nFormat operation started\");",
          "2592:      PrintInfo(0, -1);",
          "2593:      timer = 0;",
          "2594:      safe_sprintf(szTimer, sizeof(szTimer), \"00:00:00\");",
          "2595:      SendMessageA(hStatus, SB_SETTEXTA, SBT_OWNERDRAW | SB_SECTION_RIGHT, (LPARAM)szTimer);",
          "2596:      SetTimer(hMainDialog, TID_APP_TIMER, 1000, ClockTimer);",
          "2599:    if (format_thid != NULL)",
          "2600:     break;",
          "2601:   aborted_start:",
          "2602:    format_op_in_progress = FALSE;",
          "2603:    EnableControls(TRUE);",
          "2604:    zero_drive = FALSE;",
          "2605:    PROCESS_QUEUED_EVENTS;",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 2.16.1148\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 2.16.1149\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "368: VS_VERSION_INFO VERSIONINFO",
          "371:  FILEFLAGSMASK 0x3fL",
          "372: #ifdef _DEBUG",
          "373:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "369:  FILEVERSION 2,16,1148,0",
          "370:  PRODUCTVERSION 2,16,1148,0",
          "",
          "[Added Lines]",
          "369:  FILEVERSION 2,16,1149,0",
          "370:  PRODUCTVERSION 2,16,1149,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "384:         BEGIN",
          "385:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "386:             VALUE \"FileDescription\", \"Rufus\"",
          "388:             VALUE \"InternalName\", \"Rufus\"",
          "389:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
          "390:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "391:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "392:             VALUE \"ProductName\", \"Rufus\"",
          "394:         END",
          "395:     END",
          "396:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "387:             VALUE \"FileVersion\", \"2.16.1148\"",
          "393:             VALUE \"ProductVersion\", \"2.16.1148\"",
          "",
          "[Added Lines]",
          "387:             VALUE \"FileVersion\", \"2.16.1149\"",
          "393:             VALUE \"ProductVersion\", \"2.16.1149\"",
          "",
          "---------------"
        ],
        "src/stdio.c||src/stdio.c": [
          "File: src/stdio.c -> src/stdio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: char ubuffer[UBUFFER_SIZE]; // Buffer for ubpushf() messages we don't log right away",
          "44: #ifdef RUFUS_LOGGING",
          "45: void _uprintf(const char *format, ...)",
          "46: {",
          "47:  static char buf[4096];",
          "48:  char* p = buf;",
          "49:  va_list args;",
          "50:  int n;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45: #define Edit_ReplaceSelW(hCtrl, wstr) ((void)SendMessageW(hCtrl, EM_REPLACESEL, (WPARAM)FALSE, (LPARAM)wstr))",
          "50:  wchar_t* wbuf;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "67:  if ((hLog != NULL) && (hLog != INVALID_HANDLE_VALUE)) {",
          "69:   Edit_SetSel(hLog, MAX_LOG_SIZE, MAX_LOG_SIZE);",
          "73:   SendMessage(hLog, EM_LINESCROLL, 0, SendMessage(hLog, EM_GETLINECOUNT, 0, 0));",
          "74:  }",
          "75: }",
          "76: #endif",
          "",
          "[Removed Lines]",
          "66:  OutputDebugStringA(buf);",
          "70:   Edit_ReplaceSelU(hLog, buf);",
          "",
          "[Added Lines]",
          "68:  wbuf = utf8_to_wchar(buf);",
          "70:  OutputDebugStringW(wbuf);",
          "74:   Edit_ReplaceSelW(hLog, wbuf);",
          "79:  free(wbuf);",
          "",
          "---------------"
        ]
      }
    }
  ]
}