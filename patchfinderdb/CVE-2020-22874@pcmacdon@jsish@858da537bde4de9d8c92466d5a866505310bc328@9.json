{
  "cve_id": "CVE-2020-22874",
  "cve_desc": "Integer overflow vulnerability in function Jsi_ObjArraySizer in jsish before 3.0.8, allows remote attackers to execute arbitrary code.",
  "repo": "pcmacdon/jsish",
  "patch_hash": "858da537bde4de9d8c92466d5a866505310bc328",
  "patch_info": {
    "commit_hash": "858da537bde4de9d8c92466d5a866505310bc328",
    "repo": "pcmacdon/jsish",
    "commit_url": "https://github.com/pcmacdon/jsish/commit/858da537bde4de9d8c92466d5a866505310bc328",
    "files": [
      "md/Reference.md",
      "src/jsi.h",
      "src/jsiArray.c",
      "src/jsiCData.c",
      "src/jsiInt.h",
      "src/jsiInterp.c",
      "src/jsiObj.c",
      "src/jsiValue.c",
      "tools/protos.jsi",
      "www/reference.wiki"
    ],
    "message": "Release \"3.0.8\": Address Array alloc sizing issues from issue \"integer overflow and buffer overflow #5\".\n\nFossilOrigin-Name: 8c46a1d465b358110dcfb271721d35fe843a1b52f2fa24ccc10094eb8aaf6fe4",
    "before_after_code_files": [
      "src/jsi.h||src/jsi.h",
      "src/jsiArray.c||src/jsiArray.c",
      "src/jsiCData.c||src/jsiCData.c",
      "src/jsiInt.h||src/jsiInt.h",
      "src/jsiInterp.c||src/jsiInterp.c",
      "src/jsiObj.c||src/jsiObj.c",
      "src/jsiValue.c||src/jsiValue.c",
      "tools/protos.jsi||tools/protos.jsi",
      "www/reference.wiki||www/reference.wiki"
    ]
  },
  "patch_diff": {
    "src/jsi.h||src/jsi.h": [
      "File: src/jsi.h -> src/jsi.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: #define JSI_VERSION_MAJOR   3",
      "6: #define JSI_VERSION_MINOR   0",
      "9: #define JSI_VERSION (JSI_VERSION_MAJOR + ((Jsi_Number)JSI_VERSION_MINOR/100.0) + ((Jsi_Number)JSI_VERSION_RELEASE/10000.0))",
      "",
      "[Removed Lines]",
      "7: #define JSI_VERSION_RELEASE 7",
      "",
      "[Added Lines]",
      "7: #define JSI_VERSION_RELEASE 8",
      "",
      "---------------"
    ],
    "src/jsiArray.c||src/jsiArray.c": [
      "File: src/jsiArray.c -> src/jsiArray.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "267:             rc = jsi_ArrayFlatSub(interp, nobj, t , depth-1);",
      "268:         else if (!Jsi_ValueIsUndef(interp, t))",
      "269:             Jsi_ObjArrayAdd(interp, nobj, t);",
      "271:             return Jsi_LogError(\"array size exceeded\");",
      "272:     }",
      "273:     return rc;",
      "",
      "[Removed Lines]",
      "270:         if ((++n + clen)>interp->maxArrayList)",
      "",
      "[Added Lines]",
      "270:         if ((uint)(++n + clen)>interp->maxArrayList)",
      "",
      "---------------"
    ],
    "src/jsiCData.c||src/jsiCData.c": [
      "File: src/jsiCData.c -> src/jsiCData.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1276:             sf->flags |= JSI_OPT_BITSET_ENUM;",
      "1277:         }",
      "1278:         if (sf->arrSize) {",
      "1281:                 goto bail;",
      "1282:             }",
      "1283:             if (sf->bits || isEnum) {",
      "",
      "[Removed Lines]",
      "1279:             if (sf->arrSize>MAX_ARRAY_LIST) {",
      "1280:                 rc = Jsi_LogError(\"array size too big: %d >= %d\", sf->arrSize, MAX_ARRAY_LIST);",
      "",
      "[Added Lines]",
      "1279:             if (sf->arrSize>interp->maxArrayList) {",
      "1280:                 rc = Jsi_LogError(\"array size too big: %d >= %d\", sf->arrSize, interp->maxArrayList);",
      "",
      "---------------"
    ],
    "src/jsiInt.h||src/jsiInt.h": [
      "File: src/jsiInt.h -> src/jsiInt.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1259:     Jsi_Value *Top_object;",
      "1260:     Jsi_ScopeStrs *scopes[JSI_MAX_SCOPE];",
      "1261:     int cur_scope;",
      "1263:     int delRBCnt;",
      "1264:     Jsi_Func *activeFunc;  // Currently active function call.",
      "1265:     Jsi_Func *prevActiveFunc;  // Prev active function call.",
      "",
      "[Removed Lines]",
      "1262:     int maxArrayList;",
      "",
      "[Added Lines]",
      "1262:     uint maxArrayList;",
      "",
      "---------------"
    ],
    "src/jsiInterp.c||src/jsiInterp.c": [
      "File: src/jsiInterp.c -> src/jsiInterp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "100:     JSI_OPT(INT,   Jsi_Interp, lockTimeout, .help=\"Thread time-out for mutex lock acquires (milliseconds)\" ),",
      "101:     JSI_OPT(CUSTOM,Jsi_Interp, logOpts,     .help=\"Options for log output to add file/line/time\", .flags=0, .custom=Jsi_Opt_SwitchSuboption, .data=jsi_InterpLogOptions),",
      "102:     JSI_OPT(INT,   Jsi_Interp, maxDepth,    .help=\"Depth limit of recursive function calls (1000)\", .flags=JSI_OPT_LOCKSAFE),",
      "104:     JSI_OPT(INT,   Jsi_Interp, maxIncDepth, .help=\"Maximum allowed source/require nesting depth (50)\", .flags=JSI_OPT_LOCKSAFE),",
      "105:     JSI_OPT(INT,   Jsi_Interp, maxInterpDepth,.help=\"Maximum nested subinterp create depth (10)\", .flags=JSI_OPT_LOCKSAFE),",
      "106:     JSI_OPT(INT,   Jsi_Interp, maxUserObjs, .help=\"Maximum number of 'new' object calls, eg. File, RegExp, etc\", .flags=JSI_OPT_LOCKSAFE ),",
      "",
      "[Removed Lines]",
      "103:     JSI_OPT(INT,   Jsi_Interp, maxArrayList,.help=\"Maximum array convertable to list (100000)\", .flags=JSI_OPT_LOCKSAFE),",
      "",
      "[Added Lines]",
      "103:     JSI_OPT(UINT,  Jsi_Interp, maxArrayList,.help=\"Maximum array convertable to list (100000)\", .flags=JSI_OPT_LOCKSAFE),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1146:     }",
      "1147:     interp->maxDepth = JSI_MAX_EVAL_DEPTH;",
      "1148:     interp->maxIncDepth = JSI_MAX_INCLUDE_DEPTH;",
      "1149:     interp->typeWarnMax = 50;",
      "1150:     interp->subOpts.dblPrec = __DBL_DECIMAL_DIG__-1;",
      "1151:     interp->subOpts.prompt = \"$ \";",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1149:     interp->maxArrayList = MAX_ARRAY_LIST;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1482: #endif",
      "1483:     if (interp->typeCheck.all|interp->typeCheck.parse|interp->typeCheck.funcsig)",
      "1484:         interp->staticFuncsTbl = Jsi_HashNew(interp, JSI_KEYS_STRING, NULL);",
      "1486:     if (!jsiIntData.isInit) {",
      "1487:         jsiIntData.isInit = 1;",
      "1488:         jsi_InitValue(interp, 0);",
      "",
      "[Removed Lines]",
      "1485:     interp->maxArrayList = MAX_ARRAY_LIST;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/jsiObj.c||src/jsiObj.c": [
      "File: src/jsiObj.c -> src/jsiObj.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "76:         if (!cp || !isdigit(*cp))",
      "77:             return JSI_OK;",
      "78:         n = (int)strtol(cp, &ep, 0);",
      "80:             return JSI_OK;",
      "81:         hPtr->f.bits.isarrlist = 1;",
      "82:         if (Jsi_ObjArraySizer(interp, obj, n) <= 0)",
      "",
      "[Removed Lines]",
      "79:         if (n<0 || n >= interp->maxArrayList)",
      "",
      "[Added Lines]",
      "79:         if (n<0 || (uint)n >= interp->maxArrayList)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "415: int Jsi_ObjArraySizer(Jsi_Interp *interp, Jsi_Obj *obj, uint len)",
      "416: {",
      "418:     assert(obj->isarrlist);",
      "419:     if (mod>1)",
      "420:         nsiz = nsiz + ((mod-1) - (nsiz + mod - 1)%mod);",
      "423:         return 0;",
      "424:     }",
      "425:     if (len >= obj->arrMaxSize) {",
      "",
      "[Removed Lines]",
      "417:     int nsiz = len + 1, mod = ALLOC_MOD_SIZE;",
      "421:     if (nsiz > MAX_ARRAY_LIST) {",
      "422:         Jsi_LogError(\"array size too large\");",
      "",
      "[Added Lines]",
      "417:     uint nsiz = len + 1, mod = ALLOC_MOD_SIZE;",
      "421:     if (len >= interp->maxArrayList || nsiz > interp->maxArrayList) {",
      "422:         Jsi_LogError(\"array size too big: %u >= %u\", len, interp->maxArrayList);",
      "",
      "---------------"
    ],
    "src/jsiValue.c||src/jsiValue.c": [
      "File: src/jsiValue.c -> src/jsiValue.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1036:     }",
      "1040:         target->vt == JSI_VT_OBJECT && target->d.obj->arr) {",
      "1041:         return jsi_ObjArraySetDup(interp, target->d.obj, value, arrayindex);",
      "1042:     }",
      "",
      "[Removed Lines]",
      "1039:     if (arrayindex >= 0 && arrayindex < MAX_ARRAY_LIST &&",
      "",
      "[Added Lines]",
      "1039:     if (arrayindex >= 0 && (uint)arrayindex < interp->maxArrayList &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1373:     Jsi_Obj *obj = target->d.obj;",
      "1375:     if (obj->isarrlist) {",
      "1377:             Jsi_ObjArraySet(interp, obj, val, key);",
      "1378:             return JSI_OK;",
      "1379:         }",
      "",
      "[Removed Lines]",
      "1376:         if (key >= 0 && key < interp->maxArrayList) {",
      "",
      "[Added Lines]",
      "1376:         if (key >= 0 && (uint)key < interp->maxArrayList) {",
      "",
      "---------------"
    ],
    "tools/protos.jsi||tools/protos.jsi": [
      "File: tools/protos.jsi -> tools/protos.jsi"
    ],
    "www/reference.wiki||www/reference.wiki": [
      "File: www/reference.wiki -> www/reference.wiki",
      "--- Hunk 1 ---",
      "[Context before]",
      "633: <tr><td>lockTimeout</td><td><i>INT</i></td><td>Thread time-out for mutex lock acquires (milliseconds).</td><td><i></i></td></tr>",
      "634: <tr><td>logOpts</td><td><i><a href='#logOptsOptions'>options</a></i></td><td>Options for log output to add file/line/time.</td><td><i></i></td></tr>",
      "635: <tr><td>maxDepth</td><td><i>INT</i></td><td>Depth limit of recursive function calls (1000).</td><td><i></i></td></tr>",
      "637: <tr><td>maxIncDepth</td><td><i>INT</i></td><td>Maximum allowed source/require nesting depth (50).</td><td><i></i></td></tr>",
      "638: <tr><td>maxInterpDepth</td><td><i>INT</i></td><td>Maximum nested subinterp create depth (10).</td><td><i></i></td></tr>",
      "639: <tr><td>maxUserObjs</td><td><i>INT</i></td><td>Maximum number of 'new' object calls, eg. File, RegExp, etc.</td><td><i></i></td></tr>",
      "",
      "[Removed Lines]",
      "636: <tr><td>maxArrayList</td><td><i>INT</i></td><td>Maximum array convertable to list (100000).</td><td><i></i></td></tr>",
      "",
      "[Added Lines]",
      "636: <tr><td>maxArrayList</td><td><i>UINT</i></td><td>Maximum array convertable to list (100000).</td><td><i></i></td></tr>",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "81da5d1618b3f5b28ee43b40a3c652061be72af0",
      "candidate_info": {
        "commit_hash": "81da5d1618b3f5b28ee43b40a3c652061be72af0",
        "repo": "pcmacdon/jsish",
        "commit_url": "https://github.com/pcmacdon/jsish/commit/81da5d1618b3f5b28ee43b40a3c652061be72af0",
        "files": [
          "src/jsi.h",
          "src/jsiUtils.c"
        ],
        "message": "Release \"3.0.32\": fix non-quoting after using \"help\" interactive\n\nFossilOrigin-Name: e8c5da2a2023e21f020cf76d5151b6700bd461e765c946147d58bfb759b4298b",
        "before_after_code_files": [
          "src/jsi.h||src/jsi.h",
          "src/jsiUtils.c||src/jsiUtils.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/jsi.h||src/jsi.h"
          ],
          "candidate": [
            "src/jsi.h||src/jsi.h"
          ]
        }
      },
      "candidate_diff": {
        "src/jsi.h||src/jsi.h": [
          "File: src/jsi.h -> src/jsi.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: #define JSI_VERSION_MAJOR   3",
          "6: #define JSI_VERSION_MINOR   0",
          "9: #define JSI_VERSION (JSI_VERSION_MAJOR + ((Jsi_Number)JSI_VERSION_MINOR/100.0) + ((Jsi_Number)JSI_VERSION_RELEASE/10000.0))",
          "",
          "[Removed Lines]",
          "7: #define JSI_VERSION_RELEASE 31",
          "",
          "[Added Lines]",
          "7: #define JSI_VERSION_RELEASE 32",
          "",
          "---------------"
        ],
        "src/jsiUtils.c||src/jsiUtils.c": [
          "File: src/jsiUtils.c -> src/jsiUtils.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1205:         if (rc == JSI_OK) {",
          "1206:              if (interp->retValue->vt != JSI_VT_UNDEF || interp->subOpts.outUndef) {",
          "1207:                 Jsi_DString eStr = {};",
          "1209:                 Jsi_DSFree(&eStr);",
          "1210:                 fputs(\"\\n\", stdout);",
          "1211:              }",
          "",
          "[Removed Lines]",
          "1208:                 fputs(Jsi_ValueGetDString(interp, interp->retValue, &eStr, hasHelp?0:quote), stdout);",
          "",
          "[Added Lines]",
          "1208:                 fputs(Jsi_ValueGetDString(interp, interp->retValue, &eStr, wantHelp?0:quote), stdout);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "904c1df4ed521da87649696b80f5d4f89b3ddff5",
      "candidate_info": {
        "commit_hash": "904c1df4ed521da87649696b80f5d4f89b3ddff5",
        "repo": "pcmacdon/jsish",
        "commit_url": "https://github.com/pcmacdon/jsish/commit/904c1df4ed521da87649696b80f5d4f89b3ddff5",
        "files": [
          "md/Reference.md",
          "src/jsi.h",
          "src/jsiCmds.c",
          "src/jsiEval.c",
          "src/jsiInt.h",
          "src/jsiInterp.c",
          "src/jsiProto.c",
          "src/jsiValue.c",
          "tests/info.jsi",
          "tools/protos.jsi",
          "www/reference.wiki"
        ],
        "message": "Release \"3.0.31\": Fix Object.values error checking\n\nFossilOrigin-Name: ace72b726edad95dcfb5e2c85b9be7427cfdb291f0664f700621ae9fa946584d",
        "before_after_code_files": [
          "src/jsi.h||src/jsi.h",
          "src/jsiCmds.c||src/jsiCmds.c",
          "src/jsiEval.c||src/jsiEval.c",
          "src/jsiInt.h||src/jsiInt.h",
          "src/jsiInterp.c||src/jsiInterp.c",
          "src/jsiProto.c||src/jsiProto.c",
          "src/jsiValue.c||src/jsiValue.c",
          "tests/info.jsi||tests/info.jsi",
          "tools/protos.jsi||tools/protos.jsi",
          "www/reference.wiki||www/reference.wiki"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/jsi.h||src/jsi.h",
            "src/jsiInt.h||src/jsiInt.h",
            "src/jsiInterp.c||src/jsiInterp.c",
            "src/jsiValue.c||src/jsiValue.c",
            "tools/protos.jsi||tools/protos.jsi",
            "www/reference.wiki||www/reference.wiki"
          ],
          "candidate": [
            "src/jsi.h||src/jsi.h",
            "src/jsiInt.h||src/jsiInt.h",
            "src/jsiInterp.c||src/jsiInterp.c",
            "src/jsiValue.c||src/jsiValue.c",
            "tools/protos.jsi||tools/protos.jsi",
            "www/reference.wiki||www/reference.wiki"
          ]
        }
      },
      "candidate_diff": {
        "src/jsi.h||src/jsi.h": [
          "File: src/jsi.h -> src/jsi.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: #define JSI_VERSION_MAJOR   3",
          "6: #define JSI_VERSION_MINOR   0",
          "9: #define JSI_VERSION (JSI_VERSION_MAJOR + ((Jsi_Number)JSI_VERSION_MINOR/100.0) + ((Jsi_Number)JSI_VERSION_RELEASE/10000.0))",
          "",
          "[Removed Lines]",
          "7: #define JSI_VERSION_RELEASE 30",
          "",
          "[Added Lines]",
          "7: #define JSI_VERSION_RELEASE 31",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "137:     JSI_EVAL_ISMAIN         =0x40, // Set isMain to true.",
          "138:     JSI_EVAL_EXISTS         =0x80, // Source if exists.",
          "139:     JSI_EVAL_ERRIGNORE      =0x100,// Source ignores errors.",
          "142:     JSI_CALL_CONSTRUCTOR    =0x1,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "140:     JSI_EVAL_NOEVAL         =0x200,// Source parses only.",
          "",
          "---------------"
        ],
        "src/jsiCmds.c||src/jsiCmds.c": [
          "File: src/jsiCmds.c -> src/jsiCmds.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:     bool trace;",
          "53:     bool once;",
          "54:     bool noError;",
          "55:     bool autoIndex;",
          "56:     bool isMain;",
          "57:     bool global;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55:     bool noEval;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "65:     JSI_OPT(BOOL,   SourceData, global, .help=\"File is to be sourced in global frame rather than local\" ),",
          "66:     JSI_OPT(BOOL,   SourceData, isMain, .help=\"Coerce to true the value of Info.isMain()\" ),",
          "67:     JSI_OPT(UINT,   SourceData, level,  .help=\"Frame to source file in\" ),",
          "68:     JSI_OPT(BOOL,   SourceData, noError,.help=\"Ignore errors in sourced file\" ),",
          "69:     JSI_OPT(BOOL,   SourceData, once,   .help=\"Source file only if not already sourced (Default: Interp.debugOpts.includeOnce)\" ),",
          "70:     JSI_OPT(BOOL,   SourceData, trace,  .help=\"Trace include statements (Default: Interp.debugOpts.includeTrace)\" ),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "69:     JSI_OPT(BOOL,   SourceData, noEval, .help=\"Disable eval: just parses file to check syntax\" ),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "101:         flags|= JSI_EVAL_EXISTS;",
          "102:     if (data.noError)",
          "103:         flags|= JSI_EVAL_ERRIGNORE;",
          "104:     if (data.global) {",
          "105:         flags|= JSI_EVAL_GLOBAL;",
          "106:         if (data.level)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "106:     if (data.noEval)",
          "107:         flags|= JSI_EVAL_NOEVAL;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1581: }",
          "1583: static Jsi_RC SysPutsCmd_(Jsi_Interp *interp, Jsi_Value *args, Jsi_Value *_this, Jsi_Value **ret,",
          "1585: {",
          "1587:     const char *fn = NULL;",
          "1588:     Jsi_DString dStr, oStr;",
          "1589:     if (interp->noStderr)",
          "1590:         stdErr = 0;",
          "1591:     Jsi_Chan *chan = (stdErr ? jsi_Stderr : jsi_Stdout);",
          "",
          "[Removed Lines]",
          "1584:     Jsi_Func *funcPtr, bool stdErr, jsi_LogOptions *popts, const char *argStr, bool conLog)",
          "1586:     int i, cnt = 0, quote = (popts->file);",
          "",
          "[Added Lines]",
          "1588:     Jsi_Func *funcPtr, bool stdErr, jsi_LogOptions *popts, const char *argStr, bool conLog, bool islog)",
          "1590:     int i = 0, cnt = 0, quote = (popts->file);",
          "1593:     Jsi_Value *v;",
          "1594:     if (islog) {",
          "1595:         v = Jsi_ValueArrayIndex(interp, args, 0);",
          "1596:         if (Jsi_ValueIsBoolean(interp, v)) {",
          "1597:             i++;",
          "1598:             if (Jsi_ValueIsFalse(interp, v)) return JSI_OK;",
          "1599:         }",
          "1600:     }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1611:                 || (!interp->logOpts.Info && jsi_PrefixMatch(argStr, \"INFO: \")))",
          "1612:                 goto done;",
          "1613:         }",
          "1617:             if (!v) continue;",
          "1618:             int len = 0;",
          "1619:             if (cnt++)",
          "",
          "[Removed Lines]",
          "1615:         for (i = 0; i < argc; ++i) {",
          "1616:             Jsi_Value *v = Jsi_ValueArrayIndex(interp, args, i);",
          "",
          "[Added Lines]",
          "1626:         for (; i < argc; ++i) {",
          "1627:             v = Jsi_ValueArrayIndex(interp, args, i);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1675:     return SysPrintfCmd_(interp, args, _this, ret, funcPtr, jsi_Stderr);",
          "1676: }",
          "1678: static Jsi_RC consoleLogCmd(Jsi_Interp *interp, Jsi_Value *args, Jsi_Value *_this, Jsi_Value **ret,",
          "1679:     Jsi_Func *funcPtr)",
          "1680: {",
          "1681:     int conLog = ((!interp->logOpts.Error) || (!interp->logOpts.Warn) || (!interp->logOpts.Info));",
          "1683: }",
          "1685: static Jsi_RC consolePutsCmd(Jsi_Interp *interp, Jsi_Value *args, Jsi_Value *_this, Jsi_Value **ret,",
          "1686:     Jsi_Func *funcPtr)",
          "1687: {",
          "1688:     jsi_LogOptions lo = {};",
          "1690: }",
          "1692: #define FN_puts JSI_INFO(\"\\",
          "",
          "[Removed Lines]",
          "1682:     return SysPutsCmd_(interp, args, _this, ret, funcPtr, 1, &interp->logOpts, NULL, conLog);",
          "1689:     return SysPutsCmd_(interp, args, _this, ret, funcPtr, 1, (interp->tracePuts?&interp->logOpts:&lo), NULL, 0);",
          "",
          "[Added Lines]",
          "1689: #define FN_logputs \"\\",
          "1690: If first argument is a boolean, output appears only if true.\"",
          "1695:     return SysPutsCmd_(interp, args, _this, ret, funcPtr, 1, &interp->logOpts, NULL, conLog, 1);",
          "1702:     return SysPutsCmd_(interp, args, _this, ret, funcPtr, 1, (interp->tracePuts?&interp->logOpts:&lo), NULL, 0, 0);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1695:     Jsi_Func *funcPtr)",
          "1696: {",
          "1697:     jsi_LogOptions lo = {};",
          "1699: }",
          "1701: static Jsi_RC SysLogCmd(Jsi_Interp *interp, Jsi_Value *args, Jsi_Value *_this, Jsi_Value **ret,",
          "1702:     Jsi_Func *funcPtr)",
          "1703: {",
          "1705: }",
          "1707: typedef struct {",
          "",
          "[Removed Lines]",
          "1698:     return SysPutsCmd_(interp, args, _this, ret, funcPtr, 0, (interp->tracePuts?&interp->logOpts:&lo), NULL, 0);",
          "1704:     return SysPutsCmd_(interp, args, _this, ret, funcPtr, 0, &interp->logOpts, NULL, 0);",
          "",
          "[Added Lines]",
          "1711:     return SysPutsCmd_(interp, args, _this, ret, funcPtr, 0, (interp->tracePuts?&interp->logOpts:&lo), NULL, 0, 0);",
          "1717:     return SysPutsCmd_(interp, args, _this, ret, funcPtr, 0, &interp->logOpts, NULL, 0, 1);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1804:             jsi_LogOptions lo = {}, *loPtr = ((udata.mode==jsi_AssertModeLog || interp->tracePuts)?&interp->logOpts:&lo);",
          "1805:             Jsi_DSInit(&dStr);",
          "1806:             const char *imsg = Jsi_DSAppend(&dStr, msg, NULL);",
          "1808:             Jsi_DSFree(&dStr);",
          "1809:         } else",
          "1810:             rv = Jsi_LogError(\"%s\", msg);",
          "",
          "[Removed Lines]",
          "1807:             SysPutsCmd_(interp, NULL, _this, ret, funcPtr, !udata.noStderr, loPtr, imsg, 0);",
          "",
          "[Added Lines]",
          "1820:             SysPutsCmd_(interp, NULL, _this, ret, funcPtr, !udata.noStderr, loPtr, imsg, 0, 0);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "4736:     { \"assert\", jsi_AssertCmd,      1,  3, \"expr:boolean|number|function, msg:string=void, options:object=void\",  .help=\"Same as System.assert()\", .retType=(uint)JSI_TT_VOID, .flags=0, .info=0, .opts=AssertOptions},",
          "4737:     { \"error\",  consoleLogCmd,      1, -1, \"val, ...\", .help=\"Same as log\", .retType=(uint)JSI_TT_VOID, .flags=0 },",
          "4738:     { \"input\",  consoleInputCmd,    0,  0, \"\", .help=\"Read input from the console\", .retType=(uint)JSI_TT_STRING|JSI_TT_VOID },",
          "4740:     { \"printf\", consolePrintfCmd,   1, -1, \"format:string, ...\", .help=\"Same as System.printf but goes to stderr\", .retType=(uint)JSI_TT_VOID, .flags=0 },",
          "4741:     { \"puts\",   consolePutsCmd,     1, -1, \"val, ...\", .help=\"Same as System.puts, but goes to stderr\", .retType=(uint)JSI_TT_VOID, .flags=0 },",
          "4742:     { \"warn\",   consoleLogCmd,      1, -1, \"val, ...\", .help=\"Same as log\", .retType=(uint)JSI_TT_VOID, .flags=0 },",
          "",
          "[Removed Lines]",
          "4739:     { \"log\",    consoleLogCmd,      1, -1, \"val, ...\", .help=\"Same as System.puts, but goes to stderr and includes file:line\", .retType=(uint)JSI_TT_VOID, .flags=0 },",
          "",
          "[Added Lines]",
          "4752:     { \"log\",    consoleLogCmd,      1, -1, \"val, ...\", .help=\"Same as System.puts, but goes to stderr and includes file:line\", .retType=(uint)JSI_TT_VOID, .flags=0, .info=FN_logputs },",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "4777:     { \"executable\", InfoExecutableCmd,  0,  0, \"\", .help=\"Return name of executable\", .retType=(uint)JSI_TT_STRING },",
          "4778:     { \"execZip\",    InfoExecZipCmd,     0,  0, \"\", .help=\"If executing a .zip file, return file name\", .retType=(uint)JSI_TT_STRING|JSI_TT_VOID },",
          "4779:     { \"files\",      InfoFilesCmd,       0,  0, \"\", .help=\"Return list of all sourced files\", .retType=(uint)JSI_TT_ARRAY },",
          "4781:     { \"locals\",     InfoLocalsCmd,      0,  1, \"filter:boolean=void\", .help=\"Return locals; use filter=true/false just vars/functions\", .retType=(uint)JSI_TT_OBJECT },",
          "4782:     { \"interp\",     jsi_InterpInfo,     0,  1, \"interp:userobj=void\", .help=\"Return info on given or current interp\", .retType=(uint)JSI_TT_OBJECT },",
          "4783:     { \"isMain\",     InfoIsMainCmd,      0,  0, \"\", .help=\"Return true if current script was the main script invoked from command-line\", .retType=(uint)JSI_TT_BOOLEAN },",
          "",
          "[Removed Lines]",
          "4780:     { \"funcs\",      InfoFuncsCmd,       0,  1, \"arg:string|regexp|object=void\", .help=\"Return details or list of matching functions\", .retType=(uint)JSI_TT_ARRAY|JSI_TT_OBJECT },",
          "",
          "[Added Lines]",
          "4793:     { \"funcs\",      InfoFuncsCmd,       0,  1, \"arg:string|regexp|function|object=void\", .help=\"Return details or list of matching functions\", .retType=(uint)JSI_TT_ARRAY|JSI_TT_OBJECT },",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "4868: #ifndef JSI_OMIT_LOAD",
          "4869:     { \"load\",       jsi_LoadLoadCmd, 1,  1, \"shlib:string\", .help=\"Load a shared executable and invoke its _Init call\", .retType=(uint)JSI_TT_VOID },",
          "4870: #endif",
          "4872:     { \"matchObj\",   SysMatchObjCmd,  1,  4, \"obj:object, match:string=void, partial=false, noerror=false\", .help=\"Validate that object matches given name:type string. With single arg returns generated string\", .retType=(uint)JSI_TT_BOOLEAN|JSI_TT_STRING },",
          "4873:     { \"noOp\",       jsi_NoOpCmd,     0, -1, \"\", .help=\"A No-Op. A zero overhead command call that is useful for debugging\" },",
          "4874:     { \"parseInt\",   parseIntCmd,     1,  2, \"val:any, base:number=10\", .help=\"Convert string to an integer\", .retType=(uint)JSI_TT_NUMBER },",
          "",
          "[Removed Lines]",
          "4871:     { \"log\",        SysLogCmd,       1, -1, \"val, ...\", .help=\"Same as puts, but includes file:line\", .retType=(uint)JSI_TT_VOID, .flags=0 },",
          "",
          "[Added Lines]",
          "4884:     { \"log\",        SysLogCmd,       1, -1, \"val, ...\", .help=\"Same as puts, but includes file:line\", .retType=(uint)JSI_TT_VOID, .flags=0, .info=FN_logputs },",
          "",
          "---------------"
        ],
        "src/jsiEval.c||src/jsiEval.c": [
          "File: src/jsiEval.c -> src/jsiEval.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2265:                 fi = (jsi_FileInfo *)Jsi_Calloc(1,sizeof(*fi));",
          "2266:                 if (!fi) goto bail;",
          "2267:                 Jsi_HashValueSet(hPtr, fi);",
          "2269:                 fi->fileName = (char*)Jsi_KeyAdd(interp, fname);",
          "2270:                 char *dfname = Jsi_Strdup(fname);",
          "2271:                 if ((cp = Jsi_Strrchr(dfname,'/')))",
          "2274:                 Jsi_Free(dfname);",
          "2275:             }",
          "2276:             if (!input->fname)",
          "",
          "[Removed Lines]",
          "2268:                 fi->origFile = (char*)Jsi_KeyAdd(interp, origFile);",
          "2273:                 interp->curDir = fi->dirName = (char*)Jsi_KeyAdd(interp, dfname);",
          "",
          "[Added Lines]",
          "2272:                 fi->dirName = interp->curDir = (char*)Jsi_KeyAdd(interp, dfname);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2344:     interp->evalFlags = flags;",
          "2345:     if (!ps)",
          "2346:         rc = JSI_ERROR;",
          "2348:         Jsi_ValueMakeUndef(interp, &interp->retValue);",
          "2349:         interp->ps = ps;",
          "2350:         Jsi_Value *retValue = interp->retValue;",
          "",
          "[Removed Lines]",
          "2347:     else if (!interp->noEval) {",
          "",
          "[Added Lines]",
          "2346:     else if (!interp->noEval && !(flags&JSI_EVAL_NOEVAL)) {",
          "",
          "---------------"
        ],
        "src/jsiInt.h||src/jsiInt.h": [
          "File: src/jsiInt.h -> src/jsiInt.h"
        ],
        "src/jsiInterp.c||src/jsiInterp.c": [
          "File: src/jsiInterp.c -> src/jsiInterp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1131:     interp = (Jsi_Interp *)Jsi_Calloc(1,sizeof(*interp));",
          "1132:     interp->framePtr = &interp->topFrame;",
          "1133:     interp->framePtr->filePtr = &interp->topFile;",
          "1135:     if (!parent)",
          "1136:         interp->maxInterpDepth = JSI_MAX_SUBINTERP_DEPTH;",
          "1137:     else {",
          "",
          "[Removed Lines]",
          "1134:     interp->topFile.fileName = interp->topFile.dirName = interp->topFile.origFile =\"\";",
          "",
          "[Added Lines]",
          "1134:     interp->topFile.fileName = interp->topFile.dirName = \"\";",
          "",
          "---------------"
        ],
        "src/jsiProto.c||src/jsiProto.c": [
          "File: src/jsiProto.c -> src/jsiProto.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "380:    if (argc>0)",
          "381:         val = Jsi_ValueArrayIndex(interp, args, 0);",
          "384:     if (!Jsi_ValueIsObjType(interp, val, JSI_OT_OBJECT))",
          "386:     Jsi_ValueMakeArrayObject(interp, ret, NULL);",
          "389: }",
          "391: Jsi_RC jsi_ObjectToStringCmd(Jsi_Interp *interp, Jsi_Value *args, Jsi_Value *_this,",
          "",
          "[Removed Lines]",
          "383:     Jsi_RC rc = Jsi_ValueGetKeys(interp, val, *ret);",
          "385:         Jsi_LogError(\"can not call values() with non-object\");",
          "387:     Jsi_ObjGetValues(interp, Jsi_ValueGetObj(interp, val), *ret);",
          "388:     return rc;",
          "",
          "[Added Lines]",
          "384:         return Jsi_LogError(\"can not call values() with non-object\");",
          "386:     return Jsi_ObjGetValues(interp, Jsi_ValueGetObj(interp, val), *ret);",
          "",
          "---------------"
        ],
        "src/jsiValue.c||src/jsiValue.c": [
          "File: src/jsiValue.c -> src/jsiValue.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "123:     if (vd->ip) {",
          "124:         vd->ipLine = vd->ip->Line;",
          "125:         vd->ipOp = vd->ip->op;",
          "127:     }",
          "128:     vd->interp = interp;",
          "129:     if (jsi_memDebugBreakIdx && jsi_memDebugBreakIdx == vd->Idx)",
          "",
          "[Removed Lines]",
          "126:         vd->ipFname = vd->ip->fname;",
          "",
          "[Added Lines]",
          "126:         vd->ipFname = (vd->ip->filePtr?vd->ip->filePtr->fileName:0);",
          "",
          "---------------"
        ],
        "tests/info.jsi||tests/info.jsi": [
          "File: tests/info.jsi -> tests/info.jsi",
          "--- Hunk 1 ---",
          "[Context before]",
          "57: K = {} ==> {}",
          "58: K.f(1) ==> 'F'",
          "59: undefined",
          "63: Info.funcs(K) ==> [ \"f\", \"g\" ]",
          "64: File.tail(Info.script()) ==> info.jsi",
          "65: File.tail(Info.script(XX)) ==> info.jsi",
          "",
          "[Removed Lines]",
          "60: Info.funcs(K.f).argList ==> /home/pmacdona/src/jsi3/tests/info.jsi:29: warn: type mismatch for argument arg 1 'arg': expected \"string|object|regexp\" but got \"function\", in call to 'funcs' declared at info.jsi:0.0 <function (z) {...}>.    (at or near \"f\")",
          "62: [ \"z\" ]",
          "",
          "[Added Lines]",
          "60: Info.funcs(K.f).argList ==> [ \"z\" ]",
          "",
          "---------------"
        ],
        "tools/protos.jsi||tools/protos.jsi": [
          "File: tools/protos.jsi -> tools/protos.jsi",
          "--- Hunk 1 ---",
          "[Context before]",
          "135: Info.prototype.execZip = function():string|void {};",
          "136: Info.prototype.executable = function():string {};",
          "137: Info.prototype.files = function():array {};",
          "139: Info.prototype.interp = function(interp:userobj=void):object {};",
          "140: Info.prototype.isMain = function():boolean {};",
          "141: Info.prototype.keywords = function(isSql=false, name:string=void):boolean|array {};",
          "",
          "[Removed Lines]",
          "138: Info.prototype.funcs = function(arg:string|regexp|object=void):array|object {};",
          "",
          "[Added Lines]",
          "138: Info.prototype.funcs = function(arg:string|regexp|function|object=void):array|object {};",
          "",
          "---------------"
        ],
        "www/reference.wiki||www/reference.wiki": [
          "File: www/reference.wiki -> www/reference.wiki",
          "--- Hunk 1 ---",
          "[Context before]",
          "546: <tr><td>execZip</td><td>execZip():string|void </td><td>If executing a .zip file, return file name.</td></tr>",
          "547: <tr><td>executable</td><td>executable():string </td><td>Return name of executable.</td></tr>",
          "548: <tr><td>files</td><td>files():array </td><td>Return list of all sourced files.</td></tr>",
          "550: <tr><td>interp</td><td>interp(interp:userobj=void):object </td><td>Return info on given or current interp.</td></tr>",
          "551: <tr><td>isMain</td><td>isMain():boolean </td><td>Return true if current script was the main script invoked from command-line.</td></tr>",
          "552: <tr><td>keywords</td><td>keywords(isSql=false, name:string=void):boolean|array </td><td>Return/lookup reserved keyword.</td></tr>",
          "",
          "[Removed Lines]",
          "549: <tr><td>funcs</td><td>funcs(arg:string|regexp|object=void):array|object </td><td>Return details or list of matching functions.</td></tr>",
          "",
          "[Added Lines]",
          "549: <tr><td>funcs</td><td>funcs(arg:string|regexp|function|object=void):array|object </td><td>Return details or list of matching functions.</td></tr>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1361: <tr><td>isMain</td><td>isMain():boolean </td><td>Return true if current script was the main script invoked from command-line.</td></tr>",
          "1362: <tr><td>isNaN</td><td>isNaN(val):boolean </td><td>Return true if not a number.</td></tr>",
          "1363: <tr><td>load</td><td>load(shlib:string):void </td><td>Load a shared executable and invoke its _Init call.</td></tr>",
          "1365: <tr><td>matchObj</td><td>matchObj(obj:object, match:string=void, partial=false, noerror=false):string|boolean </td><td>Validate that object matches given name:type string. With single arg returns generated string.</td></tr>",
          "1366: <tr><td>noOp</td><td>noOp() </td><td>A No-Op. A zero overhead command call that is useful for debugging.</td></tr>",
          "1367: <tr><td>parseFloat</td><td>parseFloat(val):number </td><td>Convert string to a double.</td></tr>",
          "",
          "[Removed Lines]",
          "1364: <tr><td>log</td><td>log(val, ...):void </td><td>Same as puts, but includes file:line.</td></tr>",
          "",
          "[Added Lines]",
          "1364: <tr><td>log</td><td>log(val, ...):void </td><td>Same as puts, but includes file:line. If first argument is a boolean, output appears only if true.</td></tr>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1442: <tr><td>global</td><td><i>BOOL</i></td><td>File is to be sourced in global frame rather than local.</td><td><i></i></td></tr>",
          "1443: <tr><td>isMain</td><td><i>BOOL</i></td><td>Coerce to true the value of Info.isMain().</td><td><i></i></td></tr>",
          "1444: <tr><td>level</td><td><i>UINT</i></td><td>Frame to source file in.</td><td><i></i></td></tr>",
          "1445: <tr><td>noError</td><td><i>BOOL</i></td><td>Ignore errors in sourced file.</td><td><i></i></td></tr>",
          "1446: <tr><td>once</td><td><i>BOOL</i></td><td>Source file only if not already sourced (Default: Interp.debugOpts.includeOnce).</td><td><i></i></td></tr>",
          "1447: <tr><td>trace</td><td><i>BOOL</i></td><td>Trace include statements (Default: Interp.debugOpts.includeTrace).</td><td><i></i></td></tr>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1445: <tr><td>noEval</td><td><i>BOOL</i></td><td>Disable eval: just parses file to check syntax.</td><td><i></i></td></tr>",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1838: <tr><td>assert</td><td>assert(expr:boolean|number|function, msg:string=void, <a href='#console.assertOptions'>options</a>:object=void):void </td><td>Same as System.assert().</td></tr>",
          "1839: <tr><td>error</td><td>error(val, ...):void </td><td>Same as log.</td></tr>",
          "1840: <tr><td>input</td><td>input():string|void </td><td>Read input from the console.</td></tr>",
          "1842: <tr><td>printf</td><td>printf(format:string, ...):void </td><td>Same as System.printf but goes to stderr.</td></tr>",
          "1843: <tr><td>puts</td><td>puts(val, ...):void </td><td>Same as System.puts, but goes to stderr.</td></tr>",
          "1844: <tr><td>warn</td><td>warn(val, ...):void </td><td>Same as log.</td></tr>",
          "",
          "[Removed Lines]",
          "1841: <tr><td>log</td><td>log(val, ...):void </td><td>Same as System.puts, but goes to stderr and includes file:line.</td></tr>",
          "",
          "[Added Lines]",
          "1842: <tr><td>log</td><td>log(val, ...):void </td><td>Same as System.puts, but goes to stderr and includes file:line. If first argument is a boolean, output appears only if true.</td></tr>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "189d132602896a66328cfa76e9ce03c27d283891",
      "candidate_info": {
        "commit_hash": "189d132602896a66328cfa76e9ce03c27d283891",
        "repo": "pcmacdon/jsish",
        "commit_url": "https://github.com/pcmacdon/jsish/commit/189d132602896a66328cfa76e9ce03c27d283891",
        "files": [
          "Makefile",
          "lib/Websrv.jsi",
          "lib/Wget.jsi",
          "lws/Makefile",
          "md/Reference.md",
          "md/Web.md",
          "openssl/Makefile",
          "src/jsi.h",
          "src/jsiWebSocket.c",
          "tools/protos.jsi",
          "www/reference.wiki"
        ],
        "message": "Release \"3.0.26\": Add openssl build support.\n\nFossilOrigin-Name: c8ccbffa4daad07d821be18b5374ffa52f7777e598bafafe15341c504dc71e65",
        "before_after_code_files": [
          "lib/Websrv.jsi||lib/Websrv.jsi",
          "lib/Wget.jsi||lib/Wget.jsi",
          "src/jsi.h||src/jsi.h",
          "src/jsiWebSocket.c||src/jsiWebSocket.c",
          "tools/protos.jsi||tools/protos.jsi",
          "www/reference.wiki||www/reference.wiki"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/jsi.h||src/jsi.h",
            "tools/protos.jsi||tools/protos.jsi",
            "www/reference.wiki||www/reference.wiki"
          ],
          "candidate": [
            "src/jsi.h||src/jsi.h",
            "tools/protos.jsi||tools/protos.jsi",
            "www/reference.wiki||www/reference.wiki"
          ]
        }
      },
      "candidate_diff": {
        "lib/Websrv.jsi||lib/Websrv.jsi": [
          "File: lib/Websrv.jsi -> lib/Websrv.jsi",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: {",
          "8:     var LogTrace = function(...) {}; // Comment out for debugging.",
          "9:     var self = {",
          "11:     };",
          "12:     var options = { // Run a standalone web server, opening browser to serve out url.",
          "13:         anchor      :'',        // Anchor after url.",
          "",
          "[Removed Lines]",
          "10:         chans   :{}",
          "",
          "[Added Lines]",
          "10:         chans   :{},",
          "11:         ssl     :false,",
          "12:         sslcert :null,",
          "13:         sslkey  :null,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30:         query       :'',        // Query to append to url.",
          "31:         rootdir     :null,      // Base directory.",
          "32:         server      :false,     // Server mode: same as noGui=true and closeTimout=0",
          "36:         srcFile     :'',        // File of code to source inside the Websrv function.",
          "37:         uploadDir   :'/tmp',    // Upload files go here",
          "38:         timeout     :60000,     // Set timeout (in ms) to shutdown. This is idle time, unless negative.",
          "",
          "[Removed Lines]",
          "33:         ssl         :false,     // Enable ssl",
          "34:         sslCert     :null,      // Used for https",
          "35:         sslKey      :null,      // Used for https",
          "",
          "[Added Lines]",
          "36:         sslDir      :null,      // Enable ssl and use certs in this dir.",
          "37:         sslFnCert   :'cert.pem',// File name in sslDir of cert.",
          "38:         sslFnKey    :'privkey.pem',// File name in sslDir of key.",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "44:         wsdebug     :0,         // Debug option for websockets.",
          "45:         wsOpts      :{},        // Websocket options.",
          "46:         zip         :'',        // A .zip, .sqlar, or .fossil file to mount and use as rootdir.",
          "48:     };",
          "50:     parseOpts(self, options, conf);",
          "",
          "[Removed Lines]",
          "47:         zipVer      :''         // Version to mount in fossil.",
          "",
          "[Added Lines]",
          "50:         zipVer      :'',        // Version to mount in fossil.",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "263:         var eurl = self.urlPrefix + '/'+url;",
          "264:         eurl = eurl.map(['//', '/']);",
          "266:         if (query)",
          "267:             surl += '?'+ query.replace(/&/g,'\\\\&');",
          "268:         if (anchor)",
          "",
          "[Removed Lines]",
          "265:         var surl = \" http://127.0.0.1:\"+self.wsopts.port+eurl;",
          "",
          "[Added Lines]",
          "268:         var surl = ' '+(self.ssl?'https':'http')+'://127.0.0.1:'+self.wsopts.port+eurl;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "390:             if (self.url.substr(0, rlen) === self.rootdir)",
          "391:                 self.url = self.url.substr(rlen);",
          "392:         }",
          "393:         if (!self.rootdir)",
          "394:             self.rootdir = '.';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "396:         if (self.sslDir) {",
          "397:             if (self.sslFnKey != '') self.sslkey = File.join(self.sslDir, self.sslFnKey);",
          "398:             if (self.sslFnCert != '') self.sslcert = File.join(self.sslDir, self.sslFnCert);",
          "399:             self.ssl = true;",
          "400:         }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "406:             port:self.port,",
          "407:             rootdir:self.rootdir,",
          "408:             urlPrefix:self.urlPrefix,",
          "411:             ssl:self.ssl,",
          "412:             mimeLookupFunc:mimeLookup,",
          "413:         };",
          "",
          "[Removed Lines]",
          "409:             sslCert:self.sslCert,",
          "410:             sslKey:self.sslKey,",
          "",
          "[Added Lines]",
          "417:             sslCert:self.sslcert,",
          "418:             sslKey:self.sslkey,",
          "",
          "---------------"
        ],
        "lib/Wget.jsi||lib/Wget.jsi": [
          "File: lib/Wget.jsi -> lib/Wget.jsi",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:         nowait      : false,        // Just return object: caller will call update.",
          "10:         onDone      : null,         // Callback when done.",
          "11:         O           : '',           // Output file name, or - for stdout, . for response: default is url tail.",
          "14:         wsOpts      : {},           // Websocket options.",
          "16:     };",
          "18:     var self = {",
          "",
          "[Removed Lines]",
          "12:         sslCert     : null,         // Used for https",
          "13:         sslKey      : null,         // Used for https",
          "15:         wsdebug     : 0             // WebSockets debug level.",
          "",
          "[Added Lines]",
          "12:         sslDir      :null,          // Enable ssl and use certs in this dir",
          "13:         sslFnCert   :'cert.pem',    // File name in sslDir of cert.",
          "14:         sslFnKey    :'privkey.pem', // File name in sslDir of key.",
          "16:         wsdebug     : 0,            // WebSockets debug level.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25:         scheme      : 'http',       // Url scheme",
          "26:         protocol    : 'get',",
          "27:         response    : '',",
          "29:     };",
          "31:     parseOpts(self, options, conf);",
          "",
          "[Removed Lines]",
          "28:         url         : null",
          "",
          "[Added Lines]",
          "29:         url         : null,",
          "30:         ssl         :false,",
          "31:         sslcert     :null,",
          "32:         sslkey      :null,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "90:         }",
          "91:         if (self.post.length)",
          "92:             self.protocol = 'post';",
          "94:         var wsopts = {",
          "95:             client:true,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98:         if (self.sslDir) {",
          "99:             if (self.sslFnKey != '') sself.sslkey = File.join(self.sslDir, self.sslFnKey);",
          "100:             if (self.sslFnCert != '') sself.sslcert = File.join(self.sslDir, self.sslFnCert);",
          "101:             self.ssl = true;",
          "102:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "103:             clientHost:self.address,",
          "104:             sslCert:self.sslCert,",
          "105:             sslKey:self.sslKey,",
          "106:         };",
          "107:         for (var i in self.wsOpts)",
          "108:             wsopts[i] = self.wsOpts[i];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "116:             ssl:self.ssl;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "116:             else {",
          "117:                 if (self.port === 80)",
          "118:                     wsopts.port = 443;",
          "120:             }",
          "121:         }",
          "122:         LogTrace(\"Starting:\", conf, wsopts);",
          "",
          "[Removed Lines]",
          "119:                 wsopts.ssl = true;",
          "",
          "[Added Lines]",
          "130:                 self.ssl = true;",
          "",
          "---------------"
        ],
        "src/jsi.h||src/jsi.h": [
          "File: src/jsi.h -> src/jsi.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: #define JSI_VERSION_MAJOR   3",
          "6: #define JSI_VERSION_MINOR   0",
          "9: #define JSI_VERSION (JSI_VERSION_MAJOR + ((Jsi_Number)JSI_VERSION_MINOR/100.0) + ((Jsi_Number)JSI_VERSION_RELEASE/10000.0))",
          "",
          "[Removed Lines]",
          "7: #define JSI_VERSION_RELEASE 25",
          "",
          "[Added Lines]",
          "7: #define JSI_VERSION_RELEASE 26",
          "",
          "---------------"
        ],
        "src/jsiWebSocket.c||src/jsiWebSocket.c": [
          "File: src/jsiWebSocket.c -> src/jsiWebSocket.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: #include <signal.h>",
          "58: static const int jsi_WsPkgVersion = 2;",
          "",
          "[Removed Lines]",
          "55: #include <liblws.h>",
          "",
          "[Added Lines]",
          "55: #include <lws.h>",
          "",
          "---------------"
        ],
        "tools/protos.jsi||tools/protos.jsi": [
          "File: tools/protos.jsi -> tools/protos.jsi",
          "--- Hunk 1 ---",
          "[Context before]",
          "184: Math.prototype.sqrt = function(num:number):number {};",
          "185: Math.prototype.srand = function(seed:number):number {};",
          "186: Math.prototype.tan = function(num:number):number {};",
          "187: var Number = function(cmd,args) {};",
          "188: Number.prototype.isFinite = function():boolean {};",
          "189: Number.prototype.isInteger = function():boolean {};",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "187: var MySql = function(cmd,args) {};",
          "188: MySql.prototype.affectedRows = function():number {};",
          "189: MySql.prototype.complete = function(sql:string):boolean {};",
          "190: MySql.prototype.conf = function(options:string|object=void):any {};",
          "191: MySql.prototype.errorNo = function():number {};",
          "192: MySql.prototype.errorState = function():string {};",
          "193: MySql.prototype.eval = function(sql:string):number {};",
          "194: MySql.prototype.exists = function(sql:string):boolean {};",
          "195: MySql.prototype.info = function():object {};",
          "196: MySql.prototype.lastQuery = function():string {};",
          "197: MySql.prototype.lastRowid = function():number {};",
          "198: MySql.prototype.onecolumn = function(sql:string):any {};",
          "199: MySql.prototype.ping = function(noError:boolean=false):number {};",
          "200: MySql.prototype.query = function(sql:string, options:function|string|array|object=void):any {};",
          "201: MySql.prototype.reconnect = function():void {};",
          "202: MySql.prototype.reset = function():number {};",
          "",
          "---------------"
        ],
        "www/reference.wiki||www/reference.wiki": [
          "File: www/reference.wiki -> www/reference.wiki",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: <a href='#Interp'>Interp</a>",
          "20: <a href='#JSON'>JSON</a>",
          "21: <a href='#Math'>Math</a>",
          "22: <a href='#Number'>Number</a>",
          "23: <a href='#Object'>Object</a>",
          "24: <a href='#RegExp'>RegExp</a>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: <a href='#MySql'>MySql</a>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "795: </table>",
          "796: <a name=\"Mathend\"></a>",
          "797: <p><a href=\"#TOC\">Return to top</a>",
          "798: <a name=\"Number\"></a>",
          "800: <hr>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "799: <a name=\"MySql\"></a>",
          "801: <hr>",
          "804: <h1>MySql</h1>",
          "806: <font color=red>Synopsis:new MySql(options:object=void):userobj",
          "808: </font><p>Commands for accessing mysql databases.",
          "811: <h2>Methods for \"MySql\"</h2>",
          "812: <table border=\"1\"class=\"cmdstbl table\">",
          "813: <tr><th>Method</th><th>Prototype</th><th>Description</th></tr>",
          "814: <tr><td>MySql</td><td>new MySql(<a href='#new MySqlOptions'>options</a>:object=void):userobj </td><td>Create a new db connection to a MySql database:.</td></tr>",
          "815: <tr><td>affectedRows</td><td>affectedRows():number </td><td>Return affected rows.</td></tr>",
          "816: <tr><td>complete</td><td>complete(sql:string):boolean </td><td>Return true if sql is complete.</td></tr>",
          "817: <tr><td>conf</td><td>conf(<a href='#MySql.confOptions'>options</a>:string|object=void) </td><td>Configure options.</td></tr>",
          "818: <tr><td>errorNo</td><td>errorNo():number </td><td>Return error code returned by most recent call to mysql3_exec().</td></tr>",
          "819: <tr><td>errorState</td><td>errorState():string </td><td>Return the mysql error state str.</td></tr>",
          "820: <tr><td>eval</td><td>eval(sql:string):number </td><td>Run sql commands without input/output.</td></tr>",
          "821: <tr><td>exists</td><td>exists(sql:string):boolean </td><td>Execute sql, and return true if there is at least one result value.</td></tr>",
          "822: <tr><td>info</td><td>info():object </td><td>Return info about last query.</td></tr>",
          "823: <tr><td>lastQuery</td><td>lastQuery():string </td><td>Return info string about most recently executed statement.</td></tr>",
          "824: <tr><td>lastRowid</td><td>lastRowid():number </td><td>Return rowid of last insert.</td></tr>",
          "825: <tr><td>onecolumn</td><td>onecolumn(sql:string) </td><td>Execute sql, and return a single value.</td></tr>",
          "826: <tr><td>ping</td><td>ping(noError:boolean=false):number </td><td>Ping connection.</td></tr>",
          "827: <tr><td>query</td><td>query(sql:string, <a href='#MySql.queryOptions'>options</a>:function|string|array|object=void) </td><td>Run sql query with input and/or outputs..</td></tr>",
          "828: <tr><td>reconnect</td><td>reconnect():void </td><td>Reconnect with current settings.</td></tr>",
          "829: <tr><td>reset</td><td>reset():number </td><td>Reset connection.</td></tr>",
          "830: </table>",
          "833: <a name=\"new MySqlOptions\"></a>",
          "834: <a name=\"MySql.confOptions\"></a>",
          "835: <h2>Options for \"new MySql\"</h2>",
          "836: <table border=\"1\" class=\"optstbl table\">",
          "837: <tr><th>Option</th> <th>Type</th> <th>Description</th><th>Flags</th></tr>",
          "838: <tr><td>bindWarn</td><td><i>BOOL</i></td><td>Treat failed variable binds as a warning.</td><td><i>initOnly</i></td></tr>",
          "839: <tr><td>database</td><td><i>STRKEY</i></td><td>Database to use.</td><td><i>initOnly</i></td></tr>",
          "840: <tr><td>debug</td><td><i>ARRAY</i></td><td>Enable debug trace for various operations. (zero or more of: <b>eval</b>, <b>delete</b>, <b>prepare</b>, <b>step</b>)</td><td><i></i></td></tr>",
          "841: <tr><td>enableMulti</td><td><i>BOOL</i></td><td>Accept muiltiple semi-colon separated statements in eval().</td><td><i>initOnly</i></td></tr>",
          "842: <tr><td>errorCnt</td><td><i>INT</i></td><td>Count of errors.</td><td><i>readOnly</i></td></tr>",
          "843: <tr><td>queryOpts</td><td><i><a href='#queryOptsOptions'>options</a></i></td><td>Default options for exec.</td><td><i></i></td></tr>",
          "844: <tr><td>forceInt</td><td><i>BOOL</i></td><td>Bind float as int if possible.</td><td><i></i></td></tr>",
          "845: <tr><td>host</td><td><i>STRING</i></td><td>IP address or host name for mysqld (default is 127.0.0.1).</td><td><i></i></td></tr>",
          "846: <tr><td>maxStmts</td><td><i>INT</i></td><td>Max cache size for compiled statements.</td><td><i></i></td></tr>",
          "847: <tr><td>name</td><td><i>DSTRING</i></td><td>Name for this db handle.</td><td><i></i></td></tr>",
          "848: <tr><td>numStmts</td><td><i>INT</i></td><td>Current size of compiled statement cache.</td><td><i>readOnly</i></td></tr>",
          "849: <tr><td>password</td><td><i>STRKEY</i></td><td>Database password..</td><td><i>initOnly</i></td></tr>",
          "850: <tr><td>port</td><td><i>INT</i></td><td>IP port for mysqld.</td><td><i>initOnly</i></td></tr>",
          "851: <tr><td>reconnect</td><td><i>BOOL</i></td><td>Reconnect.</td><td><i></i></td></tr>",
          "852: <tr><td>sslKey</td><td><i>STRING</i></td><td>SSL key.</td><td><i></i></td></tr>",
          "853: <tr><td>sslCert</td><td><i>STRING</i></td><td>SSL Cert.</td><td><i></i></td></tr>",
          "854: <tr><td>sslCA</td><td><i>STRING</i></td><td>SSL CA.</td><td><i></i></td></tr>",
          "855: <tr><td>sslCAPath</td><td><i>STRING</i></td><td>SSL CA path.</td><td><i></i></td></tr>",
          "856: <tr><td>sslCipher</td><td><i>STRING</i></td><td>SSL Cipher.</td><td><i></i></td></tr>",
          "857: <tr><td>udata</td><td><i>OBJ</i></td><td>User data..</td><td><i></i></td></tr>",
          "858: <tr><td>user</td><td><i>STRKEY</i></td><td>Database user name. Default is current user-name..</td><td><i>initOnly</i></td></tr>",
          "859: <tr><td>version</td><td><i>DOUBLE</i></td><td>Mysql version number.</td><td><i>readOnly</i></td></tr>",
          "860: </table>",
          "863: <a name=\"queryOptsOptions\"></a>",
          "864: <h2>Options for \"queryOpts\"</h2>",
          "865: <table border=\"1\" class=\"optstbl table\">",
          "866: <tr><th>Option</th> <th>Type</th> <th>Description</th><th>Flags</th></tr>",
          "867: <tr><td>callback</td><td><i>FUNC</i></td><td>Function to call with each row result. @function(values:object)</td><td><i></i></td></tr>",
          "868: <tr><td>headers</td><td><i>BOOL</i></td><td>First row returned contains column labels.</td><td><i></i></td></tr>",
          "869: <tr><td>limit</td><td><i>INT</i></td><td>Maximum number of returned values.</td><td><i></i></td></tr>",
          "870: <tr><td>mapundef</td><td><i>BOOL</i></td><td>In variable binds, map an 'undefined' var to null.</td><td><i></i></td></tr>",
          "871: <tr><td>maxString</td><td><i>INT</i></td><td>If not using prefetch, the maximum string value size (0=8K).</td><td><i></i></td></tr>",
          "872: <tr><td>mode</td><td><i>STRKEY</i></td><td>Set output mode of returned data. (one of: <b>rows</b>, <b>arrays</b>, <b>array1d</b>, <b>list</b>, <b>column</b>, <b>json</b>, <b>json2</b>, <b>html</b>, <b>csv</b>, <b>insert</b>, <b>line</b>, <b>tabs</b>, <b>none</b>)</td><td><i></i></td></tr>",
          "873: <tr><td>nocache</td><td><i>BOOL</i></td><td>Disable query cache.</td><td><i></i></td></tr>",
          "874: <tr><td>noNamedParams</td><td><i>BOOL</i></td><td>Disable translating sql to support named params.</td><td><i></i></td></tr>",
          "875: <tr><td>nullvalue</td><td><i>STRKEY</i></td><td>Null string output (for non-json mode).</td><td><i></i></td></tr>",
          "876: <tr><td>obj</td><td><i><a href='#objOptions'>options</a></i></td><td>Options for object.</td><td><i></i></td></tr>",
          "877: <tr><td>paramVar</td><td><i>ARRAY</i></td><td>Array var to use for parameters.</td><td><i></i></td></tr>",
          "878: <tr><td>prefetch</td><td><i>BOOL</i></td><td>Let client library cache entire results.</td><td><i></i></td></tr>",
          "879: <tr><td>separator</td><td><i>STRKEY</i></td><td>Separator string (for csv and text mode).</td><td><i></i></td></tr>",
          "880: <tr><td>table</td><td><i>STRKEY</i></td><td>Table name for mode=insert.</td><td><i></i></td></tr>",
          "881: <tr><td>typeCheck</td><td><i>STRKEY</i></td><td>Type check mode (error). (one of: <b>convert</b>, <b>error</b>, <b>warn</b>, <b>disable</b>)</td><td><i></i></td></tr>",
          "882: <tr><td>values</td><td><i>ARRAY</i></td><td>Values for ? bind parameters.</td><td><i></i></td></tr>",
          "883: <tr><td>width</td><td><i>CUSTOM</i></td><td>In column mode, set column widths.</td><td><i></i></td></tr>",
          "884: </table>",
          "887: <a name=\"MySql.queryOptions\"></a>",
          "888: <a name=\"MySql.confOptions\"></a>",
          "889: <h2>Options for \"MySql.query\"</h2>",
          "890: <table border=\"1\" class=\"optstbl table\">",
          "891: <tr><th>Option</th> <th>Type</th> <th>Description</th><th>Flags</th></tr>",
          "892: <tr><td>callback</td><td><i>FUNC</i></td><td>Function to call with each row result. @function(values:object)</td><td><i></i></td></tr>",
          "893: <tr><td>headers</td><td><i>BOOL</i></td><td>First row returned contains column labels.</td><td><i></i></td></tr>",
          "894: <tr><td>limit</td><td><i>INT</i></td><td>Maximum number of returned values.</td><td><i></i></td></tr>",
          "895: <tr><td>mapundef</td><td><i>BOOL</i></td><td>In variable binds, map an 'undefined' var to null.</td><td><i></i></td></tr>",
          "896: <tr><td>maxString</td><td><i>INT</i></td><td>If not using prefetch, the maximum string value size (0=8K).</td><td><i></i></td></tr>",
          "897: <tr><td>mode</td><td><i>STRKEY</i></td><td>Set output mode of returned data. (one of: <b>rows</b>, <b>arrays</b>, <b>array1d</b>, <b>list</b>, <b>column</b>, <b>json</b>, <b>json2</b>, <b>html</b>, <b>csv</b>, <b>insert</b>, <b>line</b>, <b>tabs</b>, <b>none</b>)</td><td><i></i></td></tr>",
          "898: <tr><td>nocache</td><td><i>BOOL</i></td><td>Disable query cache.</td><td><i></i></td></tr>",
          "899: <tr><td>noNamedParams</td><td><i>BOOL</i></td><td>Disable translating sql to support named params.</td><td><i></i></td></tr>",
          "900: <tr><td>nullvalue</td><td><i>STRKEY</i></td><td>Null string output (for non-json mode).</td><td><i></i></td></tr>",
          "901: <tr><td>obj</td><td><i><a href='#objOptions'>options</a></i></td><td>Options for object.</td><td><i></i></td></tr>",
          "902: <tr><td>paramVar</td><td><i>ARRAY</i></td><td>Array var to use for parameters.</td><td><i></i></td></tr>",
          "903: <tr><td>prefetch</td><td><i>BOOL</i></td><td>Let client library cache entire results.</td><td><i></i></td></tr>",
          "904: <tr><td>separator</td><td><i>STRKEY</i></td><td>Separator string (for csv and text mode).</td><td><i></i></td></tr>",
          "905: <tr><td>table</td><td><i>STRKEY</i></td><td>Table name for mode=insert.</td><td><i></i></td></tr>",
          "906: <tr><td>typeCheck</td><td><i>STRKEY</i></td><td>Type check mode (error). (one of: <b>convert</b>, <b>error</b>, <b>warn</b>, <b>disable</b>)</td><td><i></i></td></tr>",
          "907: <tr><td>values</td><td><i>ARRAY</i></td><td>Values for ? bind parameters.</td><td><i></i></td></tr>",
          "908: <tr><td>width</td><td><i>CUSTOM</i></td><td>In column mode, set column widths.</td><td><i></i></td></tr>",
          "909: </table>",
          "912: <a name=\"objOptions\"></a>",
          "913: <h2>Options for \"obj\"</h2>",
          "914: <table border=\"1\" class=\"optstbl table\">",
          "915: <tr><th>Option</th> <th>Type</th> <th>Description</th><th>Flags</th></tr>",
          "916: <tr><td>name</td><td><i>STRKEY</i></td><td>Name of object var data source for %s.</td><td><i></i></td></tr>",
          "917: <tr><td>skip</td><td><i>ARRAY</i></td><td>Object members to ignore.</td><td><i></i></td></tr>",
          "918: <tr><td>getSql</td><td><i>BOOL</i></td><td>Return expanded SQL without evaluating.</td><td><i></i></td></tr>",
          "919: <tr><td>defaultNull</td><td><i>BOOL</i></td><td>Create with DEFAULT NULL.</td><td><i></i></td></tr>",
          "920: <tr><td>noChecks</td><td><i>BOOL</i></td><td>Create with no CHECK constraints.</td><td><i></i></td></tr>",
          "921: <tr><td>noDefaults</td><td><i>BOOL</i></td><td>Create with no defaults.</td><td><i></i></td></tr>",
          "922: <tr><td>noTypes</td><td><i>BOOL</i></td><td>Create with no types.</td><td><i></i></td></tr>",
          "923: </table>",
          "924: <a name=\"MySqlend\"></a>",
          "925: <p><a href=\"#TOC\">Return to top</a>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1159: <tr><td>values</td><td><i>ARRAY</i></td><td>Values for ? bind parameters.</td><td><i></i></td></tr>",
          "1160: <tr><td>width</td><td><i>CUSTOM</i></td><td>In column mode, set column widths.</td><td><i></i></td></tr>",
          "1161: </table>",
          "1176: <a name=\"Sqliteend\"></a>",
          "1177: <p><a href=\"#TOC\">Return to top</a>",
          "1178: <a name=\"String\"></a>",
          "",
          "[Removed Lines]",
          "1164: <a name=\"objOptions\"></a>",
          "1165: <h2>Options for \"obj\"</h2>",
          "1166: <table border=\"1\" class=\"optstbl table\">",
          "1167: <tr><th>Option</th> <th>Type</th> <th>Description</th><th>Flags</th></tr>",
          "1168: <tr><td>name</td><td><i>STRKEY</i></td><td>Name of object var data source for %s.</td><td><i></i></td></tr>",
          "1169: <tr><td>skip</td><td><i>ARRAY</i></td><td>Object members to ignore.</td><td><i></i></td></tr>",
          "1170: <tr><td>getSql</td><td><i>BOOL</i></td><td>Return expanded SQL without evaluating.</td><td><i></i></td></tr>",
          "1171: <tr><td>defaultNull</td><td><i>BOOL</i></td><td>Create with DEFAULT NULL.</td><td><i></i></td></tr>",
          "1172: <tr><td>noChecks</td><td><i>BOOL</i></td><td>Create with no CHECK constraints.</td><td><i></i></td></tr>",
          "1173: <tr><td>noDefaults</td><td><i>BOOL</i></td><td>Create with no defaults.</td><td><i></i></td></tr>",
          "1174: <tr><td>noTypes</td><td><i>BOOL</i></td><td>Create with no types.</td><td><i></i></td></tr>",
          "1175: </table>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "04ca1fb949cf22b327cc8ae884c043be90bb4282",
      "candidate_info": {
        "commit_hash": "04ca1fb949cf22b327cc8ae884c043be90bb4282",
        "repo": "pcmacdon/jsish",
        "commit_url": "https://github.com/pcmacdon/jsish/commit/04ca1fb949cf22b327cc8ae884c043be90bb4282",
        "files": [
          "Makefile",
          "src/jsi.h",
          "src/jsiArray.c",
          "src/jsiProto.c",
          "tools/protos.jsi"
        ],
        "message": "Release \"3.0.19\": cleanup.\n\nFossilOrigin-Name: d58047c797d5a81413eece9f55632c64e87cd0ceaa0e32d3710a37fd269a177e",
        "before_after_code_files": [
          "src/jsi.h||src/jsi.h",
          "src/jsiArray.c||src/jsiArray.c",
          "src/jsiProto.c||src/jsiProto.c",
          "tools/protos.jsi||tools/protos.jsi"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/jsi.h||src/jsi.h",
            "src/jsiArray.c||src/jsiArray.c",
            "tools/protos.jsi||tools/protos.jsi"
          ],
          "candidate": [
            "src/jsi.h||src/jsi.h",
            "src/jsiArray.c||src/jsiArray.c",
            "tools/protos.jsi||tools/protos.jsi"
          ]
        }
      },
      "candidate_diff": {
        "src/jsi.h||src/jsi.h": [
          "File: src/jsi.h -> src/jsi.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: #define JSI_VERSION_MAJOR   3",
          "6: #define JSI_VERSION_MINOR   0",
          "9: #define JSI_VERSION (JSI_VERSION_MAJOR + ((Jsi_Number)JSI_VERSION_MINOR/100.0) + ((Jsi_Number)JSI_VERSION_RELEASE/10000.0))",
          "",
          "[Removed Lines]",
          "7: #define JSI_VERSION_RELEASE 18",
          "",
          "[Added Lines]",
          "7: #define JSI_VERSION_RELEASE 19",
          "",
          "---------------"
        ],
        "src/jsiArray.c||src/jsiArray.c": [
          "File: src/jsiArray.c -> src/jsiArray.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:     if (_this->vt != JSI_VT_OBJECT || !Jsi_ObjIsArray(interp, _this->d.obj))",
          "78:         return Jsi_LogError(\"expected array object\");",
          "79:     const char *jstr = \"\";",
          "81:     Jsi_DString dStr = {};",
          "89:         Jsi_Value *sc = Jsi_ValueArrayIndex(interp, args, 0);",
          "90:         if (sc != NULL)",
          "91:             jstr = Jsi_ValueToString(interp, sc, NULL);",
          "92:     }",
          "98:     for (i = 0; i < argc; ++i) {",
          "99:         const char *cp;",
          "100:         Jsi_Value *ov = Jsi_ValueArrayIndex(interp, _this, i);",
          "",
          "[Removed Lines]",
          "80:     int argc, curlen;",
          "83:     curlen = jsi_SizeOfArray(interp, _this->d.obj);",
          "84:     if (curlen == 0) {",
          "85:         goto bail;",
          "86:     }",
          "88:     if (Jsi_ValueGetLength(interp, args) >= 1) {",
          "94:     if (0 == (argc=jsi_SizeOfArray(interp, _this->d.obj))) {",
          "95:         goto bail;",
          "96:     }",
          "97:     int i;",
          "",
          "[Added Lines]",
          "81:     int i, argc = jsi_SizeOfArray(interp, _this->d.obj);",
          "83:     if (argc>0 && Jsi_ValueGetLength(interp, args) >= 1) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "108:             Jsi_DSAppend(&dStr, jstr, NULL);",
          "109:         Jsi_DSAppend(&dStr, cp, NULL);",
          "110:     }",
          "118: }",
          "121: Jsi_Value* Jsi_ValueArrayConcat(Jsi_Interp *interp, Jsi_Value *arg1, Jsi_Value *arg2) {",
          "123:     Jsi_Obj *obj;",
          "124:     if (arg1->vt != JSI_VT_OBJECT || !Jsi_ObjIsArray(interp, arg1->d.obj)) {",
          "125:         return NULL;",
          "",
          "[Removed Lines]",
          "112:     Jsi_ValueMakeStringDup(interp, ret, Jsi_DSValue(&dStr));",
          "113:     Jsi_DSFree(&dStr);",
          "114:     return JSI_OK;",
          "115: bail:",
          "116:     Jsi_ValueMakeStringDup(interp, ret, \"\");",
          "117:     return JSI_OK;",
          "122:     Jsi_Value *va;",
          "",
          "[Added Lines]",
          "103:     Jsi_ValueFromDS(interp, &dStr, ret);",
          "104:     return JSI_OK;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "148:         Jsi_ValueDup2(interp, nobj->arr+j, obj->arr[i]);",
          "149:     }",
          "150:     Jsi_ObjSetLength(interp, nobj, len1+len2);",
          "153: }",
          "155: Jsi_RC Jsi_ValueArrayPush(Jsi_Interp *interp, Jsi_Value *arg1, Jsi_Value *arg2) {",
          "",
          "[Removed Lines]",
          "151:     va = Jsi_ValueMakeArrayObject(interp, NULL, nobj);",
          "152:     return va;",
          "",
          "[Added Lines]",
          "137:     return Jsi_ValueMakeArrayObject(interp, NULL, nobj);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "268:         else if (!Jsi_ValueIsUndef(interp, t))",
          "269:             Jsi_ObjArrayAdd(interp, nobj, t);",
          "270:         if ((uint)(++n + clen)>interp->maxArrayList)",
          "272:     }",
          "273:     return rc;",
          "274: }",
          "",
          "[Removed Lines]",
          "271:             return Jsi_LogError(\"array size exceeded\");",
          "",
          "[Added Lines]",
          "256:             rc = Jsi_LogError(\"array size exceeded\");",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "310:     nobj = Jsi_ObjNewType(interp, JSI_OT_ARRAY);",
          "311:     nsiz = obj->arrMaxSize;",
          "312:     if (nsiz<=0) nsiz = 100;",
          "318:     int i, j, m;",
          "319:     for (i = 0; i<curlen; i++)",
          "",
          "[Removed Lines]",
          "313:     if (Jsi_ObjArraySizer(interp, nobj, nsiz+1) <= 0) {",
          "314:         rc = Jsi_LogError(\"index too large: %d\", nsiz+1);",
          "315:         goto bail;",
          "316:     }",
          "",
          "[Added Lines]",
          "298:     if (Jsi_ObjArraySizer(interp, nobj, nsiz+1) <= 0)",
          "299:         return Jsi_LogError(\"index too large: %d\", nsiz+1);;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "348:             Jsi_ValueDup2(interp, nobj->arr+m++, va);",
          "349:        }",
          "350:     }",
          "351:     Jsi_ObjSetLength(interp, nobj, curlen);",
          "352:     Jsi_ValueMakeArrayObject(interp, ret, nobj);",
          "355:     return rc;",
          "356: }",
          "",
          "[Removed Lines]",
          "354: bail:",
          "",
          "[Added Lines]",
          "334: bail:",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "389:     maa = (fptr->argnames?fptr->argnames->argCnt:0);",
          "390:     if (maa>3 || fptr->type == FC_BUILDIN)",
          "391:         maa = 3;",
          "393:         if (!obj->arr[i]) continue;",
          "394:         vobjs[0] = obj->arr[i];",
          "395:         vobjs[1] = (maa>1?Jsi_ValueNewNumber(interp, i):interp->NullValue);",
          "",
          "[Removed Lines]",
          "392:     for (i = 0; i < curlen; i++) {",
          "",
          "[Added Lines]",
          "375:     for (i = 0; i < curlen && rc == JSI_OK; i++) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "399:         nobj->arr[i] = Jsi_ValueNew1(interp);",
          "400:         rc = Jsi_FunctionInvoke(interp, func, vpargs, nobj->arr+i, sthis);",
          "401:         Jsi_DecrRefCount(interp, vpargs);",
          "405:     }",
          "408: bail:",
          "409:     if (nthis)",
          "",
          "[Removed Lines]",
          "402:         if( JSI_OK!=rc ) {",
          "403:             goto bail;",
          "404:         }",
          "406:     Jsi_ObjSetLength(interp, nobj, curlen);",
          "",
          "[Added Lines]",
          "386:     Jsi_ObjSetLength(interp, nobj, i);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "848:             obj->arr[i] = Jsi_ValueDup(interp, value);",
          "849:     }",
          "850: bail:",
          "852:         Jsi_ValueMove(interp, *ret, _this);",
          "858:     return rc;",
          "859: }",
          "",
          "[Removed Lines]",
          "851:     if (_this != *ret) {",
          "854:             Jsi_DecrRefCount(interp, *ret);",
          "857:     }",
          "",
          "[Added Lines]",
          "831:     if (_this != *ret)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "866:     Jsi_RC rc = JSI_OK;",
          "867:     int istart = 0, iend, n, nsiz;",
          "868:     Jsi_Number nstart;",
          "870:     Jsi_Value *start = Jsi_ValueArrayIndex(interp, args, 0),",
          "875:     obj = _this->d.obj;",
          "876:     n = jsi_SizeOfArray(interp, obj);",
          "877:     if (Jsi_GetNumberFromValue(interp,start, &nstart) == JSI_OK) {",
          "878:         istart = (int)nstart;",
          "879:         if (istart > n)",
          "881:         if (istart < 0)",
          "882:             istart = (n+istart);",
          "883:         if (istart<0)",
          "885:     }",
          "892:     Jsi_Number nend;",
          "893:     iend = n-1;",
          "894:     if (end && Jsi_GetNumberFromValue(interp,end, &nend) == JSI_OK) {",
          "",
          "[Removed Lines]",
          "869:     Jsi_Obj *nobj, *obj;",
          "872:     if (!start) {",
          "873:         goto done;",
          "874:     }",
          "880:             goto done;",
          "884:             goto done;",
          "887:     if (n == 0) {",
          "888: done:",
          "889:         Jsi_ValueMakeArrayObject(interp, ret, Jsi_ObjNewType(interp, JSI_OT_ARRAY));",
          "890:         return JSI_OK;",
          "891:     }",
          "",
          "[Added Lines]",
          "846:     Jsi_Obj *obj, *nobj = Jsi_ObjNewType(interp, JSI_OT_ARRAY);",
          "847:     Jsi_ValueMakeArrayObject(interp, ret, nobj);",
          "849:     if (!start)",
          "850:         return rc;",
          "857:             return rc;",
          "861:             return rc;",
          "864:     if (n == 0)",
          "865:         return rc;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "898:         if (iend < 0)",
          "899:             iend = (n+iend);",
          "900:         if (iend<0)",
          "902:     }",
          "903:     nsiz = iend-istart+1;",
          "904:     if (nsiz<=0)",
          "906:     Jsi_ObjListifyArray(interp, obj);",
          "915:     int i, m;",
          "916:     for (m = 0, i = istart; i <= iend; i++, m++)",
          "",
          "[Removed Lines]",
          "901:             goto done;",
          "905:         goto done;",
          "908:     nobj = Jsi_ObjNewType(interp, JSI_OT_ARRAY);",
          "910:     if (Jsi_ObjArraySizer(interp, nobj, nsiz) <= 0) {",
          "911:         rc = Jsi_LogError(\"index too large: %d\", nsiz);",
          "912:         goto bail;",
          "913:     }",
          "",
          "[Added Lines]",
          "875:             return rc;",
          "879:         return rc;",
          "882:     if (Jsi_ObjArraySizer(interp, nobj, nsiz) <= 0)",
          "883:         return Jsi_LogError(\"index too large: %d\", nsiz);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "920:         Jsi_ValueDup2(interp, nobj->arr+m, obj->arr[i]);",
          "921:     }",
          "922:     Jsi_ObjSetLength(interp, nobj, nsiz);",
          "925:     return rc;",
          "926: }",
          "",
          "[Removed Lines]",
          "923:     Jsi_ValueMakeArrayObject(interp, ret, nobj);",
          "924: bail:",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1134:     n = jsi_SizeOfArray(interp, obj);",
          "1135:     curlen = n;",
          "1141:     nobj = Jsi_ObjNewType(interp, JSI_OT_ARRAY);",
          "1142:     Jsi_ValueMakeArrayObject(interp, ret, nobj);",
          "",
          "[Removed Lines]",
          "1137:     if (!start) {",
          "1138:         goto bail;",
          "1139:     }",
          "",
          "[Added Lines]",
          "1105:     if (!start)",
          "1106:         return JSI_OK;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1147:     if (Jsi_GetNumberFromValue(interp, start, &nstart) == JSI_OK) {",
          "1148:         istart = (int)nstart;",
          "1149:         if (istart > n)",
          "1151:         if (istart < 0)",
          "1152:             istart = (n+istart);",
          "1153:         if (istart<0)",
          "",
          "[Removed Lines]",
          "1150:             goto bail;",
          "",
          "[Added Lines]",
          "1117:             return JSI_OK;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1163:         if (rhowmany < 0)",
          "1164:             rhowmany = (n-istart);",
          "1165:         if (rhowmany<0)",
          "1167:     }",
          "1169:     if (curlen < 0) {",
          "",
          "[Removed Lines]",
          "1166:             goto bail;",
          "",
          "[Added Lines]",
          "1133:             return JSI_OK;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1194:     newlen = curlen + argc - (argc>=2?2:1);",
          "1195:     if (Jsi_ObjArraySizer(interp, obj, newlen+3) <= 0) {",
          "1197:         Jsi_ValueMakeUndef(interp, ret);",
          "1199:     }",
          "1200:     if (ilen>0) {",
          "1201:         for (i = curlen-1; i>=istart; i--) {",
          "",
          "[Removed Lines]",
          "1196:         Jsi_LogError(\"too long\");",
          "1198:         return JSI_ERROR;",
          "",
          "[Added Lines]",
          "1164:         return Jsi_LogError(\"too long\");",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1210:         }",
          "1211:     }",
          "1212:     Jsi_ObjSetLength(interp, obj, newlen);",
          "1214:     return JSI_OK;",
          "1215: }",
          "",
          "[Removed Lines]",
          "1213: bail:",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1282:     { \"slice\",      jsi_ArraySliceCmd,      1, 2, \"start:number, end:number=void\", .help=\"Return sub-array\", .retType=(uint)JSI_TT_ARRAY },",
          "1283:     { \"some\",       jsi_ArraySomeCmd,       1, 2, \"callback:function, this:object=void\", .help=\"Return true if function returns true some element\", .retType=(uint)JSI_TT_BOOLEAN },",
          "1284:     { \"sort\",       jsi_ArraySortCmd,       0, 1, \"options:function|object=void\", .help=\"Sort an array\", .retType=(uint)JSI_TT_ARRAY, .flags=0, .info=0, .opts=jsi_ArraySortOptions },",
          "1286:     { \"reverse\",    jsi_ArrayReverseCmd,    0, 0, \"\", .help=\"Reverse order of all elements in an array\", .retType=(uint)JSI_TT_ARRAY },",
          "1287:     { \"unshift\",    jsi_ArrayUnshiftCmd,    0,-1, \"...\", .help=\"Add new elements to start of array and return size\", .retType=(uint)JSI_TT_NUMBER },",
          "1288:     { NULL, 0,0,0,0, .help=\"Provide access to array objects\" }",
          "",
          "[Removed Lines]",
          "1285:     { \"splice\",     jsi_ArraySpliceCmd,     1,-1, \"start:number, howmany:number=void, ...\", .help=\"Change the content of an array, adding new elements while removing old elements\", .retType=(uint)JSI_TT_ARRAY|JSI_TT_NULL },",
          "",
          "[Added Lines]",
          "1250:     { \"splice\",     jsi_ArraySpliceCmd,     1,-1, \"start:number, howmany:number=void, ...\", .help=\"Change the content of an array, adding new elements while removing old elements\", .retType=(uint)JSI_TT_ARRAY },",
          "",
          "---------------"
        ],
        "src/jsiProto.c||src/jsiProto.c": [
          "File: src/jsiProto.c -> src/jsiProto.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "175:     interp->activeFunc = funcPtr;",
          "176:     Jsi_IncrRefCount(interp, args);",
          "177:     Jsi_RC rc = jsi_SharedArgs(interp, args, funcPtr, 1);",
          "236:                 }",
          "237:             }",
          "238:         }",
          "242:         }",
          "243:     }",
          "263:     jsi_SharedArgs(interp, args, funcPtr, 0);",
          "264:     interp->activeFunc = prevActive;",
          "265:     Jsi_DecrRefCount(interp, args);",
          "",
          "[Removed Lines]",
          "178:     if (rc != JSI_OK)",
          "179:         goto bail;",
          "181:     int profile = interp->profile, coverage = interp->coverage;",
          "182:     int tc = interp->traceCall;",
          "183:     double timStart = 0;",
          "184:     jsi_PkgInfo *pkg = funcPtr->pkg;",
          "185:     if (pkg) {",
          "186:         tc |= pkg->popts.modConf.traceCall;",
          "187:         profile |= pkg->popts.modConf.profile;",
          "188:         coverage |= pkg->popts.modConf.coverage;",
          "189:     }",
          "191:     interp->callDepth++;",
          "192:     int adds = funcPtr->callflags.bits.addargs;",
          "193:     Jsi_CmdSpec *cs  = funcPtr->cmdSpec;",
          "194:     if (adds && cs && (cs->flags&JSI_CMDSPEC_NONTHIS))",
          "195:         adds = 0;",
          "196:     funcPtr->callflags.bits.addargs = 0;",
          "197:     jsi_InitLocalVar(interp, args, funcPtr);",
          "199:     if (!calltrc) {",
          "200:         if (funcPtr->type == FC_NORMAL)",
          "201:             calltrc = (tc&jsi_callTraceFuncs);",
          "202:         else",
          "203:             calltrc = (tc&jsi_callTraceCmds);",
          "204:     }",
          "205:     if (calltrc && funcPtr->name)",
          "206:         jsi_TraceFuncCall(interp, funcPtr, interp->curIp, callee, args, 0, tc);",
          "208:     Jsi_Value *oc = interp->callee;",
          "209:     interp->callee = callee;",
          "210:     if (profile || coverage) {",
          "211:         interp->profileCnt++;",
          "212:         timStart = jsi_GetTimestamp();",
          "213:     }",
          "214:     int as_cons = funcPtr->callflags.bits.iscons;",
          "215:     if (funcPtr->type == FC_NORMAL) {",
          "216:         rc = jsi_evalcode(interp->ps, funcPtr, funcPtr->opcodes, callee->d.obj->d.fobj->scope,",
          "217:                    args, fthis, ret);",
          "218:         interp->funcCallCnt++;",
          "219:     } else if (!funcPtr->callback) {",
          "220:         rc = Jsi_LogError(\"can not call:\\\"%s()\\\"\", funcPtr->name);",
          "221:     } else {",
          "222:         if (funcPtr->f.bits.hasattr)",
          "223:         {",
          "224:             if ((funcPtr->f.bits.isobj) && callee->vt != JSI_VT_OBJECT) {",
          "225:                 rc = Jsi_LogError(\"'this' is not object: \\\"%s()\\\"\", funcPtr->name);",
          "226:             } else if ((!(funcPtr->f.bits.iscons)) && as_cons) {",
          "227:                 rc = Jsi_LogError(\"can not call as constructor: \\\"%s()\\\"\", funcPtr->name);",
          "228:             } else {",
          "229:                 int aCnt = Jsi_ValueGetLength(interp, args);",
          "230:                 const char *cstr = cs->argStr;",
          "231:                 if (!cstr) cstr = \"\";",
          "232:                 if (aCnt<(cs->minArgs+adds)) {",
          "233:                     rc = Jsi_LogError(\"missing args, expected \\\"%s(%s)\\\" \", cs->name, cstr);",
          "234:                 } else if (cs->maxArgs>=0 && (aCnt>cs->maxArgs+adds)) {",
          "235:                     rc = Jsi_LogError(\"extra args, expected \\\"%s(%s)\\\" \", cs->name, cstr);",
          "239:         if (rc == JSI_OK) {",
          "240:             rc = funcPtr->callback(interp, args, fthis, ret, funcPtr);",
          "241:             interp->cmdCallCnt++;",
          "244:     interp->callee = oc;",
          "245:     funcPtr->callCnt++;",
          "246:     if (profile || coverage) {",
          "247:         double timEnd = jsi_GetTimestamp(), timUsed = (timEnd - timStart);;",
          "248:         assert(timUsed>=0);",
          "249:         funcPtr->allTime += timUsed;",
          "250:         if (interp->framePtr->evalFuncPtr)",
          "251:             interp->framePtr->evalFuncPtr->subTime += timUsed;",
          "252:         else",
          "253:             interp->subTime += timUsed;",
          "254:     }",
          "256:     if (rc == JSI_OK && calltrc && (tc&jsi_callTraceReturn))",
          "257:         jsi_TraceFuncCall(interp, funcPtr, NULL, fthis, NULL, *ret, tc);",
          "258:     if (rc == JSI_OK && !as_cons && funcPtr->retType && (interp->typeCheck.all || interp->typeCheck.run))",
          "259:         rc = jsi_ArgTypeCheck(interp, funcPtr->retType, *ret, \"returned from\", funcPtr->name, 0, funcPtr, 0);",
          "260:     interp->callDepth--;",
          "262: bail:",
          "",
          "[Added Lines]",
          "178:     if (rc == JSI_OK) {",
          "180:         int profile = interp->profile, coverage = interp->coverage;",
          "181:         int tc = interp->traceCall;",
          "182:         double timStart = 0;",
          "183:         jsi_PkgInfo *pkg = funcPtr->pkg;",
          "184:         if (pkg) {",
          "185:             tc |= pkg->popts.modConf.traceCall;",
          "186:             profile |= pkg->popts.modConf.profile;",
          "187:             coverage |= pkg->popts.modConf.coverage;",
          "188:         }",
          "190:         interp->callDepth++;",
          "191:         int adds = funcPtr->callflags.bits.addargs;",
          "192:         Jsi_CmdSpec *cs  = funcPtr->cmdSpec;",
          "193:         if (adds && cs && (cs->flags&JSI_CMDSPEC_NONTHIS))",
          "194:             adds = 0;",
          "195:         funcPtr->callflags.bits.addargs = 0;",
          "196:         jsi_InitLocalVar(interp, args, funcPtr);",
          "198:         if (!calltrc) {",
          "199:             if (funcPtr->type == FC_NORMAL)",
          "200:                 calltrc = (tc&jsi_callTraceFuncs);",
          "201:             else",
          "202:                 calltrc = (tc&jsi_callTraceCmds);",
          "203:         }",
          "204:         if (calltrc && funcPtr->name)",
          "205:             jsi_TraceFuncCall(interp, funcPtr, interp->curIp, callee, args, 0, tc);",
          "207:         Jsi_Value *oc = interp->callee;",
          "208:         interp->callee = callee;",
          "209:         if (profile || coverage) {",
          "210:             interp->profileCnt++;",
          "211:             timStart = jsi_GetTimestamp();",
          "212:         }",
          "213:         int as_cons = funcPtr->callflags.bits.iscons;",
          "214:         if (funcPtr->type == FC_NORMAL) {",
          "215:             rc = jsi_evalcode(interp->ps, funcPtr, funcPtr->opcodes, callee->d.obj->d.fobj->scope,",
          "216:                        args, fthis, ret);",
          "217:             interp->funcCallCnt++;",
          "218:         } else if (!funcPtr->callback) {",
          "219:             rc = Jsi_LogError(\"can not call:\\\"%s()\\\"\", funcPtr->name);",
          "220:         } else {",
          "221:             if (funcPtr->f.bits.hasattr)",
          "222:             {",
          "223:                 if ((funcPtr->f.bits.isobj) && callee->vt != JSI_VT_OBJECT) {",
          "224:                     rc = Jsi_LogError(\"'this' is not object: \\\"%s()\\\"\", funcPtr->name);",
          "225:                 } else if ((!(funcPtr->f.bits.iscons)) && as_cons) {",
          "226:                     rc = Jsi_LogError(\"can not call as constructor: \\\"%s()\\\"\", funcPtr->name);",
          "227:                 } else {",
          "228:                     int aCnt = Jsi_ValueGetLength(interp, args);",
          "229:                     const char *cstr = cs->argStr;",
          "230:                     if (!cstr) cstr = \"\";",
          "231:                     if (aCnt<(cs->minArgs+adds)) {",
          "232:                         rc = Jsi_LogError(\"missing args, expected \\\"%s(%s)\\\" \", cs->name, cstr);",
          "233:                     } else if (cs->maxArgs>=0 && (aCnt>cs->maxArgs+adds)) {",
          "234:                         rc = Jsi_LogError(\"extra args, expected \\\"%s(%s)\\\" \", cs->name, cstr);",
          "235:                     }",
          "238:             if (rc == JSI_OK) {",
          "239:                 rc = funcPtr->callback(interp, args, fthis, ret, funcPtr);",
          "240:                 interp->cmdCallCnt++;",
          "241:             }",
          "243:         interp->callee = oc;",
          "244:         funcPtr->callCnt++;",
          "245:         if (profile || coverage) {",
          "246:             double timEnd = jsi_GetTimestamp(), timUsed = (timEnd - timStart);;",
          "247:             assert(timUsed>=0);",
          "248:             funcPtr->allTime += timUsed;",
          "249:             if (interp->framePtr->evalFuncPtr)",
          "250:                 interp->framePtr->evalFuncPtr->subTime += timUsed;",
          "251:             else",
          "252:                 interp->subTime += timUsed;",
          "255:         if (rc == JSI_OK && calltrc && (tc&jsi_callTraceReturn))",
          "256:             jsi_TraceFuncCall(interp, funcPtr, NULL, fthis, NULL, *ret, tc);",
          "257:         if (rc == JSI_OK && !as_cons && funcPtr->retType && (interp->typeCheck.all || interp->typeCheck.run))",
          "258:             rc = jsi_ArgTypeCheck(interp, funcPtr->retType, *ret, \"returned from\", funcPtr->name, 0, funcPtr, 0);",
          "259:         interp->callDepth--;",
          "",
          "---------------"
        ],
        "tools/protos.jsi||tools/protos.jsi": [
          "File: tools/protos.jsi -> tools/protos.jsi"
        ]
      }
    },
    {
      "candidate_hash": "3a54d7da7a4643e2bc70caeac7cd81f966d28129",
      "candidate_info": {
        "commit_hash": "3a54d7da7a4643e2bc70caeac7cd81f966d28129",
        "repo": "pcmacdon/jsish",
        "commit_url": "https://github.com/pcmacdon/jsish/commit/3a54d7da7a4643e2bc70caeac7cd81f966d28129",
        "files": [
          "Makefile",
          "lib/DebugUI/DebugUI.jsi",
          "lib/DebugUI/html/debugui.jsi",
          "lib/Wget.jsi",
          "md/Reference.md",
          "src/jsi.h",
          "src/jsiArray.c",
          "src/jsiCmds.c",
          "src/jsiEval.c",
          "src/jsiFileCmds.c",
          "src/jsiInt.h",
          "src/jsiInterp.c",
          "src/jsiProto.c",
          "src/jsiVfs.c",
          "src/jsiZvfs.c",
          "tests/info.jsi",
          "tests/utf.jsi",
          "tools/Make.jsi",
          "tools/mktoc.jsi",
          "tools/protos.jsi",
          "tools/structpp.jsi",
          "tools/testsys.sh",
          "www/reference.wiki"
        ],
        "message": "Release \"3.0.27\": add noEval to syntax check scripts\n\nFossilOrigin-Name: bede52013d8ee75a1843b98889d15d99bd3405198900edfead807a2d0d33c7d9",
        "before_after_code_files": [
          "lib/DebugUI/DebugUI.jsi||lib/DebugUI/DebugUI.jsi",
          "lib/DebugUI/html/debugui.jsi||lib/DebugUI/html/debugui.jsi",
          "lib/Wget.jsi||lib/Wget.jsi",
          "src/jsi.h||src/jsi.h",
          "src/jsiArray.c||src/jsiArray.c",
          "src/jsiCmds.c||src/jsiCmds.c",
          "src/jsiEval.c||src/jsiEval.c",
          "src/jsiFileCmds.c||src/jsiFileCmds.c",
          "src/jsiInt.h||src/jsiInt.h",
          "src/jsiInterp.c||src/jsiInterp.c",
          "src/jsiProto.c||src/jsiProto.c",
          "src/jsiVfs.c||src/jsiVfs.c",
          "src/jsiZvfs.c||src/jsiZvfs.c",
          "tests/info.jsi||tests/info.jsi",
          "tests/utf.jsi||tests/utf.jsi",
          "tools/Make.jsi||tools/Make.jsi",
          "tools/mktoc.jsi||tools/mktoc.jsi",
          "tools/protos.jsi||tools/protos.jsi",
          "tools/structpp.jsi||tools/structpp.jsi",
          "tools/testsys.sh||tools/testsys.sh",
          "www/reference.wiki||www/reference.wiki"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/jsi.h||src/jsi.h",
            "src/jsiArray.c||src/jsiArray.c",
            "src/jsiInt.h||src/jsiInt.h",
            "src/jsiInterp.c||src/jsiInterp.c",
            "tools/protos.jsi||tools/protos.jsi",
            "www/reference.wiki||www/reference.wiki"
          ],
          "candidate": [
            "src/jsi.h||src/jsi.h",
            "src/jsiArray.c||src/jsiArray.c",
            "src/jsiInt.h||src/jsiInt.h",
            "src/jsiInterp.c||src/jsiInterp.c",
            "tools/protos.jsi||tools/protos.jsi",
            "www/reference.wiki||www/reference.wiki"
          ]
        }
      },
      "candidate_diff": {
        "lib/DebugUI/DebugUI.jsi||lib/DebugUI/DebugUI.jsi": [
          "File: lib/DebugUI/DebugUI.jsi -> lib/DebugUI/DebugUI.jsi",
          "--- Hunk 1 ---",
          "[Context before]",
          "600:         var file = self.curfile,",
          "601:             line = self.curline,",
          "602:             func = self.curfunc,",
          "604:             opstr = self.opstr,",
          "605:             bpId = self.bpId,",
          "606:             level = self.level;",
          "",
          "[Removed Lines]",
          "603:             level = self.curlevel,",
          "",
          "[Added Lines]",
          "603:             clevel = self.curlevel,",
          "",
          "---------------"
        ],
        "lib/DebugUI/html/debugui.jsi||lib/DebugUI/html/debugui.jsi": [
          "File: lib/DebugUI/html/debugui.jsi -> lib/DebugUI/html/debugui.jsi",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:     if (self.uioptions.varTooltip)",
          "54:         id.title = '.';",
          "57: }",
          "",
          "[Removed Lines]",
          "56:     WsSend('varget', {name:word})",
          "",
          "[Added Lines]",
          "56:     WsSend('varget', {name:word});",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95:     self.dbfile.onmousemove = function(e) {",
          "96:         if (self.uiddbfile) clearInterval(self.uiddbfile);",
          "97:         self.uiddbfile = setTimeout(function () { mouseStopped(e); }, 500);",
          "99:     TogglePanel(\"uibutton\", null);",
          "100: }",
          "",
          "[Removed Lines]",
          "98:     }",
          "",
          "[Added Lines]",
          "98:     };",
          "",
          "---------------"
        ],
        "lib/Wget.jsi||lib/Wget.jsi": [
          "File: lib/Wget.jsi -> lib/Wget.jsi",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:             self.protocol = 'post';",
          "98:         if (self.sslDir) {",
          "101:             self.ssl = true;",
          "102:         }",
          "",
          "[Removed Lines]",
          "99:             if (self.sslFnKey != '') sself.sslkey = File.join(self.sslDir, self.sslFnKey);",
          "100:             if (self.sslFnCert != '') sself.sslcert = File.join(self.sslDir, self.sslFnCert);",
          "",
          "[Added Lines]",
          "99:             if (self.sslFnKey != '') self.sslkey = File.join(self.sslDir, self.sslFnKey);",
          "100:             if (self.sslFnCert != '') self.sslcert = File.join(self.sslDir, self.sslFnCert);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "111:             address:self.address,",
          "112:             protocol:self.protocol,",
          "113:             clientHost:self.address,",
          "116:             ssl:self.ssl,",
          "117:         };",
          "118:         for (var i in self.wsOpts)",
          "",
          "[Removed Lines]",
          "114:             sslCert:self.sslCert,",
          "115:             sslKey:self.sslKey,",
          "",
          "[Added Lines]",
          "114:             sslCert:self.sslcert,",
          "115:             sslKey:self.sslkey,",
          "",
          "---------------"
        ],
        "src/jsi.h||src/jsi.h": [
          "File: src/jsi.h -> src/jsi.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: #define JSI_VERSION_MAJOR   3",
          "6: #define JSI_VERSION_MINOR   0",
          "9: #define JSI_VERSION (JSI_VERSION_MAJOR + ((Jsi_Number)JSI_VERSION_MINOR/100.0) + ((Jsi_Number)JSI_VERSION_RELEASE/10000.0))",
          "",
          "[Removed Lines]",
          "7: #define JSI_VERSION_RELEASE 26",
          "",
          "[Added Lines]",
          "7: #define JSI_VERSION_RELEASE 27",
          "",
          "---------------"
        ],
        "src/jsiArray.c||src/jsiArray.c": [
          "File: src/jsiArray.c -> src/jsiArray.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1227:     { \"concat\",     jsi_ArrayConcatCmd,     0,-1, \"...\", .help=\"Return array with args appended\", .retType=(uint)JSI_TT_ARRAY },",
          "1228:     { \"every\",      jsi_ArrayEveryCmd,      1, 1, \"callback:function\", .help=\"Returns true if every value in array satisfies the test\", .retType=(uint)JSI_TT_ANY },",
          "1229:     { \"fill\",       jsi_ArrayFillCmd,       1, 3, \"value:any, start:number=0, end:number=-1\", .help=\"Fill an array with values\", .retType=(uint)JSI_TT_ARRAY },",
          "1231:     { \"find\",       jsi_ArrayFindCmd,       1, 1, \"callback:function\", .help=\"Returns the value of the first element in the array that satisfies the test\", .retType=(uint)JSI_TT_ANY },",
          "1232:     { \"findIndex\",  jsi_ArrayFindIndexCmd,  1, 1, \"callback:function\", .help=\"Returns the index of the first element in the array that satisfies the test\", .retType=(uint)JSI_TT_ANY },",
          "1233:     { \"flat\",       jsi_ArrayFlatCmd,       0, 1, \"depth:number=1\", .help=\"Flatten an arra\", .retType=(uint)JSI_TT_ARRAY },",
          "1235:     { \"includes\",   jsi_ArrayIncludesCmd,   1, 1, \"val:any\", .help=\"Returns true if array contains value\", .retType=(uint)JSI_TT_ANY },",
          "1236:     { \"indexOf\",    jsi_ArrayIndexOfCmd,    1, 2, \"str:any, startIdx:number=0\", .help=\"Return index of first occurrance in array\", .retType=(uint)JSI_TT_NUMBER },",
          "1237:     { \"isArray\",    jsi_ArrayIsArrayCmd,    0, 0, \"\", .help=\"True if val array\", .retType=(uint)JSI_TT_BOOLEAN },",
          "1238:     { \"join\",       jsi_ArrayJoinCmd,       0, 1, \"sep:string=''\", .help=\"Return elements joined by char\", .retType=(uint)JSI_TT_STRING },",
          "1239:     { \"lastIndexOf\",jsi_ArrayLastindexOfCmd,1, 2, \"val:any, start:number=0\", .help=\"Return index of last occurence in array\", .retType=(uint)JSI_TT_NUMBER },",
          "1241:     { \"pop\",        jsi_ArrayPopCmd,        0, 0, \"\", .help=\"Remove and return last element of array\", .retType=(uint)JSI_TT_ANY },",
          "1242:     { \"push\",       jsi_ArrayPushCmd,       1,-1, \"val:any, ...\", .help=\"Push one or more elements onto array and return size\", .retType=(uint)JSI_TT_NUMBER },",
          "1243:     { \"reduce\",     jsi_ArrayReduceCmd,     1, 2, \"callback:function, initial:any\", .help=\"Return a reduced array\", .retType=(uint)JSI_TT_ANY },",
          "",
          "[Removed Lines]",
          "1230:     { \"filter\",     jsi_ArrayFilterCmd,     1, 2, \"callback:function, this:object=void\", .help=\"Return a filtered array\", .retType=(uint)JSI_TT_ARRAY },",
          "1234:     { \"forEach\",    jsi_ArrayForeachCmd,    1, 2, \"callback:function, this:object=void\", .help=\"Invoke function with each item in object\", .retType=(uint)JSI_TT_VOID },",
          "1240:     { \"map\",        jsi_ArrayMapCmd,        1, 2, \"callback:function, this:object=void\", .help=\"Creates a new array with the results of calling a provided function on every element in this array\", .retType=(uint)JSI_TT_ARRAY },",
          "",
          "[Added Lines]",
          "1230:     { \"filter\",     jsi_ArrayFilterCmd,     1, 2, \"callback:function, thisArg:object=void\", .help=\"Return a filtered array\", .retType=(uint)JSI_TT_ARRAY },",
          "1234:     { \"forEach\",    jsi_ArrayForeachCmd,    1, 2, \"callback:function, thisArg:object=void\", .help=\"Invoke function with each item in object\", .retType=(uint)JSI_TT_VOID },",
          "1240:     { \"map\",        jsi_ArrayMapCmd,        1, 2, \"callback:function, thisArg:object=void\", .help=\"Creates a new array with the results of calling a provided function on every element in this array\", .retType=(uint)JSI_TT_ARRAY },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1245:     { \"shift\",      jsi_ArrayShiftCmd,      0, 0, \"\", .help=\"Remove first element and shift downwards\", .retType=(uint)JSI_TT_ANY },",
          "1246:     { \"sizeOf\",     jsi_ArraySizeOfCmd,     0, 0, \"\", .help=\"Return size of array\", .retType=(uint)JSI_TT_NUMBER },",
          "1247:     { \"slice\",      jsi_ArraySliceCmd,      1, 2, \"start:number, end:number=void\", .help=\"Return sub-array\", .retType=(uint)JSI_TT_ARRAY },",
          "1249:     { \"sort\",       jsi_ArraySortCmd,       0, 1, \"options:function|object=void\", .help=\"Sort an array\", .retType=(uint)JSI_TT_ARRAY, .flags=0, .info=0, .opts=jsi_ArraySortOptions },",
          "1250:     { \"splice\",     jsi_ArraySpliceCmd,     1,-1, \"start:number, howmany:number=void, ...\", .help=\"Change the content of an array, adding new elements while removing old elements\", .retType=(uint)JSI_TT_ARRAY },",
          "1251:     { \"reverse\",    jsi_ArrayReverseCmd,    0, 0, \"\", .help=\"Reverse order of all elements in an array\", .retType=(uint)JSI_TT_ARRAY },",
          "",
          "[Removed Lines]",
          "1248:     { \"some\",       jsi_ArraySomeCmd,       1, 2, \"callback:function, this:object=void\", .help=\"Return true if function returns true some element\", .retType=(uint)JSI_TT_BOOLEAN },",
          "",
          "[Added Lines]",
          "1248:     { \"some\",       jsi_ArraySomeCmd,       1, 2, \"callback:function, thisArg:object=void\", .help=\"Return true if function returns true some element\", .retType=(uint)JSI_TT_BOOLEAN },",
          "",
          "---------------"
        ],
        "src/jsiCmds.c||src/jsiCmds.c": [
          "File: src/jsiCmds.c -> src/jsiCmds.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4779:     { \"executable\", InfoExecutableCmd,  0,  0, \"\", .help=\"Return name of executable\", .retType=(uint)JSI_TT_STRING },",
          "4780:     { \"execZip\",    InfoExecZipCmd,     0,  0, \"\", .help=\"If executing a .zip file, return file name\", .retType=(uint)JSI_TT_STRING|JSI_TT_VOID },",
          "4781:     { \"files\",      InfoFilesCmd,       0,  0, \"\", .help=\"Return list of all sourced files\", .retType=(uint)JSI_TT_ARRAY },",
          "4783:     { \"locals\",     InfoLocalsCmd,      0,  1, \"filter:boolean=void\", .help=\"Return locals; use filter=true/false just vars/functions\", .retType=(uint)JSI_TT_OBJECT },",
          "4784:     { \"interp\",     jsi_InterpInfo,     0,  1, \"interp:userobj=void\", .help=\"Return info on given or current interp\", .retType=(uint)JSI_TT_OBJECT },",
          "4785:     { \"isMain\",     InfoIsMainCmd,      0,  0, \"\", .help=\"Return true if current script was the main script invoked from command-line\", .retType=(uint)JSI_TT_BOOLEAN },",
          "",
          "[Removed Lines]",
          "4782:     { \"funcs\",      InfoFuncsCmd,       0,  1, \"string|regexp|object=void\", .help=\"Return details or list of matching functions\", .retType=(uint)JSI_TT_ARRAY|JSI_TT_OBJECT },",
          "",
          "[Added Lines]",
          "4782:     { \"funcs\",      InfoFuncsCmd,       0,  1, \"arg:string|regexp|object=void\", .help=\"Return details or list of matching functions\", .retType=(uint)JSI_TT_ARRAY|JSI_TT_OBJECT },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4846:     { \"getenv\",     SysGetEnvCmd,    0,  1, \"name:string=void\", .help=\"Get one or all environment\", .retType=(uint)JSI_TT_STRING|JSI_TT_OBJECT|JSI_TT_VOID  },",
          "4847:     { \"getpid\",     SysGetPidCmd,    0,  1, \"parent:boolean=false\", .help=\"Get process/parent id\", .retType=(uint)JSI_TT_NUMBER },",
          "4848:     { \"getuser\",    SysGetUserCmd,   0,  0, \"\", .help=\"Get userid info\", .retType=(uint)JSI_TT_OBJECT },",
          "4850:     { \"setenv\",     SysSetEnvCmd,    1,  2, \"name:string, value:string=void\", .help=\"Set/get an environment var\"  },",
          "4852:     { \"times\",      SysTimesCmd,     1,  2, \"callback:function|boolean, count:number=1\", .help=\"Call function count times and return execution time in microseconds\", .retType=(uint)JSI_TT_NUMBER },",
          "4853:     { \"verConvert\", SysVerConvertCmd,1,  2, \"ver:string|number, zeroTrim:number=0\", .help=\"Convert a version to/from a string/number, or return null if not a version. For string output zeroTrim says how many trailing .0 to trim (0-2)\", .retType=(uint)JSI_TT_NUMBER|JSI_TT_STRING|JSI_TT_NULL },",
          "4854:     { NULL, 0,0,0,0, .help=\"Utilities commands\"  }",
          "",
          "[Removed Lines]",
          "4849:     { \"hash\",       SysHashCmd,      1,  2, \"val:string, options|object=void\", .help=\"Return hash (default SHA256) of string/file\", .retType=(uint)JSI_TT_STRING, .flags=0, .info=0, .opts=HashOptions},",
          "4851:     { \"sqlValues\",  SysSqlValuesCmd, 1,  2, \"name:string, var:object=void\", .help=\"Get object values for SQL\"  },",
          "",
          "[Added Lines]",
          "4849:     { \"hash\",       SysHashCmd,      1,  2, \"val:string, options:object=void\", .help=\"Return hash (default SHA256) of string/file\", .retType=(uint)JSI_TT_STRING, .flags=0, .info=0, .opts=HashOptions},",
          "4851:     { \"sqlValues\",  SysSqlValuesCmd, 1,  2, \"name:string, obj:object=void\", .help=\"Get object values for SQL\"  },",
          "",
          "---------------"
        ],
        "src/jsiEval.c||src/jsiEval.c": [
          "File: src/jsiEval.c -> src/jsiEval.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2355:     interp->evalFlags = flags;",
          "2356:     if (!ps)",
          "2357:         rc = JSI_ERROR;",
          "2359:         Jsi_ValueMakeUndef(interp, &interp->retValue);",
          "2360:         interp->ps = ps;",
          "2361:         Jsi_Value *retValue = interp->retValue;",
          "",
          "[Removed Lines]",
          "2358:     else {",
          "",
          "[Added Lines]",
          "2358:     else if (!interp->noEval) {",
          "",
          "---------------"
        ],
        "src/jsiFileCmds.c||src/jsiFileCmds.c": [
          "File: src/jsiFileCmds.c -> src/jsiFileCmds.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1281:     { \"executable\", FileExecutableCmd,  1,  1, \"file:string\",  .help=\"Return true if file is executable\", .retType=(uint)JSI_TT_BOOLEAN },",
          "1282:     { \"exists\",     FileExistsCmd,      1,  1, \"file:string\",  .help=\"Return true if file exists\", .retType=(uint)JSI_TT_BOOLEAN },",
          "1283:     { \"extension\",  FileExtensionCmd,   1,  1, \"file:string\",  .help=\"Return file extension\", .retType=(uint)JSI_TT_STRING },",
          "1285:     { \"isdir\",      FileIsdirCmd,       1,  1, \"file:string\",  .help=\"Return true if file is a directory\", .retType=(uint)JSI_TT_BOOLEAN },",
          "1286:     { \"isfile\",     FileIsfileCmd,      1,  1, \"file:string\",  .help=\"Return true if file is a normal file\", .retType=(uint)JSI_TT_BOOLEAN },",
          "1287:     { \"isrelative\", FileIsRelativeCmd,  1,  1, \"file:string\",  .help=\"Return true if file path is relative\", .retType=(uint)JSI_TT_BOOLEAN },",
          "",
          "[Removed Lines]",
          "1284:     { \"join\",       FileJoinCmd,        2,  2, \"path:string, path:string\",  .help=\"Join two file realpaths, or just second if an absolute path\", .retType=(uint)JSI_TT_STRING },",
          "",
          "[Added Lines]",
          "1284:     { \"join\",       FileJoinCmd,        2,  2, \"path1:string, path2:string\",  .help=\"Join two file realpaths, or just second if an absolute path\", .retType=(uint)JSI_TT_STRING },",
          "",
          "---------------"
        ],
        "src/jsiInt.h||src/jsiInt.h": [
          "File: src/jsiInt.h -> src/jsiInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1117:     Jsi_Value *jsppCallback;",
          "1118:     bool noConfig;",
          "1119:     bool noLoad;",
          "1120:     bool noAutoLoad;",
          "1121:     bool noStderr;",
          "1122:     bool noSubInterps;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1120:     bool noEval;",
          "",
          "---------------"
        ],
        "src/jsiInterp.c||src/jsiInterp.c": [
          "File: src/jsiInterp.c -> src/jsiInterp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "110:     JSI_OPT(STRKEY,Jsi_Interp, name,        .help=\"Optional text name for this interp\"),",
          "111:     JSI_OPT(BOOL,  Jsi_Interp, noAutoLoad,  .help=\"Disable autoload\", .flags=JSI_OPT_LOCKSAFE ),",
          "112:     JSI_OPT(BOOL,  Jsi_Interp, noConfig,    .help=\"Disable use of Interp.conf to change options after create\", jsi_IIOF),",
          "113:     JSI_OPT(BOOL,  Jsi_Interp, noInput,     .help=\"Disable use of console.input()\", .flags=JSI_OPT_LOCKSAFE),",
          "114:     JSI_OPT(BOOL,  Jsi_Interp, noLoad,      .help=\"Disable load of shared libs\", .flags=JSI_OPT_LOCKSAFE),",
          "115:     JSI_OPT(BOOL,  Jsi_Interp, noNetwork,   .help=\"Disable new Socket/WebSocket, or load of builtin MySql\", .flags=JSI_OPT_LOCKSAFE),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "113:     JSI_OPT(BOOL,  Jsi_Interp, noEval,      .help=\"Disable eval: just parses file to check syntax\", jsi_IIOF),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1335:             bool bv = 1;",
          "1336:             char *aio2 = argv[iocnt+1], *aioc = Jsi_Strchr(aio2, ':'),",
          "1337:                 argNamS[50], *argNam = aio2;",
          "1338:             const char *argVal;",
          "1339:             if (!Jsi_Strcmp(\"traceCall\", aio2))",
          "1340:                 interp->traceCall |= (jsi_callTraceFuncs |jsi_callTraceArgs |jsi_callTraceReturn | jsi_callTraceBefore | jsi_callTraceFullPath);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1339:             if (!aioc)",
          "1340:                 aioc = Jsi_Strchr(aio2, '=');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2768:     { \"info\",   InterpInfoCmd,    0,  0, \"\", .help=\"Returns internal statistics about interp\", .retType=(uint)JSI_TT_OBJECT },",
          "2769:     { \"source\", InterpSourceCmd,  1,  2, \"file:string, async:boolean=false\", .help=\"Interpret file within sub-interp\", .retType=(uint)JSI_TT_ANY, .flags=0, .info=FN_interpeval },",
          "2770:     { \"uplevel\",InterpUplevelCmd, 2,  2, \"js:string, level:number=0\", .help=\"Interpret code at the given stack level\", .retType=(uint)JSI_TT_ANY, .flags=0, .info=FN_interpuplevel },",
          "2772:     { NULL,     0,0,0,0, .help=\"Commands for accessing interps\" }",
          "2773: };",
          "",
          "[Removed Lines]",
          "2771:     { \"value\",  InterpValueCmd,   1,  2, \"var:string, level:number=0\", .help=\"Lookup value of variable at stack level\", .retType=(uint)JSI_TT_ANY },",
          "",
          "[Added Lines]",
          "2774:     { \"value\",  InterpValueCmd,   1,  2, \"varName:string, level:number=0\", .help=\"Lookup value of variable at stack level\", .retType=(uint)JSI_TT_ANY },",
          "",
          "---------------"
        ],
        "src/jsiProto.c||src/jsiProto.c": [
          "File: src/jsiProto.c -> src/jsiProto.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "628: static Jsi_CmdSpec functionCmds[] = {",
          "629:     { \"Function\",  jsi_Function_constructor,   0, 0,  \"\", .help=\"Function constructor (unimplemented)\", .retType=(uint)JSI_TT_FUNCTION, .flags=JSI_CMD_IS_CONSTRUCTOR },",
          "630:     { \"apply\",     jsi_FunctionApplyCmd,       1, 2,  \"thisArg:null|object|function, args:array=void\", .help=\"Call function passing args array\", .retType=(uint)JSI_TT_ANY },",
          "632:     { \"call\",      jsi_FunctionCallCmd,        1, -1, \"thisArg:null|object|function, arg1, ...\", .help=\"Call function with args\", .retType=(uint)JSI_TT_ANY },",
          "633:     { NULL, 0,0,0,0, .help=\"Commands for accessing functions\" }",
          "634: };",
          "",
          "[Removed Lines]",
          "631:     { \"bind\",      jsi_FunctionBindCmd,        0, -1, \"thisArg:object|function=null,arg,...\", .help=\"Return function that calls bound function prepended with thisArg+arguments\", .retType=(uint)JSI_TT_ANY },",
          "",
          "[Added Lines]",
          "631:     { \"bind\",      jsi_FunctionBindCmd,        0, -1, \"thisArg:object|function=null,...\", .help=\"Return function that calls bound function prepended with thisArg+arguments\", .retType=(uint)JSI_TT_ANY },",
          "",
          "---------------"
        ],
        "src/jsiVfs.c||src/jsiVfs.c": [
          "File: src/jsiVfs.c -> src/jsiVfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "834: static Jsi_CmdSpec vfsCmds[] = {",
          "836:     { \"exec\",       VfsExecCmd,     1,  1, \"cmd:string\",  .help=\"Safe mode exec for VFS support cmds eg. fossil info/ls/cat\", .retType=(uint)JSI_TT_ANY, .flags=0, .info=0, .opts=VfsFileOptions },",
          "837:     { \"fileconf\",   VfsFileConfCmd, 2,  3, \"mount:string, path:string, options:string|object=void\",  .help=\"Configure file info which is same info as in fileList\", .retType=(uint)JSI_TT_ANY, .flags=0, .info=0, .opts=VfsFileOptions },",
          "838:     { \"list\",       VfsListCmd,     0,  0, \"\",  .help=\"Return list of all vfs mounts\", .retType=(uint)JSI_TT_ARRAY, .flags=0 },",
          "",
          "[Removed Lines]",
          "835:     { \"conf\",       VfsConfCmd,     1,  2, \"mount:string, string|options:object|string=void\",  .help=\"Configure mount\", .retType=(uint)JSI_TT_ANY, .flags=0, .info=0, .opts=VfsOptions },",
          "",
          "[Added Lines]",
          "835:     { \"conf\",       VfsConfCmd,     1,  2, \"mount:string, options:string|object|string=void\",  .help=\"Configure mount\", .retType=(uint)JSI_TT_ANY, .flags=0, .info=0, .opts=VfsOptions },",
          "",
          "---------------"
        ],
        "src/jsiZvfs.c||src/jsiZvfs.c": [
          "File: src/jsiZvfs.c -> src/jsiZvfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2346: }",
          "2348: static Jsi_CmdSpec zvfsCmds[] = {",
          "2351:     { \"list\",       ZvfsListCmd,        1,  1, \"archive:string\",  .help=\"List files in archive\", .retType=(uint)JSI_TT_ARRAY, .flags=0, .info=FN_list },",
          "2352:     { \"mount\",      ZvfsMountCmd,       1,  2, \"archive:string, mountdir:string=void\",  .help=\"Mount zip on mount point\", .retType=(uint)JSI_TT_STRING, .flags=0, .info=FN_mount },",
          "2353:     { \"names\",      ZvfsNamesCmd,       0,  1, \"mountdir:string=void\",  .help=\"Return all zvfs mounted zips, or archive for specified mount\", .retType=(uint)JSI_TT_ARRAY, .flags=0, .info=FN_info },",
          "",
          "[Removed Lines]",
          "2349:     { \"append\",     ZvfsAppendCmd,      2, -1, \"archive:string, filelist:array, path:string|null=void, filelist:array=void, path:string|null=void, ...\",  .help=\"Like 'create()', but appends to an existing archive (with no dup checking)\", .retType=(uint)JSI_TT_VOID },",
          "2350:     { \"create\",     ZvfsCreateCmd,      2, -1, \"archive:string, filelist:array, path:string|null=void, filelist:array=void, path:string|null=void, ...\",  .help=\"Create a zip with the given files in prefix path\", .retType=(uint)JSI_TT_VOID, .flags=0, .info=FN_create },",
          "",
          "[Added Lines]",
          "2349:     { \"append\",     ZvfsAppendCmd,      2, -1, \"archive:string, filelist:array, path:string|null=void, filelist2:array=void, path2:string|null=void, ...\",  .help=\"Like 'create()', but appends to an existing archive (with no dup checking)\", .retType=(uint)JSI_TT_VOID },",
          "2350:     { \"create\",     ZvfsCreateCmd,      2, -1, \"archive:string, filelist:array, path:string|null=void, filelist2:array=void, path2:string|null=void, ...\",  .help=\"Create a zip with the given files in prefix path\", .retType=(uint)JSI_TT_VOID, .flags=0, .info=FN_create },",
          "",
          "---------------"
        ],
        "tests/info.jsi||tests/info.jsi": [
          "File: tests/info.jsi -> tests/info.jsi",
          "--- Hunk 1 ---",
          "[Context before]",
          "57: K = {} ==> {}",
          "58: K.f(1) ==> 'F'",
          "59: undefined",
          "61: Info.funcs(K) ==> [ \"f\", \"g\" ]",
          "62: File.tail(Info.script()) ==> info.jsi",
          "63: File.tail(Info.script(XX)) ==> info.jsi",
          "",
          "[Removed Lines]",
          "60: Info.funcs(K.f).argList ==> [ \"z\" ]",
          "",
          "[Added Lines]",
          "60: Info.funcs(K.f).argList ==> /home/pmacdona/src/jsi3/tests/info.jsi:29: warn: type mismatch for argument arg 1 'arg': expected \"string|object|regexp\" but got \"function\", in call to 'funcs' <function (z) {...}>.    (at or near \"f\")",
          "62: [ \"z\" ]",
          "",
          "---------------"
        ],
        "tests/utf.jsi||tests/utf.jsi": [
          "File: tests/utf.jsi -> tests/utf.jsi",
          "--- Hunk 1 ---",
          "[Context before]",
          "48: d[2] ==> c",
          "49: d[3] ==> undefined",
          "50: d[9] ==> undefined",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51: =!EXPECTEND!=",
          "",
          "---------------"
        ],
        "tools/Make.jsi||tools/Make.jsi": [
          "File: tools/Make.jsi -> tools/Make.jsi",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tools/mktoc.jsi||tools/mktoc.jsi": [
          "File: tools/mktoc.jsi -> tools/mktoc.jsi",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:     parseOpts(self, options, conf);",
          "15:     function mk1toc(fname:string) {",
          "17:         var id, lbl, intoc = false, sawtoc = false, line = 0, tpre = '', tpost = '', oldtoc = '';",
          "18:         var errs = 0, s, s0, fp = new Channel(fname);",
          "19:         while ((s0=fp.gets()) !== undefined) {",
          "",
          "[Removed Lines]",
          "16:         var rc = '', lst = [], idlst = [], lev = 0, prev = 0, cur = 0, res, lev, top = 0;",
          "",
          "[Added Lines]",
          "16:         var rc = '', lst = [], idlst = [], lev = 0, prev = 0, cur = 0, res, top = 0;",
          "",
          "---------------"
        ],
        "tools/protos.jsi||tools/protos.jsi": [
          "File: tools/protos.jsi -> tools/protos.jsi",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: Array.prototype.concat = function(...):array {};",
          "6: Array.prototype.every = function(callback:function):any {};",
          "7: Array.prototype.fill = function(value:any, start:number=0, end:number=-1):array {};",
          "9: Array.prototype.find = function(callback:function):any {};",
          "10: Array.prototype.findIndex = function(callback:function):any {};",
          "11: Array.prototype.flat = function(depth:number=1):array {};",
          "13: Array.prototype.includes = function(val:any):any {};",
          "14: Array.prototype.indexOf = function(str:any, startIdx:number=0):number {};",
          "15: Array.prototype.isArray = function():boolean {};",
          "16: Array.prototype.join = function(sep:string=''):string {};",
          "17: Array.prototype.lastIndexOf = function(val:any, start:number=0):number {};",
          "19: Array.prototype.pop = function():any {};",
          "20: Array.prototype.push = function(val:any, ...):number {};",
          "21: Array.prototype.reduce = function(callback:function, initial:any):any {};",
          "",
          "[Removed Lines]",
          "8: Array.prototype.filter = function(callback:function, this:object=void):array {};",
          "12: Array.prototype.forEach = function(callback:function, this:object=void):void {};",
          "18: Array.prototype.map = function(callback:function, this:object=void):array {};",
          "",
          "[Added Lines]",
          "8: Array.prototype.filter = function(callback:function, thisArg:object=void):array {};",
          "12: Array.prototype.forEach = function(callback:function, thisArg:object=void):void {};",
          "18: Array.prototype.map = function(callback:function, thisArg:object=void):array {};",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24: Array.prototype.shift = function():any {};",
          "25: Array.prototype.sizeOf = function():number {};",
          "26: Array.prototype.slice = function(start:number, end:number=void):array {};",
          "28: Array.prototype.sort = function(options:function|object=void):array {};",
          "29: Array.prototype.splice = function(start:number, howmany:number=void, ...):array {};",
          "30: Array.prototype.unshift = function(...):number {};",
          "",
          "[Removed Lines]",
          "27: Array.prototype.some = function(callback:function, this:object=void):boolean {};",
          "",
          "[Added Lines]",
          "27: Array.prototype.some = function(callback:function, thisArg:object=void):boolean {};",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "98: File.prototype.isdir = function(file:string):boolean {};",
          "99: File.prototype.isfile = function(file:string):boolean {};",
          "100: File.prototype.isrelative = function(file:string):boolean {};",
          "102: File.prototype.link = function(src:string, dest:string, ishard:boolean=false):any {};",
          "103: File.prototype.lstat = function(file:string):object {};",
          "104: File.prototype.mkdir = function(file:string,force:boolean=false):any {};",
          "",
          "[Removed Lines]",
          "101: File.prototype.join = function(path:string, path:string):string {};",
          "",
          "[Added Lines]",
          "101: File.prototype.join = function(path1:string, path2:string):string {};",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "123: File.prototype.write = function(file:string, str:string, mode:string='wb+'):number {};",
          "124: var Function = function(cmd,args) {};",
          "125: Function.prototype.apply = function(thisArg:null|object|function, args:array=void):any {};",
          "127: Function.prototype.call = function(thisArg:null|object|function, arg1, ...):any {};",
          "128: var Info = function(cmd,args) {};",
          "129: Info.prototype.argv0 = function():string|void {};",
          "",
          "[Removed Lines]",
          "126: Function.prototype.bind = function(thisArg:object|function=null,arg,...):any {};",
          "",
          "[Added Lines]",
          "126: Function.prototype.bind = function(thisArg:object|function=null,...):any {};",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "135: Info.prototype.execZip = function():string|void {};",
          "136: Info.prototype.executable = function():string {};",
          "137: Info.prototype.files = function():array {};",
          "139: Info.prototype.interp = function(interp:userobj=void):object {};",
          "140: Info.prototype.isMain = function():boolean {};",
          "141: Info.prototype.keywords = function(isSql=false, name:string=void):boolean|array {};",
          "",
          "[Removed Lines]",
          "138: Info.prototype.funcs = function(string|regexp|object=void):array|object {};",
          "",
          "[Added Lines]",
          "138: Info.prototype.funcs = function(arg:string|regexp|object=void):array|object {};",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "159: Interp.prototype.info = function():object {};",
          "160: Interp.prototype.source = function(file:string, async:boolean=false):any {};",
          "161: Interp.prototype.uplevel = function(js:string, level:number=0):any {};",
          "163: var JSON = function(cmd,args) {};",
          "164: JSON.prototype.check = function(str:string, strict:boolean=true):boolean {};",
          "165: JSON.prototype.parse = function(str:string, strict:boolean=true):any {};",
          "",
          "[Removed Lines]",
          "162: Interp.prototype.value = function(var:string, level:number=0):any {};",
          "",
          "[Added Lines]",
          "162: Interp.prototype.value = function(varName:string, level:number=0):any {};",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "325: Util.prototype.getenv = function(name:string=void):string|object|void {};",
          "326: Util.prototype.getpid = function(parent:boolean=false):number {};",
          "327: Util.prototype.getuser = function():object {};",
          "329: Util.prototype.hexStr = function(val:string, decode:boolean=false):string {};",
          "330: Util.prototype.setenv = function(name:string, value:string=void):any {};",
          "332: Util.prototype.times = function(callback:function|boolean, count:number=1):number {};",
          "333: Util.prototype.verConvert = function(ver:string|number, zeroTrim:number=0):number|string|null {};",
          "334: var Vfs = function(cmd,args) {};",
          "336: Vfs.prototype.exec = function(cmd:string):any {};",
          "337: Vfs.prototype.fileconf = function(mount:string, path:string, options:string|object=void):any {};",
          "338: Vfs.prototype.list = function():array {};",
          "",
          "[Removed Lines]",
          "328: Util.prototype.hash = function(val:string, options|object=void):string {};",
          "331: Util.prototype.sqlValues = function(name:string, var:object=void):any {};",
          "335: Vfs.prototype.conf = function(mount:string, string|options:object|string=void):any {};",
          "",
          "[Added Lines]",
          "328: Util.prototype.hash = function(val:string, options:object=void):string {};",
          "331: Util.prototype.sqlValues = function(name:string, obj:object=void):any {};",
          "335: Vfs.prototype.conf = function(mount:string, options:string|object|string=void):any {};",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "354: WebSocket.prototype.update = function():void {};",
          "355: WebSocket.prototype.version = function():string {};",
          "356: var Zvfs = function(cmd,args) {};",
          "359: Zvfs.prototype.deflate = function(data:string):string {};",
          "360: Zvfs.prototype.inflate = function(data:string):string {};",
          "361: Zvfs.prototype.list = function(archive:string):array {};",
          "",
          "[Removed Lines]",
          "357: Zvfs.prototype.append = function(archive:string, filelist:array, path:string|null=void, filelist:array=void, path:string|null=void, ...):void {};",
          "358: Zvfs.prototype.create = function(archive:string, filelist:array, path:string|null=void, filelist:array=void, path:string|null=void, ...):void {};",
          "",
          "[Added Lines]",
          "357: Zvfs.prototype.append = function(archive:string, filelist:array, path:string|null=void, filelist2:array=void, path2:string|null=void, ...):void {};",
          "358: Zvfs.prototype.create = function(archive:string, filelist:array, path:string|null=void, filelist2:array=void, path2:string|null=void, ...):void {};",
          "",
          "---------------"
        ],
        "tools/structpp.jsi||tools/structpp.jsi": [
          "File: tools/structpp.jsi -> tools/structpp.jsi",
          "--- Hunk 1 ---",
          "[Context before]",
          "156:         pdq.pre += sc;",
          "157:         if (bsgets.length) {",
          "158:             rc = \"\\n/* A set/get bitfield function for the struct \\\"name\\\". */\\n\"",
          "160:                 + \"  int rc = JSI_OK, idx = spec->offset;\\n\"",
          "161:                 + \"  const char *fname=\\\"\\\";\\n\"",
          "162:                 + \"  struct \"+name+\" *p = (struct \"+name+\" *)data;\\n\"",
          "164:             for (var k in bsgets) {",
          "165:                 var i = bsgets[k][0];",
          "166:                 var j = bsgets[k][1];",
          "",
          "[Removed Lines]",
          "159:                 + \"static int pdq_bsget_\"+name+\"(Jsi_Interp *interp, Jsi_OptionSpec *spec, void *data, Jsi_Wide *s, int isSet) \\{\\n\"",
          "163:                 + \"  switch (idx) \\{\\n\";",
          "",
          "[Added Lines]",
          "159:                 + \"static int pdq_bsget_\"+name+\"(Jsi_Interp *interp, Jsi_OptionSpec *spec, void *data, Jsi_Wide *s, int isSet) {\\n\"",
          "163:                 + \"  switch (idx) {\\n\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "178:                 rc += \"\\n    case \"+k+\": {\\n\"+rr+\"    }\\n\";",
          "179:             }",
          "180:             rc += \"\\n    default: {Jsi_LogError(\\\"bad index: %d\\\", idx); return JSI_ERROR; }\\n\";",
          "182:                     + \"  if (rc != JSI_OK) Jsi_LogError(\\\"value %lld out of range for field '%s'\\\",*s, fname); return JSI_ERROR; }\\n\"",
          "184:             pdq.out += rc;",
          "185:         }",
          "186:         pdq.out += \"\\nstatic pdq_Field pdq_SF_\"+name+\"[] = {\\n\"+ fieldstr +\"  {0}\\n};\\n\\n\";",
          "",
          "[Removed Lines]",
          "181:             rc += \"  \\}\\n\"",
          "183:                 + \"  return rc;\\n\\}\\n\\n\";",
          "",
          "[Added Lines]",
          "181:             rc += \"  }\\n\"",
          "183:                 + \"  return rc;\\n}\\n\\n\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "235:         var name = self.name;",
          "236:         pdq.out = pdq.pre + \"\\n#ifdef _PDQSTATIC_C_\\n\"",
          "237:         + pdq.out",
          "239:         + pdq.types",
          "241:         + pdq.structs",
          "243:         + pdq.enums",
          "244:         + \"  { 0 }\\n};\\n\\n\"",
          "245:         + \"static pdq_static pdq_statics_\"+name+\" = { pdq_static_SIG, \\\"\"+name+\"\\\", pdq_SFL_\"+name",
          "",
          "[Removed Lines]",
          "238:         + \"static pdq_Type pdq_SFT_\"+name+\"\\[\\] = {\\n\"",
          "240:         + \"  { 0 }\\n};\\n\\nstatic pdq_Struct pdq_SFL_\"+name+\"\\[\\] = {\\n\"",
          "242:         + \"  { 0 }\\n};\\n\\nstatic pdq_Enum pdq_SFE_\"+name+\"\\[\\] = {\\n\"",
          "",
          "[Added Lines]",
          "238:         + \"static pdq_Type pdq_SFT_\"+name+\"[] = {\\n\"",
          "240:         + \"  { 0 }\\n};\\n\\nstatic pdq_Struct pdq_SFL_\"+name+\"[] = {\\n\"",
          "242:         + \"  { 0 }\\n};\\n\\nstatic pdq_Enum pdq_SFE_\"+name+\"[] = {\\n\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "336:             dputs(\"IV:\", items.enums[i],'\\n');",
          "337:             GenEnum(items.enums[i], '', false);",
          "338:         }",
          "340:             dputs(\"IV:\", items.sigs[i],'\\n');",
          "341:             GenEnum(items.sigs[i], '_SIG', true);",
          "342:         }",
          "344:             dputs(\"IV:\", items.structs[i],'\\n');",
          "345:             GenStruct(items.structs[i]);",
          "346:         }",
          "348:             dputs(\"IV:\", items.vars[i],'\\n');",
          "349:             GenVars(items.vars[i]);",
          "350:         }",
          "",
          "[Removed Lines]",
          "339:         for (var i in items.sigs) {",
          "343:         for (var i in items.structs) {",
          "347:         for (var i in items.vars) {",
          "",
          "[Added Lines]",
          "339:         for (i in items.sigs) {",
          "343:         for (i in items.structs) {",
          "347:         for (i in items.vars) {",
          "",
          "---------------"
        ],
        "tools/testsys.sh||tools/testsys.sh": [
          "File: tools/testsys.sh -> tools/testsys.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #!/bin/bash",
          "2: # Test all .jsi scripts in system.",
          "3: for i in `find . -name \"*.jsi\"`; do",
          "4:     if echo $i | fgrep -q /html/; then",
          "5:         #echo $i",
          "6:         continue",
          "7:     fi",
          "8:     if echo $i | fgrep -q /warn; then",
          "9:         #echo $i",
          "10:         continue",
          "11:     fi",
          "12:     if echo $i | fgrep -q /tests/; then",
          "13:         #echo $i",
          "14:         continue",
          "15:     fi",
          "16:     jsish --I noEval=true $i",
          "17: done",
          "",
          "---------------"
        ],
        "www/reference.wiki||www/reference.wiki": [
          "File: www/reference.wiki -> www/reference.wiki",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: <tr><td>concat</td><td>concat(...):array </td><td>Return array with args appended.</td></tr>",
          "54: <tr><td>every</td><td>every(callback:function) </td><td>Returns true if every value in array satisfies the test.</td></tr>",
          "55: <tr><td>fill</td><td>fill(value:any, start:number=0, end:number=-1):array </td><td>Fill an array with values.</td></tr>",
          "57: <tr><td>find</td><td>find(callback:function) </td><td>Returns the value of the first element in the array that satisfies the test.</td></tr>",
          "58: <tr><td>findIndex</td><td>findIndex(callback:function) </td><td>Returns the index of the first element in the array that satisfies the test.</td></tr>",
          "59: <tr><td>flat</td><td>flat(depth:number=1):array </td><td>Flatten an arra.</td></tr>",
          "61: <tr><td>includes</td><td>includes(val:any) </td><td>Returns true if array contains value.</td></tr>",
          "62: <tr><td>indexOf</td><td>indexOf(str:any, startIdx:number=0):number </td><td>Return index of first occurrance in array.</td></tr>",
          "63: <tr><td>isArray</td><td>isArray():boolean </td><td>True if val array.</td></tr>",
          "64: <tr><td>join</td><td>join(sep:string=''):string </td><td>Return elements joined by char.</td></tr>",
          "65: <tr><td>lastIndexOf</td><td>lastIndexOf(val:any, start:number=0):number </td><td>Return index of last occurence in array.</td></tr>",
          "67: <tr><td>pop</td><td>pop() </td><td>Remove and return last element of array.</td></tr>",
          "68: <tr><td>push</td><td>push(val:any, ...):number </td><td>Push one or more elements onto array and return size.</td></tr>",
          "69: <tr><td>reduce</td><td>reduce(callback:function, initial:any) </td><td>Return a reduced array.</td></tr>",
          "",
          "[Removed Lines]",
          "56: <tr><td>filter</td><td>filter(callback:function, this:object=void):array </td><td>Return a filtered array.</td></tr>",
          "60: <tr><td>forEach</td><td>forEach(callback:function, this:object=void):void </td><td>Invoke function with each item in object.</td></tr>",
          "66: <tr><td>map</td><td>map(callback:function, this:object=void):array </td><td>Creates a new array with the results of calling a provided function on every element in this array.</td></tr>",
          "",
          "[Added Lines]",
          "56: <tr><td>filter</td><td>filter(callback:function, thisArg:object=void):array </td><td>Return a filtered array.</td></tr>",
          "60: <tr><td>forEach</td><td>forEach(callback:function, thisArg:object=void):void </td><td>Invoke function with each item in object.</td></tr>",
          "66: <tr><td>map</td><td>map(callback:function, thisArg:object=void):array </td><td>Creates a new array with the results of calling a provided function on every element in this array.</td></tr>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72: <tr><td>shift</td><td>shift() </td><td>Remove first element and shift downwards.</td></tr>",
          "73: <tr><td>sizeOf</td><td>sizeOf():number </td><td>Return size of array.</td></tr>",
          "74: <tr><td>slice</td><td>slice(start:number, end:number=void):array </td><td>Return sub-array.</td></tr>",
          "76: <tr><td>sort</td><td>sort(<a href='#Array.sortOptions'>options</a>:function|object=void):array </td><td>Sort an array.</td></tr>",
          "77: <tr><td>splice</td><td>splice(start:number, howmany:number=void, ...):array </td><td>Change the content of an array, adding new elements while removing old elements.</td></tr>",
          "78: <tr><td>unshift</td><td>unshift(...):number </td><td>Add new elements to start of array and return size.</td></tr>",
          "",
          "[Removed Lines]",
          "75: <tr><td>some</td><td>some(callback:function, this:object=void):boolean </td><td>Return true if function returns true some element.</td></tr>",
          "",
          "[Added Lines]",
          "75: <tr><td>some</td><td>some(callback:function, thisArg:object=void):boolean </td><td>Return true if function returns true some element.</td></tr>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "453: <tr><td>isdir</td><td>isdir(file:string):boolean </td><td>Return true if file is a directory.</td></tr>",
          "454: <tr><td>isfile</td><td>isfile(file:string):boolean </td><td>Return true if file is a normal file.</td></tr>",
          "455: <tr><td>isrelative</td><td>isrelative(file:string):boolean </td><td>Return true if file path is relative.</td></tr>",
          "457: <tr><td>link</td><td>link(src:string, dest:string, ishard:boolean=false) </td><td>Link a file. The second argument is the destination file to be created. If a third bool argument is true, a hard link is created.</td></tr>",
          "458: <tr><td>lstat</td><td>lstat(file:string):object </td><td>Return status info for file.</td></tr>",
          "459: <tr><td>mkdir</td><td>mkdir(file:string,force:boolean=false) </td><td>Create a directory: force creates subdirs.</td></tr>",
          "",
          "[Removed Lines]",
          "456: <tr><td>join</td><td>join(path:string, path:string):string </td><td>Join two file realpaths, or just second if an absolute path.</td></tr>",
          "",
          "[Added Lines]",
          "456: <tr><td>join</td><td>join(path1:string, path2:string):string </td><td>Join two file realpaths, or just second if an absolute path.</td></tr>",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "517: <tr><th>Method</th><th>Prototype</th><th>Description</th></tr>",
          "518: <tr><td>Function</td><td>new Function():function </td><td>Function constructor (unimplemented).</td></tr>",
          "519: <tr><td>apply</td><td>apply(thisArg:null|object|function, args:array=void) </td><td>Call function passing args array.</td></tr>",
          "521: <tr><td>call</td><td>call(thisArg:null|object|function, arg1, ...) </td><td>Call function with args.</td></tr>",
          "522: </table>",
          "523: <a name=\"Functionend\"></a>",
          "",
          "[Removed Lines]",
          "520: <tr><td>bind</td><td>bind(thisArg:object|function=null,arg,...) </td><td>Return function that calls bound function prepended with thisArg+arguments.</td></tr>",
          "",
          "[Added Lines]",
          "520: <tr><td>bind</td><td>bind(thisArg:object|function=null,...) </td><td>Return function that calls bound function prepended with thisArg+arguments.</td></tr>",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "546: <tr><td>execZip</td><td>execZip():string|void </td><td>If executing a .zip file, return file name.</td></tr>",
          "547: <tr><td>executable</td><td>executable():string </td><td>Return name of executable.</td></tr>",
          "548: <tr><td>files</td><td>files():array </td><td>Return list of all sourced files.</td></tr>",
          "550: <tr><td>interp</td><td>interp(interp:userobj=void):object </td><td>Return info on given or current interp.</td></tr>",
          "551: <tr><td>isMain</td><td>isMain():boolean </td><td>Return true if current script was the main script invoked from command-line.</td></tr>",
          "552: <tr><td>keywords</td><td>keywords(isSql=false, name:string=void):boolean|array </td><td>Return/lookup reserved keyword.</td></tr>",
          "",
          "[Removed Lines]",
          "549: <tr><td>funcs</td><td>funcs(string|regexp|object=void):array|object </td><td>Return details or list of matching functions.</td></tr>",
          "",
          "[Added Lines]",
          "549: <tr><td>funcs</td><td>funcs(arg:string|regexp|object=void):array|object </td><td>Return details or list of matching functions.</td></tr>",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "607: <tr><td>info</td><td>info():object </td><td>Returns internal statistics about interp.</td></tr>",
          "608: <tr><td>source</td><td>source(file:string, async:boolean=false) </td><td>Interpret file within sub-interp. When the 'async' option is used on a threaded interp, the script is queued as an Event.</td></tr>",
          "609: <tr><td>uplevel</td><td>uplevel(js:string, level:number=0) </td><td>Interpret code at the given stack level. The level argument is as returned by Info.level().  Not supported with threads.</td></tr>",
          "611: </table>",
          "",
          "[Removed Lines]",
          "610: <tr><td>value</td><td>value(var:string, level:number=0) </td><td>Lookup value of variable at stack level.</td></tr>",
          "",
          "[Added Lines]",
          "610: <tr><td>value</td><td>value(varName:string, level:number=0) </td><td>Lookup value of variable at stack level.</td></tr>",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "644: <tr><td>name</td><td><i>STRKEY</i></td><td>Optional text name for this interp.</td><td><i></i></td></tr>",
          "645: <tr><td>noAutoLoad</td><td><i>BOOL</i></td><td>Disable autoload.</td><td><i></i></td></tr>",
          "646: <tr><td>noConfig</td><td><i>BOOL</i></td><td>Disable use of Interp.conf to change options after create.</td><td><i>initOnly</i></td></tr>",
          "647: <tr><td>noInput</td><td><i>BOOL</i></td><td>Disable use of console.input().</td><td><i></i></td></tr>",
          "648: <tr><td>noLoad</td><td><i>BOOL</i></td><td>Disable load of shared libs.</td><td><i></i></td></tr>",
          "649: <tr><td>noNetwork</td><td><i>BOOL</i></td><td>Disable new Socket/WebSocket, or load of builtin MySql.</td><td><i></i></td></tr>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "647: <tr><td>noEval</td><td><i>BOOL</i></td><td>Disable eval: just parses file to check syntax.</td><td><i>initOnly</i></td></tr>",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1507: <tr><td>getenv</td><td>getenv(name:string=void):string|object|void </td><td>Get one or all environment.</td></tr>",
          "1508: <tr><td>getpid</td><td>getpid(parent:boolean=false):number </td><td>Get process/parent id.</td></tr>",
          "1509: <tr><td>getuser</td><td>getuser():object </td><td>Get userid info.</td></tr>",
          "1511: <tr><td>hexStr</td><td>hexStr(val:string, decode:boolean=false):string </td><td>Hex encode/decode a string.</td></tr>",
          "1512: <tr><td>setenv</td><td>setenv(name:string, value:string=void) </td><td>Set/get an environment var.</td></tr>",
          "1514: <tr><td>times</td><td>times(callback:function|boolean, count:number=1):number </td><td>Call function count times and return execution time in microseconds.</td></tr>",
          "1515: <tr><td>verConvert</td><td>verConvert(ver:string|number, zeroTrim:number=0):number|string|null </td><td>Convert a version to/from a string/number, or return null if not a version. For string output zeroTrim says how many trailing .0 to trim (0-2).</td></tr>",
          "1516: </table>",
          "",
          "[Removed Lines]",
          "1510: <tr><td>hash</td><td>hash(val:string, <a href='#Util.hashOptions'>options</a>|object=void):string </td><td>Return hash (default SHA256) of string/file.</td></tr>",
          "1513: <tr><td>sqlValues</td><td>sqlValues(name:string, var:object=void) </td><td>Get object values for SQL.</td></tr>",
          "",
          "[Added Lines]",
          "1511: <tr><td>hash</td><td>hash(val:string, <a href='#Util.hashOptions'>options</a>:object=void):string </td><td>Return hash (default SHA256) of string/file.</td></tr>",
          "1514: <tr><td>sqlValues</td><td>sqlValues(name:string, obj:object=void) </td><td>Get object values for SQL.</td></tr>",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1543: <h2>Methods for \"Vfs\"</h2>",
          "1544: <table border=\"1\"class=\"cmdstbl table\">",
          "1545: <tr><th>Method</th><th>Prototype</th><th>Description</th></tr>",
          "1547: <tr><td>exec</td><td>exec(cmd:string) </td><td>Safe mode exec for VFS support cmds eg. fossil info/ls/cat.</td></tr>",
          "1548: <tr><td>fileconf</td><td>fileconf(mount:string, path:string, <a href='#Vfs.fileconfOptions'>options</a>:string|object=void) </td><td>Configure file info which is same info as in fileList.</td></tr>",
          "1549: <tr><td>list</td><td>list():array </td><td>Return list of all vfs mounts.</td></tr>",
          "",
          "[Removed Lines]",
          "1546: <tr><td>conf</td><td>conf(mount:string, string|<a href='#Vfs.confOptions'>options</a>:object|string=void) </td><td>Configure mount.</td></tr>",
          "",
          "[Added Lines]",
          "1547: <tr><td>conf</td><td>conf(mount:string, <a href='#Vfs.confOptions'>options</a>:string|object|string=void) </td><td>Configure mount.</td></tr>",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1802: <h2>Methods for \"Zvfs\"</h2>",
          "1803: <table border=\"1\"class=\"cmdstbl table\">",
          "1804: <tr><th>Method</th><th>Prototype</th><th>Description</th></tr>",
          "1807:    zvfs.create('foo.zip',['main.js', 'bar.js'], 'src', ['a.html', 'css/a.css'], 'html');</td></tr>",
          "1808: <tr><td>deflate</td><td>deflate(data:string):string </td><td>Compress string using zlib deflate.</td></tr>",
          "1809: <tr><td>inflate</td><td>inflate(data:string):string </td><td>Uncompress string using zlib inflate.</td></tr>",
          "",
          "[Removed Lines]",
          "1805: <tr><td>append</td><td>append(archive:string, filelist:array, path:string|null=void, filelist:array=void, path:string|null=void, ...):void </td><td>Like 'create()', but appends to an existing archive (with no dup checking).</td></tr>",
          "1806: <tr><td>create</td><td>create(archive:string, filelist:array, path:string|null=void, filelist:array=void, path:string|null=void, ...):void </td><td>Create a zip with the given files in prefix path. This command creates a zip archive and adds files to it. Files are relative the given 'path', or the current directory. If the destignation file already exist but is not an archive (eg. an executable), zip data is appended to the end of the file. If the existing file is already an archive, an error will be thrown. To truncate an existing archive, use zvfs.truncate(). Or use zvfs.append() instead.",
          "",
          "[Added Lines]",
          "1806: <tr><td>append</td><td>append(archive:string, filelist:array, path:string|null=void, filelist2:array=void, path2:string|null=void, ...):void </td><td>Like 'create()', but appends to an existing archive (with no dup checking).</td></tr>",
          "1807: <tr><td>create</td><td>create(archive:string, filelist:array, path:string|null=void, filelist2:array=void, path2:string|null=void, ...):void </td><td>Create a zip with the given files in prefix path. This command creates a zip archive and adds files to it. Files are relative the given 'path', or the current directory. If the destignation file already exist but is not an archive (eg. an executable), zip data is appended to the end of the file. If the existing file is already an archive, an error will be thrown. To truncate an existing archive, use zvfs.truncate(). Or use zvfs.append() instead.",
          "",
          "---------------"
        ]
      }
    }
  ]
}