{
  "cve_id": "CVE-2019-19926",
  "cve_desc": "multiSelect in select.c in SQLite 3.30.1 mishandles certain errors during parsing, as demonstrated by errors from sqlite3WindowRewrite() calls. NOTE: this vulnerability exists because of an incomplete fix for CVE-2019-19880.",
  "repo": "sqlite/sqlite",
  "patch_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
  "patch_info": {
    "commit_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/8428b3b437569338a9d1e10c4cd8154acbe33089",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c"
    ],
    "message": "Continuation of [e2bddcd4c55ba3cb]: Add another spot where it is necessary to abort early due to prior errors in sqlite3WindowRewrite().\n\nFossilOrigin-Name: cba2a2a44cdf138a629109bb0ad088ed4ef67fc66bed3e0373554681a39615d2",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 3d4c0bf8904135fa68c75801bfa738715cacc3b19dc8ad6ef550b11798d4b121",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2809:     }",
      "2810:   #endif",
      "2811:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2812:   if( pParse->nErr ) goto multi_select_end;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4b48c727219aab785d87ace3c44482779480922a",
      "candidate_info": {
        "commit_hash": "4b48c727219aab785d87ace3c44482779480922a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4b48c727219aab785d87ace3c44482779480922a",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a \"jump depends on unititialized value\" valgrind error in fts5 triggered by corrupt database records.\n\nFossilOrigin-Name: 6b6751cd90601a1e2744a7d233c973291ecb783801b9327c3b99734dd22bcd27",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "713: static Fts5Data *fts5LeafRead(Fts5Index *p, i64 iRowid){",
          "714:   Fts5Data *pRet = fts5DataRead(p, iRowid);",
          "715:   if( pRet ){",
          "717:       p->rc = FTS5_CORRUPT;",
          "718:       fts5DataRelease(pRet);",
          "719:       pRet = 0;",
          "",
          "[Removed Lines]",
          "716:     if( pRet->szLeaf>pRet->nn ){",
          "",
          "[Added Lines]",
          "716:     if( pRet->nn<4 || pRet->szLeaf>pRet->nn ){",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "9693:   SELECT ( MATCH (t1,591)) FROM t1 WHERE t1 MATCH 'e*e\u0178'",
          "9694: } {1 {database disk image is malformed}}",
          "9698: sqlite3_fts5_may_be_corrupt 0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9696: #-------------------------------------------------------------------------",
          "9697: #",
          "9698: reset_db",
          "9699: do_test 66.0 {",
          "9700:   sqlite3 db {}",
          "9701:   db deserialize [decode_hexdb {",
          "9702: .open --hexdb",
          "9703: | size 28672 pagesize 4096 filename crash-37cecb4e784e9f.db",
          "9704: | page 1 offset 0",
          "9705: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "9706: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 07   .....@  ........",
          "9707: |     96: 00 00 00 00 0d 00 00 00 07 0d d2 00 0f c4 0f 6d   ...............m",
          "9708: |    112: 0f 02 0e ab 0e 4e 0d f6 0d d2 00 00 00 00 00 00   .....N..........",
          "9709: |   3536: 00 00 22 07 06 17 11 11 01 31 74 61 62 6c 65 74   .........1tablet",
          "9710: |   3552: 32 74 32 07 43 52 45 41 54 45 20 54 41 42 4c 45   2t2.CREATE TABLE",
          "9711: |   3568: 20 74 32 28 78 29 56 06 06 17 1f 1f 01 7d 74 61    t2(x)V.......ta",
          "9712: |   3584: 62 6c 65 74 31 5f 63 6f 6e 66 69 67 74 31 5f 63   blet1_configt1_c",
          "9713: |   3600: 6f 6e 66 69 67 06 43 52 45 41 54 45 20 54 41 42   onfig.CREATE TAB",
          "9714: |   3616: 4c 45 20 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b   LE 't1_config'(k",
          "9715: |   3632: 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29    PRIMARY KEY, v)",
          "9716: |   3648: 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5b 05    WITHOUT ROWID[.",
          "9717: |   3664: 07 17 21 21 01 81 01 74 61 62 6c 65 74 31 5f 64   ..!!...tablet1_d",
          "9718: |   3680: 6f 63 73 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65   ocsizet1_docsize",
          "9719: |   3696: 05 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74   .CREATE TABLE 't",
          "9720: |   3712: 31 5f 64 6f 63 73 69 7a 65 27 28 69 64 20 49 4e   1_docsize'(id IN",
          "9721: |   3728: 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45   TEGER PRIMARY KE",
          "9722: |   3744: 59 2c 20 73 7a 20 42 4c 4f 42 29 55 04 06 17 21   Y, sz BLOB)U...!",
          "9723: |   3760: 21 01 77 74 61 62 6c 65 74 31 5f 63 6f 6e 74 65   !.wtablet1_conte",
          "9724: |   3776: 6e 74 74 31 5f 63 6f 6e 74 65 6e 74 04 43 52 45   ntt1_content.CRE",
          "9725: |   3792: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63 6f   ATE TABLE 't1_co",
          "9726: |   3808: 6e 74 65 6e 74 27 28 69 64 20 49 4e 54 45 47 45   ntent'(id INTEGE",
          "9727: |   3824: 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 63   R PRIMARY KEY, c",
          "9728: |   3840: 30 29 69 03 07 17 19 19 01 81 2d 74 61 62 6c 65   0)i.......-table",
          "9729: |   3856: 74 31 5f 69 64 78 74 31 5f 69 64 78 03 43 52 45   t1_idxt1_idx.CRE",
          "9730: |   3872: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 69 64   ATE TABLE 't1_id",
          "9731: |   3888: 78 27 28 73 65 67 69 64 2c 20 74 65 72 6d 2c 20   x'(segid, term,",
          "9732: |   3904: 70 67 6e 6f 2c 20 50 52 49 4d 41 52 59 20 4b 45   pgno, PRIMARY KE",
          "9733: |   3920: 59 28 73 65 67 69 64 2c 20 74 65 72 6d 29 29 20   Y(segid, term))",
          "9734: |   3936: 57 49 54 48 4f 55 54 20 52 4f 57 49 44 55 02 07   WITHOUT ROWIDU..",
          "9735: |   3952: 17 1b 1b 01 81 01 74 61 62 6c 65 74 31 5f 64 61   ......tablet1_da",
          "9736: |   3968: 74 61 74 31 5f 64 61 74 61 02 43 52 45 41 54 45   tat1_data.CREATE",
          "9737: |   3984: 20 54 41 42 4c 45 20 27 74 31 5f 64 61 74 61 27    TABLE 't1_data'",
          "9738: |   4000: 28 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   (id INTEGER PRIM",
          "9739: |   4016: 41 52 49 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42   ARI KEY, block B",
          "9740: |   4032: 4c 4f 42 29 3a 01 06 17 11 11 08 63 74 61 62 6c   LOB):......ctabl",
          "9741: |   4048: 65 74 31 74 31 43 52 45 41 54 45 20 56 49 52 54   et1t1CREATE VIRT",
          "9742: |   4064: 55 41 4c 20 54 41 42 4c 45 20 74 31 20 55 53 49   UAL TABLE t1 USI",
          "9743: |   4080: 4e 47 20 66 74 73 35 28 63 6f 6e 74 65 6e 74 29   NG fts5(content)",
          "9744: | page 2 offset 4096",
          "9745: |      0: 0d 00 00 00 03 0f bd 00 0f e8 0f ef 0f bd 00 01   ................",
          "9746: |   4016: 00 00 00 00 00 00 00 00 00 00 00 00 00 24 84 80   .............$..",
          "9747: |   4032: 80 80 80 01 03 00 4e 00 00 00 1e 06 30 61 62 61   ......N.....0aba",
          "9748: |   4048: 63 6b 01 02 02 04 02 66 74 02 02 02 04 04 6e 64   ck.....ft.....nd",
          "9749: |   4064: 6f 6e 03 02 02 04 0a 07 05 01 03 00 10 03 03 0f   on..............",
          "9750: |   4080: 0a 03 00 24 00 00 00 00 01 01 01 00 01 00 01 01   ...$............",
          "9751: | page 3 offset 8192",
          "9752: |      0: 0a 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "9753: |   4080: 00 00 00 00 00 00 00 00 00 00 05 04 09 0c 01 02   ................",
          "9754: | page 4 offset 12288",
          "9755: |      0: 0d 00 00 00 03 0f e0 00 0f f6 0f ec 0f e0 00 00   ................",
          "9756: |   4064: 0a 03 03 00 1b 61 62 61 6e 64 6f 6e 08 02 03 00   .....abandon....",
          "9757: |   4080: 17 61 62 61 66 74 08 01 03 00 17 61 62 61 63 6b   .abaft.....aback",
          "9758: | page 5 offset 16384",
          "9759: |      0: 0d 00 00 00 03 0f ee 00 0f fa 0f f4 0f ee 00 00   ................",
          "9760: |   4064: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 03   ................",
          "9761: |   4080: 03 00 0e 01 04 02 03 00 0e 01 04 01 03 00 0e 01   ................",
          "9762: | page 6 offset 20480",
          "9763: |      0: 0a 00 00 01 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "9764: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "9765: | page 7 offset 24576",
          "9766: |      0: 0d 00 00 00 03 0f d6 00 0f f4 0f e1 0f d6 00 00   ................",
          "9767: |   4048: 00 00 00 00 00 00 09 01 52 1b 72 65 62 75 69 6c   ........R.rebuil",
          "9768: |   4064: 64 11 02 02 2b 69 6e 74 65 67 72 69 74 79 2d 63   d...+integrity-c",
          "9769: |   4080: 68 65 63 6b 0a 01 02 1d 6f 70 74 69 6d 69 7a 65   heck....optimize",
          "9770: | end crash-37cecb4e784e9f.db",
          "9771: }]} {}",
          "9773: do_catchsql_test 66.1 {",
          "9774:   INSERT INTO t1(t1) VALUES('integrity-check');",
          "9775: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: d49047c1b59bbfd05204af9973cdb0fab51b4d2661b550aec10d917fff94dc9b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4245e0456d8387d867a73ab3d986aabcf3725ff2",
      "candidate_info": {
        "commit_hash": "4245e0456d8387d867a73ab3d986aabcf3725ff2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4245e0456d8387d867a73ab3d986aabcf3725ff2",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in",
          "test/altertab3.test"
        ],
        "message": "Fix a minor error in a test script, and harmless compiler warnings in the CLI code.\n\nFossilOrigin-Name: eaa34626e497d3af132dd8f13eddbbda89365d369ed43212a5f788175b3d6198",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in",
          "test/altertab3.test||test/altertab3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ebb81dad1f43dac4636cd44d4055d1d4b198c675f73e23c5a2d8d992ae27fe1f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "6562:     char *z = azArg[i];",
          "6563:     int n;",
          "6564:     if( z[0]=='-' && z[1]=='-' ) z++;",
          "6566:     if( n<=17 && memcmp(\"-freelist-corrupt\", z, n)==0 ){",
          "6567:       bFreelist = 0;",
          "6568:     }else",
          "",
          "[Removed Lines]",
          "6565:     n = strlen(z);",
          "",
          "[Added Lines]",
          "6565:     n = strlen30(z);",
          "",
          "---------------"
        ],
        "test/altertab3.test||test/altertab3.test": [
          "File: test/altertab3.test -> test/altertab3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "204:   db2 eval { INSERT INTO t2 VALUES (1), (2), (3) }",
          "205:   db close",
          "206: } {}",
          "208: #-------------------------------------------------------------------------",
          "209: reset_db",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "207: db2 close",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eb80863cbf3709ade2c0d309935610adc413227b",
      "candidate_info": {
        "commit_hash": "eb80863cbf3709ade2c0d309935610adc413227b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/eb80863cbf3709ade2c0d309935610adc413227b",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/e_vacuum.test"
        ],
        "message": "Fix an incorrect comment on a test case for rowid renumbering in VACUUM.\n\nFossilOrigin-Name: 0d293fb43f2eb64026ac1e0422f54d4839b101898cc9913fc7746760c08ed41f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/e_vacuum.test||test/e_vacuum.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 13a0ea6466b051ea5281865ed5285b8b5a99ec4307f400c5f7b03692723f1cd1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/e_vacuum.test||test/e_vacuum.test": [
          "File: test/e_vacuum.test -> test/e_vacuum.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "266:   DETACH aux1;",
          "267: } {1 x 3 z}",
          "270: # has indexes.",
          "271: do_execsql_test e_vacuum-3.1.7 {",
          "272:   DROP TABLE t5;",
          "",
          "[Removed Lines]",
          "269: # Rowids are renumbered even if the table being vacuumed",
          "",
          "[Added Lines]",
          "269: # Rowids are not renumbered if the table being vacuumed",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "83c5bb997a496d00f50b63a9af8feccb33a2b138",
      "candidate_info": {
        "commit_hash": "83c5bb997a496d00f50b63a9af8feccb33a2b138",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/83c5bb997a496d00f50b63a9af8feccb33a2b138",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c"
        ],
        "message": "Mark rowid-comparison opcodes as never-null for VDBE coverage tracking purposes.\n\nFossilOrigin-Name: a69bb4f257500e40ef4056d5628ef25266def5bcef07eebdb471a79fffe80237",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f56d305a7bad6608d51d8c8cef417ddb66cff50f0a75d28554ea669e47f3d90d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1578:   if( pMWin->eExclude==TK_CURRENT ){",
          "1579:     sqlite3VdbeAddOp3(v, OP_Eq, regCRowid, lblNext, regRowid);",
          "1581:   }else if( pMWin->eExclude!=TK_NO ){",
          "1582:     int addr;",
          "1583:     int addrEq = 0;",
          "",
          "[Removed Lines]",
          "1580:     VdbeCoverage(v);",
          "",
          "[Added Lines]",
          "1580:     VdbeCoverageNeverNull(v);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1588:     }",
          "1589:     if( pMWin->eExclude==TK_TIES ){",
          "1590:       addrEq = sqlite3VdbeAddOp3(v, OP_Eq, regCRowid, 0, regRowid);",
          "1592:     }",
          "1593:     if( pKeyInfo ){",
          "1594:       windowReadPeerValues(p, csr, regPeer);",
          "",
          "[Removed Lines]",
          "1591:       VdbeCoverage(v);",
          "",
          "[Added Lines]",
          "1591:       VdbeCoverageNeverNull(v);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2526:   sqlite3VdbeAddOp2(v, OP_NewRowid, csrWrite, regRowid);",
          "2527:   sqlite3VdbeAddOp3(v, OP_Insert, csrWrite, regRecord, regRowid);",
          "2528:   addrNe = sqlite3VdbeAddOp3(v, OP_Ne, pMWin->regOne, 0, regRowid);",
          "2532:   s.regArg = windowInitAccum(pParse, pMWin);",
          "",
          "[Removed Lines]",
          "2529:   VdbeCoverage(v);",
          "",
          "[Added Lines]",
          "2529:   VdbeCoverageNeverNull(v);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8cf92890f28ace3c510c448b5be6de2ca96016c2",
      "candidate_info": {
        "commit_hash": "8cf92890f28ace3c510c448b5be6de2ca96016c2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8cf92890f28ace3c510c448b5be6de2ca96016c2",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbeapi.c"
        ],
        "message": "Avoid the use of function pointers in columnName(), as function pointers appear to be a source of consternation to LLVM.\n\nFossilOrigin-Name: c48f6f39c5f89a338fed7153553a27a5d882d4d8db8221e911b96e0dd57c53d9",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbeapi.c||src/vdbeapi.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 0c5db18d79366d9c23925ce3ed835500311f32a10aa7dbfdd09148b1e8a2507b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbeapi.c||src/vdbeapi.c": [
          "File: src/vdbeapi.c -> src/vdbeapi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1122: static const void *columnName(",
          "1127: ){",
          "1128:   const void *ret;",
          "1129:   Vdbe *p;",
          "",
          "[Removed Lines]",
          "1123:   sqlite3_stmt *pStmt,",
          "1124:   int N,",
          "1125:   const void *(*xFunc)(Mem*),",
          "1126:   int useType",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1144:     N += useType*n;",
          "1145:     sqlite3_mutex_enter(db->mutex);",
          "1146:     assert( db->mallocFailed==0 );",
          "1151:     if( db->mallocFailed ){",
          "",
          "[Removed Lines]",
          "1147:     ret = xFunc(&p->aColName[N]);",
          "",
          "[Added Lines]",
          "1147:     if( useUtf16 ){",
          "1148:       ret = sqlite3_value_text16((sqlite3_value*)&p->aColName[N]);",
          "1149:     }else{",
          "1150:       ret = sqlite3_value_text((sqlite3_value*)&p->aColName[N]);",
          "1151:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1164: const char *sqlite3_column_name(sqlite3_stmt *pStmt, int N){",
          "1167: }",
          "1168: #ifndef SQLITE_OMIT_UTF16",
          "1169: const void *sqlite3_column_name16(sqlite3_stmt *pStmt, int N){",
          "1172: }",
          "1173: #endif",
          "",
          "[Removed Lines]",
          "1165:   return columnName(",
          "1166:       pStmt, N, (const void*(*)(Mem*))sqlite3_value_text, COLNAME_NAME);",
          "1170:   return columnName(",
          "1171:       pStmt, N, (const void*(*)(Mem*))sqlite3_value_text16, COLNAME_NAME);",
          "",
          "[Added Lines]",
          "1169:   return columnName(pStmt, N, 0, COLNAME_NAME);",
          "1173:   return columnName(pStmt, N, 1, COLNAME_NAME);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1189: const char *sqlite3_column_decltype(sqlite3_stmt *pStmt, int N){",
          "1192: }",
          "1193: #ifndef SQLITE_OMIT_UTF16",
          "1194: const void *sqlite3_column_decltype16(sqlite3_stmt *pStmt, int N){",
          "1197: }",
          "",
          "[Removed Lines]",
          "1190:   return columnName(",
          "1191:       pStmt, N, (const void*(*)(Mem*))sqlite3_value_text, COLNAME_DECLTYPE);",
          "1195:   return columnName(",
          "1196:       pStmt, N, (const void*(*)(Mem*))sqlite3_value_text16, COLNAME_DECLTYPE);",
          "",
          "[Added Lines]",
          "1192:   return columnName(pStmt, N, 0, COLNAME_DECLTYPE);",
          "1196:   return columnName(pStmt, N, 1, COLNAME_DECLTYPE);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1207: const char *sqlite3_column_database_name(sqlite3_stmt *pStmt, int N){",
          "1210: }",
          "1211: #ifndef SQLITE_OMIT_UTF16",
          "1212: const void *sqlite3_column_database_name16(sqlite3_stmt *pStmt, int N){",
          "1215: }",
          "",
          "[Removed Lines]",
          "1208:   return columnName(",
          "1209:       pStmt, N, (const void*(*)(Mem*))sqlite3_value_text, COLNAME_DATABASE);",
          "1213:   return columnName(",
          "1214:       pStmt, N, (const void*(*)(Mem*))sqlite3_value_text16, COLNAME_DATABASE);",
          "",
          "[Added Lines]",
          "1208:   return columnName(pStmt, N, 0, COLNAME_DATABASE);",
          "1212:   return columnName(pStmt, N, 1, COLNAME_DATABASE);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1223: const char *sqlite3_column_table_name(sqlite3_stmt *pStmt, int N){",
          "1226: }",
          "1227: #ifndef SQLITE_OMIT_UTF16",
          "1228: const void *sqlite3_column_table_name16(sqlite3_stmt *pStmt, int N){",
          "1231: }",
          "",
          "[Removed Lines]",
          "1224:   return columnName(",
          "1225:       pStmt, N, (const void*(*)(Mem*))sqlite3_value_text, COLNAME_TABLE);",
          "1229:   return columnName(",
          "1230:       pStmt, N, (const void*(*)(Mem*))sqlite3_value_text16, COLNAME_TABLE);",
          "",
          "[Added Lines]",
          "1222:   return columnName(pStmt, N, 0, COLNAME_TABLE);",
          "1226:   return columnName(pStmt, N, 1, COLNAME_TABLE);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1239: const char *sqlite3_column_origin_name(sqlite3_stmt *pStmt, int N){",
          "1242: }",
          "1243: #ifndef SQLITE_OMIT_UTF16",
          "1244: const void *sqlite3_column_origin_name16(sqlite3_stmt *pStmt, int N){",
          "1247: }",
          "",
          "[Removed Lines]",
          "1240:   return columnName(",
          "1241:       pStmt, N, (const void*(*)(Mem*))sqlite3_value_text, COLNAME_COLUMN);",
          "1245:   return columnName(",
          "1246:       pStmt, N, (const void*(*)(Mem*))sqlite3_value_text16, COLNAME_COLUMN);",
          "",
          "[Added Lines]",
          "1236:   return columnName(pStmt, N, 0, COLNAME_COLUMN);",
          "1240:   return columnName(pStmt, N, 1, COLNAME_COLUMN);",
          "",
          "---------------"
        ]
      }
    }
  ]
}