{
  "cve_id": "CVE-2021-32791",
  "cve_desc": "mod_auth_openidc is an authentication/authorization module for the Apache 2.x HTTP server that functions as an OpenID Connect Relying Party, authenticating users against an OpenID Connect Provider. In mod_auth_openidc before version 2.4.9, the AES GCM encryption in mod_auth_openidc uses a static IV and AAD. It is important to fix because this creates a static nonce and since aes-gcm is a stream cipher, this can lead to known cryptographic issues, since the same key is being reused. From 2.4.9 onwards this has been patched to use dynamic values through usage of cjose AES encryption routines.",
  "repo": "zmartzone/mod_auth_openidc",
  "patch_hash": "375407c16c61a70b56fdbe13b0d2c8f11398e92c",
  "patch_info": {
    "commit_hash": "375407c16c61a70b56fdbe13b0d2c8f11398e92c",
    "repo": "zmartzone/mod_auth_openidc",
    "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/375407c16c61a70b56fdbe13b0d2c8f11398e92c",
    "files": [
      ".gitignore",
      "ChangeLog",
      "Dockerfile",
      "configure.ac",
      "openidc.conf",
      "src/cache/common.c",
      "test/mod_auth_openidc.jmx"
    ],
    "message": "use encrypted JWTs for storing encrypted cache contents\n\n- avoid using static AAD/IV; thanks @niebardzo\n- bump to 2.4.9-dev\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
    "before_after_code_files": [
      "configure.ac||configure.ac",
      "openidc.conf||openidc.conf",
      "src/cache/common.c||src/cache/common.c",
      "test/mod_auth_openidc.jmx||test/mod_auth_openidc.jmx"
    ]
  },
  "patch_diff": {
    "configure.ac||configure.ac": [
      "File: configure.ac -> configure.ac",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
      "",
      "[Removed Lines]",
      "1: AC_INIT([mod_auth_openidc],[2.4.8.4],[hans.zandbelt@zmartzone.eu])",
      "",
      "[Added Lines]",
      "1: AC_INIT([mod_auth_openidc],[2.4.9-dev],[hans.zandbelt@zmartzone.eu])",
      "",
      "---------------"
    ],
    "openidc.conf||openidc.conf": [
      "File: openidc.conf -> openidc.conf",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: OIDCInfoHook iat access_token access_token_expires id_token userinfo refresh_token session",
      "27: <Location /protected>",
      "28:   AuthType openid-connect",
      "29:   Require valid-user",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "27: OIDCScope \"openid email profile\"",
      "",
      "---------------"
    ],
    "src/cache/common.c||src/cache/common.c": [
      "File: src/cache/common.c -> src/cache/common.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "244:  return rv;",
      "245: }",
      "477: }",
      "553: }",
      "560:  char *input = apr_psprintf(r->pool, \"%s:%s\", passphrase, key);",
      "561:  char *output = NULL;",
      "566:   return NULL;",
      "567:  }",
      "568:  return output;",
      "",
      "[Removed Lines]",
      "247: #define oidc_cache_crypto_openssl_error(r, fmt, ...) \\",
      "248:   oidc_error(r, \"%s: %s\", apr_psprintf(r->pool, fmt, ##__VA_ARGS__), ERR_error_string(ERR_get_error(), NULL))",
      "250: #define OIDC_CACHE_CIPHER       EVP_aes_256_gcm()",
      "251: #define OIDC_CACHE_TAG_LEN       16",
      "253: #if (OPENSSL_VERSION_NUMBER >= 0x10100005L && !defined(LIBRESSL_VERSION_NUMBER))",
      "254: #define OIDC_CACHE_CRYPTO_GET_TAG     EVP_CTRL_AEAD_GET_TAG",
      "255: #define OIDC_CACHE_CRYPTO_SET_TAG     EVP_CTRL_AEAD_SET_TAG",
      "256: #define OIDC_CACHE_CRYPTO_SET_IVLEN     EVP_CTRL_AEAD_SET_IVLEN",
      "257: #else",
      "258: #define OIDC_CACHE_CRYPTO_GET_TAG     EVP_CTRL_GCM_GET_TAG",
      "259: #define OIDC_CACHE_CRYPTO_SET_TAG     EVP_CTRL_GCM_SET_TAG",
      "260: #define OIDC_CACHE_CRYPTO_SET_IVLEN     EVP_CTRL_GCM_SET_IVLEN",
      "261: #endif",
      "266: static int oidc_cache_crypto_encrypt_impl(request_rec *r,",
      "267:   unsigned char *plaintext, int plaintext_len, const unsigned char *aad,",
      "268:   int aad_len, unsigned char *key, const unsigned char *iv, int iv_len,",
      "269:   unsigned char *ciphertext, const unsigned char *tag, int tag_len) {",
      "270:  EVP_CIPHER_CTX *ctx;",
      "272:  int len;",
      "274:  int ciphertext_len;",
      "277:  if (!(ctx = EVP_CIPHER_CTX_new())) {",
      "278:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_new\");",
      "279:   return -1;",
      "280:  }",
      "283:  if (!EVP_EncryptInit_ex(ctx, OIDC_CACHE_CIPHER, NULL, NULL, NULL)) {",
      "284:   oidc_cache_crypto_openssl_error(r, \"EVP_EncryptInit_ex\");",
      "285:   return -1;",
      "286:  }",
      "289:  if (!EVP_CIPHER_CTX_ctrl(ctx, OIDC_CACHE_CRYPTO_SET_IVLEN, iv_len, NULL)) {",
      "290:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_ctrl\");",
      "291:   return -1;",
      "292:  }",
      "295:  if (!EVP_EncryptInit_ex(ctx, NULL, NULL, key, iv)) {",
      "296:   oidc_cache_crypto_openssl_error(r, \"EVP_EncryptInit_ex\");",
      "297:   return -1;",
      "298:  }",
      "301:  if (!EVP_EncryptUpdate(ctx, NULL, &len, aad, aad_len)) {",
      "302:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptUpdate aad: aad_len=%d\",",
      "303:     aad_len);",
      "304:   return -1;",
      "305:  }",
      "308:  if (!EVP_EncryptUpdate(ctx, ciphertext, &len, plaintext, plaintext_len)) {",
      "309:   oidc_cache_crypto_openssl_error(r, \"EVP_EncryptUpdate ciphertext\");",
      "310:   return -1;",
      "311:  }",
      "312:  ciphertext_len = len;",
      "318:  if (!EVP_EncryptFinal_ex(ctx, ciphertext + len, &len)) {",
      "319:   oidc_cache_crypto_openssl_error(r, \"EVP_EncryptFinal_ex\");",
      "320:   return -1;",
      "321:  }",
      "322:  ciphertext_len += len;",
      "325:  if (!EVP_CIPHER_CTX_ctrl(ctx, OIDC_CACHE_CRYPTO_GET_TAG, tag_len,",
      "326:    (void *) tag)) {",
      "327:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_ctrl\");",
      "328:   return -1;",
      "329:  }",
      "332:  EVP_CIPHER_CTX_free(ctx);",
      "334:  return ciphertext_len;",
      "335: }",
      "340: static int oidc_cache_crypto_decrypt_impl(request_rec *r,",
      "341:   unsigned char *ciphertext, int ciphertext_len, const unsigned char *aad,",
      "342:   int aad_len, const unsigned char *tag, int tag_len, unsigned char *key,",
      "343:   const unsigned char *iv, int iv_len, unsigned char *plaintext) {",
      "344:  EVP_CIPHER_CTX *ctx;",
      "345:  int len;",
      "346:  int plaintext_len;",
      "347:  int ret;",
      "350:  if (!(ctx = EVP_CIPHER_CTX_new())) {",
      "351:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_new\");",
      "352:   return -1;",
      "353:  }",
      "356:  if (!EVP_DecryptInit_ex(ctx, OIDC_CACHE_CIPHER, NULL, NULL, NULL)) {",
      "357:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptInit_ex\");",
      "358:   return -1;",
      "359:  }",
      "362:  if (!EVP_CIPHER_CTX_ctrl(ctx, OIDC_CACHE_CRYPTO_SET_IVLEN, iv_len, NULL)) {",
      "363:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_ctrl\");",
      "364:   return -1;",
      "365:  }",
      "368:  if (!EVP_DecryptInit_ex(ctx, NULL, NULL, key, iv)) {",
      "369:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptInit_ex\");",
      "370:   return -1;",
      "371:  }",
      "374:  if (!EVP_DecryptUpdate(ctx, NULL, &len, aad, aad_len)) {",
      "375:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptUpdate aad: aad_len=%d\",",
      "376:     aad_len);",
      "377:   return -1;",
      "378:  }",
      "381:  if (!EVP_DecryptUpdate(ctx, plaintext, &len, ciphertext, ciphertext_len)) {",
      "382:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptUpdate ciphertext\");",
      "383:   return -1;",
      "384:  }",
      "385:  plaintext_len = len;",
      "388:  if (!EVP_CIPHER_CTX_ctrl(ctx, OIDC_CACHE_CRYPTO_SET_TAG, tag_len,",
      "389:    (void *) tag)) {",
      "390:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_ctrl\");",
      "391:   return -1;",
      "392:  }",
      "398:  ret = EVP_DecryptFinal_ex(ctx, plaintext + len, &len);",
      "401:  EVP_CIPHER_CTX_free(ctx);",
      "403:  if (ret > 0) {",
      "405:   plaintext_len += len;",
      "406:   return plaintext_len;",
      "407:  } else {",
      "409:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptFinal_ex\");",
      "410:   return -1;",
      "411:  }",
      "412: }",
      "417: static const unsigned char OIDC_CACHE_CRYPTO_GCM_AAD[] = { 0x4d, 0x23, 0xc3,",
      "418:   0xce, 0xc3, 0x34, 0xb4, 0x9b, 0xdb, 0x37, 0x0c, 0x43, 0x7f, 0xec, 0x78,",
      "419:   0xde };",
      "424: static const unsigned char OIDC_CACHE_CRYPTO_GCM_IV[] = { 0x00, 0x01, 0x02,",
      "425:   0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e,",
      "426:   0x0f };",
      "431: static int oidc_cache_crypto_encrypt(request_rec *r, const char *plaintext,",
      "432:   unsigned char *key, char **result) {",
      "433:  char *encoded = NULL, *p = NULL, *e_tag = NULL;",
      "434:  unsigned char *ciphertext = NULL;",
      "435:  int plaintext_len, ciphertext_len, encoded_len, e_tag_len;",
      "436:  unsigned char tag[OIDC_CACHE_TAG_LEN];",
      "439:  plaintext_len = strlen(plaintext) + 1;",
      "440:  ciphertext = apr_pcalloc(r->pool,",
      "441:    (plaintext_len + EVP_CIPHER_block_size(OIDC_CACHE_CIPHER)));",
      "443:  ciphertext_len = oidc_cache_crypto_encrypt_impl(r,",
      "444:    (unsigned char *) plaintext, plaintext_len,",
      "445:    OIDC_CACHE_CRYPTO_GCM_AAD, sizeof(OIDC_CACHE_CRYPTO_GCM_AAD), key,",
      "446:    OIDC_CACHE_CRYPTO_GCM_IV, sizeof(OIDC_CACHE_CRYPTO_GCM_IV),",
      "447:    ciphertext, tag, sizeof(tag));",
      "450:  encoded_len = oidc_base64url_encode(r, &encoded, (const char *) ciphertext,",
      "451:    ciphertext_len, 1);",
      "452:  if (encoded_len > 0) {",
      "453:   p = encoded;",
      "456:   e_tag_len = oidc_base64url_encode(r, &e_tag, (const char *) tag,",
      "457:     OIDC_CACHE_TAG_LEN, 1);",
      "460:   encoded = apr_pcalloc(r->pool, encoded_len + 1 + e_tag_len + 1);",
      "461:   memcpy(encoded, p, encoded_len);",
      "462:   p = encoded + encoded_len;",
      "464:   p++;",
      "467:   memcpy(p, e_tag, e_tag_len);",
      "468:   encoded_len += e_tag_len + 1;",
      "471:   encoded[encoded_len] = '\\0';",
      "474:  }",
      "476:  return encoded_len;",
      "482: static int oidc_cache_crypto_decrypt(request_rec *r, const char *cache_value,",
      "483:   unsigned char *key, unsigned char **plaintext) {",
      "485:  int len = -1;",
      "488:  char *encoded_tag = strstr(cache_value, \".\");",
      "489:  if (encoded_tag == NULL) {",
      "490:   oidc_error(r,",
      "491:     \"corrupted cache value: no tag separator found in encrypted value\");",
      "492:   return FALSE;",
      "493:  }",
      "496:  cache_value = apr_pstrmemdup(r->pool, cache_value,",
      "497:    strlen(cache_value) - strlen(encoded_tag));",
      "498:  encoded_tag++;",
      "501:  char *d_bytes = NULL;",
      "502:  int d_len = oidc_base64url_decode(r->pool, &d_bytes, cache_value);",
      "505:  char *t_bytes = NULL;",
      "506:  int t_len = oidc_base64url_decode(r->pool, &t_bytes, encoded_tag);",
      "509:  if ((d_len > 0) && (t_len > 0)) {",
      "513:     (d_len + EVP_CIPHER_block_size(OIDC_CACHE_CIPHER) - 1));",
      "517:   len = oidc_cache_crypto_decrypt_impl(r, (unsigned char *) d_bytes,",
      "518:     d_len, OIDC_CACHE_CRYPTO_GCM_AAD,",
      "519:     sizeof(OIDC_CACHE_CRYPTO_GCM_AAD), (unsigned char *) t_bytes,",
      "520:     t_len, key, OIDC_CACHE_CRYPTO_GCM_IV,",
      "521:     sizeof(OIDC_CACHE_CRYPTO_GCM_IV), *plaintext);",
      "524:   if (len > -1) {",
      "525:    (*plaintext)[len] = '\\0';",
      "526:   } else {",
      "528:   }",
      "530:  }",
      "532:  return len;",
      "533: }",
      "538: static unsigned char *oidc_cache_hash_passphrase(request_rec *r,",
      "539:   const char *passphrase) {",
      "541:  unsigned char *key = NULL;",
      "542:  unsigned int key_len = 0;",
      "543:  oidc_jose_error_t err;",
      "545:  if (oidc_jose_hash_bytes(r->pool, OIDC_JOSE_ALG_SHA256,",
      "546:    (const unsigned char *) passphrase, strlen(passphrase), &key,",
      "547:    &key_len, &err) == FALSE) {",
      "548:   oidc_error(r, \"oidc_jose_hash_bytes returned an error: %s\", err.text);",
      "549:   return NULL;",
      "550:  }",
      "552:  return key;",
      "558: static char *oidc_cache_get_hashed_key(request_rec *r, const char *passphrase,",
      "559:   const char *key) {",
      "562:  if (oidc_util_hash_string_and_base64url_encode(r, OIDC_JOSE_ALG_SHA256,",
      "563:    input, &output) == FALSE) {",
      "564:   oidc_error(r,",
      "565:     \"oidc_util_hash_string_and_base64url_encode returned an error\");",
      "",
      "[Added Lines]",
      "247: #define OIDC_CACHE_CRYPTO_JSON_KEY \"c\"",
      "252: static apr_byte_t oidc_cache_crypto_encrypt(request_rec *r, const char *plaintext, const char *key,",
      "253:   char **result) {",
      "254:  apr_byte_t rv = FALSE;",
      "255:  json_t *json = NULL;",
      "257:  json = json_object();",
      "258:  json_object_set_new(json, OIDC_CACHE_CRYPTO_JSON_KEY, json_string(plaintext));",
      "260:  rv = oidc_util_jwt_create(r, (const char*) key, json, result);",
      "262:  if (json)",
      "263:   json_decref(json);",
      "265:  return rv;",
      "271: static apr_byte_t oidc_cache_crypto_decrypt(request_rec *r, const char *cache_value,",
      "272:   const char *key, char **plaintext) {",
      "274:  apr_byte_t rv = FALSE;",
      "275:  json_t *json = NULL;",
      "277:  rv = oidc_util_jwt_verify(r, (const char*) key, cache_value, &json);",
      "278:  if (rv == FALSE)",
      "279:   goto end;",
      "281:  rv = oidc_json_object_get_string(r->pool, json, OIDC_CACHE_CRYPTO_JSON_KEY, plaintext, NULL);",
      "283:  end:",
      "285:  if (json)",
      "286:   json_decref(json);",
      "288:  return rv;",
      "294: static char* oidc_cache_get_hashed_key(request_rec *r, const char *passphrase, const char *key) {",
      "297:  if (oidc_util_hash_string_and_base64url_encode(r, OIDC_JOSE_ALG_SHA256, input, &output)",
      "298:    == FALSE) {",
      "299:   oidc_error(r, \"oidc_util_hash_string_and_base64url_encode returned an error\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "604:   goto out;",
      "605:  }",
      "611: out:",
      "",
      "[Removed Lines]",
      "607:  rc = (oidc_cache_crypto_decrypt(r, cache_value,",
      "608:    oidc_cache_hash_passphrase(r, cfg->crypto_passphrase),",
      "609:    (unsigned char **) value) > 0);",
      "",
      "[Added Lines]",
      "341:  rc = oidc_cache_crypto_decrypt(r, cache_value, cfg->crypto_passphrase, value);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "650:    goto out;",
      "652:   if (value != NULL) {",
      "656:     goto out;",
      "657:    value = encoded;",
      "658:   }",
      "",
      "[Removed Lines]",
      "653:    if (oidc_cache_crypto_encrypt(r, value,",
      "654:      oidc_cache_hash_passphrase(r, cfg->crypto_passphrase),",
      "655:      &encoded) <= 0)",
      "",
      "[Added Lines]",
      "385:    if (oidc_cache_crypto_encrypt(r, value, cfg->crypto_passphrase, &encoded) == FALSE)",
      "",
      "---------------"
    ],
    "test/mod_auth_openidc.jmx||test/mod_auth_openidc.jmx": [
      "File: test/mod_auth_openidc.jmx -> test/mod_auth_openidc.jmx",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: <?xml version=\"1.0\" encoding=\"UTF-8\"?>",
      "3:   <hashTree>",
      "4:     <TestPlan guiclass=\"TestPlanGui\" testclass=\"TestPlan\" testname=\"OpenID Connect Apache Module Test Plan\" enabled=\"true\">",
      "5:       <stringProp name=\"TestPlan.comments\"></stringProp>",
      "",
      "[Removed Lines]",
      "2: <jmeterTestPlan version=\"1.2\" properties=\"3.1\" jmeter=\"3.1.20170220\">",
      "",
      "[Added Lines]",
      "2: <jmeterTestPlan version=\"1.2\" properties=\"5.0\" jmeter=\"5.1.1.20190725\">",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "7:       <boolProp name=\"TestPlan.serialize_threadgroups\">false</boolProp>",
      "8:       <elementProp name=\"TestPlan.user_defined_variables\" elementType=\"Arguments\" guiclass=\"ArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">",
      "9:         <collectionProp name=\"Arguments.arguments\">",
      "12:             <stringProp name=\"Argument.value\">localhost.zmartzone.eu</stringProp>",
      "13:             <stringProp name=\"Argument.metadata\">=</stringProp>",
      "14:           </elementProp>",
      "",
      "[Removed Lines]",
      "10:           <elementProp name=\"X_APP_SERVER\" elementType=\"Argument\">",
      "11:             <stringProp name=\"Argument.name\">X_APP_SERVER</stringProp>",
      "",
      "[Added Lines]",
      "10:           <elementProp name=\"APP_SERVER\" elementType=\"Argument\">",
      "11:             <stringProp name=\"Argument.name\">APP_SERVER</stringProp>",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "57:           </elementProp>",
      "58:           <elementProp name=\"APP_PATH_ACCESS\" elementType=\"Argument\">",
      "59:             <stringProp name=\"Argument.name\">APP_PATH_ACCESS</stringProp>",
      "61:             <stringProp name=\"Argument.metadata\">=</stringProp>",
      "62:           </elementProp>",
      "63:         </collectionProp>",
      "",
      "[Removed Lines]",
      "60:             <stringProp name=\"Argument.value\">/protected/api/index.php</stringProp>",
      "",
      "[Added Lines]",
      "60:             <stringProp name=\"Argument.value\">/api/index.php</stringProp>",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "94:           </elementProp>",
      "95:           <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
      "96:           <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
      "99:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "100:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "101:           <stringProp name=\"HTTPSampler.path\">${APP_PATH_USER}</stringProp>",
      "",
      "[Removed Lines]",
      "97:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "98:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "104:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "105:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "106:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "109:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "110:         </HTTPSamplerProxy>",
      "111:         <hashTree>",
      "112:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab AuthorizationRequestPath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "107:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "108:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "106:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "107:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "108:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "125:           </elementProp>",
      "126:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "127:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "130:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "131:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "132:           <stringProp name=\"HTTPSampler.path\">/${AuthorizationRequestPath}</stringProp>",
      "",
      "[Removed Lines]",
      "128:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "129:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "135:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "136:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "137:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "140:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "141:         </HTTPSamplerProxy>",
      "142:         <hashTree>",
      "143:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab AuthzResumePath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "138:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "139:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "136:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "137:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "138:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "164:           </elementProp>",
      "165:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "166:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "169:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "170:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "171:           <stringProp name=\"HTTPSampler.path\">${AuthzResumePath}</stringProp>",
      "",
      "[Removed Lines]",
      "167:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "168:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "174:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "175:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "176:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "179:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "180:         </HTTPSamplerProxy>",
      "181:         <hashTree>",
      "182:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ResumeParam\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "177:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "178:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "174:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "175:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "176:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "226:           </elementProp>",
      "227:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "228:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "231:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "232:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "233:           <stringProp name=\"HTTPSampler.path\">/IdpSample/MainPage?cmd=login</stringProp>",
      "",
      "[Removed Lines]",
      "229:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "230:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "236:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "237:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "238:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "241:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "242:         </HTTPSamplerProxy>",
      "243:         <hashTree>",
      "244:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ResumePath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "239:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "240:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "235:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "236:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "237:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "257:           </elementProp>",
      "258:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "259:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "262:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "263:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "264:           <stringProp name=\"HTTPSampler.path\">${ResumePath}</stringProp>",
      "",
      "[Removed Lines]",
      "260:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "261:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "267:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "268:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "269:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "272:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "273:         </HTTPSamplerProxy>",
      "274:         <hashTree>",
      "275:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab RedirectURIPath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "270:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "271:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "265:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "266:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "267:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "321:           </elementProp>",
      "322:           <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
      "323:           <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
      "326:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "327:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "328:           <stringProp name=\"HTTPSampler.path\">/${RedirectURIPath}</stringProp>",
      "",
      "[Removed Lines]",
      "324:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "325:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "331:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "332:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "333:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "336:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "337:         </HTTPSamplerProxy>",
      "338:         <hashTree>",
      "339:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ApplicationPath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "334:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "335:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "328:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "329:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "330:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "367:           </elementProp>",
      "368:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "369:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "372:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "373:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "374:           <stringProp name=\"HTTPSampler.path\">${AuthzResumePath}</stringProp>",
      "",
      "[Removed Lines]",
      "370:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "371:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "377:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "378:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "379:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "382:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "383:         </HTTPSamplerProxy>",
      "384:         <hashTree>",
      "385:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab cSRFToken Parameter\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "380:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "381:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "373:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "374:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "375:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "441:           </elementProp>",
      "442:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "443:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "446:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "447:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "448:           <stringProp name=\"HTTPSampler.path\">${AuthzResumePath}</stringProp>",
      "",
      "[Removed Lines]",
      "444:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "445:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "451:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "452:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "453:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "456:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "457:         </HTTPSamplerProxy>",
      "458:         <hashTree>",
      "459:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab LocationPath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "454:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "455:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "446:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "447:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "448:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "472:           </elementProp>",
      "473:           <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
      "474:           <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
      "477:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "478:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "479:           <stringProp name=\"HTTPSampler.path\">/${LocationPath}</stringProp>",
      "",
      "[Removed Lines]",
      "475:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "476:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "482:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "483:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "484:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "487:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "488:         </HTTPSamplerProxy>",
      "489:         <hashTree>",
      "490:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ApplicationPath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "485:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "486:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "476:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "477:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "478:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "517:             </elementProp>",
      "518:             <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
      "519:             <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
      "522:             <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "523:             <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "524:             <stringProp name=\"HTTPSampler.path\">/${ApplicationPath}</stringProp>",
      "",
      "[Removed Lines]",
      "520:             <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "521:             <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "527:             <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "528:             <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "529:             <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "532:             <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "533:           </HTTPSamplerProxy>",
      "534:           <hashTree>",
      "535:             <ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Assert User Logged In\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "530:             <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "531:             <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "520:             <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "521:             <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "522:             <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "539:               <stringProp name=\"Assertion.test_field\">Assertion.response_data</stringProp>",
      "540:               <boolProp name=\"Assertion.assume_success\">false</boolProp>",
      "541:               <intProp name=\"Assertion.test_type\">2</intProp>",
      "542:             </ResponseAssertion>",
      "543:             <hashTree/>",
      "544:             <ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Assert Fake Header Removal\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "532:               <stringProp name=\"Assertion.custom_message\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "548:               <stringProp name=\"Assertion.test_field\">Assertion.response_data</stringProp>",
      "549:               <boolProp name=\"Assertion.assume_success\">false</boolProp>",
      "550:               <intProp name=\"Assertion.test_type\">6</intProp>",
      "551:             </ResponseAssertion>",
      "552:             <hashTree/>",
      "553:           </hashTree>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "542:               <stringProp name=\"Assertion.custom_message\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "567:           <stringProp name=\"shareMode\">shareMode.all</stringProp>",
      "568:           <boolProp name=\"stopThread\">false</boolProp>",
      "569:           <stringProp name=\"variableNames\">USERNAME,PASSWORD</stringProp>",
      "570:         </CSVDataSet>",
      "571:         <hashTree/>",
      "582:         <hashTree/>",
      "583:       </hashTree>",
      "584:       <ThreadGroup guiclass=\"ThreadGroupGui\" testclass=\"ThreadGroup\" testname=\"OAuth Resource Access\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "572:         <CSVDataSet guiclass=\"TestBeanGUI\" testclass=\"CSVDataSet\" testname=\"Hosts Data Set\" enabled=\"true\">",
      "573:           <stringProp name=\"filename\">hosts.txt</stringProp>",
      "574:           <stringProp name=\"fileEncoding\"></stringProp>",
      "575:           <stringProp name=\"variableNames\">APP_SERVER</stringProp>",
      "576:           <stringProp name=\"delimiter\">,</stringProp>",
      "577:           <boolProp name=\"quotedData\">false</boolProp>",
      "578:           <boolProp name=\"recycle\">true</boolProp>",
      "579:           <boolProp name=\"stopThread\">false</boolProp>",
      "580:           <stringProp name=\"shareMode\">shareMode.all</stringProp>",
      "581:         </CSVDataSet>",
      "",
      "[Added Lines]",
      "562:           <boolProp name=\"ignoreFirstLine\">false</boolProp>",
      "565:         <HeaderManager guiclass=\"HeaderPanel\" testclass=\"HeaderManager\" testname=\"HTTP Header Manager\" enabled=\"true\">",
      "566:           <collectionProp name=\"HeaderManager.headers\">",
      "567:             <elementProp name=\"\" elementType=\"Header\">",
      "568:               <stringProp name=\"Header.name\">Accept</stringProp>",
      "569:               <stringProp name=\"Header.value\">*/*</stringProp>",
      "570:             </elementProp>",
      "571:           </collectionProp>",
      "572:         </HeaderManager>",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "631:           </elementProp>",
      "632:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "633:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "636:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "637:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "638:           <stringProp name=\"HTTPSampler.path\">${AS_PATH_TOKEN}</stringProp>",
      "",
      "[Removed Lines]",
      "634:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "635:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "641:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "642:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "643:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "645:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "646:         </HTTPSamplerProxy>",
      "647:         <hashTree>",
      "648:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab AccessToken\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "644:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "634:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "635:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "661:               <stringProp name=\"Header.name\">Authorization</stringProp>",
      "662:               <stringProp name=\"Header.value\">bearer ${AccessToken}</stringProp>",
      "663:             </elementProp>",
      "664:           </collectionProp>",
      "665:         </HeaderManager>",
      "666:         <hashTree/>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "654:             <elementProp name=\"\" elementType=\"Header\">",
      "655:               <stringProp name=\"Header.name\">Accept</stringProp>",
      "656:               <stringProp name=\"Header.value\">application/json</stringProp>",
      "657:             </elementProp>",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "675:             </elementProp>",
      "676:             <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
      "677:             <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
      "680:             <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "681:             <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "682:             <stringProp name=\"HTTPSampler.path\">${APP_PATH_ACCESS}</stringProp>",
      "",
      "[Removed Lines]",
      "678:             <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "679:             <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "685:             <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "686:             <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "687:             <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "689:             <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "690:           </HTTPSamplerProxy>",
      "691:           <hashTree>",
      "692:             <ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Assert AS_USERNAME\" enabled=\"true\">",
      "693:               <collectionProp name=\"Asserion.test_strings\">",
      "694:                 <stringProp name=\"240033137\">\\[OIDC_CLAIM_Username\\] =&gt; ${AS_USERNAME}</stringProp>",
      "695:               </collectionProp>",
      "697:               <boolProp name=\"Assertion.assume_success\">false</boolProp>",
      "698:               <intProp name=\"Assertion.test_type\">2</intProp>",
      "699:             </ResponseAssertion>",
      "700:             <hashTree/>",
      "701:           </hashTree>",
      "702:         </hashTree>",
      "714:       </hashTree>",
      "715:       <ResultCollector guiclass=\"ViewResultsFullVisualizer\" testclass=\"ResultCollector\" testname=\"View Results Tree\" enabled=\"true\">",
      "716:         <boolProp name=\"ResultCollector.error_logging\">true</boolProp>",
      "",
      "[Removed Lines]",
      "688:             <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "696:               <stringProp name=\"Assertion.test_field\">Assertion.response_data_as_document</stringProp>",
      "703:         <CSVDataSet guiclass=\"TestBeanGUI\" testclass=\"CSVDataSet\" testname=\"Hosts Data Set\" enabled=\"true\">",
      "704:           <stringProp name=\"filename\">hosts.txt</stringProp>",
      "705:           <stringProp name=\"fileEncoding\"></stringProp>",
      "706:           <stringProp name=\"variableNames\">APP_SERVER</stringProp>",
      "707:           <stringProp name=\"delimiter\">,</stringProp>",
      "708:           <boolProp name=\"quotedData\">false</boolProp>",
      "709:           <boolProp name=\"recycle\">true</boolProp>",
      "710:           <boolProp name=\"stopThread\">false</boolProp>",
      "711:           <stringProp name=\"shareMode\">shareMode.all</stringProp>",
      "712:         </CSVDataSet>",
      "713:         <hashTree/>",
      "",
      "[Added Lines]",
      "681:             <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "682:             <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "689:               <stringProp name=\"Assertion.test_field\">Assertion.response_data</stringProp>",
      "692:               <stringProp name=\"Assertion.custom_message\"></stringProp>",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f5959d767b0eec4856d561cbaa6d2262a52da551",
      "candidate_info": {
        "commit_hash": "f5959d767b0eec4856d561cbaa6d2262a52da551",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/f5959d767b0eec4856d561cbaa6d2262a52da551",
        "files": [
          "ChangeLog",
          "configure.ac",
          "src/mod_auth_openidc.c"
        ],
        "message": "avoid appending 401 HTML document text on step-up authentication\n\n- applies to Apache 2.4 HTML refresh with an authorization request\n- closes #484\n- bump to 2.4.5rc0\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/mod_auth_openidc.c||src/mod_auth_openidc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.4.1],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.5rc0],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/mod_auth_openidc.c||src/mod_auth_openidc.c": [
          "File: src/mod_auth_openidc.c -> src/mod_auth_openidc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4097:     location);",
          "4098:   oidc_util_html_send(r, \"Stepup Authentication\", html_head, NULL, NULL,",
          "4099:     HTTP_UNAUTHORIZED);",
          "4100:  }",
          "4102:  return AUTHZ_DENIED;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4104:   r->header_only = 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5d01f0b5a3e58a731adcea580d65a4e3ac9cfb49",
      "candidate_info": {
        "commit_hash": "5d01f0b5a3e58a731adcea580d65a4e3ac9cfb49",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/5d01f0b5a3e58a731adcea580d65a4e3ac9cfb49",
        "files": [
          "ChangeLog",
          "configure.ac",
          "src/cache/common.c",
          "src/proto.c",
          "src/session.c"
        ],
        "message": "don't strip the header from encrypted JWTs\n\nas future versions of cjose may use compact encoding for JWEs; this\nslightly increases state cookie size, by-value session cookies and\nencrypted cache contents again at the benefit of forward cjose\ncompatibility; bump to 2.4.11.2rc0\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/cache/common.c||src/cache/common.c",
          "src/proto.c||src/proto.c",
          "src/session.c||src/session.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "src/cache/common.c||src/cache/common.c"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "src/cache/common.c||src/cache/common.c"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.11.1],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.11.2rc0],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/cache/common.c||src/cache/common.c": [
          "File: src/cache/common.c -> src/cache/common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "245:  json = json_object();",
          "246:  json_object_set_new(json, OIDC_CACHE_CRYPTO_JSON_KEY, json_string(plaintext));",
          "250:  if (json)",
          "251:   json_decref(json);",
          "",
          "[Removed Lines]",
          "248:  rv = oidc_util_jwt_create(r, (const char*) key, json, result, TRUE);",
          "",
          "[Added Lines]",
          "248:  rv = oidc_util_jwt_create(r, (const char*) key, json, result, FALSE);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "262:  apr_byte_t rv = FALSE;",
          "263:  json_t *json = NULL;",
          "266:  if (rv == FALSE)",
          "267:   goto end;",
          "",
          "[Removed Lines]",
          "265:  rv = oidc_util_jwt_verify(r, (const char*) key, cache_value, &json, TRUE);",
          "",
          "[Added Lines]",
          "265:  rv = oidc_util_jwt_verify(r, (const char*) key, cache_value, &json, FALSE);",
          "",
          "---------------"
        ],
        "src/proto.c||src/proto.c": [
          "File: src/proto.c -> src/proto.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "965: oidc_proto_state_t* oidc_proto_state_from_cookie(request_rec *r, oidc_cfg *c,",
          "966:   const char *cookieValue) {",
          "967:  json_t *result = NULL;",
          "969:  return result;",
          "970: }",
          "972: char* oidc_proto_state_to_cookie(request_rec *r, oidc_cfg *c, oidc_proto_state_t *proto_state) {",
          "973:  char *cookieValue = NULL;",
          "975:  return cookieValue;",
          "976: }",
          "",
          "[Removed Lines]",
          "968:  oidc_util_jwt_verify(r, c->crypto_passphrase, cookieValue, &result, TRUE);",
          "974:  oidc_util_jwt_create(r, c->crypto_passphrase, proto_state, &cookieValue, TRUE);",
          "",
          "[Added Lines]",
          "968:  oidc_util_jwt_verify(r, c->crypto_passphrase, cookieValue, &result, FALSE);",
          "974:  oidc_util_jwt_create(r, c->crypto_passphrase, proto_state, &cookieValue, FALSE);",
          "",
          "---------------"
        ],
        "src/session.c||src/session.c": [
          "File: src/session.c -> src/session.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:   return (*s_value != NULL);",
          "67:  }",
          "70:   return FALSE;",
          "72:  return TRUE;",
          "",
          "[Removed Lines]",
          "69:  if (oidc_util_jwt_create(r, c->crypto_passphrase, z->state, s_value, TRUE) == FALSE)",
          "",
          "[Added Lines]",
          "69:  if (oidc_util_jwt_create(r, c->crypto_passphrase, z->state, s_value, FALSE) == FALSE)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79:   return oidc_util_decode_json_object(r, s_json, &z->state);",
          "80:  }",
          "83:   oidc_error(r, \"could not verify secure JWT: cache value possibly corrupted\");",
          "84:   return FALSE;",
          "85:  }",
          "",
          "[Removed Lines]",
          "82:  if (oidc_util_jwt_verify(r, c->crypto_passphrase, s_json, &z->state, TRUE) == FALSE) {",
          "",
          "[Added Lines]",
          "82:  if (oidc_util_jwt_verify(r, c->crypto_passphrase, s_json, &z->state, FALSE) == FALSE) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e66be94aa0ede7f74e82880555ca96d8f12eee9a",
      "candidate_info": {
        "commit_hash": "e66be94aa0ede7f74e82880555ca96d8f12eee9a",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/e66be94aa0ede7f74e82880555ca96d8f12eee9a",
        "files": [
          "ChangeLog",
          "auth_openidc.conf",
          "configure.ac",
          "src/config.c",
          "src/mod_auth_openidc.c",
          "src/mod_auth_openidc.h"
        ],
        "message": "make X-Frame-Options header on OIDC front-channel logout configurable\n\nthrough OIDCLogoutXFrameOptions; closes #464; bump to 2.4.10.1rc3\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "auth_openidc.conf||auth_openidc.conf",
          "configure.ac||configure.ac",
          "src/config.c||src/config.c",
          "src/mod_auth_openidc.c||src/mod_auth_openidc.c",
          "src/mod_auth_openidc.h||src/mod_auth_openidc.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "auth_openidc.conf||auth_openidc.conf": [
          "File: auth_openidc.conf -> auth_openidc.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "944: # When not defined, the default is to match the hostname in the URL redirected to against",
          "945: # the hostname in the current request.",
          "946: #OIDCRedirectURLsAllowed [<regexp>]+",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "948: # Defines the value of the X-Frame-Options header returned on OIDC front-channel logout requests.",
          "949: # See also https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options.",
          "950: # For example:",
          "951: #   OIDCLogoutXFrameOptions: sameorigin",
          "952: # or:",
          "953: #   OIDCLogoutXFrameOptions: allow-from https://provider.example.com/",
          "954: # When not defined the default is \"DENY\".",
          "955: #OIDCLogoutXFrameOptions <value>",
          "",
          "---------------"
        ],
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.10.1rc2],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.10.1rc3],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/config.c||src/config.c": [
          "File: src/config.c -> src/config.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "263: #define OIDCRedirectURLsAllowed                \"OIDCRedirectURLsAllowed\"",
          "264: #define OIDCStateCookiePrefix                  \"OIDCStateCookiePrefix\"",
          "265: #define OIDCCABundlePath                       \"OIDCCABundlePath\"",
          "267: extern module AP_MODULE_DECLARE_DATA auth_openidc_module;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "266: #define OIDCLogoutXFrameOptions                \"OIDCLogoutXFrameOptions\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1436:  c->ca_bundle_path = NULL;",
          "1438:  return c;",
          "1439: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1439:  c->logout_x_frame_options = NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1927:    add->ca_bundle_path != NULL ?",
          "1928:      add->ca_bundle_path : base->ca_bundle_path;",
          "1930:  return c;",
          "1931: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1933:  c->logout_x_frame_options =",
          "1934:    add->logout_x_frame_options != NULL ?",
          "1935:      add->logout_x_frame_options : base->logout_x_frame_options;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3421:     RSRC_CONF,",
          "3422:     \"Sets the path to the CA bundle to be used by cURL.\"),",
          "3424:   { NULL }",
          "3425: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3431:   AP_INIT_TAKE1(OIDCLogoutXFrameOptions,",
          "3432:     ap_set_string_slot,",
          "3433:     (void *) APR_OFFSETOF(oidc_cfg, logout_x_frame_options),",
          "3434:     RSRC_CONF,",
          "3435:     \"Sets the value of the X-Frame-Options header on front channel logout.\"),",
          "",
          "---------------"
        ],
        "src/mod_auth_openidc.c||src/mod_auth_openidc.c": [
          "File: src/mod_auth_openidc.c -> src/mod_auth_openidc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2812:   oidc_util_hdr_err_out_add(r, OIDC_HTTP_HDR_PRAGMA, \"no-cache\");",
          "2813:   oidc_util_hdr_err_out_add(r, OIDC_HTTP_HDR_P3P, \"CAO PSA OUR\");",
          "2814:   oidc_util_hdr_err_out_add(r, OIDC_HTTP_HDR_EXPIRES, \"0\");",
          "2818:   const char *accept = oidc_util_hdr_in_accept_get(r);",
          "",
          "[Removed Lines]",
          "2815:   oidc_util_hdr_err_out_add(r, OIDC_HTTP_HDR_X_FRAME_OPTIONS, \"DENY\");",
          "",
          "[Added Lines]",
          "2815:   oidc_util_hdr_err_out_add(r, OIDC_HTTP_HDR_X_FRAME_OPTIONS,",
          "2816:     c->logout_x_frame_options ? c->logout_x_frame_options : \"DENY\");",
          "",
          "---------------"
        ],
        "src/mod_auth_openidc.h||src/mod_auth_openidc.h": [
          "File: src/mod_auth_openidc.h -> src/mod_auth_openidc.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "447:  apr_hash_t *redirect_urls_allowed;",
          "449:  char *ca_bundle_path;",
          "450: } oidc_cfg;",
          "452: int oidc_check_user_id(request_rec *r);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "451:  char *logout_x_frame_options;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ee891b1665be34b624df11a103a910d74869256c",
      "candidate_info": {
        "commit_hash": "ee891b1665be34b624df11a103a910d74869256c",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/ee891b1665be34b624df11a103a910d74869256c",
        "files": [
          "AUTHORS",
          "ChangeLog",
          "auth_openidc.conf",
          "configure.ac",
          "src/mod_auth_openidc.c",
          "src/mod_auth_openidc.h",
          "src/util.c",
          "test/test.c"
        ],
        "message": "add check for Sec-Fetch-Mode header != \"navigate\" value\n\nto auto-detect XML HTTP Requests; bump to 2.4.9.5rc7\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "auth_openidc.conf||auth_openidc.conf",
          "configure.ac||configure.ac",
          "src/mod_auth_openidc.c||src/mod_auth_openidc.c",
          "src/mod_auth_openidc.h||src/mod_auth_openidc.h",
          "src/util.c||src/util.c",
          "test/test.c||test/test.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "auth_openidc.conf||auth_openidc.conf": [
          "File: auth_openidc.conf -> auth_openidc.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "817: # Since verson 2.4.4 a boolean Apache expression as the second parameter to specify which requests",
          "818: # need to match to return the configured value in the first parameter to override the default \"auth\".",
          "819: # See also: https://httpd.apache.org/docs/2.4/expr.html.",
          "821: #   OIDCUnAuthAction 401 \"%{HTTP_USER_AGENT} =~ /curl/\"",
          "823: #   OIDCUnAuthAction 401 \"%{HTTP:X-Requested-With} == 'XMLHttpRequest'\"",
          "825: #   OIDCUnAuthAction 401 \"%{HTTP_ACCEPT} !~ m#text/html#\"",
          "828: # just as a more complex example, it equals the default XML request detection algorithm",
          "829: #   OIDCUnAuthAction auth true",
          "831: # Note that actually *any* expression value in \"OIDCUnAuthAction auth <expr>\" will *always* render \"auth\"",
          "832: # (even when set to \"false\"...) because of the default, so using an <expr> value (other than \"true\") only",
          "833: # makes sense in combination with one of the values other than \"auth\".",
          "",
          "[Removed Lines]",
          "820: # E.g.:",
          "822: # to return 401 for cURL based user agents and \"auth\" for any other browsers/user agents.",
          "824: # to effectively override the default XML request detection algorithm by ignoring the Accept headers",
          "826: # to return 401 for all user agents that do not send an Accept header that includes a \"text/html\" value",
          "827: #   OIDCUnAuthAction 401 \"%{HTTP:X-Requested-With} == 'XMLHttpRequest' || ( ( %{HTTP_ACCEPT} !~ m#text/html# ) && ( %{HTTP_ACCEPT} !~ m#application/xhtml\\+xml# ) && ( %{HTTP_ACCEPT} !~ m#\\*/\\*# ) )\"",
          "830: # To disable auto-detection of XML HTTP request altogether and uncondtionally return \"auth\" for all clients.",
          "",
          "[Added Lines]",
          "820: # E.g to return 401 for cURL based user agents and \"auth\" for any other browsers/user agents:",
          "822: # to effectively override the default XML request detection algorithm by ignoring the Accept headers:",
          "824: # to return 401 for all user agents that do not send an Accept header that includes a \"text/html\" value:",
          "827: #   OIDCUnAuthAction 401 \"%{HTTP:X-Requested-With} == 'XMLHttpRequest' || %{HTTP:Sec-Fetch-Mode} != 'navigate' || ( ( %{HTTP_ACCEPT} !~ m#text/html# ) && ( %{HTTP_ACCEPT} !~ m#application/xhtml\\+xml# ) && ( %{HTTP_ACCEPT} !~ m#\\*/\\*# ) )\"",
          "828: # To disable auto-detection of XML HTTP request altogether and uncondtionally return \"auth\" for all clients:",
          "",
          "---------------"
        ],
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.9.5rc6],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.9.5rc7],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/mod_auth_openidc.c||src/mod_auth_openidc.c": [
          "File: src/mod_auth_openidc.c -> src/mod_auth_openidc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "859:  if ((oidc_util_hdr_in_x_requested_with_get(r) != NULL)",
          "860:    && (apr_strnatcasecmp(oidc_util_hdr_in_x_requested_with_get(r),",
          "861:      OIDC_HTTP_HDR_VAL_XML_HTTP_REQUEST) == 0))",
          "862:   return TRUE;",
          "864:  if ((oidc_util_hdr_in_accept_contains(r, OIDC_CONTENT_TYPE_TEXT_HTML)",
          "865:    == FALSE) && (oidc_util_hdr_in_accept_contains(r,",
          "866:      OIDC_CONTENT_TYPE_APP_XHTML_XML) == FALSE)",
          "",
          "[Removed Lines]",
          "857: static apr_byte_t oidc_is_xml_http_request(request_rec *r) {",
          "",
          "[Added Lines]",
          "857: apr_byte_t oidc_is_xml_http_request(request_rec *r) {",
          "864:  if ((oidc_util_hdr_in_sec_fetch_mode_get(r) != NULL)",
          "865:    && (apr_strnatcasecmp(oidc_util_hdr_in_sec_fetch_mode_get(r),",
          "866:           OIDC_HTTP_HDR_VAL_NAVIGATE) != 0))",
          "867:   return TRUE;",
          "",
          "---------------"
        ],
        "src/mod_auth_openidc.h||src/mod_auth_openidc.h": [
          "File: src/mod_auth_openidc.h -> src/mod_auth_openidc.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "826: #define OIDC_HTTP_HDR_CONTENT_TYPE      \"Content-Type\"",
          "827: #define OIDC_HTTP_HDR_CONTENT_LENGTH     \"Content-Length\"",
          "828: #define OIDC_HTTP_HDR_X_REQUESTED_WITH     \"X-Requested-With\"",
          "829: #define OIDC_HTTP_HDR_ACCEPT       \"Accept\"",
          "830: #define OIDC_HTTP_HDR_AUTHORIZATION      \"Authorization\"",
          "831: #define OIDC_HTTP_HDR_X_FORWARDED_PROTO     \"X-Forwarded-Proto\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "829: #define OIDC_HTTP_HDR_SEC_FETCH_MODE     \"Sec-Fetch-Mode\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "842: #define OIDC_HTTP_HDR_INCLUDE_REFERRED_TOKEN_BINDING_ID \"Include-Referred-Token-Binding-ID\"",
          "844: #define OIDC_HTTP_HDR_VAL_XML_HTTP_REQUEST    \"XMLHttpRequest\"",
          "846: void oidc_util_hdr_in_set(const request_rec *r, const char *name, const char *value);",
          "847: const char *oidc_util_hdr_in_cookie_get(const request_rec *r);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "846: #define OIDC_HTTP_HDR_VAL_NAVIGATE      \"navigate\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "851: const char *oidc_util_hdr_in_content_type_get(const request_rec *r);",
          "852: const char *oidc_util_hdr_in_content_length_get(const request_rec *r);",
          "853: const char *oidc_util_hdr_in_x_requested_with_get(const request_rec *r);",
          "854: const char *oidc_util_hdr_in_accept_get(const request_rec *r);",
          "855: const char *oidc_util_hdr_in_authorization_get(const request_rec *r);",
          "856: const char *oidc_util_hdr_in_x_forwarded_proto_get(const request_rec *r);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "856: const char* oidc_util_hdr_in_sec_fetch_mode_get(const request_rec *r);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "923: void oidc_session_set_issuer(request_rec *r, oidc_session_t *z, const char *issuer);",
          "924: const char * oidc_session_get_issuer(request_rec *r, oidc_session_t *z);",
          "925: void oidc_session_set_client_id(request_rec *r, oidc_session_t *z, const char *client_id);",
          "927: char *oidc_parse_base64(apr_pool_t *pool, const char *input, char **output, int *output_len);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "929: apr_byte_t oidc_is_xml_http_request(request_rec *r);",
          "",
          "---------------"
        ],
        "src/util.c||src/util.c": [
          "File: src/util.c -> src/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2623:  return oidc_util_hdr_in_get(r, OIDC_HTTP_HDR_X_REQUESTED_WITH);",
          "2624: }",
          "2626: const char* oidc_util_hdr_in_accept_get(const request_rec *r) {",
          "2627:  return oidc_util_hdr_in_get(r, OIDC_HTTP_HDR_ACCEPT);",
          "2628: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2626: const char* oidc_util_hdr_in_sec_fetch_mode_get(const request_rec *r) {",
          "2627:  return oidc_util_hdr_in_get(r, OIDC_HTTP_HDR_SEC_FETCH_MODE);",
          "2628: }",
          "",
          "---------------"
        ],
        "test/test.c||test/test.c": [
          "File: test/test.c -> test/test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1520:  return 0;",
          "1521: }",
          "1523: static char * all_tests(apr_pool_t *pool, request_rec *r) {",
          "1524:  char *message;",
          "1525:  TST_RUN(test_public_key_parse, pool);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1523: static char* test_is_xml_http_request(request_rec *r) {",
          "1524:  apr_byte_t rc = FALSE;",
          "1526:  apr_table_set(r->headers_in, \"Accept\", \"*/*\");",
          "1527:  rc = oidc_is_xml_http_request(r);",
          "1528:  TST_ASSERT(\"test oidc_is_xml_http_request (1)\", rc == FALSE);",
          "1530:  apr_table_set(r->headers_in, \"X-Requested-With\", \"XMLHttpRequest\");",
          "1531:  rc = oidc_is_xml_http_request(r);",
          "1532:  TST_ASSERT(\"test oidc_is_xml_http_request (2)\", rc == TRUE);",
          "1533:  apr_table_unset(r->headers_in, \"X-Requested-With\");",
          "1535:  apr_table_set(r->headers_in, \"Sec-Fetch-Mode\", \"navigate\");",
          "1536:  rc = oidc_is_xml_http_request(r);",
          "1537:  TST_ASSERT(\"test oidc_is_xml_http_request (3)\", rc == FALSE);",
          "1538:  apr_table_unset(r->headers_in, \"Sec-Fetch-Mode\");",
          "1540:  apr_table_set(r->headers_in, \"Sec-Fetch-Mode\", \"cors\");",
          "1541:  rc = oidc_is_xml_http_request(r);",
          "1542:  TST_ASSERT(\"test oidc_is_xml_http_request (4)\", rc == TRUE);",
          "1543:  apr_table_unset(r->headers_in, \"Sec-Fetch-Mode\");",
          "1545:  return 0;",
          "1546: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1556:  TST_RUN(test_decode_json_object, r);",
          "1558:  TST_RUN(test_remote_user, r);",
          "1560: #if MODULE_MAGIC_NUMBER_MAJOR >= 20100714",
          "1561:  TST_RUN(test_authz_worker, r);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1584:  TST_RUN(test_is_xml_http_request, r);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "91a28225a3ad39483d086926f9b46a53aa569d89",
      "candidate_info": {
        "commit_hash": "91a28225a3ad39483d086926f9b46a53aa569d89",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/91a28225a3ad39483d086926f9b46a53aa569d89",
        "files": [
          "ChangeLog",
          "auth_openidc.conf",
          "configure.ac",
          "src/config.c",
          "test/stub.c"
        ],
        "message": "backport ap_get_exec_line for \"exec:\" option in OIDCCryptoPassphrase\n\nbump to 2.4.9.5rc6\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "auth_openidc.conf||auth_openidc.conf",
          "configure.ac||configure.ac",
          "src/config.c||src/config.c",
          "test/stub.c||test/stub.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "auth_openidc.conf||auth_openidc.conf": [
          "File: auth_openidc.conf -> auth_openidc.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: # - encryption of the (temporary) state cookie",
          "18: # - encryption of cache entries, that may include the session cookie, see: OIDCCacheEncrypt and OIDCSessionType",
          "19: # Note that an encrypted cache mechanism can be shared between servers if they use the same OIDCCryptoPassphrase",
          "21: # If the value begins with exec: the resulting command will be executed and the",
          "22: # first line returned to standard output by the program will be used as the password.",
          "23: # The command may be absolute or relative to the web server root.",
          "",
          "[Removed Lines]",
          "20: # Only for Apache >= 2.4.x:",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.9.5rc5],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.9.5rc6],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/config.c||src/config.c": [
          "File: src/config.c -> src/config.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "415:  return ap_set_string_slot(cmd, cfg, full_path);",
          "416: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "418: #if MODULE_MAGIC_NUMBER_MAJOR < 20100714",
          "419: static char * ap_get_exec_line(apr_pool_t *p,",
          "420:                                     const char *cmd,",
          "421:                                     const char * const * argv)",
          "422: {",
          "423:     char buf[MAX_STRING_LEN];",
          "424:     apr_procattr_t *procattr;",
          "425:     apr_proc_t *proc;",
          "426:     apr_file_t *fp;",
          "427:     apr_size_t nbytes = 1;",
          "428:     char c;",
          "429:     int k;",
          "431:     if (apr_procattr_create(&procattr, p) != APR_SUCCESS)",
          "432:         return NULL;",
          "433:     if (apr_procattr_io_set(procattr, APR_FULL_BLOCK, APR_FULL_BLOCK,",
          "434:                             APR_FULL_BLOCK) != APR_SUCCESS)",
          "435:         return NULL;",
          "436:     if (apr_procattr_dir_set(procattr,",
          "437:                              ap_make_dirstr_parent(p, cmd)) != APR_SUCCESS)",
          "438:         return NULL;",
          "439:     if (apr_procattr_cmdtype_set(procattr, APR_PROGRAM) != APR_SUCCESS)",
          "440:         return NULL;",
          "441:     proc = apr_pcalloc(p, sizeof(apr_proc_t));",
          "442:     if (apr_proc_create(proc, cmd, argv, NULL, procattr, p) != APR_SUCCESS)",
          "443:         return NULL;",
          "444:     fp = proc->out;",
          "446:     if (fp == NULL)",
          "447:         return NULL;",
          "449:     for (k = 0; apr_file_read(fp, &c, &nbytes) == APR_SUCCESS",
          "450:                 && nbytes == 1 && (k < MAX_STRING_LEN-1)     ; ) {",
          "451:         if (c == '\\n' || c == '\\r')",
          "452:             break;",
          "453:         buf[k++] = c;",
          "454:     }",
          "455:     buf[k] = '\\0';",
          "456:     apr_file_close(fp);",
          "458:     return apr_pstrndup(p, buf, k);",
          "459: }",
          "460: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "423:  oidc_cfg *cfg = (oidc_cfg*) ap_get_module_config(cmd->server->module_config,",
          "424:    &auth_openidc_module);",
          "425:  const char *passphrase = NULL;",
          "427:  int arglen = strlen(arg);",
          "428:  char **argv = NULL;",
          "429:  char *result = NULL;",
          "",
          "[Removed Lines]",
          "426: #if MODULE_MAGIC_NUMBER_MAJOR >= 20100714",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "448:  } else {",
          "449:   passphrase = arg;",
          "450:  }",
          "455:  return ap_set_string_slot(cmd, cfg, passphrase);",
          "456: }",
          "",
          "[Removed Lines]",
          "451: #else",
          "452:  passphrase = arg;",
          "453: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/stub.c||test/stub.c": [
          "File: test/stub.c -> test/stub.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "305:    return NULL;",
          "306:   }",
          "308: #if MODULE_MAGIC_NUMBER_MAJOR >= 20100714",
          "309:   AP_DECLARE(int) ap_expr_exec(request_rec *r, const ap_expr_info_t *expr,",
          "310:     const char **err) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "308:   AP_DECLARE(char *) ap_make_dirstr_parent(apr_pool_t *p, const char *s) {",
          "309:    return NULL;",
          "310:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}