{
  "cve_id": "CVE-2015-8012",
  "cve_desc": "lldpd before 0.8.0 allows remote attackers to cause a denial of service (assertion failure and daemon crash) via a malformed packet.",
  "repo": "vincentbernat/lldpd",
  "patch_hash": "9221b5c249f9e4843f77c7f888d5705348d179c0",
  "patch_info": {
    "commit_hash": "9221b5c249f9e4843f77c7f888d5705348d179c0",
    "repo": "vincentbernat/lldpd",
    "commit_url": "https://github.com/vincentbernat/lldpd/commit/9221b5c249f9e4843f77c7f888d5705348d179c0",
    "files": [
      "src/daemon/lldpd.c",
      "src/daemon/protocols/cdp.c",
      "src/daemon/protocols/edp.c",
      "src/daemon/protocols/lldp.c",
      "src/daemon/protocols/sonmp.c"
    ],
    "message": "protocols: don't use assert on paths that can be reached\n\nMalformed packets should not make lldpd crash. Ensure we can handle them\nby not using assert() in this part.",
    "before_after_code_files": [
      "src/daemon/lldpd.c||src/daemon/lldpd.c",
      "src/daemon/protocols/cdp.c||src/daemon/protocols/cdp.c",
      "src/daemon/protocols/edp.c||src/daemon/protocols/edp.c",
      "src/daemon/protocols/lldp.c||src/daemon/protocols/lldp.c",
      "src/daemon/protocols/sonmp.c||src/daemon/protocols/sonmp.c"
    ]
  },
  "patch_diff": {
    "src/daemon/lldpd.c||src/daemon/lldpd.c": [
      "File: src/daemon/lldpd.c -> src/daemon/lldpd.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "252:   return NULL;",
      "253:  }",
      "254:  mgmt->m_family = family;",
      "256:  memcpy(&mgmt->m_addr, addrptr, addrsize);",
      "257:  mgmt->m_addrsize = addrsize;",
      "258:  mgmt->m_iface = iface;",
      "",
      "[Removed Lines]",
      "255:  assert(addrsize <= LLDPD_MGMT_MAXADDRSIZE);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/daemon/protocols/cdp.c||src/daemon/protocols/cdp.c": [
      "File: src/daemon/protocols/cdp.c -> src/daemon/protocols/cdp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: #include <unistd.h>",
      "26: #include <errno.h>",
      "27: #include <arpa/inet.h>",
      "30: static int",
      "31: cdp_send(struct lldpd *global,",
      "",
      "[Removed Lines]",
      "28: #include <assert.h>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "438:       mgmt = lldpd_alloc_mgmt(LLDPD_AF_IPV4, &addr,",
      "439:          sizeof(struct in_addr), 0);",
      "440:       if (mgmt == NULL) {",
      "443:        goto malformed;",
      "444:       }",
      "445:       TAILQ_INSERT_TAIL(&chassis->c_mgmt, mgmt, m_entries);",
      "",
      "[Removed Lines]",
      "441:        assert(errno == ENOMEM);",
      "442:        log_warn(\"cdp\", \"unable to allocate memory for management address\");",
      "",
      "[Added Lines]",
      "440:        if (errno == ENOMEM)",
      "441:         log_warn(\"cdp\",",
      "442:             \"unable to allocate memory for management address\");",
      "443:        else",
      "444:         log_warn(\"cdp\",",
      "445:             \"too large management address received on %s\",",
      "446:             hardware->h_ifname);",
      "",
      "---------------"
    ],
    "src/daemon/protocols/edp.c||src/daemon/protocols/edp.c": [
      "File: src/daemon/protocols/edp.c -> src/daemon/protocols/edp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: #include <errno.h>",
      "26: #include <arpa/inet.h>",
      "27: #include <fnmatch.h>",
      "30: static int seq = 0;",
      "",
      "[Removed Lines]",
      "28: #include <assert.h>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/daemon/protocols/lldp.c||src/daemon/protocols/lldp.c": [
      "File: src/daemon/protocols/lldp.c -> src/daemon/protocols/lldp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "21: #include <unistd.h>",
      "22: #include <errno.h>",
      "24: #include <time.h>",
      "25: #include <sys/types.h>",
      "26: #include <sys/socket.h>",
      "",
      "[Removed Lines]",
      "23: #include <assert.h>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "162:  TAILQ_FOREACH(mgmt, &chassis->c_mgmt, m_entries) {",
      "163:   proto = lldpd_af_to_lldp_proto(mgmt->m_family);",
      "165:   if (!(",
      "166:      POKE_START_LLDP_TLV(LLDP_TLV_MGMT_ADDR) &&",
      "",
      "[Removed Lines]",
      "164:   assert(proto != LLDP_MGMT_ADDR_NONE);",
      "",
      "[Added Lines]",
      "163:   if (proto == LLDP_MGMT_ADDR_NONE) continue;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "749:     iface = 0;",
      "750:    mgmt = lldpd_alloc_mgmt(af, addr_ptr, addr_length, iface);",
      "751:    if (mgmt == NULL) {",
      "755:     goto malformed;",
      "756:    }",
      "757:    TAILQ_INSERT_TAIL(&chassis->c_mgmt, mgmt, m_entries);",
      "",
      "[Removed Lines]",
      "752:     assert(errno == ENOMEM);",
      "753:     log_warn(\"lldp\", \"unable to allocate memory \"",
      "754:         \"for management address\");",
      "",
      "[Added Lines]",
      "751:     if (errno == ENOMEM)",
      "752:      log_warn(\"lldp\", \"unable to allocate memory \"",
      "753:          \"for management address\");",
      "754:     else",
      "755:      log_warn(\"lldp\", \"too large management address \"",
      "756:          \"received on %s\", hardware->h_ifname);",
      "",
      "---------------"
    ],
    "src/daemon/protocols/sonmp.c||src/daemon/protocols/sonmp.c": [
      "File: src/daemon/protocols/sonmp.c -> src/daemon/protocols/sonmp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "24: #include <unistd.h>",
      "25: #include <errno.h>",
      "26: #include <arpa/inet.h>",
      "29: static struct sonmp_chassis sonmp_chassis_types[] = {",
      "30:  {1, \"unknown (via SONMP)\"},",
      "",
      "[Removed Lines]",
      "27: #include <assert.h>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "358:  }",
      "359:  mgmt = lldpd_alloc_mgmt(LLDPD_AF_IPV4, &address, sizeof(struct in_addr), 0);",
      "360:  if (mgmt == NULL) {",
      "363:   goto malformed;",
      "364:  }",
      "365:  TAILQ_INSERT_TAIL(&chassis->c_mgmt, mgmt, m_entries);",
      "",
      "[Removed Lines]",
      "361:   assert(errno == ENOMEM);",
      "362:   log_warn(\"sonmp\", \"unable to allocate memory for management address\");",
      "",
      "[Added Lines]",
      "360:   if (errno == ENOMEM)",
      "361:    log_warn(\"sonmp\", \"unable to allocate memory for management address\");",
      "362:   else",
      "363:    log_warn(\"sonmp\", \"too large management address received on %s\",",
      "364:        hardware->h_ifname);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "793526f8884455f43daecd0a2c46772388417a00",
      "candidate_info": {
        "commit_hash": "793526f8884455f43daecd0a2c46772388417a00",
        "repo": "vincentbernat/lldpd",
        "commit_url": "https://github.com/vincentbernat/lldpd/commit/793526f8884455f43daecd0a2c46772388417a00",
        "files": [
          "src/daemon/lldpd.c",
          "src/daemon/protocols/cdp.c",
          "src/daemon/protocols/edp.c",
          "src/daemon/protocols/lldp.c",
          "src/daemon/protocols/sonmp.c"
        ],
        "message": "protocols: don't use assert on paths that can be reached\n\nMalformed packets should not make lldpd crash. Ensure we can handle them\nby not using assert() in this part.",
        "before_after_code_files": [
          "src/daemon/lldpd.c||src/daemon/lldpd.c",
          "src/daemon/protocols/cdp.c||src/daemon/protocols/cdp.c",
          "src/daemon/protocols/edp.c||src/daemon/protocols/edp.c",
          "src/daemon/protocols/lldp.c||src/daemon/protocols/lldp.c",
          "src/daemon/protocols/sonmp.c||src/daemon/protocols/sonmp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/daemon/lldpd.c||src/daemon/lldpd.c",
            "src/daemon/protocols/cdp.c||src/daemon/protocols/cdp.c",
            "src/daemon/protocols/edp.c||src/daemon/protocols/edp.c",
            "src/daemon/protocols/lldp.c||src/daemon/protocols/lldp.c",
            "src/daemon/protocols/sonmp.c||src/daemon/protocols/sonmp.c"
          ],
          "candidate": [
            "src/daemon/lldpd.c||src/daemon/lldpd.c",
            "src/daemon/protocols/cdp.c||src/daemon/protocols/cdp.c",
            "src/daemon/protocols/edp.c||src/daemon/protocols/edp.c",
            "src/daemon/protocols/lldp.c||src/daemon/protocols/lldp.c",
            "src/daemon/protocols/sonmp.c||src/daemon/protocols/sonmp.c"
          ]
        }
      },
      "candidate_diff": {
        "src/daemon/lldpd.c||src/daemon/lldpd.c": [
          "File: src/daemon/lldpd.c -> src/daemon/lldpd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "198:   return NULL;",
          "199:  }",
          "200:  mgmt->m_family = family;",
          "202:  memcpy(&mgmt->m_addr, addrptr, addrsize);",
          "203:  mgmt->m_addrsize = addrsize;",
          "204:  mgmt->m_iface = iface;",
          "",
          "[Removed Lines]",
          "201:  assert(addrsize <= LLDPD_MGMT_MAXADDRSIZE);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/daemon/protocols/cdp.c||src/daemon/protocols/cdp.c": [
          "File: src/daemon/protocols/cdp.c -> src/daemon/protocols/cdp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #include <unistd.h>",
          "26: #include <errno.h>",
          "27: #include <arpa/inet.h>",
          "30: static int",
          "31: cdp_send(struct lldpd *global,",
          "",
          "[Removed Lines]",
          "28: #include <assert.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "438:       mgmt = lldpd_alloc_mgmt(LLDPD_AF_IPV4, &addr,",
          "439:          sizeof(struct in_addr), 0);",
          "440:       if (mgmt == NULL) {",
          "443:        goto malformed;",
          "444:       }",
          "445:       TAILQ_INSERT_TAIL(&chassis->c_mgmt, mgmt, m_entries);",
          "",
          "[Removed Lines]",
          "441:        assert(errno == ENOMEM);",
          "442:        log_warn(\"cdp\", \"unable to allocate memory for management address\");",
          "",
          "[Added Lines]",
          "440:        if (errno == ENOMEM)",
          "441:         log_warn(\"cdp\",",
          "442:             \"unable to allocate memory for management address\");",
          "443:        else",
          "444:         log_warn(\"cdp\",",
          "445:             \"too large management address received on %s\",",
          "446:             hardware->h_ifname);",
          "",
          "---------------"
        ],
        "src/daemon/protocols/edp.c||src/daemon/protocols/edp.c": [
          "File: src/daemon/protocols/edp.c -> src/daemon/protocols/edp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #include <errno.h>",
          "26: #include <arpa/inet.h>",
          "27: #include <fnmatch.h>",
          "30: static int seq = 0;",
          "",
          "[Removed Lines]",
          "28: #include <assert.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/daemon/protocols/lldp.c||src/daemon/protocols/lldp.c": [
          "File: src/daemon/protocols/lldp.c -> src/daemon/protocols/lldp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: #include <unistd.h>",
          "22: #include <errno.h>",
          "24: #include <time.h>",
          "25: #include <sys/types.h>",
          "26: #include <sys/socket.h>",
          "",
          "[Removed Lines]",
          "23: #include <assert.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "162:  TAILQ_FOREACH(mgmt, &chassis->c_mgmt, m_entries) {",
          "163:   proto = lldpd_af_to_lldp_proto(mgmt->m_family);",
          "165:   if (!(",
          "166:      POKE_START_LLDP_TLV(LLDP_TLV_MGMT_ADDR) &&",
          "",
          "[Removed Lines]",
          "164:   assert(proto != LLDP_MGMT_ADDR_NONE);",
          "",
          "[Added Lines]",
          "163:   if (proto == LLDP_MGMT_ADDR_NONE) continue;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "749:     iface = 0;",
          "750:    mgmt = lldpd_alloc_mgmt(af, addr_ptr, addr_length, iface);",
          "751:    if (mgmt == NULL) {",
          "756:    }",
          "757:    TAILQ_INSERT_TAIL(&chassis->c_mgmt, mgmt, m_entries);",
          "758:    break;",
          "",
          "[Removed Lines]",
          "752:     assert(errno == ENOMEM);",
          "753:     log_warn(\"lldp\", \"unable to allocate memory \"",
          "754:        \"for management address\");",
          "755:       goto malformed;",
          "",
          "[Added Lines]",
          "751:     if (errno == ENOMEM)",
          "752:      log_warn(\"lldp\", \"unable to allocate memory \"",
          "753:          \"for management address\");",
          "754:     else",
          "755:      log_warn(\"lldp\", \"too large management address \"",
          "756:          \"received on %s\", hardware->h_ifname);",
          "757:     goto malformed;",
          "",
          "---------------"
        ],
        "src/daemon/protocols/sonmp.c||src/daemon/protocols/sonmp.c": [
          "File: src/daemon/protocols/sonmp.c -> src/daemon/protocols/sonmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: #include <unistd.h>",
          "25: #include <errno.h>",
          "26: #include <arpa/inet.h>",
          "29: static struct sonmp_chassis sonmp_chassis_types[] = {",
          "30:  {1, \"unknown (via SONMP)\"},",
          "",
          "[Removed Lines]",
          "27: #include <assert.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "358:  }",
          "359:  mgmt = lldpd_alloc_mgmt(LLDPD_AF_IPV4, &address, sizeof(struct in_addr), 0);",
          "360:  if (mgmt == NULL) {",
          "363:   goto malformed;",
          "364:  }",
          "365:  TAILQ_INSERT_TAIL(&chassis->c_mgmt, mgmt, m_entries);",
          "",
          "[Removed Lines]",
          "361:   assert(errno == ENOMEM);",
          "362:   log_warn(\"sonmp\", \"unable to allocate memory for management address\");",
          "",
          "[Added Lines]",
          "360:   if (errno == ENOMEM)",
          "361:    log_warn(\"sonmp\", \"unable to allocate memory for management address\");",
          "362:   else",
          "363:    log_warn(\"sonmp\", \"too large management address received on %s\",",
          "364:        hardware->h_ifname);",
          "",
          "---------------"
        ]
      }
    }
  ]
}