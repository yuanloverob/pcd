{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c4e9226bdb5ce00fbe8a8b2dcb4ac4ebfe5de119",
      "candidate_info": {
        "commit_hash": "c4e9226bdb5ce00fbe8a8b2dcb4ac4ebfe5de119",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/c4e9226bdb5ce00fbe8a8b2dcb4ac4ebfe5de119",
        "files": [
          "test/simple/test-require-json.js"
        ],
        "message": "Fix test-require-json on Windows",
        "before_after_code_files": [
          "test/simple/test-require-json.js||test/simple/test-require-json.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-require-json.js||test/simple/test-require-json.js": [
          "File: test/simple/test-require-json.js -> test/simple/test-require-json.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: try {",
          "25:   require('../fixtures/invalid.json');",
          "26: } catch (err) {",
          "",
          "[Removed Lines]",
          "27:   var i = err.message.indexOf('test/fixtures/invalid.json: Unexpected string')",
          "28:   assert(-1 != i, 'require() json error should include path');",
          "29: }",
          "",
          "[Added Lines]",
          "28:   var i = err.message.match(re);",
          "29:   assert(null !== i, 'require() json error should include path');",
          "30: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "89e311b1aee2009b2f710143e64332816374f617",
      "candidate_info": {
        "commit_hash": "89e311b1aee2009b2f710143e64332816374f617",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/89e311b1aee2009b2f710143e64332816374f617",
        "files": [
          "deps/openssl/openssl/crypto/asn1/a_d2i_fp.c",
          "deps/openssl/openssl/crypto/buffer/buffer.c",
          "deps/openssl/openssl/crypto/mem.c"
        ],
        "message": "deps: back-port openssl patch\n\nCheck for potentially exploitable overflows in asn1_d2i_read_bio\nBUF_mem_grow and BUF_mem_grow_clean. Refuse attempts to shrink buffer\nin CRYPTO_realloc_clean.\n\nTaken from OpenSSL CVS. Addresses CVE-2012-2110.",
        "before_after_code_files": [
          "deps/openssl/openssl/crypto/asn1/a_d2i_fp.c||deps/openssl/openssl/crypto/asn1/a_d2i_fp.c",
          "deps/openssl/openssl/crypto/buffer/buffer.c||deps/openssl/openssl/crypto/buffer/buffer.c",
          "deps/openssl/openssl/crypto/mem.c||deps/openssl/openssl/crypto/mem.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/openssl/openssl/crypto/asn1/a_d2i_fp.c||deps/openssl/openssl/crypto/asn1/a_d2i_fp.c": [
          "File: deps/openssl/openssl/crypto/asn1/a_d2i_fp.c -> deps/openssl/openssl/crypto/asn1/a_d2i_fp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: #include <stdio.h>",
          "60: #include \"cryptlib.h\"",
          "61: #include <openssl/buffer.h>",
          "62: #include <openssl/asn1_mac.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60: #include <limits.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "143:  BUF_MEM *b;",
          "144:  unsigned char *p;",
          "145:  int i;",
          "147:  ASN1_const_CTX c;",
          "149:  int eos=0;",
          "158:  b=BUF_MEM_new();",
          "159:  if (b == NULL)",
          "",
          "[Removed Lines]",
          "146:  int ret=-1;",
          "148:  int want=HEADER_SIZE;",
          "150: #if defined(__GNUC__) && defined(__ia64)",
          "152:  long off=0;",
          "153: #else",
          "154:  int off=0;",
          "155: #endif",
          "156:  int len=0;",
          "",
          "[Added Lines]",
          "148:  size_t want=HEADER_SIZE;",
          "150:  size_t off=0;",
          "151:  size_t len=0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "169:    {",
          "170:    want-=(len-off);",
          "173:     {",
          "174:     ASN1err(ASN1_F_ASN1_D2I_READ_BIO,ERR_R_MALLOC_FAILURE);",
          "175:     goto err;",
          "",
          "[Removed Lines]",
          "172:    if (!BUF_MEM_grow_clean(b,len+want))",
          "",
          "[Added Lines]",
          "167:    if (len + want < len || !BUF_MEM_grow_clean(b,len+want))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "181:     goto err;",
          "182:     }",
          "183:    if (i > 0)",
          "184:     len+=i;",
          "185:    }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "179:     {",
          "180:     if (len+i < len)",
          "181:      {",
          "182:      ASN1err(ASN1_F_ASN1_D2I_READ_BIO,ASN1_R_TOO_LONG);",
          "183:      goto err;",
          "184:      }",
          "186:     }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "206:    {",
          "208:    eos++;",
          "209:    want=HEADER_SIZE;",
          "210:    }",
          "211:   else if (eos && (c.slen == 0) && (c.tag == V_ASN1_EOC))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "211:    if (eos < 0)",
          "212:     {",
          "213:     ASN1err(ASN1_F_ASN1_D2I_READ_BIO,ASN1_R_HEADER_TOO_LONG);",
          "214:     goto err;",
          "215:     }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "220:   else",
          "221:    {",
          "224:    if (want > (len-off))",
          "225:     {",
          "226:     want-=(len-off);",
          "227:     if (!BUF_MEM_grow_clean(b,len+want))",
          "228:      {",
          "229:      ASN1err(ASN1_F_ASN1_D2I_READ_BIO,ERR_R_MALLOC_FAILURE);",
          "",
          "[Removed Lines]",
          "223:    want=(int)c.slen;",
          "",
          "[Added Lines]",
          "230:    want=c.slen;",
          "234:     if (want > INT_MAX /* BIO_read takes an int length */ ||",
          "235:      len+want < len)",
          "236:       {",
          "237:       ASN1err(ASN1_F_ASN1_D2I_READ_BIO,ASN1_R_TOO_LONG);",
          "238:       goto err;",
          "239:       }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "238:           ASN1_R_NOT_ENOUGH_DATA);",
          "239:       goto err;",
          "240:       }",
          "241:      len+=i;",
          "243:      }",
          "244:     }",
          "246:    if (eos <= 0)",
          "247:     {",
          "248:     break;",
          "",
          "[Removed Lines]",
          "242:      want -= i;",
          "245:    off+=(int)c.slen;",
          "",
          "[Added Lines]",
          "257:      want-=i;",
          "260:    if (off + c.slen < off)",
          "261:     {",
          "262:     ASN1err(ASN1_F_ASN1_D2I_READ_BIO,ASN1_R_TOO_LONG);",
          "263:     goto err;",
          "264:     }",
          "265:    off+=c.slen;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "252:    }",
          "253:   }",
          "256:  return off;",
          "257: err:",
          "258:  if (b != NULL) BUF_MEM_free(b);",
          "260:  }",
          "",
          "[Removed Lines]",
          "259:  return(ret);",
          "",
          "[Added Lines]",
          "275:  if (off > INT_MAX)",
          "276:   {",
          "277:   ASN1err(ASN1_F_ASN1_D2I_READ_BIO,ASN1_R_TOO_LONG);",
          "278:   goto err;",
          "279:   }",
          "285:  return -1;",
          "",
          "---------------"
        ],
        "deps/openssl/openssl/crypto/buffer/buffer.c||deps/openssl/openssl/crypto/buffer/buffer.c": [
          "File: deps/openssl/openssl/crypto/buffer/buffer.c -> deps/openssl/openssl/crypto/buffer/buffer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "60: #include \"cryptlib.h\"",
          "61: #include <openssl/buffer.h>",
          "63: BUF_MEM *BUF_MEM_new(void)",
          "64:  {",
          "65:  BUF_MEM *ret;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66: #define LIMIT_BEFORE_EXPANSION 0x5ffffffc",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "105:   str->length=len;",
          "106:   return(len);",
          "107:   }",
          "108:  n=(len+3)/3*4;",
          "109:  if (str->data == NULL)",
          "110:   ret=OPENSSL_malloc(n);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "114:  if (len > LIMIT_BEFORE_EXPANSION)",
          "115:   {",
          "116:   BUFerr(BUF_F_BUF_MEM_GROW,ERR_R_MALLOC_FAILURE);",
          "117:   return 0;",
          "118:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "142:   str->length=len;",
          "143:   return(len);",
          "144:   }",
          "145:  n=(len+3)/3*4;",
          "146:  if (str->data == NULL)",
          "147:   ret=OPENSSL_malloc(n);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "157:  if (len > LIMIT_BEFORE_EXPANSION)",
          "158:   {",
          "159:   BUFerr(BUF_F_BUF_MEM_GROW_CLEAN,ERR_R_MALLOC_FAILURE);",
          "160:   return 0;",
          "161:   }",
          "",
          "---------------"
        ],
        "deps/openssl/openssl/crypto/mem.c||deps/openssl/openssl/crypto/mem.c": [
          "File: deps/openssl/openssl/crypto/mem.c -> deps/openssl/openssl/crypto/mem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "362:  if (num <= 0) return NULL;",
          "364:  if (realloc_debug_func != NULL)",
          "365:   realloc_debug_func(str, NULL, num, file, line, 0);",
          "366:  ret=malloc_ex_func(num,file,line);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "366:  if (num < old_len) return NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a3753b496e468ac24eee280485704db1241e75b5",
      "candidate_info": {
        "commit_hash": "a3753b496e468ac24eee280485704db1241e75b5",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/a3753b496e468ac24eee280485704db1241e75b5",
        "files": [
          "doc/api/buffer.markdown",
          "lib/buffer.js",
          "src/node.cc"
        ],
        "message": "Revert \"Fix #3242 Actually deprecate 'binary' buffer encoding\"\n\nThis reverts commit 5979f096d1b702ca2ba95664a0bbc8210109775b.\n\nRelated:\n- #3279\n- #3278",
        "before_after_code_files": [
          "lib/buffer.js||libuffer.js",
          "src/node.cc||src/node.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/buffer.js||libuffer.js": [
          "File: lib/buffer.js -> libuffer.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: var SlowBuffer = process.binding('buffer').SlowBuffer;",
          "23: var assert = require('assert');",
          "34: exports.INSPECT_MAX_BYTES = 50;",
          "",
          "[Removed Lines]",
          "27: var binaryWarned = false;",
          "28: function binaryWarn() {",
          "29:   if (binaryWarned) return;",
          "30:   binaryWarned = true;",
          "31:   console.error('The binary buffer encoding is deprecated.');",
          "32: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81:       return this.asciiSlice(start, end);",
          "83:     case 'binary':",
          "85:       return this.binarySlice(start, end);",
          "87:     case 'base64':",
          "",
          "[Removed Lines]",
          "84:       binaryWarn();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "168:       return this.asciiWrite(string, offset, length);",
          "170:     case 'binary':",
          "172:       return this.binaryWrite(string, offset, length);",
          "174:     case 'base64':",
          "",
          "[Removed Lines]",
          "171:       binaryWarn();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "370:       break;",
          "372:     case 'binary':",
          "374:       ret = this.parent.binaryWrite(string, this.offset + offset, length);",
          "375:       break;",
          "",
          "[Removed Lines]",
          "373:       binaryWarn();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "427:       return this.parent.asciiSlice(start, end);",
          "429:     case 'binary':",
          "431:       return this.parent.binarySlice(start, end);",
          "433:     case 'base64':",
          "",
          "[Removed Lines]",
          "430:       binaryWarn();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "540: };",
          "542: Buffer.prototype.binarySlice = function(start, end) {",
          "544:   return this.toString('binary', start, end);",
          "545: };",
          "",
          "[Removed Lines]",
          "543:   binaryWarn();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "553: };",
          "555: Buffer.prototype.binaryWrite = function(string, offset) {",
          "557:   return this.write(string, offset, 'binary');",
          "558: };",
          "",
          "[Removed Lines]",
          "556:   binaryWarn();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1111:   } else if (strcasecmp(*encoding, \"ucs-2\") == 0) {",
          "1112:     return UCS2;",
          "1113:   } else if (strcasecmp(*encoding, \"binary\") == 0) {",
          "1116:     return BINARY;",
          "1117:   } else if (strcasecmp(*encoding, \"hex\") == 0) {",
          "1118:     return HEX;",
          "1119:   } else if (strcasecmp(*encoding, \"raw\") == 0) {",
          "1120:     fprintf(stderr, \"'raw' (array of integers) has been removed. \"",
          "1122:     return BINARY;",
          "1123:   } else if (strcasecmp(*encoding, \"raws\") == 0) {",
          "1126:     return BINARY;",
          "1127:   } else {",
          "1128:     return _default;",
          "",
          "[Removed Lines]",
          "1114:     fprintf(stderr, \"The 'binary' buffer encoding is deprecated. \"",
          "1115:                     \"Use a Buffer object directly.\\n\");",
          "1121:                     \"Use a Buffer object directly.\\n\");",
          "1124:     fprintf(stderr, \"'raws' (array of integers) has been removed. \"",
          "1125:                     \"Use a Buffer object directly.\\n\");",
          "",
          "[Added Lines]",
          "1119:                     \"Use 'binary'.\\n\");",
          "1122:     fprintf(stderr, \"'raws' encoding has been renamed to 'binary'. \"",
          "1123:                     \"Please update your code.\\n\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1156:   HandleScope scope;",
          "1158:   if (val->IsArray()) {",
          "1161:     assert(0);",
          "1162:     return -1;",
          "1163:   }",
          "",
          "[Removed Lines]",
          "1159:     fprintf(stderr, \"'raw' (array of integers) has been removed. \"",
          "1160:                     \"Use a Buffer object directly.\\n\");",
          "",
          "[Added Lines]",
          "1157:     fprintf(stderr, \"'raw' encoding (array of integers) has been removed. \"",
          "1158:                     \"Use 'binary'.\\n\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1195:   if (val->IsArray()) {",
          "1198:     assert(0);",
          "1199:     return -1;",
          "1200:   }",
          "",
          "[Removed Lines]",
          "1196:     fprintf(stderr, \"'raw' (array of integers) has been removed. \"",
          "1197:                     \"Use a Buffer object directly.\\n\");",
          "",
          "[Added Lines]",
          "1194:     fprintf(stderr, \"'raw' encoding (array of integers) has been removed. \"",
          "1195:                     \"Use 'binary'.\\n\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "03c4aa6aefa31bbefe8c7d5f60af75409e753742",
      "candidate_info": {
        "commit_hash": "03c4aa6aefa31bbefe8c7d5f60af75409e753742",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/03c4aa6aefa31bbefe8c7d5f60af75409e753742",
        "files": [
          "common.gypi"
        ],
        "message": "build: don't set -mmacosx-version-min\n\nIt sets __MAC_OS_X_VERSION_MIN_REQUIRED__, which is what we use for feature\ndetection.",
        "before_after_code_files": [
          "common.gypi||common.gypi"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "common.gypi||common.gypi": [
          "File: common.gypi -> common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "143:           'GCC_THREADSAFE_STATICS': 'NO',           # -fno-threadsafe-statics",
          "144:           'GCC_VERSION': '4.2',",
          "145:           'GCC_WARN_ABOUT_MISSING_NEWLINE': 'YES',  # -Wnewline-eof",
          "147:           'PREBINDING': 'NO',                       # No -Wl,-prebind",
          "148:           'USE_HEADERMAP': 'NO',",
          "149:           'OTHER_CFLAGS': [",
          "",
          "[Removed Lines]",
          "146:           'MACOSX_DEPLOYMENT_TARGET': '10.4',       # -mmacosx-version-min=10.4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dceebbfa31a2b82bb534ba120ef9354a7d348f65",
      "candidate_info": {
        "commit_hash": "dceebbfa31a2b82bb534ba120ef9354a7d348f65",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/dceebbfa31a2b82bb534ba120ef9354a7d348f65",
        "files": [
          "doc/api/child_process.markdown",
          "doc/api/net.markdown",
          "lib/child_process.js",
          "lib/net.js",
          "test/simple/test-child-process-fork-net.js",
          "test/simple/test-child-process-fork-net2.js"
        ],
        "message": "child_process: allow sending a net Socket and Server object using child.send\n\nchild_process.fork() support sending native hander object, this patch add support for sending\nnet.Server and net.Socket object by converting the object to a native handle object and back\nto a useful object again.\n\nNote when sending a Socket there was emitted by a net Server object, the server.connections\nproperty becomes null, because it is no longer possible to known when it is destroyed.",
        "before_after_code_files": [
          "lib/child_process.js||lichild_process.js",
          "lib/net.js||linet.js",
          "test/simple/test-child-process-fork-net.js||test/simple/test-child-process-fork-net.js",
          "test/simple/test-child-process-fork-net2.js||test/simple/test-child-process-fork-net2.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/child_process.js||lichild_process.js": [
          "File: lib/child_process.js -> lichild_process.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: }",
          "57: function setupChannel(target, channel) {",
          "58:   target._channel = channel;",
          "60:   var jsonBuffer = '';",
          "61:   channel.buffering = false;",
          "62:   channel.onread = function(pool, offset, length, recvHandle) {",
          "66:     if (pool) {",
          "67:       jsonBuffer += pool.toString('ascii', offset, offset + length);",
          "",
          "[Removed Lines]",
          "64:     net._setSimultaneousAccepts(recvHandle);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "73:         var json = jsonBuffer.slice(start, i);",
          "74:         var message = JSON.parse(json);",
          "89:         start = i + 1;",
          "90:       }",
          "",
          "[Removed Lines]",
          "78:         if (message !== null &&",
          "79:             typeof message === 'object' &&",
          "80:             typeof message.cmd === 'string' &&",
          "81:             message.cmd.indexOf('NODE_') === 0) {",
          "82:           target.emit('internalMessage', message, recvHandle);",
          "83:         }",
          "85:         else {",
          "86:           target.emit('message', message, recvHandle);",
          "87:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "97:     }",
          "98:   };",
          "101:     if (typeof message === 'undefined') {",
          "102:       throw new TypeError('message cannot be undefined');",
          "103:     }",
          "",
          "[Removed Lines]",
          "100:   target.send = function(message, sendHandle) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "112:       return false;",
          "113:     }",
          "122:     if (!writeReq) {",
          "123:       var er = errnoException(errno, 'write', 'cannot write to IPC channel.');",
          "",
          "[Removed Lines]",
          "115:     var string = JSON.stringify(message) + '\\n';",
          "118:     net._setSimultaneousAccepts(sendHandle);",
          "120:     var writeReq = channel.writeUtf8String(string, sendHandle);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/net.js||linet.js": [
          "File: lib/net.js -> linet.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "352:   timers.unenroll(this);",
          "354:   if (this.server) {",
          "356:     this.server._emitCloseIfDrained();",
          "357:   }",
          "",
          "[Removed Lines]",
          "355:     this.server.connections--;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "800:     }",
          "801:   }",
          "804:   this.allowHalfOpen = options.allowHalfOpen || false;",
          "806:   this._handle = null;",
          "",
          "[Removed Lines]",
          "803:   this.connections = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "881:     return;",
          "882:   }",
          "884:   process.nextTick(function() {",
          "885:     self.emit('listening');",
          "886:   });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "970:     return;",
          "971:   }",
          "974:     clientHandle.close();",
          "975:     return;",
          "976:   }",
          "",
          "[Removed Lines]",
          "973:   if (self.maxConnections && self.connections >= self.maxConnections) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "984:   socket.resume();",
          "987:   socket.server = self;",
          "989:   DTRACE_NET_SERVER_CONNECTION(socket);",
          "",
          "[Removed Lines]",
          "986:   self.connections++;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1005:   this._handle = null;",
          "1006:   this._emitCloseIfDrained();",
          "1008:   return this;",
          "1009: };",
          "1011: Server.prototype._emitCloseIfDrained = function() {",
          "1012:   var self = this;",
          "1016:   process.nextTick(function() {",
          "1017:     self.emit('close');",
          "",
          "[Removed Lines]",
          "1014:   if (self._handle || self.connections) return;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1023:   throw new Error('This API is no longer supported. See child_process.fork');",
          "1024: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-child-process-fork-net.js||test/simple/test-child-process-fork-net.js": [
          "File: test/simple/test-child-process-fork-net.js -> test/simple/test-child-process-fork-net.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var assert = require('assert');",
          "23: var common = require('../common');",
          "24: var fork = require('child_process').fork;",
          "25: var net = require('net');",
          "28: function ProgressTracker(missing, callback) {",
          "29:   this.missing = missing;",
          "30:   this.callback = callback;",
          "31: }",
          "32: ProgressTracker.prototype.done = function() {",
          "33:   this.missing -= 1;",
          "34:   this.check();",
          "35: };",
          "36: ProgressTracker.prototype.check = function() {",
          "37:   if (this.missing === 0) this.callback();",
          "38: };",
          "40: if (process.argv[2] === 'child') {",
          "42:   var serverScope;",
          "44:   process.on('message', function onServer(msg, server) {",
          "45:     if (msg.what !== 'server') return;",
          "46:     process.removeListener('message', onServer);",
          "48:     serverScope = server;",
          "50:     server.on('connection', function(socket) {",
          "51:       console.log('CHILD: got connection');",
          "52:       process.send({what: 'connection'});",
          "53:       socket.destroy();",
          "54:     });",
          "57:     console.log('CHILD: server listening');",
          "58:     process.send({what: 'listening'});",
          "59:   });",
          "61:   process.on('message', function onClose(msg) {",
          "62:     if (msg.what !== 'close') return;",
          "63:     process.removeListener('message', onClose);",
          "65:     serverScope.on('close', function() {",
          "66:       process.send({what: 'close'});",
          "67:     });",
          "68:     serverScope.close();",
          "69:   });",
          "71:   process.on('message', function onSocket(msg, socket) {",
          "72:     if (msg.what !== 'socket') return;",
          "73:     process.removeListener('message', onSocket);",
          "74:     socket.end('echo');",
          "75:     console.log('CHILD: got socket');",
          "76:   });",
          "78:   process.send({what: 'ready'});",
          "79: } else {",
          "81:   var child = fork(process.argv[1], ['child']);",
          "83:   child.on('exit', function() {",
          "84:     console.log('CHILD: died');",
          "85:   });",
          "88:   var testServer = function(callback) {",
          "91:     var progress = new ProgressTracker(2, function() {",
          "92:       server.on('close', function() {",
          "93:         console.log('PARENT: server closed');",
          "94:         child.send({what: 'close'});",
          "95:       });",
          "96:       server.close();",
          "97:     });",
          "100:     var connections = new ProgressTracker(10, progress.done.bind(progress));",
          "101:     var closed = new ProgressTracker(10, progress.done.bind(progress));",
          "104:     var server = net.createServer();",
          "105:     server.on('connection', function(socket) {",
          "106:       console.log('PARENT: got connection');",
          "107:       socket.destroy();",
          "108:       connections.done();",
          "109:     });",
          "110:     server.on('listening', function() {",
          "111:       console.log('PARENT: server listening');",
          "112:       child.send({what: 'server'}, server);",
          "113:     });",
          "114:     server.listen(common.PORT);",
          "117:     var messageHandlers = function(msg) {",
          "119:       if (msg.what === 'listening') {",
          "121:         var socket;",
          "122:         for (var i = 0; i < 10; i++) {",
          "123:           socket = net.connect(common.PORT, function() {",
          "124:             console.log('CLIENT: connected');",
          "125:           });",
          "126:           socket.on('close', function() {",
          "127:             closed.done();",
          "128:             console.log('CLIENT: closed');",
          "129:           });",
          "130:         }",
          "132:       } else if (msg.what === 'connection') {",
          "134:         connections.done();",
          "135:       } else if (msg.what === 'close') {",
          "136:         child.removeListener('message', messageHandlers);",
          "137:         callback();",
          "138:       }",
          "139:     };",
          "141:     child.on('message', messageHandlers);",
          "142:   };",
          "145:   var testSocket = function(callback) {",
          "149:     var server = net.createServer();",
          "150:     server.on('connection', function(socket) {",
          "151:       socket.on('close', function() {",
          "152:         console.log('CLIENT: socket closed');",
          "153:       });",
          "154:       child.send({what: 'socket'}, socket);",
          "155:     });",
          "156:     server.on('close', function() {",
          "157:       console.log('PARENT: server closed');",
          "158:       callback();",
          "159:     });",
          "160:     server.listen(common.PORT, function() {",
          "161:       var connect = net.connect(common.PORT);",
          "162:       var store = '';",
          "163:       connect.on('data', function(chunk) {",
          "164:         store += chunk;",
          "165:         console.log('CLIENT: got data');",
          "166:       });",
          "167:       connect.on('close', function() {",
          "168:         console.log('CLIENT: closed');",
          "169:         assert.equal(store, 'echo');",
          "170:         server.close();",
          "171:       });",
          "172:     });",
          "173:   };",
          "176:   var serverSucess = false;",
          "177:   var socketSucess = false;",
          "178:   child.on('message', function onReady(msg) {",
          "179:     if (msg.what !== 'ready') return;",
          "180:     child.removeListener('message', onReady);",
          "182:     testServer(function() {",
          "183:       serverSucess = true;",
          "185:       testSocket(function() {",
          "186:         socketSucess = true;",
          "187:         child.kill();",
          "188:       });",
          "189:     });",
          "191:   });",
          "193:   process.on('exit', function() {",
          "194:     assert.ok(serverSucess);",
          "195:     assert.ok(socketSucess);",
          "196:   });",
          "198: }",
          "",
          "---------------"
        ],
        "test/simple/test-child-process-fork-net2.js||test/simple/test-child-process-fork-net2.js": [
          "File: test/simple/test-child-process-fork-net2.js -> test/simple/test-child-process-fork-net2.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var assert = require('assert');",
          "23: var common = require('../common');",
          "24: var fork = require('child_process').fork;",
          "25: var net = require('net');",
          "27: if (process.argv[2] === 'child') {",
          "29:   var endMe = null;",
          "31:   process.on('message', function(m, socket) {",
          "32:     if (!socket) return;",
          "35:     socket[m](m);",
          "38:     if (m === 'write') {",
          "39:       endMe = socket;",
          "40:     }",
          "41:   });",
          "43:   process.on('message', function(m) {",
          "44:     if (m !== 'close') return;",
          "45:     endMe.end('end');",
          "46:     endMe = null;",
          "47:   });",
          "49:   process.on('disconnect', function() {",
          "50:     endMe.end('end');",
          "51:     endMe = null;",
          "52:   });",
          "54: } else {",
          "56:   var child1 = fork(process.argv[1], ['child']);",
          "57:   var child2 = fork(process.argv[1], ['child']);",
          "58:   var child3 = fork(process.argv[1], ['child']);",
          "60:   var server = net.createServer();",
          "62:   var connected = 0;",
          "63:   server.on('connection', function(socket) {",
          "64:     switch (connected) {",
          "65:       case 0:",
          "66:         child1.send('end', socket); break;",
          "67:       case 1:",
          "68:         child1.send('write', socket); break;",
          "69:       case 2:",
          "70:         child2.send('end', socket); break;",
          "71:       case 3:",
          "72:         child2.send('write', socket); break;",
          "73:       case 4:",
          "74:         child3.send('end', socket); break;",
          "75:       case 5:",
          "76:         child3.send('write', socket); break;",
          "77:     }",
          "78:     connected += 1;",
          "80:     if (connected === 6) {",
          "81:       closeServer();",
          "82:     }",
          "83:   });",
          "85:   var disconnected = 0;",
          "86:   server.on('listening', function() {",
          "88:     var j = 6, client;",
          "89:     while (j--) {",
          "90:       client = net.connect(common.PORT, '127.0.0.1');",
          "91:       client.on('close', function() {",
          "92:         disconnected += 1;",
          "93:       });",
          "94:     }",
          "95:   });",
          "97:   var closeEmitted = false;",
          "98:   server.on('close', function() {",
          "99:     closeEmitted = true;",
          "101:     child1.kill();",
          "102:     child2.kill();",
          "103:     child3.kill();",
          "104:   });",
          "106:   server.listen(common.PORT, '127.0.0.1');",
          "108:   var timeElasped = 0;",
          "109:   var closeServer = function() {",
          "110:     var startTime = Date.now();",
          "111:     server.on('close', function() {",
          "112:       timeElasped = Date.now() - startTime;",
          "113:     });",
          "115:     server.close();",
          "117:     setTimeout(function() {",
          "118:       child1.send('close');",
          "119:       child2.send('close');",
          "120:       child3.disconnect();",
          "121:     }, 200);",
          "122:   };",
          "124:   process.on('exit', function() {",
          "125:     assert.equal(disconnected, 6);",
          "126:     assert.equal(connected, 6);",
          "127:     assert.ok(closeEmitted);",
          "128:     assert.ok(timeElasped >= 190 && timeElasped <= 1000,",
          "129:               'timeElasped was not between 190 and 1000 ms');",
          "130:   });",
          "131: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}