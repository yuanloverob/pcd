{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "610b66267e41a32805ab54cbc580c5a6d5826cb4",
      "candidate_info": {
        "commit_hash": "610b66267e41a32805ab54cbc580c5a6d5826cb4",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/610b66267e41a32805ab54cbc580c5a6d5826cb4",
        "files": [
          "crypto/asn1/tasn_dec.c"
        ],
        "message": "Don't set choice selector on parse failure.\n\nDon't set choice selector on parse failure: this can pass unexpected\nvalues to the choice callback. Instead free up partial structure\ndirectly.\n\nCVE-2016-7053\n\nThanks to Tyler Nighswander of ForAllSecure for reporting this issue.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
        "before_after_code_files": [
          "crypto/asn1/tasn_dec.c||crypto/asn1/tasn_dec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/tasn_dec.c||crypto/asn1/tasn_dec.c": [
          "File: crypto/asn1/tasn_dec.c -> crypto/asn1/tasn_dec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "226:             if (ret == -1)",
          "227:                 continue;",
          "235:             if (ret > 0)",
          "236:                 break;",
          "238:             errtt = tt;",
          "239:             ASN1err(ASN1_F_ASN1_ITEM_EMBED_D2I, ERR_R_NESTED_ASN1_ERROR);",
          "240:             goto err;",
          "",
          "[Removed Lines]",
          "233:             asn1_set_choice_selector(pval, i, it);",
          "",
          "[Added Lines]",
          "235:             asn1_template_free(pchptr, tt);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "252:             goto err;",
          "253:         }",
          "255:         if (asn1_cb && !asn1_cb(ASN1_OP_D2I_POST, pval, it, NULL))",
          "256:             goto auxerr;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "253:         asn1_set_choice_selector(pval, i, it);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e597b2ba1165bb94e384f5cd37ea359f926a05cc",
      "candidate_info": {
        "commit_hash": "e597b2ba1165bb94e384f5cd37ea359f926a05cc",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/e597b2ba1165bb94e384f5cd37ea359f926a05cc",
        "files": [
          "apps/dsa.c",
          "apps/rsa.c"
        ],
        "message": "Support MSBLOB format if RC4 is disabled\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(cherry picked from commit b6c6898234a12b9c6cdaa8f16fb9156097649ad7)",
        "before_after_code_files": [
          "apps/dsa.c||apps/dsa.c",
          "apps/rsa.c||apps/rsa.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/dsa.c||apps/dsa.c": [
          "File: apps/dsa.c -> apps/dsa.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "213:             i = PEM_write_bio_DSAPrivateKey(out, dsa, enc,",
          "214:                                             NULL, 0, NULL, passout);",
          "215:         }",
          "217:     } else if (outformat == FORMAT_MSBLOB || outformat == FORMAT_PVK) {",
          "218:         EVP_PKEY *pk;",
          "219:         pk = EVP_PKEY_new();",
          "",
          "[Removed Lines]",
          "216: # if !defined(OPENSSL_NO_RSA) && !defined(OPENSSL_NO_RC4)",
          "",
          "[Added Lines]",
          "216: # ifndef OPENSSL_NO_RSA",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "225:                 goto end;",
          "226:             }",
          "227:             assert(private);",
          "228:             i = i2b_PVK_bio(out, pk, pvk_encr, 0, passout);",
          "229:         }",
          "230:         else if (pubin || pubout)",
          "231:             i = i2b_PublicKey_bio(out, pk);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "228: #  ifdef OPENSSL_NO_RC4",
          "229:             BIO_printf(bio_err, \"PVK format not supported\\n\");",
          "230:             EVP_PKEY_free(pk);",
          "231:             goto end;",
          "232: #  else",
          "234: #  endif",
          "",
          "---------------"
        ],
        "apps/rsa.c||apps/rsa.c": [
          "File: apps/rsa.c -> apps/rsa.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "263:             i = PEM_write_bio_RSAPrivateKey(out, rsa,",
          "264:                                             enc, NULL, 0, NULL, passout);",
          "265:         }",
          "267:     } else if (outformat == FORMAT_MSBLOB || outformat == FORMAT_PVK) {",
          "268:         EVP_PKEY *pk;",
          "269:         pk = EVP_PKEY_new();",
          "",
          "[Removed Lines]",
          "266: # if !defined(OPENSSL_NO_DSA) && !defined(OPENSSL_NO_RC4)",
          "",
          "[Added Lines]",
          "266: # ifndef OPENSSL_NO_DSA",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "275:                 goto end;",
          "276:             }",
          "277:             assert(private);",
          "278:             i = i2b_PVK_bio(out, pk, pvk_encr, 0, passout);",
          "279:         } else if (pubin || pubout) {",
          "280:             i = i2b_PublicKey_bio(out, pk);",
          "281:         } else {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "278: #  ifdef OPENSSL_NO_RC4",
          "279:             BIO_printf(bio_err, \"PVK format not supported\\n\");",
          "280:             EVP_PKEY_free(pk);",
          "281:             goto end;",
          "282: #  else",
          "284: #  endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7b7f21cd6033fd7226690640f789d1a8fb0b33b7",
      "candidate_info": {
        "commit_hash": "7b7f21cd6033fd7226690640f789d1a8fb0b33b7",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/7b7f21cd6033fd7226690640f789d1a8fb0b33b7",
        "files": [
          "util/shlib_wrap.sh.in"
        ],
        "message": "Remove automatic RPATH - adapt shlib_wrap.sh\n\nLooking for something starting with '-Wl,-rpath,' isn't good enough,\nas someone might give something like '-Wl,--enable-new-dtags,-rpath,/PATH'.\nLooking for ',-rpath,' should be safe enough.\n\nWe could remove the preloading stuff entirely, but just in case the\nuser has chosen to given RPATH setting arguments at configuration,\nwe'd better make sure testing will still work.  Fair warning, there\nare some configuration options that do not work with preloaded OpenSSL\nlibraries, such as the sanity checking ones.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 71d8ff1a8998da20db5ab8d4024c3d155b2f6733)",
        "before_after_code_files": [
          "util/shlib_wrap.sh.in||util/shlib_wrap.sh.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/shlib_wrap.sh.in||util/shlib_wrap.sh.in": [
          "File: util/shlib_wrap.sh.in -> util/shlib_wrap.sh.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:  ;;",
          "82: esac",
          "85: if [ -f \"$LIBCRYPTOSO\" -a -z \"$preload_var\" ]; then",
          "86:  # Following three lines are major excuse for isolating them into",
          "87:  # this wrapper script. Original reason for setting LD_PRELOAD",
          "",
          "[Removed Lines]",
          "84: {- output_off() if $config{ex_libs} !~ /(^|\\s)-Wl,-rpath,/; \"\"; -}",
          "",
          "[Added Lines]",
          "84: {- output_off() if $config{ex_libs} !~ /,-rpath,/; \"\"; -}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "97:  DYLD_INSERT_LIBRARIES=\"$LIBCRYPTOSO:$LIBSSLSO\" # MacOS X",
          "98:  export LD_PRELOAD _RLD_LIST DYLD_INSERT_LIBRARIES",
          "99: fi",
          "102: cmd=\"$1\"; [ -x \"$cmd\" ] || cmd=\"$cmd${EXE_EXT}\"",
          "103: shift",
          "",
          "[Removed Lines]",
          "100: {- output_on() if $config{ex_libs} !~ /(^|\\s)-Wl,-rpath,/; \"\"; -}",
          "",
          "[Added Lines]",
          "100: {- output_on() if $config{ex_libs} !~ /,-rpath,/; \"\"; -}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b17d15f07ab02b8449db096eaafa56e93b242dee",
      "candidate_info": {
        "commit_hash": "b17d15f07ab02b8449db096eaafa56e93b242dee",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b17d15f07ab02b8449db096eaafa56e93b242dee",
        "files": [
          "crypto/x509/t_x509.c"
        ],
        "message": "Fix undefined behaviour when printing the X509 serial\n\nFound by afl\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nGH: #2230\n(cherry picked from commit 244d7b288f2b9ab7f6a2dbf068eccd6e20d9eef6)",
        "before_after_code_files": [
          "crypto/x509/t_x509.c||crypto/x509/t_x509.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/x509/t_x509.c||crypto/x509/t_x509.c": [
          "File: crypto/x509/t_x509.c -> crypto/x509/t_x509.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:             l = -1;",
          "94:         }",
          "95:         if (l != -1) {",
          "96:             if (bs->type == V_ASN1_NEG_INTEGER) {",
          "98:                 neg = \"-\";",
          "99:             } else",
          "100:                 neg = \"\";",
          "102:                 goto err;",
          "103:         } else {",
          "104:             neg = (bs->type == V_ASN1_NEG_INTEGER) ? \" (Negative)\" : \"\";",
          "",
          "[Removed Lines]",
          "97:                 l = -l;",
          "101:             if (BIO_printf(bp, \" %s%lu (%s0x%lx)\\n\", neg, l, neg, l) <= 0)",
          "",
          "[Added Lines]",
          "96:             unsigned long ul;",
          "98:                 ul = 0 - (unsigned long)l;",
          "101:                 ul = l;",
          "103:             if (BIO_printf(bp, \" %s%lu (%s0x%lx)\\n\", neg, ul, neg, ul) <= 0)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "05361483e732b64e2e0a15da4e6ba97c3bbeeca0",
      "candidate_info": {
        "commit_hash": "05361483e732b64e2e0a15da4e6ba97c3bbeeca0",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/05361483e732b64e2e0a15da4e6ba97c3bbeeca0",
        "files": [
          "crypto/o_dir.c"
        ],
        "message": "Have the directory reader use the Unix API on VMS\n\nopendir(), readdir() and closedir() have been available on VMS since\nversion 7.0.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2707)\n(cherry picked from commit d8eaaf15356e1559f0f669b430b0d22b3514f8f0)",
        "before_after_code_files": [
          "crypto/o_dir.c||crypto/o_dir.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/o_dir.c||crypto/o_dir.c": [
          "File: crypto/o_dir.c -> crypto/o_dir.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: #include \"internal/o_dir.h\"",
          "25: #define LPDIR_H",
          "27: # include \"LPdir_unix.c\"",
          "28: #elif defined OPENSSL_SYS_VMS",
          "29: # include \"LPdir_vms.c\"",
          "",
          "[Removed Lines]",
          "26: #if defined OPENSSL_SYS_UNIX || defined DJGPP",
          "",
          "[Added Lines]",
          "26: #if defined OPENSSL_SYS_UNIX || defined DJGPP \\",
          "27:     (defined __VMS_VER && __VMS_VER >= 70000000)",
          "",
          "---------------"
        ]
      }
    }
  ]
}