{
  "cve_id": "CVE-2019-10896",
  "cve_desc": "In Wireshark 2.4.0 to 2.4.13, 2.6.0 to 2.6.7, and 3.0.0, the DOF dissector could crash. This was addressed in epan/dissectors/packet-dof.c by properly handling generated IID and OID bytes.",
  "repo": "wireshark/wireshark",
  "patch_hash": "b572b65e518937f43b630991c07369d8e0c79f53",
  "patch_info": {
    "commit_hash": "b572b65e518937f43b630991c07369d8e0c79f53",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/b572b65e518937f43b630991c07369d8e0c79f53",
    "files": [
      "epan/dissectors/packet-dof.c"
    ],
    "message": "DOF: Fix alias binding dissection.\n\nWhen adding generated IID and OID bytes to the tree, use a zero offset\nand length like we do elsewhere in the dissector.\n\nBug: 15617\nChange-Id: Id900f2aeeef7926706b417622d452ffa72949e8a\nReviewed-on: https://code.wireshark.org/review/32698\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot\nReviewed-by: Gerald Combs <gerald@wireshark.org>",
    "before_after_code_files": [
      "epan/dissectors/packet-dof.c||epan/dissectors/packet-dof.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-dof.c||epan/dissectors/packet-dof.c": [
      "File: epan/dissectors/packet-dof.c -> epan/dissectors/packet-dof.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1379:         key.sender = packet->sender_id;",
      "1380:         key.alias = alias;",
      "1381:         binding = oap_1_resolve_alias(&key);",
      "1382:         if (binding)",
      "1383:         {",
      "1384:             options_tree = proto_item_add_subtree(ti, ett_oap_1_alias);",
      "1388:             proto_item_set_generated(ti);",
      "1392:             proto_item_set_generated(ti);",
      "1394:             proto_tree_add_uint_format(options_tree, hf_oap_1_alias_frame,",
      "",
      "[Removed Lines]",
      "1387:             ti = proto_tree_add_bytes_format_value(tree, hf_oap_1_interfaceid, tvb, offset, alias_length, binding->iid, \"%s\", dof_iid_create_standard_string(binding->iid_length, binding->iid));",
      "1391:             ti = proto_tree_add_bytes_format_value(tree, hf_oap_1_objectid, tvb, offset, alias_length, binding->oid, \"%s\", dof_oid_create_standard_string(binding->oid_length, binding->oid));",
      "",
      "[Added Lines]",
      "1388:             ti = proto_tree_add_bytes_format_value(tree, hf_oap_1_interfaceid, tvb, 0, 0, binding->iid, \"%s\", dof_iid_create_standard_string(binding->iid_length, binding->iid));",
      "1392:             ti = proto_tree_add_bytes_format_value(tree, hf_oap_1_objectid, tvb, 0, 0, binding->oid, \"%s\", dof_oid_create_standard_string(binding->oid_length, binding->oid));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "651cd91b16b01e3da698b04542da376d946bc54b",
      "candidate_info": {
        "commit_hash": "651cd91b16b01e3da698b04542da376d946bc54b",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/651cd91b16b01e3da698b04542da376d946bc54b",
        "files": [
          "epan/dissectors/packet-dof.c"
        ],
        "message": "DOF: Fix alias binding dissection.\n\nWhen adding generated IID and OID bytes to the tree, use a zero offset\nand length like we do elsewhere in the dissector.\n\nBug: 15617\nChange-Id: Id900f2aeeef7926706b417622d452ffa72949e8a\n(cherry picked from commit ecf03bb37b3345e684890f7eee031cb17a247939)\nReviewed-on: https://code.wireshark.org/review/32723\nReviewed-by: Gerald Combs <gerald@wireshark.org>",
        "before_after_code_files": [
          "epan/dissectors/packet-dof.c||epan/dissectors/packet-dof.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-dof.c||epan/dissectors/packet-dof.c"
          ],
          "candidate": [
            "epan/dissectors/packet-dof.c||epan/dissectors/packet-dof.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-dof.c||epan/dissectors/packet-dof.c": [
          "File: epan/dissectors/packet-dof.c -> epan/dissectors/packet-dof.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1379:         key.sender = packet->sender_id;",
          "1380:         key.alias = alias;",
          "1381:         binding = oap_1_resolve_alias(&key);",
          "1382:         if (binding)",
          "1383:         {",
          "1384:             options_tree = proto_item_add_subtree(ti, ett_oap_1_alias);",
          "1388:             PROTO_ITEM_SET_GENERATED(ti);",
          "1392:             PROTO_ITEM_SET_GENERATED(ti);",
          "1394:             proto_tree_add_uint_format(options_tree, hf_oap_1_alias_frame,",
          "",
          "[Removed Lines]",
          "1387:             ti = proto_tree_add_bytes_format_value(tree, hf_oap_1_interfaceid, tvb, offset, alias_length, binding->iid, \"%s\", dof_iid_create_standard_string(binding->iid_length, binding->iid));",
          "1391:             ti = proto_tree_add_bytes_format_value(tree, hf_oap_1_objectid, tvb, offset, alias_length, binding->oid, \"%s\", dof_oid_create_standard_string(binding->oid_length, binding->oid));",
          "",
          "[Added Lines]",
          "1388:             ti = proto_tree_add_bytes_format_value(tree, hf_oap_1_interfaceid, tvb, 0, 0, binding->iid, \"%s\", dof_iid_create_standard_string(binding->iid_length, binding->iid));",
          "1392:             ti = proto_tree_add_bytes_format_value(tree, hf_oap_1_objectid, tvb, 0, 0, binding->oid, \"%s\", dof_oid_create_standard_string(binding->oid_length, binding->oid));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a35c64380b7b7595fdae4ad91902acb7eedb5264",
      "candidate_info": {
        "commit_hash": "a35c64380b7b7595fdae4ad91902acb7eedb5264",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/a35c64380b7b7595fdae4ad91902acb7eedb5264",
        "files": [
          "epan/dissectors/packet-dof.c"
        ],
        "message": "DOF: Fix alias binding dissection.\n\nWhen adding generated IID and OID bytes to the tree, use a zero offset\nand length like we do elsewhere in the dissector.\n\nBug: 15617\nChange-Id: Id900f2aeeef7926706b417622d452ffa72949e8a\n(cherry picked from commit ecf03bb37b3345e684890f7eee031cb17a247939)\nReviewed-on: https://code.wireshark.org/review/32723\nReviewed-by: Gerald Combs <gerald@wireshark.org>\n(cherry picked from commit 651cd91b16b01e3da698b04542da376d946bc54b)\nReviewed-on: https://code.wireshark.org/review/32724",
        "before_after_code_files": [
          "epan/dissectors/packet-dof.c||epan/dissectors/packet-dof.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-dof.c||epan/dissectors/packet-dof.c"
          ],
          "candidate": [
            "epan/dissectors/packet-dof.c||epan/dissectors/packet-dof.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-dof.c||epan/dissectors/packet-dof.c": [
          "File: epan/dissectors/packet-dof.c -> epan/dissectors/packet-dof.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1379:         key.sender = packet->sender_id;",
          "1380:         key.alias = alias;",
          "1381:         binding = oap_1_resolve_alias(&key);",
          "1382:         if (binding)",
          "1383:         {",
          "1384:             options_tree = proto_item_add_subtree(ti, ett_oap_1_alias);",
          "1388:             PROTO_ITEM_SET_GENERATED(ti);",
          "1392:             PROTO_ITEM_SET_GENERATED(ti);",
          "1394:             proto_tree_add_uint_format(options_tree, hf_oap_1_alias_frame,",
          "",
          "[Removed Lines]",
          "1387:             ti = proto_tree_add_bytes_format_value(tree, hf_oap_1_interfaceid, tvb, offset, alias_length, binding->iid, \"%s\", dof_iid_create_standard_string(binding->iid_length, binding->iid));",
          "1391:             ti = proto_tree_add_bytes_format_value(tree, hf_oap_1_objectid, tvb, offset, alias_length, binding->oid, \"%s\", dof_oid_create_standard_string(binding->oid_length, binding->oid));",
          "",
          "[Added Lines]",
          "1388:             ti = proto_tree_add_bytes_format_value(tree, hf_oap_1_interfaceid, tvb, 0, 0, binding->iid, \"%s\", dof_iid_create_standard_string(binding->iid_length, binding->iid));",
          "1392:             ti = proto_tree_add_bytes_format_value(tree, hf_oap_1_objectid, tvb, 0, 0, binding->oid, \"%s\", dof_oid_create_standard_string(binding->oid_length, binding->oid));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "441b6d9071d6341e58dfe10719375489c5b8e3f0",
      "candidate_info": {
        "commit_hash": "441b6d9071d6341e58dfe10719375489c5b8e3f0",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/441b6d9071d6341e58dfe10719375489c5b8e3f0",
        "files": [
          "epan/dissectors/packet-dof.c"
        ],
        "message": "DOF: Fix alias binding dissection.\n\nWhen adding generated IID and OID bytes to the tree, use a zero offset\nand length like we do elsewhere in the dissector.\n\nBug: 15617\nChange-Id: Id900f2aeeef7926706b417622d452ffa72949e8a\n(cherry picked from commit ecf03bb37b3345e684890f7eee031cb17a247939)\nReviewed-on: https://code.wireshark.org/review/32723\nReviewed-by: Gerald Combs <gerald@wireshark.org>\n(cherry picked from commit 651cd91b16b01e3da698b04542da376d946bc54b)\nReviewed-on: https://code.wireshark.org/review/32725",
        "before_after_code_files": [
          "epan/dissectors/packet-dof.c||epan/dissectors/packet-dof.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-dof.c||epan/dissectors/packet-dof.c"
          ],
          "candidate": [
            "epan/dissectors/packet-dof.c||epan/dissectors/packet-dof.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-dof.c||epan/dissectors/packet-dof.c": [
          "File: epan/dissectors/packet-dof.c -> epan/dissectors/packet-dof.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1391:         key.sender = packet->sender_id;",
          "1392:         key.alias = alias;",
          "1393:         binding = oap_1_resolve_alias(&key);",
          "1394:         if (binding)",
          "1395:         {",
          "1396:             options_tree = proto_item_add_subtree(ti, ett_oap_1_alias);",
          "1400:             PROTO_ITEM_SET_GENERATED(ti);",
          "1404:             PROTO_ITEM_SET_GENERATED(ti);",
          "1406:             proto_tree_add_uint_format(options_tree, hf_oap_1_alias_frame,",
          "",
          "[Removed Lines]",
          "1399:             ti = proto_tree_add_bytes_format_value(tree, hf_oap_1_interfaceid, tvb, offset, alias_length, binding->iid, \"%s\", dof_iid_create_standard_string(binding->iid_length, binding->iid));",
          "1403:             ti = proto_tree_add_bytes_format_value(tree, hf_oap_1_objectid, tvb, offset, alias_length, binding->oid, \"%s\", dof_oid_create_standard_string(binding->oid_length, binding->oid));",
          "",
          "[Added Lines]",
          "1400:             ti = proto_tree_add_bytes_format_value(tree, hf_oap_1_interfaceid, tvb, 0, 0, binding->iid, \"%s\", dof_iid_create_standard_string(binding->iid_length, binding->iid));",
          "1404:             ti = proto_tree_add_bytes_format_value(tree, hf_oap_1_objectid, tvb, 0, 0, binding->oid, \"%s\", dof_oid_create_standard_string(binding->oid_length, binding->oid));",
          "",
          "---------------"
        ]
      }
    }
  ]
}