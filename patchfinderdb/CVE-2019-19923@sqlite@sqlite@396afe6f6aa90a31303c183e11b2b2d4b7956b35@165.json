{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2fa619a3a86d554551f4fc6b868dcf0402e59dd5",
      "candidate_info": {
        "commit_hash": "2fa619a3a86d554551f4fc6b868dcf0402e59dd5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/2fa619a3a86d554551f4fc6b868dcf0402e59dd5",
        "files": [
          "ext/fts3/fts3_write.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid",
          "test/fts3corrupt4.test"
        ],
        "message": "Change a few assert() statements in fts3 that might fail if the database is corrupt.\n\nFossilOrigin-Name: db74a56af73d92b7a9d43ceda7e4540915c580c68a0266b4ddefb9e0d5cbcbeb",
        "before_after_code_files": [
          "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid",
          "test/fts3corrupt4.test||test/fts3corrupt4.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c": [
          "File: ext/fts3/fts3_write.c -> ext/fts3/fts3_write.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3235:   if( rc!=SQLITE_OK ) goto finished;",
          "3237:   assert( csr.nSegment>0 );",
          "3241:   memset(&filter, 0, sizeof(Fts3SegFilter));",
          "3242:   filter.flags = FTS3_SEGMENT_REQUIRE_POS;",
          "",
          "[Removed Lines]",
          "3238:   assert( iNewLevel>=getAbsoluteLevel(p, iLangid, iIndex, 0) );",
          "3239:   assert( iNewLevel<getAbsoluteLevel(p, iLangid, iIndex,FTS3_SEGDIR_MAXLEVEL) );",
          "",
          "[Added Lines]",
          "3238:   assert_fts3_nc( iNewLevel>=getAbsoluteLevel(p, iLangid, iIndex, 0) );",
          "3239:   assert_fts3_nc(",
          "3240:     iNewLevel<getAbsoluteLevel(p, iLangid, iIndex,FTS3_SEGDIR_MAXLEVEL)",
          "3241:   );",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 1969372ac72d25cc642a0268f4bb0ae4b59f2dca568c119ef61b67183b3a8bd9",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts3corrupt4.test||test/fts3corrupt4.test": [
          "File: test/fts3corrupt4.test -> test/fts3corrupt4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "3052:   SELECT rowid,a,c,snippet(t1,85101090932165,-1,10) FROM t1 WHERE a MATCH 'rtree';",
          "3053: } {1 {database disk image is malformed}}",
          "3055: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3055: #-------------------------------------------------------------------------",
          "3056: reset_db",
          "3057: do_test 20.0 {",
          "3058:   sqlite3 db {}",
          "3059:   db deserialize [decode_hexdb {",
          "3060: .open --hexdb",
          "3061: | size 28672 pagesize 4096 filename crash-afecd03c862e58.db",
          "3062: | page 1 offset 0",
          "3063: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "3064: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 07   .....@  ........",
          "3065: |     32: 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00 04   ................",
          "3066: |     96: 00 00 00 00 0d 0e ef 00 07 0d 4d 00 0f bd 0f 5f   ..........M...._",
          "3067: |    112: 0e f7 0e 06 0e bc 0d a4 0d 4d 00 00 01 00 00 00   .........M......",
          "3068: |   3392: 00 00 00 00 00 00 00 00 00 00 00 00 00 55 07 07   .............U..",
          "3069: |   3408: 17 1b 1b 01 81 01 74 61 62 6c 65 74 31 5f 73 74   ......tablet1_st",
          "3070: |   3424: 61 74 74 31 5f 73 74 61 74 07 43 52 45 41 54 45   att1_stat.CREATE",
          "3071: |   3440: 20 54 41 42 4c 45 20 27 74 31 5f 73 74 61 74 27    TABLE 't1_stat'",
          "3072: |   3456: 28 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   (id INTEGER PRIM",
          "3073: |   3472: 41 52 59 20 4b 45 59 2c 20 76 61 6c 75 65 20 42   ARY KEY, value B",
          "3074: |   3488: 4c 4f 42 29 60 06 07 17 21 21 01 81 0b 74 61 62   LOB)`...!!...tab",
          "3075: |   3504: 6c 65 74 31 5f 64 6f 63 73 69 7a 65 74 31 5f 64   let1_docsizet1_d",
          "3076: |   3520: 6f 63 73 69 7a 65 06 43 52 45 41 54 45 20 54 41   ocsize.CREATE TA",
          "3077: |   3536: 42 4c 45 20 27 74 31 5f 64 6f 63 73 69 7a 65 27   BLE 't1_docsize'",
          "3078: |   3552: 28 64 6f 63 69 64 20 49 4e 54 45 47 45 52 20 50   (docid INTEGER P",
          "3079: |   3568: 52 49 4d 41 52 59 30 4b 45 59 2c 20 73 69 7a 65   RIMARY0KEY, size",
          "3080: |   3584: 20 42 4c 4f 42 29 81 33 04 07 17 1f 1f 01 82 35    BLOB).3.......5",
          "3081: |   3600: 74 61 62 6c 65 74 31 5f 73 65 67 64 69 72 74 31   tablet1_segdirt1",
          "3082: |   3616: 5f 73 65 67 64 69 25 04 43 52 45 41 54 45 20 54   _segdi%.CREATE T",
          "3083: |   3632: 41 42 4c 45 20 27 74 31 5f 73 65 67 64 69 72 27   ABLE 't1_segdir'",
          "3084: |   3648: 28 6c 65 76 65 6c 20 49 4e 54 45 47 45 52 2c 69   (level INTEGER,i",
          "3085: |   3664: 64 78 20 49 4e 54 45 47 45 52 2c 73 74 61 72 74   dx INTEGER,start",
          "3086: |   3680: 5f 62 6c 6f 63 6b 20 49 4e 54 45 47 45 52 2c 6c   _block INTEGER,l",
          "3087: |   3696: 65 61 76 65 73 5f 65 6e 64 5f 62 6c 6f 63 6b 20   eaves_end_block",
          "3088: |   3712: 49 4d 54 45 47 45 52 2c 65 6e 64 5f 62 6c 6f 63   IMTEGER,end_bloc",
          "3089: |   3728: 6b 20 49 4e 54 45 47 45 52 2c 72 6f 6f 74 20 42   k INTEGER,root B",
          "3090: |   3744: 4c 4f 42 2c 50 52 49 4d 41 52 59 20 4b 45 59 28   LOB,PRIMARY KEY(",
          "3091: |   3760: 6c 65 76 65 6c 2c 20 69 64 78 29 29 31 05 06 17   level, idx))1...",
          "3092: |   3776: 45 1f 01 00 69 6e 64 65 78 73 71 6c 69 74 65 5f   E...indexsqlite_",
          "3093: |   3792: 61 75 74 6f 69 6e 64 65 78 5f 74 31 5f 73 65 67   autoindex_t1_seg",
          "3094: |   3808: 64 69 72 5f 31 74 31 5f 73 65 67 64 69 72 05 00   dir_1t1_segdir..",
          "3095: |   3824: 00 00 08 00 00 00 00 66 03 07 17 23 23 01 81 13   .......f...##...",
          "3096: |   3840: 74 61 62 6c 65 74 31 5f 73 65 67 6d 65 6e 74 73   tablet1_segments",
          "3097: |   3856: 74 31 5f 73 65 67 6d 65 6e 74 73 03 43 52 45 41   t1_segments.CREA",
          "3098: |   3872: 54 45 20 54 41 42 4c 45 20 27 74 31 5f 73 65 67   TE TABLE 't1_seg",
          "3099: |   3888: 6d 65 6e 74 73 27 28 62 6c 6f 63 6b 69 64 20 49   ments'(blockid I",
          "3100: |   3904: 4e 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b   NTEGER PRIMARY K",
          "3101: |   3920: 45 59 2c 20 62 6c 6f 63 6b 20 42 4c 4f 42 29 5c   EY, block BLOB).",
          "3102: |   3936: 02 07 17 21 21 01 81 03 74 61 62 6c 65 74 31 5f   ...!!...tablet1_",
          "3103: |   3952: 63 6f 6e 74 65 6e 74 74 31 5f 63 6f 6e 74 65 6e   contentt1_conten",
          "3104: |   3968: 74 02 43 52 45 41 54 45 20 54 41 42 4c 45 20 27   t.CREATE TABLE '",
          "3105: |   3984: 74 31 5f 63 6f 6e 74 65 6e 74 27 28 64 6f 63 69   t1_content'(doci",
          "3106: |   4000: 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d 41 52   d INTEGER PRIMAR",
          "3107: |   4016: 59 20 4b 45 59 2c 20 27 63 30 61 27 29 41 01 06   Y KEY, 'c0a')A..",
          "3108: |   4032: 17 11 11 08 71 74 61 62 6c 65 74 31 74 31 43 52   ....qtablet1t1CR",
          "3109: |   4048: 45 41 54 45 20 56 49 52 54 55 41 4c 20 54 41 42   EATE VIRTUAL TAB",
          "3110: |   4064: 4c 45 20 74 31 20 55 53 49 4e 47 20 66 74 73 34   LE t1 USING fts4",
          "3111: |   4080: 28 61 2c 70 72 65 66 69 78 3d 27 31 2c 32 27 29   (a,prefix='1,2')",
          "3112: | page 2 offset 4096",
          "3113: |      0: 0d 00 00 00 08 0e 1f 00 0f c4 0f 7c 0f 34 0f 07   ...........|.4..",
          "3114: |     16: 0e c3 0e 97 0e 63 0e 1f 00 00 00 00 00 00 00 00   .....c..........",
          "3115: |   3600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 42   ...............B",
          "3116: |   3616: 08 04 00 81 09 73 75 6e 74 20 69 6e 20 63 75 6c   .....sunt in cul",
          "3117: |   3632: 70 61 20 71 75 68 20 6f 66 66 69 63 69 61 20 64   pa quh officia d",
          "3118: |   3648: 65 73 65 72 75 6e 74 20 6d 6f 6c 6c 69 74 20 61   eserunt mollit a",
          "3119: |   3664: 6e 69 6d 20 69 64 20 65 73 74 20 6c 61 62 6f 72   nim id est labor",
          "3120: |   3680: 75 6d 2e 32 07 03 01 6b 45 78 63 65 70 74 65 75   um.2...kExcepteu",
          "3121: |   3696: 72 20 73 69 6e 74 20 6f 63 63 61 65 63 61 74 20   r sint occaecat",
          "3122: |   3712: 63 75 70 69 64 61 74 61 74 20 6e 6f 6e 20 70 72   cupidatat non pr",
          "3123: |   3728: 6f 69 64 65 6e 74 2c 2a 06 03 00 5b 63 69 6c 6c   oident,*...[cill",
          "3124: |   3744: 75 6d 20 64 6f 6c 6f 72 65 20 65 75 20 66 75 67   um dolore eu fug",
          "3125: |   3760: 69 61 74 20 6e 75 6c 6c 61 20 70 61 72 69 61 74   iat nulla pariat",
          "3126: |   3776: 75 72 2e 43 05 04 00 81 09 44 75 69 73 20 61 75   ur.C.....Duis au",
          "3127: |   3792: 74 65 20 69 72 75 72 65 20 64 6f 6c 6f 72 20 69   te irure dolor i",
          "3128: |   3808: 6e 20 72 65 70 72 65 68 65 6e 64 65 72 69 74 20   n reprehenderit",
          "3129: |   3824: 69 6e 20 76 6f 6c 75 70 74 61 74 65 20 76 65 6c   in voluptate vel",
          "3130: |   3840: 69 74 20 65 73 73 65 2b 14 03 00 5d 6e 69 73 69   it esse+...]nisi",
          "3131: |   3856: 20 75 74 20 61 6c 69 71 75 69 70 20 65 78 20 65    ut aliquip ex e",
          "3132: |   3872: 61 20 63 6f 6d 6d 6f 64 6f 20 63 6f 6e 73 65 71   a commodo conseq",
          "3133: |   3888: 75 61 74 2e 46 03 04 00 81 11 55 74 20 65 6e 69   uat.F.....Ut eni",
          "3134: |   3904: 6d 20 61 63 20 6d 69 6e 69 6d 20 76 65 6e 69 61   m ac minim venia",
          "3135: |   3920: 6d 2c 20 71 75 69 73 20 6e 6f 73 74 72 75 64 20   m, quis nostrud",
          "3136: |   3936: 65 78 65 72 63 69 74 61 74 69 6f 6e 20 75 6c 6c   exercitation ull",
          "3137: |   3952: 61 6d 63 6f 20 6c 61 62 6f 72 69 73 46 02 04 00   amco laborisF...",
          "3138: |   3968: 81 11 73 65 64 20 64 6f 20 65 69 75 73 6d 6f 64   ..sed do eiusmod",
          "3139: |   3984: 20 74 65 6d 70 6f 72 20 69 6e 63 69 64 69 64 75    tempor incididu",
          "3140: |   4000: 6e 74 20 75 74 20 6c 61 62 6f 72 65 20 65 74 20   nt ut labore et",
          "3141: |   4016: 64 6f 6c 6f 72 65 20 6d 61 67 6e 61 20 61 6c 69   dolore magna ali",
          "3142: |   4032: 71 75 61 2e 3a 01 03 00 7b 4c 6f 72 65 6d 20 69   qua.:....Lorem i",
          "3143: |   4048: 70 73 75 6d 20 64 6f 6c 6f 72 20 73 69 74 20 61   psum dolor sit a",
          "3144: |   4064: 6d 65 74 2c 20 63 6f 6e 73 65 63 74 65 74 75 72   met, consectetur",
          "3145: |   4080: 20 61 64 69 70 69 73 63 69 6e 67 20 65 6c 69 74    adipiscing elit",
          "3146: | page 3 offset 8192",
          "3147: |      0: 0d 00 00 00 00 10 00 00 00 00 00 00 00 00 00 00   ................",
          "3148: | page 4 offset 12288",
          "3149: |      0: 0d 00 00 00 03 0a a6 00 0d 57 0c 4a 0a a6 00 00   .........W.J....",
          "3150: |   2720: 00 00 00 00 00 00 83 21 03 08 02 08 08 08 17 86   .......!........",
          "3151: |   2736: 30 08 00 30 20 34 30 32 00 02 61 64 06 01 08 00   0..0 402..ad....",
          "3152: |   2752: 02 04 00 01 01 6c 06 02 0c 00 02 04 00 01 01 6d   .....l.........m",
          "3153: |   2768: 03 01 06 00 01 01 6e 03 08 09 00 01 01 75 03 05   ......n......u..",
          "3154: |   2784: 03 00 00 02 63 69 03 06 01 00 01 01 6f 07 01 07   ....ci......o...",
          "3155: |   2800: 00 03 07 03 00 01 01 75 06 07 05 00 01 04 00 00   .......u........",
          "3156: |   2816: 02 64 65 03 08 07 00 01 01 6f 0d 01 04 00 01 03   .de......o......",
          "3157: |   2832: 09 00 03 05 00 01 03 00 01 01 75 03 05 02 00 00   ..........u.....",
          "3158: |   2848: 02 65 61 03 04 06 00 01 01 69 03 02 04 00 01 01   .ea......i......",
          "3159: |   2864: 6c 03 01 09 00 01 01 6e 03 03 03 00 01 01 73 06   l......n......s.",
          "3160: |   2880: 05 0b 00 03 0b 00 01 01 74 03 02 09 00 01 01 75   ........t......u",
          "3161: |   2896: 03 06 04 00 01 01 78 09 03 09 00 01 05 00 03 02   ......x.........",
          "3162: |   2912: 00 00 02 66 75 03 06 05 00 00 02 69 64 03 08 0a   ...fu......id...",
          "3163: |   2928: 00 01 01 6e 0a 02 06 00 03 06 04 00 03 03 00 01   ...n............",
          "3164: |   2944: 01 70 03 01 13 00 01 01 72 03 05 04 00 00 02 6c   .p......r......l",
          "3165: |   2960: 61 09 02 08 00 01 0b 00 05 0c 00 01 01 6f 03 01   a............o..",
          "3166: |   2976: 02 00 00 02 6d 61 03 02 0b 00 01 01 69 03 03 05   ....ma......i...",
          "3167: |   2992: 00 01 01 6f 03 08 08 00 00 02 6e 69 03 04 02 00   ...o......ni....",
          "3168: |   3008: 01 01 6f 06 03 08 00 04 06 00 01 01 75 03 06 06   ..o.........u...",
          "3169: |   3024: 00 00 02 6f 63 03 07 04 00 01 01 66 03 08 06 00   ...oc......f....",
          "3170: |   3040: 00 02 70 61 03 06 07 00 01 01 72 03 07 07 00 00   ..pa......r.....",
          "3171: |   3056: 02 71 75 06 03 07 00 05 05 00 00 02 72 65 03 05   .qu.........re..",
          "3172: |   3072: 07 00 00 02 73 65 03 02 02 00 01 01 69 06 01 05   ....se......i...",
          "3173: |   3088: 00 06 03 00 01 01 75 03 08 02 00 00 02 74 65 03   ......u......te.",
          "3174: |   3104: 03 05 00 00 02 72 bc 03 03 0a 00 01 01 74 09 02   .....r.......t..",
          "3175: |   3120: 07 00 01 02 00 01 03 00 00 02 76 65 06 03 06 00   ..........ve....",
          "3176: |   3136: 02 0a 00 01 01 6f 03 05 09 00 82 0a 02 08 02 08   .....o..........",
          "3177: |   3152: 08 08 17 84 02 04 00 30 20 32 35 31 00 01 61 13   .......0 251..a.",
          "3178: |   3168: 01 06 04 00 01 0c 00 01 04 00 01 04 00 01 03 00   ................",
          "3179: |   3184: 03 09 00 00 01 63 10 01 07 00 03 07 03 00 02 02   .....c..........",
          "3180: |   3200: 00 01 05 00 01 04 00 00 01 64 11 01 04 00 01 03   .........d......",
          "3181: |   3216: 09 00 03 02 05 00 01 03 00 02 07 00 00 01 65 1b   ..............e.",
          "3182: |   3232: 01 09 00 01 04 07 00 01 03 08 00 01 05 03 00 01   ................",
          "3183: |   3248: 0b 00 01 04 00 01 02 00 01 0b 00 00 01 66 03 06   .............f..",
          "3184: |   3264: 05 00 00 01 69 0f 01 03 00 01 06 00 02 04 04 04   ....i...........",
          "3185: |   3280: 00 03 03 09 00 00 01 6c 0c 01 02 00 01 08 00 01   .......l........",
          "3186: |   3296: 0b 00 05 0c 00 00 01 6d 09 02 0b 00 01 05 00 05   .......m........",
          "3187: |   3312: 08 00 00 01 6e 0c 03 08 00 01 02 00 02 06 00 01   ....n...........",
          "3188: |   3328: 06 00 f0 01 6f 06 07 04 00 01 06 00 00 01 70 06   ....o.........p.",
          "3189: |   3344: 06 07 00 01 07 00 00 01 71 06 03 07 00 05 05 00   ........q.......",
          "3190: |   3360: 00 01 72 03 05 08 00 00 01 73 0c 01 05 00 01 02   ..r......s......",
          "3191: |   3376: 00 05 03 00 01 02 00 00 01 74 03 02 05 00 00 01   .........t......",
          "3192: |   3392: 75 0a 02 07 00 01 02 0a 00 01 03 00 00 01 76 07   u.............v.",
          "3193: |   3408: 03 06 00 02 09 03 00 85 26 01 08 08 08 08 08 17   ........&.......",
          "3194: |   3424: 8a 3e 30 21 36 36 35 00 02 61 64 03 03 04 00 02   .>0!665..ad.....",
          "3195: |   3440: 08 69 70 69 73 63 69 6e 67 03 01 08 00 01 05 6c   .ipiscing......l",
          "3196: |   3456: 69 71 75 61 03 02 0c 00 05 02 69 70 03 04 04 00   iqua......ip....",
          "3197: |   3472: 01 03 6d 65 74 03 01 06 00 01 03 6e 69 6d 03 08   ..met......nim..",
          "3198: |   3488: 09 00 01 03 75 74 65 03 05 03 00 00 06 63 69 6c   ....ute......cil",
          "3199: |   3504: 6c 75 6d 03 06 02 00 01 06 6f 6d 6d 6f 64 6f 03   lum......ommodo.",
          "3200: |   3520: 04 07 00 02 09 6e 73 65 63 74 65 74 75 72 03 01   .....nsectetur..",
          "3201: |   3536: 07 00 05 04 71 75 61 74 03 04 08 00 01 04 75 6c   ....quat......ul",
          "3202: |   3552: 70 61 03 08 04 00 02 07 70 69 64 61 74 61 74 03   pa......pidatat.",
          "3203: |   3568: 07 05 00 00 08 64 65 73 65 72 75 6e 74 03 08 07   .....deserunt...",
          "3204: |   3584: 00 01 01 6f 03 02 03 00 02 03 6c 6f 72 06 01 04   ...o......lor...",
          "3205: |   3600: 00 04 05 00 05 01 65 06 02 0a 00 04 03 00 01 03   ......e.........",
          "3206: |   3616: 75 69 73 03 05 02 00 00 02 65 61 03 04 06 00 01   uis......ea.....",
          "3207: |   3632: 06 69 75 73 6d 6f 64 03 02 04 00 01 03 6c 69 74   .iusmod......lit",
          "3208: |   3648: 03 01 09 00 01 03 6e 69 6d 03 03 03 00 01 03 73   ......nim......s",
          "3209: |   3664: 73 65 03 05 0b 00 02 01 74 03 08 0b 00 01 01 74   se......t......t",
          "3210: |   3680: 03 02 09 00 01 01 75 03 06 04 00 01 01 78 03 04   ......u......x..",
          "3211: |   3696: 05 00 02 07 63 65 70 74 65 75 72 03 07 02 00 02   ....cepteur.....",
          "3212: |   3712: 0a 65 72 63 69 74 61 74 69 6f 6e 03 03 09 00 00   .ercitation.....",
          "3213: |   3728: 06 66 75 67 69 61 74 03 06 05 00 00 02 69 64 03   .fugiat......id.",
          "3214: |   3744: 08 0a 00 01 01 6e 07 05 06 04 00 03 03 00 02 08   .....n..........",
          "3215: |   3760: 63 69 64 69 64 75 6e 74 03 02 06 00 01 04 70 73   cididunt......ps",
          "3216: |   3776: 75 6d 03 01 03 00 01 04 72 75 72 65 03 05 04 00   um......rure....",
          "3217: |   3792: 00 06 6c 61 62 6f 72 65 03 02 08 00 05 02 69 73   ..labore......is",
          "3218: |   3808: 03 03 0b 00 05 02 75 6d 03 08 0c 00 01 04 6f 72   ......um......or",
          "3219: |   3824: 65 6d 03 01 02 00 00 05 6d 61 67 6e 61 03 02 0b   em......magna...",
          "3220: |   3840: 00 01 04 69 6e 69 6d 03 03 05 00 01 05 6f 6c 6c   ...inim......oll",
          "3221: |   3856: 69 74 03 08 08 00 00 04 6e 69 73 69 03 04 02 00   it......nisi....",
          "3222: |   3872: 01 02 6f 6e 03 07 06 00 02 05 73 74 72 75 64 03   ..on......strud.",
          "3223: |   3888: 03 08 00 01 04 75 6c 6c 61 03 06 06 00 00 08 6f   .....ulla......o",
          "3224: |   3904: 63 63 61 65 63 61 74 03 07 04 00 01 06 66 66 69   ccaecat......ffi",
          "3225: |   3920: 63 69 61 03 08 06 00 00 08 70 61 72 69 61 74 75   cia......pariatu",
          "3226: |   3936: 72 03 06 07 00 01 07 72 6f 69 64 65 6e 74 03 07   r......roident..",
          "3227: |   3952: 07 00 00 03 71 75 69 03 08 05 00 03 01 73 03 03   ....qui......s..",
          "3228: |   3968: 07 00 00 0d 72 65 41 72 65 68 65 6e 64 65 72 69   ....reArehenderi",
          "3229: |   3984: 74 03 05 07 00 00 03 73 65 64 03 02 02 00 01 03   t......sed......",
          "3230: |   4000: 69 6e 74 03 07 03 00 02 01 74 03 01 05 00 01 03   int......t......",
          "3231: |   4016: 75 6e 74 03 08 02 00 00 06 74 65 6d 70 6f 72 03   unt......tempor.",
          "3232: |   4032: 02 05 00 00 07 75 6c 6c 61 6d 63 6f 03 03 0a 00   .....ullamco....",
          "3233: |   4048: 01 01 74 09 02 07 00 01 02 00 01 03 00 00 05 76   ..t............v",
          "3234: |   4064: 65 6c 69 74 03 05 0a 00 02 04 6e 69 61 6d 03 03   elit......niam..",
          "3235: |   4080: 06 00 01 08 70 6c 75 70 74 61 74 65 03 05 09 00   ....pluptate....",
          "3236: | page 5 offset 16384",
          "3237: |      0: 0a 00 00 00 03 0f eb 00 0f fb 0f f3 0f eb 00 00   ................",
          "3238: |   4064: 00 00 00 00 00 00 00 00 00 00 00 07 04 02 08 01   ................",
          "3239: |   4080: 08 00 03 07 04 0a 98 01 04 00 02 04 04 08 08 09   ................",
          "3240: | page 6 offset 20480",
          "3241: |      0: 0d 00 00 00 08 0f d0 00 0f fa 0f f4 0f ee 0f e8   ................",
          "3242: |     16: 0f e2 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "3243: |   4048: 04 08 03 00 0e 0b 04 07 03 00 0e 06 04 06 03 00   ................",
          "3244: |   4064: 0e 06 04 05 03 00 0e 0a 04 04 03 00 0e 07 04 03   ................",
          "3245: |   4080: 03 00 0e 0a 04 02 03 00 0e 0b 04 01 03 00 0e 08   ................",
          "3246: | page 7 offset 24576",
          "3247: |      0: 0d 00 00 00 01 0f f7 00 0f f7 00 00 00 00 00 00   ................",
          "3248: |   4080: 00 00 00 00 00 00 00 07 00 03 00 14 08 45 b5 03   .............E..",
          "3249: | end crash-afecd03c862e58.db",
          "3250: }]} {}",
          "3252: do_execsql_test 20.1 {",
          "3253:   BEGIN;",
          "3254:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT x+1 FROM c WHERE x<10)",
          "3255:     INSERT INTO t1(a) SELECT randomblob(3000) FROM c;",
          "3256: }",
          "3258: do_execsql_test 20.2 {",
          "3259:   INSERT INTO t1(t1) VALUES('optimize');",
          "3260: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "66373329881e0474de08707dcf07808672f1da02",
      "candidate_info": {
        "commit_hash": "66373329881e0474de08707dcf07808672f1da02",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/66373329881e0474de08707dcf07808672f1da02",
        "files": [
          "ext/fts3/fts3.c",
          "ext/fts3/fts3Int.h",
          "ext/fts5/fts5_main.c",
          "ext/fts5/test/fts5content.test",
          "manifest",
          "manifest.uuid",
          "test/fts4content.test"
        ],
        "message": "Prevent direct and indirect recursive content= options in fts3/4 and fts5.\n\nFossilOrigin-Name: 2eb997327c2c369c10b7835be80112d77cb2a7cfa9fe4d564042984c21d94698",
        "before_after_code_files": [
          "ext/fts3/fts3.c||ext/fts3/fts3.c",
          "ext/fts3/fts3Int.h||ext/fts3/fts3Int.h",
          "ext/fts5/fts5_main.c||ext/fts5/fts5_main.c",
          "ext/fts5/test/fts5content.test||ext/fts5/test/fts5content.test",
          "manifest.uuid||manifest.uuid",
          "test/fts4content.test||test/fts4content.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3.c||ext/fts3/fts3.c": [
          "File: ext/fts3/fts3.c -> ext/fts3/fts3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1612:   int iIdx;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1614:   if( p->bLock ){",
          "1615:     return SQLITE_ERROR;",
          "1616:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1809:     }else{",
          "1810:       zSql = sqlite3_mprintf(\"SELECT %s WHERE rowid = ?\", p->zReadExprlist);",
          "1811:       if( !zSql ) return SQLITE_NOMEM;",
          "1813:       sqlite3_free(zSql);",
          "1814:     }",
          "1815:     if( rc==SQLITE_OK ) pCsr->bSeekStmt = 1;",
          "",
          "[Removed Lines]",
          "1812:       rc = sqlite3_prepare_v3(p->db, zSql,-1,SQLITE_PREPARE_PERSISTENT,&pCsr->pStmt,0);",
          "",
          "[Added Lines]",
          "1816:       p->bLock++;",
          "1817:       rc = sqlite3_prepare_v3(",
          "1818:           p->db, zSql,-1,SQLITE_PREPARE_PERSISTENT,&pCsr->pStmt,0",
          "1819:       );",
          "1820:       p->bLock--;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1827:   if( pCsr->isRequireSeek ){",
          "1828:     rc = fts3CursorSeekStmt(pCsr);",
          "1829:     if( rc==SQLITE_OK ){",
          "1830:       sqlite3_bind_int64(pCsr->pStmt, 1, pCsr->iPrevId);",
          "1831:       pCsr->isRequireSeek = 0;",
          "1832:       if( SQLITE_ROW==sqlite3_step(pCsr->pStmt) ){",
          "1833:         return SQLITE_OK;",
          "1834:       }else{",
          "1835:         rc = sqlite3_reset(pCsr->pStmt);",
          "1836:         if( rc==SQLITE_OK && ((Fts3Table *)pCsr->base.pVtab)->zContentTbl==0 ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1838:       Fts3Table *pTab = (Fts3Table*)pCsr->base.pVtab;",
          "1839:       pTab->bLock++;",
          "1843:         pTab->bLock--;",
          "1846:         pTab->bLock--;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3218:   int rc;",
          "3219:   Fts3Cursor *pCsr = (Fts3Cursor *)pCursor;",
          "3220:   if( pCsr->eSearch==FTS3_DOCID_SEARCH || pCsr->eSearch==FTS3_FULLSCAN_SEARCH ){",
          "3221:     if( SQLITE_ROW!=sqlite3_step(pCsr->pStmt) ){",
          "3222:       pCsr->isEof = 1;",
          "3223:       rc = sqlite3_reset(pCsr->pStmt);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3233:     Fts3Table *pTab = (Fts3Table*)pCursor->pVtab;",
          "3234:     pTab->bLock++;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3225:       pCsr->iPrevId = sqlite3_column_int64(pCsr->pStmt, 0);",
          "3226:       rc = SQLITE_OK;",
          "3227:     }",
          "3228:   }else{",
          "3229:     rc = fts3EvalNext((Fts3Cursor *)pCursor);",
          "3230:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3242:     pTab->bLock--;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3285:   UNUSED_PARAMETER(idxStr);",
          "3286:   UNUSED_PARAMETER(nVal);",
          "3288:   eSearch = (idxNum & 0x0000FFFF);",
          "3289:   assert( eSearch>=0 && eSearch<=(FTS3_FULLTEXT_SEARCH+p->nColumn) );",
          "3290:   assert( p->pSegments==0 );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3303:   if( p->bLock ){",
          "3304:     return SQLITE_ERROR;",
          "3305:   }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3356:       );",
          "3357:     }",
          "3358:     if( zSql ){",
          "3360:       sqlite3_free(zSql);",
          "3361:     }else{",
          "3362:       rc = SQLITE_NOMEM;",
          "",
          "[Removed Lines]",
          "3359:       rc = sqlite3_prepare_v3(p->db,zSql,-1,SQLITE_PREPARE_PERSISTENT,&pCsr->pStmt,0);",
          "",
          "[Added Lines]",
          "3378:       p->bLock++;",
          "3379:       rc = sqlite3_prepare_v3(",
          "3380:           p->db,zSql,-1,SQLITE_PREPARE_PERSISTENT,&pCsr->pStmt,0",
          "3381:       );",
          "3382:       p->bLock--;",
          "",
          "---------------"
        ],
        "ext/fts3/fts3Int.h||ext/fts3/fts3Int.h": [
          "File: ext/fts3/fts3Int.h -> ext/fts3/fts3Int.h"
        ],
        "ext/fts5/fts5_main.c||ext/fts5/fts5_main.c": [
          "File: ext/fts5/fts5_main.c -> ext/fts5/fts5_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "895:         break;",
          "896:       }",
          "899:         rc = sqlite3_step(pCsr->pStmt);",
          "900:         if( rc!=SQLITE_ROW ){",
          "901:           CsrFlagSet(pCsr, FTS5CSR_EOF);",
          "902:           rc = sqlite3_reset(pCsr->pStmt);",
          "903:         }else{",
          "904:           rc = SQLITE_OK;",
          "905:         }",
          "906:         break;",
          "907:     }",
          "908:   }",
          "",
          "[Removed Lines]",
          "898:       default:",
          "",
          "[Added Lines]",
          "898:       default: {",
          "899:         Fts5Config *pConfig = ((Fts5Table*)pCursor->pVtab)->pConfig;",
          "900:         pConfig->bLock++;",
          "902:         pConfig->bLock--;",
          "906:           if( rc!=SQLITE_OK ){",
          "907:             pCursor->pVtab->zErrMsg = sqlite3_mprintf(",
          "908:                 \"%s\", sqlite3_errmsg(pConfig->db)",
          "909:             );",
          "910:           }",
          "915:       }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1188:   int iIdxStr = 0;",
          "1189:   Fts5Expr *pExpr = 0;",
          "1191:   if( pCsr->ePlan ){",
          "1192:     fts5FreeCursorComponents(pCsr);",
          "1193:     memset(&pCsr->ePlan, 0, sizeof(Fts5Cursor) - ((u8*)&pCsr->ePlan-(u8*)pCsr));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1200:   if( pConfig->bLock ){",
          "1201:     pTab->p.base.zErrMsg = sqlite3_mprintf(",
          "1202:         \"recursively defined fts5 content table\"",
          "1203:     );",
          "1204:     return SQLITE_ERROR;",
          "1205:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1408:   }",
          "1410:   if( rc==SQLITE_OK && CsrFlagTest(pCsr, FTS5CSR_REQUIRE_CONTENT) ){",
          "1411:     assert( pCsr->pExpr );",
          "1412:     sqlite3_reset(pCsr->pStmt);",
          "1413:     sqlite3_bind_int64(pCsr->pStmt, 1, fts5CursorRowid(pCsr));",
          "1414:     rc = sqlite3_step(pCsr->pStmt);",
          "1415:     if( rc==SQLITE_ROW ){",
          "1416:       rc = SQLITE_OK;",
          "1417:       CsrFlagClear(pCsr, FTS5CSR_REQUIRE_CONTENT);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1427:     Fts5Table *pTab = (Fts5Table*)(pCsr->base.pVtab);",
          "1431:     pTab->pConfig->bLock++;",
          "1433:     pTab->pConfig->bLock--;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1419:       rc = sqlite3_reset(pCsr->pStmt);",
          "1420:       if( rc==SQLITE_OK ){",
          "1421:         rc = FTS5_CORRUPT;",
          "1422:       }",
          "1423:     }",
          "1424:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1441:       }else{",
          "1442:         pTab->base.zErrMsg = sqlite3_mprintf(",
          "1443:             \"%s\", sqlite3_errmsg(pTab->pConfig->db)",
          "1444:         );",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5content.test||ext/fts5/test/fts5content.test": [
          "File: ext/fts5/test/fts5content.test -> ext/fts5/test/fts5content.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "257: # Check that an fts5 table cannot be its own content table.",
          "258: #",
          "259: reset_db",
          "261:   CREATE VIRTUAL TABLE t1 USING fts5(a, c=t1 );",
          "262:   INSERT INTO t1( a ) VALUES('abc');",
          "263: }",
          "265:   SELECT * FROM t1;",
          "266: } {1 {recursively defined fts5 content table}}",
          "268:   SELECT * FROM t1('abc');",
          "269: } {1 {recursively defined fts5 content table}}",
          "271: finish_test",
          "",
          "[Removed Lines]",
          "260: do_execsql_test 7.1 {",
          "264: do_catchsql_test 7.2 {",
          "267: do_catchsql_test 7.3 {",
          "",
          "[Added Lines]",
          "260: do_execsql_test 7.1.1 {",
          "264: do_catchsql_test 7.1.2 {",
          "267: do_catchsql_test 7.1.3 {",
          "270: do_catchsql_test 7.1.4 {",
          "271:   SELECT count(*) FROM t1;",
          "272: } {1 {recursively defined fts5 content table}}",
          "273: do_catchsql_test 7.1.5 {",
          "274:   SELECT * FROM t1('abc') ORDER BY rank;",
          "275: } {1 {recursively defined fts5 content table}}",
          "277: reset_db",
          "278: do_execsql_test 7.2.1 {",
          "279:   CREATE VIRTUAL TABLE t1 USING fts5(a, c=t2 );",
          "280:   CREATE VIRTUAL TABLE t2 USING fts5(a, c=t1 );",
          "281:   INSERT INTO t1( a ) VALUES('abc');",
          "282: }",
          "283: do_catchsql_test 7.2.2 {",
          "284:   SELECT * FROM t1;",
          "285: } {1 {recursively defined fts5 content table}}",
          "286: do_catchsql_test 7.2.3 {",
          "287:   SELECT * FROM t1('abc');",
          "288: } {1 {recursively defined fts5 content table}}",
          "289: do_catchsql_test 7.2.4 {",
          "290:   SELECT count(*) FROM t1;",
          "291: } {1 {recursively defined fts5 content table}}",
          "292: do_catchsql_test 7.2.5 {",
          "293:   SELECT * FROM t1('abc') ORDER BY rank;",
          "294: } {1 {recursively defined fts5 content table}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 0d1055a5da8274a59f35170b1f9469597ce4c5a4c5e851a1b81d3be2ccd32871",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts4content.test||test/fts4content.test": [
          "File: test/fts4content.test -> test/fts4content.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "634:   CREATE VIRTUAL TABLE x1 USING fts4(content=x1);",
          "635: } {1 {vtable constructor called recursively: x1}}",
          "638: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "637: #---------------------------------------------------------------------------",
          "638: # Check that an fts4 table cannot be its own content table.",
          "639: #",
          "640: reset_db",
          "641: breakpoint",
          "642: do_execsql_test 12.1.1 {",
          "643:   CREATE VIRTUAL TABLE t1 USING fts4(a, content=t1 );",
          "644:   INSERT INTO t1(rowid, a) VALUES(1, 'abc');",
          "645: }",
          "646: do_catchsql_test 12.1.2 {",
          "647:   SELECT * FROM t1;",
          "648: } {1 {SQL logic error}}",
          "649: do_catchsql_test 12.1.3 {",
          "650:   SELECT * FROM t1('abc');",
          "651: } {1 {SQL logic error}}",
          "652: do_catchsql_test 12.1.4 {",
          "653:   SELECT count(*) FROM t1;",
          "654: } {1 {SQL logic error}}",
          "656: reset_db",
          "657: do_execsql_test 12.2.1 {",
          "658:   CREATE VIRTUAL TABLE t1 USING fts4(a, content=t2 );",
          "659:   CREATE VIRTUAL TABLE t2 USING fts4(a, content=t1 );",
          "660:   INSERT INTO t1(rowid, a) VALUES(1, 'abc');",
          "661: }",
          "662: do_catchsql_test 12.2.2 {",
          "663:   SELECT * FROM t1;",
          "664: } {1 {SQL logic error}}",
          "665: do_catchsql_test 12.2.3 {",
          "666:   SELECT * FROM t1('abc');",
          "667: } {1 {SQL logic error}}",
          "668: do_catchsql_test 12.2.4 {",
          "669:   SELECT count(*) FROM t1;",
          "670: } {1 {SQL logic error}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "885eeb676b5bf2b6cda8d3449f4eb268fac11ca5",
      "candidate_info": {
        "commit_hash": "885eeb676b5bf2b6cda8d3449f4eb268fac11ca5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/885eeb676b5bf2b6cda8d3449f4eb268fac11ca5",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/alter.c",
          "src/build.c",
          "src/sqliteInt.h",
          "test/altercol.test"
        ],
        "message": "Enhance the ALTER TABLE RENAME COLUMN feature so that it works on tables that have redundant UNIQUE and/or PRIMARY KEY constraints. Fix for ticket [bc8d94f0fbd633fd9a051e3]\n\nFossilOrigin-Name: f09aa3248e2b4a32ff5b5d37084cb2a27445322cb06a3354cef723f4f0b2cd34",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/alter.c||src/alter.c",
          "src/build.c||src/build.c",
          "src/sqliteInt.h||src/sqliteInt.h",
          "test/altercol.test||test/altercol.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ca67f2ec0e294384c397db438605df1b47aae5f348a8de94f97286997625d169",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/alter.c||src/alter.c": [
          "File: src/alter.c -> src/alter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "961:   rc = sqlite3RunParser(p, zSql, &zErr);",
          "962:   assert( p->zErrMsg==0 );",
          "963:   assert( rc!=SQLITE_OK || zErr==0 );",
          "965:   p->zErrMsg = zErr;",
          "966:   if( db->mallocFailed ) rc = SQLITE_NOMEM;",
          "967:   if( rc==SQLITE_OK",
          "",
          "[Removed Lines]",
          "964:   assert( (0!=p->pNewTable) + (0!=p->pNewIndex) + (0!=p->pNewTrigger)<2 );",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1182: static void renameParseCleanup(Parse *pParse){",
          "1183:   sqlite3 *db = pParse->db;",
          "1184:   if( pParse->pVdbe ){",
          "1185:     sqlite3VdbeFinalize(pParse->pVdbe);",
          "1186:   }",
          "1187:   sqlite3DeleteTable(db, pParse->pNewTable);",
          "1189:   sqlite3DeleteTrigger(db, pParse->pNewTrigger);",
          "1190:   sqlite3DbFree(db, pParse->zErrMsg);",
          "1191:   renameTokenFree(db, pParse->pRename);",
          "",
          "[Removed Lines]",
          "1188:   if( pParse->pNewIndex ) sqlite3FreeIndex(db, pParse->pNewIndex);",
          "",
          "[Added Lines]",
          "1183:   Index *pIdx;",
          "1188:   while( (pIdx = pParse->pNewIndex)!=0 ){",
          "1189:     pParse->pNewIndex = pIdx->pNext;",
          "1190:     sqlite3FreeIndex(db, pIdx);",
          "1191:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1296:         for(pIdx=sParse.pNewTable->pIndex; pIdx; pIdx=pIdx->pNext){",
          "1297:           sqlite3WalkExprList(&sWalker, pIdx->aColExpr);",
          "1298:         }",
          "1299:       }",
          "1301:       for(pFKey=sParse.pNewTable->pFKey; pFKey; pFKey=pFKey->pNextFrom){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1302:         for(pIdx=sParse.pNewIndex; pIdx; pIdx=pIdx->pNext){",
          "1303:           sqlite3WalkExprList(&sWalker, pIdx->aColExpr);",
          "1304:         }",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3467:           }",
          "3468:         }",
          "3469:         if( idxType==SQLITE_IDXTYPE_PRIMARYKEY ) pIdx->idxType = idxType;",
          "3470:         goto exit_create_index;",
          "3471:       }",
          "3472:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3470:         if( IN_RENAME_OBJECT ){",
          "3471:           pIndex->pNext = pParse->pNewIndex;",
          "3472:           pParse->pNewIndex = pIndex;",
          "3473:           pIndex = 0;",
          "3474:         }",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3140: #ifndef SQLITE_OMIT_VIRTUALTABLE",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3137:   Index *pNewIndex;         /* An index being constructed by CREATE INDEX.",
          "",
          "---------------"
        ],
        "test/altercol.test||test/altercol.test": [
          "File: test/altercol.test -> test/altercol.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "778:   {CREATE VIEW v2(e) AS SELECT coalesce(t2.c,t1.f) FROM t1, t2 WHERE t1.b=t2.d}",
          "779: }",
          "783: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "781: # 2019-01-08: https://www.sqlite.org/src/tktview/bc8d94f0fbd633fd9a051e3",
          "782: #",
          "783: # ALTER TABLE RENAME COLUMN does not work for tables that have redundant",
          "784: # UNIQUE constraints.",
          "785: #",
          "786: sqlite3 db :memory:",
          "787: do_execsql_test 20.100 {",
          "788:   CREATE TABLE t1(aaa,b,c,UNIQUE(aaA),PRIMARY KEY(aAa),UNIQUE(aAA));",
          "789:   ALTER TABLE t1 RENAME aaa TO bbb;",
          "790:   SELECT sql FROM sqlite_master WHERE name='t1';",
          "791: } {{CREATE TABLE t1(bbb,b,c,UNIQUE(bbb),PRIMARY KEY(bbb),UNIQUE(bbb))}}",
          "792: do_execsql_test 20.105 {",
          "793:   DROP TABLE t1;",
          "794:   CREATE TABLE t1(aaa,b,c,UNIQUE(aaA),PRIMARY KEY(aAa),UNIQUE(aAA))WITHOUT ROWID;",
          "795:   ALTER TABLE t1 RENAME aaa TO bbb;",
          "796:   SELECT sql FROM sqlite_master WHERE name='t1';",
          "797: } {{CREATE TABLE t1(bbb,b,c,UNIQUE(bbb),PRIMARY KEY(bbb),UNIQUE(bbb))WITHOUT ROWID}}",
          "798: do_execsql_test 20.110 {",
          "799:   DROP TABLE t1;",
          "800:   CREATE TABLE t1(aa UNIQUE,bb UNIQUE,cc UNIQUE,UNIQUE(aA),PRIMARY KEY(bB),UNIQUE(cC));",
          "801:   ALTER TABLE t1 RENAME aa TO xx;",
          "802:   ALTER TABLE t1 RENAME bb TO yy;",
          "803:   ALTER TABLE t1 RENAME cc TO zz;",
          "804:   SELECT sql FROM sqlite_master WHERE name='t1';",
          "805: } {{CREATE TABLE t1(xx UNIQUE,yy UNIQUE,zz UNIQUE,UNIQUE(xx),PRIMARY KEY(yy),UNIQUE(zz))}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c97001fd55d61b5214fe91b764795d8f04360dae",
      "candidate_info": {
        "commit_hash": "c97001fd55d61b5214fe91b764795d8f04360dae",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/c97001fd55d61b5214fe91b764795d8f04360dae",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/wapptest.tcl"
        ],
        "message": "Update wapptest.tcl so that it deletes extra files if the \"Keep files:\" checkbox is clear. Set it by default.\n\nFossilOrigin-Name: 09623cc4cc82e3c123d1fd5d88b2f4b50ec5f2cc7e579a7203258bf0c246a74f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/wapptest.tcl||test/wapptest.tcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 56604bb60a8ebac8d2854628d1b052d594d7effe14be8333977995dc07b65114",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/wapptest.tcl||test/wapptest.tcl": [
          "File: test/wapptest.tcl -> test/wapptest.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: #",
          "21: set G(platform) $::tcl_platform(os)-$::tcl_platform(machine)",
          "22: set G(test)     Normal",
          "25: set G(tcl)      [::tcl::pkgconfig get libdir,install]",
          "26: set G(jobs)     3",
          "27: set G(debug)    0",
          "",
          "[Removed Lines]",
          "23: set G(keep)     0",
          "24: set G(msvc)     0",
          "",
          "[Added Lines]",
          "23: set G(keep)     1",
          "24: set G(msvc)     [expr {$::tcl_platform(platform)==\"windows\"}]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "197:   }",
          "198: }",
          "200: proc slave_test_done {name rc} {",
          "201:   global G",
          "202:   set G(test.$name.done) [clock seconds]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "200: # This command is invoked once a slave process has finished running its",
          "201: # tests, successfully or otherwise. Parameter $name is the name of the",
          "202: # test, $rc the exit code returned by the slave process.",
          "203: #",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "209:   if {[file exists $G(test.$name.log)]} {",
          "210:     count_tests_and_errors $name $G(test.$name.log)",
          "211:   }",
          "212: }",
          "214: proc slave_fileevent {name} {",
          "215:   global G",
          "216:   set fd $G(test.$name.channel)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "217:   # If the \"keep files\" checkbox is clear, delete all files except for",
          "218:   # the executables and test logs. And any core file that is present.",
          "219:   if {$G(keep)==0} {",
          "220:     set keeplist {",
          "221:       testfixture testfixture.exe",
          "222:       sqlite3 sqlite3.exe",
          "223:       test.log test-out.txt",
          "224:       core",
          "225:     }",
          "226:     foreach f [glob -nocomplain [file join $G(test.$name.dir) *]] {",
          "227:       set t [file tail $f]",
          "228:       if {[lsearch $keeplist $t]<0} {",
          "229:         catch { file delete -force $f }",
          "230:       }",
          "231:     }",
          "232:   }",
          "235: # This is a fileevent callback invoked each time a file-descriptor that",
          "236: # connects this process to a slave process is readable.",
          "237: #",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "228:   do_some_stuff",
          "229: }",
          "231: proc wapptest_slave_script {} {",
          "232:   global G",
          "233:   set res {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "255: # Return the contents of the \"slave script\" - the script run by slave",
          "256: # processes to actually perform the test. It does two things:",
          "257: #",
          "258: #   1. Reads and [exec]s the contents of file wapptest_configure.sh.",
          "259: #   2. Reads and [exec]s the contents of file wapptest_make.sh.",
          "260: #",
          "261: # Step 1 is omitted if the test uses MSVC (which does not use configure).",
          "262: #",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "270:   foreach f [glob -nocomplain [file join $dir *]] {",
          "271:     catch { file delete -force $f }",
          "272:   }",
          "274:   # Write the configure command to wapptest_configure.sh. This file",
          "275:   # is empty if using MSVC - MSVC does not use configure.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "305:   set G(test.$name.dir) $dir",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "323096175ee537ccf20ff370868170ebc32a2c32",
      "candidate_info": {
        "commit_hash": "323096175ee537ccf20ff370868170ebc32a2c32",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/323096175ee537ccf20ff370868170ebc32a2c32",
        "files": [
          "main.mk",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Remove the vfslog.c extension from the testfixture target in main.mk, as that extension has no TCL bindings and is inaccessible.\n\nFossilOrigin-Name: d71f8bbc4efd8af935671c4e7626862d6e5a4c2e51527b9e82b2f0c94ddf6e93",
        "before_after_code_files": [
          "main.mk||main.mk",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "main.mk||main.mk": [
          "File: main.mk -> main.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "378:   $(TOP)/ext/misc/totype.c \\",
          "379:   $(TOP)/ext/misc/unionvtab.c \\",
          "380:   $(TOP)/ext/misc/wholenumber.c \\",
          "382:   $(TOP)/ext/misc/zipfile.c \\",
          "383:   $(TOP)/ext/fts5/fts5_tcl.c \\",
          "384:   $(TOP)/ext/fts5/fts5_test_mi.c \\",
          "",
          "[Removed Lines]",
          "381:   $(TOP)/ext/misc/vfslog.c \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 31eb27f438ad727b095a518bfe0f7ed37cb806fc1e6929b821eddcc6cc9de260",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}