{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9c7e44cddd76c19d8ac034dcce2da1ed978a6f02",
      "candidate_info": {
        "commit_hash": "9c7e44cddd76c19d8ac034dcce2da1ed978a6f02",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/9c7e44cddd76c19d8ac034dcce2da1ed978a6f02",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c",
          "test/fuzzdata8.db"
        ],
        "message": "Improved oversized cell detection when updating ptrmap pages in balance_nonroot().\n\nFossilOrigin-Name: aa61435a4c3800f023788081c1342ad6a05a41449a424fa6c039d5ca46072256",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 167b91df77fff1a84791f6ab5f72239b90475475be690a838248119b6dd312f0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7747:     MemPage *p = apOld[i];",
          "7748:     b.apEnd[k] = p->aDataEnd;",
          "7749:     b.ixNx[k] = cntOld[i];",
          "7750:     if( !leafData ){",
          "7751:       k++;",
          "7752:       b.apEnd[k] = pParent->aDataEnd;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7755:     if( k && b.ixNx[k]==b.ixNx[k-1] ){",
          "7757:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7978:   if( ISAUTOVACUUM ){",
          "7979:     MemPage *pOld;",
          "7980:     MemPage *pNew = pOld = apNew[0];",
          "7982:     int cntOldNext = pNew->nCell + pNew->nOverflow;",
          "7984:     int iNew = 0;",
          "7985:     int iOld = 0;",
          "7987:     for(i=0; i<b.nCell; i++){",
          "7988:       u8 *pCell = b.apCell[i];",
          "7991:         cntOldNext += pOld->nCell + pOld->nOverflow + !leafData;",
          "7993:       }",
          "7994:       if( i==cntNew[iNew] ){",
          "7995:         pNew = apNew[++iNew];",
          "",
          "[Removed Lines]",
          "7981:     u8 *aOld = pNew->aData;",
          "7983:     int usableSize = pBt->usableSize;",
          "7989:       if( i==cntOldNext ){",
          "7990:         pOld = (++iOld)<nNew ? apNew[iOld] : apOld[iOld];",
          "7992:         aOld = pOld->aData;",
          "",
          "[Added Lines]",
          "7995:       while( i==cntOldNext ){",
          "7996:         iOld++;",
          "7997:         assert( iOld<nNew || iOld<nOld );",
          "7998:         pOld = iOld<nNew ? apNew[iOld] : apOld[iOld];",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8005:       if( iOld>=nNew",
          "8006:        || pNew->pgno!=aPgno[iOld]",
          "8008:       ){",
          "8009:         if( !leafCorrection ){",
          "8010:           ptrmapPut(pBt, get4byte(pCell), PTRMAP_BTREE, pNew->pgno, &rc);",
          "",
          "[Removed Lines]",
          "8007:        || !SQLITE_WITHIN(pCell,aOld,&aOld[usableSize])",
          "",
          "[Added Lines]",
          "8014:        || !SQLITE_WITHIN(pCell,pOld->aData,pOld->aDataEnd)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5ad1251a60ae792b58de473a0bd22e67224ea3ec",
      "candidate_info": {
        "commit_hash": "5ad1251a60ae792b58de473a0bd22e67224ea3ec",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/5ad1251a60ae792b58de473a0bd22e67224ea3ec",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c"
        ],
        "message": "Improved debugging output from the OP_MakeRecord opcode.\n\nFossilOrigin-Name: ac790729d9c8f8612936bab56dca6061408007bc2150ac8c7089132403d7f885",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5cd728fb6b3a70f795306d4d6e12151a4de327f801733a8558139e3cd76fe66a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2882:   if( zAffinity ){",
          "2883:     pRec = pData0;",
          "2884:     do{",
          "2886:       assert( zAffinity[0]==0 || pRec<=pLast );",
          "2887:     }while( zAffinity[0] );",
          "2888:   }",
          "",
          "[Removed Lines]",
          "2885:       applyAffinity(pRec++, *(zAffinity++), encoding);",
          "",
          "[Added Lines]",
          "2885:       applyAffinity(pRec, zAffinity[0], encoding);",
          "2886:       REGISTER_TRACE((int)(pRec-aMem), pRec);",
          "2887:       zAffinity++;",
          "2888:       pRec++;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d94d9e22895ba9226d26530ba492430de6b335c4",
      "candidate_info": {
        "commit_hash": "d94d9e22895ba9226d26530ba492430de6b335c4",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d94d9e22895ba9226d26530ba492430de6b335c4",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "New test cases in fuzzdata8.db.\n\nFossilOrigin-Name: 0fe3c3fd30294d15cdfe29e9c49f3c8968e864ec8a114282561642f75586ab09",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8d478cfb92fdeb87591403fe1713b290fee309a38b71abee0002012935d1db98",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "37eca05112b7d3d87325ea36fb4bca0f419c95f8",
      "candidate_info": {
        "commit_hash": "37eca05112b7d3d87325ea36fb4bca0f419c95f8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/37eca05112b7d3d87325ea36fb4bca0f419c95f8",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/wapptest.tcl"
        ],
        "message": "Tweaks to wapptest.tcl: Ensure that the \"Debug\" checkbox is disabled unless the app is in \"config\" state, and have Debug variants run \"test\" instead of \"fulltest\".\n\nFossilOrigin-Name: dd248c186a157b5ed60bbdae669b31237b8354c1a7e6ed64d377904043bd57ee",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/wapptest.tcl||test/wapptest.tcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 56b664185e3e56ad22e0c16a5b946fc8204d4d33221b6b4269d6d650dfd9969c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/wapptest.tcl||test/wapptest.tcl": [
          "File: test/wapptest.tcl -> test/wapptest.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "135:         regsub -all {fulltest[a-z]*} $xtarget test xtarget",
          "136:         if {$debug_idx<0} {",
          "137:           lappend G(test_array) [",
          "139:           ]",
          "140:         } else {",
          "141:           lappend G(test_array) [",
          "",
          "[Removed Lines]",
          "138:             dict create config $config-(Debug) target $target",
          "",
          "[Added Lines]",
          "138:             dict create config $config-(Debug) target $xtarget",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "608:   if {$script != \"config.js\"} {",
          "609:     wapp-subst {",
          "610:       var lElem = \\[\"control_platform\", \"control_test\",",
          "612:       \\];",
          "613:       lElem.forEach(function(e) {",
          "614:         var elem = document.getElementById(e);",
          "",
          "[Removed Lines]",
          "611:           \"control_tcl\", \"control_keep\", \"control_msvc\"",
          "",
          "[Added Lines]",
          "611:           \"control_tcl\", \"control_keep\", \"control_msvc\",",
          "612:           \"control_debug\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e4a9e4d0e57be6228936dc06936a7aa09e551d46",
      "candidate_info": {
        "commit_hash": "e4a9e4d0e57be6228936dc06936a7aa09e551d46",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e4a9e4d0e57be6228936dc06936a7aa09e551d46",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/parse.y",
          "test/altertab3.test"
        ],
        "message": "Have ALTER TABLE commands ignore the lhs of \"expr IN ()\" and \"expr NOT IN ()\" expressions, just as other queries do. Fix for [533010b8ca].\n\nFossilOrigin-Name: 71643deb6bbad4b4a511bfd43b32245b50a555b508b90f33adf0656ae53292c6",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/parse.y||src/parse.y",
          "test/altertab3.test||test/altertab3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 7078d77effc296c63c91ec032c866e2b320f081d58e57e9e83cc58373169bda3",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/parse.y||src/parse.y": [
          "File: src/parse.y -> src/parse.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "1188:     }else if( Y->nExpr==1 ){",
          "",
          "[Removed Lines]",
          "1182:       if( IN_RENAME_OBJECT==0 ){",
          "1183:         sqlite3ExprDelete(pParse->db, A);",
          "1184:         A = sqlite3ExprAlloc(pParse->db, TK_INTEGER,&sqlite3IntTokens[N],1);",
          "1185:       }else{",
          "1186:         A = sqlite3PExpr(pParse, TK_UPLUS, A, 0);",
          "1187:       }",
          "",
          "[Added Lines]",
          "1182:       sqlite3ExprDelete(pParse->db, A);",
          "1183:       A = sqlite3ExprAlloc(pParse->db, TK_INTEGER,&sqlite3IntTokens[N],1);",
          "",
          "---------------"
        ],
        "test/altertab3.test||test/altertab3.test": [
          "File: test/altertab3.test -> test/altertab3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "80: do_execsql_test 3.2 {",
          "81:   SELECT sql FROM sqlite_master WHERE name = 'v1'",
          "84: #-------------------------------------------------------------------------",
          "85: reset_db",
          "",
          "[Removed Lines]",
          "82: } {{CREATE VIEW v1 AS SELECT * FROM t1 WHERE a=1 OR (bbb IN ())}}",
          "",
          "[Added Lines]",
          "82: } {{CREATE VIEW v1 AS SELECT * FROM t1 WHERE a=1 OR (b IN ())}}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "189:   {CREATE INDEX i0 ON \"t1\"('1' IN ())}",
          "190: }",
          "193: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "192: do_execsql_test 8.2.1 {",
          "193:   CREATE TABLE t2 (c0);",
          "194:   CREATE INDEX i2 ON t2((LIKELIHOOD(c0, 100) IN ()));",
          "195:   ALTER TABLE t2 RENAME COLUMN c0 TO c1;",
          "196: }",
          "197: do_execsql_test 8.2.2 {",
          "198:   SELECT sql FROM sqlite_master WHERE tbl_name = 't2';",
          "199: } {",
          "200:   {CREATE TABLE t2 (c1)}",
          "201:   {CREATE INDEX i2 ON t2((LIKELIHOOD(c0, 100) IN ()))}",
          "202: }",
          "203: do_test 8.2.3 {",
          "204:   sqlite3 db2 test.db",
          "205:   db2 eval { INSERT INTO t2 VALUES (1), (2), (3) }",
          "206:   db close",
          "207: } {}",
          "",
          "---------------"
        ]
      }
    }
  ]
}