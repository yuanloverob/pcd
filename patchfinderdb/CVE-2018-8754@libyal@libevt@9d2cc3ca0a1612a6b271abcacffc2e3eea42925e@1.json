{
  "cve_id": "CVE-2018-8754",
  "cve_desc": "The libevt_record_values_read_event() function in libevt_record_values.c in libevt before 2018-03-17 does not properly check for out-of-bounds values of user SID data size, strings size, or data size. NOTE: the vendor has disputed this as described in libyal/libevt issue 5 on GitHub",
  "repo": "libyal/libevt",
  "patch_hash": "9d2cc3ca0a1612a6b271abcacffc2e3eea42925e",
  "patch_info": {
    "commit_hash": "9d2cc3ca0a1612a6b271abcacffc2e3eea42925e",
    "repo": "libyal/libevt",
    "commit_url": "https://github.com/libyal/libevt/commit/9d2cc3ca0a1612a6b271abcacffc2e3eea42925e",
    "files": [
      "configure.ac",
      "libevt.nuspec",
      "libevt/libevt_libfvalue.h",
      "libevt/libevt_record_values.c",
      "m4/libcdata.m4",
      "m4/libcsplit.m4",
      "m4/libfdata.m4",
      "runtests.sh"
    ],
    "message": "Applied updates and addition boundary checks for corrupted data",
    "before_after_code_files": [
      "configure.ac||configure.ac",
      "libevt.nuspec||libevt.nuspec",
      "libevt/libevt_libfvalue.h||libevt/libevt_libfvalue.h",
      "libevt/libevt_record_values.c||libevt/libevt_record_values.c",
      "m4/libcdata.m4||m4/libcdata.m4",
      "m4/libcsplit.m4||m4/libcsplit.m4",
      "m4/libfdata.m4||m4/libfdata.m4",
      "runtests.sh||runtests.sh"
    ]
  },
  "patch_diff": {
    "configure.ac||configure.ac": [
      "File: configure.ac -> configure.ac",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: AC_INIT(",
      "4:  [libevt],",
      "6:  [joachim.metz@gmail.com])",
      "8: AC_CONFIG_SRCDIR(",
      "",
      "[Removed Lines]",
      "5:  [20180125],",
      "",
      "[Added Lines]",
      "5:  [20180317],",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "48: dnl Check if wide character type should be enabled",
      "49: AX_COMMON_CHECK_ENABLE_WIDE_CHARACTER_TYPE",
      "51: dnl Check for type definitions",
      "52: AX_TYPES_CHECK_LOCAL",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "51: dnl Check if verbose output should be enabled",
      "52: AX_COMMON_CHECK_ENABLE_VERBOSE_OUTPUT",
      "54: dnl Check if debug output should be enabled",
      "55: AX_COMMON_CHECK_ENABLE_DEBUG_OUTPUT",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "146: dnl Check if evttools required headers and functions are available",
      "147: AX_EVTTOOLS_CHECK_LOCAL",
      "155: dnl Check if tests required headers and functions are available",
      "156: AX_TESTS_CHECK_LOCAL",
      "",
      "[Removed Lines]",
      "149: dnl Check if libevt should be build with verbose output",
      "150: AX_COMMON_CHECK_ENABLE_VERBOSE_OUTPUT",
      "152: dnl Check if libevt should be build with debug output",
      "153: AX_COMMON_CHECK_ENABLE_DEBUG_OUTPUT",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "libevt.nuspec||libevt.nuspec": [
      "File: libevt.nuspec -> libevt.nuspec",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: <package >",
      "3:   <metadata>",
      "4:     <id>libevt</id>",
      "6:     <authors>Joachim Metz</authors>",
      "7:     <owners>joachimmetz</owners>",
      "8:     <licenseUrl>https://raw.githubusercontent.com/libyal/libevt/master/COPYING</licenseUrl>",
      "",
      "[Removed Lines]",
      "5:     <version>20180125</version>",
      "",
      "[Added Lines]",
      "5:     <version>20180317</version>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "10:     <requireLicenseAcceptance>false</requireLicenseAcceptance>",
      "11:     <title>libevt</title>",
      "12:     <description>Library to access the Windows Event Log (EVT) format</description>",
      "14:     <copyright>Copyright (C) 2011-2018</copyright>",
      "15:     <tags>native</tags>",
      "16:   </metadata>",
      "",
      "[Removed Lines]",
      "13:     <releaseNotes>Release of libevt 20180125</releaseNotes>",
      "",
      "[Added Lines]",
      "13:     <releaseNotes>Release of libevt 20180317</releaseNotes>",
      "",
      "---------------"
    ],
    "libevt/libevt_libfvalue.h||libevt/libevt_libfvalue.h": [
      "File: libevt/libevt_libfvalue.h -> libevt/libevt_libfvalue.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "29: #if defined( HAVE_LOCAL_LIBFVALUE )",
      "31: #include <libfvalue_codepage.h>",
      "32: #include <libfvalue_definitions.h>",
      "33: #include <libfvalue_floating_point.h>",
      "34: #include <libfvalue_integer.h>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "32: #include <libfvalue_data_handle.h>",
      "",
      "---------------"
    ],
    "libevt/libevt_record_values.c||libevt/libevt_record_values.c": [
      "File: libevt/libevt_record_values.c -> libevt/libevt_record_values.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1157:  }",
      "1158:  if( user_sid_size != 0 )",
      "1159:  {",
      "1160:   if( libfvalue_value_type_initialize(",
      "1161:        &( record_values->user_security_identifier ),",
      "1162:        LIBFVALUE_VALUE_TYPE_NT_SECURITY_IDENTIFIER,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1160:   if( user_sid_size > ( ( record_data_size - 4 ) - user_sid_offset ) )",
      "1161:   {",
      "1162:    libcerror_error_set(",
      "1163:     error,",
      "1164:     LIBCERROR_ERROR_DOMAIN_RUNTIME,",
      "1165:     LIBCERROR_RUNTIME_ERROR_VALUE_OUT_OF_BOUNDS,",
      "1166:     \"%s: user SID data size value out of bounds.\",",
      "1167:     function );",
      "1169:    goto on_error;",
      "1170:   }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1218:  }",
      "1219:  if( strings_size != 0 )",
      "1220:  {",
      "1221: #if defined( HAVE_DEBUG_OUTPUT )",
      "1222:   if( libcnotify_verbose != 0 )",
      "1223:   {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1232:   if( strings_size > ( ( record_data_size - 4 ) - strings_offset ) )",
      "1233:   {",
      "1234:    libcerror_error_set(",
      "1235:     error,",
      "1236:     LIBCERROR_ERROR_DOMAIN_RUNTIME,",
      "1237:     LIBCERROR_RUNTIME_ERROR_VALUE_OUT_OF_BOUNDS,",
      "1238:     \"%s: strings size value out of bounds.\",",
      "1239:     function );",
      "1241:    goto on_error;",
      "1242:   }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1285:  }",
      "1286:  if( data_size != 0 )",
      "1287:  {",
      "1288: #if defined( HAVE_DEBUG_OUTPUT )",
      "1289:   if( libcnotify_verbose != 0 )",
      "1290:   {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1310:   if( data_size > ( ( record_data_size - 4 ) - record_data_offset ) )",
      "1311:   {",
      "1312:    libcerror_error_set(",
      "1313:     error,",
      "1314:     LIBCERROR_ERROR_DOMAIN_RUNTIME,",
      "1315:     LIBCERROR_RUNTIME_ERROR_VALUE_OUT_OF_BOUNDS,",
      "1316:     \"%s: data size value out of bounds.\",",
      "1317:     function );",
      "1319:    goto on_error;",
      "1320:   }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1292:     \"%s: data:\\n\",",
      "1293:     function );",
      "1294:    libcnotify_print_data(",
      "1296:     (size_t) data_size,",
      "1297:     LIBCNOTIFY_PRINT_DATA_FLAG_GROUP_DATA );",
      "1298:   }",
      "",
      "[Removed Lines]",
      "1295:     &( record_data[ data_offset ] ),",
      "",
      "[Added Lines]",
      "1328:     &( record_data[ record_data_offset ] ),",
      "",
      "---------------"
    ],
    "m4/libcdata.m4||m4/libcdata.m4": [
      "File: m4/libcdata.m4 -> m4/libcdata.m4",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: dnl Checks for libcdata or required headers and functions",
      "2: dnl",
      "5: dnl Function to detect if libcdata is available",
      "6: dnl ac_libcdata_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
      "",
      "[Removed Lines]",
      "3: dnl Version: 20170904",
      "",
      "[Added Lines]",
      "3: dnl Version: 20180316",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "123:           [ac_cv_libcdata_dummy=yes],",
      "124:           [ac_cv_libcdata=no])",
      "126:         dnl List functions",
      "127:         AC_CHECK_LIB(",
      "128:           cdata,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "126:         dnl Balanced tree functions",
      "127:         AC_CHECK_LIB(",
      "128:           cdata,",
      "129:           libfdata_btree_initialize,",
      "130:           [ac_cv_libcdata_dummy=yes],",
      "131:           [ac_cv_libcdata=no])",
      "132:         AC_CHECK_LIB(",
      "133:           cdata,",
      "134:           libcdata_btree_free,",
      "135:           [ac_cv_libcdata_dummy=yes],",
      "136:           [ac_cv_libcdata=no])",
      "137:         AC_CHECK_LIB(",
      "138:           cdata,",
      "139:           libcdata_btree_get_number_of_values,",
      "140:           [ac_cv_libcdata_dummy=yes],",
      "141:           [ac_cv_libcdata=no])",
      "142:         AC_CHECK_LIB(",
      "143:           cdata,",
      "144:           libcdata_btree_get_value_by_index,",
      "145:           [ac_cv_libcdata_dummy=yes],",
      "146:           [ac_cv_libcdata=no])",
      "147:         AC_CHECK_LIB(",
      "148:           cdata,",
      "149:           libcdata_btree_get_value_by_value,",
      "150:           [ac_cv_libcdata_dummy=yes],",
      "151:           [ac_cv_libcdata=no])",
      "152:         AC_CHECK_LIB(",
      "153:           cdata,",
      "154:           libcdata_btree_insert_value,",
      "155:           [ac_cv_libcdata_dummy=yes],",
      "156:           [ac_cv_libcdata=no])",
      "157:         AC_CHECK_LIB(",
      "158:           cdata,",
      "159:           libcdata_btree_replace_value,",
      "160:           [ac_cv_libcdata_dummy=yes],",
      "161:           [ac_cv_libcdata=no])",
      "162:         AC_CHECK_LIB(",
      "163:           cdata,",
      "164:           libcdata_btree_remove_value,",
      "165:           [ac_cv_libcdata_dummy=yes],",
      "166:           [ac_cv_libcdata=no])",
      "",
      "---------------"
    ],
    "m4/libcsplit.m4||m4/libcsplit.m4": [
      "File: m4/libcsplit.m4 -> m4/libcsplit.m4",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: dnl Checks for libcsplit or required headers and functions",
      "2: dnl",
      "5: dnl Function to detect if libcsplit is available",
      "6: dnl ac_libcsplit_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
      "",
      "[Removed Lines]",
      "3: dnl Version: 20170903",
      "",
      "[Added Lines]",
      "3: dnl Version: 20180217",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "111:         AS_IF(",
      "112:           [test \"x$ac_cv_enable_wide_character_type\" != xno],",
      "113:           [AC_CHECK_LIB(",
      "115:             libcsplit_wide_string_split,",
      "116:             [ac_cv_libcsplit_dummy=yes],",
      "117:             [ac_cv_libcsplit=no])",
      "",
      "[Removed Lines]",
      "114:           csplit,",
      "",
      "[Added Lines]",
      "114:             csplit,",
      "",
      "---------------"
    ],
    "m4/libfdata.m4||m4/libfdata.m4": [
      "File: m4/libfdata.m4 -> m4/libfdata.m4",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: dnl Functions for libfdata",
      "2: dnl",
      "5: dnl Function to detect if libfdata is available",
      "6: dnl ac_libfdata_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
      "",
      "[Removed Lines]",
      "3: dnl Version: 20170905",
      "",
      "[Added Lines]",
      "3: dnl Version: 20180316",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "49:           [ac_cv_libfdata=no])",
      "51:         dnl Area functions",
      "54:         dnl Balanced tree functions",
      "55:         dnl TODO: add functions",
      "",
      "[Removed Lines]",
      "52:         dnl TODO: add functions",
      "",
      "[Added Lines]",
      "52:         AC_CHECK_LIB(",
      "53:           fdata,",
      "54:           libfdata_area_initialize,",
      "55:           [ac_cv_libfdata_dummy=yes],",
      "56:           [ac_cv_libfdata=no])",
      "57:         AC_CHECK_LIB(",
      "58:           fdata,",
      "59:           libfdata_area_free,",
      "60:           [ac_cv_libfdata_dummy=yes],",
      "61:           [ac_cv_libfdata=no])",
      "62:         AC_CHECK_LIB(",
      "63:           fdata,",
      "64:           libfdata_area_clone,",
      "65:           [ac_cv_libfdata_dummy=yes],",
      "66:           [ac_cv_libfdata=no])",
      "67:         AC_CHECK_LIB(",
      "68:           fdata,",
      "69:           libfdata_area_empty,",
      "70:           [ac_cv_libfdata_dummy=yes],",
      "71:           [ac_cv_libfdata=no])",
      "72:         AC_CHECK_LIB(",
      "73:           fdata,",
      "74:           libfdata_area_resize,",
      "75:           [ac_cv_libfdata_dummy=yes],",
      "76:           [ac_cv_libfdata=no])",
      "77:         AC_CHECK_LIB(",
      "78:           fdata,",
      "79:           libfdata_area_get_number_of_segments,",
      "80:           [ac_cv_libfdata_dummy=yes],",
      "81:           [ac_cv_libfdata=no])",
      "82:         AC_CHECK_LIB(",
      "83:           fdata,",
      "84:           libfdata_area_get_segment_by_index,",
      "85:           [ac_cv_libfdata_dummy=yes],",
      "86:           [ac_cv_libfdata=no])",
      "87:         AC_CHECK_LIB(",
      "88:           fdata,",
      "89:           libfdata_area_set_segment_by_index,",
      "90:           [ac_cv_libfdata_dummy=yes],",
      "91:           [ac_cv_libfdata=no])",
      "92:         AC_CHECK_LIB(",
      "93:           fdata,",
      "94:           libfdata_area_prepend_segment,",
      "95:           [ac_cv_libfdata_dummy=yes],",
      "96:           [ac_cv_libfdata=no])",
      "97:         AC_CHECK_LIB(",
      "98:           fdata,",
      "99:           libfdata_area_append_segment,",
      "100:           [ac_cv_libfdata_dummy=yes],",
      "101:           [ac_cv_libfdata=no])",
      "102:         AC_CHECK_LIB(",
      "103:           fdata,",
      "104:           libfdata_area_get_element_data_size,",
      "105:           [ac_cv_libfdata_dummy=yes],",
      "106:           [ac_cv_libfdata=no])",
      "107:         AC_CHECK_LIB(",
      "108:           fdata,",
      "109:           libfdata_area_get_element_value_at_offset,",
      "110:           [ac_cv_libfdata_dummy=yes],",
      "111:           [ac_cv_libfdata=no])",
      "112:         AC_CHECK_LIB(",
      "113:           fdata,",
      "114:           libfdata_area_set_element_value_at_offset,",
      "115:           [ac_cv_libfdata_dummy=yes],",
      "116:           [ac_cv_libfdata=no])",
      "117:         AC_CHECK_LIB(",
      "118:           fdata,",
      "119:           libfdata_area_get_size,",
      "120:           [ac_cv_libfdata_dummy=yes],",
      "121:           [ac_cv_libfdata=no])",
      "",
      "---------------"
    ],
    "runtests.sh||runtests.sh": [
      "File: runtests.sh -> runtests.sh",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #!/bin/bash",
      "2: # Script that runs the tests",
      "3: #",
      "6: EXIT_SUCCESS=0;",
      "7: EXIT_FAILURE=1;",
      "",
      "[Removed Lines]",
      "4: # Version: 20171210",
      "",
      "[Added Lines]",
      "4: # Version: 20180214",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "202: HAVE_ENABLE_WIDE_CHARACTER_TYPE=$?;",
      "204: echo \"${CONFIGURE_HELP}\" | grep -- '--with-zlib' > /dev/null;",
      "206: HAVE_WITH_ZLIB=$?;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "204: echo \"${CONFIGURE_HELP}\" | grep -- '--enable-verbose-output' > /dev/null;",
      "206: HAVE_ENABLE_VERBOSE_OUTPUT=$?;",
      "208: echo \"${CONFIGURE_HELP}\" | grep -- '--enable-debug-output' > /dev/null;",
      "210: HAVE_ENABLE_DEBUG_OUTPUT=$?;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "230:  exit ${EXIT_FAILURE};",
      "231: fi",
      "233: if test ${HAVE_WITH_ZLIB} -eq 0;",
      "234: then",
      "235:  # Test \"./configure && make && make check\" with fallback zlib implementation.",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "241: if test ${HAVE_ENABLE_VERBOSE_OUTPUT} -eq 0 && test ${HAVE_ENABLE_DEBUG_OUTPUT} -eq 0;",
      "242: then",
      "243:  # Test \"./configure && make && make check\" with verbose and debug output.",
      "245:  run_configure_make_check \"--enable-verbose-output --enable-debug-output\";",
      "246:  RESULT=$?;",
      "248:  if test ${RESULT} -ne ${EXIT_SUCCESS};",
      "249:  then",
      "250:   exit ${EXIT_FAILURE};",
      "251:  fi",
      "252: fi",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5606275eb8a92234738a0ba3b5693a21e448ef4c",
      "candidate_info": {
        "commit_hash": "5606275eb8a92234738a0ba3b5693a21e448ef4c",
        "repo": "libyal/libevt",
        "commit_url": "https://github.com/libyal/libevt/commit/5606275eb8a92234738a0ba3b5693a21e448ef4c",
        "files": [
          "appveyor.yml",
          "configure.ac",
          "msvscpp/libevt.sln",
          "runtests.sh",
          "tests/Makefile.am",
          "tests/evt_test_file.c",
          "tests/evt_test_io_handle.c",
          "tests/evt_test_record.c",
          "tests/evt_test_record_values.c",
          "tests/evt_test_support.c",
          "tests/test_evtexport.sh",
          "tests/test_evtinfo.ps1",
          "tests/test_evtinfo.sh",
          "tests/test_library.ps1"
        ],
        "message": "Worked on tests",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "msvscpp/libevt.sln||msvscpp/libevt.sln",
          "runtests.sh||runtests.sh",
          "tests/Makefile.am||tests/Makefile.am",
          "tests/evt_test_file.c||tests/evt_test_file.c",
          "tests/evt_test_io_handle.c||tests/evt_test_io_handle.c",
          "tests/evt_test_record.c||tests/evt_test_record.c",
          "tests/evt_test_record_values.c||tests/evt_test_record_values.c",
          "tests/evt_test_support.c||tests/evt_test_support.c",
          "tests/test_evtexport.sh||tests/test_evtexport.sh",
          "tests/test_evtinfo.ps1||tests/test_evtinfo.ps1",
          "tests/test_evtinfo.sh||tests/test_evtinfo.sh",
          "tests/test_library.ps1||tests/test_library.ps1"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "runtests.sh||runtests.sh"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "runtests.sh||runtests.sh"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_INIT(",
          "4:  [libevt],",
          "6:  [joachim.metz@gmail.com])",
          "8: AC_CONFIG_SRCDIR(",
          "",
          "[Removed Lines]",
          "5:  [20170825],",
          "",
          "[Added Lines]",
          "5:  [20170831],",
          "",
          "---------------"
        ],
        "msvscpp/libevt.sln||msvscpp/libevt.sln": [
          "File: msvscpp/libevt.sln -> msvscpp/libevt.sln",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:   {3FFB9C05-1145-45A7-9ADE-5C8D70FBD7CA} = {3FFB9C05-1145-45A7-9ADE-5C8D70FBD7CA}",
          "101:   {4C93BDD3-1804-47F3-9B34-F2DE0CAE1AE0} = {4C93BDD3-1804-47F3-9B34-F2DE0CAE1AE0}",
          "102:   {BC27FF34-C859-4A1A-95D6-FC89952E1910} = {BC27FF34-C859-4A1A-95D6-FC89952E1910}",
          "103:   {5304AD69-D449-4589-B2C9-E4607E56A51D} = {5304AD69-D449-4589-B2C9-E4607E56A51D}",
          "104:   {CEDF8919-00B2-4D8A-88CC-84ADB2D2FF89} = {CEDF8919-00B2-4D8A-88CC-84ADB2D2FF89}",
          "105:   {B9332DC8-7594-47DF-80C1-38922E0F4DFB} = {B9332DC8-7594-47DF-80C1-38922E0F4DFB}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:   {B86FB73A-4ACC-42DE-9545-586D93955B06} = {B86FB73A-4ACC-42DE-9545-586D93955B06}",
          "",
          "---------------"
        ],
        "runtests.sh||runtests.sh": [
          "File: runtests.sh -> runtests.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/bin/bash",
          "2: # Script that runs the tests",
          "3: #",
          "6: EXIT_SUCCESS=0;",
          "7: EXIT_FAILURE=1;",
          "",
          "[Removed Lines]",
          "4: # Version: 20170826",
          "",
          "[Added Lines]",
          "4: # Version: 20170828",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "135:  export LDFLAGS=\"--coverage\";",
          "137:  # Disable creating a shared library so we can hook memset.",
          "139:  RESULT=$?;",
          "141:  export CPPFLAGS=;",
          "",
          "[Removed Lines]",
          "138:  run_configure_make_check \"--enable-shared=no --enable-wide-character-type\";",
          "",
          "[Added Lines]",
          "138:  run_configure_make_check $@;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "188:  return ${EXIT_SUCCESS};",
          "189: }",
          "191: run_configure_make_check;",
          "192: RESULT=$?;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "191: CONFIGURE_HELP=`./configure --help`;",
          "193: echo \"${CONFIGURE_HELP}\" | grep -- '--enable-wide-character-type' > /dev/null;",
          "195: HAVE_ENABLE_WIDE_CHARACTER_TYPE=$?;",
          "197: echo \"${CONFIGURE_HELP}\" | grep -- '--with-zlib' > /dev/null;",
          "199: HAVE_WITH_ZLIB=$?;",
          "201: echo \"${CONFIGURE_HELP}\" | grep -- '--with-openssl' > /dev/null;",
          "203: HAVE_WITH_OPENSSL=$?;",
          "205: echo \"${CONFIGURE_HELP}\" | grep -- '--enable-python' > /dev/null;",
          "207: HAVE_ENABLE_PYTHON=$?;",
          "209: PYTHON_CONFIG=`whereis python-config | sed 's/^.*:[ ]*//' 2> /dev/null`;",
          "211: # Test \"./configure && make && make check\" without options.",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "196:  exit ${EXIT_FAILURE};",
          "197: fi",
          "203: if test ${HAVE_WITH_ZLIB} -eq 0;",
          "204: then",
          "205:  run_configure_make_check \"--with-zlib=no\";",
          "206:  RESULT=$?;",
          "",
          "[Removed Lines]",
          "199: ./configure --help | grep -- '--with-zlib' > /dev/null;",
          "201: HAVE_WITH_ZLIB=$?;",
          "",
          "[Added Lines]",
          "223:  # Test \"./configure && make && make check\" with fallback zlib implementation.",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "211:  fi",
          "212: fi",
          "218: if test ${HAVE_WITH_OPENSSL} -eq 0;",
          "219: then",
          "220:  run_configure_make_check \"--with-openssl=no\";",
          "221:  RESULT=$?;",
          "",
          "[Removed Lines]",
          "214: ./configure --help | grep -- '--with-openssl' > /dev/null;",
          "216: HAVE_WITH_OPENSSL=$?;",
          "",
          "[Added Lines]",
          "236:  # Test \"./configure && make && make check\" with fallback crypto implementation.",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "225:   exit ${EXIT_FAILURE};",
          "226:  fi",
          "228:  run_configure_make_check \"--enable-openssl-evp-cipher=no --enable-openssl-evp-md=no\";",
          "229:  RESULT=$?;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "246:  # Test \"./configure && make && make check\" with non-EVP openssl implementation.",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "234:  fi",
          "235: fi",
          "243: if test ${HAVE_ENABLE_PYTHON} -eq 0 && test -n \"${PYTHON_CONFIG}\";",
          "244: then",
          "245:  # Test with Python 2.",
          "",
          "[Removed Lines]",
          "237: ./configure --help | grep -- '--enable-python' > /dev/null;",
          "239: HAVE_ENABLE_PYTHON=$?;",
          "241: PYTHON_CONFIG=`whereis python-config | sed 's/^.*:[ ]*//' 2> /dev/null`;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "324:  fi",
          "325: fi",
          "327: if test ${HAVE_ENABLE_PYTHON} -eq 0 && test -n \"${PYTHON_CONFIG}\";",
          "328: then",
          "329:  # Issue with running the python bindings with asan disabled for now.",
          "334: fi",
          "336: run_configure_make_check_with_asan ${CONFIGURE_OPTIONS};",
          "",
          "[Removed Lines]",
          "330:  # CONFIGURE_OPTIONS=\"--enable-python\";",
          "331:  CONFIGURE_OPTIONS=\"\";",
          "332: else",
          "333:  CONFIGURE_OPTIONS=\"\";",
          "",
          "[Added Lines]",
          "341: CONFIGURE_OPTIONS=\"\";",
          "346:  # CONFIGURE_OPTIONS=\"${CONFIGURE_OPTIONS} --enable-python\";",
          "347:  CONFIGURE_OPTIONS=\"${CONFIGURE_OPTIONS}\";",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "341:  exit ${EXIT_FAILURE};",
          "342: fi",
          "345: RESULT=$?;",
          "347: if test ${RESULT} -ne ${EXIT_SUCCESS};",
          "",
          "[Removed Lines]",
          "344: run_configure_make_check_with_coverage;",
          "",
          "[Added Lines]",
          "358: CONFIGURE_OPTIONS=\"--enable-shared=no\";",
          "360: if test ${HAVE_ENABLE_WIDE_CHARACTER_TYPE};",
          "361: then",
          "362:  CONFIGURE_OPTIONS=\"${CONFIGURE_OPTIONS} --enable-wide-character-type\";",
          "363: fi",
          "365: run_configure_make_check_with_coverage ${CONFIGURE_OPTIONS};",
          "",
          "---------------"
        ],
        "tests/Makefile.am||tests/Makefile.am": [
          "File: tests/Makefile.am -> tests/Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "143:  @LIBCPATH_LIBADD@ \\",
          "144:  @LIBCFILE_LIBADD@ \\",
          "145:  @LIBUNA_LIBADD@ \\",
          "146:  @LIBCNOTIFY_LIBADD@ \\",
          "147:  @LIBCLOCALE_LIBADD@ \\",
          "148:  @LIBCDATA_LIBADD@ \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "146:  @LIBCSPLIT_LIBADD@ \\",
          "",
          "---------------"
        ],
        "tests/evt_test_file.c||tests/evt_test_file.c": [
          "File: tests/evt_test_file.c -> tests/evt_test_file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "605:   result,",
          "606:   1 );",
          "616:  result = libevt_file_free(",
          "617:            &file,",
          "",
          "[Removed Lines]",
          "608:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "609:          \"file\",",
          "610:          file );",
          "612:         EVT_TEST_ASSERT_IS_NULL(",
          "613:          \"error\",",
          "614:          error );",
          "",
          "[Added Lines]",
          "608:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "609:   \"file\",",
          "610:   file );",
          "612:  EVT_TEST_ASSERT_IS_NULL(",
          "613:   \"error\",",
          "614:   error );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "622:   result,",
          "623:   1 );",
          "",
          "[Removed Lines]",
          "625:         EVT_TEST_ASSERT_IS_NULL(",
          "626:          \"file\",",
          "627:          file );",
          "629:         EVT_TEST_ASSERT_IS_NULL(",
          "630:          \"error\",",
          "631:          error );",
          "",
          "[Added Lines]",
          "625:  EVT_TEST_ASSERT_IS_NULL(",
          "626:   \"file\",",
          "627:   file );",
          "629:  EVT_TEST_ASSERT_IS_NULL(",
          "630:   \"error\",",
          "631:   error );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "641:   result,",
          "642:   -1 );",
          "648:  libcerror_error_free(",
          "649:   &error );",
          "",
          "[Removed Lines]",
          "644:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "645:          \"error\",",
          "646:          error );",
          "",
          "[Added Lines]",
          "644:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "645:   \"error\",",
          "646:   error );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "659:   result,",
          "660:   -1 );",
          "666:  libcerror_error_free(",
          "667:   &error );",
          "",
          "[Removed Lines]",
          "662:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "663:          \"error\",",
          "664:          error );",
          "",
          "[Added Lines]",
          "662:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "663:   \"error\",",
          "664:   error );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "793:   result,",
          "794:   -1 );",
          "800:  libcerror_error_free(",
          "801:   &error );",
          "",
          "[Removed Lines]",
          "796:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "797:          \"error\",",
          "798:          error );",
          "",
          "[Added Lines]",
          "796:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "797:   \"error\",",
          "798:   error );",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "836:   result,",
          "837:   1 );",
          "843:  result = libevt_file_initialize(",
          "844:            &file,",
          "",
          "[Removed Lines]",
          "839:         EVT_TEST_ASSERT_IS_NULL(",
          "840:          \"error\",",
          "841:          error );",
          "",
          "[Added Lines]",
          "839:  EVT_TEST_ASSERT_IS_NULL(",
          "840:   \"error\",",
          "841:   error );",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "849:   result,",
          "850:   1 );",
          "",
          "[Removed Lines]",
          "852:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "853:          \"file\",",
          "854:          file );",
          "856:         EVT_TEST_ASSERT_IS_NULL(",
          "857:          \"error\",",
          "858:          error );",
          "",
          "[Added Lines]",
          "852:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "853:   \"file\",",
          "854:   file );",
          "856:  EVT_TEST_ASSERT_IS_NULL(",
          "857:   \"error\",",
          "858:   error );",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "870:   result,",
          "871:   1 );",
          "",
          "[Removed Lines]",
          "873:         EVT_TEST_ASSERT_IS_NULL(",
          "874:          \"error\",",
          "875:          error );",
          "",
          "[Added Lines]",
          "873:  EVT_TEST_ASSERT_IS_NULL(",
          "874:   \"error\",",
          "875:   error );",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "887:   result,",
          "888:   -1 );",
          "894:  libcerror_error_free(",
          "895:   &error );",
          "",
          "[Removed Lines]",
          "890:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "891:          \"error\",",
          "892:          error );",
          "",
          "[Added Lines]",
          "890:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "891:   \"error\",",
          "892:   error );",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "905:   result,",
          "906:   1 );",
          "916:  return( 1 );",
          "",
          "[Removed Lines]",
          "908:         EVT_TEST_ASSERT_IS_NULL(",
          "909:          \"file\",",
          "910:          file );",
          "912:         EVT_TEST_ASSERT_IS_NULL(",
          "913:          \"error\",",
          "914:          error );",
          "",
          "[Added Lines]",
          "908:  EVT_TEST_ASSERT_IS_NULL(",
          "909:   \"file\",",
          "910:   file );",
          "912:  EVT_TEST_ASSERT_IS_NULL(",
          "913:   \"error\",",
          "914:   error );",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "957:   result,",
          "958:   1 );",
          "964:  result = libevt_file_initialize(",
          "965:            &file,",
          "",
          "[Removed Lines]",
          "960:         EVT_TEST_ASSERT_IS_NULL(",
          "961:          \"error\",",
          "962:          error );",
          "",
          "[Added Lines]",
          "960:  EVT_TEST_ASSERT_IS_NULL(",
          "961:   \"error\",",
          "962:   error );",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "970:   result,",
          "971:   1 );",
          "",
          "[Removed Lines]",
          "973:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "974:          \"file\",",
          "975:          file );",
          "977:         EVT_TEST_ASSERT_IS_NULL(",
          "978:          \"error\",",
          "979:          error );",
          "",
          "[Added Lines]",
          "973:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "974:   \"file\",",
          "975:   file );",
          "977:  EVT_TEST_ASSERT_IS_NULL(",
          "978:   \"error\",",
          "979:   error );",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "991:   result,",
          "992:   1 );",
          "",
          "[Removed Lines]",
          "994:         EVT_TEST_ASSERT_IS_NULL(",
          "995:          \"error\",",
          "996:          error );",
          "",
          "[Added Lines]",
          "994:  EVT_TEST_ASSERT_IS_NULL(",
          "995:   \"error\",",
          "996:   error );",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1008:   result,",
          "1009:   -1 );",
          "1015:  libcerror_error_free(",
          "1016:   &error );",
          "",
          "[Removed Lines]",
          "1011:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "1012:          \"error\",",
          "1013:          error );",
          "",
          "[Added Lines]",
          "1011:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "1012:   \"error\",",
          "1013:   error );",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1026:   result,",
          "1027:   1 );",
          "1037:  return( 1 );",
          "",
          "[Removed Lines]",
          "1029:         EVT_TEST_ASSERT_IS_NULL(",
          "1030:          \"file\",",
          "1031:          file );",
          "1033:         EVT_TEST_ASSERT_IS_NULL(",
          "1034:          \"error\",",
          "1035:          error );",
          "",
          "[Added Lines]",
          "1029:  EVT_TEST_ASSERT_IS_NULL(",
          "1030:   \"file\",",
          "1031:   file );",
          "1033:  EVT_TEST_ASSERT_IS_NULL(",
          "1034:   \"error\",",
          "1035:   error );",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1073:   result,",
          "1074:   -1 );",
          "1080:  libcerror_error_free(",
          "1081:   &error );",
          "",
          "[Removed Lines]",
          "1076:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "1077:          \"error\",",
          "1078:          error );",
          "",
          "[Added Lines]",
          "1076:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "1077:   \"error\",",
          "1078:   error );",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1112:   result,",
          "1113:   1 );",
          "",
          "[Removed Lines]",
          "1115:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "1116:          \"file\",",
          "1117:          file );",
          "1119:         EVT_TEST_ASSERT_IS_NULL(",
          "1120:          \"error\",",
          "1121:          error );",
          "",
          "[Added Lines]",
          "1115:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "1116:   \"file\",",
          "1117:   file );",
          "1119:  EVT_TEST_ASSERT_IS_NULL(",
          "1120:   \"error\",",
          "1121:   error );",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1141:   result,",
          "1142:   1 );",
          "1148:  result = libevt_file_close(",
          "1149:            file,",
          "",
          "[Removed Lines]",
          "1144:         EVT_TEST_ASSERT_IS_NULL(",
          "1145:          \"error\",",
          "1146:          error );",
          "",
          "[Added Lines]",
          "1144:  EVT_TEST_ASSERT_IS_NULL(",
          "1145:   \"error\",",
          "1146:   error );",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1154:   result,",
          "1155:   0 );",
          "",
          "[Removed Lines]",
          "1157:         EVT_TEST_ASSERT_IS_NULL(",
          "1158:          \"error\",",
          "1159:          error );",
          "",
          "[Added Lines]",
          "1157:  EVT_TEST_ASSERT_IS_NULL(",
          "1158:   \"error\",",
          "1159:   error );",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1179:   result,",
          "1180:   1 );",
          "1186:  result = libevt_file_close(",
          "1187:            file,",
          "",
          "[Removed Lines]",
          "1182:         EVT_TEST_ASSERT_IS_NULL(",
          "1183:          \"error\",",
          "1184:          error );",
          "",
          "[Added Lines]",
          "1182:  EVT_TEST_ASSERT_IS_NULL(",
          "1183:   \"error\",",
          "1184:   error );",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1192:   result,",
          "1193:   0 );",
          "",
          "[Removed Lines]",
          "1195:         EVT_TEST_ASSERT_IS_NULL(",
          "1196:          \"error\",",
          "1197:          error );",
          "",
          "[Added Lines]",
          "1195:  EVT_TEST_ASSERT_IS_NULL(",
          "1196:   \"error\",",
          "1197:   error );",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1207:   result,",
          "1208:   1 );",
          "1218:  return( 1 );",
          "",
          "[Removed Lines]",
          "1210:         EVT_TEST_ASSERT_IS_NULL(",
          "1211:          \"file\",",
          "1212:          file );",
          "1214:         EVT_TEST_ASSERT_IS_NULL(",
          "1215:          \"error\",",
          "1216:          error );",
          "",
          "[Added Lines]",
          "1210:  EVT_TEST_ASSERT_IS_NULL(",
          "1211:   \"file\",",
          "1212:   file );",
          "1214:  EVT_TEST_ASSERT_IS_NULL(",
          "1215:   \"error\",",
          "1216:   error );",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1252:   result,",
          "1253:   1 );",
          "",
          "[Removed Lines]",
          "1255:         EVT_TEST_ASSERT_IS_NULL(",
          "1256:          \"error\",",
          "1257:          error );",
          "",
          "[Added Lines]",
          "1255:  EVT_TEST_ASSERT_IS_NULL(",
          "1256:   \"error\",",
          "1257:   error );",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1267:   result,",
          "1268:   -1 );",
          "1274:  libcerror_error_free(",
          "1275:   &error );",
          "",
          "[Removed Lines]",
          "1270:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "1271:          \"error\",",
          "1272:          error );",
          "",
          "[Added Lines]",
          "1270:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "1271:   \"error\",",
          "1272:   error );",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1444:   result,",
          "1445:   -1 );",
          "1451:  libcerror_error_free(",
          "1452:   &error );",
          "",
          "[Removed Lines]",
          "1447:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "1448:          \"error\",",
          "1449:          error );",
          "",
          "[Added Lines]",
          "1447:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "1448:   \"error\",",
          "1449:   error );",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1486:   result,",
          "1487:   1 );",
          "1493:  return( 1 );",
          "",
          "[Removed Lines]",
          "1489:         EVT_TEST_ASSERT_IS_NULL(",
          "1490:          \"error\",",
          "1491:          error );",
          "",
          "[Added Lines]",
          "1489:  EVT_TEST_ASSERT_IS_NULL(",
          "1490:   \"error\",",
          "1491:   error );",
          "",
          "---------------"
        ],
        "tests/evt_test_io_handle.c||tests/evt_test_io_handle.c": [
          "File: tests/evt_test_io_handle.c -> tests/evt_test_io_handle.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:   result,",
          "65:   1 );",
          "75:  result = libevt_io_handle_free(",
          "76:            &io_handle,",
          "",
          "[Removed Lines]",
          "67:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "68:          \"io_handle\",",
          "69:          io_handle );",
          "71:         EVT_TEST_ASSERT_IS_NULL(",
          "72:          \"error\",",
          "73:          error );",
          "",
          "[Added Lines]",
          "67:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "68:   \"io_handle\",",
          "69:   io_handle );",
          "71:  EVT_TEST_ASSERT_IS_NULL(",
          "72:   \"error\",",
          "73:   error );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81:   result,",
          "82:   1 );",
          "",
          "[Removed Lines]",
          "84:         EVT_TEST_ASSERT_IS_NULL(",
          "85:          \"io_handle\",",
          "86:          io_handle );",
          "88:         EVT_TEST_ASSERT_IS_NULL(",
          "89:          \"error\",",
          "90:          error );",
          "",
          "[Added Lines]",
          "84:  EVT_TEST_ASSERT_IS_NULL(",
          "85:   \"io_handle\",",
          "86:   io_handle );",
          "88:  EVT_TEST_ASSERT_IS_NULL(",
          "89:   \"error\",",
          "90:   error );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "100:   result,",
          "101:   -1 );",
          "107:  libcerror_error_free(",
          "108:   &error );",
          "",
          "[Removed Lines]",
          "103:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "104:          \"error\",",
          "105:          error );",
          "",
          "[Added Lines]",
          "103:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "104:   \"error\",",
          "105:   error );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "118:   result,",
          "119:   -1 );",
          "125:  libcerror_error_free(",
          "126:   &error );",
          "",
          "[Removed Lines]",
          "121:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "122:          \"error\",",
          "123:          error );",
          "",
          "[Added Lines]",
          "121:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "122:   \"error\",",
          "123:   error );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "252:   result,",
          "253:   -1 );",
          "259:  libcerror_error_free(",
          "260:   &error );",
          "",
          "[Removed Lines]",
          "255:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "256:          \"error\",",
          "257:          error );",
          "",
          "[Added Lines]",
          "255:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "256:   \"error\",",
          "257:   error );",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "291:   result,",
          "292:   1 );",
          "",
          "[Removed Lines]",
          "294:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "295:          \"io_handle\",",
          "296:          io_handle );",
          "298:         EVT_TEST_ASSERT_IS_NULL(",
          "299:          \"error\",",
          "300:          error );",
          "",
          "[Added Lines]",
          "294:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "295:   \"io_handle\",",
          "296:   io_handle );",
          "298:  EVT_TEST_ASSERT_IS_NULL(",
          "299:   \"error\",",
          "300:   error );",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "310:   result,",
          "311:   1 );",
          "",
          "[Removed Lines]",
          "313:         EVT_TEST_ASSERT_IS_NULL(",
          "314:          \"error\",",
          "315:          error );",
          "",
          "[Added Lines]",
          "313:  EVT_TEST_ASSERT_IS_NULL(",
          "314:   \"error\",",
          "315:   error );",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "325:   result,",
          "326:   -1 );",
          "332:  libcerror_error_free(",
          "333:   &error );",
          "",
          "[Removed Lines]",
          "328:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "329:          \"error\",",
          "330:          error );",
          "",
          "[Added Lines]",
          "328:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "329:   \"error\",",
          "330:   error );",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "343:   result,",
          "344:   1 );",
          "354:  return( 1 );",
          "",
          "[Removed Lines]",
          "346:         EVT_TEST_ASSERT_IS_NULL(",
          "347:          \"io_handle\",",
          "348:          io_handle );",
          "350:         EVT_TEST_ASSERT_IS_NULL(",
          "351:          \"error\",",
          "352:          error );",
          "",
          "[Added Lines]",
          "346:  EVT_TEST_ASSERT_IS_NULL(",
          "347:   \"io_handle\",",
          "348:   io_handle );",
          "350:  EVT_TEST_ASSERT_IS_NULL(",
          "351:   \"error\",",
          "352:   error );",
          "",
          "---------------"
        ],
        "tests/evt_test_record.c||tests/evt_test_record.c": [
          "File: tests/evt_test_record.c -> tests/evt_test_record.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:   result,",
          "56:   -1 );",
          "62:  libcerror_error_free(",
          "63:   &error );",
          "",
          "[Removed Lines]",
          "58:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "59:          \"error\",",
          "60:          error );",
          "",
          "[Added Lines]",
          "58:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "59:   \"error\",",
          "60:   error );",
          "",
          "---------------"
        ],
        "tests/evt_test_record_values.c||tests/evt_test_record_values.c": [
          "File: tests/evt_test_record_values.c -> tests/evt_test_record_values.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:   result,",
          "65:   1 );",
          "75:  result = libevt_record_values_free(",
          "76:            &record_values,",
          "",
          "[Removed Lines]",
          "67:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "68:          \"record_values\",",
          "69:          record_values );",
          "71:         EVT_TEST_ASSERT_IS_NULL(",
          "72:          \"error\",",
          "73:          error );",
          "",
          "[Added Lines]",
          "67:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "68:   \"record_values\",",
          "69:   record_values );",
          "71:  EVT_TEST_ASSERT_IS_NULL(",
          "72:   \"error\",",
          "73:   error );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81:   result,",
          "82:   1 );",
          "",
          "[Removed Lines]",
          "84:         EVT_TEST_ASSERT_IS_NULL(",
          "85:          \"record_values\",",
          "86:          record_values );",
          "88:         EVT_TEST_ASSERT_IS_NULL(",
          "89:          \"error\",",
          "90:          error );",
          "",
          "[Added Lines]",
          "84:  EVT_TEST_ASSERT_IS_NULL(",
          "85:   \"record_values\",",
          "86:   record_values );",
          "88:  EVT_TEST_ASSERT_IS_NULL(",
          "89:   \"error\",",
          "90:   error );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "100:   result,",
          "101:   -1 );",
          "107:  libcerror_error_free(",
          "108:   &error );",
          "",
          "[Removed Lines]",
          "103:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "104:          \"error\",",
          "105:          error );",
          "",
          "[Added Lines]",
          "103:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "104:   \"error\",",
          "105:   error );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "118:   result,",
          "119:   -1 );",
          "125:  libcerror_error_free(",
          "126:   &error );",
          "",
          "[Removed Lines]",
          "121:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "122:          \"error\",",
          "123:          error );",
          "",
          "[Added Lines]",
          "121:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "122:   \"error\",",
          "123:   error );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "252:   result,",
          "253:   -1 );",
          "259:  libcerror_error_free(",
          "260:   &error );",
          "",
          "[Removed Lines]",
          "255:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "256:          \"error\",",
          "257:          error );",
          "",
          "[Added Lines]",
          "255:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "256:   \"error\",",
          "257:   error );",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "292:   result,",
          "293:   1 );",
          "",
          "[Removed Lines]",
          "295:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "296:          \"source_record_values\",",
          "297:          source_record_values );",
          "299:         EVT_TEST_ASSERT_IS_NULL(",
          "300:          \"error\",",
          "301:          error );",
          "",
          "[Added Lines]",
          "295:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "296:   \"source_record_values\",",
          "297:   source_record_values );",
          "299:  EVT_TEST_ASSERT_IS_NULL(",
          "300:   \"error\",",
          "301:   error );",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "312:   result,",
          "313:   1 );",
          "323:  result = libevt_record_values_free(",
          "324:            &destination_record_values,",
          "",
          "[Removed Lines]",
          "315:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "316:          \"destination_record_values\",",
          "317:          destination_record_values );",
          "319:         EVT_TEST_ASSERT_IS_NULL(",
          "320:          \"error\",",
          "321:          error );",
          "",
          "[Added Lines]",
          "315:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "316:   \"destination_record_values\",",
          "317:   destination_record_values );",
          "319:  EVT_TEST_ASSERT_IS_NULL(",
          "320:   \"error\",",
          "321:   error );",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "329:   result,",
          "330:   1 );",
          "340:  result = libevt_record_values_clone(",
          "341:            &destination_record_values,",
          "",
          "[Removed Lines]",
          "332:         EVT_TEST_ASSERT_IS_NULL(",
          "333:          \"destination_record_values\",",
          "334:          destination_record_values );",
          "336:         EVT_TEST_ASSERT_IS_NULL(",
          "337:          \"error\",",
          "338:          error );",
          "",
          "[Added Lines]",
          "332:  EVT_TEST_ASSERT_IS_NULL(",
          "333:   \"destination_record_values\",",
          "334:   destination_record_values );",
          "336:  EVT_TEST_ASSERT_IS_NULL(",
          "337:   \"error\",",
          "338:   error );",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "347:   result,",
          "348:   1 );",
          "",
          "[Removed Lines]",
          "350:         EVT_TEST_ASSERT_IS_NULL(",
          "351:          \"destination_record_values\",",
          "352:          destination_record_values );",
          "354:         EVT_TEST_ASSERT_IS_NULL(",
          "355:          \"error\",",
          "356:          error );",
          "",
          "[Added Lines]",
          "350:  EVT_TEST_ASSERT_IS_NULL(",
          "351:   \"destination_record_values\",",
          "352:   destination_record_values );",
          "354:  EVT_TEST_ASSERT_IS_NULL(",
          "355:   \"error\",",
          "356:   error );",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "367:   result,",
          "368:   -1 );",
          "374:  libcerror_error_free(",
          "375:   &error );",
          "",
          "[Removed Lines]",
          "370:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "371:          \"error\",",
          "372:          error );",
          "",
          "[Added Lines]",
          "370:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "371:   \"error\",",
          "372:   error );",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "385:   result,",
          "386:   1 );",
          "396:  return( 1 );",
          "",
          "[Removed Lines]",
          "388:         EVT_TEST_ASSERT_IS_NULL(",
          "389:          \"source_record_values\",",
          "390:          source_record_values );",
          "392:         EVT_TEST_ASSERT_IS_NULL(",
          "393:          \"error\",",
          "394:          error );",
          "",
          "[Added Lines]",
          "388:  EVT_TEST_ASSERT_IS_NULL(",
          "389:   \"source_record_values\",",
          "390:   source_record_values );",
          "392:  EVT_TEST_ASSERT_IS_NULL(",
          "393:   \"error\",",
          "394:   error );",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "437:   result,",
          "438:   1 );",
          "",
          "[Removed Lines]",
          "440:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "441:          \"record_values\",",
          "442:          record_values );",
          "444:         EVT_TEST_ASSERT_IS_NULL(",
          "445:          \"error\",",
          "446:          error );",
          "",
          "[Added Lines]",
          "440:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "441:   \"record_values\",",
          "442:   record_values );",
          "444:  EVT_TEST_ASSERT_IS_NULL(",
          "445:   \"error\",",
          "446:   error );",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "460:   result,",
          "461:   -1 );",
          "467:  libcerror_error_free(",
          "468:   &error );",
          "",
          "[Removed Lines]",
          "463:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "464:          \"error\",",
          "465:          error );",
          "",
          "[Added Lines]",
          "463:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "464:   \"error\",",
          "465:   error );",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "480:   result,",
          "481:   -1 );",
          "487:  libcerror_error_free(",
          "488:   &error );",
          "",
          "[Removed Lines]",
          "483:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "484:          \"error\",",
          "485:          error );",
          "",
          "[Added Lines]",
          "483:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "484:   \"error\",",
          "485:   error );",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "498:   result,",
          "499:   1 );",
          "509:  return( 1 );",
          "",
          "[Removed Lines]",
          "501:         EVT_TEST_ASSERT_IS_NULL(",
          "502:          \"record_values\",",
          "503:          record_values );",
          "505:         EVT_TEST_ASSERT_IS_NULL(",
          "506:          \"error\",",
          "507:          error );",
          "",
          "[Added Lines]",
          "501:  EVT_TEST_ASSERT_IS_NULL(",
          "502:   \"record_values\",",
          "503:   record_values );",
          "505:  EVT_TEST_ASSERT_IS_NULL(",
          "506:   \"error\",",
          "507:   error );",
          "",
          "---------------"
        ],
        "tests/evt_test_support.c||tests/evt_test_support.c": [
          "File: tests/evt_test_support.c -> tests/evt_test_support.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "511:   result,",
          "512:   1 );",
          "",
          "[Removed Lines]",
          "514:         EVT_TEST_ASSERT_IS_NULL(",
          "515:          \"error\",",
          "516:          error );",
          "",
          "[Added Lines]",
          "514:  EVT_TEST_ASSERT_IS_NULL(",
          "515:   \"error\",",
          "516:   error );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "526:   result,",
          "527:   -1 );",
          "533:  libcerror_error_free(",
          "534:   &error );",
          "",
          "[Removed Lines]",
          "529:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "530:          \"error\",",
          "531:          error );",
          "",
          "[Added Lines]",
          "529:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "530:   \"error\",",
          "531:   error );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "562:   result,",
          "563:   1 );",
          "",
          "[Removed Lines]",
          "565:         EVT_TEST_ASSERT_IS_NULL(",
          "566:          \"error\",",
          "567:          error );",
          "",
          "[Added Lines]",
          "565:  EVT_TEST_ASSERT_IS_NULL(",
          "566:   \"error\",",
          "567:   error );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "577:   result,",
          "578:   -1 );",
          "584:  libcerror_error_free(",
          "585:   &error );",
          "",
          "[Removed Lines]",
          "580:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "581:          \"error\",",
          "582:          error );",
          "",
          "[Added Lines]",
          "580:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "581:   \"error\",",
          "582:   error );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "619:   result,",
          "620:   1 );",
          "",
          "[Removed Lines]",
          "622:         EVT_TEST_ASSERT_IS_NULL(",
          "623:          \"error\",",
          "624:          error );",
          "",
          "[Added Lines]",
          "622:  EVT_TEST_ASSERT_IS_NULL(",
          "623:   \"error\",",
          "624:   error );",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "634:   result,",
          "635:   1 );",
          "",
          "[Removed Lines]",
          "637:         EVT_TEST_ASSERT_IS_NULL(",
          "638:          \"error\",",
          "639:          error );",
          "",
          "[Added Lines]",
          "637:  EVT_TEST_ASSERT_IS_NULL(",
          "638:   \"error\",",
          "639:   error );",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "649:   result,",
          "650:   -1 );",
          "656:  libcerror_error_free(",
          "657:   &error );",
          "",
          "[Removed Lines]",
          "652:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "653:          \"error\",",
          "654:          error );",
          "",
          "[Added Lines]",
          "652:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "653:   \"error\",",
          "654:   error );",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "693:   result,",
          "694:   1 );",
          "",
          "[Removed Lines]",
          "696:         EVT_TEST_ASSERT_IS_NULL(",
          "697:          \"error\",",
          "698:          error );",
          "",
          "[Added Lines]",
          "696:  EVT_TEST_ASSERT_IS_NULL(",
          "697:   \"error\",",
          "698:   error );",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "708:   result,",
          "709:   1 );",
          "",
          "[Removed Lines]",
          "711:         EVT_TEST_ASSERT_IS_NULL(",
          "712:          \"error\",",
          "713:          error );",
          "",
          "[Added Lines]",
          "711:  EVT_TEST_ASSERT_IS_NULL(",
          "712:   \"error\",",
          "713:   error );",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "723:   result,",
          "724:   -1 );",
          "730:  libcerror_error_free(",
          "731:   &error );",
          "",
          "[Removed Lines]",
          "726:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "727:          \"error\",",
          "728:          error );",
          "",
          "[Added Lines]",
          "726:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "727:   \"error\",",
          "728:   error );",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "768:   result,",
          "769:   1 );",
          "779:  source_length = system_string_length(",
          "780:                   source );",
          "",
          "[Removed Lines]",
          "771:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "772:          \"file_io_handle\",",
          "773:          file_io_handle );",
          "775:         EVT_TEST_ASSERT_IS_NULL(",
          "776:          \"error\",",
          "777:          error );",
          "",
          "[Added Lines]",
          "771:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "772:   \"file_io_handle\",",
          "773:   file_io_handle );",
          "775:  EVT_TEST_ASSERT_IS_NULL(",
          "776:   \"error\",",
          "777:   error );",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "797:   result,",
          "798:   1 );",
          "804:  result = libbfio_handle_open(",
          "805:            file_io_handle,",
          "",
          "[Removed Lines]",
          "800:         EVT_TEST_ASSERT_IS_NULL(",
          "801:          \"error\",",
          "802:          error );",
          "",
          "[Added Lines]",
          "800:  EVT_TEST_ASSERT_IS_NULL(",
          "801:   \"error\",",
          "802:   error );",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "811:   result,",
          "812:   1 );",
          "",
          "[Removed Lines]",
          "814:         EVT_TEST_ASSERT_IS_NULL(",
          "815:          \"error\",",
          "816:          error );",
          "",
          "[Added Lines]",
          "814:  EVT_TEST_ASSERT_IS_NULL(",
          "815:   \"error\",",
          "816:   error );",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "826:   result,",
          "827:   1 );",
          "",
          "[Removed Lines]",
          "829:         EVT_TEST_ASSERT_IS_NULL(",
          "830:          \"error\",",
          "831:          error );",
          "",
          "[Added Lines]",
          "829:  EVT_TEST_ASSERT_IS_NULL(",
          "830:   \"error\",",
          "831:   error );",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "841:   result,",
          "842:   -1 );",
          "848:  libcerror_error_free(",
          "849:   &error );",
          "",
          "[Removed Lines]",
          "844:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "845:          \"error\",",
          "846:          error );",
          "",
          "[Added Lines]",
          "844:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "845:   \"error\",",
          "846:   error );",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "859:   result,",
          "860:   0 );",
          "866:  result = libbfio_handle_free(",
          "867:            &file_io_handle,",
          "",
          "[Removed Lines]",
          "862:         EVT_TEST_ASSERT_IS_NULL(",
          "863:          \"error\",",
          "864:          error );",
          "",
          "[Added Lines]",
          "862:  EVT_TEST_ASSERT_IS_NULL(",
          "863:   \"error\",",
          "864:   error );",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "872:   result,",
          "873:   1 );",
          "",
          "[Removed Lines]",
          "875:         EVT_TEST_ASSERT_IS_NULL(",
          "876:          \"file_io_handle\",",
          "877:          file_io_handle );",
          "879:         EVT_TEST_ASSERT_IS_NULL(",
          "880:          \"error\",",
          "881:          error );",
          "",
          "[Added Lines]",
          "875:  EVT_TEST_ASSERT_IS_NULL(",
          "876:   \"file_io_handle\",",
          "877:   file_io_handle );",
          "879:  EVT_TEST_ASSERT_IS_NULL(",
          "880:   \"error\",",
          "881:   error );",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "887:                   0,",
          "888:                   sizeof( uint8_t ) * 512 );",
          "894:  result = libbfio_memory_range_initialize(",
          "895:            &file_io_handle,",
          "",
          "[Removed Lines]",
          "890:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "891:          \"memset_result\",",
          "892:          memset_result );",
          "",
          "[Added Lines]",
          "890:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "891:   \"memset_result\",",
          "892:   memset_result );",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "900:   result,",
          "901:   1 );",
          "911:  result = libbfio_memory_range_set(",
          "912:            file_io_handle,",
          "",
          "[Removed Lines]",
          "903:         EVT_TEST_ASSERT_IS_NOT_NULL(",
          "904:          \"file_io_handle\",",
          "905:          file_io_handle );",
          "907:         EVT_TEST_ASSERT_IS_NULL(",
          "908:          \"error\",",
          "909:          error );",
          "",
          "[Added Lines]",
          "903:  EVT_TEST_ASSERT_IS_NOT_NULL(",
          "904:   \"file_io_handle\",",
          "905:   file_io_handle );",
          "907:  EVT_TEST_ASSERT_IS_NULL(",
          "908:   \"error\",",
          "909:   error );",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "919:   result,",
          "920:   1 );",
          "926:  result = libbfio_handle_open(",
          "927:            file_io_handle,",
          "",
          "[Removed Lines]",
          "922:         EVT_TEST_ASSERT_IS_NULL(",
          "923:          \"error\",",
          "924:          error );",
          "",
          "[Added Lines]",
          "922:  EVT_TEST_ASSERT_IS_NULL(",
          "923:   \"error\",",
          "924:   error );",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "933:   result,",
          "934:   1 );",
          "",
          "[Removed Lines]",
          "936:         EVT_TEST_ASSERT_IS_NULL(",
          "937:          \"error\",",
          "938:          error );",
          "",
          "[Added Lines]",
          "936:  EVT_TEST_ASSERT_IS_NULL(",
          "937:   \"error\",",
          "938:   error );",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "948:   result,",
          "949:   0 );",
          "",
          "[Removed Lines]",
          "951:         EVT_TEST_ASSERT_IS_NULL(",
          "952:          \"error\",",
          "953:          error );",
          "",
          "[Added Lines]",
          "951:  EVT_TEST_ASSERT_IS_NULL(",
          "952:   \"error\",",
          "953:   error );",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "963:   result,",
          "964:   0 );",
          "970:  result = libbfio_handle_free(",
          "971:            &file_io_handle,",
          "",
          "[Removed Lines]",
          "966:         EVT_TEST_ASSERT_IS_NULL(",
          "967:          \"error\",",
          "968:          error );",
          "",
          "[Added Lines]",
          "966:  EVT_TEST_ASSERT_IS_NULL(",
          "967:   \"error\",",
          "968:   error );",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "976:   result,",
          "977:   1 );",
          "",
          "[Removed Lines]",
          "979:         EVT_TEST_ASSERT_IS_NULL(",
          "980:          \"file_io_handle\",",
          "981:          file_io_handle );",
          "983:         EVT_TEST_ASSERT_IS_NULL(",
          "984:          \"error\",",
          "985:          error );",
          "",
          "[Added Lines]",
          "979:  EVT_TEST_ASSERT_IS_NULL(",
          "980:   \"file_io_handle\",",
          "981:   file_io_handle );",
          "983:  EVT_TEST_ASSERT_IS_NULL(",
          "984:   \"error\",",
          "985:   error );",
          "",
          "---------------"
        ],
        "tests/test_evtexport.sh||tests/test_evtexport.sh": [
          "File: tests/test_evtexport.sh -> tests/test_evtexport.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: EXIT_IGNORE=77;",
          "10: OPTION_SETS=\"\";",
          "12: INPUT_GLOB=\"*\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: OPTIONS=\"\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47: source ${TEST_RUNNER};",
          "50: RESULT=$?;",
          "52: exit ${RESULT};",
          "",
          "[Removed Lines]",
          "49: run_test_on_input_directory \"evtexport\" \"evtexport\" \"with_stdout_reference\" \"${OPTION_SETS}\" \"${TEST_EXECUTABLE}\" \"input\" \"${INPUT_GLOB}\";",
          "",
          "[Added Lines]",
          "50: run_test_on_input_directory \"evtexport\" \"evtexport\" \"with_stdout_reference\" \"${OPTION_SETS}\" \"${TEST_EXECUTABLE}\" \"input\" \"${INPUT_GLOB}\" \"${OPTIONS}\";",
          "",
          "---------------"
        ],
        "tests/test_evtinfo.ps1||tests/test_evtinfo.ps1": [
          "File: tests/test_evtinfo.ps1 -> tests/test_evtinfo.ps1",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # Info tool testing script",
          "2: #",
          "5: $ExitSuccess = 0",
          "6: $ExitFailure = 1",
          "",
          "[Removed Lines]",
          "3: # Version: 20170807",
          "",
          "[Added Lines]",
          "3: # Version: 20170827",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44: }",
          "45: If (-Not (Test-Path ${TestToolDirectory}))",
          "46: {",
          "48: }",
          "49: If (-Not (Test-Path ${TestToolDirectory}))",
          "50: {",
          "",
          "[Removed Lines]",
          "47:  $TestToolDirectory = \"..\\vs2015\\Release\"",
          "",
          "[Added Lines]",
          "47:  $TestToolDirectory = \"..\\vs2015\\VSDebug\"",
          "48: }",
          "49: If (-Not (Test-Path ${TestToolDirectory}))",
          "50: {",
          "51:  $TestToolDirectory = \"..\\vs2017\\Release\"",
          "52: }",
          "53: If (-Not (Test-Path ${TestToolDirectory}))",
          "54: {",
          "55:  $TestToolDirectory = \"..\\vs2017\\VSDebug\"",
          "",
          "---------------"
        ],
        "tests/test_evtinfo.sh||tests/test_evtinfo.sh": [
          "File: tests/test_evtinfo.sh -> tests/test_evtinfo.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/bin/bash",
          "2: # Info tool testing script",
          "3: #",
          "6: EXIT_SUCCESS=0;",
          "7: EXIT_FAILURE=1;",
          "8: EXIT_IGNORE=77;",
          "10: OPTION_SETS=\"\";",
          "12: INPUT_GLOB=\"*\";",
          "",
          "[Removed Lines]",
          "4: # Version: 20170802",
          "",
          "[Added Lines]",
          "4: # Version: 20170825",
          "11: OPTIONS=\"\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47: source ${TEST_RUNNER};",
          "50: RESULT=$?;",
          "52: exit ${RESULT};",
          "",
          "[Removed Lines]",
          "49: run_test_on_input_directory \"evtinfo\" \"evtinfo\" \"with_stdout_reference\" \"${OPTION_SETS}\" \"${TEST_EXECUTABLE}\" \"input\" \"${INPUT_GLOB}\";",
          "",
          "[Added Lines]",
          "50: run_test_on_input_directory \"evtinfo\" \"evtinfo\" \"with_stdout_reference\" \"${OPTION_SETS}\" \"${TEST_EXECUTABLE}\" \"input\" \"${INPUT_GLOB}\" \"${OPTIONS}\";",
          "",
          "---------------"
        ],
        "tests/test_library.ps1||tests/test_library.ps1": [
          "File: tests/test_library.ps1 -> tests/test_library.ps1",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # Tests C library functions and types.",
          "2: #",
          "5: $ExitSuccess = 0",
          "6: $ExitFailure = 1",
          "",
          "[Removed Lines]",
          "3: # Version: 20170807",
          "",
          "[Added Lines]",
          "3: # Version: 20170827",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "75:  $TestToolDirectory = \"..\\vs2015\\VSDebug\"",
          "76: }",
          "77: If (-Not (Test-Path ${TestToolDirectory}))",
          "78: {",
          "79:  Write-Host \"Missing test tool directory.\" -foreground Red",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "78: {",
          "79:  $TestToolDirectory = \"..\\vs2017\\Release\"",
          "80: }",
          "81: If (-Not (Test-Path ${TestToolDirectory}))",
          "82: {",
          "83:  $TestToolDirectory = \"..\\vs2017\\VSDebug\"",
          "84: }",
          "85: If (-Not (Test-Path ${TestToolDirectory}))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1ac22d20dbfe1c79f895a8faae79234745fadfc0",
      "candidate_info": {
        "commit_hash": "1ac22d20dbfe1c79f895a8faae79234745fadfc0",
        "repo": "libyal/libevt",
        "commit_url": "https://github.com/libyal/libevt/commit/1ac22d20dbfe1c79f895a8faae79234745fadfc0",
        "files": [
          ".travis.yml",
          "appveyor.yml",
          "configure.ac",
          "libevt.nuspec",
          "runtests.sh",
          "setup.py"
        ],
        "message": "Applied updates",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "libevt.nuspec||libevt.nuspec",
          "runtests.sh||runtests.sh",
          "setup.py||setup.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec",
            "runtests.sh||runtests.sh"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec",
            "runtests.sh||runtests.sh"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_INIT(",
          "4:  [libevt],",
          "6:  [joachim.metz@gmail.com])",
          "8: AC_CONFIG_SRCDIR(",
          "",
          "[Removed Lines]",
          "5:  [20171031],",
          "",
          "[Added Lines]",
          "5:  [20171128],",
          "",
          "---------------"
        ],
        "libevt.nuspec||libevt.nuspec": [
          "File: libevt.nuspec -> libevt.nuspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: <package >",
          "3:   <metadata>",
          "4:     <id>libevt</id>",
          "6:     <authors>Joachim Metz</authors>",
          "7:     <owners>joachimmetz</owners>",
          "8:     <licenseUrl>https://raw.githubusercontent.com/libyal/libevt/master/COPYING</licenseUrl>",
          "",
          "[Removed Lines]",
          "5:     <version>20171031</version>",
          "",
          "[Added Lines]",
          "5:     <version>20171128</version>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10:     <requireLicenseAcceptance>false</requireLicenseAcceptance>",
          "11:     <title>libevt</title>",
          "12:     <description>Library to access the Windows Event Log (EVT) format</description>",
          "14:     <copyright>Copyright (C) 2011-2017</copyright>",
          "15:     <tags>native</tags>",
          "16:   </metadata>",
          "",
          "[Removed Lines]",
          "13:     <releaseNotes>Release of libevt 20171031</releaseNotes>",
          "",
          "[Added Lines]",
          "13:     <releaseNotes>Release of libevt 20171128</releaseNotes>",
          "",
          "---------------"
        ],
        "runtests.sh||runtests.sh": [
          "File: runtests.sh -> runtests.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/bin/bash",
          "2: # Script that runs the tests",
          "3: #",
          "6: EXIT_SUCCESS=0;",
          "7: EXIT_FAILURE=1;",
          "",
          "[Removed Lines]",
          "4: # Version: 20171026",
          "",
          "[Added Lines]",
          "4: # Version: 20171127",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "175: run_setup_py_tests()",
          "176: {",
          "180:  then",
          "184:  fi",
          "185:  RESULT=$?;",
          "187:  if test ${RESULT} -ne ${EXIT_SUCCESS};",
          "",
          "[Removed Lines]",
          "177:  PYTHON=$1;",
          "179:  if test ${CHECK_WITH_STRACE} -eq 1;",
          "181:   strace ${PYTHON} setup.py build;",
          "182:  else",
          "183:   ${PYTHON} setup.py build;",
          "",
          "[Added Lines]",
          "177:  # Skip this test when running Cygwin on AppVeyor.",
          "178:  if test -n \"${APPVEYOR}\" && test ${TARGET} = \"cygwin\";",
          "180:   echo \"Running: 'setup.py build' skipped\";",
          "182:   return ${EXIT_SUCCESS};",
          "184:  PYTHON=$1;",
          "186:  ${PYTHON} setup.py build;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "265:  PYTHON2=`which python2 2> /dev/null`;",
          "267:         # Note that \"test -x\" on Mac OS X will succeed if the argument is not set.",
          "269:  then",
          "270:   export PYTHON_VERSION=2;",
          "",
          "[Removed Lines]",
          "268:  if test ! -z ${PYTHON2} && test -x ${PYTHON2};",
          "",
          "[Added Lines]",
          "270:  if test -n \"${PYTHON2}\" && test -x ${PYTHON2};",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "296:  PYTHON3=`which python3 2> /dev/null`;",
          "298:         # Note that \"test -x\" on Mac OS X will succeed if the argument is not set.",
          "300:  then",
          "301:   export PYTHON_VERSION=3;",
          "",
          "[Removed Lines]",
          "299:  if test ! -z ${PYTHON3} && test -x ${PYTHON3};",
          "",
          "[Added Lines]",
          "301:  if test -n \"${PYTHON3}\" && test -x ${PYTHON3};",
          "",
          "---------------"
        ],
        "setup.py||setup.py": [
          "File: setup.py -> setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/usr/bin/env python",
          "2: #",
          "3: # Script to build and install Python-bindings.",
          "6: from __future__ import print_function",
          "7: import glob",
          "",
          "[Removed Lines]",
          "4: # Version: 20160316",
          "",
          "[Added Lines]",
          "4: # Version: 20171105",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "168: class ProjectInformation(object):",
          "171:   def __init__(self):",
          "173:     super(ProjectInformation, self).__init__()",
          "174:     self.include_directories = []",
          "175:     self.library_name = None",
          "",
          "[Removed Lines]",
          "169:   \"\"\"Class to define the project information.\"\"\"",
          "172:     \"\"\"Initializes a project information object.\"\"\"",
          "",
          "[Added Lines]",
          "169:   \"\"\"Project information.\"\"\"",
          "172:     \"\"\"Initializes project information.\"\"\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "300: # shared libaries since pip does not integrate well with the system package",
          "301: # management.",
          "302: for library_name in project_information.library_names:",
          "303:   source_files = glob.glob(os.path.join(library_name, \"*.c\"))",
          "304:   SOURCES.extend(source_files)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "303:   for source_file in glob.glob(os.path.join(library_name, \"*.[ly]\")):",
          "304:     generated_source_file = \"{0:s}.c\".format(source_file[:-2])",
          "305:     if not os.path.exists(generated_source_file):",
          "306:       raise RuntimeError(\"Missing generated source file: {0:s}\".format(",
          "307:           generated_source_file))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c7468e3f2f2ca639d8d1b0c14b00643752fe48e6",
      "candidate_info": {
        "commit_hash": "c7468e3f2f2ca639d8d1b0c14b00643752fe48e6",
        "repo": "libyal/libevt",
        "commit_url": "https://github.com/libyal/libevt/commit/c7468e3f2f2ca639d8d1b0c14b00643752fe48e6",
        "files": [
          "configure.ac",
          "libevt.nuspec",
          "libevt/libevt_libfvalue.h",
          "msvscpp/libfvalue/libfvalue.vcproj",
          "synclibs.ps1"
        ],
        "message": "Changes to support latest libfvalue",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "libevt.nuspec||libevt.nuspec",
          "libevt/libevt_libfvalue.h||libevt/libevt_libfvalue.h",
          "msvscpp/libfvalue/libfvalue.vcproj||msvscpp/libfvalue/libfvalue.vcproj",
          "synclibs.ps1||synclibs.ps1"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec",
            "libevt/libevt_libfvalue.h||libevt/libevt_libfvalue.h"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec",
            "libevt/libevt_libfvalue.h||libevt/libevt_libfvalue.h"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_INIT(",
          "4:  [libevt],",
          "6:  [joachim.metz@gmail.com])",
          "8: AC_CONFIG_SRCDIR(",
          "",
          "[Removed Lines]",
          "5:  [20180123],",
          "",
          "[Added Lines]",
          "5:  [20180125],",
          "",
          "---------------"
        ],
        "libevt.nuspec||libevt.nuspec": [
          "File: libevt.nuspec -> libevt.nuspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: <package >",
          "3:   <metadata>",
          "4:     <id>libevt</id>",
          "6:     <authors>Joachim Metz</authors>",
          "7:     <owners>joachimmetz</owners>",
          "8:     <licenseUrl>https://raw.githubusercontent.com/libyal/libevt/master/COPYING</licenseUrl>",
          "",
          "[Removed Lines]",
          "5:     <version>20180123</version>",
          "",
          "[Added Lines]",
          "5:     <version>20180125</version>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10:     <requireLicenseAcceptance>false</requireLicenseAcceptance>",
          "11:     <title>libevt</title>",
          "12:     <description>Library to access the Windows Event Log (EVT) format</description>",
          "14:     <copyright>Copyright (C) 2011-2018</copyright>",
          "15:     <tags>native</tags>",
          "16:   </metadata>",
          "",
          "[Removed Lines]",
          "13:     <releaseNotes>Release of libevt 20180123</releaseNotes>",
          "",
          "[Added Lines]",
          "13:     <releaseNotes>Release of libevt 20180125</releaseNotes>",
          "",
          "---------------"
        ],
        "libevt/libevt_libfvalue.h||libevt/libevt_libfvalue.h": [
          "File: libevt/libevt_libfvalue.h -> libevt/libevt_libfvalue.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include <libfvalue_definitions.h>",
          "33: #include <libfvalue_floating_point.h>",
          "34: #include <libfvalue_integer.h>",
          "36: #include <libfvalue_string.h>",
          "37: #include <libfvalue_table.h>",
          "38: #include <libfvalue_types.h>",
          "39: #include <libfvalue_value.h>",
          "40: #include <libfvalue_value_type.h>",
          "42: #else",
          "",
          "[Removed Lines]",
          "35: #include <libfvalue_split_string.h>",
          "",
          "[Added Lines]",
          "35: #include <libfvalue_split_utf16_string.h>",
          "36: #include <libfvalue_split_utf8_string.h>",
          "42: #include <libfvalue_utf16_string.h>",
          "43: #include <libfvalue_utf8_string.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51: #include <libfvalue.h>",
          "",
          "[Removed Lines]",
          "53: #endif",
          "55: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "msvscpp/libfvalue/libfvalue.vcproj||msvscpp/libfvalue/libfvalue.vcproj": [
          "File: msvscpp/libfvalue/libfvalue.vcproj -> msvscpp/libfvalue/libfvalue.vcproj",
          "--- Hunk 1 ---",
          "[Context before]",
          "175:     >",
          "176:    </File>",
          "177:    <File",
          "179:     >",
          "180:    </File>",
          "181:    <File",
          "",
          "[Removed Lines]",
          "178:     RelativePath=\"..\\..\\libfvalue\\libfvalue_split_string.c\"",
          "",
          "[Added Lines]",
          "178:     RelativePath=\"..\\..\\libfvalue\\libfvalue_split_utf16_string.c\"",
          "179:     >",
          "180:    </File>",
          "181:    <File",
          "182:     RelativePath=\"..\\..\\libfvalue\\libfvalue_split_utf8_string.c\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "190:     RelativePath=\"..\\..\\libfvalue\\libfvalue_table.c\"",
          "191:     >",
          "192:    </File>",
          "193:    <File",
          "194:     RelativePath=\"..\\..\\libfvalue\\libfvalue_value.c\"",
          "195:     >",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "197:    <File",
          "198:     RelativePath=\"..\\..\\libfvalue\\libfvalue_utf16_string.c\"",
          "199:     >",
          "200:    </File>",
          "201:    <File",
          "202:     RelativePath=\"..\\..\\libfvalue\\libfvalue_utf8_string.c\"",
          "203:     >",
          "204:    </File>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "273:     >",
          "274:    </File>",
          "275:    <File",
          "277:     >",
          "278:    </File>",
          "279:    <File",
          "",
          "[Removed Lines]",
          "276:     RelativePath=\"..\\..\\libfvalue\\libfvalue_split_string.h\"",
          "",
          "[Added Lines]",
          "288:     RelativePath=\"..\\..\\libfvalue\\libfvalue_split_utf16_string.h\"",
          "289:     >",
          "290:    </File>",
          "291:    <File",
          "292:     RelativePath=\"..\\..\\libfvalue\\libfvalue_split_utf8_string.h\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "296:     RelativePath=\"..\\..\\libfvalue\\libfvalue_unused.h\"",
          "297:     >",
          "298:    </File>",
          "299:    <File",
          "300:     RelativePath=\"..\\..\\libfvalue\\libfvalue_value.h\"",
          "301:     >",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "315:    <File",
          "316:     RelativePath=\"..\\..\\libfvalue\\libfvalue_utf16_string.h\"",
          "317:     >",
          "318:    </File>",
          "319:    <File",
          "320:     RelativePath=\"..\\..\\libfvalue\\libfvalue_utf8_string.h\"",
          "321:     >",
          "322:    </File>",
          "",
          "---------------"
        ],
        "synclibs.ps1||synclibs.ps1": [
          "File: synclibs.ps1 -> synclibs.ps1",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # Script that synchronizes the local library dependencies",
          "2: #",
          "5: $GitUrlPrefix = \"https://github.com/libyal\"",
          "6: $LocalLibs = \"libbfio libcdata libcdirectory libcerror libcfile libclocale libcnotify libcpath libcsplit libcthreads libexe libfcache libfdata libfdatetime libfguid libfvalue libfwevt libfwnt libregf libuna libwrc\"",
          "",
          "[Removed Lines]",
          "3: # Version: 20170722",
          "",
          "[Added Lines]",
          "3: # Version: 20180125",
          "5: Param (",
          "6:  [switch]$UseHead = $false",
          "7: )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "17:  {",
          "18:   Continue",
          "19:  }",
          "20:  # PowerShell will raise NativeCommandError if git writes to stdout or stderr",
          "21:  # therefore 2>&1 is added and the output is stored in a variable.",
          "25:  If (Test-Path ${LocalLib}-${pid})",
          "26:  {",
          "27:   $LocalLibVersion = Get-Content -Path ${LocalLib}-${pid}\\configure.ac | select -skip 4 -first 1 | % { $_ -Replace \" \\[\",\"\" } | % { $_ -Replace \"\\],\",\"\" }",
          "",
          "[Removed Lines]",
          "22:  $Output = Invoke-Expression -Command \"${Git} clone ${GitUrlPrefix}/${LocalLib}.git ${LocalLib}-${pid} 2>&1\"",
          "23:  Write-Host ${Output}",
          "",
          "[Added Lines]",
          "24:  $GitUrl = \"${GitUrlPrefix}/${LocalLib}.git\"",
          "28:  $Output = Invoke-Expression -Command \"${Git} clone ${GitUrl} ${LocalLib}-${pid} 2>&1\"",
          "30:  Push-Location \"${LocalLib}-${pid}\"",
          "32:  Try",
          "33:  {",
          "34:   $Output = Invoke-Expression -Command \"${Git} fetch --quiet --all --tags --prune 2>&1\"",
          "36:   $LatestTag = Invoke-Expression -Command \"${Git} describe --tags --abbrev=0 2>&1\"",
          "38:   If (${LatestTag} -and -not ${UseHead})",
          "39:   {",
          "40:    Write-Host \"Synchronizing: ${LocalLib} from ${GitUrl} tag ${LatestTag}\"",
          "42:    $Output = Invoke-Expression -Command \"${Git} checkout --quiet tags/${LatestTag} 2>&1\"",
          "43:   }",
          "44:   Else",
          "45:   {",
          "46:    Write-Host \"Synchronizing: ${LocalLib} from ${GitUrl} HEAD\"",
          "47:   }",
          "48:  }",
          "49:  Finally",
          "50:  {",
          "51:   Pop-Location",
          "52:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "13154598281d6b9a8305400e4defe478af30ed26",
      "candidate_info": {
        "commit_hash": "13154598281d6b9a8305400e4defe478af30ed26",
        "repo": "libyal/libevt",
        "commit_url": "https://github.com/libyal/libevt/commit/13154598281d6b9a8305400e4defe478af30ed26",
        "files": [
          ".travis.yml",
          "appveyor.yml",
          "configure.ac",
          "libevt.nuspec",
          "libevt.spec.in",
          "m4/common.m4",
          "m4/libcdata.m4",
          "m4/libcdirectory.m4",
          "m4/libcerror.m4",
          "m4/libcfile.m4",
          "m4/libclocale.m4",
          "m4/libcnotify.m4",
          "m4/libcpath.m4",
          "m4/libcsplit.m4",
          "m4/libcthreads.m4",
          "m4/libfcache.m4",
          "m4/libfdata.m4",
          "m4/libfdatetime.m4",
          "m4/libfguid.m4",
          "m4/libfvalue.m4",
          "m4/libfwevt.m4",
          "m4/libfwnt.m4",
          "m4/libuna.m4",
          "setup.py",
          "syncsharedlibs.sh",
          "tests/test_library.ps1"
        ],
        "message": "Worked on tests",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "libevt.nuspec||libevt.nuspec",
          "libevt.spec.in||libevt.spec.in",
          "m4/common.m4||m4/common.m4",
          "m4/libcdata.m4||m4/libcdata.m4",
          "m4/libcdirectory.m4||m4/libcdirectory.m4",
          "m4/libcerror.m4||m4/libcerror.m4",
          "m4/libcfile.m4||m4/libcfile.m4",
          "m4/libclocale.m4||m4/libclocale.m4",
          "m4/libcnotify.m4||m4/libcnotify.m4",
          "m4/libcpath.m4||m4/libcpath.m4",
          "m4/libcsplit.m4||m4/libcsplit.m4",
          "m4/libcthreads.m4||m4/libcthreads.m4",
          "m4/libfcache.m4||m4/libfcache.m4",
          "m4/libfdata.m4||m4/libfdata.m4",
          "m4/libfdatetime.m4||m4/libfdatetime.m4",
          "m4/libfguid.m4||m4/libfguid.m4",
          "m4/libfvalue.m4||m4/libfvalue.m4",
          "m4/libfwevt.m4||m4/libfwevt.m4",
          "m4/libfwnt.m4||m4/libfwnt.m4",
          "m4/libuna.m4||m4/libuna.m4",
          "setup.py||setup.py",
          "syncsharedlibs.sh||syncsharedlibs.sh",
          "tests/test_library.ps1||tests/test_library.ps1"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec",
            "m4/libcdata.m4||m4/libcdata.m4",
            "m4/libcsplit.m4||m4/libcsplit.m4",
            "m4/libfdata.m4||m4/libfdata.m4"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec",
            "m4/libcdata.m4||m4/libcdata.m4",
            "m4/libcsplit.m4||m4/libcsplit.m4",
            "m4/libfdata.m4||m4/libfdata.m4"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_INIT(",
          "4:  [libevt],",
          "6:  [joachim.metz@gmail.com])",
          "8: AC_CONFIG_SRCDIR(",
          "",
          "[Removed Lines]",
          "5:  [20170831],",
          "",
          "[Added Lines]",
          "5:  [20170909],",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15: dnl Check for host type",
          "16: AC_CANONICAL_HOST",
          "21: dnl Check for libtool DLL support",
          "22: AC_LIBTOOL_WIN32_DLL",
          "",
          "[Removed Lines]",
          "18: dnl Check for large file support",
          "19: AC_SYS_LARGEFILE",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "42: AC_C_CONST",
          "43: AC_C_VOLATILE",
          "45: dnl Check if WINAPI support should be enabled",
          "46: AX_COMMON_CHECK_ENABLE_WINAPI",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42: dnl Check for large file support",
          "43: AC_SYS_LARGEFILE",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "51: dnl Check for type definitions",
          "52: AX_TYPES_CHECK_LOCAL",
          "55: AX_COMMON_CHECK_LOCAL",
          "58: AX_LIBCERROR_CHECK_ENABLE",
          "61: AX_LIBCTHREADS_CHECK_ENABLE",
          "64: AX_LIBCDATA_CHECK_ENABLE",
          "67: AX_LIBCLOCALE_CHECK_ENABLE",
          "70: AX_LIBCNOTIFY_CHECK_ENABLE",
          "73: AX_LIBCSPLIT_CHECK_ENABLE",
          "76: AX_LIBUNA_CHECK_ENABLE",
          "79: AX_LIBCFILE_CHECK_ENABLE",
          "82: AX_LIBCPATH_CHECK_ENABLE",
          "85: AX_LIBBFIO_CHECK_ENABLE",
          "88: AX_LIBFDATETIME_CHECK_ENABLE",
          "91: AX_LIBFGUID_CHECK_ENABLE",
          "94: AX_LIBFVALUE_CHECK_ENABLE",
          "97: AX_LIBFWNT_CHECK_ENABLE",
          "100: AX_LIBEVT_CHECK_LOCAL",
          "109: AX_LIBFWEVT_CHECK_ENABLE",
          "112: AX_LIBEXE_CHECK_ENABLE",
          "115: AX_LIBREGF_CHECK_ENABLE",
          "118: AX_LIBWRC_CHECK_ENABLE",
          "121: AX_LIBCDIRECTORY_CHECK_ENABLE",
          "124: AX_EVTTOOLS_CHECK_LOCAL",
          "139: AS_IF(",
          "144:  ])",
          "149: dnl Set additional compiler flags",
          "150: CFLAGS=\"$CFLAGS -Wall\";",
          "",
          "[Removed Lines]",
          "54: dnl Checks for libraries and library functions",
          "57: dnl Check for enabling libcerror for cross-platform C error functions",
          "60: dnl Check for enabling libcthreads for cross-platform C threads functions",
          "63: dnl Check for enabling libcdata for cross-platform C generic data functions",
          "66: dnl Check for enabling libclocale for cross-platform C locale functions",
          "69: dnl Check for enabling libcnotify for cross-platform C notification functions",
          "72: dnl Check for enabling libcsplit for cross-platform C split string functions",
          "75: dnl Check for enabling libuna for Unicode string support",
          "78: dnl Check for enabling libcfile for cross-platform C file functions",
          "81: dnl Check for enabling libcpath for cross-platform C path functions",
          "84: dnl Check for enabling libbfio for basic file IO support",
          "87: dnl Check for enabling libfdatetime for date and time formats support",
          "90: dnl Check for enabling libfguid for GUID/UUID format support",
          "93: dnl Check for enabling libfvalue for file value support",
          "96: dnl Check for enabling libfwnt for file Windows NT type support",
          "99: dnl Check for library function support",
          "102: dnl Check for enabling libfcache for file value cache support",
          "103: AX_LIBFCACHE_CHECK_ENABLE",
          "105: dnl Check for enabling libfdata for file data types support",
          "106: AX_LIBFDATA_CHECK_ENABLE",
          "108: dnl Check for enabling libfwevt for Windows Event Log binary XML support",
          "111: dnl Check for enabling libexe for MZ, PE/COFF executable support",
          "114: dnl Check for enabling libregf for Windows Registry file support",
          "117: dnl Check for enabling libwrc for Windows Resource support",
          "120: dnl Check for enabling libcpath for cross-platform C directory functions",
          "123: dnl Check for evttools function support",
          "126: dnl Check if libevt python bindings (pyevt) should be build",
          "127: AX_PYTHON_CHECK_PYPREFIX",
          "128: AX_PYTHON_CHECK_ENABLE",
          "129: AX_PYTHON2_CHECK_ENABLE",
          "130: AX_PYTHON3_CHECK_ENABLE",
          "132: AM_CONDITIONAL(",
          "133:  HAVE_PYTHON_TESTS,",
          "134:  [test \"x${ac_cv_enable_python}\" != xno || test \"x${ac_cv_enable_python2}\" != xno || test \"x${ac_cv_enable_python3}\" != xno])",
          "136: dnl Headers included in various places",
          "137: AC_CHECK_HEADERS([stdarg.h varargs.h])",
          "140:  [test \"x$ac_cv_header_stdarg_h\" != xyes && test \"x$ac_cv_header_varargs_h\" != xyes],",
          "141:  [AC_MSG_FAILURE(",
          "142:   [Missing headers: stdarg.h and varargs.h],",
          "143:   [1])",
          "146: dnl Check for test function support",
          "147: AX_TESTS_CHECK_LOCAL",
          "",
          "[Added Lines]",
          "54: dnl Check if common required headers and functions are available",
          "57: dnl Check if libcerror or required headers and functions are available",
          "60: dnl Check if libcthreads or required headers and functions are available",
          "63: dnl Check if libcdata or required headers and functions are available",
          "66: dnl Check if libclocale or required headers and functions are available",
          "69: dnl Check if libcnotify or required headers and functions are available",
          "72: dnl Check if libcsplit or required headers and functions are available",
          "75: dnl Check if libuna or required headers and functions are available",
          "78: dnl Check if libcfile or required headers and functions are available",
          "81: dnl Check if libcpath or required headers and functions are available",
          "84: dnl Check if libbfio or required headers and functions are available",
          "87: dnl Check if libfcache or required headers and functions are available",
          "88: AX_LIBFCACHE_CHECK_ENABLE",
          "90: dnl Check if libfdata or required headers and functions are available",
          "91: AX_LIBFDATA_CHECK_ENABLE",
          "93: dnl Check if libfdatetime or required headers and functions are available",
          "96: dnl Check if libfguid or required headers and functions are available",
          "99: dnl Check if libfvalue or required headers and functions are available",
          "102: dnl Check if libfwnt or required headers and functions are available",
          "105: dnl Check if libevt required headers and functions are available",
          "108: dnl Check if libevt Python bindings (pyevt) required headers and functions are available",
          "109: AX_PYTHON_CHECK_PYPREFIX",
          "110: AX_PYTHON_CHECK_ENABLE",
          "111: AX_PYTHON2_CHECK_ENABLE",
          "112: AX_PYTHON3_CHECK_ENABLE",
          "114: AS_IF(",
          "115:   [test \"x${ac_cv_enable_python}\" != xno || test \"x${ac_cv_enable_python2}\" != xno || test \"x${ac_cv_enable_python3}\" != xno],",
          "116:   [dnl Headers included in pyevt/pyevt_error.c",
          "117:   AC_CHECK_HEADERS([stdarg.h varargs.h])",
          "119:   AS_IF(",
          "120:     [test \"x$ac_cv_header_stdarg_h\" != xyes && test \"x$ac_cv_header_varargs_h\" != xyes],",
          "121:     [AC_MSG_FAILURE(",
          "122:       [Missing headers: stdarg.h and varargs.h],",
          "123:       [1])",
          "124:     ])",
          "125:   ])",
          "127: AM_CONDITIONAL(",
          "128:   HAVE_PYTHON_TESTS,",
          "129:   [test \"x${ac_cv_enable_python}\" != xno || test \"x${ac_cv_enable_python2}\" != xno || test \"x${ac_cv_enable_python3}\" != xno])",
          "131: dnl Check if libfwevt or required headers and functions are available",
          "134: dnl Check if libexe or required headers and functions are available",
          "137: dnl Check if libregf or required headers and functions are available",
          "140: dnl Check if libwrc or required headers and functions are available",
          "143: dnl Check if libcdirectory or required headers and functions are available",
          "146: dnl Check if evttools required headers and functions are available",
          "149: dnl Check if libevt should be build with verbose output",
          "150: AX_COMMON_CHECK_ENABLE_VERBOSE_OUTPUT",
          "152: dnl Check if libevt should be build with debug output",
          "153: AX_COMMON_CHECK_ENABLE_DEBUG_OUTPUT",
          "155: dnl Check if tests required headers and functions are available",
          "156: AX_TESTS_CHECK_LOCAL",
          "158: dnl Check if DLL support is needed",
          "160:  [test \"x$enable_shared\" = xyes],",
          "161:  [AS_CASE(",
          "162:   [$host],",
          "163:   [*cygwin* | *mingw*],",
          "164:   [AC_DEFINE(",
          "165:    [HAVE_DLLMAIN],",
          "166:    [1],",
          "167:    [Define to 1 to enable the DllMain function.])",
          "168:   AC_SUBST(",
          "169:    [HAVE_DLLMAIN],",
          "170:    [1])",
          "172:   dnl Used in tests",
          "173:   AC_SUBST(",
          "174:    [LIBEVT_DLL_IMPORT],",
          "175:    [\"-DLIBEVT_DLL_IMPORT\"])",
          "176:   ])",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "161:  ])",
          "163: AS_IF(",
          "165:  [AC_SUBST(",
          "167:   [BuildRequires:])",
          "168:  ])",
          "",
          "[Removed Lines]",
          "164:  [test \"x$ac_cv_libexe\" = xyes || test \"x$ac_cv_libregf\" = xyes || test \"x$ac_cv_libwrc\" = xyes || test \"x$ac_cv_libcdirectory\" = xyes],",
          "166:   [libevt_tools_spec_build_requires],",
          "",
          "[Added Lines]",
          "194:  [test \"x$ac_cv_libfwevt\" = xyes || test \"x$ac_cv_libexe\" = xyes || test \"x$ac_cv_libregf\" = xyes || test \"x$ac_cv_libwrc\" = xyes || test \"x$ac_cv_libcdirectory\" = xyes],",
          "196:   [libevt_spec_tools_build_requires],",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "177:  [SPEC_DATE],",
          "178:  [`date +\"%a %b %e %Y\" 2> /dev/null`])",
          "186: AC_CONFIG_FILES([Makefile])",
          "187: AC_CONFIG_FILES([include/Makefile])",
          "188: AC_CONFIG_FILES([common/Makefile])",
          "",
          "[Removed Lines]",
          "180: dnl Set the current working directory for PackageMaker files",
          "181: AC_SUBST(",
          "182:  [PWD],",
          "183:  [`pwd`])",
          "185: dnl Have configure make the Makefiles",
          "",
          "[Added Lines]",
          "210: dnl Generate Makefiles",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "203: AC_CONFIG_FILES([libfvalue/Makefile])",
          "204: AC_CONFIG_FILES([libfwnt/Makefile])",
          "205: AC_CONFIG_FILES([libevt/Makefile])",
          "206: AC_CONFIG_FILES([libfwevt/Makefile])",
          "207: AC_CONFIG_FILES([libexe/Makefile])",
          "208: AC_CONFIG_FILES([libregf/Makefile])",
          "209: AC_CONFIG_FILES([libwrc/Makefile])",
          "210: AC_CONFIG_FILES([libcdirectory/Makefile])",
          "211: AC_CONFIG_FILES([evttools/Makefile])",
          "215: AC_CONFIG_FILES([po/Makefile.in])",
          "216: AC_CONFIG_FILES([po/Makevars])",
          "217: AC_CONFIG_FILES([manuals/Makefile])",
          "218: AC_CONFIG_FILES([tests/Makefile])",
          "219: AC_CONFIG_FILES([msvscpp/Makefile])",
          "221: AC_CONFIG_FILES([include/libevt.h])",
          "222: AC_CONFIG_FILES([include/libevt/definitions.h])",
          "223: AC_CONFIG_FILES([include/libevt/features.h])",
          "224: AC_CONFIG_FILES([include/libevt/types.h])",
          "225: AC_CONFIG_FILES([libevt/libevt_definitions.h])",
          "227: AC_CONFIG_FILES([common/types.h])",
          "228: AC_CONFIG_FILES([dpkg/changelog])",
          "229: AC_CONFIG_FILES([libevt/libevt.rc])",
          "230: AC_CONFIG_FILES([libevt.pc])",
          "231: AC_CONFIG_FILES([libevt.spec])",
          "233: AC_CONFIG_HEADERS([common/config.h])",
          "235: AC_OUTPUT",
          "",
          "[Removed Lines]",
          "212: AC_CONFIG_FILES([pyevt/Makefile])",
          "213: AC_CONFIG_FILES([pyevt-python2/Makefile])",
          "214: AC_CONFIG_FILES([pyevt-python3/Makefile])",
          "220: dnl Have configure make the include files",
          "226: dnl Have configure make distribution specific files",
          "232: dnl Have configure write its configuration",
          "",
          "[Added Lines]",
          "231: AC_CONFIG_FILES([pyevt/Makefile])",
          "232: AC_CONFIG_FILES([pyevt-python2/Makefile])",
          "233: AC_CONFIG_FILES([pyevt-python3/Makefile])",
          "245: dnl Generate header files",
          "251: dnl Generate distribution specific files",
          "257: dnl Generate a source configuration file",
          "",
          "---------------"
        ],
        "libevt.nuspec||libevt.nuspec": [
          "File: libevt.nuspec -> libevt.nuspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?xml version=\"1.0\"?>",
          "2: <package >",
          "3:   <metadata>",
          "4:     <id>libevt</id>",
          "5:     <version>20170909</version>",
          "6:     <authors>Joachim Metz</authors>",
          "7:     <owners>joachimmetz</owners>",
          "8:     <licenseUrl>https://raw.githubusercontent.com/libyal/libevt/master/COPYING</licenseUrl>",
          "9:     <projectUrl>https://github.com/libyal/libevt</projectUrl>",
          "10:     <requireLicenseAcceptance>false</requireLicenseAcceptance>",
          "11:     <title>libevt</title>",
          "12:     <description>Library to access the Windows Event Log (EVT) format</description>",
          "13:     <releaseNotes>Release of libevt 20170909</releaseNotes>",
          "14:     <copyright>Copyright (C) 2011-2017</copyright>",
          "15:     <tags>native</tags>",
          "16:   </metadata>",
          "17:   <files>",
          "18:     <file src=\"include\\*.h\" target=\"lib\\native\\include\\\" />",
          "19:     <file src=\"include\\libevt\\*.h\" target=\"lib\\native\\include\\libevt\\\" />",
          "20:     <file src=\"msvscpp\\Release\\libevt.dll\" target=\"build\\x86\\\" />",
          "21:     <file src=\"msvscpp\\Release\\libevt.lib\" target=\"lib\\native\\lib\\libevt32.lib\" />",
          "22:     <file src=\"msvscpp\\x64\\Release\\libevt.dll\" target=\"build\\x64\\\" />",
          "23:     <file src=\"msvscpp\\x64\\Release\\libevt.lib\" target=\"lib\\native\\lib\\libevt64.lib\" />",
          "24:   </files>",
          "25: </package>",
          "",
          "---------------"
        ],
        "libevt.spec.in||libevt.spec.in": [
          "File: libevt.spec.in -> libevt.spec.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: Summary: Several tools for reading Windows Event Log (EVT) files",
          "26: Group: Applications/System",
          "27: Requires: libevt = %{version}-%{release} @ax_libcdirectory_spec_requires@ @ax_libexe_spec_requires@ @ax_libfwevt_spec_requires@ @ax_libregf_spec_requires@ @ax_libwrc_spec_requires@",
          "30: %description tools",
          "31: Several tools for reading Windows Event Log (EVT) files",
          "",
          "[Removed Lines]",
          "28: @libevt_tools_spec_build_requires@ @ax_libcdirectory_spec_build_requires@ @ax_libexe_spec_build_requires@ @ax_libfwevt_spec_build_requires@ @ax_libregf_spec_build_requires@ @ax_libwrc_spec_build_requires@",
          "",
          "[Added Lines]",
          "28: @libevt_spec_tools_build_requires@ @ax_libcdirectory_spec_build_requires@ @ax_libexe_spec_build_requires@ @ax_libfwevt_spec_build_requires@ @ax_libregf_spec_build_requires@ @ax_libwrc_spec_build_requires@",
          "",
          "---------------"
        ],
        "m4/common.m4||m4/common.m4": [
          "File: m4/common.m4 -> m4/common.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: dnl",
          "5: dnl Function to test if a certain feature was enabled",
          "6: AC_DEFUN([AX_COMMON_ARG_ENABLE],",
          "",
          "[Removed Lines]",
          "1: dnl Functions for common",
          "3: dnl Version: 20161106",
          "",
          "[Added Lines]",
          "1: dnl Checks for common headers and functions",
          "3: dnl Version: 20170903",
          "",
          "---------------"
        ],
        "m4/libcdata.m4||m4/libcdata.m4": [
          "File: m4/libcdata.m4 -> m4/libcdata.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: dnl",
          "5: dnl Function to detect if libcdata is available",
          "6: dnl ac_libcdata_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "7: AC_DEFUN([AX_LIBCDATA_CHECK_LIB],",
          "23:   AS_IF(",
          "32:   AS_IF(",
          "41:     [ac_cv_libcdata=no],",
          "437:     ])",
          "447:   ])",
          "457:   ])",
          "460: dnl Function to detect how to enable libcdata",
          "461: AC_DEFUN([AX_LIBCDATA_CHECK_ENABLE],",
          "520:   ])",
          "",
          "[Removed Lines]",
          "1: dnl Functions for libcdata",
          "3: dnl Version: 20160108",
          "8:  [dnl Check if parameters were provided",
          "9:  AS_IF(",
          "10:   [test \"x$ac_cv_with_libcdata\" != x && test \"x$ac_cv_with_libcdata\" != xno && test \"x$ac_cv_with_libcdata\" != xauto-detect],",
          "11:   [AS_IF(",
          "12:    [test -d \"$ac_cv_with_libcdata\"],",
          "13:    [CFLAGS=\"$CFLAGS -I${ac_cv_with_libcdata}/include\"",
          "14:    LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libcdata}/lib\"],",
          "15:    [AC_MSG_WARN([no such directory: $ac_cv_with_libcdata])",
          "16:    ])",
          "17:   ])",
          "19:  AS_IF(",
          "20:   [test \"x$ac_cv_with_libcdata\" = xno],",
          "21:   [ac_cv_libcdata=no],",
          "22:   [dnl Check for a pkg-config file",
          "24:    [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:    [PKG_CHECK_MODULES(",
          "26:     [libcdata],",
          "27:     [libcdata >= 20160108],",
          "28:     [ac_cv_libcdata=yes],",
          "29:     [ac_cv_libcdata=no])",
          "30:    ])",
          "33:    [test \"x$ac_cv_libcdata\" = xyes],",
          "34:    [ac_cv_libcdata_CPPFLAGS=\"$pkg_cv_libcdata_CFLAGS\"",
          "35:    ac_cv_libcdata_LIBADD=\"$pkg_cv_libcdata_LIBS\"],",
          "36:    [dnl Check for headers",
          "37:    AC_CHECK_HEADERS([libcdata.h])",
          "39:    AS_IF(",
          "40:     [test \"x$ac_cv_header_libcdata_h\" = xno],",
          "42:     [dnl Check for the individual functions",
          "43:     ac_cv_libcdata=yes",
          "45:     AC_CHECK_LIB(",
          "46:      cdata,",
          "47:      libcdata_get_version,",
          "48:      [ac_cv_libcdata_dummy=yes],",
          "49:      [ac_cv_libcdata=no])",
          "51:     dnl Array functions",
          "52:     AC_CHECK_LIB(",
          "53:      cdata,",
          "54:      libcdata_array_initialize,",
          "55:      [ac_cv_libcdata_dummy=yes],",
          "56:      [ac_cv_libcdata=no])",
          "57:     AC_CHECK_LIB(",
          "58:      cdata,",
          "59:      libcdata_array_free,",
          "60:      [ac_cv_libcdata_dummy=yes],",
          "61:      [ac_cv_libcdata=no])",
          "62:     AC_CHECK_LIB(",
          "63:      cdata,",
          "64:      libcdata_array_empty,",
          "65:      [ac_cv_libcdata_dummy=yes],",
          "66:      [ac_cv_libcdata=no])",
          "67:     AC_CHECK_LIB(",
          "68:      cdata,",
          "69:      libcdata_array_clone,",
          "70:      [ac_cv_libcdata_dummy=yes],",
          "71:      [ac_cv_libcdata=no])",
          "72:     AC_CHECK_LIB(",
          "73:      cdata,",
          "74:      libcdata_array_resize,",
          "75:      [ac_cv_libcdata_dummy=yes],",
          "76:      [ac_cv_libcdata=no])",
          "77:     AC_CHECK_LIB(",
          "78:      cdata,",
          "79:      libcdata_array_reverse,",
          "80:      [ac_cv_libcdata_dummy=yes],",
          "81:      [ac_cv_libcdata=no])",
          "82:     AC_CHECK_LIB(",
          "83:      cdata,",
          "84:      libcdata_array_get_number_of_entries,",
          "85:      [ac_cv_libcdata_dummy=yes],",
          "86:      [ac_cv_libcdata=no])",
          "87:     AC_CHECK_LIB(",
          "88:      cdata,",
          "89:      libcdata_array_get_entry_by_index,",
          "90:      [ac_cv_libcdata_dummy=yes],",
          "91:      [ac_cv_libcdata=no])",
          "92:     AC_CHECK_LIB(",
          "93:      cdata,",
          "94:      libcdata_array_get_entry_by_value,",
          "95:      [ac_cv_libcdata_dummy=yes],",
          "96:      [ac_cv_libcdata=no])",
          "97:     AC_CHECK_LIB(",
          "98:      cdata,",
          "99:      libcdata_array_set_entry_by_index,",
          "100:      [ac_cv_libcdata_dummy=yes],",
          "101:      [ac_cv_libcdata=no])",
          "102:     AC_CHECK_LIB(",
          "103:      cdata,",
          "104:      libcdata_array_prepend_entry,",
          "105:      [ac_cv_libcdata_dummy=yes],",
          "106:      [ac_cv_libcdata=no])",
          "107:     AC_CHECK_LIB(",
          "108:      cdata,",
          "109:      libcdata_array_append_entry,",
          "110:      [ac_cv_libcdata_dummy=yes],",
          "111:      [ac_cv_libcdata=no])",
          "112:     AC_CHECK_LIB(",
          "113:      cdata,",
          "114:      libcdata_array_insert_entry,",
          "115:      [ac_cv_libcdata_dummy=yes],",
          "116:      [ac_cv_libcdata=no])",
          "117:     AC_CHECK_LIB(",
          "118:      cdata,",
          "119:      libcdata_array_remove_entry,",
          "120:      [ac_cv_libcdata_dummy=yes],",
          "121:      [ac_cv_libcdata=no])",
          "123:     dnl List functions",
          "124:     AC_CHECK_LIB(",
          "125:      cdata,",
          "126:      libcdata_list_initialize,",
          "127:      [ac_cv_libcdata_dummy=yes],",
          "128:      [ac_cv_libcdata=no])",
          "129:     AC_CHECK_LIB(",
          "130:      cdata,",
          "131:      libcdata_list_free,",
          "132:      [ac_cv_libcdata_dummy=yes],",
          "133:      [ac_cv_libcdata=no])",
          "134:     AC_CHECK_LIB(",
          "135:      cdata,",
          "136:      libcdata_list_empty,",
          "137:      [ac_cv_libcdata_dummy=yes],",
          "138:      [ac_cv_libcdata=no])",
          "139:     AC_CHECK_LIB(",
          "140:      cdata,",
          "141:      libcdata_list_clone,",
          "142:      [ac_cv_libcdata_dummy=yes],",
          "143:      [ac_cv_libcdata=no])",
          "144:     AC_CHECK_LIB(",
          "145:      cdata,",
          "146:      libcdata_list_get_number_of_elements,",
          "147:      [ac_cv_libcdata_dummy=yes],",
          "148:      [ac_cv_libcdata=no])",
          "149:     AC_CHECK_LIB(",
          "150:      cdata,",
          "151:      libcdata_list_get_first_element,",
          "152:      [ac_cv_libcdata_dummy=yes],",
          "153:      [ac_cv_libcdata=no])",
          "154:     AC_CHECK_LIB(",
          "155:      cdata,",
          "156:      libcdata_list_get_last_element,",
          "157:      [ac_cv_libcdata_dummy=yes],",
          "158:      [ac_cv_libcdata=no])",
          "159:     AC_CHECK_LIB(",
          "160:      cdata,",
          "161:      libcdata_list_get_element_by_index,",
          "162:      [ac_cv_libcdata_dummy=yes],",
          "163:      [ac_cv_libcdata=no])",
          "164:     AC_CHECK_LIB(",
          "165:      cdata,",
          "166:      libcdata_list_get_value_by_index,",
          "167:      [ac_cv_libcdata_dummy=yes],",
          "168:      [ac_cv_libcdata=no])",
          "169:     AC_CHECK_LIB(",
          "170:      cdata,",
          "171:      libcdata_list_prepend_element,",
          "172:      [ac_cv_libcdata_dummy=yes],",
          "173:      [ac_cv_libcdata=no])",
          "174:     AC_CHECK_LIB(",
          "175:      cdata,",
          "176:      libcdata_list_prepend_value,",
          "177:      [ac_cv_libcdata_dummy=yes],",
          "178:      [ac_cv_libcdata=no])",
          "179:     AC_CHECK_LIB(",
          "180:      cdata,",
          "181:      libcdata_list_append_element,",
          "182:      [ac_cv_libcdata_dummy=yes],",
          "183:      [ac_cv_libcdata=no])",
          "184:     AC_CHECK_LIB(",
          "185:      cdata,",
          "186:      libcdata_list_append_value,",
          "187:      [ac_cv_libcdata_dummy=yes],",
          "188:      [ac_cv_libcdata=no])",
          "189:     AC_CHECK_LIB(",
          "190:      cdata,",
          "191:      libcdata_list_insert_element,",
          "192:      [ac_cv_libcdata_dummy=yes],",
          "193:      [ac_cv_libcdata=no])",
          "194:     AC_CHECK_LIB(",
          "195:      cdata,",
          "196:      libcdata_list_insert_value,",
          "197:      [ac_cv_libcdata_dummy=yes],",
          "198:      [ac_cv_libcdata=no])",
          "199:     AC_CHECK_LIB(",
          "200:      cdata,",
          "201:      libcdata_list_remove_element,",
          "202:      [ac_cv_libcdata_dummy=yes],",
          "203:      [ac_cv_libcdata=no])",
          "205:     dnl List element functions",
          "206:     AC_CHECK_LIB(",
          "207:      cdata,",
          "208:      libcdata_list_element_initialize,",
          "209:      [ac_cv_libcdata_dummy=yes],",
          "210:      [ac_cv_libcdata=no])",
          "211:     AC_CHECK_LIB(",
          "212:      cdata,",
          "213:      libcdata_list_element_free,",
          "214:      [ac_cv_libcdata_dummy=yes],",
          "215:      [ac_cv_libcdata=no])",
          "216:     AC_CHECK_LIB(",
          "217:      cdata,",
          "218:      libcdata_list_element_get_value,",
          "219:      [ac_cv_libcdata_dummy=yes],",
          "220:      [ac_cv_libcdata=no])",
          "221:     AC_CHECK_LIB(",
          "222:      cdata,",
          "223:      libcdata_list_element_set_value,",
          "224:      [ac_cv_libcdata_dummy=yes],",
          "225:      [ac_cv_libcdata=no])",
          "226:     AC_CHECK_LIB(",
          "227:      cdata,",
          "228:      libcdata_list_element_get_previous_element,",
          "229:      [ac_cv_libcdata_dummy=yes],",
          "230:      [ac_cv_libcdata=no])",
          "231:     AC_CHECK_LIB(",
          "232:      cdata,",
          "233:      libcdata_list_element_set_previous_element,",
          "234:      [ac_cv_libcdata_dummy=yes],",
          "235:      [ac_cv_libcdata=no])",
          "236:     AC_CHECK_LIB(",
          "237:      cdata,",
          "238:      libcdata_list_element_get_next_element,",
          "239:      [ac_cv_libcdata_dummy=yes],",
          "240:     AC_CHECK_LIB(",
          "241:      cdata,",
          "242:      libcdata_list_element_set_next_element,",
          "243:      [ac_cv_libcdata_dummy=yes],",
          "244:      [ac_cv_libcdata=no])",
          "245:     AC_CHECK_LIB(",
          "246:      cdata,",
          "247:      libcdata_list_element_get_elements,",
          "248:      [ac_cv_libcdata_dummy=yes],",
          "249:      [ac_cv_libcdata=no])",
          "250:     AC_CHECK_LIB(",
          "251:      cdata,",
          "252:      libcdata_list_element_set_elements,",
          "253:      [ac_cv_libcdata_dummy=yes],",
          "254:      [ac_cv_libcdata=no])",
          "255:      [ac_cv_libcdata=no])",
          "257:     dnl Range list functions",
          "258:     AC_CHECK_LIB(",
          "259:      cdata,",
          "260:      libcdata_range_list_initialize,",
          "261:      [ac_cv_libcdata_dummy=yes],",
          "262:      [ac_cv_libcdata=no])",
          "263:     AC_CHECK_LIB(",
          "264:      cdata,",
          "265:      libcdata_range_list_free,",
          "266:      [ac_cv_libcdata_dummy=yes],",
          "267:      [ac_cv_libcdata=no])",
          "268:     AC_CHECK_LIB(",
          "269:      cdata,",
          "270:      libcdata_range_list_empty,",
          "271:      [ac_cv_libcdata_dummy=yes],",
          "272:      [ac_cv_libcdata=no])",
          "273:     AC_CHECK_LIB(",
          "274:      cdata,",
          "275:      libcdata_range_list_clone,",
          "276:      [ac_cv_libcdata_dummy=yes],",
          "277:      [ac_cv_libcdata=no])",
          "278:     AC_CHECK_LIB(",
          "279:      cdata,",
          "280:      libcdata_range_list_get_number_of_elements,",
          "281:      [ac_cv_libcdata_dummy=yes],",
          "282:      [ac_cv_libcdata=no])",
          "283:     AC_CHECK_LIB(",
          "284:      cdata,",
          "285:      libcdata_range_list_insert_range,",
          "286:      [ac_cv_libcdata_dummy=yes],",
          "287:      [ac_cv_libcdata=no])",
          "288:     AC_CHECK_LIB(",
          "289:      cdata,",
          "290:      libcdata_range_list_insert_range_list,",
          "291:      [ac_cv_libcdata_dummy=yes],",
          "292:      [ac_cv_libcdata=no])",
          "293:     AC_CHECK_LIB(",
          "294:      cdata,",
          "295:      libcdata_range_list_remove_range,",
          "296:      [ac_cv_libcdata_dummy=yes],",
          "297:      [ac_cv_libcdata=no])",
          "298:     AC_CHECK_LIB(",
          "299:      cdata,",
          "300:      libcdata_range_list_get_range_by_index,",
          "301:      [ac_cv_libcdata_dummy=yes],",
          "302:      [ac_cv_libcdata=no])",
          "303:     AC_CHECK_LIB(",
          "304:      cdata,",
          "305:      libcdata_range_list_get_range_at_offset,",
          "306:      [ac_cv_libcdata_dummy=yes],",
          "307:      [ac_cv_libcdata=no])",
          "308:     AC_CHECK_LIB(",
          "309:      cdata,",
          "310:      libcdata_range_list_range_is_present,",
          "311:      [ac_cv_libcdata_dummy=yes],",
          "312:      [ac_cv_libcdata=no])",
          "313:     AC_CHECK_LIB(",
          "314:      cdata,",
          "315:      libcdata_range_list_get_spanning_range,",
          "316:      [ac_cv_libcdata_dummy=yes],",
          "317:      [ac_cv_libcdata=no])",
          "319:     dnl Tree node functions",
          "320:     AC_CHECK_LIB(",
          "321:      cdata,",
          "322:      libcdata_tree_node_initialize,",
          "323:      [ac_cv_libcdata_dummy=yes],",
          "324:      [ac_cv_libcdata=no])",
          "325:     AC_CHECK_LIB(",
          "326:      cdata,",
          "327:      libcdata_tree_node_free,",
          "328:      [ac_cv_libcdata_dummy=yes],",
          "329:      [ac_cv_libcdata=no])",
          "330:     AC_CHECK_LIB(",
          "331:      cdata,",
          "332:      libcdata_tree_node_empty,",
          "333:      [ac_cv_libcdata_dummy=yes],",
          "334:      [ac_cv_libcdata=no])",
          "335:     AC_CHECK_LIB(",
          "336:      cdata,",
          "337:      libcdata_tree_node_clone,",
          "338:      [ac_cv_libcdata_dummy=yes],",
          "339:      [ac_cv_libcdata=no])",
          "340:     AC_CHECK_LIB(",
          "341:      cdata,",
          "342:      libcdata_tree_node_get_value,",
          "343:      [ac_cv_libcdata_dummy=yes],",
          "344:      [ac_cv_libcdata=no])",
          "345:     AC_CHECK_LIB(",
          "346:      cdata,",
          "347:      libcdata_tree_node_set_value,",
          "348:      [ac_cv_libcdata_dummy=yes],",
          "349:      [ac_cv_libcdata=no])",
          "350:     AC_CHECK_LIB(",
          "351:      cdata,",
          "352:      libcdata_tree_node_get_parent_node,",
          "353:      [ac_cv_libcdata_dummy=yes],",
          "354:      [ac_cv_libcdata=no])",
          "355:     AC_CHECK_LIB(",
          "356:      cdata,",
          "357:      libcdata_tree_node_set_parent_node,",
          "358:      [ac_cv_libcdata_dummy=yes],",
          "359:      [ac_cv_libcdata=no])",
          "360:     AC_CHECK_LIB(",
          "361:      cdata,",
          "362:      libcdata_tree_node_get_previous_node,",
          "363:      [ac_cv_libcdata_dummy=yes],",
          "364:      [ac_cv_libcdata=no])",
          "365:     AC_CHECK_LIB(",
          "366:      cdata,",
          "367:      libcdata_tree_node_set_previous_node,",
          "368:      [ac_cv_libcdata_dummy=yes],",
          "369:      [ac_cv_libcdata=no])",
          "370:     AC_CHECK_LIB(",
          "371:      cdata,",
          "372:      libcdata_tree_node_get_next_node,",
          "373:      [ac_cv_libcdata_dummy=yes],",
          "374:      [ac_cv_libcdata=no])",
          "375:     AC_CHECK_LIB(",
          "376:      cdata,",
          "377:      libcdata_tree_node_set_next_node,",
          "378:      [ac_cv_libcdata_dummy=yes],",
          "379:      [ac_cv_libcdata=no])",
          "380:     AC_CHECK_LIB(",
          "381:      cdata,",
          "382:      libcdata_tree_node_get_nodes,",
          "383:      [ac_cv_libcdata_dummy=yes],",
          "384:      [ac_cv_libcdata=no])",
          "385:     AC_CHECK_LIB(",
          "386:      cdata,",
          "387:      libcdata_tree_node_set_nodes,",
          "388:      [ac_cv_libcdata_dummy=yes],",
          "389:      [ac_cv_libcdata=no])",
          "390:     AC_CHECK_LIB(",
          "391:      cdata,",
          "392:      libcdata_tree_node_append_node,",
          "393:      [ac_cv_libcdata_dummy=yes],",
          "394:      [ac_cv_libcdata=no])",
          "395:     AC_CHECK_LIB(",
          "396:      cdata,",
          "397:      libcdata_tree_node_append_value,",
          "398:      [ac_cv_libcdata_dummy=yes],",
          "399:      [ac_cv_libcdata=no])",
          "400:     AC_CHECK_LIB(",
          "401:      cdata,",
          "402:      libcdata_tree_node_insert_node,",
          "403:      [ac_cv_libcdata_dummy=yes],",
          "404:      [ac_cv_libcdata=no])",
          "405:     AC_CHECK_LIB(",
          "406:      cdata,",
          "407:      libcdata_tree_node_insert_value,",
          "408:      [ac_cv_libcdata_dummy=yes],",
          "409:      [ac_cv_libcdata=no])",
          "410:     AC_CHECK_LIB(",
          "411:      cdata,",
          "412:      libcdata_tree_node_replace_node,",
          "413:      [ac_cv_libcdata_dummy=yes],",
          "414:      [ac_cv_libcdata=no])",
          "415:     AC_CHECK_LIB(",
          "416:      cdata,",
          "417:      libcdata_tree_node_remove_node,",
          "418:      [ac_cv_libcdata_dummy=yes],",
          "419:      [ac_cv_libcdata=no])",
          "420:     AC_CHECK_LIB(",
          "421:      cdata,",
          "422:      libcdata_tree_node_get_number_of_sub_nodes,",
          "423:      [ac_cv_libcdata_dummy=yes],",
          "424:      [ac_cv_libcdata=no])",
          "425:     AC_CHECK_LIB(",
          "426:      cdata,",
          "427:      libcdata_tree_node_get_sub_node_by_index,",
          "428:      [ac_cv_libcdata_dummy=yes],",
          "429:      [ac_cv_libcdata=no])",
          "430:     AC_CHECK_LIB(",
          "431:      cdata,",
          "432:      libcdata_tree_node_get_leaf_node_list,",
          "433:      [ac_cv_libcdata_dummy=yes],",
          "434:      [ac_cv_libcdata=no])",
          "436:     ac_cv_libcdata_LIBADD=\"-lcdata\"",
          "438:    ])",
          "439:   ])",
          "441:  AS_IF(",
          "442:   [test \"x$ac_cv_libcdata\" = xyes],",
          "443:   [AC_DEFINE(",
          "444:    [HAVE_LIBCDATA],",
          "445:    [1],",
          "446:    [Define to 1 if you have the `cdata' library (-lcdata).])",
          "449:  AS_IF(",
          "450:   [test \"x$ac_cv_libcdata\" = xyes],",
          "451:   [AC_SUBST(",
          "452:    [HAVE_LIBCDATA],",
          "453:    [1]) ],",
          "454:   [AC_SUBST(",
          "455:    [HAVE_LIBCDATA],",
          "456:    [0])",
          "458:  ])",
          "462:  [AX_COMMON_ARG_WITH(",
          "463:   [libcdata],",
          "464:   [libcdata],",
          "465:   [search for libcdata in includedir and libdir or in the specified DIR, or no if to use local version],",
          "466:   [auto-detect],",
          "467:   [DIR])",
          "469:  dnl Check for a shared library version",
          "470:  AX_LIBCDATA_CHECK_LIB",
          "472:  dnl Check if the dependencies for the local library version",
          "473:  AS_IF(",
          "474:   [test \"x$ac_cv_libcdata\" != xyes],",
          "475:   [ac_cv_libcdata_CPPFLAGS=\"-I../libcdata\";",
          "476:   ac_cv_libcdata_LIBADD=\"../libcdata/libcdata.la\";",
          "478:   ac_cv_libcdata=local",
          "480:   AC_DEFINE(",
          "481:    [HAVE_LOCAL_LIBCDATA],",
          "482:    [1],",
          "483:    [Define to 1 if the local version of libcdata is used.])",
          "484:   AC_SUBST(",
          "485:    [HAVE_LOCAL_LIBCDATA],",
          "486:    [1])",
          "487:   ])",
          "489:  AM_CONDITIONAL(",
          "490:   [HAVE_LOCAL_LIBCDATA],",
          "491:   [test \"x$ac_cv_libcdata\" = xlocal])",
          "492:  AS_IF(",
          "493:   [test \"x$ac_cv_libcdata_CPPFLAGS\" != \"x\"],",
          "494:   [AC_SUBST(",
          "495:    [LIBCDATA_CPPFLAGS],",
          "496:    [$ac_cv_libcdata_CPPFLAGS])",
          "497:   ])",
          "498:  AS_IF(",
          "499:   [test \"x$ac_cv_libcdata_LIBADD\" != \"x\"],",
          "500:   [AC_SUBST(",
          "501:    [LIBCDATA_LIBADD],",
          "502:    [$ac_cv_libcdata_LIBADD])",
          "503:   ])",
          "505:  AS_IF(",
          "506:   [test \"x$ac_cv_libcdata\" = xyes],",
          "507:   [AC_SUBST(",
          "508:    [ax_libcdata_pc_libs_private],",
          "509:    [-lcdata])",
          "510:   ])",
          "512:  AS_IF(",
          "513:   [test \"x$ac_cv_libcdata\" = xyes],",
          "514:   [AC_SUBST(",
          "515:    [ax_libcdata_spec_requires],",
          "516:    [libcdata])",
          "517:   AC_SUBST(",
          "518:    [ax_libcdata_spec_build_requires],",
          "519:    [libcdata-devel])",
          "521:  ])",
          "",
          "[Added Lines]",
          "1: dnl Checks for libcdata or required headers and functions",
          "3: dnl Version: 20170904",
          "8:   [dnl Check if parameters were provided",
          "10:     [test \"x$ac_cv_with_libcdata\" != x && test \"x$ac_cv_with_libcdata\" != xno && test \"x$ac_cv_with_libcdata\" != xauto-detect],",
          "11:     [AS_IF(",
          "12:       [test -d \"$ac_cv_with_libcdata\"],",
          "13:       [CFLAGS=\"$CFLAGS -I${ac_cv_with_libcdata}/include\"",
          "14:       LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libcdata}/lib\"],",
          "15:       [AC_MSG_WARN([no such directory: $ac_cv_with_libcdata])",
          "16:       ])",
          "17:     ])",
          "20:     [test \"x$ac_cv_with_libcdata\" = xno],",
          "22:     [dnl Check for a pkg-config file",
          "23:     AS_IF(",
          "24:       [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:       [PKG_CHECK_MODULES(",
          "26:         [libcdata],",
          "27:         [libcdata >= 20160108],",
          "28:         [ac_cv_libcdata=yes],",
          "29:         [ac_cv_libcdata=check])",
          "30:       ])",
          "32:     AS_IF(",
          "33:       [test \"x$ac_cv_libcdata\" = xyes],",
          "34:       [ac_cv_libcdata_CPPFLAGS=\"$pkg_cv_libcdata_CFLAGS\"",
          "35:       ac_cv_libcdata_LIBADD=\"$pkg_cv_libcdata_LIBS\"])",
          "37:     AS_IF(",
          "38:       [test \"x$ac_cv_libcdata\" = xcheck],",
          "39:       [dnl Check for headers",
          "40:       AC_CHECK_HEADERS([libcdata.h])",
          "42:       AS_IF(",
          "43:         [test \"x$ac_cv_header_libcdata_h\" = xno],",
          "44:         [ac_cv_libcdata=no],",
          "45:         [dnl Check for the individual functions",
          "46:         ac_cv_libcdata=yes",
          "48:         AC_CHECK_LIB(",
          "49:           cdata,",
          "50:           libcdata_get_version,",
          "51:           [ac_cv_libcdata_dummy=yes],",
          "52:           [ac_cv_libcdata=no])",
          "54:         dnl Array functions",
          "55:         AC_CHECK_LIB(",
          "56:           cdata,",
          "57:           libcdata_array_initialize,",
          "58:           [ac_cv_libcdata_dummy=yes],",
          "59:           [ac_cv_libcdata=no])",
          "60:         AC_CHECK_LIB(",
          "61:           cdata,",
          "62:           libcdata_array_free,",
          "63:           [ac_cv_libcdata_dummy=yes],",
          "64:           [ac_cv_libcdata=no])",
          "65:         AC_CHECK_LIB(",
          "66:           cdata,",
          "67:           libcdata_array_empty,",
          "68:           [ac_cv_libcdata_dummy=yes],",
          "69:           [ac_cv_libcdata=no])",
          "70:         AC_CHECK_LIB(",
          "71:           cdata,",
          "72:           libcdata_array_clone,",
          "73:           [ac_cv_libcdata_dummy=yes],",
          "74:           [ac_cv_libcdata=no])",
          "75:         AC_CHECK_LIB(",
          "76:           cdata,",
          "77:           libcdata_array_resize,",
          "78:           [ac_cv_libcdata_dummy=yes],",
          "79:           [ac_cv_libcdata=no])",
          "80:         AC_CHECK_LIB(",
          "81:           cdata,",
          "82:           libcdata_array_reverse,",
          "83:           [ac_cv_libcdata_dummy=yes],",
          "84:           [ac_cv_libcdata=no])",
          "85:         AC_CHECK_LIB(",
          "86:           cdata,",
          "87:           libcdata_array_get_number_of_entries,",
          "88:           [ac_cv_libcdata_dummy=yes],",
          "89:           [ac_cv_libcdata=no])",
          "90:         AC_CHECK_LIB(",
          "91:           cdata,",
          "92:           libcdata_array_get_entry_by_index,",
          "93:           [ac_cv_libcdata_dummy=yes],",
          "94:           [ac_cv_libcdata=no])",
          "95:         AC_CHECK_LIB(",
          "96:           cdata,",
          "97:           libcdata_array_get_entry_by_value,",
          "98:           [ac_cv_libcdata_dummy=yes],",
          "99:           [ac_cv_libcdata=no])",
          "100:         AC_CHECK_LIB(",
          "101:           cdata,",
          "102:           libcdata_array_set_entry_by_index,",
          "103:           [ac_cv_libcdata_dummy=yes],",
          "104:           [ac_cv_libcdata=no])",
          "105:         AC_CHECK_LIB(",
          "106:           cdata,",
          "107:           libcdata_array_prepend_entry,",
          "108:           [ac_cv_libcdata_dummy=yes],",
          "109:           [ac_cv_libcdata=no])",
          "110:         AC_CHECK_LIB(",
          "111:           cdata,",
          "112:           libcdata_array_append_entry,",
          "113:           [ac_cv_libcdata_dummy=yes],",
          "114:           [ac_cv_libcdata=no])",
          "115:         AC_CHECK_LIB(",
          "116:           cdata,",
          "117:           libcdata_array_insert_entry,",
          "118:           [ac_cv_libcdata_dummy=yes],",
          "119:           [ac_cv_libcdata=no])",
          "120:         AC_CHECK_LIB(",
          "121:           cdata,",
          "122:           libcdata_array_remove_entry,",
          "123:           [ac_cv_libcdata_dummy=yes],",
          "124:           [ac_cv_libcdata=no])",
          "126:         dnl List functions",
          "127:         AC_CHECK_LIB(",
          "128:           cdata,",
          "129:           libcdata_list_initialize,",
          "130:           [ac_cv_libcdata_dummy=yes],",
          "131:           [ac_cv_libcdata=no])",
          "132:         AC_CHECK_LIB(",
          "133:           cdata,",
          "134:           libcdata_list_free,",
          "135:           [ac_cv_libcdata_dummy=yes],",
          "136:           [ac_cv_libcdata=no])",
          "137:         AC_CHECK_LIB(",
          "138:           cdata,",
          "139:           libcdata_list_empty,",
          "140:           [ac_cv_libcdata_dummy=yes],",
          "141:           [ac_cv_libcdata=no])",
          "142:         AC_CHECK_LIB(",
          "143:           cdata,",
          "144:           libcdata_list_clone,",
          "145:           [ac_cv_libcdata_dummy=yes],",
          "146:           [ac_cv_libcdata=no])",
          "147:         AC_CHECK_LIB(",
          "148:           cdata,",
          "149:           libcdata_list_get_number_of_elements,",
          "150:           [ac_cv_libcdata_dummy=yes],",
          "151:           [ac_cv_libcdata=no])",
          "152:         AC_CHECK_LIB(",
          "153:           cdata,",
          "154:           libcdata_list_get_first_element,",
          "155:           [ac_cv_libcdata_dummy=yes],",
          "156:           [ac_cv_libcdata=no])",
          "157:         AC_CHECK_LIB(",
          "158:           cdata,",
          "159:           libcdata_list_get_last_element,",
          "160:           [ac_cv_libcdata_dummy=yes],",
          "161:           [ac_cv_libcdata=no])",
          "162:         AC_CHECK_LIB(",
          "163:           cdata,",
          "164:           libcdata_list_get_element_by_index,",
          "165:           [ac_cv_libcdata_dummy=yes],",
          "166:           [ac_cv_libcdata=no])",
          "167:         AC_CHECK_LIB(",
          "168:           cdata,",
          "169:           libcdata_list_get_value_by_index,",
          "170:           [ac_cv_libcdata_dummy=yes],",
          "171:           [ac_cv_libcdata=no])",
          "172:         AC_CHECK_LIB(",
          "173:           cdata,",
          "174:           libcdata_list_prepend_element,",
          "175:           [ac_cv_libcdata_dummy=yes],",
          "176:           [ac_cv_libcdata=no])",
          "177:         AC_CHECK_LIB(",
          "178:           cdata,",
          "179:           libcdata_list_prepend_value,",
          "180:           [ac_cv_libcdata_dummy=yes],",
          "181:           [ac_cv_libcdata=no])",
          "182:         AC_CHECK_LIB(",
          "183:           cdata,",
          "184:           libcdata_list_append_element,",
          "185:           [ac_cv_libcdata_dummy=yes],",
          "186:           [ac_cv_libcdata=no])",
          "187:         AC_CHECK_LIB(",
          "188:           cdata,",
          "189:           libcdata_list_append_value,",
          "190:           [ac_cv_libcdata_dummy=yes],",
          "191:           [ac_cv_libcdata=no])",
          "192:         AC_CHECK_LIB(",
          "193:           cdata,",
          "194:           libcdata_list_insert_element,",
          "195:           [ac_cv_libcdata_dummy=yes],",
          "196:           [ac_cv_libcdata=no])",
          "197:         AC_CHECK_LIB(",
          "198:           cdata,",
          "199:           libcdata_list_insert_value,",
          "200:           [ac_cv_libcdata_dummy=yes],",
          "201:           [ac_cv_libcdata=no])",
          "202:         AC_CHECK_LIB(",
          "203:           cdata,",
          "204:           libcdata_list_remove_element,",
          "205:           [ac_cv_libcdata_dummy=yes],",
          "206:           [ac_cv_libcdata=no])",
          "208:         dnl List element functions",
          "209:         AC_CHECK_LIB(",
          "210:           cdata,",
          "211:           libcdata_list_element_initialize,",
          "212:           [ac_cv_libcdata_dummy=yes],",
          "213:           [ac_cv_libcdata=no])",
          "214:         AC_CHECK_LIB(",
          "215:           cdata,",
          "216:           libcdata_list_element_free,",
          "217:           [ac_cv_libcdata_dummy=yes],",
          "218:           [ac_cv_libcdata=no])",
          "219:         AC_CHECK_LIB(",
          "220:           cdata,",
          "221:           libcdata_list_element_get_value,",
          "222:           [ac_cv_libcdata_dummy=yes],",
          "223:           [ac_cv_libcdata=no])",
          "224:         AC_CHECK_LIB(",
          "225:           cdata,",
          "226:           libcdata_list_element_set_value,",
          "227:           [ac_cv_libcdata_dummy=yes],",
          "228:           [ac_cv_libcdata=no])",
          "229:         AC_CHECK_LIB(",
          "230:           cdata,",
          "231:           libcdata_list_element_get_previous_element,",
          "232:           [ac_cv_libcdata_dummy=yes],",
          "233:           [ac_cv_libcdata=no])",
          "234:         AC_CHECK_LIB(",
          "235:           cdata,",
          "236:           libcdata_list_element_set_previous_element,",
          "237:           [ac_cv_libcdata_dummy=yes],",
          "238:           [ac_cv_libcdata=no])",
          "239:         AC_CHECK_LIB(",
          "240:           cdata,",
          "241:           libcdata_list_element_get_next_element,",
          "242:           [ac_cv_libcdata_dummy=yes],",
          "243:         AC_CHECK_LIB(",
          "244:           cdata,",
          "245:           libcdata_list_element_set_next_element,",
          "246:           [ac_cv_libcdata_dummy=yes],",
          "247:           [ac_cv_libcdata=no])",
          "248:         AC_CHECK_LIB(",
          "249:           cdata,",
          "250:           libcdata_list_element_get_elements,",
          "251:           [ac_cv_libcdata_dummy=yes],",
          "252:           [ac_cv_libcdata=no])",
          "253:         AC_CHECK_LIB(",
          "254:           cdata,",
          "255:           libcdata_list_element_set_elements,",
          "256:           [ac_cv_libcdata_dummy=yes],",
          "257:           [ac_cv_libcdata=no])",
          "258:           [ac_cv_libcdata=no])",
          "260:         dnl Range list functions",
          "261:         AC_CHECK_LIB(",
          "262:           cdata,",
          "263:           libcdata_range_list_initialize,",
          "264:           [ac_cv_libcdata_dummy=yes],",
          "265:           [ac_cv_libcdata=no])",
          "266:         AC_CHECK_LIB(",
          "267:           cdata,",
          "268:           libcdata_range_list_free,",
          "269:           [ac_cv_libcdata_dummy=yes],",
          "270:           [ac_cv_libcdata=no])",
          "271:         AC_CHECK_LIB(",
          "272:           cdata,",
          "273:           libcdata_range_list_empty,",
          "274:           [ac_cv_libcdata_dummy=yes],",
          "275:           [ac_cv_libcdata=no])",
          "276:         AC_CHECK_LIB(",
          "277:           cdata,",
          "278:           libcdata_range_list_clone,",
          "279:           [ac_cv_libcdata_dummy=yes],",
          "280:           [ac_cv_libcdata=no])",
          "281:         AC_CHECK_LIB(",
          "282:           cdata,",
          "283:           libcdata_range_list_get_number_of_elements,",
          "284:           [ac_cv_libcdata_dummy=yes],",
          "285:           [ac_cv_libcdata=no])",
          "286:         AC_CHECK_LIB(",
          "287:           cdata,",
          "288:           libcdata_range_list_insert_range,",
          "289:           [ac_cv_libcdata_dummy=yes],",
          "290:           [ac_cv_libcdata=no])",
          "291:         AC_CHECK_LIB(",
          "292:           cdata,",
          "293:           libcdata_range_list_insert_range_list,",
          "294:           [ac_cv_libcdata_dummy=yes],",
          "295:           [ac_cv_libcdata=no])",
          "296:         AC_CHECK_LIB(",
          "297:           cdata,",
          "298:           libcdata_range_list_remove_range,",
          "299:           [ac_cv_libcdata_dummy=yes],",
          "300:           [ac_cv_libcdata=no])",
          "301:         AC_CHECK_LIB(",
          "302:           cdata,",
          "303:           libcdata_range_list_get_range_by_index,",
          "304:           [ac_cv_libcdata_dummy=yes],",
          "305:           [ac_cv_libcdata=no])",
          "306:         AC_CHECK_LIB(",
          "307:           cdata,",
          "308:           libcdata_range_list_get_range_at_offset,",
          "309:           [ac_cv_libcdata_dummy=yes],",
          "310:           [ac_cv_libcdata=no])",
          "311:         AC_CHECK_LIB(",
          "312:           cdata,",
          "313:           libcdata_range_list_range_is_present,",
          "314:           [ac_cv_libcdata_dummy=yes],",
          "315:           [ac_cv_libcdata=no])",
          "316:         AC_CHECK_LIB(",
          "317:           cdata,",
          "318:           libcdata_range_list_get_spanning_range,",
          "319:           [ac_cv_libcdata_dummy=yes],",
          "320:           [ac_cv_libcdata=no])",
          "322:         dnl Tree node functions",
          "323:         AC_CHECK_LIB(",
          "324:           cdata,",
          "325:           libcdata_tree_node_initialize,",
          "326:           [ac_cv_libcdata_dummy=yes],",
          "327:           [ac_cv_libcdata=no])",
          "328:         AC_CHECK_LIB(",
          "329:           cdata,",
          "330:           libcdata_tree_node_free,",
          "331:           [ac_cv_libcdata_dummy=yes],",
          "332:           [ac_cv_libcdata=no])",
          "333:         AC_CHECK_LIB(",
          "334:           cdata,",
          "335:           libcdata_tree_node_empty,",
          "336:           [ac_cv_libcdata_dummy=yes],",
          "337:           [ac_cv_libcdata=no])",
          "338:         AC_CHECK_LIB(",
          "339:           cdata,",
          "340:           libcdata_tree_node_clone,",
          "341:           [ac_cv_libcdata_dummy=yes],",
          "342:           [ac_cv_libcdata=no])",
          "343:         AC_CHECK_LIB(",
          "344:           cdata,",
          "345:           libcdata_tree_node_get_value,",
          "346:           [ac_cv_libcdata_dummy=yes],",
          "347:           [ac_cv_libcdata=no])",
          "348:         AC_CHECK_LIB(",
          "349:           cdata,",
          "350:           libcdata_tree_node_set_value,",
          "351:           [ac_cv_libcdata_dummy=yes],",
          "352:           [ac_cv_libcdata=no])",
          "353:         AC_CHECK_LIB(",
          "354:           cdata,",
          "355:           libcdata_tree_node_get_parent_node,",
          "356:           [ac_cv_libcdata_dummy=yes],",
          "357:           [ac_cv_libcdata=no])",
          "358:         AC_CHECK_LIB(",
          "359:           cdata,",
          "360:           libcdata_tree_node_set_parent_node,",
          "361:           [ac_cv_libcdata_dummy=yes],",
          "362:           [ac_cv_libcdata=no])",
          "363:         AC_CHECK_LIB(",
          "364:           cdata,",
          "365:           libcdata_tree_node_get_previous_node,",
          "366:           [ac_cv_libcdata_dummy=yes],",
          "367:           [ac_cv_libcdata=no])",
          "368:         AC_CHECK_LIB(",
          "369:           cdata,",
          "370:           libcdata_tree_node_set_previous_node,",
          "371:           [ac_cv_libcdata_dummy=yes],",
          "372:           [ac_cv_libcdata=no])",
          "373:         AC_CHECK_LIB(",
          "374:           cdata,",
          "375:           libcdata_tree_node_get_next_node,",
          "376:           [ac_cv_libcdata_dummy=yes],",
          "377:           [ac_cv_libcdata=no])",
          "378:         AC_CHECK_LIB(",
          "379:           cdata,",
          "380:           libcdata_tree_node_set_next_node,",
          "381:           [ac_cv_libcdata_dummy=yes],",
          "382:           [ac_cv_libcdata=no])",
          "383:         AC_CHECK_LIB(",
          "384:           cdata,",
          "385:           libcdata_tree_node_get_nodes,",
          "386:           [ac_cv_libcdata_dummy=yes],",
          "387:           [ac_cv_libcdata=no])",
          "388:         AC_CHECK_LIB(",
          "389:           cdata,",
          "390:           libcdata_tree_node_set_nodes,",
          "391:           [ac_cv_libcdata_dummy=yes],",
          "392:           [ac_cv_libcdata=no])",
          "393:         AC_CHECK_LIB(",
          "394:           cdata,",
          "395:           libcdata_tree_node_append_node,",
          "396:           [ac_cv_libcdata_dummy=yes],",
          "397:           [ac_cv_libcdata=no])",
          "398:         AC_CHECK_LIB(",
          "399:           cdata,",
          "400:           libcdata_tree_node_append_value,",
          "401:           [ac_cv_libcdata_dummy=yes],",
          "402:           [ac_cv_libcdata=no])",
          "403:         AC_CHECK_LIB(",
          "404:           cdata,",
          "405:           libcdata_tree_node_insert_node,",
          "406:           [ac_cv_libcdata_dummy=yes],",
          "407:           [ac_cv_libcdata=no])",
          "408:         AC_CHECK_LIB(",
          "409:           cdata,",
          "410:           libcdata_tree_node_insert_value,",
          "411:           [ac_cv_libcdata_dummy=yes],",
          "412:           [ac_cv_libcdata=no])",
          "413:         AC_CHECK_LIB(",
          "414:           cdata,",
          "415:           libcdata_tree_node_replace_node,",
          "416:           [ac_cv_libcdata_dummy=yes],",
          "417:           [ac_cv_libcdata=no])",
          "418:         AC_CHECK_LIB(",
          "419:           cdata,",
          "420:           libcdata_tree_node_remove_node,",
          "421:           [ac_cv_libcdata_dummy=yes],",
          "422:           [ac_cv_libcdata=no])",
          "423:         AC_CHECK_LIB(",
          "424:           cdata,",
          "425:           libcdata_tree_node_get_number_of_sub_nodes,",
          "426:           [ac_cv_libcdata_dummy=yes],",
          "427:           [ac_cv_libcdata=no])",
          "428:         AC_CHECK_LIB(",
          "429:           cdata,",
          "430:           libcdata_tree_node_get_sub_node_by_index,",
          "431:           [ac_cv_libcdata_dummy=yes],",
          "432:           [ac_cv_libcdata=no])",
          "433:         AC_CHECK_LIB(",
          "434:           cdata,",
          "435:           libcdata_tree_node_get_leaf_node_list,",
          "436:           [ac_cv_libcdata_dummy=yes],",
          "437:           [ac_cv_libcdata=no])",
          "439:         ac_cv_libcdata_LIBADD=\"-lcdata\"",
          "440:         ])",
          "441:       ])",
          "444:   AS_IF(",
          "445:     [test \"x$ac_cv_libcdata\" = xyes],",
          "446:     [AC_DEFINE(",
          "447:       [HAVE_LIBCDATA],",
          "448:       [1],",
          "449:       [Define to 1 if you have the `cdata' library (-lcdata).])",
          "450:     ])",
          "452:   AS_IF(",
          "453:     [test \"x$ac_cv_libcdata\" = xyes],",
          "454:     [AC_SUBST(",
          "455:       [HAVE_LIBCDATA],",
          "456:       [1]) ],",
          "457:     [AC_SUBST(",
          "458:       [HAVE_LIBCDATA],",
          "459:       [0])",
          "460:     ])",
          "463: dnl Function to detect if libcdata dependencies are available",
          "464: AC_DEFUN([AX_LIBCDATA_CHECK_LOCAL],",
          "465:   [dnl No additional checks.",
          "467:   ac_cv_libcdata_CPPFLAGS=\"-I../libcdata\";",
          "468:   ac_cv_libcdata_LIBADD=\"../libcdata/libcdata.la\";",
          "470:   ac_cv_libcdata=local",
          "475:   [AX_COMMON_ARG_WITH(",
          "476:     [libcdata],",
          "477:     [libcdata],",
          "478:     [search for libcdata in includedir and libdir or in the specified DIR, or no if to use local version],",
          "479:     [auto-detect],",
          "480:     [DIR])",
          "482:   dnl Check for a shared library version",
          "483:   AX_LIBCDATA_CHECK_LIB",
          "485:   dnl Check if the dependencies for the local library version",
          "486:   AS_IF(",
          "487:     [test \"x$ac_cv_libcdata\" != xyes],",
          "488:     [AX_LIBCDATA_CHECK_LOCAL",
          "490:     AC_DEFINE(",
          "491:       [HAVE_LOCAL_LIBCDATA],",
          "492:       [1],",
          "493:       [Define to 1 if the local version of libcdata is used.])",
          "494:     AC_SUBST(",
          "495:       [HAVE_LOCAL_LIBCDATA],",
          "496:       [1])",
          "497:     ])",
          "499:   AM_CONDITIONAL(",
          "500:     [HAVE_LOCAL_LIBCDATA],",
          "501:     [test \"x$ac_cv_libcdata\" = xlocal])",
          "502:   AS_IF(",
          "503:     [test \"x$ac_cv_libcdata_CPPFLAGS\" != \"x\"],",
          "504:     [AC_SUBST(",
          "505:       [LIBCDATA_CPPFLAGS],",
          "506:       [$ac_cv_libcdata_CPPFLAGS])",
          "507:     ])",
          "508:   AS_IF(",
          "509:     [test \"x$ac_cv_libcdata_LIBADD\" != \"x\"],",
          "510:     [AC_SUBST(",
          "511:       [LIBCDATA_LIBADD],",
          "512:       [$ac_cv_libcdata_LIBADD])",
          "513:     ])",
          "515:   AS_IF(",
          "516:     [test \"x$ac_cv_libcdata\" = xyes],",
          "517:     [AC_SUBST(",
          "518:       [ax_libcdata_pc_libs_private],",
          "519:       [-lcdata])",
          "520:     ])",
          "522:   AS_IF(",
          "523:     [test \"x$ac_cv_libcdata\" = xyes],",
          "524:     [AC_SUBST(",
          "525:       [ax_libcdata_spec_requires],",
          "526:       [libcdata])",
          "527:     AC_SUBST(",
          "528:       [ax_libcdata_spec_build_requires],",
          "529:       [libcdata-devel])",
          "530:     ])",
          "",
          "---------------"
        ],
        "m4/libcdirectory.m4||m4/libcdirectory.m4": [
          "File: m4/libcdirectory.m4 -> m4/libcdirectory.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: dnl",
          "5: dnl Function to detect if libcdirectory is available",
          "6: dnl ac_libcdirectory_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "7: AC_DEFUN([AX_LIBCDIRECTORY_CHECK_LIB],",
          "23:   AS_IF(",
          "32:   AS_IF(",
          "41:     [ac_cv_libcdirectory=no],",
          "85:     AS_IF(",
          "122:     AS_IF(",
          "132:     ])",
          "152:   ])",
          "155: dnl Function to detect if libcdirectory dependencies are available",
          "156: AC_DEFUN([AX_LIBCDIRECTORY_CHECK_LOCAL],",
          "193: dnl Function to detect how to enable libcdirectory",
          "194: AC_DEFUN([AX_LIBCDIRECTORY_CHECK_ENABLE],",
          "250:   ])",
          "",
          "[Removed Lines]",
          "1: dnl Functions for libcdirectory",
          "3: dnl Version: 20160102",
          "8:  [dnl Check if parameters were provided",
          "9:  AS_IF(",
          "10:   [test \"x$ac_cv_with_libcdirectory\" != x && test \"x$ac_cv_with_libcdirectory\" != xno && test \"x$ac_cv_with_libcdirectory\" != xauto-detect],",
          "11:   [AS_IF(",
          "12:    [test -d \"$ac_cv_with_libcdirectory\"],",
          "13:    [CFLAGS=\"$CFLAGS -I${ac_cv_with_libcdirectory}/include\"",
          "14:    LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libcdirectory}/lib\"],",
          "15:    [AC_MSG_WARN([no such directory: $ac_cv_with_libcdirectory])",
          "16:    ])",
          "17:   ])",
          "19:  AS_IF(",
          "20:   [test \"x$ac_cv_with_libcdirectory\" = xno],",
          "21:   [ac_cv_libcdirectory=no],",
          "22:   [dnl Check for a pkg-config file",
          "24:    [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:    [PKG_CHECK_MODULES(",
          "26:     [libcdirectory],",
          "27:     [libcdirectory >= 20120423],",
          "28:     [ac_cv_libcdirectory=yes],",
          "29:     [ac_cv_libcdirectory=no])",
          "30:    ])",
          "33:    [test \"x$ac_cv_libcdirectory\" = xyes],",
          "34:    [ac_cv_libcdirectory_CPPFLAGS=\"$pkg_cv_libcdirectory_CFLAGS\"",
          "35:    ac_cv_libcdirectory_LIBADD=\"$pkg_cv_libcdirectory_LIBS\"],",
          "36:    [dnl Check for headers",
          "37:    AC_CHECK_HEADERS([libcdirectory.h])",
          "39:    AS_IF(",
          "40:     [test \"x$ac_cv_header_libcdirectory_h\" = xno],",
          "42:     [dnl Check for the individual functions",
          "43:     ac_cv_libcdirectory=yes",
          "45:     AC_CHECK_LIB(",
          "46:      cdirectory,",
          "47:      libcdirectory_get_version,",
          "48:      [ac_cv_libcdirectory_dummy=yes],",
          "49:      [ac_cv_libcdirectory=no])",
          "51:     dnl Directory functions",
          "52:     AC_CHECK_LIB(",
          "53:      cdirectory,",
          "54:      libcdirectory_directory_initialize,",
          "55:      [ac_cv_libcdirectory_dummy=yes],",
          "56:      [ac_cv_libcdirectory=no])",
          "57:     AC_CHECK_LIB(",
          "58:      cdirectory,",
          "59:      libcdirectory_directory_free,",
          "60:      [ac_cv_libcdirectory_dummy=yes],",
          "61:      [ac_cv_libcdirectory=no])",
          "63:     AC_CHECK_LIB(",
          "64:      cdirectory,",
          "65:      libcdirectory_directory_open,",
          "66:      [ac_cv_libcdirectory_dummy=yes],",
          "67:      [ac_cv_libcdirectory=no])",
          "68:     AC_CHECK_LIB(",
          "69:      cdirectory,",
          "70:      libcdirectory_directory_close,",
          "71:      [ac_cv_libcdirectory_dummy=yes],",
          "72:      [ac_cv_libcdirectory=no])",
          "74:     AC_CHECK_LIB(",
          "75:      cdirectory,",
          "76:      libcdirectory_directory_read_entry,",
          "77:      [ac_cv_libcdirectory_dummy=yes],",
          "78:      [ac_cv_libcdirectory=no])",
          "79:     AC_CHECK_LIB(",
          "80:      cdirectory,",
          "81:      libcdirectory_directory_has_entry,",
          "82:      [ac_cv_libcdirectory_dummy=yes],",
          "83:      [ac_cv_libcdirectory=no])",
          "86:      [test \"x$ac_cv_enable_wide_character_type\" != xno],",
          "87:      [AC_CHECK_LIB(",
          "88:       cdirectory,",
          "89:       libcdirectory_directory_open_wide,",
          "90:       [ac_cv_libcdirectory_dummy=yes],",
          "91:       [ac_cv_libcdirectory=no])",
          "92:      AC_CHECK_LIB(",
          "93:       cdirectory,",
          "94:       libcdirectory_directory_has_entry_wide,",
          "95:       [ac_cv_libcdirectory_dummy=yes],",
          "96:       [ac_cv_libcdirectory=no])",
          "97:      ])",
          "99:     dnl Directory entry functions",
          "100:     AC_CHECK_LIB(",
          "101:      cdirectory,",
          "102:      libcdirectory_directory_entry_initialize,",
          "103:      [ac_cv_libcdirectory_dummy=yes],",
          "104:      [ac_cv_libcdirectory=no])",
          "105:     AC_CHECK_LIB(",
          "106:      cdirectory,",
          "107:      libcdirectory_directory_entry_free,",
          "108:      [ac_cv_libcdirectory_dummy=yes],",
          "109:      [ac_cv_libcdirectory=no])",
          "111:     AC_CHECK_LIB(",
          "112:      cdirectory,",
          "113:      libcdirectory_directory_entry_get_type,",
          "114:      [ac_cv_libcdirectory_dummy=yes],",
          "115:      [ac_cv_libcdirectory=no])",
          "116:     AC_CHECK_LIB(",
          "117:      cdirectory,",
          "118:      libcdirectory_directory_entry_get_name,",
          "119:      [ac_cv_libcdirectory_dummy=yes],",
          "120:      [ac_cv_libcdirectory=no])",
          "123:      [test \"x$ac_cv_enable_wide_character_type\" != xno],",
          "124:      [AC_CHECK_LIB(",
          "125:       cdirectory,",
          "126:       libcdirectory_directory_entry_get_name_wide,",
          "127:       [ac_cv_libcdirectory_dummy=yes],",
          "128:       [ac_cv_libcdirectory=no])",
          "129:      ])",
          "131:     ac_cv_libcdirectory_LIBADD=\"-lcdirectory\"",
          "133:    ])",
          "134:   ])",
          "136:  AS_IF(",
          "137:   [test \"x$ac_cv_libcdirectory\" = xyes],",
          "138:   [AC_DEFINE(",
          "139:    [HAVE_LIBCDIRECTORY],",
          "140:    [1],",
          "141:    [Define to 1 if you have the `cdirectory' library (-lcdirectory).])",
          "142:   ])",
          "144:  AS_IF(",
          "145:   [test \"x$ac_cv_libcdirectory\" = xyes],",
          "146:   [AC_SUBST(",
          "147:    [HAVE_LIBCDIRECTORY],",
          "148:    [1]) ],",
          "149:   [AC_SUBST(",
          "150:    [HAVE_LIBCDIRECTORY],",
          "151:    [0])",
          "153:  ])",
          "157:  [AS_IF(",
          "158:   [test \"x$ac_cv_enable_winapi\" = xno],",
          "159:   [dnl Headers included in libcdirectory/libcdirectory_directory.h",
          "160:   AC_CHECK_HEADERS([dirent.h errno.h sys/stat.h])",
          "162:   dnl Directory functions used in libcdirectory/libcdirectory_directory.h",
          "163:   AC_CHECK_FUNCS([closedir opendir readdir_r])",
          "165:   AS_IF(",
          "166:    [test \"x$ac_cv_func_closedir\" != xyes],",
          "167:    [AC_MSG_FAILURE(",
          "168:     [Missing functions: closedir],",
          "169:     [1])",
          "170:    ])",
          "172:   AS_IF(",
          "173:    [test \"x$ac_cv_func_opendir\" != xyes],",
          "174:    [AC_MSG_FAILURE(",
          "175:     [Missing functions: opendir],",
          "176:     [1])",
          "177:    ])",
          "179:   AS_IF(",
          "180:    [test \"x$ac_cv_func_readdir_r\" != xyes],",
          "181:    [AC_MSG_FAILURE(",
          "182:     [Missing functions: readdir_r],",
          "183:     [1])",
          "184:    ])",
          "185:   ])",
          "187:  ac_cv_libcdirectory_CPPFLAGS=\"-I../libcdirectory\";",
          "188:  ac_cv_libcdirectory_LIBADD=\"../libcdirectory/libcdirectory.la\";",
          "190:  ac_cv_libcdirectory=local",
          "191:  ])",
          "195:  [AX_COMMON_ARG_WITH(",
          "196:   [libcdirectory],",
          "197:   [libcdirectory],",
          "198:   [search for libcdirectory in includedir and libdir or in the specified DIR, or no if to use local version],",
          "199:   [auto-detect],",
          "200:   [DIR])",
          "202:  dnl Check for a shared library version",
          "203:  AX_LIBCDIRECTORY_CHECK_LIB",
          "205:  dnl Check if the dependencies for the local library version",
          "206:  AS_IF(",
          "207:   [test \"x$ac_cv_libcdirectory\" != xyes],",
          "208:   [AX_LIBCDIRECTORY_CHECK_LOCAL",
          "210:   AC_DEFINE(",
          "211:    [HAVE_LOCAL_LIBCDIRECTORY],",
          "212:    [1],",
          "213:    [Define to 1 if the local version of libcdirectory is used.])",
          "214:   AC_SUBST(",
          "215:    [HAVE_LOCAL_LIBCDIRECTORY],",
          "216:    [1])",
          "217:   ])",
          "219:  AM_CONDITIONAL(",
          "220:   [HAVE_LOCAL_LIBCDIRECTORY],",
          "221:   [test \"x$ac_cv_libcdirectory\" = xlocal])",
          "222:  AS_IF(",
          "223:   [test \"x$ac_cv_libcdirectory_CPPFLAGS\" != \"x\"],",
          "224:   [AC_SUBST(",
          "225:    [LIBCDIRECTORY_CPPFLAGS],",
          "226:    [$ac_cv_libcdirectory_CPPFLAGS])",
          "227:   ])",
          "228:  AS_IF(",
          "229:   [test \"x$ac_cv_libcdirectory_LIBADD\" != \"x\"],",
          "230:   [AC_SUBST(",
          "231:    [LIBCDIRECTORY_LIBADD],",
          "232:    [$ac_cv_libcdirectory_LIBADD])",
          "233:   ])",
          "235:  AS_IF(",
          "236:   [test \"x$ac_cv_libcdirectory\" = xyes],",
          "237:   [AC_SUBST(",
          "238:    [ax_libcdirectory_pc_libs_private],",
          "239:    [-lstring])",
          "240:   ])",
          "242:  AS_IF(",
          "243:   [test \"x$ac_cv_libcdirectory\" = xyes],",
          "244:   [AC_SUBST(",
          "245:    [ax_libcdirectory_spec_requires],",
          "246:    [libcdirectory])",
          "247:   AC_SUBST(",
          "248:    [ax_libcdirectory_spec_build_requires],",
          "249:    [libcdirectory-devel])",
          "251:  ])",
          "",
          "[Added Lines]",
          "1: dnl Checks for libcdirectory or required headers and functions",
          "3: dnl Version: 20170904",
          "8:   [dnl Check if parameters were provided",
          "10:     [test \"x$ac_cv_with_libcdirectory\" != x && test \"x$ac_cv_with_libcdirectory\" != xno && test \"x$ac_cv_with_libcdirectory\" != xauto-detect],",
          "11:     [AS_IF(",
          "12:       [test -d \"$ac_cv_with_libcdirectory\"],",
          "13:       [CFLAGS=\"$CFLAGS -I${ac_cv_with_libcdirectory}/include\"",
          "14:       LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libcdirectory}/lib\"],",
          "15:       [AC_MSG_WARN([no such directory: $ac_cv_with_libcdirectory])",
          "16:       ])",
          "17:     ])",
          "20:     [test \"x$ac_cv_with_libcdirectory\" = xno],",
          "22:     [dnl Check for a pkg-config file",
          "23:     AS_IF(",
          "24:       [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:       [PKG_CHECK_MODULES(",
          "26:         [libcdirectory],",
          "27:         [libcdirectory >= 20120423],",
          "28:         [ac_cv_libcdirectory=yes],",
          "29:         [ac_cv_libcdirectory=check])",
          "30:       ])",
          "33:       [test \"x$ac_cv_libcdirectory\" = xyes && test \"x$ac_cv_enable_wide_character_type\" != xno],",
          "34:       [AC_CACHE_CHECK(",
          "35:        [whether libcdirectory/features.h defines LIBCDIRECTORY_HAVE_WIDE_CHARACTER_TYPE as 1],",
          "36:        [ac_cv_header_libcdirectory_features_h_have_wide_character_type],",
          "37:        [AC_LANG_PUSH(C)",
          "38:        AC_COMPILE_IFELSE(",
          "39:          [AC_LANG_PROGRAM(",
          "40:            [[#include <libcdirectory/features.h>]],",
          "41:            [[#if !defined( LIBCDIRECTORY_HAVE_WIDE_CHARACTER_TYPE ) || ( LIBCDIRECTORY_HAVE_WIDE_CHARACTER_TYPE != 1 )",
          "42: #error LIBCDIRECTORY_HAVE_WIDE_CHARACTER_TYPE not defined",
          "43: ##endif]] )],",
          "44:          [ac_cv_header_libcdirectory_features_h_have_wide_character_type=yes],",
          "45:          [ac_cv_header_libcdirectory_features_h_have_wide_character_type=no])",
          "46:        AC_LANG_POP(C)],",
          "47:        [ac_cv_header_libcdirectory_features_h_have_wide_character_type=no])",
          "49:       AS_IF(",
          "50:         [test \"x$ac_cv_header_libcdirectory_features_h_have_wide_character_type\" = xno],",
          "51:         [ac_cv_libcdirectory=no])",
          "52:     ])",
          "55:       [test \"x$ac_cv_libcdirectory\" = xyes],",
          "56:       [ac_cv_libcdirectory_CPPFLAGS=\"$pkg_cv_libcdirectory_CFLAGS\"",
          "57:       ac_cv_libcdirectory_LIBADD=\"$pkg_cv_libcdirectory_LIBS\"])",
          "59:     AS_IF(",
          "60:       [test \"x$ac_cv_libcdirectory\" = xcheck],",
          "61:       [dnl Check for headers",
          "62:       AC_CHECK_HEADERS([libcdirectory.h])",
          "64:       AS_IF(",
          "65:         [test \"x$ac_cv_header_libcdirectory_h\" = xno],",
          "66:         [ac_cv_libcdirectory=no],",
          "67:         [dnl Check for the individual functions",
          "68:         ac_cv_libcdirectory=yes",
          "70:         AC_CHECK_LIB(",
          "71:           cdirectory,",
          "72:           libcdirectory_get_version,",
          "73:           [ac_cv_libcdirectory_dummy=yes],",
          "74:           [ac_cv_libcdirectory=no])",
          "76:         dnl Directory functions",
          "77:         AC_CHECK_LIB(",
          "78:           cdirectory,",
          "79:           libcdirectory_directory_initialize,",
          "80:           [ac_cv_libcdirectory_dummy=yes],",
          "81:           [ac_cv_libcdirectory=no])",
          "82:         AC_CHECK_LIB(",
          "83:           cdirectory,",
          "84:           libcdirectory_directory_free,",
          "85:           [ac_cv_libcdirectory_dummy=yes],",
          "86:           [ac_cv_libcdirectory=no])",
          "88:         AC_CHECK_LIB(",
          "89:           cdirectory,",
          "90:           libcdirectory_directory_open,",
          "91:           [ac_cv_libcdirectory_dummy=yes],",
          "92:           [ac_cv_libcdirectory=no])",
          "93:         AC_CHECK_LIB(",
          "94:           cdirectory,",
          "95:           libcdirectory_directory_close,",
          "96:           [ac_cv_libcdirectory_dummy=yes],",
          "97:           [ac_cv_libcdirectory=no])",
          "99:         AC_CHECK_LIB(",
          "100:           cdirectory,",
          "101:           libcdirectory_directory_read_entry,",
          "102:           [ac_cv_libcdirectory_dummy=yes],",
          "103:           [ac_cv_libcdirectory=no])",
          "104:         AC_CHECK_LIB(",
          "105:           cdirectory,",
          "106:           libcdirectory_directory_has_entry,",
          "107:           [ac_cv_libcdirectory_dummy=yes],",
          "108:           [ac_cv_libcdirectory=no])",
          "110:         AS_IF(",
          "111:           [test \"x$ac_cv_enable_wide_character_type\" != xno],",
          "112:           [AC_CHECK_LIB(",
          "113:             cdirectory,",
          "114:             libcdirectory_directory_open_wide,",
          "115:             [ac_cv_libcdirectory_dummy=yes],",
          "116:             [ac_cv_libcdirectory=no])",
          "117:           AC_CHECK_LIB(",
          "118:             cdirectory,",
          "119:             libcdirectory_directory_has_entry_wide,",
          "120:             [ac_cv_libcdirectory_dummy=yes],",
          "121:             [ac_cv_libcdirectory=no])",
          "122:           ])",
          "124:         dnl Directory entry functions",
          "125:         AC_CHECK_LIB(",
          "126:           cdirectory,",
          "127:           libcdirectory_directory_entry_initialize,",
          "128:           [ac_cv_libcdirectory_dummy=yes],",
          "129:           [ac_cv_libcdirectory=no])",
          "130:         AC_CHECK_LIB(",
          "131:           cdirectory,",
          "132:           libcdirectory_directory_entry_free,",
          "133:           [ac_cv_libcdirectory_dummy=yes],",
          "134:           [ac_cv_libcdirectory=no])",
          "136:         AC_CHECK_LIB(",
          "137:           cdirectory,",
          "138:           libcdirectory_directory_entry_get_type,",
          "139:           [ac_cv_libcdirectory_dummy=yes],",
          "140:           [ac_cv_libcdirectory=no])",
          "141:         AC_CHECK_LIB(",
          "142:           cdirectory,",
          "143:           libcdirectory_directory_entry_get_name,",
          "144:           [ac_cv_libcdirectory_dummy=yes],",
          "145:           [ac_cv_libcdirectory=no])",
          "147:         AS_IF(",
          "148:           [test \"x$ac_cv_enable_wide_character_type\" != xno],",
          "149:           [AC_CHECK_LIB(",
          "150:             cdirectory,",
          "151:             libcdirectory_directory_entry_get_name_wide,",
          "152:             [ac_cv_libcdirectory_dummy=yes],",
          "153:             [ac_cv_libcdirectory=no])",
          "154:           ])",
          "156:         ac_cv_libcdirectory_LIBADD=\"-lcdirectory\"",
          "157:         ])",
          "158:       ])",
          "161:   AS_IF(",
          "162:     [test \"x$ac_cv_libcdirectory\" = xyes],",
          "163:     [AC_DEFINE(",
          "164:       [HAVE_LIBCDIRECTORY],",
          "165:       [1],",
          "166:       [Define to 1 if you have the `cdirectory' library (-lcdirectory).])",
          "167:     ])",
          "169:   AS_IF(",
          "170:     [test \"x$ac_cv_libcdirectory\" = xyes],",
          "171:     [AC_SUBST(",
          "172:       [HAVE_LIBCDIRECTORY],",
          "173:       [1]) ],",
          "174:     [AC_SUBST(",
          "175:       [HAVE_LIBCDIRECTORY],",
          "176:       [0])",
          "177:     ])",
          "182:   [AS_IF(",
          "183:     [test \"x$ac_cv_enable_winapi\" = xno],",
          "184:     [dnl Headers included in libcdirectory/libcdirectory_directory.h",
          "185:     AC_CHECK_HEADERS([dirent.h errno.h sys/stat.h])",
          "187:     dnl Directory functions used in libcdirectory/libcdirectory_directory.h",
          "188:     AC_CHECK_FUNCS([closedir opendir readdir_r])",
          "190:     AS_IF(",
          "191:       [test \"x$ac_cv_func_closedir\" != xyes],",
          "192:       [AC_MSG_FAILURE(",
          "193:         [Missing functions: closedir],",
          "194:         [1])",
          "195:       ])",
          "197:     AS_IF(",
          "198:       [test \"x$ac_cv_func_opendir\" != xyes],",
          "199:       [AC_MSG_FAILURE(",
          "200:         [Missing functions: opendir],",
          "201:         [1])",
          "202:       ])",
          "204:     AS_IF(",
          "205:       [test \"x$ac_cv_func_readdir_r\" != xyes],",
          "206:       [AC_MSG_FAILURE(",
          "207:         [Missing functions: readdir_r],",
          "208:         [1])",
          "209:       ])",
          "210:     ])",
          "212:   ac_cv_libcdirectory_CPPFLAGS=\"-I../libcdirectory\";",
          "213:   ac_cv_libcdirectory_LIBADD=\"../libcdirectory/libcdirectory.la\";",
          "215:   ac_cv_libcdirectory=local",
          "216:   ])",
          "220:   [AX_COMMON_ARG_WITH(",
          "221:     [libcdirectory],",
          "222:     [libcdirectory],",
          "223:     [search for libcdirectory in includedir and libdir or in the specified DIR, or no if to use local version],",
          "224:     [auto-detect],",
          "225:     [DIR])",
          "227:   dnl Check for a shared library version",
          "228:   AX_LIBCDIRECTORY_CHECK_LIB",
          "230:   dnl Check if the dependencies for the local library version",
          "231:   AS_IF(",
          "232:     [test \"x$ac_cv_libcdirectory\" != xyes],",
          "233:     [AX_LIBCDIRECTORY_CHECK_LOCAL",
          "235:     AC_DEFINE(",
          "236:       [HAVE_LOCAL_LIBCDIRECTORY],",
          "237:       [1],",
          "238:       [Define to 1 if the local version of libcdirectory is used.])",
          "239:     AC_SUBST(",
          "240:       [HAVE_LOCAL_LIBCDIRECTORY],",
          "241:       [1])",
          "242:     ])",
          "244:   AM_CONDITIONAL(",
          "245:     [HAVE_LOCAL_LIBCDIRECTORY],",
          "246:     [test \"x$ac_cv_libcdirectory\" = xlocal])",
          "247:   AS_IF(",
          "248:     [test \"x$ac_cv_libcdirectory_CPPFLAGS\" != \"x\"],",
          "249:     [AC_SUBST(",
          "250:       [LIBCDIRECTORY_CPPFLAGS],",
          "251:       [$ac_cv_libcdirectory_CPPFLAGS])",
          "252:     ])",
          "253:   AS_IF(",
          "254:     [test \"x$ac_cv_libcdirectory_LIBADD\" != \"x\"],",
          "255:     [AC_SUBST(",
          "256:       [LIBCDIRECTORY_LIBADD],",
          "257:       [$ac_cv_libcdirectory_LIBADD])",
          "258:     ])",
          "260:   AS_IF(",
          "261:     [test \"x$ac_cv_libcdirectory\" = xyes],",
          "262:     [AC_SUBST(",
          "263:       [ax_libcdirectory_pc_libs_private],",
          "264:       [-lstring])",
          "265:     ])",
          "267:   AS_IF(",
          "268:     [test \"x$ac_cv_libcdirectory\" = xyes],",
          "269:     [AC_SUBST(",
          "270:       [ax_libcdirectory_spec_requires],",
          "271:       [libcdirectory])",
          "272:     AC_SUBST(",
          "273:       [ax_libcdirectory_spec_build_requires],",
          "274:       [libcdirectory-devel])",
          "275:     ])",
          "",
          "---------------"
        ],
        "m4/libcerror.m4||m4/libcerror.m4": [
          "File: m4/libcerror.m4 -> m4/libcerror.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: dnl",
          "5: dnl Function to detect if libcerror is available",
          "6: dnl ac_libcerror_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "7: AC_DEFUN([AX_LIBCERROR_CHECK_LIB],",
          "23:   AS_IF(",
          "32:   AS_IF(",
          "41:     [ac_cv_libcerror=no],",
          "96:     ])",
          "116:   ])",
          "119: dnl Function to detect if libcerror dependencies are available",
          "120: AC_DEFUN([AX_LIBCERROR_CHECK_LOCAL],",
          "136:   AS_IF(",
          "151:   AS_IF(",
          "165: dnl Function to detect how to enable libcerror",
          "166: AC_DEFUN([AX_LIBCERROR_CHECK_ENABLE],",
          "222:   ])",
          "",
          "[Removed Lines]",
          "1: dnl Functions for libcerror",
          "3: dnl Version: 20130503",
          "8:  [dnl Check if parameters were provided",
          "9:  AS_IF(",
          "10:   [test \"x$ac_cv_with_libcerror\" != x && test \"x$ac_cv_with_libcerror\" != xno && test \"x$ac_cv_with_libcerror\" != xauto-detect],",
          "11:   [AS_IF(",
          "12:    [test -d \"$ac_cv_with_libcerror\"],",
          "13:    [CFLAGS=\"$CFLAGS -I${ac_cv_with_libcerror}/include\"",
          "14:    LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libcerror}/lib\"],",
          "15:    [AC_MSG_WARN([no such directory: $ac_cv_with_libcerror])",
          "16:    ])",
          "17:   ])",
          "19:  AS_IF(",
          "20:   [test \"x$ac_cv_with_libcerror\" = xno],",
          "21:   [ac_cv_libcerror=no],",
          "22:   [dnl Check for a pkg-config file",
          "24:    [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:    [PKG_CHECK_MODULES(",
          "26:     [libcerror],",
          "27:     [libcerror >= 20120425],",
          "28:     [ac_cv_libcerror=yes],",
          "29:     [ac_cv_libcerror=no])",
          "30:    ])",
          "33:    [test \"x$ac_cv_libcerror\" = xyes],",
          "34:    [ac_cv_libcerror_CPPFLAGS=\"$pkg_cv_libcerror_CFLAGS\"",
          "35:    ac_cv_libcerror_LIBADD=\"$pkg_cv_libcerror_LIBS\"],",
          "36:    [dnl Check for headers",
          "37:    AC_CHECK_HEADERS([libcerror.h])",
          "39:    AS_IF(",
          "40:     [test \"x$ac_cv_header_libcerror_h\" = xno],",
          "42:     [dnl Check for the individual functions",
          "43:     ac_cv_libcerror=yes",
          "45:     AC_CHECK_LIB(",
          "46:      cerror,",
          "47:      libcerror_get_version,",
          "48:      [ac_cv_libcerror_dummy=yes],",
          "49:      [ac_cv_libcerror=no])",
          "51:     dnl Error functions",
          "52:     AC_CHECK_LIB(",
          "53:      cerror,",
          "54:      libcerror_error_free,",
          "55:      [ac_cv_libcerror_dummy=yes],",
          "56:      [ac_cv_libcerror=no])",
          "57:     AC_CHECK_LIB(",
          "58:      cerror,",
          "59:      libcerror_error_set,",
          "60:      [ac_cv_libcerror_dummy=yes],",
          "61:      [ac_cv_libcerror=no])",
          "62:     AC_CHECK_LIB(",
          "63:      cerror,",
          "64:      libcerror_error_matches,",
          "65:      [ac_cv_libcerror_dummy=yes],",
          "66:      [ac_cv_libcerror=no])",
          "67:     AC_CHECK_LIB(",
          "68:      cerror,",
          "69:      libcerror_error_fprint,",
          "70:      [ac_cv_libcerror_dummy=yes],",
          "71:      [ac_cv_libcerror=no])",
          "72:     AC_CHECK_LIB(",
          "73:      cerror,",
          "74:      libcerror_error_sprint,",
          "75:      [ac_cv_libcerror_dummy=yes],",
          "76:      [ac_cv_libcerror=no])",
          "77:     AC_CHECK_LIB(",
          "78:      cerror,",
          "79:      libcerror_error_backtrace_fprint,",
          "80:      [ac_cv_libcerror_dummy=yes],",
          "81:      [ac_cv_libcerror=no])",
          "82:     AC_CHECK_LIB(",
          "83:      cerror,",
          "84:      libcerror_error_backtrace_sprint,",
          "85:      [ac_cv_libcerror_dummy=yes],",
          "86:      [ac_cv_libcerror=no])",
          "88:     dnl System error functions",
          "89:     AC_CHECK_LIB(",
          "90:      cerror,",
          "91:      libcerror_system_set_error,",
          "92:      [ac_cv_libcerror_dummy=yes],",
          "93:      [ac_cv_libcerror=no])",
          "95:     ac_cv_libcerror_LIBADD=\"-lcerror\"",
          "97:    ])",
          "98:   ])",
          "100:  AS_IF(",
          "101:   [test \"x$ac_cv_libcerror\" = xyes],",
          "102:   [AC_DEFINE(",
          "103:    [HAVE_LIBCERROR],",
          "104:    [1],",
          "105:    [Define to 1 if you have the `cerror' library (-lcerror).])",
          "106:   ])",
          "108:  AS_IF(",
          "109:   [test \"x$ac_cv_libcerror\" = xyes],",
          "110:   [AC_SUBST(",
          "111:    [HAVE_LIBCERROR],",
          "112:    [1]) ],",
          "113:   [AC_SUBST(",
          "114:    [HAVE_LIBCERROR],",
          "115:    [0])",
          "117:  ])",
          "121:  [dnl Headers included in libcerror/libcerror_error.c",
          "122:  AC_CHECK_HEADERS([stdarg.h varargs.h])",
          "124:  AS_IF(",
          "125:   [test \"x$ac_cv_header_stdarg_h\" != xyes && test \"x$ac_cv_header_varargs_h\" != xyes],",
          "126:   [AC_MSG_FAILURE(",
          "127:    [Missing headers: stdarg.h and varargs.h],",
          "128:    [1])",
          "129:   ])",
          "131:  dnl Wide character string functions used in libcerror/libcerror_error.c",
          "132:  AS_IF(",
          "133:   [test \"x$ac_cv_enable_wide_character_type\" != xno],",
          "134:   [AC_CHECK_FUNCS([wcstombs])",
          "137:    [test \"x$ac_cv_func_wcstombs\" != xyes],",
          "138:    [AC_MSG_FAILURE(",
          "139:     [Missing function: wcstombs],",
          "140:     [1])",
          "141:    ])",
          "142:   ])",
          "144:  dnl Check for error string functions used in libcerror/libcerror_system.c",
          "145:  AC_FUNC_STRERROR_R()",
          "147:  AS_IF(",
          "148:   [test \"x$ac_cv_have_decl_strerror_r\" != xyes],",
          "149:   [AC_CHECK_FUNCS([strerror])",
          "152:    [test \"x$ac_cv_func_strerror\" != xyes],",
          "153:    [AC_MSG_FAILURE(",
          "154:     [Missing functions: strerror_r and strerror],",
          "155:     [1])",
          "156:    ])",
          "157:   ])",
          "159:  ac_cv_libcerror_CPPFLAGS=\"-I../libcerror\";",
          "160:  ac_cv_libcerror_LIBADD=\"../libcerror/libcerror.la\";",
          "162:  ac_cv_libcerror=local",
          "163:  ])",
          "167:  [AX_COMMON_ARG_WITH(",
          "168:   [libcerror],",
          "169:   [libcerror],",
          "170:   [search for libcerror in includedir and libdir or in the specified DIR, or no if to use local version],",
          "171:   [auto-detect],",
          "172:   [DIR])",
          "174:  dnl Check for a shared library version",
          "175:  AX_LIBCERROR_CHECK_LIB",
          "177:  dnl Check if the dependencies for the local library version",
          "178:  AS_IF(",
          "179:   [test \"x$ac_cv_libcerror\" != xyes],",
          "180:   [AX_LIBCERROR_CHECK_LOCAL",
          "182:   AC_DEFINE(",
          "183:    [HAVE_LOCAL_LIBCERROR],",
          "184:    [1],",
          "185:    [Define to 1 if the local version of libcerror is used.])",
          "186:   AC_SUBST(",
          "187:    [HAVE_LOCAL_LIBCERROR],",
          "188:    [1])",
          "189:   ])",
          "191:  AM_CONDITIONAL(",
          "192:   [HAVE_LOCAL_LIBCERROR],",
          "193:   [test \"x$ac_cv_libcerror\" = xlocal])",
          "194:  AS_IF(",
          "195:   [test \"x$ac_cv_libcerror_CPPFLAGS\" != \"x\"],",
          "196:   [AC_SUBST(",
          "197:    [LIBCERROR_CPPFLAGS],",
          "198:    [$ac_cv_libcerror_CPPFLAGS])",
          "199:   ])",
          "200:  AS_IF(",
          "201:   [test \"x$ac_cv_libcerror_LIBADD\" != \"x\"],",
          "202:   [AC_SUBST(",
          "203:    [LIBCERROR_LIBADD],",
          "204:    [$ac_cv_libcerror_LIBADD])",
          "205:   ])",
          "207:  AS_IF(",
          "208:   [test \"x$ac_cv_libcerror\" = xyes],",
          "209:   [AC_SUBST(",
          "210:    [ax_libcerror_pc_libs_private],",
          "211:    [-lcerror])",
          "212:   ])",
          "214:  AS_IF(",
          "215:   [test \"x$ac_cv_libcerror\" = xyes],",
          "216:   [AC_SUBST(",
          "217:    [ax_libcerror_spec_requires],",
          "218:    [libcerror])",
          "219:   AC_SUBST(",
          "220:    [ax_libcerror_spec_build_requires],",
          "221:    [libcerror-devel])",
          "223:  ])",
          "",
          "[Added Lines]",
          "1: dnl Checks for libcerror or required headers and functions",
          "3: dnl Version: 20170904",
          "8:   [dnl Check if parameters were provided",
          "10:     [test \"x$ac_cv_with_libcerror\" != x && test \"x$ac_cv_with_libcerror\" != xno && test \"x$ac_cv_with_libcerror\" != xauto-detect],",
          "11:     [AS_IF(",
          "12:       [test -d \"$ac_cv_with_libcerror\"],",
          "13:       [CFLAGS=\"$CFLAGS -I${ac_cv_with_libcerror}/include\"",
          "14:       LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libcerror}/lib\"],",
          "15:       [AC_MSG_WARN([no such directory: $ac_cv_with_libcerror])",
          "16:       ])",
          "17:     ])",
          "20:     [test \"x$ac_cv_with_libcerror\" = xno],",
          "22:     [dnl Check for a pkg-config file",
          "23:     AS_IF(",
          "24:       [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:       [PKG_CHECK_MODULES(",
          "26:         [libcerror],",
          "27:         [libcerror >= 20120425],",
          "28:         [ac_cv_libcerror=yes],",
          "29:         [ac_cv_libcerror=check])",
          "30:       ])",
          "32:     AS_IF(",
          "33:       [test \"x$ac_cv_libcerror\" = xyes],",
          "34:       [ac_cv_libcerror_CPPFLAGS=\"$pkg_cv_libcerror_CFLAGS\"",
          "35:       ac_cv_libcerror_LIBADD=\"$pkg_cv_libcerror_LIBS\"])",
          "37:     AS_IF(",
          "38:       [test \"x$ac_cv_libcerror\" = xcheck],",
          "39:       [dnl Check for headers",
          "40:       AC_CHECK_HEADERS([libcerror.h])",
          "42:       AS_IF(",
          "43:         [test \"x$ac_cv_header_libcerror_h\" = xno],",
          "44:         [ac_cv_libcerror=no],",
          "45:         [dnl Check for the individual functions",
          "46:         ac_cv_libcerror=yes",
          "48:         AC_CHECK_LIB(",
          "49:           cerror,",
          "50:           libcerror_get_version,",
          "51:           [ac_cv_libcerror_dummy=yes],",
          "52:           [ac_cv_libcerror=no])",
          "54:         dnl Error functions",
          "55:         AC_CHECK_LIB(",
          "56:           cerror,",
          "57:           libcerror_error_free,",
          "58:           [ac_cv_libcerror_dummy=yes],",
          "59:           [ac_cv_libcerror=no])",
          "60:         AC_CHECK_LIB(",
          "61:           cerror,",
          "62:           libcerror_error_set,",
          "63:           [ac_cv_libcerror_dummy=yes],",
          "64:           [ac_cv_libcerror=no])",
          "65:         AC_CHECK_LIB(",
          "66:           cerror,",
          "67:           libcerror_error_matches,",
          "68:           [ac_cv_libcerror_dummy=yes],",
          "69:           [ac_cv_libcerror=no])",
          "70:         AC_CHECK_LIB(",
          "71:           cerror,",
          "72:           libcerror_error_fprint,",
          "73:           [ac_cv_libcerror_dummy=yes],",
          "74:           [ac_cv_libcerror=no])",
          "75:         AC_CHECK_LIB(",
          "76:           cerror,",
          "77:           libcerror_error_sprint,",
          "78:           [ac_cv_libcerror_dummy=yes],",
          "79:           [ac_cv_libcerror=no])",
          "80:         AC_CHECK_LIB(",
          "81:           cerror,",
          "82:           libcerror_error_backtrace_fprint,",
          "83:           [ac_cv_libcerror_dummy=yes],",
          "84:           [ac_cv_libcerror=no])",
          "85:         AC_CHECK_LIB(",
          "86:           cerror,",
          "87:           libcerror_error_backtrace_sprint,",
          "88:           [ac_cv_libcerror_dummy=yes],",
          "89:           [ac_cv_libcerror=no])",
          "91:         dnl System error functions",
          "92:         AC_CHECK_LIB(",
          "93:           cerror,",
          "94:           libcerror_system_set_error,",
          "95:           [ac_cv_libcerror_dummy=yes],",
          "96:           [ac_cv_libcerror=no])",
          "98:         ac_cv_libcerror_LIBADD=\"-lcerror\"",
          "99:         ])",
          "100:       ])",
          "103:   AS_IF(",
          "104:     [test \"x$ac_cv_libcerror\" = xyes],",
          "105:     [AC_DEFINE(",
          "106:       [HAVE_LIBCERROR],",
          "107:       [1],",
          "108:       [Define to 1 if you have the `cerror' library (-lcerror).])",
          "109:     ])",
          "111:   AS_IF(",
          "112:     [test \"x$ac_cv_libcerror\" = xyes],",
          "113:     [AC_SUBST(",
          "114:       [HAVE_LIBCERROR],",
          "115:       [1]) ],",
          "116:     [AC_SUBST(",
          "117:       [HAVE_LIBCERROR],",
          "118:       [0])",
          "119:     ])",
          "124:   [dnl Headers included in libcerror/libcerror_error.c",
          "125:   AC_CHECK_HEADERS([stdarg.h varargs.h])",
          "128:     [test \"x$ac_cv_header_stdarg_h\" != xyes && test \"x$ac_cv_header_varargs_h\" != xyes],",
          "129:     [AC_MSG_FAILURE(",
          "130:       [Missing headers: stdarg.h and varargs.h],",
          "131:       [1])",
          "132:     ])",
          "134:   dnl Wide character string functions used in libcerror/libcerror_error.c",
          "135:   AS_IF(",
          "136:     [test \"x$ac_cv_enable_wide_character_type\" != xno],",
          "137:     [AC_CHECK_FUNCS([wcstombs])",
          "139:     AS_IF(",
          "140:       [test \"x$ac_cv_func_wcstombs\" != xyes],",
          "141:       [AC_MSG_FAILURE(",
          "142:         [Missing function: wcstombs],",
          "143:         [1])",
          "144:       ])",
          "145:     ])",
          "147:   dnl Check for error string functions used in libcerror/libcerror_system.c",
          "148:   AC_FUNC_STRERROR_R()",
          "151:     [test \"x$ac_cv_have_decl_strerror_r\" != xyes],",
          "152:     [AC_CHECK_FUNCS([strerror])",
          "154:     AS_IF(",
          "155:       [test \"x$ac_cv_func_strerror\" != xyes],",
          "156:       [AC_MSG_FAILURE(",
          "157:         [Missing functions: strerror_r and strerror],",
          "158:         [1])",
          "159:       ])",
          "160:     ])",
          "162:   ac_cv_libcerror_CPPFLAGS=\"-I../libcerror\";",
          "163:   ac_cv_libcerror_LIBADD=\"../libcerror/libcerror.la\";",
          "165:   ac_cv_libcerror=local",
          "166:   ])",
          "170:   [AX_COMMON_ARG_WITH(",
          "171:     [libcerror],",
          "172:     [libcerror],",
          "173:     [search for libcerror in includedir and libdir or in the specified DIR, or no if to use local version],",
          "174:     [auto-detect],",
          "175:     [DIR])",
          "177:   dnl Check for a shared library version",
          "178:   AX_LIBCERROR_CHECK_LIB",
          "180:   dnl Check if the dependencies for the local library version",
          "181:   AS_IF(",
          "182:     [test \"x$ac_cv_libcerror\" != xyes],",
          "183:     [AX_LIBCERROR_CHECK_LOCAL",
          "185:     AC_DEFINE(",
          "186:       [HAVE_LOCAL_LIBCERROR],",
          "187:       [1],",
          "188:       [Define to 1 if the local version of libcerror is used.])",
          "189:     AC_SUBST(",
          "190:       [HAVE_LOCAL_LIBCERROR],",
          "191:       [1])",
          "192:     ])",
          "194:   AM_CONDITIONAL(",
          "195:     [HAVE_LOCAL_LIBCERROR],",
          "196:     [test \"x$ac_cv_libcerror\" = xlocal])",
          "197:   AS_IF(",
          "198:     [test \"x$ac_cv_libcerror_CPPFLAGS\" != \"x\"],",
          "199:     [AC_SUBST(",
          "200:       [LIBCERROR_CPPFLAGS],",
          "201:       [$ac_cv_libcerror_CPPFLAGS])",
          "202:     ])",
          "203:   AS_IF(",
          "204:     [test \"x$ac_cv_libcerror_LIBADD\" != \"x\"],",
          "205:     [AC_SUBST(",
          "206:       [LIBCERROR_LIBADD],",
          "207:       [$ac_cv_libcerror_LIBADD])",
          "208:     ])",
          "210:   AS_IF(",
          "211:     [test \"x$ac_cv_libcerror\" = xyes],",
          "212:     [AC_SUBST(",
          "213:       [ax_libcerror_pc_libs_private],",
          "214:       [-lcerror])",
          "215:     ])",
          "217:   AS_IF(",
          "218:     [test \"x$ac_cv_libcerror\" = xyes],",
          "219:     [AC_SUBST(",
          "220:       [ax_libcerror_spec_requires],",
          "221:       [libcerror])",
          "222:     AC_SUBST(",
          "223:       [ax_libcerror_spec_build_requires],",
          "224:       [libcerror-devel])",
          "225:     ])",
          "",
          "---------------"
        ],
        "m4/libcfile.m4||m4/libcfile.m4": [
          "File: m4/libcfile.m4 -> m4/libcfile.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: dnl",
          "5: dnl Function to detect if libcfile is available",
          "6: dnl ac_libcfile_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "7: AC_DEFUN([AX_LIBCFILE_CHECK_LIB],",
          "23:   AS_IF(",
          "32:   AS_IF(",
          "41:     [ac_cv_libcfile=no],",
          "138:     AS_IF(",
          "164:     AS_IF(",
          "179:     ])",
          "199:   ])",
          "202: dnl Function to detect if posix_fadvise is available",
          "203: AC_DEFUN([AX_LIBCFILE_CHECK_FUNC_POSIX_FADVISE],",
          "219: #define POSIX_FADV_SEQUENTIAL 2",
          "220: #endif",
          "221: posix_fadvise( 0, 0, 0, POSIX_FADV_SEQUENTIAL )]] )],",
          "238:   ])",
          "241: dnl Function to detect if libcfile dependencies are available",
          "242: AC_DEFUN([AX_LIBCFILE_CHECK_LOCAL],",
          "336: dnl Function to detect how to enable libcfile",
          "337: AC_DEFUN([AX_LIBCFILE_CHECK_ENABLE],",
          "393:   ])",
          "",
          "[Removed Lines]",
          "1: dnl Functions for libcfile",
          "3: dnl Version: 20160409",
          "8:  [dnl Check if parameters were provided",
          "9:  AS_IF(",
          "10:   [test \"x$ac_cv_with_libcfile\" != x && test \"x$ac_cv_with_libcfile\" != xno && test \"x$ac_cv_with_libcfile\" != xauto-detect],",
          "11:   [AS_IF(",
          "12:    [test -d \"$ac_cv_with_libcfile\"],",
          "13:    [CFLAGS=\"$CFLAGS -I${ac_cv_with_libcfile}/include\"",
          "14:    LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libcfile}/lib\"],",
          "15:    [AC_MSG_WARN([no such directory: $ac_cv_with_libcfile])",
          "16:    ])",
          "17:   ])",
          "19:  AS_IF(",
          "20:   [test \"x$ac_cv_with_libcfile\" = xno],",
          "21:   [ac_cv_libcfile=no],",
          "22:   [dnl Check for a pkg-config file",
          "24:    [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:    [PKG_CHECK_MODULES(",
          "26:     [libcfile],",
          "27:     [libcfile >= 20160409],",
          "28:     [ac_cv_libcfile=yes],",
          "29:     [ac_cv_libcfile=no])",
          "30:    ])",
          "33:    [test \"x$ac_cv_libcfile\" = xyes],",
          "34:    [ac_cv_libcfile_CPPFLAGS=\"$pkg_cv_libcfile_CFLAGS\"",
          "35:    ac_cv_libcfile_LIBADD=\"$pkg_cv_libcfile_LIBS\"],",
          "36:    [dnl Check for headers",
          "37:    AC_CHECK_HEADERS([libcfile.h])",
          "39:    AS_IF(",
          "40:     [test \"x$ac_cv_header_libcfile_h\" = xno],",
          "42:     [dnl Check for the individual functions",
          "43:     ac_cv_libcfile=yes",
          "45:     AC_CHECK_LIB(",
          "46:      cfile,",
          "47:      libcfile_get_version,",
          "48:      [ac_cv_libcfile_dummy=yes],",
          "49:      [ac_cv_libcfile=no])",
          "51:     dnl File functions",
          "52:     AC_CHECK_LIB(",
          "53:      cfile,",
          "54:      libcfile_file_initialize,",
          "55:      [ac_cv_libcfile_dummy=yes],",
          "56:      [ac_cv_libcfile=no])",
          "57:     AC_CHECK_LIB(",
          "58:      cfile,",
          "59:      libcfile_file_free,",
          "60:      [ac_cv_libcfile_dummy=yes],",
          "61:      [ac_cv_libcfile=no])",
          "62:     AC_CHECK_LIB(",
          "63:      cfile,",
          "64:      libcfile_file_open,",
          "65:      [ac_cv_libcfile_dummy=yes],",
          "66:      [ac_cv_libcfile=no])",
          "67:     AC_CHECK_LIB(",
          "68:      cfile,",
          "69:      libcfile_file_open_with_error_code,",
          "70:      [ac_cv_libcfile_dummy=yes],",
          "71:      [ac_cv_libcfile=no])",
          "72:     AC_CHECK_LIB(",
          "73:      cfile,",
          "74:      libcfile_file_close,",
          "75:      [ac_cv_libcfile_dummy=yes],",
          "76:      [ac_cv_libcfile=no])",
          "77:     AC_CHECK_LIB(",
          "78:      cfile,",
          "79:      libcfile_file_read_buffer,",
          "80:      [ac_cv_libcfile_dummy=yes],",
          "81:      [ac_cv_libcfile=no])",
          "82:     AC_CHECK_LIB(",
          "83:      cfile,",
          "84:      libcfile_file_read_buffer_with_error_code,",
          "85:      [ac_cv_libcfile_dummy=yes],",
          "86:      [ac_cv_libcfile=no])",
          "87:     AC_CHECK_LIB(",
          "88:      cfile,",
          "89:      libcfile_file_write_buffer,",
          "90:      [ac_cv_libcfile_dummy=yes],",
          "91:      [ac_cv_libcfile=no])",
          "92:     AC_CHECK_LIB(",
          "93:      cfile,",
          "94:      libcfile_file_write_buffer_with_error_code,",
          "95:      [ac_cv_libcfile_dummy=yes],",
          "96:      [ac_cv_libcfile=no])",
          "97:     AC_CHECK_LIB(",
          "98:      cfile,",
          "99:      libcfile_file_seek_offset,",
          "100:      [ac_cv_libcfile_dummy=yes],",
          "101:      [ac_cv_libcfile=no])",
          "102:     AC_CHECK_LIB(",
          "103:      cfile,",
          "104:      libcfile_file_resize,",
          "105:      [ac_cv_libcfile_dummy=yes],",
          "106:      [ac_cv_libcfile=no])",
          "107:     AC_CHECK_LIB(",
          "108:      cfile,",
          "109:      libcfile_file_is_open,",
          "110:      [ac_cv_libcfile_dummy=yes],",
          "111:      [ac_cv_libcfile=no])",
          "112:     AC_CHECK_LIB(",
          "113:      cfile,",
          "114:      libcfile_file_get_offset,",
          "115:      [ac_cv_libcfile_dummy=yes],",
          "116:      [ac_cv_libcfile=no])",
          "117:     AC_CHECK_LIB(",
          "118:      cfile,",
          "119:      libcfile_file_get_size,",
          "120:      [ac_cv_libcfile_dummy=yes],",
          "121:      [ac_cv_libcfile=no])",
          "122:     AC_CHECK_LIB(",
          "123:      cfile,",
          "124:      libcfile_file_is_device,",
          "125:      [ac_cv_libcfile_dummy=yes],",
          "126:      [ac_cv_libcfile=no])",
          "127:     AC_CHECK_LIB(",
          "128:      cfile,",
          "129:      libcfile_file_io_control_read,",
          "130:      [ac_cv_libcfile_dummy=yes],",
          "131:      [ac_cv_libcfile=no])",
          "132:     AC_CHECK_LIB(",
          "133:      cfile,",
          "134:      libcfile_file_io_control_read_with_error_code,",
          "135:      [ac_cv_libcfile_dummy=yes],",
          "136:      [ac_cv_libcfile=no])",
          "139:      [test \"x$ac_cv_enable_wide_character_type\" != xno],",
          "140:      [AC_CHECK_LIB(",
          "141:       cfile,",
          "142:       libcfile_file_open_wide,",
          "143:       [ac_cv_libcfile_dummy=yes],",
          "144:       [ac_cv_libcfile=no])",
          "145:      AC_CHECK_LIB(",
          "146:       cfile,",
          "147:       libcfile_file_open_wide_with_error_code,",
          "148:       [ac_cv_libcfile_dummy=yes],",
          "149:       [ac_cv_libcfile=no])",
          "150:      ])",
          "152:     dnl Support functions",
          "153:     AC_CHECK_LIB(",
          "154:      cfile,",
          "155:      libcfile_file_exists,",
          "156:      [ac_cv_libcfile_dummy=yes],",
          "157:      [ac_cv_libcfile=no])",
          "158:     AC_CHECK_LIB(",
          "159:      cfile,",
          "160:      libcfile_file_remove,",
          "161:      [ac_cv_libcfile_dummy=yes],",
          "162:      [ac_cv_libcfile=no])",
          "165:      [test \"x$ac_cv_enable_wide_character_type\" != xno],",
          "166:      [AC_CHECK_LIB(",
          "167:       cfile,",
          "168:       libcfile_file_exists_wide,",
          "169:       [ac_cv_libcfile_dummy=yes],",
          "170:       [ac_cv_libcfile=no])",
          "171:      AC_CHECK_LIB(",
          "172:       cfile,",
          "173:       libcfile_file_remove_wide,",
          "174:       [ac_cv_libcfile_dummy=yes],",
          "175:       [ac_cv_libcfile=no])",
          "176:      ])",
          "178:     ac_cv_libcfile_LIBADD=\"-lcfile\"",
          "180:    ])",
          "181:   ])",
          "183:  AS_IF(",
          "184:   [test \"x$ac_cv_libcfile\" = xyes],",
          "185:   [AC_DEFINE(",
          "186:    [HAVE_LIBCFILE],",
          "187:    [1],",
          "188:    [Define to 1 if you have the `cfile' library (-lcfile).])",
          "189:   ])",
          "191:  AS_IF(",
          "192:   [test \"x$ac_cv_libcfile\" = xyes],",
          "193:   [AC_SUBST(",
          "194:    [HAVE_LIBCFILE],",
          "195:    [1]) ],",
          "196:   [AC_SUBST(",
          "197:    [HAVE_LIBCFILE],",
          "198:    [0])",
          "200:  ])",
          "204:  [AC_CHECK_FUNCS([posix_fadvise])",
          "206:  AS_IF(",
          "207:   [test \"x$ac_cv_func_posix_fadvise\" = xyes],",
          "208:   [AC_MSG_CHECKING(",
          "209:     [whether posix_fadvise can be linked])",
          "211:    SAVE_CFLAGS=\"$CFLAGS\"",
          "212:    CFLAGS=\"$CFLAGS -Wall -Werror\"",
          "213:    AC_LANG_PUSH(C)",
          "215:    AC_LINK_IFELSE(",
          "216:     [AC_LANG_PROGRAM(",
          "217:      [[#include <fcntl.h>]],",
          "218:      [[#if !defined( POSIX_FADV_SEQUENTIAL )",
          "222:      [ac_cv_func_posix_fadvise=yes],",
          "223:      [ac_cv_func_posix_fadvise=no])",
          "225:    AC_LANG_POP(C)",
          "226:    CFLAGS=\"$SAVE_CFLAGS\"",
          "228:    AS_IF(",
          "229:     [test \"x$ac_cv_func_posix_fadvise\" = xyes],",
          "230:     [AC_MSG_RESULT(",
          "231:      [yes])",
          "232:     AC_DEFINE(",
          "233:      [HAVE_POSIX_FADVISE],",
          "234:      [1],",
          "235:      [Define to 1 if you have the posix_fadvise function.]) ],",
          "236:     [AC_MSG_RESULT(",
          "237:      [no]) ])",
          "239:  ])",
          "243:  [dnl Headers included in libcfile/libcfile_file.c and libcfile/libcfile_support.c",
          "244:  AC_CHECK_HEADERS([errno.h stdio.h sys/stat.h])",
          "246:  dnl Headers included in libcfile/libcfile_file.c",
          "247:  AC_CHECK_HEADERS([cygwin/fs.h fcntl.h linux/fs.h sys/disk.h sys/disklabel.h sys/ioctl.h unistd.h])",
          "249:  dnl File input/output functions used in libcfile/libcfile_file.c",
          "250:  AC_CHECK_FUNCS([close fstat ftruncate ioctl lseek open read write])",
          "252:  AS_IF(",
          "253:   [test \"x$ac_cv_func_close\" != xyes],",
          "254:   [AC_MSG_FAILURE(",
          "255:    [Missing function: close],",
          "256:    [1])",
          "257:   ])",
          "259:  AX_LIBCFILE_CHECK_FUNC_POSIX_FADVISE",
          "261:  AS_IF(",
          "262:   [test \"x$ac_cv_func_fstat\" != xyes],",
          "263:   [AC_MSG_FAILURE(",
          "264:    [Missing function: fstat],",
          "265:    [1])",
          "266:   ])",
          "268:  AS_IF(",
          "269:   [test \"x$ac_cv_func_ftruncate\" != xyes],",
          "270:   [AC_MSG_FAILURE(",
          "271:    [Missing function: ftruncate],",
          "272:    [1])",
          "273:   ])",
          "275:  AS_IF(",
          "276:   [test x\"$ac_cv_enable_winapi\" = xno],",
          "277:   [AS_IF(",
          "278:    [test \"x$ac_cv_func_ioctl\" != xyes],",
          "279:    [AC_MSG_FAILURE(",
          "280:     [Missing function: ioctl],",
          "281:     [1])",
          "282:    ])",
          "283:   ])",
          "285:  AS_IF(",
          "286:   [test \"x$ac_cv_func_lseek\" != xyes],",
          "287:   [AC_MSG_FAILURE(",
          "288:    [Missing function: lseek],",
          "289:    [1])",
          "290:   ])",
          "292:  AS_IF(",
          "293:   [test \"x$ac_cv_func_open\" != xyes],",
          "294:   [AC_MSG_FAILURE(",
          "295:    [Missing function: open],",
          "296:    [1])",
          "297:   ])",
          "299:  AS_IF(",
          "300:   [test \"x$ac_cv_func_read\" != xyes],",
          "301:   [AC_MSG_FAILURE(",
          "302:    [Missing function: read],",
          "303:    [1])",
          "304:   ])",
          "306:  AS_IF(",
          "307:   [test \"x$ac_cv_func_write\" != xyes],",
          "308:   [AC_MSG_FAILURE(",
          "309:    [Missing function: write],",
          "310:    [1])",
          "311:   ])",
          "313:  dnl File input/output functions used in libcfile/libcfile_support.c",
          "314:  AC_CHECK_FUNCS([stat unlink])",
          "316:  AS_IF(",
          "317:   [test \"x$ac_cv_func_stat\" != xyes],",
          "318:   [AC_MSG_FAILURE(",
          "319:    [Missing function: stat],",
          "320:    [1])",
          "321:   ])",
          "323:  AS_IF(",
          "324:   [test \"x$ac_cv_func_unlink\" != xyes],",
          "325:   [AC_MSG_FAILURE(",
          "326:    [Missing function: unlink],",
          "327:    [1])",
          "328:   ])",
          "330:  ac_cv_libcfile_CPPFLAGS=\"-I../libcfile\";",
          "331:  ac_cv_libcfile_LIBADD=\"../libcfile/libcfile.la\";",
          "333:  ac_cv_libcfile=local",
          "334:  ])",
          "338:  [AX_COMMON_ARG_WITH(",
          "339:   [libcfile],",
          "340:   [libcfile],",
          "341:   [search for libcfile in includedir and libdir or in the specified DIR, or no if to use local version],",
          "342:   [auto-detect],",
          "343:   [DIR])",
          "345:  dnl Check for a shared library version",
          "346:  AX_LIBCFILE_CHECK_LIB",
          "348:  dnl Check if the dependencies for the local library version",
          "349:  AS_IF(",
          "350:   [test \"x$ac_cv_libcfile\" != xyes],",
          "351:   [AX_LIBCFILE_CHECK_LOCAL",
          "353:   AC_DEFINE(",
          "354:    [HAVE_LOCAL_LIBCFILE],",
          "355:    [1],",
          "356:    [Define to 1 if the local version of libcfile is used.])",
          "357:   AC_SUBST(",
          "358:    [HAVE_LOCAL_LIBCFILE],",
          "359:    [1])",
          "360:   ])",
          "362:  AM_CONDITIONAL(",
          "363:   [HAVE_LOCAL_LIBCFILE],",
          "364:   [test \"x$ac_cv_libcfile\" = xlocal])",
          "365:  AS_IF(",
          "366:   [test \"x$ac_cv_libcfile_CPPFLAGS\" != \"x\"],",
          "367:   [AC_SUBST(",
          "368:    [LIBCFILE_CPPFLAGS],",
          "369:    [$ac_cv_libcfile_CPPFLAGS])",
          "370:   ])",
          "371:  AS_IF(",
          "372:   [test \"x$ac_cv_libcfile_LIBADD\" != \"x\"],",
          "373:   [AC_SUBST(",
          "374:    [LIBCFILE_LIBADD],",
          "375:    [$ac_cv_libcfile_LIBADD])",
          "376:   ])",
          "378:  AS_IF(",
          "379:   [test \"x$ac_cv_libcfile\" = xyes],",
          "380:   [AC_SUBST(",
          "381:    [ax_libcfile_pc_libs_private],",
          "382:    [-lcfile])",
          "383:   ])",
          "385:  AS_IF(",
          "386:   [test \"x$ac_cv_libcfile\" = xyes],",
          "387:   [AC_SUBST(",
          "388:    [ax_libcfile_spec_requires],",
          "389:    [libcfile])",
          "390:   AC_SUBST(",
          "391:    [ax_libcfile_spec_build_requires],",
          "392:    [libcfile-devel])",
          "394:  ])",
          "",
          "[Added Lines]",
          "1: dnl Checks for libcfile or required headers and functions",
          "3: dnl Version: 20170904",
          "8:   [dnl Check if parameters were provided",
          "10:     [test \"x$ac_cv_with_libcfile\" != x && test \"x$ac_cv_with_libcfile\" != xno && test \"x$ac_cv_with_libcfile\" != xauto-detect],",
          "11:     [AS_IF(",
          "12:       [test -d \"$ac_cv_with_libcfile\"],",
          "13:       [CFLAGS=\"$CFLAGS -I${ac_cv_with_libcfile}/include\"",
          "14:       LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libcfile}/lib\"],",
          "15:       [AC_MSG_WARN([no such directory: $ac_cv_with_libcfile])",
          "16:       ])",
          "17:     ])",
          "20:     [test \"x$ac_cv_with_libcfile\" = xno],",
          "22:     [dnl Check for a pkg-config file",
          "23:     AS_IF(",
          "24:       [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:       [PKG_CHECK_MODULES(",
          "26:         [libcfile],",
          "27:         [libcfile >= 20160409],",
          "28:         [ac_cv_libcfile=yes],",
          "29:         [ac_cv_libcfile=check])",
          "30:       ])",
          "33:       [test \"x$ac_cv_libcfile\" = xyes && test \"x$ac_cv_enable_wide_character_type\" != xno],",
          "34:       [AC_CACHE_CHECK(",
          "35:        [whether libcfile/features.h defines LIBCFILE_HAVE_WIDE_CHARACTER_TYPE as 1],",
          "36:        [ac_cv_header_libcfile_features_h_have_wide_character_type],",
          "37:        [AC_LANG_PUSH(C)",
          "38:        AC_COMPILE_IFELSE(",
          "39:          [AC_LANG_PROGRAM(",
          "40:            [[#include <libcfile/features.h>]],",
          "41:            [[#if !defined( LIBCFILE_HAVE_WIDE_CHARACTER_TYPE ) || ( LIBCFILE_HAVE_WIDE_CHARACTER_TYPE != 1 )",
          "42: #error LIBCFILE_HAVE_WIDE_CHARACTER_TYPE not defined",
          "43: ##endif]] )],",
          "44:          [ac_cv_header_libcfile_features_h_have_wide_character_type=yes],",
          "45:          [ac_cv_header_libcfile_features_h_have_wide_character_type=no])",
          "46:        AC_LANG_POP(C)],",
          "47:        [ac_cv_header_libcfile_features_h_have_wide_character_type=no])",
          "49:       AS_IF(",
          "50:         [test \"x$ac_cv_header_libcfile_features_h_have_wide_character_type\" = xno],",
          "51:         [ac_cv_libcfile=no])",
          "52:     ])",
          "54:     AS_IF(",
          "55:       [test \"x$ac_cv_libcfile\" = xyes],",
          "56:       [ac_cv_libcfile_CPPFLAGS=\"$pkg_cv_libcfile_CFLAGS\"",
          "57:       ac_cv_libcfile_LIBADD=\"$pkg_cv_libcfile_LIBS\"])",
          "60:       [test \"x$ac_cv_libcfile\" = xcheck],",
          "61:       [dnl Check for headers",
          "62:       AC_CHECK_HEADERS([libcfile.h])",
          "64:       AS_IF(",
          "65:         [test \"x$ac_cv_header_libcfile_h\" = xno],",
          "66:         [ac_cv_libcfile=no],",
          "67:         [dnl Check for the individual functions",
          "68:         ac_cv_libcfile=yes",
          "70:         AC_CHECK_LIB(",
          "71:           cfile,",
          "72:           libcfile_get_version,",
          "73:           [ac_cv_libcfile_dummy=yes],",
          "74:           [ac_cv_libcfile=no])",
          "76:         dnl File functions",
          "77:         AC_CHECK_LIB(",
          "78:           cfile,",
          "79:           libcfile_file_initialize,",
          "80:           [ac_cv_libcfile_dummy=yes],",
          "81:           [ac_cv_libcfile=no])",
          "82:         AC_CHECK_LIB(",
          "83:           cfile,",
          "84:           libcfile_file_free,",
          "85:           [ac_cv_libcfile_dummy=yes],",
          "86:           [ac_cv_libcfile=no])",
          "87:         AC_CHECK_LIB(",
          "88:           cfile,",
          "89:           libcfile_file_open,",
          "90:           [ac_cv_libcfile_dummy=yes],",
          "91:           [ac_cv_libcfile=no])",
          "92:         AC_CHECK_LIB(",
          "93:           cfile,",
          "94:           libcfile_file_open_with_error_code,",
          "95:           [ac_cv_libcfile_dummy=yes],",
          "96:           [ac_cv_libcfile=no])",
          "97:         AC_CHECK_LIB(",
          "98:           cfile,",
          "99:           libcfile_file_close,",
          "100:           [ac_cv_libcfile_dummy=yes],",
          "101:           [ac_cv_libcfile=no])",
          "102:         AC_CHECK_LIB(",
          "103:           cfile,",
          "104:           libcfile_file_read_buffer,",
          "105:           [ac_cv_libcfile_dummy=yes],",
          "106:           [ac_cv_libcfile=no])",
          "107:         AC_CHECK_LIB(",
          "108:           cfile,",
          "109:           libcfile_file_read_buffer_with_error_code,",
          "110:           [ac_cv_libcfile_dummy=yes],",
          "111:           [ac_cv_libcfile=no])",
          "112:         AC_CHECK_LIB(",
          "113:           cfile,",
          "114:           libcfile_file_write_buffer,",
          "115:           [ac_cv_libcfile_dummy=yes],",
          "116:           [ac_cv_libcfile=no])",
          "117:         AC_CHECK_LIB(",
          "118:           cfile,",
          "119:           libcfile_file_write_buffer_with_error_code,",
          "120:           [ac_cv_libcfile_dummy=yes],",
          "121:           [ac_cv_libcfile=no])",
          "122:         AC_CHECK_LIB(",
          "123:           cfile,",
          "124:           libcfile_file_seek_offset,",
          "125:           [ac_cv_libcfile_dummy=yes],",
          "126:           [ac_cv_libcfile=no])",
          "127:         AC_CHECK_LIB(",
          "128:           cfile,",
          "129:           libcfile_file_resize,",
          "130:           [ac_cv_libcfile_dummy=yes],",
          "131:           [ac_cv_libcfile=no])",
          "132:         AC_CHECK_LIB(",
          "133:           cfile,",
          "134:           libcfile_file_is_open,",
          "135:           [ac_cv_libcfile_dummy=yes],",
          "136:           [ac_cv_libcfile=no])",
          "137:         AC_CHECK_LIB(",
          "138:           cfile,",
          "139:           libcfile_file_get_offset,",
          "140:           [ac_cv_libcfile_dummy=yes],",
          "141:           [ac_cv_libcfile=no])",
          "142:         AC_CHECK_LIB(",
          "143:           cfile,",
          "144:           libcfile_file_get_size,",
          "145:           [ac_cv_libcfile_dummy=yes],",
          "146:           [ac_cv_libcfile=no])",
          "147:         AC_CHECK_LIB(",
          "148:           cfile,",
          "149:           libcfile_file_is_device,",
          "150:           [ac_cv_libcfile_dummy=yes],",
          "151:           [ac_cv_libcfile=no])",
          "152:         AC_CHECK_LIB(",
          "153:           cfile,",
          "154:           libcfile_file_io_control_read,",
          "155:           [ac_cv_libcfile_dummy=yes],",
          "156:           [ac_cv_libcfile=no])",
          "157:         AC_CHECK_LIB(",
          "158:           cfile,",
          "159:           libcfile_file_io_control_read_with_error_code,",
          "160:           [ac_cv_libcfile_dummy=yes],",
          "161:           [ac_cv_libcfile=no])",
          "163:         AS_IF(",
          "164:           [test \"x$ac_cv_enable_wide_character_type\" != xno],",
          "165:           [AC_CHECK_LIB(",
          "166:             cfile,",
          "167:             libcfile_file_open_wide,",
          "168:             [ac_cv_libcfile_dummy=yes],",
          "169:             [ac_cv_libcfile=no])",
          "170:           AC_CHECK_LIB(",
          "171:             cfile,",
          "172:             libcfile_file_open_wide_with_error_code,",
          "173:             [ac_cv_libcfile_dummy=yes],",
          "174:             [ac_cv_libcfile=no])",
          "175:           ])",
          "177:         dnl Support functions",
          "178:         AC_CHECK_LIB(",
          "179:           cfile,",
          "180:           libcfile_file_exists,",
          "181:           [ac_cv_libcfile_dummy=yes],",
          "182:           [ac_cv_libcfile=no])",
          "183:         AC_CHECK_LIB(",
          "184:           cfile,",
          "185:           libcfile_file_remove,",
          "186:           [ac_cv_libcfile_dummy=yes],",
          "187:           [ac_cv_libcfile=no])",
          "189:         AS_IF(",
          "190:           [test \"x$ac_cv_enable_wide_character_type\" != xno],",
          "191:           [AC_CHECK_LIB(",
          "192:             cfile,",
          "193:             libcfile_file_exists_wide,",
          "194:             [ac_cv_libcfile_dummy=yes],",
          "195:             [ac_cv_libcfile=no])",
          "196:           AC_CHECK_LIB(",
          "197:             cfile,",
          "198:             libcfile_file_remove_wide,",
          "199:             [ac_cv_libcfile_dummy=yes],",
          "200:             [ac_cv_libcfile=no])",
          "201:           ])",
          "203:         ac_cv_libcfile_LIBADD=\"-lcfile\"",
          "204:         ])",
          "205:       ])",
          "208:   AS_IF(",
          "209:     [test \"x$ac_cv_libcfile\" = xyes],",
          "210:     [AC_DEFINE(",
          "211:       [HAVE_LIBCFILE],",
          "212:       [1],",
          "213:       [Define to 1 if you have the `cfile' library (-lcfile).])",
          "214:     ])",
          "216:   AS_IF(",
          "217:     [test \"x$ac_cv_libcfile\" = xyes],",
          "218:     [AC_SUBST(",
          "219:       [HAVE_LIBCFILE],",
          "220:       [1]) ],",
          "221:     [AC_SUBST(",
          "222:       [HAVE_LIBCFILE],",
          "223:       [0])",
          "224:     ])",
          "229:   [AC_CHECK_FUNCS([posix_fadvise])",
          "231:   AS_IF(",
          "232:     [test \"x$ac_cv_func_posix_fadvise\" = xyes],",
          "233:     [AC_MSG_CHECKING(",
          "234:         [whether posix_fadvise can be linked])",
          "236:       SAVE_CFLAGS=\"$CFLAGS\"",
          "237:       CFLAGS=\"$CFLAGS -Wall -Werror\"",
          "238:       AC_LANG_PUSH(C)",
          "240:       AC_LINK_IFELSE(",
          "241:         [AC_LANG_PROGRAM(",
          "242:           [[#include <fcntl.h>]],",
          "243:           [[#if !defined( POSIX_FADV_SEQUENTIAL )",
          "247:           [ac_cv_func_posix_fadvise=yes],",
          "248:           [ac_cv_func_posix_fadvise=no])",
          "250:       AC_LANG_POP(C)",
          "251:       CFLAGS=\"$SAVE_CFLAGS\"",
          "253:       AS_IF(",
          "254:         [test \"x$ac_cv_func_posix_fadvise\" = xyes],",
          "255:         [AC_MSG_RESULT(",
          "256:           [yes])",
          "257:         AC_DEFINE(",
          "258:           [HAVE_POSIX_FADVISE],",
          "259:           [1],",
          "260:           [Define to 1 if you have the posix_fadvise function.]) ],",
          "261:         [AC_MSG_RESULT(",
          "262:           [no]) ])",
          "263:     ])",
          "268:   [dnl Headers included in libcfile/libcfile_file.c and libcfile/libcfile_support.c",
          "269:   AC_CHECK_HEADERS([errno.h stdio.h sys/stat.h])",
          "271:   dnl Headers included in libcfile/libcfile_file.c",
          "272:   AC_CHECK_HEADERS([cygwin/fs.h fcntl.h linux/fs.h sys/disk.h sys/disklabel.h sys/ioctl.h unistd.h])",
          "274:   dnl File input/output functions used in libcfile/libcfile_file.c",
          "275:   AC_CHECK_FUNCS([close fstat ftruncate ioctl lseek open read write])",
          "277:   AS_IF(",
          "278:     [test \"x$ac_cv_func_close\" != xyes],",
          "279:     [AC_MSG_FAILURE(",
          "280:       [Missing function: close],",
          "281:       [1])",
          "282:     ])",
          "284:   AX_LIBCFILE_CHECK_FUNC_POSIX_FADVISE",
          "286:   AS_IF(",
          "287:     [test \"x$ac_cv_func_fstat\" != xyes],",
          "288:     [AC_MSG_FAILURE(",
          "289:       [Missing function: fstat],",
          "290:       [1])",
          "291:     ])",
          "293:   AS_IF(",
          "294:     [test \"x$ac_cv_func_ftruncate\" != xyes],",
          "295:     [AC_MSG_FAILURE(",
          "296:       [Missing function: ftruncate],",
          "297:       [1])",
          "298:     ])",
          "300:   AS_IF(",
          "301:     [test x\"$ac_cv_enable_winapi\" = xno],",
          "302:     [AS_IF(",
          "303:       [test \"x$ac_cv_func_ioctl\" != xyes],",
          "304:       [AC_MSG_FAILURE(",
          "305:         [Missing function: ioctl],",
          "306:         [1])",
          "307:       ])",
          "308:     ])",
          "310:   AS_IF(",
          "311:     [test \"x$ac_cv_func_lseek\" != xyes],",
          "312:     [AC_MSG_FAILURE(",
          "313:       [Missing function: lseek],",
          "314:       [1])",
          "315:     ])",
          "317:   AS_IF(",
          "318:     [test \"x$ac_cv_func_open\" != xyes],",
          "319:     [AC_MSG_FAILURE(",
          "320:       [Missing function: open],",
          "321:       [1])",
          "322:     ])",
          "324:   AS_IF(",
          "325:     [test \"x$ac_cv_func_read\" != xyes],",
          "326:     [AC_MSG_FAILURE(",
          "327:       [Missing function: read],",
          "328:       [1])",
          "329:     ])",
          "331:   AS_IF(",
          "332:     [test \"x$ac_cv_func_write\" != xyes],",
          "333:     [AC_MSG_FAILURE(",
          "334:       [Missing function: write],",
          "335:       [1])",
          "336:     ])",
          "338:   dnl File input/output functions used in libcfile/libcfile_support.c",
          "339:   AC_CHECK_FUNCS([stat unlink])",
          "341:   AS_IF(",
          "342:     [test \"x$ac_cv_func_stat\" != xyes],",
          "343:     [AC_MSG_FAILURE(",
          "344:       [Missing function: stat],",
          "345:       [1])",
          "346:     ])",
          "348:   AS_IF(",
          "349:     [test \"x$ac_cv_func_unlink\" != xyes],",
          "350:     [AC_MSG_FAILURE(",
          "351:       [Missing function: unlink],",
          "352:       [1])",
          "353:     ])",
          "355:   ac_cv_libcfile_CPPFLAGS=\"-I../libcfile\";",
          "356:   ac_cv_libcfile_LIBADD=\"../libcfile/libcfile.la\";",
          "358:   ac_cv_libcfile=local",
          "359:   ])",
          "363:   [AX_COMMON_ARG_WITH(",
          "364:     [libcfile],",
          "365:     [libcfile],",
          "366:     [search for libcfile in includedir and libdir or in the specified DIR, or no if to use local version],",
          "367:     [auto-detect],",
          "368:     [DIR])",
          "370:   dnl Check for a shared library version",
          "371:   AX_LIBCFILE_CHECK_LIB",
          "373:   dnl Check if the dependencies for the local library version",
          "374:   AS_IF(",
          "375:     [test \"x$ac_cv_libcfile\" != xyes],",
          "376:     [AX_LIBCFILE_CHECK_LOCAL",
          "378:     AC_DEFINE(",
          "379:       [HAVE_LOCAL_LIBCFILE],",
          "380:       [1],",
          "381:       [Define to 1 if the local version of libcfile is used.])",
          "382:     AC_SUBST(",
          "383:       [HAVE_LOCAL_LIBCFILE],",
          "384:       [1])",
          "385:     ])",
          "387:   AM_CONDITIONAL(",
          "388:     [HAVE_LOCAL_LIBCFILE],",
          "389:     [test \"x$ac_cv_libcfile\" = xlocal])",
          "390:   AS_IF(",
          "391:     [test \"x$ac_cv_libcfile_CPPFLAGS\" != \"x\"],",
          "392:     [AC_SUBST(",
          "393:       [LIBCFILE_CPPFLAGS],",
          "394:       [$ac_cv_libcfile_CPPFLAGS])",
          "395:     ])",
          "396:   AS_IF(",
          "397:     [test \"x$ac_cv_libcfile_LIBADD\" != \"x\"],",
          "398:     [AC_SUBST(",
          "399:       [LIBCFILE_LIBADD],",
          "400:       [$ac_cv_libcfile_LIBADD])",
          "401:     ])",
          "403:   AS_IF(",
          "404:     [test \"x$ac_cv_libcfile\" = xyes],",
          "405:     [AC_SUBST(",
          "406:       [ax_libcfile_pc_libs_private],",
          "407:       [-lcfile])",
          "408:     ])",
          "410:   AS_IF(",
          "411:     [test \"x$ac_cv_libcfile\" = xyes],",
          "412:     [AC_SUBST(",
          "413:       [ax_libcfile_spec_requires],",
          "414:       [libcfile])",
          "415:     AC_SUBST(",
          "416:       [ax_libcfile_spec_build_requires],",
          "417:       [libcfile-devel])",
          "418:     ])",
          "",
          "---------------"
        ],
        "m4/libclocale.m4||m4/libclocale.m4": [
          "File: m4/libclocale.m4 -> m4/libclocale.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: dnl",
          "5: dnl Function to detect if libclocale is available",
          "6: dnl ac_libclocale_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "7: AC_DEFUN([AX_LIBCLOCALE_CHECK_LIB],",
          "23:   AS_IF(",
          "32:   AS_IF(",
          "41:     [ac_cv_libclocale=no],",
          "80:     ])",
          "102:     ])",
          "122:   ])",
          "125: dnl Function to detect whether nl_langinfo supports CODESET",
          "126: AC_DEFUN([AX_LIBCLOCALE_CHECK_FUNC_LANGINFO_CODESET],",
          "140:     [ac_cv_cv_langinfo_codeset=no])",
          "150:   ])",
          "153: dnl Function to detect if libclocale dependencies are available",
          "154: AC_DEFUN([AX_LIBCLOCALE_CHECK_LOCAL],",
          "173:   AS_IF(",
          "198: dnl Function to detect how to enable libclocale",
          "199: AC_DEFUN([AX_LIBCLOCALE_CHECK_ENABLE],",
          "255:   ])",
          "",
          "[Removed Lines]",
          "1: dnl Functions for libclocale",
          "3: dnl Version: 20130406",
          "8:  [dnl Check if parameters were provided",
          "9:  AS_IF(",
          "10:   [test \"x$ac_cv_with_libclocale\" != x && test \"x$ac_cv_with_libclocale\" != xno && test \"x$ac_cv_with_libclocale\" != xauto-detect],",
          "11:   [AS_IF(",
          "12:    [test -d \"$ac_cv_with_libclocale\"],",
          "13:    [CFLAGS=\"$CFLAGS -I${ac_cv_with_libclocale}/include\"",
          "14:    LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libclocale}/lib\"],",
          "15:    [AC_MSG_WARN([no such directory: $ac_cv_with_libclocale])",
          "16:    ])",
          "17:   ])",
          "19:  AS_IF(",
          "20:   [test \"x$ac_cv_with_libclocale\" = xno],",
          "21:   [ac_cv_libclocale=no],",
          "22:   [dnl Check for a pkg-config file",
          "24:    [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:    [PKG_CHECK_MODULES(",
          "26:     [libclocale],",
          "27:     [libclocale >= 20120425],",
          "28:     [ac_cv_libclocale=yes],",
          "29:     [ac_cv_libclocale=no])",
          "30:    ])",
          "33:    [test \"x$ac_cv_libclocale\" = xyes],",
          "34:    [ac_cv_libclocale_CPPFLAGS=\"$pkg_cv_libclocale_CFLAGS\"",
          "35:    ac_cv_libclocale_LIBADD=\"$pkg_cv_libclocale_LIBS\"],",
          "36:    [dnl Check for headers",
          "37:    AC_CHECK_HEADERS([libclocale.h])",
          "39:    AS_IF(",
          "40:     [test \"x$ac_cv_header_libclocale_h\" = xno],",
          "42:     [dnl Check for the individual functions",
          "43:     ac_cv_libclocale=yes",
          "45:     AC_CHECK_LIB(",
          "46:      clocale,",
          "47:      libclocale_get_version,",
          "48:      [ac_cv_libclocale_dummy=yes],",
          "49:      [ac_cv_libclocale=no])",
          "51:     dnl Codepage functions",
          "52:     AC_CHECK_LIB(",
          "53:      clocale,",
          "54:      libclocale_codepage,",
          "55:      [ac_cv_libclocale_dummy=yes],",
          "56:      [ac_cv_libclocale=no])",
          "57:     AC_CHECK_LIB(",
          "58:      clocale,",
          "59:      libclocale_codepage_get,",
          "60:      [ac_cv_libclocale_dummy=yes],",
          "61:      [ac_cv_libclocale=no])",
          "62:     AC_CHECK_LIB(",
          "63:      clocale,",
          "64:      libclocale_codepage_set,",
          "65:      [ac_cv_libclocale_dummy=yes],",
          "66:      [ac_cv_libclocale=no])",
          "67:     AC_CHECK_LIB(",
          "68:      clocale,",
          "69:      libclocale_codepage_copy_from_string,",
          "70:      [ac_cv_libclocale_dummy=yes],",
          "71:      [ac_cv_libclocale=no])",
          "73:    AS_IF(",
          "74:     [test \"x$ac_cv_enable_wide_character_type\" != xno],",
          "75:     [AC_CHECK_LIB(",
          "76:      clocale,",
          "77:      libclocale_codepage_copy_from_string_wide,",
          "78:      [ac_cv_libclocale_dummy=yes],",
          "79:      [ac_cv_libclocale=no])",
          "82:     dnl Locale functions",
          "83:     AC_CHECK_LIB(",
          "84:      clocale,",
          "85:      libclocale_locale_get_codepage,",
          "86:      [ac_cv_libclocale_dummy=yes],",
          "87:      [ac_cv_libclocale=no])",
          "88:     AC_CHECK_LIB(",
          "89:      clocale,",
          "90:      libclocale_locale_get_decimal_point,",
          "91:      [ac_cv_libclocale_dummy=yes],",
          "92:      [ac_cv_libclocale=no])",
          "94:     dnl Support functions",
          "95:     AC_CHECK_LIB(",
          "96:      clocale,",
          "97:      libclocale_initialize,",
          "98:      [ac_cv_libclocale_dummy=yes],",
          "99:      [ac_cv_libclocale=no])",
          "101:     ac_cv_libclocale_LIBADD=\"-lclocale\"",
          "103:    ])",
          "104:   ])",
          "106:  AS_IF(",
          "107:   [test \"x$ac_cv_libclocale\" = xyes],",
          "108:   [AC_DEFINE(",
          "109:    [HAVE_LIBCLOCALE],",
          "110:    [1],",
          "111:    [Define to 1 if you have the `clocale' library (-lclocale).])",
          "112:   ])",
          "114:  AS_IF(",
          "115:   [test \"x$ac_cv_libclocale\" = xyes],",
          "116:   [AC_SUBST(",
          "117:    [HAVE_LIBCLOCALE],",
          "118:    [1]) ],",
          "119:   [AC_SUBST(",
          "120:    [HAVE_LIBCLOCALE],",
          "121:    [0])",
          "123:  ])",
          "127:  [AC_CHECK_FUNCS([nl_langinfo])",
          "129:  AS_IF(",
          "130:   [test \"x$ac_cv_func_nl_langinfo\" = xyes],",
          "131:   [AC_CACHE_CHECK(",
          "132:    [for nl_langinfo CODESET support],",
          "133:    [ac_cv_cv_langinfo_codeset],",
          "134:    [AC_LANG_PUSH(C)",
          "135:    AC_LINK_IFELSE(",
          "136:     [AC_LANG_PROGRAM(",
          "137:      [[#include <langinfo.h>]],",
          "138:      [[char* charset = nl_langinfo( CODESET );]] )],",
          "139:     [ac_cv_cv_langinfo_codeset=yes],",
          "141:    AC_LANG_POP(C) ]) ],",
          "142:   [ac_cv_cv_langinfo_codeset=no])",
          "144:  AS_IF(",
          "145:   [test \"x$ac_cv_cv_langinfo_codeset\" = xyes],",
          "146:   [AC_DEFINE(",
          "147:    [HAVE_LANGINFO_CODESET],",
          "148:    [1],",
          "149:    [Define if nl_langinfo has CODESET support.])",
          "151:  ])",
          "155:  [dnl Headers included in libclocale/libclocale_locale.c",
          "156:  AC_CHECK_HEADERS([langinfo.h locale.h])",
          "158:  dnl Check for environment functions in libclocale/libclocale_locale.c",
          "159:  AC_CHECK_FUNCS([getenv])",
          "161:  AS_IF(",
          "162:   [test \"x$ac_cv_func_getenv\" != xyes],",
          "163:   [AC_MSG_FAILURE(",
          "164:    [Missing function: getenv],",
          "165:    [1])",
          "166:   ])",
          "168:  dnl Check for localization functions in libclocale/libclocale_locale.c",
          "169:  AS_IF(",
          "170:   [test \"x$ac_cv_enable_winapi\" = xno],",
          "171:   [AC_CHECK_FUNCS([localeconv])",
          "174:    [test \"x$ac_cv_func_localeconv\" != xyes],",
          "175:    [AC_MSG_FAILURE(",
          "176:     [Missing function: localeconv],",
          "177:     [1])",
          "178:    ])",
          "179:   ])",
          "181:  AC_CHECK_FUNCS([setlocale])",
          "183:  AS_IF(",
          "184:   [test \"x$ac_cv_func_setlocale\" != xyes],",
          "185:   [AC_MSG_FAILURE(",
          "186:    [Missing function: setlocale],",
          "187:    [1])",
          "188:   ])",
          "190:  AX_LIBCLOCALE_CHECK_FUNC_LANGINFO_CODESET",
          "192:  ac_cv_libclocale_CPPFLAGS=\"-I../libclocale\";",
          "193:  ac_cv_libclocale_LIBADD=\"../libclocale/libclocale.la\";",
          "195:  ac_cv_libclocale=local",
          "196:  ])",
          "200:  [AX_COMMON_ARG_WITH(",
          "201:   [libclocale],",
          "202:   [libclocale],",
          "203:   [search for libclocale in includedir and libdir or in the specified DIR, or no if to use local version],",
          "204:   [auto-detect],",
          "205:   [DIR])",
          "207:  dnl Check for a shared library version",
          "208:  AX_LIBCLOCALE_CHECK_LIB",
          "210:  dnl Check if the dependencies for the local library version",
          "211:  AS_IF(",
          "212:   [test \"x$ac_cv_libclocale\" != xyes],",
          "213:   [AX_LIBCLOCALE_CHECK_LOCAL",
          "215:   AC_DEFINE(",
          "216:    [HAVE_LOCAL_LIBCLOCALE],",
          "217:    [1],",
          "218:    [Define to 1 if the local version of libclocale is used.])",
          "219:   AC_SUBST(",
          "220:    [HAVE_LOCAL_LIBCLOCALE],",
          "221:    [1])",
          "222:   ])",
          "224:  AM_CONDITIONAL(",
          "225:   [HAVE_LOCAL_LIBCLOCALE],",
          "226:   [test \"x$ac_cv_libclocale\" = xlocal])",
          "227:  AS_IF(",
          "228:   [test \"x$ac_cv_libclocale_CPPFLAGS\" != \"x\"],",
          "229:   [AC_SUBST(",
          "230:    [LIBCLOCALE_CPPFLAGS],",
          "231:    [$ac_cv_libclocale_CPPFLAGS])",
          "232:   ])",
          "233:  AS_IF(",
          "234:   [test \"x$ac_cv_libclocale_LIBADD\" != \"x\"],",
          "235:   [AC_SUBST(",
          "236:    [LIBCLOCALE_LIBADD],",
          "237:    [$ac_cv_libclocale_LIBADD])",
          "238:   ])",
          "240:  AS_IF(",
          "241:   [test \"x$ac_cv_libclocale\" = xyes],",
          "242:   [AC_SUBST(",
          "243:    [ax_libclocale_pc_libs_private],",
          "244:    [-lclocale])",
          "245:   ])",
          "247:  AS_IF(",
          "248:   [test \"x$ac_cv_libclocale\" = xyes],",
          "249:   [AC_SUBST(",
          "250:    [ax_libclocale_spec_requires],",
          "251:    [libclocale])",
          "252:   AC_SUBST(",
          "253:    [ax_libclocale_spec_build_requires],",
          "254:    [libclocale-devel])",
          "256:  ])",
          "",
          "[Added Lines]",
          "1: dnl Checks for libclocale or required headers and functions",
          "3: dnl Version: 20170904",
          "8:   [dnl Check if parameters were provided",
          "10:     [test \"x$ac_cv_with_libclocale\" != x && test \"x$ac_cv_with_libclocale\" != xno && test \"x$ac_cv_with_libclocale\" != xauto-detect],",
          "11:     [AS_IF(",
          "12:       [test -d \"$ac_cv_with_libclocale\"],",
          "13:       [CFLAGS=\"$CFLAGS -I${ac_cv_with_libclocale}/include\"",
          "14:       LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libclocale}/lib\"],",
          "15:       [AC_MSG_WARN([no such directory: $ac_cv_with_libclocale])",
          "16:       ])",
          "17:     ])",
          "20:     [test \"x$ac_cv_with_libclocale\" = xno],",
          "22:     [dnl Check for a pkg-config file",
          "23:     AS_IF(",
          "24:       [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:       [PKG_CHECK_MODULES(",
          "26:         [libclocale],",
          "27:         [libclocale >= 20120425],",
          "28:         [ac_cv_libclocale=yes],",
          "29:         [ac_cv_libclocale=check])",
          "30:       ])",
          "32:     AS_IF(",
          "33:       [test \"x$ac_cv_libclocale\" = xyes && test \"x$ac_cv_enable_wide_character_type\" != xno],",
          "34:       [AC_CACHE_CHECK(",
          "35:        [whether libclocale/features.h defines LIBCLOCALE_HAVE_WIDE_CHARACTER_TYPE as 1],",
          "36:        [ac_cv_header_libclocale_features_h_have_wide_character_type],",
          "37:        [AC_LANG_PUSH(C)",
          "38:        AC_COMPILE_IFELSE(",
          "39:          [AC_LANG_PROGRAM(",
          "40:            [[#include <libclocale/features.h>]],",
          "41:            [[#if !defined( LIBCLOCALE_HAVE_WIDE_CHARACTER_TYPE ) || ( LIBCLOCALE_HAVE_WIDE_CHARACTER_TYPE != 1 )",
          "42: #error LIBCLOCALE_HAVE_WIDE_CHARACTER_TYPE not defined",
          "43: ##endif]] )],",
          "44:          [ac_cv_header_libclocale_features_h_have_wide_character_type=yes],",
          "45:          [ac_cv_header_libclocale_features_h_have_wide_character_type=no])",
          "46:        AC_LANG_POP(C)],",
          "47:        [ac_cv_header_libclocale_features_h_have_wide_character_type=no])",
          "49:       AS_IF(",
          "50:         [test \"x$ac_cv_header_libclocale_features_h_have_wide_character_type\" = xno],",
          "51:         [ac_cv_libclocale=no])",
          "54:     AS_IF(",
          "55:       [test \"x$ac_cv_libclocale\" = xyes],",
          "56:       [ac_cv_libclocale_CPPFLAGS=\"$pkg_cv_libclocale_CFLAGS\"",
          "57:       ac_cv_libclocale_LIBADD=\"$pkg_cv_libclocale_LIBS\"])",
          "59:     AS_IF(",
          "60:       [test \"x$ac_cv_libclocale\" = xcheck],",
          "61:       [dnl Check for headers",
          "62:       AC_CHECK_HEADERS([libclocale.h])",
          "64:       AS_IF(",
          "65:         [test \"x$ac_cv_header_libclocale_h\" = xno],",
          "66:         [ac_cv_libclocale=no],",
          "67:         [dnl Check for the individual functions",
          "68:         ac_cv_libclocale=yes",
          "70:         AC_CHECK_LIB(",
          "71:           clocale,",
          "72:           libclocale_get_version,",
          "73:           [ac_cv_libclocale_dummy=yes],",
          "74:           [ac_cv_libclocale=no])",
          "76:         dnl Codepage functions",
          "77:         AC_CHECK_LIB(",
          "78:           clocale,",
          "79:           libclocale_codepage,",
          "80:           [ac_cv_libclocale_dummy=yes],",
          "81:           [ac_cv_libclocale=no])",
          "82:         AC_CHECK_LIB(",
          "83:           clocale,",
          "84:           libclocale_codepage_get,",
          "85:           [ac_cv_libclocale_dummy=yes],",
          "86:           [ac_cv_libclocale=no])",
          "87:         AC_CHECK_LIB(",
          "88:           clocale,",
          "89:           libclocale_codepage_set,",
          "90:           [ac_cv_libclocale_dummy=yes],",
          "91:           [ac_cv_libclocale=no])",
          "92:         AC_CHECK_LIB(",
          "93:           clocale,",
          "94:           libclocale_codepage_copy_from_string,",
          "95:           [ac_cv_libclocale_dummy=yes],",
          "96:           [ac_cv_libclocale=no])",
          "98:       AS_IF(",
          "99:         [test \"x$ac_cv_enable_wide_character_type\" != xno],",
          "100:         [AC_CHECK_LIB(",
          "101:           clocale,",
          "102:           libclocale_codepage_copy_from_string_wide,",
          "103:           [ac_cv_libclocale_dummy=yes],",
          "104:           [ac_cv_libclocale=no])",
          "105:         ])",
          "107:         dnl Locale functions",
          "108:         AC_CHECK_LIB(",
          "109:           clocale,",
          "110:           libclocale_locale_get_codepage,",
          "111:           [ac_cv_libclocale_dummy=yes],",
          "112:           [ac_cv_libclocale=no])",
          "113:         AC_CHECK_LIB(",
          "114:           clocale,",
          "115:           libclocale_locale_get_decimal_point,",
          "116:           [ac_cv_libclocale_dummy=yes],",
          "117:           [ac_cv_libclocale=no])",
          "119:         dnl Support functions",
          "120:         AC_CHECK_LIB(",
          "121:           clocale,",
          "122:           libclocale_initialize,",
          "123:           [ac_cv_libclocale_dummy=yes],",
          "124:           [ac_cv_libclocale=no])",
          "126:         ac_cv_libclocale_LIBADD=\"-lclocale\"",
          "127:         ])",
          "128:       ])",
          "131:   AS_IF(",
          "132:     [test \"x$ac_cv_libclocale\" = xyes],",
          "133:     [AC_DEFINE(",
          "134:       [HAVE_LIBCLOCALE],",
          "135:       [1],",
          "136:       [Define to 1 if you have the `clocale' library (-lclocale).])",
          "137:     ])",
          "139:   AS_IF(",
          "140:     [test \"x$ac_cv_libclocale\" = xyes],",
          "141:     [AC_SUBST(",
          "142:       [HAVE_LIBCLOCALE],",
          "143:       [1]) ],",
          "144:     [AC_SUBST(",
          "145:       [HAVE_LIBCLOCALE],",
          "146:       [0])",
          "147:     ])",
          "152:   [AC_CHECK_FUNCS([nl_langinfo])",
          "154:   AS_IF(",
          "155:     [test \"x$ac_cv_func_nl_langinfo\" = xyes],",
          "156:     [AC_CACHE_CHECK(",
          "157:       [for nl_langinfo CODESET support],",
          "158:       [ac_cv_cv_langinfo_codeset],",
          "159:       [AC_LANG_PUSH(C)",
          "160:       AC_LINK_IFELSE(",
          "161:         [AC_LANG_PROGRAM(",
          "162:           [[#include <langinfo.h>]],",
          "163:           [[char* charset = nl_langinfo( CODESET );]] )],",
          "164:         [ac_cv_cv_langinfo_codeset=yes],",
          "165:         [ac_cv_cv_langinfo_codeset=no])",
          "166:       AC_LANG_POP(C) ]) ],",
          "169:   AS_IF(",
          "170:     [test \"x$ac_cv_cv_langinfo_codeset\" = xyes],",
          "171:     [AC_DEFINE(",
          "172:       [HAVE_LANGINFO_CODESET],",
          "173:       [1],",
          "174:       [Define if nl_langinfo has CODESET support.])",
          "175:     ])",
          "180:   [dnl Headers included in libclocale/libclocale_locale.c",
          "181:   AC_CHECK_HEADERS([langinfo.h locale.h])",
          "183:   dnl Check for environment functions in libclocale/libclocale_locale.c",
          "184:   AC_CHECK_FUNCS([getenv])",
          "186:   AS_IF(",
          "187:     [test \"x$ac_cv_func_getenv\" != xyes],",
          "188:     [AC_MSG_FAILURE(",
          "189:       [Missing function: getenv],",
          "190:       [1])",
          "191:     ])",
          "193:   dnl Check for localization functions in libclocale/libclocale_locale.c",
          "195:     [test \"x$ac_cv_enable_winapi\" = xno],",
          "196:     [AC_CHECK_FUNCS([localeconv])",
          "198:     AS_IF(",
          "199:       [test \"x$ac_cv_func_localeconv\" != xyes],",
          "200:       [AC_MSG_FAILURE(",
          "201:         [Missing function: localeconv],",
          "202:         [1])",
          "203:       ])",
          "204:     ])",
          "206:   AC_CHECK_FUNCS([setlocale])",
          "208:   AS_IF(",
          "209:     [test \"x$ac_cv_func_setlocale\" != xyes],",
          "210:     [AC_MSG_FAILURE(",
          "211:       [Missing function: setlocale],",
          "212:       [1])",
          "213:     ])",
          "215:   AX_LIBCLOCALE_CHECK_FUNC_LANGINFO_CODESET",
          "217:   ac_cv_libclocale_CPPFLAGS=\"-I../libclocale\";",
          "218:   ac_cv_libclocale_LIBADD=\"../libclocale/libclocale.la\";",
          "220:   ac_cv_libclocale=local",
          "221:   ])",
          "225:   [AX_COMMON_ARG_WITH(",
          "226:     [libclocale],",
          "227:     [libclocale],",
          "228:     [search for libclocale in includedir and libdir or in the specified DIR, or no if to use local version],",
          "229:     [auto-detect],",
          "230:     [DIR])",
          "232:   dnl Check for a shared library version",
          "233:   AX_LIBCLOCALE_CHECK_LIB",
          "235:   dnl Check if the dependencies for the local library version",
          "236:   AS_IF(",
          "237:     [test \"x$ac_cv_libclocale\" != xyes],",
          "238:     [AX_LIBCLOCALE_CHECK_LOCAL",
          "240:     AC_DEFINE(",
          "241:       [HAVE_LOCAL_LIBCLOCALE],",
          "242:       [1],",
          "243:       [Define to 1 if the local version of libclocale is used.])",
          "244:     AC_SUBST(",
          "245:       [HAVE_LOCAL_LIBCLOCALE],",
          "246:       [1])",
          "247:     ])",
          "249:   AM_CONDITIONAL(",
          "250:     [HAVE_LOCAL_LIBCLOCALE],",
          "251:     [test \"x$ac_cv_libclocale\" = xlocal])",
          "252:   AS_IF(",
          "253:     [test \"x$ac_cv_libclocale_CPPFLAGS\" != \"x\"],",
          "254:     [AC_SUBST(",
          "255:       [LIBCLOCALE_CPPFLAGS],",
          "256:       [$ac_cv_libclocale_CPPFLAGS])",
          "257:     ])",
          "258:   AS_IF(",
          "259:     [test \"x$ac_cv_libclocale_LIBADD\" != \"x\"],",
          "260:     [AC_SUBST(",
          "261:       [LIBCLOCALE_LIBADD],",
          "262:       [$ac_cv_libclocale_LIBADD])",
          "263:     ])",
          "265:   AS_IF(",
          "266:     [test \"x$ac_cv_libclocale\" = xyes],",
          "267:     [AC_SUBST(",
          "268:       [ax_libclocale_pc_libs_private],",
          "269:       [-lclocale])",
          "270:     ])",
          "272:   AS_IF(",
          "273:     [test \"x$ac_cv_libclocale\" = xyes],",
          "274:     [AC_SUBST(",
          "275:       [ax_libclocale_spec_requires],",
          "276:       [libclocale])",
          "277:     AC_SUBST(",
          "278:       [ax_libclocale_spec_build_requires],",
          "279:       [libclocale-devel])",
          "280:     ])",
          "",
          "---------------"
        ],
        "m4/libcnotify.m4||m4/libcnotify.m4": [
          "File: m4/libcnotify.m4 -> m4/libcnotify.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: dnl",
          "5: dnl Function to detect if libcnotify is available",
          "6: dnl ac_libcnotify_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "7: AC_DEFUN([AX_LIBCNOTIFY_CHECK_LIB],",
          "23:   AS_IF(",
          "32:   AS_IF(",
          "41:     [ac_cv_libcnotify=no],",
          "93:     ])",
          "113:   ])",
          "116: dnl Function to detect if libcnotify dependencies are available",
          "117: AC_DEFUN([AX_LIBCNOTIFY_CHECK_LOCAL],",
          "137: dnl Function to detect how to enable libcnotify",
          "138: AC_DEFUN([AX_LIBCNOTIFY_CHECK_ENABLE],",
          "194:   ])",
          "",
          "[Removed Lines]",
          "1: dnl Functions for libcnotify",
          "3: dnl Version: 20130406",
          "8:  [dnl Check if parameters were provided",
          "9:  AS_IF(",
          "10:   [test \"x$ac_cv_with_libcnotify\" != x && test \"x$ac_cv_with_libcnotify\" != xno && test \"x$ac_cv_with_libcnotify\" != xauto-detect],",
          "11:   [AS_IF(",
          "12:    [test -d \"$ac_cv_with_libcnotify\"],",
          "13:    [CFLAGS=\"$CFLAGS -I${ac_cv_with_libcnotify}/include\"",
          "14:    LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libcnotify}/lib\"],",
          "15:    [AC_MSG_WARN([no such directory: $ac_cv_with_libcnotify])",
          "16:    ])",
          "17:   ])",
          "19:  AS_IF(",
          "20:   [test \"x$ac_cv_with_libcnotify\" = xno],",
          "21:   [ac_cv_libcnotify=no],",
          "22:   [dnl Check for a pkg-config file",
          "24:    [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:    [PKG_CHECK_MODULES(",
          "26:     [libcnotify],",
          "27:     [libcnotify >= 20120425],",
          "28:     [ac_cv_libcnotify=yes],",
          "29:     [ac_cv_libcnotify=no])",
          "30:    ])",
          "33:    [test \"x$ac_cv_libcnotify\" = xyes],",
          "34:    [ac_cv_libcnotify_CPPFLAGS=\"$pkg_cv_libcnotify_CFLAGS\"",
          "35:    ac_cv_libcnotify_LIBADD=\"$pkg_cv_libcnotify_LIBS\"],",
          "36:    [dnl Check for headers",
          "37:    AC_CHECK_HEADERS([libcnotify.h])",
          "39:    AS_IF(",
          "40:     [test \"x$ac_cv_header_libcnotify_h\" = xno],",
          "42:     [dnl Check for the individual functions",
          "43:     ac_cv_libcnotify=yes",
          "45:     AC_CHECK_LIB(",
          "46:      cnotify,",
          "47:      libcnotify_get_version,",
          "48:      [ac_cv_libcnotify_dummy=yes],",
          "49:      [ac_cv_libcnotify=no])",
          "51:     dnl Print functions",
          "52:     AC_CHECK_LIB(",
          "53:      cnotify,",
          "54:      libcnotify_printf,",
          "55:      [ac_cv_libcnotify_dummy=yes],",
          "56:      [ac_cv_libcnotify=no])",
          "57:     AC_CHECK_LIB(",
          "58:      cnotify,",
          "59:      libcnotify_print_data,",
          "60:      [ac_cv_libcnotify_dummy=yes],",
          "61:      [ac_cv_libcnotify=no])",
          "62:     AC_CHECK_LIB(",
          "63:      cnotify,",
          "64:      libcnotify_print_error_backtrace,",
          "65:      [ac_cv_libcnotify_dummy=yes],",
          "66:      [ac_cv_libcnotify=no])",
          "68:     dnl Stream functions",
          "69:     AC_CHECK_LIB(",
          "70:      cnotify,",
          "71:      libcnotify_stream_set,",
          "72:      [ac_cv_libcnotify_dummy=yes],",
          "73:      [ac_cv_libcnotify=no])",
          "74:     AC_CHECK_LIB(",
          "75:      cnotify,",
          "76:      libcnotify_stream_open,",
          "77:      [ac_cv_libcnotify_dummy=yes],",
          "78:      [ac_cv_libcnotify=no])",
          "79:     AC_CHECK_LIB(",
          "80:      cnotify,",
          "81:      libcnotify_stream_close,",
          "82:      [ac_cv_libcnotify_dummy=yes],",
          "83:      [ac_cv_libcnotify=no])",
          "85:     dnl Verbose functions",
          "86:     AC_CHECK_LIB(",
          "87:      cnotify,",
          "88:      libcnotify_verbose_set,",
          "89:      [ac_cv_libcnotify_dummy=yes],",
          "90:      [ac_cv_libcnotify=no])",
          "92:     ac_cv_libcnotify_LIBADD=\"-lcnotify\"",
          "94:    ])",
          "95:   ])",
          "97:  AS_IF(",
          "98:   [test \"x$ac_cv_libcnotify\" = xyes],",
          "99:   [AC_DEFINE(",
          "100:    [HAVE_LIBCNOTIFY],",
          "101:    [1],",
          "102:    [Define to 1 if you have the `cnotify' library (-lcnotify).])",
          "103:   ])",
          "105:  AS_IF(",
          "106:   [test \"x$ac_cv_libcnotify\" = xyes],",
          "107:   [AC_SUBST(",
          "108:    [HAVE_LIBCNOTIFY],",
          "109:    [1]) ],",
          "110:   [AC_SUBST(",
          "111:    [HAVE_LIBCNOTIFY],",
          "112:    [0])",
          "114:  ])",
          "118:  [dnl Headers included in libcnotify/libcnotify_print.c",
          "119:  AC_CHECK_HEADERS([stdarg.h varargs.h])",
          "121:  AS_IF(",
          "122:   [test \"x$ac_cv_header_stdarg_h\" != xyes && test \"x$ac_cv_header_varargs_h\" != xyes],",
          "123:   [AC_MSG_FAILURE(",
          "124:    [Missing headers: stdarg.h and varargs.h],",
          "125:    [1])",
          "126:   ])",
          "128:  dnl Headers included in libcnotify/libcnotify_stream.c",
          "129:  AC_CHECK_HEADERS([errno.h])",
          "131:  ac_cv_libcnotify_CPPFLAGS=\"-I../libcnotify\";",
          "132:  ac_cv_libcnotify_LIBADD=\"../libcnotify/libcnotify.la\";",
          "134:  ac_cv_libcnotify=local",
          "135:  ])",
          "139:  [AX_COMMON_ARG_WITH(",
          "140:   [libcnotify],",
          "141:   [libcnotify],",
          "142:   [search for libcnotify in includedir and libdir or in the specified DIR, or no if to use local version],",
          "143:   [auto-detect],",
          "144:   [DIR])",
          "146:  dnl Check for a shared library version",
          "147:  AX_LIBCNOTIFY_CHECK_LIB",
          "149:  dnl Check if the dependencies for the local library version",
          "150:  AS_IF(",
          "151:   [test \"x$ac_cv_libcnotify\" != xyes],",
          "152:   [AX_LIBCNOTIFY_CHECK_LOCAL",
          "154:   AC_DEFINE(",
          "155:    [HAVE_LOCAL_LIBCNOTIFY],",
          "156:    [1],",
          "157:    [Define to 1 if the local version of libcnotify is used.])",
          "158:   AC_SUBST(",
          "159:    [HAVE_LOCAL_LIBCNOTIFY],",
          "160:    [1])",
          "161:   ])",
          "163:  AM_CONDITIONAL(",
          "164:   [HAVE_LOCAL_LIBCNOTIFY],",
          "165:   [test \"x$ac_cv_libcnotify\" = xlocal])",
          "166:  AS_IF(",
          "167:   [test \"x$ac_cv_libcnotify_CPPFLAGS\" != \"x\"],",
          "168:   [AC_SUBST(",
          "169:    [LIBCNOTIFY_CPPFLAGS],",
          "170:    [$ac_cv_libcnotify_CPPFLAGS])",
          "171:   ])",
          "172:  AS_IF(",
          "173:   [test \"x$ac_cv_libcnotify_LIBADD\" != \"x\"],",
          "174:   [AC_SUBST(",
          "175:    [LIBCNOTIFY_LIBADD],",
          "176:    [$ac_cv_libcnotify_LIBADD])",
          "177:   ])",
          "179:  AS_IF(",
          "180:   [test \"x$ac_cv_libcnotify\" = xyes],",
          "181:   [AC_SUBST(",
          "182:    [ax_libcnotify_pc_libs_private],",
          "183:    [-lcnotify])",
          "184:   ])",
          "186:  AS_IF(",
          "187:   [test \"x$ac_cv_libcnotify\" = xyes],",
          "188:   [AC_SUBST(",
          "189:    [ax_libcnotify_spec_requires],",
          "190:    [libcnotify])",
          "191:   AC_SUBST(",
          "192:    [ax_libcnotify_spec_build_requires],",
          "193:    [libcnotify-devel])",
          "195:  ])",
          "",
          "[Added Lines]",
          "1: dnl Checks for libcnotify or required headers and functions",
          "3: dnl Version: 20170904",
          "8:   [dnl Check if parameters were provided",
          "10:     [test \"x$ac_cv_with_libcnotify\" != x && test \"x$ac_cv_with_libcnotify\" != xno && test \"x$ac_cv_with_libcnotify\" != xauto-detect],",
          "11:     [AS_IF(",
          "12:       [test -d \"$ac_cv_with_libcnotify\"],",
          "13:       [CFLAGS=\"$CFLAGS -I${ac_cv_with_libcnotify}/include\"",
          "14:       LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libcnotify}/lib\"],",
          "15:       [AC_MSG_WARN([no such directory: $ac_cv_with_libcnotify])",
          "16:       ])",
          "17:     ])",
          "20:     [test \"x$ac_cv_with_libcnotify\" = xno],",
          "22:     [dnl Check for a pkg-config file",
          "23:     AS_IF(",
          "24:       [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:       [PKG_CHECK_MODULES(",
          "26:         [libcnotify],",
          "27:         [libcnotify >= 20120425],",
          "28:         [ac_cv_libcnotify=yes],",
          "29:         [ac_cv_libcnotify=check])",
          "30:       ])",
          "32:     AS_IF(",
          "33:       [test \"x$ac_cv_libcnotify\" = xyes],",
          "34:       [ac_cv_libcnotify_CPPFLAGS=\"$pkg_cv_libcnotify_CFLAGS\"",
          "35:       ac_cv_libcnotify_LIBADD=\"$pkg_cv_libcnotify_LIBS\"])",
          "37:     AS_IF(",
          "38:       [test \"x$ac_cv_libcnotify\" = xcheck],",
          "39:       [dnl Check for headers",
          "40:       AC_CHECK_HEADERS([libcnotify.h])",
          "42:       AS_IF(",
          "43:         [test \"x$ac_cv_header_libcnotify_h\" = xno],",
          "44:         [ac_cv_libcnotify=no],",
          "45:         [dnl Check for the individual functions",
          "46:         ac_cv_libcnotify=yes",
          "48:         AC_CHECK_LIB(",
          "49:           cnotify,",
          "50:           libcnotify_get_version,",
          "51:           [ac_cv_libcnotify_dummy=yes],",
          "52:           [ac_cv_libcnotify=no])",
          "54:         dnl Print functions",
          "55:         AC_CHECK_LIB(",
          "56:           cnotify,",
          "57:           libcnotify_printf,",
          "58:           [ac_cv_libcnotify_dummy=yes],",
          "59:           [ac_cv_libcnotify=no])",
          "60:         AC_CHECK_LIB(",
          "61:           cnotify,",
          "62:           libcnotify_print_data,",
          "63:           [ac_cv_libcnotify_dummy=yes],",
          "64:           [ac_cv_libcnotify=no])",
          "65:         AC_CHECK_LIB(",
          "66:           cnotify,",
          "67:           libcnotify_print_error_backtrace,",
          "68:           [ac_cv_libcnotify_dummy=yes],",
          "69:           [ac_cv_libcnotify=no])",
          "71:         dnl Stream functions",
          "72:         AC_CHECK_LIB(",
          "73:           cnotify,",
          "74:           libcnotify_stream_set,",
          "75:           [ac_cv_libcnotify_dummy=yes],",
          "76:           [ac_cv_libcnotify=no])",
          "77:         AC_CHECK_LIB(",
          "78:           cnotify,",
          "79:           libcnotify_stream_open,",
          "80:           [ac_cv_libcnotify_dummy=yes],",
          "81:           [ac_cv_libcnotify=no])",
          "82:         AC_CHECK_LIB(",
          "83:           cnotify,",
          "84:           libcnotify_stream_close,",
          "85:           [ac_cv_libcnotify_dummy=yes],",
          "86:           [ac_cv_libcnotify=no])",
          "88:         dnl Verbose functions",
          "89:         AC_CHECK_LIB(",
          "90:           cnotify,",
          "91:           libcnotify_verbose_set,",
          "92:           [ac_cv_libcnotify_dummy=yes],",
          "93:           [ac_cv_libcnotify=no])",
          "95:         ac_cv_libcnotify_LIBADD=\"-lcnotify\"",
          "96:         ])",
          "97:       ])",
          "100:   AS_IF(",
          "101:     [test \"x$ac_cv_libcnotify\" = xyes],",
          "102:     [AC_DEFINE(",
          "103:       [HAVE_LIBCNOTIFY],",
          "104:       [1],",
          "105:       [Define to 1 if you have the `cnotify' library (-lcnotify).])",
          "106:     ])",
          "108:   AS_IF(",
          "109:     [test \"x$ac_cv_libcnotify\" = xyes],",
          "110:     [AC_SUBST(",
          "111:       [HAVE_LIBCNOTIFY],",
          "112:       [1]) ],",
          "113:     [AC_SUBST(",
          "114:       [HAVE_LIBCNOTIFY],",
          "115:       [0])",
          "116:     ])",
          "121:   [dnl Headers included in libcnotify/libcnotify_print.c",
          "122:   AC_CHECK_HEADERS([stdarg.h varargs.h])",
          "124:   AS_IF(",
          "125:     [test \"x$ac_cv_header_stdarg_h\" != xyes && test \"x$ac_cv_header_varargs_h\" != xyes],",
          "126:     [AC_MSG_FAILURE(",
          "127:       [Missing headers: stdarg.h and varargs.h],",
          "128:       [1])",
          "129:     ])",
          "131:   dnl Headers included in libcnotify/libcnotify_stream.c",
          "132:   AC_CHECK_HEADERS([errno.h])",
          "134:   ac_cv_libcnotify_CPPFLAGS=\"-I../libcnotify\";",
          "135:   ac_cv_libcnotify_LIBADD=\"../libcnotify/libcnotify.la\";",
          "137:   ac_cv_libcnotify=local",
          "138:   ])",
          "142:   [AX_COMMON_ARG_WITH(",
          "143:     [libcnotify],",
          "144:     [libcnotify],",
          "145:     [search for libcnotify in includedir and libdir or in the specified DIR, or no if to use local version],",
          "146:     [auto-detect],",
          "147:     [DIR])",
          "149:   dnl Check for a shared library version",
          "150:   AX_LIBCNOTIFY_CHECK_LIB",
          "152:   dnl Check if the dependencies for the local library version",
          "153:   AS_IF(",
          "154:     [test \"x$ac_cv_libcnotify\" != xyes],",
          "155:     [AX_LIBCNOTIFY_CHECK_LOCAL",
          "157:     AC_DEFINE(",
          "158:       [HAVE_LOCAL_LIBCNOTIFY],",
          "159:       [1],",
          "160:       [Define to 1 if the local version of libcnotify is used.])",
          "161:     AC_SUBST(",
          "162:       [HAVE_LOCAL_LIBCNOTIFY],",
          "163:       [1])",
          "164:     ])",
          "166:   AM_CONDITIONAL(",
          "167:     [HAVE_LOCAL_LIBCNOTIFY],",
          "168:     [test \"x$ac_cv_libcnotify\" = xlocal])",
          "169:   AS_IF(",
          "170:     [test \"x$ac_cv_libcnotify_CPPFLAGS\" != \"x\"],",
          "171:     [AC_SUBST(",
          "172:       [LIBCNOTIFY_CPPFLAGS],",
          "173:       [$ac_cv_libcnotify_CPPFLAGS])",
          "174:     ])",
          "175:   AS_IF(",
          "176:     [test \"x$ac_cv_libcnotify_LIBADD\" != \"x\"],",
          "177:     [AC_SUBST(",
          "178:       [LIBCNOTIFY_LIBADD],",
          "179:       [$ac_cv_libcnotify_LIBADD])",
          "180:     ])",
          "182:   AS_IF(",
          "183:     [test \"x$ac_cv_libcnotify\" = xyes],",
          "184:     [AC_SUBST(",
          "185:       [ax_libcnotify_pc_libs_private],",
          "186:       [-lcnotify])",
          "187:     ])",
          "189:   AS_IF(",
          "190:     [test \"x$ac_cv_libcnotify\" = xyes],",
          "191:     [AC_SUBST(",
          "192:       [ax_libcnotify_spec_requires],",
          "193:       [libcnotify])",
          "194:     AC_SUBST(",
          "195:       [ax_libcnotify_spec_build_requires],",
          "196:       [libcnotify-devel])",
          "197:     ])",
          "",
          "---------------"
        ],
        "m4/libcpath.m4||m4/libcpath.m4": [
          "File: m4/libcpath.m4 -> m4/libcpath.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: dnl",
          "5: dnl Function to detect if libcpath is available",
          "6: dnl ac_libcpath_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "7: AC_DEFUN([AX_LIBCPATH_CHECK_LIB],",
          "23:   AS_IF(",
          "32:   AS_IF(",
          "41:     [ac_cv_libcpath=no],",
          "88:     AS_IF(",
          "128:     ])",
          "148:   ])",
          "151: dnl Function to detect if mkdir is available",
          "152: dnl Also checks how to use mkdir",
          "153: AC_DEFUN([AX_LIBCPATH_CHECK_FUNC_MKDIR],",
          "168: #include <sys/types.h>]],",
          "218:   ])",
          "221: dnl Function to detect if libcpath dependencies are available",
          "222: AC_DEFUN([AX_LIBCPATH_CHECK_LOCAL],",
          "251: dnl Function to detect how to enable libcpath",
          "252: AC_DEFUN([AX_LIBCPATH_CHECK_ENABLE],",
          "308:   ])",
          "",
          "[Removed Lines]",
          "1: dnl Functions for libcpath",
          "3: dnl Version: 20130406",
          "8:  [dnl Check if parameters were provided",
          "9:  AS_IF(",
          "10:   [test \"x$ac_cv_with_libcpath\" != x && test \"x$ac_cv_with_libcpath\" != xno && test \"x$ac_cv_with_libcpath\" != xauto-detect],",
          "11:   [AS_IF(",
          "12:    [test -d \"$ac_cv_with_libcpath\"],",
          "13:    [CFLAGS=\"$CFLAGS -I${ac_cv_with_libcpath}/include\"",
          "14:    LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libcpath}/lib\"],",
          "15:    [AC_MSG_WARN([no such directory: $ac_cv_with_libcpath])",
          "16:    ])",
          "17:   ])",
          "19:  AS_IF(",
          "20:   [test \"x$ac_cv_with_libcpath\" = xno],",
          "21:   [ac_cv_libcpath=no],",
          "22:   [dnl Check for a pkg-config file",
          "24:    [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:    [PKG_CHECK_MODULES(",
          "26:     [libcpath],",
          "27:     [libcpath >= 20120701],",
          "28:     [ac_cv_libcpath=yes],",
          "29:     [ac_cv_libcpath=no])",
          "30:    ])",
          "33:    [test \"x$ac_cv_libcpath\" = xyes],",
          "34:    [ac_cv_libcpath_CPPFLAGS=\"$pkg_cv_libcpath_CFLAGS\"",
          "35:    ac_cv_libcpath_LIBADD=\"$pkg_cv_libcpath_LIBS\"],",
          "36:    [dnl Check for headers",
          "37:    AC_CHECK_HEADERS([libcpath.h])",
          "39:    AS_IF(",
          "40:     [test \"x$ac_cv_header_libcpath_h\" = xno],",
          "42:     [dnl Check for the individual functions",
          "43:     ac_cv_libcpath=yes",
          "45:     AC_CHECK_LIB(",
          "46:      cpath,",
          "47:      libcpath_get_version,",
          "48:      [ac_cv_libcpath_dummy=yes],",
          "49:      [ac_cv_libcpath=no])",
          "51:     dnl Path functions",
          "52:     AC_CHECK_LIB(",
          "53:      cpath,",
          "54:      libcpath_path_change_directory,",
          "55:      [ac_cv_libcpath_dummy=yes],",
          "56:      [ac_cv_libcpath=no])",
          "57:     AC_CHECK_LIB(",
          "58:      cpath,",
          "59:      libcpath_path_get_current_working_directory,",
          "60:      [ac_cv_libcpath_dummy=yes],",
          "61:      [ac_cv_libcpath=no])",
          "62:     AC_CHECK_LIB(",
          "63:      cpath,",
          "64:      libcpath_path_get_full_path,",
          "65:      [ac_cv_libcpath_dummy=yes],",
          "66:      [ac_cv_libcpath=no])",
          "67:     AC_CHECK_LIB(",
          "68:      cpath,",
          "69:      libcpath_path_join,",
          "70:      [ac_cv_libcpath_dummy=yes],",
          "71:      [ac_cv_libcpath=no])",
          "72:     AC_CHECK_LIB(",
          "73:      cpath,",
          "74:      libcpath_path_make_directory,",
          "75:      [ac_cv_libcpath_dummy=yes],",
          "76:      [ac_cv_libcpath=no])",
          "77:     AC_CHECK_LIB(",
          "78:      cpath,",
          "79:      libcpath_path_sanitize,",
          "80:      [ac_cv_libcpath_dummy=yes],",
          "81:      [ac_cv_libcpath=no])",
          "82:     AC_CHECK_LIB(",
          "83:      cpath,",
          "84:      libcpath_path_sanitize_filename,",
          "85:      [ac_cv_libcpath_dummy=yes],",
          "86:      [ac_cv_libcpath=no])",
          "89:      [test \"x$ac_cv_enable_wide_character_type\" != xno],",
          "90:      [AC_CHECK_LIB(",
          "91:       cpath,",
          "92:       libcpath_path_change_directory_wide,",
          "93:       [ac_cv_libcpath_dummy=yes],",
          "94:       [ac_cv_libcpath=no])",
          "95:      AC_CHECK_LIB(",
          "96:       cpath,",
          "97:       libcpath_path_get_current_working_directory_wide,",
          "98:       [ac_cv_libcpath_dummy=yes],",
          "99:       [ac_cv_libcpath=no])",
          "100:      AC_CHECK_LIB(",
          "101:       cpath,",
          "102:       libcpath_path_get_full_path_wide,",
          "103:       [ac_cv_libcpath_dummy=yes],",
          "104:       [ac_cv_libcpath=no])",
          "105:      AC_CHECK_LIB(",
          "106:       cpath,",
          "107:       libcpath_path_join_wide,",
          "108:       [ac_cv_libcpath_dummy=yes],",
          "109:       [ac_cv_libcpath=no])",
          "110:      AC_CHECK_LIB(",
          "111:       cpath,",
          "112:       libcpath_path_make_directory_wide,",
          "113:       [ac_cv_libcpath_dummy=yes],",
          "114:       [ac_cv_libcpath=no])",
          "115:      AC_CHECK_LIB(",
          "116:       cpath,",
          "117:       libcpath_path_sanitize_wide,",
          "118:       [ac_cv_libcpath_dummy=yes],",
          "119:       [ac_cv_libcpath=no])",
          "120:      AC_CHECK_LIB(",
          "121:       cpath,",
          "122:       libcpath_path_sanitize_filename_wide,",
          "123:       [ac_cv_libcpath_dummy=yes],",
          "124:       [ac_cv_libcpath=no])",
          "125:      ])",
          "127:     ac_cv_libcpath_LIBADD=\"-lcpath\"",
          "129:    ])",
          "130:   ])",
          "132:  AS_IF(",
          "133:   [test \"x$ac_cv_libcpath\" = xyes],",
          "134:   [AC_DEFINE(",
          "135:    [HAVE_LIBCPATH],",
          "136:    [1],",
          "137:    [Define to 1 if you have the `cpath' library (-lcpath).])",
          "138:   ])",
          "140:  AS_IF(",
          "141:   [test \"x$ac_cv_libcpath\" = xyes],",
          "142:   [AC_SUBST(",
          "143:    [HAVE_LIBCPATH],",
          "144:    [1]) ],",
          "145:   [AC_SUBST(",
          "146:    [HAVE_LIBCPATH],",
          "147:    [0])",
          "149:  ])",
          "154:  [AC_CHECK_FUNCS([mkdir])",
          "156:  AS_IF(",
          "157:   [test \"x$ac_cv_func_mkdir\" = xyes],",
          "158:   [AC_MSG_CHECKING(",
          "159:    [how to use mkdir])",
          "161:   SAVE_CFLAGS=\"$CFLAGS\"",
          "162:   CFLAGS=\"$CFLAGS -Wall -Werror\"",
          "163:   AC_LANG_PUSH(C)",
          "165:   AC_LINK_IFELSE(",
          "166:    [AC_LANG_PROGRAM(",
          "167:     [[#include <sys/stat.h>",
          "169:     [[mkdir( \"\", 0 )]] )],",
          "170:     [AC_MSG_RESULT(",
          "171:      [with additional mode argument])",
          "172:     ac_cv_cv_mkdir_mode=yes],",
          "173:     [ac_cv_cv_mkdir_mode=no])",
          "175:   AS_IF(",
          "176:    [test \"x$ac_cv_cv_mkdir_mode\" = xno],",
          "177:    [AC_LINK_IFELSE(",
          "178:     [AC_LANG_PROGRAM(",
          "179:      [[#include <io.h>]],",
          "180:      [[mkdir( \"\" )]] )],",
          "181:     [AC_MSG_RESULT(",
          "182:      [with single argument])",
          "183:     ac_cv_cv_mkdir=yes],",
          "184:     [ac_cv_cv_mkdir=no])",
          "185:    ])",
          "187:   AC_LANG_POP(C)",
          "188:   CFLAGS=\"$SAVE_CFLAGS\"",
          "190:   AS_IF(",
          "191:    [test \"x$ac_cv_cv_mkdir_mode\" = xno && test \"x$ac_cv_cv_mkdir\" = xno],",
          "192:    [AC_MSG_WARN(",
          "193:     [unknown])",
          "194:    ac_cv_func_mkdir=no])",
          "196:   AS_IF(",
          "197:    [test \"x$ac_cv_func_mkdir\" = xyes],",
          "198:    [AC_DEFINE(",
          "199:     [HAVE_MKDIR],",
          "200:     [1],",
          "201:     [Define to 1 if you have the mkdir function.])",
          "202:    ])",
          "204:   AS_IF(",
          "205:    [test \"x$ac_cv_cv_mkdir_mode\" = xyes],",
          "206:    [AC_DEFINE(",
          "207:     [HAVE_MKDIR_MODE],",
          "208:     [1],",
          "209:     [Define to 1 if you have the mkdir function with a second mode argument.])",
          "210:    ])",
          "211:   ])",
          "213:  AS_IF(",
          "214:   [test \"x$ac_cv_func_mkdir\" = xno],",
          "215:   [AC_MSG_FAILURE(",
          "216:    [Missing function: mkdir],",
          "217:    [1])",
          "219:  ])",
          "223:  [dnl Headers included in libcpath/libcpath_path.h",
          "224:  AC_CHECK_HEADERS([errno.h sys/stat.h sys/syslimits.h])",
          "226:  dnl Path functions used in libcpath/libcpath_path.h",
          "227:  AC_CHECK_FUNCS([chdir getcwd])",
          "229:  AS_IF(",
          "230:   [test \"x$ac_cv_func_chdir\" != xyes],",
          "231:   [AC_MSG_FAILURE(",
          "232:    [Missing functions: chdir],",
          "233:    [1])",
          "234:   ])",
          "236:  AS_IF(",
          "237:   [test \"x$ac_cv_func_getcwd\" != xyes],",
          "238:   [AC_MSG_FAILURE(",
          "239:    [Missing functions: getcwd],",
          "240:    [1])",
          "241:   ])",
          "243:  AX_LIBCPATH_CHECK_FUNC_MKDIR",
          "245:  ac_cv_libcpath_CPPFLAGS=\"-I../libcpath\";",
          "246:  ac_cv_libcpath_LIBADD=\"../libcpath/libcpath.la\";",
          "248:  ac_cv_libcpath=local",
          "249:  ])",
          "253:  [AX_COMMON_ARG_WITH(",
          "254:   [libcpath],",
          "255:   [libcpath],",
          "256:   [search for libcpath in includedir and libdir or in the specified DIR, or no if to use local version],",
          "257:   [auto-detect],",
          "258:   [DIR])",
          "260:  dnl Check for a shared library version",
          "261:  AX_LIBCPATH_CHECK_LIB",
          "263:  dnl Check if the dependencies for the local library version",
          "264:  AS_IF(",
          "265:   [test \"x$ac_cv_libcpath\" != xyes],",
          "266:   [AX_LIBCPATH_CHECK_LOCAL",
          "268:   AC_DEFINE(",
          "269:    [HAVE_LOCAL_LIBCPATH],",
          "270:    [1],",
          "271:    [Define to 1 if the local version of libcpath is used.])",
          "272:   AC_SUBST(",
          "273:    [HAVE_LOCAL_LIBCPATH],",
          "274:    [1])",
          "275:   ])",
          "277:  AM_CONDITIONAL(",
          "278:   [HAVE_LOCAL_LIBCPATH],",
          "279:   [test \"x$ac_cv_libcpath\" = xlocal])",
          "280:  AS_IF(",
          "281:   [test \"x$ac_cv_libcpath_CPPFLAGS\" != \"x\"],",
          "282:   [AC_SUBST(",
          "283:    [LIBCPATH_CPPFLAGS],",
          "284:    [$ac_cv_libcpath_CPPFLAGS])",
          "285:   ])",
          "286:  AS_IF(",
          "287:   [test \"x$ac_cv_libcpath_LIBADD\" != \"x\"],",
          "288:   [AC_SUBST(",
          "289:    [LIBCPATH_LIBADD],",
          "290:    [$ac_cv_libcpath_LIBADD])",
          "291:   ])",
          "293:  AS_IF(",
          "294:   [test \"x$ac_cv_libcpath\" = xyes],",
          "295:   [AC_SUBST(",
          "296:    [ax_libcpath_pc_libs_private],",
          "297:    [-lcpath])",
          "298:   ])",
          "300:  AS_IF(",
          "301:   [test \"x$ac_cv_libcpath\" = xyes],",
          "302:   [AC_SUBST(",
          "303:    [ax_libcpath_spec_requires],",
          "304:    [libcpath])",
          "305:   AC_SUBST(",
          "306:    [ax_libcpath_spec_build_requires],",
          "307:    [libcpath-devel])",
          "309:  ])",
          "",
          "[Added Lines]",
          "1: dnl Checks for libcpath or required headers and functions",
          "3: dnl Version: 20170904",
          "8:   [dnl Check if parameters were provided",
          "10:     [test \"x$ac_cv_with_libcpath\" != x && test \"x$ac_cv_with_libcpath\" != xno && test \"x$ac_cv_with_libcpath\" != xauto-detect],",
          "11:     [AS_IF(",
          "12:       [test -d \"$ac_cv_with_libcpath\"],",
          "13:       [CFLAGS=\"$CFLAGS -I${ac_cv_with_libcpath}/include\"",
          "14:       LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libcpath}/lib\"],",
          "15:       [AC_MSG_WARN([no such directory: $ac_cv_with_libcpath])",
          "16:       ])",
          "17:     ])",
          "20:     [test \"x$ac_cv_with_libcpath\" = xno],",
          "22:     [dnl Check for a pkg-config file",
          "23:     AS_IF(",
          "24:       [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:       [PKG_CHECK_MODULES(",
          "26:         [libcpath],",
          "27:         [libcpath >= 20120701],",
          "28:         [ac_cv_libcpath=yes],",
          "29:         [ac_cv_libcpath=check])",
          "30:       ])",
          "33:       [test \"x$ac_cv_libcpath\" = xyes && test \"x$ac_cv_enable_wide_character_type\" != xno],",
          "34:       [AC_CACHE_CHECK(",
          "35:        [whether libcpath/features.h defines LIBCPATH_HAVE_WIDE_CHARACTER_TYPE as 1],",
          "36:        [ac_cv_header_libcpath_features_h_have_wide_character_type],",
          "37:        [AC_LANG_PUSH(C)",
          "38:        AC_COMPILE_IFELSE(",
          "39:          [AC_LANG_PROGRAM(",
          "40:            [[#include <libcpath/features.h>]],",
          "41:            [[#if !defined( LIBCPATH_HAVE_WIDE_CHARACTER_TYPE ) || ( LIBCPATH_HAVE_WIDE_CHARACTER_TYPE != 1 )",
          "42: #error LIBCPATH_HAVE_WIDE_CHARACTER_TYPE not defined",
          "43: ##endif]] )],",
          "44:          [ac_cv_header_libcpath_features_h_have_wide_character_type=yes],",
          "45:          [ac_cv_header_libcpath_features_h_have_wide_character_type=no])",
          "46:        AC_LANG_POP(C)],",
          "47:        [ac_cv_header_libcpath_features_h_have_wide_character_type=no])",
          "49:       AS_IF(",
          "50:         [test \"x$ac_cv_header_libcpath_features_h_have_wide_character_type\" = xno],",
          "51:         [ac_cv_libcpath=no])",
          "54:     AS_IF(",
          "55:       [test \"x$ac_cv_libcpath\" = xyes],",
          "56:       [ac_cv_libcpath_CPPFLAGS=\"$pkg_cv_libcpath_CFLAGS\"",
          "57:       ac_cv_libcpath_LIBADD=\"$pkg_cv_libcpath_LIBS\"])",
          "59:     AS_IF(",
          "60:       [test \"x$ac_cv_libcpath\" = xcheck],",
          "61:       [dnl Check for headers",
          "62:       AC_CHECK_HEADERS([libcpath.h])",
          "64:       AS_IF(",
          "65:         [test \"x$ac_cv_header_libcpath_h\" = xno],",
          "66:         [ac_cv_libcpath=no],",
          "67:         [dnl Check for the individual functions",
          "68:         ac_cv_libcpath=yes",
          "70:         AC_CHECK_LIB(",
          "71:           cpath,",
          "72:           libcpath_get_version,",
          "73:           [ac_cv_libcpath_dummy=yes],",
          "74:           [ac_cv_libcpath=no])",
          "76:         dnl Path functions",
          "77:         AC_CHECK_LIB(",
          "78:           cpath,",
          "79:           libcpath_path_change_directory,",
          "80:           [ac_cv_libcpath_dummy=yes],",
          "81:           [ac_cv_libcpath=no])",
          "82:         AC_CHECK_LIB(",
          "83:           cpath,",
          "84:           libcpath_path_get_current_working_directory,",
          "85:           [ac_cv_libcpath_dummy=yes],",
          "86:           [ac_cv_libcpath=no])",
          "87:         AC_CHECK_LIB(",
          "88:           cpath,",
          "89:           libcpath_path_get_full_path,",
          "90:           [ac_cv_libcpath_dummy=yes],",
          "91:           [ac_cv_libcpath=no])",
          "92:         AC_CHECK_LIB(",
          "93:           cpath,",
          "94:           libcpath_path_join,",
          "95:           [ac_cv_libcpath_dummy=yes],",
          "96:           [ac_cv_libcpath=no])",
          "97:         AC_CHECK_LIB(",
          "98:           cpath,",
          "99:           libcpath_path_make_directory,",
          "100:           [ac_cv_libcpath_dummy=yes],",
          "101:           [ac_cv_libcpath=no])",
          "102:         AC_CHECK_LIB(",
          "103:           cpath,",
          "104:           libcpath_path_sanitize,",
          "105:           [ac_cv_libcpath_dummy=yes],",
          "106:           [ac_cv_libcpath=no])",
          "107:         AC_CHECK_LIB(",
          "108:           cpath,",
          "109:           libcpath_path_sanitize_filename,",
          "110:           [ac_cv_libcpath_dummy=yes],",
          "111:           [ac_cv_libcpath=no])",
          "113:         AS_IF(",
          "114:           [test \"x$ac_cv_enable_wide_character_type\" != xno],",
          "115:           [AC_CHECK_LIB(",
          "116:             cpath,",
          "117:             libcpath_path_change_directory_wide,",
          "118:             [ac_cv_libcpath_dummy=yes],",
          "119:             [ac_cv_libcpath=no])",
          "120:           AC_CHECK_LIB(",
          "121:             cpath,",
          "122:             libcpath_path_get_current_working_directory_wide,",
          "123:             [ac_cv_libcpath_dummy=yes],",
          "124:             [ac_cv_libcpath=no])",
          "125:           AC_CHECK_LIB(",
          "126:             cpath,",
          "127:             libcpath_path_get_full_path_wide,",
          "128:             [ac_cv_libcpath_dummy=yes],",
          "129:             [ac_cv_libcpath=no])",
          "130:           AC_CHECK_LIB(",
          "131:             cpath,",
          "132:             libcpath_path_join_wide,",
          "133:             [ac_cv_libcpath_dummy=yes],",
          "134:             [ac_cv_libcpath=no])",
          "135:           AC_CHECK_LIB(",
          "136:             cpath,",
          "137:             libcpath_path_make_directory_wide,",
          "138:             [ac_cv_libcpath_dummy=yes],",
          "139:             [ac_cv_libcpath=no])",
          "140:           AC_CHECK_LIB(",
          "141:             cpath,",
          "142:             libcpath_path_sanitize_wide,",
          "143:             [ac_cv_libcpath_dummy=yes],",
          "144:             [ac_cv_libcpath=no])",
          "145:           AC_CHECK_LIB(",
          "146:             cpath,",
          "147:             libcpath_path_sanitize_filename_wide,",
          "148:             [ac_cv_libcpath_dummy=yes],",
          "149:             [ac_cv_libcpath=no])",
          "150:           ])",
          "152:         ac_cv_libcpath_LIBADD=\"-lcpath\"",
          "153:         ])",
          "154:       ])",
          "155:     ])",
          "157:   AS_IF(",
          "158:     [test \"x$ac_cv_libcpath\" = xyes],",
          "159:     [AC_DEFINE(",
          "160:       [HAVE_LIBCPATH],",
          "161:       [1],",
          "162:       [Define to 1 if you have the `cpath' library (-lcpath).])",
          "163:     ])",
          "165:   AS_IF(",
          "166:     [test \"x$ac_cv_libcpath\" = xyes],",
          "167:     [AC_SUBST(",
          "168:       [HAVE_LIBCPATH],",
          "169:       [1]) ],",
          "170:     [AC_SUBST(",
          "171:       [HAVE_LIBCPATH],",
          "172:       [0])",
          "173:     ])",
          "179:   [AC_CHECK_FUNCS([mkdir])",
          "181:   AS_IF(",
          "182:     [test \"x$ac_cv_func_mkdir\" = xyes],",
          "183:     [AC_MSG_CHECKING(",
          "184:       [how to use mkdir])",
          "186:     SAVE_CFLAGS=\"$CFLAGS\"",
          "187:     CFLAGS=\"$CFLAGS -Wall -Werror\"",
          "188:     AC_LANG_PUSH(C)",
          "190:     AC_LINK_IFELSE(",
          "191:       [AC_LANG_PROGRAM(",
          "192:         [[#include <sys/stat.h>",
          "194:         [[mkdir( \"\", 0 )]] )],",
          "195:         [AC_MSG_RESULT(",
          "196:           [with additional mode argument])",
          "197:         ac_cv_cv_mkdir_mode=yes],",
          "198:         [ac_cv_cv_mkdir_mode=no])",
          "200:     AS_IF(",
          "201:       [test \"x$ac_cv_cv_mkdir_mode\" = xno],",
          "202:       [AC_LINK_IFELSE(",
          "203:         [AC_LANG_PROGRAM(",
          "204:           [[#include <io.h>]],",
          "205:           [[mkdir( \"\" )]] )],",
          "206:         [AC_MSG_RESULT(",
          "207:           [with single argument])",
          "208:         ac_cv_cv_mkdir=yes],",
          "209:         [ac_cv_cv_mkdir=no])",
          "210:       ])",
          "212:     AC_LANG_POP(C)",
          "213:     CFLAGS=\"$SAVE_CFLAGS\"",
          "215:     AS_IF(",
          "216:       [test \"x$ac_cv_cv_mkdir_mode\" = xno && test \"x$ac_cv_cv_mkdir\" = xno],",
          "217:       [AC_MSG_WARN(",
          "218:         [unknown])",
          "219:       ac_cv_func_mkdir=no])",
          "221:     AS_IF(",
          "222:       [test \"x$ac_cv_func_mkdir\" = xyes],",
          "223:       [AC_DEFINE(",
          "224:         [HAVE_MKDIR],",
          "225:         [1],",
          "226:         [Define to 1 if you have the mkdir function.])",
          "227:       ])",
          "229:     AS_IF(",
          "230:       [test \"x$ac_cv_cv_mkdir_mode\" = xyes],",
          "231:       [AC_DEFINE(",
          "232:         [HAVE_MKDIR_MODE],",
          "233:         [1],",
          "234:         [Define to 1 if you have the mkdir function with a second mode argument.])",
          "235:       ])",
          "236:     ])",
          "238:   AS_IF(",
          "239:     [test \"x$ac_cv_func_mkdir\" = xno],",
          "240:     [AC_MSG_FAILURE(",
          "241:       [Missing function: mkdir],",
          "242:       [1])",
          "243:     ])",
          "248:   [dnl Headers included in libcpath/libcpath_path.h",
          "249:   AC_CHECK_HEADERS([errno.h sys/stat.h sys/syslimits.h])",
          "251:   dnl Path functions used in libcpath/libcpath_path.h",
          "252:   AC_CHECK_FUNCS([chdir getcwd])",
          "254:   AS_IF(",
          "255:     [test \"x$ac_cv_func_chdir\" != xyes],",
          "256:     [AC_MSG_FAILURE(",
          "257:       [Missing functions: chdir],",
          "258:       [1])",
          "259:     ])",
          "261:   AS_IF(",
          "262:     [test \"x$ac_cv_func_getcwd\" != xyes],",
          "263:     [AC_MSG_FAILURE(",
          "264:       [Missing functions: getcwd],",
          "265:       [1])",
          "266:     ])",
          "268:   AX_LIBCPATH_CHECK_FUNC_MKDIR",
          "270:   ac_cv_libcpath_CPPFLAGS=\"-I../libcpath\";",
          "271:   ac_cv_libcpath_LIBADD=\"../libcpath/libcpath.la\";",
          "273:   ac_cv_libcpath=local",
          "274:   ])",
          "278:   [AX_COMMON_ARG_WITH(",
          "279:     [libcpath],",
          "280:     [libcpath],",
          "281:     [search for libcpath in includedir and libdir or in the specified DIR, or no if to use local version],",
          "282:     [auto-detect],",
          "283:     [DIR])",
          "285:   dnl Check for a shared library version",
          "286:   AX_LIBCPATH_CHECK_LIB",
          "288:   dnl Check if the dependencies for the local library version",
          "289:   AS_IF(",
          "290:     [test \"x$ac_cv_libcpath\" != xyes],",
          "291:     [AX_LIBCPATH_CHECK_LOCAL",
          "293:     AC_DEFINE(",
          "294:       [HAVE_LOCAL_LIBCPATH],",
          "295:       [1],",
          "296:       [Define to 1 if the local version of libcpath is used.])",
          "297:     AC_SUBST(",
          "298:       [HAVE_LOCAL_LIBCPATH],",
          "299:       [1])",
          "300:     ])",
          "302:   AM_CONDITIONAL(",
          "303:     [HAVE_LOCAL_LIBCPATH],",
          "304:     [test \"x$ac_cv_libcpath\" = xlocal])",
          "305:   AS_IF(",
          "306:     [test \"x$ac_cv_libcpath_CPPFLAGS\" != \"x\"],",
          "307:     [AC_SUBST(",
          "308:       [LIBCPATH_CPPFLAGS],",
          "309:       [$ac_cv_libcpath_CPPFLAGS])",
          "310:     ])",
          "311:   AS_IF(",
          "312:     [test \"x$ac_cv_libcpath_LIBADD\" != \"x\"],",
          "313:     [AC_SUBST(",
          "314:       [LIBCPATH_LIBADD],",
          "315:       [$ac_cv_libcpath_LIBADD])",
          "316:     ])",
          "318:   AS_IF(",
          "319:     [test \"x$ac_cv_libcpath\" = xyes],",
          "320:     [AC_SUBST(",
          "321:       [ax_libcpath_pc_libs_private],",
          "322:       [-lcpath])",
          "323:     ])",
          "325:   AS_IF(",
          "326:     [test \"x$ac_cv_libcpath\" = xyes],",
          "327:     [AC_SUBST(",
          "328:       [ax_libcpath_spec_requires],",
          "329:       [libcpath])",
          "330:     AC_SUBST(",
          "331:       [ax_libcpath_spec_build_requires],",
          "332:       [libcpath-devel])",
          "333:     ])",
          "",
          "---------------"
        ],
        "m4/libcsplit.m4||m4/libcsplit.m4": [
          "File: m4/libcsplit.m4 -> m4/libcsplit.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: dnl",
          "5: dnl Function to detect if libcsplit is available",
          "6: dnl ac_libcsplit_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "7: AC_DEFUN([AX_LIBCSPLIT_CHECK_LIB],",
          "23:   AS_IF(",
          "32:   AS_IF(",
          "41:     [ac_cv_libcsplit=no],",
          "86:     AS_IF(",
          "123:     ])",
          "143:   ])",
          "169:   ac_cv_libcsplit_CPPFLAGS=\"-I../libcsplit\";",
          "170:   ac_cv_libcsplit_LIBADD=\"../libcsplit/libcsplit.la\";",
          "",
          "[Removed Lines]",
          "1: dnl Functions for libcsplit",
          "3: dnl Version: 20130406",
          "8:  [dnl Check if parameters were provided",
          "9:  AS_IF(",
          "10:   [test \"x$ac_cv_with_libcsplit\" != x && test \"x$ac_cv_with_libcsplit\" != xno && test \"x$ac_cv_with_libcsplit\" != xauto-detect],",
          "11:   [AS_IF(",
          "12:    [test -d \"$ac_cv_with_libcsplit\"],",
          "13:    [CFLAGS=\"$CFLAGS -I${ac_cv_with_libcsplit}/include\"",
          "14:    LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libcsplit}/lib\"],",
          "15:    [AC_MSG_WARN([no such directory: $ac_cv_with_libcsplit])",
          "16:    ])",
          "17:   ])",
          "19:  AS_IF(",
          "20:   [test \"x$ac_cv_with_libcsplit\" = xno],",
          "21:   [ac_cv_libcsplit=no],",
          "22:   [dnl Check for a pkg-config file",
          "24:    [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:    [PKG_CHECK_MODULES(",
          "26:     [libcsplit],",
          "27:     [libcsplit >= 20120701],",
          "28:     [ac_cv_libcsplit=yes],",
          "29:     [ac_cv_libcsplit=no])",
          "30:    ])",
          "33:    [test \"x$ac_cv_libcsplit\" = xyes],",
          "34:    [ac_cv_libcsplit_CPPFLAGS=\"$pkg_cv_libcsplit_CFLAGS\"",
          "35:    ac_cv_libcsplit_LIBADD=\"$pkg_cv_libcsplit_LIBS\"],",
          "36:    [dnl Check for headers",
          "37:    AC_CHECK_HEADERS([libcsplit.h])",
          "39:    AS_IF(",
          "40:     [test \"x$ac_cv_header_libcsplit_h\" = xno],",
          "42:     [dnl Check for the individual functions",
          "43:     ac_cv_libcsplit=yes",
          "45:     AC_CHECK_LIB(",
          "46:      csplit,",
          "47:      libcsplit_get_version,",
          "48:      [ac_cv_libcsplit_dummy=yes],",
          "49:      [ac_cv_libcsplit=no])",
          "51:     dnl Narrow string functions",
          "52:     AC_CHECK_LIB(",
          "53:      csplit,",
          "54:      libcsplit_narrow_string_split,",
          "55:      [ac_cv_libcsplit_dummy=yes],",
          "56:      [ac_cv_libcsplit=no])",
          "58:     dnl Narrow split string functions",
          "59:     AC_CHECK_LIB(",
          "60:      csplit,",
          "61:      libcsplit_narrow_split_string_free,",
          "62:      [ac_cv_libcsplit_dummy=yes],",
          "63:      [ac_cv_libcsplit=no])",
          "64:     AC_CHECK_LIB(",
          "65:      csplit,",
          "66:      libcsplit_narrow_split_string_get_string,",
          "67:      [ac_cv_libcsplit_dummy=yes],",
          "68:      [ac_cv_libcsplit=no])",
          "69:     AC_CHECK_LIB(",
          "70:      csplit,",
          "71:      libcsplit_narrow_split_string_get_number_of_segments,",
          "72:      [ac_cv_libcsplit_dummy=yes],",
          "73:      [ac_cv_libcsplit=no])",
          "74:     AC_CHECK_LIB(",
          "75:      csplit,",
          "76:      libcsplit_narrow_split_string_get_segment_by_index,",
          "77:      [ac_cv_libcsplit_dummy=yes],",
          "78:      [ac_cv_libcsplit=no])",
          "79:     AC_CHECK_LIB(",
          "80:      csplit,",
          "81:      libcsplit_narrow_split_string_set_segment_by_index,",
          "82:      [ac_cv_libcsplit_dummy=yes],",
          "83:      [ac_cv_libcsplit=no])",
          "85:     dnl Wide string functions",
          "87:      [test \"x$ac_cv_enable_wide_character_type\" != xno],",
          "88:      [AC_CHECK_LIB(",
          "89:      csplit,",
          "90:       libcsplit_wide_string_split,",
          "91:       [ac_cv_libcsplit_dummy=yes],",
          "92:       [ac_cv_libcsplit=no])",
          "94:     dnl Wide split string functions",
          "95:      AC_CHECK_LIB(",
          "96:       csplit,",
          "97:       libcsplit_wide_split_string_free,",
          "98:       [ac_cv_libcsplit_dummy=yes],",
          "99:       [ac_cv_libcsplit=no])",
          "100:      AC_CHECK_LIB(",
          "101:       csplit,",
          "102:       libcsplit_wide_split_string_get_string,",
          "103:       [ac_cv_libcsplit_dummy=yes],",
          "104:       [ac_cv_libcsplit=no])",
          "105:      AC_CHECK_LIB(",
          "106:       csplit,",
          "107:       libcsplit_wide_split_string_get_number_of_segments,",
          "108:       [ac_cv_libcsplit_dummy=yes],",
          "109:       [ac_cv_libcsplit=no])",
          "110:      AC_CHECK_LIB(",
          "111:       csplit,",
          "112:       libcsplit_wide_split_string_get_segment_by_index,",
          "113:       [ac_cv_libcsplit_dummy=yes],",
          "114:       [ac_cv_libcsplit=no])",
          "115:      AC_CHECK_LIB(",
          "116:       csplit,",
          "117:       libcsplit_wide_split_string_set_segment_by_index,",
          "118:       [ac_cv_libcsplit_dummy=yes],",
          "119:       [ac_cv_libcsplit=no])",
          "120:      ])",
          "122:     ac_cv_libcsplit_LIBADD=\"-lcsplit\"",
          "124:    ])",
          "125:   ])",
          "127:  AS_IF(",
          "128:   [test \"x$ac_cv_libcsplit\" = xyes],",
          "129:   [AC_DEFINE(",
          "130:    [HAVE_LIBCSPLIT],",
          "131:    [1],",
          "132:    [Define to 1 if you have the `csplit' library (-lcsplit).])",
          "133:   ])",
          "135:  AS_IF(",
          "136:   [test \"x$ac_cv_libcsplit\" = xyes],",
          "137:   [AC_SUBST(",
          "138:    [HAVE_LIBCSPLIT],",
          "139:    [1]) ],",
          "140:   [AC_SUBST(",
          "141:    [HAVE_LIBCSPLIT],",
          "142:    [0])",
          "144:  ])",
          "146: dnl Function to detect how to enable libcsplit",
          "147: AC_DEFUN([AX_LIBCSPLIT_CHECK_ENABLE],",
          "148:  [AX_COMMON_ARG_WITH(",
          "149:   [libcsplit],",
          "150:   [libcsplit],",
          "151:   [search for libcsplit in includedir and libdir or in the specified DIR, or no if to use local version],",
          "152:   [auto-detect],",
          "153:   [DIR])",
          "155:  dnl Check for a shared library version",
          "156:  AX_LIBCSPLIT_CHECK_LIB",
          "158:  dnl Check if the dependencies for the local library version",
          "159:  AS_IF(",
          "160:   [test \"x$ac_cv_libcsplit\" != xyes],",
          "161:   [AC_DEFINE(",
          "162:    [HAVE_LOCAL_LIBCSPLIT],",
          "163:    [1],",
          "164:    [Define to 1 if the local version of libcsplit is used.])",
          "165:   AC_SUBST(",
          "166:    [HAVE_LOCAL_LIBCSPLIT],",
          "167:    [1])",
          "",
          "[Added Lines]",
          "1: dnl Checks for libcsplit or required headers and functions",
          "3: dnl Version: 20170903",
          "8:   [dnl Check if parameters were provided",
          "10:     [test \"x$ac_cv_with_libcsplit\" != x && test \"x$ac_cv_with_libcsplit\" != xno && test \"x$ac_cv_with_libcsplit\" != xauto-detect],",
          "11:     [AS_IF(",
          "12:       [test -d \"$ac_cv_with_libcsplit\"],",
          "13:       [CFLAGS=\"$CFLAGS -I${ac_cv_with_libcsplit}/include\"",
          "14:       LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libcsplit}/lib\"],",
          "15:       [AC_MSG_WARN([no such directory: $ac_cv_with_libcsplit])",
          "16:     ])",
          "17:   ])",
          "20:     [test \"x$ac_cv_with_libcsplit\" = xno],",
          "22:     [dnl Check for a pkg-config file",
          "24:       [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:       [PKG_CHECK_MODULES(",
          "26:         [libcsplit],",
          "27:         [libcsplit >= 20120701],",
          "28:         [ac_cv_libcsplit=yes],",
          "29:         [ac_cv_libcsplit=check])",
          "32:     AS_IF(",
          "33:       [test \"x$ac_cv_libcsplit\" = xyes && test \"x$ac_cv_enable_wide_character_type\" != xno],",
          "34:       [AC_CACHE_CHECK(",
          "35:        [whether libcsplit/features.h defines LIBCSPLIT_HAVE_WIDE_CHARACTER_TYPE as 1],",
          "36:        [ac_cv_header_libcsplit_features_h_have_wide_character_type],",
          "37:        [AC_LANG_PUSH(C)",
          "38:        AC_COMPILE_IFELSE(",
          "39:          [AC_LANG_PROGRAM(",
          "40:            [[#include <libcsplit/features.h>]],",
          "41:            [[#if !defined( LIBCSPLIT_HAVE_WIDE_CHARACTER_TYPE ) || ( LIBCSPLIT_HAVE_WIDE_CHARACTER_TYPE != 1 )",
          "42: #error LIBCSPLIT_HAVE_WIDE_CHARACTER_TYPE not defined",
          "43: ##endif]] )],",
          "44:          [ac_cv_header_libcsplit_features_h_have_wide_character_type=yes],",
          "45:          [ac_cv_header_libcsplit_features_h_have_wide_character_type=no])",
          "46:        AC_LANG_POP(C)],",
          "47:        [ac_cv_header_libcsplit_features_h_have_wide_character_type=no])",
          "49:       AS_IF(",
          "50:         [test \"x$ac_cv_header_libcsplit_features_h_have_wide_character_type\" = xno],",
          "51:         [ac_cv_libcsplit=no])",
          "52:     ])",
          "54:     AS_IF(",
          "55:       [test \"x$ac_cv_libcsplit\" = xyes],",
          "56:       [ac_cv_libcsplit_CPPFLAGS=\"$pkg_cv_libcsplit_CFLAGS\"",
          "57:       ac_cv_libcsplit_LIBADD=\"$pkg_cv_libcsplit_LIBS\"])",
          "59:     AS_IF(",
          "60:       [test \"x$ac_cv_libcsplit\" = xcheck],",
          "61:       [dnl Check for headers",
          "62:       AC_CHECK_HEADERS([libcsplit.h])",
          "64:       AS_IF(",
          "65:         [test \"x$ac_cv_header_libcsplit_h\" = xno],",
          "66:         [ac_cv_libcsplit=no],",
          "67:         [dnl Check for the individual functions",
          "68:         ac_cv_libcsplit=yes",
          "70:         AC_CHECK_LIB(",
          "71:           csplit,",
          "72:           libcsplit_get_version,",
          "73:           [ac_cv_libcsplit_dummy=yes],",
          "74:           [ac_cv_libcsplit=no])",
          "76:         dnl Narrow string functions",
          "77:         AC_CHECK_LIB(",
          "78:           csplit,",
          "79:           libcsplit_narrow_string_split,",
          "80:           [ac_cv_libcsplit_dummy=yes],",
          "81:           [ac_cv_libcsplit=no])",
          "83:         dnl Narrow split string functions",
          "84:         AC_CHECK_LIB(",
          "85:           csplit,",
          "86:           libcsplit_narrow_split_string_free,",
          "87:           [ac_cv_libcsplit_dummy=yes],",
          "88:           [ac_cv_libcsplit=no])",
          "89:         AC_CHECK_LIB(",
          "90:           csplit,",
          "91:           libcsplit_narrow_split_string_get_string,",
          "92:           [ac_cv_libcsplit_dummy=yes],",
          "93:           [ac_cv_libcsplit=no])",
          "94:         AC_CHECK_LIB(",
          "95:           csplit,",
          "96:           libcsplit_narrow_split_string_get_number_of_segments,",
          "97:           [ac_cv_libcsplit_dummy=yes],",
          "98:           [ac_cv_libcsplit=no])",
          "99:         AC_CHECK_LIB(",
          "100:           csplit,",
          "101:           libcsplit_narrow_split_string_get_segment_by_index,",
          "102:           [ac_cv_libcsplit_dummy=yes],",
          "103:           [ac_cv_libcsplit=no])",
          "104:         AC_CHECK_LIB(",
          "105:           csplit,",
          "106:           libcsplit_narrow_split_string_set_segment_by_index,",
          "107:           [ac_cv_libcsplit_dummy=yes],",
          "108:           [ac_cv_libcsplit=no])",
          "110:         dnl Wide string functions",
          "111:         AS_IF(",
          "112:           [test \"x$ac_cv_enable_wide_character_type\" != xno],",
          "113:           [AC_CHECK_LIB(",
          "114:           csplit,",
          "115:             libcsplit_wide_string_split,",
          "116:             [ac_cv_libcsplit_dummy=yes],",
          "117:             [ac_cv_libcsplit=no])",
          "119:         dnl Wide split string functions",
          "120:           AC_CHECK_LIB(",
          "121:             csplit,",
          "122:             libcsplit_wide_split_string_free,",
          "123:             [ac_cv_libcsplit_dummy=yes],",
          "124:             [ac_cv_libcsplit=no])",
          "125:           AC_CHECK_LIB(",
          "126:             csplit,",
          "127:             libcsplit_wide_split_string_get_string,",
          "128:             [ac_cv_libcsplit_dummy=yes],",
          "129:             [ac_cv_libcsplit=no])",
          "130:           AC_CHECK_LIB(",
          "131:             csplit,",
          "132:             libcsplit_wide_split_string_get_number_of_segments,",
          "133:             [ac_cv_libcsplit_dummy=yes],",
          "134:             [ac_cv_libcsplit=no])",
          "135:           AC_CHECK_LIB(",
          "136:             csplit,",
          "137:             libcsplit_wide_split_string_get_segment_by_index,",
          "138:             [ac_cv_libcsplit_dummy=yes],",
          "139:             [ac_cv_libcsplit=no])",
          "140:           AC_CHECK_LIB(",
          "141:             csplit,",
          "142:             libcsplit_wide_split_string_set_segment_by_index,",
          "143:             [ac_cv_libcsplit_dummy=yes],",
          "144:             [ac_cv_libcsplit=no])",
          "145:           ])",
          "147:         ac_cv_libcsplit_LIBADD=\"-lcsplit\"",
          "148:         ])",
          "149:       ])",
          "150:     ])",
          "152:   AS_IF(",
          "153:     [test \"x$ac_cv_libcsplit\" = xyes],",
          "154:     [AC_DEFINE(",
          "155:       [HAVE_LIBCSPLIT],",
          "156:       [1],",
          "157:       [Define to 1 if you have the `csplit' library (-lcsplit).])",
          "158:     ])",
          "160:   AS_IF(",
          "161:     [test \"x$ac_cv_libcsplit\" = xyes],",
          "162:     [AC_SUBST(",
          "163:       [HAVE_LIBCSPLIT],",
          "164:       [1]) ],",
          "165:     [AC_SUBST(",
          "166:       [HAVE_LIBCSPLIT],",
          "167:       [0])",
          "168:     ])",
          "171: dnl Function to detect if libcsplit dependencies are available",
          "172: AC_DEFUN([AX_LIBCSPLIT_CHECK_LOCAL],",
          "173:   [dnl No additional checks.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "172:   ac_cv_libcsplit=local",
          "173:   ])",
          "206:   ])",
          "",
          "[Removed Lines]",
          "175:  AM_CONDITIONAL(",
          "176:   [HAVE_LOCAL_LIBCSPLIT],",
          "177:   [test \"x$ac_cv_libcsplit\" = xlocal])",
          "178:  AS_IF(",
          "179:   [test \"x$ac_cv_libcsplit_CPPFLAGS\" != \"x\"],",
          "180:   [AC_SUBST(",
          "181:    [LIBCSPLIT_CPPFLAGS],",
          "182:    [$ac_cv_libcsplit_CPPFLAGS])",
          "183:   ])",
          "184:  AS_IF(",
          "185:   [test \"x$ac_cv_libcsplit_LIBADD\" != \"x\"],",
          "186:   [AC_SUBST(",
          "187:    [LIBCSPLIT_LIBADD],",
          "188:    [$ac_cv_libcsplit_LIBADD])",
          "189:   ])",
          "191:  AS_IF(",
          "192:   [test \"x$ac_cv_libcsplit\" = xyes],",
          "193:   [AC_SUBST(",
          "194:    [ax_libcsplit_pc_libs_private],",
          "195:    [-lcsplit])",
          "196:   ])",
          "198:  AS_IF(",
          "199:   [test \"x$ac_cv_libcsplit\" = xyes],",
          "200:   [AC_SUBST(",
          "201:    [ax_libcsplit_spec_requires],",
          "202:    [libcsplit])",
          "203:   AC_SUBST(",
          "204:    [ax_libcsplit_spec_build_requires],",
          "205:    [libcsplit-devel])",
          "207:  ])",
          "",
          "[Added Lines]",
          "181: dnl Function to detect how to enable libcsplit",
          "182: AC_DEFUN([AX_LIBCSPLIT_CHECK_ENABLE],",
          "183:   [AX_COMMON_ARG_WITH(",
          "184:     [libcsplit],",
          "185:     [libcsplit],",
          "186:     [search for libcsplit in includedir and libdir or in the specified DIR, or no if to use local version],",
          "187:     [auto-detect],",
          "188:     [DIR])",
          "190:   dnl Check for a shared library version",
          "191:   AX_LIBCSPLIT_CHECK_LIB",
          "193:   dnl Check if the dependencies for the local library version",
          "194:   AS_IF(",
          "195:     [test \"x$ac_cv_libcsplit\" != xyes],",
          "196:     [AX_LIBCSPLIT_CHECK_LOCAL",
          "198:     AC_DEFINE(",
          "199:       [HAVE_LOCAL_LIBCSPLIT],",
          "200:       [1],",
          "201:       [Define to 1 if the local version of libcsplit is used.])",
          "202:     AC_SUBST(",
          "203:       [HAVE_LOCAL_LIBCSPLIT],",
          "204:       [1])",
          "205:     ])",
          "207:   AM_CONDITIONAL(",
          "208:     [HAVE_LOCAL_LIBCSPLIT],",
          "209:     [test \"x$ac_cv_libcsplit\" = xlocal])",
          "210:   AS_IF(",
          "211:     [test \"x$ac_cv_libcsplit_CPPFLAGS\" != \"x\"],",
          "212:     [AC_SUBST(",
          "213:       [LIBCSPLIT_CPPFLAGS],",
          "214:       [$ac_cv_libcsplit_CPPFLAGS])",
          "215:     ])",
          "216:   AS_IF(",
          "217:     [test \"x$ac_cv_libcsplit_LIBADD\" != \"x\"],",
          "218:     [AC_SUBST(",
          "219:       [LIBCSPLIT_LIBADD],",
          "220:       [$ac_cv_libcsplit_LIBADD])",
          "221:     ])",
          "223:   AS_IF(",
          "224:     [test \"x$ac_cv_libcsplit\" = xyes],",
          "225:     [AC_SUBST(",
          "226:       [ax_libcsplit_pc_libs_private],",
          "227:       [-lcsplit])",
          "228:     ])",
          "230:   AS_IF(",
          "231:     [test \"x$ac_cv_libcsplit\" = xyes],",
          "232:     [AC_SUBST(",
          "233:       [ax_libcsplit_spec_requires],",
          "234:       [libcsplit])",
          "235:     AC_SUBST(",
          "236:       [ax_libcsplit_spec_build_requires],",
          "237:       [libcsplit-devel])",
          "238:     ])",
          "",
          "---------------"
        ],
        "m4/libcthreads.m4||m4/libcthreads.m4": [
          "File: m4/libcthreads.m4 -> m4/libcthreads.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: dnl",
          "5: dnl Function to detect if libcthreads is available",
          "6: dnl ac_libcthreads_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "7: AC_DEFUN([AX_LIBCTHREADS_CHECK_LIB],",
          "23:   AS_IF(",
          "32:   AS_IF(",
          "41:     [ac_cv_libcthreads=no],",
          "243:     ])",
          "268:   ])",
          "271: dnl Function to detect if libcthreads dependencies are available",
          "272: AC_DEFUN([AX_LIBCTHREADS_CHECK_LOCAL],",
          "289: dnl Function to detect how to enable libcthreads",
          "290: AC_DEFUN([AX_LIBCTHREADS_CHECK_ENABLE],",
          "311:   AS_IF(",
          "370:   ])",
          "",
          "[Removed Lines]",
          "1: dnl Functions for libcthreads",
          "3: dnl Version: 20160404",
          "8:  [dnl Check if parameters were provided",
          "9:  AS_IF(",
          "10:   [test \"x$ac_cv_with_libcthreads\" != x && test \"x$ac_cv_with_libcthreads\" != xno && test \"x$ac_cv_with_libcthreads\" != xauto-detect],",
          "11:   [AS_IF(",
          "12:    [test -d \"$ac_cv_with_libcthreads\"],",
          "13:    [CFLAGS=\"$CFLAGS -I${ac_cv_with_libcthreads}/include\"",
          "14:    LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libcthreads}/lib\"],",
          "15:    [AC_MSG_WARN([no such directory: $ac_cv_with_libcthreads])",
          "16:    ])",
          "17:   ])",
          "19:  AS_IF(",
          "20:   [test \"x$ac_cv_with_libcthreads\" = xno],",
          "21:   [ac_cv_libcthreads=no],",
          "22:   [dnl Check for a pkg-config file",
          "24:    [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:    [PKG_CHECK_MODULES(",
          "26:     [libcthreads],",
          "27:     [libcthreads >= 20160404],",
          "28:     [ac_cv_libcthreads=yes],",
          "29:     [ac_cv_libcthreads=no])",
          "30:    ])",
          "33:    [test \"x$ac_cv_libcthreads\" = xyes],",
          "34:    [ac_cv_libcthreads_CPPFLAGS=\"$pkg_cv_libcthreads_CFLAGS\"",
          "35:    ac_cv_libcthreads_LIBADD=\"$pkg_cv_libcthreads_LIBS\"],",
          "36:    [dnl Check for headers",
          "37:    AC_CHECK_HEADERS([libcthreads.h])",
          "39:    AS_IF(",
          "40:     [test \"x$ac_cv_header_libcthreads_h\" = xno],",
          "42:     [dnl Check for the individual functions",
          "43:     ac_cv_libcthreads=yes",
          "45:     AC_CHECK_LIB(",
          "46:      cthreads,",
          "47:      libcthreads_get_version,",
          "48:      [ac_cv_libcthreads_dummy=yes],",
          "49:      [ac_cv_libcthreads=no])",
          "51:     dnl Thread functions",
          "52:     AC_CHECK_LIB(",
          "53:      cthreads,",
          "54:      libcthreads_thread_create,",
          "55:      [ac_cv_libcthreads_dummy=yes],",
          "56:      [ac_cv_libcthreads=no])",
          "57:     AC_CHECK_LIB(",
          "58:      cthreads,",
          "59:      libcthreads_thread_join,",
          "60:      [ac_cv_libcthreads_dummy=yes],",
          "61:      [ac_cv_libcthreads=no])",
          "63:     dnl Thread attributes functions",
          "64:     AC_CHECK_LIB(",
          "65:      cthreads,",
          "66:      libcthreads_thread_attributes_initialize,",
          "67:      [ac_cv_libcthreads_dummy=yes],",
          "68:      [ac_cv_libcthreads=no])",
          "69:     AC_CHECK_LIB(",
          "70:      cthreads,",
          "71:      libcthreads_thread_attributes_free,",
          "72:      [ac_cv_libcthreads_dummy=yes],",
          "73:      [ac_cv_libcthreads=no])",
          "75:     dnl Condition functions",
          "76:     AC_CHECK_LIB(",
          "77:      cthreads,",
          "78:      libcthreads_condition_initialize,",
          "79:      [ac_cv_libcthreads_dummy=yes],",
          "80:      [ac_cv_libcthreads=no])",
          "81:     AC_CHECK_LIB(",
          "82:      cthreads,",
          "83:      libcthreads_condition_free,",
          "84:      [ac_cv_libcthreads_dummy=yes],",
          "85:      [ac_cv_libcthreads=no])",
          "86:     AC_CHECK_LIB(",
          "87:      cthreads,",
          "88:      libcthreads_condition_broadcast,",
          "89:      [ac_cv_libcthreads_dummy=yes],",
          "90:      [ac_cv_libcthreads=no])",
          "91:     AC_CHECK_LIB(",
          "92:      cthreads,",
          "93:      libcthreads_condition_signal,",
          "94:      [ac_cv_libcthreads_dummy=yes],",
          "95:      [ac_cv_libcthreads=no])",
          "96:     AC_CHECK_LIB(",
          "97:      cthreads,",
          "98:      libcthreads_condition_wait,",
          "99:      [ac_cv_libcthreads_dummy=yes],",
          "100:      [ac_cv_libcthreads=no])",
          "102:     dnl Lock functions",
          "103:     AC_CHECK_LIB(",
          "104:      cthreads,",
          "105:      libcthreads_lock_initialize,",
          "106:      [ac_cv_libcthreads_dummy=yes],",
          "107:      [ac_cv_libcthreads=no])",
          "108:     AC_CHECK_LIB(",
          "109:      cthreads,",
          "110:      libcthreads_lock_free,",
          "111:      [ac_cv_libcthreads_dummy=yes],",
          "112:      [ac_cv_libcthreads=no])",
          "113:     AC_CHECK_LIB(",
          "114:      cthreads,",
          "115:      libcthreads_lock_grab,",
          "116:      [ac_cv_libcthreads_dummy=yes],",
          "117:      [ac_cv_libcthreads=no])",
          "118:     AC_CHECK_LIB(",
          "119:      cthreads,",
          "120:      libcthreads_lock_release,",
          "121:      [ac_cv_libcthreads_dummy=yes],",
          "122:      [ac_cv_libcthreads=no])",
          "124:     dnl Mutex functions",
          "125:     AC_CHECK_LIB(",
          "126:      cthreads,",
          "127:      libcthreads_mutex_initialize,",
          "128:      [ac_cv_libcthreads_dummy=yes],",
          "129:      [ac_cv_libcthreads=no])",
          "130:     AC_CHECK_LIB(",
          "131:      cthreads,",
          "132:      libcthreads_mutex_free,",
          "133:      [ac_cv_libcthreads_dummy=yes],",
          "134:      [ac_cv_libcthreads=no])",
          "135:     AC_CHECK_LIB(",
          "136:      cthreads,",
          "137:      libcthreads_mutex_grab,",
          "138:      [ac_cv_libcthreads_dummy=yes],",
          "139:      [ac_cv_libcthreads=no])",
          "140:     AC_CHECK_LIB(",
          "141:      cthreads,",
          "142:      libcthreads_mutex_try_grab,",
          "143:      [ac_cv_libcthreads_dummy=yes],",
          "144:      [ac_cv_libcthreads=no])",
          "145:     AC_CHECK_LIB(",
          "146:      cthreads,",
          "147:      libcthreads_mutex_release,",
          "148:      [ac_cv_libcthreads_dummy=yes],",
          "149:      [ac_cv_libcthreads=no])",
          "151:     dnl Read/Write lock functions",
          "152:     AC_CHECK_LIB(",
          "153:      cthreads,",
          "154:      libcthreads_read_write_lock_initialize,",
          "155:      [ac_cv_libcthreads_dummy=yes],",
          "156:      [ac_cv_libcthreads=no])",
          "157:     AC_CHECK_LIB(",
          "158:      cthreads,",
          "159:      libcthreads_read_write_lock_free,",
          "160:      [ac_cv_libcthreads_dummy=yes],",
          "161:      [ac_cv_libcthreads=no])",
          "162:     AC_CHECK_LIB(",
          "163:      cthreads,",
          "164:      libcthreads_read_write_lock_grab_for_read,",
          "165:      [ac_cv_libcthreads_dummy=yes],",
          "166:      [ac_cv_libcthreads=no])",
          "167:     AC_CHECK_LIB(",
          "168:      cthreads,",
          "169:      libcthreads_read_write_lock_grab_for_write,",
          "170:      [ac_cv_libcthreads_dummy=yes],",
          "171:      [ac_cv_libcthreads=no])",
          "172:     AC_CHECK_LIB(",
          "173:      cthreads,",
          "174:      libcthreads_read_write_lock_release_for_read,",
          "175:      [ac_cv_libcthreads_dummy=yes],",
          "176:      [ac_cv_libcthreads=no])",
          "177:     AC_CHECK_LIB(",
          "178:      cthreads,",
          "179:      libcthreads_read_write_lock_release_for_write,",
          "180:      [ac_cv_libcthreads_dummy=yes],",
          "181:      [ac_cv_libcthreads=no])",
          "183:     dnl Queue functions",
          "184:     AC_CHECK_LIB(",
          "185:      cthreads,",
          "186:      libcthreads_queue_initialize,",
          "187:      [ac_cv_libcthreads_dummy=yes],",
          "188:      [ac_cv_libcthreads=no])",
          "189:     AC_CHECK_LIB(",
          "190:      cthreads,",
          "191:      libcthreads_queue_free,",
          "192:      [ac_cv_libcthreads_dummy=yes],",
          "193:      [ac_cv_libcthreads=no])",
          "194:     AC_CHECK_LIB(",
          "195:      cthreads,",
          "196:      libcthreads_queue_type_pop,",
          "197:      [ac_cv_libcthreads_dummy=yes],",
          "198:      [ac_cv_libcthreads=no])",
          "199:     AC_CHECK_LIB(",
          "200:      cthreads,",
          "201:      libcthreads_queue_pop,",
          "202:      [ac_cv_libcthreads_dummy=yes],",
          "203:      [ac_cv_libcthreads=no])",
          "204:     AC_CHECK_LIB(",
          "205:      cthreads,",
          "206:      libcthreads_queue_try_push,",
          "207:      [ac_cv_libcthreads_dummy=yes],",
          "208:      [ac_cv_libcthreads=no])",
          "209:     AC_CHECK_LIB(",
          "210:      cthreads,",
          "211:      libcthreads_queue_push,",
          "212:      [ac_cv_libcthreads_dummy=yes],",
          "213:      [ac_cv_libcthreads=no])",
          "214:     AC_CHECK_LIB(",
          "215:      cthreads,",
          "216:      libcthreads_queue_push_sorted,",
          "217:      [ac_cv_libcthreads_dummy=yes],",
          "218:      [ac_cv_libcthreads=no])",
          "220:     dnl Thread pool functions",
          "221:     AC_CHECK_LIB(",
          "222:      cthreads,",
          "223:      libcthreads_thread_pool_create,",
          "224:      [ac_cv_libcthreads_dummy=yes],",
          "225:      [ac_cv_libcthreads=no])",
          "226:     AC_CHECK_LIB(",
          "227:      cthreads,",
          "228:      libcthreads_thread_pool_push,",
          "229:      [ac_cv_libcthreads_dummy=yes],",
          "230:      [ac_cv_libcthreads=no])",
          "231:     AC_CHECK_LIB(",
          "232:      cthreads,",
          "233:      libcthreads_thread_pool_push_sorted,",
          "234:      [ac_cv_libcthreads_dummy=yes],",
          "235:      [ac_cv_libcthreads=no])",
          "236:     AC_CHECK_LIB(",
          "237:      cthreads,",
          "238:      libcthreads_thread_pool_join,",
          "239:      [ac_cv_libcthreads_dummy=yes],",
          "240:      [ac_cv_libcthreads=no])",
          "242:     ac_cv_libcthreads_LIBADD=\"-lcthreads\"",
          "244:    ])",
          "245:   ])",
          "247:  AS_IF(",
          "248:   [test \"x$ac_cv_libcthreads\" = xyes],",
          "249:   [AC_DEFINE(",
          "250:    [HAVE_LIBCTHREADS],",
          "251:    [1],",
          "252:    [Define to 1 if you have the `cthreads' library (-lcthreads).])",
          "253:   ])",
          "255:  AS_IF(",
          "256:   [test \"x$ac_cv_libcthreads\" = xyes],",
          "257:   [ac_cv_libcthreads_multi_threading=libcthreads],",
          "258:   [ac_cv_libcthreads_multi_threading=no])",
          "260:  AS_IF(",
          "261:   [test \"x$ac_cv_libcthreads\" = xyes],",
          "262:   [AC_SUBST(",
          "263:    [HAVE_LIBCTHREADS],",
          "264:    [1]) ],",
          "265:   [AC_SUBST(",
          "266:    [HAVE_LIBCTHREADS],",
          "267:    [0])",
          "269:  ])",
          "273:  [AS_IF(",
          "274:   [test \"x$ac_cv_enable_winapi\" = xno],",
          "275:   [dnl Check for enabling pthread support",
          "276:   AX_PTHREAD_CHECK_ENABLE",
          "277:    ac_cv_libcthreads_multi_threading=$ac_cv_pthread],",
          "278:   [ac_cv_libcthreads_multi_threading=\"winapi\"])",
          "280:  AS_IF(",
          "281:   [test \"x$ac_cv_libcthreads_multi_threading\" != xno],",
          "282:   [ac_cv_libcthreads_CPPFLAGS=\"-I../libcthreads\";",
          "283:   ac_cv_libcthreads_LIBADD=\"../libcthreads/libcthreads.la\";",
          "285:   ac_cv_libcthreads=local],",
          "286:   [ac_cv_libcthreads=no])",
          "287:  ])",
          "291:  [AX_COMMON_ARG_ENABLE(",
          "292:   [multi-threading-support],",
          "293:   [multi_threading_support],",
          "294:   [enable multi-threading support],",
          "295:   [yes])",
          "296:  AX_COMMON_ARG_WITH(",
          "297:   [libcthreads],",
          "298:   [libcthreads],",
          "299:   [search for libcthreads in includedir and libdir or in the specified DIR, or no if to use local version],",
          "300:   [auto-detect],",
          "301:   [DIR])",
          "303:  AS_IF(",
          "304:   [test \"x$ac_cv_enable_multi_threading_support\" = xno],",
          "305:   [ac_cv_libcthreads=\"no\"",
          "306:   ac_cv_libcthreads_multi_threading=\"no\"],",
          "307:   [dnl Check for a shared library version",
          "308:   AX_LIBCTHREADS_CHECK_LIB",
          "310:   dnl Check if the dependencies for the local library version",
          "312:    [test \"x$ac_cv_libcthreads\" != xyes],",
          "313:    [AX_LIBCTHREADS_CHECK_LOCAL",
          "315:    AC_DEFINE(",
          "316:     [HAVE_LOCAL_LIBCTHREADS],",
          "317:     [1],",
          "318:     [Define to 1 if the local version of libcthreads is used.])",
          "319:    AC_SUBST(",
          "320:     [HAVE_LOCAL_LIBCTHREADS],",
          "321:     [1])",
          "322:    ])",
          "323:   ])",
          "325:  AM_CONDITIONAL(",
          "326:   [HAVE_LOCAL_LIBCTHREADS],",
          "327:   [test \"x$ac_cv_libcthreads\" = xlocal])",
          "328:  AS_IF(",
          "329:   [test \"x$ac_cv_libcthreads_CPPFLAGS\" != \"x\"],",
          "330:   [AC_SUBST(",
          "331:    [LIBCTHREADS_CPPFLAGS],",
          "332:    [$ac_cv_libcthreads_CPPFLAGS])",
          "333:   ])",
          "334:  AS_IF(",
          "335:   [test \"x$ac_cv_libcthreads_LIBADD\" != \"x\"],",
          "336:   [AC_SUBST(",
          "337:    [LIBCTHREADS_LIBADD],",
          "338:    [$ac_cv_libcthreads_LIBADD])",
          "339:   ])",
          "341:  AS_IF(",
          "342:   [test \"x$ac_cv_libcthreads\" != xno],",
          "343:   [AC_DEFINE(",
          "344:    [HAVE_MULTI_THREAD_SUPPORT],",
          "345:    [1],",
          "346:    [Define to 1 if multi thread support should be used.])",
          "347:   AC_SUBST(",
          "348:    [HAVE_MULTI_THREAD_SUPPORT],",
          "349:    [1]) ],",
          "350:   [AC_SUBST(",
          "351:    [HAVE_MULTI_THREAD_SUPPORT],",
          "352:    [0])",
          "353:   ])",
          "355:  AS_IF(",
          "356:   [test \"x$ac_cv_libcthreads\" = xyes],",
          "357:   [AC_SUBST(",
          "358:    [ax_libcthreads_pc_libs_private],",
          "359:    [-lcthreads])",
          "360:   ])",
          "362:  AS_IF(",
          "363:   [test \"x$ac_cv_libcthreads\" = xyes],",
          "364:   [AC_SUBST(",
          "365:    [ax_libcthreads_spec_requires],",
          "366:    [libcthreads])",
          "367:   AC_SUBST(",
          "368:    [ax_libcthreads_spec_build_requires],",
          "369:    [libcthreads-devel])",
          "371:  ])",
          "",
          "[Added Lines]",
          "1: dnl Checks for libcthreads or required headers and functions",
          "3: dnl Version: 20170904",
          "8:   [dnl Check if parameters were provided",
          "10:     [test \"x$ac_cv_with_libcthreads\" != x && test \"x$ac_cv_with_libcthreads\" != xno && test \"x$ac_cv_with_libcthreads\" != xauto-detect],",
          "11:     [AS_IF(",
          "12:       [test -d \"$ac_cv_with_libcthreads\"],",
          "13:       [CFLAGS=\"$CFLAGS -I${ac_cv_with_libcthreads}/include\"",
          "14:       LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libcthreads}/lib\"],",
          "15:       [AC_MSG_WARN([no such directory: $ac_cv_with_libcthreads])",
          "16:       ])",
          "17:     ])",
          "20:     [test \"x$ac_cv_with_libcthreads\" = xno],",
          "22:     [dnl Check for a pkg-config file",
          "23:     AS_IF(",
          "24:       [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:       [PKG_CHECK_MODULES(",
          "26:         [libcthreads],",
          "27:         [libcthreads >= 20160404],",
          "28:         [ac_cv_libcthreads=yes],",
          "29:         [ac_cv_libcthreads=check])",
          "30:       ])",
          "32:     AS_IF(",
          "33:       [test \"x$ac_cv_libcthreads\" = xyes],",
          "34:       [ac_cv_libcthreads_CPPFLAGS=\"$pkg_cv_libcthreads_CFLAGS\"",
          "35:       ac_cv_libcthreads_LIBADD=\"$pkg_cv_libcthreads_LIBS\"])",
          "37:     AS_IF(",
          "38:       [test \"x$ac_cv_libcthreads\" = xcheck],",
          "39:       [dnl Check for headers",
          "40:       AC_CHECK_HEADERS([libcthreads.h])",
          "42:       AS_IF(",
          "43:         [test \"x$ac_cv_header_libcthreads_h\" = xno],",
          "44:         [ac_cv_libcthreads=no],",
          "45:         [dnl Check for the individual functions",
          "46:         ac_cv_libcthreads=yes",
          "48:         AC_CHECK_LIB(",
          "49:           cthreads,",
          "50:           libcthreads_get_version,",
          "51:           [ac_cv_libcthreads_dummy=yes],",
          "52:           [ac_cv_libcthreads=no])",
          "54:         dnl Thread functions",
          "55:         AC_CHECK_LIB(",
          "56:           cthreads,",
          "57:           libcthreads_thread_create,",
          "58:           [ac_cv_libcthreads_dummy=yes],",
          "59:           [ac_cv_libcthreads=no])",
          "60:         AC_CHECK_LIB(",
          "61:           cthreads,",
          "62:           libcthreads_thread_join,",
          "63:           [ac_cv_libcthreads_dummy=yes],",
          "64:           [ac_cv_libcthreads=no])",
          "66:         dnl Thread attributes functions",
          "67:         AC_CHECK_LIB(",
          "68:           cthreads,",
          "69:           libcthreads_thread_attributes_initialize,",
          "70:           [ac_cv_libcthreads_dummy=yes],",
          "71:           [ac_cv_libcthreads=no])",
          "72:         AC_CHECK_LIB(",
          "73:           cthreads,",
          "74:           libcthreads_thread_attributes_free,",
          "75:           [ac_cv_libcthreads_dummy=yes],",
          "76:           [ac_cv_libcthreads=no])",
          "78:         dnl Condition functions",
          "79:         AC_CHECK_LIB(",
          "80:           cthreads,",
          "81:           libcthreads_condition_initialize,",
          "82:           [ac_cv_libcthreads_dummy=yes],",
          "83:           [ac_cv_libcthreads=no])",
          "84:         AC_CHECK_LIB(",
          "85:           cthreads,",
          "86:           libcthreads_condition_free,",
          "87:           [ac_cv_libcthreads_dummy=yes],",
          "88:           [ac_cv_libcthreads=no])",
          "89:         AC_CHECK_LIB(",
          "90:           cthreads,",
          "91:           libcthreads_condition_broadcast,",
          "92:           [ac_cv_libcthreads_dummy=yes],",
          "93:           [ac_cv_libcthreads=no])",
          "94:         AC_CHECK_LIB(",
          "95:           cthreads,",
          "96:           libcthreads_condition_signal,",
          "97:           [ac_cv_libcthreads_dummy=yes],",
          "98:           [ac_cv_libcthreads=no])",
          "99:         AC_CHECK_LIB(",
          "100:           cthreads,",
          "101:           libcthreads_condition_wait,",
          "102:           [ac_cv_libcthreads_dummy=yes],",
          "103:           [ac_cv_libcthreads=no])",
          "105:         dnl Lock functions",
          "106:         AC_CHECK_LIB(",
          "107:           cthreads,",
          "108:           libcthreads_lock_initialize,",
          "109:           [ac_cv_libcthreads_dummy=yes],",
          "110:           [ac_cv_libcthreads=no])",
          "111:         AC_CHECK_LIB(",
          "112:           cthreads,",
          "113:           libcthreads_lock_free,",
          "114:           [ac_cv_libcthreads_dummy=yes],",
          "115:           [ac_cv_libcthreads=no])",
          "116:         AC_CHECK_LIB(",
          "117:           cthreads,",
          "118:           libcthreads_lock_grab,",
          "119:           [ac_cv_libcthreads_dummy=yes],",
          "120:           [ac_cv_libcthreads=no])",
          "121:         AC_CHECK_LIB(",
          "122:           cthreads,",
          "123:           libcthreads_lock_release,",
          "124:           [ac_cv_libcthreads_dummy=yes],",
          "125:           [ac_cv_libcthreads=no])",
          "127:         dnl Mutex functions",
          "128:         AC_CHECK_LIB(",
          "129:           cthreads,",
          "130:           libcthreads_mutex_initialize,",
          "131:           [ac_cv_libcthreads_dummy=yes],",
          "132:           [ac_cv_libcthreads=no])",
          "133:         AC_CHECK_LIB(",
          "134:           cthreads,",
          "135:           libcthreads_mutex_free,",
          "136:           [ac_cv_libcthreads_dummy=yes],",
          "137:           [ac_cv_libcthreads=no])",
          "138:         AC_CHECK_LIB(",
          "139:           cthreads,",
          "140:           libcthreads_mutex_grab,",
          "141:           [ac_cv_libcthreads_dummy=yes],",
          "142:           [ac_cv_libcthreads=no])",
          "143:         AC_CHECK_LIB(",
          "144:           cthreads,",
          "145:           libcthreads_mutex_try_grab,",
          "146:           [ac_cv_libcthreads_dummy=yes],",
          "147:           [ac_cv_libcthreads=no])",
          "148:         AC_CHECK_LIB(",
          "149:           cthreads,",
          "150:           libcthreads_mutex_release,",
          "151:           [ac_cv_libcthreads_dummy=yes],",
          "152:           [ac_cv_libcthreads=no])",
          "154:         dnl Read/Write lock functions",
          "155:         AC_CHECK_LIB(",
          "156:           cthreads,",
          "157:           libcthreads_read_write_lock_initialize,",
          "158:           [ac_cv_libcthreads_dummy=yes],",
          "159:           [ac_cv_libcthreads=no])",
          "160:         AC_CHECK_LIB(",
          "161:           cthreads,",
          "162:           libcthreads_read_write_lock_free,",
          "163:           [ac_cv_libcthreads_dummy=yes],",
          "164:           [ac_cv_libcthreads=no])",
          "165:         AC_CHECK_LIB(",
          "166:           cthreads,",
          "167:           libcthreads_read_write_lock_grab_for_read,",
          "168:           [ac_cv_libcthreads_dummy=yes],",
          "169:           [ac_cv_libcthreads=no])",
          "170:         AC_CHECK_LIB(",
          "171:           cthreads,",
          "172:           libcthreads_read_write_lock_grab_for_write,",
          "173:           [ac_cv_libcthreads_dummy=yes],",
          "174:           [ac_cv_libcthreads=no])",
          "175:         AC_CHECK_LIB(",
          "176:           cthreads,",
          "177:           libcthreads_read_write_lock_release_for_read,",
          "178:           [ac_cv_libcthreads_dummy=yes],",
          "179:           [ac_cv_libcthreads=no])",
          "180:         AC_CHECK_LIB(",
          "181:           cthreads,",
          "182:           libcthreads_read_write_lock_release_for_write,",
          "183:           [ac_cv_libcthreads_dummy=yes],",
          "184:           [ac_cv_libcthreads=no])",
          "186:         dnl Queue functions",
          "187:         AC_CHECK_LIB(",
          "188:           cthreads,",
          "189:           libcthreads_queue_initialize,",
          "190:           [ac_cv_libcthreads_dummy=yes],",
          "191:           [ac_cv_libcthreads=no])",
          "192:         AC_CHECK_LIB(",
          "193:           cthreads,",
          "194:           libcthreads_queue_free,",
          "195:           [ac_cv_libcthreads_dummy=yes],",
          "196:           [ac_cv_libcthreads=no])",
          "197:         AC_CHECK_LIB(",
          "198:           cthreads,",
          "199:           libcthreads_queue_type_pop,",
          "200:           [ac_cv_libcthreads_dummy=yes],",
          "201:           [ac_cv_libcthreads=no])",
          "202:         AC_CHECK_LIB(",
          "203:           cthreads,",
          "204:           libcthreads_queue_pop,",
          "205:           [ac_cv_libcthreads_dummy=yes],",
          "206:           [ac_cv_libcthreads=no])",
          "207:         AC_CHECK_LIB(",
          "208:           cthreads,",
          "209:           libcthreads_queue_try_push,",
          "210:           [ac_cv_libcthreads_dummy=yes],",
          "211:           [ac_cv_libcthreads=no])",
          "212:         AC_CHECK_LIB(",
          "213:           cthreads,",
          "214:           libcthreads_queue_push,",
          "215:           [ac_cv_libcthreads_dummy=yes],",
          "216:           [ac_cv_libcthreads=no])",
          "217:         AC_CHECK_LIB(",
          "218:           cthreads,",
          "219:           libcthreads_queue_push_sorted,",
          "220:           [ac_cv_libcthreads_dummy=yes],",
          "221:           [ac_cv_libcthreads=no])",
          "223:         dnl Thread pool functions",
          "224:         AC_CHECK_LIB(",
          "225:           cthreads,",
          "226:           libcthreads_thread_pool_create,",
          "227:           [ac_cv_libcthreads_dummy=yes],",
          "228:           [ac_cv_libcthreads=no])",
          "229:         AC_CHECK_LIB(",
          "230:           cthreads,",
          "231:           libcthreads_thread_pool_push,",
          "232:           [ac_cv_libcthreads_dummy=yes],",
          "233:           [ac_cv_libcthreads=no])",
          "234:         AC_CHECK_LIB(",
          "235:           cthreads,",
          "236:           libcthreads_thread_pool_push_sorted,",
          "237:           [ac_cv_libcthreads_dummy=yes],",
          "238:           [ac_cv_libcthreads=no])",
          "239:         AC_CHECK_LIB(",
          "240:           cthreads,",
          "241:           libcthreads_thread_pool_join,",
          "242:           [ac_cv_libcthreads_dummy=yes],",
          "243:           [ac_cv_libcthreads=no])",
          "245:         ac_cv_libcthreads_LIBADD=\"-lcthreads\"",
          "246:         ])",
          "247:       ])",
          "250:   AS_IF(",
          "251:     [test \"x$ac_cv_libcthreads\" = xyes],",
          "252:     [AC_DEFINE(",
          "253:       [HAVE_LIBCTHREADS],",
          "254:       [1],",
          "255:       [Define to 1 if you have the `cthreads' library (-lcthreads).])",
          "256:     ])",
          "258:   AS_IF(",
          "259:     [test \"x$ac_cv_libcthreads\" = xyes],",
          "260:     [ac_cv_libcthreads_multi_threading=libcthreads],",
          "261:     [ac_cv_libcthreads_multi_threading=no])",
          "263:   AS_IF(",
          "264:     [test \"x$ac_cv_libcthreads\" = xyes],",
          "265:     [AC_SUBST(",
          "266:       [HAVE_LIBCTHREADS],",
          "267:       [1]) ],",
          "268:     [AC_SUBST(",
          "269:       [HAVE_LIBCTHREADS],",
          "270:       [0])",
          "271:     ])",
          "276:   [AS_IF(",
          "277:     [test \"x$ac_cv_enable_winapi\" = xno],",
          "278:     [dnl Check for enabling pthread support",
          "279:     AX_PTHREAD_CHECK_ENABLE",
          "280:       ac_cv_libcthreads_multi_threading=$ac_cv_pthread],",
          "281:     [ac_cv_libcthreads_multi_threading=\"winapi\"])",
          "283:   AS_IF(",
          "284:     [test \"x$ac_cv_libcthreads_multi_threading\" != xno],",
          "285:     [ac_cv_libcthreads_CPPFLAGS=\"-I../libcthreads\";",
          "286:     ac_cv_libcthreads_LIBADD=\"../libcthreads/libcthreads.la\";",
          "288:     ac_cv_libcthreads=local],",
          "289:     [ac_cv_libcthreads=no])",
          "290:   ])",
          "294:   [AX_COMMON_ARG_ENABLE(",
          "295:     [multi-threading-support],",
          "296:     [multi_threading_support],",
          "297:     [enable multi-threading support],",
          "298:     [yes])",
          "299:   AX_COMMON_ARG_WITH(",
          "300:     [libcthreads],",
          "301:     [libcthreads],",
          "302:     [search for libcthreads in includedir and libdir or in the specified DIR, or no if to use local version],",
          "303:     [auto-detect],",
          "304:     [DIR])",
          "307:     [test \"x$ac_cv_enable_multi_threading_support\" = xno],",
          "308:     [ac_cv_libcthreads=\"no\"",
          "309:     ac_cv_libcthreads_multi_threading=\"no\"],",
          "310:     [dnl Check for a shared library version",
          "311:     AX_LIBCTHREADS_CHECK_LIB",
          "313:     dnl Check if the dependencies for the local library version",
          "314:     AS_IF(",
          "315:       [test \"x$ac_cv_libcthreads\" != xyes],",
          "316:       [AX_LIBCTHREADS_CHECK_LOCAL",
          "318:       AC_DEFINE(",
          "319:         [HAVE_LOCAL_LIBCTHREADS],",
          "320:         [1],",
          "321:         [Define to 1 if the local version of libcthreads is used.])",
          "322:       AC_SUBST(",
          "323:         [HAVE_LOCAL_LIBCTHREADS],",
          "324:         [1])",
          "325:       ])",
          "326:     ])",
          "328:   AM_CONDITIONAL(",
          "329:     [HAVE_LOCAL_LIBCTHREADS],",
          "330:     [test \"x$ac_cv_libcthreads\" = xlocal])",
          "331:   AS_IF(",
          "332:     [test \"x$ac_cv_libcthreads_CPPFLAGS\" != \"x\"],",
          "333:     [AC_SUBST(",
          "334:       [LIBCTHREADS_CPPFLAGS],",
          "335:       [$ac_cv_libcthreads_CPPFLAGS])",
          "336:     ])",
          "337:   AS_IF(",
          "338:     [test \"x$ac_cv_libcthreads_LIBADD\" != \"x\"],",
          "339:     [AC_SUBST(",
          "340:       [LIBCTHREADS_LIBADD],",
          "341:       [$ac_cv_libcthreads_LIBADD])",
          "342:     ])",
          "344:   AS_IF(",
          "345:     [test \"x$ac_cv_libcthreads\" != xno],",
          "346:     [AC_DEFINE(",
          "347:       [HAVE_MULTI_THREAD_SUPPORT],",
          "348:       [1],",
          "349:       [Define to 1 if multi thread support should be used.])",
          "350:     AC_SUBST(",
          "351:       [HAVE_MULTI_THREAD_SUPPORT],",
          "352:       [1]) ],",
          "353:     [AC_SUBST(",
          "354:       [HAVE_MULTI_THREAD_SUPPORT],",
          "355:       [0])",
          "356:     ])",
          "358:   AS_IF(",
          "359:     [test \"x$ac_cv_libcthreads\" = xyes],",
          "360:     [AC_SUBST(",
          "361:       [ax_libcthreads_pc_libs_private],",
          "362:       [-lcthreads])",
          "363:     ])",
          "365:   AS_IF(",
          "366:     [test \"x$ac_cv_libcthreads\" = xyes],",
          "367:     [AC_SUBST(",
          "368:       [ax_libcthreads_spec_requires],",
          "369:       [libcthreads])",
          "370:     AC_SUBST(",
          "371:       [ax_libcthreads_spec_build_requires],",
          "372:       [libcthreads-devel])",
          "373:     ])",
          "",
          "---------------"
        ],
        "m4/libfcache.m4||m4/libfcache.m4": [
          "File: m4/libfcache.m4 -> m4/libfcache.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Functions for libfcache",
          "2: dnl",
          "5: dnl Function to detect if libfcache is available",
          "6: dnl ac_libfcache_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "7: AC_DEFUN([AX_LIBFCACHE_CHECK_LIB],",
          "23:   AS_IF(",
          "32:   AS_IF(",
          "41:     [ac_cv_libfcache=no],",
          "128:     ])",
          "148:   ])",
          "151: dnl Function to detect if libfcache dependencies are available",
          "152: AC_DEFUN([AX_LIBFCACHE_CHECK_LOCAL],",
          "174: dnl Function to detect how to enable libfcache",
          "175: AC_DEFUN([AX_LIBFCACHE_CHECK_ENABLE],",
          "231:   ])",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20140912",
          "8:  [dnl Check if parameters were provided",
          "9:  AS_IF(",
          "10:   [test \"x$ac_cv_with_libfcache\" != x && test \"x$ac_cv_with_libfcache\" != xno && test \"x$ac_cv_with_libfcache\" != xauto-detect],",
          "11:   [AS_IF(",
          "12:    [test -d \"$ac_cv_with_libfcache\"],",
          "13:    [CFLAGS=\"$CFLAGS -I${ac_cv_with_libfcache}/include\"",
          "14:    LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libfcache}/lib\"],",
          "15:    [AC_MSG_WARN([no such directory: $ac_cv_with_libfcache])",
          "16:    ])",
          "17:   ])",
          "19:  AS_IF(",
          "20:   [test \"x$ac_cv_with_libfcache\" = xno],",
          "21:   [ac_cv_libfcache=no],",
          "22:   [dnl Check for a pkg-config file",
          "24:    [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:    [PKG_CHECK_MODULES(",
          "26:     [libfcache],",
          "27:     [libfcache >= 20140912],",
          "28:     [ac_cv_libfcache=yes],",
          "29:     [ac_cv_libfcache=no])",
          "30:    ])",
          "33:    [test \"x$ac_cv_libfcache\" = xyes],",
          "34:    [ac_cv_libfcache_CPPFLAGS=\"$pkg_cv_libfcache_CFLAGS\"",
          "35:    ac_cv_libfcache_LIBADD=\"$pkg_cv_libfcache_LIBS\"],",
          "36:    [dnl Check for headers",
          "37:    AC_CHECK_HEADERS([libfcache.h])",
          "39:    AS_IF(",
          "40:     [test \"x$ac_cv_header_libfcache_h\" = xno],",
          "42:     [dnl Check for the individual functions",
          "43:     ac_cv_libfcache=yes",
          "45:     AC_CHECK_LIB(",
          "46:      fcache,",
          "47:      libfcache_get_version,",
          "48:      [ac_cv_libfcache_dummy=yes],",
          "49:      [ac_cv_libfcache=no])",
          "51:     dnl Cache functions",
          "52:     AC_CHECK_LIB(",
          "53:      fcache,",
          "54:      libfcache_cache_initialize,",
          "55:      [ac_cv_libfcache_dummy=yes],",
          "56:      [ac_cv_libfcache=no])",
          "57:     AC_CHECK_LIB(",
          "58:      fcache,",
          "59:      libfcache_cache_free,",
          "60:      [ac_cv_libfcache_dummy=yes],",
          "61:      [ac_cv_libfcache=no])",
          "62:     AC_CHECK_LIB(",
          "63:      fcache,",
          "64:      libfcache_cache_clone,",
          "65:      [ac_cv_libfcache_dummy=yes],",
          "66:      [ac_cv_libfcache=no])",
          "67:     AC_CHECK_LIB(",
          "68:      fcache,",
          "69:      libfcache_cache_clear,",
          "70:      [ac_cv_libfcache_dummy=yes],",
          "71:      [ac_cv_libfcache=no])",
          "72:     AC_CHECK_LIB(",
          "73:      fcache,",
          "74:      libfcache_cache_get_number_of_entries,",
          "75:      [ac_cv_libfcache_dummy=yes],",
          "76:      [ac_cv_libfcache=no])",
          "77:     AC_CHECK_LIB(",
          "78:      fcache,",
          "79:      libfcache_cache_get_number_of_cache_values,",
          "80:      [ac_cv_libfcache_dummy=yes],",
          "81:      [ac_cv_libfcache=no])",
          "82:     AC_CHECK_LIB(",
          "83:      fcache,",
          "84:      libfcache_cache_get_value_by_index,",
          "85:      [ac_cv_libfcache_dummy=yes],",
          "86:      [ac_cv_libfcache=no])",
          "87:     AC_CHECK_LIB(",
          "88:      fcache,",
          "89:      libfcache_cache_set_value_by_index,",
          "90:      [ac_cv_libfcache_dummy=yes],",
          "91:      [ac_cv_libfcache=no])",
          "93:     dnl Cache value functions",
          "94:     AC_CHECK_LIB(",
          "95:      fcache,",
          "96:      libfcache_cache_value_clear,",
          "97:      [ac_cv_libfcache_dummy=yes],",
          "98:      [ac_cv_libfcache=no])",
          "99:     AC_CHECK_LIB(",
          "100:      fcache,",
          "101:      libfcache_cache_value_get_identifier,",
          "102:      [ac_cv_libfcache_dummy=yes],",
          "103:      [ac_cv_libfcache=no])",
          "104:     AC_CHECK_LIB(",
          "105:      fcache,",
          "106:      libfcache_cache_value_set_identifier,",
          "107:      [ac_cv_libfcache_dummy=yes],",
          "108:      [ac_cv_libfcache=no])",
          "109:     AC_CHECK_LIB(",
          "110:      fcache,",
          "111:      libfcache_cache_value_get_value,",
          "112:      [ac_cv_libfcache_dummy=yes],",
          "113:      [ac_cv_libfcache=no])",
          "114:     AC_CHECK_LIB(",
          "115:      fcache,",
          "116:      libfcache_cache_value_set_value,",
          "117:      [ac_cv_libfcache_dummy=yes],",
          "118:      [ac_cv_libfcache=no])",
          "120:     dnl Date time functions",
          "121:     AC_CHECK_LIB(",
          "122:      fcache,",
          "123:      libfcache_date_time_get_timestamp,",
          "124:      [ac_cv_libfcache_dummy=yes],",
          "125:      [ac_cv_libfcache=no])",
          "127:     ac_cv_libfcache_LIBADD=\"-lfcache\"",
          "129:    ])",
          "130:   ])",
          "132:  AS_IF(",
          "133:   [test \"x$ac_cv_libfcache\" = xyes],",
          "134:   [AC_DEFINE(",
          "135:    [HAVE_LIBFCACHE],",
          "136:    [1],",
          "137:    [Define to 1 if you have the `fcache' library (-lfcache).])",
          "138:   ])",
          "140:  AS_IF(",
          "141:   [test \"x$ac_cv_libfcache\" = xyes],",
          "142:   [AC_SUBST(",
          "143:    [HAVE_LIBFCACHE],",
          "144:    [1]) ],",
          "145:   [AC_SUBST(",
          "146:    [HAVE_LIBFCACHE],",
          "147:    [0])",
          "149:  ])",
          "153:  [dnl Types used in libfcache/libfcache_date_time.h",
          "154:  AC_STRUCT_TM",
          "156:  dnl Headers included in libfcache/libfcache_date_time.h",
          "157:  AC_HEADER_TIME",
          "159:  dnl Date and time functions used in libfcache/libfcache_date_time.h",
          "160:  AC_CHECK_FUNCS(",
          "161:   [time],",
          "162:   [],",
          "163:   [AC_MSG_FAILURE(",
          "164:    [Missing function: time],",
          "165:    [1])",
          "166:   ])",
          "168:  ac_cv_libfcache_CPPFLAGS=\"-I../libfcache\";",
          "169:  ac_cv_libfcache_LIBADD=\"../libfcache/libfcache.la\";",
          "171:  ac_cv_libfcache=local",
          "172:  ])",
          "176:  [AX_COMMON_ARG_WITH(",
          "177:   [libfcache],",
          "178:   [libfcache],",
          "179:   [search for libfcache in includedir and libdir or in the specified DIR, or no if to use local version],",
          "180:   [auto-detect],",
          "181:   [DIR])",
          "183:  dnl Check for a shared library version",
          "184:  AX_LIBFCACHE_CHECK_LIB",
          "186:  dnl Check if the dependencies for the local library version",
          "187:  AS_IF(",
          "188:   [test \"x$ac_cv_libfcache\" != xyes],",
          "189:   [AX_LIBFCACHE_CHECK_LOCAL",
          "191:   AC_DEFINE(",
          "192:    [HAVE_LOCAL_LIBFCACHE],",
          "193:    [1],",
          "194:    [Define to 1 if the local version of libfcache is used.])",
          "195:   AC_SUBST(",
          "196:    [HAVE_LOCAL_LIBFCACHE],",
          "197:    [1])",
          "198:   ])",
          "200:  AM_CONDITIONAL(",
          "201:   [HAVE_LOCAL_LIBFCACHE],",
          "202:   [test \"x$ac_cv_libfcache\" = xlocal])",
          "203:  AS_IF(",
          "204:   [test \"x$ac_cv_libfcache_CPPFLAGS\" != \"x\"],",
          "205:   [AC_SUBST(",
          "206:    [LIBFCACHE_CPPFLAGS],",
          "207:    [$ac_cv_libfcache_CPPFLAGS])",
          "208:   ])",
          "209:  AS_IF(",
          "210:   [test \"x$ac_cv_libfcache_LIBADD\" != \"x\"],",
          "211:   [AC_SUBST(",
          "212:    [LIBFCACHE_LIBADD],",
          "213:    [$ac_cv_libfcache_LIBADD])",
          "214:   ])",
          "216:  AS_IF(",
          "217:   [test \"x$ac_cv_libfcache\" = xyes],",
          "218:   [AC_SUBST(",
          "219:    [ax_libfcache_pc_libs_private],",
          "220:    [-lfcache])",
          "221:   ])",
          "223:  AS_IF(",
          "224:   [test \"x$ac_cv_libfcache\" = xyes],",
          "225:   [AC_SUBST(",
          "226:    [ax_libfcache_spec_requires],",
          "227:    [libfcache])",
          "228:   AC_SUBST(",
          "229:    [ax_libfcache_spec_build_requires],",
          "230:    [libfcache-devel])",
          "232:  ])",
          "",
          "[Added Lines]",
          "3: dnl Version: 20170904",
          "8:   [dnl Check if parameters were provided",
          "10:     [test \"x$ac_cv_with_libfcache\" != x && test \"x$ac_cv_with_libfcache\" != xno && test \"x$ac_cv_with_libfcache\" != xauto-detect],",
          "11:     [AS_IF(",
          "12:       [test -d \"$ac_cv_with_libfcache\"],",
          "13:       [CFLAGS=\"$CFLAGS -I${ac_cv_with_libfcache}/include\"",
          "14:       LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libfcache}/lib\"],",
          "15:       [AC_MSG_WARN([no such directory: $ac_cv_with_libfcache])",
          "16:       ])",
          "17:     ])",
          "20:     [test \"x$ac_cv_with_libfcache\" = xno],",
          "22:     [dnl Check for a pkg-config file",
          "23:     AS_IF(",
          "24:       [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:       [PKG_CHECK_MODULES(",
          "26:         [libfcache],",
          "27:         [libfcache >= 20140912],",
          "28:         [ac_cv_libfcache=yes],",
          "29:         [ac_cv_libfcache=no])",
          "30:       ])",
          "32:     AS_IF(",
          "33:       [test \"x$ac_cv_libfcache\" = xyes],",
          "34:       [ac_cv_libfcache_CPPFLAGS=\"$pkg_cv_libfcache_CFLAGS\"",
          "35:       ac_cv_libfcache_LIBADD=\"$pkg_cv_libfcache_LIBS\"],",
          "36:       [dnl Check for headers",
          "37:       AC_CHECK_HEADERS([libfcache.h])",
          "39:       AS_IF(",
          "40:         [test \"x$ac_cv_header_libfcache_h\" = xno],",
          "41:         [ac_cv_libfcache=no],",
          "42:         [dnl Check for the individual functions",
          "43:         ac_cv_libfcache=yes",
          "45:         AC_CHECK_LIB(",
          "46:           fcache,",
          "47:           libfcache_get_version,",
          "48:           [ac_cv_libfcache_dummy=yes],",
          "49:           [ac_cv_libfcache=no])",
          "51:         dnl Cache functions",
          "52:         AC_CHECK_LIB(",
          "53:           fcache,",
          "54:           libfcache_cache_initialize,",
          "55:           [ac_cv_libfcache_dummy=yes],",
          "56:           [ac_cv_libfcache=no])",
          "57:         AC_CHECK_LIB(",
          "58:           fcache,",
          "59:           libfcache_cache_free,",
          "60:           [ac_cv_libfcache_dummy=yes],",
          "61:           [ac_cv_libfcache=no])",
          "62:         AC_CHECK_LIB(",
          "63:           fcache,",
          "64:           libfcache_cache_clone,",
          "65:           [ac_cv_libfcache_dummy=yes],",
          "66:           [ac_cv_libfcache=no])",
          "67:         AC_CHECK_LIB(",
          "68:           fcache,",
          "69:           libfcache_cache_clear,",
          "70:           [ac_cv_libfcache_dummy=yes],",
          "71:           [ac_cv_libfcache=no])",
          "72:         AC_CHECK_LIB(",
          "73:           fcache,",
          "74:           libfcache_cache_get_number_of_entries,",
          "75:           [ac_cv_libfcache_dummy=yes],",
          "76:           [ac_cv_libfcache=no])",
          "77:         AC_CHECK_LIB(",
          "78:           fcache,",
          "79:           libfcache_cache_get_number_of_cache_values,",
          "80:           [ac_cv_libfcache_dummy=yes],",
          "81:           [ac_cv_libfcache=no])",
          "82:         AC_CHECK_LIB(",
          "83:           fcache,",
          "84:           libfcache_cache_get_value_by_index,",
          "85:           [ac_cv_libfcache_dummy=yes],",
          "86:           [ac_cv_libfcache=no])",
          "87:         AC_CHECK_LIB(",
          "88:           fcache,",
          "89:           libfcache_cache_set_value_by_index,",
          "90:           [ac_cv_libfcache_dummy=yes],",
          "91:           [ac_cv_libfcache=no])",
          "93:         dnl Cache value functions",
          "94:         AC_CHECK_LIB(",
          "95:           fcache,",
          "96:           libfcache_cache_value_clear,",
          "97:           [ac_cv_libfcache_dummy=yes],",
          "98:           [ac_cv_libfcache=no])",
          "99:         AC_CHECK_LIB(",
          "100:           fcache,",
          "101:           libfcache_cache_value_get_identifier,",
          "102:           [ac_cv_libfcache_dummy=yes],",
          "103:           [ac_cv_libfcache=no])",
          "104:         AC_CHECK_LIB(",
          "105:           fcache,",
          "106:           libfcache_cache_value_set_identifier,",
          "107:           [ac_cv_libfcache_dummy=yes],",
          "108:           [ac_cv_libfcache=no])",
          "109:         AC_CHECK_LIB(",
          "110:           fcache,",
          "111:           libfcache_cache_value_get_value,",
          "112:           [ac_cv_libfcache_dummy=yes],",
          "113:           [ac_cv_libfcache=no])",
          "114:         AC_CHECK_LIB(",
          "115:           fcache,",
          "116:           libfcache_cache_value_set_value,",
          "117:           [ac_cv_libfcache_dummy=yes],",
          "118:           [ac_cv_libfcache=no])",
          "120:         dnl Date time functions",
          "121:         AC_CHECK_LIB(",
          "122:           fcache,",
          "123:           libfcache_date_time_get_timestamp,",
          "124:           [ac_cv_libfcache_dummy=yes],",
          "125:           [ac_cv_libfcache=no])",
          "127:         ac_cv_libfcache_LIBADD=\"-lfcache\"",
          "128:         ])",
          "129:       ])",
          "132:   AS_IF(",
          "133:     [test \"x$ac_cv_libfcache\" = xyes],",
          "134:     [AC_DEFINE(",
          "135:       [HAVE_LIBFCACHE],",
          "136:       [1],",
          "137:       [Define to 1 if you have the `fcache' library (-lfcache).])",
          "138:     ])",
          "140:   AS_IF(",
          "141:     [test \"x$ac_cv_libfcache\" = xyes],",
          "142:     [AC_SUBST(",
          "143:       [HAVE_LIBFCACHE],",
          "144:       [1]) ],",
          "145:     [AC_SUBST(",
          "146:       [HAVE_LIBFCACHE],",
          "147:       [0])",
          "148:     ])",
          "153:   [dnl Types used in libfcache/libfcache_date_time.h",
          "154:   AC_STRUCT_TM",
          "156:   dnl Headers included in libfcache/libfcache_date_time.h",
          "157:   AC_HEADER_TIME",
          "159:   dnl Date and time functions used in libfcache/libfcache_date_time.h",
          "160:   AC_CHECK_FUNCS(",
          "161:     [time],",
          "162:     [],",
          "163:     [AC_MSG_FAILURE(",
          "164:       [Missing function: time],",
          "165:       [1])",
          "166:     ])",
          "168:   ac_cv_libfcache_CPPFLAGS=\"-I../libfcache\";",
          "169:   ac_cv_libfcache_LIBADD=\"../libfcache/libfcache.la\";",
          "171:   ac_cv_libfcache=local",
          "172:   ])",
          "176:   [AX_COMMON_ARG_WITH(",
          "177:     [libfcache],",
          "178:     [libfcache],",
          "179:     [search for libfcache in includedir and libdir or in the specified DIR, or no if to use local version],",
          "180:     [auto-detect],",
          "181:     [DIR])",
          "183:   dnl Check for a shared library version",
          "184:   AX_LIBFCACHE_CHECK_LIB",
          "186:   dnl Check if the dependencies for the local library version",
          "187:   AS_IF(",
          "188:     [test \"x$ac_cv_libfcache\" != xyes],",
          "189:     [AX_LIBFCACHE_CHECK_LOCAL",
          "191:     AC_DEFINE(",
          "192:       [HAVE_LOCAL_LIBFCACHE],",
          "193:       [1],",
          "194:       [Define to 1 if the local version of libfcache is used.])",
          "195:     AC_SUBST(",
          "196:       [HAVE_LOCAL_LIBFCACHE],",
          "197:       [1])",
          "198:     ])",
          "200:   AM_CONDITIONAL(",
          "201:     [HAVE_LOCAL_LIBFCACHE],",
          "202:     [test \"x$ac_cv_libfcache\" = xlocal])",
          "203:   AS_IF(",
          "204:     [test \"x$ac_cv_libfcache_CPPFLAGS\" != \"x\"],",
          "205:     [AC_SUBST(",
          "206:       [LIBFCACHE_CPPFLAGS],",
          "207:       [$ac_cv_libfcache_CPPFLAGS])",
          "208:     ])",
          "209:   AS_IF(",
          "210:     [test \"x$ac_cv_libfcache_LIBADD\" != \"x\"],",
          "211:     [AC_SUBST(",
          "212:       [LIBFCACHE_LIBADD],",
          "213:       [$ac_cv_libfcache_LIBADD])",
          "214:     ])",
          "216:   AS_IF(",
          "217:     [test \"x$ac_cv_libfcache\" = xyes],",
          "218:     [AC_SUBST(",
          "219:       [ax_libfcache_pc_libs_private],",
          "220:       [-lfcache])",
          "221:     ])",
          "223:   AS_IF(",
          "224:     [test \"x$ac_cv_libfcache\" = xyes],",
          "225:     [AC_SUBST(",
          "226:       [ax_libfcache_spec_requires],",
          "227:       [libfcache])",
          "228:     AC_SUBST(",
          "229:       [ax_libfcache_spec_build_requires],",
          "230:       [libfcache-devel])",
          "231:     ])",
          "",
          "---------------"
        ],
        "m4/libfdata.m4||m4/libfdata.m4": [
          "File: m4/libfdata.m4 -> m4/libfdata.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Functions for libfdata",
          "2: dnl",
          "5: dnl Function to detect if libfdata is available",
          "6: dnl ac_libfdata_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "7: AC_DEFUN([AX_LIBFDATA_CHECK_LIB],",
          "23:   AS_IF(",
          "32:   AS_IF(",
          "41:     [ac_cv_libfdata=no],",
          "380:     ])",
          "390:   ])",
          "400:   ])",
          "403: dnl Function to detect how to enable libfdata",
          "404: AC_DEFUN([AX_LIBFDATA_CHECK_ENABLE],",
          "463:   ])",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20160325",
          "8:  [dnl Check if parameters were provided",
          "9:  AS_IF(",
          "10:   [test \"x$ac_cv_with_libfdata\" != x && test \"x$ac_cv_with_libfdata\" != xno && test \"x$ac_cv_with_libfdata\" != xauto-detect],",
          "11:   [AS_IF(",
          "12:    [test -d \"$ac_cv_with_libfdata\"],",
          "13:    [CFLAGS=\"$CFLAGS -I${ac_cv_with_libfdata}/include\"",
          "14:    LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libfdata}/lib\"],",
          "15:    [AC_MSG_WARN([no such directory: $ac_cv_with_libfdata])",
          "16:    ])",
          "17:   ])",
          "19:  AS_IF(",
          "20:   [test \"x$ac_cv_with_libfdata\" = xno],",
          "21:   [ac_cv_libfdata=no],",
          "22:   [dnl Check for a pkg-config file",
          "24:    [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:    [PKG_CHECK_MODULES(",
          "26:     [libfdata],",
          "27:     [libfdata >= 20160325],",
          "28:     [ac_cv_libfdata=yes],",
          "29:     [ac_cv_libfdata=no])",
          "30:    ])",
          "33:    [test \"x$ac_cv_libfdata\" = xyes],",
          "34:    [ac_cv_libfdata_CPPFLAGS=\"$pkg_cv_libfdata_CFLAGS\"",
          "35:    ac_cv_libfdata_LIBADD=\"$pkg_cv_libfdata_LIBS\"],",
          "36:    [dnl Check for headers",
          "37:    AC_CHECK_HEADERS([libfdata.h])",
          "39:    AS_IF(",
          "40:     [test \"x$ac_cv_header_libfdata_h\" = xno],",
          "42:     [dnl Check for the individual functions",
          "43:     ac_cv_libfdata=yes",
          "45:     AC_CHECK_LIB(",
          "46:      fdata,",
          "47:      libfdata_get_version,",
          "48:      [ac_cv_libfdata_dummy=yes],",
          "49:      [ac_cv_libfdata=no])",
          "51:     dnl Area functions",
          "52:     dnl TODO: add functions",
          "54:     dnl Balanced tree functions",
          "55:     dnl TODO: add functions",
          "57:     dnl List functions",
          "58:     AC_CHECK_LIB(",
          "59:      fdata,",
          "60:      libfdata_list_initialize,",
          "61:      [ac_cv_libfdata_dummy=yes],",
          "62:      [ac_cv_libfdata=no])",
          "63:     AC_CHECK_LIB(",
          "64:      fdata,",
          "65:      libfdata_list_free,",
          "66:      [ac_cv_libfdata_dummy=yes],",
          "67:      [ac_cv_libfdata=no])",
          "68:     AC_CHECK_LIB(",
          "69:      fdata,",
          "70:      libfdata_list_clone,",
          "71:      [ac_cv_libfdata_dummy=yes],",
          "72:      [ac_cv_libfdata=no])",
          "73:     AC_CHECK_LIB(",
          "74:      fdata,",
          "75:      libfdata_list_empty,",
          "76:      [ac_cv_libfdata_dummy=yes],",
          "77:      [ac_cv_libfdata=no])",
          "78:     AC_CHECK_LIB(",
          "79:      fdata,",
          "80:      libfdata_list_resize,",
          "81:      [ac_cv_libfdata_dummy=yes],",
          "82:      [ac_cv_libfdata=no])",
          "84:     AC_CHECK_LIB(",
          "85:      fdata,",
          "86:      libfdata_list_reverse,",
          "87:      [ac_cv_libfdata_dummy=yes],",
          "88:      [ac_cv_libfdata=no])",
          "90:     AC_CHECK_LIB(",
          "91:      fdata,",
          "92:      libfdata_list_get_number_of_elements,",
          "93:      [ac_cv_libfdata_dummy=yes],",
          "94:      [ac_cv_libfdata=no])",
          "95:     AC_CHECK_LIB(",
          "96:      fdata,",
          "97:      libfdata_list_get_list_element_by_index,",
          "98:      [ac_cv_libfdata_dummy=yes],",
          "99:      [ac_cv_libfdata=no])",
          "100:     AC_CHECK_LIB(",
          "101:      fdata,",
          "102:      libfdata_list_get_element_by_index,",
          "103:      [ac_cv_libfdata_dummy=yes],",
          "104:      [ac_cv_libfdata=no])",
          "105:     AC_CHECK_LIB(",
          "106:      fdata,",
          "107:      libfdata_list_set_element_by_index,",
          "108:      [ac_cv_libfdata_dummy=yes],",
          "109:      [ac_cv_libfdata=no])",
          "110:     AC_CHECK_LIB(",
          "111:      fdata,",
          "112:      libfdata_list_prepend_element,",
          "113:      [ac_cv_libfdata_dummy=yes],",
          "114:      [ac_cv_libfdata=no])",
          "115:     AC_CHECK_LIB(",
          "116:      fdata,",
          "117:      libfdata_list_append_element,",
          "118:      [ac_cv_libfdata_dummy=yes],",
          "119:      [ac_cv_libfdata=no])",
          "120:     AC_CHECK_LIB(",
          "121:      fdata,",
          "122:      libfdata_list_append_list,",
          "123:      [ac_cv_libfdata_dummy=yes],",
          "124:      [ac_cv_libfdata=no])",
          "125:     AC_CHECK_LIB(",
          "126:      fdata,",
          "127:      libfdata_list_is_element_set,",
          "128:      [ac_cv_libfdata_dummy=yes],",
          "129:      [ac_cv_libfdata=no])",
          "131:     AC_CHECK_LIB(",
          "132:      fdata,",
          "133:      libfdata_list_get_mapped_offset,",
          "134:      [ac_cv_libfdata_dummy=yes],",
          "135:      [ac_cv_libfdata=no])",
          "136:     AC_CHECK_LIB(",
          "137:      fdata,",
          "138:      libfdata_list_set_mapped_offset,",
          "139:      [ac_cv_libfdata_dummy=yes],",
          "140:      [ac_cv_libfdata=no])",
          "142:     AC_CHECK_LIB(",
          "143:      fdata,",
          "144:      libfdata_list_get_mapped_size_by_index,",
          "145:      [ac_cv_libfdata_dummy=yes],",
          "146:      [ac_cv_libfdata=no])",
          "147:     AC_CHECK_LIB(",
          "148:      fdata,",
          "149:      libfdata_list_set_mapped_size_by_index,",
          "150:      [ac_cv_libfdata_dummy=yes],",
          "151:      [ac_cv_libfdata=no])",
          "152:     AC_CHECK_LIB(",
          "153:      fdata,",
          "154:      libfdata_list_get_element_by_index_with_mapped_size,",
          "155:      [ac_cv_libfdata_dummy=yes],",
          "156:      [ac_cv_libfdata=no])",
          "157:     AC_CHECK_LIB(",
          "158:      fdata,",
          "159:      libfdata_list_set_element_by_index_with_mapped_size,",
          "160:      [ac_cv_libfdata_dummy=yes],",
          "161:      [ac_cv_libfdata=no])",
          "162:     AC_CHECK_LIB(",
          "163:      fdata,",
          "164:      libfdata_list_append_element_with_mapped_size,",
          "165:      [ac_cv_libfdata_dummy=yes],",
          "166:      [ac_cv_libfdata=no])",
          "168:     AC_CHECK_LIB(",
          "169:      fdata,",
          "170:      libfdata_list_get_element_index_at_offset,",
          "171:      [ac_cv_libfdata_dummy=yes],",
          "172:      [ac_cv_libfdata=no])",
          "173:     AC_CHECK_LIB(",
          "174:      fdata,",
          "175:      libfdata_list_get_list_element_at_offset,",
          "176:      [ac_cv_libfdata_dummy=yes],",
          "177:      [ac_cv_libfdata=no])",
          "178:     AC_CHECK_LIB(",
          "179:      fdata,",
          "180:      libfdata_list_get_element_at_offset,",
          "181:      [ac_cv_libfdata_dummy=yes],",
          "182:      [ac_cv_libfdata=no])",
          "184:     AC_CHECK_LIB(",
          "185:      fdata,",
          "186:      libfdata_list_cache_element_value,",
          "187:      [ac_cv_libfdata_dummy=yes],",
          "188:      [ac_cv_libfdata=no])",
          "189:     AC_CHECK_LIB(",
          "190:      fdata,",
          "191:      libfdata_list_get_element_value_by_index,",
          "192:      [ac_cv_libfdata_dummy=yes],",
          "193:      [ac_cv_libfdata=no])",
          "194:     AC_CHECK_LIB(",
          "195:      fdata,",
          "196:      libfdata_list_get_element_value_at_offset,",
          "197:      [ac_cv_libfdata_dummy=yes],",
          "198:      [ac_cv_libfdata=no])",
          "199:     AC_CHECK_LIB(",
          "200:      fdata,",
          "201:      libfdata_list_set_element_value_by_index,",
          "202:      [ac_cv_libfdata_dummy=yes],",
          "203:      [ac_cv_libfdata=no])",
          "205:     AC_CHECK_LIB(",
          "206:      fdata,",
          "207:      libfdata_list_set_element_value_at_offset,",
          "208:      [ac_cv_libfdata_dummy=yes],",
          "209:      [ac_cv_libfdata=no])",
          "210:     AC_CHECK_LIB(",
          "211:      fdata,",
          "212:      libfdata_list_get_size,",
          "213:      [ac_cv_libfdata_dummy=yes],",
          "214:      [ac_cv_libfdata=no])",
          "216:     AC_CHECK_LIB(",
          "217:      fdata,",
          "218:      libfdata_list_element_get_mapped_size,",
          "219:      [ac_cv_libfdata_dummy=yes],",
          "220:      [ac_cv_libfdata=no])",
          "221:     AC_CHECK_LIB(",
          "222:      fdata,",
          "223:      libfdata_list_element_set_mapped_size,",
          "224:      [ac_cv_libfdata_dummy=yes],",
          "225:      [ac_cv_libfdata=no])",
          "226:     AC_CHECK_LIB(",
          "227:      fdata,",
          "228:      libfdata_list_element_get_element_value,",
          "229:      [ac_cv_libfdata_dummy=yes],",
          "230:      [ac_cv_libfdata=no])",
          "231:     AC_CHECK_LIB(",
          "232:      fdata,",
          "233:      libfdata_list_element_set_element_value,",
          "234:      [ac_cv_libfdata_dummy=yes],",
          "235:      [ac_cv_libfdata=no])",
          "237:     dnl List element functions",
          "238:     AC_CHECK_LIB(",
          "239:      fdata,",
          "240:      libfdata_list_element_get_mapped_size,",
          "241:      [ac_cv_libfdata_dummy=yes],",
          "242:      [ac_cv_libfdata=no])",
          "243:     AC_CHECK_LIB(",
          "244:      fdata,",
          "245:      libfdata_list_element_set_mapped_size,",
          "246:      [ac_cv_libfdata_dummy=yes],",
          "247:      [ac_cv_libfdata=no])",
          "248:     AC_CHECK_LIB(",
          "249:      fdata,",
          "250:      libfdata_list_element_get_element_value,",
          "251:      [ac_cv_libfdata_dummy=yes],",
          "252:      [ac_cv_libfdata=no])",
          "253:     AC_CHECK_LIB(",
          "254:      fdata,",
          "255:      libfdata_list_element_set_element_value,",
          "256:      [ac_cv_libfdata_dummy=yes],",
          "257:      [ac_cv_libfdata=no])",
          "259:     dnl Range list functions",
          "260:     dnl TODO: add functions",
          "262:     dnl Stream functions",
          "263:     AC_CHECK_LIB(",
          "264:      fdata,",
          "265:      libfdata_stream_initialize,",
          "266:      [ac_cv_libfdata_dummy=yes],",
          "267:      [ac_cv_libfdata=no])",
          "268:     AC_CHECK_LIB(",
          "269:      fdata,",
          "270:      libfdata_stream_free,",
          "271:      [ac_cv_libfdata_dummy=yes],",
          "272:      [ac_cv_libfdata=no])",
          "273:     AC_CHECK_LIB(",
          "274:      fdata,",
          "275:      libfdata_stream_clone,",
          "276:      [ac_cv_libfdata_dummy=yes],",
          "277:      [ac_cv_libfdata=no])",
          "279:     AC_CHECK_LIB(",
          "280:      fdata,",
          "281:      libfdata_stream_empty,",
          "282:      [ac_cv_libfdata_dummy=yes],",
          "283:      [ac_cv_libfdata=no])",
          "284:     AC_CHECK_LIB(",
          "285:      fdata,",
          "286:      libfdata_stream_resize,",
          "287:      [ac_cv_libfdata_dummy=yes],",
          "288:      [ac_cv_libfdata=no])",
          "289:     AC_CHECK_LIB(",
          "290:      fdata,",
          "291:      libfdata_stream_reverse,",
          "292:      [ac_cv_libfdata_dummy=yes],",
          "293:      [ac_cv_libfdata=no])",
          "295:     AC_CHECK_LIB(",
          "296:      fdata,",
          "297:      libfdata_stream_get_number_of_segments,",
          "298:      [ac_cv_libfdata_dummy=yes],",
          "299:      [ac_cv_libfdata=no])",
          "300:     AC_CHECK_LIB(",
          "301:      fdata,",
          "302:      libfdata_stream_get_segment_by_index,",
          "303:      [ac_cv_libfdata_dummy=yes],",
          "304:      [ac_cv_libfdata=no])",
          "305:     AC_CHECK_LIB(",
          "306:      fdata,",
          "307:      libfdata_stream_set_segment_by_index,",
          "308:      [ac_cv_libfdata_dummy=yes],",
          "309:      [ac_cv_libfdata=no])",
          "310:     AC_CHECK_LIB(",
          "311:      fdata,",
          "312:      libfdata_stream_prepend_segment,",
          "313:      [ac_cv_libfdata_dummy=yes],",
          "314:      [ac_cv_libfdata=no])",
          "315:     AC_CHECK_LIB(",
          "316:      fdata,",
          "317:      libfdata_stream_append_segment,",
          "318:      [ac_cv_libfdata_dummy=yes],",
          "319:      [ac_cv_libfdata=no])",
          "320:     AC_CHECK_LIB(",
          "321:      fdata,",
          "322:      libfdata_stream_set_mapped_size,",
          "323:      [ac_cv_libfdata_dummy=yes],",
          "324:      [ac_cv_libfdata=no])",
          "326:     AC_CHECK_LIB(",
          "327:      fdata,",
          "328:      libfdata_stream_get_segment_mapped_range,",
          "329:      [ac_cv_libfdata_dummy=yes],",
          "330:      [ac_cv_libfdata=no])",
          "331:     AC_CHECK_LIB(",
          "332:      fdata,",
          "333:      libfdata_stream_get_segment_index_at_offset,",
          "334:      [ac_cv_libfdata_dummy=yes],",
          "335:      [ac_cv_libfdata=no])",
          "336:     AC_CHECK_LIB(",
          "337:      fdata,",
          "338:      libfdata_stream_get_segment_at_offset,",
          "339:      [ac_cv_libfdata_dummy=yes],",
          "340:      [ac_cv_libfdata=no])",
          "342:     AC_CHECK_LIB(",
          "343:      fdata,",
          "344:      libfdata_stream_read_buffer,",
          "345:      [ac_cv_libfdata_dummy=yes],",
          "346:      [ac_cv_libfdata=no])",
          "347:     AC_CHECK_LIB(",
          "348:      fdata,",
          "349:      libfdata_stream_read_buffer_at_offset,",
          "350:      [ac_cv_libfdata_dummy=yes],",
          "351:      [ac_cv_libfdata=no])",
          "352:     AC_CHECK_LIB(",
          "353:      fdata,",
          "354:      libfdata_stream_write_buffer,",
          "355:      [ac_cv_libfdata_dummy=yes],",
          "356:      [ac_cv_libfdata=no])",
          "357:     AC_CHECK_LIB(",
          "358:      fdata,",
          "359:      libfdata_stream_seek_offset,",
          "360:      [ac_cv_libfdata_dummy=yes],",
          "361:      [ac_cv_libfdata=no])",
          "362:     AC_CHECK_LIB(",
          "363:      fdata,",
          "364:      libfdata_stream_get_offset,",
          "365:      [ac_cv_libfdata_dummy=yes],",
          "366:      [ac_cv_libfdata=no])",
          "367:     AC_CHECK_LIB(",
          "368:      fdata,",
          "369:      libfdata_stream_get_size,",
          "370:      [ac_cv_libfdata_dummy=yes],",
          "371:      [ac_cv_libfdata=no])",
          "373:     dnl Tree list functions",
          "374:     dnl TODO: add functions",
          "376:     dnl Vector list functions",
          "377:     dnl TODO: add functions",
          "379:     ac_cv_libfdata_LIBADD=\"-lfdata\"",
          "381:    ])",
          "382:   ])",
          "384:  AS_IF(",
          "385:   [test \"x$ac_cv_libfdata\" = xyes],",
          "386:   [AC_DEFINE(",
          "387:    [HAVE_LIBFDATA],",
          "388:    [1],",
          "389:    [Define to 1 if you have the `fdata' library (-lfdata).])",
          "392:  AS_IF(",
          "393:   [test \"x$ac_cv_libfdata\" = xyes],",
          "394:   [AC_SUBST(",
          "395:    [HAVE_LIBFDATA],",
          "396:    [1]) ],",
          "397:   [AC_SUBST(",
          "398:    [HAVE_LIBFDATA],",
          "399:    [0])",
          "401:  ])",
          "405:  [AX_COMMON_ARG_WITH(",
          "406:   [libfdata],",
          "407:   [libfdata],",
          "408:   [search for libfdata in includedir and libdir or in the specified DIR, or no if to use local version],",
          "409:   [auto-detect],",
          "410:   [DIR])",
          "412:  dnl Check for a shared library version",
          "413:  AX_LIBFDATA_CHECK_LIB",
          "415:  dnl Check if the dependencies for the local library version",
          "416:  AS_IF(",
          "417:   [test \"x$ac_cv_libfdata\" != xyes],",
          "418:   [ac_cv_libfdata_CPPFLAGS=\"-I../libfdata\";",
          "419:   ac_cv_libfdata_LIBADD=\"../libfdata/libfdata.la\";",
          "421:   ac_cv_libfdata=local",
          "423:   AC_DEFINE(",
          "424:    [HAVE_LOCAL_LIBFDATA],",
          "425:    [1],",
          "426:    [Define to 1 if the local version of libfdata is used.])",
          "427:   AC_SUBST(",
          "428:    [HAVE_LOCAL_LIBFDATA],",
          "429:    [1])",
          "430:   ])",
          "432:  AM_CONDITIONAL(",
          "433:   [HAVE_LOCAL_LIBFDATA],",
          "434:   [test \"x$ac_cv_libfdata\" = xlocal])",
          "435:  AS_IF(",
          "436:   [test \"x$ac_cv_libfdata_CPPFLAGS\" != \"x\"],",
          "437:   [AC_SUBST(",
          "438:    [LIBFDATA_CPPFLAGS],",
          "439:    [$ac_cv_libfdata_CPPFLAGS])",
          "440:   ])",
          "441:  AS_IF(",
          "442:   [test \"x$ac_cv_libfdata_LIBADD\" != \"x\"],",
          "443:   [AC_SUBST(",
          "444:    [LIBFDATA_LIBADD],",
          "445:    [$ac_cv_libfdata_LIBADD])",
          "446:   ])",
          "448:  AS_IF(",
          "449:   [test \"x$ac_cv_libfdata\" = xyes],",
          "450:   [AC_SUBST(",
          "451:    [ax_libfdata_pc_libs_private],",
          "452:    [-lfdata])",
          "453:   ])",
          "455:  AS_IF(",
          "456:   [test \"x$ac_cv_libfdata\" = xyes],",
          "457:   [AC_SUBST(",
          "458:    [ax_libfdata_spec_requires],",
          "459:    [libfdata])",
          "460:   AC_SUBST(",
          "461:    [ax_libfdata_spec_build_requires],",
          "462:    [libfdata-devel])",
          "464:  ])",
          "",
          "[Added Lines]",
          "3: dnl Version: 20170905",
          "8:   [dnl Check if parameters were provided",
          "10:     [test \"x$ac_cv_with_libfdata\" != x && test \"x$ac_cv_with_libfdata\" != xno && test \"x$ac_cv_with_libfdata\" != xauto-detect],",
          "11:     [AS_IF(",
          "12:       [test -d \"$ac_cv_with_libfdata\"],",
          "13:       [CFLAGS=\"$CFLAGS -I${ac_cv_with_libfdata}/include\"",
          "14:       LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libfdata}/lib\"],",
          "15:       [AC_MSG_WARN([no such directory: $ac_cv_with_libfdata])",
          "16:       ])",
          "17:     ])",
          "20:     [test \"x$ac_cv_with_libfdata\" = xno],",
          "22:     [dnl Check for a pkg-config file",
          "23:     AS_IF(",
          "24:       [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:       [PKG_CHECK_MODULES(",
          "26:         [libfdata],",
          "27:         [libfdata >= 20160325],",
          "28:         [ac_cv_libfdata=yes],",
          "29:         [ac_cv_libfdata=no])",
          "30:       ])",
          "32:     AS_IF(",
          "33:       [test \"x$ac_cv_libfdata\" = xyes],",
          "34:       [ac_cv_libfdata_CPPFLAGS=\"$pkg_cv_libfdata_CFLAGS\"",
          "35:       ac_cv_libfdata_LIBADD=\"$pkg_cv_libfdata_LIBS\"],",
          "36:       [dnl Check for headers",
          "37:       AC_CHECK_HEADERS([libfdata.h])",
          "39:       AS_IF(",
          "40:         [test \"x$ac_cv_header_libfdata_h\" = xno],",
          "41:         [ac_cv_libfdata=no],",
          "42:         [dnl Check for the individual functions",
          "43:         ac_cv_libfdata=yes",
          "45:         AC_CHECK_LIB(",
          "46:           fdata,",
          "47:           libfdata_get_version,",
          "48:           [ac_cv_libfdata_dummy=yes],",
          "49:           [ac_cv_libfdata=no])",
          "51:         dnl Area functions",
          "52:         dnl TODO: add functions",
          "54:         dnl Balanced tree functions",
          "55:         dnl TODO: add functions",
          "57:         dnl List functions",
          "58:         AC_CHECK_LIB(",
          "59:           fdata,",
          "60:           libfdata_list_initialize,",
          "61:           [ac_cv_libfdata_dummy=yes],",
          "62:           [ac_cv_libfdata=no])",
          "63:         AC_CHECK_LIB(",
          "64:           fdata,",
          "65:           libfdata_list_free,",
          "66:           [ac_cv_libfdata_dummy=yes],",
          "67:           [ac_cv_libfdata=no])",
          "68:         AC_CHECK_LIB(",
          "69:           fdata,",
          "70:           libfdata_list_clone,",
          "71:           [ac_cv_libfdata_dummy=yes],",
          "72:           [ac_cv_libfdata=no])",
          "73:         AC_CHECK_LIB(",
          "74:           fdata,",
          "75:           libfdata_list_empty,",
          "76:           [ac_cv_libfdata_dummy=yes],",
          "77:           [ac_cv_libfdata=no])",
          "78:         AC_CHECK_LIB(",
          "79:           fdata,",
          "80:           libfdata_list_resize,",
          "81:           [ac_cv_libfdata_dummy=yes],",
          "82:           [ac_cv_libfdata=no])",
          "84:         AC_CHECK_LIB(",
          "85:           fdata,",
          "86:           libfdata_list_reverse,",
          "87:           [ac_cv_libfdata_dummy=yes],",
          "88:           [ac_cv_libfdata=no])",
          "90:         AC_CHECK_LIB(",
          "91:           fdata,",
          "92:           libfdata_list_get_number_of_elements,",
          "93:           [ac_cv_libfdata_dummy=yes],",
          "94:           [ac_cv_libfdata=no])",
          "95:         AC_CHECK_LIB(",
          "96:           fdata,",
          "97:           libfdata_list_get_list_element_by_index,",
          "98:           [ac_cv_libfdata_dummy=yes],",
          "99:           [ac_cv_libfdata=no])",
          "100:         AC_CHECK_LIB(",
          "101:           fdata,",
          "102:           libfdata_list_get_element_by_index,",
          "103:           [ac_cv_libfdata_dummy=yes],",
          "104:           [ac_cv_libfdata=no])",
          "105:         AC_CHECK_LIB(",
          "106:           fdata,",
          "107:           libfdata_list_set_element_by_index,",
          "108:           [ac_cv_libfdata_dummy=yes],",
          "109:           [ac_cv_libfdata=no])",
          "110:         AC_CHECK_LIB(",
          "111:           fdata,",
          "112:           libfdata_list_prepend_element,",
          "113:           [ac_cv_libfdata_dummy=yes],",
          "114:           [ac_cv_libfdata=no])",
          "115:         AC_CHECK_LIB(",
          "116:           fdata,",
          "117:           libfdata_list_append_element,",
          "118:           [ac_cv_libfdata_dummy=yes],",
          "119:           [ac_cv_libfdata=no])",
          "120:         AC_CHECK_LIB(",
          "121:           fdata,",
          "122:           libfdata_list_append_list,",
          "123:           [ac_cv_libfdata_dummy=yes],",
          "124:           [ac_cv_libfdata=no])",
          "125:         AC_CHECK_LIB(",
          "126:           fdata,",
          "127:           libfdata_list_is_element_set,",
          "128:           [ac_cv_libfdata_dummy=yes],",
          "129:           [ac_cv_libfdata=no])",
          "131:         AC_CHECK_LIB(",
          "132:           fdata,",
          "133:           libfdata_list_get_mapped_offset,",
          "134:           [ac_cv_libfdata_dummy=yes],",
          "135:           [ac_cv_libfdata=no])",
          "136:         AC_CHECK_LIB(",
          "137:           fdata,",
          "138:           libfdata_list_set_mapped_offset,",
          "139:           [ac_cv_libfdata_dummy=yes],",
          "140:           [ac_cv_libfdata=no])",
          "142:         AC_CHECK_LIB(",
          "143:           fdata,",
          "144:           libfdata_list_get_mapped_size_by_index,",
          "145:           [ac_cv_libfdata_dummy=yes],",
          "146:           [ac_cv_libfdata=no])",
          "147:         AC_CHECK_LIB(",
          "148:           fdata,",
          "149:           libfdata_list_set_mapped_size_by_index,",
          "150:           [ac_cv_libfdata_dummy=yes],",
          "151:           [ac_cv_libfdata=no])",
          "152:         AC_CHECK_LIB(",
          "153:           fdata,",
          "154:           libfdata_list_get_element_by_index_with_mapped_size,",
          "155:           [ac_cv_libfdata_dummy=yes],",
          "156:           [ac_cv_libfdata=no])",
          "157:         AC_CHECK_LIB(",
          "158:           fdata,",
          "159:           libfdata_list_set_element_by_index_with_mapped_size,",
          "160:           [ac_cv_libfdata_dummy=yes],",
          "161:           [ac_cv_libfdata=no])",
          "162:         AC_CHECK_LIB(",
          "163:           fdata,",
          "164:           libfdata_list_append_element_with_mapped_size,",
          "165:           [ac_cv_libfdata_dummy=yes],",
          "166:           [ac_cv_libfdata=no])",
          "168:         AC_CHECK_LIB(",
          "169:           fdata,",
          "170:           libfdata_list_get_element_index_at_offset,",
          "171:           [ac_cv_libfdata_dummy=yes],",
          "172:           [ac_cv_libfdata=no])",
          "173:         AC_CHECK_LIB(",
          "174:           fdata,",
          "175:           libfdata_list_get_list_element_at_offset,",
          "176:           [ac_cv_libfdata_dummy=yes],",
          "177:           [ac_cv_libfdata=no])",
          "178:         AC_CHECK_LIB(",
          "179:           fdata,",
          "180:           libfdata_list_get_element_at_offset,",
          "181:           [ac_cv_libfdata_dummy=yes],",
          "182:           [ac_cv_libfdata=no])",
          "184:         AC_CHECK_LIB(",
          "185:           fdata,",
          "186:           libfdata_list_cache_element_value,",
          "187:           [ac_cv_libfdata_dummy=yes],",
          "188:           [ac_cv_libfdata=no])",
          "189:         AC_CHECK_LIB(",
          "190:           fdata,",
          "191:           libfdata_list_get_element_value_by_index,",
          "192:           [ac_cv_libfdata_dummy=yes],",
          "193:           [ac_cv_libfdata=no])",
          "194:         AC_CHECK_LIB(",
          "195:           fdata,",
          "196:           libfdata_list_get_element_value_at_offset,",
          "197:           [ac_cv_libfdata_dummy=yes],",
          "198:           [ac_cv_libfdata=no])",
          "199:         AC_CHECK_LIB(",
          "200:           fdata,",
          "201:           libfdata_list_set_element_value_by_index,",
          "202:           [ac_cv_libfdata_dummy=yes],",
          "203:           [ac_cv_libfdata=no])",
          "205:         AC_CHECK_LIB(",
          "206:           fdata,",
          "207:           libfdata_list_set_element_value_at_offset,",
          "208:           [ac_cv_libfdata_dummy=yes],",
          "209:           [ac_cv_libfdata=no])",
          "210:         AC_CHECK_LIB(",
          "211:           fdata,",
          "212:           libfdata_list_get_size,",
          "213:           [ac_cv_libfdata_dummy=yes],",
          "214:           [ac_cv_libfdata=no])",
          "216:         AC_CHECK_LIB(",
          "217:           fdata,",
          "218:           libfdata_list_element_get_mapped_size,",
          "219:           [ac_cv_libfdata_dummy=yes],",
          "220:           [ac_cv_libfdata=no])",
          "221:         AC_CHECK_LIB(",
          "222:           fdata,",
          "223:           libfdata_list_element_set_mapped_size,",
          "224:           [ac_cv_libfdata_dummy=yes],",
          "225:           [ac_cv_libfdata=no])",
          "226:         AC_CHECK_LIB(",
          "227:           fdata,",
          "228:           libfdata_list_element_get_element_value,",
          "229:           [ac_cv_libfdata_dummy=yes],",
          "230:           [ac_cv_libfdata=no])",
          "231:         AC_CHECK_LIB(",
          "232:           fdata,",
          "233:           libfdata_list_element_set_element_value,",
          "234:           [ac_cv_libfdata_dummy=yes],",
          "235:           [ac_cv_libfdata=no])",
          "237:         dnl List element functions",
          "238:         AC_CHECK_LIB(",
          "239:           fdata,",
          "240:           libfdata_list_element_get_mapped_size,",
          "241:           [ac_cv_libfdata_dummy=yes],",
          "242:           [ac_cv_libfdata=no])",
          "243:         AC_CHECK_LIB(",
          "244:           fdata,",
          "245:           libfdata_list_element_set_mapped_size,",
          "246:           [ac_cv_libfdata_dummy=yes],",
          "247:           [ac_cv_libfdata=no])",
          "248:         AC_CHECK_LIB(",
          "249:           fdata,",
          "250:           libfdata_list_element_get_element_value,",
          "251:           [ac_cv_libfdata_dummy=yes],",
          "252:           [ac_cv_libfdata=no])",
          "253:         AC_CHECK_LIB(",
          "254:           fdata,",
          "255:           libfdata_list_element_set_element_value,",
          "256:           [ac_cv_libfdata_dummy=yes],",
          "257:           [ac_cv_libfdata=no])",
          "259:         dnl Range list functions",
          "260:         dnl TODO: add functions",
          "262:         dnl Stream functions",
          "263:         AC_CHECK_LIB(",
          "264:           fdata,",
          "265:           libfdata_stream_initialize,",
          "266:           [ac_cv_libfdata_dummy=yes],",
          "267:           [ac_cv_libfdata=no])",
          "268:         AC_CHECK_LIB(",
          "269:           fdata,",
          "270:           libfdata_stream_free,",
          "271:           [ac_cv_libfdata_dummy=yes],",
          "272:           [ac_cv_libfdata=no])",
          "273:         AC_CHECK_LIB(",
          "274:           fdata,",
          "275:           libfdata_stream_clone,",
          "276:           [ac_cv_libfdata_dummy=yes],",
          "277:           [ac_cv_libfdata=no])",
          "279:         AC_CHECK_LIB(",
          "280:           fdata,",
          "281:           libfdata_stream_empty,",
          "282:           [ac_cv_libfdata_dummy=yes],",
          "283:           [ac_cv_libfdata=no])",
          "284:         AC_CHECK_LIB(",
          "285:           fdata,",
          "286:           libfdata_stream_resize,",
          "287:           [ac_cv_libfdata_dummy=yes],",
          "288:           [ac_cv_libfdata=no])",
          "289:         AC_CHECK_LIB(",
          "290:           fdata,",
          "291:           libfdata_stream_reverse,",
          "292:           [ac_cv_libfdata_dummy=yes],",
          "293:           [ac_cv_libfdata=no])",
          "295:         AC_CHECK_LIB(",
          "296:           fdata,",
          "297:           libfdata_stream_get_number_of_segments,",
          "298:           [ac_cv_libfdata_dummy=yes],",
          "299:           [ac_cv_libfdata=no])",
          "300:         AC_CHECK_LIB(",
          "301:           fdata,",
          "302:           libfdata_stream_get_segment_by_index,",
          "303:           [ac_cv_libfdata_dummy=yes],",
          "304:           [ac_cv_libfdata=no])",
          "305:         AC_CHECK_LIB(",
          "306:           fdata,",
          "307:           libfdata_stream_set_segment_by_index,",
          "308:           [ac_cv_libfdata_dummy=yes],",
          "309:           [ac_cv_libfdata=no])",
          "310:         AC_CHECK_LIB(",
          "311:           fdata,",
          "312:           libfdata_stream_prepend_segment,",
          "313:           [ac_cv_libfdata_dummy=yes],",
          "314:           [ac_cv_libfdata=no])",
          "315:         AC_CHECK_LIB(",
          "316:           fdata,",
          "317:           libfdata_stream_append_segment,",
          "318:           [ac_cv_libfdata_dummy=yes],",
          "319:           [ac_cv_libfdata=no])",
          "320:         AC_CHECK_LIB(",
          "321:           fdata,",
          "322:           libfdata_stream_set_mapped_size,",
          "323:           [ac_cv_libfdata_dummy=yes],",
          "324:           [ac_cv_libfdata=no])",
          "326:         AC_CHECK_LIB(",
          "327:           fdata,",
          "328:           libfdata_stream_get_segment_mapped_range,",
          "329:           [ac_cv_libfdata_dummy=yes],",
          "330:           [ac_cv_libfdata=no])",
          "331:         AC_CHECK_LIB(",
          "332:           fdata,",
          "333:           libfdata_stream_get_segment_index_at_offset,",
          "334:           [ac_cv_libfdata_dummy=yes],",
          "335:           [ac_cv_libfdata=no])",
          "336:         AC_CHECK_LIB(",
          "337:           fdata,",
          "338:           libfdata_stream_get_segment_at_offset,",
          "339:           [ac_cv_libfdata_dummy=yes],",
          "340:           [ac_cv_libfdata=no])",
          "342:         AC_CHECK_LIB(",
          "343:           fdata,",
          "344:           libfdata_stream_read_buffer,",
          "345:           [ac_cv_libfdata_dummy=yes],",
          "346:           [ac_cv_libfdata=no])",
          "347:         AC_CHECK_LIB(",
          "348:           fdata,",
          "349:           libfdata_stream_read_buffer_at_offset,",
          "350:           [ac_cv_libfdata_dummy=yes],",
          "351:           [ac_cv_libfdata=no])",
          "352:         AC_CHECK_LIB(",
          "353:           fdata,",
          "354:           libfdata_stream_write_buffer,",
          "355:           [ac_cv_libfdata_dummy=yes],",
          "356:           [ac_cv_libfdata=no])",
          "357:         AC_CHECK_LIB(",
          "358:           fdata,",
          "359:           libfdata_stream_seek_offset,",
          "360:           [ac_cv_libfdata_dummy=yes],",
          "361:           [ac_cv_libfdata=no])",
          "362:         AC_CHECK_LIB(",
          "363:           fdata,",
          "364:           libfdata_stream_get_offset,",
          "365:           [ac_cv_libfdata_dummy=yes],",
          "366:           [ac_cv_libfdata=no])",
          "367:         AC_CHECK_LIB(",
          "368:           fdata,",
          "369:           libfdata_stream_get_size,",
          "370:           [ac_cv_libfdata_dummy=yes],",
          "371:           [ac_cv_libfdata=no])",
          "373:         dnl Tree list functions",
          "374:         dnl TODO: add functions",
          "376:         dnl Vector list functions",
          "377:         dnl TODO: add functions",
          "379:         ac_cv_libfdata_LIBADD=\"-lfdata\"",
          "380:         ])",
          "381:       ])",
          "382:     ])",
          "384:   AS_IF(",
          "385:     [test \"x$ac_cv_libfdata\" = xyes],",
          "386:     [AC_DEFINE(",
          "387:       [HAVE_LIBFDATA],",
          "388:       [1],",
          "389:       [Define to 1 if you have the `fdata' library (-lfdata).])",
          "392:   AS_IF(",
          "393:     [test \"x$ac_cv_libfdata\" = xyes],",
          "394:     [AC_SUBST(",
          "395:       [HAVE_LIBFDATA],",
          "396:       [1]) ],",
          "397:     [AC_SUBST(",
          "398:       [HAVE_LIBFDATA],",
          "399:       [0])",
          "400:     ])",
          "403: dnl Function to detect if libfdata dependencies are available",
          "404: AC_DEFUN([AX_LIBFDATA_CHECK_LOCAL],",
          "405:   [dnl No additional checks.",
          "407:   ac_cv_libfdata_CPPFLAGS=\"-I../libfdata\";",
          "408:   ac_cv_libfdata_LIBADD=\"../libfdata/libfdata.la\";",
          "410:   ac_cv_libfdata=local",
          "415:   [AX_COMMON_ARG_WITH(",
          "416:     [libfdata],",
          "417:     [libfdata],",
          "418:     [search for libfdata in includedir and libdir or in the specified DIR, or no if to use local version],",
          "419:     [auto-detect],",
          "420:     [DIR])",
          "422:   dnl Check for a shared library version",
          "423:   AX_LIBFDATA_CHECK_LIB",
          "425:   dnl Check if the dependencies for the local library version",
          "426:   AS_IF(",
          "427:     [test \"x$ac_cv_libfdata\" != xyes],",
          "428:     [AX_LIBFDATA_CHECK_LOCAL",
          "430:     AC_DEFINE(",
          "431:       [HAVE_LOCAL_LIBFDATA],",
          "432:       [1],",
          "433:       [Define to 1 if the local version of libfdata is used.])",
          "434:     AC_SUBST(",
          "435:       [HAVE_LOCAL_LIBFDATA],",
          "436:       [1])",
          "437:     ])",
          "439:   AM_CONDITIONAL(",
          "440:     [HAVE_LOCAL_LIBFDATA],",
          "441:     [test \"x$ac_cv_libfdata\" = xlocal])",
          "442:   AS_IF(",
          "443:     [test \"x$ac_cv_libfdata_CPPFLAGS\" != \"x\"],",
          "444:     [AC_SUBST(",
          "445:       [LIBFDATA_CPPFLAGS],",
          "446:       [$ac_cv_libfdata_CPPFLAGS])",
          "447:     ])",
          "448:   AS_IF(",
          "449:     [test \"x$ac_cv_libfdata_LIBADD\" != \"x\"],",
          "450:     [AC_SUBST(",
          "451:       [LIBFDATA_LIBADD],",
          "452:       [$ac_cv_libfdata_LIBADD])",
          "453:     ])",
          "455:   AS_IF(",
          "456:     [test \"x$ac_cv_libfdata\" = xyes],",
          "457:     [AC_SUBST(",
          "458:       [ax_libfdata_pc_libs_private],",
          "459:       [-lfdata])",
          "460:     ])",
          "462:   AS_IF(",
          "463:     [test \"x$ac_cv_libfdata\" = xyes],",
          "464:     [AC_SUBST(",
          "465:       [ax_libfdata_spec_requires],",
          "466:       [libfdata])",
          "467:     AC_SUBST(",
          "468:       [ax_libfdata_spec_build_requires],",
          "469:       [libfdata-devel])",
          "470:     ])",
          "",
          "---------------"
        ],
        "m4/libfdatetime.m4||m4/libfdatetime.m4": [
          "File: m4/libfdatetime.m4 -> m4/libfdatetime.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Functions for libfdatetime",
          "2: dnl",
          "5: dnl Function to detect if libfdatetime is available",
          "6: dnl ac_libfdatetime_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "7: AC_DEFUN([AX_LIBFDATETIME_CHECK_LIB],",
          "23:   AS_IF(",
          "32:   AS_IF(",
          "41:     [ac_cv_libfdatetime=no],",
          "457:   ])",
          "466:   ])",
          "476:   ])",
          "479: dnl Function to detect how to enable libfdatetime",
          "480: AC_DEFUN([AX_LIBFDATETIME_CHECK_ENABLE],",
          "538:   ])",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20160220",
          "8:  [dnl Check if parameters were provided",
          "9:  AS_IF(",
          "10:   [test \"x$ac_cv_with_libfdatetime\" != x && test \"x$ac_cv_with_libfdatetime\" != xno && test \"x$ac_cv_with_libfdatetime\" != xauto-detect],",
          "11:   [AS_IF(",
          "12:    [test -d \"$ac_cv_with_libfdatetime\"],",
          "13:    [CFLAGS=\"$CFLAGS -I${ac_cv_with_libfdatetime}/include\"",
          "14:    LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libfdatetime}/lib\"],",
          "15:    [AC_MSG_WARN([no such directory: $ac_cv_with_libfdatetime])",
          "16:    ])",
          "17:   ])",
          "19:  AS_IF(",
          "20:   [test \"x$ac_cv_with_libfdatetime\" = xno],",
          "21:   [ac_cv_libfdatetime=no],",
          "22:   [dnl Check for a pkg-config file",
          "24:    [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:    [PKG_CHECK_MODULES(",
          "26:     [libfdatetime],",
          "27:     [libfdatetime >= 20160220],",
          "28:     [ac_cv_libfdatetime=yes],",
          "29:     [ac_cv_libfdatetime=no])",
          "30:    ])",
          "33:    [test \"x$ac_cv_libfdatetime\" = xyes],",
          "34:    [ac_cv_libfdatetime_CPPFLAGS=\"$pkg_cv_libfdatetime_CFLAGS\"",
          "35:    ac_cv_libfdatetime_LIBADD=\"$pkg_cv_libfdatetime_LIBS\"],",
          "36:    [dnl Check for headers",
          "37:    AC_CHECK_HEADERS([libfdatetime.h])",
          "39:    AS_IF(",
          "40:     [test \"x$ac_cv_header_libfdatetime_h\" = xno],",
          "42:     [dnl Check for the individual functions",
          "43:     ac_cv_libfdatetime=yes",
          "45:     AC_CHECK_LIB(",
          "46:      fdatetime,",
          "47:      libfdatetime_get_version,",
          "48:      [ac_cv_libfdatetime_dummy=yes],",
          "49:      [ac_cv_libfdatetime=no])",
          "51:     dnl FAT date time functions",
          "52:     AC_CHECK_LIB(",
          "53:      fdatetime,",
          "54:      libfdatetime_fat_date_time_initialize,",
          "55:      [ac_cv_libfdatetime_dummy=yes],",
          "56:      [ac_cv_libfdatetime=no])",
          "57:     AC_CHECK_LIB(",
          "58:      fdatetime,",
          "59:      libfdatetime_fat_date_time_free,",
          "60:      [ac_cv_libfdatetime_dummy=yes],",
          "61:      [ac_cv_libfdatetime=no])",
          "62:     AC_CHECK_LIB(",
          "63:      fdatetime,",
          "64:      libfdatetime_fat_date_time_copy_from_byte_stream,",
          "65:      [ac_cv_libfdatetime_dummy=yes],",
          "66:      [ac_cv_libfdatetime=no])",
          "67:     AC_CHECK_LIB(",
          "68:      fdatetime,",
          "69:      libfdatetime_fat_date_time_copy_from_32bit,",
          "70:      [ac_cv_libfdatetime_dummy=yes],",
          "71:      [ac_cv_libfdatetime=no])",
          "72:     AC_CHECK_LIB(",
          "73:      fdatetime,",
          "74:      libfdatetime_fat_date_time_copy_to_32bit,",
          "75:      [ac_cv_libfdatetime_dummy=yes],",
          "76:      [ac_cv_libfdatetime=no])",
          "77:     AC_CHECK_LIB(",
          "78:      fdatetime,",
          "79:      libfdatetime_fat_date_time_copy_to_utf8_string,",
          "80:      [ac_cv_libfdatetime_dummy=yes],",
          "81:      [ac_cv_libfdatetime=no])",
          "82:     AC_CHECK_LIB(",
          "83:      fdatetime,",
          "84:      libfdatetime_fat_date_time_copy_to_utf8_string_with_index,",
          "85:      [ac_cv_libfdatetime_dummy=yes],",
          "86:      [ac_cv_libfdatetime=no])",
          "87:     AC_CHECK_LIB(",
          "88:      fdatetime,",
          "89:      libfdatetime_fat_date_time_copy_to_utf16_string,",
          "90:      [ac_cv_libfdatetime_dummy=yes],",
          "91:      [ac_cv_libfdatetime=no])",
          "92:     AC_CHECK_LIB(",
          "93:      fdatetime,",
          "94:      libfdatetime_fat_date_time_copy_to_utf16_string_with_index,",
          "95:      [ac_cv_libfdatetime_dummy=yes],",
          "96:      [ac_cv_libfdatetime=no])",
          "97:     AC_CHECK_LIB(",
          "98:      fdatetime,",
          "99:      libfdatetime_fat_date_time_copy_to_utf32_string,",
          "100:      [ac_cv_libfdatetime_dummy=yes],",
          "101:      [ac_cv_libfdatetime=no])",
          "102:     AC_CHECK_LIB(",
          "103:      fdatetime,",
          "104:      libfdatetime_fat_date_time_copy_to_utf32_string_with_index,",
          "105:      [ac_cv_libfdatetime_dummy=yes],",
          "106:      [ac_cv_libfdatetime=no])",
          "108:     dnl FILETIME functions",
          "109:     AC_CHECK_LIB(",
          "110:      fdatetime,",
          "111:      libfdatetime_filetime_initialize,",
          "112:      [ac_cv_libfdatetime_dummy=yes],",
          "113:      [ac_cv_libfdatetime=no])",
          "114:     AC_CHECK_LIB(",
          "115:      fdatetime,",
          "116:      libfdatetime_filetime_free,",
          "117:      [ac_cv_libfdatetime_dummy=yes],",
          "118:      [ac_cv_libfdatetime=no])",
          "119:     AC_CHECK_LIB(",
          "120:      fdatetime,",
          "121:      libfdatetime_filetime_copy_from_byte_stream,",
          "122:      [ac_cv_libfdatetime_dummy=yes],",
          "123:      [ac_cv_libfdatetime=no])",
          "124:     AC_CHECK_LIB(",
          "125:      fdatetime,",
          "126:      libfdatetime_filetime_copy_from_64bit,",
          "127:      [ac_cv_libfdatetime_dummy=yes],",
          "128:      [ac_cv_libfdatetime=no])",
          "129:     AC_CHECK_LIB(",
          "130:      fdatetime,",
          "131:      libfdatetime_filetime_copy_to_64bit,",
          "132:      [ac_cv_libfdatetime_dummy=yes],",
          "133:      [ac_cv_libfdatetime=no])",
          "134:     AC_CHECK_LIB(",
          "135:      fdatetime,",
          "136:      libfdatetime_filetime_copy_to_utf8_string,",
          "137:      [ac_cv_libfdatetime_dummy=yes],",
          "138:      [ac_cv_libfdatetime=no])",
          "139:     AC_CHECK_LIB(",
          "140:      fdatetime,",
          "141:      libfdatetime_filetime_copy_to_utf8_string_with_index,",
          "142:      [ac_cv_libfdatetime_dummy=yes],",
          "143:      [ac_cv_libfdatetime=no])",
          "144:     AC_CHECK_LIB(",
          "145:      fdatetime,",
          "146:      libfdatetime_filetime_copy_to_utf16_string,",
          "147:      [ac_cv_libfdatetime_dummy=yes],",
          "148:      [ac_cv_libfdatetime=no])",
          "149:     AC_CHECK_LIB(",
          "150:      fdatetime,",
          "151:      libfdatetime_filetime_copy_to_utf16_string_with_index,",
          "152:      [ac_cv_libfdatetime_dummy=yes],",
          "153:      [ac_cv_libfdatetime=no])",
          "154:     AC_CHECK_LIB(",
          "155:      fdatetime,",
          "156:      libfdatetime_filetime_copy_to_utf32_string,",
          "157:      [ac_cv_libfdatetime_dummy=yes],",
          "158:      [ac_cv_libfdatetime=no])",
          "159:     AC_CHECK_LIB(",
          "160:      fdatetime,",
          "161:      libfdatetime_filetime_copy_to_utf32_string_with_index,",
          "162:      [ac_cv_libfdatetime_dummy=yes],",
          "163:      [ac_cv_libfdatetime=no])",
          "164:     AC_CHECK_LIB(",
          "165:      fdatetime,",
          "166:      libfdatetime_filetime_add,",
          "167:      [ac_cv_libfdatetime_dummy=yes],",
          "168:      [ac_cv_libfdatetime=no])",
          "170:     dnl Floatingtime functions",
          "171:     AC_CHECK_LIB(",
          "172:      fdatetime,",
          "173:      libfdatetime_floatingtime_initialize,",
          "174:      [ac_cv_libfdatetime_dummy=yes],",
          "175:      [ac_cv_libfdatetime=no])",
          "176:     AC_CHECK_LIB(",
          "177:      fdatetime,",
          "178:      libfdatetime_floatingtime_free,",
          "179:      [ac_cv_libfdatetime_dummy=yes],",
          "180:      [ac_cv_libfdatetime=no])",
          "181:     AC_CHECK_LIB(",
          "182:      fdatetime,",
          "183:      libfdatetime_floatingtime_copy_from_byte_stream,",
          "184:      [ac_cv_libfdatetime_dummy=yes],",
          "185:      [ac_cv_libfdatetime=no])",
          "186:     AC_CHECK_LIB(",
          "187:      fdatetime,",
          "188:      libfdatetime_floatingtime_copy_from_64bit,",
          "189:      [ac_cv_libfdatetime_dummy=yes],",
          "190:      [ac_cv_libfdatetime=no])",
          "191:     AC_CHECK_LIB(",
          "192:      fdatetime,",
          "193:      libfdatetime_floatingtime_copy_to_64bit,",
          "194:      [ac_cv_libfdatetime_dummy=yes],",
          "195:      [ac_cv_libfdatetime=no])",
          "196:     AC_CHECK_LIB(",
          "197:      fdatetime,",
          "198:      libfdatetime_floatingtime_copy_to_utf8_string,",
          "199:      [ac_cv_libfdatetime_dummy=yes],",
          "200:      [ac_cv_libfdatetime=no])",
          "201:     AC_CHECK_LIB(",
          "202:      fdatetime,",
          "203:      libfdatetime_floatingtime_copy_to_utf8_string_with_index,",
          "204:      [ac_cv_libfdatetime_dummy=yes],",
          "205:      [ac_cv_libfdatetime=no])",
          "206:     AC_CHECK_LIB(",
          "207:      fdatetime,",
          "208:      libfdatetime_floatingtime_copy_to_utf16_string,",
          "209:      [ac_cv_libfdatetime_dummy=yes],",
          "210:      [ac_cv_libfdatetime=no])",
          "211:     AC_CHECK_LIB(",
          "212:      fdatetime,",
          "213:      libfdatetime_floatingtime_copy_to_utf16_string_with_index,",
          "214:      [ac_cv_libfdatetime_dummy=yes],",
          "215:      [ac_cv_libfdatetime=no])",
          "216:     AC_CHECK_LIB(",
          "217:      fdatetime,",
          "218:      libfdatetime_floatingtime_copy_to_utf32_string,",
          "219:      [ac_cv_libfdatetime_dummy=yes],",
          "220:      [ac_cv_libfdatetime=no])",
          "221:     AC_CHECK_LIB(",
          "222:      fdatetime,",
          "223:      libfdatetime_floatingtime_copy_to_utf32_string_with_index,",
          "224:      [ac_cv_libfdatetime_dummy=yes],",
          "225:      [ac_cv_libfdatetime=no])",
          "227:     dnl HFS time functions",
          "228:     AC_CHECK_LIB(",
          "229:      fdatetime,",
          "230:      libfdatetime_hfs_time_initialize,",
          "231:      [ac_cv_libfdatetime_dummy=yes],",
          "232:      [ac_cv_libfdatetime=no])",
          "233:     AC_CHECK_LIB(",
          "234:      fdatetime,",
          "235:      libfdatetime_hfs_time_free,",
          "236:      [ac_cv_libfdatetime_dummy=yes],",
          "237:      [ac_cv_libfdatetime=no])",
          "238:     AC_CHECK_LIB(",
          "239:      fdatetime,",
          "240:      libfdatetime_hfs_time_copy_from_byte_stream,",
          "241:      [ac_cv_libfdatetime_dummy=yes],",
          "242:      [ac_cv_libfdatetime=no])",
          "243:     AC_CHECK_LIB(",
          "244:      fdatetime,",
          "245:      libfdatetime_hfs_time_copy_from_32bit,",
          "246:      [ac_cv_libfdatetime_dummy=yes],",
          "247:      [ac_cv_libfdatetime=no])",
          "248:     AC_CHECK_LIB(",
          "249:      fdatetime,",
          "250:      libfdatetime_hfs_time_copy_to_32bit,",
          "251:      [ac_cv_libfdatetime_dummy=yes],",
          "252:      [ac_cv_libfdatetime=no])",
          "253:     AC_CHECK_LIB(",
          "254:      fdatetime,",
          "255:      libfdatetime_hfs_time_copy_to_utf8_string,",
          "256:      [ac_cv_libfdatetime_dummy=yes],",
          "257:      [ac_cv_libfdatetime=no])",
          "258:     AC_CHECK_LIB(",
          "259:      fdatetime,",
          "260:      libfdatetime_hfs_time_copy_to_utf8_string_with_index,",
          "261:      [ac_cv_libfdatetime_dummy=yes],",
          "262:      [ac_cv_libfdatetime=no])",
          "263:     AC_CHECK_LIB(",
          "264:      fdatetime,",
          "265:      libfdatetime_hfs_time_copy_to_utf16_string,",
          "266:      [ac_cv_libfdatetime_dummy=yes],",
          "267:      [ac_cv_libfdatetime=no])",
          "268:     AC_CHECK_LIB(",
          "269:      fdatetime,",
          "270:      libfdatetime_hfs_time_copy_to_utf16_string_with_index,",
          "271:      [ac_cv_libfdatetime_dummy=yes],",
          "272:      [ac_cv_libfdatetime=no])",
          "273:     AC_CHECK_LIB(",
          "274:      fdatetime,",
          "275:      libfdatetime_hfs_time_copy_to_utf32_string,",
          "276:      [ac_cv_libfdatetime_dummy=yes],",
          "277:      [ac_cv_libfdatetime=no])",
          "278:     AC_CHECK_LIB(",
          "279:      fdatetime,",
          "280:      libfdatetime_hfs_time_copy_to_utf32_string_with_index,",
          "281:      [ac_cv_libfdatetime_dummy=yes],",
          "282:      [ac_cv_libfdatetime=no])",
          "284:     dnl NSF timedate functions",
          "285:     AC_CHECK_LIB(",
          "286:      fdatetime,",
          "287:      libfdatetime_nsf_timedate_initialize,",
          "288:      [ac_cv_libfdatetime_dummy=yes],",
          "289:      [ac_cv_libfdatetime=no])",
          "290:     AC_CHECK_LIB(",
          "291:      fdatetime,",
          "292:      libfdatetime_nsf_timedate_free,",
          "293:      [ac_cv_libfdatetime_dummy=yes],",
          "294:      [ac_cv_libfdatetime=no])",
          "295:     AC_CHECK_LIB(",
          "296:      fdatetime,",
          "297:      libfdatetime_nsf_timedate_copy_from_byte_stream,",
          "298:      [ac_cv_libfdatetime_dummy=yes],",
          "299:      [ac_cv_libfdatetime=no])",
          "300:     AC_CHECK_LIB(",
          "301:      fdatetime,",
          "302:      libfdatetime_nsf_timedate_copy_from_64bit,",
          "303:      [ac_cv_libfdatetime_dummy=yes],",
          "304:      [ac_cv_libfdatetime=no])",
          "305:     AC_CHECK_LIB(",
          "306:      fdatetime,",
          "307:      libfdatetime_nsf_timedate_copy_to_64bit,",
          "308:      [ac_cv_libfdatetime_dummy=yes],",
          "309:      [ac_cv_libfdatetime=no])",
          "310:     AC_CHECK_LIB(",
          "311:      fdatetime,",
          "312:      libfdatetime_nsf_timedate_copy_to_utf8_string,",
          "313:      [ac_cv_libfdatetime_dummy=yes],",
          "314:      [ac_cv_libfdatetime=no])",
          "315:     AC_CHECK_LIB(",
          "316:      fdatetime,",
          "317:      libfdatetime_nsf_timedate_copy_to_utf8_string_with_index,",
          "318:      [ac_cv_libfdatetime_dummy=yes],",
          "319:      [ac_cv_libfdatetime=no])",
          "320:     AC_CHECK_LIB(",
          "321:      fdatetime,",
          "322:      libfdatetime_nsf_timedate_copy_to_utf16_string,",
          "323:      [ac_cv_libfdatetime_dummy=yes],",
          "324:      [ac_cv_libfdatetime=no])",
          "325:     AC_CHECK_LIB(",
          "326:      fdatetime,",
          "327:      libfdatetime_nsf_timedate_copy_to_utf16_string_with_index,",
          "328:      [ac_cv_libfdatetime_dummy=yes],",
          "329:      [ac_cv_libfdatetime=no])",
          "330:     AC_CHECK_LIB(",
          "331:      fdatetime,",
          "332:      libfdatetime_nsf_timedate_copy_to_utf32_string,",
          "333:      [ac_cv_libfdatetime_dummy=yes],",
          "334:      [ac_cv_libfdatetime=no])",
          "335:     AC_CHECK_LIB(",
          "336:      fdatetime,",
          "337:      libfdatetime_nsf_timedate_copy_to_utf32_string_with_index,",
          "338:      [ac_cv_libfdatetime_dummy=yes],",
          "339:      [ac_cv_libfdatetime=no])",
          "341:     dnl POSIX time functions",
          "342:     AC_CHECK_LIB(",
          "343:      fdatetime,",
          "344:      libfdatetime_posix_time_initialize,",
          "345:      [ac_cv_libfdatetime_dummy=yes],",
          "346:      [ac_cv_libfdatetime=no])",
          "347:     AC_CHECK_LIB(",
          "348:      fdatetime,",
          "349:      libfdatetime_posix_time_free,",
          "350:      [ac_cv_libfdatetime_dummy=yes],",
          "351:      [ac_cv_libfdatetime=no])",
          "352:     AC_CHECK_LIB(",
          "353:      fdatetime,",
          "354:      libfdatetime_posix_time_copy_from_byte_stream,",
          "355:      [ac_cv_libfdatetime_dummy=yes],",
          "356:      [ac_cv_libfdatetime=no])",
          "357:     AC_CHECK_LIB(",
          "358:      fdatetime,",
          "359:      libfdatetime_posix_time_copy_from_32bit,",
          "360:      [ac_cv_libfdatetime_dummy=yes],",
          "361:      [ac_cv_libfdatetime=no])",
          "362:     AC_CHECK_LIB(",
          "363:      fdatetime,",
          "364:      libfdatetime_posix_time_copy_to_32bit,",
          "365:      [ac_cv_libfdatetime_dummy=yes],",
          "366:      [ac_cv_libfdatetime=no])",
          "367:     AC_CHECK_LIB(",
          "368:      fdatetime,",
          "369:      libfdatetime_posix_time_copy_from_64bit,",
          "370:      [ac_cv_libfdatetime_dummy=yes],",
          "371:      [ac_cv_libfdatetime=no])",
          "372:     AC_CHECK_LIB(",
          "373:      fdatetime,",
          "374:      libfdatetime_posix_time_copy_to_64bit,",
          "375:      [ac_cv_libfdatetime_dummy=yes],",
          "376:      [ac_cv_libfdatetime=no])",
          "377:     AC_CHECK_LIB(",
          "378:      fdatetime,",
          "379:      libfdatetime_posix_time_copy_to_utf8_string,",
          "380:      [ac_cv_libfdatetime_dummy=yes],",
          "381:      [ac_cv_libfdatetime=no])",
          "382:     AC_CHECK_LIB(",
          "383:      fdatetime,",
          "384:      libfdatetime_posix_time_copy_to_utf8_string_with_index,",
          "385:      [ac_cv_libfdatetime_dummy=yes],",
          "386:      [ac_cv_libfdatetime=no])",
          "387:     AC_CHECK_LIB(",
          "388:      fdatetime,",
          "389:      libfdatetime_posix_time_copy_to_utf16_string,",
          "390:      [ac_cv_libfdatetime_dummy=yes],",
          "391:      [ac_cv_libfdatetime=no])",
          "392:     AC_CHECK_LIB(",
          "393:      fdatetime,",
          "394:      libfdatetime_posix_time_copy_to_utf16_string_with_index,",
          "395:      [ac_cv_libfdatetime_dummy=yes],",
          "396:      [ac_cv_libfdatetime=no])",
          "397:     AC_CHECK_LIB(",
          "398:      fdatetime,",
          "399:      libfdatetime_posix_time_copy_to_utf32_string,",
          "400:      [ac_cv_libfdatetime_dummy=yes],",
          "401:      [ac_cv_libfdatetime=no])",
          "402:     AC_CHECK_LIB(",
          "403:      fdatetime,",
          "404:      libfdatetime_posix_time_copy_to_utf32_string_with_index,",
          "405:      [ac_cv_libfdatetime_dummy=yes],",
          "406:      [ac_cv_libfdatetime=no])",
          "408:     dnl Systemtime functions",
          "409:     AC_CHECK_LIB(",
          "410:      fdatetime,",
          "411:      libfdatetime_systemetime_initialize,",
          "412:      [ac_cv_libfdatetime_dummy=yes],",
          "413:      [ac_cv_libfdatetime=no])",
          "414:     AC_CHECK_LIB(",
          "415:      fdatetime,",
          "416:      libfdatetime_systemetime_free,",
          "417:      [ac_cv_libfdatetime_dummy=yes],",
          "418:      [ac_cv_libfdatetime=no])",
          "419:     AC_CHECK_LIB(",
          "420:      fdatetime,",
          "421:      libfdatetime_systemetime_copy_from_byte_stream,",
          "422:      [ac_cv_libfdatetime_dummy=yes],",
          "423:      [ac_cv_libfdatetime=no])",
          "424:     AC_CHECK_LIB(",
          "425:      fdatetime,",
          "426:      libfdatetime_systemetime_copy_to_utf8_string,",
          "427:      [ac_cv_libfdatetime_dummy=yes],",
          "428:      [ac_cv_libfdatetime=no])",
          "429:     AC_CHECK_LIB(",
          "430:      fdatetime,",
          "431:      libfdatetime_systemetime_copy_to_utf8_string_with_index,",
          "432:      [ac_cv_libfdatetime_dummy=yes],",
          "433:      [ac_cv_libfdatetime=no])",
          "434:     AC_CHECK_LIB(",
          "435:      fdatetime,",
          "436:      libfdatetime_systemetime_copy_to_utf16_string,",
          "437:      [ac_cv_libfdatetime_dummy=yes],",
          "438:      [ac_cv_libfdatetime=no])",
          "439:     AC_CHECK_LIB(",
          "440:      fdatetime,",
          "441:      libfdatetime_systemetime_copy_to_utf16_string_with_index,",
          "442:      [ac_cv_libfdatetime_dummy=yes],",
          "443:      [ac_cv_libfdatetime=no])",
          "444:     AC_CHECK_LIB(",
          "445:      fdatetime,",
          "446:      libfdatetime_systemetime_copy_to_utf32_string,",
          "447:      [ac_cv_libfdatetime_dummy=yes],",
          "448:      [ac_cv_libfdatetime=no])",
          "449:     AC_CHECK_LIB(",
          "450:      fdatetime,",
          "451:      libfdatetime_systemetime_copy_to_utf32_string_with_index,",
          "452:      [ac_cv_libfdatetime_dummy=yes],",
          "453:      [ac_cv_libfdatetime=no])",
          "455:    ac_cv_libfdatetime_LIBADD=\"-lfdatetime\"",
          "456:    ])",
          "458:  ])",
          "460:  AS_IF(",
          "461:   [test \"x$ac_cv_libfdatetime\" = xyes],",
          "462:   [AC_DEFINE(",
          "463:    [HAVE_LIBFDATETIME],",
          "464:    [1],",
          "465:    [Define to 1 if you have the `fdatetime' library (-lfdatetime).])",
          "468:  AS_IF(",
          "469:   [test \"x$ac_cv_libfdatetime\" = xyes],",
          "470:   [AC_SUBST(",
          "471:    [HAVE_LIBFDATETIME],",
          "472:    [1]) ],",
          "473:   [AC_SUBST(",
          "474:    [HAVE_LIBFDATETIME],",
          "475:    [0])",
          "477:  ])",
          "481:  [AX_COMMON_ARG_WITH(",
          "482:   [libfdatetime],",
          "483:   [libfdatetime],",
          "484:   [search for libfdatetime in includedir and libdir or in the specified DIR, or no if to use local version],",
          "485:   [auto-detect],",
          "486:   [DIR])",
          "488:  AX_LIBFDATETIME_CHECK_LIB",
          "490:  dnl Check if the dependencies for the local library version",
          "491:  AS_IF(",
          "492:   [test \"x$ac_cv_libfdatetime\" != xyes],",
          "493:   [ac_cv_libfdatetime_CPPFLAGS=\"-I../libfdatetime\";",
          "494:   ac_cv_libfdatetime_LIBADD=\"../libfdatetime/libfdatetime.la\";",
          "496:   ac_cv_libfdatetime=local",
          "498:   AC_DEFINE(",
          "499:    [HAVE_LOCAL_LIBFDATETIME],",
          "500:    [1],",
          "501:    [Define to 1 if the local version of libfdatetime is used.])",
          "502:   AC_SUBST(",
          "503:    [HAVE_LOCAL_LIBFDATETIME],",
          "504:    [1])",
          "505:   ])",
          "507:  AM_CONDITIONAL(",
          "508:   [HAVE_LOCAL_LIBFDATETIME],",
          "509:   [test \"x$ac_cv_libfdatetime\" = xlocal])",
          "510:  AS_IF(",
          "511:   [test \"x$ac_cv_libfdatetime_CPPFLAGS\" != \"x\"],",
          "512:   [AC_SUBST(",
          "513:    [LIBFDATETIME_CPPFLAGS],",
          "514:    [$ac_cv_libfdatetime_CPPFLAGS])",
          "515:   ])",
          "516:  AS_IF(",
          "517:   [test \"x$ac_cv_libfdatetime_LIBADD\" != \"x\"],",
          "518:   [AC_SUBST(",
          "519:    [LIBFDATETIME_LIBADD],",
          "520:    [$ac_cv_libfdatetime_LIBADD])",
          "521:   ])",
          "523:  AS_IF(",
          "524:   [test \"x$ac_cv_libfdatetime\" = xyes],",
          "525:   [AC_SUBST(",
          "526:    [ax_libfdatetime_pc_libs_private],",
          "527:    [-lfdatetime])",
          "528:   ])",
          "530:  AS_IF(",
          "531:   [test \"x$ac_cv_libfdatetime\" = xyes],",
          "532:   [AC_SUBST(",
          "533:    [ax_libfdatetime_spec_requires],",
          "534:    [libfdatetime])",
          "535:   AC_SUBST(",
          "536:    [ax_libfdatetime_spec_build_requires],",
          "537:    [libfdatetime-devel])",
          "539:  ])",
          "",
          "[Added Lines]",
          "3: dnl Version: 20170905",
          "8:   [dnl Check if parameters were provided",
          "10:     [test \"x$ac_cv_with_libfdatetime\" != x && test \"x$ac_cv_with_libfdatetime\" != xno && test \"x$ac_cv_with_libfdatetime\" != xauto-detect],",
          "11:     [AS_IF(",
          "12:       [test -d \"$ac_cv_with_libfdatetime\"],",
          "13:       [CFLAGS=\"$CFLAGS -I${ac_cv_with_libfdatetime}/include\"",
          "14:       LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libfdatetime}/lib\"],",
          "15:       [AC_MSG_WARN([no such directory: $ac_cv_with_libfdatetime])",
          "16:       ])",
          "17:     ])",
          "20:     [test \"x$ac_cv_with_libfdatetime\" = xno],",
          "22:     [dnl Check for a pkg-config file",
          "23:     AS_IF(",
          "24:       [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:       [PKG_CHECK_MODULES(",
          "26:         [libfdatetime],",
          "27:         [libfdatetime >= 20160220],",
          "28:         [ac_cv_libfdatetime=yes],",
          "29:         [ac_cv_libfdatetime=no])",
          "30:       ])",
          "32:     AS_IF(",
          "33:       [test \"x$ac_cv_libfdatetime\" = xyes],",
          "34:       [ac_cv_libfdatetime_CPPFLAGS=\"$pkg_cv_libfdatetime_CFLAGS\"",
          "35:       ac_cv_libfdatetime_LIBADD=\"$pkg_cv_libfdatetime_LIBS\"],",
          "36:       [dnl Check for headers",
          "37:       AC_CHECK_HEADERS([libfdatetime.h])",
          "39:       AS_IF(",
          "40:         [test \"x$ac_cv_header_libfdatetime_h\" = xno],",
          "41:         [ac_cv_libfdatetime=no],",
          "42:         [dnl Check for the individual functions",
          "43:         ac_cv_libfdatetime=yes",
          "45:         AC_CHECK_LIB(",
          "46:           fdatetime,",
          "47:           libfdatetime_get_version,",
          "48:           [ac_cv_libfdatetime_dummy=yes],",
          "49:           [ac_cv_libfdatetime=no])",
          "51:         dnl FAT date time functions",
          "52:         AC_CHECK_LIB(",
          "53:           fdatetime,",
          "54:           libfdatetime_fat_date_time_initialize,",
          "55:           [ac_cv_libfdatetime_dummy=yes],",
          "56:           [ac_cv_libfdatetime=no])",
          "57:         AC_CHECK_LIB(",
          "58:           fdatetime,",
          "59:           libfdatetime_fat_date_time_free,",
          "60:           [ac_cv_libfdatetime_dummy=yes],",
          "61:           [ac_cv_libfdatetime=no])",
          "62:         AC_CHECK_LIB(",
          "63:           fdatetime,",
          "64:           libfdatetime_fat_date_time_copy_from_byte_stream,",
          "65:           [ac_cv_libfdatetime_dummy=yes],",
          "66:           [ac_cv_libfdatetime=no])",
          "67:         AC_CHECK_LIB(",
          "68:           fdatetime,",
          "69:           libfdatetime_fat_date_time_copy_from_32bit,",
          "70:           [ac_cv_libfdatetime_dummy=yes],",
          "71:           [ac_cv_libfdatetime=no])",
          "72:         AC_CHECK_LIB(",
          "73:           fdatetime,",
          "74:           libfdatetime_fat_date_time_copy_to_32bit,",
          "75:           [ac_cv_libfdatetime_dummy=yes],",
          "76:           [ac_cv_libfdatetime=no])",
          "77:         AC_CHECK_LIB(",
          "78:           fdatetime,",
          "79:           libfdatetime_fat_date_time_copy_to_utf8_string,",
          "80:           [ac_cv_libfdatetime_dummy=yes],",
          "81:           [ac_cv_libfdatetime=no])",
          "82:         AC_CHECK_LIB(",
          "83:           fdatetime,",
          "84:           libfdatetime_fat_date_time_copy_to_utf8_string_with_index,",
          "85:           [ac_cv_libfdatetime_dummy=yes],",
          "86:           [ac_cv_libfdatetime=no])",
          "87:         AC_CHECK_LIB(",
          "88:           fdatetime,",
          "89:           libfdatetime_fat_date_time_copy_to_utf16_string,",
          "90:           [ac_cv_libfdatetime_dummy=yes],",
          "91:           [ac_cv_libfdatetime=no])",
          "92:         AC_CHECK_LIB(",
          "93:           fdatetime,",
          "94:           libfdatetime_fat_date_time_copy_to_utf16_string_with_index,",
          "95:           [ac_cv_libfdatetime_dummy=yes],",
          "96:           [ac_cv_libfdatetime=no])",
          "97:         AC_CHECK_LIB(",
          "98:           fdatetime,",
          "99:           libfdatetime_fat_date_time_copy_to_utf32_string,",
          "100:           [ac_cv_libfdatetime_dummy=yes],",
          "101:           [ac_cv_libfdatetime=no])",
          "102:         AC_CHECK_LIB(",
          "103:           fdatetime,",
          "104:           libfdatetime_fat_date_time_copy_to_utf32_string_with_index,",
          "105:           [ac_cv_libfdatetime_dummy=yes],",
          "106:           [ac_cv_libfdatetime=no])",
          "108:         dnl FILETIME functions",
          "109:         AC_CHECK_LIB(",
          "110:           fdatetime,",
          "111:           libfdatetime_filetime_initialize,",
          "112:           [ac_cv_libfdatetime_dummy=yes],",
          "113:           [ac_cv_libfdatetime=no])",
          "114:         AC_CHECK_LIB(",
          "115:           fdatetime,",
          "116:           libfdatetime_filetime_free,",
          "117:           [ac_cv_libfdatetime_dummy=yes],",
          "118:           [ac_cv_libfdatetime=no])",
          "119:         AC_CHECK_LIB(",
          "120:           fdatetime,",
          "121:           libfdatetime_filetime_copy_from_byte_stream,",
          "122:           [ac_cv_libfdatetime_dummy=yes],",
          "123:           [ac_cv_libfdatetime=no])",
          "124:         AC_CHECK_LIB(",
          "125:           fdatetime,",
          "126:           libfdatetime_filetime_copy_from_64bit,",
          "127:           [ac_cv_libfdatetime_dummy=yes],",
          "128:           [ac_cv_libfdatetime=no])",
          "129:         AC_CHECK_LIB(",
          "130:           fdatetime,",
          "131:           libfdatetime_filetime_copy_to_64bit,",
          "132:           [ac_cv_libfdatetime_dummy=yes],",
          "133:           [ac_cv_libfdatetime=no])",
          "134:         AC_CHECK_LIB(",
          "135:           fdatetime,",
          "136:           libfdatetime_filetime_copy_to_utf8_string,",
          "137:           [ac_cv_libfdatetime_dummy=yes],",
          "138:           [ac_cv_libfdatetime=no])",
          "139:         AC_CHECK_LIB(",
          "140:           fdatetime,",
          "141:           libfdatetime_filetime_copy_to_utf8_string_with_index,",
          "142:           [ac_cv_libfdatetime_dummy=yes],",
          "143:           [ac_cv_libfdatetime=no])",
          "144:         AC_CHECK_LIB(",
          "145:           fdatetime,",
          "146:           libfdatetime_filetime_copy_to_utf16_string,",
          "147:           [ac_cv_libfdatetime_dummy=yes],",
          "148:           [ac_cv_libfdatetime=no])",
          "149:         AC_CHECK_LIB(",
          "150:           fdatetime,",
          "151:           libfdatetime_filetime_copy_to_utf16_string_with_index,",
          "152:           [ac_cv_libfdatetime_dummy=yes],",
          "153:           [ac_cv_libfdatetime=no])",
          "154:         AC_CHECK_LIB(",
          "155:           fdatetime,",
          "156:           libfdatetime_filetime_copy_to_utf32_string,",
          "157:           [ac_cv_libfdatetime_dummy=yes],",
          "158:           [ac_cv_libfdatetime=no])",
          "159:         AC_CHECK_LIB(",
          "160:           fdatetime,",
          "161:           libfdatetime_filetime_copy_to_utf32_string_with_index,",
          "162:           [ac_cv_libfdatetime_dummy=yes],",
          "163:           [ac_cv_libfdatetime=no])",
          "164:         AC_CHECK_LIB(",
          "165:           fdatetime,",
          "166:           libfdatetime_filetime_add,",
          "167:           [ac_cv_libfdatetime_dummy=yes],",
          "168:           [ac_cv_libfdatetime=no])",
          "170:         dnl Floatingtime functions",
          "171:         AC_CHECK_LIB(",
          "172:           fdatetime,",
          "173:           libfdatetime_floatingtime_initialize,",
          "174:           [ac_cv_libfdatetime_dummy=yes],",
          "175:           [ac_cv_libfdatetime=no])",
          "176:         AC_CHECK_LIB(",
          "177:           fdatetime,",
          "178:           libfdatetime_floatingtime_free,",
          "179:           [ac_cv_libfdatetime_dummy=yes],",
          "180:           [ac_cv_libfdatetime=no])",
          "181:         AC_CHECK_LIB(",
          "182:           fdatetime,",
          "183:           libfdatetime_floatingtime_copy_from_byte_stream,",
          "184:           [ac_cv_libfdatetime_dummy=yes],",
          "185:           [ac_cv_libfdatetime=no])",
          "186:         AC_CHECK_LIB(",
          "187:           fdatetime,",
          "188:           libfdatetime_floatingtime_copy_from_64bit,",
          "189:           [ac_cv_libfdatetime_dummy=yes],",
          "190:           [ac_cv_libfdatetime=no])",
          "191:         AC_CHECK_LIB(",
          "192:           fdatetime,",
          "193:           libfdatetime_floatingtime_copy_to_64bit,",
          "194:           [ac_cv_libfdatetime_dummy=yes],",
          "195:           [ac_cv_libfdatetime=no])",
          "196:         AC_CHECK_LIB(",
          "197:           fdatetime,",
          "198:           libfdatetime_floatingtime_copy_to_utf8_string,",
          "199:           [ac_cv_libfdatetime_dummy=yes],",
          "200:           [ac_cv_libfdatetime=no])",
          "201:         AC_CHECK_LIB(",
          "202:           fdatetime,",
          "203:           libfdatetime_floatingtime_copy_to_utf8_string_with_index,",
          "204:           [ac_cv_libfdatetime_dummy=yes],",
          "205:           [ac_cv_libfdatetime=no])",
          "206:         AC_CHECK_LIB(",
          "207:           fdatetime,",
          "208:           libfdatetime_floatingtime_copy_to_utf16_string,",
          "209:           [ac_cv_libfdatetime_dummy=yes],",
          "210:           [ac_cv_libfdatetime=no])",
          "211:         AC_CHECK_LIB(",
          "212:           fdatetime,",
          "213:           libfdatetime_floatingtime_copy_to_utf16_string_with_index,",
          "214:           [ac_cv_libfdatetime_dummy=yes],",
          "215:           [ac_cv_libfdatetime=no])",
          "216:         AC_CHECK_LIB(",
          "217:           fdatetime,",
          "218:           libfdatetime_floatingtime_copy_to_utf32_string,",
          "219:           [ac_cv_libfdatetime_dummy=yes],",
          "220:           [ac_cv_libfdatetime=no])",
          "221:         AC_CHECK_LIB(",
          "222:           fdatetime,",
          "223:           libfdatetime_floatingtime_copy_to_utf32_string_with_index,",
          "224:           [ac_cv_libfdatetime_dummy=yes],",
          "225:           [ac_cv_libfdatetime=no])",
          "227:         dnl HFS time functions",
          "228:         AC_CHECK_LIB(",
          "229:           fdatetime,",
          "230:           libfdatetime_hfs_time_initialize,",
          "231:           [ac_cv_libfdatetime_dummy=yes],",
          "232:           [ac_cv_libfdatetime=no])",
          "233:         AC_CHECK_LIB(",
          "234:           fdatetime,",
          "235:           libfdatetime_hfs_time_free,",
          "236:           [ac_cv_libfdatetime_dummy=yes],",
          "237:           [ac_cv_libfdatetime=no])",
          "238:         AC_CHECK_LIB(",
          "239:           fdatetime,",
          "240:           libfdatetime_hfs_time_copy_from_byte_stream,",
          "241:           [ac_cv_libfdatetime_dummy=yes],",
          "242:           [ac_cv_libfdatetime=no])",
          "243:         AC_CHECK_LIB(",
          "244:           fdatetime,",
          "245:           libfdatetime_hfs_time_copy_from_32bit,",
          "246:           [ac_cv_libfdatetime_dummy=yes],",
          "247:           [ac_cv_libfdatetime=no])",
          "248:         AC_CHECK_LIB(",
          "249:           fdatetime,",
          "250:           libfdatetime_hfs_time_copy_to_32bit,",
          "251:           [ac_cv_libfdatetime_dummy=yes],",
          "252:           [ac_cv_libfdatetime=no])",
          "253:         AC_CHECK_LIB(",
          "254:           fdatetime,",
          "255:           libfdatetime_hfs_time_copy_to_utf8_string,",
          "256:           [ac_cv_libfdatetime_dummy=yes],",
          "257:           [ac_cv_libfdatetime=no])",
          "258:         AC_CHECK_LIB(",
          "259:           fdatetime,",
          "260:           libfdatetime_hfs_time_copy_to_utf8_string_with_index,",
          "261:           [ac_cv_libfdatetime_dummy=yes],",
          "262:           [ac_cv_libfdatetime=no])",
          "263:         AC_CHECK_LIB(",
          "264:           fdatetime,",
          "265:           libfdatetime_hfs_time_copy_to_utf16_string,",
          "266:           [ac_cv_libfdatetime_dummy=yes],",
          "267:           [ac_cv_libfdatetime=no])",
          "268:         AC_CHECK_LIB(",
          "269:           fdatetime,",
          "270:           libfdatetime_hfs_time_copy_to_utf16_string_with_index,",
          "271:           [ac_cv_libfdatetime_dummy=yes],",
          "272:           [ac_cv_libfdatetime=no])",
          "273:         AC_CHECK_LIB(",
          "274:           fdatetime,",
          "275:           libfdatetime_hfs_time_copy_to_utf32_string,",
          "276:           [ac_cv_libfdatetime_dummy=yes],",
          "277:           [ac_cv_libfdatetime=no])",
          "278:         AC_CHECK_LIB(",
          "279:           fdatetime,",
          "280:           libfdatetime_hfs_time_copy_to_utf32_string_with_index,",
          "281:           [ac_cv_libfdatetime_dummy=yes],",
          "282:           [ac_cv_libfdatetime=no])",
          "284:         dnl NSF timedate functions",
          "285:         AC_CHECK_LIB(",
          "286:           fdatetime,",
          "287:           libfdatetime_nsf_timedate_initialize,",
          "288:           [ac_cv_libfdatetime_dummy=yes],",
          "289:           [ac_cv_libfdatetime=no])",
          "290:         AC_CHECK_LIB(",
          "291:           fdatetime,",
          "292:           libfdatetime_nsf_timedate_free,",
          "293:           [ac_cv_libfdatetime_dummy=yes],",
          "294:           [ac_cv_libfdatetime=no])",
          "295:         AC_CHECK_LIB(",
          "296:           fdatetime,",
          "297:           libfdatetime_nsf_timedate_copy_from_byte_stream,",
          "298:           [ac_cv_libfdatetime_dummy=yes],",
          "299:           [ac_cv_libfdatetime=no])",
          "300:         AC_CHECK_LIB(",
          "301:           fdatetime,",
          "302:           libfdatetime_nsf_timedate_copy_from_64bit,",
          "303:           [ac_cv_libfdatetime_dummy=yes],",
          "304:           [ac_cv_libfdatetime=no])",
          "305:         AC_CHECK_LIB(",
          "306:           fdatetime,",
          "307:           libfdatetime_nsf_timedate_copy_to_64bit,",
          "308:           [ac_cv_libfdatetime_dummy=yes],",
          "309:           [ac_cv_libfdatetime=no])",
          "310:         AC_CHECK_LIB(",
          "311:           fdatetime,",
          "312:           libfdatetime_nsf_timedate_copy_to_utf8_string,",
          "313:           [ac_cv_libfdatetime_dummy=yes],",
          "314:           [ac_cv_libfdatetime=no])",
          "315:         AC_CHECK_LIB(",
          "316:           fdatetime,",
          "317:           libfdatetime_nsf_timedate_copy_to_utf8_string_with_index,",
          "318:           [ac_cv_libfdatetime_dummy=yes],",
          "319:           [ac_cv_libfdatetime=no])",
          "320:         AC_CHECK_LIB(",
          "321:           fdatetime,",
          "322:           libfdatetime_nsf_timedate_copy_to_utf16_string,",
          "323:           [ac_cv_libfdatetime_dummy=yes],",
          "324:           [ac_cv_libfdatetime=no])",
          "325:         AC_CHECK_LIB(",
          "326:           fdatetime,",
          "327:           libfdatetime_nsf_timedate_copy_to_utf16_string_with_index,",
          "328:           [ac_cv_libfdatetime_dummy=yes],",
          "329:           [ac_cv_libfdatetime=no])",
          "330:         AC_CHECK_LIB(",
          "331:           fdatetime,",
          "332:           libfdatetime_nsf_timedate_copy_to_utf32_string,",
          "333:           [ac_cv_libfdatetime_dummy=yes],",
          "334:           [ac_cv_libfdatetime=no])",
          "335:         AC_CHECK_LIB(",
          "336:           fdatetime,",
          "337:           libfdatetime_nsf_timedate_copy_to_utf32_string_with_index,",
          "338:           [ac_cv_libfdatetime_dummy=yes],",
          "339:           [ac_cv_libfdatetime=no])",
          "341:         dnl POSIX time functions",
          "342:         AC_CHECK_LIB(",
          "343:           fdatetime,",
          "344:           libfdatetime_posix_time_initialize,",
          "345:           [ac_cv_libfdatetime_dummy=yes],",
          "346:           [ac_cv_libfdatetime=no])",
          "347:         AC_CHECK_LIB(",
          "348:           fdatetime,",
          "349:           libfdatetime_posix_time_free,",
          "350:           [ac_cv_libfdatetime_dummy=yes],",
          "351:           [ac_cv_libfdatetime=no])",
          "352:         AC_CHECK_LIB(",
          "353:           fdatetime,",
          "354:           libfdatetime_posix_time_copy_from_byte_stream,",
          "355:           [ac_cv_libfdatetime_dummy=yes],",
          "356:           [ac_cv_libfdatetime=no])",
          "357:         AC_CHECK_LIB(",
          "358:           fdatetime,",
          "359:           libfdatetime_posix_time_copy_from_32bit,",
          "360:           [ac_cv_libfdatetime_dummy=yes],",
          "361:           [ac_cv_libfdatetime=no])",
          "362:         AC_CHECK_LIB(",
          "363:           fdatetime,",
          "364:           libfdatetime_posix_time_copy_to_32bit,",
          "365:           [ac_cv_libfdatetime_dummy=yes],",
          "366:           [ac_cv_libfdatetime=no])",
          "367:         AC_CHECK_LIB(",
          "368:           fdatetime,",
          "369:           libfdatetime_posix_time_copy_from_64bit,",
          "370:           [ac_cv_libfdatetime_dummy=yes],",
          "371:           [ac_cv_libfdatetime=no])",
          "372:         AC_CHECK_LIB(",
          "373:           fdatetime,",
          "374:           libfdatetime_posix_time_copy_to_64bit,",
          "375:           [ac_cv_libfdatetime_dummy=yes],",
          "376:           [ac_cv_libfdatetime=no])",
          "377:         AC_CHECK_LIB(",
          "378:           fdatetime,",
          "379:           libfdatetime_posix_time_copy_to_utf8_string,",
          "380:           [ac_cv_libfdatetime_dummy=yes],",
          "381:           [ac_cv_libfdatetime=no])",
          "382:         AC_CHECK_LIB(",
          "383:           fdatetime,",
          "384:           libfdatetime_posix_time_copy_to_utf8_string_with_index,",
          "385:           [ac_cv_libfdatetime_dummy=yes],",
          "386:           [ac_cv_libfdatetime=no])",
          "387:         AC_CHECK_LIB(",
          "388:           fdatetime,",
          "389:           libfdatetime_posix_time_copy_to_utf16_string,",
          "390:           [ac_cv_libfdatetime_dummy=yes],",
          "391:           [ac_cv_libfdatetime=no])",
          "392:         AC_CHECK_LIB(",
          "393:           fdatetime,",
          "394:           libfdatetime_posix_time_copy_to_utf16_string_with_index,",
          "395:           [ac_cv_libfdatetime_dummy=yes],",
          "396:           [ac_cv_libfdatetime=no])",
          "397:         AC_CHECK_LIB(",
          "398:           fdatetime,",
          "399:           libfdatetime_posix_time_copy_to_utf32_string,",
          "400:           [ac_cv_libfdatetime_dummy=yes],",
          "401:           [ac_cv_libfdatetime=no])",
          "402:         AC_CHECK_LIB(",
          "403:           fdatetime,",
          "404:           libfdatetime_posix_time_copy_to_utf32_string_with_index,",
          "405:           [ac_cv_libfdatetime_dummy=yes],",
          "406:           [ac_cv_libfdatetime=no])",
          "408:         dnl Systemtime functions",
          "409:         AC_CHECK_LIB(",
          "410:           fdatetime,",
          "411:           libfdatetime_systemetime_initialize,",
          "412:           [ac_cv_libfdatetime_dummy=yes],",
          "413:           [ac_cv_libfdatetime=no])",
          "414:         AC_CHECK_LIB(",
          "415:           fdatetime,",
          "416:           libfdatetime_systemetime_free,",
          "417:           [ac_cv_libfdatetime_dummy=yes],",
          "418:           [ac_cv_libfdatetime=no])",
          "419:         AC_CHECK_LIB(",
          "420:           fdatetime,",
          "421:           libfdatetime_systemetime_copy_from_byte_stream,",
          "422:           [ac_cv_libfdatetime_dummy=yes],",
          "423:           [ac_cv_libfdatetime=no])",
          "424:         AC_CHECK_LIB(",
          "425:           fdatetime,",
          "426:           libfdatetime_systemetime_copy_to_utf8_string,",
          "427:           [ac_cv_libfdatetime_dummy=yes],",
          "428:           [ac_cv_libfdatetime=no])",
          "429:         AC_CHECK_LIB(",
          "430:           fdatetime,",
          "431:           libfdatetime_systemetime_copy_to_utf8_string_with_index,",
          "432:           [ac_cv_libfdatetime_dummy=yes],",
          "433:           [ac_cv_libfdatetime=no])",
          "434:         AC_CHECK_LIB(",
          "435:           fdatetime,",
          "436:           libfdatetime_systemetime_copy_to_utf16_string,",
          "437:           [ac_cv_libfdatetime_dummy=yes],",
          "438:           [ac_cv_libfdatetime=no])",
          "439:         AC_CHECK_LIB(",
          "440:           fdatetime,",
          "441:           libfdatetime_systemetime_copy_to_utf16_string_with_index,",
          "442:           [ac_cv_libfdatetime_dummy=yes],",
          "443:           [ac_cv_libfdatetime=no])",
          "444:         AC_CHECK_LIB(",
          "445:           fdatetime,",
          "446:           libfdatetime_systemetime_copy_to_utf32_string,",
          "447:           [ac_cv_libfdatetime_dummy=yes],",
          "448:           [ac_cv_libfdatetime=no])",
          "449:         AC_CHECK_LIB(",
          "450:           fdatetime,",
          "451:           libfdatetime_systemetime_copy_to_utf32_string_with_index,",
          "452:           [ac_cv_libfdatetime_dummy=yes],",
          "453:           [ac_cv_libfdatetime=no])",
          "455:       ac_cv_libfdatetime_LIBADD=\"-lfdatetime\"",
          "456:       ])",
          "457:     ])",
          "460:   AS_IF(",
          "461:     [test \"x$ac_cv_libfdatetime\" = xyes],",
          "462:     [AC_DEFINE(",
          "463:       [HAVE_LIBFDATETIME],",
          "464:       [1],",
          "465:       [Define to 1 if you have the `fdatetime' library (-lfdatetime).])",
          "466:     ])",
          "468:   AS_IF(",
          "469:     [test \"x$ac_cv_libfdatetime\" = xyes],",
          "470:     [AC_SUBST(",
          "471:       [HAVE_LIBFDATETIME],",
          "472:       [1]) ],",
          "473:     [AC_SUBST(",
          "474:       [HAVE_LIBFDATETIME],",
          "475:       [0])",
          "476:     ])",
          "479: dnl Function to detect if libfdatetime dependencies are available",
          "480: AC_DEFUN([AX_LIBFDATETIME_CHECK_LOCAL],",
          "481:   [dnl No additional checks.",
          "483:   ac_cv_libfdatetime_CPPFLAGS=\"-I../libfdatetime\";",
          "484:   ac_cv_libfdatetime_LIBADD=\"../libfdatetime/libfdatetime.la\";",
          "486:   ac_cv_libfdatetime=local",
          "491:   [AX_COMMON_ARG_WITH(",
          "492:     [libfdatetime],",
          "493:     [libfdatetime],",
          "494:     [search for libfdatetime in includedir and libdir or in the specified DIR, or no if to use local version],",
          "495:     [auto-detect],",
          "496:     [DIR])",
          "498:   AX_LIBFDATETIME_CHECK_LIB",
          "500:   dnl Check if the dependencies for the local library version",
          "501:   AS_IF(",
          "502:     [test \"x$ac_cv_libfdatetime\" != xyes],",
          "503:     [AX_LIBFDATETIME_CHECK_LOCAL",
          "505:     AC_DEFINE(",
          "506:       [HAVE_LOCAL_LIBFDATETIME],",
          "507:       [1],",
          "508:       [Define to 1 if the local version of libfdatetime is used.])",
          "509:     AC_SUBST(",
          "510:       [HAVE_LOCAL_LIBFDATETIME],",
          "511:       [1])",
          "512:     ])",
          "514:   AM_CONDITIONAL(",
          "515:     [HAVE_LOCAL_LIBFDATETIME],",
          "516:     [test \"x$ac_cv_libfdatetime\" = xlocal])",
          "517:   AS_IF(",
          "518:     [test \"x$ac_cv_libfdatetime_CPPFLAGS\" != \"x\"],",
          "519:     [AC_SUBST(",
          "520:       [LIBFDATETIME_CPPFLAGS],",
          "521:       [$ac_cv_libfdatetime_CPPFLAGS])",
          "522:     ])",
          "523:   AS_IF(",
          "524:     [test \"x$ac_cv_libfdatetime_LIBADD\" != \"x\"],",
          "525:     [AC_SUBST(",
          "526:       [LIBFDATETIME_LIBADD],",
          "527:       [$ac_cv_libfdatetime_LIBADD])",
          "528:     ])",
          "530:   AS_IF(",
          "531:     [test \"x$ac_cv_libfdatetime\" = xyes],",
          "532:     [AC_SUBST(",
          "533:       [ax_libfdatetime_pc_libs_private],",
          "534:       [-lfdatetime])",
          "535:     ])",
          "537:   AS_IF(",
          "538:     [test \"x$ac_cv_libfdatetime\" = xyes],",
          "539:     [AC_SUBST(",
          "540:       [ax_libfdatetime_spec_requires],",
          "541:       [libfdatetime])",
          "542:     AC_SUBST(",
          "543:       [ax_libfdatetime_spec_build_requires],",
          "544:       [libfdatetime-devel])",
          "545:     ])",
          "",
          "---------------"
        ],
        "m4/libfguid.m4||m4/libfguid.m4": [
          "File: m4/libfguid.m4 -> m4/libfguid.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Functions for libfguid",
          "2: dnl",
          "5: dnl Function to detect if libfguid is available",
          "6: dnl ac_libfguid_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "7: AC_DEFUN([AX_LIBFGUID_CHECK_LIB],",
          "23:   AS_IF(",
          "32:   AS_IF(",
          "41:     [ac_cv_libfguid=no],",
          "104:     ])",
          "114:   ])",
          "124:   ])",
          "127: dnl Function to detect how to enable libfguid",
          "128: AC_DEFUN([AX_LIBFGUID_CHECK_ENABLE],",
          "187:   ])",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20160417",
          "8:  [dnl Check if parameters were provided",
          "9:  AS_IF(",
          "10:   [test \"x$ac_cv_with_libfguid\" != x && test \"x$ac_cv_with_libfguid\" != xno && test \"x$ac_cv_with_libfguid\" != xauto-detect],",
          "11:   [AS_IF(",
          "12:    [test -d \"$ac_cv_with_libfguid\"],",
          "13:    [CFLAGS=\"$CFLAGS -I${ac_cv_with_libfguid}/include\"",
          "14:    LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libfguid}/lib\"],",
          "15:    [AC_MSG_WARN([no such directory: $ac_cv_with_libfguid])",
          "16:    ])",
          "17:   ])",
          "19:  AS_IF(",
          "20:   [test \"x$ac_cv_with_libfguid\" = xno],",
          "21:   [ac_cv_libfguid=no],",
          "22:   [dnl Check for a pkg-config file",
          "24:    [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:    [PKG_CHECK_MODULES(",
          "26:     [libfguid],",
          "27:     [libfguid >= 20120426],",
          "28:     [ac_cv_libfguid=yes],",
          "29:     [ac_cv_libfguid=no])",
          "30:    ])",
          "33:    [test \"x$ac_cv_libfguid\" = xyes],",
          "34:    [ac_cv_libfguid_CPPFLAGS=\"$pkg_cv_libfguid_CFLAGS\"",
          "35:    ac_cv_libfguid_LIBADD=\"$pkg_cv_libfguid_LIBS\"],",
          "36:    [dnl Check for headers",
          "37:    AC_CHECK_HEADERS([libfguid.h])",
          "39:    AS_IF(",
          "40:     [test \"x$ac_cv_header_libfguid_h\" = xno],",
          "42:     [dnl Check for the individual functions",
          "43:     ac_cv_libfguid=yes",
          "45:     AC_CHECK_LIB(",
          "46:      fguid,",
          "47:      libfguid_get_version,",
          "48:      [ac_cv_libfguid_dummy=yes],",
          "49:      [ac_cv_libfguid=no])",
          "51:     dnl Identifier functions",
          "52:     AC_CHECK_LIB(",
          "53:      fguid,",
          "54:      libfguid_identifier_initialize,",
          "55:      [ac_cv_libfguid_dummy=yes],",
          "56:      [ac_cv_libfguid=no])",
          "57:     AC_CHECK_LIB(",
          "58:      fguid,",
          "59:      libfguid_identifier_free,",
          "60:      [ac_cv_libfguid_dummy=yes],",
          "61:      [ac_cv_libfguid=no])",
          "62:     AC_CHECK_LIB(",
          "63:      fguid,",
          "64:      libfguid_identifier_copy_from_byte_stream,",
          "65:      [ac_cv_libfguid_dummy=yes],",
          "66:      [ac_cv_libfguid=no])",
          "67:     AC_CHECK_LIB(",
          "68:      fguid,",
          "69:      libfguid_identifier_get_string_size,",
          "70:      [ac_cv_libfguid_dummy=yes],",
          "71:      [ac_cv_libfguid=no])",
          "72:     AC_CHECK_LIB(",
          "73:      fguid,",
          "74:      libfguid_identifier_copy_to_utf8_string,",
          "75:      [ac_cv_libfguid_dummy=yes],",
          "76:      [ac_cv_libfguid=no])",
          "77:     AC_CHECK_LIB(",
          "78:      fguid,",
          "79:      libfguid_identifier_copy_to_utf8_string_with_index,",
          "80:      [ac_cv_libfguid_dummy=yes],",
          "81:      [ac_cv_libfguid=no])",
          "82:     AC_CHECK_LIB(",
          "83:      fguid,",
          "84:      libfguid_identifier_copy_to_utf16_string,",
          "85:      [ac_cv_libfguid_dummy=yes],",
          "86:      [ac_cv_libfguid=no])",
          "87:     AC_CHECK_LIB(",
          "88:      fguid,",
          "89:      libfguid_identifier_copy_to_utf16_string_with_index,",
          "90:      [ac_cv_libfguid_dummy=yes],",
          "91:      [ac_cv_libfguid=no])",
          "92:     AC_CHECK_LIB(",
          "93:      fguid,",
          "94:      libfguid_identifier_copy_to_utf32_string,",
          "95:      [ac_cv_libfguid_dummy=yes],",
          "96:      [ac_cv_libfguid=no])",
          "97:     AC_CHECK_LIB(",
          "98:      fguid,",
          "99:      libfguid_identifier_copy_to_utf32_string_with_index,",
          "100:      [ac_cv_libfguid_dummy=yes],",
          "101:      [ac_cv_libfguid=no])",
          "103:     ac_cv_libfguid_LIBADD=\"-lfguid\"",
          "105:    ])",
          "106:   ])",
          "108:  AS_IF(",
          "109:   [test \"x$ac_cv_libfguid\" = xyes],",
          "110:   [AC_DEFINE(",
          "111:    [HAVE_LIBFGUID],",
          "112:    [1],",
          "113:    [Define to 1 if you have the `fguid' library (-lfguid).])",
          "116:  AS_IF(",
          "117:   [test \"x$ac_cv_libfguid\" = xyes],",
          "118:   [AC_SUBST(",
          "119:    [HAVE_LIBFGUID],",
          "120:    [1]) ],",
          "121:   [AC_SUBST(",
          "122:    [HAVE_LIBFGUID],",
          "123:    [0])",
          "125:  ])",
          "129:  [AX_COMMON_ARG_WITH(",
          "130:   [libfguid],",
          "131:   [libfguid],",
          "132:   [search for libfguid in includedir and libdir or in the specified DIR, or no if to use local version],",
          "133:   [auto-detect],",
          "134:   [DIR])",
          "136:  dnl Check for a shared library version",
          "137:  AX_LIBFGUID_CHECK_LIB",
          "139:  dnl Check if the dependencies for the local library version",
          "140:  AS_IF(",
          "141:   [test \"x$ac_cv_libfguid\" != xyes],",
          "142:   [ac_cv_libfguid_CPPFLAGS=\"-I../libfguid\";",
          "143:   ac_cv_libfguid_LIBADD=\"../libfguid/libfguid.la\";",
          "145:   ac_cv_libfguid=local",
          "147:   AC_DEFINE(",
          "148:    [HAVE_LOCAL_LIBFGUID],",
          "149:    [1],",
          "150:    [Define to 1 if the local version of libfguid is used.])",
          "151:   AC_SUBST(",
          "152:    [HAVE_LOCAL_LIBFGUID],",
          "153:    [1])",
          "154:   ])",
          "156:  AM_CONDITIONAL(",
          "157:   [HAVE_LOCAL_LIBFGUID],",
          "158:   [test \"x$ac_cv_libfguid\" = xlocal])",
          "159:  AS_IF(",
          "160:   [test \"x$ac_cv_libfguid_CPPFLAGS\" != \"x\"],",
          "161:   [AC_SUBST(",
          "162:    [LIBFGUID_CPPFLAGS],",
          "163:    [$ac_cv_libfguid_CPPFLAGS])",
          "164:   ])",
          "165:  AS_IF(",
          "166:   [test \"x$ac_cv_libfguid_LIBADD\" != \"x\"],",
          "167:   [AC_SUBST(",
          "168:    [LIBFGUID_LIBADD],",
          "169:    [$ac_cv_libfguid_LIBADD])",
          "170:   ])",
          "172:  AS_IF(",
          "173:   [test \"x$ac_cv_libfguid\" = xyes],",
          "174:   [AC_SUBST(",
          "175:    [ax_libfguid_pc_libs_private],",
          "176:    [-lfguid])",
          "177:   ])",
          "179:  AS_IF(",
          "180:   [test \"x$ac_cv_libfguid\" = xyes],",
          "181:   [AC_SUBST(",
          "182:    [ax_libfguid_spec_requires],",
          "183:    [libfguid])",
          "184:   AC_SUBST(",
          "185:    [ax_libfguid_spec_build_requires],",
          "186:    [libfguid-devel])",
          "188:  ])",
          "",
          "[Added Lines]",
          "3: dnl Version: 20170906",
          "8:   [dnl Check if parameters were provided",
          "10:     [test \"x$ac_cv_with_libfguid\" != x && test \"x$ac_cv_with_libfguid\" != xno && test \"x$ac_cv_with_libfguid\" != xauto-detect],",
          "11:     [AS_IF(",
          "12:       [test -d \"$ac_cv_with_libfguid\"],",
          "13:       [CFLAGS=\"$CFLAGS -I${ac_cv_with_libfguid}/include\"",
          "14:       LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libfguid}/lib\"],",
          "15:       [AC_MSG_WARN([no such directory: $ac_cv_with_libfguid])",
          "16:       ])",
          "17:     ])",
          "20:     [test \"x$ac_cv_with_libfguid\" = xno],",
          "22:     [dnl Check for a pkg-config file",
          "23:     AS_IF(",
          "24:       [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:       [PKG_CHECK_MODULES(",
          "26:         [libfguid],",
          "27:         [libfguid >= 20120426],",
          "28:         [ac_cv_libfguid=yes],",
          "29:         [ac_cv_libfguid=no])",
          "30:       ])",
          "32:     AS_IF(",
          "33:       [test \"x$ac_cv_libfguid\" = xyes],",
          "34:       [ac_cv_libfguid_CPPFLAGS=\"$pkg_cv_libfguid_CFLAGS\"",
          "35:       ac_cv_libfguid_LIBADD=\"$pkg_cv_libfguid_LIBS\"],",
          "36:       [dnl Check for headers",
          "37:       AC_CHECK_HEADERS([libfguid.h])",
          "39:       AS_IF(",
          "40:         [test \"x$ac_cv_header_libfguid_h\" = xno],",
          "41:         [ac_cv_libfguid=no],",
          "42:         [dnl Check for the individual functions",
          "43:         ac_cv_libfguid=yes",
          "45:         AC_CHECK_LIB(",
          "46:           fguid,",
          "47:           libfguid_get_version,",
          "48:           [ac_cv_libfguid_dummy=yes],",
          "49:           [ac_cv_libfguid=no])",
          "51:         dnl Identifier functions",
          "52:         AC_CHECK_LIB(",
          "53:           fguid,",
          "54:           libfguid_identifier_initialize,",
          "55:           [ac_cv_libfguid_dummy=yes],",
          "56:           [ac_cv_libfguid=no])",
          "57:         AC_CHECK_LIB(",
          "58:           fguid,",
          "59:           libfguid_identifier_free,",
          "60:           [ac_cv_libfguid_dummy=yes],",
          "61:           [ac_cv_libfguid=no])",
          "62:         AC_CHECK_LIB(",
          "63:           fguid,",
          "64:           libfguid_identifier_copy_from_byte_stream,",
          "65:           [ac_cv_libfguid_dummy=yes],",
          "66:           [ac_cv_libfguid=no])",
          "67:         AC_CHECK_LIB(",
          "68:           fguid,",
          "69:           libfguid_identifier_get_string_size,",
          "70:           [ac_cv_libfguid_dummy=yes],",
          "71:           [ac_cv_libfguid=no])",
          "72:         AC_CHECK_LIB(",
          "73:           fguid,",
          "74:           libfguid_identifier_copy_to_utf8_string,",
          "75:           [ac_cv_libfguid_dummy=yes],",
          "76:           [ac_cv_libfguid=no])",
          "77:         AC_CHECK_LIB(",
          "78:           fguid,",
          "79:           libfguid_identifier_copy_to_utf8_string_with_index,",
          "80:           [ac_cv_libfguid_dummy=yes],",
          "81:           [ac_cv_libfguid=no])",
          "82:         AC_CHECK_LIB(",
          "83:           fguid,",
          "84:           libfguid_identifier_copy_to_utf16_string,",
          "85:           [ac_cv_libfguid_dummy=yes],",
          "86:           [ac_cv_libfguid=no])",
          "87:         AC_CHECK_LIB(",
          "88:           fguid,",
          "89:           libfguid_identifier_copy_to_utf16_string_with_index,",
          "90:           [ac_cv_libfguid_dummy=yes],",
          "91:           [ac_cv_libfguid=no])",
          "92:         AC_CHECK_LIB(",
          "93:           fguid,",
          "94:           libfguid_identifier_copy_to_utf32_string,",
          "95:           [ac_cv_libfguid_dummy=yes],",
          "96:           [ac_cv_libfguid=no])",
          "97:         AC_CHECK_LIB(",
          "98:           fguid,",
          "99:           libfguid_identifier_copy_to_utf32_string_with_index,",
          "100:           [ac_cv_libfguid_dummy=yes],",
          "101:           [ac_cv_libfguid=no])",
          "103:         ac_cv_libfguid_LIBADD=\"-lfguid\"",
          "104:         ])",
          "105:       ])",
          "106:     ])",
          "108:   AS_IF(",
          "109:     [test \"x$ac_cv_libfguid\" = xyes],",
          "110:     [AC_DEFINE(",
          "111:       [HAVE_LIBFGUID],",
          "112:       [1],",
          "113:       [Define to 1 if you have the `fguid' library (-lfguid).])",
          "116:   AS_IF(",
          "117:     [test \"x$ac_cv_libfguid\" = xyes],",
          "118:     [AC_SUBST(",
          "119:       [HAVE_LIBFGUID],",
          "120:       [1]) ],",
          "121:     [AC_SUBST(",
          "122:       [HAVE_LIBFGUID],",
          "123:       [0])",
          "124:     ])",
          "127: dnl Function to detect if libfguid dependencies are available",
          "128: AC_DEFUN([AX_LIBFGUID_CHECK_LOCAL],",
          "129:   [dnl No additional checks.",
          "131:   ac_cv_libfguid_CPPFLAGS=\"-I../libfguid\";",
          "132:   ac_cv_libfguid_LIBADD=\"../libfguid/libfguid.la\";",
          "134:   ac_cv_libfguid=local",
          "139:   [AX_COMMON_ARG_WITH(",
          "140:     [libfguid],",
          "141:     [libfguid],",
          "142:     [search for libfguid in includedir and libdir or in the specified DIR, or no if to use local version],",
          "143:     [auto-detect],",
          "144:     [DIR])",
          "146:   dnl Check for a shared library version",
          "147:   AX_LIBFGUID_CHECK_LIB",
          "149:   dnl Check if the dependencies for the local library version",
          "150:   AS_IF(",
          "151:     [test \"x$ac_cv_libfguid\" != xyes],",
          "152:     [AX_LIBFGUID_CHECK_LOCAL",
          "154:     AC_DEFINE(",
          "155:       [HAVE_LOCAL_LIBFGUID],",
          "156:       [1],",
          "157:       [Define to 1 if the local version of libfguid is used.])",
          "158:     AC_SUBST(",
          "159:       [HAVE_LOCAL_LIBFGUID],",
          "160:       [1])",
          "161:     ])",
          "163:   AM_CONDITIONAL(",
          "164:     [HAVE_LOCAL_LIBFGUID],",
          "165:     [test \"x$ac_cv_libfguid\" = xlocal])",
          "166:   AS_IF(",
          "167:     [test \"x$ac_cv_libfguid_CPPFLAGS\" != \"x\"],",
          "168:     [AC_SUBST(",
          "169:       [LIBFGUID_CPPFLAGS],",
          "170:       [$ac_cv_libfguid_CPPFLAGS])",
          "171:     ])",
          "172:   AS_IF(",
          "173:     [test \"x$ac_cv_libfguid_LIBADD\" != \"x\"],",
          "174:     [AC_SUBST(",
          "175:       [LIBFGUID_LIBADD],",
          "176:       [$ac_cv_libfguid_LIBADD])",
          "177:     ])",
          "179:   AS_IF(",
          "180:     [test \"x$ac_cv_libfguid\" = xyes],",
          "181:     [AC_SUBST(",
          "182:       [ax_libfguid_pc_libs_private],",
          "183:       [-lfguid])",
          "184:     ])",
          "186:   AS_IF(",
          "187:     [test \"x$ac_cv_libfguid\" = xyes],",
          "188:     [AC_SUBST(",
          "189:       [ax_libfguid_spec_requires],",
          "190:       [libfguid])",
          "191:     AC_SUBST(",
          "192:       [ax_libfguid_spec_build_requires],",
          "193:       [libfguid-devel])",
          "194:     ])",
          "",
          "---------------"
        ],
        "m4/libfvalue.m4||m4/libfvalue.m4": [
          "File: m4/libfvalue.m4 -> m4/libfvalue.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Functions for libfvalue",
          "2: dnl",
          "5: dnl Function to detect if libfvalue available",
          "6: dnl ac_libfvalue_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "7: AC_DEFUN([AX_LIBFVALUE_CHECK_LIB],",
          "23:   AS_IF(",
          "32:   AS_IF(",
          "41:     [ac_cv_libfvalue=no],",
          "586:     ])",
          "596:   ])",
          "606:   ])",
          "609: dnl Function to detect how to enable libfvalue",
          "610: AC_DEFUN([AX_LIBFVALUE_CHECK_ENABLE],",
          "669:   ])",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20160131",
          "8:  [dnl Check if parameters were provided",
          "9:  AS_IF(",
          "10:   [test \"x$ac_cv_with_libfvalue\" != x && test \"x$ac_cv_with_libfvalue\" != xno && test \"x$ac_cv_with_libfvalue\" != xauto-detect],",
          "11:   [AS_IF(",
          "12:    [test -d \"$ac_cv_with_libfvalue\"],",
          "13:    [CFLAGS=\"$CFLAGS -I${ac_cv_with_libfvalue}/include\"",
          "14:    LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libfvalue}/lib\"],",
          "15:    [AC_MSG_WARN([no such directory: $ac_cv_with_libfvalue])",
          "16:    ])",
          "17:   ])",
          "19:  AS_IF(",
          "20:   [test \"x$ac_cv_with_libfvalue\" = xno],",
          "21:   [ac_cv_libfvalue=no],",
          "22:   [dnl Check for a pkg-config file",
          "24:    [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:    [PKG_CHECK_MODULES(",
          "26:     [libfvalue],",
          "27:     [libfvalue >= 20160131],",
          "28:     [ac_cv_libfvalue=yes],",
          "29:     [ac_cv_libfvalue=no])",
          "30:    ])",
          "33:    [test \"x$ac_cv_libfvalue\" = xyes],",
          "34:    [ac_cv_libfvalue_CPPFLAGS=\"$pkg_cv_libfvalue_CFLAGS\"",
          "35:    ac_cv_libfvalue_LIBADD=\"$pkg_cv_libfvalue_LIBS\"],",
          "36:    [dnl Check for headers",
          "37:    AC_CHECK_HEADERS([libfvalue.h])",
          "39:    AS_IF(",
          "40:     [test \"x$ac_cv_header_libfvalue_h\" = xno],",
          "42:     [dnl Check for the individual functions",
          "43:     ac_cv_libfvalue=yes",
          "45:     AC_CHECK_LIB(",
          "46:      fvalue,",
          "47:      libfvalue_get_version,",
          "48:      [ac_cv_libfvalue_dummy=yes],",
          "49:      [ac_cv_libfvalue=no])",
          "51:     dnl Data handle functions",
          "52:     AC_CHECK_LIB(",
          "53:      fvalue,",
          "54:      libfvalue_data_handle_initialize,",
          "55:      [ac_cv_libfvalue_dummy=yes],",
          "56:      [ac_cv_libfvalue=no])",
          "57:     AC_CHECK_LIB(",
          "58:      fvalue,",
          "59:      libfvalue_data_handle_free,",
          "60:      [ac_cv_libfvalue_dummy=yes],",
          "61:      [ac_cv_libfvalue=no])",
          "62:     AC_CHECK_LIB(",
          "63:      fvalue,",
          "64:      libfvalue_data_handle_clone,",
          "65:      [ac_cv_libfvalue_dummy=yes],",
          "66:      [ac_cv_libfvalue=no])",
          "67:     AC_CHECK_LIB(",
          "68:      fvalue,",
          "69:      libfvalue_data_handle_clear,",
          "70:      [ac_cv_libfvalue_dummy=yes],",
          "71:      [ac_cv_libfvalue=no])",
          "73:     AC_CHECK_LIB(",
          "74:      fvalue,",
          "75:      libfvalue_data_handle_get_data,",
          "76:      [ac_cv_libfvalue_dummy=yes],",
          "77:      [ac_cv_libfvalue=no])",
          "78:     AC_CHECK_LIB(",
          "79:      fvalue,",
          "80:      libfvalue_data_handle_set_data,",
          "81:      [ac_cv_libfvalue_dummy=yes],",
          "82:      [ac_cv_libfvalue=no])",
          "84:     AC_CHECK_LIB(",
          "85:      fvalue,",
          "86:      libfvalue_data_handle_get_data_flags,",
          "87:      [ac_cv_libfvalue_dummy=yes],",
          "88:      [ac_cv_libfvalue=no])",
          "89:     AC_CHECK_LIB(",
          "90:      fvalue,",
          "91:      libfvalue_data_handle_set_data_flags,",
          "92:      [ac_cv_libfvalue_dummy=yes],",
          "93:      [ac_cv_libfvalue=no])",
          "95:     AC_CHECK_LIB(",
          "96:      fvalue,",
          "97:      libfvalue_data_handle_get_number_of_value_entries,",
          "98:      [ac_cv_libfvalue_dummy=yes],",
          "99:      [ac_cv_libfvalue=no])",
          "100:     AC_CHECK_LIB(",
          "101:      fvalue,",
          "102:      libfvalue_data_handle_get_value_entry,",
          "103:      [ac_cv_libfvalue_dummy=yes],",
          "104:      [ac_cv_libfvalue=no])",
          "105:     AC_CHECK_LIB(",
          "106:      fvalue,",
          "107:      libfvalue_data_handle_set_value_entry,",
          "108:      [ac_cv_libfvalue_dummy=yes],",
          "109:      [ac_cv_libfvalue=no])",
          "110:     AC_CHECK_LIB(",
          "111:      fvalue,",
          "112:      libfvalue_data_handle_append_value_entry,",
          "113:      [ac_cv_libfvalue_dummy=yes],",
          "114:      [ac_cv_libfvalue=no])",
          "116:     dnl Integer functions",
          "117:     AC_CHECK_LIB(",
          "118:      fvalue,",
          "119:      libfvalue_string_size_from_integer,",
          "120:      [ac_cv_libfvalue_dummy=yes],",
          "121:      [ac_cv_libfvalue=no])",
          "123:     AC_CHECK_LIB(",
          "124:      fvalue,",
          "125:      libfvalue_utf8_string_copy_from_integer,",
          "126:      [ac_cv_libfvalue_dummy=yes],",
          "127:      [ac_cv_libfvalue=no])",
          "128:     AC_CHECK_LIB(",
          "129:      fvalue,",
          "130:      libfvalue_utf8_string_with_index_copy_from_integer,",
          "131:      [ac_cv_libfvalue_dummy=yes],",
          "132:      [ac_cv_libfvalue=no])",
          "133:     AC_CHECK_LIB(",
          "134:      fvalue,",
          "135:      libfvalue_utf8_string_copy_to_integer,",
          "136:      [ac_cv_libfvalue_dummy=yes],",
          "137:      [ac_cv_libfvalue=no])",
          "138:     AC_CHECK_LIB(",
          "139:      fvalue,",
          "140:      libfvalue_utf8_string_with_index_copy_to_integer,",
          "141:      [ac_cv_libfvalue_dummy=yes],",
          "142:      [ac_cv_libfvalue=no])",
          "144:     AC_CHECK_LIB(",
          "145:      fvalue,",
          "146:      libfvalue_utf16_string_copy_from_integer,",
          "147:      [ac_cv_libfvalue_dummy=yes],",
          "148:      [ac_cv_libfvalue=no])",
          "149:     AC_CHECK_LIB(",
          "150:      fvalue,",
          "151:      libfvalue_utf16_string_with_index_copy_from_integer,",
          "152:      [ac_cv_libfvalue_dummy=yes],",
          "153:      [ac_cv_libfvalue=no])",
          "154:     AC_CHECK_LIB(",
          "155:      fvalue,",
          "156:      libfvalue_utf16_string_copy_to_integer,",
          "157:      [ac_cv_libfvalue_dummy=yes],",
          "158:      [ac_cv_libfvalue=no])",
          "159:     AC_CHECK_LIB(",
          "160:      fvalue,",
          "161:      libfvalue_utf16_string_with_index_copy_to_integer,",
          "162:      [ac_cv_libfvalue_dummy=yes],",
          "163:      [ac_cv_libfvalue=no])",
          "165:     AC_CHECK_LIB(",
          "166:      fvalue,",
          "167:      libfvalue_utf32_string_copy_from_integer,",
          "168:      [ac_cv_libfvalue_dummy=yes],",
          "169:      [ac_cv_libfvalue=no])",
          "170:     AC_CHECK_LIB(",
          "171:      fvalue,",
          "172:      libfvalue_utf32_string_with_index_copy_from_integer,",
          "173:      [ac_cv_libfvalue_dummy=yes],",
          "174:      [ac_cv_libfvalue=no])",
          "175:     AC_CHECK_LIB(",
          "176:      fvalue,",
          "177:      libfvalue_utf32_string_copy_to_integer,",
          "178:      [ac_cv_libfvalue_dummy=yes],",
          "179:      [ac_cv_libfvalue=no])",
          "180:     AC_CHECK_LIB(",
          "181:      fvalue,",
          "182:      libfvalue_utf32_string_with_index_copy_to_integer,",
          "183:      [ac_cv_libfvalue_dummy=yes],",
          "184:      [ac_cv_libfvalue=no])",
          "186:     dnl String functions",
          "187:     AC_CHECK_LIB(",
          "188:      fvalue,",
          "189:      libfvalue_utf8_string_split,",
          "190:      [ac_cv_libfvalue_dummy=yes],",
          "191:      [ac_cv_libfvalue=no])",
          "193:     AC_CHECK_LIB(",
          "194:      fvalue,",
          "195:      libfvalue_utf16_string_split,",
          "196:      [ac_cv_libfvalue_dummy=yes],",
          "197:      [ac_cv_libfvalue=no])",
          "199:     dnl Split string functions",
          "200:     AC_CHECK_LIB(",
          "201:      fvalue,",
          "202:      libfvalue_split_utf8_string_free,",
          "203:      [ac_cv_libfvalue_dummy=yes],",
          "204:      [ac_cv_libfvalue=no])",
          "205:     AC_CHECK_LIB(",
          "206:      fvalue,",
          "207:      libfvalue_split_utf8_string_get_string,",
          "208:      [ac_cv_libfvalue_dummy=yes],",
          "209:      [ac_cv_libfvalue=no])",
          "210:     AC_CHECK_LIB(",
          "211:      fvalue,",
          "212:      libfvalue_split_utf8_string_get_number_of_segments,",
          "213:      [ac_cv_libfvalue_dummy=yes],",
          "214:      [ac_cv_libfvalue=no])",
          "215:     AC_CHECK_LIB(",
          "216:      fvalue,",
          "217:      libfvalue_split_utf8_string_get_segment_by_index,",
          "218:      [ac_cv_libfvalue_dummy=yes],",
          "219:      [ac_cv_libfvalue=no])",
          "221:     AC_CHECK_LIB(",
          "222:      fvalue,",
          "223:      libfvalue_split_utf16_string_free,",
          "224:      [ac_cv_libfvalue_dummy=yes],",
          "225:      [ac_cv_libfvalue=no])",
          "226:     AC_CHECK_LIB(",
          "227:      fvalue,",
          "228:      libfvalue_split_utf16_string_get_string,",
          "229:      [ac_cv_libfvalue_dummy=yes],",
          "230:      [ac_cv_libfvalue=no])",
          "231:     AC_CHECK_LIB(",
          "232:      fvalue,",
          "233:      libfvalue_split_utf16_string_get_number_of_segments,",
          "234:      [ac_cv_libfvalue_dummy=yes],",
          "235:      [ac_cv_libfvalue=no])",
          "236:     AC_CHECK_LIB(",
          "237:      fvalue,",
          "238:      libfvalue_split_utf16_string_get_segment_by_index,",
          "239:      [ac_cv_libfvalue_dummy=yes],",
          "240:      [ac_cv_libfvalue=no])",
          "242:     dnl Table functions",
          "243:     AC_CHECK_LIB(",
          "244:      fvalue,",
          "245:      libfvalue_table_initialize,",
          "246:      [ac_cv_libfvalue_dummy=yes],",
          "247:      [ac_cv_libfvalue=no])",
          "248:     AC_CHECK_LIB(",
          "249:      fvalue,",
          "250:      libfvalue_table_free,",
          "251:      [ac_cv_libfvalue_dummy=yes],",
          "252:      [ac_cv_libfvalue=no])",
          "253:     AC_CHECK_LIB(",
          "254:      fvalue,",
          "255:      libfvalue_table_resize,",
          "256:      [ac_cv_libfvalue_dummy=yes],",
          "257:      [ac_cv_libfvalue=no])",
          "258:     AC_CHECK_LIB(",
          "259:      fvalue,",
          "260:      libfvalue_table_clone,",
          "261:      [ac_cv_libfvalue_dummy=yes],",
          "262:      [ac_cv_libfvalue=no])",
          "264:     AC_CHECK_LIB(",
          "265:      fvalue,",
          "266:      libfvalue_table_get_number_of_values,",
          "267:      [ac_cv_libfvalue_dummy=yes],",
          "268:      [ac_cv_libfvalue=no])",
          "270:     AC_CHECK_LIB(",
          "271:      fvalue,",
          "272:      libfvalue_table_get_index_by_identifier,",
          "273:      [ac_cv_libfvalue_dummy=yes],",
          "274:      [ac_cv_libfvalue=no])",
          "276:     AC_CHECK_LIB(",
          "277:      fvalue,",
          "278:      libfvalue_table_get_value_by_index,",
          "279:      [ac_cv_libfvalue_dummy=yes],",
          "280:      [ac_cv_libfvalue=no])",
          "281:     AC_CHECK_LIB(",
          "282:      fvalue,",
          "283:      libfvalue_table_get_value_by_identifier,",
          "284:      [ac_cv_libfvalue_dummy=yes],",
          "285:      [ac_cv_libfvalue=no])",
          "286:     AC_CHECK_LIB(",
          "287:      fvalue,",
          "288:      libfvalue_table_set_value_by_index,",
          "289:      [ac_cv_libfvalue_dummy=yes],",
          "290:      [ac_cv_libfvalue=no])",
          "291:     AC_CHECK_LIB(",
          "292:      fvalue,",
          "293:      libfvalue_table_set_value,",
          "294:      [ac_cv_libfvalue_dummy=yes],",
          "295:      [ac_cv_libfvalue=no])",
          "297:     AC_CHECK_LIB(",
          "298:      fvalue,",
          "299:      libfvalue_table_copy_from_utf8_xml_string,",
          "300:      [ac_cv_libfvalue_dummy=yes],",
          "301:      [ac_cv_libfvalue=no])",
          "303:     dnl Value functions",
          "304:     AC_CHECK_LIB(",
          "305:      fvalue,",
          "306:      libfvalue_value_initialize,",
          "307:      [ac_cv_libfvalue_dummy=yes],",
          "308:      [ac_cv_libfvalue=no])",
          "309:     AC_CHECK_LIB(",
          "310:      fvalue,",
          "311:      libfvalue_value_free,",
          "312:      [ac_cv_libfvalue_dummy=yes],",
          "313:      [ac_cv_libfvalue=no])",
          "314:     AC_CHECK_LIB(",
          "315:      fvalue,",
          "316:      libfvalue_value_clone,",
          "317:      [ac_cv_libfvalue_dummy=yes],",
          "318:      [ac_cv_libfvalue=no])",
          "319:     AC_CHECK_LIB(",
          "320:      fvalue,",
          "321:      libfvalue_value_clear,",
          "322:      [ac_cv_libfvalue_dummy=yes],",
          "323:      [ac_cv_libfvalue=no])",
          "325:     AC_CHECK_LIB(",
          "326:      fvalue,",
          "327:      libfvalue_value_get_type,",
          "328:      [ac_cv_libfvalue_dummy=yes],",
          "329:      [ac_cv_libfvalue=no])",
          "331:     AC_CHECK_LIB(",
          "332:      fvalue,",
          "333:      libfvalue_value_get_identifier,",
          "334:      [ac_cv_libfvalue_dummy=yes],",
          "335:      [ac_cv_libfvalue=no])",
          "336:     AC_CHECK_LIB(",
          "337:      fvalue,",
          "338:      libfvalue_value_set_identifier,",
          "339:      [ac_cv_libfvalue_dummy=yes],",
          "340:      [ac_cv_libfvalue=no])",
          "342:     AC_CHECK_LIB(",
          "343:      fvalue,",
          "344:      libfvalue_value_get_data_handle,",
          "345:      [ac_cv_libfvalue_dummy=yes],",
          "346:      [ac_cv_libfvalue=no])",
          "347:     AC_CHECK_LIB(",
          "348:      fvalue,",
          "349:      libfvalue_value_has_data,",
          "350:      [ac_cv_libfvalue_dummy=yes],",
          "351:      [ac_cv_libfvalue=no])",
          "352:     AC_CHECK_LIB(",
          "353:      fvalue,",
          "354:      libfvalue_value_get_data_size,",
          "355:      [ac_cv_libfvalue_dummy=yes],",
          "356:      [ac_cv_libfvalue=no])",
          "357:     AC_CHECK_LIB(",
          "358:      fvalue,",
          "359:      libfvalue_value_get_data,",
          "360:      [ac_cv_libfvalue_dummy=yes],",
          "361:      [ac_cv_libfvalue=no])",
          "362:     AC_CHECK_LIB(",
          "363:      fvalue,",
          "364:      libfvalue_value_set_data,",
          "365:      [ac_cv_libfvalue_dummy=yes],",
          "366:      [ac_cv_libfvalue=no])",
          "367:     AC_CHECK_LIB(",
          "368:      fvalue,",
          "369:      libfvalue_value_copy_data,",
          "370:      [ac_cv_libfvalue_dummy=yes],",
          "371:      [ac_cv_libfvalue=no])",
          "373:     AC_CHECK_LIB(",
          "374:      fvalue,",
          "375:      libfvalue_value_get_format_flags,",
          "376:      [ac_cv_libfvalue_dummy=yes],",
          "377:      [ac_cv_libfvalue=no])",
          "378:     AC_CHECK_LIB(",
          "379:      fvalue,",
          "380:      libfvalue_value_set_format_flags,",
          "381:      [ac_cv_libfvalue_dummy=yes],",
          "382:      [ac_cv_libfvalue=no])",
          "384:     AC_CHECK_LIB(",
          "385:      fvalue,",
          "386:      libfvalue_value_get_number_of_value_entries,",
          "387:      [ac_cv_libfvalue_dummy=yes],",
          "388:      [ac_cv_libfvalue=no])",
          "389:     AC_CHECK_LIB(",
          "390:      fvalue,",
          "391:      libfvalue_value_get_value_entry,",
          "392:      [ac_cv_libfvalue_dummy=yes],",
          "393:      [ac_cv_libfvalue=no])",
          "394:     AC_CHECK_LIB(",
          "395:      fvalue,",
          "396:      libfvalue_value_set_value_entry,",
          "397:      [ac_cv_libfvalue_dummy=yes],",
          "398:      [ac_cv_libfvalue=no])",
          "399:     AC_CHECK_LIB(",
          "400:      fvalue,",
          "401:      libfvalue_value_append_value_entry,",
          "402:      [ac_cv_libfvalue_dummy=yes],",
          "403:      [ac_cv_libfvalue=no])",
          "405:     AC_CHECK_LIB(",
          "406:      fvalue,",
          "407:      libfvalue_value_copy_from_boolean,",
          "408:      [ac_cv_libfvalue_dummy=yes],",
          "409:      [ac_cv_libfvalue=no])",
          "410:     AC_CHECK_LIB(",
          "411:      fvalue,",
          "412:      libfvalue_value_copy_to_boolean,",
          "413:      [ac_cv_libfvalue_dummy=yes],",
          "414:      [ac_cv_libfvalue=no])",
          "416:     AC_CHECK_LIB(",
          "417:      fvalue,",
          "418:      libfvalue_value_copy_from_8bit,",
          "419:      [ac_cv_libfvalue_dummy=yes],",
          "420:      [ac_cv_libfvalue=no])",
          "421:     AC_CHECK_LIB(",
          "422:      fvalue,",
          "423:      libfvalue_value_copy_to_8bit,",
          "424:      [ac_cv_libfvalue_dummy=yes],",
          "425:      [ac_cv_libfvalue=no])",
          "427:     AC_CHECK_LIB(",
          "428:      fvalue,",
          "429:      libfvalue_value_copy_from_16bit,",
          "430:      [ac_cv_libfvalue_dummy=yes],",
          "431:      [ac_cv_libfvalue=no])",
          "432:     AC_CHECK_LIB(",
          "433:      fvalue,",
          "434:      libfvalue_value_copy_to_16bit,",
          "435:      [ac_cv_libfvalue_dummy=yes],",
          "436:      [ac_cv_libfvalue=no])",
          "438:     AC_CHECK_LIB(",
          "439:      fvalue,",
          "440:      libfvalue_value_copy_from_32bit,",
          "441:      [ac_cv_libfvalue_dummy=yes],",
          "442:      [ac_cv_libfvalue=no])",
          "443:     AC_CHECK_LIB(",
          "444:      fvalue,",
          "445:      libfvalue_value_copy_to_32bit,",
          "446:      [ac_cv_libfvalue_dummy=yes],",
          "447:      [ac_cv_libfvalue=no])",
          "449:     AC_CHECK_LIB(",
          "450:      fvalue,",
          "451:      libfvalue_value_copy_from_64bit,",
          "452:      [ac_cv_libfvalue_dummy=yes],",
          "453:      [ac_cv_libfvalue=no])",
          "454:     AC_CHECK_LIB(",
          "455:      fvalue,",
          "456:      libfvalue_value_copy_to_64bit,",
          "457:      [ac_cv_libfvalue_dummy=yes],",
          "458:      [ac_cv_libfvalue=no])",
          "460:     AC_CHECK_LIB(",
          "461:      fvalue,",
          "462:      libfvalue_value_copy_from_float,",
          "463:      [ac_cv_libfvalue_dummy=yes],",
          "464:      [ac_cv_libfvalue=no])",
          "465:     AC_CHECK_LIB(",
          "466:      fvalue,",
          "467:      libfvalue_value_copy_to_float,",
          "468:      [ac_cv_libfvalue_dummy=yes],",
          "469:      [ac_cv_libfvalue=no])",
          "471:     AC_CHECK_LIB(",
          "472:      fvalue,",
          "473:      libfvalue_value_copy_from_double,",
          "474:      [ac_cv_libfvalue_dummy=yes],",
          "475:      [ac_cv_libfvalue=no])",
          "476:     AC_CHECK_LIB(",
          "477:      fvalue,",
          "478:      libfvalue_value_copy_to_double,",
          "479:      [ac_cv_libfvalue_dummy=yes],",
          "480:      [ac_cv_libfvalue=no])",
          "482:     AC_CHECK_LIB(",
          "483:      fvalue,",
          "484:      libfvalue_value_copy_from_utf8_string,",
          "485:      [ac_cv_libfvalue_dummy=yes],",
          "486:      [ac_cv_libfvalue=no])",
          "487:     AC_CHECK_LIB(",
          "488:      fvalue,",
          "489:      libfvalue_value_get_utf8_string_size,",
          "490:      [ac_cv_libfvalue_dummy=yes],",
          "491:      [ac_cv_libfvalue=no])",
          "492:     AC_CHECK_LIB(",
          "493:      fvalue,",
          "494:      libfvalue_value_copy_to_utf8_string,",
          "495:      [ac_cv_libfvalue_dummy=yes],",
          "496:      [ac_cv_libfvalue=no])",
          "497:     AC_CHECK_LIB(",
          "498:      fvalue,",
          "499:      libfvalue_value_copy_to_utf8_string_with_index,",
          "500:      [ac_cv_libfvalue_dummy=yes],",
          "501:      [ac_cv_libfvalue=no])",
          "503:     AC_CHECK_LIB(",
          "504:      fvalue,",
          "505:      libfvalue_value_copy_from_utf16_string,",
          "506:      [ac_cv_libfvalue_dummy=yes],",
          "507:      [ac_cv_libfvalue=no])",
          "508:     AC_CHECK_LIB(",
          "509:      fvalue,",
          "510:      libfvalue_value_get_utf16_string_size,",
          "511:      [ac_cv_libfvalue_dummy=yes],",
          "512:      [ac_cv_libfvalue=no])",
          "513:     AC_CHECK_LIB(",
          "514:      fvalue,",
          "515:      libfvalue_value_copy_to_utf16_string,",
          "516:      [ac_cv_libfvalue_dummy=yes],",
          "517:      [ac_cv_libfvalue=no])",
          "518:     AC_CHECK_LIB(",
          "519:      fvalue,",
          "520:      libfvalue_value_copy_to_utf16_string_with_index,",
          "521:      [ac_cv_libfvalue_dummy=yes],",
          "522:      [ac_cv_libfvalue=no])",
          "524:     AC_CHECK_LIB(",
          "525:      fvalue,",
          "526:      libfvalue_value_copy_from_utf32_string,",
          "527:      [ac_cv_libfvalue_dummy=yes],",
          "528:      [ac_cv_libfvalue=no])",
          "529:     AC_CHECK_LIB(",
          "530:      fvalue,",
          "531:      libfvalue_value_get_utf32_string_size,",
          "532:      [ac_cv_libfvalue_dummy=yes],",
          "533:      [ac_cv_libfvalue=no])",
          "534:     AC_CHECK_LIB(",
          "535:      fvalue,",
          "536:      libfvalue_value_copy_to_utf32_string,",
          "537:      [ac_cv_libfvalue_dummy=yes],",
          "538:      [ac_cv_libfvalue=no])",
          "539:     AC_CHECK_LIB(",
          "540:      fvalue,",
          "541:      libfvalue_value_copy_to_utf32_string_with_index,",
          "542:      [ac_cv_libfvalue_dummy=yes],",
          "543:      [ac_cv_libfvalue=no])",
          "545:     AC_CHECK_LIB(",
          "546:      fvalue,",
          "547:      libfvalue_value_read_from_file_stream,",
          "548:      [ac_cv_libfvalue_dummy=yes],",
          "549:      [ac_cv_libfvalue=no])",
          "550:     AC_CHECK_LIB(",
          "551:      fvalue,",
          "552:      libfvalue_value_write_to_file_stream,",
          "553:      [ac_cv_libfvalue_dummy=yes],",
          "554:      [ac_cv_libfvalue=no])",
          "556:     dnl Value type functions",
          "557:     AC_CHECK_LIB(",
          "558:      fvalue,",
          "559:      libfvalue_value_type_initialize,",
          "560:      [ac_cv_libfvalue_dummy=yes],",
          "561:      [ac_cv_libfvalue=no])",
          "562:     AC_CHECK_LIB(",
          "563:      fvalue,",
          "564:      libfvalue_value_type_initialize_with_data_handle,",
          "565:      [ac_cv_libfvalue_dummy=yes],",
          "566:      [ac_cv_libfvalue=no])",
          "568:     AC_CHECK_LIB(",
          "569:      fvalue,",
          "570:      libfvalue_value_type_set_data_string,",
          "571:      [ac_cv_libfvalue_dummy=yes],",
          "572:      [ac_cv_libfvalue=no])",
          "573:     AC_CHECK_LIB(",
          "574:      fvalue,",
          "575:      libfvalue_value_type_append_data_string,",
          "576:      [ac_cv_libfvalue_dummy=yes],",
          "577:      [ac_cv_libfvalue=no])",
          "579:     AC_CHECK_LIB(",
          "580:      fvalue,",
          "581:      libfvalue_value_type_set_data_strings_array,",
          "582:      [ac_cv_libfvalue_dummy=yes],",
          "583:      [ac_cv_libfvalue=no])",
          "585:     ac_cv_libfvalue_LIBADD=\"-lfvalue\"",
          "587:    ])",
          "588:   ])",
          "590:  AS_IF(",
          "591:   [test \"x$ac_cv_libfvalue\" = xyes],",
          "592:   [AC_DEFINE(",
          "593:    [HAVE_LIBFVALUE],",
          "594:    [1],",
          "595:    [Define to 1 if you have the `fvalue' library (-lfvalue).])",
          "598:  AS_IF(",
          "599:   [test \"x$ac_cv_libfvalue\" = xyes],",
          "600:   [AC_SUBST(",
          "601:    [HAVE_LIBFVALUE],",
          "602:    [1]) ],",
          "603:   [AC_SUBST(",
          "604:    [HAVE_LIBFVALUE],",
          "605:    [0])",
          "607:  ])",
          "611:  [AX_COMMON_ARG_WITH(",
          "612:   [libfvalue],",
          "613:   [libfvalue],",
          "614:   [search for libfvalue in includedir and libdir or in the specified DIR, or no if to use local version],",
          "615:   [auto-detect],",
          "616:   [DIR])",
          "618:  dnl Check for a shared library version",
          "619:  AX_LIBFVALUE_CHECK_LIB",
          "621:  dnl Check if the dependencies for the local library version",
          "622:  AS_IF(",
          "623:   [test \"x$ac_cv_libfvalue\" != xyes],",
          "624:   [ac_cv_libfvalue_CPPFLAGS=\"-I../libfvalue\";",
          "625:   ac_cv_libfvalue_LIBADD=\"../libfvalue/libfvalue.la\";",
          "627:   ac_cv_libfvalue=local",
          "629:   AC_DEFINE(",
          "630:    [HAVE_LOCAL_LIBFVALUE],",
          "631:    [1],",
          "632:    [Define to 1 if the local version of libfvalue is used.])",
          "633:   AC_SUBST(",
          "634:    [HAVE_LOCAL_LIBFVALUE],",
          "635:    [1])",
          "636:   ])",
          "638:  AM_CONDITIONAL(",
          "639:   [HAVE_LOCAL_LIBFVALUE],",
          "640:   [test \"x$ac_cv_libfvalue\" = xlocal])",
          "641:  AS_IF(",
          "642:   [test \"x$ac_cv_libfvalue_CPPFLAGS\" != \"x\"],",
          "643:   [AC_SUBST(",
          "644:    [LIBFVALUE_CPPFLAGS],",
          "645:    [$ac_cv_libfvalue_CPPFLAGS])",
          "646:   ])",
          "647:  AS_IF(",
          "648:   [test \"x$ac_cv_libfvalue_LIBADD\" != \"x\"],",
          "649:   [AC_SUBST(",
          "650:    [LIBFVALUE_LIBADD],",
          "651:    [$ac_cv_libfvalue_LIBADD])",
          "652:   ])",
          "654:  AS_IF(",
          "655:   [test \"x$ac_cv_libfvalue\" = xyes],",
          "656:   [AC_SUBST(",
          "657:    [ax_libfvalue_pc_libs_private],",
          "658:    [-lfvalue])",
          "659:   ])",
          "661:  AS_IF(",
          "662:   [test \"x$ac_cv_libfvalue\" = xyes],",
          "663:   [AC_SUBST(",
          "664:    [ax_libfvalue_spec_requires],",
          "665:    [libfvalue])",
          "666:   AC_SUBST(",
          "667:    [ax_libfvalue_spec_build_requires],",
          "668:    [libfvalue-devel])",
          "670:  ])",
          "",
          "[Added Lines]",
          "3: dnl Version: 20170908",
          "8:   [dnl Check if parameters were provided",
          "10:     [test \"x$ac_cv_with_libfvalue\" != x && test \"x$ac_cv_with_libfvalue\" != xno && test \"x$ac_cv_with_libfvalue\" != xauto-detect],",
          "11:     [AS_IF(",
          "12:       [test -d \"$ac_cv_with_libfvalue\"],",
          "13:       [CFLAGS=\"$CFLAGS -I${ac_cv_with_libfvalue}/include\"",
          "14:       LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libfvalue}/lib\"],",
          "15:       [AC_MSG_WARN([no such directory: $ac_cv_with_libfvalue])",
          "16:       ])",
          "17:     ])",
          "20:     [test \"x$ac_cv_with_libfvalue\" = xno],",
          "22:     [dnl Check for a pkg-config file",
          "23:     AS_IF(",
          "24:       [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:       [PKG_CHECK_MODULES(",
          "26:         [libfvalue],",
          "27:         [libfvalue >= 20160131],",
          "28:         [ac_cv_libfvalue=yes],",
          "29:         [ac_cv_libfvalue=no])",
          "30:       ])",
          "32:     AS_IF(",
          "33:       [test \"x$ac_cv_libfvalue\" = xyes],",
          "34:       [ac_cv_libfvalue_CPPFLAGS=\"$pkg_cv_libfvalue_CFLAGS\"",
          "35:       ac_cv_libfvalue_LIBADD=\"$pkg_cv_libfvalue_LIBS\"],",
          "36:       [dnl Check for headers",
          "37:       AC_CHECK_HEADERS([libfvalue.h])",
          "39:       AS_IF(",
          "40:         [test \"x$ac_cv_header_libfvalue_h\" = xno],",
          "41:         [ac_cv_libfvalue=no],",
          "42:         [dnl Check for the individual functions",
          "43:         ac_cv_libfvalue=yes",
          "45:         AC_CHECK_LIB(",
          "46:           fvalue,",
          "47:           libfvalue_get_version,",
          "48:           [ac_cv_libfvalue_dummy=yes],",
          "49:           [ac_cv_libfvalue=no])",
          "51:         dnl Data handle functions",
          "52:         AC_CHECK_LIB(",
          "53:           fvalue,",
          "54:           libfvalue_data_handle_initialize,",
          "55:           [ac_cv_libfvalue_dummy=yes],",
          "56:           [ac_cv_libfvalue=no])",
          "57:         AC_CHECK_LIB(",
          "58:           fvalue,",
          "59:           libfvalue_data_handle_free,",
          "60:           [ac_cv_libfvalue_dummy=yes],",
          "61:           [ac_cv_libfvalue=no])",
          "62:         AC_CHECK_LIB(",
          "63:           fvalue,",
          "64:           libfvalue_data_handle_clone,",
          "65:           [ac_cv_libfvalue_dummy=yes],",
          "66:           [ac_cv_libfvalue=no])",
          "67:         AC_CHECK_LIB(",
          "68:           fvalue,",
          "69:           libfvalue_data_handle_clear,",
          "70:           [ac_cv_libfvalue_dummy=yes],",
          "71:           [ac_cv_libfvalue=no])",
          "73:         AC_CHECK_LIB(",
          "74:           fvalue,",
          "75:           libfvalue_data_handle_get_data,",
          "76:           [ac_cv_libfvalue_dummy=yes],",
          "77:           [ac_cv_libfvalue=no])",
          "78:         AC_CHECK_LIB(",
          "79:           fvalue,",
          "80:           libfvalue_data_handle_set_data,",
          "81:           [ac_cv_libfvalue_dummy=yes],",
          "82:           [ac_cv_libfvalue=no])",
          "84:         AC_CHECK_LIB(",
          "85:           fvalue,",
          "86:           libfvalue_data_handle_get_data_flags,",
          "87:           [ac_cv_libfvalue_dummy=yes],",
          "88:           [ac_cv_libfvalue=no])",
          "89:         AC_CHECK_LIB(",
          "90:           fvalue,",
          "91:           libfvalue_data_handle_set_data_flags,",
          "92:           [ac_cv_libfvalue_dummy=yes],",
          "93:           [ac_cv_libfvalue=no])",
          "95:         AC_CHECK_LIB(",
          "96:           fvalue,",
          "97:           libfvalue_data_handle_get_number_of_value_entries,",
          "98:           [ac_cv_libfvalue_dummy=yes],",
          "99:           [ac_cv_libfvalue=no])",
          "100:         AC_CHECK_LIB(",
          "101:           fvalue,",
          "102:           libfvalue_data_handle_get_value_entry,",
          "103:           [ac_cv_libfvalue_dummy=yes],",
          "104:           [ac_cv_libfvalue=no])",
          "105:         AC_CHECK_LIB(",
          "106:           fvalue,",
          "107:           libfvalue_data_handle_set_value_entry,",
          "108:           [ac_cv_libfvalue_dummy=yes],",
          "109:           [ac_cv_libfvalue=no])",
          "110:         AC_CHECK_LIB(",
          "111:           fvalue,",
          "112:           libfvalue_data_handle_append_value_entry,",
          "113:           [ac_cv_libfvalue_dummy=yes],",
          "114:           [ac_cv_libfvalue=no])",
          "116:         dnl Integer functions",
          "117:         AC_CHECK_LIB(",
          "118:           fvalue,",
          "119:           libfvalue_string_size_from_integer,",
          "120:           [ac_cv_libfvalue_dummy=yes],",
          "121:           [ac_cv_libfvalue=no])",
          "123:         AC_CHECK_LIB(",
          "124:           fvalue,",
          "125:           libfvalue_utf8_string_copy_from_integer,",
          "126:           [ac_cv_libfvalue_dummy=yes],",
          "127:           [ac_cv_libfvalue=no])",
          "128:         AC_CHECK_LIB(",
          "129:           fvalue,",
          "130:           libfvalue_utf8_string_with_index_copy_from_integer,",
          "131:           [ac_cv_libfvalue_dummy=yes],",
          "132:           [ac_cv_libfvalue=no])",
          "133:         AC_CHECK_LIB(",
          "134:           fvalue,",
          "135:           libfvalue_utf8_string_copy_to_integer,",
          "136:           [ac_cv_libfvalue_dummy=yes],",
          "137:           [ac_cv_libfvalue=no])",
          "138:         AC_CHECK_LIB(",
          "139:           fvalue,",
          "140:           libfvalue_utf8_string_with_index_copy_to_integer,",
          "141:           [ac_cv_libfvalue_dummy=yes],",
          "142:           [ac_cv_libfvalue=no])",
          "144:         AC_CHECK_LIB(",
          "145:           fvalue,",
          "146:           libfvalue_utf16_string_copy_from_integer,",
          "147:           [ac_cv_libfvalue_dummy=yes],",
          "148:           [ac_cv_libfvalue=no])",
          "149:         AC_CHECK_LIB(",
          "150:           fvalue,",
          "151:           libfvalue_utf16_string_with_index_copy_from_integer,",
          "152:           [ac_cv_libfvalue_dummy=yes],",
          "153:           [ac_cv_libfvalue=no])",
          "154:         AC_CHECK_LIB(",
          "155:           fvalue,",
          "156:           libfvalue_utf16_string_copy_to_integer,",
          "157:           [ac_cv_libfvalue_dummy=yes],",
          "158:           [ac_cv_libfvalue=no])",
          "159:         AC_CHECK_LIB(",
          "160:           fvalue,",
          "161:           libfvalue_utf16_string_with_index_copy_to_integer,",
          "162:           [ac_cv_libfvalue_dummy=yes],",
          "163:           [ac_cv_libfvalue=no])",
          "165:         AC_CHECK_LIB(",
          "166:           fvalue,",
          "167:           libfvalue_utf32_string_copy_from_integer,",
          "168:           [ac_cv_libfvalue_dummy=yes],",
          "169:           [ac_cv_libfvalue=no])",
          "170:         AC_CHECK_LIB(",
          "171:           fvalue,",
          "172:           libfvalue_utf32_string_with_index_copy_from_integer,",
          "173:           [ac_cv_libfvalue_dummy=yes],",
          "174:           [ac_cv_libfvalue=no])",
          "175:         AC_CHECK_LIB(",
          "176:           fvalue,",
          "177:           libfvalue_utf32_string_copy_to_integer,",
          "178:           [ac_cv_libfvalue_dummy=yes],",
          "179:           [ac_cv_libfvalue=no])",
          "180:         AC_CHECK_LIB(",
          "181:           fvalue,",
          "182:           libfvalue_utf32_string_with_index_copy_to_integer,",
          "183:           [ac_cv_libfvalue_dummy=yes],",
          "184:           [ac_cv_libfvalue=no])",
          "186:         dnl String functions",
          "187:         AC_CHECK_LIB(",
          "188:           fvalue,",
          "189:           libfvalue_utf8_string_split,",
          "190:           [ac_cv_libfvalue_dummy=yes],",
          "191:           [ac_cv_libfvalue=no])",
          "193:         AC_CHECK_LIB(",
          "194:           fvalue,",
          "195:           libfvalue_utf16_string_split,",
          "196:           [ac_cv_libfvalue_dummy=yes],",
          "197:           [ac_cv_libfvalue=no])",
          "199:         dnl Split string functions",
          "200:         AC_CHECK_LIB(",
          "201:           fvalue,",
          "202:           libfvalue_split_utf8_string_free,",
          "203:           [ac_cv_libfvalue_dummy=yes],",
          "204:           [ac_cv_libfvalue=no])",
          "205:         AC_CHECK_LIB(",
          "206:           fvalue,",
          "207:           libfvalue_split_utf8_string_get_string,",
          "208:           [ac_cv_libfvalue_dummy=yes],",
          "209:           [ac_cv_libfvalue=no])",
          "210:         AC_CHECK_LIB(",
          "211:           fvalue,",
          "212:           libfvalue_split_utf8_string_get_number_of_segments,",
          "213:           [ac_cv_libfvalue_dummy=yes],",
          "214:           [ac_cv_libfvalue=no])",
          "215:         AC_CHECK_LIB(",
          "216:           fvalue,",
          "217:           libfvalue_split_utf8_string_get_segment_by_index,",
          "218:           [ac_cv_libfvalue_dummy=yes],",
          "219:           [ac_cv_libfvalue=no])",
          "221:         AC_CHECK_LIB(",
          "222:           fvalue,",
          "223:           libfvalue_split_utf16_string_free,",
          "224:           [ac_cv_libfvalue_dummy=yes],",
          "225:           [ac_cv_libfvalue=no])",
          "226:         AC_CHECK_LIB(",
          "227:           fvalue,",
          "228:           libfvalue_split_utf16_string_get_string,",
          "229:           [ac_cv_libfvalue_dummy=yes],",
          "230:           [ac_cv_libfvalue=no])",
          "231:         AC_CHECK_LIB(",
          "232:           fvalue,",
          "233:           libfvalue_split_utf16_string_get_number_of_segments,",
          "234:           [ac_cv_libfvalue_dummy=yes],",
          "235:           [ac_cv_libfvalue=no])",
          "236:         AC_CHECK_LIB(",
          "237:           fvalue,",
          "238:           libfvalue_split_utf16_string_get_segment_by_index,",
          "239:           [ac_cv_libfvalue_dummy=yes],",
          "240:           [ac_cv_libfvalue=no])",
          "242:         dnl Table functions",
          "243:         AC_CHECK_LIB(",
          "244:           fvalue,",
          "245:           libfvalue_table_initialize,",
          "246:           [ac_cv_libfvalue_dummy=yes],",
          "247:           [ac_cv_libfvalue=no])",
          "248:         AC_CHECK_LIB(",
          "249:           fvalue,",
          "250:           libfvalue_table_free,",
          "251:           [ac_cv_libfvalue_dummy=yes],",
          "252:           [ac_cv_libfvalue=no])",
          "253:         AC_CHECK_LIB(",
          "254:           fvalue,",
          "255:           libfvalue_table_resize,",
          "256:           [ac_cv_libfvalue_dummy=yes],",
          "257:           [ac_cv_libfvalue=no])",
          "258:         AC_CHECK_LIB(",
          "259:           fvalue,",
          "260:           libfvalue_table_clone,",
          "261:           [ac_cv_libfvalue_dummy=yes],",
          "262:           [ac_cv_libfvalue=no])",
          "264:         AC_CHECK_LIB(",
          "265:           fvalue,",
          "266:           libfvalue_table_get_number_of_values,",
          "267:           [ac_cv_libfvalue_dummy=yes],",
          "268:           [ac_cv_libfvalue=no])",
          "270:         AC_CHECK_LIB(",
          "271:           fvalue,",
          "272:           libfvalue_table_get_index_by_identifier,",
          "273:           [ac_cv_libfvalue_dummy=yes],",
          "274:           [ac_cv_libfvalue=no])",
          "276:         AC_CHECK_LIB(",
          "277:           fvalue,",
          "278:           libfvalue_table_get_value_by_index,",
          "279:           [ac_cv_libfvalue_dummy=yes],",
          "280:           [ac_cv_libfvalue=no])",
          "281:         AC_CHECK_LIB(",
          "282:           fvalue,",
          "283:           libfvalue_table_get_value_by_identifier,",
          "284:           [ac_cv_libfvalue_dummy=yes],",
          "285:           [ac_cv_libfvalue=no])",
          "286:         AC_CHECK_LIB(",
          "287:           fvalue,",
          "288:           libfvalue_table_set_value_by_index,",
          "289:           [ac_cv_libfvalue_dummy=yes],",
          "290:           [ac_cv_libfvalue=no])",
          "291:         AC_CHECK_LIB(",
          "292:           fvalue,",
          "293:           libfvalue_table_set_value,",
          "294:           [ac_cv_libfvalue_dummy=yes],",
          "295:           [ac_cv_libfvalue=no])",
          "297:         AC_CHECK_LIB(",
          "298:           fvalue,",
          "299:           libfvalue_table_copy_from_utf8_xml_string,",
          "300:           [ac_cv_libfvalue_dummy=yes],",
          "301:           [ac_cv_libfvalue=no])",
          "303:         dnl Value functions",
          "304:         AC_CHECK_LIB(",
          "305:           fvalue,",
          "306:           libfvalue_value_initialize,",
          "307:           [ac_cv_libfvalue_dummy=yes],",
          "308:           [ac_cv_libfvalue=no])",
          "309:         AC_CHECK_LIB(",
          "310:           fvalue,",
          "311:           libfvalue_value_free,",
          "312:           [ac_cv_libfvalue_dummy=yes],",
          "313:           [ac_cv_libfvalue=no])",
          "314:         AC_CHECK_LIB(",
          "315:           fvalue,",
          "316:           libfvalue_value_clone,",
          "317:           [ac_cv_libfvalue_dummy=yes],",
          "318:           [ac_cv_libfvalue=no])",
          "319:         AC_CHECK_LIB(",
          "320:           fvalue,",
          "321:           libfvalue_value_clear,",
          "322:           [ac_cv_libfvalue_dummy=yes],",
          "323:           [ac_cv_libfvalue=no])",
          "325:         AC_CHECK_LIB(",
          "326:           fvalue,",
          "327:           libfvalue_value_get_type,",
          "328:           [ac_cv_libfvalue_dummy=yes],",
          "329:           [ac_cv_libfvalue=no])",
          "331:         AC_CHECK_LIB(",
          "332:           fvalue,",
          "333:           libfvalue_value_get_identifier,",
          "334:           [ac_cv_libfvalue_dummy=yes],",
          "335:           [ac_cv_libfvalue=no])",
          "336:         AC_CHECK_LIB(",
          "337:           fvalue,",
          "338:           libfvalue_value_set_identifier,",
          "339:           [ac_cv_libfvalue_dummy=yes],",
          "340:           [ac_cv_libfvalue=no])",
          "342:         AC_CHECK_LIB(",
          "343:           fvalue,",
          "344:           libfvalue_value_get_data_handle,",
          "345:           [ac_cv_libfvalue_dummy=yes],",
          "346:           [ac_cv_libfvalue=no])",
          "347:         AC_CHECK_LIB(",
          "348:           fvalue,",
          "349:           libfvalue_value_has_data,",
          "350:           [ac_cv_libfvalue_dummy=yes],",
          "351:           [ac_cv_libfvalue=no])",
          "352:         AC_CHECK_LIB(",
          "353:           fvalue,",
          "354:           libfvalue_value_get_data_size,",
          "355:           [ac_cv_libfvalue_dummy=yes],",
          "356:           [ac_cv_libfvalue=no])",
          "357:         AC_CHECK_LIB(",
          "358:           fvalue,",
          "359:           libfvalue_value_get_data,",
          "360:           [ac_cv_libfvalue_dummy=yes],",
          "361:           [ac_cv_libfvalue=no])",
          "362:         AC_CHECK_LIB(",
          "363:           fvalue,",
          "364:           libfvalue_value_set_data,",
          "365:           [ac_cv_libfvalue_dummy=yes],",
          "366:           [ac_cv_libfvalue=no])",
          "367:         AC_CHECK_LIB(",
          "368:           fvalue,",
          "369:           libfvalue_value_copy_data,",
          "370:           [ac_cv_libfvalue_dummy=yes],",
          "371:           [ac_cv_libfvalue=no])",
          "373:         AC_CHECK_LIB(",
          "374:           fvalue,",
          "375:           libfvalue_value_get_format_flags,",
          "376:           [ac_cv_libfvalue_dummy=yes],",
          "377:           [ac_cv_libfvalue=no])",
          "378:         AC_CHECK_LIB(",
          "379:           fvalue,",
          "380:           libfvalue_value_set_format_flags,",
          "381:           [ac_cv_libfvalue_dummy=yes],",
          "382:           [ac_cv_libfvalue=no])",
          "384:         AC_CHECK_LIB(",
          "385:           fvalue,",
          "386:           libfvalue_value_get_number_of_value_entries,",
          "387:           [ac_cv_libfvalue_dummy=yes],",
          "388:           [ac_cv_libfvalue=no])",
          "389:         AC_CHECK_LIB(",
          "390:           fvalue,",
          "391:           libfvalue_value_get_value_entry,",
          "392:           [ac_cv_libfvalue_dummy=yes],",
          "393:           [ac_cv_libfvalue=no])",
          "394:         AC_CHECK_LIB(",
          "395:           fvalue,",
          "396:           libfvalue_value_set_value_entry,",
          "397:           [ac_cv_libfvalue_dummy=yes],",
          "398:           [ac_cv_libfvalue=no])",
          "399:         AC_CHECK_LIB(",
          "400:           fvalue,",
          "401:           libfvalue_value_append_value_entry,",
          "402:           [ac_cv_libfvalue_dummy=yes],",
          "403:           [ac_cv_libfvalue=no])",
          "405:         AC_CHECK_LIB(",
          "406:           fvalue,",
          "407:           libfvalue_value_copy_from_boolean,",
          "408:           [ac_cv_libfvalue_dummy=yes],",
          "409:           [ac_cv_libfvalue=no])",
          "410:         AC_CHECK_LIB(",
          "411:           fvalue,",
          "412:           libfvalue_value_copy_to_boolean,",
          "413:           [ac_cv_libfvalue_dummy=yes],",
          "414:           [ac_cv_libfvalue=no])",
          "416:         AC_CHECK_LIB(",
          "417:           fvalue,",
          "418:           libfvalue_value_copy_from_8bit,",
          "419:           [ac_cv_libfvalue_dummy=yes],",
          "420:           [ac_cv_libfvalue=no])",
          "421:         AC_CHECK_LIB(",
          "422:           fvalue,",
          "423:           libfvalue_value_copy_to_8bit,",
          "424:           [ac_cv_libfvalue_dummy=yes],",
          "425:           [ac_cv_libfvalue=no])",
          "427:         AC_CHECK_LIB(",
          "428:           fvalue,",
          "429:           libfvalue_value_copy_from_16bit,",
          "430:           [ac_cv_libfvalue_dummy=yes],",
          "431:           [ac_cv_libfvalue=no])",
          "432:         AC_CHECK_LIB(",
          "433:           fvalue,",
          "434:           libfvalue_value_copy_to_16bit,",
          "435:           [ac_cv_libfvalue_dummy=yes],",
          "436:           [ac_cv_libfvalue=no])",
          "438:         AC_CHECK_LIB(",
          "439:           fvalue,",
          "440:           libfvalue_value_copy_from_32bit,",
          "441:           [ac_cv_libfvalue_dummy=yes],",
          "442:           [ac_cv_libfvalue=no])",
          "443:         AC_CHECK_LIB(",
          "444:           fvalue,",
          "445:           libfvalue_value_copy_to_32bit,",
          "446:           [ac_cv_libfvalue_dummy=yes],",
          "447:           [ac_cv_libfvalue=no])",
          "449:         AC_CHECK_LIB(",
          "450:           fvalue,",
          "451:           libfvalue_value_copy_from_64bit,",
          "452:           [ac_cv_libfvalue_dummy=yes],",
          "453:           [ac_cv_libfvalue=no])",
          "454:         AC_CHECK_LIB(",
          "455:           fvalue,",
          "456:           libfvalue_value_copy_to_64bit,",
          "457:           [ac_cv_libfvalue_dummy=yes],",
          "458:           [ac_cv_libfvalue=no])",
          "460:         AC_CHECK_LIB(",
          "461:           fvalue,",
          "462:           libfvalue_value_copy_from_float,",
          "463:           [ac_cv_libfvalue_dummy=yes],",
          "464:           [ac_cv_libfvalue=no])",
          "465:         AC_CHECK_LIB(",
          "466:           fvalue,",
          "467:           libfvalue_value_copy_to_float,",
          "468:           [ac_cv_libfvalue_dummy=yes],",
          "469:           [ac_cv_libfvalue=no])",
          "471:         AC_CHECK_LIB(",
          "472:           fvalue,",
          "473:           libfvalue_value_copy_from_double,",
          "474:           [ac_cv_libfvalue_dummy=yes],",
          "475:           [ac_cv_libfvalue=no])",
          "476:         AC_CHECK_LIB(",
          "477:           fvalue,",
          "478:           libfvalue_value_copy_to_double,",
          "479:           [ac_cv_libfvalue_dummy=yes],",
          "480:           [ac_cv_libfvalue=no])",
          "482:         AC_CHECK_LIB(",
          "483:           fvalue,",
          "484:           libfvalue_value_copy_from_utf8_string,",
          "485:           [ac_cv_libfvalue_dummy=yes],",
          "486:           [ac_cv_libfvalue=no])",
          "487:         AC_CHECK_LIB(",
          "488:           fvalue,",
          "489:           libfvalue_value_get_utf8_string_size,",
          "490:           [ac_cv_libfvalue_dummy=yes],",
          "491:           [ac_cv_libfvalue=no])",
          "492:         AC_CHECK_LIB(",
          "493:           fvalue,",
          "494:           libfvalue_value_copy_to_utf8_string,",
          "495:           [ac_cv_libfvalue_dummy=yes],",
          "496:           [ac_cv_libfvalue=no])",
          "497:         AC_CHECK_LIB(",
          "498:           fvalue,",
          "499:           libfvalue_value_copy_to_utf8_string_with_index,",
          "500:           [ac_cv_libfvalue_dummy=yes],",
          "501:           [ac_cv_libfvalue=no])",
          "503:         AC_CHECK_LIB(",
          "504:           fvalue,",
          "505:           libfvalue_value_copy_from_utf16_string,",
          "506:           [ac_cv_libfvalue_dummy=yes],",
          "507:           [ac_cv_libfvalue=no])",
          "508:         AC_CHECK_LIB(",
          "509:           fvalue,",
          "510:           libfvalue_value_get_utf16_string_size,",
          "511:           [ac_cv_libfvalue_dummy=yes],",
          "512:           [ac_cv_libfvalue=no])",
          "513:         AC_CHECK_LIB(",
          "514:           fvalue,",
          "515:           libfvalue_value_copy_to_utf16_string,",
          "516:           [ac_cv_libfvalue_dummy=yes],",
          "517:           [ac_cv_libfvalue=no])",
          "518:         AC_CHECK_LIB(",
          "519:           fvalue,",
          "520:           libfvalue_value_copy_to_utf16_string_with_index,",
          "521:           [ac_cv_libfvalue_dummy=yes],",
          "522:           [ac_cv_libfvalue=no])",
          "524:         AC_CHECK_LIB(",
          "525:           fvalue,",
          "526:           libfvalue_value_copy_from_utf32_string,",
          "527:           [ac_cv_libfvalue_dummy=yes],",
          "528:           [ac_cv_libfvalue=no])",
          "529:         AC_CHECK_LIB(",
          "530:           fvalue,",
          "531:           libfvalue_value_get_utf32_string_size,",
          "532:           [ac_cv_libfvalue_dummy=yes],",
          "533:           [ac_cv_libfvalue=no])",
          "534:         AC_CHECK_LIB(",
          "535:           fvalue,",
          "536:           libfvalue_value_copy_to_utf32_string,",
          "537:           [ac_cv_libfvalue_dummy=yes],",
          "538:           [ac_cv_libfvalue=no])",
          "539:         AC_CHECK_LIB(",
          "540:           fvalue,",
          "541:           libfvalue_value_copy_to_utf32_string_with_index,",
          "542:           [ac_cv_libfvalue_dummy=yes],",
          "543:           [ac_cv_libfvalue=no])",
          "545:         AC_CHECK_LIB(",
          "546:           fvalue,",
          "547:           libfvalue_value_read_from_file_stream,",
          "548:           [ac_cv_libfvalue_dummy=yes],",
          "549:           [ac_cv_libfvalue=no])",
          "550:         AC_CHECK_LIB(",
          "551:           fvalue,",
          "552:           libfvalue_value_write_to_file_stream,",
          "553:           [ac_cv_libfvalue_dummy=yes],",
          "554:           [ac_cv_libfvalue=no])",
          "556:         dnl Value type functions",
          "557:         AC_CHECK_LIB(",
          "558:           fvalue,",
          "559:           libfvalue_value_type_initialize,",
          "560:           [ac_cv_libfvalue_dummy=yes],",
          "561:           [ac_cv_libfvalue=no])",
          "562:         AC_CHECK_LIB(",
          "563:           fvalue,",
          "564:           libfvalue_value_type_initialize_with_data_handle,",
          "565:           [ac_cv_libfvalue_dummy=yes],",
          "566:           [ac_cv_libfvalue=no])",
          "568:         AC_CHECK_LIB(",
          "569:           fvalue,",
          "570:           libfvalue_value_type_set_data_string,",
          "571:           [ac_cv_libfvalue_dummy=yes],",
          "572:           [ac_cv_libfvalue=no])",
          "573:         AC_CHECK_LIB(",
          "574:           fvalue,",
          "575:           libfvalue_value_type_append_data_string,",
          "576:           [ac_cv_libfvalue_dummy=yes],",
          "577:           [ac_cv_libfvalue=no])",
          "579:         AC_CHECK_LIB(",
          "580:           fvalue,",
          "581:           libfvalue_value_type_set_data_strings_array,",
          "582:           [ac_cv_libfvalue_dummy=yes],",
          "583:           [ac_cv_libfvalue=no])",
          "585:         ac_cv_libfvalue_LIBADD=\"-lfvalue\"",
          "586:         ])",
          "587:       ])",
          "588:     ])",
          "590:   AS_IF(",
          "591:     [test \"x$ac_cv_libfvalue\" = xyes],",
          "592:     [AC_DEFINE(",
          "593:       [HAVE_LIBFVALUE],",
          "594:       [1],",
          "595:       [Define to 1 if you have the `fvalue' library (-lfvalue).])",
          "598:   AS_IF(",
          "599:     [test \"x$ac_cv_libfvalue\" = xyes],",
          "600:     [AC_SUBST(",
          "601:       [HAVE_LIBFVALUE],",
          "602:       [1]) ],",
          "603:     [AC_SUBST(",
          "604:       [HAVE_LIBFVALUE],",
          "605:       [0])",
          "606:     ])",
          "609: dnl Function to detect if libfvalue dependencies are available",
          "610: AC_DEFUN([AX_LIBFVALUE_CHECK_LOCAL],",
          "611:   [dnl No additional checks.",
          "613:   ac_cv_libfvalue_CPPFLAGS=\"-I../libfvalue\";",
          "614:   ac_cv_libfvalue_LIBADD=\"../libfvalue/libfvalue.la\";",
          "616:   ac_cv_libfvalue=local",
          "621:   [AX_COMMON_ARG_WITH(",
          "622:     [libfvalue],",
          "623:     [libfvalue],",
          "624:     [search for libfvalue in includedir and libdir or in the specified DIR, or no if to use local version],",
          "625:     [auto-detect],",
          "626:     [DIR])",
          "628:   dnl Check for a shared library version",
          "629:   AX_LIBFVALUE_CHECK_LIB",
          "631:   dnl Check if the dependencies for the local library version",
          "632:   AS_IF(",
          "633:     [test \"x$ac_cv_libfvalue\" != xyes],",
          "634:     [AX_LIBFVALUE_CHECK_LOCAL",
          "636:     AC_DEFINE(",
          "637:       [HAVE_LOCAL_LIBFVALUE],",
          "638:       [1],",
          "639:       [Define to 1 if the local version of libfvalue is used.])",
          "640:     AC_SUBST(",
          "641:       [HAVE_LOCAL_LIBFVALUE],",
          "642:       [1])",
          "643:     ])",
          "645:   AM_CONDITIONAL(",
          "646:     [HAVE_LOCAL_LIBFVALUE],",
          "647:     [test \"x$ac_cv_libfvalue\" = xlocal])",
          "648:   AS_IF(",
          "649:     [test \"x$ac_cv_libfvalue_CPPFLAGS\" != \"x\"],",
          "650:     [AC_SUBST(",
          "651:       [LIBFVALUE_CPPFLAGS],",
          "652:       [$ac_cv_libfvalue_CPPFLAGS])",
          "653:     ])",
          "654:   AS_IF(",
          "655:     [test \"x$ac_cv_libfvalue_LIBADD\" != \"x\"],",
          "656:     [AC_SUBST(",
          "657:       [LIBFVALUE_LIBADD],",
          "658:       [$ac_cv_libfvalue_LIBADD])",
          "659:     ])",
          "661:   AS_IF(",
          "662:     [test \"x$ac_cv_libfvalue\" = xyes],",
          "663:     [AC_SUBST(",
          "664:       [ax_libfvalue_pc_libs_private],",
          "665:       [-lfvalue])",
          "666:     ])",
          "668:   AS_IF(",
          "669:     [test \"x$ac_cv_libfvalue\" = xyes],",
          "670:     [AC_SUBST(",
          "671:       [ax_libfvalue_spec_requires],",
          "672:       [libfvalue])",
          "673:     AC_SUBST(",
          "674:       [ax_libfvalue_spec_build_requires],",
          "675:       [libfvalue-devel])",
          "676:     ])",
          "",
          "---------------"
        ],
        "m4/libfwevt.m4||m4/libfwevt.m4": [
          "File: m4/libfwevt.m4 -> m4/libfwevt.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Functions for libfwevt",
          "2: dnl",
          "5: dnl Function to detect if libfwevt is available",
          "6: dnl ac_libfwevt_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "7: AC_DEFUN([AX_LIBFWEVT_CHECK_LIB],",
          "23:   AS_IF(",
          "32:   AS_IF(",
          "41:     [ac_cv_libfwevt=no],",
          "481:     AS_IF(",
          "488:     ])",
          "582:     ])",
          "592:   ])",
          "602:   ])",
          "605: dnl Function to detect how to enable libfwevt",
          "606: AC_DEFUN([AX_LIBFWEVT_CHECK_ENABLE],",
          "665:   ])",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20160112",
          "8:  [dnl Check if parameters were provided",
          "9:  AS_IF(",
          "10:   [test \"x$ac_cv_with_libfwevt\" != x && test \"x$ac_cv_with_libfwevt\" != xno && test \"x$ac_cv_with_libfwevt\" != xauto-detect],",
          "11:   [AS_IF(",
          "12:    [test -d \"$ac_cv_with_libfwevt\"],",
          "13:    [CFLAGS=\"$CFLAGS -I${ac_cv_with_libfwevt}/include\"",
          "14:    LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libfwevt}/lib\"],",
          "15:    [AC_MSG_WARN([no such directory: $ac_cv_with_libfwevt])",
          "16:    ])",
          "17:   ])",
          "19:  AS_IF(",
          "20:   [test \"x$ac_cv_with_libfwevt\" = xno],",
          "21:   [ac_cv_libfwevt=no],",
          "22:   [dnl Check for a pkg-config file",
          "24:    [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:    [PKG_CHECK_MODULES(",
          "26:     [libfwevt],",
          "27:     [libfwevt >= 20160103],",
          "28:     [ac_cv_libfwevt=yes],",
          "29:     [ac_cv_libfwevt=no])",
          "30:    ])",
          "33:    [test \"x$ac_cv_libfwevt\" = xyes],",
          "34:    [ac_cv_libfwevt_CPPFLAGS=\"$pkg_cv_libfwevt_CFLAGS\"",
          "35:    ac_cv_libfwevt_LIBADD=\"$pkg_cv_libfwevt_LIBS\"],",
          "36:    [dnl Check for headers",
          "37:    AC_CHECK_HEADERS([libfwevt.h])",
          "39:   AS_IF(",
          "40:     [test \"x$ac_cv_header_libfwevt_h\" = xno],",
          "42:     [dnl Check for the individual functions",
          "43:     ac_cv_libfwevt=yes",
          "45:     AC_CHECK_LIB(",
          "46:      fwevt,",
          "47:      libfwevt_get_version,",
          "48:      [ac_cv_libfwevt_dummy=yes],",
          "49:      [ac_cv_libfwevt=no])",
          "51:     dnl Channel functions",
          "52:     AC_CHECK_LIB(",
          "53:      fwevt,",
          "54:      libfwevt_channel_initialize,",
          "55:      [ac_cv_libfwevt_dummy=yes],",
          "56:      [ac_cv_libfwevt=no])",
          "57:     AC_CHECK_LIB(",
          "58:      fwevt,",
          "59:      libfwevt_channel_free,",
          "60:      [ac_cv_libfwevt_dummy=yes],",
          "61:      [ac_cv_libfwevt=no])",
          "63:     AC_CHECK_LIB(",
          "64:      fwevt,",
          "65:      libfwevt_channel_read,",
          "66:      [ac_cv_libfwevt_dummy=yes],",
          "67:      [ac_cv_libfwevt=no])",
          "69:     dnl Event functions",
          "70:     AC_CHECK_LIB(",
          "71:      fwevt,",
          "72:      libfwevt_event_initialize,",
          "73:      [ac_cv_libfwevt_dummy=yes],",
          "74:      [ac_cv_libfwevt=no])",
          "75:     AC_CHECK_LIB(",
          "76:      fwevt,",
          "77:      libfwevt_event_free,",
          "78:      [ac_cv_libfwevt_dummy=yes],",
          "79:      [ac_cv_libfwevt=no])",
          "81:     AC_CHECK_LIB(",
          "82:      fwevt,",
          "83:      libfwevt_event_read,",
          "84:      [ac_cv_libfwevt_dummy=yes],",
          "85:      [ac_cv_libfwevt=no])",
          "86:     AC_CHECK_LIB(",
          "87:      fwevt,",
          "88:      libfwevt_event_get_identifier,",
          "89:      [ac_cv_libfwevt_dummy=yes],",
          "90:      [ac_cv_libfwevt=no])",
          "91:     AC_CHECK_LIB(",
          "92:      fwevt,",
          "93:      libfwevt_event_get_message_identifier,",
          "94:      [ac_cv_libfwevt_dummy=yes],",
          "95:      [ac_cv_libfwevt=no])",
          "96:     AC_CHECK_LIB(",
          "97:      fwevt,",
          "98:      libfwevt_event_get_template_offset,",
          "99:      [ac_cv_libfwevt_dummy=yes],",
          "100:      [ac_cv_libfwevt=no])",
          "102:     dnl Keyword functions",
          "103:     AC_CHECK_LIB(",
          "104:      fwevt,",
          "105:      libfwevt_keyword_initialize,",
          "106:      [ac_cv_libfwevt_dummy=yes],",
          "107:      [ac_cv_libfwevt=no])",
          "108:     AC_CHECK_LIB(",
          "109:      fwevt,",
          "110:      libfwevt_keyword_free,",
          "111:      [ac_cv_libfwevt_dummy=yes],",
          "112:      [ac_cv_libfwevt=no])",
          "114:     AC_CHECK_LIB(",
          "115:      fwevt,",
          "116:      libfwevt_keyword_read,",
          "117:      [ac_cv_libfwevt_dummy=yes],",
          "118:      [ac_cv_libfwevt=no])",
          "120:     dnl Level functions",
          "121:     AC_CHECK_LIB(",
          "122:      fwevt,",
          "123:      libfwevt_level_initialize,",
          "124:      [ac_cv_libfwevt_dummy=yes],",
          "125:      [ac_cv_libfwevt=no])",
          "126:     AC_CHECK_LIB(",
          "127:      fwevt,",
          "128:      libfwevt_level_free,",
          "129:      [ac_cv_libfwevt_dummy=yes],",
          "130:      [ac_cv_libfwevt=no])",
          "132:     AC_CHECK_LIB(",
          "133:      fwevt,",
          "134:      libfwevt_level_read,",
          "135:      [ac_cv_libfwevt_dummy=yes],",
          "136:      [ac_cv_libfwevt=no])",
          "138:     dnl Manifest functions",
          "139:     AC_CHECK_LIB(",
          "140:      fwevt,",
          "141:      libfwevt_manifest_initialize,",
          "142:      [ac_cv_libfwevt_dummy=yes],",
          "143:      [ac_cv_libfwevt=no])",
          "144:     AC_CHECK_LIB(",
          "145:      fwevt,",
          "146:      libfwevt_manifest_free,",
          "147:      [ac_cv_libfwevt_dummy=yes],",
          "148:      [ac_cv_libfwevt=no])",
          "150:     AC_CHECK_LIB(",
          "151:      fwevt,",
          "152:      libfwevt_manifest_read,",
          "153:      [ac_cv_libfwevt_dummy=yes],",
          "154:      [ac_cv_libfwevt=no])",
          "155:     AC_CHECK_LIB(",
          "156:      fwevt,",
          "157:      libfwevt_manifest_get_number_of_providers,",
          "158:      [ac_cv_libfwevt_dummy=yes],",
          "159:      [ac_cv_libfwevt=no])",
          "160:     AC_CHECK_LIB(",
          "161:      fwevt,",
          "162:      libfwevt_manifest_get_provider,",
          "163:      [ac_cv_libfwevt_dummy=yes],",
          "164:      [ac_cv_libfwevt=no])",
          "165:     AC_CHECK_LIB(",
          "166:      fwevt,",
          "167:      libfwevt_manifest_get_provider_by_identifier,",
          "168:      [ac_cv_libfwevt_dummy=yes],",
          "169:      [ac_cv_libfwevt=no])",
          "171:     dnl Map functions",
          "172:     AC_CHECK_LIB(",
          "173:      fwevt,",
          "174:      libfwevt_map_initialize,",
          "175:      [ac_cv_libfwevt_dummy=yes],",
          "176:      [ac_cv_libfwevt=no])",
          "177:     AC_CHECK_LIB(",
          "178:      fwevt,",
          "179:      libfwevt_map_free,",
          "180:      [ac_cv_libfwevt_dummy=yes],",
          "181:      [ac_cv_libfwevt=no])",
          "183:     AC_CHECK_LIB(",
          "184:      fwevt,",
          "185:      libfwevt_map_read,",
          "186:      [ac_cv_libfwevt_dummy=yes],",
          "187:      [ac_cv_libfwevt=no])",
          "189:     dnl Opcode functions",
          "190:     AC_CHECK_LIB(",
          "191:      fwevt,",
          "192:      libfwevt_opcode_initialize,",
          "193:      [ac_cv_libfwevt_dummy=yes],",
          "194:      [ac_cv_libfwevt=no])",
          "195:     AC_CHECK_LIB(",
          "196:      fwevt,",
          "197:      libfwevt_opcode_free,",
          "198:      [ac_cv_libfwevt_dummy=yes],",
          "199:      [ac_cv_libfwevt=no])",
          "201:     AC_CHECK_LIB(",
          "202:      fwevt,",
          "203:      libfwevt_opcode_read,",
          "204:      [ac_cv_libfwevt_dummy=yes],",
          "205:      [ac_cv_libfwevt=no])",
          "207:     dnl Provider functions",
          "208:     AC_CHECK_LIB(",
          "209:      fwevt,",
          "210:      libfwevt_provider_initialize,",
          "211:      [ac_cv_libfwevt_dummy=yes],",
          "212:      [ac_cv_libfwevt=no])",
          "213:     AC_CHECK_LIB(",
          "214:      fwevt,",
          "215:      libfwevt_provider_free,",
          "216:      [ac_cv_libfwevt_dummy=yes],",
          "217:      [ac_cv_libfwevt=no])",
          "219:     AC_CHECK_LIB(",
          "220:      fwevt,",
          "221:      libfwevt_provider_read,",
          "222:      [ac_cv_libfwevt_dummy=yes],",
          "223:      [ac_cv_libfwevt=no])",
          "224:     AC_CHECK_LIB(",
          "225:      fwevt,",
          "226:      libfwevt_provider_read_channels,",
          "227:      [ac_cv_libfwevt_dummy=yes],",
          "228:      [ac_cv_libfwevt=no])",
          "229:     AC_CHECK_LIB(",
          "230:      fwevt,",
          "231:      libfwevt_provider_read_events,",
          "232:      [ac_cv_libfwevt_dummy=yes],",
          "233:      [ac_cv_libfwevt=no])",
          "234:     AC_CHECK_LIB(",
          "235:      fwevt,",
          "236:      libfwevt_provider_read_keywords,",
          "237:      [ac_cv_libfwevt_dummy=yes],",
          "238:      [ac_cv_libfwevt=no])",
          "239:     AC_CHECK_LIB(",
          "240:      fwevt,",
          "241:      libfwevt_provider_read_levels,",
          "242:      [ac_cv_libfwevt_dummy=yes],",
          "243:      [ac_cv_libfwevt=no])",
          "244:     AC_CHECK_LIB(",
          "245:      fwevt,",
          "246:      libfwevt_provider_read_maps,",
          "247:      [ac_cv_libfwevt_dummy=yes],",
          "248:      [ac_cv_libfwevt=no])",
          "249:     AC_CHECK_LIB(",
          "250:      fwevt,",
          "251:      libfwevt_provider_read_opcodes,",
          "252:      [ac_cv_libfwevt_dummy=yes],",
          "253:      [ac_cv_libfwevt=no])",
          "254:     AC_CHECK_LIB(",
          "255:      fwevt,",
          "256:      libfwevt_provider_read_tasks,",
          "257:      [ac_cv_libfwevt_dummy=yes],",
          "258:      [ac_cv_libfwevt=no])",
          "259:     AC_CHECK_LIB(",
          "260:      fwevt,",
          "261:      libfwevt_provider_read_templates,",
          "262:      [ac_cv_libfwevt_dummy=yes],",
          "263:      [ac_cv_libfwevt=no])",
          "265:     AC_CHECK_LIB(",
          "266:      fwevt,",
          "267:      libfwevt_provider_compare_identifier,",
          "268:      [ac_cv_libfwevt_dummy=yes],",
          "269:      [ac_cv_libfwevt=no])",
          "270:     AC_CHECK_LIB(",
          "271:      fwevt,",
          "272:      libfwevt_provider_get_number_of_channels,",
          "273:      [ac_cv_libfwevt_dummy=yes],",
          "274:      [ac_cv_libfwevt=no])",
          "275:     AC_CHECK_LIB(",
          "276:      fwevt,",
          "277:      libfwevt_provider_get_channel,",
          "278:      [ac_cv_libfwevt_dummy=yes],",
          "279:      [ac_cv_libfwevt=no])",
          "280:     AC_CHECK_LIB(",
          "281:      fwevt,",
          "282:      libfwevt_provider_get_number_of_events,",
          "283:      [ac_cv_libfwevt_dummy=yes],",
          "284:      [ac_cv_libfwevt=no])",
          "285:     AC_CHECK_LIB(",
          "286:      fwevt,",
          "287:      libfwevt_provider_get_event,",
          "288:      [ac_cv_libfwevt_dummy=yes],",
          "289:      [ac_cv_libfwevt=no])",
          "290:     AC_CHECK_LIB(",
          "291:      fwevt,",
          "292:      libfwevt_provider_get_event_by_identifier,",
          "293:      [ac_cv_libfwevt_dummy=yes],",
          "294:      [ac_cv_libfwevt=no])",
          "295:     AC_CHECK_LIB(",
          "296:      fwevt,",
          "297:      libfwevt_provider_get_number_of_keywords,",
          "298:      [ac_cv_libfwevt_dummy=yes],",
          "299:      [ac_cv_libfwevt=no])",
          "300:     AC_CHECK_LIB(",
          "301:      fwevt,",
          "302:      libfwevt_provider_get_keyword,",
          "303:      [ac_cv_libfwevt_dummy=yes],",
          "304:      [ac_cv_libfwevt=no])",
          "305:     AC_CHECK_LIB(",
          "306:      fwevt,",
          "307:      libfwevt_provider_get_number_of_levels,",
          "308:      [ac_cv_libfwevt_dummy=yes],",
          "309:      [ac_cv_libfwevt=no])",
          "310:     AC_CHECK_LIB(",
          "311:      fwevt,",
          "312:      libfwevt_provider_get_level,",
          "313:      [ac_cv_libfwevt_dummy=yes],",
          "314:      [ac_cv_libfwevt=no])",
          "315:     AC_CHECK_LIB(",
          "316:      fwevt,",
          "317:      libfwevt_provider_get_number_of_maps,",
          "318:      [ac_cv_libfwevt_dummy=yes],",
          "319:      [ac_cv_libfwevt=no])",
          "320:     AC_CHECK_LIB(",
          "321:      fwevt,",
          "322:      libfwevt_provider_get_map,",
          "323:      [ac_cv_libfwevt_dummy=yes],",
          "324:      [ac_cv_libfwevt=no])",
          "325:     AC_CHECK_LIB(",
          "326:      fwevt,",
          "327:      libfwevt_provider_get_number_of_opcodes,",
          "328:      [ac_cv_libfwevt_dummy=yes],",
          "329:      [ac_cv_libfwevt=no])",
          "330:     AC_CHECK_LIB(",
          "331:      fwevt,",
          "332:      libfwevt_provider_get_opcode,",
          "333:      [ac_cv_libfwevt_dummy=yes],",
          "334:      [ac_cv_libfwevt=no])",
          "335:     AC_CHECK_LIB(",
          "336:      fwevt,",
          "337:      libfwevt_provider_get_number_of_tasks,",
          "338:      [ac_cv_libfwevt_dummy=yes],",
          "339:      [ac_cv_libfwevt=no])",
          "340:     AC_CHECK_LIB(",
          "341:      fwevt,",
          "342:      libfwevt_provider_get_task,",
          "343:      [ac_cv_libfwevt_dummy=yes],",
          "344:      [ac_cv_libfwevt=no])",
          "345:     AC_CHECK_LIB(",
          "346:      fwevt,",
          "347:      libfwevt_provider_get_number_of_templates,",
          "348:      [ac_cv_libfwevt_dummy=yes],",
          "349:      [ac_cv_libfwevt=no])",
          "350:     AC_CHECK_LIB(",
          "351:      fwevt,",
          "352:      libfwevt_provider_get_template,",
          "353:      [ac_cv_libfwevt_dummy=yes],",
          "354:      [ac_cv_libfwevt=no])",
          "355:     AC_CHECK_LIB(",
          "356:      fwevt,",
          "357:      libfwevt_provider_get_template_by_offset,",
          "358:      [ac_cv_libfwevt_dummy=yes],",
          "359:      [ac_cv_libfwevt=no])",
          "361:     dnl Task functions",
          "362:     AC_CHECK_LIB(",
          "363:      fwevt,",
          "364:      libfwevt_task_initialize,",
          "365:      [ac_cv_libfwevt_dummy=yes],",
          "366:      [ac_cv_libfwevt=no])",
          "367:     AC_CHECK_LIB(",
          "368:      fwevt,",
          "369:      libfwevt_task_free,",
          "370:      [ac_cv_libfwevt_dummy=yes],",
          "371:      [ac_cv_libfwevt=no])",
          "373:     AC_CHECK_LIB(",
          "374:      fwevt,",
          "375:      libfwevt_task_read,",
          "376:      [ac_cv_libfwevt_dummy=yes],",
          "377:      [ac_cv_libfwevt=no])",
          "379:     dnl Template functions",
          "380:     AC_CHECK_LIB(",
          "381:      fwevt,",
          "382:      libfwevt_template_initialize,",
          "383:      [ac_cv_libfwevt_dummy=yes],",
          "384:      [ac_cv_libfwevt=no])",
          "385:     AC_CHECK_LIB(",
          "386:      fwevt,",
          "387:      libfwevt_template_free,",
          "388:      [ac_cv_libfwevt_dummy=yes],",
          "389:      [ac_cv_libfwevt=no])",
          "391:     AC_CHECK_LIB(",
          "392:      fwevt,",
          "393:      libfwevt_template_read,",
          "394:      [ac_cv_libfwevt_dummy=yes],",
          "395:      [ac_cv_libfwevt=no])",
          "396:     AC_CHECK_LIB(",
          "397:      fwevt,",
          "398:      libfwevt_template_read_xml_document,",
          "399:      [ac_cv_libfwevt_dummy=yes],",
          "400:      [ac_cv_libfwevt=no])",
          "402:     AC_CHECK_LIB(",
          "403:      fwevt,",
          "404:      libfwevt_template_set_ascii_codepage,",
          "405:      [ac_cv_libfwevt_dummy=yes],",
          "406:      [ac_cv_libfwevt=no])",
          "407:     AC_CHECK_LIB(",
          "408:      fwevt,",
          "409:      libfwevt_template_get_data,",
          "410:      [ac_cv_libfwevt_dummy=yes],",
          "411:      [ac_cv_libfwevt=no])",
          "412:     AC_CHECK_LIB(",
          "413:      fwevt,",
          "414:      libfwevt_template_set_data",
          "415:      [ac_cv_libfwevt_dummy=yes],",
          "416:      [ac_cv_libfwevt=no])",
          "417:     AC_CHECK_LIB(",
          "418:      fwevt,",
          "419:      libfwevt_template_get_offset",
          "420:      [ac_cv_libfwevt_dummy=yes],",
          "421:      [ac_cv_libfwevt=no])",
          "422:     AC_CHECK_LIB(",
          "423:      fwevt,",
          "424:      libfwevt_template_set_offset",
          "425:      [ac_cv_libfwevt_dummy=yes],",
          "426:      [ac_cv_libfwevt=no])",
          "427:     AC_CHECK_LIB(",
          "428:      fwevt,",
          "429:      libfwevt_template_get_size",
          "430:      [ac_cv_libfwevt_dummy=yes],",
          "431:      [ac_cv_libfwevt=no])",
          "433:     dnl XML document functions",
          "434:     AC_CHECK_LIB(",
          "435:      fwevt,",
          "436:      libfwevt_xml_document_initialize,",
          "437:      [ac_cv_libfwevt_dummy=yes],",
          "438:      [ac_cv_libfwevt=no])",
          "439:     AC_CHECK_LIB(",
          "440:      fwevt,",
          "441:      libfwevt_xml_document_free,",
          "442:      [ac_cv_libfwevt_dummy=yes],",
          "443:      [ac_cv_libfwevt=no])",
          "444:     AC_CHECK_LIB(",
          "445:      fwevt,",
          "446:      libfwevt_xml_document_clone,",
          "447:      [ac_cv_libfwevt_dummy=yes],",
          "448:      [ac_cv_libfwevt=no])",
          "450:     AC_CHECK_LIB(",
          "451:      fwevt,",
          "452:      libfwevt_xml_document_get_root_xml_tag,",
          "453:      [ac_cv_libfwevt_dummy=yes],",
          "454:      [ac_cv_libfwevt=no])",
          "455:     AC_CHECK_LIB(",
          "456:      fwevt,",
          "457:      libfwevt_xml_document_read,",
          "458:      [ac_cv_libfwevt_dummy=yes],",
          "459:      [ac_cv_libfwevt=no])",
          "460:     AC_CHECK_LIB(",
          "461:      fwevt,",
          "462:      libfwevt_xml_document_get_utf8_xml_string_size,",
          "463:      [ac_cv_libfwevt_dummy=yes],",
          "464:      [ac_cv_libfwevt=no])",
          "465:     AC_CHECK_LIB(",
          "466:      fwevt,",
          "467:      libfwevt_xml_document_get_utf8_xml_string,",
          "468:      [ac_cv_libfwevt_dummy=yes],",
          "469:      [ac_cv_libfwevt=no])",
          "470:     AC_CHECK_LIB(",
          "471:      fwevt,",
          "472:      libfwevt_xml_document_get_utf16_xml_string_size,",
          "473:      [ac_cv_libfwevt_dummy=yes],",
          "474:      [ac_cv_libfwevt=no])",
          "475:     AC_CHECK_LIB(",
          "476:      fwevt,",
          "477:      libfwevt_xml_document_get_utf16_xml_string,",
          "478:      [ac_cv_libfwevt_dummy=yes],",
          "479:      [ac_cv_libfwevt=no])",
          "482:      [test \"x$ac_cv_enable_debug_output\" != xno ],",
          "483:      [AC_CHECK_LIB(",
          "484:       fwevt,",
          "485:       libfwevt_xml_document_debug_print,",
          "486:       [ac_cv_libfwevt_dummy=yes],",
          "487:       [ac_cv_libfwevt=no])",
          "490:     dnl XML tag functions",
          "492:     AC_CHECK_LIB(",
          "493:      fwevt,",
          "494:      libfwevt_xml_tag_get_utf8_name_size,",
          "495:      [ac_cv_libfwevt_dummy=yes],",
          "496:      [ac_cv_libfwevt=no])",
          "497:     AC_CHECK_LIB(",
          "498:      fwevt,",
          "499:      libfwevt_xml_tag_get_utf8_name,",
          "500:      [ac_cv_libfwevt_dummy=yes],",
          "501:      [ac_cv_libfwevt=no])",
          "502:     AC_CHECK_LIB(",
          "503:      fwevt,",
          "504:      libfwevt_xml_tag_get_utf16_name_size,",
          "505:      [ac_cv_libfwevt_dummy=yes],",
          "506:      [ac_cv_libfwevt=no])",
          "507:     AC_CHECK_LIB(",
          "508:      fwevt,",
          "509:      libfwevt_xml_tag_get_utf16_name,",
          "510:      [ac_cv_libfwevt_dummy=yes],",
          "511:      [ac_cv_libfwevt=no])",
          "512:     AC_CHECK_LIB(",
          "513:      fwevt,",
          "514:      libfwevt_xml_tag_get_utf8_value_size,",
          "515:      [ac_cv_libfwevt_dummy=yes],",
          "516:      [ac_cv_libfwevt=no])",
          "517:     AC_CHECK_LIB(",
          "518:      fwevt,",
          "519:      libfwevt_xml_tag_get_utf8_value,",
          "520:      [ac_cv_libfwevt_dummy=yes],",
          "521:      [ac_cv_libfwevt=no])",
          "522:     AC_CHECK_LIB(",
          "523:      fwevt,",
          "524:      libfwevt_xml_tag_get_utf16_value_size,",
          "525:      [ac_cv_libfwevt_dummy=yes],",
          "526:      [ac_cv_libfwevt=no])",
          "527:     AC_CHECK_LIB(",
          "528:      fwevt,",
          "529:      libfwevt_xml_tag_get_utf16_value,",
          "530:      [ac_cv_libfwevt_dummy=yes],",
          "531:      [ac_cv_libfwevt=no])",
          "533:     AC_CHECK_LIB(",
          "534:      fwevt,",
          "535:      libfwevt_xml_tag_get_number_of_attributes,",
          "536:      [ac_cv_libfwevt_dummy=yes],",
          "537:      [ac_cv_libfwevt=no])",
          "538:     AC_CHECK_LIB(",
          "539:      fwevt,",
          "540:      libfwevt_xml_tag_get_attribute_by_index,",
          "541:      [ac_cv_libfwevt_dummy=yes],",
          "542:      [ac_cv_libfwevt=no])",
          "543:     AC_CHECK_LIB(",
          "544:      fwevt,",
          "545:      libfwevt_xml_tag_get_attribute_by_utf8_name,",
          "546:      [ac_cv_libfwevt_dummy=yes],",
          "547:      [ac_cv_libfwevt=no])",
          "548:     AC_CHECK_LIB(",
          "549:      fwevt,",
          "550:      libfwevt_xml_tag_get_attribute_by_utf16_name,",
          "551:      [ac_cv_libfwevt_dummy=yes],",
          "552:      [ac_cv_libfwevt=no])",
          "554:     AC_CHECK_LIB(",
          "555:      fwevt,",
          "556:      libfwevt_xml_tag_get_number_of_elements,",
          "557:      [ac_cv_libfwevt_dummy=yes],",
          "558:      [ac_cv_libfwevt=no])",
          "559:     AC_CHECK_LIB(",
          "560:      fwevt,",
          "561:      libfwevt_xml_tag_get_element_by_index,",
          "562:      [ac_cv_libfwevt_dummy=yes],",
          "563:      [ac_cv_libfwevt=no])",
          "564:     AC_CHECK_LIB(",
          "565:      fwevt,",
          "566:      libfwevt_xml_tag_get_element_by_utf8_name,",
          "567:      [ac_cv_libfwevt_dummy=yes],",
          "568:      [ac_cv_libfwevt=no])",
          "569:     AC_CHECK_LIB(",
          "570:      fwevt,",
          "571:      libfwevt_xml_tag_get_element_by_utf16_name,",
          "572:      [ac_cv_libfwevt_dummy=yes],",
          "573:      [ac_cv_libfwevt=no])",
          "575:     AC_CHECK_LIB(",
          "576:      fwevt,",
          "577:      libfwevt_xml_tag_get_flags,",
          "578:      [ac_cv_libfwevt_dummy=yes],",
          "579:      [ac_cv_libfwevt=no])",
          "581:     ac_cv_libfwevt_LIBADD=\"-lfwevt\"",
          "583:    ])",
          "584:   ])",
          "586:  AS_IF(",
          "587:   [test \"x$ac_cv_libfwevt\" = xyes],",
          "588:   [AC_DEFINE(",
          "589:    [HAVE_LIBFWEVT],",
          "590:    [1],",
          "591:    [Define to 1 if you have the `fwevt' library (-lfwevt).])",
          "594:  AS_IF(",
          "595:   [test \"x$ac_cv_libfwevt\" = xyes],",
          "596:   [AC_SUBST(",
          "597:    [HAVE_LIBFWEVT],",
          "598:    [1]) ],",
          "599:   [AC_SUBST(",
          "600:    [HAVE_LIBFWEVT],",
          "601:    [0])",
          "603:  ])",
          "607:  [AX_COMMON_ARG_WITH(",
          "608:   [libfwevt],",
          "609:   [libfwevt],",
          "610:   [search for libfwevt in includedir and libdir or in the specified DIR, or no if to use local version],",
          "611:   [auto-detect],",
          "612:   [DIR])",
          "614:  dnl Check for a shared library version",
          "615:  AX_LIBFWEVT_CHECK_LIB",
          "617:  dnl Check if the dependencies for the local library version",
          "618:  AS_IF(",
          "619:   [test \"x$ac_cv_libfwevt\" != xyes],",
          "620:   [ac_cv_libfwevt_CPPFLAGS=\"-I../libfwevt\";",
          "621:   ac_cv_libfwevt_LIBADD=\"../libfwevt/libfwevt.la\";",
          "623:   ac_cv_libfwevt=local",
          "625:   AC_DEFINE(",
          "626:    [HAVE_LOCAL_LIBFWEVT],",
          "627:    [1],",
          "628:    [Define to 1 if the local version of libfwevt is used.])",
          "629:   AC_SUBST(",
          "630:    [HAVE_LOCAL_LIBFWEVT],",
          "631:    [1])",
          "632:   ])",
          "634:  AM_CONDITIONAL(",
          "635:   [HAVE_LOCAL_LIBFWEVT],",
          "636:   [test \"x$ac_cv_libfwevt\" = xlocal])",
          "637:  AS_IF(",
          "638:   [test \"x$ac_cv_libfwevt_CPPFLAGS\" != \"x\"],",
          "639:   [AC_SUBST(",
          "640:    [LIBFWEVT_CPPFLAGS],",
          "641:    [$ac_cv_libfwevt_CPPFLAGS])",
          "642:   ])",
          "643:  AS_IF(",
          "644:   [test \"x$ac_cv_libfwevt_LIBADD\" != \"x\"],",
          "645:   [AC_SUBST(",
          "646:    [LIBFWEVT_LIBADD],",
          "647:    [$ac_cv_libfwevt_LIBADD])",
          "648:   ])",
          "650:  AS_IF(",
          "651:   [test \"x$ac_cv_libfwevt\" = xyes],",
          "652:   [AC_SUBST(",
          "653:    [ax_libfwevt_pc_libs_private],",
          "654:    [-lfwevt])",
          "655:   ])",
          "657:  AS_IF(",
          "658:   [test \"x$ac_cv_libfwevt\" = xyes],",
          "659:   [AC_SUBST(",
          "660:    [ax_libfwevt_spec_requires],",
          "661:    [libfwevt])",
          "662:   AC_SUBST(",
          "663:    [ax_libfwevt_spec_build_requires],",
          "664:    [libfwevt-devel])",
          "666:  ])",
          "",
          "[Added Lines]",
          "3: dnl Version: 20170908",
          "8:   [dnl Check if parameters were provided",
          "10:     [test \"x$ac_cv_with_libfwevt\" != x && test \"x$ac_cv_with_libfwevt\" != xno && test \"x$ac_cv_with_libfwevt\" != xauto-detect],",
          "11:     [AS_IF(",
          "12:       [test -d \"$ac_cv_with_libfwevt\"],",
          "13:       [CFLAGS=\"$CFLAGS -I${ac_cv_with_libfwevt}/include\"",
          "14:       LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libfwevt}/lib\"],",
          "15:       [AC_MSG_WARN([no such directory: $ac_cv_with_libfwevt])",
          "16:       ])",
          "17:     ])",
          "20:     [test \"x$ac_cv_with_libfwevt\" = xno],",
          "22:     [dnl Check for a pkg-config file",
          "23:     AS_IF(",
          "24:       [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:       [PKG_CHECK_MODULES(",
          "26:         [libfwevt],",
          "27:         [libfwevt >= 20160103],",
          "28:         [ac_cv_libfwevt=yes],",
          "29:         [ac_cv_libfwevt=no])",
          "30:       ])",
          "32:     AS_IF(",
          "33:       [test \"x$ac_cv_libfwevt\" = xyes],",
          "34:       [ac_cv_libfwevt_CPPFLAGS=\"$pkg_cv_libfwevt_CFLAGS\"",
          "35:       ac_cv_libfwevt_LIBADD=\"$pkg_cv_libfwevt_LIBS\"],",
          "36:       [dnl Check for headers",
          "37:       AC_CHECK_HEADERS([libfwevt.h])",
          "40:         [test \"x$ac_cv_header_libfwevt_h\" = xno],",
          "41:         [ac_cv_libfwevt=no],",
          "42:         [dnl Check for the individual functions",
          "43:         ac_cv_libfwevt=yes",
          "45:         AC_CHECK_LIB(",
          "46:           fwevt,",
          "47:           libfwevt_get_version,",
          "48:           [ac_cv_libfwevt_dummy=yes],",
          "49:           [ac_cv_libfwevt=no])",
          "51:         dnl Channel functions",
          "52:         AC_CHECK_LIB(",
          "53:           fwevt,",
          "54:           libfwevt_channel_initialize,",
          "55:           [ac_cv_libfwevt_dummy=yes],",
          "56:           [ac_cv_libfwevt=no])",
          "57:         AC_CHECK_LIB(",
          "58:           fwevt,",
          "59:           libfwevt_channel_free,",
          "60:           [ac_cv_libfwevt_dummy=yes],",
          "61:           [ac_cv_libfwevt=no])",
          "63:         AC_CHECK_LIB(",
          "64:           fwevt,",
          "65:           libfwevt_channel_read,",
          "66:           [ac_cv_libfwevt_dummy=yes],",
          "67:           [ac_cv_libfwevt=no])",
          "69:         dnl Event functions",
          "70:         AC_CHECK_LIB(",
          "71:           fwevt,",
          "72:           libfwevt_event_initialize,",
          "73:           [ac_cv_libfwevt_dummy=yes],",
          "74:           [ac_cv_libfwevt=no])",
          "75:         AC_CHECK_LIB(",
          "76:           fwevt,",
          "77:           libfwevt_event_free,",
          "78:           [ac_cv_libfwevt_dummy=yes],",
          "79:           [ac_cv_libfwevt=no])",
          "81:         AC_CHECK_LIB(",
          "82:           fwevt,",
          "83:           libfwevt_event_read,",
          "84:           [ac_cv_libfwevt_dummy=yes],",
          "85:           [ac_cv_libfwevt=no])",
          "86:         AC_CHECK_LIB(",
          "87:           fwevt,",
          "88:           libfwevt_event_get_identifier,",
          "89:           [ac_cv_libfwevt_dummy=yes],",
          "90:           [ac_cv_libfwevt=no])",
          "91:         AC_CHECK_LIB(",
          "92:           fwevt,",
          "93:           libfwevt_event_get_message_identifier,",
          "94:           [ac_cv_libfwevt_dummy=yes],",
          "95:           [ac_cv_libfwevt=no])",
          "96:         AC_CHECK_LIB(",
          "97:           fwevt,",
          "98:           libfwevt_event_get_template_offset,",
          "99:           [ac_cv_libfwevt_dummy=yes],",
          "100:           [ac_cv_libfwevt=no])",
          "102:         dnl Keyword functions",
          "103:         AC_CHECK_LIB(",
          "104:           fwevt,",
          "105:           libfwevt_keyword_initialize,",
          "106:           [ac_cv_libfwevt_dummy=yes],",
          "107:           [ac_cv_libfwevt=no])",
          "108:         AC_CHECK_LIB(",
          "109:           fwevt,",
          "110:           libfwevt_keyword_free,",
          "111:           [ac_cv_libfwevt_dummy=yes],",
          "112:           [ac_cv_libfwevt=no])",
          "114:         AC_CHECK_LIB(",
          "115:           fwevt,",
          "116:           libfwevt_keyword_read,",
          "117:           [ac_cv_libfwevt_dummy=yes],",
          "118:           [ac_cv_libfwevt=no])",
          "120:         dnl Level functions",
          "121:         AC_CHECK_LIB(",
          "122:           fwevt,",
          "123:           libfwevt_level_initialize,",
          "124:           [ac_cv_libfwevt_dummy=yes],",
          "125:           [ac_cv_libfwevt=no])",
          "126:         AC_CHECK_LIB(",
          "127:           fwevt,",
          "128:           libfwevt_level_free,",
          "129:           [ac_cv_libfwevt_dummy=yes],",
          "130:           [ac_cv_libfwevt=no])",
          "132:         AC_CHECK_LIB(",
          "133:           fwevt,",
          "134:           libfwevt_level_read,",
          "135:           [ac_cv_libfwevt_dummy=yes],",
          "136:           [ac_cv_libfwevt=no])",
          "138:         dnl Manifest functions",
          "139:         AC_CHECK_LIB(",
          "140:           fwevt,",
          "141:           libfwevt_manifest_initialize,",
          "142:           [ac_cv_libfwevt_dummy=yes],",
          "143:           [ac_cv_libfwevt=no])",
          "144:         AC_CHECK_LIB(",
          "145:           fwevt,",
          "146:           libfwevt_manifest_free,",
          "147:           [ac_cv_libfwevt_dummy=yes],",
          "148:           [ac_cv_libfwevt=no])",
          "150:         AC_CHECK_LIB(",
          "151:           fwevt,",
          "152:           libfwevt_manifest_read,",
          "153:           [ac_cv_libfwevt_dummy=yes],",
          "154:           [ac_cv_libfwevt=no])",
          "155:         AC_CHECK_LIB(",
          "156:           fwevt,",
          "157:           libfwevt_manifest_get_number_of_providers,",
          "158:           [ac_cv_libfwevt_dummy=yes],",
          "159:           [ac_cv_libfwevt=no])",
          "160:         AC_CHECK_LIB(",
          "161:           fwevt,",
          "162:           libfwevt_manifest_get_provider,",
          "163:           [ac_cv_libfwevt_dummy=yes],",
          "164:           [ac_cv_libfwevt=no])",
          "165:         AC_CHECK_LIB(",
          "166:           fwevt,",
          "167:           libfwevt_manifest_get_provider_by_identifier,",
          "168:           [ac_cv_libfwevt_dummy=yes],",
          "169:           [ac_cv_libfwevt=no])",
          "171:         dnl Map functions",
          "172:         AC_CHECK_LIB(",
          "173:           fwevt,",
          "174:           libfwevt_map_initialize,",
          "175:           [ac_cv_libfwevt_dummy=yes],",
          "176:           [ac_cv_libfwevt=no])",
          "177:         AC_CHECK_LIB(",
          "178:           fwevt,",
          "179:           libfwevt_map_free,",
          "180:           [ac_cv_libfwevt_dummy=yes],",
          "181:           [ac_cv_libfwevt=no])",
          "183:         AC_CHECK_LIB(",
          "184:           fwevt,",
          "185:           libfwevt_map_read,",
          "186:           [ac_cv_libfwevt_dummy=yes],",
          "187:           [ac_cv_libfwevt=no])",
          "189:         dnl Opcode functions",
          "190:         AC_CHECK_LIB(",
          "191:           fwevt,",
          "192:           libfwevt_opcode_initialize,",
          "193:           [ac_cv_libfwevt_dummy=yes],",
          "194:           [ac_cv_libfwevt=no])",
          "195:         AC_CHECK_LIB(",
          "196:           fwevt,",
          "197:           libfwevt_opcode_free,",
          "198:           [ac_cv_libfwevt_dummy=yes],",
          "199:           [ac_cv_libfwevt=no])",
          "201:         AC_CHECK_LIB(",
          "202:           fwevt,",
          "203:           libfwevt_opcode_read,",
          "204:           [ac_cv_libfwevt_dummy=yes],",
          "205:           [ac_cv_libfwevt=no])",
          "207:         dnl Provider functions",
          "208:         AC_CHECK_LIB(",
          "209:           fwevt,",
          "210:           libfwevt_provider_initialize,",
          "211:           [ac_cv_libfwevt_dummy=yes],",
          "212:           [ac_cv_libfwevt=no])",
          "213:         AC_CHECK_LIB(",
          "214:           fwevt,",
          "215:           libfwevt_provider_free,",
          "216:           [ac_cv_libfwevt_dummy=yes],",
          "217:           [ac_cv_libfwevt=no])",
          "219:         AC_CHECK_LIB(",
          "220:           fwevt,",
          "221:           libfwevt_provider_read,",
          "222:           [ac_cv_libfwevt_dummy=yes],",
          "223:           [ac_cv_libfwevt=no])",
          "224:         AC_CHECK_LIB(",
          "225:           fwevt,",
          "226:           libfwevt_provider_read_channels,",
          "227:           [ac_cv_libfwevt_dummy=yes],",
          "228:           [ac_cv_libfwevt=no])",
          "229:         AC_CHECK_LIB(",
          "230:           fwevt,",
          "231:           libfwevt_provider_read_events,",
          "232:           [ac_cv_libfwevt_dummy=yes],",
          "233:           [ac_cv_libfwevt=no])",
          "234:         AC_CHECK_LIB(",
          "235:           fwevt,",
          "236:           libfwevt_provider_read_keywords,",
          "237:           [ac_cv_libfwevt_dummy=yes],",
          "238:           [ac_cv_libfwevt=no])",
          "239:         AC_CHECK_LIB(",
          "240:           fwevt,",
          "241:           libfwevt_provider_read_levels,",
          "242:           [ac_cv_libfwevt_dummy=yes],",
          "243:           [ac_cv_libfwevt=no])",
          "244:         AC_CHECK_LIB(",
          "245:           fwevt,",
          "246:           libfwevt_provider_read_maps,",
          "247:           [ac_cv_libfwevt_dummy=yes],",
          "248:           [ac_cv_libfwevt=no])",
          "249:         AC_CHECK_LIB(",
          "250:           fwevt,",
          "251:           libfwevt_provider_read_opcodes,",
          "252:           [ac_cv_libfwevt_dummy=yes],",
          "253:           [ac_cv_libfwevt=no])",
          "254:         AC_CHECK_LIB(",
          "255:           fwevt,",
          "256:           libfwevt_provider_read_tasks,",
          "257:           [ac_cv_libfwevt_dummy=yes],",
          "258:           [ac_cv_libfwevt=no])",
          "259:         AC_CHECK_LIB(",
          "260:           fwevt,",
          "261:           libfwevt_provider_read_templates,",
          "262:           [ac_cv_libfwevt_dummy=yes],",
          "263:           [ac_cv_libfwevt=no])",
          "265:         AC_CHECK_LIB(",
          "266:           fwevt,",
          "267:           libfwevt_provider_compare_identifier,",
          "268:           [ac_cv_libfwevt_dummy=yes],",
          "269:           [ac_cv_libfwevt=no])",
          "270:         AC_CHECK_LIB(",
          "271:           fwevt,",
          "272:           libfwevt_provider_get_number_of_channels,",
          "273:           [ac_cv_libfwevt_dummy=yes],",
          "274:           [ac_cv_libfwevt=no])",
          "275:         AC_CHECK_LIB(",
          "276:           fwevt,",
          "277:           libfwevt_provider_get_channel,",
          "278:           [ac_cv_libfwevt_dummy=yes],",
          "279:           [ac_cv_libfwevt=no])",
          "280:         AC_CHECK_LIB(",
          "281:           fwevt,",
          "282:           libfwevt_provider_get_number_of_events,",
          "283:           [ac_cv_libfwevt_dummy=yes],",
          "284:           [ac_cv_libfwevt=no])",
          "285:         AC_CHECK_LIB(",
          "286:           fwevt,",
          "287:           libfwevt_provider_get_event,",
          "288:           [ac_cv_libfwevt_dummy=yes],",
          "289:           [ac_cv_libfwevt=no])",
          "290:         AC_CHECK_LIB(",
          "291:           fwevt,",
          "292:           libfwevt_provider_get_event_by_identifier,",
          "293:           [ac_cv_libfwevt_dummy=yes],",
          "294:           [ac_cv_libfwevt=no])",
          "295:         AC_CHECK_LIB(",
          "296:           fwevt,",
          "297:           libfwevt_provider_get_number_of_keywords,",
          "298:           [ac_cv_libfwevt_dummy=yes],",
          "299:           [ac_cv_libfwevt=no])",
          "300:         AC_CHECK_LIB(",
          "301:           fwevt,",
          "302:           libfwevt_provider_get_keyword,",
          "303:           [ac_cv_libfwevt_dummy=yes],",
          "304:           [ac_cv_libfwevt=no])",
          "305:         AC_CHECK_LIB(",
          "306:           fwevt,",
          "307:           libfwevt_provider_get_number_of_levels,",
          "308:           [ac_cv_libfwevt_dummy=yes],",
          "309:           [ac_cv_libfwevt=no])",
          "310:         AC_CHECK_LIB(",
          "311:           fwevt,",
          "312:           libfwevt_provider_get_level,",
          "313:           [ac_cv_libfwevt_dummy=yes],",
          "314:           [ac_cv_libfwevt=no])",
          "315:         AC_CHECK_LIB(",
          "316:           fwevt,",
          "317:           libfwevt_provider_get_number_of_maps,",
          "318:           [ac_cv_libfwevt_dummy=yes],",
          "319:           [ac_cv_libfwevt=no])",
          "320:         AC_CHECK_LIB(",
          "321:           fwevt,",
          "322:           libfwevt_provider_get_map,",
          "323:           [ac_cv_libfwevt_dummy=yes],",
          "324:           [ac_cv_libfwevt=no])",
          "325:         AC_CHECK_LIB(",
          "326:           fwevt,",
          "327:           libfwevt_provider_get_number_of_opcodes,",
          "328:           [ac_cv_libfwevt_dummy=yes],",
          "329:           [ac_cv_libfwevt=no])",
          "330:         AC_CHECK_LIB(",
          "331:           fwevt,",
          "332:           libfwevt_provider_get_opcode,",
          "333:           [ac_cv_libfwevt_dummy=yes],",
          "334:           [ac_cv_libfwevt=no])",
          "335:         AC_CHECK_LIB(",
          "336:           fwevt,",
          "337:           libfwevt_provider_get_number_of_tasks,",
          "338:           [ac_cv_libfwevt_dummy=yes],",
          "339:           [ac_cv_libfwevt=no])",
          "340:         AC_CHECK_LIB(",
          "341:           fwevt,",
          "342:           libfwevt_provider_get_task,",
          "343:           [ac_cv_libfwevt_dummy=yes],",
          "344:           [ac_cv_libfwevt=no])",
          "345:         AC_CHECK_LIB(",
          "346:           fwevt,",
          "347:           libfwevt_provider_get_number_of_templates,",
          "348:           [ac_cv_libfwevt_dummy=yes],",
          "349:           [ac_cv_libfwevt=no])",
          "350:         AC_CHECK_LIB(",
          "351:           fwevt,",
          "352:           libfwevt_provider_get_template,",
          "353:           [ac_cv_libfwevt_dummy=yes],",
          "354:           [ac_cv_libfwevt=no])",
          "355:         AC_CHECK_LIB(",
          "356:           fwevt,",
          "357:           libfwevt_provider_get_template_by_offset,",
          "358:           [ac_cv_libfwevt_dummy=yes],",
          "359:           [ac_cv_libfwevt=no])",
          "361:         dnl Task functions",
          "362:         AC_CHECK_LIB(",
          "363:           fwevt,",
          "364:           libfwevt_task_initialize,",
          "365:           [ac_cv_libfwevt_dummy=yes],",
          "366:           [ac_cv_libfwevt=no])",
          "367:         AC_CHECK_LIB(",
          "368:           fwevt,",
          "369:           libfwevt_task_free,",
          "370:           [ac_cv_libfwevt_dummy=yes],",
          "371:           [ac_cv_libfwevt=no])",
          "373:         AC_CHECK_LIB(",
          "374:           fwevt,",
          "375:           libfwevt_task_read,",
          "376:           [ac_cv_libfwevt_dummy=yes],",
          "377:           [ac_cv_libfwevt=no])",
          "379:         dnl Template functions",
          "380:         AC_CHECK_LIB(",
          "381:           fwevt,",
          "382:           libfwevt_template_initialize,",
          "383:           [ac_cv_libfwevt_dummy=yes],",
          "384:           [ac_cv_libfwevt=no])",
          "385:         AC_CHECK_LIB(",
          "386:           fwevt,",
          "387:           libfwevt_template_free,",
          "388:           [ac_cv_libfwevt_dummy=yes],",
          "389:           [ac_cv_libfwevt=no])",
          "391:         AC_CHECK_LIB(",
          "392:           fwevt,",
          "393:           libfwevt_template_read,",
          "394:           [ac_cv_libfwevt_dummy=yes],",
          "395:           [ac_cv_libfwevt=no])",
          "396:         AC_CHECK_LIB(",
          "397:           fwevt,",
          "398:           libfwevt_template_read_xml_document,",
          "399:           [ac_cv_libfwevt_dummy=yes],",
          "400:           [ac_cv_libfwevt=no])",
          "402:         AC_CHECK_LIB(",
          "403:           fwevt,",
          "404:           libfwevt_template_set_ascii_codepage,",
          "405:           [ac_cv_libfwevt_dummy=yes],",
          "406:           [ac_cv_libfwevt=no])",
          "407:         AC_CHECK_LIB(",
          "408:           fwevt,",
          "409:           libfwevt_template_get_data,",
          "410:           [ac_cv_libfwevt_dummy=yes],",
          "411:           [ac_cv_libfwevt=no])",
          "412:         AC_CHECK_LIB(",
          "413:           fwevt,",
          "414:           libfwevt_template_set_data",
          "415:           [ac_cv_libfwevt_dummy=yes],",
          "416:           [ac_cv_libfwevt=no])",
          "417:         AC_CHECK_LIB(",
          "418:           fwevt,",
          "419:           libfwevt_template_get_offset",
          "420:           [ac_cv_libfwevt_dummy=yes],",
          "421:           [ac_cv_libfwevt=no])",
          "422:         AC_CHECK_LIB(",
          "423:           fwevt,",
          "424:           libfwevt_template_set_offset",
          "425:           [ac_cv_libfwevt_dummy=yes],",
          "426:           [ac_cv_libfwevt=no])",
          "427:         AC_CHECK_LIB(",
          "428:           fwevt,",
          "429:           libfwevt_template_get_size",
          "430:           [ac_cv_libfwevt_dummy=yes],",
          "431:           [ac_cv_libfwevt=no])",
          "433:         dnl XML document functions",
          "434:         AC_CHECK_LIB(",
          "435:           fwevt,",
          "436:           libfwevt_xml_document_initialize,",
          "437:           [ac_cv_libfwevt_dummy=yes],",
          "438:           [ac_cv_libfwevt=no])",
          "439:         AC_CHECK_LIB(",
          "440:           fwevt,",
          "441:           libfwevt_xml_document_free,",
          "442:           [ac_cv_libfwevt_dummy=yes],",
          "443:           [ac_cv_libfwevt=no])",
          "444:         AC_CHECK_LIB(",
          "445:           fwevt,",
          "446:           libfwevt_xml_document_clone,",
          "447:           [ac_cv_libfwevt_dummy=yes],",
          "448:           [ac_cv_libfwevt=no])",
          "450:         AC_CHECK_LIB(",
          "451:           fwevt,",
          "452:           libfwevt_xml_document_get_root_xml_tag,",
          "453:           [ac_cv_libfwevt_dummy=yes],",
          "454:           [ac_cv_libfwevt=no])",
          "455:         AC_CHECK_LIB(",
          "456:           fwevt,",
          "457:           libfwevt_xml_document_read,",
          "458:           [ac_cv_libfwevt_dummy=yes],",
          "459:           [ac_cv_libfwevt=no])",
          "460:         AC_CHECK_LIB(",
          "461:           fwevt,",
          "462:           libfwevt_xml_document_get_utf8_xml_string_size,",
          "463:           [ac_cv_libfwevt_dummy=yes],",
          "464:           [ac_cv_libfwevt=no])",
          "465:         AC_CHECK_LIB(",
          "466:           fwevt,",
          "467:           libfwevt_xml_document_get_utf8_xml_string,",
          "468:           [ac_cv_libfwevt_dummy=yes],",
          "469:           [ac_cv_libfwevt=no])",
          "470:         AC_CHECK_LIB(",
          "471:           fwevt,",
          "472:           libfwevt_xml_document_get_utf16_xml_string_size,",
          "473:           [ac_cv_libfwevt_dummy=yes],",
          "474:           [ac_cv_libfwevt=no])",
          "475:         AC_CHECK_LIB(",
          "476:           fwevt,",
          "477:           libfwevt_xml_document_get_utf16_xml_string,",
          "478:           [ac_cv_libfwevt_dummy=yes],",
          "479:           [ac_cv_libfwevt=no])",
          "481:         AS_IF(",
          "482:           [test \"x$ac_cv_enable_debug_output\" != xno ],",
          "483:           [AC_CHECK_LIB(",
          "484:             fwevt,",
          "485:             libfwevt_xml_document_debug_print,",
          "486:             [ac_cv_libfwevt_dummy=yes],",
          "487:             [ac_cv_libfwevt=no])",
          "488:         ])",
          "490:         dnl XML tag functions",
          "492:         AC_CHECK_LIB(",
          "493:           fwevt,",
          "494:           libfwevt_xml_tag_get_utf8_name_size,",
          "495:           [ac_cv_libfwevt_dummy=yes],",
          "496:           [ac_cv_libfwevt=no])",
          "497:         AC_CHECK_LIB(",
          "498:           fwevt,",
          "499:           libfwevt_xml_tag_get_utf8_name,",
          "500:           [ac_cv_libfwevt_dummy=yes],",
          "501:           [ac_cv_libfwevt=no])",
          "502:         AC_CHECK_LIB(",
          "503:           fwevt,",
          "504:           libfwevt_xml_tag_get_utf16_name_size,",
          "505:           [ac_cv_libfwevt_dummy=yes],",
          "506:           [ac_cv_libfwevt=no])",
          "507:         AC_CHECK_LIB(",
          "508:           fwevt,",
          "509:           libfwevt_xml_tag_get_utf16_name,",
          "510:           [ac_cv_libfwevt_dummy=yes],",
          "511:           [ac_cv_libfwevt=no])",
          "512:         AC_CHECK_LIB(",
          "513:           fwevt,",
          "514:           libfwevt_xml_tag_get_utf8_value_size,",
          "515:           [ac_cv_libfwevt_dummy=yes],",
          "516:           [ac_cv_libfwevt=no])",
          "517:         AC_CHECK_LIB(",
          "518:           fwevt,",
          "519:           libfwevt_xml_tag_get_utf8_value,",
          "520:           [ac_cv_libfwevt_dummy=yes],",
          "521:           [ac_cv_libfwevt=no])",
          "522:         AC_CHECK_LIB(",
          "523:           fwevt,",
          "524:           libfwevt_xml_tag_get_utf16_value_size,",
          "525:           [ac_cv_libfwevt_dummy=yes],",
          "526:           [ac_cv_libfwevt=no])",
          "527:         AC_CHECK_LIB(",
          "528:           fwevt,",
          "529:           libfwevt_xml_tag_get_utf16_value,",
          "530:           [ac_cv_libfwevt_dummy=yes],",
          "531:           [ac_cv_libfwevt=no])",
          "533:         AC_CHECK_LIB(",
          "534:           fwevt,",
          "535:           libfwevt_xml_tag_get_number_of_attributes,",
          "536:           [ac_cv_libfwevt_dummy=yes],",
          "537:           [ac_cv_libfwevt=no])",
          "538:         AC_CHECK_LIB(",
          "539:           fwevt,",
          "540:           libfwevt_xml_tag_get_attribute_by_index,",
          "541:           [ac_cv_libfwevt_dummy=yes],",
          "542:           [ac_cv_libfwevt=no])",
          "543:         AC_CHECK_LIB(",
          "544:           fwevt,",
          "545:           libfwevt_xml_tag_get_attribute_by_utf8_name,",
          "546:           [ac_cv_libfwevt_dummy=yes],",
          "547:           [ac_cv_libfwevt=no])",
          "548:         AC_CHECK_LIB(",
          "549:           fwevt,",
          "550:           libfwevt_xml_tag_get_attribute_by_utf16_name,",
          "551:           [ac_cv_libfwevt_dummy=yes],",
          "552:           [ac_cv_libfwevt=no])",
          "554:         AC_CHECK_LIB(",
          "555:           fwevt,",
          "556:           libfwevt_xml_tag_get_number_of_elements,",
          "557:           [ac_cv_libfwevt_dummy=yes],",
          "558:           [ac_cv_libfwevt=no])",
          "559:         AC_CHECK_LIB(",
          "560:           fwevt,",
          "561:           libfwevt_xml_tag_get_element_by_index,",
          "562:           [ac_cv_libfwevt_dummy=yes],",
          "563:           [ac_cv_libfwevt=no])",
          "564:         AC_CHECK_LIB(",
          "565:           fwevt,",
          "566:           libfwevt_xml_tag_get_element_by_utf8_name,",
          "567:           [ac_cv_libfwevt_dummy=yes],",
          "568:           [ac_cv_libfwevt=no])",
          "569:         AC_CHECK_LIB(",
          "570:           fwevt,",
          "571:           libfwevt_xml_tag_get_element_by_utf16_name,",
          "572:           [ac_cv_libfwevt_dummy=yes],",
          "573:           [ac_cv_libfwevt=no])",
          "575:         AC_CHECK_LIB(",
          "576:           fwevt,",
          "577:           libfwevt_xml_tag_get_flags,",
          "578:           [ac_cv_libfwevt_dummy=yes],",
          "579:           [ac_cv_libfwevt=no])",
          "581:         ac_cv_libfwevt_LIBADD=\"-lfwevt\"",
          "582:         ])",
          "583:       ])",
          "586:   AS_IF(",
          "587:     [test \"x$ac_cv_libfwevt\" = xyes],",
          "588:     [AC_DEFINE(",
          "589:       [HAVE_LIBFWEVT],",
          "590:       [1],",
          "591:       [Define to 1 if you have the `fwevt' library (-lfwevt).])",
          "594:   AS_IF(",
          "595:     [test \"x$ac_cv_libfwevt\" = xyes],",
          "596:     [AC_SUBST(",
          "597:       [HAVE_LIBFWEVT],",
          "598:       [1]) ],",
          "599:     [AC_SUBST(",
          "600:       [HAVE_LIBFWEVT],",
          "601:       [0])",
          "602:     ])",
          "605: dnl Function to detect if libfwevt dependencies are available",
          "606: AC_DEFUN([AX_LIBFWEVT_CHECK_LOCAL],",
          "607:   [dnl No additional checks.",
          "609:   ac_cv_libfwevt_CPPFLAGS=\"-I../libfwevt\";",
          "610:   ac_cv_libfwevt_LIBADD=\"../libfwevt/libfwevt.la\";",
          "612:   ac_cv_libfwevt=local",
          "617:   [AX_COMMON_ARG_WITH(",
          "618:     [libfwevt],",
          "619:     [libfwevt],",
          "620:     [search for libfwevt in includedir and libdir or in the specified DIR, or no if to use local version],",
          "621:     [auto-detect],",
          "622:     [DIR])",
          "624:   dnl Check for a shared library version",
          "625:   AX_LIBFWEVT_CHECK_LIB",
          "627:   dnl Check if the dependencies for the local library version",
          "628:   AS_IF(",
          "629:     [test \"x$ac_cv_libfwevt\" != xyes],",
          "630:     [AX_LIBFWEVT_CHECK_LOCAL",
          "632:     AC_DEFINE(",
          "633:       [HAVE_LOCAL_LIBFWEVT],",
          "634:       [1],",
          "635:       [Define to 1 if the local version of libfwevt is used.])",
          "636:     AC_SUBST(",
          "637:       [HAVE_LOCAL_LIBFWEVT],",
          "638:       [1])",
          "639:     ])",
          "641:   AM_CONDITIONAL(",
          "642:     [HAVE_LOCAL_LIBFWEVT],",
          "643:     [test \"x$ac_cv_libfwevt\" = xlocal])",
          "644:   AS_IF(",
          "645:     [test \"x$ac_cv_libfwevt_CPPFLAGS\" != \"x\"],",
          "646:     [AC_SUBST(",
          "647:       [LIBFWEVT_CPPFLAGS],",
          "648:       [$ac_cv_libfwevt_CPPFLAGS])",
          "649:     ])",
          "650:   AS_IF(",
          "651:     [test \"x$ac_cv_libfwevt_LIBADD\" != \"x\"],",
          "652:     [AC_SUBST(",
          "653:       [LIBFWEVT_LIBADD],",
          "654:       [$ac_cv_libfwevt_LIBADD])",
          "655:     ])",
          "657:   AS_IF(",
          "658:     [test \"x$ac_cv_libfwevt\" = xyes],",
          "659:     [AC_SUBST(",
          "660:       [ax_libfwevt_pc_libs_private],",
          "661:       [-lfwevt])",
          "662:     ])",
          "664:   AS_IF(",
          "665:     [test \"x$ac_cv_libfwevt\" = xyes],",
          "666:     [AC_SUBST(",
          "667:       [ax_libfwevt_spec_requires],",
          "668:       [libfwevt])",
          "669:     AC_SUBST(",
          "670:       [ax_libfwevt_spec_build_requires],",
          "671:       [libfwevt-devel])",
          "672:     ])",
          "",
          "---------------"
        ],
        "m4/libfwnt.m4||m4/libfwnt.m4": [
          "File: m4/libfwnt.m4 -> m4/libfwnt.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Functions for libfwnt",
          "2: dnl",
          "5: dnl Function to detect if libfwnt is available",
          "6: dnl ac_libfwnt_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "7: AC_DEFUN([AX_LIBFWNT_CHECK_LIB],",
          "32:   AS_IF(",
          "39:   AS_IF(",
          "41:     [ac_cv_libfwnt=no],",
          "208:     ])",
          "218:   ])",
          "228:   ])",
          "231: dnl Function to detect how to enable libfwnt",
          "232: AC_DEFUN([AX_LIBFWNT_CHECK_ENABLE],",
          "291:   ])",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20161107",
          "8:  [dnl Check if parameters were provided",
          "9:  AS_IF(",
          "10:   [test \"x$ac_cv_with_libfwnt\" != x && test \"x$ac_cv_with_libfwnt\" != xno && test \"x$ac_cv_with_libfwnt\" != xauto-detect],",
          "11:   [AS_IF(",
          "12:    [test -d \"$ac_cv_with_libfwnt\"],",
          "13:    [CFLAGS=\"$CFLAGS -I${ac_cv_with_libfwnt}/include\"",
          "14:    LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libfwnt}/lib\"],",
          "15:    [AC_MSG_WARN([no such directory: $ac_cv_with_libfwnt])",
          "16:    ])",
          "17:   ])",
          "19:  AS_IF(",
          "20:   [test \"x$ac_cv_with_libfwnt\" = xno],",
          "21:   [ac_cv_libfwnt=no],",
          "22:   [dnl Check for a pkg-config file",
          "23:   AS_IF(",
          "24:    [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:    [PKG_CHECK_MODULES(",
          "26:     [libfwnt],",
          "27:     [libfwnt >= 20161103],",
          "28:     [ac_cv_libfwnt=yes],",
          "29:     [ac_cv_libfwnt=no])",
          "30:    ])",
          "33:    [test \"x$ac_cv_libfwnt\" = xyes],",
          "34:    [ac_cv_libfwnt_CPPFLAGS=\"$pkg_cv_libfwnt_CFLAGS\"",
          "35:    ac_cv_libfwnt_LIBADD=\"$pkg_cv_libfwnt_LIBS\"],",
          "36:    [dnl Check for headers",
          "37:    AC_CHECK_HEADERS([libfwnt.h])",
          "40:     [test \"x$ac_cv_header_libfwnt_h\" = xno],",
          "42:     [dnl Check for the individual functions",
          "43:     ac_cv_libfwnt=yes",
          "45:     AC_CHECK_LIB(",
          "46:      fwnt,",
          "47:      libfwnt_get_version,",
          "48:      [ac_cv_libfwnt_dummy=yes],",
          "49:      [ac_cv_libfwnt=no])",
          "51:     dnl Security descriptor functions",
          "52:     AC_CHECK_LIB(",
          "53:      fwnt,",
          "54:      libfwnt_security_descriptor_initialize,",
          "55:      [ac_cv_libfwnt_dummy=yes],",
          "56:      [ac_cv_libfwnt=no])",
          "57:     AC_CHECK_LIB(",
          "58:      fwnt,",
          "59:      libfwnt_security_descriptor_free,",
          "60:      [ac_cv_libfwnt_dummy=yes],",
          "61:      [ac_cv_libfwnt=no])",
          "63:     AC_CHECK_LIB(",
          "64:      fwnt,",
          "65:      libfwnt_security_descriptor_copy_from_byte_stream,",
          "66:      [ac_cv_libfwnt_dummy=yes],",
          "67:      [ac_cv_libfwnt=no])",
          "68:     AC_CHECK_LIB(",
          "69:      fwnt,",
          "70:      libfwnt_security_descriptor_get_owner,",
          "71:      [ac_cv_libfwnt_dummy=yes],",
          "72:      [ac_cv_libfwnt=no])",
          "73:     AC_CHECK_LIB(",
          "74:      fwnt,",
          "75:      libfwnt_security_descriptor_get_group,",
          "76:      [ac_cv_libfwnt_dummy=yes],",
          "77:      [ac_cv_libfwnt=no])",
          "78:     AC_CHECK_LIB(",
          "79:      fwnt,",
          "80:      libfwnt_security_descriptor_get_discretionary_acl,",
          "81:      [ac_cv_libfwnt_dummy=yes],",
          "82:      [ac_cv_libfwnt=no])",
          "83:     AC_CHECK_LIB(",
          "84:      fwnt,",
          "85:      libfwnt_security_descriptor_get_system_acl,",
          "86:      [ac_cv_libfwnt_dummy=yes],",
          "87:      [ac_cv_libfwnt=no])",
          "89:     dnl Security identifier (SID) functions",
          "90:     AC_CHECK_LIB(",
          "91:      fwnt,",
          "92:      libfwnt_security_identifier_initialize,",
          "93:      [ac_cv_libfwnt_dummy=yes],",
          "94:      [ac_cv_libfwnt=no])",
          "95:     AC_CHECK_LIB(",
          "96:      fwnt,",
          "97:      libfwnt_security_identifier_free,",
          "98:      [ac_cv_libfwnt_dummy=yes],",
          "99:      [ac_cv_libfwnt=no])",
          "101:     AC_CHECK_LIB(",
          "102:      fwnt,",
          "103:      libfwnt_security_identifier_copy_from_byte_stream,",
          "104:      [ac_cv_libfwnt_dummy=yes],",
          "105:      [ac_cv_libfwnt=no])",
          "106:     AC_CHECK_LIB(",
          "107:      fwnt,",
          "108:      libfwnt_security_identifier_get_string_size,",
          "109:      [ac_cv_libfwnt_dummy=yes],",
          "110:      [ac_cv_libfwnt=no])",
          "111:     AC_CHECK_LIB(",
          "112:      fwnt,",
          "113:      libfwnt_security_identifier_copy_to_utf8_string,",
          "114:      [ac_cv_libfwnt_dummy=yes],",
          "115:      [ac_cv_libfwnt=no])",
          "116:     AC_CHECK_LIB(",
          "117:      fwnt,",
          "118:      libfwnt_security_identifier_copy_to_utf8_string_with_index,",
          "119:      [ac_cv_libfwnt_dummy=yes],",
          "120:      [ac_cv_libfwnt=no])",
          "121:     AC_CHECK_LIB(",
          "122:      fwnt,",
          "123:      libfwnt_security_identifier_copy_to_utf16_string,",
          "124:      [ac_cv_libfwnt_dummy=yes],",
          "125:      [ac_cv_libfwnt=no])",
          "126:     AC_CHECK_LIB(",
          "127:      fwnt,",
          "128:      libfwnt_security_identifier_copy_to_utf16_string_with_index,",
          "129:      [ac_cv_libfwnt_dummy=yes],",
          "130:      [ac_cv_libfwnt=no])",
          "131:     AC_CHECK_LIB(",
          "132:      fwnt,",
          "133:      libfwnt_security_identifier_copy_to_utf32_string,",
          "134:      [ac_cv_libfwnt_dummy=yes],",
          "135:      [ac_cv_libfwnt=no])",
          "136:     AC_CHECK_LIB(",
          "137:      fwnt,",
          "138:      libfwnt_security_identifier_copy_to_utf32_string_with_index,",
          "139:      [ac_cv_libfwnt_dummy=yes],",
          "140:      [ac_cv_libfwnt=no])",
          "142:     dnl Access control list (ACL) functions",
          "143:     AC_CHECK_LIB(",
          "144:      fwnt,",
          "145:      libfwnt_access_control_list_free,",
          "146:      [ac_cv_libfwnt_dummy=yes],",
          "147:      [ac_cv_libfwnt=no])",
          "149:     AC_CHECK_LIB(",
          "150:      fwnt,",
          "151:      libfwnt_access_control_list_get_number_of_entries,",
          "152:      [ac_cv_libfwnt_dummy=yes],",
          "153:      [ac_cv_libfwnt=no])",
          "154:     AC_CHECK_LIB(",
          "155:      fwnt,",
          "156:      libfwnt_access_control_list_get_entry_by_index,",
          "157:      [ac_cv_libfwnt_dummy=yes],",
          "158:      [ac_cv_libfwnt=no])",
          "160:     dnl Access control entry (ACE) functions",
          "161:     AC_CHECK_LIB(",
          "162:      fwnt,",
          "163:      libfwnt_access_control_entry_free,",
          "164:      [ac_cv_libfwnt_dummy=yes],",
          "165:      [ac_cv_libfwnt=no])",
          "167:     AC_CHECK_LIB(",
          "168:      fwnt,",
          "169:      libfwnt_access_control_entry_get_type,",
          "170:      [ac_cv_libfwnt_dummy=yes],",
          "171:      [ac_cv_libfwnt=no])",
          "172:     AC_CHECK_LIB(",
          "173:      fwnt,",
          "174:      libfwnt_access_control_entry_get_flags,",
          "175:      [ac_cv_libfwnt_dummy=yes],",
          "176:      [ac_cv_libfwnt=no])",
          "177:     AC_CHECK_LIB(",
          "178:      fwnt,",
          "179:      libfwnt_access_control_entry_get_access_mask,",
          "180:      [ac_cv_libfwnt_dummy=yes],",
          "181:      [ac_cv_libfwnt=no])",
          "182:     AC_CHECK_LIB(",
          "183:      fwnt,",
          "184:      libfwnt_access_control_entry_get_security_identifier,",
          "185:      [ac_cv_libfwnt_dummy=yes],",
          "186:      [ac_cv_libfwnt=no])",
          "188:     dnl LZNT1 functions",
          "189:     AC_CHECK_LIB(",
          "190:      fwnt,",
          "191:      libfwnt_lznt1_decompress,",
          "192:      [ac_cv_libfwnt_dummy=yes],",
          "193:      [ac_cv_libfwnt=no])",
          "195:     dnl LZXPRESS functions",
          "196:     AC_CHECK_LIB(",
          "197:      fwnt,",
          "198:      libfwnt_lzxpress_decompress,",
          "199:      [ac_cv_libfwnt_dummy=yes],",
          "200:      [ac_cv_libfwnt=no])",
          "201:     AC_CHECK_LIB(",
          "202:      fwnt,",
          "203:      libfwnt_lzxpress_huffman_decompress,",
          "204:      [ac_cv_libfwnt_dummy=yes],",
          "205:      [ac_cv_libfwnt=no])",
          "207:     ac_cv_libfwnt_LIBADD=\"-lfwnt\"",
          "209:    ])",
          "210:   ])",
          "212:  AS_IF(",
          "213:   [test \"x$ac_cv_libfwnt\" = xyes],",
          "214:   [AC_DEFINE(",
          "215:    [HAVE_LIBFWNT],",
          "216:    [1],",
          "217:    [Define to 1 if you have the `fwnt' library (-lfwnt).])",
          "220:  AS_IF(",
          "221:   [test \"x$ac_cv_libfwnt\" = xyes],",
          "222:   [AC_SUBST(",
          "223:    [HAVE_LIBFWNT],",
          "224:    [1]) ],",
          "225:   [AC_SUBST(",
          "226:    [HAVE_LIBFWNT],",
          "227:    [0])",
          "229:  ])",
          "233:  [AX_COMMON_ARG_WITH(",
          "234:   [libfwnt],",
          "235:   [libfwnt],",
          "236:   [search for libfwnt in includedir and libdir or in the specified DIR, or no if to use local version],",
          "237:   [auto-detect],",
          "238:   [DIR])",
          "240:  dnl Check for a shared library version",
          "241:  AX_LIBFWNT_CHECK_LIB",
          "243:  dnl Check if the dependencies for the local library version",
          "244:  AS_IF(",
          "245:   [test \"x$ac_cv_libfwnt\" != xyes],",
          "246:   [ac_cv_libfwnt_CPPFLAGS=\"-I../libfwnt\";",
          "247:   ac_cv_libfwnt_LIBADD=\"../libfwnt/libfwnt.la\";",
          "249:   ac_cv_libfwnt=local",
          "251:   AC_DEFINE(",
          "252:    [HAVE_LOCAL_LIBFWNT],",
          "253:    [1],",
          "254:    [Define to 1 if the local version of libfwnt is used.])",
          "255:   AC_SUBST(",
          "256:    [HAVE_LOCAL_LIBFWNT],",
          "257:    [1])",
          "258:   ])",
          "260:  AM_CONDITIONAL(",
          "261:   [HAVE_LOCAL_LIBFWNT],",
          "262:   [test \"x$ac_cv_libfwnt\" = xlocal])",
          "263:  AS_IF(",
          "264:   [test \"x$ac_cv_libfwnt_CPPFLAGS\" != \"x\"],",
          "265:   [AC_SUBST(",
          "266:    [LIBFWNT_CPPFLAGS],",
          "267:    [$ac_cv_libfwnt_CPPFLAGS])",
          "268:   ])",
          "269:  AS_IF(",
          "270:   [test \"x$ac_cv_libfwnt_LIBADD\" != \"x\"],",
          "271:   [AC_SUBST(",
          "272:    [LIBFWNT_LIBADD],",
          "273:    [$ac_cv_libfwnt_LIBADD])",
          "274:   ])",
          "276:  AS_IF(",
          "277:   [test \"x$ac_cv_libfwnt\" = xyes],",
          "278:   [AC_SUBST(",
          "279:    [ax_libfwnt_pc_libs_private],",
          "280:    [-lfwnt])",
          "281:   ])",
          "283:  AS_IF(",
          "284:   [test \"x$ac_cv_libfwnt\" = xyes],",
          "285:   [AC_SUBST(",
          "286:    [ax_libfwnt_spec_requires],",
          "287:    [libfwnt])",
          "288:   AC_SUBST(",
          "289:    [ax_libfwnt_spec_build_requires],",
          "290:    [libfwnt-devel])",
          "292:  ])",
          "",
          "[Added Lines]",
          "3: dnl Version: 20170908",
          "8:   [dnl Check if parameters were provided",
          "10:     [test \"x$ac_cv_with_libfwnt\" != x && test \"x$ac_cv_with_libfwnt\" != xno && test \"x$ac_cv_with_libfwnt\" != xauto-detect],",
          "11:     [AS_IF(",
          "12:       [test -d \"$ac_cv_with_libfwnt\"],",
          "13:       [CFLAGS=\"$CFLAGS -I${ac_cv_with_libfwnt}/include\"",
          "14:       LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libfwnt}/lib\"],",
          "15:       [AC_MSG_WARN([no such directory: $ac_cv_with_libfwnt])",
          "16:       ])",
          "17:     ])",
          "20:     [test \"x$ac_cv_with_libfwnt\" = xno],",
          "22:     [dnl Check for a pkg-config file",
          "23:     AS_IF(",
          "24:       [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:       [PKG_CHECK_MODULES(",
          "26:         [libfwnt],",
          "27:         [libfwnt >= 20161103],",
          "28:         [ac_cv_libfwnt=yes],",
          "29:         [ac_cv_libfwnt=no])",
          "30:       ])",
          "32:     AS_IF(",
          "33:       [test \"x$ac_cv_libfwnt\" = xyes],",
          "34:       [ac_cv_libfwnt_CPPFLAGS=\"$pkg_cv_libfwnt_CFLAGS\"",
          "35:       ac_cv_libfwnt_LIBADD=\"$pkg_cv_libfwnt_LIBS\"],",
          "36:       [dnl Check for headers",
          "37:       AC_CHECK_HEADERS([libfwnt.h])",
          "39:     AS_IF(",
          "40:         [test \"x$ac_cv_header_libfwnt_h\" = xno],",
          "41:         [ac_cv_libfwnt=no],",
          "42:         [dnl Check for the individual functions",
          "43:         ac_cv_libfwnt=yes",
          "45:         AC_CHECK_LIB(",
          "46:           fwnt,",
          "47:           libfwnt_get_version,",
          "48:           [ac_cv_libfwnt_dummy=yes],",
          "49:           [ac_cv_libfwnt=no])",
          "51:         dnl Security descriptor functions",
          "52:         AC_CHECK_LIB(",
          "53:           fwnt,",
          "54:           libfwnt_security_descriptor_initialize,",
          "55:           [ac_cv_libfwnt_dummy=yes],",
          "56:           [ac_cv_libfwnt=no])",
          "57:         AC_CHECK_LIB(",
          "58:           fwnt,",
          "59:           libfwnt_security_descriptor_free,",
          "60:           [ac_cv_libfwnt_dummy=yes],",
          "61:           [ac_cv_libfwnt=no])",
          "63:         AC_CHECK_LIB(",
          "64:           fwnt,",
          "65:           libfwnt_security_descriptor_copy_from_byte_stream,",
          "66:           [ac_cv_libfwnt_dummy=yes],",
          "67:           [ac_cv_libfwnt=no])",
          "68:         AC_CHECK_LIB(",
          "69:           fwnt,",
          "70:           libfwnt_security_descriptor_get_owner,",
          "71:           [ac_cv_libfwnt_dummy=yes],",
          "72:           [ac_cv_libfwnt=no])",
          "73:         AC_CHECK_LIB(",
          "74:           fwnt,",
          "75:           libfwnt_security_descriptor_get_group,",
          "76:           [ac_cv_libfwnt_dummy=yes],",
          "77:           [ac_cv_libfwnt=no])",
          "78:         AC_CHECK_LIB(",
          "79:           fwnt,",
          "80:           libfwnt_security_descriptor_get_discretionary_acl,",
          "81:           [ac_cv_libfwnt_dummy=yes],",
          "82:           [ac_cv_libfwnt=no])",
          "83:         AC_CHECK_LIB(",
          "84:           fwnt,",
          "85:           libfwnt_security_descriptor_get_system_acl,",
          "86:           [ac_cv_libfwnt_dummy=yes],",
          "87:           [ac_cv_libfwnt=no])",
          "89:         dnl Security identifier (SID) functions",
          "90:         AC_CHECK_LIB(",
          "91:           fwnt,",
          "92:           libfwnt_security_identifier_initialize,",
          "93:           [ac_cv_libfwnt_dummy=yes],",
          "94:           [ac_cv_libfwnt=no])",
          "95:         AC_CHECK_LIB(",
          "96:           fwnt,",
          "97:           libfwnt_security_identifier_free,",
          "98:           [ac_cv_libfwnt_dummy=yes],",
          "99:           [ac_cv_libfwnt=no])",
          "101:         AC_CHECK_LIB(",
          "102:           fwnt,",
          "103:           libfwnt_security_identifier_copy_from_byte_stream,",
          "104:           [ac_cv_libfwnt_dummy=yes],",
          "105:           [ac_cv_libfwnt=no])",
          "106:         AC_CHECK_LIB(",
          "107:           fwnt,",
          "108:           libfwnt_security_identifier_get_string_size,",
          "109:           [ac_cv_libfwnt_dummy=yes],",
          "110:           [ac_cv_libfwnt=no])",
          "111:         AC_CHECK_LIB(",
          "112:           fwnt,",
          "113:           libfwnt_security_identifier_copy_to_utf8_string,",
          "114:           [ac_cv_libfwnt_dummy=yes],",
          "115:           [ac_cv_libfwnt=no])",
          "116:         AC_CHECK_LIB(",
          "117:           fwnt,",
          "118:           libfwnt_security_identifier_copy_to_utf8_string_with_index,",
          "119:           [ac_cv_libfwnt_dummy=yes],",
          "120:           [ac_cv_libfwnt=no])",
          "121:         AC_CHECK_LIB(",
          "122:           fwnt,",
          "123:           libfwnt_security_identifier_copy_to_utf16_string,",
          "124:           [ac_cv_libfwnt_dummy=yes],",
          "125:           [ac_cv_libfwnt=no])",
          "126:         AC_CHECK_LIB(",
          "127:           fwnt,",
          "128:           libfwnt_security_identifier_copy_to_utf16_string_with_index,",
          "129:           [ac_cv_libfwnt_dummy=yes],",
          "130:           [ac_cv_libfwnt=no])",
          "131:         AC_CHECK_LIB(",
          "132:           fwnt,",
          "133:           libfwnt_security_identifier_copy_to_utf32_string,",
          "134:           [ac_cv_libfwnt_dummy=yes],",
          "135:           [ac_cv_libfwnt=no])",
          "136:         AC_CHECK_LIB(",
          "137:           fwnt,",
          "138:           libfwnt_security_identifier_copy_to_utf32_string_with_index,",
          "139:           [ac_cv_libfwnt_dummy=yes],",
          "140:           [ac_cv_libfwnt=no])",
          "142:         dnl Access control list (ACL) functions",
          "143:         AC_CHECK_LIB(",
          "144:           fwnt,",
          "145:           libfwnt_access_control_list_free,",
          "146:           [ac_cv_libfwnt_dummy=yes],",
          "147:           [ac_cv_libfwnt=no])",
          "149:         AC_CHECK_LIB(",
          "150:           fwnt,",
          "151:           libfwnt_access_control_list_get_number_of_entries,",
          "152:           [ac_cv_libfwnt_dummy=yes],",
          "153:           [ac_cv_libfwnt=no])",
          "154:         AC_CHECK_LIB(",
          "155:           fwnt,",
          "156:           libfwnt_access_control_list_get_entry_by_index,",
          "157:           [ac_cv_libfwnt_dummy=yes],",
          "158:           [ac_cv_libfwnt=no])",
          "160:         dnl Access control entry (ACE) functions",
          "161:         AC_CHECK_LIB(",
          "162:           fwnt,",
          "163:           libfwnt_access_control_entry_free,",
          "164:           [ac_cv_libfwnt_dummy=yes],",
          "165:           [ac_cv_libfwnt=no])",
          "167:         AC_CHECK_LIB(",
          "168:           fwnt,",
          "169:           libfwnt_access_control_entry_get_type,",
          "170:           [ac_cv_libfwnt_dummy=yes],",
          "171:           [ac_cv_libfwnt=no])",
          "172:         AC_CHECK_LIB(",
          "173:           fwnt,",
          "174:           libfwnt_access_control_entry_get_flags,",
          "175:           [ac_cv_libfwnt_dummy=yes],",
          "176:           [ac_cv_libfwnt=no])",
          "177:         AC_CHECK_LIB(",
          "178:           fwnt,",
          "179:           libfwnt_access_control_entry_get_access_mask,",
          "180:           [ac_cv_libfwnt_dummy=yes],",
          "181:           [ac_cv_libfwnt=no])",
          "182:         AC_CHECK_LIB(",
          "183:           fwnt,",
          "184:           libfwnt_access_control_entry_get_security_identifier,",
          "185:           [ac_cv_libfwnt_dummy=yes],",
          "186:           [ac_cv_libfwnt=no])",
          "188:         dnl LZNT1 functions",
          "189:         AC_CHECK_LIB(",
          "190:           fwnt,",
          "191:           libfwnt_lznt1_decompress,",
          "192:           [ac_cv_libfwnt_dummy=yes],",
          "193:           [ac_cv_libfwnt=no])",
          "195:         dnl LZXPRESS functions",
          "196:         AC_CHECK_LIB(",
          "197:           fwnt,",
          "198:           libfwnt_lzxpress_decompress,",
          "199:           [ac_cv_libfwnt_dummy=yes],",
          "200:           [ac_cv_libfwnt=no])",
          "201:         AC_CHECK_LIB(",
          "202:           fwnt,",
          "203:           libfwnt_lzxpress_huffman_decompress,",
          "204:           [ac_cv_libfwnt_dummy=yes],",
          "205:           [ac_cv_libfwnt=no])",
          "207:         ac_cv_libfwnt_LIBADD=\"-lfwnt\"",
          "208:         ])",
          "209:       ])",
          "212:   AS_IF(",
          "213:     [test \"x$ac_cv_libfwnt\" = xyes],",
          "214:     [AC_DEFINE(",
          "215:       [HAVE_LIBFWNT],",
          "216:       [1],",
          "217:       [Define to 1 if you have the `fwnt' library (-lfwnt).])",
          "218:     ])",
          "220:   AS_IF(",
          "221:     [test \"x$ac_cv_libfwnt\" = xyes],",
          "222:     [AC_SUBST(",
          "223:       [HAVE_LIBFWNT],",
          "224:       [1]) ],",
          "225:     [AC_SUBST(",
          "226:       [HAVE_LIBFWNT],",
          "227:       [0])",
          "228:     ])",
          "231: dnl Function to detect if libfwnt dependencies are available",
          "232: AC_DEFUN([AX_LIBFWNT_CHECK_LOCAL],",
          "233:   [dnl No additional checks.",
          "235:   ac_cv_libfwnt_CPPFLAGS=\"-I../libfwnt\";",
          "236:   ac_cv_libfwnt_LIBADD=\"../libfwnt/libfwnt.la\";",
          "238:   ac_cv_libfwnt=local",
          "243:   [AX_COMMON_ARG_WITH(",
          "244:     [libfwnt],",
          "245:     [libfwnt],",
          "246:     [search for libfwnt in includedir and libdir or in the specified DIR, or no if to use local version],",
          "247:     [auto-detect],",
          "248:     [DIR])",
          "250:   dnl Check for a shared library version",
          "251:   AX_LIBFWNT_CHECK_LIB",
          "253:   dnl Check if the dependencies for the local library version",
          "254:   AS_IF(",
          "255:     [test \"x$ac_cv_libfwnt\" != xyes],",
          "256:     [AX_LIBFWNT_CHECK_LOCAL",
          "258:     AC_DEFINE(",
          "259:       [HAVE_LOCAL_LIBFWNT],",
          "260:       [1],",
          "261:       [Define to 1 if the local version of libfwnt is used.])",
          "262:     AC_SUBST(",
          "263:       [HAVE_LOCAL_LIBFWNT],",
          "264:       [1])",
          "265:     ])",
          "267:   AM_CONDITIONAL(",
          "268:     [HAVE_LOCAL_LIBFWNT],",
          "269:     [test \"x$ac_cv_libfwnt\" = xlocal])",
          "270:   AS_IF(",
          "271:     [test \"x$ac_cv_libfwnt_CPPFLAGS\" != \"x\"],",
          "272:     [AC_SUBST(",
          "273:       [LIBFWNT_CPPFLAGS],",
          "274:       [$ac_cv_libfwnt_CPPFLAGS])",
          "275:     ])",
          "276:   AS_IF(",
          "277:     [test \"x$ac_cv_libfwnt_LIBADD\" != \"x\"],",
          "278:     [AC_SUBST(",
          "279:       [LIBFWNT_LIBADD],",
          "280:       [$ac_cv_libfwnt_LIBADD])",
          "281:     ])",
          "283:   AS_IF(",
          "284:     [test \"x$ac_cv_libfwnt\" = xyes],",
          "285:     [AC_SUBST(",
          "286:       [ax_libfwnt_pc_libs_private],",
          "287:       [-lfwnt])",
          "288:     ])",
          "290:   AS_IF(",
          "291:     [test \"x$ac_cv_libfwnt\" = xyes],",
          "292:     [AC_SUBST(",
          "293:       [ax_libfwnt_spec_requires],",
          "294:       [libfwnt])",
          "295:     AC_SUBST(",
          "296:       [ax_libfwnt_spec_build_requires],",
          "297:       [libfwnt-devel])",
          "298:     ])",
          "",
          "---------------"
        ],
        "m4/libuna.m4||m4/libuna.m4": [
          "File: m4/libuna.m4 -> m4/libuna.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: dnl",
          "5: dnl Function to detect if libuna is available as library",
          "6: dnl ac_libuna_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "7: AC_DEFUN([AX_LIBUNA_CHECK_LIB],",
          "23:   AS_IF(",
          "32:   AS_IF(",
          "41:     [ac_cv_libuna=no],",
          "623:     ])",
          "633:   ])",
          "643:   ])",
          "646: dnl Function to detect how to enable libuna",
          "647: AC_DEFUN([AX_LIBUNA_CHECK_ENABLE],",
          "706:   ])",
          "",
          "[Removed Lines]",
          "1: dnl Functions for libuna",
          "3: dnl Version: 20130406",
          "8:  [dnl Check if parameters were provided",
          "9:  AS_IF(",
          "10:   [test \"x$ac_cv_with_libuna\" != x && test \"x$ac_cv_with_libuna\" != xno && test \"x$ac_cv_with_libuna\" != xauto-detect],",
          "11:   [AS_IF(",
          "12:    [test -d \"$ac_cv_with_libuna\"],",
          "13:    [CFLAGS=\"$CFLAGS -I${ac_cv_with_libuna}/include\"",
          "14:    LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libuna}/lib\"],",
          "15:    [AC_MSG_WARN([no such directory: $ac_cv_with_libuna])",
          "16:    ])",
          "17:   ])",
          "19:  AS_IF(",
          "20:   [test \"x$ac_cv_with_libuna\" = xno],",
          "21:   [ac_cv_libuna=no],",
          "22:   [dnl Check for a pkg-config file",
          "24:    [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:    [PKG_CHECK_MODULES(",
          "26:     [libuna],",
          "27:     [libuna >= 20120425],",
          "28:     [ac_cv_libuna=yes],",
          "29:     [ac_cv_libuna=no])",
          "30:    ])",
          "33:    [test \"x$ac_cv_libuna\" = xyes],",
          "34:    [ac_cv_libuna_CPPFLAGS=\"$pkg_cv_libuna_CFLAGS\"",
          "35:    ac_cv_libuna_LIBADD=\"$pkg_cv_libuna_LIBS\"],",
          "36:    [dnl Check for headers",
          "37:    AC_CHECK_HEADERS([libuna.h])",
          "39:    AS_IF(",
          "40:     [test \"x$ac_cv_header_libuna_h\" = xno],",
          "42:     [dnl Check for the individual functions",
          "43:     ac_cv_libuna=yes",
          "45:     AC_CHECK_LIB(",
          "46:      una,",
          "47:      libuna_get_version,",
          "48:      [ac_cv_libuna_dummy=yes],",
          "49:      [ac_cv_libuna=no])",
          "51:     dnl Base16 stream functions",
          "52:     AC_CHECK_LIB(",
          "53:      una,",
          "54:      libuna_base16_stream_size_to_byte_stream,",
          "55:      [ac_cv_libuna_dummy=yes],",
          "56:      [ac_cv_libuna=no])",
          "57:     AC_CHECK_LIB(",
          "58:      una,",
          "59:      libuna_base16_stream_copy_to_byte_stream,",
          "60:      [ac_cv_libuna_dummy=yes],",
          "61:      [ac_cv_libuna=no])",
          "62:     AC_CHECK_LIB(",
          "63:      una,",
          "64:      libuna_base16_stream_size_from_byte_stream,",
          "65:      [ac_cv_libuna_dummy=yes],",
          "66:      [ac_cv_libuna=no])",
          "67:     AC_CHECK_LIB(",
          "68:      una,",
          "69:      libuna_base16_stream_copy_from_byte_stream,",
          "70:      [ac_cv_libuna_dummy=yes],",
          "71:      [ac_cv_libuna=no])",
          "72:     AC_CHECK_LIB(",
          "73:      una,",
          "74:      libuna_base16_stream_with_index_copy_from_byte_stream,",
          "75:      [ac_cv_libuna_dummy=yes],",
          "76:      [ac_cv_libuna=no])",
          "78:     dnl Base32 stream functions",
          "79:     AC_CHECK_LIB(",
          "80:      una,",
          "81:      libuna_base32_quintuplet_copy_from_base32_stream,",
          "82:      [ac_cv_libuna_dummy=yes],",
          "83:      [ac_cv_libuna=no])",
          "84:     AC_CHECK_LIB(",
          "85:      una,",
          "86:      libuna_base32_quintuplet_copy_to_base32_stream,",
          "87:      [ac_cv_libuna_dummy=yes],",
          "88:      [ac_cv_libuna=no])",
          "89:     AC_CHECK_LIB(",
          "90:      una,",
          "91:      libuna_base32_quintuplet_copy_from_byte_stream,",
          "92:      [ac_cv_libuna_dummy=yes],",
          "93:      [ac_cv_libuna=no])",
          "94:     AC_CHECK_LIB(",
          "95:      una,",
          "96:      libuna_base32_quintuplet_copy_to_byte_stream,",
          "97:      [ac_cv_libuna_dummy=yes],",
          "98:      [ac_cv_libuna=no])",
          "100:     AC_CHECK_LIB(",
          "101:      una,",
          "102:      libuna_base32_stream_size_to_byte_stream,",
          "103:      [ac_cv_libuna_dummy=yes],",
          "104:      [ac_cv_libuna=no])",
          "105:     AC_CHECK_LIB(",
          "106:      una,",
          "107:      libuna_base32_stream_copy_to_byte_stream,",
          "108:      [ac_cv_libuna_dummy=yes],",
          "109:      [ac_cv_libuna=no])",
          "110:     AC_CHECK_LIB(",
          "111:      una,",
          "112:      libuna_base32_stream_size_from_byte_stream,",
          "113:      [ac_cv_libuna_dummy=yes],",
          "114:      [ac_cv_libuna=no])",
          "115:     AC_CHECK_LIB(",
          "116:      una,",
          "117:      libuna_base32_stream_copy_from_byte_stream,",
          "118:      [ac_cv_libuna_dummy=yes],",
          "119:      [ac_cv_libuna=no])",
          "120:     AC_CHECK_LIB(",
          "121:      una,",
          "122:      libuna_base32_stream_with_index_copy_from_byte_stream,",
          "123:      [ac_cv_libuna_dummy=yes],",
          "124:      [ac_cv_libuna=no])",
          "126:     dnl Base64 stream functions",
          "127:     AC_CHECK_LIB(",
          "128:      una,",
          "129:      libuna_base64_triplet_copy_from_base64_stream,",
          "130:      [ac_cv_libuna_dummy=yes],",
          "131:      [ac_cv_libuna=no])",
          "132:     AC_CHECK_LIB(",
          "133:      una,",
          "134:      libuna_base64_triplet_copy_to_base64_stream,",
          "135:      [ac_cv_libuna_dummy=yes],",
          "136:      [ac_cv_libuna=no])",
          "137:     AC_CHECK_LIB(",
          "138:      una,",
          "139:      libuna_base64_triplet_copy_from_byte_stream,",
          "140:      [ac_cv_libuna_dummy=yes],",
          "141:      [ac_cv_libuna=no])",
          "142:     AC_CHECK_LIB(",
          "143:      una,",
          "144:      libuna_base64_triplet_copy_to_byte_stream,",
          "145:      [ac_cv_libuna_dummy=yes],",
          "146:      [ac_cv_libuna=no])",
          "148:     AC_CHECK_LIB(",
          "149:      una,",
          "150:      libuna_base64_stream_size_to_byte_stream,",
          "151:      [ac_cv_libuna_dummy=yes],",
          "152:      [ac_cv_libuna=no])",
          "153:     AC_CHECK_LIB(",
          "154:      una,",
          "155:      libuna_base64_stream_copy_to_byte_stream,",
          "156:      [ac_cv_libuna_dummy=yes],",
          "157:      [ac_cv_libuna=no])",
          "158:     AC_CHECK_LIB(",
          "159:      una,",
          "160:      libuna_base64_stream_size_from_byte_stream,",
          "161:      [ac_cv_libuna_dummy=yes],",
          "162:      [ac_cv_libuna=no])",
          "163:     AC_CHECK_LIB(",
          "164:      una,",
          "165:      libuna_base64_stream_copy_from_byte_stream,",
          "166:      [ac_cv_libuna_dummy=yes],",
          "167:      [ac_cv_libuna=no])",
          "168:     AC_CHECK_LIB(",
          "169:      una,",
          "170:      libuna_base64_stream_with_index_copy_from_byte_stream,",
          "171:      [ac_cv_libuna_dummy=yes],",
          "172:      [ac_cv_libuna=no])",
          "174:     dnl Byte stream functions",
          "175:     AC_CHECK_LIB(",
          "176:      una,",
          "177:      libuna_byte_stream_size_from_utf8,",
          "178:      [ac_cv_libuna_dummy=yes],",
          "179:      [ac_cv_libuna=no])",
          "180:     AC_CHECK_LIB(",
          "181:      una,",
          "182:      libuna_byte_stream_copy_from_utf8,",
          "183:      [ac_cv_libuna_dummy=yes],",
          "184:      [ac_cv_libuna=no])",
          "185:     AC_CHECK_LIB(",
          "186:      una,",
          "187:      libuna_byte_stream_size_from_utf16,",
          "188:      [ac_cv_libuna_dummy=yes],",
          "189:      [ac_cv_libuna=no])",
          "190:     AC_CHECK_LIB(",
          "191:      una,",
          "192:      libuna_byte_stream_copy_from_utf16,",
          "193:      [ac_cv_libuna_dummy=yes],",
          "194:      [ac_cv_libuna=no])",
          "195:     AC_CHECK_LIB(",
          "196:      una,",
          "197:      libuna_byte_stream_size_from_utf32,",
          "198:      [ac_cv_libuna_dummy=yes],",
          "199:      [ac_cv_libuna=no])",
          "200:     AC_CHECK_LIB(",
          "201:      una,",
          "202:      libuna_byte_stream_copy_from_utf32,",
          "203:      [ac_cv_libuna_dummy=yes],",
          "204:      [ac_cv_libuna=no])",
          "206:     dnl UTF-8 stream functions",
          "207:     AC_CHECK_LIB(",
          "208:      una,",
          "209:      libuna_utf8_stream_size_from_utf8,",
          "210:      [ac_cv_libuna_dummy=yes],",
          "211:      [ac_cv_libuna=no])",
          "212:     AC_CHECK_LIB(",
          "213:      una,",
          "214:      libuna_utf8_stream_copy_from_utf8,",
          "215:      [ac_cv_libuna_dummy=yes],",
          "216:      [ac_cv_libuna=no])",
          "217:     AC_CHECK_LIB(",
          "218:      una,",
          "219:      libuna_utf8_stream_size_from_utf16,",
          "220:      [ac_cv_libuna_dummy=yes],",
          "221:      [ac_cv_libuna=no])",
          "222:     AC_CHECK_LIB(",
          "223:      una,",
          "224:      libuna_utf8_stream_copy_from_utf16,",
          "225:      [ac_cv_libuna_dummy=yes],",
          "226:      [ac_cv_libuna=no])",
          "227:     AC_CHECK_LIB(",
          "228:      una,",
          "229:      libuna_utf8_stream_size_from_utf32,",
          "230:      [ac_cv_libuna_dummy=yes],",
          "231:      [ac_cv_libuna=no])",
          "232:     AC_CHECK_LIB(",
          "233:      una,",
          "234:      libuna_utf8_stream_copy_from_utf32,",
          "235:      [ac_cv_libuna_dummy=yes],",
          "236:      [ac_cv_libuna=no])",
          "238:     dnl UTF-16 stream functions",
          "239:     AC_CHECK_LIB(",
          "240:      una,",
          "241:      libuna_utf16_stream_size_from_utf8,",
          "242:      [ac_cv_libuna_dummy=yes],",
          "243:      [ac_cv_libuna=no])",
          "244:     AC_CHECK_LIB(",
          "245:      una,",
          "246:      libuna_utf16_stream_copy_from_utf8,",
          "247:      [ac_cv_libuna_dummy=yes],",
          "248:      [ac_cv_libuna=no])",
          "249:     AC_CHECK_LIB(",
          "250:      una,",
          "251:      libuna_utf16_stream_size_from_utf16,",
          "252:      [ac_cv_libuna_dummy=yes],",
          "253:      [ac_cv_libuna=no])",
          "254:     AC_CHECK_LIB(",
          "255:      una,",
          "256:      libuna_utf16_stream_copy_from_utf16,",
          "257:      [ac_cv_libuna_dummy=yes],",
          "258:      [ac_cv_libuna=no])",
          "259:     AC_CHECK_LIB(",
          "260:      una,",
          "261:      libuna_utf16_stream_size_from_utf32,",
          "262:      [ac_cv_libuna_dummy=yes],",
          "263:      [ac_cv_libuna=no])",
          "264:     AC_CHECK_LIB(",
          "265:      una,",
          "266:      libuna_utf16_stream_copy_from_utf32,",
          "267:      [ac_cv_libuna_dummy=yes],",
          "268:      [ac_cv_libuna=no])",
          "270:     dnl UTF-32 stream functions",
          "271:     AC_CHECK_LIB(",
          "272:      una,",
          "273:      libuna_utf32_stream_size_from_utf8,",
          "274:      [ac_cv_libuna_dummy=yes],",
          "275:      [ac_cv_libuna=no])",
          "276:     AC_CHECK_LIB(",
          "277:      una,",
          "278:      libuna_utf32_stream_copy_from_utf8,",
          "279:      [ac_cv_libuna_dummy=yes],",
          "280:      [ac_cv_libuna=no])",
          "281:     AC_CHECK_LIB(",
          "282:      una,",
          "283:      libuna_utf32_stream_size_from_utf16,",
          "284:      [ac_cv_libuna_dummy=yes],",
          "285:      [ac_cv_libuna=no])",
          "286:     AC_CHECK_LIB(",
          "287:      una,",
          "288:      libuna_utf32_stream_copy_from_utf16,",
          "289:      [ac_cv_libuna_dummy=yes],",
          "290:      [ac_cv_libuna=no])",
          "291:     AC_CHECK_LIB(",
          "292:      una,",
          "293:      libuna_utf32_stream_size_from_utf32,",
          "294:      [ac_cv_libuna_dummy=yes],",
          "295:      [ac_cv_libuna=no])",
          "296:     AC_CHECK_LIB(",
          "297:      una,",
          "298:      libuna_utf32_stream_copy_from_utf32,",
          "299:      [ac_cv_libuna_dummy=yes],",
          "300:      [ac_cv_libuna=no])",
          "302:     dnl UTF-8 string functions",
          "303:     AC_CHECK_LIB(",
          "304:      una,",
          "305:      libuna_utf8_string_size_from_byte_stream,",
          "306:      [ac_cv_libuna_dummy=yes],",
          "307:      [ac_cv_libuna=no])",
          "308:     AC_CHECK_LIB(",
          "309:      una,",
          "310:      libuna_utf8_string_copy_from_byte_stream,",
          "311:      [ac_cv_libuna_dummy=yes],",
          "312:      [ac_cv_libuna=no])",
          "313:     AC_CHECK_LIB(",
          "314:      una,",
          "315:      libuna_utf8_string_with_index_copy_from_byte_stream,",
          "316:      [ac_cv_libuna_dummy=yes],",
          "317:      [ac_cv_libuna=no])",
          "318:     AC_CHECK_LIB(",
          "319:      una,",
          "320:      libuna_utf8_string_size_from_utf7_stream,",
          "321:      [ac_cv_libuna_dummy=yes],",
          "322:      [ac_cv_libuna=no])",
          "323:     AC_CHECK_LIB(",
          "324:      una,",
          "325:      libuna_utf8_string_copy_from_utf7_stream,",
          "326:      [ac_cv_libuna_dummy=yes],",
          "327:      [ac_cv_libuna=no])",
          "328:     AC_CHECK_LIB(",
          "329:      una,",
          "330:      libuna_utf8_string_with_index_copy_from_utf7_stream,",
          "331:      [ac_cv_libuna_dummy=yes],",
          "332:      [ac_cv_libuna=no])",
          "333:     AC_CHECK_LIB(",
          "334:      una,",
          "335:      libuna_utf8_string_size_from_utf8_stream,",
          "336:      [ac_cv_libuna_dummy=yes],",
          "337:      [ac_cv_libuna=no])",
          "338:     AC_CHECK_LIB(",
          "339:      una,",
          "340:      libuna_utf8_string_copy_from_utf8_stream,",
          "341:      [ac_cv_libuna_dummy=yes],",
          "342:      [ac_cv_libuna=no])",
          "343:     AC_CHECK_LIB(",
          "344:      una,",
          "345:      libuna_utf8_string_with_index_copy_from_utf8_stream,",
          "346:      [ac_cv_libuna_dummy=yes],",
          "347:      [ac_cv_libuna=no])",
          "348:     AC_CHECK_LIB(",
          "349:      una,",
          "350:      libuna_utf8_string_size_from_utf16_stream,",
          "351:      [ac_cv_libuna_dummy=yes],",
          "352:      [ac_cv_libuna=no])",
          "353:     AC_CHECK_LIB(",
          "354:      una,",
          "355:      libuna_utf8_string_copy_from_utf16_stream,",
          "356:      [ac_cv_libuna_dummy=yes],",
          "357:      [ac_cv_libuna=no])",
          "358:     AC_CHECK_LIB(",
          "359:      una,",
          "360:      libuna_utf8_string_with_index_copy_from_utf16_stream,",
          "361:      [ac_cv_libuna_dummy=yes],",
          "362:      [ac_cv_libuna=no])",
          "363:     AC_CHECK_LIB(",
          "364:      una,",
          "365:      libuna_utf8_string_size_from_utf32_stream,",
          "366:      [ac_cv_libuna_dummy=yes],",
          "367:      [ac_cv_libuna=no])",
          "368:     AC_CHECK_LIB(",
          "369:      una,",
          "370:      libuna_utf8_string_copy_from_utf32_stream,",
          "371:      [ac_cv_libuna_dummy=yes],",
          "372:      [ac_cv_libuna=no])",
          "373:     AC_CHECK_LIB(",
          "374:      una,",
          "375:      libuna_utf8_string_with_index_copy_from_utf32_stream,",
          "376:      [ac_cv_libuna_dummy=yes],",
          "377:      [ac_cv_libuna=no])",
          "378:     AC_CHECK_LIB(",
          "379:      una,",
          "380:      libuna_utf8_string_size_from_utf16,",
          "381:      [ac_cv_libuna_dummy=yes],",
          "382:      [ac_cv_libuna=no])",
          "383:     AC_CHECK_LIB(",
          "384:      una,",
          "385:      libuna_utf8_string_copy_from_utf16,",
          "386:      [ac_cv_libuna_dummy=yes],",
          "387:      [ac_cv_libuna=no])",
          "388:     AC_CHECK_LIB(",
          "389:      una,",
          "390:      libuna_utf8_string_with_index_copy_from_utf16,",
          "391:      [ac_cv_libuna_dummy=yes],",
          "392:      [ac_cv_libuna=no])",
          "393:     AC_CHECK_LIB(",
          "394:      una,",
          "395:      libuna_utf8_string_size_from_utf32,",
          "396:      [ac_cv_libuna_dummy=yes],",
          "397:      [ac_cv_libuna=no])",
          "398:     AC_CHECK_LIB(",
          "399:      una,",
          "400:      libuna_utf8_string_copy_from_utf32,",
          "401:      [ac_cv_libuna_dummy=yes],",
          "402:      [ac_cv_libuna=no])",
          "403:     AC_CHECK_LIB(",
          "404:      una,",
          "405:      libuna_utf8_string_with_index_copy_from_utf32,",
          "406:      [ac_cv_libuna_dummy=yes],",
          "407:      [ac_cv_libuna=no])",
          "409:     dnl UTF-16 string functions",
          "410:     AC_CHECK_LIB(",
          "411:      una,",
          "412:      libuna_utf16_string_size_from_byte_stream,",
          "413:      [ac_cv_libuna_dummy=yes],",
          "414:      [ac_cv_libuna=no])",
          "415:     AC_CHECK_LIB(",
          "416:      una,",
          "417:      libuna_utf16_string_copy_from_byte_stream,",
          "418:      [ac_cv_libuna_dummy=yes],",
          "419:      [ac_cv_libuna=no])",
          "420:     AC_CHECK_LIB(",
          "421:      una,",
          "422:      libuna_utf16_string_with_index_copy_from_byte_stream,",
          "423:      [ac_cv_libuna_dummy=yes],",
          "424:      [ac_cv_libuna=no])",
          "425:     AC_CHECK_LIB(",
          "426:      una,",
          "427:      libuna_utf16_string_size_from_utf7_stream,",
          "428:      [ac_cv_libuna_dummy=yes],",
          "429:      [ac_cv_libuna=no])",
          "430:     AC_CHECK_LIB(",
          "431:      una,",
          "432:      libuna_utf16_string_copy_from_utf7_stream,",
          "433:      [ac_cv_libuna_dummy=yes],",
          "434:      [ac_cv_libuna=no])",
          "435:     AC_CHECK_LIB(",
          "436:      una,",
          "437:      libuna_utf16_string_with_index_copy_from_utf7_stream,",
          "438:      [ac_cv_libuna_dummy=yes],",
          "439:      [ac_cv_libuna=no])",
          "440:     AC_CHECK_LIB(",
          "441:      una,",
          "442:      libuna_utf16_string_size_from_utf8_stream,",
          "443:      [ac_cv_libuna_dummy=yes],",
          "444:      [ac_cv_libuna=no])",
          "445:     AC_CHECK_LIB(",
          "446:      una,",
          "447:      libuna_utf16_string_copy_from_utf8_stream,",
          "448:      [ac_cv_libuna_dummy=yes],",
          "449:      [ac_cv_libuna=no])",
          "450:     AC_CHECK_LIB(",
          "451:      una,",
          "452:      libuna_utf16_string_with_index_copy_from_utf8_stream,",
          "453:      [ac_cv_libuna_dummy=yes],",
          "454:      [ac_cv_libuna=no])",
          "455:     AC_CHECK_LIB(",
          "456:      una,",
          "457:      libuna_utf16_string_size_from_utf16_stream,",
          "458:      [ac_cv_libuna_dummy=yes],",
          "459:      [ac_cv_libuna=no])",
          "460:     AC_CHECK_LIB(",
          "461:      una,",
          "462:      libuna_utf16_string_copy_from_utf16_stream,",
          "463:      [ac_cv_libuna_dummy=yes],",
          "464:      [ac_cv_libuna=no])",
          "465:     AC_CHECK_LIB(",
          "466:      una,",
          "467:      libuna_utf16_string_with_index_copy_from_utf16_stream,",
          "468:      [ac_cv_libuna_dummy=yes],",
          "469:      [ac_cv_libuna=no])",
          "470:     AC_CHECK_LIB(",
          "471:      una,",
          "472:      libuna_utf16_string_size_from_utf32_stream,",
          "473:      [ac_cv_libuna_dummy=yes],",
          "474:      [ac_cv_libuna=no])",
          "475:     AC_CHECK_LIB(",
          "476:      una,",
          "477:      libuna_utf16_string_copy_from_utf32_stream,",
          "478:      [ac_cv_libuna_dummy=yes],",
          "479:      [ac_cv_libuna=no])",
          "480:     AC_CHECK_LIB(",
          "481:      una,",
          "482:      libuna_utf16_string_with_index_copy_from_utf32_stream,",
          "483:      [ac_cv_libuna_dummy=yes],",
          "484:      [ac_cv_libuna=no])",
          "485:     AC_CHECK_LIB(",
          "486:      una,",
          "487:      libuna_utf16_string_size_from_utf8,",
          "488:      [ac_cv_libuna_dummy=yes],",
          "489:      [ac_cv_libuna=no])",
          "490:     AC_CHECK_LIB(",
          "491:      una,",
          "492:      libuna_utf16_string_copy_from_utf8,",
          "493:      [ac_cv_libuna_dummy=yes],",
          "494:      [ac_cv_libuna=no])",
          "495:     AC_CHECK_LIB(",
          "496:      una,",
          "497:      libuna_utf16_string_with_index_copy_from_utf8,",
          "498:      [ac_cv_libuna_dummy=yes],",
          "499:      [ac_cv_libuna=no])",
          "500:     AC_CHECK_LIB(",
          "501:      una,",
          "502:      libuna_utf16_string_size_from_utf32,",
          "503:      [ac_cv_libuna_dummy=yes],",
          "504:      [ac_cv_libuna=no])",
          "505:     AC_CHECK_LIB(",
          "506:      una,",
          "507:      libuna_utf16_string_copy_from_utf32,",
          "508:      [ac_cv_libuna_dummy=yes],",
          "509:      [ac_cv_libuna=no])",
          "510:     AC_CHECK_LIB(",
          "511:      una,",
          "512:      libuna_utf16_string_with_index_copy_from_utf32,",
          "513:      [ac_cv_libuna_dummy=yes],",
          "514:      [ac_cv_libuna=no])",
          "516:     dnl UTF-32 string functions",
          "517:     AC_CHECK_LIB(",
          "518:      una,",
          "519:      libuna_utf32_string_size_from_byte_stream,",
          "520:      [ac_cv_libuna_dummy=yes],",
          "521:      [ac_cv_libuna=no])",
          "522:     AC_CHECK_LIB(",
          "523:      una,",
          "524:      libuna_utf32_string_copy_from_byte_stream,",
          "525:      [ac_cv_libuna_dummy=yes],",
          "526:      [ac_cv_libuna=no])",
          "527:     AC_CHECK_LIB(",
          "528:      una,",
          "529:      libuna_utf32_string_with_index_copy_from_byte_stream,",
          "530:      [ac_cv_libuna_dummy=yes],",
          "531:      [ac_cv_libuna=no])",
          "532:     AC_CHECK_LIB(",
          "533:      una,",
          "534:      libuna_utf32_string_size_from_utf7_stream,",
          "535:      [ac_cv_libuna_dummy=yes],",
          "536:      [ac_cv_libuna=no])",
          "537:     AC_CHECK_LIB(",
          "538:      una,",
          "539:      libuna_utf32_string_copy_from_utf7_stream,",
          "540:      [ac_cv_libuna_dummy=yes],",
          "541:      [ac_cv_libuna=no])",
          "542:     AC_CHECK_LIB(",
          "543:      una,",
          "544:      libuna_utf32_string_with_index_copy_from_utf7_stream,",
          "545:      [ac_cv_libuna_dummy=yes],",
          "546:      [ac_cv_libuna=no])",
          "547:     AC_CHECK_LIB(",
          "548:      una,",
          "549:      libuna_utf32_string_size_from_utf8_stream,",
          "550:      [ac_cv_libuna_dummy=yes],",
          "551:      [ac_cv_libuna=no])",
          "552:     AC_CHECK_LIB(",
          "553:      una,",
          "554:      libuna_utf32_string_copy_from_utf8_stream,",
          "555:      [ac_cv_libuna_dummy=yes],",
          "556:      [ac_cv_libuna=no])",
          "557:     AC_CHECK_LIB(",
          "558:      una,",
          "559:      libuna_utf32_string_with_index_copy_from_utf8_stream,",
          "560:      [ac_cv_libuna_dummy=yes],",
          "561:      [ac_cv_libuna=no])",
          "562:     AC_CHECK_LIB(",
          "563:      una,",
          "564:      libuna_utf32_string_size_from_utf16_stream,",
          "565:      [ac_cv_libuna_dummy=yes],",
          "566:      [ac_cv_libuna=no])",
          "567:     AC_CHECK_LIB(",
          "568:      una,",
          "569:      libuna_utf32_string_copy_from_utf16_stream,",
          "570:      [ac_cv_libuna_dummy=yes],",
          "571:      [ac_cv_libuna=no])",
          "572:     AC_CHECK_LIB(",
          "573:      una,",
          "574:      libuna_utf32_string_with_index_copy_from_utf16_stream,",
          "575:      [ac_cv_libuna_dummy=yes],",
          "576:      [ac_cv_libuna=no])",
          "577:     AC_CHECK_LIB(",
          "578:      una,",
          "579:      libuna_utf32_string_size_from_utf32_stream,",
          "580:      [ac_cv_libuna_dummy=yes],",
          "581:      [ac_cv_libuna=no])",
          "582:     AC_CHECK_LIB(",
          "583:      una,",
          "584:      libuna_utf32_string_copy_from_utf32_stream,",
          "585:      [ac_cv_libuna_dummy=yes],",
          "586:      [ac_cv_libuna=no])",
          "587:     AC_CHECK_LIB(",
          "588:      una,",
          "589:      libuna_utf32_string_with_index_copy_from_utf32_stream,",
          "590:      [ac_cv_libuna_dummy=yes],",
          "591:      [ac_cv_libuna=no])",
          "592:     AC_CHECK_LIB(",
          "593:      una,",
          "594:      libuna_utf32_string_size_from_utf8,",
          "595:      [ac_cv_libuna_dummy=yes],",
          "596:      [ac_cv_libuna=no])",
          "597:     AC_CHECK_LIB(",
          "598:      una,",
          "599:      libuna_utf32_string_copy_from_utf8,",
          "600:      [ac_cv_libuna_dummy=yes],",
          "601:      [ac_cv_libuna=no])",
          "602:     AC_CHECK_LIB(",
          "603:      libuna_utf32_string_with_index_copy_from_utf8,",
          "604:      [ac_cv_libuna_dummy=yes],",
          "605:      [ac_cv_libuna=no])",
          "606:     AC_CHECK_LIB(",
          "607:      una,",
          "608:      libuna_utf32_string_size_from_utf16,",
          "609:      [ac_cv_libuna_dummy=yes],",
          "610:      [ac_cv_libuna=no])",
          "611:     AC_CHECK_LIB(",
          "612:      una,",
          "613:      libuna_utf32_string_copy_from_utf16,",
          "614:      [ac_cv_libuna_dummy=yes],",
          "615:      [ac_cv_libuna=no])",
          "616:     AC_CHECK_LIB(",
          "617:      una,",
          "618:      libuna_utf32_string_with_index_copy_from_utf16,",
          "619:      [ac_cv_libuna_dummy=yes],",
          "620:      [ac_cv_libuna=no])",
          "622:     ac_cv_libuna_LIBADD=\"-luna\"",
          "624:    ])",
          "625:   ])",
          "627:  AS_IF(",
          "628:   [test \"x$ac_cv_libuna\" = xyes],",
          "629:   [AC_DEFINE(",
          "630:    [HAVE_LIBUNA],",
          "631:    [1],",
          "632:    [Define to 1 if you have the `una' library (-luna).])",
          "635:  AS_IF(",
          "636:   [test \"x$ac_cv_libuna\" = xyes],",
          "637:   [AC_SUBST(",
          "638:    [HAVE_LIBUNA],",
          "639:    [1]) ],",
          "640:   [AC_SUBST(",
          "641:    [HAVE_LIBUNA],",
          "642:    [0])",
          "644:  ])",
          "648:  [AX_COMMON_ARG_WITH(",
          "649:   [libuna],",
          "650:   [libuna],",
          "651:   [search for libuna in includedir and libdir or in the specified DIR, or no if to use local version],",
          "652:   [auto-detect],",
          "653:   [DIR])",
          "655:  dnl Check for a shared library version",
          "656:  AX_LIBUNA_CHECK_LIB",
          "658:  dnl Check if the dependencies for the local library version",
          "659:  AS_IF(",
          "660:   [test \"x$ac_cv_libuna\" != xyes],",
          "661:   [ac_cv_libuna_CPPFLAGS=\"-I../libuna\";",
          "662:   ac_cv_libuna_LIBADD=\"../libuna/libuna.la\";",
          "664:   ac_cv_libuna=local",
          "666:   AC_DEFINE(",
          "667:    [HAVE_LOCAL_LIBUNA],",
          "668:    [1],",
          "669:    [Define to 1 if the local version of libuna is used.])",
          "670:   AC_SUBST(",
          "671:    [HAVE_LOCAL_LIBUNA],",
          "672:    [1])",
          "673:   ])",
          "675:  AM_CONDITIONAL(",
          "676:   [HAVE_LOCAL_LIBUNA],",
          "677:   [test \"x$ac_cv_libuna\" = xlocal])",
          "678:  AS_IF(",
          "679:   [test \"x$ac_cv_libuna_CPPFLAGS\" != \"x\"],",
          "680:   [AC_SUBST(",
          "681:    [LIBUNA_CPPFLAGS],",
          "682:    [$ac_cv_libuna_CPPFLAGS])",
          "683:   ])",
          "684:  AS_IF(",
          "685:   [test \"x$ac_cv_libuna_LIBADD\" != \"x\"],",
          "686:   [AC_SUBST(",
          "687:    [LIBUNA_LIBADD],",
          "688:    [$ac_cv_libuna_LIBADD])",
          "689:   ])",
          "691:  AS_IF(",
          "692:   [test \"x$ac_cv_libuna\" = xyes],",
          "693:   [AC_SUBST(",
          "694:    [ax_libuna_pc_libs_private],",
          "695:    [-luna])",
          "696:   ])",
          "698:  AS_IF(",
          "699:   [test \"x$ac_cv_libuna\" = xyes],",
          "700:   [AC_SUBST(",
          "701:    [ax_libuna_spec_requires],",
          "702:    [libuna])",
          "703:   AC_SUBST(",
          "704:    [ax_libuna_spec_build_requires],",
          "705:    [libuna-devel])",
          "707:  ])",
          "",
          "[Added Lines]",
          "1: dnl Checks for libuna or required headers and functions",
          "3: dnl Version: 20170903",
          "8:   [dnl Check if parameters were provided",
          "10:     [test \"x$ac_cv_with_libuna\" != x && test \"x$ac_cv_with_libuna\" != xno && test \"x$ac_cv_with_libuna\" != xauto-detect],",
          "11:     [AS_IF(",
          "12:       [test -d \"$ac_cv_with_libuna\"],",
          "13:       [CFLAGS=\"$CFLAGS -I${ac_cv_with_libuna}/include\"",
          "14:       LDFLAGS=\"$LDFLAGS -L${ac_cv_with_libuna}/lib\"],",
          "15:       [AC_MSG_WARN([no such directory: $ac_cv_with_libuna])",
          "16:       ])",
          "17:     ])",
          "20:     [test \"x$ac_cv_with_libuna\" = xno],",
          "22:     [dnl Check for a pkg-config file",
          "23:     AS_IF(",
          "24:       [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:       [PKG_CHECK_MODULES(",
          "26:         [libuna],",
          "27:         [libuna >= 20120425],",
          "28:         [ac_cv_libuna=yes],",
          "29:         [ac_cv_libuna=no])",
          "30:       ])",
          "32:     AS_IF(",
          "33:       [test \"x$ac_cv_libuna\" = xyes],",
          "34:       [ac_cv_libuna_CPPFLAGS=\"$pkg_cv_libuna_CFLAGS\"",
          "35:       ac_cv_libuna_LIBADD=\"$pkg_cv_libuna_LIBS\"],",
          "36:       [dnl Check for headers",
          "37:       AC_CHECK_HEADERS([libuna.h])",
          "39:       AS_IF(",
          "40:         [test \"x$ac_cv_header_libuna_h\" = xno],",
          "41:         [ac_cv_libuna=no],",
          "42:         [dnl Check for the individual functions",
          "43:         ac_cv_libuna=yes",
          "45:         AC_CHECK_LIB(",
          "46:           una,",
          "47:           libuna_get_version,",
          "48:           [ac_cv_libuna_dummy=yes],",
          "49:           [ac_cv_libuna=no])",
          "51:         dnl Base16 stream functions",
          "52:         AC_CHECK_LIB(",
          "53:           una,",
          "54:           libuna_base16_stream_size_to_byte_stream,",
          "55:           [ac_cv_libuna_dummy=yes],",
          "56:           [ac_cv_libuna=no])",
          "57:         AC_CHECK_LIB(",
          "58:           una,",
          "59:           libuna_base16_stream_copy_to_byte_stream,",
          "60:           [ac_cv_libuna_dummy=yes],",
          "61:           [ac_cv_libuna=no])",
          "62:         AC_CHECK_LIB(",
          "63:           una,",
          "64:           libuna_base16_stream_size_from_byte_stream,",
          "65:           [ac_cv_libuna_dummy=yes],",
          "66:           [ac_cv_libuna=no])",
          "67:         AC_CHECK_LIB(",
          "68:           una,",
          "69:           libuna_base16_stream_copy_from_byte_stream,",
          "70:           [ac_cv_libuna_dummy=yes],",
          "71:           [ac_cv_libuna=no])",
          "72:         AC_CHECK_LIB(",
          "73:           una,",
          "74:           libuna_base16_stream_with_index_copy_from_byte_stream,",
          "75:           [ac_cv_libuna_dummy=yes],",
          "76:           [ac_cv_libuna=no])",
          "78:         dnl Base32 stream functions",
          "79:         AC_CHECK_LIB(",
          "80:           una,",
          "81:           libuna_base32_quintuplet_copy_from_base32_stream,",
          "82:           [ac_cv_libuna_dummy=yes],",
          "83:           [ac_cv_libuna=no])",
          "84:         AC_CHECK_LIB(",
          "85:           una,",
          "86:           libuna_base32_quintuplet_copy_to_base32_stream,",
          "87:           [ac_cv_libuna_dummy=yes],",
          "88:           [ac_cv_libuna=no])",
          "89:         AC_CHECK_LIB(",
          "90:           una,",
          "91:           libuna_base32_quintuplet_copy_from_byte_stream,",
          "92:           [ac_cv_libuna_dummy=yes],",
          "93:           [ac_cv_libuna=no])",
          "94:         AC_CHECK_LIB(",
          "95:           una,",
          "96:           libuna_base32_quintuplet_copy_to_byte_stream,",
          "97:           [ac_cv_libuna_dummy=yes],",
          "98:           [ac_cv_libuna=no])",
          "100:         AC_CHECK_LIB(",
          "101:           una,",
          "102:           libuna_base32_stream_size_to_byte_stream,",
          "103:           [ac_cv_libuna_dummy=yes],",
          "104:           [ac_cv_libuna=no])",
          "105:         AC_CHECK_LIB(",
          "106:           una,",
          "107:           libuna_base32_stream_copy_to_byte_stream,",
          "108:           [ac_cv_libuna_dummy=yes],",
          "109:           [ac_cv_libuna=no])",
          "110:         AC_CHECK_LIB(",
          "111:           una,",
          "112:           libuna_base32_stream_size_from_byte_stream,",
          "113:           [ac_cv_libuna_dummy=yes],",
          "114:           [ac_cv_libuna=no])",
          "115:         AC_CHECK_LIB(",
          "116:           una,",
          "117:           libuna_base32_stream_copy_from_byte_stream,",
          "118:           [ac_cv_libuna_dummy=yes],",
          "119:           [ac_cv_libuna=no])",
          "120:         AC_CHECK_LIB(",
          "121:           una,",
          "122:           libuna_base32_stream_with_index_copy_from_byte_stream,",
          "123:           [ac_cv_libuna_dummy=yes],",
          "124:           [ac_cv_libuna=no])",
          "126:         dnl Base64 stream functions",
          "127:         AC_CHECK_LIB(",
          "128:           una,",
          "129:           libuna_base64_triplet_copy_from_base64_stream,",
          "130:           [ac_cv_libuna_dummy=yes],",
          "131:           [ac_cv_libuna=no])",
          "132:         AC_CHECK_LIB(",
          "133:           una,",
          "134:           libuna_base64_triplet_copy_to_base64_stream,",
          "135:           [ac_cv_libuna_dummy=yes],",
          "136:           [ac_cv_libuna=no])",
          "137:         AC_CHECK_LIB(",
          "138:           una,",
          "139:           libuna_base64_triplet_copy_from_byte_stream,",
          "140:           [ac_cv_libuna_dummy=yes],",
          "141:           [ac_cv_libuna=no])",
          "142:         AC_CHECK_LIB(",
          "143:           una,",
          "144:           libuna_base64_triplet_copy_to_byte_stream,",
          "145:           [ac_cv_libuna_dummy=yes],",
          "146:           [ac_cv_libuna=no])",
          "148:         AC_CHECK_LIB(",
          "149:           una,",
          "150:           libuna_base64_stream_size_to_byte_stream,",
          "151:           [ac_cv_libuna_dummy=yes],",
          "152:           [ac_cv_libuna=no])",
          "153:         AC_CHECK_LIB(",
          "154:           una,",
          "155:           libuna_base64_stream_copy_to_byte_stream,",
          "156:           [ac_cv_libuna_dummy=yes],",
          "157:           [ac_cv_libuna=no])",
          "158:         AC_CHECK_LIB(",
          "159:           una,",
          "160:           libuna_base64_stream_size_from_byte_stream,",
          "161:           [ac_cv_libuna_dummy=yes],",
          "162:           [ac_cv_libuna=no])",
          "163:         AC_CHECK_LIB(",
          "164:           una,",
          "165:           libuna_base64_stream_copy_from_byte_stream,",
          "166:           [ac_cv_libuna_dummy=yes],",
          "167:           [ac_cv_libuna=no])",
          "168:         AC_CHECK_LIB(",
          "169:           una,",
          "170:           libuna_base64_stream_with_index_copy_from_byte_stream,",
          "171:           [ac_cv_libuna_dummy=yes],",
          "172:           [ac_cv_libuna=no])",
          "174:         dnl Byte stream functions",
          "175:         AC_CHECK_LIB(",
          "176:           una,",
          "177:           libuna_byte_stream_size_from_utf8,",
          "178:           [ac_cv_libuna_dummy=yes],",
          "179:           [ac_cv_libuna=no])",
          "180:         AC_CHECK_LIB(",
          "181:           una,",
          "182:           libuna_byte_stream_copy_from_utf8,",
          "183:           [ac_cv_libuna_dummy=yes],",
          "184:           [ac_cv_libuna=no])",
          "185:         AC_CHECK_LIB(",
          "186:           una,",
          "187:           libuna_byte_stream_size_from_utf16,",
          "188:           [ac_cv_libuna_dummy=yes],",
          "189:           [ac_cv_libuna=no])",
          "190:         AC_CHECK_LIB(",
          "191:           una,",
          "192:           libuna_byte_stream_copy_from_utf16,",
          "193:           [ac_cv_libuna_dummy=yes],",
          "194:           [ac_cv_libuna=no])",
          "195:         AC_CHECK_LIB(",
          "196:           una,",
          "197:           libuna_byte_stream_size_from_utf32,",
          "198:           [ac_cv_libuna_dummy=yes],",
          "199:           [ac_cv_libuna=no])",
          "200:         AC_CHECK_LIB(",
          "201:           una,",
          "202:           libuna_byte_stream_copy_from_utf32,",
          "203:           [ac_cv_libuna_dummy=yes],",
          "204:           [ac_cv_libuna=no])",
          "206:         dnl UTF-8 stream functions",
          "207:         AC_CHECK_LIB(",
          "208:           una,",
          "209:           libuna_utf8_stream_size_from_utf8,",
          "210:           [ac_cv_libuna_dummy=yes],",
          "211:           [ac_cv_libuna=no])",
          "212:         AC_CHECK_LIB(",
          "213:           una,",
          "214:           libuna_utf8_stream_copy_from_utf8,",
          "215:           [ac_cv_libuna_dummy=yes],",
          "216:           [ac_cv_libuna=no])",
          "217:         AC_CHECK_LIB(",
          "218:           una,",
          "219:           libuna_utf8_stream_size_from_utf16,",
          "220:           [ac_cv_libuna_dummy=yes],",
          "221:           [ac_cv_libuna=no])",
          "222:         AC_CHECK_LIB(",
          "223:           una,",
          "224:           libuna_utf8_stream_copy_from_utf16,",
          "225:           [ac_cv_libuna_dummy=yes],",
          "226:           [ac_cv_libuna=no])",
          "227:         AC_CHECK_LIB(",
          "228:           una,",
          "229:           libuna_utf8_stream_size_from_utf32,",
          "230:           [ac_cv_libuna_dummy=yes],",
          "231:           [ac_cv_libuna=no])",
          "232:         AC_CHECK_LIB(",
          "233:           una,",
          "234:           libuna_utf8_stream_copy_from_utf32,",
          "235:           [ac_cv_libuna_dummy=yes],",
          "236:           [ac_cv_libuna=no])",
          "238:         dnl UTF-16 stream functions",
          "239:         AC_CHECK_LIB(",
          "240:           una,",
          "241:           libuna_utf16_stream_size_from_utf8,",
          "242:           [ac_cv_libuna_dummy=yes],",
          "243:           [ac_cv_libuna=no])",
          "244:         AC_CHECK_LIB(",
          "245:           una,",
          "246:           libuna_utf16_stream_copy_from_utf8,",
          "247:           [ac_cv_libuna_dummy=yes],",
          "248:           [ac_cv_libuna=no])",
          "249:         AC_CHECK_LIB(",
          "250:           una,",
          "251:           libuna_utf16_stream_size_from_utf16,",
          "252:           [ac_cv_libuna_dummy=yes],",
          "253:           [ac_cv_libuna=no])",
          "254:         AC_CHECK_LIB(",
          "255:           una,",
          "256:           libuna_utf16_stream_copy_from_utf16,",
          "257:           [ac_cv_libuna_dummy=yes],",
          "258:           [ac_cv_libuna=no])",
          "259:         AC_CHECK_LIB(",
          "260:           una,",
          "261:           libuna_utf16_stream_size_from_utf32,",
          "262:           [ac_cv_libuna_dummy=yes],",
          "263:           [ac_cv_libuna=no])",
          "264:         AC_CHECK_LIB(",
          "265:           una,",
          "266:           libuna_utf16_stream_copy_from_utf32,",
          "267:           [ac_cv_libuna_dummy=yes],",
          "268:           [ac_cv_libuna=no])",
          "270:         dnl UTF-32 stream functions",
          "271:         AC_CHECK_LIB(",
          "272:           una,",
          "273:           libuna_utf32_stream_size_from_utf8,",
          "274:           [ac_cv_libuna_dummy=yes],",
          "275:           [ac_cv_libuna=no])",
          "276:         AC_CHECK_LIB(",
          "277:           una,",
          "278:           libuna_utf32_stream_copy_from_utf8,",
          "279:           [ac_cv_libuna_dummy=yes],",
          "280:           [ac_cv_libuna=no])",
          "281:         AC_CHECK_LIB(",
          "282:           una,",
          "283:           libuna_utf32_stream_size_from_utf16,",
          "284:           [ac_cv_libuna_dummy=yes],",
          "285:           [ac_cv_libuna=no])",
          "286:         AC_CHECK_LIB(",
          "287:           una,",
          "288:           libuna_utf32_stream_copy_from_utf16,",
          "289:           [ac_cv_libuna_dummy=yes],",
          "290:           [ac_cv_libuna=no])",
          "291:         AC_CHECK_LIB(",
          "292:           una,",
          "293:           libuna_utf32_stream_size_from_utf32,",
          "294:           [ac_cv_libuna_dummy=yes],",
          "295:           [ac_cv_libuna=no])",
          "296:         AC_CHECK_LIB(",
          "297:           una,",
          "298:           libuna_utf32_stream_copy_from_utf32,",
          "299:           [ac_cv_libuna_dummy=yes],",
          "300:           [ac_cv_libuna=no])",
          "302:         dnl UTF-8 string functions",
          "303:         AC_CHECK_LIB(",
          "304:           una,",
          "305:           libuna_utf8_string_size_from_byte_stream,",
          "306:           [ac_cv_libuna_dummy=yes],",
          "307:           [ac_cv_libuna=no])",
          "308:         AC_CHECK_LIB(",
          "309:           una,",
          "310:           libuna_utf8_string_copy_from_byte_stream,",
          "311:           [ac_cv_libuna_dummy=yes],",
          "312:           [ac_cv_libuna=no])",
          "313:         AC_CHECK_LIB(",
          "314:           una,",
          "315:           libuna_utf8_string_with_index_copy_from_byte_stream,",
          "316:           [ac_cv_libuna_dummy=yes],",
          "317:           [ac_cv_libuna=no])",
          "318:         AC_CHECK_LIB(",
          "319:           una,",
          "320:           libuna_utf8_string_size_from_utf7_stream,",
          "321:           [ac_cv_libuna_dummy=yes],",
          "322:           [ac_cv_libuna=no])",
          "323:         AC_CHECK_LIB(",
          "324:           una,",
          "325:           libuna_utf8_string_copy_from_utf7_stream,",
          "326:           [ac_cv_libuna_dummy=yes],",
          "327:           [ac_cv_libuna=no])",
          "328:         AC_CHECK_LIB(",
          "329:           una,",
          "330:           libuna_utf8_string_with_index_copy_from_utf7_stream,",
          "331:           [ac_cv_libuna_dummy=yes],",
          "332:           [ac_cv_libuna=no])",
          "333:         AC_CHECK_LIB(",
          "334:           una,",
          "335:           libuna_utf8_string_size_from_utf8_stream,",
          "336:           [ac_cv_libuna_dummy=yes],",
          "337:           [ac_cv_libuna=no])",
          "338:         AC_CHECK_LIB(",
          "339:           una,",
          "340:           libuna_utf8_string_copy_from_utf8_stream,",
          "341:           [ac_cv_libuna_dummy=yes],",
          "342:           [ac_cv_libuna=no])",
          "343:         AC_CHECK_LIB(",
          "344:           una,",
          "345:           libuna_utf8_string_with_index_copy_from_utf8_stream,",
          "346:           [ac_cv_libuna_dummy=yes],",
          "347:           [ac_cv_libuna=no])",
          "348:         AC_CHECK_LIB(",
          "349:           una,",
          "350:           libuna_utf8_string_size_from_utf16_stream,",
          "351:           [ac_cv_libuna_dummy=yes],",
          "352:           [ac_cv_libuna=no])",
          "353:         AC_CHECK_LIB(",
          "354:           una,",
          "355:           libuna_utf8_string_copy_from_utf16_stream,",
          "356:           [ac_cv_libuna_dummy=yes],",
          "357:           [ac_cv_libuna=no])",
          "358:         AC_CHECK_LIB(",
          "359:           una,",
          "360:           libuna_utf8_string_with_index_copy_from_utf16_stream,",
          "361:           [ac_cv_libuna_dummy=yes],",
          "362:           [ac_cv_libuna=no])",
          "363:         AC_CHECK_LIB(",
          "364:           una,",
          "365:           libuna_utf8_string_size_from_utf32_stream,",
          "366:           [ac_cv_libuna_dummy=yes],",
          "367:           [ac_cv_libuna=no])",
          "368:         AC_CHECK_LIB(",
          "369:           una,",
          "370:           libuna_utf8_string_copy_from_utf32_stream,",
          "371:           [ac_cv_libuna_dummy=yes],",
          "372:           [ac_cv_libuna=no])",
          "373:         AC_CHECK_LIB(",
          "374:           una,",
          "375:           libuna_utf8_string_with_index_copy_from_utf32_stream,",
          "376:           [ac_cv_libuna_dummy=yes],",
          "377:           [ac_cv_libuna=no])",
          "378:         AC_CHECK_LIB(",
          "379:           una,",
          "380:           libuna_utf8_string_size_from_utf16,",
          "381:           [ac_cv_libuna_dummy=yes],",
          "382:           [ac_cv_libuna=no])",
          "383:         AC_CHECK_LIB(",
          "384:           una,",
          "385:           libuna_utf8_string_copy_from_utf16,",
          "386:           [ac_cv_libuna_dummy=yes],",
          "387:           [ac_cv_libuna=no])",
          "388:         AC_CHECK_LIB(",
          "389:           una,",
          "390:           libuna_utf8_string_with_index_copy_from_utf16,",
          "391:           [ac_cv_libuna_dummy=yes],",
          "392:           [ac_cv_libuna=no])",
          "393:         AC_CHECK_LIB(",
          "394:           una,",
          "395:           libuna_utf8_string_size_from_utf32,",
          "396:           [ac_cv_libuna_dummy=yes],",
          "397:           [ac_cv_libuna=no])",
          "398:         AC_CHECK_LIB(",
          "399:           una,",
          "400:           libuna_utf8_string_copy_from_utf32,",
          "401:           [ac_cv_libuna_dummy=yes],",
          "402:           [ac_cv_libuna=no])",
          "403:         AC_CHECK_LIB(",
          "404:           una,",
          "405:           libuna_utf8_string_with_index_copy_from_utf32,",
          "406:           [ac_cv_libuna_dummy=yes],",
          "407:           [ac_cv_libuna=no])",
          "409:         dnl UTF-16 string functions",
          "410:         AC_CHECK_LIB(",
          "411:           una,",
          "412:           libuna_utf16_string_size_from_byte_stream,",
          "413:           [ac_cv_libuna_dummy=yes],",
          "414:           [ac_cv_libuna=no])",
          "415:         AC_CHECK_LIB(",
          "416:           una,",
          "417:           libuna_utf16_string_copy_from_byte_stream,",
          "418:           [ac_cv_libuna_dummy=yes],",
          "419:           [ac_cv_libuna=no])",
          "420:         AC_CHECK_LIB(",
          "421:           una,",
          "422:           libuna_utf16_string_with_index_copy_from_byte_stream,",
          "423:           [ac_cv_libuna_dummy=yes],",
          "424:           [ac_cv_libuna=no])",
          "425:         AC_CHECK_LIB(",
          "426:           una,",
          "427:           libuna_utf16_string_size_from_utf7_stream,",
          "428:           [ac_cv_libuna_dummy=yes],",
          "429:           [ac_cv_libuna=no])",
          "430:         AC_CHECK_LIB(",
          "431:           una,",
          "432:           libuna_utf16_string_copy_from_utf7_stream,",
          "433:           [ac_cv_libuna_dummy=yes],",
          "434:           [ac_cv_libuna=no])",
          "435:         AC_CHECK_LIB(",
          "436:           una,",
          "437:           libuna_utf16_string_with_index_copy_from_utf7_stream,",
          "438:           [ac_cv_libuna_dummy=yes],",
          "439:           [ac_cv_libuna=no])",
          "440:         AC_CHECK_LIB(",
          "441:           una,",
          "442:           libuna_utf16_string_size_from_utf8_stream,",
          "443:           [ac_cv_libuna_dummy=yes],",
          "444:           [ac_cv_libuna=no])",
          "445:         AC_CHECK_LIB(",
          "446:           una,",
          "447:           libuna_utf16_string_copy_from_utf8_stream,",
          "448:           [ac_cv_libuna_dummy=yes],",
          "449:           [ac_cv_libuna=no])",
          "450:         AC_CHECK_LIB(",
          "451:           una,",
          "452:           libuna_utf16_string_with_index_copy_from_utf8_stream,",
          "453:           [ac_cv_libuna_dummy=yes],",
          "454:           [ac_cv_libuna=no])",
          "455:         AC_CHECK_LIB(",
          "456:           una,",
          "457:           libuna_utf16_string_size_from_utf16_stream,",
          "458:           [ac_cv_libuna_dummy=yes],",
          "459:           [ac_cv_libuna=no])",
          "460:         AC_CHECK_LIB(",
          "461:           una,",
          "462:           libuna_utf16_string_copy_from_utf16_stream,",
          "463:           [ac_cv_libuna_dummy=yes],",
          "464:           [ac_cv_libuna=no])",
          "465:         AC_CHECK_LIB(",
          "466:           una,",
          "467:           libuna_utf16_string_with_index_copy_from_utf16_stream,",
          "468:           [ac_cv_libuna_dummy=yes],",
          "469:           [ac_cv_libuna=no])",
          "470:         AC_CHECK_LIB(",
          "471:           una,",
          "472:           libuna_utf16_string_size_from_utf32_stream,",
          "473:           [ac_cv_libuna_dummy=yes],",
          "474:           [ac_cv_libuna=no])",
          "475:         AC_CHECK_LIB(",
          "476:           una,",
          "477:           libuna_utf16_string_copy_from_utf32_stream,",
          "478:           [ac_cv_libuna_dummy=yes],",
          "479:           [ac_cv_libuna=no])",
          "480:         AC_CHECK_LIB(",
          "481:           una,",
          "482:           libuna_utf16_string_with_index_copy_from_utf32_stream,",
          "483:           [ac_cv_libuna_dummy=yes],",
          "484:           [ac_cv_libuna=no])",
          "485:         AC_CHECK_LIB(",
          "486:           una,",
          "487:           libuna_utf16_string_size_from_utf8,",
          "488:           [ac_cv_libuna_dummy=yes],",
          "489:           [ac_cv_libuna=no])",
          "490:         AC_CHECK_LIB(",
          "491:           una,",
          "492:           libuna_utf16_string_copy_from_utf8,",
          "493:           [ac_cv_libuna_dummy=yes],",
          "494:           [ac_cv_libuna=no])",
          "495:         AC_CHECK_LIB(",
          "496:           una,",
          "497:           libuna_utf16_string_with_index_copy_from_utf8,",
          "498:           [ac_cv_libuna_dummy=yes],",
          "499:           [ac_cv_libuna=no])",
          "500:         AC_CHECK_LIB(",
          "501:           una,",
          "502:           libuna_utf16_string_size_from_utf32,",
          "503:           [ac_cv_libuna_dummy=yes],",
          "504:           [ac_cv_libuna=no])",
          "505:         AC_CHECK_LIB(",
          "506:           una,",
          "507:           libuna_utf16_string_copy_from_utf32,",
          "508:           [ac_cv_libuna_dummy=yes],",
          "509:           [ac_cv_libuna=no])",
          "510:         AC_CHECK_LIB(",
          "511:           una,",
          "512:           libuna_utf16_string_with_index_copy_from_utf32,",
          "513:           [ac_cv_libuna_dummy=yes],",
          "514:           [ac_cv_libuna=no])",
          "516:         dnl UTF-32 string functions",
          "517:         AC_CHECK_LIB(",
          "518:           una,",
          "519:           libuna_utf32_string_size_from_byte_stream,",
          "520:           [ac_cv_libuna_dummy=yes],",
          "521:           [ac_cv_libuna=no])",
          "522:         AC_CHECK_LIB(",
          "523:           una,",
          "524:           libuna_utf32_string_copy_from_byte_stream,",
          "525:           [ac_cv_libuna_dummy=yes],",
          "526:           [ac_cv_libuna=no])",
          "527:         AC_CHECK_LIB(",
          "528:           una,",
          "529:           libuna_utf32_string_with_index_copy_from_byte_stream,",
          "530:           [ac_cv_libuna_dummy=yes],",
          "531:           [ac_cv_libuna=no])",
          "532:         AC_CHECK_LIB(",
          "533:           una,",
          "534:           libuna_utf32_string_size_from_utf7_stream,",
          "535:           [ac_cv_libuna_dummy=yes],",
          "536:           [ac_cv_libuna=no])",
          "537:         AC_CHECK_LIB(",
          "538:           una,",
          "539:           libuna_utf32_string_copy_from_utf7_stream,",
          "540:           [ac_cv_libuna_dummy=yes],",
          "541:           [ac_cv_libuna=no])",
          "542:         AC_CHECK_LIB(",
          "543:           una,",
          "544:           libuna_utf32_string_with_index_copy_from_utf7_stream,",
          "545:           [ac_cv_libuna_dummy=yes],",
          "546:           [ac_cv_libuna=no])",
          "547:         AC_CHECK_LIB(",
          "548:           una,",
          "549:           libuna_utf32_string_size_from_utf8_stream,",
          "550:           [ac_cv_libuna_dummy=yes],",
          "551:           [ac_cv_libuna=no])",
          "552:         AC_CHECK_LIB(",
          "553:           una,",
          "554:           libuna_utf32_string_copy_from_utf8_stream,",
          "555:           [ac_cv_libuna_dummy=yes],",
          "556:           [ac_cv_libuna=no])",
          "557:         AC_CHECK_LIB(",
          "558:           una,",
          "559:           libuna_utf32_string_with_index_copy_from_utf8_stream,",
          "560:           [ac_cv_libuna_dummy=yes],",
          "561:           [ac_cv_libuna=no])",
          "562:         AC_CHECK_LIB(",
          "563:           una,",
          "564:           libuna_utf32_string_size_from_utf16_stream,",
          "565:           [ac_cv_libuna_dummy=yes],",
          "566:           [ac_cv_libuna=no])",
          "567:         AC_CHECK_LIB(",
          "568:           una,",
          "569:           libuna_utf32_string_copy_from_utf16_stream,",
          "570:           [ac_cv_libuna_dummy=yes],",
          "571:           [ac_cv_libuna=no])",
          "572:         AC_CHECK_LIB(",
          "573:           una,",
          "574:           libuna_utf32_string_with_index_copy_from_utf16_stream,",
          "575:           [ac_cv_libuna_dummy=yes],",
          "576:           [ac_cv_libuna=no])",
          "577:         AC_CHECK_LIB(",
          "578:           una,",
          "579:           libuna_utf32_string_size_from_utf32_stream,",
          "580:           [ac_cv_libuna_dummy=yes],",
          "581:           [ac_cv_libuna=no])",
          "582:         AC_CHECK_LIB(",
          "583:           una,",
          "584:           libuna_utf32_string_copy_from_utf32_stream,",
          "585:           [ac_cv_libuna_dummy=yes],",
          "586:           [ac_cv_libuna=no])",
          "587:         AC_CHECK_LIB(",
          "588:           una,",
          "589:           libuna_utf32_string_with_index_copy_from_utf32_stream,",
          "590:           [ac_cv_libuna_dummy=yes],",
          "591:           [ac_cv_libuna=no])",
          "592:         AC_CHECK_LIB(",
          "593:           una,",
          "594:           libuna_utf32_string_size_from_utf8,",
          "595:           [ac_cv_libuna_dummy=yes],",
          "596:           [ac_cv_libuna=no])",
          "597:         AC_CHECK_LIB(",
          "598:           una,",
          "599:           libuna_utf32_string_copy_from_utf8,",
          "600:           [ac_cv_libuna_dummy=yes],",
          "601:           [ac_cv_libuna=no])",
          "602:         AC_CHECK_LIB(",
          "603:           libuna_utf32_string_with_index_copy_from_utf8,",
          "604:           [ac_cv_libuna_dummy=yes],",
          "605:           [ac_cv_libuna=no])",
          "606:         AC_CHECK_LIB(",
          "607:           una,",
          "608:           libuna_utf32_string_size_from_utf16,",
          "609:           [ac_cv_libuna_dummy=yes],",
          "610:           [ac_cv_libuna=no])",
          "611:         AC_CHECK_LIB(",
          "612:           una,",
          "613:           libuna_utf32_string_copy_from_utf16,",
          "614:           [ac_cv_libuna_dummy=yes],",
          "615:           [ac_cv_libuna=no])",
          "616:         AC_CHECK_LIB(",
          "617:           una,",
          "618:           libuna_utf32_string_with_index_copy_from_utf16,",
          "619:           [ac_cv_libuna_dummy=yes],",
          "620:           [ac_cv_libuna=no])",
          "622:         ac_cv_libuna_LIBADD=\"-luna\"",
          "623:         ])",
          "624:       ])",
          "625:     ])",
          "627:   AS_IF(",
          "628:     [test \"x$ac_cv_libuna\" = xyes],",
          "629:     [AC_DEFINE(",
          "630:       [HAVE_LIBUNA],",
          "631:       [1],",
          "632:       [Define to 1 if you have the `una' library (-luna).])",
          "635:   AS_IF(",
          "636:     [test \"x$ac_cv_libuna\" = xyes],",
          "637:     [AC_SUBST(",
          "638:       [HAVE_LIBUNA],",
          "639:       [1]) ],",
          "640:     [AC_SUBST(",
          "641:       [HAVE_LIBUNA],",
          "642:       [0])",
          "643:     ])",
          "646: dnl Function to detect if libuna dependencies are available",
          "647: AC_DEFUN([AX_LIBUNA_CHECK_LOCAL],",
          "648:   [dnl No additional checks.",
          "650:   ac_cv_libuna_CPPFLAGS=\"-I../libuna\";",
          "651:   ac_cv_libuna_LIBADD=\"../libuna/libuna.la\";",
          "653:   ac_cv_libuna=local",
          "658:   [AX_COMMON_ARG_WITH(",
          "659:     [libuna],",
          "660:     [libuna],",
          "661:     [search for libuna in includedir and libdir or in the specified DIR, or no if to use local version],",
          "662:     [auto-detect],",
          "663:     [DIR])",
          "665:   dnl Check for a shared library version",
          "666:   AX_LIBUNA_CHECK_LIB",
          "668:   dnl Check if the dependencies for the local library version",
          "669:   AS_IF(",
          "670:     [test \"x$ac_cv_libuna\" != xyes],",
          "671:     [AX_LIBUNA_CHECK_LOCAL",
          "673:     AC_DEFINE(",
          "674:       [HAVE_LOCAL_LIBUNA],",
          "675:       [1],",
          "676:       [Define to 1 if the local version of libuna is used.])",
          "677:     AC_SUBST(",
          "678:       [HAVE_LOCAL_LIBUNA],",
          "679:       [1])",
          "680:     ])",
          "682:   AM_CONDITIONAL(",
          "683:     [HAVE_LOCAL_LIBUNA],",
          "684:     [test \"x$ac_cv_libuna\" = xlocal])",
          "685:   AS_IF(",
          "686:     [test \"x$ac_cv_libuna_CPPFLAGS\" != \"x\"],",
          "687:     [AC_SUBST(",
          "688:       [LIBUNA_CPPFLAGS],",
          "689:       [$ac_cv_libuna_CPPFLAGS])",
          "690:     ])",
          "691:   AS_IF(",
          "692:     [test \"x$ac_cv_libuna_LIBADD\" != \"x\"],",
          "693:     [AC_SUBST(",
          "694:       [LIBUNA_LIBADD],",
          "695:       [$ac_cv_libuna_LIBADD])",
          "696:     ])",
          "698:   AS_IF(",
          "699:     [test \"x$ac_cv_libuna\" = xyes],",
          "700:     [AC_SUBST(",
          "701:       [ax_libuna_pc_libs_private],",
          "702:       [-luna])",
          "703:     ])",
          "705:   AS_IF(",
          "706:     [test \"x$ac_cv_libuna\" = xyes],",
          "707:     [AC_SUBST(",
          "708:       [ax_libuna_spec_requires],",
          "709:       [libuna])",
          "710:     AC_SUBST(",
          "711:       [ax_libuna_spec_build_requires],",
          "712:       [libuna-devel])",
          "713:     ])",
          "",
          "---------------"
        ],
        "setup.py||setup.py": [
          "File: setup.py -> setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: from distutils.command.sdist import sdist",
          "20: from distutils.core import Extension, setup",
          "23: class custom_bdist_rpm(bdist):",
          "24:   \"\"\"Custom handler for the bdist_rpm command.\"\"\"",
          "26:   def run(self):",
          "27:     print(\"'setup.py bdist_rpm' command not supported use 'rpmbuild' instead.\")",
          "28:     sys.exit(1)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: try:",
          "23:   from distutils.command.bdist_msi import bdist_msi",
          "24: except ImportError:",
          "25:   bdist_msi = None",
          "28: if not bdist_msi:",
          "29:   custom_bdist_msi = None",
          "30: else:",
          "31:   class custom_bdist_msi(bdist_msi):",
          "32:     \"\"\"Custom handler for the bdist_msi command.\"\"\"",
          "34:     def run(self):",
          "35:       \"\"\"Builds an MSI.\"\"\"",
          "36:       # bdist_msi does not support the library version so we add \".1\"",
          "37:       # as a work around.",
          "38:       self.distribution.metadata.version = \"{0:s}.1\".format(",
          "39:           self.distribution.metadata.version)",
          "41:       bdist_msi.run(self)",
          "48:     \"\"\"Builds a RPM.\"\"\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51:     return output",
          "53:   def build_extensions(self):",
          "54:     # TODO: move build customization here?",
          "55:     build_ext.build_extensions(self)",
          "57:   def run(self):",
          "58:     compiler = new_compiler(compiler=self.compiler)",
          "59:     if compiler.compiler_type == \"msvc\":",
          "60:       self.define = [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:     \"\"\"Set up the build extensions.\"\"\"",
          "81:     \"\"\"Runs the build extension.\"\"\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "77:           if sys.version_info[0] >= 3:",
          "78:             line = line.decode(\"ascii\")",
          "79:           configure_arguments.append(\"{0:s}=no\".format(line))",
          "80:         elif line == b\"--with-openssl\":",
          "81:           configure_arguments.append(\"--with-openssl=no\")",
          "82:         elif line == b\"--with-zlib\":",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "104:         elif line == b\"--with-bzip2\":",
          "105:           configure_arguments.append(\"--with-bzip2=no\")",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "108:   \"\"\"Custom handler for the sdist command.\"\"\"",
          "110:   def run(self):",
          "111:     if self.formats != [\"gztar\"]:",
          "112:       print(\"'setup.py sdist' unsupported format.\")",
          "113:       sys.exit(1)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "137:     \"\"\"Builds a source distribution (sdist) package.\"\"\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "255: project_information = ProjectInformation()",
          "263: PYTHON_LIBRARY_DIRECTORY = GetPythonLibraryDirectoryPath()",
          "265: SOURCES = []",
          "",
          "[Removed Lines]",
          "257: MODULE_VERSION = project_information.library_version",
          "258: if \"bdist_msi\" in sys.argv:",
          "259:   # bdist_msi does not support the library version so we add \".1\"",
          "260:   # as a work around.",
          "261:   MODULE_VERSION = \"{0:s}.1\".format(MODULE_VERSION)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "300: setup(",
          "301:     name=project_information.package_name,",
          "302:     url=project_information.project_url,",
          "304:     description=project_information.package_description,",
          "305:     long_description=project_information.package_description,",
          "306:     author=\"Joachim Metz\",",
          "",
          "[Removed Lines]",
          "303:     version=MODULE_VERSION,",
          "",
          "[Added Lines]",
          "324:     version=project_information.library_version,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "308:     license=\"GNU Lesser General Public License v3 or later (LGPLv3+)\",",
          "309:     cmdclass={",
          "310:         \"build_ext\": custom_build_ext,",
          "311:         \"bdist_rpm\": custom_bdist_rpm,",
          "312:         \"sdist\": custom_sdist,",
          "313:     },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "332:         \"bdist_msi\": custom_bdist_msi,",
          "",
          "---------------"
        ],
        "syncsharedlibs.sh||syncsharedlibs.sh": [
          "File: syncsharedlibs.sh -> syncsharedlibs.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #!/bin/sh",
          "2: # Script that synchronizes the shared library dependencies",
          "3: #",
          "4: # Version: 20170903",
          "6: GIT_URL_PREFIX=\"https://github.com/libyal\";",
          "7: SHARED_LIBS=\"libbfio libcdata libcdirectory libcerror libcfile libclocale libcnotify libcpath libcsplit libcthreads libexe libfcache libfdata libfdatetime libfguid libfvalue libfwevt libfwnt libregf libuna libwrc\";",
          "9: if test ${TRAVIS_OS_NAME} != \"linux\";",
          "10: then",
          "11:  echo \"ERROR: This script is intended to be run on Travis CI.\";",
          "13:  exit 1;",
          "14: fi",
          "16: OLDIFS=$IFS;",
          "17: IFS=\" \";",
          "19: for SHARED_LIB in ${SHARED_LIBS};",
          "20: do",
          "21:  git clone ${GIT_URL_PREFIX}/${SHARED_LIB}.git ${SHARED_LIB}-$$;",
          "23:  if ! test -d ${SHARED_LIB}-$$;",
          "24:  then",
          "25:   continue",
          "26:  fi",
          "28:  (cd ${SHARED_LIB}-$$ && ./synclibs.sh && ./autogen.sh && ./configure --prefix=/usr && make && sudo make install);",
          "30:  rm -rf ${SHARED_LIB}-$$;",
          "31: done",
          "33: IFS=$OLDIFS;",
          "",
          "---------------"
        ],
        "tests/test_library.ps1||tests/test_library.ps1": [
          "File: tests/test_library.ps1 -> tests/test_library.ps1",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # Tests C library functions and types.",
          "2: #",
          "5: $ExitSuccess = 0",
          "6: $ExitFailure = 1",
          "",
          "[Removed Lines]",
          "3: # Version: 20170827",
          "",
          "[Added Lines]",
          "3: # Version: 20170902",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94: Foreach (${TestName} in ${LibraryTests} -split \" \")",
          "95: {",
          "96:  $Result = RunTest ${TestName}",
          "98:  If (${Result} -ne ${ExitSuccess})",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "96:  # Split will return an array of a single empty string when LibraryTests is empty.",
          "97:  If (-Not (${TestName}))",
          "98:  {",
          "99:   Continue",
          "100:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "104: Foreach (${TestName} in ${LibraryTestsWithInput} -split \" \")",
          "105: {",
          "106:  # TODO: add RunTestWithInput",
          "107:  $Result = RunTest ${TestName}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "111:  # Split will return an array of a single empty string when LibraryTestsWithInput is empty.",
          "112:  If (-Not (${TestName}))",
          "113:  {",
          "114:   Continue",
          "115:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b31963feb24addd41c081ded30c728c85f795625",
      "candidate_info": {
        "commit_hash": "b31963feb24addd41c081ded30c728c85f795625",
        "repo": "libyal/libevt",
        "commit_url": "https://github.com/libyal/libevt/commit/b31963feb24addd41c081ded30c728c85f795625",
        "files": [
          ".travis.yml",
          "configure.ac",
          "libevt.nuspec",
          "m4/libcdata.m4",
          "m4/libregf.m4",
          "pyevt/pyevt_records.c",
          "pyevt/pyevt_strings.c"
        ],
        "message": "Removed call to init from new in pyevt sequence objects",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "libevt.nuspec||libevt.nuspec",
          "m4/libcdata.m4||m4/libcdata.m4",
          "m4/libregf.m4||m4/libregf.m4",
          "pyevt/pyevt_records.c||pyevt/pyevt_records.c",
          "pyevt/pyevt_strings.c||pyevt/pyevt_strings.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec",
            "m4/libcdata.m4||m4/libcdata.m4"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec",
            "m4/libcdata.m4||m4/libcdata.m4"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_INIT(",
          "4:  [libevt],",
          "6:  [joachim.metz@gmail.com])",
          "8: AC_CONFIG_SRCDIR(",
          "",
          "[Removed Lines]",
          "5:  [20181129],",
          "",
          "[Added Lines]",
          "5:  [20181216],",
          "",
          "---------------"
        ],
        "libevt.nuspec||libevt.nuspec": [
          "File: libevt.nuspec -> libevt.nuspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: <package >",
          "3:   <metadata>",
          "4:     <id>libevt</id>",
          "6:     <authors>Joachim Metz</authors>",
          "7:     <owners>joachimmetz</owners>",
          "8:     <licenseUrl>https://raw.githubusercontent.com/libyal/libevt/master/COPYING</licenseUrl>",
          "",
          "[Removed Lines]",
          "5:     <version>20181126</version>",
          "",
          "[Added Lines]",
          "5:     <version>20181216</version>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10:     <requireLicenseAcceptance>false</requireLicenseAcceptance>",
          "11:     <title>libevt</title>",
          "12:     <description>Library to access the Windows Event Log (EVT) format</description>",
          "14:     <copyright>Copyright (C) 2011-2018</copyright>",
          "15:     <tags>native</tags>",
          "16:   </metadata>",
          "",
          "[Removed Lines]",
          "13:     <releaseNotes>Release of libevt 20181126</releaseNotes>",
          "",
          "[Added Lines]",
          "13:     <releaseNotes>Release of libevt 20181216</releaseNotes>",
          "",
          "---------------"
        ],
        "m4/libcdata.m4||m4/libcdata.m4": [
          "File: m4/libcdata.m4 -> m4/libcdata.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Checks for libcdata required headers and functions",
          "2: dnl",
          "5: dnl Function to detect if libcdata is available",
          "6: dnl ac_libcdata_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20181117",
          "",
          "[Added Lines]",
          "3: dnl Version: 20181216",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25:         [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "26:         [PKG_CHECK_MODULES(",
          "27:           [libcdata],",
          "29:           [ac_cv_libcdata=yes],",
          "30:           [ac_cv_libcdata=check])",
          "31:         ])",
          "",
          "[Removed Lines]",
          "28:           [libcdata >= 20160108],",
          "",
          "[Added Lines]",
          "28:           [libcdata >= 20181216],",
          "",
          "---------------"
        ],
        "m4/libregf.m4||m4/libregf.m4": [
          "File: m4/libregf.m4 -> m4/libregf.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Checks for libregf required headers and functions",
          "2: dnl",
          "5: dnl Function to detect if libregf is available",
          "6: dnl ac_libregf_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20181117",
          "",
          "[Added Lines]",
          "3: dnl Version: 20181126",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96:   AS_IF(",
          "97:     [test \"x$ac_cv_func_towupper\" != xyes],",
          "98:     [AC_MSG_FAILURE(",
          "100:       [1])",
          "101:    ])",
          "",
          "[Removed Lines]",
          "99:       [Missing functions: towupper],",
          "",
          "[Added Lines]",
          "99:       [Missing function: towupper],",
          "",
          "---------------"
        ],
        "pyevt/pyevt_records.c||pyevt/pyevt_records.c": [
          "File: pyevt/pyevt_records.c -> pyevt/pyevt_records.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "197:   goto on_error;",
          "198:  }",
          "209:  sequence_object->parent_object     = parent_object;",
          "210:  sequence_object->get_item_by_index = get_item_by_index;",
          "211:  sequence_object->number_of_items   = number_of_items;",
          "213:  Py_IncRef(",
          "",
          "[Removed Lines]",
          "199:  if( pyevt_records_init(",
          "200:       sequence_object ) != 0 )",
          "201:  {",
          "202:   PyErr_Format(",
          "203:    PyExc_MemoryError,",
          "204:    \"%s: unable to initialize sequence object.\",",
          "205:    function );",
          "207:   goto on_error;",
          "208:  }",
          "",
          "[Added Lines]",
          "201:  sequence_object->current_index     = 0;",
          "",
          "---------------"
        ],
        "pyevt/pyevt_strings.c||pyevt/pyevt_strings.c": [
          "File: pyevt/pyevt_strings.c -> pyevt/pyevt_strings.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "196:   goto on_error;",
          "197:  }",
          "208:  sequence_object->parent_object     = parent_object;",
          "209:  sequence_object->get_item_by_index = get_item_by_index;",
          "210:  sequence_object->number_of_items   = number_of_items;",
          "212:  Py_IncRef(",
          "",
          "[Removed Lines]",
          "198:  if( pyevt_strings_init(",
          "199:       sequence_object ) != 0 )",
          "200:  {",
          "201:   PyErr_Format(",
          "202:    PyExc_MemoryError,",
          "203:    \"%s: unable to initialize sequence object.\",",
          "204:    function );",
          "206:   goto on_error;",
          "207:  }",
          "",
          "[Added Lines]",
          "200:  sequence_object->current_index     = 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}