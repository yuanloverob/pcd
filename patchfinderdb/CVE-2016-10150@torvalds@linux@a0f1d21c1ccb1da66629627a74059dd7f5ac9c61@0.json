{
  "cve_id": "CVE-2016-10150",
  "cve_desc": "Use-after-free vulnerability in the kvm_ioctl_create_device function in virt/kvm/kvm_main.c in the Linux kernel before 4.8.13 allows host OS users to cause a denial of service (host OS crash) or possibly gain privileges via crafted ioctl calls on the /dev/kvm device.",
  "repo": "torvalds/linux",
  "patch_hash": "a0f1d21c1ccb1da66629627a74059dd7f5ac9c61",
  "patch_info": {
    "commit_hash": "a0f1d21c1ccb1da66629627a74059dd7f5ac9c61",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/a0f1d21c1ccb1da66629627a74059dd7f5ac9c61",
    "files": [
      "virt/kvm/kvm_main.c"
    ],
    "message": "KVM: use after free in kvm_ioctl_create_device()\n\nWe should move the ops->destroy(dev) after the list_del(&dev->vm_node)\nso that we don't use \"dev\" after freeing it.\n\nFixes: a28ebea2adc4 (\"KVM: Protect device ops->create and list_add with kvm->lock\")\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nReviewed-by: David Hildenbrand <david@redhat.com>\nSigned-off-by: Radim Kr\u010dm\u00e1\u0159 <rkrcmar@redhat.com>",
    "before_after_code_files": [
      "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c"
    ]
  },
  "patch_diff": {
    "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c": [
      "File: virt/kvm/kvm_main.c -> virt/kvm/kvm_main.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2890:  ret = anon_inode_getfd(ops->name, &kvm_device_fops, dev, O_RDWR | O_CLOEXEC);",
      "2891:  if (ret < 0) {",
      "2893:   mutex_lock(&kvm->lock);",
      "2894:   list_del(&dev->vm_node);",
      "2895:   mutex_unlock(&kvm->lock);",
      "2896:   return ret;",
      "2897:  }",
      "",
      "[Removed Lines]",
      "2892:   ops->destroy(dev);",
      "",
      "[Added Lines]",
      "2895:   ops->destroy(dev);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a28ebea2adc4a2bef5989a5a181ec238f59fbcad",
      "candidate_info": {
        "commit_hash": "a28ebea2adc4a2bef5989a5a181ec238f59fbcad",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/a28ebea2adc4a2bef5989a5a181ec238f59fbcad",
        "files": [
          "arch/arm/kvm/arm.c",
          "arch/powerpc/kvm/book3s_xics.c",
          "include/linux/kvm_host.h",
          "virt/kvm/arm/vgic/vgic-init.c",
          "virt/kvm/kvm_main.c"
        ],
        "message": "KVM: Protect device ops->create and list_add with kvm->lock\n\nKVM devices were manipulating list data structures without any form of\nsynchronization, and some implementations of the create operations also\nsuffered from a lack of synchronization.\n\nNow when we've split the xics create operation into create and init, we\ncan hold the kvm->lock mutex while calling the create operation and when\nmanipulating the devices list.\n\nThe error path in the generic code gets slightly ugly because we have to\ntake the mutex again and delete the device from the list, but holding\nthe mutex during anon_inode_getfd or releasing/locking the mutex in the\ncommon non-error path seemed wrong.\n\nSigned-off-by: Christoffer Dall <christoffer.dall@linaro.org>\nReviewed-by: Paolo Bonzini <pbonzini@redhat.com>\nAcked-by: Christian Borntraeger <borntraeger@de.ibm.com>\nSigned-off-by: Radim Kr\u010dm\u00e1\u0159 <rkrcmar@redhat.com>",
        "before_after_code_files": [
          "arch/arm/kvm/arm.c||arch/arm/kvm/arm.c",
          "arch/powerpc/kvm/book3s_xics.c||arch/powerpc/kvm/book3s_xics.c",
          "include/linux/kvm_host.h||include/linux/kvm_host.h",
          "virt/kvm/arm/vgic/vgic-init.c||virt/kvm/arm/vgic/vgic-init.c",
          "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c"
          ],
          "candidate": [
            "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c"
          ]
        }
      },
      "candidate_diff": {
        "arch/arm/kvm/arm.c||arch/arm/kvm/arm.c": [
          "File: arch/arm/kvm/arm.c -> arch/arm/kvm/arm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1010:  switch (ioctl) {",
          "1011:  case KVM_CREATE_IRQCHIP: {",
          "1012:   if (!vgic_present)",
          "1013:    return -ENXIO;",
          "1015:  }",
          "1016:  case KVM_ARM_SET_DEVICE_ADDR: {",
          "1017:   struct kvm_arm_device_addr dev_addr;",
          "",
          "[Removed Lines]",
          "1014:   return kvm_vgic_create(kvm, KVM_DEV_TYPE_ARM_VGIC_V2);",
          "",
          "[Added Lines]",
          "1012:   int ret;",
          "1015:   mutex_lock(&kvm->lock);",
          "1016:   ret = kvm_vgic_create(kvm, KVM_DEV_TYPE_ARM_VGIC_V2);",
          "1017:   mutex_unlock(&kvm->lock);",
          "1018:   return ret;",
          "",
          "---------------"
        ],
        "arch/powerpc/kvm/book3s_xics.c||arch/powerpc/kvm/book3s_xics.c": [
          "File: arch/powerpc/kvm/book3s_xics.c -> arch/powerpc/kvm/book3s_xics.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1329:  xics->kvm = kvm;",
          "1333:  if (kvm->arch.xics)",
          "1334:   ret = -EEXIST;",
          "1335:  else",
          "1336:   kvm->arch.xics = xics;",
          "1339:  if (ret) {",
          "1340:   kfree(xics);",
          "",
          "[Removed Lines]",
          "1332:  mutex_lock(&kvm->lock);",
          "1337:  mutex_unlock(&kvm->lock);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "include/linux/kvm_host.h||include/linux/kvm_host.h": [
          "File: include/linux/kvm_host.h -> include/linux/kvm_host.h"
        ],
        "virt/kvm/arm/vgic/vgic-init.c||virt/kvm/arm/vgic/vgic-init.c": [
          "File: virt/kvm/arm/vgic/vgic-init.c -> virt/kvm/arm/vgic/vgic-init.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:  int i, vcpu_lock_idx = -1, ret;",
          "74:  struct kvm_vcpu *vcpu;",
          "",
          "[Removed Lines]",
          "76:  mutex_lock(&kvm->lock);",
          "78:  if (irqchip_in_kernel(kvm)) {",
          "79:   ret = -EEXIST;",
          "80:   goto out;",
          "81:  }",
          "",
          "[Added Lines]",
          "76:  if (irqchip_in_kernel(kvm))",
          "77:   return -EEXIST;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "89:  if (type == KVM_DEV_TYPE_ARM_VGIC_V2 &&",
          "",
          "[Removed Lines]",
          "90:   !kvm_vgic_global_state.can_emulate_gicv2) {",
          "91:   ret = -ENODEV;",
          "92:   goto out;",
          "93:  }",
          "",
          "[Added Lines]",
          "86:   !kvm_vgic_global_state.can_emulate_gicv2)",
          "87:   return -ENODEV;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "138:   vcpu = kvm_get_vcpu(kvm, vcpu_lock_idx);",
          "139:   mutex_unlock(&vcpu->mutex);",
          "140:  }",
          "144:  return ret;",
          "145: }",
          "",
          "[Removed Lines]",
          "142: out:",
          "143:  mutex_unlock(&kvm->lock);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c": [
          "File: virt/kvm/kvm_main.c -> virt/kvm/kvm_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2832:  dev->ops = ops;",
          "2833:  dev->kvm = kvm;",
          "2835:  ret = ops->create(dev, cd->type);",
          "2836:  if (ret < 0) {",
          "2837:   kfree(dev);",
          "2838:   return ret;",
          "2839:  }",
          "2841:  if (ops->init)",
          "2842:   ops->init(dev);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2840:  mutex_lock(&kvm->lock);",
          "2843:   mutex_unlock(&kvm->lock);",
          "2847:  list_add(&dev->vm_node, &kvm->devices);",
          "2848:  mutex_unlock(&kvm->lock);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2844:  ret = anon_inode_getfd(ops->name, &kvm_device_fops, dev, O_RDWR | O_CLOEXEC);",
          "2845:  if (ret < 0) {",
          "2846:   ops->destroy(dev);",
          "2847:   return ret;",
          "2848:  }",
          "2851:  kvm_get_kvm(kvm);",
          "2852:  cd->fd = ret;",
          "2853:  return 0;",
          "",
          "[Removed Lines]",
          "2850:  list_add(&dev->vm_node, &kvm->devices);",
          "",
          "[Added Lines]",
          "2856:   mutex_lock(&kvm->lock);",
          "2857:   list_del(&dev->vm_node);",
          "2858:   mutex_unlock(&kvm->lock);",
          "",
          "---------------"
        ]
      }
    }
  ]
}