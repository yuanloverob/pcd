{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "af10989dd51cac1068a0451350f935fcdd54c8d3",
      "candidate_info": {
        "commit_hash": "af10989dd51cac1068a0451350f935fcdd54c8d3",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/af10989dd51cac1068a0451350f935fcdd54c8d3",
        "files": [
          "test/ocspapitest.c"
        ],
        "message": "Fix coverity-reported errors in ocspapitest\n\nAvoid memory leaks in error paths, and correctly apply\nparentheses to function calls in a long if-chain.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n\n(cherry picked from commit b6306d8049b04dca7fa738a86c892c43ba6a5fc4)\n\n(Merged from https://github.com/openssl/openssl/pull/4723)",
        "before_after_code_files": [
          "test/ocspapitest.c||test/ocspapitest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/ocspapitest.c||test/ocspapitest.c": [
          "File: test/ocspapitest.c -> test/ocspapitest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "51:     const unsigned char namestr[] = \"openssl.example.com\";",
          "52:     unsigned char keybytes[128] = {7};",
          "53:     OCSP_BASICRESP *bs = OCSP_BASICRESP_new();",
          "55:     ASN1_TIME *thisupd = ASN1_TIME_set(NULL, time(NULL));",
          "56:     ASN1_TIME *nextupd = ASN1_TIME_set(NULL, time(NULL) + 200);",
          "57:     X509_NAME *name = X509_NAME_new();",
          "",
          "[Removed Lines]",
          "54:     OCSP_CERTID *cid;",
          "",
          "[Added Lines]",
          "54:     OCSP_BASICRESP *bs_out = NULL;",
          "55:     OCSP_CERTID *cid = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61:     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,",
          "62:                                    namestr, -1, -1, 1)",
          "66:     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);",
          "67:     if (bs == NULL",
          "68:         || thisupd == NULL",
          "",
          "[Removed Lines]",
          "63:         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)",
          "64:         || !ASN1_INTEGER_set_uint64(serial, (uint64_t)1)))",
          "65:         return NULL;",
          "",
          "[Added Lines]",
          "64:         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes))",
          "65:         || !ASN1_INTEGER_set_uint64(serial, (uint64_t)1))",
          "66:         goto err;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "71:         || !OCSP_basic_add1_status(bs, cid,",
          "72:                                    V_OCSP_CERTSTATUS_UNKNOWN,",
          "73:                                    0, NULL, thisupd, nextupd))",
          "75:     ASN1_TIME_free(thisupd);",
          "76:     ASN1_TIME_free(nextupd);",
          "77:     ASN1_BIT_STRING_free(key);",
          "78:     ASN1_INTEGER_free(serial);",
          "79:     OCSP_CERTID_free(cid);",
          "80:     X509_NAME_free(name);",
          "82: }",
          "84: #ifndef OPENSSL_NO_OCSP",
          "85: static int test_resp_signer(void)",
          "86: {",
          "88:     X509 *signer = NULL, *tmp;",
          "89:     EVP_PKEY *key = NULL;",
          "",
          "[Removed Lines]",
          "74:         return NULL;",
          "81:     return bs;",
          "87:     OCSP_BASICRESP *bs;",
          "90:     STACK_OF(X509) *extra_certs;",
          "",
          "[Added Lines]",
          "75:         goto err;",
          "76:     bs_out = bs;",
          "77:     bs = NULL;",
          "78:  err:",
          "84:     OCSP_BASICRESP_free(bs);",
          "86:     return bs_out;",
          "92:     OCSP_BASICRESP *bs = NULL;",
          "95:     STACK_OF(X509) *extra_certs = NULL;",
          "96:     int ret = 0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "101:         || !sk_X509_push(extra_certs, signer)",
          "102:         || !OCSP_basic_sign(bs, signer, key, EVP_sha1(),",
          "103:                                       NULL, OCSP_NOCERTS))",
          "105:     if (!OCSP_resp_get0_signer(bs, &tmp, extra_certs)",
          "106:         || X509_cmp(tmp, signer) != 0)",
          "108:     OCSP_BASICRESP_free(bs);",
          "",
          "[Removed Lines]",
          "104:         return 0;",
          "107:         return 0;",
          "",
          "[Added Lines]",
          "110:         goto err;",
          "113:         goto err;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "113:     if (bs == NULL",
          "114:         || !OCSP_basic_sign(bs, signer, key, EVP_sha1(),",
          "115:                             NULL, 0))",
          "117:     if (!OCSP_resp_get0_signer(bs, &tmp, NULL)",
          "118:         || X509_cmp(tmp, signer) != 0)",
          "120:     OCSP_BASICRESP_free(bs);",
          "121:     sk_X509_free(extra_certs);",
          "122:     X509_free(signer);",
          "123:     EVP_PKEY_free(key);",
          "125: }",
          "126: #endif",
          "",
          "[Removed Lines]",
          "116:         return 0;",
          "119:         return 0;",
          "124:     return 1;",
          "",
          "[Added Lines]",
          "122:         goto err;",
          "125:         goto err;",
          "126:     ret = 1;",
          "127:  err:",
          "132:     return ret;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ded1b50f83c4d0d3e12a2a64d3bd66a27884136e",
      "candidate_info": {
        "commit_hash": "ded1b50f83c4d0d3e12a2a64d3bd66a27884136e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ded1b50f83c4d0d3e12a2a64d3bd66a27884136e",
        "files": [
          "crypto/rsa/rsa_ossl.c"
        ],
        "message": "Fix another possible crash in rsa_ossl_mod_exp.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3675)\n(cherry picked from commit 5625567f9c7daaa2e2689647e10e4c5d7370718f)",
        "before_after_code_files": [
          "crypto/rsrsa_ossl.c||crypto/rsa/rsa_ossl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/rsrsa_ossl.c||crypto/rsa/rsa_ossl.c": [
          "File: crypto/rsrsa_ossl.c -> crypto/rsa/rsa_ossl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "606:     if (vrfy == NULL)",
          "607:         goto err;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9d725c0a1a39dd98b720b41b33fcb969c9c50832",
      "candidate_info": {
        "commit_hash": "9d725c0a1a39dd98b720b41b33fcb969c9c50832",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/9d725c0a1a39dd98b720b41b33fcb969c9c50832",
        "files": [
          "crypto/asn1/tasn_new.c"
        ],
        "message": "asn1_item_embed_new(): if locking failed, don't call asn1_item_embed_free()\n\nasn1_item_embed_free() will try unlocking and fail in this case, and\nsince the new item was just allocated on the heap, free it directly\nwith OPENSSL_free() instead.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\n(Merged from https://github.com/openssl/openssl/pull/4579)\n\n(cherry picked from commit fe6fcd31546db1ab019e55edd15c953c5b358559)",
        "before_after_code_files": [
          "crypto/asn1/tasn_new.c||crypto/asn1/tasn_new.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/tasn_new.c||crypto/asn1/tasn_new.c": [
          "File: crypto/asn1/tasn_new.c -> crypto/asn1/tasn_new.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "124:                 goto memerr;",
          "125:         }",
          "129:         asn1_enc_init(pval, it);",
          "130:         for (i = 0, tt = it->templates; i < it->tcount; tt++, i++) {",
          "131:             pseqval = asn1_get_field_ptr(pval, tt);",
          "",
          "[Removed Lines]",
          "127:         if (asn1_do_lock(pval, 0, it) < 0)",
          "128:             goto memerr2;",
          "",
          "[Added Lines]",
          "127:         if (asn1_do_lock(pval, 0, it) < 0) {",
          "128:             if (!embed) {",
          "129:                 OPENSSL_free(*pval);",
          "131:             }",
          "132:             goto memerr;",
          "133:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f2982ad79c9eeac4d8ee4225056f971eadf9302b",
      "candidate_info": {
        "commit_hash": "f2982ad79c9eeac4d8ee4225056f971eadf9302b",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f2982ad79c9eeac4d8ee4225056f971eadf9302b",
        "files": [
          "apps/ca.c"
        ],
        "message": "Don't allow an empty Subject when creating a Certificate\n\nMisconfiguration (e.g. an empty policy section in the config file) can\nlead to an empty Subject. Since certificates should have unique Subjects\nthis should not be allowed.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/5114)\n\n(cherry picked from commit e505f1e86874acfd98826d64c53bf2ddfd9c1399)",
        "before_after_code_files": [
          "apps/ca.c||apps/ca.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/ca.c||apps/ca.c": [
          "File: apps/ca.c -> apps/ca.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1405:                    \"The Subject's Distinguished Name is as follows\\n\");",
          "1407:     name = X509_REQ_get_subject_name(req);",
          "1408:     for (i = 0; i < X509_NAME_entry_count(name); i++) {",
          "1409:         ne = X509_NAME_get_entry(name, i);",
          "1410:         str = X509_NAME_ENTRY_get_data(ne);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1408:     if (X509_NAME_entry_count(name) == 0) {",
          "1409:         BIO_printf(bio_err, \"Error: The supplied Subject is empty\\n\");",
          "1410:         goto end;",
          "1411:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1570:             goto end;",
          "1571:     }",
          "1573:     if (verbose)",
          "1574:         BIO_printf(bio_err,",
          "1575:                    \"The subject name appears to be ok, checking data base for clashes\\n\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1577:     if (X509_NAME_entry_count(subject) == 0) {",
          "1578:         BIO_printf(bio_err,",
          "1579:                    \"Error: After applying policy the Subject is empty\\n\");",
          "1580:         goto end;",
          "1581:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e118487fee21ebdd959fe514be6b5c121462e272",
      "candidate_info": {
        "commit_hash": "e118487fee21ebdd959fe514be6b5c121462e272",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/e118487fee21ebdd959fe514be6b5c121462e272",
        "files": [
          "ssl/ssl_stat.c"
        ],
        "message": "Fix errors in SSL_state_string_long\n\nTLS_ST_SR_NEXT_PROTO means \"SSLv3/TLS read next proto\"\nFix typo in the message for TLS_ST_SW_CERT_STATUS\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4054)\n\n(cherry picked from commit f978f2b8af576ed1d9409de440b5c1f97ac0e7ab)",
        "before_after_code_files": [
          "ssl/ssl_stat.c||ssl/ssl_stat.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/ssl_stat.c||ssl/ssl_stat.c": [
          "File: ssl/ssl_stat.c -> ssl/ssl_stat.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:     case TLS_ST_CW_NEXT_PROTO:",
          "49:         return \"SSLv3/TLS write next proto\";",
          "50:     case TLS_ST_SR_NEXT_PROTO:",
          "52:     case TLS_ST_SW_CERT_STATUS:",
          "54:     case TLS_ST_BEFORE:",
          "55:         return \"before SSL initialization\";",
          "56:     case TLS_ST_OK:",
          "",
          "[Removed Lines]",
          "51:         return \"SSLv3/TLS write next proto\";",
          "53:         return \"SSLv3/TLS write next proto\";",
          "",
          "[Added Lines]",
          "51:         return \"SSLv3/TLS read next proto\";",
          "53:         return \"SSLv3/TLS write certificate status\";",
          "",
          "---------------"
        ]
      }
    }
  ]
}