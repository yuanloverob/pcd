{
  "cve_id": "CVE-2019-12818",
  "cve_desc": "An issue was discovered in the Linux kernel before 4.20.15. The nfc_llcp_build_tlv function in net/nfc/llcp_commands.c may return NULL. If the caller does not check for this, it will trigger a NULL pointer dereference. This will cause denial of service. This affects nfc_llcp_build_gb in net/nfc/llcp_core.c.",
  "repo": "torvalds/linux",
  "patch_hash": "58bdd544e2933a21a51eecf17c3f5f94038261b5",
  "patch_info": {
    "commit_hash": "58bdd544e2933a21a51eecf17c3f5f94038261b5",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/58bdd544e2933a21a51eecf17c3f5f94038261b5",
    "files": [
      "net/nfc/llcp_commands.c",
      "net/nfc/llcp_core.c"
    ],
    "message": "net: nfc: Fix NULL dereference on nfc_llcp_build_tlv fails\n\nKASAN report this:\n\nBUG: KASAN: null-ptr-deref in nfc_llcp_build_gb+0x37f/0x540 [nfc]\nRead of size 3 at addr 0000000000000000 by task syz-executor.0/5401\n\nCPU: 0 PID: 5401 Comm: syz-executor.0 Not tainted 5.0.0-rc7+ #45\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014\nCall Trace:\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0xfa/0x1ce lib/dump_stack.c:113\n kasan_report+0x171/0x18d mm/kasan/report.c:321\n memcpy+0x1f/0x50 mm/kasan/common.c:130\n nfc_llcp_build_gb+0x37f/0x540 [nfc]\n nfc_llcp_register_device+0x6eb/0xb50 [nfc]\n nfc_register_device+0x50/0x1d0 [nfc]\n nfcsim_device_new+0x394/0x67d [nfcsim]\n ? 0xffffffffc1080000\n nfcsim_init+0x6b/0x1000 [nfcsim]\n do_one_initcall+0xfa/0x5ca init/main.c:887\n do_init_module+0x204/0x5f6 kernel/module.c:3460\n load_module+0x66b2/0x8570 kernel/module.c:3808\n __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\nRIP: 0033:0x462e99\nCode: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f9cb79dcc58 EFLAGS: 00000246 ORIG_RAX: 0000000000000139\nRAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462e99\nRDX: 0000000000000000 RSI: 0000000020000280 RDI: 0000000000000003\nRBP: 00007f9cb79dcc70 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007f9cb79dd6bc\nR13: 00000000004bcefb R14: 00000000006f7030 R15: 0000000000000004\n\nnfc_llcp_build_tlv will return NULL on fails, caller should check it,\notherwise will trigger a NULL dereference.\n\nReported-by: Hulk Robot <hulkci@huawei.com>\nFixes: eda21f16a5ed (\"NFC: Set MIU and RW values from CONNECT and CC LLCP frames\")\nFixes: d646960f7986 (\"NFC: Initial LLCP support\")\nSigned-off-by: YueHaibing <yuehaibing@huawei.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "before_after_code_files": [
      "net/nfc/llcp_commands.c||net/nfc/llcp_commands.c",
      "net/nfc/llcp_core.c||net/nfc/llcp_core.c"
    ]
  },
  "patch_diff": {
    "net/nfc/llcp_commands.c||net/nfc/llcp_commands.c": [
      "File: net/nfc/llcp_commands.c -> net/nfc/llcp_commands.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "419:             sock->service_name,",
      "420:             sock->service_name_len,",
      "421:             &service_name_tlv_length);",
      "422:   size += service_name_tlv_length;",
      "423:  }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "422:   if (!service_name_tlv) {",
      "423:    err = -ENOMEM;",
      "424:    goto error_tlv;",
      "425:   }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "430:  miux_tlv = nfc_llcp_build_tlv(LLCP_TLV_MIUX, (u8 *)&miux, 0,",
      "431:           &miux_tlv_length);",
      "432:  size += miux_tlv_length;",
      "434:  rw_tlv = nfc_llcp_build_tlv(LLCP_TLV_RW, &rw, 0, &rw_tlv_length);",
      "435:  size += rw_tlv_length;",
      "437:  pr_debug(\"SKB size %d SN length %zu\\n\", size, sock->service_name_len);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "436:  if (!miux_tlv) {",
      "437:   err = -ENOMEM;",
      "438:   goto error_tlv;",
      "439:  }",
      "443:  if (!rw_tlv) {",
      "444:   err = -ENOMEM;",
      "445:   goto error_tlv;",
      "446:  }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "485:  miux_tlv = nfc_llcp_build_tlv(LLCP_TLV_MIUX, (u8 *)&miux, 0,",
      "486:           &miux_tlv_length);",
      "487:  size += miux_tlv_length;",
      "489:  rw_tlv = nfc_llcp_build_tlv(LLCP_TLV_RW, &rw, 0, &rw_tlv_length);",
      "490:  size += rw_tlv_length;",
      "492:  skb = llcp_allocate_pdu(sock, LLCP_PDU_CC, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "499:  if (!miux_tlv) {",
      "500:   err = -ENOMEM;",
      "501:   goto error_tlv;",
      "502:  }",
      "506:  if (!rw_tlv) {",
      "507:   err = -ENOMEM;",
      "508:   goto error_tlv;",
      "509:  }",
      "",
      "---------------"
    ],
    "net/nfc/llcp_core.c||net/nfc/llcp_core.c": [
      "File: net/nfc/llcp_core.c -> net/nfc/llcp_core.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "533: static int nfc_llcp_build_gb(struct nfc_llcp_local *local)",
      "534: {",
      "539:  __be16 wks = cpu_to_be16(local->local_wks);",
      "540:  u8 gb_len = 0;",
      "541:  int ret = 0;",
      "",
      "[Removed Lines]",
      "535:  u8 *gb_cur, *version_tlv, version, version_length;",
      "536:  u8 *lto_tlv, lto_length;",
      "537:  u8 *wks_tlv, wks_length;",
      "538:  u8 *miux_tlv, miux_length;",
      "",
      "[Added Lines]",
      "535:  u8 *gb_cur, version, version_length;",
      "536:  u8 lto_length, wks_length, miux_length;",
      "537:  u8 *version_tlv = NULL, *lto_tlv = NULL,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "543:  version = LLCP_VERSION_11;",
      "544:  version_tlv = nfc_llcp_build_tlv(LLCP_TLV_VERSION, &version,",
      "545:       1, &version_length);",
      "546:  gb_len += version_length;",
      "548:  lto_tlv = nfc_llcp_build_tlv(LLCP_TLV_LTO, &local->lto, 1, &lto_length);",
      "549:  gb_len += lto_length;",
      "551:  pr_debug(\"Local wks 0x%lx\\n\", local->local_wks);",
      "552:  wks_tlv = nfc_llcp_build_tlv(LLCP_TLV_WKS, (u8 *)&wks, 2, &wks_length);",
      "553:  gb_len += wks_length;",
      "555:  miux_tlv = nfc_llcp_build_tlv(LLCP_TLV_MIUX, (u8 *)&local->miux, 0,",
      "556:           &miux_length);",
      "557:  gb_len += miux_length;",
      "559:  gb_len += ARRAY_SIZE(llcp_magic);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "546:  if (!version_tlv) {",
      "547:   ret = -ENOMEM;",
      "548:   goto out;",
      "549:  }",
      "553:  if (!lto_tlv) {",
      "554:   ret = -ENOMEM;",
      "555:   goto out;",
      "556:  }",
      "561:  if (!wks_tlv) {",
      "562:   ret = -ENOMEM;",
      "563:   goto out;",
      "564:  }",
      "569:  if (!miux_tlv) {",
      "570:   ret = -ENOMEM;",
      "571:   goto out;",
      "572:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6ff7b060535e87c2ae14dd8548512abfdda528fb",
      "candidate_info": {
        "commit_hash": "6ff7b060535e87c2ae14dd8548512abfdda528fb",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/6ff7b060535e87c2ae14dd8548512abfdda528fb",
        "files": [
          "drivers/net/phy/mdio_bus.c"
        ],
        "message": "mdio_bus: Fix use-after-free on device_register fails\n\nKASAN has found use-after-free in fixed_mdio_bus_init,\ncommit 0c692d07842a (\"drivers/net/phy/mdio_bus.c: call\nput_device on device_register() failure\") call put_device()\nwhile device_register() fails,give up the last reference\nto the device and allow mdiobus_release to be executed\n,kfreeing the bus. However in most drives, mdiobus_free\nbe called to free the bus while mdiobus_register fails.\nuse-after-free occurs when access bus again, this patch\nrevert it to let mdiobus_free free the bus.\n\nKASAN report details as below:\n\nBUG: KASAN: use-after-free in mdiobus_free+0x85/0x90 drivers/net/phy/mdio_bus.c:482\nRead of size 4 at addr ffff8881dc824d78 by task syz-executor.0/3524\n\nCPU: 1 PID: 3524 Comm: syz-executor.0 Not tainted 5.0.0-rc7+ #45\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014\nCall Trace:\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0xfa/0x1ce lib/dump_stack.c:113\n print_address_description+0x65/0x270 mm/kasan/report.c:187\n kasan_report+0x149/0x18d mm/kasan/report.c:317\n mdiobus_free+0x85/0x90 drivers/net/phy/mdio_bus.c:482\n fixed_mdio_bus_init+0x283/0x1000 [fixed_phy]\n ? 0xffffffffc0e40000\n ? 0xffffffffc0e40000\n ? 0xffffffffc0e40000\n do_one_initcall+0xfa/0x5ca init/main.c:887\n do_init_module+0x204/0x5f6 kernel/module.c:3460\n load_module+0x66b2/0x8570 kernel/module.c:3808\n __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\nRIP: 0033:0x462e99\nCode: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f6215c19c58 EFLAGS: 00000246 ORIG_RAX: 0000000000000139\nRAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462e99\nRDX: 0000000000000000 RSI: 0000000020000080 RDI: 0000000000000003\nRBP: 00007f6215c19c70 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007f6215c1a6bc\nR13: 00000000004bcefb R14: 00000000006f7030 R15: 0000000000000004\n\nAllocated by task 3524:\n set_track mm/kasan/common.c:85 [inline]\n __kasan_kmalloc.constprop.3+0xa0/0xd0 mm/kasan/common.c:496\n kmalloc include/linux/slab.h:545 [inline]\n kzalloc include/linux/slab.h:740 [inline]\n mdiobus_alloc_size+0x54/0x1b0 drivers/net/phy/mdio_bus.c:143\n fixed_mdio_bus_init+0x163/0x1000 [fixed_phy]\n do_one_initcall+0xfa/0x5ca init/main.c:887\n do_init_module+0x204/0x5f6 kernel/module.c:3460\n load_module+0x66b2/0x8570 kernel/module.c:3808\n __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nFreed by task 3524:\n set_track mm/kasan/common.c:85 [inline]\n __kasan_slab_free+0x130/0x180 mm/kasan/common.c:458\n slab_free_hook mm/slub.c:1409 [inline]\n slab_free_freelist_hook mm/slub.c:1436 [inline]\n slab_free mm/slub.c:2986 [inline]\n kfree+0xe1/0x270 mm/slub.c:3938\n device_release+0x78/0x200 drivers/base/core.c:919\n kobject_cleanup lib/kobject.c:662 [inline]\n kobject_release lib/kobject.c:691 [inline]\n kref_put include/linux/kref.h:67 [inline]\n kobject_put+0x146/0x240 lib/kobject.c:708\n put_device+0x1c/0x30 drivers/base/core.c:2060\n __mdiobus_register+0x483/0x560 drivers/net/phy/mdio_bus.c:382\n fixed_mdio_bus_init+0x26b/0x1000 [fixed_phy]\n do_one_initcall+0xfa/0x5ca init/main.c:887\n do_init_module+0x204/0x5f6 kernel/module.c:3460\n load_module+0x66b2/0x8570 kernel/module.c:3808\n __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nThe buggy address belongs to the object at ffff8881dc824c80\n which belongs to the cache kmalloc-2k of size 2048\nThe buggy address is located 248 bytes inside of\n 2048-byte region [ffff8881dc824c80, ffff8881dc825480)\nThe buggy address belongs to the page:\npage:ffffea0007720800 count:1 mapcount:0 mapping:ffff8881f6c02800 index:0x0 compound_mapcount: 0\nflags: 0x2fffc0000010200(slab|head)\nraw: 02fffc0000010200 0000000000000000 0000000500000001 ffff8881f6c02800\nraw: 0000000000000000 00000000800f000f 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n ffff8881dc824c00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n ffff8881dc824c80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n>ffff8881dc824d00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n                                                                ^\n ffff8881dc824d80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n ffff8881dc824e00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n\nFixes: 0c692d07842a (\"drivers/net/phy/mdio_bus.c: call put_device on device_register() failure\")\nSigned-off-by: YueHaibing <yuehaibing@huawei.com>\nReviewed-by: Andrew Lunn <andrew@lunn.ch>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "drivers/net/phy/mdio_bus.c||drivers/net/phy/mdio_bus.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/net/phy/mdio_bus.c||drivers/net/phy/mdio_bus.c": [
          "File: drivers/net/phy/mdio_bus.c -> drivers/net/phy/mdio_bus.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "379:  err = device_register(&bus->dev);",
          "380:  if (err) {",
          "381:   pr_err(\"mii_bus %s failed to register\\n\", bus->id);",
          "383:   return -EINVAL;",
          "384:  }",
          "",
          "[Removed Lines]",
          "382:   put_device(&bus->dev);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6377f787aeb945cae7abbb6474798de129e1f3ac",
      "candidate_info": {
        "commit_hash": "6377f787aeb945cae7abbb6474798de129e1f3ac",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/6377f787aeb945cae7abbb6474798de129e1f3ac",
        "files": [
          "include/linux/atalk.h",
          "net/appletalk/atalk_proc.c",
          "net/appletalk/ddp.c",
          "net/appletalk/sysctl_net_atalk.c"
        ],
        "message": "appletalk: Fix use-after-free in atalk_proc_exit\n\nKASAN report this:\n\nBUG: KASAN: use-after-free in pde_subdir_find+0x12d/0x150 fs/proc/generic.c:71\nRead of size 8 at addr ffff8881f41fe5b0 by task syz-executor.0/2806\n\nCPU: 0 PID: 2806 Comm: syz-executor.0 Not tainted 5.0.0-rc7+ #45\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014\nCall Trace:\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0xfa/0x1ce lib/dump_stack.c:113\n print_address_description+0x65/0x270 mm/kasan/report.c:187\n kasan_report+0x149/0x18d mm/kasan/report.c:317\n pde_subdir_find+0x12d/0x150 fs/proc/generic.c:71\n remove_proc_entry+0xe8/0x420 fs/proc/generic.c:667\n atalk_proc_exit+0x18/0x820 [appletalk]\n atalk_exit+0xf/0x5a [appletalk]\n __do_sys_delete_module kernel/module.c:1018 [inline]\n __se_sys_delete_module kernel/module.c:961 [inline]\n __x64_sys_delete_module+0x3dc/0x5e0 kernel/module.c:961\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\nRIP: 0033:0x462e99\nCode: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fb2de6b9c58 EFLAGS: 00000246 ORIG_RAX: 00000000000000b0\nRAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462e99\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: 00000000200001c0\nRBP: 0000000000000002 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007fb2de6ba6bc\nR13: 00000000004bccaa R14: 00000000006f6bc8 R15: 00000000ffffffff\n\nAllocated by task 2806:\n set_track mm/kasan/common.c:85 [inline]\n __kasan_kmalloc.constprop.3+0xa0/0xd0 mm/kasan/common.c:496\n slab_post_alloc_hook mm/slab.h:444 [inline]\n slab_alloc_node mm/slub.c:2739 [inline]\n slab_alloc mm/slub.c:2747 [inline]\n kmem_cache_alloc+0xcf/0x250 mm/slub.c:2752\n kmem_cache_zalloc include/linux/slab.h:730 [inline]\n __proc_create+0x30f/0xa20 fs/proc/generic.c:408\n proc_mkdir_data+0x47/0x190 fs/proc/generic.c:469\n 0xffffffffc10c01bb\n 0xffffffffc10c0166\n do_one_initcall+0xfa/0x5ca init/main.c:887\n do_init_module+0x204/0x5f6 kernel/module.c:3460\n load_module+0x66b2/0x8570 kernel/module.c:3808\n __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nFreed by task 2806:\n set_track mm/kasan/common.c:85 [inline]\n __kasan_slab_free+0x130/0x180 mm/kasan/common.c:458\n slab_free_hook mm/slub.c:1409 [inline]\n slab_free_freelist_hook mm/slub.c:1436 [inline]\n slab_free mm/slub.c:2986 [inline]\n kmem_cache_free+0xa6/0x2a0 mm/slub.c:3002\n pde_put+0x6e/0x80 fs/proc/generic.c:647\n remove_proc_entry+0x1d3/0x420 fs/proc/generic.c:684\n 0xffffffffc10c031c\n 0xffffffffc10c0166\n do_one_initcall+0xfa/0x5ca init/main.c:887\n do_init_module+0x204/0x5f6 kernel/module.c:3460\n load_module+0x66b2/0x8570 kernel/module.c:3808\n __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nThe buggy address belongs to the object at ffff8881f41fe500\n which belongs to the cache proc_dir_entry of size 256\nThe buggy address is located 176 bytes inside of\n 256-byte region [ffff8881f41fe500, ffff8881f41fe600)\nThe buggy address belongs to the page:\npage:ffffea0007d07f80 count:1 mapcount:0 mapping:ffff8881f6e69a00 index:0x0\nflags: 0x2fffc0000000200(slab)\nraw: 02fffc0000000200 dead000000000100 dead000000000200 ffff8881f6e69a00\nraw: 0000000000000000 00000000800c000c 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n ffff8881f41fe480: fb fb fb fb fb fb fb fb fc fc fc fc fc fc fc fc\n ffff8881f41fe500: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n>ffff8881f41fe580: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n                                     ^\n ffff8881f41fe600: fc fc fc fc fc fc fc fc fb fb fb fb fb fb fb fb\n ffff8881f41fe680: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n\nIt should check the return value of atalk_proc_init fails,\notherwise atalk_exit will trgger use-after-free in pde_subdir_find\nwhile unload the module.This patch fix error cleanup path of atalk_init\n\nReported-by: Hulk Robot <hulkci@huawei.com>\nSigned-off-by: YueHaibing <yuehaibing@huawei.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "include/linux/atalk.h||include/linux/atalk.h",
          "net/appletalk/atalk_proc.c||net/appletalk/atalk_proc.c",
          "net/appletalk/ddp.c||net/appletalk/ddp.c",
          "net/appletalk/sysctl_net_atalk.c||net/appletalk/sysctl_net_atalk.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/linux/atalk.h||include/linux/atalk.h": [
          "File: include/linux/atalk.h -> include/linux/atalk.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "158: extern int sysctl_aarp_resolve_time;",
          "160: #ifdef CONFIG_SYSCTL",
          "162: extern void atalk_unregister_sysctl(void);",
          "163: #else",
          "164: #define atalk_register_sysctl()  do { } while(0)",
          "",
          "[Removed Lines]",
          "161: extern void atalk_register_sysctl(void);",
          "",
          "[Added Lines]",
          "161: extern int atalk_register_sysctl(void);",
          "",
          "---------------"
        ],
        "net/appletalk/atalk_proc.c||net/appletalk/atalk_proc.c": [
          "File: net/appletalk/atalk_proc.c -> net/appletalk/atalk_proc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "237:  return -ENOMEM;",
          "238: }",
          "241: {",
          "242:  remove_proc_subtree(\"atalk\", init_net.proc_net);",
          "243: }",
          "",
          "[Removed Lines]",
          "240: void __exit atalk_proc_exit(void)",
          "",
          "[Added Lines]",
          "240: void atalk_proc_exit(void)",
          "",
          "---------------"
        ],
        "net/appletalk/ddp.c||net/appletalk/ddp.c": [
          "File: net/appletalk/ddp.c -> net/appletalk/ddp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1911: static int __init atalk_init(void)",
          "1912: {",
          "1916:   goto out;",
          "1919:  ddp_dl = register_snap_client(ddp_snap_id, atalk_rcv);",
          "1920:  if (!ddp_dl)",
          "1921:   printk(atalk_err_snap);",
          "",
          "[Removed Lines]",
          "1913:  int rc = proto_register(&ddp_proto, 0);",
          "1915:  if (rc != 0)",
          "1918:  (void)sock_register(&atalk_family_ops);",
          "",
          "[Added Lines]",
          "1913:  int rc;",
          "1915:  rc = proto_register(&ddp_proto, 0);",
          "1916:  if (rc)",
          "1919:  rc = sock_register(&atalk_family_ops);",
          "1920:  if (rc)",
          "1921:   goto out_proto;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1923:  dev_add_pack(&ltalk_packet_type);",
          "1924:  dev_add_pack(&ppptalk_packet_type);",
          "1927:  aarp_proto_init();",
          "1930: out:",
          "1931:  return rc;",
          "1932: }",
          "1933: module_init(atalk_init);",
          "",
          "[Removed Lines]",
          "1926:  register_netdevice_notifier(&ddp_notifier);",
          "1928:  atalk_proc_init();",
          "1929:  atalk_register_sysctl();",
          "",
          "[Added Lines]",
          "1930:  rc = register_netdevice_notifier(&ddp_notifier);",
          "1931:  if (rc)",
          "1932:   goto out_sock;",
          "1935:  rc = atalk_proc_init();",
          "1936:  if (rc)",
          "1937:   goto out_aarp;",
          "1939:  rc = atalk_register_sysctl();",
          "1940:  if (rc)",
          "1941:   goto out_proc;",
          "1944: out_proc:",
          "1945:  atalk_proc_exit();",
          "1946: out_aarp:",
          "1947:  aarp_cleanup_module();",
          "1948:  unregister_netdevice_notifier(&ddp_notifier);",
          "1949: out_sock:",
          "1950:  dev_remove_pack(&ppptalk_packet_type);",
          "1951:  dev_remove_pack(&ltalk_packet_type);",
          "1952:  unregister_snap_client(ddp_dl);",
          "1953:  sock_unregister(PF_APPLETALK);",
          "1954: out_proto:",
          "1955:  proto_unregister(&ddp_proto);",
          "1956:  goto out;",
          "",
          "---------------"
        ],
        "net/appletalk/sysctl_net_atalk.c||net/appletalk/sysctl_net_atalk.c": [
          "File: net/appletalk/sysctl_net_atalk.c -> net/appletalk/sysctl_net_atalk.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: static struct ctl_table_header *atalk_table_header;",
          "49: {",
          "50:  atalk_table_header = register_net_sysctl(&init_net, \"net/appletalk\", atalk_table);",
          "51: }",
          "53: void atalk_unregister_sysctl(void)",
          "",
          "[Removed Lines]",
          "48: void atalk_register_sysctl(void)",
          "",
          "[Added Lines]",
          "48: int __init atalk_register_sysctl(void)",
          "51:  if (!atalk_table_header)",
          "52:   return -ENOMEM;",
          "53:  return 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}