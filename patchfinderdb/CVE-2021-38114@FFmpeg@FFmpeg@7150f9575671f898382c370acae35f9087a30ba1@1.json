{
  "cve_id": "CVE-2021-38114",
  "cve_desc": "libavcodec/dnxhddec.c in FFmpeg 4.4 does not check the return value of the init_vlc function, a similar issue to CVE-2013-0868.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "7150f9575671f898382c370acae35f9087a30ba1",
  "patch_info": {
    "commit_hash": "7150f9575671f898382c370acae35f9087a30ba1",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/7150f9575671f898382c370acae35f9087a30ba1",
    "files": [
      "libavcodec/dnxhddec.c"
    ],
    "message": "avcodec/dnxhddec: check and propagate function return value\n\nSimilar to CVE-2013-0868, here return value check for 'init_vlc' is needed.\ncrafted DNxHD data can cause unspecified impact.\n\nReviewed-by: Paul B Mahol <onemda@gmail.com>\nSigned-off-by: James Almer <jamrial@gmail.com>",
    "before_after_code_files": [
      "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c"
    ]
  },
  "patch_diff": {
    "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c": [
      "File: libavcodec/dnxhddec.c -> libavcodec/dnxhddec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "113: static int dnxhd_init_vlc(DNXHDContext *ctx, uint32_t cid, int bitdepth)",
      "114: {",
      "115:     if (cid != ctx->cid) {",
      "116:         const CIDEntry *cid_table = ff_dnxhd_get_cid_table(cid);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "115:     int ret;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "132:         ff_free_vlc(&ctx->dc_vlc);",
      "133:         ff_free_vlc(&ctx->run_vlc);",
      "136:                  ctx->cid_table->ac_bits, 1, 1,",
      "139:                  ctx->cid_table->dc_bits, 1, 1,",
      "142:                  ctx->cid_table->run_bits, 1, 1,",
      "145:         ctx->cid = cid;",
      "146:     }",
      "148: }",
      "150: static int dnxhd_get_profile(int cid)",
      "",
      "[Removed Lines]",
      "135:         init_vlc(&ctx->ac_vlc, DNXHD_VLC_BITS, 257,",
      "137:                  ctx->cid_table->ac_codes, 2, 2, 0);",
      "138:         init_vlc(&ctx->dc_vlc, DNXHD_DC_VLC_BITS, bitdepth > 8 ? 14 : 12,",
      "140:                  ctx->cid_table->dc_codes, 1, 1, 0);",
      "141:         init_vlc(&ctx->run_vlc, DNXHD_VLC_BITS, 62,",
      "143:                  ctx->cid_table->run_codes, 2, 2, 0);",
      "147:     return 0;",
      "",
      "[Added Lines]",
      "136:         if ((ret = init_vlc(&ctx->ac_vlc, DNXHD_VLC_BITS, 257,",
      "138:                  ctx->cid_table->ac_codes, 2, 2, 0)) < 0)",
      "139:             goto out;",
      "140:         if ((ret = init_vlc(&ctx->dc_vlc, DNXHD_DC_VLC_BITS, bitdepth > 8 ? 14 : 12,",
      "142:                  ctx->cid_table->dc_codes, 1, 1, 0)) < 0)",
      "143:             goto out;",
      "144:         if ((ret = init_vlc(&ctx->run_vlc, DNXHD_VLC_BITS, 62,",
      "146:                  ctx->cid_table->run_codes, 2, 2, 0)) < 0)",
      "147:             goto out;",
      "151:     ret = 0;",
      "152: out:",
      "153:     if (ret < 0)",
      "154:         av_log(ctx->avctx, AV_LOG_ERROR, \"init_vlc failed\\n\");",
      "155:     return ret;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "796a84fd047099ba25329ee2c420d11709ebe8b1",
      "candidate_info": {
        "commit_hash": "796a84fd047099ba25329ee2c420d11709ebe8b1",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/796a84fd047099ba25329ee2c420d11709ebe8b1",
        "files": [
          "libavcodec/dnxhddec.c"
        ],
        "message": "avcodec/dnxhddec: check and propagate function return value\n\nSimilar to CVE-2013-0868, here return value check for 'init_vlc' is needed.\ncrafted DNxHD data can cause unspecified impact.\n\nReviewed-by: Paul B Mahol <onemda@gmail.com>\nSigned-off-by: James Almer <jamrial@gmail.com>\n(cherry picked from commit 7150f9575671f898382c370acae35f9087a30ba1)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c"
          ],
          "candidate": [
            "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c": [
          "File: libavcodec/dnxhddec.c -> libavcodec/dnxhddec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "112: static int dnxhd_init_vlc(DNXHDContext *ctx, uint32_t cid, int bitdepth)",
          "113: {",
          "114:     if (cid != ctx->cid) {",
          "115:         int index;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "114:     int ret;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "130:         ff_free_vlc(&ctx->dc_vlc);",
          "131:         ff_free_vlc(&ctx->run_vlc);",
          "134:                  ctx->cid_table->ac_bits, 1, 1,",
          "137:                  ctx->cid_table->dc_bits, 1, 1,",
          "140:                  ctx->cid_table->run_bits, 1, 1,",
          "143:         ctx->cid = cid;",
          "144:     }",
          "146: }",
          "148: static av_cold int dnxhd_decode_init_thread_copy(AVCodecContext *avctx)",
          "",
          "[Removed Lines]",
          "133:         init_vlc(&ctx->ac_vlc, DNXHD_VLC_BITS, 257,",
          "135:                  ctx->cid_table->ac_codes, 2, 2, 0);",
          "136:         init_vlc(&ctx->dc_vlc, DNXHD_DC_VLC_BITS, bitdepth > 8 ? 14 : 12,",
          "138:                  ctx->cid_table->dc_codes, 1, 1, 0);",
          "139:         init_vlc(&ctx->run_vlc, DNXHD_VLC_BITS, 62,",
          "141:                  ctx->cid_table->run_codes, 2, 2, 0);",
          "145:     return 0;",
          "",
          "[Added Lines]",
          "134:         if ((ret = init_vlc(&ctx->ac_vlc, DNXHD_VLC_BITS, 257,",
          "136:                  ctx->cid_table->ac_codes, 2, 2, 0)) < 0)",
          "137:             goto out;",
          "138:         if ((ret = init_vlc(&ctx->dc_vlc, DNXHD_DC_VLC_BITS, bitdepth > 8 ? 14 : 12,",
          "140:                  ctx->cid_table->dc_codes, 1, 1, 0)) < 0)",
          "141:             goto out;",
          "142:         if ((ret = init_vlc(&ctx->run_vlc, DNXHD_VLC_BITS, 62,",
          "144:                  ctx->cid_table->run_codes, 2, 2, 0)) < 0)",
          "145:             goto out;",
          "149:     ret = 0;",
          "150: out:",
          "151:     if (ret < 0)",
          "152:         av_log(ctx->avctx, AV_LOG_ERROR, \"init_vlc failed\\n\");",
          "153:     return ret;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7c455ee86a79b54857361e2a6eaf8a23783eaf3b",
      "candidate_info": {
        "commit_hash": "7c455ee86a79b54857361e2a6eaf8a23783eaf3b",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/7c455ee86a79b54857361e2a6eaf8a23783eaf3b",
        "files": [
          "libavcodec/dnxhddec.c"
        ],
        "message": "avcodec/dnxhddec: check and propagate function return value\n\nSimilar to CVE-2013-0868, here return value check for 'init_vlc' is needed.\ncrafted DNxHD data can cause unspecified impact.\n\nReviewed-by: Paul B Mahol <onemda@gmail.com>\nSigned-off-by: James Almer <jamrial@gmail.com>\n(cherry picked from commit 7150f9575671f898382c370acae35f9087a30ba1)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c"
          ],
          "candidate": [
            "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/dnxhddec.c||libavcodec/dnxhddec.c": [
          "File: libavcodec/dnxhddec.c -> libavcodec/dnxhddec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "111: static int dnxhd_init_vlc(DNXHDContext *ctx, uint32_t cid, int bitdepth)",
          "112: {",
          "113:     if (cid != ctx->cid) {",
          "114:         int index;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "113:     int ret;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "129:         ff_free_vlc(&ctx->dc_vlc);",
          "130:         ff_free_vlc(&ctx->run_vlc);",
          "133:                  ctx->cid_table->ac_bits, 1, 1,",
          "136:                  ctx->cid_table->dc_bits, 1, 1,",
          "139:                  ctx->cid_table->run_bits, 1, 1,",
          "142:         ctx->cid = cid;",
          "143:     }",
          "145: }",
          "147: static int dnxhd_get_profile(int cid)",
          "",
          "[Removed Lines]",
          "132:         init_vlc(&ctx->ac_vlc, DNXHD_VLC_BITS, 257,",
          "134:                  ctx->cid_table->ac_codes, 2, 2, 0);",
          "135:         init_vlc(&ctx->dc_vlc, DNXHD_DC_VLC_BITS, bitdepth > 8 ? 14 : 12,",
          "137:                  ctx->cid_table->dc_codes, 1, 1, 0);",
          "138:         init_vlc(&ctx->run_vlc, DNXHD_VLC_BITS, 62,",
          "140:                  ctx->cid_table->run_codes, 2, 2, 0);",
          "144:     return 0;",
          "",
          "[Added Lines]",
          "133:         if ((ret = init_vlc(&ctx->ac_vlc, DNXHD_VLC_BITS, 257,",
          "135:                  ctx->cid_table->ac_codes, 2, 2, 0)) < 0)",
          "136:             goto out;",
          "137:         if ((ret = init_vlc(&ctx->dc_vlc, DNXHD_DC_VLC_BITS, bitdepth > 8 ? 14 : 12,",
          "139:                  ctx->cid_table->dc_codes, 1, 1, 0)) < 0)",
          "140:             goto out;",
          "141:         if ((ret = init_vlc(&ctx->run_vlc, DNXHD_VLC_BITS, 62,",
          "143:                  ctx->cid_table->run_codes, 2, 2, 0)) < 0)",
          "144:             goto out;",
          "148:     ret = 0;",
          "149: out:",
          "150:     if (ret < 0)",
          "151:         av_log(ctx->avctx, AV_LOG_ERROR, \"init_vlc failed\\n\");",
          "152:     return ret;",
          "",
          "---------------"
        ]
      }
    }
  ]
}