{
  "cve_id": "CVE-2014-3571",
  "cve_desc": "OpenSSL before 0.9.8zd, 1.0.0 before 1.0.0p, and 1.0.1 before 1.0.1k allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a crafted DTLS message that is processed with a different read operation for the handshake header than for the handshake body, related to the dtls1_get_record function in d1_pkt.c and the ssl3_read_n function in s3_pkt.c.",
  "repo": "openssl/openssl",
  "patch_hash": "248385c606620b29ecc96ca9d3603463f879652b",
  "patch_info": {
    "commit_hash": "248385c606620b29ecc96ca9d3603463f879652b",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/248385c606620b29ecc96ca9d3603463f879652b",
    "files": [
      "ssl/d1_pkt.c"
    ],
    "message": "Follow on from CVE-2014-3571. This fixes the code that was the original source of the crash due to p being NULL. Steve's fix prevents this situation from occuring - however this is by no means obvious by looking at the code for dtls1_get_record. This fix just makes things look a bit more sane.\n\nReviewed-by: Dr Stephen Henson <steve@openssl.org>",
    "before_after_code_files": [
      "ssl/d1_pkt.c||ssl/d1_pkt.c"
    ]
  },
  "patch_diff": {
    "ssl/d1_pkt.c||ssl/d1_pkt.c": [
      "File: ssl/d1_pkt.c -> ssl/d1_pkt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "681:   if (!(s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&",
      "683:       !dtls1_record_replay_check(s, bitmap))",
      "684:    {",
      "685:    rr->length = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "682:       s->packet_length > DTLS1_RT_HEADER_LENGTH &&",
      "683:       s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO) &&",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "50befdb659585b9840264c77708d2dc638624137",
      "candidate_info": {
        "commit_hash": "50befdb659585b9840264c77708d2dc638624137",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/50befdb659585b9840264c77708d2dc638624137",
        "files": [
          "ssl/d1_pkt.c"
        ],
        "message": "Follow on from CVE-2014-3571. This fixes the code that was the original source of the crash due to p being NULL. Steve's fix prevents this situation from occuring - however this is by no means obvious by looking at the code for dtls1_get_record. This fix just makes things look a bit more sane.\n\nConflicts:\n\tssl/d1_pkt.c\n\nReviewed-by: Dr Stephen Henson <steve@openssl.org>",
        "before_after_code_files": [
          "ssl/d1_pkt.c||ssl/d1_pkt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ssl/d1_pkt.c||ssl/d1_pkt.c"
          ],
          "candidate": [
            "ssl/d1_pkt.c||ssl/d1_pkt.c"
          ]
        }
      },
      "candidate_diff": {
        "ssl/d1_pkt.c||ssl/d1_pkt.c": [
          "File: ssl/d1_pkt.c -> ssl/d1_pkt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "626:  if (!(s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&",
          "628:   ! dtls1_record_replay_check(s, bitmap, &(rr->seq_num)))",
          "629:   {",
          "630:   rr->length = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "627:   s->packet_length > DTLS1_RT_HEADER_LENGTH &&",
          "628:   s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO) &&",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "45fe66b8ba026186aa5d8ef1e0e6010ea74d5c0b",
      "candidate_info": {
        "commit_hash": "45fe66b8ba026186aa5d8ef1e0e6010ea74d5c0b",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/45fe66b8ba026186aa5d8ef1e0e6010ea74d5c0b",
        "files": [
          "ssl/d1_pkt.c"
        ],
        "message": "Follow on from CVE-2014-3571. This fixes the code that was the original source of the crash due to p being NULL. Steve's fix prevents this situation from occuring - however this is by no means obvious by looking at the code for dtls1_get_record. This fix just makes things look a bit more sane.\n\nReviewed-by: Dr Steve Henson <steve@openssl.org>",
        "before_after_code_files": [
          "ssl/d1_pkt.c||ssl/d1_pkt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ssl/d1_pkt.c||ssl/d1_pkt.c"
          ],
          "candidate": [
            "ssl/d1_pkt.c||ssl/d1_pkt.c"
          ]
        }
      },
      "candidate_diff": {
        "ssl/d1_pkt.c||ssl/d1_pkt.c": [
          "File: ssl/d1_pkt.c -> ssl/d1_pkt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "678:   if (!(s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&",
          "680:       !dtls1_record_replay_check(s, bitmap))",
          "681:    {",
          "682:    rr->length = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "679:       s->packet_length > DTLS1_RT_HEADER_LENGTH &&",
          "680:       s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO) &&",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b2688c91613566db1f42edd4b45f6e17146531b9",
      "candidate_info": {
        "commit_hash": "b2688c91613566db1f42edd4b45f6e17146531b9",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b2688c91613566db1f42edd4b45f6e17146531b9",
        "files": [
          "ssl/d1_pkt.c"
        ],
        "message": "Follow on from CVE-2014-3571. This fixes the code that was the original source of the crash due to p being NULL. Steve's fix prevents this situation from occuring - however this is by no means obvious by looking at the code for dtls1_get_record. This fix just makes things look a bit more sane.\n\nConflicts:\n\tssl/d1_pkt.c\n\nReviewed-by: Dr Stephen Henson <steve@openssl.org>",
        "before_after_code_files": [
          "ssl/d1_pkt.c||ssl/d1_pkt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ssl/d1_pkt.c||ssl/d1_pkt.c"
          ],
          "candidate": [
            "ssl/d1_pkt.c||ssl/d1_pkt.c"
          ]
        }
      },
      "candidate_diff": {
        "ssl/d1_pkt.c||ssl/d1_pkt.c": [
          "File: ssl/d1_pkt.c -> ssl/d1_pkt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "665:  if (!(s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&",
          "667:   !dtls1_record_replay_check(s, bitmap))",
          "668:   {",
          "669:   rr->length = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "666:   s->packet_length > DTLS1_RT_HEADER_LENGTH &&",
          "667:   s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO) &&",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fb73f12a9cfc377e3046228cc69351a40716c396",
      "candidate_info": {
        "commit_hash": "fb73f12a9cfc377e3046228cc69351a40716c396",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/fb73f12a9cfc377e3046228cc69351a40716c396",
        "files": [
          "ssl/d1_pkt.c"
        ],
        "message": "Follow on from CVE-2014-3571. This fixes the code that was the original source of the crash due to p being NULL. Steve's fix prevents this situation from occuring - however this is by no means obvious by looking at the code for dtls1_get_record. This fix just makes things look a bit more sane.\n\nReviewed-by: Dr Stephen Henson <steve@openssl.org>",
        "before_after_code_files": [
          "ssl/d1_pkt.c||ssl/d1_pkt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ssl/d1_pkt.c||ssl/d1_pkt.c"
          ],
          "candidate": [
            "ssl/d1_pkt.c||ssl/d1_pkt.c"
          ]
        }
      },
      "candidate_diff": {
        "ssl/d1_pkt.c||ssl/d1_pkt.c": [
          "File: ssl/d1_pkt.c -> ssl/d1_pkt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "681:   if (!(s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&",
          "683:       !dtls1_record_replay_check(s, bitmap))",
          "684:    {",
          "685:    rr->length = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "682:       s->packet_length > DTLS1_RT_HEADER_LENGTH &&",
          "683:       s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO) &&",
          "",
          "---------------"
        ]
      }
    }
  ]
}