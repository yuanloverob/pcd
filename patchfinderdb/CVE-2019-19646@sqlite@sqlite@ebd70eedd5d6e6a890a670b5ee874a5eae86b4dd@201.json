{
  "cve_id": "CVE-2019-19646",
  "cve_desc": "pragma.c in SQLite through 3.30.1 mishandles NOT NULL in an integrity_check PRAGMA command in certain cases of generated columns.",
  "repo": "sqlite/sqlite",
  "patch_hash": "ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
  "patch_info": {
    "commit_hash": "ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/pragma.c",
      "test/gencol1.test"
    ],
    "message": "Fix the NOT NULL verification logic in PRAGMA integrity_check so that it works for generated columns whose value is the result of a comparison operator. Ticket [bd8c280671ba44a7]\n\nFossilOrigin-Name: f3b39c71b88cb6721f443de56cdce4c08252453a5e340b00a2bd88dc10c42400",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/pragma.c||src/pragma.c",
      "test/gencol1.test||test/gencol1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: e3398c5ffb060b2b26334b8598e2c63953741e2d6f5124dbd6bdfc8e94742539",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/pragma.c||src/pragma.c": [
      "File: src/pragma.c -> src/pragma.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1596:           if( j==pTab->iPKey ) continue;",
      "1597:           if( pTab->aCol[j].notNull==0 ) continue;",
      "1598:           sqlite3ExprCodeGetColumnOfTable(v, pTab, iDataCur, j, 3);",
      "1600:           jmp2 = sqlite3VdbeAddOp1(v, OP_NotNull, 3); VdbeCoverage(v);",
      "1601:           zErr = sqlite3MPrintf(db, \"NULL value in %s.%s\", pTab->zName,",
      "1602:                               pTab->aCol[j].zName);",
      "",
      "[Removed Lines]",
      "1599:           sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);",
      "",
      "[Added Lines]",
      "1599:           if( sqlite3VdbeGetOp(v,-1)->opcode==OP_Column ){",
      "1600:             sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);",
      "1601:           }",
      "",
      "---------------"
    ],
    "test/gencol1.test||test/gencol1.test": [
      "File: test/gencol1.test -> test/gencol1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "328:   INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0)",
      "329: } {1 {FOREIGN KEY constraint failed}}",
      "331: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "331: # 2019-12-09 ticket bd8c280671ba44a7",
      "332: # With generated columns, the sqlite3ExprGetColumnOfTable() routine might",
      "333: # generate a code sequence that does not end with OP_Column.  So check to",
      "334: # make sure that the last instruction generated is an OP_column prior to",
      "335: # applying the OPFLAG_TYPEOFARG optimization to NOT NULL checks in the",
      "336: # PRAGMA integrity_check code.",
      "337: #",
      "338: sqlite3 db :memory:",
      "339: do_execsql_test gencol1-12.10 {",
      "340:   CREATE TABLE t0 (c0, c1 NOT NULL AS (c0==0));",
      "341:   INSERT INTO t0(c0) VALUES (0);",
      "342:   PRAGMA integrity_check;",
      "343: } {ok}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9ebe59d6fffc2a4d6799d7c8e9c4071948291a33",
      "candidate_info": {
        "commit_hash": "9ebe59d6fffc2a4d6799d7c8e9c4071948291a33",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/9ebe59d6fffc2a4d6799d7c8e9c4071948291a33",
        "files": [
          "Makefile.in",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Update the configure-generated makekfile to generate a portable pkgIndex.tcl.\n\nFossilOrigin-Name: 35cbee7fe4a0b7ca06206ca2f69fc35abe3de4929070d6585ab765af82027438",
        "before_after_code_files": [
          "Makefile.in||Makefile.in",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.in||Makefile.in": [
          "File: Makefile.in -> Makefile.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1424:  $(INSTALL) -m 0644 sqlite3.pc $(DESTDIR)$(pkgconfigdir)",
          "1426: pkgIndex.tcl:",
          "1428: tcl_install: lib_install libtclsqlite3.la pkgIndex.tcl",
          "1429:  $(INSTALL) -d $(DESTDIR)$(TCLLIBDIR)",
          "1430:  $(LTINSTALL) libtclsqlite3.la $(DESTDIR)$(TCLLIBDIR)",
          "",
          "[Removed Lines]",
          "1427:  echo 'package ifneeded sqlite3 $(RELEASE) [list load $(TCLLIBDIR)/libtclsqlite3$(SHLIB_SUFFIX) sqlite3]' > $@",
          "",
          "[Added Lines]",
          "1427:  echo 'package ifneeded sqlite3 $(RELEASE) [list load [file join $$dir libtclsqlite3[info sharedlibextension]] sqlite3]' > $@",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 7c941ce5bcc872ec92cbe0e409fd773f44a5ab1f814e689ad57f756b911e2b96",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "512e46a74c20c0e385ee798a6e3238ba1cc621b8",
      "candidate_info": {
        "commit_hash": "512e46a74c20c0e385ee798a6e3238ba1cc621b8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/512e46a74c20c0e385ee798a6e3238ba1cc621b8",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid",
          "src/btree.c",
          "src/expr.c",
          "src/shell.c.in",
          "src/sqliteInt.h",
          "test/rowvalue7.test"
        ],
        "message": "Merge in recent fixes from trunk.\n\nFossilOrigin-Name: ad816d01d4bd3908ff2c574d79d1a29b6d732df308f2f1b1cdf7c0bc7c1bd7cf",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c",
          "src/expr.c||src/expr.c",
          "src/shell.c.in||src/shell.c.in",
          "src/sqliteInt.h||src/sqliteInt.h",
          "test/rowvalue7.test||test/rowvalue7.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4997:         Fts5PoslistWriter writer;",
          "4998:         memset(&writer, 0, sizeof(writer));",
          "5000:         fts5MergeAppendDocid(&out, iLastRowid, i2.iRowid);",
          "5001:         fts5BufferZero(&tmp);",
          "5003:         if( p->rc ) break;",
          "5005:         sqlite3Fts5PoslistNext64(a1, i1.nPoslist, &iOff1, &iPos1);",
          "",
          "[Removed Lines]",
          "5002:         sqlite3Fts5BufferSize(&p->rc, &tmp, i1.nPoslist + i2.nPoslist);",
          "",
          "[Added Lines]",
          "5005:         sqlite3Fts5BufferSize(&p->rc, &tmp, i1.nPoslist + i2.nPoslist + 10 + 10);",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "9367:   SELECT * FROM t1 WHERE b MATCH 'thead*thead*theSt*';",
          "9368: } {/*malformed database schema*/}",
          "9370: sqlite3_fts5_may_be_corrupt 0",
          "9371: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9370: #---------------------------------------------------------------------------",
          "9371: do_test 64.0 {",
          "9372:   sqlite3 db {}",
          "9373:   db deserialize [decode_hexdb {",
          "9374: .open --hexdb",
          "9375: | size 28672 pagesize 4096 filename crash-4470f0b94422f7.db",
          "9376: | page 1 offset 0",
          "9377: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "9378: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 06   .....@  ........",
          "9379: |     32: 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00 04   ................",
          "9380: |     96: 00 00 00 00 0d 00 00 00 06 0d e2 00 0f c4 0f 6a   ...............j",
          "9381: |    112: 0e fc 0e 9d 0e 3d 0d e2 00 00 00 00 00 01 00 00   .....=..........",
          "9382: |   3552: 00 00 59 06 06 17 21 21 01 7f 74 61 62 6c 65 74   ..Y...!!..tablet",
          "9383: |   3568: 74 74 5f 63 6f 6e 66 69 67 74 74 74 5f 63 6f 6e   tt_configttt_con",
          "9384: |   3584: 66 69 67 06 43 52 45 41 54 45 20 54 41 42 4c 45   fig.CREATE TABLE",
          "9385: |   3600: 20 27 74 74 74 5f 63 6f 6e 66 69 67 27 28 6b 20    'ttt_config'(k",
          "9386: |   3616: 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29 20   PRIMARY KEY, v)",
          "9387: |   3632: 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5e 05 07   WITHOUT ROWID^..",
          "9388: |   3648: 17 23 23 01 81 03 74 61 62 6c 65 74 74 74 5f 64   .##...tablettt_d",
          "9389: |   3664: 6f 63 73 69 7a 65 74 74 74 5f 64 6f 63 73 69 7a   ocsizettt_docsiz",
          "9390: |   3680: 65 05 43 52 45 41 54 45 20 54 41 42 4c 45 20 27   e.CREATE TABLE '",
          "9391: |   3696: 74 74 74 5f 64 6f 63 73 69 7a 65 27 28 69 64 20   ttt_docsize'(id",
          "9392: |   3712: 49 4e 54 45 47 45 52 20 50 52 49 4d 41 52 59 20   INTEGER PRIMARY",
          "9393: |   3728: 4b 45 59 2c 20 73 7a 20 42 4c 4f 42 29 5d 04 07   KEY, sz BLOB)]..",
          "9394: |   3744: 17 23 23 01 81 01 74 61 62 6c 65 74 74 74 5f 63   .##...tablettt_c",
          "9395: |   3760: 6f 6e 74 65 6e 74 74 74 74 5f 63 6f 6e 74 65 6e   ontentttt_conten",
          "9396: |   3776: 74 04 43 52 45 41 54 45 20 54 41 42 4c 45 20 27   t.CREATE TABLE '",
          "9397: |   3792: 74 74 74 5f 63 6f 6e 74 65 6e 74 27 28 69 64 20   ttt_content'(id",
          "9398: |   3808: 49 4e 54 45 47 45 52 20 50 52 49 4d 41 52 59 20   INTEGER PRIMARY",
          "9399: |   3824: 4b 45 59 2c 20 63 30 2c 20 63 31 29 6c 03 07 17   KEY, c0, c1)l...",
          "9400: |   3840: 1b 1b 01 81 2f 74 61 62 6c 65 74 74 74 5f 69 64   ..../tablettt_id",
          "9401: |   3856: 78 74 74 74 5f 69 64 78 03 43 52 45 41 54 45 20   xttt_idx.CREATE",
          "9402: |   3872: 54 41 42 4c 45 20 27 74 74 74 5f 69 64 78 27 28   TABLE 'ttt_idx'(",
          "9403: |   3888: 73 65 67 69 64 2c 20 74 65 72 6d 2c 20 70 67 6e   segid, term, pgn",
          "9404: |   3904: 6f 2c 20 50 52 49 4d 41 52 59 20 4b 45 59 28 73   o, PRIMARY KEY(s",
          "9405: |   3920: 65 67 69 64 2c 20 74 65 72 6d 29 29 20 57 49 54   egid, term)) WIT",
          "9406: |   3936: 48 4f 55 54 20 52 4f 57 49 44 58 02 07 17 1d 1d   HOUT ROWIDX.....",
          "9407: |   3952: 01 81 03 74 61 62 6c 65 74 74 74 5f 64 61 74 61   ...tablettt_data",
          "9408: |   3968: 74 74 74 5f 64 61 74 61 02 43 52 45 41 54 45 20   ttt_data.CREATE",
          "9409: |   3984: 54 41 42 4c 45 20 27 74 74 74 5f 64 61 74 61 27   TABLE 'ttt_data'",
          "9410: |   4000: 28 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   (id INTEGER PRIM",
          "9411: |   4016: 41 52 59 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42   ARY KEY, block B",
          "9412: |   4032: 4c 4f 42 29 3a 01 06 17 13 13 08 5f 74 61 62 6c   LOB):......_tabl",
          "9413: |   4048: 65 74 74 74 74 74 74 43 52 45 41 54 45 20 56 49   ettttttCREATE VI",
          "9414: |   4064: 52 54 55 41 4c 20 54 41 42 4c 45 20 74 74 74 20   RTUAL TABLE ttt",
          "9415: |   4080: 55 53 49 4e 47 20 66 74 73 35 28 61 2c 20 62 29   USING fts5(a, b)",
          "9416: | page 2 offset 4096",
          "9417: |      0: 0d 0f 44 00 05 0e 81 00 0f 1a 0e 81 0f af 0f 58   ..D............X",
          "9418: |     16: 0e 98 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "9419: |   3712: 00 15 0a 03 00 30 00 00 00 00 01 03 03 00 03 01   .....0..........",
          "9420: |   3728: 01 01 02 01 01 03 01 01 81 24 8c 80 80 80 80 01   .........$......",
          "9421: |   3744: 04 00 82 4c 00 00 00 9b 02 30 65 03 1a 02 05 05   ...L.....0e.....",
          "9422: |   3760: 07 05 01 01 04 03 03 08 03 03 01 2e 02 05 05 07   ................",
          "9423: |   3776: 05 07 05 07 05 01 01 04 03 03 08 03 03 08 03 03   ................",
          "9424: |   3792: 07 f3 03 02 01 65 03 1e 03 05 05 04 05 05 01 00   .....e..........",
          "9425: |   3808: 03 06 04 04 06 04 03 01 36 03 05 05 04 06 05 04   ........6.......",
          "9426: |   3824: 06 05 04 05 05 01 01 03 06 04 04 06 04 04 06 04   ................",
          "9427: |   3840: 04 06 04 03 03 01 65 03 14 04 05 06 f5 05 01 01   ......e.........",
          "9428: |   3856: 02 08 09 01 20 04 05 07 05 07 05 07 05 05 01 00   .... ...........",
          "9429: |   3872: 02 08 0a 0a 0a 04 01 65 03 02 0a 01 06 0a 0a 0a   .......e........",
          "9430: |   3888: 05 01 65 03 06 01 01 0a 01 0a 01 01 0a 0a 0a 04   ..e.............",
          "9431: |   3904: 2b 31 21 0b 0f ef 00 14 2a 00 00 00 00 01 02 02   +1!.....*.......",
          "9432: |   3920: 00 02 01 01 01 02 01 01 50 88 80 80 80 80 01 04   ........P.......",
          "9433: |   3936: 00 81 24 00 00 00 47 02 30 65 02 1a 02 05 05 07   ..$...G.0e......",
          "9434: |   3952: 05 01 01 04 03 03 08 03 03 02 01 65 02 1e 03 05   ...........e....",
          "9435: |   3968: 05 04 05 05 01 01 03 06 04 04 06 04 03 03 01 65   ...............e",
          "9436: |   3984: 02 14 04 05 07 05 05 01 01 02 08 0a 04 01 65 02   ..............e.",
          "9437: |   4000: 02 0a 05 01 65 02 06 01 01 0a 04 12 14 0f 06 31   ....e..........1",
          "9438: |   4016: 84 80 80 80 80 01 03 00 68 00 00 00 2b 02 30 65   ........h...+.0e",
          "9439: |   4032: 01 10 02 05 05 01 01 04 03 03 02 01 65 01 12 03   ............e...",
          "9440: |   4048: 05 05 01 01 03 06 04 03 03 01 65 01 0e 04 05 05   ..........e.....",
          "9441: |   4064: 01 01 02 08 04 0d 0e 06 01 03 00 12 04 4c 4c 00   .............LL.",
          "9442: |   4080: 00 00 11 24 00 00 00 00 01 01 01 00 01 01 01 01   ...$............",
          "9443: | page 3 offset 8192",
          "9444: |      0: 0a 00 00 00 03 0f ec 00 0f 00 00 00 00 00 00 00   ................",
          "9445: |   4064: 00 00 00 00 00 00 00 00 00 00 00 00 06 04 01 0c   ................",
          "9446: |   4080: 01 03 02 06 04 01 0c 01 02 02 05 04 09 0c 01 02   ................",
          "9447: | page 4 offset 12288",
          "9448: |      0: 0d 00 00 00 04 0e 1a 00 0f c7 0f 5b 0e ef 0e 1a   ...........[....",
          "9449: |   3600: 00 00 00 00 00 00 00 00 00 00 81 52 04 06 00 81   ...........R....",
          "9450: |   3616: 5d 81 55 65 20 65 65 20 65 65 65 20 65 20 65 65   ].Ue ee eee e ee",
          "9451: |   3632: 20 65 65 65 20 65 20 65 65 20 65 65 65 66 20 65    eee e ee eeef e",
          "9452: |   3648: 65 20 65 65 65 20 65 20 65 65 20 65 65 65 20 65   e eee e ee eee e",
          "9453: |   3664: 20 65 65 20 65 65 65 65 20 65 65 20 65 65 65 20    ee eeee ee eee",
          "9454: |   3680: 65 20 65 65 20 65 65 65 20 65 20 65 65 20 65 65   e ee eee e ee ee",
          "9455: |   3696: 65 65 20 65 65 20 65 65 65 20 65 20 65 65 20 65   ee ee eee e ee e",
          "9456: |   3712: 65 65 20 65 20 65 65 20 65 65 65 65 65 65 20 65   ee e ee eeeeee e",
          "9457: |   3728: 65 20 65 20 65 20 65 20 65 65 20 65 65 65 20 65   e e e e ee eee e",
          "9458: |   3744: 65 20 65 65 65 65 65 20 65 65 20 65 20 65 1f 65   e eeeee ee e e.e",
          "9459: |   3760: 20 65 65 20 65 65 65 20 65 65 20 65 65 65 65 65    ee eee ee eeeee",
          "9460: |   3776: 20 65 65 20 65 20 65 20 65 20 65 65 20 65 65 65    ee e e e ee eee",
          "9461: |   3792: 20 65 65 20 65 65 65 65 65 20 65 65 20 65 20 65    ee eeeee ee e e",
          "9462: |   3808: 20 65 20 65 65 20 65 65 65 20 65 65 20 65 65 6a    e ee eee ee eej",
          "9463: |   3824: 03 03 ff 75 71 65 20 65 65 1f 65 65 65 20 65 20   ...uqe ee.eee e",
          "9464: |   3840: 65 65 20 65 65 65 20 65 20 65 65 20 65 65 65 65   ee eee e ee eeee",
          "9465: |   3856: 20 65 65 20 65 65 65 20 65 20 65 65 20 65 65 65    ee eee e ee eee",
          "9466: |   3872: 20 65 20 65 65 20 65 65 65 65 65 65 20 65 65 20    e ee eeeeee ee",
          "9467: |   3888: 65 20 65 20 65 20 65 65 20 65 65 65 20 65 65 20   e e e ee eee ee",
          "9468: |   3904: 65 65 65 65 65 20 65 65 20 65 20 65 20 65 20 65   eeeee ee e e e e",
          "9469: |   3920: 65 20 65 65 65 20 65 65 20 65 65 6a 02 04 00 75   e eee ee eej...u",
          "9470: |   3936: 40 65 20 65 65 20 65 65 65 20 65 20 65 65 20 65   @e ee eee e ee e",
          "9471: |   3952: 65 65 20 65 20 65 65 20 65 65 65 65 20 65 65 20   ee e ee eeee ee",
          "9472: |   3968: 65 65 65 20 65 20 65 65 20 65 65 65 20 65 20 65   eee e ee eee e e",
          "9473: |   3984: 65 20 65 65 65 65 65 65 20 65 65 20 65 20 65 20   e eeeeee ee e e",
          "9474: |   4000: 65 20 65 65 20 65 65 65 20 65 65 20 65 65 65 65   e ee eee ee eeee",
          "9475: |   4016: 65 20 65 65 20 65 20 65 20 65 20 65 65 20 65 65   e ee e e e ee ee",
          "9476: |   4032: 65 20 65 65 20 65 65 37 01 04 00 41 3f 65 20 65   e ee ee7...A?e e",
          "9477: |   4048: 65 20 65 65 65 20 65 20 65 65 20 65 65 65 20 65   e eee e ee eee e",
          "9478: |   4064: 20 65 65 20 65 65 65 65 65 65 20 65 65 20 65 20    ee eeeeee ee e",
          "9479: |   4080: 65 20 65 20 65 65 20 65 65 65 20 65 65 20 65 65   e e ee eee ee ee",
          "9480: | page 5 offset 16384",
          "9481: |      0: 0d 00 00 00 04 0f e4 00 0f f9 0f f2 0f eb 0f e4   ................",
          "9482: |   4064: 00 00 00 00 05 04 03 00 10 21 21 05 03 03 00 10   .........!!.....",
          "9483: |   4080: 11 11 05 02 03 00 10 11 11 05 01 03 00 10 09 09   ................",
          "9484: | page 6 offset 20480",
          "9485: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "9486: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "9487: | end crash-4470f0b94422f7.db",
          "9488: }]} {}",
          "9490: do_catchsql_test 64.1 {",
          "9491:   SELECT * FROM ttt('e*');",
          "9492: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: d26fdfa3bc5f8d9c4a6000462080b0dd508e5cae9a83e0d126be48195224da8c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6992:   while( 1 /*Exit by break*/ ){",
          "6993:     int sz, rc;",
          "6994:     u8 *pSlot;",
          "6996:     if( (aData[1]==0 && aData[2]==0) || (pSlot = pageFindSlot(pPg,sz,&rc))==0 ){",
          "6997:       if( (pData - pBegin)<sz ) return 1;",
          "6998:       pData -= sz;",
          "",
          "[Removed Lines]",
          "6995:     sz = cachedCellSize(pCArray, i);",
          "",
          "[Added Lines]",
          "6995:     assert( pCArray->szCell[i]!=0 );",
          "6996:     sz = pCArray->szCell[i];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7153:         memmove(&pCellptr[2], pCellptr, (nCell - iCell) * 2);",
          "7154:       }",
          "7155:       nCell++;",
          "7156:       if( pageInsertArray(",
          "7157:             pPg, pBegin, &pData, pCellptr,",
          "7158:             iCell+iNew, 1, pCArray",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7157:       cachedCellSize(pCArray, iCell+iNew);",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1634:   for(i=0; i<pColumns->nId; i++){",
          "1635:     Expr *pSubExpr = sqlite3ExprForVectorField(pParse, pExpr, i);",
          "1636:     pList = sqlite3ExprListAppend(pParse, pList, pSubExpr);",
          "1637:     if( pList ){",
          "1638:       assert( pList->nExpr==iFirst+i+1 );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1636:     assert( pSubExpr!=0 || db->mallocFailed );",
          "1637:     assert( pSubExpr==0 || pSubExpr->iTable==0 );",
          "1638:     if( pSubExpr==0 ) continue;",
          "1639:     pSubExpr->iTable = pColumns->nId;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3926:         pExpr->pLeft->iTable = sqlite3CodeSubselect(pParse, pExpr->pLeft);",
          "3927:       }",
          "3928:       assert( pExpr->iTable==0 || pExpr->pLeft->op==TK_SELECT );",
          "3931:       ){",
          "3932:         sqlite3ErrorMsg(pParse, \"%d columns assigned %d values\",",
          "3933:                                 pExpr->iTable, n);",
          "",
          "[Removed Lines]",
          "3929:       if( pExpr->iTable",
          "3930:        && pExpr->iTable!=(n = sqlite3ExprVectorSize(pExpr->pLeft))",
          "",
          "[Added Lines]",
          "3933:       if( pExpr->iTable!=0",
          "3934:        && pExpr->iTable!=(n = sqlite3ExprVectorSize(pExpr->pLeft))",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1289:   fseek(f, 0, SEEK_END);",
          "1290:   sz = ftell(f);",
          "1291:   rewind(f);",
          "1293:   if( p==0 ){",
          "1294:     sqlite3_result_error_nomem(context);",
          "1295:     goto edit_func_end;",
          "",
          "[Removed Lines]",
          "1292:   p = sqlite3_malloc64( sz+(bBin==0) );",
          "",
          "[Added Lines]",
          "1292:   p = sqlite3_malloc64( sz+1 );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1766:   for(pRow = eqp_next_row(p, iEqpId, 0); pRow; pRow = pNext){",
          "1767:     pNext = eqp_next_row(p, iEqpId, pRow);",
          "1768:     z = pRow->zText;",
          "1770:     if( n<(int)sizeof(p->sGraph.zPrefix)-7 ){",
          "1771:       memcpy(&p->sGraph.zPrefix[n], pNext ? \"|  \" : \"   \", 4);",
          "1772:       eqp_render_level(p, pRow->iEqpId);",
          "",
          "[Removed Lines]",
          "1769:     utf8_printf(p->out, \"%s%s%s\\n\", p->sGraph.zPrefix, pNext ? \"|--\" : \"`--\", z);",
          "",
          "[Added Lines]",
          "1769:     utf8_printf(p->out, \"%s%s%s\\n\", p->sGraph.zPrefix,",
          "1770:                 pNext ? \"|--\" : \"`--\", z);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2536:     raw_printf(pArg->out, \"Autoindex Inserts:                   %d\\n\", iCur);",
          "2537:     iCur = sqlite3_stmt_status(pArg->pStmt, SQLITE_STMTSTATUS_VM_STEP, bReset);",
          "2538:     raw_printf(pArg->out, \"Virtual Machine Steps:               %d\\n\", iCur);",
          "2540:     raw_printf(pArg->out, \"Reprepare operations:                %d\\n\", iCur);",
          "2541:     iCur = sqlite3_stmt_status(pArg->pStmt, SQLITE_STMTSTATUS_RUN, bReset);",
          "2542:     raw_printf(pArg->out, \"Number of times run:                 %d\\n\", iCur);",
          "",
          "[Removed Lines]",
          "2539:     iCur = sqlite3_stmt_status(pArg->pStmt, SQLITE_STMTSTATUS_REPREPARE, bReset);",
          "",
          "[Added Lines]",
          "2540:     iCur = sqlite3_stmt_status(pArg->pStmt, SQLITE_STMTSTATUS_REPREPARE,bReset);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3459:   \".archive ...             Manage SQL archives\",",
          "3460:   \"   Each command must have exactly one of the following options:\",",
          "3461:   \"     -c, --create               Create a new archive\",",
          "3464:   \"     -t, --list                 List contents of archive\",",
          "3465:   \"     -x, --extract              Extract files from archive\",",
          "3466:   \"   Optional arguments:\",",
          "3467:   \"     -v, --verbose              Print each filename as it is processed\",",
          "3471:   \"     -n, --dryrun               Show the SQL that would have occurred\",",
          "3472:   \"   Examples:\",",
          "3476:   \"   See also:\",",
          "3477:   \"      http://sqlite.org/cli.html#sqlar_archive_support\",",
          "3478: #endif",
          "",
          "[Removed Lines]",
          "3462:   \"     -u, --update               Add files or update files with changed mtime\",",
          "3463:   \"     -i, --insert               Like -u but always add even if mtime unchanged\",",
          "3468:   \"     -f FILE, --file FILE       Operate on archive FILE (default is current db)\",",
          "3469:   \"     -a FILE, --append FILE     Operate on FILE opened using the apndvfs VFS\",",
          "3470:   \"     -C DIR, --directory DIR    Change to directory DIR to read/extract files\",",
          "3473:   \"     .ar -cf archive.sar foo bar  # Create archive.sar from files foo and bar\",",
          "3474:   \"     .ar -tf archive.sar          # List members of archive.sar\",",
          "3475:   \"     .ar -xvf archive.sar         # Verbosely extract files from archive.sar\",",
          "",
          "[Added Lines]",
          "3463:   \"     -u, --update               Add or update files with changed mtime\",",
          "3464:   \"     -i, --insert               Like -u but always add even if unchanged\",",
          "3469:   \"     -f FILE, --file FILE       Use archive FILE (default is current db)\",",
          "3470:   \"     -a FILE, --append FILE     Open FILE using the apndvfs VFS\",",
          "3471:   \"     -C DIR, --directory DIR    Read/extract files from directory DIR\",",
          "3474:   \"     .ar -cf ARCHIVE foo bar  # Create ARCHIVE from files foo and bar\",",
          "3475:   \"     .ar -tf ARCHIVE          # List members of ARCHIVE\",",
          "3476:   \"     .ar -xvf ARCHIVE         # Verbosely extract files from ARCHIVE\",",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3481: #endif",
          "3482:   \".backup ?DB? FILE        Backup DB (default \\\"main\\\") to FILE\",",
          "3483:   \"       --append            Use the appendvfs\",",
          "3485:   \".bail on|off             Stop after hitting an error.  Default OFF\",",
          "3486:   \".binary on|off           Turn binary output on or off.  Default OFF\",",
          "3487:   \".cd DIRECTORY            Change the working directory to DIRECTORY\",",
          "",
          "[Removed Lines]",
          "3484:   \"       --async             Write to FILE without a journal and without fsync()\",",
          "",
          "[Added Lines]",
          "3485:   \"       --async             Write to FILE without journal and fsync()\",",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3501:   \"   Other Modes:\",",
          "3502: #ifdef SQLITE_DEBUG",
          "3503:   \"      test                  Show raw EXPLAIN QUERY PLAN output\",",
          "3505: #endif",
          "3506:   \"      trigger               Like \\\"full\\\" but also show trigger bytecode\",",
          "3508:   \".exit ?CODE?             Exit this program with return-code CODE\",",
          "3513:   \".filectrl CMD ...        Run various sqlite3_file_control() operations\",",
          "3514:   \"                           Run \\\".filectrl\\\" with no arguments for details\",",
          "3515:   \".fullschema ?--indent?   Show schema and the content of sqlite_stat tables\",",
          "",
          "[Removed Lines]",
          "3504:   \"      trace                 Like \\\"full\\\" but also enable \\\"PRAGMA vdbe_trace\\\"\",",
          "3507:   \".excel                   Display the output of next command in a spreadsheet\",",
          "3509:   \".expert                  EXPERIMENTAL. Suggest indexes for specified queries\",",
          "",
          "[Added Lines]",
          "3505:   \"      trace                 Like \\\"full\\\" but enable \\\"PRAGMA vdbe_trace\\\"\",",
          "3508:   \".excel                   Display the output of next command in spreadsheet\",",
          "3510:   \".expert                  EXPERIMENTAL. Suggest indexes for queries\",",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3556:   \"        --append        Use appendvfs to append database to the end of FILE\",",
          "3557: #ifdef SQLITE_ENABLE_DESERIALIZE",
          "3558:   \"        --deserialize   Load into memory useing sqlite3_deserialize()\",",
          "3560:   \"        --maxsize N     Maximum size for --hexdb or --deserialized database\",",
          "3561: #endif",
          "3562:   \"        --new           Initialize FILE to an empty database\",",
          "",
          "[Removed Lines]",
          "3559:   \"        --hexdb         Load the output of \\\"dbtotxt\\\" as an in-memory database\",",
          "",
          "[Added Lines]",
          "3560:   \"        --hexdb         Load the output of \\\"dbtotxt\\\" as an in-memory db\",",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "3569:   \"   init                    Initialize the TEMP table that holds bindings\",",
          "3570:   \"   list                    List the current parameter bindings\",",
          "3571:   \"   set PARAMETER VALUE     Given SQL parameter PARAMETER a value of VALUE\",",
          "3573:   \"   unset PARAMETER         Remove PARAMETER from the binding table\",",
          "3574:   \".print STRING...         Print literal STRING\",",
          "3575: #ifndef SQLITE_OMIT_PROGRESS_CALLBACK",
          "",
          "[Removed Lines]",
          "3572:   \"                           PARAMETER should start with '$', ':', '@', or '?'\",",
          "",
          "[Added Lines]",
          "3573:   \"                           PARAMETER should start with one of: $ : @ ?\",",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3584:   \".read FILE               Read input from FILE\",",
          "3585: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_ENABLE_DBPAGE_VTAB)",
          "3586:   \".recover                 Recover as much data as possible from corrupt db.\",",
          "3587: #endif",
          "3588:   \".restore ?DB? FILE       Restore content of DB (default \\\"main\\\") from FILE\",",
          "3589:   \".save FILE               Write in-memory database into FILE\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3588:   \"   --freelist-corrupt       Assume the freelist is corrupt\",",
          "3589:   \"   --recovery-db NAME       Store recovery metadata in database file NAME\",",
          "3590:   \"   --lost-and-found TABLE   Alternative name for the lost-and-found table\",",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3615:   \"    Options:\",",
          "3616:   \"      --schema              Also hash the sqlite_master table\",",
          "3617:   \"      --sha3-224            Use the sha3-224 algorithm\",",
          "3619:   \"      --sha3-384            Use the sha3-384 algorithm\",",
          "3620:   \"      --sha3-512            Use the sha3-512 algorithm\",",
          "3621:   \"    Any other argument is a LIKE pattern for tables to hash\",",
          "",
          "[Removed Lines]",
          "3618:   \"      --sha3-256            Use the sha3-256 algorithm.  This is the default.\",",
          "",
          "[Added Lines]",
          "3622:   \"      --sha3-256            Use the sha3-256 algorithm (default)\",",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "5721:                 i = n;",
          "5722:               }else{",
          "5723:                 if( iArg>=(nArg-1) ){",
          "5725:                 }",
          "5726:                 zArg = azArg[++iArg];",
          "5727:               }",
          "",
          "[Removed Lines]",
          "5724:                   return arErrorMsg(pAr, \"option requires an argument: %c\",z[i]);",
          "",
          "[Added Lines]",
          "5728:                   return arErrorMsg(pAr, \"option requires an argument: %c\",",
          "5729:                                     z[i]);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "6604:       zLostAndFound = azArg[i];",
          "6605:     }",
          "6606:     else{",
          "6612:       return 1;",
          "6613:     }",
          "6614:   }",
          "",
          "[Removed Lines]",
          "6607:       raw_printf(stderr, \"unexpected option: %s\\n\", azArg[i]);",
          "6608:       raw_printf(stderr, \"options are:\\n\");",
          "6609:       raw_printf(stderr, \"    --freelist-corrupt\\n\");",
          "6610:       raw_printf(stderr, \"    --recovery-db DATABASE\\n\");",
          "6611:       raw_printf(stderr, \"    --lost-and-found TABLE-NAME\\n\");",
          "",
          "[Added Lines]",
          "6612:       utf8_printf(stderr, \"unexpected option: %s\\n\", azArg[i]);",
          "6613:       showHelp(pState->out, azArg[0]);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "6710:     \"    )\"",
          "6711:     \"    SELECT pgno FROM p WHERE (parent IS NULL OR pgno = orig)\"",
          "6712:     \") \"",
          "6714:     \"UPDATE recovery.map AS o SET intkey = (\"",
          "6715:     \"  SELECT substr(data, 1, 1)==X'0D' FROM sqlite_dbpage WHERE pgno=o.pgno\"",
          "6716:     \");\"",
          "",
          "[Removed Lines]",
          "6713:     \"FROM pages WHERE maxlen > 0 AND i NOT IN freelist;\"",
          "",
          "[Added Lines]",
          "6715:     \"FROM pages WHERE maxlen IS NOT NULL AND i NOT IN freelist;\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "8467:       if( zName ){",
          "8468:         appendText(&sSelect,",
          "8469:            \" UNION ALL SELECT shell_module_schema(name),\"",
          "8471:       }",
          "8472: #endif",
          "8473:       appendText(&sSelect, \") WHERE \", 0);",
          "",
          "[Removed Lines]",
          "8470:            \" 'table', name, name, name, 9e+99, 'main' FROM pragma_module_list\", 0);",
          "",
          "[Added Lines]",
          "8472:            \" 'table', name, name, name, 9e+99, 'main' FROM pragma_module_list\",",
          "8473:         0);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "8566:       if( pSession->p==0 ) goto session_not_open;",
          "8567:       out = fopen(azCmd[1], \"wb\");",
          "8568:       if( out==0 ){",
          "8570:       }else{",
          "8571:         int szChng;",
          "8572:         void *pChng;",
          "",
          "[Removed Lines]",
          "8569:         utf8_printf(stderr, \"ERROR: cannot open \\\"%s\\\" for writing\\n\", azCmd[1]);",
          "",
          "[Added Lines]",
          "8572:         utf8_printf(stderr, \"ERROR: cannot open \\\"%s\\\" for writing\\n\",",
          "8573:                     azCmd[1]);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "8887:         {",
          "8888:           utf8_printf(stderr, \"Unknown option \\\"%s\\\" on \\\"%s\\\"\\n\",",
          "8889:                       azArg[i], azArg[0]);",
          "8892:           rc = 1;",
          "8893:           goto meta_command_exit;",
          "8894:         }",
          "",
          "[Removed Lines]",
          "8890:           raw_printf(stderr, \"Should be one of: --schema\"",
          "8891:                              \" --sha3-224 --sha3-256 --sha3-384 --sha3-512\\n\");",
          "",
          "[Added Lines]",
          "8894:           showHelp(p->out, azArg[0]);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "9168:     } aCtrl[] = {",
          "9181: #ifdef YYCOVERAGE",
          "9183: #endif",
          "9189:     };",
          "9190:     int testctrl = -1;",
          "9191:     int iCtrl = -1;",
          "",
          "[Removed Lines]",
          "9169:       { \"always\",             SQLITE_TESTCTRL_ALWAYS,        \"BOOLEAN\"            },",
          "9170:       { \"assert\",             SQLITE_TESTCTRL_ASSERT,        \"BOOLEAN\"            },",
          "9173:       { \"byteorder\",          SQLITE_TESTCTRL_BYTEORDER,     \"\"                   },",
          "9174:       { \"extra_schema_checks\",SQLITE_TESTCTRL_EXTRA_SCHEMA_CHECKS,\"BOOLEAN\"       },",
          "9176:       { \"imposter\",           SQLITE_TESTCTRL_IMPOSTER,   \"SCHEMA ON/OFF ROOTPAGE\"},",
          "9177:       { \"internal_functions\", SQLITE_TESTCTRL_INTERNAL_FUNCTIONS, \"BOOLEAN\"       },",
          "9178:       { \"localtime_fault\",    SQLITE_TESTCTRL_LOCALTIME_FAULT,\"BOOLEAN\"           },",
          "9179:       { \"never_corrupt\",      SQLITE_TESTCTRL_NEVER_CORRUPT, \"BOOLEAN\"            },",
          "9180:       { \"optimizations\",      SQLITE_TESTCTRL_OPTIMIZATIONS, \"DISABLE-MASK\"       },",
          "9182:       { \"parser_coverage\",    SQLITE_TESTCTRL_PARSER_COVERAGE, \"\"                 },",
          "9184:       { \"pending_byte\",       SQLITE_TESTCTRL_PENDING_BYTE,  \"OFFSET  \"           },",
          "9185:       { \"prng_restore\",       SQLITE_TESTCTRL_PRNG_RESTORE,  \"\"                   },",
          "9186:       { \"prng_save\",          SQLITE_TESTCTRL_PRNG_SAVE,     \"\"                   },",
          "9187:       { \"prng_seed\",          SQLITE_TESTCTRL_PRNG_SEED,     \"SEED ?db?\"          },",
          "9188:       { \"reserve\",            SQLITE_TESTCTRL_RESERVE,       \"BYTES-OF-RESERVE\"   },",
          "",
          "[Added Lines]",
          "9172:       { \"always\",             SQLITE_TESTCTRL_ALWAYS,        \"BOOLEAN\"        },",
          "9173:       { \"assert\",             SQLITE_TESTCTRL_ASSERT,        \"BOOLEAN\"        },",
          "9176:       { \"byteorder\",          SQLITE_TESTCTRL_BYTEORDER,     \"\"               },",
          "9177:       { \"extra_schema_checks\",SQLITE_TESTCTRL_EXTRA_SCHEMA_CHECKS,\"BOOLEAN\"   },",
          "9179:       { \"imposter\",         SQLITE_TESTCTRL_IMPOSTER, \"SCHEMA ON/OFF ROOTPAGE\"},",
          "9180:       { \"internal_functions\", SQLITE_TESTCTRL_INTERNAL_FUNCTIONS, \"BOOLEAN\"   },",
          "9181:       { \"localtime_fault\",    SQLITE_TESTCTRL_LOCALTIME_FAULT,\"BOOLEAN\"       },",
          "9182:       { \"never_corrupt\",      SQLITE_TESTCTRL_NEVER_CORRUPT, \"BOOLEAN\"        },",
          "9183:       { \"optimizations\",      SQLITE_TESTCTRL_OPTIMIZATIONS, \"DISABLE-MASK\"   },",
          "9185:       { \"parser_coverage\",    SQLITE_TESTCTRL_PARSER_COVERAGE, \"\"             },",
          "9187:       { \"pending_byte\",       SQLITE_TESTCTRL_PENDING_BYTE,  \"OFFSET  \"       },",
          "9188:       { \"prng_restore\",       SQLITE_TESTCTRL_PRNG_RESTORE,  \"\"               },",
          "9189:       { \"prng_save\",          SQLITE_TESTCTRL_PRNG_SAVE,     \"\"               },",
          "9190:       { \"prng_seed\",          SQLITE_TESTCTRL_PRNG_SEED,     \"SEED ?db?\"      },",
          "9191:       { \"reserve\",            SQLITE_TESTCTRL_RESERVE,      \"BYTES-OF-RESERVE\"},",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "9328:       }",
          "9329:     }",
          "9330:     if( isOk==0 && iCtrl>=0 ){",
          "9332:       rc = 1;",
          "9333:     }else if( isOk==1 ){",
          "9334:       raw_printf(p->out, \"%d\\n\", rc2);",
          "",
          "[Removed Lines]",
          "9331:       utf8_printf(p->out, \"Usage: .testctrl %s %s\\n\", zCmd, aCtrl[iCtrl].zUsage);",
          "",
          "[Added Lines]",
          "9334:       utf8_printf(p->out, \"Usage: .testctrl %s %s\\n\", zCmd,aCtrl[iCtrl].zUsage);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "9445:         rc = 1;",
          "9446:         goto meta_command_exit;",
          "9447:       }",
          "9449:       if( rc ){",
          "9450:         utf8_printf(stderr, \"Authentication failed for user %s\\n\", azArg[2]);",
          "9451:         rc = 1;",
          "",
          "[Removed Lines]",
          "9448:       rc = sqlite3_user_authenticate(p->db, azArg[2], azArg[3], strlen30(azArg[3]));",
          "",
          "[Added Lines]",
          "9451:       rc = sqlite3_user_authenticate(p->db, azArg[2], azArg[3],",
          "9452:                                      strlen30(azArg[3]));",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h"
        ],
        "test/rowvalue7.test||test/rowvalue7.test": [
          "File: test/rowvalue7.test -> test/rowvalue7.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:   UPDATE t1 SET (b,c,d) = (SELECT x,y FROM t2 WHERE w=a);",
          "56: } {1 {3 columns assigned 2 values}}",
          "58: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58: # 2019-08-26",
          "59: # ticket https://www.sqlite.org/src/info/78acc9d40f0786e8",
          "60: #",
          "61: do_catchsql_test 3.0 {",
          "62:   DROP TABLE IF EXISTS t1;",
          "63:   CREATE TABLE t1(a,b);",
          "64:   INSERT INTO t1 VALUES(1,2);",
          "65:   UPDATE t1 SET (a,a,a,b)=(SELECT 99,100);",
          "66: } {1 {4 columns assigned 2 values}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4a4c1bf85662b428235f99b92a07980191ba1e10",
      "candidate_info": {
        "commit_hash": "4a4c1bf85662b428235f99b92a07980191ba1e10",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4a4c1bf85662b428235f99b92a07980191ba1e10",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbeaux.c"
        ],
        "message": "Make the result of sqlite3_normalized_sql() survive its statement being reprepared.\n\nFossilOrigin-Name: 4330f0795dbc2ab41dddd41d5979331fb9b78c477c66367c4be52f929531a45f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbeaux.c||src/vdbeaux.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 175c15008e9f19b8f6762c2fe4a545735128765081980eed01d5e46ca4acb500",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:   zTmp = pA->zSql;",
          "134:   pA->zSql = pB->zSql;",
          "135:   pB->zSql = zTmp;",
          "137:   zTmp = pA->zNormSql;",
          "138:   pA->zNormSql = pB->zNormSql;",
          "139:   pB->zNormSql = zTmp;",
          "",
          "[Removed Lines]",
          "136: #if 0",
          "",
          "[Added Lines]",
          "136: #ifdef SQLITE_ENABLE_NORMALIZE",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
      "candidate_info": {
        "commit_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/527cbd4a104cb93bf3994b3dd3619a6299a78b13",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/build.c",
          "src/sqliteInt.h",
          "test/altertab.test"
        ],
        "message": "Do not allow CREATE TABLE or CREATE VIEW of an object with a name that looks like a shadow table name.\n\nFossilOrigin-Name: 6aef58b629d89955f85f65191ba2be67b2adfac4f0327fe9a7141cb2705dbc00",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/build.c||src/build.c",
          "src/sqliteInt.h||src/sqliteInt.h",
          "test/altertab.test||test/altertab.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8ad34d36a141fa8f5d9bd784dfeb892c983897a6dc6b867607cc668508acf944",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "856:       }",
          "857:     }",
          "858:   }else{",
          "861:     ){",
          "862:       sqlite3ErrorMsg(pParse, \"object name reserved for internal use: %s\",",
          "863:                       zName);",
          "864:       return SQLITE_ERROR;",
          "865:     }",
          "866:   }",
          "867:   return SQLITE_OK;",
          "868: }",
          "",
          "[Removed Lines]",
          "859:     if( pParse->nested==0",
          "860:      && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7)",
          "",
          "[Added Lines]",
          "859:     if( (pParse->nested==0 && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7))",
          "860:      || (sqlite3ReadOnlyShadowTables(db) && sqlite3ShadowTableName(db, zName))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "2132: static int isShadowTableName(sqlite3 *db, char *zName){",
          "",
          "[Added Lines]",
          "2133: int sqlite3ShadowTableName(sqlite3 *db, const char *zName){",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2147:   if( pMod->pModule->xShadowName==0 ) return 0;",
          "2148:   return pMod->pModule->xShadowName(zTail+1);",
          "2149: }",
          "",
          "[Removed Lines]",
          "2150: #else",
          "2151: # define isShadowTableName(x,y) 0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2190:   p = pParse->pNewTable;",
          "2191:   if( p==0 ) return;",
          "2194:     p->tabFlags |= TF_Shadow;",
          "2195:   }",
          "",
          "[Removed Lines]",
          "2193:   if( pSelect==0 && isShadowTableName(db, p->zName) ){",
          "",
          "[Added Lines]",
          "2192:   if( pSelect==0 && sqlite3ShadowTableName(db, p->zName) ){",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "4548: #  define sqlite3VtabInSync(db) ((db)->nVTrans>0 && (db)->aVTrans==0)",
          "4549: #endif",
          "4550: int sqlite3ReadOnlyShadowTables(sqlite3 *db);",
          "4551: int sqlite3VtabEponymousTableInit(Parse*,Module*);",
          "4552: void sqlite3VtabEponymousTableClear(sqlite3*,Module*);",
          "4553: void sqlite3VtabMakeWritable(Parse*,Table*);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4551: #ifndef SQLITE_OMIT_VIRTUALTABLE",
          "4552:   int sqlite3ShadowTableName(sqlite3 *db, const char *zName);",
          "4553: #else",
          "4554: # define sqlite3ShadowTableName(A,B) 0",
          "4555: #endif",
          "",
          "---------------"
        ],
        "test/altertab.test||test/altertab.test": [
          "File: test/altertab.test -> test/altertab.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "547:   } {1 {table y1_segments may not be modified}}",
          "549:   do_catchsql_test 16.20 {",
          "554:     DROP TABLE y1_segments;",
          "555:   } {1 {table y1_segments may not be dropped}}",
          "557:   do_execsql_test 16.30 {",
          "558:     ALTER TABLE y1 RENAME TO z1;",
          "559:   }",
          "",
          "[Removed Lines]",
          "550:     ALTER TABLE y1_segments RENAME TO abc;",
          "551:   } {1 {table y1_segments may not be altered}}",
          "553:   do_catchsql_test 16.21 {",
          "",
          "[Added Lines]",
          "553:   do_catchsql_test 16.20 {",
          "554:     ALTER TABLE y1_segments RENAME TO abc;",
          "555:   } {1 {table y1_segments may not be altered}}",
          "556:   sqlite3_db_config db DEFENSIVE 0",
          "557:   do_catchsql_test 16.22 {",
          "558:     ALTER TABLE y1_segments RENAME TO abc;",
          "559:   } {0 {}}",
          "560:   sqlite3_db_config db DEFENSIVE 1",
          "561:   do_catchsql_test 16.23 {",
          "562:     CREATE TABLE y1_segments AS SELECT * FROM abc;",
          "563:   } {1 {object name reserved for internal use: y1_segments}}",
          "564:   do_catchsql_test 16.24 {",
          "565:     CREATE VIEW y1_segments AS SELECT * FROM abc;",
          "566:   } {1 {object name reserved for internal use: y1_segments}}",
          "567:   sqlite3_db_config db DEFENSIVE 0",
          "568:   do_catchsql_test 16.25 {",
          "569:     ALTER TABLE abc RENAME TO y1_segments;",
          "570:   } {0 {}}",
          "571:   sqlite3_db_config db DEFENSIVE 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6301c43f236543ecb174e2639a0201bb29580fbe",
      "candidate_info": {
        "commit_hash": "6301c43f236543ecb174e2639a0201bb29580fbe",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/6301c43f236543ecb174e2639a0201bb29580fbe",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c",
          "test/dbfuzz001.test"
        ],
        "message": "dbfuzz2 found a NEVER() that is sometimes true.\n\nFossilOrigin-Name: 1201615cbbd3070158ea5fab3d2c8c95f41b25d6da096a44cb9257a7b7405efc",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c",
          "test/dbfuzz001.test||test/dbfuzz001.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 997b65117f8c12dba5fb85434fde9765cdb0d2a49cc3e31979abba3e21350086",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7039:   assert( sqlite3PagerIswriteable(pParent->pDbPage) );",
          "7040:   assert( pPage->nOverflow==1 );",
          "",
          "[Removed Lines]",
          "7043:   if( NEVER(pPage->nCell==0) ) return SQLITE_CORRUPT_BKPT;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/dbfuzz001.test||test/dbfuzz001.test": [
          "File: test/dbfuzz001.test -> test/dbfuzz001.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:   finish_test",
          "19:   return",
          "20: }",
          "22: # In the following database file, there is 384 bytes of free space",
          "23: # on page 8 that does not appear on the freeblock list.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: database_may_be_corrupt",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "180:   DELETE FROM t3 WHERE x IS NOT NULL AND +rowid=6;",
          "181: } {}",
          "183: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "184: # This is a dbfuzz2-generate test case that can cause a page with",
          "185: # pPage->nCell==0 to enter the balancer.",
          "186: #",
          "187: do_test dbfuzz001-200 {",
          "188:   db deserialize [decode_hexdb {",
          "189:     | size 3076 pagesize 512 filename c03.db",
          "190:     | page 1 offset 0",
          "191:     |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "192:     |     16: 02 00 01 01 00 40 20 20 00 00 00 0c 00 00 00 07   .....@  ........",
          "193:     |     32: 00 00 00 00 00 00 00 00 00 00 00 08 00 00 00 04   ................",
          "194:     |     48: 00 00 00 00 00 00 00 03 e8 00 00 01 00 00 00 00   ................",
          "195:     |     80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0c   ................",
          "196:     |     96: 00 2e 2c 50 0d 00 00 00 06 01 06 00 01 da 01 b0   ..,P............",
          "197:     |    112: 01 56 01 86 01 2a 01 06 00 00 00 00 00 00 00 00   .V...*..........",
          "198:     |    128: 00 00 00 00 00 00 00 00 ef 00 00 00 00 00 00 00   ................",
          "199:     |    192: 00 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "200:     |    224: 00 00 00 00 00 00 00 00 00 00 00 00 00 ff e9 00   ................",
          "201:     |    256: 00 00 00 00 00 00 22 07 06 17 11 11 01 31 74 61   ......\"......1ta",
          "202:     |    272: 62 6c 65 74 34 74 34 07 43 52 45 41 54 45 20 54   blet4t4.CREATE T",
          "203:     |    288: 41 42 4c 45 20 74 34 28 78 29 2a 06 06 17 13 11   ABLE t4(x)*.....",
          "204:     |    304: 01 3f 69 6e 64 65 78 74 33 78 74 33 06 43 52 45   .?indext3xt3.CRE",
          "205:     |    320: 41 54 45 20 49 4e 44 45 58 20 74 33 64 20 4f 4e   ATE INDEX t3d ON",
          "206:     |    336: 20 74 33 28 78 29 2e 04 06 17 15 11 01 45 69 6e    t3(x).......Ein",
          "207:     |    352: 64 65 78 74 32 63 64 74 32 05 43 52 45 41 54 45   dext2cdt2.CREATE",
          "208:     |    368: 20 49 4e 44 45 58 20 74 32 63 64 20 4f 4e 20 74    INDEX t2cd ON t",
          "209:     |    384: 32 28 63 2c 64 29 28 05 06 17 11 11 01 3d 74 61   2(c,d)(......=ta",
          "210:     |    400: 62 6c 65 74 33 74 33 04 43 52 45 41 54 45 20 54   blet3t3.CREATE T",
          "211:     |    416: 41 42 4c 45 20 74 33 28 63 2c 78 2c 65 2c 66 29   ABLE t3(c,x,e,f)",
          "212:     |    432: 28 02 06 17 11 11 01 3d 74 61 62 6c 65 74 32 74   (......=tablet2t",
          "213:     |    448: 32 03 43 52 45 41 54 45 20 54 41 42 4c 45 20 74   2.CREATE TABLE t",
          "214:     |    464: 32 28 63 2c 64 2c 65 2c 66 29 24 01 06 17 11 11   2(c,d,e,f)$.....",
          "215:     |    480: 01 35 74 61 62 6c 65 74 31 74 31 02 43 52 45 41   .5tablet1t1.CREA",
          "216:     |    496: 54 45 20 54 41 42 4c 45 20 74 31 28 61 2c 62 29   TE TABLE t1(a,b)",
          "217:     | page 2 offset 512",
          "218:     |      0: 0d 00 00 00 04 01 cf 00 01 fa 01 f3 01 de 01 cf   ................",
          "219:     |    176: 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "220:     |    256: 00 00 14 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "221:     |    368: 00 00 00 00 00 00 00 00 00 00 00 00 1e 00 00 00   ................",
          "222:     |    416: 00 00 00 1b 00 00 00 00 04 00 00 00 00 00 00 00   ................",
          "223:     |    448: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0d   ................",
          "224:     |    464: 04 03 17 17 73 65 76 65 6e 65 69 67 68 74 13 03   ....seveneight..",
          "225:     |    480: 03 07 07 40 14 00 00 00 00 00 00 40 18 00 00 00   ...@.......@....",
          "226:     |    496: 00 00 00 05 02 03 01 01 03 04 04 01 03 09 01 02   ................",
          "227:     | page 3 offset 1024",
          "228:     |      0: 0d 00 00 00 08 01 54 00 01 f7 01 ec 01 c5 01 aa   ......T.........",
          "229:     |     16: 01 a1 01 96 01 6f 01 54 00 00 00 00 00 00 00 00   .....o.T........",
          "230:     |     32: 00 00 00 00 00 00 00 03 e8 00 00 00 00 00 00 00   ................",
          "231:     |    336: 00 00 00 00 19 08 05 16 17 17 17 65 69 67 68 74   ...........eight",
          "232:     |    352: 65 69 67 68 74 73 65 76 65 6e 73 65 76 ff ff ff   eightsevensev...",
          "233:     |    368: 0e 05 07 07 07 07 40 18 00 00 00 00 00 00 40 18   ......@.......@.",
          "234:     |    384: 00 00 00 00 00 00 40 14 00 00 00 00 00 00 40 14   ......@.......@.",
          "235:     |    400: 00 00 00 00 00 00 09 06 05 01 01 01 01 04 04 03   ................",
          "236:     |    416: 03 07 05 05 01 01 09 09 02 02 19 04 05 17 17 17   ................",
          "237:     |    432: 17 73 65 6f 65 6e 65 69 67 68 74 65 69 67 68 74   .seoeneighteight",
          "238:     |    448: 73 65 76 65 6e 25 03 05 07 07 07 07 40 14 00 00   seven%......@...",
          "239:     |    464: 00 00 00 00 40 18 00 00 00 00 00 00 40 18 00 00   ....@.......@...",
          "240:     |    480: 00 00 00 00 40 14 00 00 00 00 00 00 09 02 05 01   ....@...........",
          "241:     |    496: 01 01 01 03 04 04 03 07 01 05 09 01 01 09 02 02   ................",
          "242:     | page 4 offset 1536",
          "243:     |      0: 0d 00 00 00 00 00 10 00 00 00 00 00 00 00 00 00   ................",
          "244:     |    160: 00 00 00 ea 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "245:     |    336: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00   ............ ...",
          "246:     | page 5 offset 2048",
          "247:     |      0: 0a 00 00 00 08 01 96 00 01 fa 01 c4 01 f2 01 bc   ................",
          "248:     |     16: 01 dc 01 a6 01 96 01 cc 00 00 00 00 00 00 00 00   ................",
          "249:     |     48: 00 00 00 00 00 00 00 00 00 00 10 00 00 00 00 00   ................",
          "250:     |    288: 00 00 00 00 00 00 00 00 00 64 00 00 00 2b 00 00   .........d...+..",
          "251:     |    400: 00 00 00 00 00 00 0f 04 17 17 01 65 69 67 68 74   ...........eight",
          "252:     |    416: 65 69 6f 68 74 08 15 04 07 07 01 40 18 00 00 00   eioht......@....",
          "253:     |    432: 00 00 00 40 18 00 00 00 00 00 00 07 07 04 01 01   ...@............",
          "254:     |    448: 01 04 04 06 07 04 01 01 01 02 02 05 0f 04 17 17   ................",
          "255:     |    464: 01 73 65 76 65 6e 65 69 67 68 74 04 15 04 07 07   .seveneight.....",
          "256:     |    480: 01 40 14 00 00 00 00 00 00 40 18 00 00 00 00 00   .@.......@......",
          "257:     |    496: 00 03 07 04 01 01 01 03 04 02 05 04 09 01 09 02   ................",
          "258:     | page 6 offset 2560",
          "259:     |      0: 0a 00 00 00 00 02 00 00 00 00 00 00 00 0d 00 00   ................",
          "260:     |     16: 00 08 01 c2 00 01 fb 01 f6 01 f1 01 ec 01 e0 01   ................",
          "261:     |     32: d4 01 cb 01 c2 00 00 00 00 00 00 00 00 00 00 00   ................",
          "262:     |    160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 00   ................",
          "263:     |    448: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 07   ................",
          "264:     |    464: 08 02 17 65 69 67 68 74 07 07 02 17 65 69 67 68   ...eight....eigh",
          "265:     |    480: 74 0a 06 02 07 40 18 00 00 00 00 00 00 0a 05 02   t....@..........",
          "266:     |    496: 07 40 18 00 04 02 01 04 03 03 02 01 04 03 02 02   .@..............",
          "267:     | end x/c03.db",
          "268:   }]",
          "269:   catchsql {INSERT INTO t3 SELECT * FROM t2;}",
          "270: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ]
      }
    }
  ]
}