{
  "cve_id": "CVE-2021-31255",
  "cve_desc": "Buffer overflow in the abst_box_read function in MP4Box in GPAC 1.0.1 allows attackers to cause a denial of service or execute arbitrary code via a crafted file.",
  "repo": "gpac/gpac",
  "patch_hash": "758135e91e623d7dfe7f6aaad7aeb3f791b7a4e5",
  "patch_info": {
    "commit_hash": "758135e91e623d7dfe7f6aaad7aeb3f791b7a4e5",
    "repo": "gpac/gpac",
    "commit_url": "https://github.com/gpac/gpac/commit/758135e91e623d7dfe7f6aaad7aeb3f791b7a4e5",
    "files": [
      "src/isomedia/box_code_adobe.c"
    ],
    "message": "fixed #1733",
    "before_after_code_files": [
      "src/isomedia/box_code_adobe.c||src/isomedia/box_code_adobe.c"
    ]
  },
  "patch_diff": {
    "src/isomedia/box_code_adobe.c||src/isomedia/box_code_adobe.c": [
      "File: src/isomedia/box_code_adobe.c -> src/isomedia/box_code_adobe.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "79:  int i;",
      "80:  u32 tmp_strsize;",
      "81:  char *tmp_str;",
      "82:  GF_Err e;",
      "84:  ISOM_DECREASE_SIZE(ptr, 25)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "82:  Bool zfound=GF_FALSE;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "102:   ISOM_DECREASE_SIZE(ptr, 1)",
      "103:   tmp_str[i] = gf_bs_read_u8(bs);",
      "104:   tmp_strsize--;",
      "106:    break;",
      "107:   i++;",
      "108:  }",
      "109:  if (i) {",
      "110:   ptr->movie_identifier = gf_strdup(tmp_str);",
      "111:  }",
      "",
      "[Removed Lines]",
      "105:   if (!tmp_str[i])",
      "",
      "[Added Lines]",
      "106:   if (!tmp_str[i]) {",
      "107:    zfound = GF_TRUE;",
      "109:   }",
      "112:  if (!zfound)",
      "113:   return GF_ISOM_INVALID_FILE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "114:  ptr->server_entry_count = gf_bs_read_u8(bs);",
      "115:  for (i=0; i<ptr->server_entry_count; i++) {",
      "116:   int j=0;",
      "117:   tmp_strsize=(u32)ptr->size;",
      "118:   while (tmp_strsize) {",
      "119:    ISOM_DECREASE_SIZE(ptr, 1)",
      "120:    tmp_str[j] = gf_bs_read_u8(bs);",
      "121:    tmp_strsize--;",
      "123:     break;",
      "124:    j++;",
      "125:   }",
      "126:   if (j) {",
      "127:    gf_list_insert(ptr->server_entry_table, gf_strdup(tmp_str), i);",
      "128:   }",
      "",
      "[Removed Lines]",
      "122:    if (!tmp_str[j])",
      "",
      "[Added Lines]",
      "122:   zfound = GF_FALSE;",
      "128:    if (!tmp_str[j]) {",
      "129:     zfound = GF_TRUE;",
      "131:    }",
      "134:   if (!zfound)",
      "135:    return GF_ISOM_INVALID_FILE;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "132:  ptr->quality_entry_count = gf_bs_read_u8(bs);",
      "133:  for (i=0; i<ptr->quality_entry_count; i++) {",
      "134:   int j=0;",
      "135:   tmp_strsize=(u32)ptr->size;",
      "136:   while (tmp_strsize) {",
      "137:    ISOM_DECREASE_SIZE(ptr, 1)",
      "138:    tmp_str[j] = gf_bs_read_u8(bs);",
      "139:    tmp_strsize--;",
      "141:     break;",
      "142:    j++;",
      "143:   }",
      "145:   if (j) {",
      "146:    gf_list_insert(ptr->quality_entry_table, gf_strdup(tmp_str), i);",
      "147:   }",
      "",
      "[Removed Lines]",
      "140:    if (!tmp_str[j])",
      "",
      "[Added Lines]",
      "145:   zfound = GF_FALSE;",
      "151:    if (!tmp_str[j]) {",
      "152:     zfound = GF_TRUE;",
      "154:    }",
      "158:   if (!zfound)",
      "159:    return GF_ISOM_INVALID_FILE;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "150:  i=0;",
      "151:  tmp_strsize=(u32)ptr->size;",
      "152:  while (tmp_strsize) {",
      "153:   ISOM_DECREASE_SIZE(ptr, 1)",
      "154:   tmp_str[i] = gf_bs_read_u8(bs);",
      "155:   tmp_strsize--;",
      "157:    break;",
      "158:   i++;",
      "159:  }",
      "160:  if (i) {",
      "161:   ptr->drm_data = gf_strdup(tmp_str);",
      "162:  }",
      "164:  i=0;",
      "165:  tmp_strsize=(u32)ptr->size;",
      "166:  while (tmp_strsize) {",
      "167:   ISOM_DECREASE_SIZE(ptr, 1)",
      "168:   tmp_str[i] = gf_bs_read_u8(bs);",
      "169:   tmp_strsize--;",
      "171:    break;",
      "172:   i++;",
      "173:  }",
      "174:  if (i) {",
      "175:   ptr->meta_data = gf_strdup(tmp_str);",
      "176:  }",
      "",
      "[Removed Lines]",
      "156:   if (!tmp_str[i])",
      "170:   if (!tmp_str[i])",
      "",
      "[Added Lines]",
      "167:  zfound = GF_FALSE;",
      "172:   if (!tmp_str[i]) {",
      "173:    zfound = GF_TRUE;",
      "175:   }",
      "178:  if (!zfound)",
      "179:   return GF_ISOM_INVALID_FILE;",
      "186:  zfound = GF_FALSE;",
      "191:   if (!tmp_str[i]) {",
      "192:    zfound = GF_TRUE;",
      "194:   }",
      "197:  if (!zfound)",
      "198:   return GF_ISOM_INVALID_FILE;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e74be5976a6fee059c638050a237893f7e9a3b23",
      "candidate_info": {
        "commit_hash": "e74be5976a6fee059c638050a237893f7e9a3b23",
        "repo": "gpac/gpac",
        "commit_url": "https://github.com/gpac/gpac/commit/e74be5976a6fee059c638050a237893f7e9a3b23",
        "files": [
          "include/gpac/internal/isomedia_dev.h",
          "src/isomedia/box_code_adobe.c"
        ],
        "message": "fixed #1753",
        "before_after_code_files": [
          "include/gpac/internal/isomedia_dev.h||include/gpac/internal/isomedia_dev.h",
          "src/isomedia/box_code_adobe.c||src/isomedia/box_code_adobe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/isomedia/box_code_adobe.c||src/isomedia/box_code_adobe.c"
          ],
          "candidate": [
            "src/isomedia/box_code_adobe.c||src/isomedia/box_code_adobe.c"
          ]
        }
      },
      "candidate_diff": {
        "include/gpac/internal/isomedia_dev.h||include/gpac/internal/isomedia_dev.h": [
          "File: include/gpac/internal/isomedia_dev.h -> include/gpac/internal/isomedia_dev.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "599:   }\\",
          "600:   __ptr->size -= bytes; \\",
          "603: #define ISOM_DECREASE_SIZE_NO_ERR(__ptr, bytes) if (__ptr->size < (bytes) ) {\\",
          "604:    GF_LOG(GF_LOG_WARNING, GF_LOG_CONTAINER, (\"[isom] not enough bytes in box %s: %d left, reading %d (file %s, line %d), skipping box\\n\", gf_4cc_to_str(__ptr->type), (u32) __ptr->size, (bytes), __FILE__, __LINE__ )); \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "602: #define ISOM_DECREASE_SIZE_GOTO_EXIT(__ptr, bytes) if (__ptr->size < (bytes) ) {\\",
          "603:    GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[isom] not enough bytes in box %s: %d left, reading %d (file %s, line %d)\\n\", gf_4cc_to_str(__ptr->type), (u32) __ptr->size, (bytes), __FILE__, __LINE__ )); \\",
          "604:    e = GF_ISOM_INVALID_FILE; \\",
          "605:    goto exit;\\",
          "606:   }\\",
          "607:   __ptr->size -= bytes; \\",
          "",
          "---------------"
        ],
        "src/isomedia/box_code_adobe.c||src/isomedia/box_code_adobe.c": [
          "File: src/isomedia/box_code_adobe.c -> src/isomedia/box_code_adobe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:  u32 tmp_strsize;",
          "81:  char *tmp_str;",
          "82:  Bool zfound=GF_FALSE;",
          "85:  ISOM_DECREASE_SIZE(ptr, 25)",
          "86:  ptr->bootstrapinfo_version = gf_bs_read_u32(bs);",
          "",
          "[Removed Lines]",
          "83:  GF_Err e;",
          "",
          "[Added Lines]",
          "83:  GF_Err e = GF_OK;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "100:  memset(tmp_str, 0, sizeof(char)*tmp_strsize);",
          "102:  while (tmp_strsize) {",
          "104:   tmp_str[i] = gf_bs_read_u8(bs);",
          "105:   tmp_strsize--;",
          "106:   if (!tmp_str[i]) {",
          "",
          "[Removed Lines]",
          "103:   ISOM_DECREASE_SIZE(ptr, 1)",
          "",
          "[Added Lines]",
          "103:   ISOM_DECREASE_SIZE_GOTO_EXIT(ptr, 1)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "109:   }",
          "110:   i++;",
          "111:  }",
          "114:  if (i) {",
          "115:   ptr->movie_identifier = gf_strdup(tmp_str);",
          "116:  }",
          "119:  ptr->server_entry_count = gf_bs_read_u8(bs);",
          "120:  for (i=0; i<ptr->server_entry_count; i++) {",
          "121:   int j=0;",
          "122:   zfound = GF_FALSE;",
          "123:   tmp_strsize=(u32)ptr->size;",
          "124:   while (tmp_strsize) {",
          "126:    tmp_str[j] = gf_bs_read_u8(bs);",
          "127:    tmp_strsize--;",
          "128:    if (!tmp_str[j]) {",
          "",
          "[Removed Lines]",
          "112:  if (!zfound)",
          "113:   return GF_ISOM_INVALID_FILE;",
          "118:  ISOM_DECREASE_SIZE(ptr, 1)",
          "125:    ISOM_DECREASE_SIZE(ptr, 1)",
          "",
          "[Added Lines]",
          "112:  if (!zfound) {",
          "113:   e = GF_ISOM_INVALID_FILE;",
          "114:   goto exit;",
          "115:  }",
          "120:  ISOM_DECREASE_SIZE_GOTO_EXIT(ptr, 1)",
          "127:    ISOM_DECREASE_SIZE_GOTO_EXIT(ptr, 1)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "131:    }",
          "132:    j++;",
          "133:   }",
          "136:   if (j) {",
          "137:    gf_list_insert(ptr->server_entry_table, gf_strdup(tmp_str), i);",
          "138:   }",
          "139:  }",
          "142:  ptr->quality_entry_count = gf_bs_read_u8(bs);",
          "143:  for (i=0; i<ptr->quality_entry_count; i++) {",
          "144:   int j=0;",
          "145:   zfound = GF_FALSE;",
          "146:   tmp_strsize=(u32)ptr->size;",
          "147:   while (tmp_strsize) {",
          "149:    tmp_str[j] = gf_bs_read_u8(bs);",
          "150:    tmp_strsize--;",
          "151:    if (!tmp_str[j]) {",
          "",
          "[Removed Lines]",
          "134:   if (!zfound)",
          "135:    return GF_ISOM_INVALID_FILE;",
          "141:  ISOM_DECREASE_SIZE(ptr, 1)",
          "148:    ISOM_DECREASE_SIZE(ptr, 1)",
          "",
          "[Added Lines]",
          "136:   if (!zfound) {",
          "137:    e = GF_ISOM_INVALID_FILE;",
          "138:    goto exit;",
          "139:   }",
          "144:  if (ptr->server_entry_count != gf_list_count(ptr->server_entry_table)) {",
          "145:   e = GF_ISOM_INVALID_FILE;",
          "146:   goto exit;",
          "147:  }",
          "149:  ISOM_DECREASE_SIZE_GOTO_EXIT(ptr, 1)",
          "156:    ISOM_DECREASE_SIZE_GOTO_EXIT(ptr, 1)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "155:    j++;",
          "156:   }",
          "160:   if (j) {",
          "161:    gf_list_insert(ptr->quality_entry_table, gf_strdup(tmp_str), i);",
          "162:   }",
          "163:  }",
          "165:  i=0;",
          "166:  tmp_strsize=(u32)ptr->size;",
          "167:  zfound = GF_FALSE;",
          "168:  while (tmp_strsize) {",
          "170:   tmp_str[i] = gf_bs_read_u8(bs);",
          "171:   tmp_strsize--;",
          "172:   if (!tmp_str[i]) {",
          "",
          "[Removed Lines]",
          "158:   if (!zfound)",
          "159:    return GF_ISOM_INVALID_FILE;",
          "169:   ISOM_DECREASE_SIZE(ptr, 1)",
          "",
          "[Added Lines]",
          "166:   if (!zfound) {",
          "167:    e = GF_ISOM_INVALID_FILE;",
          "168:    goto exit;",
          "169:   }",
          "174:  if (ptr->quality_entry_count != gf_list_count(ptr->quality_entry_table)) {",
          "175:   e = GF_ISOM_INVALID_FILE;",
          "176:   goto exit;",
          "177:  }",
          "183:   ISOM_DECREASE_SIZE_GOTO_EXIT(ptr, 1)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "175:   }",
          "176:   i++;",
          "177:  }",
          "180:  if (i) {",
          "181:   ptr->drm_data = gf_strdup(tmp_str);",
          "182:  }",
          "",
          "[Removed Lines]",
          "178:  if (!zfound)",
          "179:   return GF_ISOM_INVALID_FILE;",
          "",
          "[Added Lines]",
          "192:  if (!zfound) {",
          "193:   e = GF_ISOM_INVALID_FILE;",
          "194:   goto exit;",
          "195:  }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "185:  tmp_strsize=(u32)ptr->size;",
          "186:  zfound = GF_FALSE;",
          "187:  while (tmp_strsize) {",
          "189:   tmp_str[i] = gf_bs_read_u8(bs);",
          "190:   tmp_strsize--;",
          "191:   if (!tmp_str[i]) {",
          "",
          "[Removed Lines]",
          "188:   ISOM_DECREASE_SIZE(ptr, 1)",
          "",
          "[Added Lines]",
          "205:   ISOM_DECREASE_SIZE_GOTO_EXIT(ptr, 1)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "194:   }",
          "195:   i++;",
          "196:  }",
          "199:  if (i) {",
          "200:   ptr->meta_data = gf_strdup(tmp_str);",
          "201:  }",
          "204:  ptr->segment_run_table_count = gf_bs_read_u8(bs);",
          "205:  for (i=0; i<ptr->segment_run_table_count; i++) {",
          "206:   GF_AdobeSegmentRunTableBox *asrt = NULL;",
          "207:   e = gf_isom_box_parse((GF_Box **)&asrt, bs);",
          "208:   if (e) {",
          "209:    if (asrt) gf_isom_box_del((GF_Box*)asrt);",
          "212:   }",
          "213:   gf_list_add(ptr->segment_run_table_entries, asrt);",
          "214:  }",
          "217:  ptr->fragment_run_table_count = gf_bs_read_u8(bs);",
          "218:  for (i=0; i<ptr->fragment_run_table_count; i++) {",
          "219:   GF_AdobeFragmentRunTableBox *afrt = NULL;",
          "220:   e = gf_isom_box_parse((GF_Box **)&afrt, bs);",
          "221:   if (e) {",
          "222:    if (afrt) gf_isom_box_del((GF_Box*)afrt);",
          "225:   }",
          "226:   gf_list_add(ptr->fragment_run_table_entries, afrt);",
          "227:  }",
          "229:  gf_free(tmp_str);",
          "232: }",
          "234: GF_Box *abst_box_new()",
          "",
          "[Removed Lines]",
          "197:  if (!zfound)",
          "198:   return GF_ISOM_INVALID_FILE;",
          "203:  ISOM_DECREASE_SIZE(ptr, 1)",
          "210:    gf_free(tmp_str);",
          "211:    return e;",
          "216:  ISOM_DECREASE_SIZE(ptr, 1)",
          "223:    gf_free(tmp_str);",
          "224:    return e;",
          "231:  return GF_OK;",
          "",
          "[Added Lines]",
          "214:  if (!zfound) {",
          "215:   e = GF_ISOM_INVALID_FILE;",
          "216:   goto exit;",
          "217:  }",
          "223:  ISOM_DECREASE_SIZE_GOTO_EXIT(ptr, 1)",
          "230:    goto exit;",
          "234:  if (ptr->segment_run_table_count != gf_list_count(ptr->segment_run_table_entries)) {",
          "235:   e = GF_ISOM_INVALID_FILE;",
          "236:   goto exit;",
          "237:  }",
          "239:  ISOM_DECREASE_SIZE_GOTO_EXIT(ptr, 1)",
          "246:    goto exit;",
          "250:  if (ptr->fragment_run_table_count != gf_list_count(ptr->fragment_run_table_entries)) {",
          "251:   e = GF_ISOM_INVALID_FILE;",
          "252:   goto exit;",
          "253:  }",
          "255: exit:",
          "257:  return e;",
          "",
          "---------------"
        ]
      }
    }
  ]
}