{
  "cve_id": "CVE-2019-10678",
  "cve_desc": "Domoticz before 4.10579 neglects to categorize \\n and \\r as insecure argument options.",
  "repo": "domoticz/domoticz",
  "patch_hash": "2119afbe74ee0c914c1d5c4c859c594c08b0ad42",
  "patch_info": {
    "commit_hash": "2119afbe74ee0c914c1d5c4c859c594c08b0ad42",
    "repo": "domoticz/domoticz",
    "commit_url": "https://github.com/domoticz/domoticz/commit/2119afbe74ee0c914c1d5c4c859c594c08b0ad42",
    "files": [
      "main/Helper.cpp"
    ],
    "message": "Do not allow enters/returns in arguments (thanks to Fabio Carretto)",
    "before_after_code_files": [
      "main/Helper.cpp||main/Helper.cpp"
    ]
  },
  "patch_diff": {
    "main/Helper.cpp||main/Helper.cpp": [
      "File: main/Helper.cpp -> main/Helper.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "1014:  \"$\",",
      "1015:  \"<\",",
      "1016:  \">\",",
      "1017:  NULL",
      "1018: };",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1017:  \"\\n\",",
      "1018:  \"\\r\",",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "14d3215833f2437e87d262b2976f198ed6b37caf",
      "candidate_info": {
        "commit_hash": "14d3215833f2437e87d262b2976f198ed6b37caf",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/14d3215833f2437e87d262b2976f198ed6b37caf",
        "files": [
          "main/RFXNames.cpp",
          "main/RFXtrx.h",
          "main/WebServer.cpp",
          "main/mainworker.cpp",
          "push/BasePush.cpp"
        ],
        "message": "Updated RXFCom SDK",
        "before_after_code_files": [
          "main/RFXNames.cpp||main/RFXNames.cpp",
          "main/RFXtrx.h||main/RFXtrx.h",
          "main/WebServer.cpp||main/WebServer.cpp",
          "main/mainworker.cpp||main/mainworker.cpp",
          "push/BasePush.cpp||push/BasePush.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "main/RFXNames.cpp||main/RFXNames.cpp": [
          "File: main/RFXNames.cpp -> main/RFXNames.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "628:  { pTypeLighting5, sTypeTRC02_2, \"TRC02_2 (RGB)\" },",
          "629:  { pTypeLighting5, sTypeAoke, \"Aoke\" },",
          "630:  { pTypeLighting5, sTypeEurodomest, \"Eurodomest\" },",
          "632:  { pTypeLighting5, sTypeRGB432W, \"RGB432W\" },",
          "633:  { pTypeLighting5, sTypeMDREMOTE107, \"MDRemote 107\" },",
          "634:  { pTypeLighting5, sTypeLegrandCAD, \"Legrand CAD\" },",
          "",
          "[Removed Lines]",
          "631:  { pTypeLighting5, sTypeLivoloAppliance, \"Livolo\" },",
          "",
          "[Added Lines]",
          "631:  { pTypeLighting5, sTypeLivolo1to10, \"Livolo 1 to 10\" },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "658:  { pTypeBlinds, sTypeBlindsT12, \"Confexx\" },",
          "659:  { pTypeBlinds, sTypeBlindsT13, \"Screenline\" },",
          "660:  { pTypeBlinds, sTypeBlindsT14, \"Hualite\" },",
          "662:  { pTypeSecurity1, sTypeSecX10, \"X10 security\" },",
          "663:  { pTypeSecurity1, sTypeSecX10M, \"X10 security motion\" },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "661:  { pTypeBlinds, sTypeBlindsT15, \"RFU\" },",
          "662:  { pTypeBlinds, sTypeBlindsT16, \"Zemismart\" },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "779:  { pTypeFan, sTypeLucciAirDC, \"Lucci Air DC\" },",
          "780:  { pTypeFan, sTypeCasafan, \"Casafan\" },",
          "781:  { pTypeFan, sTypeFT1211R, \"FT1211R\" },",
          "783:  { pTypeTEMP_RAIN, sTypeTR1, \"Alecto WS1200\" },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "784:  { pTypeFan, sTypeFalmec, \"Falmec\" },",
          "785:  { pTypeFan, sTypeLucciAirDCII, \"Lucci Air DC II\" },",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1296:     break;",
          "1297:    }",
          "1298:    break;",
          "1300:    bHaveGroupCmd = true;",
          "1301:    switch (nValue)",
          "1302:    {",
          "",
          "[Removed Lines]",
          "1299:   case sTypeLivoloAppliance:",
          "",
          "[Added Lines]",
          "1303:   case sTypeLivolo1to10:",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3647:   if (subtype == sTypeEMW100) { subtype = sSwitchTypeEMW100; devid = \"00\" + devid; }",
          "3648:   if (subtype == sTypeLivolo) { subtype = sSwitchTypeLivolo; devid = \"00\" + devid; }",
          "3649:   if (subtype == sTypeLightwaveRF) { subtype = sSwitchTypeLightwaveRF; devid = \"00\" + devid; }",
          "3651:   if (subtype == sTypeEurodomest) subtype = sSwitchTypeEurodomest;",
          "3652:  }",
          "3653:  else if (dtype == pTypeLighting6) {",
          "",
          "[Removed Lines]",
          "3650:   if (subtype == sTypeLivoloAppliance) { subtype = sSwitchTypeLivoloAppliance; devid = \"00\" + devid; }",
          "",
          "[Added Lines]",
          "3654:   if (subtype == sTypeLivolo1to10) { subtype = sSwitchTypeLivoloAppliance; devid = \"00\" + devid; }",
          "",
          "---------------"
        ],
        "main/RFXtrx.h||main/RFXtrx.h": [
          "File: main/RFXtrx.h -> main/RFXtrx.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: SDK version 9.21",
          "31:  Fan LucciAir DC added",
          "32:  Casafan added",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: SDK version 9.22",
          "31:  Falmec added",
          "32:  Fan LucciAir DCII added",
          "33:  Zemismart blinds added",
          "34:  Async port added",
          "35:  Firmware types added",
          "36:  Livolo 1-10 device changed",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "385: #define trxType43392 0x53",
          "386: #define trxType868 0x55",
          "390: #define msg3_AE 0x01   //AE Blyss",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "396: #define FWtyperec 0x0",
          "397: #define FWtype1 0x1",
          "398: #define FWtype2 0x2",
          "399: #define FWtypeExt 0x3",
          "400: #define FWtypeExt2 0x4",
          "401: #define FWtypePro1 0x5",
          "402: #define FWtypePro2 0x6",
          "403: #define FWtypeProXL1 0x10",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "560: #define sTypeAoke 0x07",
          "561: #define sTypeTRC02_2 0x08",
          "562: #define sTypeEurodomest 0x09",
          "564: #define sTypeRGB432W 0x0B",
          "565: #define sTypeMDREMOTE107 0x0C",
          "566: #define sTypeLegrandCAD 0x0D",
          "",
          "[Removed Lines]",
          "563: #define sTypeLivoloAppliance 0x0A",
          "",
          "[Added Lines]",
          "579: #define sTypeLivolo1to10 0x0A",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "600: #define light5_sSpeedMin 0x8",
          "601: #define light5_sSpeedPlus 0x9",
          "602: #define light5_sModeMin 0xA",
          "603: #define light5_sLivoloAllOff 0x00",
          "604: #define light5_sLivoloGang1Toggle 0x01",
          "605: #define light5_sLivoloGang2Toggle 0x02",
          "607: #define light5_sLivoloGang3Toggle 0x03",
          "615: #define light5_sRGBoff 0x00",
          "616: #define light5_sRGBon 0x01",
          "617: #define light5_sRGBbright 0x02",
          "",
          "[Removed Lines]",
          "606: #define light5_sLivoloDimR1plus 0x02",
          "608: #define light5_sLivoloDimR1min 0x03",
          "609: #define light5_sLivoloScene1R1 0x04",
          "610: #define light5_sLivoloScene2R1 0x05",
          "611: #define light5_sLivoloDimR2plus 0x06",
          "612: #define light5_sLivoloDimR2min 0x07",
          "613: #define light5_sLivoloScene1R2 0x08",
          "614: #define light5_sLivoloScene2R2 0x09",
          "",
          "[Added Lines]",
          "630: #define light5_sLivoloBright1 0x02",
          "631: #define light5_sLivoloDim1 0x03",
          "634: #define light5_sLivoloToggle1 0x01",
          "635: #define light5_sLivoloToggle2 0x02",
          "636: #define light5_sLivoloToggle3 0x03",
          "637: #define light5_sLivoloToggle4 0x04",
          "638: #define light5_sLivoloToggle5 0x05",
          "639: #define light5_sLivoloToggle6 0x06",
          "640: #define light5_sLivoloToggle7 0x07",
          "641: #define light5_sLivoloBright7 0x08",
          "642: #define light5_sLivoloDim7 0x09",
          "643: #define light5_sLivoloToggle8 0x0A",
          "644: #define light5_sLivoloToggle9 0x0B",
          "645: #define light5_sLivoloBright9 0x0C",
          "646: #define light5_sLivoloDim9 0x0D",
          "647: #define light5_sLivoloToggle10 0x0E",
          "648: #define light5_sLivoloScene1 0x0F",
          "649: #define light5_sLivoloScene2 0x10",
          "650: #define light5_sLivoloScene3 0x11",
          "651: #define light5_sLivoloScene4 0x12",
          "652: #define light5_sLivoloOkSet 0x13",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "661: #define sTypeLucciAirDC 0x5",
          "662: #define sTypeCasafan 0x6",
          "663: #define sTypeFT1211R 0x7",
          "665: #define fan_sTimer 0x1",
          "666: #define fan_sMin 0x2",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "703: #define sTypeFalmec 0x8",
          "704: #define sTypeLucciAirDCII 0x9",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "712: #define fan_FT1211R1H 0x9",
          "713: #define fan_FT1211R4H 0xA",
          "714: #define fan_FT1211R8H 0xB",
          "717: #define pTypeCurtain 0x18",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "756: #define fan_FalmecPower 0x1",
          "757: #define fan_FalmecSpeed1 0x2",
          "758: #define fan_FalmecSpeed2 0x3",
          "759: #define fan_FalmecSpeed3 0x4",
          "760: #define fan_FalmecSpeed4 0x5",
          "761: #define fan_FalmecTimer1 0x6",
          "762: #define fan_FalmecTimer2 0x7",
          "763: #define fan_FalmecTimer3 0x8",
          "764: #define fan_FalmecTimer4 0x9",
          "765: #define fan_FalmecLightOn 0xA",
          "766: #define fan_FalmecLightOff 0xB",
          "767: #define fan_LucciDCIIOff 0x1",
          "768: #define fan_LucciDCII1 0x2",
          "769: #define fan_LucciDCII2 0x3",
          "770: #define fan_LucciDCII3 0x4",
          "771: #define fan_LucciDCII4 0x5",
          "772: #define fan_LucciDCII5 0x6",
          "773: #define fan_LucciDCII6 0x7",
          "774: #define fan_LucciDCIILight 0x8",
          "775: #define fan_LucciDCIIReverse 0x9",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "738: #define sTypeBlindsT12 0xC //Confexx",
          "739: #define sTypeBlindsT13 0xD //Screenline",
          "740: #define sTypeBlindsT14 0xE //Hualite",
          "742: #define blinds_sOpen 0x0",
          "743: #define blinds_sClose 0x1",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "802: #define sTypeBlindsT15 0xF //RFU",
          "803: #define sTypeBlindsT16 0x10 //Zemismart",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "761: #define blinds_s10ChangeDirection 0x6",
          "762: #define blinds_s13anglePlus 0x4",
          "763: #define blinds_s13angleMinus 0x5",
          "766: #define pTypeRFY 0x1A",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "827: #define blinds_s16EraseCurrentCh 0x4",
          "828: #define blinds_s16ChangeDirection 0x5",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1064: #define sTypeCEencoder 0x2",
          "1065: #define sTypeLinky 0x3",
          "1068: #define pTypeRFXSensor 0x70",
          "1069: #define sTypeRFXSensorTemp 0x0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1133: #define pTypeASYNCPORT 0x61",
          "1134: #define sTypeASYNCconfig 0x01",
          "1135: #define asyncdisable 0x0",
          "1136: #define asyncreceiveP1 0x1",
          "1137: #define asyncbaud110 0x0",
          "1138: #define asyncbaud300 0x1",
          "1139: #define asyncbaud600 0x2",
          "1140: #define asyncbaud1200 0x3",
          "1141: #define asyncbaud2400 0x4",
          "1142: #define asyncbaud4800 0x5",
          "1143: #define asyncbaud9600 0x6",
          "1144: #define asyncbaud14400 0x7",
          "1145: #define asyncbaud19200 0x8",
          "1146: #define asyncbaud38400 0x9",
          "1147: #define asyncbaud57600 0xA",
          "1148: #define asyncbaud115200 0xB",
          "1149: #define asyncParityNo 0x0",
          "1150: #define asyncParityOdd 0x1",
          "1151: #define asyncParityEven 0x2",
          "1152: #define asyncDatabits7 0x7",
          "1153: #define asyncDatabits8 0x8",
          "1154: #define asyncStopbits1 0x1",
          "1155: #define asyncStopbits2 0x2",
          "1156: #define asyncPolarityNormal 0x0",
          "1157: #define asyncPolarityInvers 0x1",
          "1160: #define pTypeASYNCDATA 0x62",
          "1161: #define sTypeASYNCoverrun 0xF0",
          "1162: #define sTypeASYNCpacket1 0x01",
          "1163: #define sTypeASYNCpacket2 0x02",
          "1164: #define sTypeASYNCpacket3 0x03",
          "1165: #define sTypeASYNCpacket4 0x04",
          "1166: #define sTypeASYNCpacket5 0x05",
          "1167: #define sTypeASYNCpacket6 0x06",
          "1168: #define sTypeASYNCDpacket7 0x07",
          "1169: #define sTypeASYNClast 0xF0 //mask upper nibble indicates last packet",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2355: #endif",
          "2356:  } LINKY;",
          "2358:  struct {",
          "2359:   BYTE packetlength;",
          "2360:   BYTE packettype;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2462:  struct {",
          "2463:   BYTE packetlength;",
          "2464:   BYTE packettype;",
          "2465:   BYTE subtype;",
          "2466:   BYTE seqnbr;",
          "2467:   BYTE cmnd;",
          "2468:   BYTE baudrate;",
          "2469:   BYTE parity;",
          "2470:   BYTE databits;",
          "2471:   BYTE stopbits;",
          "2472:   BYTE polarity;",
          "2473:   BYTE filler1;",
          "2474:   BYTE filler2;",
          "2475:  } ASYNCPORT;",
          "2477:  struct {",
          "2478:   BYTE packetlength;",
          "2479:   BYTE packettype;",
          "2480:   BYTE subtype;",
          "2481:   BYTE seqnbr;",
          "2482:   BYTE datachar[252];",
          "2483:  } ASYNCDATA;",
          "",
          "---------------"
        ],
        "main/WebServer.cpp||main/WebServer.cpp": [
          "File: main/WebServer.cpp -> main/WebServer.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "4335:       (sunitcode.empty())",
          "4336:       )",
          "4337:       return;",
          "4339:       devid = \"00\" + id;",
          "4340:      else",
          "4341:       devid = id;",
          "",
          "[Removed Lines]",
          "4338:      if ((subtype != sTypeEMW100) && (subtype != sTypeLivolo) && (subtype != sTypeLivoloAppliance) && (subtype != sTypeRGB432W) && (subtype != sTypeIT))",
          "",
          "[Added Lines]",
          "4338:      if ((subtype != sTypeEMW100) && (subtype != sTypeLivolo) && (subtype != sTypeLivolo1to10) && (subtype != sTypeRGB432W) && (subtype != sTypeIT))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4899:       (sunitcode.empty())",
          "4900:       )",
          "4901:       return;",
          "4903:       devid = \"00\" + id;",
          "4904:      else",
          "4905:       devid = id;",
          "",
          "[Removed Lines]",
          "4902:      if ((subtype != sTypeEMW100) && (subtype != sTypeLivolo) && (subtype != sTypeLivoloAppliance) && (subtype != sTypeRGB432W) && (subtype != sTypeLightwaveRF) && (subtype != sTypeIT))",
          "",
          "[Added Lines]",
          "4902:      if ((subtype != sTypeEMW100) && (subtype != sTypeLivolo) && (subtype != sTypeLivolo1to10) && (subtype != sTypeRGB432W) && (subtype != sTypeLightwaveRF) && (subtype != sTypeIT))",
          "",
          "---------------"
        ],
        "main/mainworker.cpp||main/mainworker.cpp": [
          "File: main/mainworker.cpp -> main/mainworker.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "5054:  char szTmp[100];",
          "5055:  unsigned char devType = pTypeLighting5;",
          "5056:  unsigned char subType = pResponse->LIGHTING5.subtype;",
          "5058:   sprintf(szTmp, \"%02X%02X%02X\", pResponse->LIGHTING5.id1, pResponse->LIGHTING5.id2, pResponse->LIGHTING5.id3);",
          "5059:  else",
          "5060:   sprintf(szTmp, \"%02X%02X\", pResponse->LIGHTING5.id2, pResponse->LIGHTING5.id3);",
          "",
          "[Removed Lines]",
          "5057:  if ((subType != sTypeEMW100) && (subType != sTypeLivolo) && (subType != sTypeLivoloAppliance) && (subType != sTypeRGB432W) && (subType != sTypeKangtai))",
          "",
          "[Added Lines]",
          "5057:  if ((subType != sTypeEMW100) && (subType != sTypeLivolo) && (subType != sTypeLivolo1to10) && (subType != sTypeRGB432W) && (subType != sTypeKangtai))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5287:     break;",
          "5288:    }",
          "5289:    break;",
          "5291:    WriteMessage(\"subtype       = Livolo On/Off module\");",
          "5292:    sprintf(szTmp, \"Sequence nbr  = %d\", pResponse->LIGHTING5.seqnbr);",
          "5293:    WriteMessage(szTmp);",
          "",
          "[Removed Lines]",
          "5290:   case sTypeLivoloAppliance:",
          "",
          "[Added Lines]",
          "5290:   case sTypeLivolo1to10:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5716:   case sTypeFT1211R:",
          "5717:    WriteMessage(\"subtype       = FT1211R\");",
          "5718:    break;",
          "5719:   default:",
          "5720:    sprintf(szTmp, \"ERROR: Unknown Sub type for Packet type= %02X:%02X\", pResponse->LIGHTING6.packettype, pResponse->LIGHTING6.subtype);",
          "5721:    WriteMessage(szTmp);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5719:   case sTypeFalmec:",
          "5720:    WriteMessage(\"subtype       = Falmec\");",
          "5721:    break;",
          "5722:   case sTypeLucciAirDCII:",
          "5723:    WriteMessage(\"subtype       = Lucci Air DC II\");",
          "5724:    break;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "6259:   case sTypeBlindsT14:",
          "6260:    WriteMessage(\"subtype       = Hualite\");",
          "6261:    break;",
          "6262:   default:",
          "6263:    sprintf(szTmp, \"ERROR: Unknown Sub type for Packet type= %02X:%02X:\", pResponse->BLINDS1.packettype, pResponse->BLINDS1.subtype);",
          "6264:    WriteMessage(szTmp);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6268:   case sTypeBlindsT15:",
          "6269:    WriteMessage(\"subtype       = RFU\");",
          "6270:    break;",
          "6271:   case sTypeBlindsT16:",
          "6272:    WriteMessage(\"subtype       = Zemismart\");",
          "6273:    break;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "11460:    (dSubType == sTypeBlindsT8) ||",
          "11461:    (dSubType == sTypeBlindsT12) ||",
          "11462:    (dSubType == sTypeBlindsT13) ||",
          "11464:    )",
          "11465:   {",
          "11466:    lcmd.BLINDS1.unitcode = Unit;",
          "",
          "[Removed Lines]",
          "11463:    (dSubType == sTypeBlindsT14)",
          "",
          "[Added Lines]",
          "11475:    (dSubType == sTypeBlindsT14) ||",
          "11476:    (dSubType == sTypeBlindsT15) ||",
          "11477:    (dSubType == sTypeBlindsT16)",
          "",
          "---------------"
        ],
        "push/BasePush.cpp||push/BasePush.cpp": [
          "File: push/BasePush.cpp -> push/BasePush.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "119:   { pTypeLighting5, sTypeTRC02_2, \"Status\" },",
          "120:   { pTypeLighting5, sTypeAoke, \"Status\" },",
          "121:   { pTypeLighting5, sTypeEurodomest, \"Status\" },",
          "123:   { pTypeLighting5, sTypeRGB432W, \"Status\" },",
          "124:   { pTypeLighting5, sTypeMDREMOTE107, \"Status\" },",
          "125:   { pTypeLighting5, sTypeLegrandCAD, \"Status\" },",
          "",
          "[Removed Lines]",
          "122:   { pTypeLighting5, sTypeLivoloAppliance, \"Status\" },",
          "",
          "[Added Lines]",
          "122:   { pTypeLighting5, sTypeLivolo1to10, \"Status\" },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4dc82fc94e2a5e9a613b860285fcb6ab5ec7e66b",
      "candidate_info": {
        "commit_hash": "4dc82fc94e2a5e9a613b860285fcb6ab5ec7e66b",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/4dc82fc94e2a5e9a613b860285fcb6ab5ec7e66b",
        "files": [
          "www/app/DevicesController.js"
        ],
        "message": "Devices Tab, Scene/Group log icon added",
        "before_after_code_files": [
          "www/app/DevicesController.js||www/app/DevicesController.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "www/app/DevicesController.js||www/app/DevicesController.js": [
          "File: www/app/DevicesController.js -> www/app/DevicesController.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "277:        if ((item.Type == \"Group\") || (item.Type == \"Scene\")) {",
          "278:         itemSubIcons += '&nbsp;<img src=\"images/empty16.png\">';",
          "279:         itemSubIcons += '<img src=\"images/rename.png\" title=\"' + $.t('Rename Device') + '\" onclick=\"RenameDevice(' + item.idx + ',\\'' + item.Type + '\\',\\'' + escape(item.Name) + '\\')\">';",
          "280:        }",
          "281:        else {",
          "282:         if (item.Used != 0) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "280:         itemSubIcons += '&nbsp;<a href=\"#/Scenes/'+ item.idx +'/Log\"><img src=\"images/log.png\" title=\"' + $.t('Log') + '\"></a>';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "308:         itemSubIcons += '&nbsp;<a href=\"#/Devices/'+ item.idx +'/Log\"><img src=\"images/log.png\" title=\"' + $.t('Log') + '\"></a>';",
          "309:        }",
          "310:        else if ((/Temp|Thermostat|Humidity/i).test(item.Type)) {",
          "312:        }",
          "313:        else if ([",
          "314:         'Voltage', 'Current', 'Pressure', 'Custom Sensor',",
          "",
          "[Removed Lines]",
          "311:         itemSubIcons += '&nbsp;<a href=\"#Devices/'+item.idx+'/Log\"><img src=\"images/log.png\" title=\"' + $.t('Log') + '\"></a>';",
          "",
          "[Added Lines]",
          "312:         itemSubIcons += '&nbsp;<a href=\"#Devices/'+ item.idx +'/Log\"><img src=\"images/log.png\" title=\"' + $.t('Log') + '\"></a>';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9e90885e9fee8e5b3dca0abb7de9eb5ba5053f65",
      "candidate_info": {
        "commit_hash": "9e90885e9fee8e5b3dca0abb7de9eb5ba5053f65",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/9e90885e9fee8e5b3dca0abb7de9eb5ba5053f65",
        "files": [
          "push/BasePush.cpp",
          "push/InfluxPush.cpp"
        ],
        "message": "Added EvoHome radiator Valve Value to Pushers InfluxDB worker, removed duplicate wait",
        "before_after_code_files": [
          "push/BasePush.cpp||push/BasePush.cpp",
          "push/InfluxPush.cpp||push/InfluxPush.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "push/BasePush.cpp||push/BasePush.cpp": [
          "File: push/BasePush.cpp -> push/BasePush.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "290:   { pTypeEvohome, sTypeEvohome, \"Status\" },",
          "291:   { pTypeEvohomeZone, sTypeEvohomeZone, \"Temperature,Set point,Status\" },",
          "292:   { pTypeEvohomeWater, sTypeEvohomeWater, \"Temperature,State,Status\" },",
          "295:   { pTypeGeneralSwitch, sSwitchTypeX10, \"Status\" },",
          "296:   { pTypeGeneralSwitch, sSwitchTypeARC, \"Status\" },",
          "",
          "[Removed Lines]",
          "293:   { pTypeEvohomeRelay, sTypeEvohomeRelay, \"Status\" },",
          "",
          "[Added Lines]",
          "293:   { pTypeEvohomeRelay, sTypeEvohomeRelay, \"Status,Value\" },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "645:  }",
          "646:  else if (vType == \"Value\")",
          "647:  {",
          "649:  }",
          "650:  else if (vType == \"Visibility\")",
          "651:  {",
          "",
          "[Removed Lines]",
          "648:   sprintf(szData, \"%d\", atoi(rawsendValue.c_str())); //??",
          "",
          "[Added Lines]",
          "648:   sprintf(szData, \"%d\", atoi(rawsendValue.c_str()));",
          "",
          "---------------"
        ],
        "push/InfluxPush.cpp||push/InfluxPush.cpp": [
          "File: push/InfluxPush.cpp -> push/InfluxPush.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "174:  while (!IsStopRequested(500))",
          "175:  {",
          "178:   { // additional scope for lock (accessing size should be within lock too)",
          "179:    std::lock_guard<std::mutex> l(m_background_task_mutex);",
          "180:    if (m_background_task_queue.empty())",
          "",
          "[Removed Lines]",
          "176:   sleep_milliseconds(500);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9401b3e28766779c26ebfecd6429e486afe4a8d4",
      "candidate_info": {
        "commit_hash": "9401b3e28766779c26ebfecd6429e486afe4a8d4",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/9401b3e28766779c26ebfecd6429e486afe4a8d4",
        "files": [
          "www/views/hardware.html"
        ],
        "message": "Corrected RSL label",
        "before_after_code_files": [
          "www/views/hardware.html||www/views/hardware.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "www/views/hardware.html||www/views/hardware.html": [
          "File: www/views/hardware.html -> www/views/hardware.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "798:   </tr>",
          "799:   <tr>",
          "800:    <td></td>",
          "802:    <td><input type=\"checkbox\" id=\"Legrand\" name=\"Legrand\">&nbsp;<label for=\"Legrand\">Legrand CAD</label></td>",
          "803:    <td><input type=\"checkbox\" id=\"Meiantech\" name=\"Meiantech\">&nbsp;<label for=\"Meiantech\">Meiantech</label></td>",
          "804:   </tr>",
          "",
          "[Removed Lines]",
          "801:    <td><input type=\"checkbox\" id=\"RSL\" name=\"RSL\">&nbsp;<label for=\"rfu4\">Conrad RSL</label></td>",
          "",
          "[Added Lines]",
          "801:    <td><input type=\"checkbox\" id=\"RSL\" name=\"RSL\">&nbsp;<label for=\"RSL\">Conrad RSL</label></td>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "358df963a2e1555252b19c4ea7e484834ffa1bd9",
      "candidate_info": {
        "commit_hash": "358df963a2e1555252b19c4ea7e484834ffa1bd9",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/358df963a2e1555252b19c4ea7e484834ffa1bd9",
        "files": [
          "History.txt",
          "hardware/OpenZWave.cpp"
        ],
        "message": "- Implemented: OpenZWave, controller options for RetryTimeout, AssumeAwake and PerformReturnRoutes can now be set",
        "before_after_code_files": [
          "hardware/OpenZWave.cpp||hardware/OpenZWave.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "hardware/OpenZWave.cpp||hardware/OpenZWave.cpp": [
          "File: hardware/OpenZWave.cpp -> hardware/OpenZWave.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "982:  }",
          "983:  OpenZWave::Options::Get()->AddOptionString(\"NetworkKey\", sValue, false);",
          "985:  OpenZWave::Options::Get()->Lock();",
          "987:  OpenZWave::Manager::Create();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "985:  int nValue = 3000; //default 10000",
          "986:  m_sql.GetPreferencesVar(\"ZWaveRetryTimeout\", nValue);",
          "987:  OpenZWave::Options::Get()->AddOptionInt(\"RetryTimeout\", nValue);",
          "989:  nValue = 0; //default true",
          "990:  m_sql.GetPreferencesVar(\"ZWaveAssumeAwake\", nValue);",
          "991:  OpenZWave::Options::Get()->AddOptionBool(\"AssumeAwake\", (nValue == 1) ? true : false);",
          "993:  nValue = 1; //default true",
          "994:  m_sql.GetPreferencesVar(\"ZWavePerformReturnRoutes\", nValue);",
          "995:  OpenZWave::Options::Get()->AddOptionBool(\"PerformReturnRoutes\", (nValue == 1) ? true : false);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4072:   root[\"result\"][index][\"config\"][ivalue][\"LastUpdate\"] = \"-\";",
          "4073:   ivalue++;",
          "4076:   uint32_t Manufacturer_id;",
          "4077:   uint32_t Product_type;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4087:   root[\"result\"][index][\"config\"][ivalue][\"type\"] = \"short\";",
          "4088:   int nValue = 3000;",
          "4089:   m_sql.GetPreferencesVar(\"ZWaveRetryTimeout\", nValue);",
          "4090:   root[\"result\"][index][\"config\"][ivalue][\"value\"] = nValue;",
          "4092:   root[\"result\"][index][\"config\"][ivalue][\"index\"] = vIndex++;",
          "4093:   root[\"result\"][index][\"config\"][ivalue][\"label\"] = \"RetryTimeout\";",
          "4094:   root[\"result\"][index][\"config\"][ivalue][\"units\"] = \"ms\"; //",
          "4095:   root[\"result\"][index][\"config\"][ivalue][\"help\"] = \"How long do we wait to timeout messages sent\";",
          "4096:   root[\"result\"][index][\"config\"][ivalue][\"LastUpdate\"] = \"-\";",
          "4097:   ivalue++;",
          "4100:   root[\"result\"][index][\"config\"][ivalue][\"type\"] = \"list\";",
          "4101:   nValue = 0;",
          "4102:   m_sql.GetPreferencesVar(\"ZWaveAssumeAwake\", nValue);",
          "4104:   root[\"result\"][index][\"config\"][ivalue][\"index\"] = vIndex++;",
          "4105:   root[\"result\"][index][\"config\"][ivalue][\"label\"] = \"Assume Awake\";",
          "4106:   root[\"result\"][index][\"config\"][ivalue][\"units\"] = \"\";",
          "4107:   root[\"result\"][index][\"config\"][ivalue][\"help\"] = \"Assume Devices that Support the Wakeup CC are awake when we first query them....\";",
          "4108:   root[\"result\"][index][\"config\"][ivalue][\"LastUpdate\"] = \"-\";",
          "4109:   root[\"result\"][index][\"config\"][ivalue][\"list_items\"] = 2;",
          "4110:   root[\"result\"][index][\"config\"][ivalue][\"listitem\"][0] = \"False\";",
          "4111:   root[\"result\"][index][\"config\"][ivalue][\"listitem\"][1] = \"True\";",
          "4112:   root[\"result\"][index][\"config\"][ivalue][\"value\"] = (nValue == 0) ? \"False\" : \"True\";",
          "4113:   ivalue++;",
          "4116:   root[\"result\"][index][\"config\"][ivalue][\"type\"] = \"list\";",
          "4117:   nValue = 1;",
          "4118:   m_sql.GetPreferencesVar(\"ZWavePerformReturnRoutes\", nValue);",
          "4120:   root[\"result\"][index][\"config\"][ivalue][\"index\"] = vIndex++;",
          "4121:   root[\"result\"][index][\"config\"][ivalue][\"label\"] = \"Perform Return Routes\";",
          "4122:   root[\"result\"][index][\"config\"][ivalue][\"units\"] = \"\";",
          "4123:   root[\"result\"][index][\"config\"][ivalue][\"help\"] = \"if True, return routes will be updated\";",
          "4124:   root[\"result\"][index][\"config\"][ivalue][\"LastUpdate\"] = \"-\";",
          "4125:   root[\"result\"][index][\"config\"][ivalue][\"list_items\"] = 2;",
          "4126:   root[\"result\"][index][\"config\"][ivalue][\"listitem\"][0] = \"False\";",
          "4127:   root[\"result\"][index][\"config\"][ivalue][\"listitem\"][1] = \"True\";",
          "4128:   root[\"result\"][index][\"config\"][ivalue][\"value\"] = (nValue == 0) ? \"False\" : \"True\";",
          "4129:   ivalue++;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4320:     }",
          "4321:    }",
          "4322:    else if (rvIndex == 5)",
          "4323:    {",
          "4324:     uint32_t Manufacturer_id;",
          "4325:     uint32_t Product_type;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4379:    {",
          "4381:     int nValue = atoi(ValueVal.c_str());",
          "4382:     int old_value = 3000;",
          "4383:     m_sql.GetPreferencesVar(\"ZWaveRetryTimeout\", old_value);",
          "4384:     if (old_value != nValue)",
          "4385:     {",
          "4386:      m_sql.UpdatePreferencesVar(\"ZWaveRetryTimeout\", nValue);",
          "4387:      bRestartOpenZWave = true;",
          "4388:     }",
          "4389:    }",
          "4390:    else if (rvIndex == 6)",
          "4391:    {",
          "4393:     int nValue = (ValueVal == \"False\") ? 0 : 1;",
          "4394:     int old_value = 0;",
          "4395:     m_sql.GetPreferencesVar(\"ZWaveAssumeAwake\", old_value);",
          "4396:     if (old_value != nValue)",
          "4397:     {",
          "4398:      m_sql.UpdatePreferencesVar(\"ZWaveAssumeAwake\", nValue);",
          "4399:      bRestartOpenZWave = true;",
          "4400:     }",
          "4401:    }",
          "4402:    else if (rvIndex == 7)",
          "4403:    {",
          "4405:     int nValue = (ValueVal == \"False\") ? 0 : 1;",
          "4406:     int old_value = 1;",
          "4407:     m_sql.GetPreferencesVar(\"ZWavePerformReturnRoutes\", old_value);",
          "4408:     if (old_value != nValue)",
          "4409:     {",
          "4410:      m_sql.UpdatePreferencesVar(\"ZWavePerformReturnRoutes\", nValue);",
          "4411:      bRestartOpenZWave = true;",
          "4412:     }",
          "4413:    }",
          "4414:    else if (rvIndex == 8)",
          "",
          "---------------"
        ]
      }
    }
  ]
}