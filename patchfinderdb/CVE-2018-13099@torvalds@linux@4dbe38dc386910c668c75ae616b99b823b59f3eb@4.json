{
  "cve_id": "CVE-2018-13099",
  "cve_desc": "An issue was discovered in fs/f2fs/inline.c in the Linux kernel through 4.4. A denial of service (out-of-bounds memory access and BUG) can occur for a modified f2fs filesystem image in which an inline inode contains an invalid reserved blkaddr.",
  "repo": "torvalds/linux",
  "patch_hash": "4dbe38dc386910c668c75ae616b99b823b59f3eb",
  "patch_info": {
    "commit_hash": "4dbe38dc386910c668c75ae616b99b823b59f3eb",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/4dbe38dc386910c668c75ae616b99b823b59f3eb",
    "files": [
      "fs/f2fs/inline.c"
    ],
    "message": "f2fs: fix to do sanity check with reserved blkaddr of inline inode\n\nAs Wen Xu reported in bugzilla, after image was injected with random data\nby fuzzing, inline inode would contain invalid reserved blkaddr, then\nduring inline conversion, we will encounter illegal memory accessing\nreported by KASAN, the root cause of this is when writing out converted\ninline page, we will use invalid reserved blkaddr to update sit bitmap,\nresult in accessing memory beyond sit bitmap boundary.\n\nIn order to fix this issue, let's do sanity check with reserved block\naddress of inline inode to avoid above condition.\n\nhttps://bugzilla.kernel.org/show_bug.cgi?id=200179\n\n[ 1428.846352] BUG: KASAN: use-after-free in update_sit_entry+0x80/0x7f0\n[ 1428.846618] Read of size 4 at addr ffff880194483540 by task a.out/2741\n\n[ 1428.846855] CPU: 0 PID: 2741 Comm: a.out Tainted: G        W         4.17.0+ #1\n[ 1428.846858] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014\n[ 1428.846860] Call Trace:\n[ 1428.846868]  dump_stack+0x71/0xab\n[ 1428.846875]  print_address_description+0x6b/0x290\n[ 1428.846881]  kasan_report+0x28e/0x390\n[ 1428.846888]  ? update_sit_entry+0x80/0x7f0\n[ 1428.846898]  update_sit_entry+0x80/0x7f0\n[ 1428.846906]  f2fs_allocate_data_block+0x6db/0xc70\n[ 1428.846914]  ? f2fs_get_node_info+0x14f/0x590\n[ 1428.846920]  do_write_page+0xc8/0x150\n[ 1428.846928]  f2fs_outplace_write_data+0xfe/0x210\n[ 1428.846935]  ? f2fs_do_write_node_page+0x170/0x170\n[ 1428.846941]  ? radix_tree_tag_clear+0xff/0x130\n[ 1428.846946]  ? __mod_node_page_state+0x22/0xa0\n[ 1428.846951]  ? inc_zone_page_state+0x54/0x100\n[ 1428.846956]  ? __test_set_page_writeback+0x336/0x5d0\n[ 1428.846964]  f2fs_convert_inline_page+0x407/0x6d0\n[ 1428.846971]  ? f2fs_read_inline_data+0x3b0/0x3b0\n[ 1428.846978]  ? __get_node_page+0x335/0x6b0\n[ 1428.846987]  f2fs_convert_inline_inode+0x41b/0x500\n[ 1428.846994]  ? f2fs_convert_inline_page+0x6d0/0x6d0\n[ 1428.847000]  ? kasan_unpoison_shadow+0x31/0x40\n[ 1428.847005]  ? kasan_kmalloc+0xa6/0xd0\n[ 1428.847024]  f2fs_file_mmap+0x79/0xc0\n[ 1428.847029]  mmap_region+0x58b/0x880\n[ 1428.847037]  ? arch_get_unmapped_area+0x370/0x370\n[ 1428.847042]  do_mmap+0x55b/0x7a0\n[ 1428.847048]  vm_mmap_pgoff+0x16f/0x1c0\n[ 1428.847055]  ? vma_is_stack_for_current+0x50/0x50\n[ 1428.847062]  ? __fsnotify_update_child_dentry_flags.part.1+0x160/0x160\n[ 1428.847068]  ? do_sys_open+0x206/0x2a0\n[ 1428.847073]  ? __fget+0xb4/0x100\n[ 1428.847079]  ksys_mmap_pgoff+0x278/0x360\n[ 1428.847085]  ? find_mergeable_anon_vma+0x50/0x50\n[ 1428.847091]  do_syscall_64+0x73/0x160\n[ 1428.847098]  entry_SYSCALL_64_after_hwframe+0x44/0xa9\n[ 1428.847102] RIP: 0033:0x7fb1430766ba\n[ 1428.847103] Code: 89 f5 41 54 49 89 fc 55 53 74 35 49 63 e8 48 63 da 4d 89 f9 49 89 e8 4d 63 d6 48 89 da 4c 89 ee 4c 89 e7 b8 09 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 56 5b 5d 41 5c 41 5d 41 5e 41 5f c3 0f 1f 00\n[ 1428.847162] RSP: 002b:00007ffc651d9388 EFLAGS: 00000246 ORIG_RAX: 0000000000000009\n[ 1428.847167] RAX: ffffffffffffffda RBX: 0000000000000001 RCX: 00007fb1430766ba\n[ 1428.847170] RDX: 0000000000000001 RSI: 0000000000001000 RDI: 0000000000000000\n[ 1428.847173] RBP: 0000000000000003 R08: 0000000000000003 R09: 0000000000000000\n[ 1428.847176] R10: 0000000000008002 R11: 0000000000000246 R12: 0000000000000000\n[ 1428.847179] R13: 0000000000001000 R14: 0000000000008002 R15: 0000000000000000\n\n[ 1428.847252] Allocated by task 2683:\n[ 1428.847372]  kasan_kmalloc+0xa6/0xd0\n[ 1428.847380]  kmem_cache_alloc+0xc8/0x1e0\n[ 1428.847385]  getname_flags+0x73/0x2b0\n[ 1428.847390]  user_path_at_empty+0x1d/0x40\n[ 1428.847395]  vfs_statx+0xc1/0x150\n[ 1428.847401]  __do_sys_newlstat+0x7e/0xd0\n[ 1428.847405]  do_syscall_64+0x73/0x160\n[ 1428.847411]  entry_SYSCALL_64_after_hwframe+0x44/0xa9\n\n[ 1428.847466] Freed by task 2683:\n[ 1428.847566]  __kasan_slab_free+0x137/0x190\n[ 1428.847571]  kmem_cache_free+0x85/0x1e0\n[ 1428.847575]  filename_lookup+0x191/0x280\n[ 1428.847580]  vfs_statx+0xc1/0x150\n[ 1428.847585]  __do_sys_newlstat+0x7e/0xd0\n[ 1428.847590]  do_syscall_64+0x73/0x160\n[ 1428.847596]  entry_SYSCALL_64_after_hwframe+0x44/0xa9\n\n[ 1428.847648] The buggy address belongs to the object at ffff880194483300\n                which belongs to the cache names_cache of size 4096\n[ 1428.847946] The buggy address is located 576 bytes inside of\n                4096-byte region [ffff880194483300, ffff880194484300)\n[ 1428.848234] The buggy address belongs to the page:\n[ 1428.848366] page:ffffea0006512000 count:1 mapcount:0 mapping:ffff8801f3586380 index:0x0 compound_mapcount: 0\n[ 1428.848606] flags: 0x17fff8000008100(slab|head)\n[ 1428.848737] raw: 017fff8000008100 dead000000000100 dead000000000200 ffff8801f3586380\n[ 1428.848931] raw: 0000000000000000 0000000000070007 00000001ffffffff 0000000000000000\n[ 1428.849122] page dumped because: kasan: bad access detected\n\n[ 1428.849305] Memory state around the buggy address:\n[ 1428.849436]  ffff880194483400: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n[ 1428.849620]  ffff880194483480: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n[ 1428.849804] >ffff880194483500: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n[ 1428.849985]                                            ^\n[ 1428.850120]  ffff880194483580: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n[ 1428.850303]  ffff880194483600: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n[ 1428.850498] ==================================================================\n\nReported-by: Wen Xu <wen.xu@gatech.edu>\nSigned-off-by: Chao Yu <yuchao0@huawei.com>\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>",
    "before_after_code_files": [
      "fs/f2fs/inline.c||fs/f2fs/inline.c"
    ]
  },
  "patch_diff": {
    "fs/f2fs/inline.c||fs/f2fs/inline.c": [
      "File: fs/f2fs/inline.c -> fs/f2fs/inline.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130:  if (err)",
      "131:   return err;",
      "133:  f2fs_bug_on(F2FS_P_SB(page), PageWriteback(page));",
      "135:  f2fs_do_read_inline_data(page, dn->inode_page);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:  if (unlikely(dn->data_blkaddr != NEW_ADDR)) {",
      "134:   f2fs_put_dnode(dn);",
      "135:   set_sbi_flag(fio.sbi, SBI_NEED_FSCK);",
      "136:   f2fs_msg(fio.sbi->sb, KERN_WARNING,",
      "137:    \"%s: corrupted inline inode ino=%lx, i_addr[0]:0x%x, \"",
      "138:    \"run fsck to fix.\",",
      "139:    __func__, dn->inode->i_ino, dn->data_blkaddr);",
      "140:   return -EINVAL;",
      "141:  }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "363:  if (err)",
      "364:   goto out;",
      "366:  f2fs_wait_on_page_writeback(page, DATA, true);",
      "368:  dentry_blk = page_address(page);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "376:  if (unlikely(dn.data_blkaddr != NEW_ADDR)) {",
      "377:   f2fs_put_dnode(&dn);",
      "378:   set_sbi_flag(F2FS_P_SB(page), SBI_NEED_FSCK);",
      "379:   f2fs_msg(F2FS_P_SB(page)->sb, KERN_WARNING,",
      "380:    \"%s: corrupted inline inode ino=%lx, i_addr[0]:0x%x, \"",
      "381:    \"run fsck to fix.\",",
      "382:    __func__, dir->i_ino, dn.data_blkaddr);",
      "383:   err = -EINVAL;",
      "384:   goto out;",
      "385:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "10f966bbf521bb9b2e497bbca496a5141f4071d0",
      "candidate_info": {
        "commit_hash": "10f966bbf521bb9b2e497bbca496a5141f4071d0",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/10f966bbf521bb9b2e497bbca496a5141f4071d0",
        "files": [
          "fs/f2fs/checkpoint.c",
          "fs/f2fs/data.c",
          "fs/f2fs/dir.c",
          "fs/f2fs/f2fs.h",
          "fs/f2fs/file.c",
          "fs/f2fs/gc.c",
          "fs/f2fs/inline.c",
          "fs/f2fs/inode.c",
          "fs/f2fs/node.c",
          "fs/f2fs/recovery.c",
          "fs/f2fs/segment.c",
          "fs/f2fs/segment.h",
          "fs/f2fs/super.c",
          "fs/f2fs/xattr.c"
        ],
        "message": "f2fs: use generic EFSBADCRC/EFSCORRUPTED\n\nf2fs uses EFAULT as error number to indicate filesystem is corrupted\nall the time, but generic filesystems use EUCLEAN for such condition,\nwe need to change to follow others.\n\nThis patch adds two new macros as below to wrap more generic error\ncode macros, and spread them in code.\n\nEFSBADCRC\tEBADMSG\t\t/* Bad CRC detected */\nEFSCORRUPTED\tEUCLEAN\t\t/* Filesystem is corrupted */\n\nReported-by: Pavel Machek <pavel@ucw.cz>\nSigned-off-by: Chao Yu <yuchao0@huawei.com>\nAcked-by: Pavel Machek <pavel@ucw.cz>\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>",
        "before_after_code_files": [
          "fs/f2fs/checkpoint.c||fs/f2fs/checkpoint.c",
          "fs/f2fs/data.c||fs/f2fs/data.c",
          "fs/f2fs/dir.c||fs/f2fs/dir.c",
          "fs/f2fs/f2fs.h||fs/f2fs/f2fs.h",
          "fs/f2fs/file.c||fs/f2fs/file.c",
          "fs/f2fs/gc.c||fs/f2fs/gc.c",
          "fs/f2fs/inline.c||fs/f2fs/inline.c",
          "fs/f2fs/inode.c||fs/f2fs/inode.c",
          "fs/f2fs/node.c||fs/f2fs/node.c",
          "fs/f2fs/recovery.c||fs/f2fs/recovery.c",
          "fs/f2fs/segment.c||fs/f2fs/segment.c",
          "fs/f2fs/segment.h||fs/f2fs/segment.h",
          "fs/f2fs/super.c||fs/f2fs/super.c",
          "fs/f2fs/xattr.c||fs/f2fs/xattr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/f2fs/inline.c||fs/f2fs/inline.c"
          ],
          "candidate": [
            "fs/f2fs/inline.c||fs/f2fs/inline.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/f2fs/checkpoint.c||fs/f2fs/checkpoint.c": [
          "File: fs/f2fs/checkpoint.c -> fs/f2fs/checkpoint.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "890:  unsigned int cp_blks = 1 + __cp_payload(sbi);",
          "891:  block_t cp_blk_no;",
          "892:  int i;",
          "894:  sbi->ckpt = f2fs_kzalloc(sbi, array_size(blk_size, cp_blks),",
          "895:      GFP_KERNEL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "893:  int err;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "917:  } else if (cp2) {",
          "918:   cur_page = cp2;",
          "919:  } else {",
          "920:   goto fail_no_cp;",
          "921:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "921:   err = -EFSCORRUPTED;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "929:   sbi->cur_cp_pack = 2;",
          "933:   goto free_fail_no_cp;",
          "935:  if (cp_blks <= 1)",
          "936:   goto done;",
          "",
          "[Removed Lines]",
          "932:  if (f2fs_sanity_check_ckpt(sbi))",
          "",
          "[Added Lines]",
          "934:  if (f2fs_sanity_check_ckpt(sbi)) {",
          "935:   err = -EFSCORRUPTED;",
          "937:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "944:   unsigned char *ckpt = (unsigned char *)sbi->ckpt;",
          "946:   cur_page = f2fs_get_meta_page(sbi, cp_blk_no + i);",
          "948:    goto free_fail_no_cp;",
          "949:   sit_bitmap_ptr = page_address(cur_page);",
          "950:   memcpy(ckpt + i * blk_size, sit_bitmap_ptr, blk_size);",
          "951:   f2fs_put_page(cur_page, 1);",
          "",
          "[Removed Lines]",
          "947:   if (IS_ERR(cur_page))",
          "",
          "[Added Lines]",
          "951:   if (IS_ERR(cur_page)) {",
          "952:    err = PTR_ERR(cur_page);",
          "954:   }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "960:  f2fs_put_page(cp2, 1);",
          "961: fail_no_cp:",
          "962:  kvfree(sbi->ckpt);",
          "964: }",
          "966: static void __add_dirty_inode(struct inode *inode, enum inode_type type)",
          "",
          "[Removed Lines]",
          "963:  return -EINVAL;",
          "",
          "[Added Lines]",
          "969:  return err;",
          "",
          "---------------"
        ],
        "fs/f2fs/data.c||fs/f2fs/data.c": [
          "File: fs/f2fs/data.c -> fs/f2fs/data.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "455:  if (!f2fs_is_valid_blkaddr(fio->sbi, fio->new_blkaddr,",
          "456:    fio->is_por ? META_POR : (__is_meta_io(fio) ?",
          "457:    META_GENERIC : DATA_GENERIC_ENHANCE)))",
          "460:  trace_f2fs_submit_page_bio(page, fio);",
          "461:  f2fs_trace_ios(fio, 0);",
          "",
          "[Removed Lines]",
          "458:   return -EFAULT;",
          "",
          "[Added Lines]",
          "458:   return -EFSCORRUPTED;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "490:  if (!f2fs_is_valid_blkaddr(fio->sbi, fio->new_blkaddr,",
          "491:    __is_meta_io(fio) ? META_GENERIC : DATA_GENERIC))",
          "494:  trace_f2fs_submit_page_bio(page, fio);",
          "495:  f2fs_trace_ios(fio, 0);",
          "",
          "[Removed Lines]",
          "492:   return -EFAULT;",
          "",
          "[Added Lines]",
          "492:   return -EFSCORRUPTED;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "789:   dn.data_blkaddr = ei.blk + index - ei.fofs;",
          "790:   if (!f2fs_is_valid_blkaddr(F2FS_I_SB(inode), dn.data_blkaddr,",
          "791:       DATA_GENERIC_ENHANCE_READ)) {",
          "793:    goto put_err;",
          "794:   }",
          "795:   goto got_it;",
          "",
          "[Removed Lines]",
          "792:    err = -EFAULT;",
          "",
          "[Added Lines]",
          "792:    err = -EFSCORRUPTED;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "809:    !f2fs_is_valid_blkaddr(F2FS_I_SB(inode),",
          "810:       dn.data_blkaddr,",
          "811:       DATA_GENERIC_ENHANCE)) {",
          "813:   goto put_err;",
          "814:  }",
          "815: got_it:",
          "",
          "[Removed Lines]",
          "812:   err = -EFAULT;",
          "",
          "[Added Lines]",
          "812:   err = -EFSCORRUPTED;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1156:  if (__is_valid_data_blkaddr(blkaddr) &&",
          "1157:   !f2fs_is_valid_blkaddr(sbi, blkaddr, DATA_GENERIC_ENHANCE)) {",
          "1159:   goto sync_out;",
          "1160:  }",
          "",
          "[Removed Lines]",
          "1158:   err = -EFAULT;",
          "",
          "[Added Lines]",
          "1158:   err = -EFSCORRUPTED;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1626:   if (!f2fs_is_valid_blkaddr(F2FS_I_SB(inode), block_nr,",
          "1627:       DATA_GENERIC_ENHANCE_READ)) {",
          "1629:    goto out;",
          "1630:   }",
          "1631:  } else {",
          "",
          "[Removed Lines]",
          "1628:    ret = -EFAULT;",
          "",
          "[Added Lines]",
          "1628:    ret = -EFSCORRUPTED;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1907:   if (!f2fs_is_valid_blkaddr(fio->sbi, fio->old_blkaddr,",
          "1908:       DATA_GENERIC_ENHANCE))",
          "1911:   ipu_force = true;",
          "1912:   fio->need_lock = LOCK_DONE;",
          "",
          "[Removed Lines]",
          "1909:    return -EFAULT;",
          "",
          "[Added Lines]",
          "1909:    return -EFSCORRUPTED;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1933:  if (__is_valid_data_blkaddr(fio->old_blkaddr) &&",
          "1934:   !f2fs_is_valid_blkaddr(fio->sbi, fio->old_blkaddr,",
          "1935:       DATA_GENERIC_ENHANCE)) {",
          "1937:   goto out_writepage;",
          "1938:  }",
          "",
          "[Removed Lines]",
          "1936:   err = -EFAULT;",
          "",
          "[Added Lines]",
          "1936:   err = -EFSCORRUPTED;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2606:  } else {",
          "2607:   if (!f2fs_is_valid_blkaddr(sbi, blkaddr,",
          "2608:     DATA_GENERIC_ENHANCE_READ)) {",
          "2610:    goto fail;",
          "2611:   }",
          "2612:   err = f2fs_submit_page_read(inode, page, blkaddr);",
          "",
          "[Removed Lines]",
          "2609:    err = -EFAULT;",
          "",
          "[Added Lines]",
          "2609:    err = -EFSCORRUPTED;",
          "",
          "---------------"
        ],
        "fs/f2fs/dir.c||fs/f2fs/dir.c": [
          "File: fs/f2fs/dir.c -> fs/f2fs/dir.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "818:    f2fs_warn(sbi, \"%s: corrupted namelen=%d, run fsck to fix.\",",
          "819:       __func__, le16_to_cpu(de->name_len));",
          "820:    set_sbi_flag(sbi, SBI_NEED_FSCK);",
          "822:    goto out;",
          "823:   }",
          "",
          "[Removed Lines]",
          "821:    err = -EINVAL;",
          "",
          "[Added Lines]",
          "821:    err = -EFSCORRUPTED;",
          "",
          "---------------"
        ],
        "fs/f2fs/f2fs.h||fs/f2fs/f2fs.h": [
          "File: fs/f2fs/f2fs.h -> fs/f2fs/f2fs.h"
        ],
        "fs/f2fs/file.c||fs/f2fs/file.c": [
          "File: fs/f2fs/file.c -> fs/f2fs/file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1023:    !f2fs_is_valid_blkaddr(sbi, *blkaddr,",
          "1024:      DATA_GENERIC_ENHANCE)) {",
          "1025:    f2fs_put_dnode(&dn);",
          "1027:   }",
          "1029:   if (!f2fs_is_checkpointed_data(sbi, *blkaddr)) {",
          "",
          "[Removed Lines]",
          "1026:    return -EFAULT;",
          "",
          "[Added Lines]",
          "1026:    return -EFSCORRUPTED;",
          "",
          "---------------"
        ],
        "fs/f2fs/gc.c||fs/f2fs/gc.c": [
          "File: fs/f2fs/gc.c -> fs/f2fs/gc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "660:   dn.data_blkaddr = ei.blk + index - ei.fofs;",
          "661:   if (unlikely(!f2fs_is_valid_blkaddr(sbi, dn.data_blkaddr,",
          "662:       DATA_GENERIC_ENHANCE_READ))) {",
          "664:    goto put_page;",
          "665:   }",
          "666:   goto got_it;",
          "",
          "[Removed Lines]",
          "663:    err = -EFAULT;",
          "",
          "[Added Lines]",
          "663:    err = -EFSCORRUPTED;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "678:  }",
          "679:  if (unlikely(!f2fs_is_valid_blkaddr(sbi, dn.data_blkaddr,",
          "680:       DATA_GENERIC_ENHANCE))) {",
          "682:   goto put_page;",
          "683:  }",
          "684: got_it:",
          "",
          "[Removed Lines]",
          "681:   err = -EFAULT;",
          "",
          "[Added Lines]",
          "681:   err = -EFSCORRUPTED;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1455:  if (is_sbi_flag_set(sbi, SBI_NEED_FSCK)) {",
          "1456:   f2fs_err(sbi, \"Should run fsck to repair first.\");",
          "1458:  }",
          "1460:  if (test_opt(sbi, DISABLE_CHECKPOINT)) {",
          "",
          "[Removed Lines]",
          "1457:   return -EINVAL;",
          "",
          "[Added Lines]",
          "1457:   return -EFSCORRUPTED;",
          "",
          "---------------"
        ],
        "fs/f2fs/inline.c||fs/f2fs/inline.c": [
          "File: fs/f2fs/inline.c -> fs/f2fs/inline.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "142:   set_sbi_flag(fio.sbi, SBI_NEED_FSCK);",
          "143:   f2fs_warn(fio.sbi, \"%s: corrupted inline inode ino=%lx, i_addr[0]:0x%x, run fsck to fix.\",",
          "144:      __func__, dn->inode->i_ino, dn->data_blkaddr);",
          "146:  }",
          "148:  f2fs_bug_on(F2FS_P_SB(page), PageWriteback(page));",
          "",
          "[Removed Lines]",
          "145:   return -EINVAL;",
          "",
          "[Added Lines]",
          "145:   return -EFSCORRUPTED;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "383:   set_sbi_flag(F2FS_P_SB(page), SBI_NEED_FSCK);",
          "384:   f2fs_warn(F2FS_P_SB(page), \"%s: corrupted inline inode ino=%lx, i_addr[0]:0x%x, run fsck to fix.\",",
          "385:      __func__, dir->i_ino, dn.data_blkaddr);",
          "387:   goto out;",
          "388:  }",
          "",
          "[Removed Lines]",
          "386:   err = -EINVAL;",
          "",
          "[Added Lines]",
          "386:   err = -EFSCORRUPTED;",
          "",
          "---------------"
        ],
        "fs/f2fs/inode.c||fs/f2fs/inode.c": [
          "File: fs/f2fs/inode.c -> fs/f2fs/inode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:  if (!__is_valid_data_blkaddr(addr))",
          "75:   return 1;",
          "76:  if (!f2fs_is_valid_blkaddr(sbi, addr, DATA_GENERIC_ENHANCE))",
          "78:  return 0;",
          "79: }",
          "",
          "[Removed Lines]",
          "77:   return -EFAULT;",
          "",
          "[Added Lines]",
          "77:   return -EFSCORRUPTED;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "359:  if (!sanity_check_inode(inode, node_page)) {",
          "360:   f2fs_put_page(node_page, 1);",
          "362:  }",
          "",
          "[Removed Lines]",
          "361:   return -EINVAL;",
          "",
          "[Added Lines]",
          "361:   return -EFSCORRUPTED;",
          "",
          "---------------"
        ],
        "fs/f2fs/node.c||fs/f2fs/node.c": [
          "File: fs/f2fs/node.c -> fs/f2fs/node.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:   set_sbi_flag(sbi, SBI_NEED_FSCK);",
          "37:   f2fs_warn(sbi, \"%s: out-of-range nid=%x, run fsck to fix.\",",
          "38:      __func__, nid);",
          "40:  }",
          "41:  return 0;",
          "42: }",
          "",
          "[Removed Lines]",
          "39:   return -EINVAL;",
          "",
          "[Added Lines]",
          "39:   return -EFSCORRUPTED;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1288:  if (PageUptodate(page)) {",
          "1289:   if (!f2fs_inode_chksum_verify(sbi, page)) {",
          "1290:    ClearPageUptodate(page);",
          "1292:   }",
          "1293:   return LOCKED_PAGE;",
          "1294:  }",
          "",
          "[Removed Lines]",
          "1291:    return -EBADMSG;",
          "",
          "[Added Lines]",
          "1291:    return -EFSBADCRC;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1372:  }",
          "1374:  if (!f2fs_inode_chksum_verify(sbi, page)) {",
          "1376:   goto out_err;",
          "1377:  }",
          "1378: page_hit:",
          "",
          "[Removed Lines]",
          "1375:   err = -EBADMSG;",
          "",
          "[Added Lines]",
          "1375:   err = -EFSBADCRC;",
          "",
          "---------------"
        ],
        "fs/f2fs/recovery.c||fs/f2fs/recovery.c": [
          "File: fs/f2fs/recovery.c -> fs/f2fs/recovery.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "553:   f2fs_warn(sbi, \"Inconsistent ofs_of_node, ino:%lu, ofs:%u, %u\",",
          "554:      inode->i_ino, ofs_of_node(dn.node_page),",
          "555:      ofs_of_node(page));",
          "557:   goto err;",
          "558:  }",
          "",
          "[Removed Lines]",
          "556:   err = -EFAULT;",
          "",
          "[Added Lines]",
          "556:   err = -EFSCORRUPTED;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "566:   if (__is_valid_data_blkaddr(src) &&",
          "567:    !f2fs_is_valid_blkaddr(sbi, src, META_POR)) {",
          "569:    goto err;",
          "570:   }",
          "572:   if (__is_valid_data_blkaddr(dest) &&",
          "573:    !f2fs_is_valid_blkaddr(sbi, dest, META_POR)) {",
          "575:    goto err;",
          "576:   }",
          "",
          "[Removed Lines]",
          "568:    err = -EFAULT;",
          "574:    err = -EFAULT;",
          "",
          "[Added Lines]",
          "568:    err = -EFSCORRUPTED;",
          "574:    err = -EFSCORRUPTED;",
          "",
          "---------------"
        ],
        "fs/f2fs/segment.c||fs/f2fs/segment.c": [
          "File: fs/f2fs/segment.c -> fs/f2fs/segment.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2820:  if (is_sbi_flag_set(sbi, SBI_NEED_FSCK)) {",
          "2821:   f2fs_warn(sbi, \"Found FS corruption, run fsck to fix.\");",
          "2823:  }",
          "",
          "[Removed Lines]",
          "2822:   return -EIO;",
          "",
          "[Added Lines]",
          "2822:   return -EFSCORRUPTED;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3244:   set_sbi_flag(sbi, SBI_NEED_FSCK);",
          "3245:   f2fs_warn(sbi, \"%s: incorrect segment(%u) type, run fsck to fix.\",",
          "3246:      __func__, segno);",
          "3248:  }",
          "3250:  stat_inc_inplace_blocks(fio->sbi);",
          "",
          "[Removed Lines]",
          "3247:   return -EFAULT;",
          "",
          "[Added Lines]",
          "3247:   return -EFSCORRUPTED;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4153:    f2fs_err(sbi, \"Wrong journal entry on segno %u\",",
          "4154:      start);",
          "4155:    set_sbi_flag(sbi, SBI_NEED_FSCK);",
          "4157:    break;",
          "4158:   }",
          "",
          "[Removed Lines]",
          "4156:    err = -EINVAL;",
          "",
          "[Added Lines]",
          "4156:    err = -EFSCORRUPTED;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4193:   f2fs_err(sbi, \"SIT is corrupted node# %u vs %u\",",
          "4194:     total_node_blocks, valid_node_count(sbi));",
          "4195:   set_sbi_flag(sbi, SBI_NEED_FSCK);",
          "4197:  }",
          "4199:  return err;",
          "",
          "[Removed Lines]",
          "4196:   err = -EINVAL;",
          "",
          "[Added Lines]",
          "4196:   err = -EFSCORRUPTED;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4311:      \"Current segment's next free block offset is inconsistent with bitmap, logtype:%u, segno:%u, type:%u, next_blkoff:%u, blkofs:%u\",",
          "4312:      i, curseg->segno, curseg->alloc_type,",
          "4313:      curseg->next_blkoff, blkofs);",
          "4315:   }",
          "4316:  }",
          "4317:  return 0;",
          "",
          "[Removed Lines]",
          "4314:    return -EINVAL;",
          "",
          "[Added Lines]",
          "4314:    return -EFSCORRUPTED;",
          "",
          "---------------"
        ],
        "fs/f2fs/segment.h||fs/f2fs/segment.h": [
          "File: fs/f2fs/segment.h -> fs/f2fs/segment.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "696:   f2fs_err(sbi, \"Mismatch valid blocks %d vs. %d\",",
          "697:     GET_SIT_VBLOCKS(raw_sit), valid_blocks);",
          "698:   set_sbi_flag(sbi, SBI_NEED_FSCK);",
          "700:  }",
          "",
          "[Removed Lines]",
          "699:   return -EINVAL;",
          "",
          "[Added Lines]",
          "699:   return -EFSCORRUPTED;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "705:   f2fs_err(sbi, \"Wrong valid blocks %d or segno %u\",",
          "706:     GET_SIT_VBLOCKS(raw_sit), segno);",
          "707:   set_sbi_flag(sbi, SBI_NEED_FSCK);",
          "709:  }",
          "710:  return 0;",
          "711: }",
          "",
          "[Removed Lines]",
          "708:   return -EINVAL;",
          "",
          "[Added Lines]",
          "708:   return -EFSCORRUPTED;",
          "",
          "---------------"
        ],
        "fs/f2fs/super.c||fs/f2fs/super.c": [
          "File: fs/f2fs/super.c -> fs/f2fs/super.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2846:   if (sanity_check_raw_super(sbi, bh)) {",
          "2847:    f2fs_err(sbi, \"Can't find valid F2FS filesystem in %dth superblock\",",
          "2848:      block + 1);",
          "2850:    brelse(bh);",
          "2851:    continue;",
          "2852:   }",
          "",
          "[Removed Lines]",
          "2849:    err = -EINVAL;",
          "",
          "[Added Lines]",
          "2849:    err = -EFSCORRUPTED;",
          "",
          "---------------"
        ],
        "fs/f2fs/xattr.c||fs/f2fs/xattr.c": [
          "File: fs/f2fs/xattr.c -> fs/f2fs/xattr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "348:  if (!*xe) {",
          "350:   goto out;",
          "351:  }",
          "352: check:",
          "",
          "[Removed Lines]",
          "349:   err = -EFAULT;",
          "",
          "[Added Lines]",
          "349:   err = -EFSCORRUPTED;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "623:  here = __find_xattr(base_addr, last_base_addr, index, len, name);",
          "624:  if (!here) {",
          "626:   goto exit;",
          "627:  }",
          "",
          "[Removed Lines]",
          "625:   error = -EFAULT;",
          "",
          "[Added Lines]",
          "625:   error = -EFSCORRUPTED;",
          "",
          "---------------"
        ]
      }
    }
  ]
}