{
  "cve_id": "CVE-2013-4592",
  "cve_desc": "Memory leak in the __kvm_set_memory_region function in virt/kvm/kvm_main.c in the Linux kernel before 3.9 allows local users to cause a denial of service (memory consumption) by leveraging certain device access to trigger movement of memory slots.",
  "repo": "torvalds/linux",
  "patch_hash": "e40f193f5bb022e927a57a4f5d5194e4f12ddb74",
  "patch_info": {
    "commit_hash": "e40f193f5bb022e927a57a4f5d5194e4f12ddb74",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/e40f193f5bb022e927a57a4f5d5194e4f12ddb74",
    "files": [
      "virt/kvm/kvm_main.c"
    ],
    "message": "KVM: Fix iommu map/unmap to handle memory slot moves\n\nThe iommu integration into memory slots expects memory slots to be\nadded or removed and doesn't handle the move case.  We can unmap\nslots from the iommu after we mark them invalid and map them before\ninstalling the final memslot array.  Also re-order the kmemdup vs\nmap so we don't leave iommu mappings if we get ENOMEM.\n\nReviewed-by: Gleb Natapov <gleb@redhat.com>\nSigned-off-by: Alex Williamson <alex.williamson@redhat.com>\nSigned-off-by: Marcelo Tosatti <mtosatti@redhat.com>",
    "before_after_code_files": [
      "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c"
    ]
  },
  "patch_diff": {
    "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c": [
      "File: virt/kvm/kvm_main.c -> virt/kvm/kvm_main.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "822:   old_memslots = kvm->memslots;",
      "823:   rcu_assign_pointer(kvm->memslots, slots);",
      "824:   synchronize_srcu_expedited(&kvm->srcu);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "826:   kvm_iommu_unmap_pages(kvm, &old);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "837:  if (r)",
      "838:   goto out_free;",
      "848:  r = -ENOMEM;",
      "849:  slots = kmemdup(kvm->memslots, sizeof(struct kvm_memslots),",
      "850:    GFP_KERNEL);",
      "851:  if (!slots)",
      "852:   goto out_free;",
      "855:  if (!npages) {",
      "856:   new.dirty_bitmap = NULL;",
      "",
      "[Removed Lines]",
      "841:  if (npages) {",
      "842:   r = kvm_iommu_map_pages(kvm, &new);",
      "843:   if (r)",
      "844:    goto out_free;",
      "845:  } else",
      "846:   kvm_iommu_unmap_pages(kvm, &old);",
      "",
      "[Added Lines]",
      "849:  if (npages) {",
      "850:   r = kvm_iommu_map_pages(kvm, &new);",
      "851:   if (r)",
      "852:    goto out_slots;",
      "853:  }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "870:  return 0;",
      "872: out_free:",
      "873:  kvm_free_physmem_slot(&new, &old);",
      "874: out:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "873: out_slots:",
      "874:  kfree(slots);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f64c0398939483eb1d8951f24fbc21e94ed54457",
      "candidate_info": {
        "commit_hash": "f64c0398939483eb1d8951f24fbc21e94ed54457",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/f64c0398939483eb1d8951f24fbc21e94ed54457",
        "files": [
          "virt/kvm/kvm_main.c"
        ],
        "message": "KVM: set_memory_region: Identify the requested change explicitly\n\nKVM_SET_USER_MEMORY_REGION forces __kvm_set_memory_region() to identify\nwhat kind of change is being requested by checking the arguments.  The\ncurrent code does this checking at various points in code and each\ncondition being used there is not easy to understand at first glance.\n\nThis patch consolidates these checks and introduces an enum to name the\npossible changes to clean up the code.\n\nAlthough this does not introduce any functional changes, there is one\nchange which optimizes the code a bit: if we have nothing to change, the\nnew code returns 0 immediately.\n\nNote that the return value for this case cannot be changed since QEMU\nrelies on it: we noticed this when we changed it to -EINVAL and got a\nsection mismatch error at the final stage of live migration.\n\nSigned-off-by: Takuya Yoshikawa <yoshikawa_takuya_b1@lab.ntt.co.jp>\nSigned-off-by: Marcelo Tosatti <mtosatti@redhat.com>",
        "before_after_code_files": [
          "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c"
          ],
          "candidate": [
            "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c"
          ]
        }
      },
      "candidate_diff": {
        "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c": [
          "File: virt/kvm/kvm_main.c -> virt/kvm/kvm_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "718:  return old_memslots;",
          "719: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "732: enum kvm_mr_change {",
          "733:  KVM_MR_CREATE,",
          "734:  KVM_MR_DELETE,",
          "735:  KVM_MR_MOVE,",
          "736:  KVM_MR_FLAGS_ONLY,",
          "737: };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "737:  struct kvm_memory_slot old, new;",
          "738:  struct kvm_memslots *slots = NULL, *old_memslots;",
          "739:  bool old_iommu_mapped;",
          "741:  r = check_memory_region_flags(mem);",
          "742:  if (r)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "758:  enum kvm_mr_change change;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "781:  old_iommu_mapped = old.npages;",
          "787:  r = -EINVAL;",
          "791:   goto out;",
          "795:   r = -EEXIST;",
          "796:   kvm_for_each_memslot(slot, kvm->memslots) {",
          "",
          "[Removed Lines]",
          "788:  if (npages && old.npages && npages != old.npages)",
          "789:   goto out;",
          "790:  if (!npages && !old.npages)",
          "793:  if ((npages && !old.npages) || (base_gfn != old.base_gfn)) {",
          "",
          "[Added Lines]",
          "803:  if (npages) {",
          "804:   if (!old.npages)",
          "805:    change = KVM_MR_CREATE;",
          "807:    if ((mem->userspace_addr != old.userspace_addr) ||",
          "808:        (npages != old.npages))",
          "809:     goto out;",
          "811:    if (base_gfn != old.base_gfn)",
          "812:     change = KVM_MR_MOVE;",
          "813:    else if (new.flags != old.flags)",
          "814:     change = KVM_MR_FLAGS_ONLY;",
          "816:     r = 0;",
          "817:     goto out;",
          "818:    }",
          "819:   }",
          "820:  } else if (old.npages) {",
          "821:   change = KVM_MR_DELETE;",
          "825:  if ((change == KVM_MR_CREATE) || (change == KVM_MR_MOVE)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "808:   new.dirty_bitmap = NULL;",
          "810:  r = -ENOMEM;",
          "817:   new.user_alloc = user_alloc;",
          "818:   new.userspace_addr = mem->userspace_addr;",
          "820:   if (kvm_arch_create_memslot(&new, npages))",
          "821:    goto out_free;",
          "825:  }",
          "",
          "[Removed Lines]",
          "816:  if (!old.npages) {",
          "822:  } else if (npages && mem->userspace_addr != old.userspace_addr) {",
          "823:   r = -EINVAL;",
          "824:   goto out_free;",
          "",
          "[Added Lines]",
          "843:  if (change == KVM_MR_CREATE) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "830:    goto out_free;",
          "831:  }",
          "834:   r = -ENOMEM;",
          "835:   slots = kmemdup(kvm->memslots, sizeof(struct kvm_memslots),",
          "836:     GFP_KERNEL);",
          "",
          "[Removed Lines]",
          "833:  if (!npages || base_gfn != old.base_gfn) {",
          "",
          "[Added Lines]",
          "857:  if ((change == KVM_MR_DELETE) || (change == KVM_MR_MOVE)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "885:   if (old_iommu_mapped &&",
          "886:       ((new.flags ^ old.flags) & KVM_MEM_READONLY)) {",
          "887:    kvm_iommu_unmap_pages(kvm, &old);",
          "",
          "[Removed Lines]",
          "884:  if (npages) {",
          "",
          "[Added Lines]",
          "908:  if (change != KVM_MR_DELETE) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "896:  }",
          "900:   new.dirty_bitmap = NULL;",
          "901:   memset(&new.arch, 0, sizeof(new.arch));",
          "902:  }",
          "",
          "[Removed Lines]",
          "899:  if (!npages) {",
          "",
          "[Added Lines]",
          "923:  if (change == KVM_MR_DELETE) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6da64fdb8c0c683016b70c96200057347aa8fbb0",
      "candidate_info": {
        "commit_hash": "6da64fdb8c0c683016b70c96200057347aa8fbb0",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/6da64fdb8c0c683016b70c96200057347aa8fbb0",
        "files": [
          "virt/kvm/kvm_main.c"
        ],
        "message": "KVM: Use kmemdup rather than duplicating its implementation\n\n Use kmemdup rather than duplicating its implementation\n\n The semantic patch that makes this change is available\n in scripts/coccinelle/api/memdup.cocci.\n\n More information about semantic patching is available at\n http://coccinelle.lip6.fr/\n\nSigned-off-by: Thomas Meyer <thomas@m3y3r.de>\nSigned-off-by: Marcelo Tosatti <mtosatti@redhat.com>",
        "before_after_code_files": [
          "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c"
          ],
          "candidate": [
            "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c"
          ]
        }
      },
      "candidate_diff": {
        "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c": [
          "File: virt/kvm/kvm_main.c -> virt/kvm/kvm_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "776:  if (!npages) {",
          "777:   r = -ENOMEM;",
          "779:   if (!slots)",
          "780:    goto out_free;",
          "782:   if (mem->slot >= slots->nmemslots)",
          "783:    slots->nmemslots = mem->slot + 1;",
          "784:   slots->generation++;",
          "",
          "[Removed Lines]",
          "778:   slots = kzalloc(sizeof(struct kvm_memslots), GFP_KERNEL);",
          "781:   memcpy(slots, kvm->memslots, sizeof(struct kvm_memslots));",
          "",
          "[Added Lines]",
          "778:   slots = kmemdup(kvm->memslots, sizeof(struct kvm_memslots),",
          "779:     GFP_KERNEL);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "810:  }",
          "812:  r = -ENOMEM;",
          "814:  if (!slots)",
          "815:   goto out_free;",
          "817:  if (mem->slot >= slots->nmemslots)",
          "818:   slots->nmemslots = mem->slot + 1;",
          "819:  slots->generation++;",
          "",
          "[Removed Lines]",
          "813:  slots = kzalloc(sizeof(struct kvm_memslots), GFP_KERNEL);",
          "816:  memcpy(slots, kvm->memslots, sizeof(struct kvm_memslots));",
          "",
          "[Added Lines]",
          "813:  slots = kmemdup(kvm->memslots, sizeof(struct kvm_memslots),",
          "814:    GFP_KERNEL);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2520:  if (bus->dev_count > NR_IOBUS_DEVS-1)",
          "2521:   return -ENOSPC;",
          "2524:  if (!new_bus)",
          "2525:   return -ENOMEM;",
          "2527:  kvm_io_bus_insert_dev(new_bus, dev, addr, len);",
          "2528:  rcu_assign_pointer(kvm->buses[bus_idx], new_bus);",
          "2529:  synchronize_srcu_expedited(&kvm->srcu);",
          "",
          "[Removed Lines]",
          "2523:  new_bus = kzalloc(sizeof(struct kvm_io_bus), GFP_KERNEL);",
          "2526:  memcpy(new_bus, bus, sizeof(struct kvm_io_bus));",
          "",
          "[Added Lines]",
          "2523:  new_bus = kmemdup(bus, sizeof(struct kvm_io_bus), GFP_KERNEL);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "be593d6286075801bba6d60fa466a39c24cc7616",
      "candidate_info": {
        "commit_hash": "be593d6286075801bba6d60fa466a39c24cc7616",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/be593d6286075801bba6d60fa466a39c24cc7616",
        "files": [
          "arch/x86/kvm/x86.c",
          "include/linux/kvm_host.h",
          "virt/kvm/kvm_main.c"
        ],
        "message": "KVM: introduce update_memslots function\n\nIntroduce update_memslots to update slot which will be update to\nkvm->memslots\n\nSigned-off-by: Xiao Guangrong <xiaoguangrong@linux.vnet.ibm.com>\nSigned-off-by: Avi Kivity <avi@redhat.com>",
        "before_after_code_files": [
          "arch/x86/kvm/x86.c||arch/x86/kvm/x86.c",
          "include/linux/kvm_host.h||include/linux/kvm_host.h",
          "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c"
          ],
          "candidate": [
            "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c"
          ]
        }
      },
      "candidate_diff": {
        "arch/x86/kvm/x86.c||arch/x86/kvm/x86.c": [
          "File: arch/x86/kvm/x86.c -> arch/x86/kvm/x86.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3546:   memslot = &slots->memslots[log->slot];",
          "3547:   memslot->dirty_bitmap = dirty_bitmap;",
          "3548:   memslot->nr_dirty_pages = 0;",
          "3551:   old_slots = kvm->memslots;",
          "3552:   rcu_assign_pointer(kvm->memslots, slots);",
          "",
          "[Removed Lines]",
          "3549:   slots->generation++;",
          "",
          "[Added Lines]",
          "3549:   update_memslots(slots, NULL);",
          "",
          "---------------"
        ],
        "include/linux/kvm_host.h||include/linux/kvm_host.h": [
          "File: include/linux/kvm_host.h -> include/linux/kvm_host.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "321: void kvm_get_kvm(struct kvm *kvm);",
          "322: void kvm_put_kvm(struct kvm *kvm);",
          "324: static inline struct kvm_memslots *kvm_memslots(struct kvm *kvm)",
          "325: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "323: void update_memslots(struct kvm_memslots *slots, struct kvm_memory_slot *new);",
          "",
          "---------------"
        ],
        "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c": [
          "File: virt/kvm/kvm_main.c -> virt/kvm/kvm_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "630: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "633: void update_memslots(struct kvm_memslots *slots, struct kvm_memory_slot *new)",
          "634: {",
          "635:  if (new) {",
          "636:   int id = new->id;",
          "638:   slots->memslots[id] = *new;",
          "639:   if (id >= slots->nmemslots)",
          "640:    slots->nmemslots = id + 1;",
          "641:  }",
          "643:  slots->generation++;",
          "644: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "780:     GFP_KERNEL);",
          "781:   if (!slots)",
          "782:    goto out_free;",
          "786:   slots->memslots[mem->slot].flags |= KVM_MEMSLOT_INVALID;",
          "788:   old_memslots = kvm->memslots;",
          "789:   rcu_assign_pointer(kvm->memslots, slots);",
          "",
          "[Removed Lines]",
          "783:   if (mem->slot >= slots->nmemslots)",
          "784:    slots->nmemslots = mem->slot + 1;",
          "785:   slots->generation++;",
          "",
          "[Added Lines]",
          "797:   update_memslots(slots, NULL);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "815:    GFP_KERNEL);",
          "816:  if (!slots)",
          "817:   goto out_free;",
          "823:  if (!npages) {",
          "",
          "[Removed Lines]",
          "818:  if (mem->slot >= slots->nmemslots)",
          "819:   slots->nmemslots = mem->slot + 1;",
          "820:  slots->generation++;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "827:    new.lpage_info[i] = NULL;",
          "828:  }",
          "831:  old_memslots = kvm->memslots;",
          "832:  rcu_assign_pointer(kvm->memslots, slots);",
          "833:  synchronize_srcu_expedited(&kvm->srcu);",
          "",
          "[Removed Lines]",
          "830:  slots->memslots[mem->slot] = new;",
          "",
          "[Added Lines]",
          "838:  update_memslots(slots, &new);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "32f6daad4651a748a58a3ab6da0611862175722f",
      "candidate_info": {
        "commit_hash": "32f6daad4651a748a58a3ab6da0611862175722f",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/32f6daad4651a748a58a3ab6da0611862175722f",
        "files": [
          "include/linux/kvm_host.h",
          "virt/kvm/iommu.c",
          "virt/kvm/kvm_main.c"
        ],
        "message": "KVM: unmap pages from the iommu when slots are removed\n\nWe've been adding new mappings, but not destroying old mappings.\nThis can lead to a page leak as pages are pinned using\nget_user_pages, but only unpinned with put_page if they still\nexist in the memslots list on vm shutdown.  A memslot that is\ndestroyed while an iommu domain is enabled for the guest will\ntherefore result in an elevated page reference count that is\nnever cleared.\n\nAdditionally, without this fix, the iommu is only programmed\nwith the first translation for a gpa.  This can result in\npeer-to-peer errors if a mapping is destroyed and replaced by a\nnew mapping at the same gpa as the iommu will still be pointing\nto the original, pinned memory address.\n\nSigned-off-by: Alex Williamson <alex.williamson@redhat.com>\nSigned-off-by: Marcelo Tosatti <mtosatti@redhat.com>",
        "before_after_code_files": [
          "include/linux/kvm_host.h||include/linux/kvm_host.h",
          "virt/kvm/iommu.c||virt/kvm/iommu.c",
          "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c"
          ],
          "candidate": [
            "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c"
          ]
        }
      },
      "candidate_diff": {
        "include/linux/kvm_host.h||include/linux/kvm_host.h": [
          "File: include/linux/kvm_host.h -> include/linux/kvm_host.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "597: #ifdef CONFIG_IOMMU_API",
          "598: int kvm_iommu_map_pages(struct kvm *kvm, struct kvm_memory_slot *slot);",
          "599: int kvm_iommu_map_guest(struct kvm *kvm);",
          "600: int kvm_iommu_unmap_guest(struct kvm *kvm);",
          "601: int kvm_assign_device(struct kvm *kvm,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "599: void kvm_iommu_unmap_pages(struct kvm *kvm, struct kvm_memory_slot *slot);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "609:  return 0;",
          "610: }",
          "612: static inline int kvm_iommu_map_guest(struct kvm *kvm)",
          "613: {",
          "614:  return -ENODEV;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "613: static inline void kvm_iommu_unmap_pages(struct kvm *kvm,",
          "614:       struct kvm_memory_slot *slot)",
          "615: {",
          "616: }",
          "",
          "---------------"
        ],
        "virt/kvm/iommu.c||virt/kvm/iommu.c": [
          "File: virt/kvm/iommu.c -> virt/kvm/iommu.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "310:  }",
          "311: }",
          "313: static int kvm_iommu_unmap_memslots(struct kvm *kvm)",
          "314: {",
          "315:  int idx;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "313: void kvm_iommu_unmap_pages(struct kvm *kvm, struct kvm_memory_slot *slot)",
          "314: {",
          "315:  kvm_iommu_put_pages(kvm, slot->base_gfn, slot->npages);",
          "316: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "320:  slots = kvm_memslots(kvm);",
          "322:  kvm_for_each_memslot(memslot, slots)",
          "325:  srcu_read_unlock(&kvm->srcu, idx);",
          "",
          "[Removed Lines]",
          "323:   kvm_iommu_put_pages(kvm, memslot->base_gfn, memslot->npages);",
          "",
          "[Added Lines]",
          "328:   kvm_iommu_unmap_pages(kvm, memslot);",
          "",
          "---------------"
        ],
        "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c": [
          "File: virt/kvm/kvm_main.c -> virt/kvm/kvm_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "808:  if (r)",
          "809:   goto out_free;",
          "812:  if (npages) {",
          "813:   r = kvm_iommu_map_pages(kvm, &new);",
          "814:   if (r)",
          "815:    goto out_free;",
          "818:  r = -ENOMEM;",
          "819:  slots = kmemdup(kvm->memslots, sizeof(struct kvm_memslots),",
          "",
          "[Removed Lines]",
          "816:  }",
          "",
          "[Added Lines]",
          "816:  } else",
          "817:   kvm_iommu_unmap_pages(kvm, &old);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "75d61fbcf563373696578570e914f555e12c8d97",
      "candidate_info": {
        "commit_hash": "75d61fbcf563373696578570e914f555e12c8d97",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/75d61fbcf563373696578570e914f555e12c8d97",
        "files": [
          "Documentation/virtual/kvm/api.txt",
          "virt/kvm/kvm_main.c"
        ],
        "message": "KVM: set_memory_region: Disallow changing read-only attribute later\n\nAs Xiao pointed out, there are a few problems with it:\n - kvm_arch_commit_memory_region() write protects the memory slot only\n   for GET_DIRTY_LOG when modifying the flags.\n - FNAME(sync_page) uses the old spte value to set a new one without\n   checking KVM_MEM_READONLY flag.\n\nSince we flush all shadow pages when creating a new slot, the simplest\nfix is to disallow such problematic flag changes: this is safe because\nno one is doing such things.\n\nReviewed-by: Gleb Natapov <gleb@redhat.com>\nSigned-off-by: Takuya Yoshikawa <yoshikawa_takuya_b1@lab.ntt.co.jp>\nCc: Xiao Guangrong <xiaoguangrong@linux.vnet.ibm.com>\nCc: Alex Williamson <alex.williamson@redhat.com>\nSigned-off-by: Marcelo Tosatti <mtosatti@redhat.com>",
        "before_after_code_files": [
          "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c"
          ],
          "candidate": [
            "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c"
          ]
        }
      },
      "candidate_diff": {
        "virt/kvm/kvm_main.c||virt/kvm/kvm_main.c": [
          "File: virt/kvm/kvm_main.c -> virt/kvm/kvm_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "754:  struct kvm_memory_slot *slot;",
          "755:  struct kvm_memory_slot old, new;",
          "756:  struct kvm_memslots *slots = NULL, *old_memslots;",
          "758:  enum kvm_mr_change change;",
          "760:  r = check_memory_region_flags(mem);",
          "",
          "[Removed Lines]",
          "757:  bool old_iommu_mapped;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "797:  new.npages = npages;",
          "798:  new.flags = mem->flags;",
          "802:  r = -EINVAL;",
          "803:  if (npages) {",
          "804:   if (!old.npages)",
          "805:    change = KVM_MR_CREATE;",
          "807:    if ((mem->userspace_addr != old.userspace_addr) ||",
          "809:     goto out;",
          "811:    if (base_gfn != old.base_gfn)",
          "",
          "[Removed Lines]",
          "800:  old_iommu_mapped = old.npages;",
          "808:        (npages != old.npages))",
          "",
          "[Added Lines]",
          "805:        (npages != old.npages) ||",
          "806:        ((new.flags ^ old.flags) & KVM_MEM_READONLY))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "869:   kvm_iommu_unmap_pages(kvm, &old);",
          "",
          "[Removed Lines]",
          "870:   old_iommu_mapped = false;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "920:  }",
          "",
          "[Removed Lines]",
          "908:  if (change != KVM_MR_DELETE) {",
          "909:   if (old_iommu_mapped &&",
          "910:       ((new.flags ^ old.flags) & KVM_MEM_READONLY)) {",
          "911:    kvm_iommu_unmap_pages(kvm, &old);",
          "912:    old_iommu_mapped = false;",
          "913:   }",
          "915:   if (!old_iommu_mapped) {",
          "916:    r = kvm_iommu_map_pages(kvm, &new);",
          "917:    if (r)",
          "918:     goto out_slots;",
          "919:   }",
          "",
          "[Added Lines]",
          "905:  if ((change == KVM_MR_CREATE) || (change == KVM_MR_MOVE)) {",
          "906:   r = kvm_iommu_map_pages(kvm, &new);",
          "907:   if (r)",
          "908:    goto out_slots;",
          "",
          "---------------"
        ]
      }
    }
  ]
}