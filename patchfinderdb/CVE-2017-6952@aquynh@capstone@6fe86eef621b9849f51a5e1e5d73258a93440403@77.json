{
  "cve_id": "CVE-2017-6952",
  "cve_desc": "Integer overflow in the cs_winkernel_malloc function in winkernel_mm.c in Capstone 3.0.4 and earlier allows attackers to cause a denial of service (heap-based buffer overflow in a kernel driver) or possibly have unspecified other impact via a large value.",
  "repo": "aquynh/capstone",
  "patch_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
  "patch_info": {
    "commit_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/6fe86eef621b9849f51a5e1e5d73258a93440403",
    "files": [
      "windows/winkernel_mm.c"
    ],
    "message": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.",
    "before_after_code_files": [
      "windows/winkernel_mm.c||windows/winkernel_mm.c"
    ]
  },
  "patch_diff": {
    "windows/winkernel_mm.c||windows/winkernel_mm.c": [
      "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: #include \"winkernel_mm.h\"",
      "5: #include <ntddk.h>",
      "8: static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <Ntintsafe.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: #pragma prefast(suppress : 30030)  // Allocating executable POOL_TYPE memory",
      "38:  if (!block) {",
      "39:   return NULL;",
      "40:  }",
      "",
      "[Removed Lines]",
      "36:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "37:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
      "",
      "[Added Lines]",
      "37:  size_t number_of_bytes = 0;",
      "38:  CS_WINKERNEL_MEMBLOCK *block = NULL;",
      "42:  if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {",
      "43:   return NULL;",
      "44:  }",
      "45:  block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "46:    NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "efd8b14471520c13501cef00b9892e0a43a6f43f",
      "candidate_info": {
        "commit_hash": "efd8b14471520c13501cef00b9892e0a43a6f43f",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/efd8b14471520c13501cef00b9892e0a43a6f43f",
        "files": [
          "bindings/java/capstone/Ppc_const.java",
          "bindings/ocaml/ppc_const.ml",
          "bindings/python/capstone/ppc_const.py"
        ],
        "message": "bindings: regenerate consts",
        "before_after_code_files": [
          "bindings/javcapstone/Ppc_const.java||bindings/java/capstone/Ppc_const.java",
          "bindings/ocaml/ppc_const.ml||bindings/ocaml/ppc_const.ml",
          "bindings/python/capstone/ppc_const.py||bindings/python/capstone/ppc_const.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/javcapstone/Ppc_const.java||bindings/java/capstone/Ppc_const.java": [
          "File: bindings/javcapstone/Ppc_const.java -> bindings/java/capstone/Ppc_const.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28:  public static final int PPC_OP_INVALID = 0;",
          "29:  public static final int PPC_OP_REG = 1;",
          "30:  public static final int PPC_OP_IMM = 2;",
          "31:  public static final int PPC_OP_MEM = 3;",
          "32:  public static final int PPC_OP_CRX = 64;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "bindings/ocaml/ppc_const.ml||bindings/ocaml/ppc_const.ml": [
          "File: bindings/ocaml/ppc_const.ml -> bindings/ocaml/ppc_const.ml",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: let _PPC_BH_PLUS = 1;;",
          "21: let _PPC_BH_MINUS = 2;;",
          "23: (* PPC registers *)",
          "25: let _PPC_REG_INVALID = 0;;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: (* Operand type for instruction's operands *)",
          "25: let _PPC_OP_INVALID = 0;;",
          "26: let _PPC_OP_REG = 1;;",
          "27: let _PPC_OP_IMM = 2;;",
          "28: let _PPC_OP_MEM = 3;;",
          "29: let _PPC_OP_CRX = 64;;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "234: let _PPC_REG_X2 = 209;;",
          "235: let _PPC_REG_ENDING = 210;;",
          "245: (* PPC instruction *)",
          "247: let _PPC_INS_INVALID = 0;;",
          "",
          "[Removed Lines]",
          "237: (* Operand type for instruction's operands *)",
          "239: let _PPC_OP_INVALID = 0;;",
          "240: let _PPC_OP_REG = 1;;",
          "241: let _PPC_OP_IMM = 2;;",
          "242: let _PPC_OP_MEM = 3;;",
          "243: let _PPC_OP_CRX = 64;;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "bindings/python/capstone/ppc_const.py||bindings/python/capstone/ppc_const.py": [
          "File: bindings/python/capstone/ppc_const.py -> bindings/python/capstone/ppc_const.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: PPC_BH_PLUS = 1",
          "21: PPC_BH_MINUS = 2",
          "23: # PPC registers",
          "25: PPC_REG_INVALID = 0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: # Operand type for instruction's operands",
          "25: PPC_OP_INVALID = 0",
          "26: PPC_OP_REG = 1",
          "27: PPC_OP_IMM = 2",
          "28: PPC_OP_MEM = 3",
          "29: PPC_OP_CRX = 64",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "234: PPC_REG_X2 = 209",
          "235: PPC_REG_ENDING = 210",
          "245: # PPC instruction",
          "247: PPC_INS_INVALID = 0",
          "",
          "[Removed Lines]",
          "237: # Operand type for instruction's operands",
          "239: PPC_OP_INVALID = 0",
          "240: PPC_OP_REG = 1",
          "241: PPC_OP_IMM = 2",
          "242: PPC_OP_MEM = 3",
          "243: PPC_OP_CRX = 64",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "201a0a1757676c2e603a973fe5b2368a1e92c471",
      "candidate_info": {
        "commit_hash": "201a0a1757676c2e603a973fe5b2368a1e92c471",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/201a0a1757676c2e603a973fe5b2368a1e92c471",
        "files": [
          "cs.c"
        ],
        "message": "\"vsnprintf()\" is unsupported on Windows CE. The closest match is \"_vsnprintf()\".",
        "before_after_code_files": [
          "cs.c||cs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cs.c||cs.c": [
          "File: cs.c -> cs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "88: cs_calloc_t cs_mem_calloc = calloc;",
          "89: cs_realloc_t cs_mem_realloc = realloc;",
          "90: cs_free_t cs_mem_free = free;",
          "91: cs_vsnprintf_t cs_vsnprintf = vsnprintf;",
          "92: #else",
          "93: extern void* kern_os_malloc(size_t size);",
          "94: extern void kern_os_free(void* addr);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91: #if defined(_WIN32_WCE)",
          "92: cs_vsnprintf_t cs_vsnprintf = _vsnprintf;",
          "93: #else // !_WIN32_WCE",
          "95: #endif // _WIN32_WCE",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "130eb7ef946c56f6602972342062fbf68c9bd1b8",
      "candidate_info": {
        "commit_hash": "130eb7ef946c56f6602972342062fbf68c9bd1b8",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/130eb7ef946c56f6602972342062fbf68c9bd1b8",
        "files": [
          "CMakeLists.txt",
          "cstool/CMakeLists.txt",
          "cstool/cstool.c"
        ],
        "message": "cstool: compile with CMake using CMakeLists.txt in root dir",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: static void usage(char *prog)",
          "54: {",
          "56:  printf(\"Syntax: %s <arch+mode> <assembly-hexstring> [start-address-in-hex-format]\\n\", prog);",
          "57:  printf(\"\\nThe following <arch+mode> options are supported:\\n\");",
          "",
          "[Removed Lines]",
          "55:  printf(\"Cstool v%s for Capstone Disassembler Engine (www.capstone-engine.org)\\n\", VERSION);",
          "",
          "[Added Lines]",
          "55:  printf(\"Cstool v%s for Capstone Disassembler Engine (www.capstone-engine.org)\\n\\n\", VERSION);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "13e06987cd4f2f50a697a5250a992e4757117df5",
      "candidate_info": {
        "commit_hash": "13e06987cd4f2f50a697a5250a992e4757117df5",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/13e06987cd4f2f50a697a5250a992e4757117df5",
        "files": [
          "cstool/cstool.c"
        ],
        "message": "cstool: some cleanup",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:  const char *name;",
          "13:  cs_arch arch;",
          "14:  cs_mode mode;",
          "16:  { \"arm\", CS_ARCH_ARM, CS_MODE_ARM },",
          "17:  { \"armb\", CS_ARCH_ARM, CS_MODE_ARM | CS_MODE_BIG_ENDIAN },",
          "18:  { \"armbe\", CS_ARCH_ARM, CS_MODE_ARM | CS_MODE_BIG_ENDIAN },",
          "",
          "[Removed Lines]",
          "15: } Arch[] = {",
          "",
          "[Added Lines]",
          "15: } all_archs[] = {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "117:  printf(\"Cstool for Capstone Disassembler Engine v%u.%u.%u\\n\\n\", CS_VERSION_MAJOR, CS_VERSION_MINOR, CS_VERSION_EXTRA);",
          "118:  printf(\"Syntax: %s [-u|-d] <arch+mode> <assembly-hexstring> [start-address-in-hex-format]\\n\", prog);",
          "119:  printf(\"\\nThe following <arch+mode> options are supported:\\n\");",
          "123:  if (cs_support(CS_ARCH_X86)) {",
          "124:   printf(\"        x16:       16-bit mode (X86)\\n\");",
          "",
          "[Removed Lines]",
          "120:  printf(\"\\n -d show detailed information of the instructions\\n\");",
          "121:  printf(\"\\n -u show immediates as unsigned\\n\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "174:   printf(\"        tms320c64x:TMS320C64x\\n\");",
          "175:  }",
          "178: }",
          "180: static void print_details(csh handle, cs_arch arch, cs_mode md, cs_insn *ins)",
          "",
          "[Removed Lines]",
          "177:  printf(\"\\n\");",
          "",
          "[Added Lines]",
          "175:  printf(\"\\nExtra options:\\n\");",
          "176:  printf(\"        -d show detailed information of the instructions\\n\");",
          "177:  printf(\"        -u show immediates as unsigned\\n\\n\");",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "240:  cs_arch arch = -1;",
          "241:  bool detail_flag = false;",
          "242:  bool unsigned_flag = false;",
          "244:  while ((c = getopt (argc, argv, \"udhv\")) != -1) {",
          "245:   switch (c) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "243:  int args_left;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "260:    return -1;",
          "261:   }",
          "262:  }",
          "264:  if (args_left < 2 || args_left > 3) {",
          "265:   usage(argv[0]);",
          "266:   return -1;",
          "",
          "[Removed Lines]",
          "263:  int args_left = argc - optind;",
          "",
          "[Added Lines]",
          "265:  args_left = argc - optind;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "277:   }",
          "278:  }",
          "284:    if (!err) {",
          "286:     if (strstr (mode, \"att\")) {",
          "287:      cs_option(handle, CS_OPT_SYNTAX, CS_OPT_SYNTAX_ATT);",
          "288:     }",
          "",
          "[Removed Lines]",
          "280:  for (i = 0; Arch[i].name; i++) {",
          "281:   if (!strcmp(Arch[i].name, mode)) {",
          "282:    arch = Arch[i].arch;",
          "283:    err = cs_open(Arch[i].arch, Arch[i].mode, &handle);",
          "285:     md = Arch[i].mode;",
          "",
          "[Added Lines]",
          "283:  for (i = 0; all_archs[i].name; i++) {",
          "284:   if (!strcmp(all_archs[i].name, mode)) {",
          "285:    arch = all_archs[i].arch;",
          "286:    err = cs_open(all_archs[i].arch, all_archs[i].mode, &handle);",
          "288:     md = all_archs[i].mode;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9271db7c7f6005920853a2fd009c978f6348684f",
      "candidate_info": {
        "commit_hash": "9271db7c7f6005920853a2fd009c978f6348684f",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/9271db7c7f6005920853a2fd009c978f6348684f",
        "files": [
          "arch/AArch64/AArch64InstPrinter.c"
        ],
        "message": "Fixes truncated immediate value in operand details\n\nThe instruction encoded \u00ab\u00a000 00 19 B2\u00a0\u00bb was correctly disassembled \u00ab\u00a0orr x0, x0, #0x8000000080\u00a0\u00bb, but the reported immediate value, in the detail structure, was truncated to 0x80 due to the cast.",
        "before_after_code_files": [
          "arch/AArch64/AArch64InstPrinter.c||arch/AArch64/AArch64InstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/AArch64/AArch64InstPrinter.c||arch/AArch64/AArch64InstPrinter.c": [
          "File: arch/AArch64/AArch64InstPrinter.c -> arch/AArch64/AArch64InstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "958:   MI->ac_idx++;",
          "959: #endif",
          "960:   MI->flat_insn->detail->arm64.operands[MI->flat_insn->detail->arm64.op_count].type = ARM64_OP_IMM;",
          "962:   MI->flat_insn->detail->arm64.op_count++;",
          "963:  }",
          "964: }",
          "",
          "[Removed Lines]",
          "961:   MI->flat_insn->detail->arm64.operands[MI->flat_insn->detail->arm64.op_count].imm = (int)Val;",
          "",
          "[Added Lines]",
          "961:   MI->flat_insn->detail->arm64.operands[MI->flat_insn->detail->arm64.op_count].imm = (int64_t)Val;",
          "",
          "---------------"
        ]
      }
    }
  ]
}