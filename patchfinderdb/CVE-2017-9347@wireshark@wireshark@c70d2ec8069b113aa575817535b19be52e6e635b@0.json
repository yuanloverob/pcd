{
  "cve_id": "CVE-2017-9347",
  "cve_desc": "In Wireshark 2.2.0 to 2.2.6, the ROS dissector could crash with a NULL pointer dereference. This was addressed in epan/dissectors/asn1/ros/packet-ros-template.c by validating an OID.",
  "repo": "wireshark/wireshark",
  "patch_hash": "c70d2ec8069b113aa575817535b19be52e6e635b",
  "patch_info": {
    "commit_hash": "c70d2ec8069b113aa575817535b19be52e6e635b",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/c70d2ec8069b113aa575817535b19be52e6e635b",
    "files": [
      "epan/dissectors/asn1/ros/packet-ros-template.c",
      "epan/dissectors/packet-ros.c"
    ],
    "message": "ROS: Harden ROS dissection\n\nMake sure that on a OID search an actual OID is available to search for.\n\nBug: 13637\nChange-Id: I36f84cce5506f003d2a30a17f8671d5e22070612\nReviewed-on: https://code.wireshark.org/review/21280\nReviewed-by: Jaap Keuter <jaap.keuter@xs4all.nl>\nPetri-Dish: Jaap Keuter <jaap.keuter@xs4all.nl>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>",
    "before_after_code_files": [
      "epan/dissectors/asn1/ros/packet-ros-template.c||epan/dissectors/asn1/ros/packet-ros-template.c",
      "epan/dissectors/packet-ros.c||epan/dissectors/packet-ros.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/asn1/ros/packet-ros-template.c||epan/dissectors/asn1/ros/packet-ros-template.c": [
      "File: epan/dissectors/asn1/ros/packet-ros-template.c -> epan/dissectors/asn1/ros/packet-ros-template.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "145:  proto_item *item=NULL;",
      "146:  proto_tree *ros_tree=NULL;",
      "150:   if(tree){",
      "151:    item = proto_tree_add_item(tree, *(rinfo->proto), tvb, 0, -1, ENC_NA);",
      "",
      "[Removed Lines]",
      "148:  if((session != NULL) && ((rinfo = (ros_info_t*)wmem_map_lookup(protocol_table, oid)) != NULL)) {",
      "",
      "[Added Lines]",
      "148:  if((session != NULL) && (oid != NULL) && ((rinfo = (ros_info_t*)wmem_map_lookup(protocol_table, oid)) != NULL)) {",
      "",
      "---------------"
    ],
    "epan/dissectors/packet-ros.c||epan/dissectors/packet-ros.c": [
      "File: epan/dissectors/packet-ros.c -> epan/dissectors/packet-ros.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "199:  proto_item *item=NULL;",
      "200:  proto_tree *ros_tree=NULL;",
      "204:   if(tree){",
      "205:    item = proto_tree_add_item(tree, *(rinfo->proto), tvb, 0, -1, ENC_NA);",
      "",
      "[Removed Lines]",
      "202:  if((session != NULL) && ((rinfo = (ros_info_t*)wmem_map_lookup(protocol_table, oid)) != NULL)) {",
      "",
      "[Added Lines]",
      "202:  if((session != NULL) && (oid != NULL) && ((rinfo = (ros_info_t*)wmem_map_lookup(protocol_table, oid)) != NULL)) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9365fd3d3a4cdac07d70bd77f7a42f3260b33b5e",
      "candidate_info": {
        "commit_hash": "9365fd3d3a4cdac07d70bd77f7a42f3260b33b5e",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/9365fd3d3a4cdac07d70bd77f7a42f3260b33b5e",
        "files": [
          "epan/dissectors/asn1/acse/packet-acse-template.c",
          "epan/dissectors/asn1/ansi_map/packet-ansi_map-template.c",
          "epan/dissectors/asn1/ansi_tcap/packet-ansi_tcap-template.c",
          "epan/dissectors/asn1/camel/packet-camel-template.c",
          "epan/dissectors/asn1/h225/packet-h225-template.c",
          "epan/dissectors/asn1/h245/h245.cnf",
          "epan/dissectors/asn1/h245/packet-h245-template.c",
          "epan/dissectors/asn1/lte-rrc/lte-rrc.cnf",
          "epan/dissectors/asn1/lte-rrc/packet-lte-rrc-template.c",
          "epan/dissectors/asn1/pres/packet-pres-template.c",
          "epan/dissectors/asn1/ros/packet-ros-template.c",
          "epan/dissectors/asn1/rtse/packet-rtse-template.c",
          "epan/dissectors/packet-acse.c",
          "epan/dissectors/packet-ansi_map.c",
          "epan/dissectors/packet-ansi_tcap.c",
          "epan/dissectors/packet-camel.c",
          "epan/dissectors/packet-h225.c",
          "epan/dissectors/packet-h245.c",
          "epan/dissectors/packet-lte-rrc.c",
          "epan/dissectors/packet-pres.c",
          "epan/dissectors/packet-ros.c",
          "epan/dissectors/packet-rtse.c"
        ],
        "message": "Convert GHashTable -> wmem_map_t for ASN.1 disseectors\n\nChange-Id: Id749c41947c6300f2c82ed947352c336f9e45b72\nReviewed-on: https://code.wireshark.org/review/19838\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>",
        "before_after_code_files": [
          "epan/dissectors/asn1/acse/packet-acse-template.c||epan/dissectors/asn1/acse/packet-acse-template.c",
          "epan/dissectors/asn1/ansi_map/packet-ansi_map-template.c||epan/dissectors/asn1/ansi_map/packet-ansi_map-template.c",
          "epan/dissectors/asn1/ansi_tcap/packet-ansi_tcap-template.c||epan/dissectors/asn1/ansi_tcap/packet-ansi_tcap-template.c",
          "epan/dissectors/asn1/camel/packet-camel-template.c||epan/dissectors/asn1/camel/packet-camel-template.c",
          "epan/dissectors/asn1/h225/packet-h225-template.c||epan/dissectors/asn1/h225/packet-h225-template.c",
          "epan/dissectors/asn1/h245/h245.cnf||epan/dissectors/asn1/h245/h245.cnf",
          "epan/dissectors/asn1/h245/packet-h245-template.c||epan/dissectors/asn1/h245/packet-h245-template.c",
          "epan/dissectors/asn1/lte-rrc/lte-rrc.cnf||epan/dissectors/asn1/lte-rrc/lte-rrc.cnf",
          "epan/dissectors/asn1/lte-rrc/packet-lte-rrc-template.c||epan/dissectors/asn1/lte-rrc/packet-lte-rrc-template.c",
          "epan/dissectors/asn1/pres/packet-pres-template.c||epan/dissectors/asn1/pres/packet-pres-template.c",
          "epan/dissectors/asn1/ros/packet-ros-template.c||epan/dissectors/asn1/ros/packet-ros-template.c",
          "epan/dissectors/asn1/rtse/packet-rtse-template.c||epan/dissectors/asn1/rtse/packet-rtse-template.c",
          "epan/dissectors/packet-acse.c||epan/dissectors/packet-acse.c",
          "epan/dissectors/packet-ansi_map.c||epan/dissectors/packet-ansi_map.c",
          "epan/dissectors/packet-ansi_tcap.c||epan/dissectors/packet-ansi_tcap.c",
          "epan/dissectors/packet-camel.c||epan/dissectors/packet-camel.c",
          "epan/dissectors/packet-h225.c||epan/dissectors/packet-h225.c",
          "epan/dissectors/packet-h245.c||epan/dissectors/packet-h245.c",
          "epan/dissectors/packet-lte-rrc.c||epan/dissectors/packet-lte-rrc.c",
          "epan/dissectors/packet-pres.c||epan/dissectors/packet-pres.c",
          "epan/dissectors/packet-ros.c||epan/dissectors/packet-ros.c",
          "epan/dissectors/packet-rtse.c||epan/dissectors/packet-rtse.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/asn1/ros/packet-ros-template.c||epan/dissectors/asn1/ros/packet-ros-template.c",
            "epan/dissectors/packet-ros.c||epan/dissectors/packet-ros.c"
          ],
          "candidate": [
            "epan/dissectors/asn1/ros/packet-ros-template.c||epan/dissectors/asn1/ros/packet-ros-template.c",
            "epan/dissectors/packet-ros.c||epan/dissectors/packet-ros.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/asn1/acse/packet-acse-template.c||epan/dissectors/asn1/acse/packet-acse-template.c": [
          "File: epan/dissectors/asn1/acse/packet-acse-template.c -> epan/dissectors/asn1/acse/packet-acse-template.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "90:  guint32 ctx_id;",
          "91:  char *oid;",
          "92: } acse_ctx_oid_t;",
          "95: static guint",
          "96: acse_ctx_oid_hash(gconstpointer k)",
          "",
          "[Removed Lines]",
          "93: static GHashTable *acse_ctx_oid_table = NULL;",
          "",
          "[Added Lines]",
          "93: static wmem_map_t *acse_ctx_oid_table = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "107:  return aco1->ctx_id==aco2->ctx_id;",
          "108: }",
          "122: static void",
          "123: register_ctx_id_and_oid(packet_info *pinfo _U_, guint32 idx, char *oid)",
          "124: {",
          "",
          "[Removed Lines]",
          "110: static void",
          "111: acse_init(void)",
          "112: {",
          "113:  if (acse_ctx_oid_table) {",
          "114:   g_hash_table_destroy(acse_ctx_oid_table);",
          "115:   acse_ctx_oid_table = NULL;",
          "116:  }",
          "117:  acse_ctx_oid_table = g_hash_table_new(acse_ctx_oid_hash,",
          "118:    acse_ctx_oid_equal);",
          "120: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "128:  aco->oid=wmem_strdup(wmem_file_scope(), oid);",
          "132:  if (tmpaco) {",
          "134:  }",
          "136: }",
          "137: static char *",
          "138: find_oid_by_ctx_id(packet_info *pinfo _U_, guint32 idx)",
          "139: {",
          "140:  acse_ctx_oid_t aco, *tmpaco;",
          "141:  aco.ctx_id=idx;",
          "143:  if (tmpaco) {",
          "144:   return tmpaco->oid;",
          "145:  }",
          "",
          "[Removed Lines]",
          "131:  tmpaco=(acse_ctx_oid_t *)g_hash_table_lookup(acse_ctx_oid_table, aco);",
          "133:   g_hash_table_remove(acse_ctx_oid_table, tmpaco);",
          "135:  g_hash_table_insert(acse_ctx_oid_table, aco, aco);",
          "142:  tmpaco=(acse_ctx_oid_t *)g_hash_table_lookup(acse_ctx_oid_table, &aco);",
          "",
          "[Added Lines]",
          "119:  tmpaco=(acse_ctx_oid_t *)wmem_map_lookup(acse_ctx_oid_table, aco);",
          "121:   wmem_map_remove(acse_ctx_oid_table, tmpaco);",
          "123:  wmem_map_insert(acse_ctx_oid_table, aco, aco);",
          "130:  tmpaco=(acse_ctx_oid_t *)wmem_map_lookup(acse_ctx_oid_table, &aco);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "294:   proto_register_subtree_array(ett, array_length(ett));",
          "295:   expert_acse = expert_register_protocol(proto_acse);",
          "296:   expert_register_field_array(expert_acse, ei, array_length(ei));",
          "297: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "286: #if NOT_NEEDED",
          "287:   acse_ctx_oid_table = wmem_map_new_autoreset(wmem_epan_scope(), wmem_file_scope(), acse_ctx_oid_hash,",
          "288:    acse_ctx_oid_equal);",
          "289: #endif",
          "",
          "---------------"
        ],
        "epan/dissectors/asn1/ansi_map/packet-ansi_map-template.c||epan/dissectors/asn1/ansi_map/packet-ansi_map-template.c": [
          "File: epan/dissectors/asn1/ansi_map/packet-ansi_map-template.c -> epan/dissectors/asn1/ansi_map/packet-ansi_map-template.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "406: static void",
          "",
          "[Removed Lines]",
          "390: static GHashTable *TransactionId_table=NULL;",
          "392: static void",
          "393: ansi_map_init(void)",
          "394: {",
          "395:     TransactionId_table = g_hash_table_new(g_str_hash, g_str_equal);",
          "396: }",
          "398: static void",
          "399: ansi_map_cleanup(void)",
          "400: {",
          "402:     g_hash_table_destroy(TransactionId_table);",
          "403: }",
          "",
          "[Added Lines]",
          "390: static wmem_map_t *TransactionId_table=NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "432:                 break;",
          "433:         }",
          "436:         if(ansi_map_saved_invokedata)",
          "437:             return;",
          "",
          "[Removed Lines]",
          "435:         ansi_map_saved_invokedata = (struct ansi_map_invokedata_t *)g_hash_table_lookup(TransactionId_table,buf);",
          "",
          "[Added Lines]",
          "422:         ansi_map_saved_invokedata = (struct ansi_map_invokedata_t *)wmem_map_lookup(TransactionId_table,buf);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "440:         ansi_map_saved_invokedata->opcode = p_private_tcap->d.OperationCode_private;",
          "441:         ansi_map_saved_invokedata->ServiceIndicator = ServiceIndicator;",
          "444:                             wmem_strdup(wmem_file_scope(), buf),",
          "445:                             ansi_map_saved_invokedata);",
          "",
          "[Removed Lines]",
          "443:         g_hash_table_insert(TransactionId_table,",
          "",
          "[Added Lines]",
          "430:         wmem_map_insert(TransactionId_table,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4363:     }",
          "4367:     if(ansi_map_saved_invokedata){",
          "4368:         OperationCode = ansi_map_saved_invokedata->opcode & 0xff;",
          "4369:         ServiceIndicator = ansi_map_saved_invokedata->ServiceIndicator;",
          "",
          "[Removed Lines]",
          "4366:     ansi_map_saved_invokedata = (struct ansi_map_invokedata_t *)g_hash_table_lookup(TransactionId_table, buf);",
          "",
          "[Added Lines]",
          "4353:     ansi_map_saved_invokedata = (struct ansi_map_invokedata_t *)wmem_map_lookup(TransactionId_table, buf);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "5499:                                   \"Type of matching invoke/response, risk of mismatch if loose matching chosen\",",
          "5500:                                   &ansi_map_response_matching_type, ansi_map_response_matching_type_values, FALSE);",
          "5504:     register_stat_tap_table_ui(&stat_table);",
          "5505: }",
          "",
          "[Removed Lines]",
          "5502:     register_init_routine(&ansi_map_init);",
          "5503:     register_cleanup_routine(&ansi_map_cleanup);",
          "",
          "[Added Lines]",
          "5489:     TransactionId_table = wmem_map_new_autoreset(wmem_epan_scope(), wmem_file_scope(), wmem_str_hash, g_str_equal);",
          "",
          "---------------"
        ],
        "epan/dissectors/asn1/ansi_tcap/packet-ansi_tcap-template.c||epan/dissectors/asn1/ansi_tcap/packet-ansi_tcap-template.c": [
          "File: epan/dissectors/asn1/ansi_tcap/packet-ansi_tcap-template.c -> epan/dissectors/asn1/ansi_tcap/packet-ansi_tcap-template.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "146:     gint32 OperationCode_national;",
          "147: };",
          "165: static void",
          "",
          "[Removed Lines]",
          "149: static GHashTable *TransactionId_table=NULL;",
          "151: static void",
          "152: ansi_tcap_init(void)",
          "153: {",
          "154:         TransactionId_table = g_hash_table_new(g_str_hash, g_str_equal);",
          "155: }",
          "157: static void",
          "158: ansi_tcap_cleanup(void)",
          "159: {",
          "161:         g_hash_table_destroy(TransactionId_table);",
          "162: }",
          "",
          "[Added Lines]",
          "149: static wmem_map_t *TransactionId_table=NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "189:                 }",
          "193:           if(ansi_tcap_saved_invokedata)",
          "194:                   return;",
          "",
          "[Removed Lines]",
          "192:           ansi_tcap_saved_invokedata = (struct ansi_tcap_invokedata_t *)g_hash_table_lookup(TransactionId_table,buf);",
          "",
          "[Added Lines]",
          "179:           ansi_tcap_saved_invokedata = (struct ansi_tcap_invokedata_t *)wmem_map_lookup(TransactionId_table,buf);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "198:           ansi_tcap_saved_invokedata->OperationCode_national = ansi_tcap_private.d.OperationCode_national;",
          "199:           ansi_tcap_saved_invokedata->OperationCode_private = ansi_tcap_private.d.OperationCode_private;",
          "202:                         wmem_strdup(wmem_file_scope(), buf),",
          "203:                         ansi_tcap_saved_invokedata);",
          "",
          "[Removed Lines]",
          "201:           g_hash_table_insert(TransactionId_table,",
          "",
          "[Added Lines]",
          "188:           wmem_map_insert(TransactionId_table,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "237:                 break;",
          "238:   }",
          "241:   if(ansi_tcap_saved_invokedata){",
          "242:           ansi_tcap_private.d.OperationCode                      = ansi_tcap_saved_invokedata->OperationCode;",
          "243:           ansi_tcap_private.d.OperationCode_national = ansi_tcap_saved_invokedata->OperationCode_national;",
          "",
          "[Removed Lines]",
          "240:   ansi_tcap_saved_invokedata = (struct ansi_tcap_invokedata_t *)g_hash_table_lookup(TransactionId_table, buf);",
          "",
          "[Added Lines]",
          "227:   ansi_tcap_saved_invokedata = (struct ansi_tcap_invokedata_t *)wmem_map_lookup(TransactionId_table, buf);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "508:                                    \"Type of matching invoke/response, risk of mismatch if loose matching chosen\",",
          "509:                                    &ansi_tcap_response_matching_type, ansi_tcap_response_matching_type_values, FALSE);",
          "513: }",
          "",
          "[Removed Lines]",
          "511:     register_init_routine(&ansi_tcap_init);",
          "512:     register_cleanup_routine(&ansi_tcap_cleanup);",
          "",
          "[Added Lines]",
          "498:     TransactionId_table = wmem_map_new_autoreset(wmem_epan_scope(), wmem_file_scope(), wmem_str_hash, g_str_equal);",
          "",
          "---------------"
        ],
        "epan/dissectors/asn1/camel/packet-camel-template.c||epan/dissectors/asn1/camel/packet-camel-template.c": [
          "File: epan/dissectors/asn1/camel/packet-camel-template.c -> epan/dissectors/asn1/camel/packet-camel-template.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "165: gboolean is_ExtensionField =FALSE;",
          "169: static guint32 camelsrt_global_SessionId=1;",
          "171: static int camel_opcode_type;",
          "",
          "[Removed Lines]",
          "168: static GHashTable *srt_calls = NULL;",
          "",
          "[Added Lines]",
          "168: static wmem_map_t *srt_calls = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "441: find_camelsrt_call(struct camelsrt_call_info_key_t *p_camelsrt_call_key)",
          "442: {",
          "443:   struct camelsrt_call_t *p_camelsrt_call = NULL;",
          "446: #ifdef DEBUG_CAMELSRT",
          "447:   if(p_camelsrt_call) {",
          "",
          "[Removed Lines]",
          "444:   p_camelsrt_call = (struct camelsrt_call_t *)g_hash_table_lookup(srt_calls, p_camelsrt_call_key);",
          "",
          "[Added Lines]",
          "444:   p_camelsrt_call = (struct camelsrt_call_t *)wmem_map_lookup(srt_calls, p_camelsrt_call_key);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "486:   dbg(10,\"D%d \", p_new_camelsrt_call->session_id);",
          "487: #endif",
          "490:   return p_new_camelsrt_call;",
          "491: }",
          "",
          "[Removed Lines]",
          "489:   g_hash_table_insert(srt_calls, p_new_camelsrt_call_key, p_new_camelsrt_call);",
          "",
          "[Added Lines]",
          "489:   wmem_map_insert(srt_calls, p_new_camelsrt_call_key, p_new_camelsrt_call);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "497: static void",
          "498: camelsrt_init_routine(void)",
          "499: {",
          "503:   camelsrt_global_SessionId=1;",
          "",
          "[Removed Lines]",
          "501:   srt_calls = g_hash_table_new(camelsrt_call_hash, camelsrt_call_equal);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "509:   gcamel_DisplaySRT=gcamel_PersistentSRT || gcamel_HandleSRT&gcamel_StatSRT;",
          "510: }",
          "",
          "[Removed Lines]",
          "512: static void",
          "513: camelsrt_cleanup_routine(void)",
          "514: {",
          "516:   g_hash_table_destroy(srt_calls);",
          "517: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "566:     p_camelsrt_info->msginfo[CAMELSRT_SESSION].req_time = p_camelsrt_call->category[CAMELSRT_SESSION].req_time;",
          "568:     if ( !gcamel_PersistentSRT ) {",
          "570: #ifdef DEBUG_CAMELSRT",
          "571:       dbg(20,\"remove hash \");",
          "572: #endif",
          "",
          "[Removed Lines]",
          "569:       g_hash_table_remove(srt_calls, &camelsrt_call_key);",
          "",
          "[Added Lines]",
          "560:       wmem_map_remove(srt_calls, &camelsrt_call_key);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "629:   dbg(10,\"\\n Session begin #%u\\n\", pinfo->num);",
          "630:   dbg(11,\"Search key %lu \",camelsrt_call_key.SessionIdKey);",
          "631: #endif",
          "633:   if (p_camelsrt_call) {",
          "635: #ifdef DEBUG_CAMELSRT",
          "",
          "[Removed Lines]",
          "632:   p_camelsrt_call = (struct camelsrt_call_t *)g_hash_table_lookup(srt_calls, &camelsrt_call_key);",
          "",
          "[Added Lines]",
          "623:   p_camelsrt_call = (struct camelsrt_call_t *)wmem_map_lookup(srt_calls, &camelsrt_call_key);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1600:   register_init_routine(&camelsrt_init_routine);",
          "1602:   camel_tap=register_tap(PSNAME);",
          "1604:   register_srt_table(proto_camel, PSNAME, 1, camelstat_packet, camelstat_init, NULL);",
          "",
          "[Removed Lines]",
          "1601:   register_cleanup_routine(&camelsrt_cleanup_routine);",
          "",
          "[Added Lines]",
          "1594:   srt_calls = wmem_map_new_autoreset(wmem_epan_scope(), wmem_file_scope(), camelsrt_call_hash, camelsrt_call_equal);",
          "",
          "---------------"
        ],
        "epan/dissectors/asn1/h225/packet-h225-template.c||epan/dissectors/asn1/h225/packet-h225-template.c": [
          "File: epan/dissectors/asn1/h225/packet-h225-template.c -> epan/dissectors/asn1/h225/packet-h225-template.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "64: void proto_register_h225(void);",
          "65: static h225_packet_info* create_h225_packet_info(packet_info *pinfo);",
          "67: static void ras_call_matching(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, h225_packet_info *pi);",
          "",
          "[Removed Lines]",
          "66: static void h225_init_routine(void);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "92: static h225ras_call_t * find_h225ras_call(h225ras_call_info_key *h225ras_call_key ,int category);",
          "",
          "[Removed Lines]",
          "89: static GHashTable *ras_calls[7] = {NULL, NULL, NULL, NULL, NULL, NULL, NULL};",
          "",
          "[Added Lines]",
          "88: static wmem_map_t *ras_calls[7] = {NULL, NULL, NULL, NULL, NULL, NULL, NULL};",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "276: h225ras_call_t * find_h225ras_call(h225ras_call_info_key *h225ras_call_key ,int category)",
          "277: {",
          "281:   return h225ras_call;",
          "282: }",
          "",
          "[Removed Lines]",
          "278:   h225ras_call_t *h225ras_call = NULL;",
          "279:   h225ras_call = (h225ras_call_t *)g_hash_table_lookup(ras_calls[category], h225ras_call_key);",
          "",
          "[Added Lines]",
          "277:   h225ras_call_t *h225ras_call = (h225ras_call_t *)wmem_map_lookup(ras_calls[category], h225ras_call_key);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "304:   h225ras_call->req_time=pinfo->abs_ts;",
          "305:   h225ras_call->guid=*guid;",
          "309:   return h225ras_call;",
          "310: }",
          "",
          "[Removed Lines]",
          "307:   g_hash_table_insert(ras_calls[category], new_h225ras_call_key, h225ras_call);",
          "",
          "[Added Lines]",
          "305:   wmem_map_insert(ras_calls[category], new_h225ras_call_key, h225ras_call);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "331:   return h225ras_call;",
          "332: }",
          "362: static int",
          "363: dissect_h225_H323UserInformation(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, void *data _U_)",
          "364: {",
          "",
          "[Removed Lines]",
          "335:    This routine will be called by Wireshark, before it",
          "336:    is (re-)dissecting a trace file from beginning.",
          "339: static void",
          "340: h225_init_routine(void)",
          "341: {",
          "342:   int i;",
          "345:   for(i=0;i<7;i++) {",
          "346:     ras_calls[i] = g_hash_table_new(h225ras_call_hash, h225ras_call_equal);",
          "347:   }",
          "349: }",
          "351: static void",
          "352: h225_cleanup_routine(void)",
          "353: {",
          "354:   int i;",
          "357:   for(i=0;i<7;i++) {",
          "358:     g_hash_table_destroy(ras_calls[i]);",
          "359:   }",
          "360: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "868:   };",
          "870:   module_t *h225_module;",
          "874:   proto_h225 = proto_register_protocol(PNAME, PSNAME, PFNAME);",
          "",
          "[Removed Lines]",
          "871:   int proto_h225_ras;",
          "",
          "[Added Lines]",
          "841:   int i, proto_h225_ras;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "909:   gef_name_dissector_table = register_dissector_table(\"h225.gef.name\", \"H.225 Generic Extensible Framework (names)\", proto_h225, FT_STRING, BASE_NONE);",
          "910:   gef_content_dissector_table = register_dissector_table(\"h225.gef.content\", \"H.225 Generic Extensible Framework\", proto_h225, FT_STRING, BASE_NONE);",
          "914:   h225_tap = register_tap(PFNAME);",
          "916:   register_rtd_table(proto_h225_ras, PFNAME, NUM_RAS_STATS, 1, ras_message_category, h225rassrt_packet, NULL);",
          "",
          "[Removed Lines]",
          "912:   register_init_routine(&h225_init_routine);",
          "913:   register_cleanup_routine(&h225_cleanup_routine);",
          "",
          "[Added Lines]",
          "882:   for(i=0;i<7;i++) {",
          "883:     ras_calls[i] = wmem_map_new_autoreset(wmem_epan_scope(), wmem_file_scope(), h225ras_call_hash, h225ras_call_equal);",
          "884:   }",
          "",
          "---------------"
        ],
        "epan/dissectors/asn1/h245/h245.cnf||epan/dissectors/asn1/h245/h245.cnf": [
          "File: epan/dissectors/asn1/h245/h245.cnf -> epan/dissectors/asn1/h245/h245.cnf",
          "--- Hunk 1 ---",
          "[Context before]",
          "141:  pending->rev_channel_params = h223_rev_lc_params;",
          "142:  temp = h223_fw_lc_num;",
          "143:  if (%(ACTX)s->pinfo->p2p_dir > -1)",
          "145:   }",
          "147:   if (upcoming_olc) {",
          "148:     if (fast_start) {",
          "149:       h245_setup_channels(actx->pinfo, &upcoming_olc->rev_lc);",
          "150:     } else {",
          "152:         wmem_strdup(wmem_file_scope(), gen_olc_key(upcoming_olc->fwd_lc_num, &%(ACTX)s->pinfo->dst, &%(ACTX)s->pinfo->src)),",
          "153:         upcoming_olc);",
          "154:     }",
          "",
          "[Removed Lines]",
          "144:   g_hash_table_insert(h223_pending_olc_reqs[%(ACTX)s->pinfo->p2p_dir], GINT_TO_POINTER(temp), pending);",
          "151:       g_hash_table_insert(h245_pending_olc_reqs,",
          "",
          "[Added Lines]",
          "144:   wmem_map_insert(h223_pending_olc_reqs[%(ACTX)s->pinfo->p2p_dir], GINT_TO_POINTER(temp), pending);",
          "151:       wmem_map_insert(h245_pending_olc_reqs,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "235:  %(ACTX)s->pinfo->p2p_dir = P2P_DIR_RECV;",
          "236:   else",
          "237:  %(ACTX)s->pinfo->p2p_dir = P2P_DIR_SENT;",
          "239:   if (pend) {",
          "240:  DISSECTOR_ASSERT( ( h223_rev_lc_num &&  pend->rev_channel_params)",
          "241:        || (!h223_rev_lc_num && !pend->rev_channel_params) );",
          "",
          "[Removed Lines]",
          "238:   pend = (h223_pending_olc *)g_hash_table_lookup( h223_pending_olc_reqs[%(ACTX)s->pinfo->p2p_dir], GINT_TO_POINTER(temp) );",
          "",
          "[Added Lines]",
          "238:   pend = (h223_pending_olc *)wmem_map_lookup( h223_pending_olc_reqs[%(ACTX)s->pinfo->p2p_dir], GINT_TO_POINTER(temp) );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "252:   if (upcoming_olc) {",
          "253:     olc_key = gen_olc_key(upcoming_olc->fwd_lc_num, &%(ACTX)s->pinfo->src, &%(ACTX)s->pinfo->dst);",
          "255:     if (olc_req) {",
          "256:       update_unicast_addr(&olc_req->fwd_lc.media_addr, &upcoming_olc->fwd_lc.media_addr);",
          "257:       update_unicast_addr(&olc_req->fwd_lc.media_control_addr, &upcoming_olc->fwd_lc.media_control_addr);",
          "",
          "[Removed Lines]",
          "254:     olc_req = (olc_info_t *)g_hash_table_lookup(h245_pending_olc_reqs, olc_key);",
          "",
          "[Added Lines]",
          "254:     olc_req = (olc_info_t *)wmem_map_lookup(h245_pending_olc_reqs, olc_key);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "259:       update_unicast_addr(&olc_req->rev_lc.media_control_addr, &upcoming_olc->rev_lc.media_control_addr);",
          "260:       h245_setup_channels(actx->pinfo, &olc_req->fwd_lc);",
          "261:       h245_setup_channels(actx->pinfo, &olc_req->rev_lc);",
          "263:     } else {",
          "264:       h245_setup_channels(actx->pinfo, &upcoming_olc->fwd_lc);",
          "265:     }",
          "",
          "[Removed Lines]",
          "262:       g_hash_table_remove(h245_pending_olc_reqs, olc_key);",
          "",
          "[Added Lines]",
          "262:       wmem_map_remove(h245_pending_olc_reqs, olc_key);",
          "",
          "---------------"
        ],
        "epan/dissectors/asn1/h245/packet-h245-template.c||epan/dissectors/asn1/h245/packet-h245-template.c": [
          "File: epan/dissectors/asn1/h245/packet-h245-template.c -> epan/dissectors/asn1/h245/packet-h245-template.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "232:   channel_info_t rev_lc;",
          "233: } olc_info_t;",
          "236: static gboolean fast_start = FALSE;",
          "237: static olc_info_t *upcoming_olc = NULL;",
          "238: static channel_info_t *upcoming_channel = NULL;",
          "",
          "[Removed Lines]",
          "235: static GHashTable* h245_pending_olc_reqs = NULL;",
          "",
          "[Added Lines]",
          "235: static wmem_map_t* h245_pending_olc_reqs = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "281:  h223_lc_params *rev_channel_params;",
          "282: } h223_pending_olc;",
          "285: static dissector_handle_t   h245_lc_dissector;",
          "286: static guint16              h245_lc_temp;",
          "287: static guint16              h223_fw_lc_num;",
          "",
          "[Removed Lines]",
          "284: static GHashTable*          h223_pending_olc_reqs[] = { NULL, NULL };",
          "",
          "[Added Lines]",
          "284: static wmem_map_t*          h223_pending_olc_reqs[] = { NULL, NULL };",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "291: static h223_lc_params      *h223_rev_lc_params;",
          "292: static h223_add_lc_handle_t h223_add_lc_handle = NULL;",
          "301: static void h223_lc_init( void )",
          "302: {",
          "305:  h223_lc_params_temp = NULL;",
          "306:  h245_lc_dissector = NULL;",
          "307:  h223_fw_lc_num = 0;",
          "308: }",
          "322: void h245_set_h223_add_lc_handle( h223_add_lc_handle_t handle )",
          "323: {",
          "324:  h223_add_lc_handle = handle;",
          "",
          "[Removed Lines]",
          "294: static void h223_lc_init_dir( int dir )",
          "295: {",
          "296:  if ( h223_pending_olc_reqs[dir] )",
          "297:   g_hash_table_destroy( h223_pending_olc_reqs[dir] );",
          "298:  h223_pending_olc_reqs[dir] = g_hash_table_new( g_direct_hash, g_direct_equal );",
          "299: }",
          "303:  h223_lc_init_dir( P2P_DIR_SENT );",
          "304:  h223_lc_init_dir( P2P_DIR_RECV );",
          "310: static void h245_init(void)",
          "311: {",
          "312:  h245_pending_olc_reqs = g_hash_table_new(g_str_hash, g_str_equal);",
          "314:  h223_lc_init();",
          "315: }",
          "317: static void h245_cleanup(void)",
          "318: {",
          "319:  g_hash_table_destroy(h245_pending_olc_reqs);",
          "320: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "519:   proto_h245 = proto_register_protocol(PNAME, PSNAME, PFNAME);",
          "523:   proto_register_field_array(proto_h245, hf, array_length(hf));",
          "524:   proto_register_subtree_array(ett, array_length(ett));",
          "",
          "[Removed Lines]",
          "520:   register_init_routine(h245_init);",
          "521:   register_cleanup_routine(h245_cleanup);",
          "",
          "[Added Lines]",
          "499:   h223_pending_olc_reqs[P2P_DIR_SENT] = wmem_map_new_autoreset(wmem_epan_scope(), wmem_file_scope(), g_direct_hash, g_direct_equal );",
          "500:   h223_pending_olc_reqs[P2P_DIR_RECV] = wmem_map_new_autoreset(wmem_epan_scope(), wmem_file_scope(), g_direct_hash, g_direct_equal );",
          "501:   h245_pending_olc_reqs = wmem_map_new_autoreset(wmem_epan_scope(), wmem_file_scope(), wmem_str_hash, g_str_equal);",
          "503:   register_init_routine(h223_lc_init);",
          "",
          "---------------"
        ],
        "epan/dissectors/asn1/lte-rrc/lte-rrc.cnf||epan/dissectors/asn1/lte-rrc/lte-rrc.cnf": [
          "File: epan/dissectors/asn1/lte-rrc/lte-rrc.cnf -> epan/dissectors/asn1/lte-rrc/lte-rrc.cnf",
          "--- Hunk 1 ---",
          "[Context before]",
          "748:     guint32 dataCodingScheme;",
          "749:     subtree = proto_item_add_subtree(actx->created_item, ett_lte_rrc_dataCodingScheme);",
          "750:     dataCodingScheme = dissect_cbs_data_coding_scheme(data_coding_scheme_tvb, actx->pinfo, subtree, 0);",
          "752:                         GUINT_TO_POINTER(dataCodingScheme));",
          "753:   }",
          "",
          "[Removed Lines]",
          "751:     g_hash_table_insert(lte_rrc_etws_cmas_dcs_hash, GUINT_TO_POINTER((guint)private_data_get_message_identifier(actx)),",
          "",
          "[Added Lines]",
          "751:     wmem_map_insert(lte_rrc_etws_cmas_dcs_hash, GUINT_TO_POINTER((guint)private_data_get_message_identifier(actx)),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "769:     subtree = proto_item_add_subtree(actx->created_item, ett_lte_rrc_warningMessageSegment);",
          "770:     frag_tvb = process_reassembled_data(warning_msg_seg_tvb, 0, actx->pinfo, \"Reassembled SIB11 warning message\",",
          "771:                                         frag_data, &lte_rrc_sib11_frag_items, NULL, subtree);",
          "773:     if (frag_tvb && p_dcs) {",
          "774:       dissect_lte_rrc_warningMessageSegment(frag_tvb, subtree, actx->pinfo, GPOINTER_TO_UINT(p_dcs));",
          "775:     }",
          "",
          "[Removed Lines]",
          "772:     p_dcs = g_hash_table_lookup(lte_rrc_etws_cmas_dcs_hash, GUINT_TO_POINTER((guint)private_data_get_message_identifier(actx)));",
          "",
          "[Added Lines]",
          "772:     p_dcs = wmem_map_lookup(lte_rrc_etws_cmas_dcs_hash, GUINT_TO_POINTER((guint)private_data_get_message_identifier(actx)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "823:     guint32 dataCodingScheme;",
          "824:     subtree = proto_item_add_subtree(actx->created_item, ett_lte_rrc_dataCodingScheme);",
          "825:     dataCodingScheme = dissect_cbs_data_coding_scheme(data_coding_scheme_tvb, actx->pinfo, subtree, 0);",
          "827:                         GUINT_TO_POINTER(dataCodingScheme));",
          "828:   }",
          "",
          "[Removed Lines]",
          "826:     g_hash_table_insert(lte_rrc_etws_cmas_dcs_hash, GUINT_TO_POINTER((guint)private_data_get_message_identifier(actx)),",
          "",
          "[Added Lines]",
          "826:     wmem_map_insert(lte_rrc_etws_cmas_dcs_hash, GUINT_TO_POINTER((guint)private_data_get_message_identifier(actx)),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "844:     subtree = proto_item_add_subtree(actx->created_item, ett_lte_rrc_warningMessageSegment);",
          "845:     frag_tvb = process_reassembled_data(warning_msg_seg_tvb, 0, actx->pinfo, \"Reassembled SIB12 warning message\",",
          "846:                                         frag_data, &lte_rrc_sib12_frag_items, NULL, subtree);",
          "848:     if (frag_tvb && p_dcs) {",
          "849:       dissect_lte_rrc_warningMessageSegment(frag_tvb, subtree, actx->pinfo, GPOINTER_TO_UINT(p_dcs));",
          "850:     }",
          "",
          "[Removed Lines]",
          "847:     p_dcs = g_hash_table_lookup(lte_rrc_etws_cmas_dcs_hash, GUINT_TO_POINTER((guint)private_data_get_message_identifier(actx)));",
          "",
          "[Added Lines]",
          "847:     p_dcs = wmem_map_lookup(lte_rrc_etws_cmas_dcs_hash, GUINT_TO_POINTER((guint)private_data_get_message_identifier(actx)));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1598:   if (!actx->pinfo->fd->flags.visited) {",
          "1599:     if (system_info_value_current_set && (value != system_info_value_current)) {",
          "1602:                           GUINT_TO_POINTER(system_info_value_current+1));",
          "1603:     }",
          "1604:     system_info_value_current_set = TRUE;",
          "",
          "[Removed Lines]",
          "1601:       g_hash_table_insert(lte_rrc_system_info_value_changed_hash, GUINT_TO_POINTER(actx->pinfo->num),",
          "",
          "[Added Lines]",
          "1601:       wmem_map_insert(lte_rrc_system_info_value_changed_hash, GUINT_TO_POINTER(actx->pinfo->num),",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1606:   }",
          "1607:   else {",
          "1610:     if (p_previous != NULL) {",
          "1612:       guint32 previous = GPOINTER_TO_UINT(p_previous) - 1;",
          "",
          "[Removed Lines]",
          "1609:     gpointer p_previous = g_hash_table_lookup(lte_rrc_system_info_value_changed_hash, GUINT_TO_POINTER(actx->pinfo->num));",
          "",
          "[Added Lines]",
          "1609:     gpointer p_previous = wmem_map_lookup(lte_rrc_system_info_value_changed_hash, GUINT_TO_POINTER(actx->pinfo->num));",
          "",
          "---------------"
        ],
        "epan/dissectors/asn1/lte-rrc/packet-lte-rrc-template.c||epan/dissectors/asn1/lte-rrc/packet-lte-rrc-template.c": [
          "File: epan/dissectors/asn1/lte-rrc/packet-lte-rrc-template.c -> epan/dissectors/asn1/lte-rrc/packet-lte-rrc-template.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "65: static dissector_handle_t gsm_rlcmac_dl_handle = NULL;",
          "66: static dissector_handle_t lte_rrc_dl_ccch_handle;",
          "72: static guint8     system_info_value_current;",
          "73: static gboolean   system_info_value_current_set;",
          "",
          "[Removed Lines]",
          "68: static GHashTable *lte_rrc_etws_cmas_dcs_hash = NULL;",
          "71: static GHashTable *lte_rrc_system_info_value_changed_hash = NULL;",
          "",
          "[Added Lines]",
          "68: static wmem_map_t *lte_rrc_etws_cmas_dcs_hash = NULL;",
          "71: static wmem_map_t *lte_rrc_system_info_value_changed_hash = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3186:   return tvb_captured_length(tvb);",
          "3187: }",
          "3204: void proto_register_lte_rrc(void) {",
          "",
          "[Removed Lines]",
          "3189: static void",
          "3190: lte_rrc_init_protocol(void)",
          "3191: {",
          "3192:   lte_rrc_etws_cmas_dcs_hash = g_hash_table_new(g_direct_hash, g_direct_equal);",
          "3193:   lte_rrc_system_info_value_changed_hash = g_hash_table_new(g_direct_hash, g_direct_equal);",
          "3194: }",
          "3196: static void",
          "3197: lte_rrc_cleanup_protocol(void)",
          "3198: {",
          "3199:   g_hash_table_destroy(lte_rrc_etws_cmas_dcs_hash);",
          "3200:   g_hash_table_destroy(lte_rrc_system_info_value_changed_hash);",
          "3201: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4010: #include \"packet-lte-rrc-dis-reg.c\"",
          "4015:   reassembly_table_register(&lte_rrc_sib11_reassembly_table,",
          "4016:                         &addresses_reassembly_table_functions);",
          "",
          "[Removed Lines]",
          "4012:   register_init_routine(&lte_rrc_init_protocol);",
          "4013:   register_cleanup_routine(&lte_rrc_cleanup_protocol);",
          "",
          "[Added Lines]",
          "3998:   lte_rrc_etws_cmas_dcs_hash = wmem_map_new_autoreset(wmem_epan_scope(), wmem_file_scope(), g_direct_hash, g_direct_equal);",
          "3999:   lte_rrc_system_info_value_changed_hash = wmem_map_new_autoreset(wmem_epan_scope(), wmem_file_scope(), g_direct_hash, g_direct_equal);",
          "",
          "---------------"
        ],
        "epan/dissectors/asn1/pres/packet-pres-template.c||epan/dissectors/asn1/pres/packet-pres-template.c": [
          "File: epan/dissectors/asn1/pres/packet-pres-template.c -> epan/dissectors/asn1/pres/packet-pres-template.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:  char *oid;",
          "70:  guint32 idx;",
          "71: } pres_ctx_oid_t;",
          "74: typedef struct _pres_user_t {",
          "75:    guint ctx_id;",
          "",
          "[Removed Lines]",
          "72: static GHashTable *pres_ctx_oid_table = NULL;",
          "",
          "[Added Lines]",
          "72: static wmem_map_t *pres_ctx_oid_table = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "114:  return (pco1->ctx_id==pco2->ctx_id && pco1->idx==pco2->idx);",
          "115: }",
          "131: static void",
          "132: register_ctx_id_and_oid(packet_info *pinfo _U_, guint32 idx, const char *oid)",
          "133: {",
          "",
          "[Removed Lines]",
          "117: static void",
          "118: pres_init(void)",
          "119: {",
          "120:  pres_ctx_oid_table = g_hash_table_new(pres_ctx_oid_hash,",
          "121:    pres_ctx_oid_equal);",
          "123: }",
          "125: static void",
          "126: pres_cleanup(void)",
          "127: {",
          "128:  g_hash_table_destroy(pres_ctx_oid_table);",
          "129: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "151:  }",
          "155:  if (tmppco) {",
          "157:  }",
          "159: }",
          "161: static char *",
          "",
          "[Removed Lines]",
          "154:  tmppco=(pres_ctx_oid_t *)g_hash_table_lookup(pres_ctx_oid_table, pco);",
          "156:   g_hash_table_remove(pres_ctx_oid_table, tmppco);",
          "158:  g_hash_table_insert(pres_ctx_oid_table, pco, pco);",
          "",
          "[Added Lines]",
          "140:  tmppco=(pres_ctx_oid_t *)wmem_map_lookup(pres_ctx_oid_table, pco);",
          "142:   wmem_map_remove(pres_ctx_oid_table, tmppco);",
          "144:  wmem_map_insert(pres_ctx_oid_table, pco, pco);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "191:   pco.idx = 0;",
          "192:  }",
          "195:  if (tmppco) {",
          "196:   return tmppco->oid;",
          "197:  }",
          "",
          "[Removed Lines]",
          "194:  tmppco=(pres_ctx_oid_t *)g_hash_table_lookup(pres_ctx_oid_table, &pco);",
          "",
          "[Added Lines]",
          "180:  tmppco=(pres_ctx_oid_t *)wmem_map_lookup(pres_ctx_oid_table, &pco);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "440:   proto_register_subtree_array(ett, array_length(ett));",
          "441:   expert_pres = expert_register_protocol(proto_pres);",
          "442:   expert_register_field_array(expert_pres, ei, array_length(ei));",
          "446:   pres_module = prefs_register_protocol(proto_pres, NULL);",
          "",
          "[Removed Lines]",
          "443:   register_init_routine(pres_init);",
          "444:   register_cleanup_routine(pres_cleanup);",
          "",
          "[Added Lines]",
          "429:   pres_ctx_oid_table = wmem_map_new_autoreset(wmem_epan_scope(), wmem_file_scope(), pres_ctx_oid_hash, pres_ctx_oid_equal);",
          "",
          "---------------"
        ],
        "epan/dissectors/asn1/ros/packet-ros-template.c||epan/dissectors/asn1/ros/packet-ros-template.c": [
          "File: epan/dissectors/asn1/ros/packet-ros-template.c -> epan/dissectors/asn1/ros/packet-ros-template.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "49: static  dissector_handle_t ros_handle = NULL;",
          "51: typedef struct ros_conv_info_t {",
          "55: } ros_conv_info_t;",
          "59: typedef struct ros_call_response {",
          "60:   gboolean is_request;",
          "61:   guint32 req_frame;",
          "",
          "[Removed Lines]",
          "52:   struct ros_conv_info_t *next;",
          "57: static ros_conv_info_t *ros_info_items = NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "90: static dissector_table_t ros_oid_dissector_table=NULL;",
          "95: void",
          "96: register_ros_oid_dissector_handle(const char *oid, dissector_handle_t dissector, int proto _U_, const char *name, gboolean uses_rtse)",
          "97: {",
          "98:  dissector_add_string(\"ros.oid\", oid, dissector);",
          "101:  if(!uses_rtse)",
          "",
          "[Removed Lines]",
          "92: static GHashTable *oid_table=NULL;",
          "93: static GHashTable *protocol_table=NULL;",
          "99:  g_hash_table_insert(oid_table, (gpointer)oid, (gpointer)name);",
          "",
          "[Added Lines]",
          "89: static wmem_map_t *protocol_table=NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "106: void",
          "107: register_ros_protocol_info(const char *oid, const ros_info_t *rinfo, int proto _U_, const char *name, gboolean uses_rtse)",
          "108: {",
          "112:  if(!uses_rtse)",
          "",
          "[Removed Lines]",
          "109:  g_hash_table_insert(protocol_table, (gpointer)oid, (gpointer)rinfo);",
          "110:  g_hash_table_insert(oid_table, (gpointer)oid, (gpointer)name);",
          "",
          "[Added Lines]",
          "104:  wmem_map_insert(protocol_table, (gpointer)oid, (gpointer)rinfo);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "151:  proto_item *item=NULL;",
          "152:  proto_tree *ros_tree=NULL;",
          "156:   if(tree){",
          "157:    item = proto_tree_add_item(tree, *(rinfo->proto), tvb, 0, -1, ENC_NA);",
          "",
          "[Removed Lines]",
          "154:  if((session != NULL) && ((rinfo = (ros_info_t*)g_hash_table_lookup(protocol_table, oid)) != NULL)) {",
          "",
          "[Added Lines]",
          "148:  if((session != NULL) && ((rinfo = (ros_info_t*)wmem_map_lookup(protocol_table, oid)) != NULL)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "280: ros_match_call_response(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, guint invokeId, gboolean isInvoke)",
          "281: {",
          "282:   ros_call_response_t rcr, *rcrp=NULL;",
          "287:   rcr.invokeId=invokeId;",
          "288:   rcr.is_request = isInvoke;",
          "",
          "[Removed Lines]",
          "283:   ros_conv_info_t *ros_info = ros_info_items;",
          "",
          "[Added Lines]",
          "277:   ros_conv_info_t *ros_info;",
          "278:   conversation_t *conversation;",
          "281:   conversation = find_conversation(pinfo->num, &pinfo->src, &pinfo->dst,",
          "282:          pinfo->ptype, pinfo->srcport,",
          "283:          pinfo->destport, 0);",
          "284:   if (conversation == NULL)",
          "285:     return NULL;",
          "287:   ros_info = (ros_conv_info_t *)conversation_get_proto_data(conversation, proto_ros);",
          "288:   if (ros_info == NULL)",
          "289:     return NULL;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "295:     rcr.rep_frame=pinfo->num;",
          "296:   }",
          "300:   if(rcrp) {",
          "",
          "[Removed Lines]",
          "298:   rcrp=(ros_call_response_t *)g_hash_table_lookup(ros_info->matched, &rcr);",
          "",
          "[Added Lines]",
          "302:   rcrp=(ros_call_response_t *)wmem_map_lookup(ros_info->matched, &rcr);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "314:       rcr.invokeId=invokeId;",
          "318:       if(rcrp){",
          "320:       }",
          "",
          "[Removed Lines]",
          "316:       rcrp=(ros_call_response_t *)g_hash_table_lookup(ros_info->unmatched, &rcr);",
          "319:  g_hash_table_remove(ros_info->unmatched, rcrp);",
          "",
          "[Added Lines]",
          "320:       rcrp=(ros_call_response_t *)wmem_map_lookup(ros_info->unmatched, &rcr);",
          "323:  wmem_map_remove(ros_info->unmatched, rcrp);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "328:       rcrp->req_time=pinfo->abs_ts;",
          "329:       rcrp->rep_frame=0;",
          "330:       rcrp->is_request=TRUE;",
          "332:       return NULL;",
          "334:     } else {",
          "",
          "[Removed Lines]",
          "331:       g_hash_table_insert(ros_info->unmatched, rcrp, rcrp);",
          "",
          "[Added Lines]",
          "335:       wmem_map_insert(ros_info->unmatched, rcrp, rcrp);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "338:       rcr.invokeId=invokeId;",
          "341:       if(rcrp){",
          "343:  if(!rcrp->rep_frame){",
          "345:    rcrp->rep_frame=pinfo->num;",
          "346:    rcrp->is_request=FALSE;",
          "348:  }",
          "349:       }",
          "350:     }",
          "",
          "[Removed Lines]",
          "339:       rcrp=(ros_call_response_t *)g_hash_table_lookup(ros_info->unmatched, &rcr);",
          "344:    g_hash_table_remove(ros_info->unmatched, rcrp);",
          "347:    g_hash_table_insert(ros_info->matched, rcrp, rcrp);",
          "",
          "[Added Lines]",
          "343:       rcrp=(ros_call_response_t *)wmem_map_lookup(ros_info->unmatched, &rcr);",
          "348:    wmem_map_remove(ros_info->unmatched, rcrp);",
          "351:    wmem_map_insert(ros_info->matched, rcrp, rcrp);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "412:    conversation_add_proto_data(conversation, proto_ros, ros_info);",
          "416:  }",
          "418:  item = proto_tree_add_item(parent_tree, proto_ros, tvb, 0, -1, ENC_NA);",
          "",
          "[Removed Lines]",
          "408:    ros_info = (ros_conv_info_t *)g_malloc(sizeof(ros_conv_info_t));",
          "409:    ros_info->matched=g_hash_table_new(ros_info_hash_matched, ros_info_equal_matched);",
          "410:    ros_info->unmatched=g_hash_table_new(ros_info_hash_unmatched, ros_info_equal_unmatched);",
          "414:    ros_info->next = ros_info_items;",
          "415:    ros_info_items = ros_info;",
          "",
          "[Added Lines]",
          "412:    ros_info = (ros_conv_info_t *)wmem_new0(wmem_file_scope(), ros_conv_info_t);",
          "413:    ros_info->matched=wmem_map_new(wmem_file_scope(), ros_info_hash_matched, ros_info_equal_matched);",
          "414:    ros_info->unmatched=wmem_map_new(wmem_file_scope(), ros_info_hash_unmatched, ros_info_equal_unmatched);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "436:  return tvb_captured_length(tvb);",
          "437: }",
          "463: void proto_register_ros(void) {",
          "",
          "[Removed Lines]",
          "439: static void",
          "440: ros_cleanup(void)",
          "441: {",
          "442:   ros_conv_info_t *ros_info;",
          "445:   for (ros_info = ros_info_items; ros_info != NULL; ) {",
          "446:     ros_conv_info_t *last;",
          "448:     g_hash_table_destroy(ros_info->matched);",
          "449:     ros_info->matched=NULL;",
          "450:     g_hash_table_destroy(ros_info->unmatched);",
          "451:     ros_info->unmatched=NULL;",
          "453:     last = ros_info;",
          "454:     ros_info = ros_info->next;",
          "455:     g_free(last);",
          "456:   }",
          "458:   ros_info_items = NULL;",
          "460: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "514:   expert_register_field_array(expert_ros, ei, array_length(ei));",
          "516:   ros_oid_dissector_table = register_dissector_table(\"ros.oid\", \"ROS OID Dissectors\", proto_ros, FT_STRING, BASE_NONE);",
          "521: }",
          "",
          "[Removed Lines]",
          "517:   oid_table=g_hash_table_new(g_str_hash, g_str_equal);",
          "518:   protocol_table=g_hash_table_new(g_str_hash, g_str_equal);",
          "520:   register_cleanup_routine(ros_cleanup);",
          "",
          "[Added Lines]",
          "495:   protocol_table = wmem_map_new(wmem_epan_scope(), wmem_str_hash, g_str_equal);",
          "",
          "---------------"
        ],
        "epan/dissectors/asn1/rtse/packet-rtse-template.c||epan/dissectors/asn1/rtse/packet-rtse-template.c": [
          "File: epan/dissectors/asn1/rtse/packet-rtse-template.c -> epan/dissectors/asn1/rtse/packet-rtse-template.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "69: static dissector_table_t rtse_oid_dissector_table=NULL;",
          "70: static dissector_handle_t rtse_handle = NULL;",
          "72: static gint ett_rtse_unknown = -1;",
          "74: static reassembly_table rtse_reassembly_table;",
          "",
          "[Removed Lines]",
          "71: static GHashTable *oid_table=NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "121:   if (ros_handle == NULL)",
          "122:     ros_handle = find_dissector(\"ros\");",
          "128:   register_ber_oid_dissector_handle(oid, rtse_handle, proto, name);",
          "",
          "[Removed Lines]",
          "125:   g_hash_table_insert(oid_table, (gpointer)oid, (gpointer)name);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "392:                  \" in the TCP protocol settings.\", &rtse_reassemble);",
          "394:   rtse_oid_dissector_table = register_dissector_table(\"rtse.oid\", \"RTSE OID Dissectors\", proto_rtse, FT_STRING, BASE_NONE);",
          "398: }",
          "",
          "[Removed Lines]",
          "395:   oid_table=g_hash_table_new(g_str_hash, g_str_equal);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-acse.c||epan/dissectors/packet-acse.c": [
          "File: epan/dissectors/packet-acse.c -> epan/dissectors/packet-acse.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "251:  guint32 ctx_id;",
          "252:  char *oid;",
          "253: } acse_ctx_oid_t;",
          "256: static guint",
          "257: acse_ctx_oid_hash(gconstpointer k)",
          "",
          "[Removed Lines]",
          "254: static GHashTable *acse_ctx_oid_table = NULL;",
          "",
          "[Added Lines]",
          "254: static wmem_map_t *acse_ctx_oid_table = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "268:  return aco1->ctx_id==aco2->ctx_id;",
          "269: }",
          "283: static void",
          "284: register_ctx_id_and_oid(packet_info *pinfo _U_, guint32 idx, char *oid)",
          "285: {",
          "",
          "[Removed Lines]",
          "271: static void",
          "272: acse_init(void)",
          "273: {",
          "274:  if (acse_ctx_oid_table) {",
          "275:   g_hash_table_destroy(acse_ctx_oid_table);",
          "276:   acse_ctx_oid_table = NULL;",
          "277:  }",
          "278:  acse_ctx_oid_table = g_hash_table_new(acse_ctx_oid_hash,",
          "279:    acse_ctx_oid_equal);",
          "281: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "289:  aco->oid=wmem_strdup(wmem_file_scope(), oid);",
          "293:  if (tmpaco) {",
          "295:  }",
          "297: }",
          "298: static char *",
          "299: find_oid_by_ctx_id(packet_info *pinfo _U_, guint32 idx)",
          "300: {",
          "301:  acse_ctx_oid_t aco, *tmpaco;",
          "302:  aco.ctx_id=idx;",
          "304:  if (tmpaco) {",
          "305:   return tmpaco->oid;",
          "306:  }",
          "",
          "[Removed Lines]",
          "292:  tmpaco=(acse_ctx_oid_t *)g_hash_table_lookup(acse_ctx_oid_table, aco);",
          "294:   g_hash_table_remove(acse_ctx_oid_table, tmpaco);",
          "296:  g_hash_table_insert(acse_ctx_oid_table, aco, aco);",
          "303:  tmpaco=(acse_ctx_oid_t *)g_hash_table_lookup(acse_ctx_oid_table, &aco);",
          "",
          "[Added Lines]",
          "280:  tmpaco=(acse_ctx_oid_t *)wmem_map_lookup(acse_ctx_oid_table, aco);",
          "282:   wmem_map_remove(acse_ctx_oid_table, tmpaco);",
          "284:  wmem_map_insert(acse_ctx_oid_table, aco, aco);",
          "291:  tmpaco=(acse_ctx_oid_t *)wmem_map_lookup(acse_ctx_oid_table, &aco);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1702: #line 152 \"./asn1/acse/packet-acse-template.c\"",
          "",
          "[Added Lines]",
          "1690: #line 140 \"./asn1/acse/packet-acse-template.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2248:         NULL, HFILL }},",
          "2252:   };",
          "",
          "[Removed Lines]",
          "2251: #line 268 \"./asn1/acse/packet-acse-template.c\"",
          "",
          "[Added Lines]",
          "2239: #line 256 \"./asn1/acse/packet-acse-template.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2294:     &ett_acse_Authentication_value,",
          "2298:   };",
          "2300:   static ei_register_info ei[] = {",
          "",
          "[Removed Lines]",
          "2297: #line 274 \"./asn1/acse/packet-acse-template.c\"",
          "",
          "[Added Lines]",
          "2285: #line 262 \"./asn1/acse/packet-acse-template.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2318:   proto_register_subtree_array(ett, array_length(ett));",
          "2319:   expert_acse = expert_register_protocol(proto_acse);",
          "2320:   expert_register_field_array(expert_acse, ei, array_length(ei));",
          "2321: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2310: #if NOT_NEEDED",
          "2311:   acse_ctx_oid_table = wmem_map_new_autoreset(wmem_epan_scope(), wmem_file_scope(), acse_ctx_oid_hash,",
          "2312:    acse_ctx_oid_equal);",
          "2313: #endif",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-ansi_map.c||epan/dissectors/packet-ansi_map.c": [
          "File: epan/dissectors/packet-ansi_map.c -> epan/dissectors/packet-ansi_map.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1194: static void",
          "",
          "[Removed Lines]",
          "1178: static GHashTable *TransactionId_table=NULL;",
          "1180: static void",
          "1181: ansi_map_init(void)",
          "1182: {",
          "1183:     TransactionId_table = g_hash_table_new(g_str_hash, g_str_equal);",
          "1184: }",
          "1186: static void",
          "1187: ansi_map_cleanup(void)",
          "1188: {",
          "1190:     g_hash_table_destroy(TransactionId_table);",
          "1191: }",
          "",
          "[Added Lines]",
          "1178: static wmem_map_t *TransactionId_table=NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1220:                 break;",
          "1221:         }",
          "1224:         if(ansi_map_saved_invokedata)",
          "1225:             return;",
          "",
          "[Removed Lines]",
          "1223:         ansi_map_saved_invokedata = (struct ansi_map_invokedata_t *)g_hash_table_lookup(TransactionId_table,buf);",
          "",
          "[Added Lines]",
          "1210:         ansi_map_saved_invokedata = (struct ansi_map_invokedata_t *)wmem_map_lookup(TransactionId_table,buf);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1228:         ansi_map_saved_invokedata->opcode = p_private_tcap->d.OperationCode_private;",
          "1229:         ansi_map_saved_invokedata->ServiceIndicator = ServiceIndicator;",
          "1232:                             wmem_strdup(wmem_file_scope(), buf),",
          "1233:                             ansi_map_saved_invokedata);",
          "",
          "[Removed Lines]",
          "1231:         g_hash_table_insert(TransactionId_table,",
          "",
          "[Added Lines]",
          "1218:         wmem_map_insert(TransactionId_table,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "15289: #line 3641 \"./asn1/ansi_map/packet-ansi_map-template.c\"",
          "",
          "[Added Lines]",
          "15276: #line 3628 \"./asn1/ansi_map/packet-ansi_map-template.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "16012:     }",
          "16016:     if(ansi_map_saved_invokedata){",
          "16017:         OperationCode = ansi_map_saved_invokedata->opcode & 0xff;",
          "16018:         ServiceIndicator = ansi_map_saved_invokedata->ServiceIndicator;",
          "",
          "[Removed Lines]",
          "16015:     ansi_map_saved_invokedata = (struct ansi_map_invokedata_t *)g_hash_table_lookup(TransactionId_table, buf);",
          "",
          "[Added Lines]",
          "16002:     ansi_map_saved_invokedata = (struct ansi_map_invokedata_t *)wmem_map_lookup(TransactionId_table, buf);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "19234:         NULL, HFILL }},",
          "19238:     };",
          "",
          "[Removed Lines]",
          "19237: #line 5396 \"./asn1/ansi_map/packet-ansi_map-template.c\"",
          "",
          "[Added Lines]",
          "19224: #line 5383 \"./asn1/ansi_map/packet-ansi_map-template.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "19495:     &ett_ansi_map_ReturnData,",
          "19499:     };",
          "19501:     static ei_register_info ei[] = {",
          "",
          "[Removed Lines]",
          "19498: #line 5429 \"./asn1/ansi_map/packet-ansi_map-template.c\"",
          "",
          "[Added Lines]",
          "19485: #line 5416 \"./asn1/ansi_map/packet-ansi_map-template.c\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "19569:                                   \"Type of matching invoke/response, risk of mismatch if loose matching chosen\",",
          "19570:                                   &ansi_map_response_matching_type, ansi_map_response_matching_type_values, FALSE);",
          "19574:     register_stat_tap_table_ui(&stat_table);",
          "19575: }",
          "",
          "[Removed Lines]",
          "19572:     register_init_routine(&ansi_map_init);",
          "19573:     register_cleanup_routine(&ansi_map_cleanup);",
          "",
          "[Added Lines]",
          "19559:     TransactionId_table = wmem_map_new_autoreset(wmem_epan_scope(), wmem_file_scope(), wmem_str_hash, g_str_equal);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-ansi_tcap.c||epan/dissectors/packet-ansi_tcap.c": [
          "File: epan/dissectors/packet-ansi_tcap.c -> epan/dissectors/packet-ansi_tcap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "237:     gint32 OperationCode_national;",
          "238: };",
          "256: static void",
          "",
          "[Removed Lines]",
          "240: static GHashTable *TransactionId_table=NULL;",
          "242: static void",
          "243: ansi_tcap_init(void)",
          "244: {",
          "245:         TransactionId_table = g_hash_table_new(g_str_hash, g_str_equal);",
          "246: }",
          "248: static void",
          "249: ansi_tcap_cleanup(void)",
          "250: {",
          "252:         g_hash_table_destroy(TransactionId_table);",
          "253: }",
          "",
          "[Added Lines]",
          "240: static wmem_map_t *TransactionId_table=NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "280:                 }",
          "284:           if(ansi_tcap_saved_invokedata)",
          "285:                   return;",
          "",
          "[Removed Lines]",
          "283:           ansi_tcap_saved_invokedata = (struct ansi_tcap_invokedata_t *)g_hash_table_lookup(TransactionId_table,buf);",
          "",
          "[Added Lines]",
          "270:           ansi_tcap_saved_invokedata = (struct ansi_tcap_invokedata_t *)wmem_map_lookup(TransactionId_table,buf);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "289:           ansi_tcap_saved_invokedata->OperationCode_national = ansi_tcap_private.d.OperationCode_national;",
          "290:           ansi_tcap_saved_invokedata->OperationCode_private = ansi_tcap_private.d.OperationCode_private;",
          "293:                         wmem_strdup(wmem_file_scope(), buf),",
          "294:                         ansi_tcap_saved_invokedata);",
          "",
          "[Removed Lines]",
          "292:           g_hash_table_insert(TransactionId_table,",
          "",
          "[Added Lines]",
          "279:           wmem_map_insert(TransactionId_table,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "328:                 break;",
          "329:   }",
          "332:   if(ansi_tcap_saved_invokedata){",
          "333:           ansi_tcap_private.d.OperationCode                      = ansi_tcap_saved_invokedata->OperationCode;",
          "334:           ansi_tcap_private.d.OperationCode_national = ansi_tcap_saved_invokedata->OperationCode_national;",
          "",
          "[Removed Lines]",
          "331:   ansi_tcap_saved_invokedata = (struct ansi_tcap_invokedata_t *)g_hash_table_lookup(TransactionId_table, buf);",
          "",
          "[Added Lines]",
          "318:   ansi_tcap_saved_invokedata = (struct ansi_tcap_invokedata_t *)wmem_map_lookup(TransactionId_table, buf);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1391: #line 331 \"./asn1/ansi_tcap/packet-ansi_tcap-template.c\"",
          "",
          "[Added Lines]",
          "1378: #line 318 \"./asn1/ansi_tcap/packet-ansi_tcap-template.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1732:         NULL, HFILL }},",
          "1736:     };",
          "",
          "[Removed Lines]",
          "1735: #line 466 \"./asn1/ansi_tcap/packet-ansi_tcap-template.c\"",
          "",
          "[Added Lines]",
          "1722: #line 453 \"./asn1/ansi_tcap/packet-ansi_tcap-template.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1770:     &ett_ansi_tcap_T_paramSet,",
          "1774:     };",
          "1776:     static ei_register_info ei[] = {",
          "",
          "[Removed Lines]",
          "1773: #line 477 \"./asn1/ansi_tcap/packet-ansi_tcap-template.c\"",
          "",
          "[Added Lines]",
          "1760: #line 464 \"./asn1/ansi_tcap/packet-ansi_tcap-template.c\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1805:                                    \"Type of matching invoke/response, risk of mismatch if loose matching chosen\",",
          "1806:                                    &ansi_tcap_response_matching_type, ansi_tcap_response_matching_type_values, FALSE);",
          "1810: }",
          "",
          "[Removed Lines]",
          "1808:     register_init_routine(&ansi_tcap_init);",
          "1809:     register_cleanup_routine(&ansi_tcap_cleanup);",
          "",
          "[Added Lines]",
          "1795:     TransactionId_table = wmem_map_new_autoreset(wmem_epan_scope(), wmem_file_scope(), wmem_str_hash, g_str_equal);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-camel.c||epan/dissectors/packet-camel.c": [
          "File: epan/dissectors/packet-camel.c -> epan/dissectors/packet-camel.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "865: gboolean is_ExtensionField =FALSE;",
          "869: static guint32 camelsrt_global_SessionId=1;",
          "871: static int camel_opcode_type;",
          "",
          "[Removed Lines]",
          "868: static GHashTable *srt_calls = NULL;",
          "",
          "[Added Lines]",
          "868: static wmem_map_t *srt_calls = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7402: find_camelsrt_call(struct camelsrt_call_info_key_t *p_camelsrt_call_key)",
          "7403: {",
          "7404:   struct camelsrt_call_t *p_camelsrt_call = NULL;",
          "7407: #ifdef DEBUG_CAMELSRT",
          "7408:   if(p_camelsrt_call) {",
          "",
          "[Removed Lines]",
          "7405:   p_camelsrt_call = (struct camelsrt_call_t *)g_hash_table_lookup(srt_calls, p_camelsrt_call_key);",
          "",
          "[Added Lines]",
          "7405:   p_camelsrt_call = (struct camelsrt_call_t *)wmem_map_lookup(srt_calls, p_camelsrt_call_key);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7447:   dbg(10,\"D%d \", p_new_camelsrt_call->session_id);",
          "7448: #endif",
          "7451:   return p_new_camelsrt_call;",
          "7452: }",
          "",
          "[Removed Lines]",
          "7450:   g_hash_table_insert(srt_calls, p_new_camelsrt_call_key, p_new_camelsrt_call);",
          "",
          "[Added Lines]",
          "7450:   wmem_map_insert(srt_calls, p_new_camelsrt_call_key, p_new_camelsrt_call);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7458: static void",
          "7459: camelsrt_init_routine(void)",
          "7460: {",
          "7464:   camelsrt_global_SessionId=1;",
          "",
          "[Removed Lines]",
          "7462:   srt_calls = g_hash_table_new(camelsrt_call_hash, camelsrt_call_equal);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7470:   gcamel_DisplaySRT=gcamel_PersistentSRT || gcamel_HandleSRT&gcamel_StatSRT;",
          "7471: }",
          "",
          "[Removed Lines]",
          "7473: static void",
          "7474: camelsrt_cleanup_routine(void)",
          "7475: {",
          "7477:   g_hash_table_destroy(srt_calls);",
          "7478: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "7527:     p_camelsrt_info->msginfo[CAMELSRT_SESSION].req_time = p_camelsrt_call->category[CAMELSRT_SESSION].req_time;",
          "7529:     if ( !gcamel_PersistentSRT ) {",
          "7531: #ifdef DEBUG_CAMELSRT",
          "7532:       dbg(20,\"remove hash \");",
          "7533: #endif",
          "",
          "[Removed Lines]",
          "7530:       g_hash_table_remove(srt_calls, &camelsrt_call_key);",
          "",
          "[Added Lines]",
          "7521:       wmem_map_remove(srt_calls, &camelsrt_call_key);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7590:   dbg(10,\"\\n Session begin #%u\\n\", pinfo->num);",
          "7591:   dbg(11,\"Search key %lu \",camelsrt_call_key.SessionIdKey);",
          "7592: #endif",
          "7594:   if (p_camelsrt_call) {",
          "7596: #ifdef DEBUG_CAMELSRT",
          "",
          "[Removed Lines]",
          "7593:   p_camelsrt_call = (struct camelsrt_call_t *)g_hash_table_lookup(srt_calls, &camelsrt_call_key);",
          "",
          "[Added Lines]",
          "7584:   p_camelsrt_call = (struct camelsrt_call_t *)wmem_map_lookup(srt_calls, &camelsrt_call_key);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "8297:   } else {",
          "8298:     range_foreach(ssn_range, range_delete_callback);",
          "8299:     wmem_free(wmem_epan_scope(), ssn_range);",
          "",
          "[Removed Lines]",
          "8296: #line 1328 \"./asn1/camel/packet-camel-template.c\"",
          "",
          "[Added Lines]",
          "8287: #line 1319 \"./asn1/camel/packet-camel-template.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "10415:         \"InvokeId_present\", HFILL }},",
          "10419:   };",
          "",
          "[Removed Lines]",
          "10418: #line 1501 \"./asn1/camel/packet-camel-template.c\"",
          "",
          "[Added Lines]",
          "10409: #line 1492 \"./asn1/camel/packet-camel-template.c\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "10633:     &ett_camel_InvokeId,",
          "10637:   };",
          "10639:   static ei_register_info ei[] = {",
          "",
          "[Removed Lines]",
          "10636: #line 1518 \"./asn1/camel/packet-camel-template.c\"",
          "",
          "[Added Lines]",
          "10627: #line 1509 \"./asn1/camel/packet-camel-template.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "10719:   register_init_routine(&camelsrt_init_routine);",
          "10721:   camel_tap=register_tap(PSNAME);",
          "10723:   register_srt_table(proto_camel, PSNAME, 1, camelstat_packet, camelstat_init, NULL);",
          "",
          "[Removed Lines]",
          "10720:   register_cleanup_routine(&camelsrt_cleanup_routine);",
          "",
          "[Added Lines]",
          "10713:   srt_calls = wmem_map_new_autoreset(wmem_epan_scope(), wmem_file_scope(), camelsrt_call_hash, camelsrt_call_equal);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-h225.c||epan/dissectors/packet-h225.c": [
          "File: epan/dissectors/packet-h225.c -> epan/dissectors/packet-h225.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "72: void proto_register_h225(void);",
          "73: static h225_packet_info* create_h225_packet_info(packet_info *pinfo);",
          "75: static void ras_call_matching(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, h225_packet_info *pi);",
          "",
          "[Removed Lines]",
          "74: static void h225_init_routine(void);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "100: static h225ras_call_t * find_h225ras_call(h225ras_call_info_key *h225ras_call_key ,int category);",
          "",
          "[Removed Lines]",
          "97: static GHashTable *ras_calls[7] = {NULL, NULL, NULL, NULL, NULL, NULL, NULL};",
          "",
          "[Added Lines]",
          "96: static wmem_map_t *ras_calls[7] = {NULL, NULL, NULL, NULL, NULL, NULL, NULL};",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "915: static gint ett_h225 = -1;",
          "",
          "[Removed Lines]",
          "912: #line 129 \"./asn1/h225/packet-h225-template.c\"",
          "",
          "[Added Lines]",
          "911: #line 128 \"./asn1/h225/packet-h225-template.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1157: static gint ett_h225_T_result = -1;",
          "1163: static guint h225_tls_port = TLS_PORT_CS;",
          "",
          "[Removed Lines]",
          "1160: #line 133 \"./asn1/h225/packet-h225-template.c\"",
          "",
          "[Added Lines]",
          "1159: #line 132 \"./asn1/h225/packet-h225-template.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7830: void proto_reg_handoff_h225(void);",
          "",
          "[Removed Lines]",
          "7827: #line 249 \"./asn1/h225/packet-h225-template.c\"",
          "",
          "[Added Lines]",
          "7826: #line 248 \"./asn1/h225/packet-h225-template.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "7855: h225ras_call_t * find_h225ras_call(h225ras_call_info_key *h225ras_call_key ,int category)",
          "7856: {",
          "7860:   return h225ras_call;",
          "7861: }",
          "",
          "[Removed Lines]",
          "7857:   h225ras_call_t *h225ras_call = NULL;",
          "7858:   h225ras_call = (h225ras_call_t *)g_hash_table_lookup(ras_calls[category], h225ras_call_key);",
          "",
          "[Added Lines]",
          "7856:   h225ras_call_t *h225ras_call = (h225ras_call_t *)wmem_map_lookup(ras_calls[category], h225ras_call_key);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7883:   h225ras_call->req_time=pinfo->abs_ts;",
          "7884:   h225ras_call->guid=*guid;",
          "7888:   return h225ras_call;",
          "7889: }",
          "",
          "[Removed Lines]",
          "7886:   g_hash_table_insert(ras_calls[category], new_h225ras_call_key, h225ras_call);",
          "",
          "[Added Lines]",
          "7884:   wmem_map_insert(ras_calls[category], new_h225ras_call_key, h225ras_call);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "7910:   return h225ras_call;",
          "7911: }",
          "7941: static int",
          "7942: dissect_h225_H323UserInformation(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, void *data _U_)",
          "7943: {",
          "",
          "[Removed Lines]",
          "7914:    This routine will be called by Wireshark, before it",
          "7915:    is (re-)dissecting a trace file from beginning.",
          "7918: static void",
          "7919: h225_init_routine(void)",
          "7920: {",
          "7921:   int i;",
          "7924:   for(i=0;i<7;i++) {",
          "7925:     ras_calls[i] = g_hash_table_new(h225ras_call_hash, h225ras_call_equal);",
          "7926:   }",
          "7928: }",
          "7930: static void",
          "7931: h225_cleanup_routine(void)",
          "7932: {",
          "7933:   int i;",
          "7936:   for(i=0;i<7;i++) {",
          "7937:     g_hash_table_destroy(ras_calls[i]);",
          "7938:   }",
          "7939: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "11506:         NULL, HFILL }},",
          "11510:   };",
          "",
          "[Removed Lines]",
          "11509: #line 842 \"./asn1/h225/packet-h225-template.c\"",
          "",
          "[Added Lines]",
          "11479: #line 812 \"./asn1/h225/packet-h225-template.c\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "11756:     &ett_h225_T_result,",
          "11760:   };",
          "11762:   static tap_param h225_stat_params[] = {",
          "",
          "[Removed Lines]",
          "11759: #line 848 \"./asn1/h225/packet-h225-template.c\"",
          "",
          "[Added Lines]",
          "11729: #line 818 \"./asn1/h225/packet-h225-template.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "11780:   };",
          "11782:   module_t *h225_module;",
          "11786:   proto_h225 = proto_register_protocol(PNAME, PSNAME, PFNAME);",
          "",
          "[Removed Lines]",
          "11783:   int proto_h225_ras;",
          "",
          "[Added Lines]",
          "11753:   int i, proto_h225_ras;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "11821:   gef_name_dissector_table = register_dissector_table(\"h225.gef.name\", \"H.225 Generic Extensible Framework (names)\", proto_h225, FT_STRING, BASE_NONE);",
          "11822:   gef_content_dissector_table = register_dissector_table(\"h225.gef.content\", \"H.225 Generic Extensible Framework\", proto_h225, FT_STRING, BASE_NONE);",
          "11826:   h225_tap = register_tap(PFNAME);",
          "11828:   register_rtd_table(proto_h225_ras, PFNAME, NUM_RAS_STATS, 1, ras_message_category, h225rassrt_packet, NULL);",
          "",
          "[Removed Lines]",
          "11824:   register_init_routine(&h225_init_routine);",
          "11825:   register_cleanup_routine(&h225_cleanup_routine);",
          "",
          "[Added Lines]",
          "11794:   for(i=0;i<7;i++) {",
          "11795:     ras_calls[i] = wmem_map_new_autoreset(wmem_epan_scope(), wmem_file_scope(), h225ras_call_hash, h225ras_call_equal);",
          "11796:   }",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-h245.c||epan/dissectors/packet-h245.c": [
          "File: epan/dissectors/packet-h245.c -> epan/dissectors/packet-h245.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "363:   channel_info_t rev_lc;",
          "364: } olc_info_t;",
          "367: static gboolean fast_start = FALSE;",
          "368: static olc_info_t *upcoming_olc = NULL;",
          "369: static channel_info_t *upcoming_channel = NULL;",
          "",
          "[Removed Lines]",
          "366: static GHashTable* h245_pending_olc_reqs = NULL;",
          "",
          "[Added Lines]",
          "366: static wmem_map_t* h245_pending_olc_reqs = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "412:  h223_lc_params *rev_channel_params;",
          "413: } h223_pending_olc;",
          "416: static dissector_handle_t   h245_lc_dissector;",
          "417: static guint16              h245_lc_temp;",
          "418: static guint16              h223_fw_lc_num;",
          "",
          "[Removed Lines]",
          "415: static GHashTable*          h223_pending_olc_reqs[] = { NULL, NULL };",
          "",
          "[Added Lines]",
          "415: static wmem_map_t*          h223_pending_olc_reqs[] = { NULL, NULL };",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "422: static h223_lc_params      *h223_rev_lc_params;",
          "423: static h223_add_lc_handle_t h223_add_lc_handle = NULL;",
          "432: static void h223_lc_init( void )",
          "433: {",
          "436:  h223_lc_params_temp = NULL;",
          "437:  h245_lc_dissector = NULL;",
          "438:  h223_fw_lc_num = 0;",
          "439: }",
          "453: void h245_set_h223_add_lc_handle( h223_add_lc_handle_t handle )",
          "454: {",
          "455:  h223_add_lc_handle = handle;",
          "",
          "[Removed Lines]",
          "425: static void h223_lc_init_dir( int dir )",
          "426: {",
          "427:  if ( h223_pending_olc_reqs[dir] )",
          "428:   g_hash_table_destroy( h223_pending_olc_reqs[dir] );",
          "429:  h223_pending_olc_reqs[dir] = g_hash_table_new( g_direct_hash, g_direct_equal );",
          "430: }",
          "434:  h223_lc_init_dir( P2P_DIR_SENT );",
          "435:  h223_lc_init_dir( P2P_DIR_RECV );",
          "441: static void h245_init(void)",
          "442: {",
          "443:  h245_pending_olc_reqs = g_hash_table_new(g_str_hash, g_str_equal);",
          "445:  h223_lc_init();",
          "446: }",
          "448: static void h245_cleanup(void)",
          "449: {",
          "450:  g_hash_table_destroy(h245_pending_olc_reqs);",
          "451: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1948: static int ett_h245 = -1;",
          "",
          "[Removed Lines]",
          "1945: #line 408 \"./asn1/h245/packet-h245-template.c\"",
          "",
          "[Added Lines]",
          "1924: #line 387 \"./asn1/h245/packet-h245-template.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2443: static gint ett_h245_MobileMultilinkReconfigurationIndication = -1;",
          "2449: static int dissect_h245_MultimediaSystemControlMessage(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_);",
          "",
          "[Removed Lines]",
          "2446: #line 413 \"./asn1/h245/packet-h245-template.c\"",
          "",
          "[Added Lines]",
          "2425: #line 392 \"./asn1/h245/packet-h245-template.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "8782:  pending->rev_channel_params = h223_rev_lc_params;",
          "8783:  temp = h223_fw_lc_num;",
          "8784:  if (actx->pinfo->p2p_dir > -1)",
          "8786:   }",
          "8788:   if (upcoming_olc) {",
          "8789:     if (fast_start) {",
          "8790:       h245_setup_channels(actx->pinfo, &upcoming_olc->rev_lc);",
          "8791:     } else {",
          "8793:         wmem_strdup(wmem_file_scope(), gen_olc_key(upcoming_olc->fwd_lc_num, &actx->pinfo->dst, &actx->pinfo->src)),",
          "8794:         upcoming_olc);",
          "8795:     }",
          "",
          "[Removed Lines]",
          "8785:   g_hash_table_insert(h223_pending_olc_reqs[actx->pinfo->p2p_dir], GINT_TO_POINTER(temp), pending);",
          "8792:       g_hash_table_insert(h245_pending_olc_reqs,",
          "",
          "[Added Lines]",
          "8764:   wmem_map_insert(h223_pending_olc_reqs[actx->pinfo->p2p_dir], GINT_TO_POINTER(temp), pending);",
          "8771:       wmem_map_insert(h245_pending_olc_reqs,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "11130:  actx->pinfo->p2p_dir = P2P_DIR_RECV;",
          "11131:   else",
          "11132:  actx->pinfo->p2p_dir = P2P_DIR_SENT;",
          "11134:   if (pend) {",
          "11135:  DISSECTOR_ASSERT( ( h223_rev_lc_num &&  pend->rev_channel_params)",
          "11136:        || (!h223_rev_lc_num && !pend->rev_channel_params) );",
          "",
          "[Removed Lines]",
          "11133:   pend = (h223_pending_olc *)g_hash_table_lookup( h223_pending_olc_reqs[actx->pinfo->p2p_dir], GINT_TO_POINTER(temp) );",
          "",
          "[Added Lines]",
          "11112:   pend = (h223_pending_olc *)wmem_map_lookup( h223_pending_olc_reqs[actx->pinfo->p2p_dir], GINT_TO_POINTER(temp) );",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "11147:   if (upcoming_olc) {",
          "11148:     olc_key = gen_olc_key(upcoming_olc->fwd_lc_num, &actx->pinfo->src, &actx->pinfo->dst);",
          "11150:     if (olc_req) {",
          "11151:       update_unicast_addr(&olc_req->fwd_lc.media_addr, &upcoming_olc->fwd_lc.media_addr);",
          "11152:       update_unicast_addr(&olc_req->fwd_lc.media_control_addr, &upcoming_olc->fwd_lc.media_control_addr);",
          "",
          "[Removed Lines]",
          "11149:     olc_req = (olc_info_t *)g_hash_table_lookup(h245_pending_olc_reqs, olc_key);",
          "",
          "[Added Lines]",
          "11128:     olc_req = (olc_info_t *)wmem_map_lookup(h245_pending_olc_reqs, olc_key);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "11154:       update_unicast_addr(&olc_req->rev_lc.media_control_addr, &upcoming_olc->rev_lc.media_control_addr);",
          "11155:       h245_setup_channels(actx->pinfo, &olc_req->fwd_lc);",
          "11156:       h245_setup_channels(actx->pinfo, &olc_req->rev_lc);",
          "11158:     } else {",
          "11159:       h245_setup_channels(actx->pinfo, &upcoming_olc->fwd_lc);",
          "11160:     }",
          "",
          "[Removed Lines]",
          "11157:       g_hash_table_remove(h245_pending_olc_reqs, olc_key);",
          "",
          "[Added Lines]",
          "11136:       wmem_map_remove(h245_pending_olc_reqs, olc_key);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "14535: static int",
          "14536: dissect_h245(tvbuff_t *tvb, packet_info *pinfo, proto_tree *parent_tree, void* data _U_)",
          "",
          "[Removed Lines]",
          "14533: #line 422 \"./asn1/h245/packet-h245-template.c\"",
          "",
          "[Added Lines]",
          "14512: #line 401 \"./asn1/h245/packet-h245-template.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "20229:         NULL, HFILL }},",
          "20233:   };",
          "",
          "[Removed Lines]",
          "20232: #line 508 \"./asn1/h245/packet-h245-template.c\"",
          "",
          "[Added Lines]",
          "20211: #line 487 \"./asn1/h245/packet-h245-template.c\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "20732:     &ett_h245_MobileMultilinkReconfigurationIndication,",
          "20736:   };",
          "20737:   module_t *h245_module;",
          "20740:   proto_h245 = proto_register_protocol(PNAME, PSNAME, PFNAME);",
          "20744:   proto_register_field_array(proto_h245, hf, array_length(hf));",
          "20745:   proto_register_subtree_array(ett, array_length(ett));",
          "",
          "[Removed Lines]",
          "20735: #line 515 \"./asn1/h245/packet-h245-template.c\"",
          "20741:   register_init_routine(h245_init);",
          "20742:   register_cleanup_routine(h245_cleanup);",
          "",
          "[Added Lines]",
          "20714: #line 494 \"./asn1/h245/packet-h245-template.c\"",
          "20720:   h223_pending_olc_reqs[P2P_DIR_SENT] = wmem_map_new_autoreset(wmem_epan_scope(), wmem_file_scope(), g_direct_hash, g_direct_equal );",
          "20721:   h223_pending_olc_reqs[P2P_DIR_RECV] = wmem_map_new_autoreset(wmem_epan_scope(), wmem_file_scope(), g_direct_hash, g_direct_equal );",
          "20722:   h245_pending_olc_reqs = wmem_map_new_autoreset(wmem_epan_scope(), wmem_file_scope(), wmem_str_hash, g_str_equal);",
          "20724:   register_init_routine(h223_lc_init);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-lte-rrc.c||epan/dissectors/packet-lte-rrc.c": [
          "File: epan/dissectors/packet-lte-rrc.c -> epan/dissectors/packet-lte-rrc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "73: static dissector_handle_t gsm_rlcmac_dl_handle = NULL;",
          "74: static dissector_handle_t lte_rrc_dl_ccch_handle;",
          "80: static guint8     system_info_value_current;",
          "81: static gboolean   system_info_value_current_set;",
          "",
          "[Removed Lines]",
          "76: static GHashTable *lte_rrc_etws_cmas_dcs_hash = NULL;",
          "79: static GHashTable *lte_rrc_system_info_value_changed_hash = NULL;",
          "",
          "[Added Lines]",
          "76: static wmem_map_t *lte_rrc_etws_cmas_dcs_hash = NULL;",
          "79: static wmem_map_t *lte_rrc_system_info_value_changed_hash = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26087:   if (!actx->pinfo->fd->flags.visited) {",
          "26088:     if (system_info_value_current_set && (value != system_info_value_current)) {",
          "26091:                           GUINT_TO_POINTER(system_info_value_current+1));",
          "26092:     }",
          "26093:     system_info_value_current_set = TRUE;",
          "",
          "[Removed Lines]",
          "26090:       g_hash_table_insert(lte_rrc_system_info_value_changed_hash, GUINT_TO_POINTER(actx->pinfo->num),",
          "",
          "[Added Lines]",
          "26090:       wmem_map_insert(lte_rrc_system_info_value_changed_hash, GUINT_TO_POINTER(actx->pinfo->num),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "26095:   }",
          "26096:   else {",
          "26099:     if (p_previous != NULL) {",
          "26101:       guint32 previous = GPOINTER_TO_UINT(p_previous) - 1;",
          "",
          "[Removed Lines]",
          "26098:     gpointer p_previous = g_hash_table_lookup(lte_rrc_system_info_value_changed_hash, GUINT_TO_POINTER(actx->pinfo->num));",
          "",
          "[Added Lines]",
          "26098:     gpointer p_previous = wmem_map_lookup(lte_rrc_system_info_value_changed_hash, GUINT_TO_POINTER(actx->pinfo->num));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "38409:     subtree = proto_item_add_subtree(actx->created_item, ett_lte_rrc_warningMessageSegment);",
          "38410:     frag_tvb = process_reassembled_data(warning_msg_seg_tvb, 0, actx->pinfo, \"Reassembled SIB11 warning message\",",
          "38411:                                         frag_data, &lte_rrc_sib11_frag_items, NULL, subtree);",
          "38413:     if (frag_tvb && p_dcs) {",
          "38414:       dissect_lte_rrc_warningMessageSegment(frag_tvb, subtree, actx->pinfo, GPOINTER_TO_UINT(p_dcs));",
          "38415:     }",
          "",
          "[Removed Lines]",
          "38412:     p_dcs = g_hash_table_lookup(lte_rrc_etws_cmas_dcs_hash, GUINT_TO_POINTER((guint)private_data_get_message_identifier(actx)));",
          "",
          "[Added Lines]",
          "38412:     p_dcs = wmem_map_lookup(lte_rrc_etws_cmas_dcs_hash, GUINT_TO_POINTER((guint)private_data_get_message_identifier(actx)));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "38433:     guint32 dataCodingScheme;",
          "38434:     subtree = proto_item_add_subtree(actx->created_item, ett_lte_rrc_dataCodingScheme);",
          "38435:     dataCodingScheme = dissect_cbs_data_coding_scheme(data_coding_scheme_tvb, actx->pinfo, subtree, 0);",
          "38437:                         GUINT_TO_POINTER(dataCodingScheme));",
          "38438:   }",
          "",
          "[Removed Lines]",
          "38436:     g_hash_table_insert(lte_rrc_etws_cmas_dcs_hash, GUINT_TO_POINTER((guint)private_data_get_message_identifier(actx)),",
          "",
          "[Added Lines]",
          "38436:     wmem_map_insert(lte_rrc_etws_cmas_dcs_hash, GUINT_TO_POINTER((guint)private_data_get_message_identifier(actx)),",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "38560:     subtree = proto_item_add_subtree(actx->created_item, ett_lte_rrc_warningMessageSegment);",
          "38561:     frag_tvb = process_reassembled_data(warning_msg_seg_tvb, 0, actx->pinfo, \"Reassembled SIB12 warning message\",",
          "38562:                                         frag_data, &lte_rrc_sib12_frag_items, NULL, subtree);",
          "38564:     if (frag_tvb && p_dcs) {",
          "38565:       dissect_lte_rrc_warningMessageSegment(frag_tvb, subtree, actx->pinfo, GPOINTER_TO_UINT(p_dcs));",
          "38566:     }",
          "",
          "[Removed Lines]",
          "38563:     p_dcs = g_hash_table_lookup(lte_rrc_etws_cmas_dcs_hash, GUINT_TO_POINTER((guint)private_data_get_message_identifier(actx)));",
          "",
          "[Added Lines]",
          "38563:     p_dcs = wmem_map_lookup(lte_rrc_etws_cmas_dcs_hash, GUINT_TO_POINTER((guint)private_data_get_message_identifier(actx)));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "38584:     guint32 dataCodingScheme;",
          "38585:     subtree = proto_item_add_subtree(actx->created_item, ett_lte_rrc_dataCodingScheme);",
          "38586:     dataCodingScheme = dissect_cbs_data_coding_scheme(data_coding_scheme_tvb, actx->pinfo, subtree, 0);",
          "38588:                         GUINT_TO_POINTER(dataCodingScheme));",
          "38589:   }",
          "",
          "[Removed Lines]",
          "38587:     g_hash_table_insert(lte_rrc_etws_cmas_dcs_hash, GUINT_TO_POINTER((guint)private_data_get_message_identifier(actx)),",
          "",
          "[Added Lines]",
          "38587:     wmem_map_insert(lte_rrc_etws_cmas_dcs_hash, GUINT_TO_POINTER((guint)private_data_get_message_identifier(actx)),",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "69891:   return tvb_captured_length(tvb);",
          "69892: }",
          "69909: void proto_register_lte_rrc(void) {",
          "",
          "[Removed Lines]",
          "69894: static void",
          "69895: lte_rrc_init_protocol(void)",
          "69896: {",
          "69897:   lte_rrc_etws_cmas_dcs_hash = g_hash_table_new(g_direct_hash, g_direct_equal);",
          "69898:   lte_rrc_system_info_value_changed_hash = g_hash_table_new(g_direct_hash, g_direct_equal);",
          "69899: }",
          "69901: static void",
          "69902: lte_rrc_cleanup_protocol(void)",
          "69903: {",
          "69904:   g_hash_table_destroy(lte_rrc_etws_cmas_dcs_hash);",
          "69905:   g_hash_table_destroy(lte_rrc_system_info_value_changed_hash);",
          "69906: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "87884:         \"T_n311_r13_01\", HFILL }},",
          "87889:     { &hf_lte_rrc_eutra_cap_feat_group_ind_1,",
          "87890:       { \"Indicator 1\", \"lte-rrc.eutra_cap_feat_group_ind_1\",",
          "",
          "[Removed Lines]",
          "87887: #line 3210 \"./asn1/lte-rrc/packet-lte-rrc-template.c\"",
          "",
          "[Added Lines]",
          "87873: #line 3196 \"./asn1/lte-rrc/packet-lte-rrc-template.c\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "90776:     &ett_lte_rrc_UE_TimersAndConstants_NB_r13,",
          "90781:     &ett_lte_rrc_featureGroupIndicators,",
          "90782:     &ett_lte_rrc_featureGroupIndRel9Add,",
          "",
          "[Removed Lines]",
          "90779: #line 3937 \"./asn1/lte-rrc/packet-lte-rrc-template.c\"",
          "",
          "[Added Lines]",
          "90765: #line 3923 \"./asn1/lte-rrc/packet-lte-rrc-template.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "90884:   reassembly_table_register(&lte_rrc_sib11_reassembly_table,",
          "90885:                         &addresses_reassembly_table_functions);",
          "",
          "[Removed Lines]",
          "90879: #line 4011 \"./asn1/lte-rrc/packet-lte-rrc-template.c\"",
          "90881:   register_init_routine(&lte_rrc_init_protocol);",
          "90882:   register_cleanup_routine(&lte_rrc_cleanup_protocol);",
          "",
          "[Added Lines]",
          "90865: #line 3997 \"./asn1/lte-rrc/packet-lte-rrc-template.c\"",
          "90867:   lte_rrc_etws_cmas_dcs_hash = wmem_map_new_autoreset(wmem_epan_scope(), wmem_file_scope(), g_direct_hash, g_direct_equal);",
          "90868:   lte_rrc_system_info_value_changed_hash = wmem_map_new_autoreset(wmem_epan_scope(), wmem_file_scope(), g_direct_hash, g_direct_equal);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-pres.c||epan/dissectors/packet-pres.c": [
          "File: epan/dissectors/packet-pres.c -> epan/dissectors/packet-pres.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:  char *oid;",
          "78:  guint32 idx;",
          "79: } pres_ctx_oid_t;",
          "82: typedef struct _pres_user_t {",
          "83:    guint ctx_id;",
          "",
          "[Removed Lines]",
          "80: static GHashTable *pres_ctx_oid_table = NULL;",
          "",
          "[Added Lines]",
          "80: static wmem_map_t *pres_ctx_oid_table = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "246:  return (pco1->ctx_id==pco2->ctx_id && pco1->idx==pco2->idx);",
          "247: }",
          "263: static void",
          "264: register_ctx_id_and_oid(packet_info *pinfo _U_, guint32 idx, const char *oid)",
          "265: {",
          "",
          "[Removed Lines]",
          "249: static void",
          "250: pres_init(void)",
          "251: {",
          "252:  pres_ctx_oid_table = g_hash_table_new(pres_ctx_oid_hash,",
          "253:    pres_ctx_oid_equal);",
          "255: }",
          "257: static void",
          "258: pres_cleanup(void)",
          "259: {",
          "260:  g_hash_table_destroy(pres_ctx_oid_table);",
          "261: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "283:  }",
          "287:  if (tmppco) {",
          "289:  }",
          "291: }",
          "293: static char *",
          "",
          "[Removed Lines]",
          "286:  tmppco=(pres_ctx_oid_t *)g_hash_table_lookup(pres_ctx_oid_table, pco);",
          "288:   g_hash_table_remove(pres_ctx_oid_table, tmppco);",
          "290:  g_hash_table_insert(pres_ctx_oid_table, pco, pco);",
          "",
          "[Added Lines]",
          "272:  tmppco=(pres_ctx_oid_t *)wmem_map_lookup(pres_ctx_oid_table, pco);",
          "274:   wmem_map_remove(pres_ctx_oid_table, tmppco);",
          "276:  wmem_map_insert(pres_ctx_oid_table, pco, pco);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "323:   pco.idx = 0;",
          "324:  }",
          "327:  if (tmppco) {",
          "328:   return tmppco->oid;",
          "329:  }",
          "",
          "[Removed Lines]",
          "326:  tmppco=(pres_ctx_oid_t *)g_hash_table_lookup(pres_ctx_oid_table, &pco);",
          "",
          "[Added Lines]",
          "312:  tmppco=(pres_ctx_oid_t *)wmem_map_lookup(pres_ctx_oid_table, &pco);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1362: #line 224 \"./asn1/pres/packet-pres-template.c\"",
          "",
          "[Added Lines]",
          "1348: #line 210 \"./asn1/pres/packet-pres-template.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1841:         NULL, HFILL }},",
          "1845:   };",
          "",
          "[Removed Lines]",
          "1844: #line 393 \"./asn1/pres/packet-pres-template.c\"",
          "",
          "[Added Lines]",
          "1830: #line 379 \"./asn1/pres/packet-pres-template.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1888:     &ett_pres_UD_type,",
          "1892:   };",
          "1894:   static ei_register_info ei[] = {",
          "",
          "[Removed Lines]",
          "1891: #line 399 \"./asn1/pres/packet-pres-template.c\"",
          "",
          "[Added Lines]",
          "1877: #line 385 \"./asn1/pres/packet-pres-template.c\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1933:   proto_register_subtree_array(ett, array_length(ett));",
          "1934:   expert_pres = expert_register_protocol(proto_pres);",
          "1935:   expert_register_field_array(expert_pres, ei, array_length(ei));",
          "1939:   pres_module = prefs_register_protocol(proto_pres, NULL);",
          "",
          "[Removed Lines]",
          "1936:   register_init_routine(pres_init);",
          "1937:   register_cleanup_routine(pres_cleanup);",
          "",
          "[Added Lines]",
          "1922:   pres_ctx_oid_table = wmem_map_new_autoreset(wmem_epan_scope(), wmem_file_scope(), pres_ctx_oid_hash, pres_ctx_oid_equal);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-ros.c||epan/dissectors/packet-ros.c": [
          "File: epan/dissectors/packet-ros.c -> epan/dissectors/packet-ros.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "57: static  dissector_handle_t ros_handle = NULL;",
          "59: typedef struct ros_conv_info_t {",
          "63: } ros_conv_info_t;",
          "67: typedef struct ros_call_response {",
          "68:   gboolean is_request;",
          "69:   guint32 req_frame;",
          "",
          "[Removed Lines]",
          "60:   struct ros_conv_info_t *next;",
          "65: static ros_conv_info_t *ros_info_items = NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "115: static gint ett_ros = -1;",
          "",
          "[Removed Lines]",
          "112: #line 73 \"./asn1/ros/packet-ros-template.c\"",
          "",
          "[Added Lines]",
          "109: #line 70 \"./asn1/ros/packet-ros-template.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "136: static gint ett_ros_Code = -1;",
          "141: static expert_field ei_ros_dissector_oid_not_implemented = EI_INIT;",
          "142: static expert_field ei_ros_unknown_ros_pdu = EI_INIT;",
          "144: static dissector_table_t ros_oid_dissector_table=NULL;",
          "149: void",
          "150: register_ros_oid_dissector_handle(const char *oid, dissector_handle_t dissector, int proto _U_, const char *name, gboolean uses_rtse)",
          "151: {",
          "152:  dissector_add_string(\"ros.oid\", oid, dissector);",
          "155:  if(!uses_rtse)",
          "",
          "[Removed Lines]",
          "139: #line 86 \"./asn1/ros/packet-ros-template.c\"",
          "146: static GHashTable *oid_table=NULL;",
          "147: static GHashTable *protocol_table=NULL;",
          "153:  g_hash_table_insert(oid_table, (gpointer)oid, (gpointer)name);",
          "",
          "[Added Lines]",
          "136: #line 83 \"./asn1/ros/packet-ros-template.c\"",
          "143: static wmem_map_t *protocol_table=NULL;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "160: void",
          "161: register_ros_protocol_info(const char *oid, const ros_info_t *rinfo, int proto _U_, const char *name, gboolean uses_rtse)",
          "162: {",
          "166:  if(!uses_rtse)",
          "",
          "[Removed Lines]",
          "163:  g_hash_table_insert(protocol_table, (gpointer)oid, (gpointer)rinfo);",
          "164:  g_hash_table_insert(oid_table, (gpointer)oid, (gpointer)name);",
          "",
          "[Added Lines]",
          "158:  wmem_map_insert(protocol_table, (gpointer)oid, (gpointer)rinfo);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "205:  proto_item *item=NULL;",
          "206:  proto_tree *ros_tree=NULL;",
          "210:   if(tree){",
          "211:    item = proto_tree_add_item(tree, *(rinfo->proto), tvb, 0, -1, ENC_NA);",
          "",
          "[Removed Lines]",
          "208:  if((session != NULL) && ((rinfo = (ros_info_t*)g_hash_table_lookup(protocol_table, oid)) != NULL)) {",
          "",
          "[Added Lines]",
          "202:  if((session != NULL) && ((rinfo = (ros_info_t*)wmem_map_lookup(protocol_table, oid)) != NULL)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "334: ros_match_call_response(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, guint invokeId, gboolean isInvoke)",
          "335: {",
          "336:   ros_call_response_t rcr, *rcrp=NULL;",
          "341:   rcr.invokeId=invokeId;",
          "342:   rcr.is_request = isInvoke;",
          "",
          "[Removed Lines]",
          "337:   ros_conv_info_t *ros_info = ros_info_items;",
          "",
          "[Added Lines]",
          "331:   ros_conv_info_t *ros_info;",
          "332:   conversation_t *conversation;",
          "335:   conversation = find_conversation(pinfo->num, &pinfo->src, &pinfo->dst,",
          "336:          pinfo->ptype, pinfo->srcport,",
          "337:          pinfo->destport, 0);",
          "338:   if (conversation == NULL)",
          "339:     return NULL;",
          "341:   ros_info = (ros_conv_info_t *)conversation_get_proto_data(conversation, proto_ros);",
          "342:   if (ros_info == NULL)",
          "343:     return NULL;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "349:     rcr.rep_frame=pinfo->num;",
          "350:   }",
          "354:   if(rcrp) {",
          "",
          "[Removed Lines]",
          "352:   rcrp=(ros_call_response_t *)g_hash_table_lookup(ros_info->matched, &rcr);",
          "",
          "[Added Lines]",
          "356:   rcrp=(ros_call_response_t *)wmem_map_lookup(ros_info->matched, &rcr);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "368:       rcr.invokeId=invokeId;",
          "372:       if(rcrp){",
          "374:       }",
          "",
          "[Removed Lines]",
          "370:       rcrp=(ros_call_response_t *)g_hash_table_lookup(ros_info->unmatched, &rcr);",
          "373:  g_hash_table_remove(ros_info->unmatched, rcrp);",
          "",
          "[Added Lines]",
          "374:       rcrp=(ros_call_response_t *)wmem_map_lookup(ros_info->unmatched, &rcr);",
          "377:  wmem_map_remove(ros_info->unmatched, rcrp);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "382:       rcrp->req_time=pinfo->abs_ts;",
          "383:       rcrp->rep_frame=0;",
          "384:       rcrp->is_request=TRUE;",
          "386:       return NULL;",
          "388:     } else {",
          "",
          "[Removed Lines]",
          "385:       g_hash_table_insert(ros_info->unmatched, rcrp, rcrp);",
          "",
          "[Added Lines]",
          "389:       wmem_map_insert(ros_info->unmatched, rcrp, rcrp);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "392:       rcr.invokeId=invokeId;",
          "395:       if(rcrp){",
          "397:  if(!rcrp->rep_frame){",
          "399:    rcrp->rep_frame=pinfo->num;",
          "400:    rcrp->is_request=FALSE;",
          "402:  }",
          "403:       }",
          "404:     }",
          "",
          "[Removed Lines]",
          "393:       rcrp=(ros_call_response_t *)g_hash_table_lookup(ros_info->unmatched, &rcr);",
          "398:    g_hash_table_remove(ros_info->unmatched, rcrp);",
          "401:    g_hash_table_insert(ros_info->matched, rcrp, rcrp);",
          "",
          "[Added Lines]",
          "397:       rcrp=(ros_call_response_t *)wmem_map_lookup(ros_info->unmatched, &rcr);",
          "402:    wmem_map_remove(ros_info->unmatched, rcrp);",
          "405:    wmem_map_insert(ros_info->matched, rcrp, rcrp);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1011: #line 373 \"./asn1/ros/packet-ros-template.c\"",
          "",
          "[Added Lines]",
          "1015: #line 377 \"./asn1/ros/packet-ros-template.c\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1051:    conversation_add_proto_data(conversation, proto_ros, ros_info);",
          "1055:  }",
          "1057:  item = proto_tree_add_item(parent_tree, proto_ros, tvb, 0, -1, ENC_NA);",
          "",
          "[Removed Lines]",
          "1047:    ros_info = (ros_conv_info_t *)g_malloc(sizeof(ros_conv_info_t));",
          "1048:    ros_info->matched=g_hash_table_new(ros_info_hash_matched, ros_info_equal_matched);",
          "1049:    ros_info->unmatched=g_hash_table_new(ros_info_hash_unmatched, ros_info_equal_unmatched);",
          "1053:    ros_info->next = ros_info_items;",
          "1054:    ros_info_items = ros_info;",
          "",
          "[Added Lines]",
          "1051:    ros_info = (ros_conv_info_t *)wmem_new0(wmem_file_scope(), ros_conv_info_t);",
          "1052:    ros_info->matched=wmem_map_new(wmem_file_scope(), ros_info_hash_matched, ros_info_equal_matched);",
          "1053:    ros_info->unmatched=wmem_map_new(wmem_file_scope(), ros_info_hash_unmatched, ros_info_equal_unmatched);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1075:  return tvb_captured_length(tvb);",
          "1076: }",
          "1102: void proto_register_ros(void) {",
          "",
          "[Removed Lines]",
          "1078: static void",
          "1079: ros_cleanup(void)",
          "1080: {",
          "1081:   ros_conv_info_t *ros_info;",
          "1084:   for (ros_info = ros_info_items; ros_info != NULL; ) {",
          "1085:     ros_conv_info_t *last;",
          "1087:     g_hash_table_destroy(ros_info->matched);",
          "1088:     ros_info->matched=NULL;",
          "1089:     g_hash_table_destroy(ros_info->unmatched);",
          "1090:     ros_info->unmatched=NULL;",
          "1092:     last = ros_info;",
          "1093:     ros_info = ros_info->next;",
          "1094:     g_free(last);",
          "1095:   }",
          "1097:   ros_info_items = NULL;",
          "1099: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1230:         \"OBJECT_IDENTIFIER\", HFILL }},",
          "1234:   };",
          "",
          "[Removed Lines]",
          "1233: #line 482 \"./asn1/ros/packet-ros-template.c\"",
          "",
          "[Added Lines]",
          "1211: #line 460 \"./asn1/ros/packet-ros-template.c\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1260:     &ett_ros_Code,",
          "1264:   };",
          "1266:   static ei_register_info ei[] = {",
          "",
          "[Removed Lines]",
          "1263: #line 498 \"./asn1/ros/packet-ros-template.c\"",
          "",
          "[Added Lines]",
          "1241: #line 476 \"./asn1/ros/packet-ros-template.c\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1280:   expert_register_field_array(expert_ros, ei, array_length(ei));",
          "1282:   ros_oid_dissector_table = register_dissector_table(\"ros.oid\", \"ROS OID Dissectors\", proto_ros, FT_STRING, BASE_NONE);",
          "1287: }",
          "",
          "[Removed Lines]",
          "1283:   oid_table=g_hash_table_new(g_str_hash, g_str_equal);",
          "1284:   protocol_table=g_hash_table_new(g_str_hash, g_str_equal);",
          "1286:   register_cleanup_routine(ros_cleanup);",
          "",
          "[Added Lines]",
          "1261:   protocol_table = wmem_map_new(wmem_epan_scope(), wmem_str_hash, g_str_equal);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-rtse.c||epan/dissectors/packet-rtse.c": [
          "File: epan/dissectors/packet-rtse.c -> epan/dissectors/packet-rtse.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "119: static dissector_table_t rtse_oid_dissector_table=NULL;",
          "120: static dissector_handle_t rtse_handle = NULL;",
          "122: static gint ett_rtse_unknown = -1;",
          "124: static reassembly_table rtse_reassembly_table;",
          "",
          "[Removed Lines]",
          "121: static GHashTable *oid_table=NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "171:   if (ros_handle == NULL)",
          "172:     ros_handle = find_dissector(\"ros\");",
          "178:   register_ber_oid_dissector_handle(oid, rtse_handle, proto, name);",
          "",
          "[Removed Lines]",
          "175:   g_hash_table_insert(oid_table, (gpointer)oid, (gpointer)name);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "739: #line 192 \"./asn1/rtse/packet-rtse-template.c\"",
          "",
          "[Added Lines]",
          "735: #line 188 \"./asn1/rtse/packet-rtse-template.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "998:         NULL, HFILL }},",
          "1002:   };",
          "",
          "[Removed Lines]",
          "1001: #line 353 \"./asn1/rtse/packet-rtse-template.c\"",
          "",
          "[Added Lines]",
          "997: #line 349 \"./asn1/rtse/packet-rtse-template.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1020:     &ett_rtse_CallingSSuserReference,",
          "1024:   };",
          "1026:   static ei_register_info ei[] = {",
          "",
          "[Removed Lines]",
          "1023: #line 362 \"./asn1/rtse/packet-rtse-template.c\"",
          "",
          "[Added Lines]",
          "1019: #line 358 \"./asn1/rtse/packet-rtse-template.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1054:                  \" in the TCP protocol settings.\", &rtse_reassemble);",
          "1056:   rtse_oid_dissector_table = register_dissector_table(\"rtse.oid\", \"RTSE OID Dissectors\", proto_rtse, FT_STRING, BASE_NONE);",
          "1060: }",
          "",
          "[Removed Lines]",
          "1057:   oid_table=g_hash_table_new(g_str_hash, g_str_equal);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "278e52f26e7e1a23f8d2e8ed98693328c992bdce",
      "candidate_info": {
        "commit_hash": "278e52f26e7e1a23f8d2e8ed98693328c992bdce",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/278e52f26e7e1a23f8d2e8ed98693328c992bdce",
        "files": [
          "epan/dissectors/asn1/ros/packet-ros-template.c",
          "epan/dissectors/packet-ros.c"
        ],
        "message": "ROS: Harden ROS dissection\n\nMake sure that on a OID search an actual OID is available to search for.\n\n# Conflicts:\n#\tepan/dissectors/asn1/ros/packet-ros-template.c\n#\tepan/dissectors/packet-ros.c\n\nBug: 13637\nChange-Id: I36f84cce5506f003d2a30a17f8671d5e22070612\nReviewed-on: https://code.wireshark.org/review/21280\nReviewed-by: Jaap Keuter <jaap.keuter@xs4all.nl>\nPetri-Dish: Jaap Keuter <jaap.keuter@xs4all.nl>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>\nReviewed-on: https://code.wireshark.org/review/21283\nPetri-Dish: Michael Mann <mmann78@netscape.net>",
        "before_after_code_files": [
          "epan/dissectors/asn1/ros/packet-ros-template.c||epan/dissectors/asn1/ros/packet-ros-template.c",
          "epan/dissectors/packet-ros.c||epan/dissectors/packet-ros.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/asn1/ros/packet-ros-template.c||epan/dissectors/asn1/ros/packet-ros-template.c",
            "epan/dissectors/packet-ros.c||epan/dissectors/packet-ros.c"
          ],
          "candidate": [
            "epan/dissectors/asn1/ros/packet-ros-template.c||epan/dissectors/asn1/ros/packet-ros-template.c",
            "epan/dissectors/packet-ros.c||epan/dissectors/packet-ros.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/asn1/ros/packet-ros-template.c||epan/dissectors/asn1/ros/packet-ros-template.c": [
          "File: epan/dissectors/asn1/ros/packet-ros-template.c -> epan/dissectors/asn1/ros/packet-ros-template.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "151:  proto_item *item=NULL;",
          "152:  proto_tree *ros_tree=NULL;",
          "156:   if(tree){",
          "157:    item = proto_tree_add_item(tree, *(rinfo->proto), tvb, 0, -1, ENC_NA);",
          "",
          "[Removed Lines]",
          "154:  if((session != NULL) && ((rinfo = (ros_info_t*)g_hash_table_lookup(protocol_table, oid)) != NULL)) {",
          "",
          "[Added Lines]",
          "154:  if((session != NULL) && (oid != NULL) && ((rinfo = (ros_info_t*)g_hash_table_lookup(protocol_table, oid)) != NULL)) {",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-ros.c||epan/dissectors/packet-ros.c": [
          "File: epan/dissectors/packet-ros.c -> epan/dissectors/packet-ros.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "205:  proto_item *item=NULL;",
          "206:  proto_tree *ros_tree=NULL;",
          "210:   if(tree){",
          "211:    item = proto_tree_add_item(tree, *(rinfo->proto), tvb, 0, -1, ENC_NA);",
          "",
          "[Removed Lines]",
          "208:  if((session != NULL) && ((rinfo = (ros_info_t*)g_hash_table_lookup(protocol_table, oid)) != NULL)) {",
          "",
          "[Added Lines]",
          "208:  if((session != NULL) && (oid != NULL) && ((rinfo = (ros_info_t*)g_hash_table_lookup(protocol_table, oid)) != NULL)) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}