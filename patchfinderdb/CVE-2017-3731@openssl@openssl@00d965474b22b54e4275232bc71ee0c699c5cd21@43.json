{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9fa506681c842bf9b27ddf4ea8579c4695be3bfa",
      "candidate_info": {
        "commit_hash": "9fa506681c842bf9b27ddf4ea8579c4695be3bfa",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/9fa506681c842bf9b27ddf4ea8579c4695be3bfa",
        "files": [
          "ssl/d1_lib.c"
        ],
        "message": "Ensure we are in accept state in DTLSv1_listen\n\nCalling SSL_set_accept_state() after DTLSv1_listen() clears the state, so\nSSL_accept() no longer works. In 1.0.2 calling DTLSv1_listen() would set\nthe accept state automatically. We should still do that.\n\nFixes #1989\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(cherry picked from commit 5bdcd362d24cbbcf18c5eb9df655fe9f7bcf5850)",
        "before_after_code_files": [
          "ssl/d1_lib.c||ssl/d1_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/d1_lib.c||ssl/d1_lib.c": [
          "File: ssl/d1_lib.c -> ssl/d1_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "441:     BIO_ADDR *tmpclient = NULL;",
          "442:     PACKET pkt, msgpkt, msgpayload, session, cookiepkt;",
          "445:     if (!SSL_clear(s))",
          "446:         return -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "444:     if (s->handshake_func == NULL) {",
          "446:         SSL_set_accept_state(s);",
          "447:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4ba808de916c9390d45d733563313d8d8f8dbe44",
      "candidate_info": {
        "commit_hash": "4ba808de916c9390d45d733563313d8d8f8dbe44",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/4ba808de916c9390d45d733563313d8d8f8dbe44",
        "files": [
          "test/recipes/80-test_ssl_new.t",
          "test/ssl-tests/17-renegotiate.conf.in",
          "test/ssl-tests/18-dtls-renegotiate.conf.in"
        ],
        "message": "Fix test_ssl_new when compiled with no-tls1_2 or no-dtls1_2\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2788)\n(cherry picked from commit 4d118fe007692de2dd8c5dd084254f8d3b308167)",
        "before_after_code_files": [
          "test/recipes/80-test_ssl_new.t||test/recipes/80-test_ssl_new.t",
          "test/ssl-tests/17-renegotiate.conf.in||test/ssl-tests/17-renegotiate.conf.in",
          "test/ssl-tests/18-dtls-renegotiate.conf.in||test/ssl-tests/18-dtls-renegotiate.conf.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/80-test_ssl_new.t||test/recipes/80-test_ssl_new.t": [
          "File: test/recipes/80-test_ssl_new.t -> test/recipes/80-test_ssl_new.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:   \"07-dtls-protocol-version.conf\" => !$is_default_dtls,",
          "55:   \"10-resumption.conf\" => !$is_default_tls,",
          "56:   \"11-dtls_resumption.conf\" => !$is_default_dtls,",
          "57: );",
          "59: # Add your test here if it should be skipped for some compile-time",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57:   \"17-renegotiate.conf\" => disabled(\"tls1_2\"),",
          "58:   \"18-dtls-renegotiate.conf\" => disabled(\"dtls1_2\"),",
          "",
          "---------------"
        ],
        "test/ssl-tests/17-renegotiate.conf.in||test/ssl-tests/17-renegotiate.conf.in": [
          "File: test/ssl-tests/17-renegotiate.conf.in -> test/ssl-tests/17-renegotiate.conf.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: use warnings;",
          "15: package ssltests;",
          "17: my $dir_sep = $^O ne \"VMS\" ? \"/\" : \"\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: use OpenSSL::Test::Utils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "102:             \"ResumptionExpected\" => \"No\",",
          "103:             \"ExpectedResult\" => \"Success\"",
          "104:         }",
          "106:     {",
          "107:         name => \"renegotiate-aead-to-non-aead\",",
          "108:         server => {",
          "",
          "[Removed Lines]",
          "105:     },",
          "",
          "[Added Lines]",
          "106:     }",
          "107: );",
          "108: our @tests_tls1_2 = (",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "178:             \"ResumptionExpected\" => \"No\",",
          "179:             \"ExpectedResult\" => \"Success\"",
          "180:         }",
          "182: );",
          "",
          "[Removed Lines]",
          "181:     },",
          "",
          "[Added Lines]",
          "184:     }",
          "187: push @tests, @tests_tls1_2 unless disabled(\"tls1_2\");",
          "",
          "---------------"
        ],
        "test/ssl-tests/18-dtls-renegotiate.conf.in||test/ssl-tests/18-dtls-renegotiate.conf.in": [
          "File: test/ssl-tests/18-dtls-renegotiate.conf.in -> test/ssl-tests/18-dtls-renegotiate.conf.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: use warnings;",
          "15: package ssltests;",
          "17: my $dir_sep = $^O ne \"VMS\" ? \"/\" : \"\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: use OpenSSL::Test::Utils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:             \"ResumptionExpected\" => \"No\",",
          "95:             \"ExpectedResult\" => \"Success\"",
          "96:         }",
          "98:     {",
          "99:         name => \"renegotiate-aead-to-non-aead\",",
          "100:         server => {",
          "",
          "[Removed Lines]",
          "97:     },",
          "",
          "[Added Lines]",
          "98:     }",
          "99: );",
          "100: our @tests_dtls1_2 = (",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "168:         }",
          "169:     },",
          "170: );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "176: push @tests, @tests_dtls1_2 unless disabled(\"dtls1_2\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0feb2207e7ff4ecbf9edea1521e44e0b809ad69d",
      "candidate_info": {
        "commit_hash": "0feb2207e7ff4ecbf9edea1521e44e0b809ad69d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0feb2207e7ff4ecbf9edea1521e44e0b809ad69d",
        "files": [
          "crypto/bn/bn_lcl.h"
        ],
        "message": "bn: catch negative zero as an error\n\nChange-Id: I5ab72ad0aae9069b47d5b7b7b9e25bd1b7afa251\nSigned-off-by: Geoff Thorpe <geoff@openssl.org>\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1672)\n(cherry picked from commit 2fc9b36a96ccd77cbd9ecfb3a3cdaa7ad2ca305e)",
        "before_after_code_files": [
          "crypto/bn/bn_lcl.h||crypto/bn/bn_lcl.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/bn_lcl.h||crypto/bn/bn_lcl.h": [
          "File: crypto/bn/bn_lcl.h -> crypto/bn/bn_lcl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "177:         do { \\",
          "178:                 const BIGNUM *_bnum2 = (a); \\",
          "179:                 if (_bnum2 != NULL) { \\",
          "182:                         bn_pollute(_bnum2); \\",
          "183:                 } \\",
          "184:         } while(0)",
          "",
          "[Removed Lines]",
          "180:                         OPENSSL_assert((_bnum2->top == 0) || \\",
          "181:                                 (_bnum2->d[_bnum2->top - 1] != 0)); \\",
          "",
          "[Added Lines]",
          "180:                         OPENSSL_assert(((_bnum2->top == 0) && !_bnum2->neg) || \\",
          "181:                                 (_bnum2->top && (_bnum2->d[_bnum2->top - 1] != 0))); \\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d18afb5bf29dc3b81b5f7a9eda2abde35041a441",
      "candidate_info": {
        "commit_hash": "d18afb5bf29dc3b81b5f7a9eda2abde35041a441",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/d18afb5bf29dc3b81b5f7a9eda2abde35041a441",
        "files": [
          "crypto/bn/bn_exp.c",
          "crypto/bn/bn_mul.c",
          "crypto/bn/bn_prime.c",
          "crypto/bn/bn_sqr.c",
          "crypto/ec/ec2_mult.c",
          "crypto/rsa/rsa_gen.c"
        ],
        "message": "Check return value of some BN functions.\n\nFactorise multiple bn_get_top(group->field) calls\nAdd missing checks on some conditional BN_copy return value\nAdd missing checks on some BN_copy return value\nAdd missing checks on a few bn_wexpand return value\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1626)\n\n(cherry picked from commit 78e09b53a40729f5e99829ccc733b592bd22fea1)",
        "before_after_code_files": [
          "crypto/bn/bn_exp.c||crypto/bn/bn_exp.c",
          "crypto/bn/bn_mul.c||crypto/bn/bn_mul.c",
          "crypto/bn/bn_prime.c||crypto/bn/bn_prime.c",
          "crypto/bn/bn_sqr.c||crypto/bn/bn_sqr.c",
          "crypto/ec/ec2_mult.c||crypto/ec/ec2_mult.c",
          "crypto/rsrsa_gen.c||crypto/rsa/rsa_gen.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/bn_exp.c||crypto/bn/bn_exp.c": [
          "File: crypto/bn/bn_exp.c -> crypto/bn/bn_exp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:                 goto err;",
          "79:         }",
          "80:     }",
          "83:     ret = 1;",
          "84:  err:",
          "85:     BN_CTX_end(ctx);",
          "",
          "[Removed Lines]",
          "81:     if (r != rr)",
          "82:         BN_copy(r, rr);",
          "",
          "[Added Lines]",
          "81:     if (r != rr && BN_copy(r, rr) == NULL)",
          "82:         goto err;",
          "",
          "---------------"
        ],
        "crypto/bn/bn_mul.c||crypto/bn/bn_mul.c": [
          "File: crypto/bn/bn_mul.c -> crypto/bn/bn_mul.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "970:  end:",
          "971: #endif",
          "972:     bn_correct_top(rr);",
          "975:     ret = 1;",
          "976:  err:",
          "977:     bn_check_top(r);",
          "",
          "[Removed Lines]",
          "973:     if (r != rr)",
          "974:         BN_copy(r, rr);",
          "",
          "[Added Lines]",
          "973:     if (r != rr && BN_copy(r, rr) == NULL)",
          "974:         goto err;",
          "",
          "---------------"
        ],
        "crypto/bn/bn_prime.c||crypto/bn/bn_prime.c": [
          "File: crypto/bn/bn_prime.c -> crypto/bn/bn_prime.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "240:         BIGNUM *t;",
          "241:         if ((t = BN_CTX_get(ctx)) == NULL)",
          "242:             goto err;",
          "244:         t->neg = 0;",
          "245:         A = t;",
          "246:     } else",
          "",
          "[Removed Lines]",
          "243:         BN_copy(t, a);",
          "",
          "[Added Lines]",
          "243:         if (BN_copy(t, a) == NULL)",
          "244:             goto err;",
          "",
          "---------------"
        ],
        "crypto/bn/bn_sqr.c||crypto/bn/bn_sqr.c": [
          "File: crypto/bn/bn_sqr.c -> crypto/bn/bn_sqr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "90:         rr->top = max - 1;",
          "91:     else",
          "92:         rr->top = max;",
          "95:     ret = 1;",
          "96:  err:",
          "97:     bn_check_top(rr);",
          "",
          "[Removed Lines]",
          "93:     if (rr != r)",
          "94:         BN_copy(r, rr);",
          "",
          "[Added Lines]",
          "93:     if (r != rr && BN_copy(r, rr) == NULL)",
          "94:         goto err;",
          "",
          "---------------"
        ],
        "crypto/ec/ec2_mult.c||crypto/ec/ec2_mult.c": [
          "File: crypto/ec/ec2_mult.c -> crypto/ec/ec2_mult.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "223:                                              BN_CTX *ctx)",
          "224: {",
          "225:     BIGNUM *x1, *x2, *z1, *z2;",
          "227:     BN_ULONG mask, word;",
          "229:     if (r == point) {",
          "",
          "[Removed Lines]",
          "226:     int ret = 0, i;",
          "",
          "[Added Lines]",
          "226:     int ret = 0, i, group_top;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "253:     x2 = r->X;",
          "254:     z2 = r->Y;",
          "261:     if (!BN_GF2m_mod_arr(x1, point->X, group->poly))",
          "",
          "[Removed Lines]",
          "256:     bn_wexpand(x1, bn_get_top(group->field));",
          "257:     bn_wexpand(z1, bn_get_top(group->field));",
          "258:     bn_wexpand(x2, bn_get_top(group->field));",
          "259:     bn_wexpand(z2, bn_get_top(group->field));",
          "",
          "[Added Lines]",
          "256:     group_top = bn_get_top(group->field);",
          "257:     if (bn_wexpand(x1, group_top) == NULL",
          "258:         || bn_wexpand(z1, group_top) == NULL",
          "259:         || bn_wexpand(x2, group_top) == NULL",
          "260:         || bn_wexpand(z2, group_top) == NULL)",
          "261:         goto err;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "285:     for (; i >= 0; i--) {",
          "286:         word = bn_get_words(scalar)[i];",
          "287:         while (mask) {",
          "290:             if (!gf2m_Madd(group, point->X, x2, z2, x1, z1, ctx))",
          "291:                 goto err;",
          "292:             if (!gf2m_Mdouble(group, x1, z1, ctx))",
          "293:                 goto err;",
          "296:             mask >>= 1;",
          "297:         }",
          "298:         mask = BN_TBIT;",
          "",
          "[Removed Lines]",
          "288:             BN_consttime_swap(word & mask, x1, x2, bn_get_top(group->field));",
          "289:             BN_consttime_swap(word & mask, z1, z2, bn_get_top(group->field));",
          "294:             BN_consttime_swap(word & mask, x1, x2, bn_get_top(group->field));",
          "295:             BN_consttime_swap(word & mask, z1, z2, bn_get_top(group->field));",
          "",
          "[Added Lines]",
          "290:             BN_consttime_swap(word & mask, x1, x2, group_top);",
          "291:             BN_consttime_swap(word & mask, z1, z2, group_top);",
          "296:             BN_consttime_swap(word & mask, x1, x2, group_top);",
          "297:             BN_consttime_swap(word & mask, z1, z2, group_top);",
          "",
          "---------------"
        ],
        "crypto/rsrsa_gen.c||crypto/rsa/rsa_gen.c": [
          "File: crypto/rsrsa_gen.c -> crypto/rsa/rsa_gen.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "78:     if (BN_copy(rsa->e, e_value) == NULL)",
          "79:         goto err;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dff827da751525b0e32ecb59a1d382b03f34a4de",
      "candidate_info": {
        "commit_hash": "dff827da751525b0e32ecb59a1d382b03f34a4de",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/dff827da751525b0e32ecb59a1d382b03f34a4de",
        "files": [
          "apps/s_cb.c"
        ],
        "message": "Make -xcert work again.\n\nWhen a certificate is prepended update the list pointer.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2628)\n(cherry picked from commit 52f4840cb237cc37cad5eac8328828cf3d3e1049)",
        "before_after_code_files": [
          "apps/s_cb.c||apps/s_cb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/s_cb.c||apps/s_cb.c": [
          "File: apps/s_cb.c -> apps/s_cb.c"
        ]
      }
    }
  ]
}