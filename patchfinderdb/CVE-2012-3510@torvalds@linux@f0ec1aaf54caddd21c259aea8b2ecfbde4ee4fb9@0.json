{
  "cve_id": "CVE-2012-3510",
  "cve_desc": "Use-after-free vulnerability in the xacct_add_tsk function in kernel/tsacct.c in the Linux kernel before 2.6.19 allows local users to obtain potentially sensitive information from kernel memory or cause a denial of service (system crash) via a taskstats TASKSTATS_CMD_ATTR_PID command.",
  "repo": "torvalds/linux",
  "patch_hash": "f0ec1aaf54caddd21c259aea8b2ecfbde4ee4fb9",
  "patch_info": {
    "commit_hash": "f0ec1aaf54caddd21c259aea8b2ecfbde4ee4fb9",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/f0ec1aaf54caddd21c259aea8b2ecfbde4ee4fb9",
    "files": [
      "kernel/tsacct.c"
    ],
    "message": "[PATCH] xacct_add_tsk: fix pure theoretical ->mm use-after-free\n\nParanoid fix. The task can free its ->mm after the 'if (p->mm)' check.\n\nSigned-off-by: Oleg Nesterov <oleg@tv-sign.ru>\nCc: Shailabh Nagar <nagar@watson.ibm.com>\nCc: Balbir Singh <balbir@in.ibm.com>\nCc: Jay Lan <jlan@sgi.com>\nSigned-off-by: Andrew Morton <akpm@osdl.org>\nSigned-off-by: Linus Torvalds <torvalds@osdl.org>",
    "before_after_code_files": [
      "kernel/tsacct.c||kernel/tsacct.c"
    ]
  },
  "patch_diff": {
    "kernel/tsacct.c||kernel/tsacct.c": [
      "File: kernel/tsacct.c -> kernel/tsacct.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "81: void xacct_add_tsk(struct taskstats *stats, struct task_struct *p)",
      "82: {",
      "84:  stats->coremem = jiffies_to_usecs(p->acct_rss_mem1) * PAGE_SIZE / MB;",
      "85:  stats->virtmem = jiffies_to_usecs(p->acct_vm_mem1) * PAGE_SIZE / MB;",
      "90:  }",
      "91:  stats->read_char = p->rchar;",
      "92:  stats->write_char = p->wchar;",
      "",
      "[Removed Lines]",
      "86:  if (p->mm) {",
      "88:   stats->hiwater_rss   = p->mm->hiwater_rss * PAGE_SIZE / KB;",
      "89:   stats->hiwater_vm    = p->mm->hiwater_vm * PAGE_SIZE / KB;",
      "",
      "[Added Lines]",
      "83:  struct mm_struct *mm;",
      "88:  mm = get_task_mm(p);",
      "89:  if (mm) {",
      "91:   stats->hiwater_rss   = mm->hiwater_rss * PAGE_SIZE / KB;",
      "92:   stats->hiwater_vm    = mm->hiwater_vm * PAGE_SIZE / KB;",
      "93:   mmput(mm);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "db5fed26b2e0beed939b773dd5896077a1794d65",
      "candidate_info": {
        "commit_hash": "db5fed26b2e0beed939b773dd5896077a1794d65",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/db5fed26b2e0beed939b773dd5896077a1794d65",
        "files": [
          "Documentation/accounting/taskstats-struct.txt",
          "include/linux/sched.h",
          "include/linux/taskstats.h",
          "kernel/tsacct.c"
        ],
        "message": "[PATCH] csa accounting taskstats update\n\nChangeLog:\n   Feedbacks from Andrew Morton:\n   - define TS_COMM_LEN to 32\n   - change acct_stimexpd field of task_struct to be of\n     cputime_t, which is to be used to save the tsk->stime\n     of last timer interrupt update.\n   - a new Documentation/accounting/taskstats-struct.txt\n     to describe fields of taskstats struct.\n\n   Feedback from Balbir Singh:\n   - keep the stime of a task to be zero when both stime\n     and utime are zero as recoreded in task_struct.\n\n   Misc:\n   - convert accumulated RSS/VM from platform dependent\n     pages-ticks to MBytes-usecs in the kernel\n\nCc: Shailabh Nagar <nagar@watson.ibm.com>\nCc: Balbir Singh <balbir@in.ibm.com>\nCc: Jes Sorensen <jes@sgi.com>\nCc: Chris Sturtivant <csturtiv@sgi.com>\nCc: Tony Ernst <tee@sgi.com>\nCc: Guillaume Thouvenin <guillaume.thouvenin@bull.net>\nSigned-off-by: Andrew Morton <akpm@osdl.org>\nSigned-off-by: Linus Torvalds <torvalds@osdl.org>",
        "before_after_code_files": [
          "include/linux/sched.h||include/linux/sched.h",
          "include/linux/taskstats.h||include/linux/taskstats.h",
          "kernel/tsacct.c||kernel/tsacct.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "kernel/tsacct.c||kernel/tsacct.c"
          ],
          "candidate": [
            "kernel/tsacct.c||kernel/tsacct.c"
          ]
        }
      },
      "candidate_diff": {
        "include/linux/sched.h||include/linux/sched.h": [
          "File: include/linux/sched.h -> include/linux/sched.h"
        ],
        "include/linux/taskstats.h||include/linux/taskstats.h": [
          "File: include/linux/taskstats.h -> include/linux/taskstats.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: #define TASKSTATS_VERSION 2",
          "38: struct taskstats {",
          "41:  __u16 version;",
          "",
          "[Removed Lines]",
          "35: #define TS_COMM_LEN  16 /* should sync up with TASK_COMM_LEN",
          "",
          "[Added Lines]",
          "35: #define TS_COMM_LEN  32 /* should be >= TASK_COMM_LEN",
          "",
          "---------------"
        ],
        "kernel/tsacct.c||kernel/tsacct.c": [
          "File: kernel/tsacct.c -> kernel/tsacct.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: #include <linux/sched.h>",
          "21: #include <linux/tsacct_kern.h>",
          "22: #include <linux/acct.h>",
          "25: #define USEC_PER_TICK (USEC_PER_SEC/HZ)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: #include <linux/jiffies.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "62:  stats->ac_stime  = cputime_to_msecs(tsk->stime) * USEC_PER_MSEC;",
          "63:  stats->ac_minflt = tsk->min_flt;",
          "64:  stats->ac_majflt = tsk->maj_flt;",
          "70:  strncpy(stats->ac_comm, tsk->comm, sizeof(stats->ac_comm));",
          "71: }",
          "74: #ifdef CONFIG_TASK_XACCT",
          "78: void xacct_add_tsk(struct taskstats *stats, struct task_struct *p)",
          "79: {",
          "82:  if (p->mm) {",
          "85:  }",
          "86:  stats->read_char = p->rchar;",
          "87:  stats->write_char = p->wchar;",
          "88:  stats->read_syscalls = p->syscr;",
          "89:  stats->write_syscalls = p->syscw;",
          "90: }",
          "",
          "[Removed Lines]",
          "66:  if ((stats->ac_utime == 0) && (stats->ac_stime == 0)) {",
          "67:   stats->ac_stime = 1;",
          "68:  }",
          "80:  stats->acct_rss_mem1 = p->acct_rss_mem1;",
          "81:  stats->acct_vm_mem1  = p->acct_vm_mem1;",
          "83:   stats->hiwater_rss   = p->mm->hiwater_rss;",
          "84:   stats->hiwater_vm    = p->mm->hiwater_vm;",
          "",
          "[Added Lines]",
          "73: #define KB 1024",
          "74: #define MB (1024*KB)",
          "81:  stats->coremem = jiffies_to_usecs(p->acct_rss_mem1) * PAGE_SIZE / MB;",
          "82:  stats->virtmem = jiffies_to_usecs(p->acct_vm_mem1) * PAGE_SIZE / MB;",
          "85:   stats->hiwater_rss   = p->mm->hiwater_rss * PAGE_SIZE / KB;",
          "86:   stats->hiwater_vm    = p->mm->hiwater_vm * PAGE_SIZE / KB;",
          "93: #undef KB",
          "94: #undef MB",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "97: void acct_update_integrals(struct task_struct *tsk)",
          "98: {",
          "99:  if (likely(tsk->mm)) {",
          "103:   if (delta == 0)",
          "104:    return;",
          "",
          "[Removed Lines]",
          "100:   long delta =",
          "101:    cputime_to_jiffies(tsk->stime) - tsk->acct_stimexpd;",
          "",
          "[Added Lines]",
          "103:   long delta = cputime_to_jiffies(",
          "104:    cputime_sub(tsk->stime, tsk->acct_stimexpd));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9acc1853519a0473620d424105f9d49ea5b4e62e",
      "candidate_info": {
        "commit_hash": "9acc1853519a0473620d424105f9d49ea5b4e62e",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/9acc1853519a0473620d424105f9d49ea5b4e62e",
        "files": [
          "include/linux/taskstats.h",
          "include/linux/tsacct_kern.h",
          "init/Kconfig",
          "kernel/taskstats.c",
          "kernel/tsacct.c"
        ],
        "message": "[PATCH] csa: Extended system accounting over taskstats\n\nAdd extended system accounting handling over taskstats interface.  A\nCONFIG_TASK_XACCT flag is created to enable the extended accounting code.\n\nSigned-off-by: Jay Lan <jlan@sgi.com>\nCc: Shailabh Nagar <nagar@watson.ibm.com>\nCc: Balbir Singh <balbir@in.ibm.com>\nCc: Jes Sorensen <jes@sgi.com>\nCc: Chris Sturtivant <csturtiv@sgi.com>\nCc: Tony Ernst <tee@sgi.com>\nCc: Guillaume Thouvenin <guillaume.thouvenin@bull.net>\nSigned-off-by: Andrew Morton <akpm@osdl.org>\nSigned-off-by: Linus Torvalds <torvalds@osdl.org>",
        "before_after_code_files": [
          "include/linux/taskstats.h||include/linux/taskstats.h",
          "include/linux/tsacct_kern.h||include/linux/tsacct_kern.h",
          "kernel/taskstats.c||kernel/taskstats.c",
          "kernel/tsacct.c||kernel/tsacct.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "kernel/tsacct.c||kernel/tsacct.c"
          ],
          "candidate": [
            "kernel/tsacct.c||kernel/tsacct.c"
          ]
        }
      },
      "candidate_diff": {
        "include/linux/taskstats.h||include/linux/taskstats.h": [
          "File: include/linux/taskstats.h -> include/linux/taskstats.h"
        ],
        "include/linux/tsacct_kern.h||include/linux/tsacct_kern.h": [
          "File: include/linux/tsacct_kern.h -> include/linux/tsacct_kern.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: {}",
          "19: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: #ifdef CONFIG_TASK_XACCT",
          "20: extern void xacct_add_tsk(struct taskstats *stats, struct task_struct *p);",
          "21: #else",
          "22: static inline void xacct_add_tsk(struct taskstats *stats, struct task_struct *p)",
          "23: {}",
          "",
          "---------------"
        ],
        "kernel/taskstats.c||kernel/taskstats.c": [
          "File: kernel/taskstats.c -> kernel/taskstats.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: #include <linux/taskstats_kern.h>",
          "21: #include <linux/tsacct_kern.h>",
          "22: #include <linux/delayacct.h>",
          "23: #include <linux/cpumask.h>",
          "24: #include <linux/percpu.h>",
          "25: #include <net/genetlink.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: #include <linux/tsacct_kern.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "204:  stats->version = TASKSTATS_VERSION;",
          "205:  bacct_add_tsk(stats, tsk);",
          "208:  put_task_struct(tsk);",
          "209:  return rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "209:  xacct_add_tsk(stats, tsk);",
          "",
          "---------------"
        ],
        "kernel/tsacct.c||kernel/tsacct.c": [
          "File: kernel/tsacct.c -> kernel/tsacct.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:  strncpy(stats->ac_comm, tsk->comm, sizeof(stats->ac_comm));",
          "71: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74: #ifdef CONFIG_TASK_XACCT",
          "78: void xacct_add_tsk(struct taskstats *stats, struct task_struct *p)",
          "79: {",
          "80:  stats->acct_rss_mem1 = p->acct_rss_mem1;",
          "81:  stats->acct_vm_mem1  = p->acct_vm_mem1;",
          "82:  if (p->mm) {",
          "83:   stats->hiwater_rss   = p->mm->hiwater_rss;",
          "84:   stats->hiwater_vm    = p->mm->hiwater_vm;",
          "85:  }",
          "86:  stats->read_char = p->rchar;",
          "87:  stats->write_char = p->wchar;",
          "88:  stats->read_syscalls = p->syscr;",
          "89:  stats->write_syscalls = p->syscw;",
          "90: }",
          "91: #endif",
          "",
          "---------------"
        ]
      }
    }
  ]
}