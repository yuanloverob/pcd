{
  "cve_id": "CVE-2020-10543",
  "cve_desc": "Perl before 5.30.3 on 32-bit platforms allows a heap-based buffer overflow because nested regular expression quantifiers have an integer overflow.",
  "repo": "perl/perl5",
  "patch_hash": "897d1f7fd515b828e4b198d8b8bef76c6faf03ed",
  "patch_info": {
    "commit_hash": "897d1f7fd515b828e4b198d8b8bef76c6faf03ed",
    "repo": "perl/perl5",
    "commit_url": "https://github.com/perl/perl5/commit/897d1f7fd515b828e4b198d8b8bef76c6faf03ed",
    "files": [
      "regcomp.c"
    ],
    "message": "regcomp.c: Prevent integer overflow from nested regex quantifiers.\n\n(CVE-2020-10543) On 32bit systems the size calculations for nested regular\nexpression quantifiers could overflow causing heap memory corruption.\n\nFixes: Perl/perl5-security#125\n(cherry picked from commit bfd31397db5dc1a5c5d3e0a1f753a4f89a736e71)",
    "before_after_code_files": [
      "regcomp.c||regcomp.c"
    ]
  },
  "patch_diff": {
    "regcomp.c||regcomp.c": [
      "File: regcomp.c -> regcomp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "5489:       RExC_precomp)));",
      "5490:                 }",
      "5492:   min += minnext * mincount;",
      "5493:   is_inf_internal |= deltanext == SSize_t_MAX",
      "5494:                          || (maxcount == REG_INFTY && minnext + deltanext > 0);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5492:                 if ( ( minnext > 0 && mincount >= SSize_t_MAX / minnext )",
      "5493:                     || min >= SSize_t_MAX - minnext * mincount )",
      "5494:                 {",
      "5495:                     FAIL(\"Regexp out of space\");",
      "5496:                 }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1aef74e6bc0269fcd6ad7669fcd58488ffaf736f",
      "candidate_info": {
        "commit_hash": "1aef74e6bc0269fcd6ad7669fcd58488ffaf736f",
        "repo": "perl/perl5",
        "commit_url": "https://github.com/perl/perl5/commit/1aef74e6bc0269fcd6ad7669fcd58488ffaf736f",
        "files": [
          "regcomp.c"
        ],
        "message": "regcomp.c: Prevent integer overflow from nested regex quantifiers.\n\n(CVE-2020-10543) On 32bit systems the size calculations for nested regular\nexpression quantifiers could overflow causing heap memory corruption.\n\nFixes: Perl/perl5-security#125\n(cherry picked from commit 208dea486fa24081cbc0cf05fa5a15c802e2bc68)",
        "before_after_code_files": [
          "regcomp.c||regcomp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "regcomp.c||regcomp.c"
          ],
          "candidate": [
            "regcomp.c||regcomp.c"
          ]
        }
      },
      "candidate_diff": {
        "regcomp.c||regcomp.c": [
          "File: regcomp.c -> regcomp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5181:       (void)ReREFCNT_inc(RExC_rx_sv);",
          "5182:   }",
          "5184:   min += minnext * mincount;",
          "5185:   is_inf_internal |= deltanext == SSize_t_MAX",
          "5186:                          || (maxcount == REG_INFTY && minnext + deltanext > 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5184:                 if ( ( minnext > 0 && mincount >= SSize_t_MAX / minnext )",
          "5185:                     || min >= SSize_t_MAX - minnext * mincount )",
          "5186:                 {",
          "5187:                     FAIL(\"Regexp out of space\");",
          "5188:                 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0e9563b9242a5758c6ce11daf8385b3753e9ed9c",
      "candidate_info": {
        "commit_hash": "0e9563b9242a5758c6ce11daf8385b3753e9ed9c",
        "repo": "perl/perl5",
        "commit_url": "https://github.com/perl/perl5/commit/0e9563b9242a5758c6ce11daf8385b3753e9ed9c",
        "files": [
          "regcomp.c"
        ],
        "message": "regcomp.c: Prevent integer overflow from nested regex quantifiers.\n\n(CVE-2020-10543) On 32bit systems the size calculations for nested regular\nexpression quantifiers could overflow causing heap memory corruption.\n\nFixes: Perl/perl5-security#125\n(cherry picked from commit 670c54b00a47d930431dd470e72fd7d13643e169)",
        "before_after_code_files": [
          "regcomp.c||regcomp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "regcomp.c||regcomp.c"
          ],
          "candidate": [
            "regcomp.c||regcomp.c"
          ]
        }
      },
      "candidate_diff": {
        "regcomp.c||regcomp.c": [
          "File: regcomp.c -> regcomp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5615:       RExC_precomp)));",
          "5616:                 }",
          "5618:   min += minnext * mincount;",
          "5619:   is_inf_internal |= deltanext == OPTIMIZE_INFTY",
          "5620:                          || (maxcount == REG_INFTY && minnext + deltanext > 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5618:                 if ( ( minnext > 0 && mincount >= SSize_t_MAX / minnext )",
          "5619:                     || min >= SSize_t_MAX - minnext * mincount )",
          "5620:                 {",
          "5621:                     FAIL(\"Regexp out of space\");",
          "5622:                 }",
          "",
          "---------------"
        ]
      }
    }
  ]
}