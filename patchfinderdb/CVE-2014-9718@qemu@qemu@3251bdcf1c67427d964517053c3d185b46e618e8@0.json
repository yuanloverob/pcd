{
  "cve_id": "CVE-2014-9718",
  "cve_desc": "The (1) BMDMA and (2) AHCI HBA interfaces in the IDE functionality in QEMU 1.0 through 2.1.3 have multiple interpretations of a function's return value, which allows guest OS users to cause a host OS denial of service (memory consumption or infinite loop, and system crash) via a PRDT with zero complete sectors, related to the bmdma_prepare_buf and ahci_dma_prepare_buf functions.",
  "repo": "qemu/qemu",
  "patch_hash": "3251bdcf1c67427d964517053c3d185b46e618e8",
  "patch_info": {
    "commit_hash": "3251bdcf1c67427d964517053c3d185b46e618e8",
    "repo": "qemu/qemu",
    "commit_url": "https://github.com/qemu/qemu/commit/3251bdcf1c67427d964517053c3d185b46e618e8",
    "files": [
      "hw/ide/ahci.c",
      "hw/ide/core.c",
      "hw/ide/internal.h",
      "hw/ide/macio.c",
      "hw/ide/pci.c"
    ],
    "message": "ide: Correct handling of malformed/short PRDTs\n\nThis impacts both BMDMA and AHCI HBA interfaces for IDE.\nCurrently, we confuse the difference between a PRDT having\n\"0 bytes\" and a PRDT having \"0 complete sectors.\"\n\nWhen we receive an incomplete sector, inconsistent error checking\nleads to an infinite loop wherein the call succeeds, but it\ndidn't give us enough bytes -- leading us to re-call the\nDMA chain over and over again. This leads to, in the BMDMA case,\nleaked memory for short PRDTs, and infinite loops and resource\nusage in the AHCI case.\n\nThe .prepare_buf() callback is reworked to return the number of\nbytes that it successfully prepared. 0 is a valid, non-error\nanswer that means the table was empty and described no bytes.\n-1 indicates an error.\n\nOur current implementation uses the io_buffer in IDEState to\nultimately describe the size of a prepared scatter-gather list.\nEven though the AHCI PRDT/SGList can be as large as 256GiB, the\nAHCI command header limits transactions to just 4GiB. ATA8-ACS3,\nhowever, defines the largest transaction to be an LBA48 command\nthat transfers 65,536 sectors. With a 512 byte sector size, this\nis just 32MiB.\n\nSince our current state structures use the int type to describe\nthe size of the buffer, and this state is migrated as int32, we\nare limited to describing 2GiB buffer sizes unless we change the\nmigration protocol.\n\nFor this reason, this patch begins to unify the assertions in the\nIDE pathways that the scatter-gather list provided by either the\nAHCI PRDT or the PCI BMDMA PRDs can only describe, at a maximum,\n2GiB. This should be resilient enough unless we need a sector\nsize that exceeds 32KiB.\n\nFurther, the likelihood of any guest operating system actually\nattempting to transfer this much data in a single operation is\nvery slim.\n\nTo this end, the IDEState variables have been updated to more\nexplicitly clarify our maximum supported size. Callers to the\nprepare_buf callback have been reworked to understand the new\nreturn code, and all versions of the prepare_buf callback have\nbeen adjusted accordingly.\n\nLastly, the ahci_populate_sglist helper, relied upon by the\nAHCI implementation of .prepare_buf() as well as the PCI\nimplementation of the callback have had overflow assertions\nadded to help make clear the reasonings behind the various\ntype changes.\n\n[Added %d -> %\"PRId64\" fix John sent because off_pos changed from int to\nint64_t.\n--Stefan]\n\nSigned-off-by: John Snow <jsnow@redhat.com>\nReviewed-by: Paolo Bonzini <pbonzini@redhat.com>\nMessage-id: 1414785819-26209-4-git-send-email-jsnow@redhat.com\nSigned-off-by: Stefan Hajnoczi <stefanha@redhat.com>",
    "before_after_code_files": [
      "hw/ide/ahci.c||hw/ide/ahci.c",
      "hw/ide/core.c||hw/ide/core.c",
      "hw/ide/internal.h||hw/ide/internal.h",
      "hw/ide/macio.c||hw/ide/macio.c",
      "hw/ide/pci.c||hw/ide/pci.c"
    ]
  },
  "patch_diff": {
    "hw/ide/ahci.c||hw/ide/ahci.c": [
      "File: hw/ide/ahci.c -> hw/ide/ahci.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "730:     return (le32_to_cpu(tbl->flags_size) & AHCI_PRDT_SIZE_MASK) + 1;",
      "731: }",
      "734: {",
      "735:     AHCICmdHdr *cmd = ad->cur_cmd;",
      "736:     uint32_t opts = le32_to_cpu(cmd->opts);",
      "",
      "[Removed Lines]",
      "733: static int ahci_populate_sglist(AHCIDevice *ad, QEMUSGList *sglist, int offset)",
      "",
      "[Added Lines]",
      "733: static int ahci_populate_sglist(AHCIDevice *ad, QEMUSGList *sglist,",
      "734:                                 int32_t offset)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "741:     uint8_t *prdt;",
      "742:     int i;",
      "743:     int r = 0;",
      "745:     int off_idx = -1;",
      "747:     int tbl_entry_size;",
      "748:     IDEBus *bus = &ad->port;",
      "749:     BusState *qbus = BUS(bus);",
      "751:     if (!sglist_alloc_hint) {",
      "752:         DPRINTF(ad->port_no, \"no sg list given by guest: 0x%08x\\n\", opts);",
      "753:         return -1;",
      "",
      "[Removed Lines]",
      "744:     int sum = 0;",
      "746:     int off_pos = -1;",
      "",
      "[Added Lines]",
      "745:     uint64_t sum = 0;",
      "747:     int64_t off_pos = -1;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "782:         }",
      "783:         if ((off_idx == -1) || (off_pos < 0) || (off_pos > tbl_entry_size)) {",
      "784:             DPRINTF(ad->port_no, \"%s: Incorrect offset! \"",
      "786:                             __func__, off_idx, off_pos);",
      "787:             r = -1;",
      "788:             goto out;",
      "",
      "[Removed Lines]",
      "785:                             \"off_idx: %d, off_pos: %d\\n\",",
      "",
      "[Added Lines]",
      "794:                             \"off_idx: %d, off_pos: %\"PRId64\"\\n\",",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "798:             qemu_sglist_add(sglist, le64_to_cpu(tbl[i].addr),",
      "799:                             prdt_tbl_entry_size(&tbl[i]));",
      "800:         }",
      "801:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "809:             if (sglist->size > INT32_MAX) {",
      "810:                 error_report(\"AHCI Physical Region Descriptor Table describes \"",
      "811:                              \"more than 2 GiB.\\n\");",
      "812:                 qemu_sglist_destroy(sglist);",
      "813:                 r = -1;",
      "814:                 goto out;",
      "815:             }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1144: {",
      "1145:     AHCIDevice *ad = DO_UPCAST(AHCIDevice, dma, dma);",
      "1146:     IDEState *s = &ad->port.ifs[0];",
      "1149:     s->io_buffer_size = s->sg.size;",
      "1151:     DPRINTF(ad->port_no, \"len=%#x\\n\", s->io_buffer_size);",
      "1153: }",
      "",
      "[Removed Lines]",
      "1143: static int ahci_dma_prepare_buf(IDEDMA *dma, int is_write)",
      "1148:     ahci_populate_sglist(ad, &s->sg, s->io_buffer_offset);",
      "1152:     return s->io_buffer_size != 0;",
      "",
      "[Added Lines]",
      "1159: static int32_t ahci_dma_prepare_buf(IDEDMA *dma, int is_write)",
      "1164:     if (ahci_populate_sglist(ad, &s->sg, s->io_buffer_offset) == -1) {",
      "1165:         DPRINTF(ad->port_no, \"ahci_dma_prepare_buf failed.\\n\");",
      "1166:         return -1;",
      "1167:     }",
      "1171:     return s->io_buffer_size;",
      "",
      "---------------"
    ],
    "hw/ide/core.c||hw/ide/core.c": [
      "File: hw/ide/core.c -> hw/ide/core.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "731:     n = s->nsector;",
      "732:     s->io_buffer_index = 0;",
      "733:     s->io_buffer_size = n * 512;",
      "737:         s->status = READY_STAT | SEEK_STAT;",
      "738:         goto eot;",
      "739:     }",
      "",
      "[Removed Lines]",
      "734:     if (s->bus->dma->ops->prepare_buf(s->bus->dma, ide_cmd_is_read(s)) == 0) {",
      "",
      "[Added Lines]",
      "734:     if (s->bus->dma->ops->prepare_buf(s->bus->dma, ide_cmd_is_read(s)) < 512) {",
      "738:         dma_buf_commit(s, 0);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2313:     return 0;",
      "2314: }",
      "2316: static void ide_nop_restart(void *opaque, int x, RunState y)",
      "2317: {",
      "2318: }",
      "2320: static const IDEDMAOps ide_dma_nop_ops = {",
      "2322:     .rw_buf         = ide_nop_int,",
      "2323:     .set_unit       = ide_nop_int,",
      "2324:     .restart_cb     = ide_nop_restart,",
      "",
      "[Removed Lines]",
      "2321:     .prepare_buf    = ide_nop_int,",
      "",
      "[Added Lines]",
      "2317: static int32_t ide_nop_int32(IDEDMA *dma, int x)",
      "2318: {",
      "2319:     return 0;",
      "2320: }",
      "2327:     .prepare_buf    = ide_nop_int32,",
      "",
      "---------------"
    ],
    "hw/ide/internal.h||hw/ide/internal.h": [
      "File: hw/ide/internal.h -> hw/ide/internal.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "322: typedef void DMAStartFunc(IDEDMA *, IDEState *, BlockCompletionFunc *);",
      "323: typedef void DMAVoidFunc(IDEDMA *);",
      "324: typedef int DMAIntFunc(IDEDMA *, int);",
      "325: typedef void DMAu32Func(IDEDMA *, uint32_t);",
      "326: typedef void DMAStopFunc(IDEDMA *, bool);",
      "327: typedef void DMARestartFunc(void *, int, RunState);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "325: typedef int32_t DMAInt32Func(IDEDMA *, int);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "385:     uint8_t cdrom_changed;",
      "386:     int packet_transfer_size;",
      "387:     int elementary_transfer_size;",
      "389:     int lba;",
      "390:     int cd_sector_size;",
      "",
      "[Removed Lines]",
      "388:     int io_buffer_index;",
      "",
      "[Added Lines]",
      "389:     int32_t io_buffer_index;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "394:     struct iovec iov;",
      "395:     QEMUIOVector qiov;",
      "399:     QEMUSGList sg;",
      "",
      "[Removed Lines]",
      "397:     int io_buffer_offset;",
      "398:     int io_buffer_size;",
      "",
      "[Added Lines]",
      "398:     int32_t io_buffer_offset;",
      "399:     int32_t io_buffer_size;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "405:     uint8_t *io_buffer;",
      "407:     int32_t io_buffer_total_len;",
      "410:     uint8_t end_transfer_fn_idx;",
      "",
      "[Removed Lines]",
      "408:     int cur_io_buffer_offset;",
      "409:     int cur_io_buffer_len;",
      "",
      "[Added Lines]",
      "409:     int32_t cur_io_buffer_offset;",
      "410:     int32_t cur_io_buffer_len;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "430: struct IDEDMAOps {",
      "431:     DMAStartFunc *start_dma;",
      "432:     DMAVoidFunc *start_transfer;",
      "434:     DMAu32Func *commit_buf;",
      "435:     DMAIntFunc *rw_buf;",
      "436:     DMAIntFunc *set_unit;",
      "",
      "[Removed Lines]",
      "433:     DMAIntFunc *prepare_buf;",
      "",
      "[Added Lines]",
      "434:     DMAInt32Func *prepare_buf;",
      "",
      "---------------"
    ],
    "hw/ide/macio.c||hw/ide/macio.c": [
      "File: hw/ide/macio.c -> hw/ide/macio.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "553:     return 0;",
      "554: }",
      "556: static void ide_nop_restart(void *opaque, int x, RunState y)",
      "557: {",
      "558: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "556: static int32_t ide_nop_int32(IDEDMA *dma, int x)",
      "557: {",
      "558:     return 0;",
      "559: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "570: static const IDEDMAOps dbdma_ops = {",
      "571:     .start_dma      = ide_dbdma_start,",
      "573:     .rw_buf         = ide_nop_int,",
      "574:     .set_unit       = ide_nop_int,",
      "575:     .restart_cb     = ide_nop_restart,",
      "",
      "[Removed Lines]",
      "572:     .prepare_buf    = ide_nop_int,",
      "",
      "[Added Lines]",
      "577:     .prepare_buf    = ide_nop_int32,",
      "",
      "---------------"
    ],
    "hw/ide/pci.c||hw/ide/pci.c": [
      "File: hw/ide/pci.c -> hw/ide/pci.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "28: #include <hw/isa/isa.h>",
      "29: #include \"sysemu/block-backend.h\"",
      "30: #include \"sysemu/dma.h\"",
      "32: #include <hw/ide/pci.h>",
      "34: #define BMDMA_PAGE_SIZE 4096",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31: #include \"qemu/error-report.h\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "55:     }",
      "56: }",
      "60: {",
      "61:     BMDMAState *bm = DO_UPCAST(BMDMAState, dma, dma);",
      "62:     IDEState *s = bmdma_active_if(bm);",
      "",
      "[Removed Lines]",
      "59: static int bmdma_prepare_buf(IDEDMA *dma, int is_write)",
      "",
      "[Added Lines]",
      "62: static int32_t bmdma_prepare_buf(IDEDMA *dma, int is_write)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "74:         if (bm->cur_prd_len == 0) {",
      "76:             if (bm->cur_prd_last ||",
      "79:             pci_dma_read(pci_dev, bm->cur_addr, &prd, 8);",
      "80:             bm->cur_addr += 8;",
      "81:             prd.addr = le32_to_cpu(prd.addr);",
      "",
      "[Removed Lines]",
      "77:                 (bm->cur_addr - bm->addr) >= BMDMA_PAGE_SIZE)",
      "78:                 return s->io_buffer_size != 0;",
      "",
      "[Added Lines]",
      "80:                 (bm->cur_addr - bm->addr) >= BMDMA_PAGE_SIZE) {",
      "81:                 return s->io_buffer_size;",
      "82:             }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "90:         l = bm->cur_prd_len;",
      "91:         if (l > 0) {",
      "92:             qemu_sglist_add(&s->sg, bm->cur_prd_addr, l);",
      "93:             bm->cur_prd_addr += l;",
      "94:             bm->cur_prd_len -= l;",
      "95:             s->io_buffer_size += l;",
      "96:         }",
      "97:     }",
      "99: }",
      "",
      "[Removed Lines]",
      "98:     return 1;",
      "",
      "[Added Lines]",
      "101:             if (s->sg.size > INT32_MAX) {",
      "102:                 error_report(\"IDE: sglist describes more than 2GiB.\\n\");",
      "103:                 break;",
      "104:             }",
      "111:     qemu_sglist_destroy(&s->sg);",
      "112:     s->io_buffer_size = 0;",
      "113:     return -1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c82bd3c893825fc76af3634f5461f5eabd94e9df",
      "candidate_info": {
        "commit_hash": "c82bd3c893825fc76af3634f5461f5eabd94e9df",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/c82bd3c893825fc76af3634f5461f5eabd94e9df",
        "files": [
          "hw/ide/ahci.c",
          "hw/ide/ahci.h"
        ],
        "message": "ahci: add cmd header to ncq transfer state\n\nWhile the rest of the AHCI device can rely on a single bookmarked\npointer for the AHCI Command Header currently being processed, NCQ\nis asynchronous and may have many commands in flight simultaneously.\n\nAdd a cmdh pointer to the ncq_tfs object and make the sglist prepare\nfunction take an AHCICmdHeader pointer so we can be explicit about\nwhere we'd like to build SGlists from.\n\nSigned-off-by: John Snow <jsnow@redhat.com>\nReviewed-by: Stefan Hajnoczi <stefanha@redhat.com>\nMessage-id: 1435767578-32743-11-git-send-email-jsnow@redhat.com",
        "before_after_code_files": [
          "hw/ide/ahci.c||hw/ide/ahci.c",
          "hw/ide/ahci.h||hw/ide/ahci.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "hw/ide/ahci.c||hw/ide/ahci.c"
          ],
          "candidate": [
            "hw/ide/ahci.c||hw/ide/ahci.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/ide/ahci.c||hw/ide/ahci.c": [
          "File: hw/ide/ahci.c -> hw/ide/ahci.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "833: }",
          "835: static int ahci_populate_sglist(AHCIDevice *ad, QEMUSGList *sglist,",
          "837: {",
          "839:     uint16_t opts = le16_to_cpu(cmd->opts);",
          "840:     uint16_t prdtl = le16_to_cpu(cmd->prdtl);",
          "841:     uint64_t cfis_addr = le64_to_cpu(cmd->tbl_addr);",
          "",
          "[Removed Lines]",
          "836:                                 int64_t limit, int32_t offset)",
          "838:     AHCICmdHdr *cmd = ad->cur_cmd;",
          "",
          "[Added Lines]",
          "836:                                 AHCICmdHdr *cmd, int64_t limit, int32_t offset)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1058:     ncq_tfs->used = 1;",
          "1059:     ncq_tfs->drive = ad;",
          "1060:     ncq_tfs->slot = slot;",
          "1061:     ncq_tfs->cmd = ncq_fis->command;",
          "1062:     ncq_tfs->lba = ((uint64_t)ncq_fis->lba5 << 40) |",
          "1063:                    ((uint64_t)ncq_fis->lba4 << 32) |",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1060:     ncq_tfs->cmdh = &((AHCICmdHdr *)ad->lst)[slot];",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1092:         ncq_tfs->sector_count = 0x10000;",
          "1093:     }",
          "1094:     size = ncq_tfs->sector_count * 512;",
          "1097:     if (ncq_tfs->sglist.size < size) {",
          "1098:         error_report(\"ahci: PRDT length for NCQ command (0x%zx) \"",
          "",
          "[Removed Lines]",
          "1095:     ahci_populate_sglist(ad, &ncq_tfs->sglist, size, 0);",
          "",
          "[Added Lines]",
          "1095:     ahci_populate_sglist(ad, &ncq_tfs->sglist, ncq_tfs->cmdh, size, 0);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1362:     AHCIDevice *ad = DO_UPCAST(AHCIDevice, dma, dma);",
          "1363:     IDEState *s = &ad->port.ifs[0];",
          "1366:         DPRINTF(ad->port_no, \"ahci_dma_prepare_buf failed.\\n\");",
          "1367:         return -1;",
          "1368:     }",
          "",
          "[Removed Lines]",
          "1365:     if (ahci_populate_sglist(ad, &s->sg, limit, s->io_buffer_offset) == -1) {",
          "",
          "[Added Lines]",
          "1365:     if (ahci_populate_sglist(ad, &s->sg, ad->cur_cmd,",
          "1366:                              limit, s->io_buffer_offset) == -1) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1397:     uint8_t *p = s->io_buffer + s->io_buffer_index;",
          "1398:     int l = s->io_buffer_size - s->io_buffer_index;",
          "1401:         return 0;",
          "1402:     }",
          "",
          "[Removed Lines]",
          "1400:     if (ahci_populate_sglist(ad, &s->sg, l, s->io_buffer_offset)) {",
          "",
          "[Added Lines]",
          "1401:     if (ahci_populate_sglist(ad, &s->sg, ad->cur_cmd, l, s->io_buffer_offset)) {",
          "",
          "---------------"
        ],
        "hw/ide/ahci.h||hw/ide/ahci.h": [
          "File: hw/ide/ahci.h -> hw/ide/ahci.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "254: typedef struct NCQTransferState {",
          "255:     AHCIDevice *drive;",
          "256:     BlockAIOCB *aiocb;",
          "257:     QEMUSGList sglist;",
          "258:     BlockAcctCookie acct;",
          "259:     uint32_t sector_count;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "257:     AHCICmdHdr *cmdh;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "81b07353c5e7ae9ae9360c357b7b4732b1cb03b4",
      "candidate_info": {
        "commit_hash": "81b07353c5e7ae9ae9360c357b7b4732b1cb03b4",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/81b07353c5e7ae9ae9360c357b7b4732b1cb03b4",
        "files": [
          "exec.c",
          "hw/ide/pci.c",
          "hw/microblaze/boot.c",
          "migration/rdma.c",
          "target-s390x/kvm.c",
          "trace/control.c"
        ],
        "message": "Remove superfluous '\\n' around error_report()\n\nSigned-off-by: Gonglei <arei.gonglei@huawei.com>\nReviewed-by: Markus Armbruster <armbru@redhat.com>\nSigned-off-by: Michael Tokarev <mjt@tls.msk.ru>",
        "before_after_code_files": [
          "exec.c||exec.c",
          "hw/ide/pci.c||hw/ide/pci.c",
          "hw/microblaze/boot.c||hw/microblaze/boot.c",
          "migration/rdma.c||migration/rdma.c",
          "target-s390x/kvm.c||target-s390x/kvm.c",
          "trace/control.c||trace/control.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "hw/ide/pci.c||hw/ide/pci.c"
          ],
          "candidate": [
            "hw/ide/pci.c||hw/ide/pci.c"
          ]
        }
      },
      "candidate_diff": {
        "exec.c||exec.c": [
          "File: exec.c -> exec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1189: error:",
          "1190:     if (mem_prealloc) {",
          "1192:         exit(1);",
          "1193:     }",
          "1194:     return NULL;",
          "",
          "[Removed Lines]",
          "1191:         error_report(\"%s\\n\", error_get_pretty(*errp));",
          "",
          "[Added Lines]",
          "1191:         error_report(\"%s\", error_get_pretty(*errp));",
          "",
          "---------------"
        ],
        "hw/ide/pci.c||hw/ide/pci.c": [
          "File: hw/ide/pci.c -> hw/ide/pci.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "101:             if (s->sg.size > INT32_MAX) {",
          "103:                 break;",
          "104:             }",
          "105:             bm->cur_prd_addr += l;",
          "",
          "[Removed Lines]",
          "102:                 error_report(\"IDE: sglist describes more than 2GiB.\\n\");",
          "",
          "[Added Lines]",
          "102:                 error_report(\"IDE: sglist describes more than 2GiB.\");",
          "",
          "---------------"
        ],
        "hw/microblaze/boot.c||hw/microblaze/boot.c": [
          "File: hw/microblaze/boot.c -> hw/microblaze/boot.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "185:                                                   ram_size - initrd_offset);",
          "186:             }",
          "187:             if (initrd_size < 0) {",
          "189:                              initrd_filename);",
          "190:                 exit(EXIT_FAILURE);",
          "191:             }",
          "",
          "[Removed Lines]",
          "188:                 error_report(\"qemu: could not load initrd '%s'\\n\",",
          "",
          "[Added Lines]",
          "188:                 error_report(\"qemu: could not load initrd '%s'\",",
          "",
          "---------------"
        ],
        "migration/rdma.c||migration/rdma.c": [
          "File: migration/rdma.c -> migration/rdma.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1626:         return -EIO;",
          "1627:     }",
          "1628:     if (head->len > RDMA_CONTROL_MAX_BUFFER - sizeof(*head)) {",
          "1630:         return -EINVAL;",
          "1631:     }",
          "1632:     if (sizeof(*head) + head->len != byte_len) {",
          "",
          "[Removed Lines]",
          "1629:         error_report(\"too long length: %d\\n\", head->len);",
          "",
          "[Added Lines]",
          "1629:         error_report(\"too long length: %d\", head->len);",
          "",
          "---------------"
        ],
        "target-s390x/kvm.c||target-s390x/kvm.c": [
          "File: target-s390x/kvm.c -> target-s390x/kvm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "213:     if (kvm_vcpu_ioctl(cs, KVM_S390_INITIAL_RESET, NULL)) {",
          "215:     }",
          "216: }",
          "",
          "[Removed Lines]",
          "214:         error_report(\"Initial CPU reset failed on CPU %i\\n\", cs->cpu_index);",
          "",
          "[Added Lines]",
          "214:         error_report(\"Initial CPU reset failed on CPU %i\", cs->cpu_index);",
          "",
          "---------------"
        ],
        "trace/control.c||trace/control.c": [
          "File: trace/control.c -> trace/control.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "126:                     error_report(\"WARNING: trace event '%s' does not exist\",",
          "127:                                  line_ptr);",
          "128:                 } else if (!trace_event_get_state_static(ev)) {",
          "130:                                  line_ptr);",
          "131:                 } else {",
          "132:                     trace_event_set_state_dynamic(ev, enable);",
          "",
          "[Removed Lines]",
          "129:                     error_report(\"WARNING: trace event '%s' is not traceable\\n\",",
          "",
          "[Added Lines]",
          "129:                     error_report(\"WARNING: trace event '%s' is not traceable\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "594fd21102aa7b7dce1509b31944d10836108c6b",
      "candidate_info": {
        "commit_hash": "594fd21102aa7b7dce1509b31944d10836108c6b",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/594fd21102aa7b7dce1509b31944d10836108c6b",
        "files": [
          "hw/ide/ahci.c",
          "hw/vfio/platform.c",
          "net/tap-linux.c"
        ],
        "message": "trivial: remove trailing newline from error_report\n\nMinor cleanup.\n\nSigned-off-by: John Snow <jsnow@redhat.com>\nReviewed-by: Gonglei <arei.gonglei@huawei.com>\nReviewed-by: Stefan Hajnoczi <stefanha@redhat.com>\nSigned-off-by: Michael Tokarev <mjt@tls.msk.ru>",
        "before_after_code_files": [
          "hw/ide/ahci.c||hw/ide/ahci.c",
          "hw/vfio/platform.c||hw/vfio/platform.c",
          "net/tap-linux.c||net/tap-linux.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "hw/ide/ahci.c||hw/ide/ahci.c"
          ],
          "candidate": [
            "hw/ide/ahci.c||hw/ide/ahci.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/ide/ahci.c||hw/ide/ahci.c": [
          "File: hw/ide/ahci.c -> hw/ide/ahci.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "876:                                 limit - sglist->size));",
          "877:             if (sglist->size > INT32_MAX) {",
          "878:                 error_report(\"AHCI Physical Region Descriptor Table describes \"",
          "880:                 qemu_sglist_destroy(sglist);",
          "881:                 r = -1;",
          "882:                 goto out;",
          "",
          "[Removed Lines]",
          "879:                              \"more than 2 GiB.\\n\");",
          "",
          "[Added Lines]",
          "879:                              \"more than 2 GiB.\");",
          "",
          "---------------"
        ],
        "hw/vfio/platform.c||hw/vfio/platform.c": [
          "File: hw/vfio/platform.c -> hw/vfio/platform.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "235:     ret = event_notifier_test_and_clear(&intp->interrupt);",
          "236:     if (!ret) {",
          "238:                      event_notifier_get_fd(&intp->interrupt), ret);",
          "239:     }",
          "",
          "[Removed Lines]",
          "237:         error_report(\"Error when clearing fd=%d (ret = %d)\\n\",",
          "",
          "[Added Lines]",
          "237:         error_report(\"Error when clearing fd=%d (ret = %d)\",",
          "",
          "---------------"
        ],
        "net/tap-linux.c||net/tap-linux.c": [
          "File: net/tap-linux.c -> net/tap-linux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "211:         return -errno;",
          "212:     }",
          "215:     abort();",
          "216: }",
          "",
          "[Removed Lines]",
          "214:     error_report(\"TUNSETVNETLE ioctl() failed: %s.\\n\", strerror(errno));",
          "",
          "[Added Lines]",
          "214:     error_report(\"TUNSETVNETLE ioctl() failed: %s.\", strerror(errno));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "228:         return -errno;",
          "229:     }",
          "232:     abort();",
          "233: }",
          "",
          "[Removed Lines]",
          "231:     error_report(\"TUNSETVNETBE ioctl() failed: %s.\\n\", strerror(errno));",
          "",
          "[Added Lines]",
          "231:     error_report(\"TUNSETVNETBE ioctl() failed: %s.\", strerror(errno));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9fbf0fa81fca8f527669dd4fa72662d66e7d6329",
      "candidate_info": {
        "commit_hash": "9fbf0fa81fca8f527669dd4fa72662d66e7d6329",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/9fbf0fa81fca8f527669dd4fa72662d66e7d6329",
        "files": [
          "hw/ide/ahci.c",
          "hw/ide/internal.h",
          "hw/ide/pci.c"
        ],
        "message": "ide: remove hardcoded 2GiB transactional limit\n\nNot that you can request a >2GiB transaction, but that's why checking\nfor it makes no sense anymore.\n\nWith the newer 'limit' parameter to prepare_buf, we no longer need a\nstatic limit. The maximum limit is still 2GiB, but the limit parameter\nis set to the current transaction size, which cannot surpass 32MiB\n(512 * 65536). If the PRDT surpasses the transactional size, then,\nwe'll just carry out the normative underflow handling pathways instead\nof needing an extra, strange pathway that worries about hitting some\nlogistical cap for the largest sglist we can support -- we'll never\neven attempt to build one that big anymore.\n\nReported-by: Kevin Wolf <kwolf@redhat.com>\nSigned-off-by: John Snow <jsnow@redhat.com>\nAcked-by: Stefan Hajnoczi <stefanha@redhat.com>\nMessage-id: 1445902682-20051-1-git-send-email-jsnow@redhat.com",
        "before_after_code_files": [
          "hw/ide/ahci.c||hw/ide/ahci.c",
          "hw/ide/internal.h||hw/ide/internal.h",
          "hw/ide/pci.c||hw/ide/pci.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "hw/ide/ahci.c||hw/ide/ahci.c",
            "hw/ide/internal.h||hw/ide/internal.h",
            "hw/ide/pci.c||hw/ide/pci.c"
          ],
          "candidate": [
            "hw/ide/ahci.c||hw/ide/ahci.c",
            "hw/ide/internal.h||hw/ide/internal.h",
            "hw/ide/pci.c||hw/ide/pci.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/ide/ahci.c||hw/ide/ahci.c": [
          "File: hw/ide/ahci.c -> hw/ide/ahci.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "804:     return (le32_to_cpu(tbl->flags_size) & AHCI_PRDT_SIZE_MASK) + 1;",
          "805: }",
          "807: static int ahci_populate_sglist(AHCIDevice *ad, QEMUSGList *sglist,",
          "809: {",
          "810:     uint16_t opts = le16_to_cpu(cmd->opts);",
          "811:     uint16_t prdtl = le16_to_cpu(cmd->prdtl);",
          "",
          "[Removed Lines]",
          "808:                                 AHCICmdHdr *cmd, int64_t limit, int32_t offset)",
          "",
          "[Added Lines]",
          "821:                                 AHCICmdHdr *cmd, int64_t limit, uint64_t offset)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "880:             qemu_sglist_add(sglist, le64_to_cpu(tbl[i].addr),",
          "881:                             MIN(prdt_tbl_entry_size(&tbl[i]),",
          "882:                                 limit - sglist->size));",
          "890:         }",
          "891:     }",
          "",
          "[Removed Lines]",
          "883:             if (sglist->size > INT32_MAX) {",
          "884:                 error_report(\"AHCI Physical Region Descriptor Table describes \"",
          "885:                              \"more than 2 GiB.\");",
          "886:                 qemu_sglist_destroy(sglist);",
          "887:                 r = -1;",
          "888:                 goto out;",
          "889:             }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hw/ide/internal.h||hw/ide/internal.h": [
          "File: hw/ide/internal.h -> hw/ide/internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "397:     struct iovec iov;",
          "398:     QEMUIOVector qiov;",
          "401:     int32_t io_buffer_size;",
          "402:     QEMUSGList sg;",
          "",
          "[Removed Lines]",
          "400:     int32_t io_buffer_offset;",
          "",
          "[Added Lines]",
          "400:     uint64_t io_buffer_offset;",
          "",
          "---------------"
        ],
        "hw/ide/pci.c||hw/ide/pci.c": [
          "File: hw/ide/pci.c -> hw/ide/pci.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:                 qemu_sglist_add(&s->sg, bm->cur_prd_addr, sg_len);",
          "104:             }",
          "113:             bm->cur_prd_addr += l;",
          "114:             bm->cur_prd_len -= l;",
          "115:             s->io_buffer_size += l;",
          "",
          "[Removed Lines]",
          "109:             if (s->sg.size > INT32_MAX) {",
          "110:                 error_report(\"IDE: sglist describes more than 2GiB.\");",
          "111:                 break;",
          "112:             }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "446351236b6e9c53b25e30d107c6235347df1dde",
      "candidate_info": {
        "commit_hash": "446351236b6e9c53b25e30d107c6235347df1dde",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/446351236b6e9c53b25e30d107c6235347df1dde",
        "files": [
          "hw/ide/ahci.c",
          "hw/ide/core.c",
          "hw/ide/internal.h",
          "hw/ide/macio.c",
          "hw/ide/pci.c"
        ],
        "message": "ide: simplify start_transfer callbacks\n\nDrop the unused return value and make the callback optional.\n\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>\nSigned-off-by: John Snow <jsnow@redhat.com>\nSigned-off-by: Stefan Hajnoczi <stefanha@redhat.com>",
        "before_after_code_files": [
          "hw/ide/ahci.c||hw/ide/ahci.c",
          "hw/ide/core.c||hw/ide/core.c",
          "hw/ide/internal.h||hw/ide/internal.h",
          "hw/ide/macio.c||hw/ide/macio.c",
          "hw/ide/pci.c||hw/ide/pci.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "hw/ide/ahci.c||hw/ide/ahci.c",
            "hw/ide/core.c||hw/ide/core.c",
            "hw/ide/internal.h||hw/ide/internal.h",
            "hw/ide/macio.c||hw/ide/macio.c",
            "hw/ide/pci.c||hw/ide/pci.c"
          ],
          "candidate": [
            "hw/ide/ahci.c||hw/ide/ahci.c",
            "hw/ide/core.c||hw/ide/core.c",
            "hw/ide/internal.h||hw/ide/internal.h",
            "hw/ide/macio.c||hw/ide/macio.c",
            "hw/ide/pci.c||hw/ide/pci.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/ide/ahci.c||hw/ide/ahci.c": [
          "File: hw/ide/ahci.c -> hw/ide/ahci.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "991: }",
          "995: {",
          "996:     AHCIDevice *ad = DO_UPCAST(AHCIDevice, dma, dma);",
          "997:     IDEState *s = &ad->port.ifs[0];",
          "",
          "[Removed Lines]",
          "994: static int ahci_start_transfer(IDEDMA *dma)",
          "",
          "[Added Lines]",
          "994: static void ahci_start_transfer(IDEDMA *dma)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1042:         ahci_trigger_irq(ad->hba, ad, PORT_IRQ_STAT_DSS);",
          "1043:     }",
          "1046: }",
          "1048: static void ahci_start_dma(IDEDMA *dma, IDEState *s,",
          "",
          "[Removed Lines]",
          "1045:     return 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hw/ide/core.c||hw/ide/core.c": [
          "File: hw/ide/core.c -> hw/ide/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "434:     if (!(s->status & ERR_STAT)) {",
          "435:         s->status |= DRQ_STAT;",
          "436:     }",
          "438: }",
          "440: void ide_transfer_stop(IDEState *s)",
          "",
          "[Removed Lines]",
          "437:     s->bus->dma->ops->start_transfer(s->bus->dma);",
          "",
          "[Added Lines]",
          "437:     if (s->bus->dma->ops->start_transfer) {",
          "438:         s->bus->dma->ops->start_transfer(s->bus->dma);",
          "439:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2207: {",
          "2208: }",
          "2215: static int ide_nop_int(IDEDMA *dma, int x)",
          "2216: {",
          "2217:     return 0;",
          "",
          "[Removed Lines]",
          "2210: static int ide_nop(IDEDMA *dma)",
          "2211: {",
          "2212:     return 0;",
          "2213: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2224: static const IDEDMAOps ide_dma_nop_ops = {",
          "2225:     .start_dma      = ide_nop_start,",
          "2227:     .prepare_buf    = ide_nop_int,",
          "2228:     .rw_buf         = ide_nop_int,",
          "2229:     .set_unit       = ide_nop_int,",
          "",
          "[Removed Lines]",
          "2226:     .start_transfer = ide_nop,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hw/ide/internal.h||hw/ide/internal.h": [
          "File: hw/ide/internal.h -> hw/ide/internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "322: typedef void DMAStartFunc(IDEDMA *, IDEState *, BlockDriverCompletionFunc *);",
          "323: typedef void DMAVoidFunc(IDEDMA *);",
          "325: typedef int DMAIntFunc(IDEDMA *, int);",
          "326: typedef void DMARestartFunc(void *, int, RunState);",
          "",
          "[Removed Lines]",
          "324: typedef int DMAFunc(IDEDMA *);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "429: struct IDEDMAOps {",
          "430:     DMAStartFunc *start_dma;",
          "432:     DMAIntFunc *prepare_buf;",
          "433:     DMAIntFunc *rw_buf;",
          "434:     DMAIntFunc *set_unit;",
          "",
          "[Removed Lines]",
          "431:     DMAFunc *start_transfer;",
          "",
          "[Added Lines]",
          "430:     DMAVoidFunc *start_transfer;",
          "",
          "---------------"
        ],
        "hw/ide/macio.c||hw/ide/macio.c": [
          "File: hw/ide/macio.c -> hw/ide/macio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "545:     ide_bus_reset(&d->bus);",
          "546: }",
          "553: static int ide_nop_int(IDEDMA *dma, int x)",
          "554: {",
          "555:     return 0;",
          "",
          "[Removed Lines]",
          "548: static int ide_nop(IDEDMA *dma)",
          "549: {",
          "550:     return 0;",
          "551: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "572: static const IDEDMAOps dbdma_ops = {",
          "573:     .start_dma      = ide_dbdma_start,",
          "575:     .prepare_buf    = ide_nop_int,",
          "576:     .rw_buf         = ide_nop_int,",
          "577:     .set_unit       = ide_nop_int,",
          "",
          "[Removed Lines]",
          "574:     .start_transfer = ide_nop,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hw/ide/pci.c||hw/ide/pci.c": [
          "File: hw/ide/pci.c -> hw/ide/pci.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "264:     bm->nsector = 0;",
          "265: }",
          "272: static void bmdma_irq(void *opaque, int n, int level)",
          "273: {",
          "274:     BMDMAState *bm = opaque;",
          "",
          "[Removed Lines]",
          "267: static int bmdma_start_transfer(IDEDMA *dma)",
          "268: {",
          "269:     return 0;",
          "270: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "501: static const struct IDEDMAOps bmdma_ops = {",
          "502:     .start_dma = bmdma_start_dma,",
          "504:     .prepare_buf = bmdma_prepare_buf,",
          "505:     .rw_buf = bmdma_rw_buf,",
          "506:     .set_unit = bmdma_set_unit,",
          "",
          "[Removed Lines]",
          "503:     .start_transfer = bmdma_start_transfer,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}