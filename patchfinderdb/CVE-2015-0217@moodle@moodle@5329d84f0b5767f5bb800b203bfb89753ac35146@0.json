{
  "cve_id": "CVE-2015-0217",
  "cve_desc": "filter/mediaplugin/filter.php in Moodle through 2.5.9, 2.6.x before 2.6.7, 2.7.x before 2.7.4, and 2.8.x before 2.8.2 allows remote authenticated users to cause a denial of service (CPU consumption or partial outage) via a crafted string that is matched against an improper regular expression.",
  "repo": "moodle/moodle",
  "patch_hash": "5329d84f0b5767f5bb800b203bfb89753ac35146",
  "patch_info": {
    "commit_hash": "5329d84f0b5767f5bb800b203bfb89753ac35146",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/5329d84f0b5767f5bb800b203bfb89753ac35146",
    "files": [
      "filter/mediaplugin/filter.php",
      "filter/mediaplugin/tests/filter_test.php"
    ],
    "message": "MDL-48546 filters: Split on all tags for multimedia filter check.",
    "before_after_code_files": [
      "filter/mediaplugin/filter.php||filter/mediaplugin/filter.php",
      "filter/mediaplugin/tests/filter_test.php||filter/mediaplugin/tests/filter_test.php"
    ]
  },
  "patch_diff": {
    "filter/mediaplugin/filter.php||filter/mediaplugin/filter.php": [
      "File: filter/mediaplugin/filter.php -> filter/mediaplugin/filter.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "69:         $this->trusted = !empty($options['noclean']) or !empty($CFG->allowobjectembed);",
      "74:         if (!$matches) {",
      "75:             return $text;",
      "",
      "[Removed Lines]",
      "72:         $matches = preg_split('/(<a\\s[^>]*>)/i', $text, -1, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE);",
      "",
      "[Added Lines]",
      "72:         $matches = preg_split('/(<[^>]*>)/i', $text, -1, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE);",
      "",
      "---------------"
    ],
    "filter/mediaplugin/tests/filter_test.php||filter/mediaplugin/tests/filter_test.php": [
      "File: filter/mediaplugin/tests/filter_test.php -> filter/mediaplugin/tests/filter_test.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "100:         $insertpoint = strrpos($longurl, 'http://');",
      "101:         $longurl = substr_replace($longurl, 'http://pushover4096chars', $insertpoint, 0);",
      "103:         $invalidtexts = array(",
      "104:             '<a class=\"_blanktarget\">href=\"http://moodle.org/testfile/test.mp3\"</a>',",
      "105:             '<a>test test</a>',",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "103:         $originalurl = '<p>Some text.</p><pre style=\"color: rgb(0, 0, 0); line-height: normal;\">' .",
      "104:             '<a href=\"https://www.youtube.com/watch?v=uUhWl9Lm3OM\">Valid link</a></pre><pre style=\"color: rgb(0, 0, 0); line-height: normal;\">';",
      "105:         $paddedurl = str_pad($originalurl, 6000, 'z');",
      "106:         $validpaddedurl = '<p>Some text.</p><pre style=\"color: rgb(0, 0, 0); line-height: normal;\"><span class=\"mediaplugin mediaplugin_youtube\">",
      "107: <iframe title=\"Valid link\" width=\"400\" height=\"300\"",
      "108:   src=\"https://www.youtube.com/embed/uUhWl9Lm3OM?rel=0&wmode=transparent\" frameborder=\"0\" allowfullscreen=\"1\"></iframe>",
      "109: </span></pre><pre style=\"color: rgb(0, 0, 0); line-height: normal;\">';",
      "110:         $validpaddedurl = str_pad($validpaddedurl, 6000 + (strlen($validpaddedurl) - strlen($originalurl)), 'z');",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "132:         $filter = $filterplugin->filter($precededlongurl);",
      "133:         $this->assertEquals(1, substr_count($filter, 'M.util.add_audio_player'));",
      "134:         $this->assertContains($longurl, $filter);",
      "135:     }",
      "136: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "146:         $filter = $filterplugin->filter($paddedurl);",
      "147:         $this->assertEquals($validpaddedurl, $filter, $msg);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "75cb0ffffe5197de09fc72350c37072cd9d910b8",
      "candidate_info": {
        "commit_hash": "75cb0ffffe5197de09fc72350c37072cd9d910b8",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/75cb0ffffe5197de09fc72350c37072cd9d910b8",
        "files": [
          "filter/mediaplugin/filter.php",
          "filter/mediaplugin/tests/filter_test.php"
        ],
        "message": "MDL-48546 filters: ReDoS protection for multimedia links.",
        "before_after_code_files": [
          "filter/mediaplugin/filter.php||filter/mediaplugin/filter.php",
          "filter/mediaplugin/tests/filter_test.php||filter/mediaplugin/tests/filter_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "filter/mediaplugin/filter.php||filter/mediaplugin/filter.php",
            "filter/mediaplugin/tests/filter_test.php||filter/mediaplugin/tests/filter_test.php"
          ],
          "candidate": [
            "filter/mediaplugin/filter.php||filter/mediaplugin/filter.php",
            "filter/mediaplugin/tests/filter_test.php||filter/mediaplugin/tests/filter_test.php"
          ]
        }
      },
      "candidate_diff": {
        "filter/mediaplugin/filter.php||filter/mediaplugin/filter.php": [
          "File: filter/mediaplugin/filter.php -> filter/mediaplugin/filter.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:         $this->trusted = !empty($options['noclean']) or !empty($CFG->allowobjectembed);",
          "80:             return $text;",
          "81:         }",
          "83:         return $newtext;",
          "84:     }",
          "",
          "[Removed Lines]",
          "74:         $newtext = preg_replace_callback($re = '~<a\\s[^>]*href=\"([^\"]*(?:' .",
          "75:                 $this->embedmarkers . ')[^\"]*)\"[^>]*>([^>]*)</a>~is',",
          "76:                 array($this, 'callback'), $text);",
          "78:         if (empty($newtext) or $newtext === $text) {",
          "",
          "[Added Lines]",
          "72:         $matches = preg_split('/(<a\\s[^>]*>)/i', $text, -1, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE);",
          "74:         if (!$matches) {",
          "79:         $re = '~<a\\s[^>]*href=\"([^\"]*(?:' .  $this->embedmarkers . ')[^\"]*)\"[^>]*>([^>]*)</a>~is';",
          "81:         $newtext = '';",
          "82:         $validtag = '';",
          "83:         $sizeofmatches = count($matches);",
          "88:         foreach ($matches as $idx => $tag) {",
          "89:             if (preg_match('|</a>|', $tag) && !empty($validtag)) {",
          "90:                 $validtag .= $tag;",
          "94:                 if (strlen($validtag) < 4096) {",
          "95:                     $processed = preg_replace_callback($re, array($this, 'callback'), $validtag);",
          "96:                 }",
          "98:                 $newtext .= !empty($processed) ? $processed : $validtag;",
          "100:                 $validtag = '';",
          "101:                 $processed = '';",
          "102:             } else if (preg_match('/<a\\s[^>]*/', $tag) && $sizeofmatches > 1) {",
          "104:                 $validtag = $tag;",
          "105:             } else {",
          "108:                 if (!empty($validtag)) {",
          "109:                     $validtag .= $tag;",
          "110:                 } else {",
          "111:                     $newtext .= $tag;",
          "112:                 }",
          "113:             }",
          "114:         }",
          "",
          "---------------"
        ],
        "filter/mediaplugin/tests/filter_test.php||filter/mediaplugin/tests/filter_test.php": [
          "File: filter/mediaplugin/tests/filter_test.php -> filter/mediaplugin/tests/filter_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:         $filterplugin = new filter_mediaplugin(null, array());",
          "54:         $validtexts = array (",
          "55:             '<a href=\"http://moodle.org/testfile/test.mp3\">test mp3</a>',",
          "56:             '<a href=\"http://moodle.org/testfile/test.ogg\">test ogg</a>',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54:         $longurl = '<a href=\"http://moodle/.mp4\">my test file</a>';",
          "55:         $longhref = '';",
          "57:         do {",
          "58:             $longhref .= 'a';",
          "59:         } while(strlen($longhref) + strlen($longurl) < 4095);",
          "61:         $longurl = '<a href=\"http://moodle/' . $longhref . '.mp4\">my test file</a>';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "77:                             href=\"http://moodle.org/testfile/test.avi\">test mp3",
          "78:                                     </a>',",
          "80:         );",
          "",
          "[Removed Lines]",
          "79:             '<a             href=\"http://www.youtube.com/watch?v=JghQgA2HMX8?d=200x200\"     >youtube\\'s</a>'",
          "",
          "[Added Lines]",
          "88:             '<a             href=\"http://www.youtube.com/watch?v=JghQgA2HMX8?d=200x200\"     >youtube\\'s</a>',",
          "90:             $longurl",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "86:             $this->assertNotEquals($text, $filter, $msg);",
          "87:         }",
          "89:         $invalidtexts = array(",
          "90:             '<a class=\"_blanktarget\">href=\"http://moodle.org/testfile/test.mp3\"</a>',",
          "91:             '<a>test test</a>',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100:         $insertpoint = strrpos($longurl, 'http://');",
          "101:         $longurl = substr_replace($longurl, 'http://pushover4096chars', $insertpoint, 0);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "101:             '<href=\"http://moodle.org/testfile/test.avi\">test</a>',",
          "102:             '<abbr href=\"http://moodle.org/testfile/test.mp3\">test mp3</abbr>',",
          "103:             '<ahref=\"http://moodle.org/testfile/test.mp3\">test mp3</a>',",
          "105:         );",
          "",
          "[Removed Lines]",
          "104:             '<aclass=\"content\" href=\"http://moodle.org/testfile/test.mp3\">test mp3</a>'",
          "",
          "[Added Lines]",
          "118:             '<aclass=\"content\" href=\"http://moodle.org/testfile/test.mp3\">test mp3</a>',",
          "120:             $longurl",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "110:             $filter = $filterplugin->filter($text);",
          "111:             $this->assertEquals($text, $filter, $msg);",
          "112:         }",
          "113:     }",
          "114: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "131:         $precededlongurl = '<a href=\"http://moodle.org/testfile/test.mp3\">test.mp3</a>'. $longurl;",
          "132:         $filter = $filterplugin->filter($precededlongurl);",
          "133:         $this->assertEquals(1, substr_count($filter, 'M.util.add_audio_player'));",
          "134:         $this->assertContains($longurl, $filter);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "63ed941a9363b6da3322df2b8de5be0d1df6d81a",
      "candidate_info": {
        "commit_hash": "63ed941a9363b6da3322df2b8de5be0d1df6d81a",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/63ed941a9363b6da3322df2b8de5be0d1df6d81a",
        "files": [
          "filter/mediaplugin/filter.php",
          "filter/mediaplugin/tests/filter_test.php"
        ],
        "message": "MDL-48546 filters: Split on all tags for multimedia filter check.",
        "before_after_code_files": [
          "filter/mediaplugin/filter.php||filter/mediaplugin/filter.php",
          "filter/mediaplugin/tests/filter_test.php||filter/mediaplugin/tests/filter_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "filter/mediaplugin/filter.php||filter/mediaplugin/filter.php",
            "filter/mediaplugin/tests/filter_test.php||filter/mediaplugin/tests/filter_test.php"
          ],
          "candidate": [
            "filter/mediaplugin/filter.php||filter/mediaplugin/filter.php",
            "filter/mediaplugin/tests/filter_test.php||filter/mediaplugin/tests/filter_test.php"
          ]
        }
      },
      "candidate_diff": {
        "filter/mediaplugin/filter.php||filter/mediaplugin/filter.php": [
          "File: filter/mediaplugin/filter.php -> filter/mediaplugin/filter.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:         $this->trusted = !empty($options['noclean']) or !empty($CFG->allowobjectembed);",
          "74:         if (!$matches) {",
          "75:             return $text;",
          "",
          "[Removed Lines]",
          "72:         $matches = preg_split('/(<a\\s[^>]*>)/i', $text, -1, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE);",
          "",
          "[Added Lines]",
          "72:         $matches = preg_split('/(<[^>]*>)/i', $text, -1, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE);",
          "",
          "---------------"
        ],
        "filter/mediaplugin/tests/filter_test.php||filter/mediaplugin/tests/filter_test.php": [
          "File: filter/mediaplugin/tests/filter_test.php -> filter/mediaplugin/tests/filter_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:         $insertpoint = strrpos($longurl, 'http://');",
          "101:         $longurl = substr_replace($longurl, 'http://pushover4096chars', $insertpoint, 0);",
          "103:         $invalidtexts = array(",
          "104:             '<a class=\"_blanktarget\">href=\"http://moodle.org/testfile/test.mp3\"</a>',",
          "105:             '<a>test test</a>',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:         $originalurl = '<p>Some text.</p><pre style=\"color: rgb(0, 0, 0); line-height: normal;\">' .",
          "104:             '<a href=\"https://www.youtube.com/watch?v=uUhWl9Lm3OM\">Valid link</a></pre><pre style=\"color: rgb(0, 0, 0); line-height: normal;\">';",
          "105:         $paddedurl = str_pad($originalurl, 6000, 'z');",
          "106:         $validpaddedurl = '<p>Some text.</p><pre style=\"color: rgb(0, 0, 0); line-height: normal;\"><span class=\"mediaplugin mediaplugin_youtube\">",
          "107: <iframe title=\"Valid link\" width=\"400\" height=\"300\"",
          "108:   src=\"https://www.youtube.com/embed/uUhWl9Lm3OM?rel=0&wmode=transparent\" frameborder=\"0\" allowfullscreen=\"1\"></iframe>",
          "109: </span></pre><pre style=\"color: rgb(0, 0, 0); line-height: normal;\">';",
          "110:         $validpaddedurl = str_pad($validpaddedurl, 6000 + (strlen($validpaddedurl) - strlen($originalurl)), 'z');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "132:         $filter = $filterplugin->filter($precededlongurl);",
          "133:         $this->assertEquals(1, substr_count($filter, 'M.util.add_audio_player'));",
          "134:         $this->assertContains($longurl, $filter);",
          "135:     }",
          "136: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "146:         $filter = $filterplugin->filter($paddedurl);",
          "147:         $this->assertEquals($validpaddedurl, $filter, $msg);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "531492a32cf77f90bc48c4868a5f71dd7040049f",
      "candidate_info": {
        "commit_hash": "531492a32cf77f90bc48c4868a5f71dd7040049f",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/531492a32cf77f90bc48c4868a5f71dd7040049f",
        "files": [
          "filter/mediaplugin/filter.php",
          "filter/mediaplugin/tests/filter_test.php"
        ],
        "message": "MDL-48546 filters: Split on all tags for multimedia filter check.",
        "before_after_code_files": [
          "filter/mediaplugin/filter.php||filter/mediaplugin/filter.php",
          "filter/mediaplugin/tests/filter_test.php||filter/mediaplugin/tests/filter_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "filter/mediaplugin/filter.php||filter/mediaplugin/filter.php",
            "filter/mediaplugin/tests/filter_test.php||filter/mediaplugin/tests/filter_test.php"
          ],
          "candidate": [
            "filter/mediaplugin/filter.php||filter/mediaplugin/filter.php",
            "filter/mediaplugin/tests/filter_test.php||filter/mediaplugin/tests/filter_test.php"
          ]
        }
      },
      "candidate_diff": {
        "filter/mediaplugin/filter.php||filter/mediaplugin/filter.php": [
          "File: filter/mediaplugin/filter.php -> filter/mediaplugin/filter.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:         $this->trusted = !empty($options['noclean']) or !empty($CFG->allowobjectembed);",
          "74:         if (!$matches) {",
          "75:             return $text;",
          "",
          "[Removed Lines]",
          "72:         $matches = preg_split('/(<a\\s[^>]*>)/i', $text, -1, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE);",
          "",
          "[Added Lines]",
          "72:         $matches = preg_split('/(<[^>]*>)/i', $text, -1, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE);",
          "",
          "---------------"
        ],
        "filter/mediaplugin/tests/filter_test.php||filter/mediaplugin/tests/filter_test.php": [
          "File: filter/mediaplugin/tests/filter_test.php -> filter/mediaplugin/tests/filter_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:         $insertpoint = strrpos($longurl, 'http://');",
          "101:         $longurl = substr_replace($longurl, 'http://pushover4096chars', $insertpoint, 0);",
          "103:         $invalidtexts = array(",
          "104:             '<a class=\"_blanktarget\">href=\"http://moodle.org/testfile/test.mp3\"</a>',",
          "105:             '<a>test test</a>',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:         $originalurl = '<p>Some text.</p><pre style=\"color: rgb(0, 0, 0); line-height: normal;\">' .",
          "104:             '<a href=\"https://www.youtube.com/watch?v=uUhWl9Lm3OM\">Valid link</a></pre><pre style=\"color: rgb(0, 0, 0); line-height: normal;\">';",
          "105:         $paddedurl = str_pad($originalurl, 6000, 'z');",
          "106:         $validpaddedurl = '<p>Some text.</p><pre style=\"color: rgb(0, 0, 0); line-height: normal;\"><span class=\"mediaplugin mediaplugin_youtube\">",
          "107: <iframe title=\"Valid link\" width=\"400\" height=\"300\"",
          "108:   src=\"https://www.youtube.com/embed/uUhWl9Lm3OM?rel=0&wmode=transparent\" frameborder=\"0\" allowfullscreen=\"1\"></iframe>",
          "109: </span></pre><pre style=\"color: rgb(0, 0, 0); line-height: normal;\">';",
          "110:         $validpaddedurl = str_pad($validpaddedurl, 6000 + (strlen($validpaddedurl) - strlen($originalurl)), 'z');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "132:         $filter = $filterplugin->filter($precededlongurl);",
          "133:         $this->assertEquals(1, substr_count($filter, 'M.util.add_audio_player'));",
          "134:         $this->assertContains($longurl, $filter);",
          "135:     }",
          "136: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "146:         $filter = $filterplugin->filter($paddedurl);",
          "147:         $this->assertEquals($validpaddedurl, $filter, $msg);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "25191bc31187f6381ad9fc690b653414ea3bc6d4",
      "candidate_info": {
        "commit_hash": "25191bc31187f6381ad9fc690b653414ea3bc6d4",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/25191bc31187f6381ad9fc690b653414ea3bc6d4",
        "files": [
          "filter/mediaplugin/filter.php",
          "filter/mediaplugin/tests/filter_test.php"
        ],
        "message": "MDL-48546 filters: Split on all tags for multimedia filter check.",
        "before_after_code_files": [
          "filter/mediaplugin/filter.php||filter/mediaplugin/filter.php",
          "filter/mediaplugin/tests/filter_test.php||filter/mediaplugin/tests/filter_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "filter/mediaplugin/filter.php||filter/mediaplugin/filter.php",
            "filter/mediaplugin/tests/filter_test.php||filter/mediaplugin/tests/filter_test.php"
          ],
          "candidate": [
            "filter/mediaplugin/filter.php||filter/mediaplugin/filter.php",
            "filter/mediaplugin/tests/filter_test.php||filter/mediaplugin/tests/filter_test.php"
          ]
        }
      },
      "candidate_diff": {
        "filter/mediaplugin/filter.php||filter/mediaplugin/filter.php": [
          "File: filter/mediaplugin/filter.php -> filter/mediaplugin/filter.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:         $this->trusted = !empty($options['noclean']) or !empty($CFG->allowobjectembed);",
          "74:         if (!$matches) {",
          "75:             return $text;",
          "",
          "[Removed Lines]",
          "72:         $matches = preg_split('/(<a\\s[^>]*>)/i', $text, -1, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE);",
          "",
          "[Added Lines]",
          "72:         $matches = preg_split('/(<[^>]*>)/i', $text, -1, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE);",
          "",
          "---------------"
        ],
        "filter/mediaplugin/tests/filter_test.php||filter/mediaplugin/tests/filter_test.php": [
          "File: filter/mediaplugin/tests/filter_test.php -> filter/mediaplugin/tests/filter_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:         $insertpoint = strrpos($longurl, 'http://');",
          "101:         $longurl = substr_replace($longurl, 'http://pushover4096chars', $insertpoint, 0);",
          "103:         $invalidtexts = array(",
          "104:             '<a class=\"_blanktarget\">href=\"http://moodle.org/testfile/test.mp3\"</a>',",
          "105:             '<a>test test</a>',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:         $originalurl = '<p>Some text.</p><pre style=\"color: rgb(0, 0, 0); line-height: normal;\">' .",
          "104:             '<a href=\"https://www.youtube.com/watch?v=uUhWl9Lm3OM\">Valid link</a></pre><pre style=\"color: rgb(0, 0, 0); line-height: normal;\">';",
          "105:         $paddedurl = str_pad($originalurl, 6000, 'z');",
          "106:         $validpaddedurl = '<p>Some text.</p><pre style=\"color: rgb(0, 0, 0); line-height: normal;\"><span class=\"mediaplugin mediaplugin_youtube\">",
          "107: <iframe title=\"Valid link\" width=\"400\" height=\"300\"",
          "108:   src=\"https://www.youtube.com/embed/uUhWl9Lm3OM?rel=0&wmode=transparent\" frameborder=\"0\" allowfullscreen=\"1\"></iframe>",
          "109: </span></pre><pre style=\"color: rgb(0, 0, 0); line-height: normal;\">';",
          "110:         $validpaddedurl = str_pad($validpaddedurl, 6000 + (strlen($validpaddedurl) - strlen($originalurl)), 'z');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "132:         $filter = $filterplugin->filter($precededlongurl);",
          "133:         $this->assertEquals(1, substr_count($filter, 'M.util.add_audio_player'));",
          "134:         $this->assertContains($longurl, $filter);",
          "135:     }",
          "136: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "146:         $filter = $filterplugin->filter($paddedurl);",
          "147:         $this->assertEquals($validpaddedurl, $filter, $msg);",
          "",
          "---------------"
        ]
      }
    }
  ]
}