{
  "cve_id": "CVE-2017-9465",
  "cve_desc": "The yr_arena_write_data function in YARA 3.6.1 allows remote attackers to cause a denial of service (buffer over-read and application crash) or obtain sensitive information from process memory via a crafted file that is mishandled in the yr_re_fast_exec function in libyara/re.c and the _yr_scan_match_callback function in libyara/scan.c.",
  "repo": "VirusTotal/yara",
  "patch_hash": "992480c30f75943e9cd6245bb2015c7737f9b661",
  "patch_info": {
    "commit_hash": "992480c30f75943e9cd6245bb2015c7737f9b661",
    "repo": "VirusTotal/yara",
    "commit_url": "https://github.com/VirusTotal/yara/commit/992480c30f75943e9cd6245bb2015c7737f9b661",
    "files": [
      "libyara/re.c",
      "libyara/scan.c"
    ],
    "message": "Fix buffer overrun (issue #678). Add assert for detecting this kind of issues earlier.",
    "before_after_code_files": [
      "libyara/re.c||libyara/re.c",
      "libyara/scan.c||libyara/scan.c"
    ]
  },
  "patch_diff": {
    "libyara/re.c||libyara/re.c": [
      "File: libyara/re.c -> libyara/re.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2321:           for (i = repeat_any_args->min + 1; i <= repeat_any_args->max; i++)",
      "2322:           {",
      "2325:             if (bytes_matched + i >= max_bytes_matched)",
      "2326:               break;",
      "2328:             if ( *(next_opcode) != RE_OPCODE_LITERAL ||",
      "2329:                 (*(next_opcode) == RE_OPCODE_LITERAL &&",
      "",
      "[Removed Lines]",
      "2323:             next_input = input + i * input_incr;",
      "",
      "[Added Lines]",
      "2326:             next_input = input + i * input_incr;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2342:           input += input_incr * repeat_any_args->min;",
      "2343:           bytes_matched += repeat_any_args->min;",
      "2344:           ip = next_opcode;",
      "2346:           break;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2344:           bytes_matched = yr_min(bytes_matched, max_bytes_matched);",
      "",
      "---------------"
    ],
    "libyara/scan.c||libyara/scan.c": [
      "File: libyara/scan.c -> libyara/scan.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "444:   match_length += callback_args->forward_matches;",
      "446:   if (callback_args->full_word)",
      "447:   {",
      "448:     if (flags & RE_FLAGS_WIDE)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "447:   assert(match_offset + match_length <= callback_args->data_size);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f0a98fba38802552147b602c84ebe3616bb460cc",
      "candidate_info": {
        "commit_hash": "f0a98fba38802552147b602c84ebe3616bb460cc",
        "repo": "VirusTotal/yara",
        "commit_url": "https://github.com/VirusTotal/yara/commit/f0a98fba38802552147b602c84ebe3616bb460cc",
        "files": [
          "libyara/re.c",
          "libyara/scan.c"
        ],
        "message": "Fix buffer overrun (issue #678). Add assert for detecting this kind of issues earlier.",
        "before_after_code_files": [
          "libyara/re.c||libyara/re.c",
          "libyara/scan.c||libyara/scan.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libyara/re.c||libyara/re.c",
            "libyara/scan.c||libyara/scan.c"
          ],
          "candidate": [
            "libyara/re.c||libyara/re.c",
            "libyara/scan.c||libyara/scan.c"
          ]
        }
      },
      "candidate_diff": {
        "libyara/re.c||libyara/re.c": [
          "File: libyara/re.c -> libyara/re.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2321:           for (i = repeat_any_args->min + 1; i <= repeat_any_args->max; i++)",
          "2322:           {",
          "2325:             if (bytes_matched + i >= max_bytes_matched)",
          "2326:               break;",
          "2328:             if ( *(next_opcode) != RE_OPCODE_LITERAL ||",
          "2329:                 (*(next_opcode) == RE_OPCODE_LITERAL &&",
          "",
          "[Removed Lines]",
          "2323:             next_input = input + i * input_incr;",
          "",
          "[Added Lines]",
          "2326:             next_input = input + i * input_incr;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2342:           input += input_incr * repeat_any_args->min;",
          "2343:           bytes_matched += repeat_any_args->min;",
          "2344:           ip = next_opcode;",
          "2346:           break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2344:           bytes_matched = yr_min(bytes_matched, max_bytes_matched);",
          "",
          "---------------"
        ],
        "libyara/scan.c||libyara/scan.c": [
          "File: libyara/scan.c -> libyara/scan.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "444:   match_length += callback_args->forward_matches;",
          "446:   if (callback_args->full_word)",
          "447:   {",
          "448:     if (flags & RE_FLAGS_WIDE)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "447:   assert(match_offset + match_length <= callback_args->data_size);",
          "",
          "---------------"
        ]
      }
    }
  ]
}