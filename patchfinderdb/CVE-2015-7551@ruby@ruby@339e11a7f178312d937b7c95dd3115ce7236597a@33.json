{
  "cve_id": "CVE-2015-7551",
  "cve_desc": "The Fiddle::Handle implementation in ext/fiddle/handle.c in Ruby before 2.0.0-p648, 2.1 before 2.1.8, and 2.2 before 2.2.4, as distributed in Apple OS X before 10.11.4 and other products, mishandles tainting, which allows context-dependent attackers to execute arbitrary code or cause a denial of service (application crash) via a crafted string, related to the DL module and the libffi library.  NOTE: this vulnerability exists because of a CVE-2009-5147 regression.",
  "repo": "ruby/ruby",
  "patch_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
  "patch_info": {
    "commit_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
    "repo": "ruby/ruby",
    "commit_url": "https://github.com/ruby/ruby/commit/339e11a7f178312d937b7c95dd3115ce7236597a",
    "files": [
      "ChangeLog",
      "ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb",
      "version.h"
    ],
    "message": "merge revision(s): 53153 and 23405@ruby_1_9_1\n\n\t* ext/fiddle/handle.c: check tainted string arguments.\n\t  Patch provided by tenderlove and nobu.\n\n\t* test/fiddle/test_handle.rb (class TestHandle): add test for above.\n\n\t* ext/dl/handle.c (rb_dlhandle_initialize): prohibits DL::dlopen\n\t  with a tainted name of library.\n\t  Patch by sheepman <sheepman AT sheepman.sakura.ne.jp>.\n\n\t* ext/dl/handle.c (rb_dlhandle_sym): ditto\n\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53156 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
    "before_after_code_files": [
      "ext/fiddle/handle.c||ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb",
      "version.h||version.h"
    ]
  },
  "patch_diff": {
    "ext/fiddle/handle.c||ext/fiddle/handle.c": [
      "File: ext/fiddle/handle.c -> ext/fiddle/handle.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #include <ruby.h>",
      "2: #include <fiddle.h>",
      "4: VALUE rb_cHandle;",
      "6: struct dl_handle {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4: #define SafeStringValueCStr(v) (rb_check_safe_obj(rb_string_value(&v)), StringValueCStr(v))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "143:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "144:  break;",
      "145:       case 1:",
      "147:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "148:  break;",
      "149:       case 2:",
      "151:  cflag = NUM2INT(flag);",
      "152:  break;",
      "153:       default:",
      "",
      "[Removed Lines]",
      "146:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "150:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "",
      "[Added Lines]",
      "148:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "152:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "263:     return PTR2NUM(fiddle_handle);",
      "264: }",
      "",
      "[Removed Lines]",
      "266: static VALUE fiddle_handle_sym(void *handle, const char *symbol);",
      "",
      "[Added Lines]",
      "268: static VALUE fiddle_handle_sym(void *handle, VALUE symbol);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "282:  rb_raise(rb_eFiddleError, \"closed handle\");",
      "283:     }",
      "286: }",
      "288: #ifndef RTLD_NEXT",
      "",
      "[Removed Lines]",
      "285:     return fiddle_handle_sym(fiddle_handle->ptr, StringValueCStr(sym));",
      "",
      "[Added Lines]",
      "287:     return fiddle_handle_sym(fiddle_handle->ptr, sym);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "305: static VALUE",
      "306: rb_fiddle_handle_s_sym(VALUE self, VALUE sym)",
      "307: {",
      "309: }",
      "311: static VALUE",
      "313: {",
      "314: #if defined(HAVE_DLERROR)",
      "315:     const char *err;",
      "",
      "[Removed Lines]",
      "308:     return fiddle_handle_sym(RTLD_NEXT, StringValueCStr(sym));",
      "312: fiddle_handle_sym(void *handle, const char *name)",
      "",
      "[Added Lines]",
      "310:     return fiddle_handle_sym(RTLD_NEXT, sym);",
      "314: fiddle_handle_sym(void *handle, VALUE symbol)",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "318: # define CHECK_DLERROR",
      "319: #endif",
      "320:     void (*func)();",
      "322:     rb_secure(2);",
      "323: #ifdef HAVE_DLERROR",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:     const char *name = SafeStringValueCStr(symbol);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "367:     }",
      "368: #endif",
      "369:     if( !func ){",
      "371:     }",
      "373:     return PTR2NUM(func);",
      "",
      "[Removed Lines]",
      "370:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%s\\\"\", name);",
      "",
      "[Added Lines]",
      "373:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%\"PRIsVALUE\"\\\"\", symbol);",
      "",
      "---------------"
    ],
    "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb": [
      "File: test/fiddle/test_handle.rb -> test/fiddle/test_handle.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "11:     include Test::Unit::Assertions",
      "13:     def test_to_i",
      "14:       handle = Fiddle::Handle.new(LIBC_SO)",
      "15:       assert_kind_of Integer, handle.to_i",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13:     def test_safe_handle_open",
      "14:       t = Thread.new do",
      "15:         $SAFE = 1",
      "16:         Fiddle::Handle.new(LIBC_SO.taint)",
      "17:       end",
      "18:       assert_raise(SecurityError) { t.value }",
      "19:     end",
      "21:     def test_safe_function_lookup",
      "22:       t = Thread.new do",
      "23:         h = Fiddle::Handle.new(LIBC_SO)",
      "24:         $SAFE = 1",
      "25:         h[\"qsort\".taint]",
      "26:       end",
      "27:       assert_raise(SecurityError) { t.value }",
      "28:     end",
      "",
      "---------------"
    ],
    "version.h||version.h": [
      "File: version.h -> version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #define RUBY_VERSION \"2.1.8\"",
      "2: #define RUBY_RELEASE_DATE \"2015-12-16\"",
      "5: #define RUBY_RELEASE_YEAR 2015",
      "6: #define RUBY_RELEASE_MONTH 12",
      "",
      "[Removed Lines]",
      "3: #define RUBY_PATCHLEVEL 438",
      "",
      "[Added Lines]",
      "3: #define RUBY_PATCHLEVEL 439",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bd929bb48aa0daa237cbda73bef33c0c6adc75fd",
      "candidate_info": {
        "commit_hash": "bd929bb48aa0daa237cbda73bef33c0c6adc75fd",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/bd929bb48aa0daa237cbda73bef33c0c6adc75fd",
        "files": [
          "ChangeLog",
          "test/ruby/test_process.rb",
          "version.h",
          "win32/win32.c"
        ],
        "message": "merge revision(s) 51202,51203,51204: [Backport #11340]\n\n\t* win32/win32.c (waitpid): return immediately if interrupted.\n\t  reported by <takkanm AT gmail.com> [ruby-dev:49176] [Bug #11340]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@51607 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "test/ruby/test_process.rb||test/ruby/test_process.rb",
          "version.h||version.h",
          "win32/win32.c||win32/win32.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "test/ruby/test_process.rb||test/ruby/test_process.rb": [
          "File: test/ruby/test_process.rb -> test/ruby/test_process.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1263:     end",
          "1264:   end",
          "1266:   def test_abort",
          "1267:     with_tmpchdir do",
          "1268:       s = run_in_child(\"abort\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1266:   def test_wait_exception",
          "1267:     bug11340 = '[ruby-dev:49176] [Bug #11340]'",
          "1268:     t0 = t1 = nil",
          "1269:     IO.popen([RUBY, '-e', 'puts;STDOUT.flush;Thread.start{gets;exit};sleep(3)'], 'r+') do |f|",
          "1270:       pid = f.pid",
          "1271:       f.gets",
          "1272:       t0 = Time.now",
          "1273:       th = Thread.start(Thread.current) do |main|",
          "1274:         Thread.pass until main.stop?",
          "1275:         main.raise Interrupt",
          "1276:       end",
          "1277:       begin",
          "1278:         assert_raise(Interrupt) {Process.wait(pid)}",
          "1279:       ensure",
          "1280:         th.kill.join",
          "1281:       end",
          "1282:       t1 = Time.now",
          "1283:       f.puts",
          "1284:     end",
          "1285:     assert_operator(t1 - t0, :<, 3,",
          "1286:                     ->{\"#{bug11340}: #{t1-t0} seconds to interrupt Process.wait\"})",
          "1287:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "2: #define RUBY_RELEASE_DATE \"2015-08-17\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 8",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 389",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 390",
          "",
          "---------------"
        ],
        "win32/win32.c||win32/win32.c": [
          "File: win32/win32.c -> win32/win32.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4266:  while (!(pid = poll_child_status(child, stat_loc))) {",
          "4270:   if (options & WNOHANG) {",
          "4271:       pid = 0;",
          "",
          "[Removed Lines]",
          "4268:      if (rb_w32_wait_events_blocking(&child->hProcess, 1, timeout) != WAIT_OBJECT_0) {",
          "",
          "[Added Lines]",
          "4268:      int ret = rb_w32_wait_events_blocking(&child->hProcess, 1, timeout);",
          "4270:      if (ret != WAIT_OBJECT_0) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e4a39e0e9ecc7f01cb7605c820240c4d18200850",
      "candidate_info": {
        "commit_hash": "e4a39e0e9ecc7f01cb7605c820240c4d18200850",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/e4a39e0e9ecc7f01cb7605c820240c4d18200850",
        "files": [
          "ChangeLog",
          "string.c",
          "test/ruby/test_m17n.rb",
          "version.h"
        ],
        "message": "merge revision(s) 54210: [Backport #12204]\n\n\t* string.c (enc_succ_alnum_char): try to skip an invalid character\n\t  gap between GREEK CAPITAL RHO and SIGMA.\n\t  [ruby-core:74478] [Bug #12204]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@54284 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "string.c||string.c",
          "test/ruby/test_m17n.rb||test/ruby/test_m17n.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "string.c||string.c": [
          "File: string.c -> string.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3179:     int range;",
          "3180:     char save[ONIGENC_CODE_TO_MBC_MAXLEN];",
          "3182:     c = rb_enc_mbc_to_codepoint(p, p+len, enc);",
          "3183:     if (rb_enc_isctype(c, ONIGENC_CTYPE_DIGIT, enc))",
          "3184:         ctype = ONIGENC_CTYPE_DIGIT;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3183:     int try;",
          "3184:     const int max_gaps = 1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3188:         return NEIGHBOR_NOT_CHAR;",
          "3190:     MEMCPY(save, p, char, len);",
          "3196:     }",
          "3197:     MEMCPY(p, save, char, len);",
          "3198:     range = 1;",
          "",
          "[Removed Lines]",
          "3191:     ret = enc_succ_char(p, len, enc);",
          "3192:     if (ret == NEIGHBOR_FOUND) {",
          "3193:         c = rb_enc_mbc_to_codepoint(p, p+len, enc);",
          "3194:         if (rb_enc_isctype(c, ctype, enc))",
          "3195:             return NEIGHBOR_FOUND;",
          "",
          "[Added Lines]",
          "3195:     for (try = 0; try <= max_gaps; ++try) {",
          "3196:  ret = enc_succ_char(p, len, enc);",
          "3197:  if (ret == NEIGHBOR_FOUND) {",
          "3198:      c = rb_enc_mbc_to_codepoint(p, p+len, enc);",
          "3199:      if (rb_enc_isctype(c, ctype, enc))",
          "3200:   return NEIGHBOR_FOUND;",
          "3201:  }",
          "",
          "---------------"
        ],
        "test/ruby/test_m17n.rb||test/ruby/test_m17n.rb": [
          "File: test/ruby/test_m17n.rb -> test/ruby/test_m17n.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1613:     assert_same(str, str.scrub!)",
          "1614:     assert_equal(\"\\uFFFD\\uFFFD\\uFFFD\", str)",
          "1615:   end",
          "1616: end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1617:   def test_greek_capital_gap",
          "1618:     bug12204 = '[ruby-core:74478] [Bug #12204] GREEK CAPITAL RHO and SIGMA'",
          "1619:     assert_equal(\"\\u03A3\", \"\\u03A1\".succ, bug12204)",
          "1620:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.9\"",
          "2: #define RUBY_RELEASE_DATE \"2016-03-25\"",
          "5: #define RUBY_RELEASE_YEAR 2016",
          "6: #define RUBY_RELEASE_MONTH 3",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 481",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 482",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0cddf1b4331877019f65bf3ba572f7f8d0371115",
      "candidate_info": {
        "commit_hash": "0cddf1b4331877019f65bf3ba572f7f8d0371115",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/0cddf1b4331877019f65bf3ba572f7f8d0371115",
        "files": [
          "ChangeLog",
          "lib/resolv.rb",
          "test/resolv/test_dns.rb",
          "version.h"
        ],
        "message": "merge revision(s) 49095: [Backport #11144]\n\n\t* lib/resolv.rb (Resolv::DNS::Label::Str#==): Check class equality.\n\t  (Resolv::DNS::Name#initialize): Normalize labels as\n\t  Resolv::DNS::Label::Str objects.\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@50482 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "lib/resolv.rb||lib/resolv.rb",
          "test/resolv/test_dns.rb||test/resolv/test_dns.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "lib/resolv.rb||lib/resolv.rb": [
          "File: lib/resolv.rb -> lib/resolv.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1187:         end",
          "1189:         def ==(other)",
          "1191:         end",
          "1193:         def eql?(other)",
          "",
          "[Removed Lines]",
          "1190:           return @downcase == other.downcase",
          "",
          "[Added Lines]",
          "1190:           return self.class == other.class && @downcase == other.downcase",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1223:       end",
          "1225:       def initialize(labels, absolute=true) # :nodoc:",
          "1226:         @labels = labels",
          "1227:         @absolute = absolute",
          "1228:       end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1226:         labels = labels.map {|label|",
          "1227:           case label",
          "1228:           when String then Label::Str.new(label)",
          "1229:           when Label::Str then label",
          "1230:           else",
          "1231:             raise ArgumentError, \"unexpected label: #{label.inspect}\"",
          "1232:           end",
          "1233:         }",
          "",
          "---------------"
        ],
        "test/resolv/test_dns.rb||test/resolv/test_dns.rb": [
          "File: test/resolv/test_dns.rb -> test/resolv/test_dns.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "188:     upper = Resolv::DNS::Name.create(\"Ruby-Lang.org\")",
          "189:     assert_equal(lower, upper, bug10550)",
          "190:   end",
          "191: end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "192:   def test_ipv6_name",
          "193:     addr = Resolv::IPv6.new(\"\\0\"*16)",
          "194:     labels = addr.to_name.to_a",
          "195:     expected = (['0'] * 32 + ['ip6', 'arpa']).map {|label| Resolv::DNS::Label::Str.new(label) }",
          "196:     assert_equal(expected, labels)",
          "197:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 5",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-05-12\"",
          "3: #define RUBY_PATCHLEVEL 343",
          "7: #define RUBY_RELEASE_DAY 12",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-05-13\"",
          "3: #define RUBY_PATCHLEVEL 344",
          "7: #define RUBY_RELEASE_DAY 13",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9462778d8170079235701403000277ec404506ba",
      "candidate_info": {
        "commit_hash": "9462778d8170079235701403000277ec404506ba",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/9462778d8170079235701403000277ec404506ba",
        "files": [
          "ChangeLog",
          "version.h",
          "win32/win32.c"
        ],
        "message": "merge revision(s) 49634,49658,49663: [Backport #10865]\n\n\t* win32/win32.c (wrename): return EXDEV if moving a directory to\n\t  another drive, since MoveFileExW does not set proper error code.\n\t  [ruby-core:68162] [Bug #10865]\n\n\t* win32/win32.c (different_device_p): compare by volume serial\n\t  numbers, not by path names.\n\t  numbers, not by path names.  [ruby-core:68162] [Bug #10865]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@50290 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "version.h||version.h",
          "win32/win32.c||win32/win32.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "2: #define RUBY_RELEASE_DATE \"2015-04-13\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 4",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 333",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 334",
          "",
          "---------------"
        ],
        "win32/win32.c||win32/win32.c": [
          "File: win32/win32.c -> win32/win32.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4673:     return w32_getenv(name, CP_ACP);",
          "4674: }",
          "4677: static int",
          "4678: wrename(const WCHAR *oldpath, const WCHAR *newpath)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4677: static DWORD",
          "4678: get_volume_serial_number(const WCHAR *path)",
          "4679: {",
          "4680:     const DWORD share_mode = FILE_SHARE_READ | FILE_SHARE_WRITE;",
          "4681:     const DWORD creation = OPEN_EXISTING;",
          "4682:     const DWORD flags = FILE_FLAG_BACKUP_SEMANTICS;",
          "4683:     BY_HANDLE_FILE_INFORMATION st = {0};",
          "4684:     HANDLE h = CreateFileW(path, 0, share_mode, NULL, creation, flags, NULL);",
          "4685:     BOOL ret;",
          "4687:     if (h == INVALID_HANDLE_VALUE) return 0;",
          "4688:     ret = GetFileInformationByHandle(h, &st);",
          "4689:     CloseHandle(h);",
          "4690:     if (!ret) return 0;",
          "4691:     return st.dwVolumeSerialNumber;",
          "4692: }",
          "4695: static int",
          "4696: different_device_p(const WCHAR *oldpath, const WCHAR *newpath)",
          "4697: {",
          "4698:     return get_volume_serial_number(oldpath) != get_volume_serial_number(newpath);",
          "4699: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4696:  if (!MoveFileExW(oldpath, newpath, MOVEFILE_REPLACE_EXISTING | MOVEFILE_COPY_ALLOWED))",
          "4697:      res = -1;",
          "4701:  else",
          "4702:      SetFileAttributesW(newpath, oldatts);",
          "4703:     });",
          "",
          "[Removed Lines]",
          "4699:  if (res)",
          "4700:      errno = map_errno(GetLastError());",
          "",
          "[Added Lines]",
          "4724:  if (res) {",
          "4725:      DWORD e = GetLastError();",
          "4726:      if ((e == ERROR_ACCESS_DENIED) && (oldatts & FILE_ATTRIBUTE_DIRECTORY) &&",
          "4727:   different_device_p(oldpath, newpath))",
          "4728:   errno = EXDEV;",
          "4729:      else",
          "4730:   errno = map_errno(e);",
          "4731:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "041afd1cfb337d1d056defa118281728185beb97",
      "candidate_info": {
        "commit_hash": "041afd1cfb337d1d056defa118281728185beb97",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/041afd1cfb337d1d056defa118281728185beb97",
        "files": [
          "ChangeLog",
          "lib/net/http.rb",
          "version.h"
        ],
        "message": "merge revision(s) 52682: [Backport #11401]\n\n\t* lib/net/http.rb: set hostname before call ossl_ssl_set_session.\n\t  [Bug #11401][ruby-core:70152][fix GH-964] Patch by @mkarnebeek\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@52799 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "lib/net/http.rb||linet/http.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "lib/net/http.rb||linet/http.rb": [
          "File: lib/net/http.rb -> linet/http.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "914:             @socket.write(buf)",
          "915:             HTTPResponse.read_new(@socket).value",
          "916:           end",
          "917:           if @ssl_session and",
          "918:              Time.now < @ssl_session.time + @ssl_session.timeout",
          "919:             s.session = @ssl_session if @ssl_session",
          "920:           end",
          "923:           Timeout.timeout(@open_timeout, Net::OpenTimeout) { s.connect }",
          "924:           if @ssl_context.verify_mode != OpenSSL::SSL::VERIFY_NONE",
          "925:             s.post_connection_check(@address)",
          "",
          "[Removed Lines]",
          "921:           # Server Name Indication (SNI) RFC 3546",
          "922:           s.hostname = @address if s.respond_to? :hostname=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.8\"",
          "2: #define RUBY_RELEASE_DATE \"2015-11-30\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 11",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 424",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 425",
          "",
          "---------------"
        ]
      }
    }
  ]
}