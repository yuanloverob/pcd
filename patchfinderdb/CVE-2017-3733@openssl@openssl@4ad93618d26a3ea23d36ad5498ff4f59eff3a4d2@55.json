{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "18ad46297dcd44c1ac6c9f7f2f966e19c4d45e91",
      "candidate_info": {
        "commit_hash": "18ad46297dcd44c1ac6c9f7f2f966e19c4d45e91",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/18ad46297dcd44c1ac6c9f7f2f966e19c4d45e91",
        "files": [
          "doc/CT_POLICY_EVAL_CTX_new.pod",
          "doc/SCT_validate.pod",
          "doc/SSL_CTX_set_ct_validation_callback.pod",
          "util/libcrypto.num"
        ],
        "message": "Cherry-pick doc updates from PR 1554\n\nAlso fix version in libcrypto.num, from backporting new\nfunctions.\n\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1554)\n(cherry picked from commit ebcb536858a271e8812fb9bbafbc0b825e5ece24)",
        "before_after_code_files": [
          "util/libcrypto.num||util/libcrypto.num"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/libcrypto.num||util/libcrypto.num": [
          "File: util/libcrypto.num -> util/libcrypto.num",
          "--- Hunk 1 ---",
          "[Context before]",
          "4208: OCSP_RESPID_match                       4159 1_1_0a EXIST::FUNCTION:OCSP",
          "4209: DSO_pathbyaddr                          4170 1_1_0c EXIST::FUNCTION:",
          "4210: DSO_dsobyaddr                           4171 1_1_0c EXIST::FUNCTION:",
          "",
          "[Removed Lines]",
          "4211: CT_POLICY_EVAL_CTX_get_time             4172 1_1_1 EXIST::FUNCTION:CT",
          "4212: CT_POLICY_EVAL_CTX_set_time             4173 1_1_1 EXIST::FUNCTION:CT",
          "",
          "[Added Lines]",
          "4211: CT_POLICY_EVAL_CTX_get_time             4172 1_1_0d EXIST::FUNCTION:CT",
          "4212: CT_POLICY_EVAL_CTX_set_time             4173 1_1_0d EXIST::FUNCTION:CT",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b1bbee13d9f4e55a8f5592c417dd336012cbeebe",
      "candidate_info": {
        "commit_hash": "b1bbee13d9f4e55a8f5592c417dd336012cbeebe",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b1bbee13d9f4e55a8f5592c417dd336012cbeebe",
        "files": [
          "test/recipes/03-test_ui.t"
        ],
        "message": "Add a test for the UI API\n\nThe best way to test the UI interface is currently by using an openssl\ncommand that uses password_callback.  The only one that does this is\n'genrsa'.\nSince password_callback uses a UI method derived from UI_OpenSSL(), it\nensures that one gets tested well enough as well.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2040)\n(cherry picked from commit 17ac8eaf611b588cca251ba63b187e7d9c7edb83)",
        "before_after_code_files": [
          "test/recipes/03-test_ui.t||test/recipes/03-test_ui.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/03-test_ui.t||test/recipes/03-test_ui.t": [
          "File: test/recipes/03-test_ui.t -> test/recipes/03-test_ui.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #! /usr/bin/env perl",
          "2: # Copyright 2015-2016 The OpenSSL Project Authors. All Rights Reserved.",
          "3: #",
          "4: # Licensed under the OpenSSL license (the \"License\").  You may not use",
          "5: # this file except in compliance with the License.  You can obtain a copy",
          "6: # in the file LICENSE in the source distribution or at",
          "7: # https://www.openssl.org/source/license.html",
          "9: use strict;",
          "10: use warnings;",
          "11: use OpenSSL::Test;",
          "13: setup(\"test_ui\");",
          "15: plan tests => 1;",
          "17: note <<\"EOF\";",
          "18: The best way to test the UI interface is currently by using an openssl",
          "19: command that uses password_callback.  The only one that does this is",
          "20: 'genrsa'.",
          "21: Since password_callback uses a UI method derived from UI_OpenSSL(), it",
          "22: ensures that one gets tested well enough as well.",
          "23: EOF",
          "25: my $outfile = \"rsa_$$.pem\";",
          "26: ok(run(app([\"openssl\", \"genrsa\", \"-passout\", \"pass:password\", \"-aes128\",",
          "27:             \"-out\", $outfile])),",
          "28:    \"Checking that genrsa with a password works properly\");",
          "30: unlink $outfile;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c62ee12574e661a111238954b07ea1d5f0786bec",
      "candidate_info": {
        "commit_hash": "c62ee12574e661a111238954b07ea1d5f0786bec",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c62ee12574e661a111238954b07ea1d5f0786bec",
        "files": [
          "crypto/mem.c"
        ],
        "message": "Removed ugly size_t less than zero check.\n\nCLA: trivial.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2674)\n\n(cherry picked from commit 5e1f879ab5a2bfdf2d58222f965f93fe1b511ce7)",
        "before_after_code_files": [
          "crypto/mem.c||crypto/mem.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/mem.c||crypto/mem.c": [
          "File: crypto/mem.c -> crypto/mem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:     if (malloc_impl != NULL && malloc_impl != CRYPTO_malloc)",
          "76:         return malloc_impl(num, file, line);",
          "79:         return NULL;",
          "81:     allow_customize = 0;",
          "",
          "[Removed Lines]",
          "78:     if (num <= 0)",
          "",
          "[Added Lines]",
          "78:     if (num == 0)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c4fec137617c2002f6f8a76981a47ab79908f628",
      "candidate_info": {
        "commit_hash": "c4fec137617c2002f6f8a76981a47ab79908f628",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c4fec137617c2002f6f8a76981a47ab79908f628",
        "files": [
          "test/ssl-tests/17-renegotiate.conf",
          "test/ssl-tests/17-renegotiate.conf.in",
          "test/ssl-tests/18-dtls-renegotiate.conf",
          "test/ssl-tests/18-dtls-renegotiate.conf.in"
        ],
        "message": "Extend the test_ssl_new renegotiation tests to include client auth\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1983)",
        "before_after_code_files": [
          "test/ssl-tests/17-renegotiate.conf||test/ssl-tests/17-renegotiate.conf",
          "test/ssl-tests/17-renegotiate.conf.in||test/ssl-tests/17-renegotiate.conf.in",
          "test/ssl-tests/18-dtls-renegotiate.conf||test/ssl-tests/18-dtls-renegotiate.conf",
          "test/ssl-tests/18-dtls-renegotiate.conf.in||test/ssl-tests/18-dtls-renegotiate.conf.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/ssl-tests/17-renegotiate.conf||test/ssl-tests/17-renegotiate.conf": [
          "File: test/ssl-tests/17-renegotiate.conf -> test/ssl-tests/17-renegotiate.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # Generated with generate_ssl_tests.pl",
          "5: test-0 = 0-renegotiate-client-no-resume",
          "6: test-1 = 1-renegotiate-client-resume",
          "7: test-2 = 2-renegotiate-server-no-resume",
          "8: test-3 = 3-renegotiate-server-resume",
          "9: # ===========================================================",
          "11: [0-renegotiate-client-no-resume]",
          "",
          "[Removed Lines]",
          "3: num_tests = 4",
          "",
          "[Added Lines]",
          "3: num_tests = 6",
          "9: test-4 = 4-renegotiate-client-auth-require",
          "10: test-5 = 5-renegotiate-client-auth-once",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "112: ResumptionExpected = Yes",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117: # ===========================================================",
          "119: [4-renegotiate-client-auth-require]",
          "120: ssl_conf = 4-renegotiate-client-auth-require-ssl",
          "122: [4-renegotiate-client-auth-require-ssl]",
          "123: server = 4-renegotiate-client-auth-require-server",
          "124: client = 4-renegotiate-client-auth-require-client",
          "126: [4-renegotiate-client-auth-require-server]",
          "127: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "128: CipherString = DEFAULT",
          "129: MaxProtocol = TLSv1.2",
          "130: Options = NoResumptionOnRenegotiation",
          "131: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "132: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/root-cert.pem",
          "133: VerifyMode = Require",
          "135: [4-renegotiate-client-auth-require-client]",
          "136: Certificate = ${ENV::TEST_CERTS_DIR}/ee-client-chain.pem",
          "137: CipherString = DEFAULT",
          "138: PrivateKey = ${ENV::TEST_CERTS_DIR}/ee-key.pem",
          "139: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "140: VerifyMode = Peer",
          "142: [test-4]",
          "143: ExpectedResult = Success",
          "144: HandshakeMode = RenegotiateServer",
          "145: Method = TLS",
          "146: ResumptionExpected = No",
          "149: # ===========================================================",
          "151: [5-renegotiate-client-auth-once]",
          "152: ssl_conf = 5-renegotiate-client-auth-once-ssl",
          "154: [5-renegotiate-client-auth-once-ssl]",
          "155: server = 5-renegotiate-client-auth-once-server",
          "156: client = 5-renegotiate-client-auth-once-client",
          "158: [5-renegotiate-client-auth-once-server]",
          "159: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "160: CipherString = DEFAULT",
          "161: MaxProtocol = TLSv1.2",
          "162: Options = NoResumptionOnRenegotiation",
          "163: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "164: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/root-cert.pem",
          "165: VerifyMode = Once",
          "167: [5-renegotiate-client-auth-once-client]",
          "168: Certificate = ${ENV::TEST_CERTS_DIR}/ee-client-chain.pem",
          "169: CipherString = DEFAULT",
          "170: PrivateKey = ${ENV::TEST_CERTS_DIR}/ee-key.pem",
          "171: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "172: VerifyMode = Peer",
          "174: [test-5]",
          "175: ExpectedResult = Success",
          "176: HandshakeMode = RenegotiateServer",
          "177: Method = TLS",
          "178: ResumptionExpected = No",
          "",
          "---------------"
        ],
        "test/ssl-tests/17-renegotiate.conf.in||test/ssl-tests/17-renegotiate.conf.in": [
          "File: test/ssl-tests/17-renegotiate.conf.in -> test/ssl-tests/17-renegotiate.conf.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: package ssltests;",
          "18: our @tests = (",
          "19:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: my $dir_sep = $^O ne \"VMS\" ? \"/\" : \"\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64:             \"ExpectedResult\" => \"Success\"",
          "65:         }",
          "66:     },",
          "67: );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68:     {",
          "69:         name => \"renegotiate-client-auth-require\",",
          "70:         server => {",
          "71:             \"Options\" => \"NoResumptionOnRenegotiation\",",
          "72:             \"MaxProtocol\" => \"TLSv1.2\",",
          "73:             \"VerifyCAFile\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}root-cert.pem\",",
          "74:             \"VerifyMode\" => \"Require\",",
          "75:         },",
          "76:         client => {",
          "77:             \"Certificate\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-client-chain.pem\",",
          "78:             \"PrivateKey\"  => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-key.pem\"",
          "79:         },",
          "80:         test => {",
          "81:             \"Method\" => \"TLS\",",
          "82:             \"HandshakeMode\" => \"RenegotiateServer\",",
          "83:             \"ResumptionExpected\" => \"No\",",
          "84:             \"ExpectedResult\" => \"Success\"",
          "85:         }",
          "86:     },",
          "87:     {",
          "88:         name => \"renegotiate-client-auth-once\",",
          "89:         server => {",
          "90:             \"Options\" => \"NoResumptionOnRenegotiation\",",
          "91:             \"MaxProtocol\" => \"TLSv1.2\",",
          "92:             \"VerifyCAFile\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}root-cert.pem\",",
          "93:             \"VerifyMode\" => \"Once\",",
          "94:         },",
          "95:         client => {",
          "96:             \"Certificate\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-client-chain.pem\",",
          "97:             \"PrivateKey\"  => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-key.pem\"",
          "98:         },",
          "99:         test => {",
          "100:             \"Method\" => \"TLS\",",
          "101:             \"HandshakeMode\" => \"RenegotiateServer\",",
          "102:             \"ResumptionExpected\" => \"No\",",
          "103:             \"ExpectedResult\" => \"Success\"",
          "104:         }",
          "105:     }",
          "",
          "---------------"
        ],
        "test/ssl-tests/18-dtls-renegotiate.conf||test/ssl-tests/18-dtls-renegotiate.conf": [
          "File: test/ssl-tests/18-dtls-renegotiate.conf -> test/ssl-tests/18-dtls-renegotiate.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # Generated with generate_ssl_tests.pl",
          "5: test-0 = 0-renegotiate-client-no-resume",
          "6: test-1 = 1-renegotiate-client-resume",
          "7: test-2 = 2-renegotiate-server-resume",
          "8: # ===========================================================",
          "10: [0-renegotiate-client-no-resume]",
          "",
          "[Removed Lines]",
          "3: num_tests = 3",
          "",
          "[Added Lines]",
          "3: num_tests = 5",
          "8: test-3 = 3-renegotiate-client-auth-require",
          "9: test-4 = 4-renegotiate-client-auth-once",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "84: ResumptionExpected = No",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89: # ===========================================================",
          "91: [3-renegotiate-client-auth-require]",
          "92: ssl_conf = 3-renegotiate-client-auth-require-ssl",
          "94: [3-renegotiate-client-auth-require-ssl]",
          "95: server = 3-renegotiate-client-auth-require-server",
          "96: client = 3-renegotiate-client-auth-require-client",
          "98: [3-renegotiate-client-auth-require-server]",
          "99: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "100: CipherString = DEFAULT",
          "101: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "102: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/root-cert.pem",
          "103: VerifyMode = Require",
          "105: [3-renegotiate-client-auth-require-client]",
          "106: Certificate = ${ENV::TEST_CERTS_DIR}/ee-client-chain.pem",
          "107: CipherString = DEFAULT",
          "108: PrivateKey = ${ENV::TEST_CERTS_DIR}/ee-key.pem",
          "109: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "110: VerifyMode = Peer",
          "112: [test-3]",
          "113: ExpectedResult = Success",
          "114: HandshakeMode = RenegotiateServer",
          "115: Method = DTLS",
          "116: ResumptionExpected = No",
          "119: # ===========================================================",
          "121: [4-renegotiate-client-auth-once]",
          "122: ssl_conf = 4-renegotiate-client-auth-once-ssl",
          "124: [4-renegotiate-client-auth-once-ssl]",
          "125: server = 4-renegotiate-client-auth-once-server",
          "126: client = 4-renegotiate-client-auth-once-client",
          "128: [4-renegotiate-client-auth-once-server]",
          "129: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "130: CipherString = DEFAULT",
          "131: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "132: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/root-cert.pem",
          "133: VerifyMode = Once",
          "135: [4-renegotiate-client-auth-once-client]",
          "136: Certificate = ${ENV::TEST_CERTS_DIR}/ee-client-chain.pem",
          "137: CipherString = DEFAULT",
          "138: PrivateKey = ${ENV::TEST_CERTS_DIR}/ee-key.pem",
          "139: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "140: VerifyMode = Peer",
          "142: [test-4]",
          "143: ExpectedResult = Success",
          "144: HandshakeMode = RenegotiateServer",
          "145: Method = DTLS",
          "146: ResumptionExpected = No",
          "",
          "---------------"
        ],
        "test/ssl-tests/18-dtls-renegotiate.conf.in||test/ssl-tests/18-dtls-renegotiate.conf.in": [
          "File: test/ssl-tests/18-dtls-renegotiate.conf.in -> test/ssl-tests/18-dtls-renegotiate.conf.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: package ssltests;",
          "18: our @tests = (",
          "19:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: my $dir_sep = $^O ne \"VMS\" ? \"/\" : \"\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "60:             \"ExpectedResult\" => \"Success\"",
          "61:         }",
          "62:     },",
          "63: );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64:     {",
          "65:         name => \"renegotiate-client-auth-require\",",
          "66:         server => {",
          "67:             \"VerifyCAFile\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}root-cert.pem\",",
          "68:             \"VerifyMode\" => \"Require\",",
          "69:         },",
          "70:         client => {",
          "71:             \"Certificate\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-client-chain.pem\",",
          "72:             \"PrivateKey\"  => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-key.pem\"",
          "73:         },",
          "74:         test => {",
          "75:             \"Method\" => \"DTLS\",",
          "76:             \"HandshakeMode\" => \"RenegotiateServer\",",
          "77:             \"ResumptionExpected\" => \"No\",",
          "78:             \"ExpectedResult\" => \"Success\"",
          "79:         }",
          "80:     },",
          "81:     {",
          "82:         name => \"renegotiate-client-auth-once\",",
          "83:         server => {",
          "84:             \"VerifyCAFile\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}root-cert.pem\",",
          "85:             \"VerifyMode\" => \"Once\",",
          "86:         },",
          "87:         client => {",
          "88:             \"Certificate\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-client-chain.pem\",",
          "89:             \"PrivateKey\"  => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-key.pem\"",
          "90:         },",
          "91:         test => {",
          "92:             \"Method\" => \"DTLS\",",
          "93:             \"HandshakeMode\" => \"RenegotiateServer\",",
          "94:             \"ResumptionExpected\" => \"No\",",
          "95:             \"ExpectedResult\" => \"Success\"",
          "96:         }",
          "97:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "be31d57686a551261cfd5deb95c9553402942a43",
      "candidate_info": {
        "commit_hash": "be31d57686a551261cfd5deb95c9553402942a43",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/be31d57686a551261cfd5deb95c9553402942a43",
        "files": [
          "crypto/mem_sec.c"
        ],
        "message": "Prevent allocations of size 0 in sh_init.\n\nwhich are not possible with the default OPENSSL_zalloc, but are possible if\nthe user has installed their own allocator using CRYPTO_set_mem_functions. If\nthe 0-allocations succeeds, the secure heap code will later access\n(at least) the first byte of that space, which is technically an OOB\naccess. This could lead to problems with some custom allocators that only\nreturn a valid pointer for subsequent free()-ing, and do not expect that\nthe pointer is actually dereferenced.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2605)\n(cherry picked from commit 7f07149d25f8d7e00e9350ff2f064a4d25c1a13d)",
        "before_after_code_files": [
          "crypto/mem_sec.c||crypto/mem_sec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/mem_sec.c||crypto/mem_sec.c": [
          "File: crypto/mem_sec.c -> crypto/mem_sec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "356:     sh.minsize = minsize;",
          "357:     sh.bittable_size = (sh.arena_size / sh.minsize) * 2;",
          "359:     sh.freelist_size = -1;",
          "360:     for (i = sh.bittable_size; i; i >>= 1)",
          "361:         sh.freelist_size++;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "360:     if (sh.bittable_size >> 3 == 0)",
          "361:         goto err;",
          "",
          "---------------"
        ]
      }
    }
  ]
}