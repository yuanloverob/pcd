{
  "cve_id": "CVE-2015-8547",
  "cve_desc": "The CoreUserInputHandler::doMode function in core/coreuserinputhandler.cpp in Quassel 0.10.0 allows remote attackers to cause a denial of service (application crash) via the \"/op *\" command in a query.",
  "repo": "quassel/quassel",
  "patch_hash": "b8edbda019eeb99da8663193e224efc9d1265dc7",
  "patch_info": {
    "commit_hash": "b8edbda019eeb99da8663193e224efc9d1265dc7",
    "repo": "quassel/quassel",
    "commit_url": "https://github.com/quassel/quassel/commit/b8edbda019eeb99da8663193e224efc9d1265dc7",
    "files": [
      "src/core/coreuserinputhandler.cpp",
      "src/core/corenetwork.cpp",
      "src/core/postgresqlstorage.cpp",
      "src/core/sqlitestorage.cpp"
    ],
    "message": "Merge pull request #153 from elxa/fix-op-command-crashing-core\n\nFixes a crash of the core when executing \"/op *\" in a query.",
    "before_after_code_files": [
      "src/core/coreuserinputhandler.cpp||src/core/coreuserinputhandler.cpp"
    ]
  },
  "patch_diff": {
    "src/core/coreuserinputhandler.cpp||src/core/coreuserinputhandler.cpp": [
      "File: src/core/coreuserinputhandler.cpp -> src/core/coreuserinputhandler.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "228:     if (!isNumber || maxModes == 0) maxModes = 1;",
      "230:     QStringList nickList;",
      "232:         const QList<IrcUser*> users = network()->ircChannel(bufferInfo.bufferName())->ircUsers();",
      "233:         foreach(IrcUser *user, users) {",
      "234:             if ((addOrRemove == '+' && !network()->ircChannel(bufferInfo.bufferName())->userModes(user).contains(mode))",
      "",
      "[Removed Lines]",
      "231:     if (nicks == \"*\") { // All users in channel",
      "",
      "[Added Lines]",
      "231:     if (nicks == \"*\" && bufferInfo.type() == BufferInfo::ChannelBuffer) { // All users in channel",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3ef11b8520e756cbc3e957965c5ad9a623ca1d6a",
      "candidate_info": {
        "commit_hash": "3ef11b8520e756cbc3e957965c5ad9a623ca1d6a",
        "repo": "quassel/quassel",
        "commit_url": "https://github.com/quassel/quassel/commit/3ef11b8520e756cbc3e957965c5ad9a623ca1d6a",
        "files": [
          "src/core/coreuserinputhandler.cpp"
        ],
        "message": "Fixes a crash of the core when executing \"/op *\" in a query.",
        "before_after_code_files": [
          "src/core/coreuserinputhandler.cpp||src/core/coreuserinputhandler.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/core/coreuserinputhandler.cpp||src/core/coreuserinputhandler.cpp"
          ],
          "candidate": [
            "src/core/coreuserinputhandler.cpp||src/core/coreuserinputhandler.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/core/coreuserinputhandler.cpp||src/core/coreuserinputhandler.cpp": [
          "File: src/core/coreuserinputhandler.cpp -> src/core/coreuserinputhandler.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "228:     if (!isNumber || maxModes == 0) maxModes = 1;",
          "230:     QStringList nickList;",
          "232:         const QList<IrcUser*> users = network()->ircChannel(bufferInfo.bufferName())->ircUsers();",
          "233:         foreach(IrcUser *user, users) {",
          "234:             if ((addOrRemove == '+' && !network()->ircChannel(bufferInfo.bufferName())->userModes(user).contains(mode))",
          "",
          "[Removed Lines]",
          "231:     if (nicks == \"*\") { // All users in channel",
          "",
          "[Added Lines]",
          "231:     if (nicks == \"*\" && bufferInfo.type() == BufferInfo::ChannelBuffer) { // All users in channel",
          "",
          "---------------"
        ]
      }
    }
  ]
}