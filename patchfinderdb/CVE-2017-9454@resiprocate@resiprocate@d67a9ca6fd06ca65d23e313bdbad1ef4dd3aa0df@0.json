{
  "cve_id": "CVE-2017-9454",
  "cve_desc": "Buffer overflow in the ares_parse_a_reply function in the embedded ares library in ReSIProcate before 1.12.0 allows remote attackers to cause a denial of service (out-of-bounds-read) via a crafted DNS response.",
  "repo": "resiprocate/resiprocate",
  "patch_hash": "d67a9ca6fd06ca65d23e313bdbad1ef4dd3aa0df",
  "patch_info": {
    "commit_hash": "d67a9ca6fd06ca65d23e313bdbad1ef4dd3aa0df",
    "repo": "resiprocate/resiprocate",
    "commit_url": "https://github.com/resiprocate/resiprocate/commit/d67a9ca6fd06ca65d23e313bdbad1ef4dd3aa0df",
    "files": [
      "rutil/dns/ares/ares_parse_a_reply.c"
    ],
    "message": "ares: Prevent buffer overlow in ares_parse_a_reply (CVE-2017-9454)\n\nThis buffer overflow is in the embedded copy of ares that will be\nused unless the external alternative c-ares is used by specifying\nthe configure argument --with-c-ares.\n\nIt has been found with LibFuzzer from the LLVM project.",
    "before_after_code_files": [
      "rutil/dns/ares/ares_parse_a_reply.c||rutil/dns/ares/ares_parse_a_reply.c"
    ]
  },
  "patch_diff": {
    "rutil/dns/ares/ares_parse_a_reply.c||rutil/dns/ares/ares_parse_a_reply.c": [
      "File: rutil/dns/ares/ares_parse_a_reply.c -> rutil/dns/ares/ares_parse_a_reply.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "103:       rr_class = DNS_RR_CLASS(aptr);",
      "104:       rr_len = DNS_RR_LEN(aptr);",
      "105:       aptr += RRFIXEDSZ;",
      "107:       if (rr_class == C_IN && rr_type == T_A",
      "108:    && rr_len == sizeof(struct in_addr)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "106:       if (aptr + rr_len > abuf + alen)",
      "107:  {",
      "108:    free(rr_name);",
      "109:    status = ARES_EBADRESP;",
      "110:    break;",
      "111:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "03c2419fc99249039ebc7174c8f61c0f3fb04ce9",
      "candidate_info": {
        "commit_hash": "03c2419fc99249039ebc7174c8f61c0f3fb04ce9",
        "repo": "resiprocate/resiprocate",
        "commit_url": "https://github.com/resiprocate/resiprocate/commit/03c2419fc99249039ebc7174c8f61c0f3fb04ce9",
        "files": [
          "rutil/dns/ares/ares_parse_ptr_reply.c"
        ],
        "message": "ares: Fix memory leak in PTR reply parser",
        "before_after_code_files": [
          "rutil/dns/ares/ares_parse_ptr_reply.c||rutil/dns/ares/ares_parse_ptr_reply.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/resiprocate/resiprocate/pull/76"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "rutil/dns/ares/ares_parse_ptr_reply.c||rutil/dns/ares/ares_parse_ptr_reply.c": [
          "File: rutil/dns/ares/ares_parse_ptr_reply.c -> rutil/dns/ares/ares_parse_ptr_reply.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:    status = ares_expand_name(aptr, abuf, alen, &rr_data, &len);",
          "95:    if (status != ARES_SUCCESS)",
          "97:    if (hostname)",
          "98:      free(hostname);",
          "99:    hostname = rr_data;",
          "",
          "[Removed Lines]",
          "96:      break;",
          "",
          "[Added Lines]",
          "96:      {",
          "97:        free(rr_name);",
          "98:        break;",
          "99:      }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "105:    status = ares_expand_name(aptr, abuf, alen, &rr_data, &len);",
          "106:    if (status != ARES_SUCCESS)",
          "108:    free(ptrname);",
          "109:    ptrname = rr_data;",
          "110:  }",
          "",
          "[Removed Lines]",
          "107:      break;",
          "",
          "[Added Lines]",
          "110:      {",
          "111:        free(rr_name);",
          "112:        break;",
          "113:      }",
          "",
          "---------------"
        ]
      }
    }
  ]
}