{
  "cve_id": "CVE-2015-8895",
  "cve_desc": "Integer overflow in coders/icon.c in ImageMagick 6.9.1-3 and later allows remote attackers to cause a denial of service (application crash) via a crafted length value, which triggers a buffer overflow.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734",
  "patch_info": {
    "commit_hash": "0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734",
    "files": [
      "MagickCore/memory.c",
      "MagickCore/studio.h",
      "MagickCore/version.c",
      "MagickCore/version.h",
      "MagickWand/studio.h",
      "coders/icon.c",
      "coders/pict.c",
      "configure",
      "configure.ac"
    ],
    "message": "",
    "before_after_code_files": [
      "MagickCore/memory.c||MagickCore/memory.c",
      "MagickCore/studio.h||MagickCore/studio.h",
      "MagickCore/version.c||MagickCore/version.c",
      "MagickCore/version.h||MagickCore/version.h",
      "MagickWand/studio.h||MagickWand/studio.h",
      "coders/icon.c||coders/icon.c",
      "coders/pict.c||coders/pict.c",
      "configure.ac||configure.ac"
    ]
  },
  "patch_diff": {
    "MagickCore/memory.c||MagickCore/memory.c": [
      "File: MagickCore/memory.c -> MagickCore/memory.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "606:     }",
      "607:   if ((memory_info->blob == NULL) &&",
      "608:       (AcquireMagickResource(MapResource,length) != MagickFalse))",
      "611:         Heap memory failed, try anonymous memory mapping.",
      "",
      "[Removed Lines]",
      "609:     {",
      "",
      "[Added Lines]",
      "609:     {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "615:         memory_info->type=MapVirtualMemory;",
      "616:       else",
      "617:         RelinquishMagickResource(MapResource,length);",
      "619:   if (memory_info->blob == NULL)",
      "621:       int",
      "627:       file=AcquireUniqueFileResource(memory_info->filename);",
      "628:       if (file != -1)",
      "629:         {",
      "",
      "[Removed Lines]",
      "618:     }",
      "620:     {",
      "622:         file;",
      "625:         Anonymous memory mapping failed, try file-backed memory mapping.",
      "",
      "[Added Lines]",
      "619:   if ((memory_info->blob == NULL) &&",
      "620:       (AcquireMagickResource(DiskResource,length) != MagickFalse))",
      "621:     {",
      "623:         file;",
      "628:       file=AcquireUniqueFileResource(memory_info->filename);",
      "629:       if (file == -1)",
      "631:       else",
      "632:         {",
      "633:           if ((lseek(file,length-1,SEEK_SET) < 0) || (write(file,\"\",1) != 1))",
      "634:             RelinquishMagickResource(DiskResource,length);",
      "635:           else",
      "636:             {",
      "637:               if (AcquireMagickResource(MapResource,length) == MagickFalse)",
      "638:                 RelinquishMagickResource(DiskResource,length);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1033: %",
      "1035: MagickExport MemoryInfo *RelinquishVirtualMemory(MemoryInfo *memory_info)",
      "1037:   assert(memory_info != (MemoryInfo *) NULL);",
      "1038:   assert(memory_info->signature == MagickSignature);",
      "1039:   if (memory_info->blob != (void *) NULL)",
      "",
      "[Removed Lines]",
      "1036: {",
      "",
      "[Added Lines]",
      "1048: {",
      "1049:   assert(memory_info != (MemoryInfo *) NULL);",
      "1050:   assert(memory_info->signature == MagickSignature);",
      "1051:   if (memory_info->blob != (void *) NULL)",
      "",
      "---------------"
    ],
    "MagickCore/studio.h||MagickCore/studio.h": [
      "File: MagickCore/studio.h -> MagickCore/studio.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "46: #if defined(_magickcore_inline) && !defined(inline)",
      "47: # define inline  _magickcore_inline",
      "48: #endif",
      "52: # if defined(__cplusplus) || defined(c_plusplus)",
      "53: #  undef inline",
      "54: # endif",
      "",
      "[Removed Lines]",
      "49: #if defined(_magickcore_restrict) && !defined(restrict)",
      "50: # define restrict  _magickcore_restrict",
      "51: #endif",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "75: #  include <stdlib.h>",
      "76: # endif",
      "77: #endif",
      "78: #if defined(MAGICKCORE_HAVE_STRING_H)",
      "79: # if !defined(STDC_HEADERS) && defined(MAGICKCORE_HAVE_MEMORY_H)",
      "80: #  include <memory.h>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "75: #if defined(_magickcore_restrict) && !defined(restrict)",
      "76: # define restrict  _magickcore_restrict",
      "77: #endif",
      "",
      "---------------"
    ],
    "MagickCore/version.c||MagickCore/version.c": [
      "File: MagickCore/version.c -> MagickCore/version.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "219: %      const char *GetMagickFeatures(void)",
      "220: %",
      "221: %  No parameters are required.",
      "224: MagickExport const char *GetMagickFeatures(void)",
      "225: {",
      "226:   return \"DPC\"",
      "227: #if defined(MAGICKCORE_BUILD_MODULES) || defined(_DLL)",
      "228:   \" Modules\"",
      "229: #endif",
      "230: #if defined(MAGICKCORE_HDRI_SUPPORT)",
      "231:   \" HDRI\"",
      "232: #endif",
      "233: #if defined(MAGICKCORE_OPENCL_SUPPORT)",
      "234:   \" OpenCL\"",
      "235: #endif",
      "",
      "[Removed Lines]",
      "222: %",
      "",
      "[Added Lines]",
      "222: %",
      "224: MagickExport const char *GetMagickFeatures(void)",
      "225: {",
      "226:   return \"DPC\"",
      "231:   \" Cipher\"",
      "232: #endif",
      "233: #if defined(MAGICKCORE_HDRI_SUPPORT)",
      "239: #if defined(MAGICKCORE_OPENCL_SUPPORT)",
      "240:   \" OpenCL\"",
      "241: #endif",
      "",
      "---------------"
    ],
    "MagickCore/version.h||MagickCore/version.h": [
      "File: MagickCore/version.h -> MagickCore/version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "28: #define MagickPackageName \"ImageMagick\"",
      "29: #define MagickCopyright  \"Copyright (C) 1999-2015 ImageMagick Studio LLC\"",
      "31: #define MagickLibVersion  0x700",
      "32: #define MagickLibVersionText  \"7.0.0\"",
      "33: #define MagickLibVersionNumber  0,0,0",
      "",
      "[Removed Lines]",
      "30: #define MagickSVNRevision  \"18658:18662M\"",
      "",
      "[Added Lines]",
      "30: #define MagickSVNRevision  \"18670M\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "48: #define MagickppLibAddendum  \"-0\"",
      "49: #define MagickppLibInterface  0",
      "50: #define MagickppLibMinInterface  0",
      "52: #define MagickChangeDate   \"20120427\"",
      "53: #define MagickAuthoritativeLicense  \\",
      "54:   \"http://www.imagemagick.org/script/license.php\"",
      "55: #define MagickAuthoritativeURL  \"http://www.imagemagick.org\"",
      "57: #define MagickDelegates \"bzlib djvu mpeg fftw fpx fontconfig freetype jbig jng jpeg lcms lzma openexr pango png ps tiff webp x xml zlib\"",
      "58: #define MagickHomeURL  \"file:///usr/local/share/doc/ImageMagick-7/index.html\"",
      "59: #if (MAGICKCORE_QUANTUM_DEPTH == 8)",
      "",
      "[Removed Lines]",
      "51: #define MagickReleaseDate  \"2015-05-26\"",
      "56: #define MagickFeatures \"DPC HDRI OpenMP\"",
      "",
      "[Added Lines]",
      "51: #define MagickReleaseDate  \"2015-05-29\"",
      "56: #define MagickFeatures \"DPC HDRI Cipher OpenMP\"",
      "",
      "---------------"
    ],
    "MagickWand/studio.h||MagickWand/studio.h": [
      "File: MagickWand/studio.h -> MagickWand/studio.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "46: #if defined(_magickcore_inline) && !defined(inline)",
      "47: # define inline _magickcore_inline",
      "48: #endif",
      "52: # if defined(__cplusplus) || defined(c_plusplus)",
      "53: #  undef inline",
      "54: # endif",
      "",
      "[Removed Lines]",
      "49: #if defined(_magickcore_restrict) && !defined(restrict)",
      "50: # define restrict  _magickcore_restrict",
      "51: #endif",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "77: #  include <stdlib.h>",
      "78: # endif",
      "79: #endif",
      "80: #if defined(MAGICKCORE_HAVE_STRING_H)",
      "81: # if !defined(STDC_HEADERS) && defined(MAGICKCORE_HAVE_MEMORY_H)",
      "82: #  include <memory.h>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "77: #if defined(_magickcore_restrict) && !defined(restrict)",
      "78: # define restrict  _magickcore_restrict",
      "79: #endif",
      "",
      "---------------"
    ],
    "coders/icon.c||coders/icon.c": [
      "File: coders/icon.c -> coders/icon.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "183:     size_t",
      "184:       size;",
      "189:     size=(size_t)strtol(p,&q,10);",
      "190:     if (p == q || size < 16 || size > 256)",
      "",
      "[Removed Lines]",
      "186:     while ((isspace((int) ((unsigned char) *p)) != 0))",
      "187:       p++;",
      "",
      "[Added Lines]",
      "186:     while ((isspace((int) ((unsigned char) *p)) != 0))",
      "187:       p++;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "355:         unsigned char",
      "359:           Icon image encoded as a compressed PNG image.",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "coders/pict.c||coders/pict.c": [
      "File: coders/pict.c -> coders/pict.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1637:     source_rectangle;",
      "1639:   register const Quantum",
      "1642:   register ssize_t",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1649:     storage_class;",
      "1651:   ssize_t",
      "1654:   unsigned char",
      "",
      "[Removed Lines]",
      "1652:     y;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1682:     Initialize image info.",
      "1685:   size_rectangle.left=0;",
      "1686:   size_rectangle.bottom=(short) image->rows;",
      "1687:   size_rectangle.right=(short) image->columns;",
      "",
      "[Removed Lines]",
      "1684:   size_rectangle.top=0;",
      "",
      "[Added Lines]",
      "1684:   size_rectangle.top=0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1711:   y_resolution=image->resolution.y != 0.0 ? image->resolution.y :",
      "1712:     DefaultResolution;",
      "1713:   storage_class=image->storage_class;",
      "1715:     storage_class=DirectClass;",
      "1716:   if (storage_class == DirectClass)",
      "1717:     {",
      "",
      "[Removed Lines]",
      "1714:   if (image_info->compression == JPEGCompression)",
      "",
      "[Added Lines]",
      "1714:   if (image_info->compression == JPEGCompression)",
      "",
      "---------------"
    ],
    "configure.ac||configure.ac": [
      "File: configure.ac -> configure.ac",
      "--- Hunk 1 ---",
      "[Context before]",
      "643: if test \"$enable_cipher\" = 'yes'; then",
      "644:     AC_DEFINE(CIPHER_SUPPORT,1,[permit enciphering and deciphering image pixels])",
      "645: fi",
      "647: # Build a zero-configuration version of ImageMagick.",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "645:     MAGICK_FEATURES=\"Cipher $MAGICK_FEATURES\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "654: if test \"$enable_zero_configuration\" = 'yes'; then",
      "655:     AC_DEFINE(ZERO_CONFIGURATION_SUPPORT,1,[Build self-contained, embeddable, zero-configuration ImageMagick])",
      "657: fi",
      "659: # Build a high dynamic range version of ImageMagick.",
      "",
      "[Removed Lines]",
      "656:     MAGICK_FEATURES=\"Zero-Configuration $MAGICK_FEATURES\"",
      "",
      "[Added Lines]",
      "657:     MAGICK_FEATURES=\"Zero-configuration $MAGICK_FEATURES\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3996: if test \"$build_modules\" != 'no'; then",
      "3997:     MAGICK_DEP_LIBS=\"$USER_LIBS $LCMS_LIBS $FREETYPE_LIBS $LQR_LIBS $FFTW_LIBS $FONTCONFIG_LIBS $XEXT_LIBS $IPC_LIBS $X11_LIBS $XT_LIBS $LZMA_LIBS $BZLIB_LIBS $ZLIB_LIBS $LTDL_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"",
      "3998: else",
      "4000: fi",
      "4001: AC_SUBST(MAGICK_DEP_LIBS)",
      "",
      "[Removed Lines]",
      "3999:     MAGICK_DEP_LIBS=\"$USER_LIBS $JBIG_LIBS $LCMS_LIBS $TIFF_LIBS $FREETYPE_LIBS $JPEG_LIBS $GS_LIBS $LQR_LIBS $PNG_LIBS $AUTOTRACE_LIBS $DJVU_LIBS $FFTW_LIBS $FPX_LIBS $FONTCONFIG_LIBS $WEBP_LIBS $WMF_LIBS $DPS_LIBS $XEXT_LIBS $XT_LIBS $IPC_LIBS $X11_LIBS $LZMA_LIBS $BZLIB_LIBS $OPENEXR_LIBS $OPENJPEG_LIBS $PANGO_LIBS $RSVG_LIBS $XML_LIBS $GVC_LIBS $ZLIB_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"",
      "",
      "[Added Lines]",
      "4000:     MAGICK_DEP_LIBS=\"$USER_LIBS $JBIG_LIBS $LCMS_LIBS $TIFF_LIBS $FREETYPE_LIBS $JPEG_LIBS $GS_LIBS $LQR_LIBS $PNG_LIBS $AUTOTRACE_LIBS $DJVU_LIBS $FFTW_LIBS $FPX_LIBS $FONTCONFIG_LIBS $WEBP_LIBS $WMF_LIBS $DPS_LIBS $XEXT_LIBS $XT_LIBS $IPC_LIBS $X11_LIBS $LZMA_LIBS $BZLIB_LIBS $OPENEXR_LIBS $LIBOPENJP2_LIB $PANGO_LIBS $RSVG_LIBS $XML_LIBS $GVC_LIBS $ZLIB_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1bdb23330e9c1c01a13fedf4a13de32b4ee26b5e",
      "candidate_info": {
        "commit_hash": "1bdb23330e9c1c01a13fedf4a13de32b4ee26b5e",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/1bdb23330e9c1c01a13fedf4a13de32b4ee26b5e",
        "files": [
          "MagickCore/draw.c",
          "MagickCore/version.h",
          "configure"
        ],
        "message": "",
        "before_after_code_files": [
          "MagickCore/draw.c||MagickCore/draw.c",
          "MagickCore/version.h||MagickCore/version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MagickCore/version.h||MagickCore/version.h"
          ],
          "candidate": [
            "MagickCore/version.h||MagickCore/version.h"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/draw.c||MagickCore/draw.c": [
          "File: MagickCore/draw.c -> MagickCore/draw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2843:         bounds.y1=point.y;",
          "2844:       if (point.x > bounds.x2)",
          "2845:         bounds.x2=point.x;",
          "2847:         bounds.y2=point.y;",
          "2848:     }",
          "",
          "[Removed Lines]",
          "2846:       if (point.y > bounds.y2)",
          "",
          "[Added Lines]",
          "2846:       if (point.y > bounds.y2)",
          "2847:         bounds.y2=point.y;",
          "2848:     }",
          "2850:       Speculate how many points our primitive might consume.",
          "2852:     length=primitive_info[j].coordinates;",
          "2853:     switch (primitive_type)",
          "2854:     {",
          "2855:       case RectanglePrimitive:",
          "",
          "---------------"
        ],
        "MagickCore/version.h||MagickCore/version.h": [
          "File: MagickCore/version.h -> MagickCore/version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define MagickPackageName \"ImageMagick\"",
          "29: #define MagickCopyright  \"Copyright (C) 1999-2014 ImageMagick Studio LLC\"",
          "31: #define MagickLibVersion  0x700",
          "32: #define MagickLibVersionText  \"7.0.0\"",
          "33: #define MagickLibVersionNumber  1,0,0",
          "",
          "[Removed Lines]",
          "30: #define MagickSVNRevision  \"17039:17045\"",
          "",
          "[Added Lines]",
          "30: #define MagickSVNRevision  \"17086:17088M\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48: #define MagickppLibAddendum  \"-0\"",
          "49: #define MagickppLibInterface  1",
          "50: #define MagickppLibMinInterface  1",
          "52: #define MagickChangeDate   \"20120427\"",
          "53: #define MagickAuthoritativeURL  \"http://www.imagemagick.org\"",
          "54: #define MagickFeatures \"DPC HDRI OpenMP\"",
          "",
          "[Removed Lines]",
          "51: #define MagickReleaseDate  \"2014-11-14\"",
          "",
          "[Added Lines]",
          "51: #define MagickReleaseDate  \"2014-11-23\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "32f75d4dfc71aa7f04bef7191c03f2cbb7885de4",
      "candidate_info": {
        "commit_hash": "32f75d4dfc71aa7f04bef7191c03f2cbb7885de4",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/32f75d4dfc71aa7f04bef7191c03f2cbb7885de4",
        "files": [
          "MagickCore/magick-baseconfig.h",
          "MagickCore/version.h",
          "Makefile.in",
          "PerlMagick/Makefile.PL",
          "coders/Makefile.am",
          "coders/wmf.c",
          "config/config.h.in",
          "configure",
          "configure.ac"
        ],
        "message": "",
        "before_after_code_files": [
          "MagickCore/magick-baseconfig.h||MagickCore/magick-baseconfig.h",
          "MagickCore/version.h||MagickCore/version.h",
          "Makefile.in||Makefile.in",
          "PerlMagick/Makefile.PL||PerlMagick/Makefile.PL",
          "coders/Makefile.am||coders/Makefile.am",
          "coders/wmf.c||coders/wmf.c",
          "config/config.h.in||config/config.h.in",
          "configure.ac||configure.ac"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MagickCore/version.h||MagickCore/version.h",
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "MagickCore/version.h||MagickCore/version.h",
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/magick-baseconfig.h||MagickCore/magick-baseconfig.h": [
          "File: MagickCore/magick-baseconfig.h -> MagickCore/magick-baseconfig.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "371: #define MAGICKCORE_HAVE_J1 1",
          "372: #endif",
          "",
          "[Removed Lines]",
          "375: #ifndef MAGICKCORE_HAVE_LCMS2_H",
          "376: #define MAGICKCORE_HAVE_LCMS2_H 1",
          "377: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "MagickCore/version.h||MagickCore/version.h": [
          "File: MagickCore/version.h -> MagickCore/version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define MagickPackageName \"ImageMagick\"",
          "29: #define MagickCopyright  \"Copyright (C) 1999-2015 ImageMagick Studio LLC\"",
          "31: #define MagickLibVersion  0x700",
          "32: #define MagickLibVersionText  \"7.0.0\"",
          "33: #define MagickLibVersionNumber  0,0,0",
          "",
          "[Removed Lines]",
          "30: #define MagickSVNRevision  \"18723M\"",
          "",
          "[Added Lines]",
          "30: #define MagickSVNRevision  \"18729M\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48: #define MagickppLibAddendum  \"-0\"",
          "49: #define MagickppLibInterface  0",
          "50: #define MagickppLibMinInterface  0",
          "52: #define MagickChangeDate   \"20120427\"",
          "53: #define MagickAuthoritativeLicense  \\",
          "54:   \"http://www.imagemagick.org/script/license.php\"",
          "",
          "[Removed Lines]",
          "51: #define MagickReleaseDate  \"2015-06-04\"",
          "",
          "[Added Lines]",
          "51: #define MagickReleaseDate  \"2015-06-05\"",
          "",
          "---------------"
        ],
        "Makefile.in||Makefile.in": [
          "File: Makefile.in -> Makefile.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1703: @WEBP_DELEGATE_TRUE@@WITH_MODULES_TRUE@am_coders_webp_la_rpath =  \\",
          "1704: @WEBP_DELEGATE_TRUE@@WITH_MODULES_TRUE@ -rpath $(codersdir)",
          "1705: coders_wmf_la_DEPENDENCIES = $(MAGICKCORE_LIBS) $(MAGICKWAND_LIBS) \\",
          "1708: am_coders_wmf_la_OBJECTS = coders/coders_wmf_la-wmf.lo",
          "1709: coders_wmf_la_OBJECTS = $(am_coders_wmf_la_OBJECTS)",
          "1710: coders_wmf_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\",
          "",
          "[Removed Lines]",
          "1706:  $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \\",
          "1707:  $(am__DEPENDENCIES_1)",
          "",
          "[Added Lines]",
          "1706:  $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2614: DEPDIR = @DEPDIR@",
          "2615: DIRSEP = @DIRSEP@",
          "2616: DISTCHECK_CONFIG_FLAGS = @DISTCHECK_CONFIG_FLAGS@",
          "2617: DJVU_LIBS = @DJVU_LIBS@",
          "2618: DLLTOOL = @DLLTOOL@",
          "2619: DNGDecodeDelegate = @DNGDecodeDelegate@",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2616: DJVU_CFLAGS = @DJVU_CFLAGS@",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2634: EXEEXT = @EXEEXT@",
          "2635: EchoDelegate = @EchoDelegate@",
          "2636: EditorDelegate = @EditorDelegate@",
          "2637: FFTW_LIBS = @FFTW_LIBS@",
          "2638: FGREP = @FGREP@",
          "2639: FILTER_DIRNAME = @FILTER_DIRNAME@",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2637: FFTW_CFLAGS = @FFTW_CFLAGS@",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2684: JPEG_LIBS = @JPEG_LIBS@",
          "2685: JXRDecodeDelegate = @JXRDecodeDelegate@",
          "2686: JXREncodeDelegate = @JXREncodeDelegate@",
          "2687: LCMS_LIBS = @LCMS_LIBS@",
          "2688: LD = @LD@",
          "2689: LDFLAGS = @LDFLAGS@",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2688: LCMS_CFLAGS = @LCMS_CFLAGS@",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2819: PKG_CONFIG = @PKG_CONFIG@",
          "2820: PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@",
          "2821: PKG_CONFIG_PATH = @PKG_CONFIG_PATH@",
          "2822: PNG_LIBS = @PNG_LIBS@",
          "2823: POVDelegate = @POVDelegate@",
          "2824: POW_LIB = @POW_LIB@",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2824: PNG_CFLAGS = @PNG_CFLAGS@",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2872: VERSION = @VERSION@",
          "2873: WEBP_LIBS = @WEBP_LIBS@",
          "2874: WMFDecodeDelegate = @WMFDecodeDelegate@",
          "2875: WMF_LIBS = @WMF_LIBS@",
          "2877: WWWDecodeDelegate = @WWWDecodeDelegate@",
          "2878: WebPDecodeDelegate = @WebPDecodeDelegate@",
          "2879: WebPEncodeDelegate = @WebPEncodeDelegate@",
          "",
          "[Removed Lines]",
          "2876: WMF_LIBS_DEPS = @WMF_LIBS_DEPS@",
          "",
          "[Added Lines]",
          "2878: WMF_CFLAGS = @WMF_CFLAGS@",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2881: X11_LIBS = @X11_LIBS@",
          "2882: XEXT_LIBS = @XEXT_LIBS@",
          "2883: XMKMF = @XMKMF@",
          "2884: XML_LIBS = @XML_LIBS@",
          "2885: XPSCMYKDevice = @XPSCMYKDevice@",
          "2886: XPSColorDevice = @XPSColorDevice@",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2887: XML_CFLAGS = @XML_CFLAGS@",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2892: X_LIBS = @X_LIBS@",
          "2893: X_PRE_LIBS = @X_PRE_LIBS@",
          "2894: ZIP = @ZIP@",
          "2895: ZLIB_LIBS = @ZLIB_LIBS@",
          "2896: ZipDelegate = @ZipDelegate@",
          "2897: abs_builddir = @abs_builddir@",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2899: ZLIB_CFLAGS = @ZLIB_CFLAGS@",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2918: builddir = @builddir@",
          "2919: datadir = @datadir@",
          "2920: datarootdir = @datarootdir@",
          "2921: dejavu_font_dir = @dejavu_font_dir@",
          "2923: # Architecture independent data files installed in the package's data directory",
          "2924: docdir = $(DOCUMENTATION_PATH)",
          "2925: dvidir = @dvidir@",
          "2926: exec_prefix = @exec_prefix@",
          "2927: ghostscript_font_dir = @ghostscript_font_dir@",
          "2928: host = @host@",
          "2929: host_alias = @host_alias@",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2926: ddjvuapi_CFLAGS = @ddjvuapi_CFLAGS@",
          "2927: ddjvuapi_LIBS = @ddjvuapi_LIBS@",
          "2934: fftw3_CFLAGS = @fftw3_CFLAGS@",
          "2935: fftw3_LIBS = @fftw3_LIBS@",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2962: top_srcdir = @top_srcdir@",
          "2963: type_include_files = @type_include_files@",
          "2964: windows_font_dir = @windows_font_dir@",
          "2966: topincludedir = @includedir@/MagickCore",
          "2967: AM_CPPFLAGS = -I$(top_builddir) -I$(top_srcdir)",
          "2968: ACLOCAL_AMFLAGS = -I m4",
          "",
          "[Removed Lines]",
          "2965: xml2_config = @xml2_config@",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "4110: coders_wmf_la_SOURCES = coders/wmf.c",
          "4111: coders_wmf_la_CPPFLAGS = $(MAGICK_CODER_CPPFLAGS)",
          "4112: coders_wmf_la_LDFLAGS = $(MODULECOMMONFLAGS)",
          "4115: # WPG coder module",
          "4116: coders_wpg_la_SOURCES = coders/wpg.c",
          "",
          "[Removed Lines]",
          "4113: coders_wmf_la_LIBADD = $(MAGICKCORE_LIBS) $(MAGICKWAND_LIBS) $(WMF_LIBS) $(WMF_LIBS_DEPS) $(MATH_LIBS)",
          "",
          "[Added Lines]",
          "4121: coders_wmf_la_LIBADD = $(MAGICKCORE_LIBS) $(MAGICKWAND_LIBS) $(WMF_LIBS) $(MATH_LIBS)",
          "",
          "---------------"
        ],
        "PerlMagick/Makefile.PL||PerlMagick/Makefile.PL": [
          "File: PerlMagick/Makefile.PL -> PerlMagick/Makefile.PL",
          "--- Hunk 1 ---",
          "[Context before]",
          "161: }",
          "163: # defaults for LIBS & INC & CCFLAGS params that we later pass to Writemakefile",
          "165: my $LIBS_magick = '-L../MagickCore/.libs -lMagickCore-7.Q16HDRI -lperl -lm';",
          "167: my $LDFLAGS_magick   = \"-L../MagickCore/.libs -lMagickCore-7.Q16HDRI $Config{'ldflags'} \";",
          "168: my $LDDLFLAGS_magick = \"-L../MagickCore/.libs -lMagickCore-7.Q16HDRI $Config{'lddlflags'} \";",
          "",
          "[Removed Lines]",
          "164: my $INC_magick = '-I../ -I.. -pthread -I/usr/include/pango-1.0 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/libdrm -DMAGICKCORE_HDRI_ENABLE=1 -DMAGICKCORE_QUANTUM_DEPTH=16 -I/usr/include/libxml2 -I\"' . $Config{'usrinc'} . '/ImageMagick\"';",
          "166: my $CCFLAGS_magick = \"$Config{'ccflags'} -pthread -I/usr/include/OpenEXR -I/usr/include/libdrm -I/usr/include/freetype2 -I/usr/include/libpng16 -fopenmp -g -O2 -Wall -mtune=sandybridge -fexceptions -DMAGICKCORE_HDRI_ENABLE=1 -DMAGICKCORE_QUANTUM_DEPTH=16\";",
          "",
          "[Added Lines]",
          "164: my $INC_magick = '-I../ -I.. -DMAGICKCORE_HDRI_ENABLE=1 -DMAGICKCORE_QUANTUM_DEPTH=16 -I\"' . $Config{'usrinc'} . '/ImageMagick\"';",
          "166: my $CCFLAGS_magick = \"$Config{'ccflags'} -I/usr/include/libxml2 -I/usr/include/libpng16 -pthread -I/usr/include/pango-1.0 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libdrm -I/usr/include/OpenEXR -fopenmp -g -O2 -Wall -mtune=sandybridge -fexceptions -DMAGICKCORE_HDRI_ENABLE=1 -DMAGICKCORE_QUANTUM_DEPTH=16\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "209:    #'CC' => 'gcc',",
          "211:    # C pre-processor flags (e.g. -I & -D options)",
          "214:    # C compiler flags (e.g. -O -g)",
          "215:    'CCFLAGS' => $CCFLAGS_magick,",
          "",
          "[Removed Lines]",
          "212:    # 'CPPFLAGS' => \"$Config{'cppflags'} -pthread -I/usr/include/pango-1.0 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/libdrm -DMAGICKCORE_HDRI_ENABLE=1 -DMAGICKCORE_QUANTUM_DEPTH=16 -I/usr/include/libxml2\",",
          "",
          "[Added Lines]",
          "212:    # 'CPPFLAGS' => \"$Config{'cppflags'} -DMAGICKCORE_HDRI_ENABLE=1 -DMAGICKCORE_QUANTUM_DEPTH=16\",",
          "",
          "---------------"
        ],
        "coders/Makefile.am||coders/Makefile.am": [
          "File: coders/Makefile.am -> coders/Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "1030: coders_wmf_la_SOURCES      = coders/wmf.c",
          "1031: coders_wmf_la_CPPFLAGS     = $(MAGICK_CODER_CPPFLAGS)",
          "1032: coders_wmf_la_LDFLAGS      = $(MODULECOMMONFLAGS)",
          "1035: # WPG coder module",
          "1036: coders_wpg_la_SOURCES      = coders/wpg.c",
          "",
          "[Removed Lines]",
          "1033: coders_wmf_la_LIBADD       = $(MAGICKCORE_LIBS) $(MAGICKWAND_LIBS) $(WMF_LIBS) $(WMF_LIBS_DEPS) $(MATH_LIBS)",
          "",
          "[Added Lines]",
          "1033: coders_wmf_la_LIBADD       = $(MAGICKCORE_LIBS) $(MAGICKWAND_LIBS) $(WMF_LIBS) $(MATH_LIBS)",
          "",
          "---------------"
        ],
        "coders/wmf.c||coders/wmf.c": [
          "File: coders/wmf.c -> coders/wmf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "64: #include \"MagickCore/module.h\"",
          "65: #include \"MagickWand/MagickWand.h\"",
          "68: #undef MAGICKCORE_WMF_DELEGATE",
          "69: #endif",
          "71: #if defined(MAGICKCORE_WMF_DELEGATE)",
          "72: #include \"libwmf/api.h\"",
          "73: #include \"libwmf/eps.h\"",
          "",
          "[Removed Lines]",
          "67: #if defined(__CYGWIN__)",
          "",
          "[Added Lines]",
          "67: #if defined(__CYGWIN__)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "235:       (void) CopyMagickString(image->magick,\"WMF\",MagickPathExtent);",
          "236:     }",
          "237:   (void) RelinquishUniqueFileResource(filename);",
          "239: }",
          "240: #elif defined(MAGICKCORE_WMFLITE_DELEGATE)",
          "",
          "[Removed Lines]",
          "238:   return(GetFirstImageInList(image));",
          "",
          "[Added Lines]",
          "238:   return(GetFirstImageInList(image));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "301: #define TWIPS_PER_INCH        1440",
          "302: #define CENTIMETERS_PER_INCH  2.54",
          "305: #if defined(MAGICKCORE_WMFLITE_DELEGATE)",
          "306: # define wmf_api_create(api,flags,options) wmf_lite_create(api,flags,options)",
          "",
          "[Removed Lines]",
          "303: #define POINTS_PER_INCH       72",
          "",
          "[Added Lines]",
          "303: #define POINTS_PER_INCH       72",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "394:   magick_arc_pie,",
          "395:   magick_arc_chord",
          "396: }",
          "399: #if defined(MAGICKCORE_WMFLITE_DELEGATE)",
          "400: static void  lite_font_init (wmfAPI* API, wmfAPI_Options* options);",
          "",
          "[Removed Lines]",
          "397: magick_arc_t;",
          "",
          "[Added Lines]",
          "397: magick_arc_t;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "420: static void         ipa_draw_ellipse(wmfAPI * API, wmfDrawArc_t * draw_arc);",
          "421: static void         ipa_draw_line(wmfAPI * API, wmfDrawLine_t * draw_line);",
          "422: static void         ipa_draw_pie(wmfAPI * API, wmfDrawArc_t * draw_arc);",
          "424: static void         ipa_draw_polygon(wmfAPI * API, wmfPolyLine_t * poly_line);",
          "425: #if defined(MAGICKCORE_WMFLITE_DELEGATE)",
          "426: static void         ipa_draw_polypolygon(wmfAPI * API, wmfPolyPoly_t* polypolygon);",
          "",
          "[Removed Lines]",
          "423: static void         ipa_draw_pixel(wmfAPI * API, wmfDrawPixel_t * draw_pixel);",
          "",
          "[Added Lines]",
          "423: static void         ipa_draw_pixel(wmfAPI * API, wmfDrawPixel_t * draw_pixel);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "439: static void         ipa_udata_free(wmfAPI * API, wmfUserData_t * userdata);",
          "440: static void         ipa_udata_init(wmfAPI * API, wmfUserData_t * userdata);",
          "441: static void         ipa_udata_set(wmfAPI * API, wmfUserData_t * userdata);",
          "443: static void         util_draw_arc(wmfAPI * API, wmfDrawArc_t * draw_arc,magick_arc_t finish);",
          "444: #if defined(MAGICKCORE_WMFLITE_DELEGATE)",
          "",
          "[Removed Lines]",
          "442: static int          magick_progress_callback(void* wand,float quantum);",
          "",
          "[Added Lines]",
          "442: static int          magick_progress_callback(void* wand,float quantum);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1203:       (void) PopDrawingWand(WmfDrawingWand);",
          "1204:     }",
          "1205: }",
          "1208: #if defined(MAGICKCORE_WMFLITE_DELEGATE)",
          "1209: static void ipa_draw_polypolygon(wmfAPI * API, wmfPolyPoly_t* polypolygon)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1396:   FR->draw_arc = ipa_draw_arc;",
          "1397:   FR->draw_ellipse = ipa_draw_ellipse;",
          "1398:   FR->draw_line = ipa_draw_line;",
          "1400:   FR->draw_polygon = ipa_draw_polygon;",
          "1401: #if defined(MAGICKCORE_WMFLITE_DELEGATE)",
          "1402:   FR->draw_polypolygon = ipa_draw_polypolygon;",
          "",
          "[Removed Lines]",
          "1399:   FR->poly_line = ipa_poly_line;",
          "",
          "[Added Lines]",
          "1399:   FR->poly_line = ipa_poly_line;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1539:           if ((WMF_DC_TEXTALIGN(draw_text->dc) & TA_CENTER))",
          "1540:             {",
          "1541:               double",
          "1544: #if defined(MAGICKCORE_WMFLITE_DELEGATE)",
          "1545:               point.x -= text_width / 2;",
          "",
          "[Removed Lines]",
          "1542:                 text_width = metrics.width * (ddata->scale_y / ddata->scale_x);",
          "",
          "[Added Lines]",
          "1542:                 text_width = metrics.width * (ddata->scale_y / ddata->scale_x);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2203: #endif",
          "2205:   return floor(pointsize);",
          "2208: #if defined(MAGICKCORE_WMFLITE_DELEGATE)",
          "",
          "[Removed Lines]",
          "2206: }",
          "",
          "[Added Lines]",
          "2206: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2639:   ddata->draw_info->font=(char *)",
          "2640:     RelinquishMagickMemory(ddata->draw_info->font);",
          "2641:   ddata->draw_info->text=(char *)",
          "2644: #if defined(MAGICKCORE_WMFLITE_DELEGATE)",
          "",
          "[Removed Lines]",
          "2642:     RelinquishMagickMemory(ddata->draw_info->text);",
          "",
          "[Added Lines]",
          "2642:     RelinquishMagickMemory(ddata->draw_info->text);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2949: ModuleExport size_t RegisterWMFImage(void)",
          "2950: {",
          "2951:   MagickInfo",
          "2954:   entry = AcquireMagickInfo(\"WMF\",\"WMZ\",\"Compressed Windows Meta File\");",
          "2955: #if defined(MAGICKCORE_WMF_DELEGATE) || defined(MAGICKCORE_WMFLITE_DELEGATE)",
          "2956:   entry->decoder=ReadWMFImage;",
          "2957: #endif",
          "2959:   (void) RegisterMagickInfo(entry);",
          "2960:   entry=AcquireMagickInfo(\"WMF\",\"WMF\",\"Windows Meta File\");",
          "2961: #if defined(MAGICKCORE_WMF_DELEGATE) || defined(MAGICKCORE_WMFLITE_DELEGATE)",
          "",
          "[Removed Lines]",
          "2958:   entry->flags|=CoderSeekableStreamFlag;",
          "",
          "[Added Lines]",
          "2958:   entry->flags|=CoderSeekableStreamFlag;",
          "",
          "---------------"
        ],
        "config/config.h.in||config/config.h.in": [
          "File: config/config.h.in -> config/config.h.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "243: #undef HAVE_J1",
          "258: #undef HAVE_LIBGCOV",
          "",
          "[Removed Lines]",
          "246: #undef HAVE_LCMS2_H",
          "249: #undef HAVE_LCMS2_LCMS2_H",
          "252: #undef HAVE_LCMS_H",
          "255: #undef HAVE_LCMS_LCMS_H",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "968: #undef WITH_DMALLOC",
          "974: #undef WMF_DELEGATE",
          "",
          "[Removed Lines]",
          "971: #undef WMFLITE_DELEGATE",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "1635: fi",
          "1637: have_zlib='no'",
          "1670: fi",
          "1671: AM_CONDITIONAL(ZLIB_DELEGATE, test \"$have_zlib\" = 'yes')",
          "1672: AC_SUBST(ZLIB_LIBS)",
          "1674: # whether modules are built or not.",
          "1675: with_ltdl='yes'",
          "1676: have_ltdl='no'",
          "",
          "[Removed Lines]",
          "1638: ZLIB_LIBS=''",
          "1639: dnl PNG requires zlib so enable zlib check if PNG is requested",
          "1640: if test \"$with_zlib\" != 'no' || test \"$with_png\" != 'no'; then",
          "1641:     AC_MSG_RESULT([-------------------------------------------------------------])",
          "1642:     AC_MSG_CHECKING([for ZLIB])",
          "1643:     AC_MSG_RESULT([])",
          "1644:     ZLIB_LIBS=''",
          "1645:     failed=0",
          "1646:     passed=0",
          "1647:     AC_CHECK_HEADER(zconf.h,passed=`expr $passed + 1`,failed=`expr $failed + 1`)",
          "1648:     AC_CHECK_HEADER(zlib.h,passed=`expr $passed + 1`,failed=`expr $failed + 1`)",
          "1649:     AC_CHECK_LIB(z,compress,passed=`expr $passed + 1`,failed=`expr $failed + 1`,)",
          "1650:     AC_CHECK_LIB(z,uncompress,passed=`expr $passed + 1`,failed=`expr $failed + 1`,)",
          "1651:     AC_CHECK_LIB(z,deflate,passed=`expr $passed + 1`,failed=`expr $failed + 1`,)",
          "1652:     AC_CHECK_LIB(z,inflate,passed=`expr $passed + 1`,failed=`expr $failed + 1`,)",
          "1653:     AC_CHECK_LIB(z,gzseek,passed=`expr $passed + 1`,failed=`expr $failed + 1`,)",
          "1654:     AC_CHECK_LIB(z,gztell,passed=`expr $passed + 1`,failed=`expr $failed + 1`,)",
          "1655:     AC_MSG_CHECKING([if ZLIB package is complete])",
          "1656:     if test $passed -gt 0; then",
          "1657:         if test $failed -gt 0; then",
          "1658:             AC_MSG_RESULT([no -- some components failed test])",
          "1659:             have_zlib='no (failed tests)'",
          "1660:         else",
          "1661:             ZLIB_LIBS='-lz'",
          "1662:             LIBS=\"$ZLIB_LIBS $LIBS\"",
          "1663:             AC_DEFINE(ZLIB_DELEGATE,1,Define if you have zlib compression library)",
          "1664:             AC_MSG_RESULT([yes])",
          "1665:             have_zlib='yes'",
          "1666:         fi",
          "1667:     else",
          "1668:         AC_MSG_RESULT([no])",
          "1669:     fi",
          "",
          "[Added Lines]",
          "1638: ZLIB_CFLAGS=\"\"",
          "1639: ZLIB_LIBS=\"\"",
          "1640: ZLIB_PKG=\"\"",
          "1641: if test \"x$with_zlib\" = \"xyes\"; then",
          "1642:   AC_MSG_RESULT([-------------------------------------------------------------])",
          "1643:   PKG_CHECK_MODULES(ZLIB,[zlib >= 1.0.0], have_zlib=yes, have_zlib=no)",
          "1644:   AC_MSG_RESULT([])",
          "1647: if test \"$have_zlib\" = 'yes'; then",
          "1648:   AC_DEFINE(ZLIB_DELEGATE,1,Define if you have ZLIB library)",
          "1649:   CFLAGS=\"$ZLIB_CFLAGS $CFLAGS\"",
          "1650: fi",
          "1653: AC_SUBST(ZLIB_CFLAGS)",
          "1656: dnl ===========================================================================",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1749: AUTOTRACE_LIBS=\"\"",
          "1750: AUTOTRACE_PKG=\"\"",
          "1751: if test \"x$with_autotrace\" = \"xyes\"; then",
          "1755: fi",
          "1757: if test \"$have_autotrace\" = 'yes'; then",
          "1763: fi",
          "1765: AM_CONDITIONAL(AUTOTRACE_DELEGATE,test \"$have_autotrace\" = 'yes')",
          "",
          "[Removed Lines]",
          "1752:     AC_MSG_RESULT([-------------------------------------------------------------])",
          "1753:     PKG_CHECK_MODULES(AUTOTRACE,[autotrace >= 0.31.1], have_autotrace=yes, have_autotrace=no)",
          "1754:     AC_MSG_RESULT([])",
          "1758:     failed=0",
          "1759:     AC_DEFINE(AUTOTRACE_DELEGATE,1,Define if you have AUTOTRACE library)",
          "1760:     if test \"$build_modules\" = 'no'; then",
          "1761:       CPPFLAGS=\"$AUTOTRACE_CFLAGS $CPPFLAGS\"",
          "1762:     fi",
          "",
          "[Added Lines]",
          "1736:   AC_MSG_RESULT([-------------------------------------------------------------])",
          "1737:   PKG_CHECK_MODULES(AUTOTRACE,[autotrace >= 0.31.1], have_autotrace=yes, have_autotrace=no)",
          "1738:   AC_MSG_RESULT([])",
          "1742:   AC_DEFINE(AUTOTRACE_DELEGATE,1,Define if you have AUTOTRACE library)",
          "1743:   CFLAGS=\"$AUTOTRACE_CFLAGS $CFLAGS\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1866: fi",
          "1868: have_fftw='no'",
          "1893: fi",
          "1894: AM_CONDITIONAL(FFTW_DELEGATE, test \"$have_fftw\" = 'yes')",
          "1895: AC_SUBST(FFTW_LIBS)",
          "1897: dnl ===========================================================================",
          "",
          "[Removed Lines]",
          "1869: FFTW_LIBS=''",
          "1870: if test \"$with_fftw\" != 'no'; then",
          "1871:     AC_MSG_RESULT([-------------------------------------------------------------])",
          "1872:     AC_MSG_CHECKING([for FFTW])",
          "1873:     AC_MSG_RESULT([])",
          "1874:     failed=0",
          "1875:     passed=0",
          "1876:     AC_CHECK_HEADER(fftw3.h,passed=`expr $passed + 1`,failed=`expr $failed + 1`,)",
          "1877:     AC_CHECK_LIB(fftw3,fftw_execute,passed=`expr $passed + 1`,failed=`expr $failed + 1`,)",
          "1878:     AC_MSG_CHECKING([if FFTW package is complete])",
          "1879:     if test $passed -gt 0; then",
          "1880:         if test $failed -gt 0; then",
          "1881:             AC_MSG_RESULT([no -- some components failed test])",
          "1882:             have_fftw='no (failed tests)'",
          "1883:         else",
          "1884:             FFTW_LIBS='-lfftw3'",
          "1885:             LIBS=\"$FFTW_LIBS $LIBS\"",
          "1886:             AC_DEFINE(FFTW_DELEGATE,1,Define if you have FFTW library)",
          "1887:             AC_MSG_RESULT([yes])",
          "1888:             have_fftw='yes'",
          "1889:         fi",
          "1890:     else",
          "1891:         AC_MSG_RESULT([no])",
          "1892:     fi",
          "",
          "[Added Lines]",
          "1850: FFTW_CFLAGS=\"\"",
          "1851: FFTW_LIBS=\"\"",
          "1852: FFTW_PKG=\"\"",
          "1853: if test \"x$with_fftw\" = \"xyes\"; then",
          "1854:   AC_MSG_RESULT([-------------------------------------------------------------])",
          "1855:   PKG_CHECK_MODULES(fftw3,[fftw3 >= 3.0.0], have_fftw=yes, have_fftw=no)",
          "1856:   AC_MSG_RESULT([])",
          "1859: if test \"$have_fftw\" = 'yes'; then",
          "1860:   AC_DEFINE(FFTW_DELEGATE,1,Define if you have FFTW library)",
          "1861:   CFLAGS=\"$fftw3_CFLAGS $CFLAGS\"",
          "1862: fi",
          "1865: AC_SUBST(FFTW_CFLAGS)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1956: fi",
          "1958: have_djvu='no'",
          "1983: fi",
          "1984: AM_CONDITIONAL(DJVU_DELEGATE, test \"$have_djvu\" = 'yes')",
          "1985: AC_SUBST(DJVU_LIBS)",
          "1987: dnl ===========================================================================",
          "",
          "[Removed Lines]",
          "1959: DJVU_LIBS=''",
          "1960: if test \"$with_djvu\" != 'no'; then",
          "1961:     AC_MSG_RESULT([-------------------------------------------------------------])",
          "1962:     AC_MSG_CHECKING([for DJVU])",
          "1963:     AC_MSG_RESULT([])",
          "1964:     failed=0",
          "1965:     passed=0",
          "1966:     AC_CHECK_HEADER(libdjvu/ddjvuapi.h,passed=`expr $passed + 1`,failed=`expr $failed + 1`,)",
          "1967:     AC_CHECK_LIB(djvulibre,ddjvu_context_create,passed=`expr $passed + 1`,failed=`expr $failed + 1`,)",
          "1968:     AC_MSG_CHECKING([if DJVU package is complete])",
          "1969:     if test $passed -gt 0; then",
          "1970:         if test $failed -gt 0; then",
          "1971:             AC_MSG_RESULT([no -- some components failed test])",
          "1972:             have_djvu='no (failed tests)'",
          "1973:         else",
          "1974:             DJVU_LIBS='-ldjvulibre'",
          "1975:             LIBS=\"$DJVU_LIBS $LIBS\"",
          "1976:             AC_DEFINE(DJVU_DELEGATE,1,Define if you have DJVU library)",
          "1977:             AC_MSG_RESULT([yes])",
          "1978:             have_djvu='yes'",
          "1979:         fi",
          "1980:     else",
          "1981:         AC_MSG_RESULT([no])",
          "1982:     fi",
          "",
          "[Added Lines]",
          "1930: DJVU_CFLAGS=\"\"",
          "1931: DJVU_LIBS=\"\"",
          "1932: DJVU_PKG=\"\"",
          "1933: if test \"x$with_djvu\" = \"xyes\"; then",
          "1934:   AC_MSG_RESULT([-------------------------------------------------------------])",
          "1935:   PKG_CHECK_MODULES(ddjvuapi,[ddjvuapi >= 3.5.0], have_djvu=yes, have_djvu=no)",
          "1936:   AC_MSG_RESULT([])",
          "1939: if test \"$have_djvu\" = 'yes'; then",
          "1940:   AC_DEFINE(DJVU_DELEGATE,1,Define if you have DJVU library)",
          "1941:   CFLAGS=\"$DDJVUAPI_CFLAGS $CFLAGS\"",
          "1942: fi",
          "1945: AC_SUBST(DJVU_CFLAGS)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2004: FONTCONFIG_LIBS=\"\"",
          "2005: FONTCONFIG_PKG=\"\"",
          "2006: if test \"x$with_fontconfig\" = \"xyes\"; then",
          "2010: fi",
          "2012: if test \"$have_fontconfig\" = 'yes'; then",
          "2013:   AC_DEFINE(FONTCONFIG_DELEGATE,1,Define if you have FONTCONFIG library)",
          "2017: fi",
          "2019: AM_CONDITIONAL(FONTCONFIG_DELEGATE,test \"$have_fontconfig\" = 'yes')",
          "",
          "[Removed Lines]",
          "2007:     AC_MSG_RESULT([-------------------------------------------------------------])",
          "2008:     PKG_CHECK_MODULES(FONTCONFIG,[fontconfig >= 2.1.0], have_fontconfig=yes, have_fontconfig=no)",
          "2009:     AC_MSG_RESULT([])",
          "2014:   if test \"$build_modules\" = 'no'; then",
          "2015:     CPPFLAGS=\"$FONTCONFIG_CFLAGS $CPPFLAGS\"",
          "2016:   fi",
          "",
          "[Added Lines]",
          "1968:   AC_MSG_RESULT([-------------------------------------------------------------])",
          "1969:   PKG_CHECK_MODULES(FONTCONFIG,[fontconfig >= 2.1.0], have_fontconfig=yes, have_fontconfig=no)",
          "1970:   AC_MSG_RESULT([])",
          "1975:   CFLAGS=\"$FONTCONFIG_CFLAGS $CFLAGS\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2040: FREETYPE_LIBS=\"\"",
          "2041: FREETYPE_PKG=\"\"",
          "2042: if test \"x$with_freetype\" = \"xyes\"; then",
          "2046: fi",
          "2048: if test \"$have_freetype\" = 'yes'; then",
          "2051: fi",
          "2053: AM_CONDITIONAL(FREETYPE_DELEGATE, test \"$have_freetype\" = 'yes')",
          "",
          "[Removed Lines]",
          "2043:     AC_MSG_RESULT([-------------------------------------------------------------])",
          "2044:     PKG_CHECK_MODULES(FREETYPE,[freetype2], have_freetype=yes, have_freetype=no)",
          "2045:     AC_MSG_RESULT([])",
          "2049:     AC_DEFINE(FREETYPE_DELEGATE,1,Define if you have FREETYPE library)",
          "2050:     CFLAGS=\"$FREETYPE_CFLAGS $CFLAGS\"",
          "",
          "[Added Lines]",
          "2002:   AC_MSG_RESULT([-------------------------------------------------------------])",
          "2003:   PKG_CHECK_MODULES(FREETYPE,[freetype2], have_freetype=yes, have_freetype=no)",
          "2004:   AC_MSG_RESULT([])",
          "2008:   AC_DEFINE(FREETYPE_DELEGATE,1,Define if you have FREETYPE library)",
          "2009:   CFLAGS=\"$FREETYPE_CFLAGS $CFLAGS\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2158: GVC_PKG=\"\"",
          "2159: if test \"x$with_gvc\" = \"xyes\"; then",
          "2163: fi",
          "2165: if test \"$have_gvc\" = 'yes'; then",
          "2170: fi",
          "2172: AM_CONDITIONAL(GVC_DELEGATE, test \"$have_gvc\" = 'yes')",
          "",
          "[Removed Lines]",
          "2160:     AC_MSG_RESULT([-------------------------------------------------------------])",
          "2161:     PKG_CHECK_MODULES(GVC,[libgvc >= 2.9.0], have_gvc=yes, have_gvc=no)",
          "2162:     AC_MSG_RESULT([])",
          "2166:     AC_DEFINE(GVC_DELEGATE,1,Define if you have GVC library)",
          "2167:     if test \"$build_modules\" = 'no'; then",
          "2168:         CPPFLAGS=\"$GVC_CFLAGS $CPPFLAGS\"",
          "2169:     fi",
          "",
          "[Added Lines]",
          "2119:   AC_MSG_RESULT([-------------------------------------------------------------])",
          "2120:   PKG_CHECK_MODULES(GVC,[libgvc >= 2.9.0], have_gvc=yes, have_gvc=no)",
          "2121:   AC_MSG_RESULT([])",
          "2125:   AC_DEFINE(GVC_DELEGATE,1,Define if you have GVC library)",
          "2126:   CFLAGS=\"$GVC_CFLAGS $CFLAGS\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2286: #",
          "2287: # Check for LCMS delegate library.",
          "2288: #",
          "2290: AC_ARG_WITH(lcms,",
          "2291:         [  --without-lcms          disable lcms (v1.1X) support],",
          "2292:         [with_lcms=$withval],",
          "",
          "[Removed Lines]",
          "2289: # Disable LCMS.",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2295:     DISTCHECK_CONFIG_FLAGS=\"${DISTCHECK_CONFIG_FLAGS} --with-lcms=$with_lcms \"",
          "2296: fi",
          "2362: have_lcms='no'",
          "2409: fi",
          "2414: fi",
          "2418: dnl ===========================================================================",
          "",
          "[Removed Lines]",
          "2298: # Disable LCMS2.",
          "2299: AC_ARG_WITH(lcms2,",
          "2300:         [  --without-lcms2         disable lcms (v2.X) support],",
          "2301:         [with_lcms2=$withval],",
          "2302:         [with_lcms2='yes'])",
          "2303: if test \"$with_lcms2\" != 'yes' ; then",
          "2304:     DISTCHECK_CONFIG_FLAGS=\"${DISTCHECK_CONFIG_FLAGS} --with-lcms2=$with_lcms2 \"",
          "2305: fi",
          "2307: have_lcms2='no'",
          "2308: LCMS_LIBS=''",
          "2309: if test \"$with_lcms2\" != 'no'; then",
          "2310:     AC_MSG_RESULT([-------------------------------------------------------------])",
          "2311:     AC_MSG_CHECKING([for LCMS v2])",
          "2312:     AC_MSG_RESULT()",
          "2313:     failed=0",
          "2314:     passed=0",
          "2315:     have_lcms_header='no'",
          "2317:     # Check for <lcms2.h>",
          "2318:     AC_CHECK_HEADER(lcms2.h,have_lcms_header='yes',,)",
          "2319:     if test \"$have_lcms_header\" = 'yes'; then",
          "2320:        AC_DEFINE(HAVE_LCMS2_H,1,Define if you have the <lcms2.h> header file.)",
          "2321:        passed=`expr $passed + 1`",
          "2322:     fi",
          "2324:     # Check for <lcms2/lcms2.h)",
          "2325:     if test \"$have_lcms_header\" != 'yes'; then",
          "2326:       AC_CHECK_HEADER(lcms2/lcms2.h,have_lcms_header='yes',,)",
          "2327:       if test \"$have_lcms_header\" = 'yes'; then",
          "2328:         passed=`expr $passed + 1`",
          "2329:         AC_DEFINE(HAVE_LCMS2_LCMS2_H,1,Define if you have the <lcms2/lcms2.h> header file.)",
          "2330:       fi",
          "2331:     fi",
          "2333:     # Failed to find lcms header?",
          "2334:     if test \"$have_lcms_header\" != 'yes'; then",
          "2335:       failed=`expr $failed + 1`",
          "2336:     fi",
          "2338:     AC_CHECK_LIB(lcms2,cmsSetLogErrorHandler,passed=`expr $passed + 1`,failed=`expr $failed + 1`,)",
          "2339:     AC_MSG_CHECKING(if LCMS v2 package is complete)",
          "2340:     if test $passed -gt 0; then",
          "2341:       if test $failed -gt 0; then",
          "2342:         AC_MSG_RESULT(no -- some components failed test)",
          "2343:         have_lcms2='no (failed tests)'",
          "2344:       else",
          "2345:         LCMS_LIBS='-llcms2'",
          "2346:         LIBS=\"$LCMS_LIBS $LIBS\"",
          "2347:         AC_MSG_RESULT(yes)",
          "2348:         have_lcms2='yes'",
          "2349:       fi",
          "2350:     else",
          "2351:       AC_MSG_RESULT(no)",
          "2352:     fi",
          "2353: fi",
          "2355: #",
          "2356: # Check for LCMS v1 (1.11 or later)",
          "2357: #",
          "2358: if test $have_lcms2 = 'yes'; then",
          "2359:   with_lcms='no'",
          "2360: fi",
          "2363: if test \"$with_lcms\" != 'no'; then",
          "2364:     AC_MSG_RESULT([-------------------------------------------------------------])",
          "2365:     AC_MSG_CHECKING([for LCMS v1.1X])",
          "2366:     AC_MSG_RESULT()",
          "2367:     failed=0",
          "2368:     passed=0",
          "2369:     have_lcms_header='no'",
          "2371:     # Check for <lcms.h>",
          "2372:     if test \"$have_lcms_header\" != 'yes'; then",
          "2373:       AC_CHECK_HEADER(lcms.h,have_lcms_header='yes',,)",
          "2374:       if test \"$have_lcms_header\" = 'yes'; then",
          "2375:         passed=`expr $passed + 1`",
          "2376:         AC_DEFINE(HAVE_LCMS_H,1,Define if you have the <lcms.h> header file.)",
          "2377:       fi",
          "2378:     fi",
          "2380:     # Check for <lcms/lcms.h>",
          "2381:     if test \"$have_lcms_header\" != 'yes'; then",
          "2382:       AC_CHECK_HEADER(lcms/lcms.h,have_lcms_header='yes',,)",
          "2383:       if test \"$have_lcms_header\" = 'yes'; then",
          "2384:         passed=`expr $passed + 1`",
          "2385:         AC_DEFINE(HAVE_LCMS_LCMS_H,1,Define if you have the <lcms/lcms.h> header file.)",
          "2386:       fi",
          "2387:     fi",
          "2389:     # Failed to find lcms header?",
          "2390:     if test \"$have_lcms_header\" != 'yes'; then",
          "2391:       failed=`expr $failed + 1`",
          "2392:     fi",
          "2394:     AC_CHECK_LIB(lcms,cmsSetErrorHandler,passed=`expr $passed + 1`,failed=`expr $failed + 1`,)",
          "2395:     AC_MSG_CHECKING(if LCMS package is complete)",
          "2396:     if test $passed -gt 0; then",
          "2397:       if test $failed -gt 0; then",
          "2398:         AC_MSG_RESULT(no -- some components failed test)",
          "2399:         have_lcms='no (failed tests)'",
          "2400:       else",
          "2401:         LCMS_LIBS='-llcms'",
          "2402:         LIBS=\"$LCMS_LIBS $LIBS\"",
          "2403:         AC_MSG_RESULT(yes)",
          "2404:         have_lcms='yes'",
          "2405:       fi",
          "2406:     else",
          "2407:       AC_MSG_RESULT(no)",
          "2408:     fi",
          "2411: AM_CONDITIONAL(LCMS_DELEGATE, test \"$have_lcms2\" = 'yes' -o \"$have_lcms\" = 'yes')",
          "2412: if test \"$have_lcms2\" = 'yes' -o \"$have_lcms\" = 'yes'; then",
          "2413:   AC_DEFINE(LCMS_DELEGATE,1,[Define if you have LCMS (v1.11 or later) library])",
          "2415: AC_SUBST(LCMS_LIBS)",
          "",
          "[Added Lines]",
          "2255: LCMS_CFLAGS=\"\"",
          "2256: LCMS_LIBS=\"\"",
          "2257: LCMS_PKG=\"\"",
          "2258: if test \"x$with_lcms\" = \"xyes\"; then",
          "2259:   AC_MSG_RESULT([-------------------------------------------------------------])",
          "2260:   PKG_CHECK_MODULES(LCMS,[lcms >= 1.0.0], have_lcms=yes, have_lcms=no)",
          "2261:   AC_MSG_RESULT([])",
          "2264: if test \"$have_lcms\" = 'yes'; then",
          "2265:   AC_DEFINE(LCMS_DELEGATE,1,Define if you have LCMS library)",
          "2266:   CFLAGS=\"$LCMS_CFLAGS $CFLAGS\"",
          "2269: AM_CONDITIONAL(LCMS_DELEGATE, test \"$have_lcms\" = 'yes')",
          "2270: AC_SUBST(LCMS_CFLAGS)",
          "2271: AC_SUBST(LCMS_LIBS)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2435: LIBOPENJP2_LIBS=\"\"",
          "2436: LIBOPENJP2_PKG=\"\"",
          "2437: if test \"x$with_openjp2\" = \"xyes\"; then",
          "2441: fi",
          "2443: if test \"$have_openjp2\" = 'yes'; then",
          "2448: fi",
          "2450: AM_CONDITIONAL(LIBOPENJP2_DELEGATE, test \"$have_openjp2\" = 'yes')",
          "",
          "[Removed Lines]",
          "2438:     AC_MSG_RESULT([-------------------------------------------------------------])",
          "2439:     PKG_CHECK_MODULES(LIBOPENJP2,[libopenjp2 >= 2.1.0], have_openjp2=yes, have_openjp2=no)",
          "2440:     AC_MSG_RESULT([])",
          "2444:     AC_DEFINE(LIBOPENJP2_DELEGATE,1,Define if you have OPENJP2 library)",
          "2445:     if test \"$build_modules\" = 'no'; then",
          "2446:         CFLAGS=\"$LIBOPENJP2_CFLAGS $CFLAGS\"",
          "2447:     fi",
          "",
          "[Added Lines]",
          "2293:   AC_MSG_RESULT([-------------------------------------------------------------])",
          "2294:   PKG_CHECK_MODULES(LIBOPENJP2,[libopenjp2 >= 2.1.0], have_openjp2=yes, have_openjp2=no)",
          "2295:   AC_MSG_RESULT([])",
          "2299:   AC_DEFINE(LIBOPENJP2_DELEGATE,1,Define if you have OPENJP2 library)",
          "2300:   CFLAGS=\"$LIBOPENJP2_CFLAGS $CFLAGS\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2472: LQR_LIBS=\"\"",
          "2473: LQR_PKG=\"\"",
          "2474: if test \"x$with_lqr\" = \"xyes\"; then",
          "2478: fi",
          "2480: if test \"$have_lqr\" = 'yes'; then",
          "2483: fi",
          "2485: AM_CONDITIONAL(LQR_DELEGATE, test \"$have_lqr\" = 'yes')",
          "",
          "[Removed Lines]",
          "2475:     AC_MSG_RESULT([-------------------------------------------------------------])",
          "2476:     PKG_CHECK_MODULES(LQR,[lqr-1 >= 0.1.0], have_lqr=yes, have_lqr=no)",
          "2477:     AC_MSG_RESULT([])",
          "2481:     AC_DEFINE(LQR_DELEGATE,1,Define if you have LQR library)",
          "2482:     CFLAGS=\"$LQR_CFLAGS $CFLAGS\"",
          "",
          "[Added Lines]",
          "2328:   AC_MSG_RESULT([-------------------------------------------------------------])",
          "2329:   PKG_CHECK_MODULES(LQR,[lqr-1 >= 0.1.0], have_lqr=yes, have_lqr=no)",
          "2330:   AC_MSG_RESULT([])",
          "2334:   AC_DEFINE(LQR_DELEGATE,1,Define if you have LQR library)",
          "2335:   CFLAGS=\"$LQR_CFLAGS $CFLAGS\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2500: LZMA_PKG=\"\"",
          "2501: if test \"x$with_lzma\" = \"xyes\"; then",
          "2505: fi",
          "2507: if test \"$have_lzma\" = 'yes'; then",
          "2512: fi",
          "2514: AM_CONDITIONAL(LZMA_DELEGATE, test \"$have_lzma\" = 'yes')",
          "",
          "[Removed Lines]",
          "2502:     AC_MSG_RESULT([-------------------------------------------------------------])",
          "2503:     PKG_CHECK_MODULES(LZMA,[liblzma >= 2.9.0], have_lzma=yes, have_lzma=no)",
          "2504:     AC_MSG_RESULT([])",
          "2508:     AC_DEFINE(LZMA_DELEGATE,1,Define if you have LZMA library)",
          "2509:     if test \"$build_modules\" = 'no'; then",
          "2510:         CPPFLAGS=\"$LZMA_CFLAGS $CPPFLAGS\"",
          "2511:     fi",
          "",
          "[Added Lines]",
          "2355:   AC_MSG_RESULT([-------------------------------------------------------------])",
          "2356:   PKG_CHECK_MODULES(LZMA,[liblzma >= 2.9.0], have_lzma=yes, have_lzma=no)",
          "2357:   AC_MSG_RESULT([])",
          "2361:   AC_DEFINE(LZMA_DELEGATE,1,Define if you have LZMA library)",
          "2362:   CFLAGS=\"$LZMA_CFLAGS $CFLAGS\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2535: OPENEXR_LIBS=\"\"",
          "2536: OPENEXR_PKG=\"\"",
          "2537: if test \"x$with_openexr\" = \"xyes\"; then",
          "2541: fi",
          "2543: if test \"$have_openexr\" = 'yes'; then",
          "2548: fi",
          "2550: AM_CONDITIONAL(OPENEXR_DELEGATE, test \"$have_openexr\" = 'yes')",
          "",
          "[Removed Lines]",
          "2538:     AC_MSG_RESULT([-------------------------------------------------------------])",
          "2539:     PKG_CHECK_MODULES(OPENEXR,[OpenEXR >= 1.0.6], have_openexr=yes, have_openexr=no)",
          "2540:     AC_MSG_RESULT([])",
          "2544:     AC_DEFINE(OPENEXR_DELEGATE,1,Define if you have OPENEXR library)",
          "2545:     if test \"$build_modules\" = 'no'; then",
          "2546:         CFLAGS=\"$OPENEXR_CFLAGS $CFLAGS\"",
          "2547:     fi",
          "",
          "[Added Lines]",
          "2389:   AC_MSG_RESULT([-------------------------------------------------------------])",
          "2390:   PKG_CHECK_MODULES(OPENEXR,[OpenEXR >= 1.0.6], have_openexr=yes, have_openexr=no)",
          "2391:   AC_MSG_RESULT([])",
          "2395:   AC_DEFINE(OPENEXR_DELEGATE,1,Define if you have OPENEXR library)",
          "2396:   CFLAGS=\"$OPENEXR_CFLAGS $CFLAGS\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2572: PANGO_LIBS=\"\"",
          "2573: PANGO_PKG=\"\"",
          "2574: if test \"x$with_pango\" = \"xyes\"; then",
          "2580: fi",
          "2582: if test \"$have_pango\" = 'yes'; then",
          "2587: fi",
          "2589: if test \"$have_pangocairo\" = 'yes'; then",
          "2594: fi",
          "2596: AM_CONDITIONAL(PANGO_DELEGATE, test \"$have_pango\" = 'yes')",
          "",
          "[Removed Lines]",
          "2575:     AC_MSG_RESULT([-------------------------------------------------------------])",
          "2576:     PKG_CHECK_MODULES(PANGO, [pangocairo >= 1.28.1], have_pangocairo=yes, have_pangocairo=no)",
          "2577:     AC_MSG_RESULT([])",
          "2578:     PKG_CHECK_MODULES(PANGO, [pango >= 1.28.1], have_pango=yes, have_pango=no)",
          "2579:     AC_MSG_RESULT([])",
          "2583:     AC_DEFINE(PANGO_DELEGATE,1,Define if you have PANGO library)",
          "2584:     if test \"$build_modules\" = 'no'; then",
          "2585:         CPPFLAGS=\"$PANGO_CFLAGS $CPPFLAGS\"",
          "2586:     fi",
          "2590:     AC_DEFINE(PANGOCAIRO_DELEGATE,1,Define if you have PANGOCAIRO library)",
          "2591:     if test \"$build_modules\" = 'no'; then",
          "2592:         CPPFLAGS=\"$PANGOCAIRO_CFLAGS $CPPFLAGS\"",
          "2593:     fi",
          "",
          "[Added Lines]",
          "2424:   AC_MSG_RESULT([-------------------------------------------------------------])",
          "2425:   PKG_CHECK_MODULES(PANGO, [pangocairo >= 1.28.1], have_pangocairo=yes, have_pangocairo=no)",
          "2426:   AC_MSG_RESULT([])",
          "2427:   PKG_CHECK_MODULES(PANGO, [pango >= 1.28.1], have_pango=yes, have_pango=no)",
          "2428:   AC_MSG_RESULT([])",
          "2432:   AC_DEFINE(PANGO_DELEGATE,1,Define if you have PANGO library)",
          "2433:   CFLAGS=\"$PANGO_CFLAGS $CFLAGS\"",
          "2437:   AC_DEFINE(PANGOCAIRO_DELEGATE,1,Define if you have PANGOCAIRO library)",
          "2438:   CFLAGS=\"$PANGOCAIRO_CFLAGS $CFLAGS\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2614: fi",
          "2616: have_png='no'",
          "2620:   AC_MSG_RESULT([-------------------------------------------------------------])",
          "2724: fi",
          "2727: AC_SUBST(PNG_LIBS)",
          "2730: dnl ===========================================================================",
          "2732: #",
          "",
          "[Removed Lines]",
          "2617: PNG_LIBS=''",
          "2619: if test \"$with_png\" != 'no' -a  \"$have_zlib\" != 'no' ; then",
          "2621:   AC_MSG_CHECKING(for PNG support )",
          "2622:   AC_MSG_RESULT()",
          "2623:   failed=0",
          "2624:   passed=0",
          "2625:   AC_CHECK_HEADER(png.h,passed=`expr $passed + 1`,",
          "2626:      failed=`expr $failed + 1`,)",
          "2628:   if test $passed -gt 0; then",
          "2629:     for var in 7 6 5 4 2 '' ; do",
          "2630:       if test \"$have_png\" = 'no' ; then",
          "2631:         if test \"x${var}\" = 'x' ; then",
          "2632:           pnglib='png'",
          "2633:         else",
          "2634:           pnglib=\"png1${var}\"",
          "2635:         fi",
          "2637: #       Test for compatible LIBPNG library",
          "2638:         failed=0",
          "2639:         passed=0",
          "2640:         if test \"$with_png\" = 'yes' -o \"$with_png\" = \"libpng1${var}\" ; then",
          "2641:           if test \"${pnglib}\" != 'png' ; then",
          "2642:             AC_MSG_CHECKING(for LIBPNG1${var} support )",
          "2643:             AC_TRY_COMPILE(",
          "2644: #include <stdio.h>",
          "2645: #include <stdlib.h>",
          "2646: #include <png.h>",
          "2647: ,",
          "2648: changequote(<<, >>)dnl",
          "2649: <<",
          "2650: #if PNG_LIBPNG_VER_MINOR != ${var}",
          "2651: #error LIBPNG library must be version 1${var}!",
          "2652: Kaboom, Kaboom",
          "2653: #endif",
          "2654: return 0;",
          "2655: >>,",
          "2656:             changequote([, ])dnl",
          "2657:             ac_cv_libpng_ok='yes',",
          "2658:             ac_cv_libpng_ok='no')",
          "2659:             if test \"$ac_cv_libpng_ok\" = 'yes' ; then",
          "2660:               passed=`expr $passed + 1`",
          "2661:               AC_MSG_RESULT(yes)",
          "2662:             else",
          "2663:               failed=`expr $failed + 1`",
          "2664:               AC_MSG_RESULT(no)",
          "2665:             fi",
          "2666:           else",
          "2667:             passed=`expr $passed + 1`",
          "2668:             AC_MSG_RESULT(yes)",
          "2669:           fi",
          "2670:         fi",
          "2672:         if test $passed -gt 0 -a $failed -le 0; then",
          "2673:           if test \"1${var}\" = '17' ; then",
          "2674:             AC_CHECK_LIB(png17,png_get_io_ptr,passed=`expr $passed + 1`,",
          "2675:                failed=`expr $failed + 1`,)",
          "2676:             AC_CHECK_LIB(png17,png_longjmp,passed=`expr $passed + 1`,",
          "2677:                failed=`expr $failed + 1`,)",
          "2678:           fi",
          "2679:           if test \"1${var}\" = '16' ; then",
          "2680:             AC_CHECK_LIB(png16,png_get_io_ptr,passed=`expr $passed + 1`,",
          "2681:                failed=`expr $failed + 1`,)",
          "2682:             AC_CHECK_LIB(png16,png_longjmp,passed=`expr $passed + 1`,",
          "2683:                failed=`expr $failed + 1`,)",
          "2684:           fi",
          "2685:           if test \"1${var}\" = '15' ; then",
          "2686:             AC_CHECK_LIB(png15,png_get_io_ptr,passed=`expr $passed + 1`,",
          "2687:                failed=`expr $failed + 1`,)",
          "2688:             AC_CHECK_LIB(png15,png_longjmp,passed=`expr $passed + 1`,",
          "2689:                failed=`expr $failed + 1`,)",
          "2690:           fi",
          "2691:           if test \"1${var}\" = '14' ; then",
          "2692:             AC_CHECK_LIB(png14,png_get_io_ptr,passed=`expr $passed + 1`,",
          "2693:                failed=`expr $failed + 1`,)",
          "2694:             AC_CHECK_LIB(png14,png_get_io_state,passed=`expr $passed + 1`,",
          "2695:                failed=`expr $failed + 1`,)",
          "2696:           fi",
          "2697:           if test \"1${var}\" = '12' ; then",
          "2698:             AC_CHECK_LIB(png12,png_get_io_ptr,passed=`expr $passed + 1`,",
          "2699:                failed=`expr $failed + 1`,)",
          "2700:           fi",
          "2701:           if test \"1${var}\" = '1' ; then",
          "2702:               AC_CHECK_LIB(png,png_get_io_ptr,passed=`expr $passed + 1`,",
          "2703:                  failed=`expr $failed + 1`,)",
          "2704:           fi",
          "2705:           if test $passed -gt 0 -a $failed -le 0 ; then",
          "2706:             AC_MSG_CHECKING(if ${pnglib} package is complete)",
          "2707:             if test $passed -gt 0 ; then",
          "2708:               if test $failed -gt 0 ; then",
          "2709:                   AC_MSG_RESULT(no -- some components failed test)",
          "2710:                   have_png='no (failed tests)'",
          "2711:               else",
          "2712:                   PNG_LIBS=\"-l${pnglib}\"",
          "2713:                   LIBS=\"$PNG_LIBS $LIBS\"",
          "2714:                   AC_DEFINE(PNG_DELEGATE,1,Define if you have PNG library)",
          "2715:                   AC_MSG_RESULT(yes)",
          "2716:                   have_png='yes'",
          "2717:               fi",
          "2718:             fi",
          "2719:           fi",
          "2720:         fi",
          "2721:       fi",
          "2722:     done",
          "2723:   fi",
          "2726: AM_CONDITIONAL(PNG_DELEGATE,test \"$have_png\" = 'yes')",
          "",
          "[Added Lines]",
          "2462: PNG_CFLAGS=\"\"",
          "2463: PNG_LIBS=\"\"",
          "2464: PNG_PKG=\"\"",
          "2465: if test \"x$with_png\" = \"xyes\"; then",
          "2467:   PKG_CHECK_MODULES(PNG,[libpng >= 1.0.0], have_png=yes, have_png=no)",
          "2468:   AC_MSG_RESULT([])",
          "2469: fi",
          "2471: if test \"$have_png\" = 'yes'; then",
          "2472:   AC_DEFINE(PNG_DELEGATE,1,Define if you have PNG library)",
          "2473:   CFLAGS=\"$PNG_CFLAGS $CFLAGS\"",
          "2476: AM_CONDITIONAL(PNG_DELEGATE, test \"$have_png\" = 'yes')",
          "2477: AC_SUBST(PNG_CFLAGS)",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2748: RSVG_LIBS=\"\"",
          "2749: RSVG_PKG=\"\"",
          "2750: if test \"x$with_rsvg\" = \"xyes\"; then",
          "2756: fi",
          "2758: if test \"$have_rsvg\" = 'yes'; then",
          "2763: fi",
          "2765: if test \"$have_cairo\" = 'yes'; then",
          "2770: fi",
          "2772: AM_CONDITIONAL(RSVG_DELEGATE, test \"$have_rsvg\" = 'yes')",
          "",
          "[Removed Lines]",
          "2751:     AC_MSG_RESULT([-------------------------------------------------------------])",
          "2752:     PKG_CHECK_MODULES(RSVG,[librsvg-2.0 >= 2.9.0], have_rsvg=yes, have_rsvg=no)",
          "2753:     AC_MSG_RESULT([])",
          "2754:     PKG_CHECK_MODULES(CAIRO_SVG, cairo-svg, have_cairo=yes, have_cairo=no)",
          "2755:     AC_MSG_RESULT([])",
          "2759:     AC_DEFINE(RSVG_DELEGATE,1,Define if you have RSVG library)",
          "2760:     if test \"$build_modules\" = 'no'; then",
          "2761:         CPPFLAGS=\"$RSVG_CFLAGS $CPPFLAGS\"",
          "2762:     fi",
          "2766:     AC_DEFINE(CAIRO_DELEGATE,1,Define if you have CAIRO library)",
          "2767:     if test \"$build_modules\" = 'no'; then",
          "2768:         CPPFLAGS=\"$CAIRO_SVG_CFLAGS $CPPFLAGS\"",
          "2769:     fi",
          "",
          "[Added Lines]",
          "2501:   AC_MSG_RESULT([-------------------------------------------------------------])",
          "2502:   PKG_CHECK_MODULES(RSVG,[librsvg-2.0 >= 2.9.0], have_rsvg=yes, have_rsvg=no)",
          "2503:   AC_MSG_RESULT([])",
          "2504:   PKG_CHECK_MODULES(CAIRO_SVG, cairo-svg, have_cairo=yes, have_cairo=no)",
          "2505:   AC_MSG_RESULT([])",
          "2509:   AC_DEFINE(RSVG_DELEGATE,1,Define if you have RSVG library)",
          "2510:   CFLAGS=\"$RSVG_CFLAGS $CFLAGS\"",
          "2514:   AC_DEFINE(CAIRO_DELEGATE,1,Define if you have CAIRO library)",
          "2515:   CFLAGS=\"$CAIRO_SVG_CFLAGS $CFLAGS\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2896:     [AC_HELP_STRING([--with-wmf],",
          "2897:                     [enable WMF support])],",
          "2898:     [with_wmf=$withval],",
          "2901: if test \"$with_wmf\" != 'yes'; then",
          "2902:     DISTCHECK_CONFIG_FLAGS=\"${DISTCHECK_CONFIG_FLAGS} --with-wmf=$with_wmf \"",
          "2903: fi",
          "2905: have_wmf='no'",
          "2953: fi",
          "2954: AM_CONDITIONAL(WMF_DELEGATE, test \"$have_wmf\" = 'yes')",
          "2955: AC_SUBST(WMF_LIBS)",
          "2959: dnl ===========================================================================",
          "",
          "[Removed Lines]",
          "2899:     [with_wmf='no'])",
          "2906: WMF_LIBS=''",
          "2907: WMF_LIBS_DEPS=''",
          "2908: OLIBS=\"$LIBS\"",
          "2909: if test \"$with_wmf\" != 'no'; then",
          "2910:     AC_MSG_RESULT([-------------------------------------------------------------])",
          "2911:     AC_MSG_CHECKING([for WMF])",
          "2912:     AC_MSG_RESULT([])",
          "2913:     have_libwmf='no'",
          "2914:     have_libwmflite='no'",
          "2915:     have_libwmf_ipa_h='no'",
          "2917:     AC_CHECK_HEADER([libwmf/ipa.h],[have_libwmf_ipa_h='yes'],,[$FT2BUILD_H])",
          "2918:     if test \"$have_libwmf_ipa_h\" = 'yes'; then",
          "2919:         AC_CHECK_LIB(wmflite,wmf_lite_create,have_libwmflite='yes',,)",
          "2920:         if test \"$have_libwmflite\" = 'yes'; then",
          "2921:             AC_DEFINE(WMFLITE_DELEGATE,1,Define if you have wmflite library)",
          "2922:             WMF_LIBS='-lwmflite'",
          "2923:             LIBS=\"$WMF_LIBS $LIBS\"",
          "2924:             have_wmf='yes'",
          "2925:         else",
          "2926:             WMF_LIBS_DEPS=''",
          "2927:             WMF_CONFIG_LIBS=`libwmf-config --libs`",
          "2928:             for lib in xml2 expat freetype jpeg png z; do",
          "2929:                 testlib=\"-l${lib}\"",
          "2930:                 echo \"$WMF_CONFIG_LIBS\" | grep -- \"$testlib\" > /dev/null && WMF_LIBS_DEPS=\"$WMF_LIBS_DEPS $testlib\"",
          "2931:             done",
          "2932:             AC_CHECK_LIB(wmf,wmf_api_create,have_libwmf='yes',,$WMF_LIBS_DEPS)",
          "2933:             if test \"$have_libwmf\" = 'yes'; then",
          "2934:                 AC_DEFINE(WMF_DELEGATE,1,Define if you have wmf library)",
          "2935:                 WMF_LIBS='-lwmf'",
          "2936:                 LIBS=\"$WMF_LIBS $LIBS\"",
          "2937:                 have_wmf='yes'",
          "2938:             else",
          "2939:                 AC_MSG_RESULT([no -- some components failed test])",
          "2940:                 have_wmf='no (failed tests)'",
          "2941:                 have_wmflite='no (failed tests)'",
          "2942:                 LIBS=\"$OLIBS\"",
          "2943:                 WMF_LIBS=''",
          "2944:             fi",
          "2945:         fi",
          "2946:     fi",
          "2947:     AC_MSG_CHECKING([if WMF package is complete])",
          "2948:     if test \"$have_wmf\" = 'yes'; then",
          "2949:         AC_MSG_RESULT([yes])",
          "2950:     else",
          "2951:         AC_MSG_RESULT([no])",
          "2952:     fi",
          "2956: AC_SUBST(WMF_LIBS_DEPS)",
          "",
          "[Added Lines]",
          "2645:     [with_wmf='yes'])",
          "2652: WMF_CFLAGS=\"\"",
          "2653: WMF_LIBS=\"\"",
          "2654: WMF_PKG=\"\"",
          "2655: if test \"x$with_wmf\" = \"xyes\"; then",
          "2656:   AC_MSG_RESULT([-------------------------------------------------------------])",
          "2657:   PKG_CHECK_MODULES(WMF,[wmf >= 0.2.8], have_wmf=yes, have_wmf=no)",
          "2658:   AC_MSG_RESULT([])",
          "2659: fi",
          "2661: if test \"$have_wmf\" = 'yes'; then",
          "2662:   AC_DEFINE(WMF_DELEGATE,1,Define if you have WMF library)",
          "2663:   CFLAGS=\"$WMF_CFLAGS $CFLAGS\"",
          "2667: AC_SUBST(WMF_CFLAGS)",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2972: fi",
          "2974: have_xml='no'",
          "3019: fi",
          "3021: AC_SUBST(XML_LIBS)",
          "3023: dnl ===========================================================================",
          "",
          "[Removed Lines]",
          "2975: XML_LIBS=''",
          "2976: if test \"$with_xml\" != 'no'; then",
          "2977:     AC_MSG_RESULT([-------------------------------------------------------------])",
          "2978:     AC_MSG_CHECKING([for XML])",
          "2979:     AC_MSG_RESULT([])",
          "2980:     PERSIST_LDFLAGS=$LDFLAGS",
          "2981:     PERSIST_CPPFLAGS=$CPPFLAGS",
          "2982:     xml2_config=''",
          "2983:     AC_PATH_PROG(xml2_config,xml2-config,)dnl",
          "2984:     if test -n \"$xml2_config\"; then",
          "2985:         # Debian installs libxml headers under /usr/include/libxml2/libxml with",
          "2986:         # the shared library installed under /usr/lib, whereas the package",
          "2987:         # installs itself under $prefix/libxml and $prefix/lib.",
          "2988:         xml2_prefix=`${xml2_config} --prefix`",
          "2989:         if test -d \"${xml2_prefix}/include/libxml2\"; then",
          "2990:             CPPFLAGS=\"$CPPFLAGS -I${xml2_prefix}/include/libxml2\"",
          "2991:         fi",
          "2992:         if test \"${xml2_prefix}\" != '/usr'; then",
          "2993:             LDFLAGS=\"$LDFLAGS -L${xml2_prefix}/lib\"",
          "2994:         fi",
          "2995:     fi",
          "2996:     failed=0",
          "2997:     passed=0",
          "2998:     AC_CHECK_HEADER(libxml/parser.h,passed=`expr $passed + 1`,failed=`expr $failed + 1`)",
          "2999:     AC_CHECK_LIB(xml2,xmlSAXVersion,passed=`expr $passed + 1`,failed=`expr $failed + 1`,)",
          "3000:     AC_CHECK_LIB(xml2,xmlParseChunk,passed=`expr $passed + 1`,failed=`expr $failed + 1`,)",
          "3001:     AC_CHECK_LIB(xml2,xmlCreatePushParserCtxt,passed=`expr $passed + 1`,failed=`expr $failed + 1`,)",
          "3002:     AC_MSG_CHECKING([if XML package is complete])",
          "3003:     if test $passed -gt 0; then",
          "3004:         if test $failed -gt 0; then",
          "3005:             AC_MSG_RESULT([no -- some components failed test])",
          "3006:             have_xml='no (failed tests)'",
          "3007:             LDFLAGS=\"$PERSIST_LDFLAGS\"",
          "3008:             CPPFLAGS=\"$PERSIST_CPPFLAGS\"",
          "3009:         else",
          "3010:             XML_LIBS='-lxml2'",
          "3011:             LIBS=\"$XML_LIBS $LIBS\"",
          "3012:             AC_DEFINE(XML_DELEGATE,1,Define if you have XML library)",
          "3013:             AC_MSG_RESULT([yes])",
          "3014:             have_xml='yes'",
          "3015:         fi",
          "3016:     else",
          "3017:         AC_MSG_RESULT([no])",
          "3018:     fi",
          "3020: AM_CONDITIONAL(XML_DELEGATE,test \"$have_xml\" = 'yes')",
          "",
          "[Added Lines]",
          "2686: XML_CFLAGS=\"\"",
          "2687: XML_LIBS=\"\"",
          "2688: XML_PKG=\"\"",
          "2689: if test \"x$with_xml\" = \"xyes\"; then",
          "2690:   AC_MSG_RESULT([-------------------------------------------------------------])",
          "2691:   PKG_CHECK_MODULES(XML,[libxml-2.0 >= 2.0.0], have_xml=yes, have_xml=no)",
          "2692:   AC_MSG_RESULT([])",
          "2695: if test \"$have_xml\" = 'yes'; then",
          "2696:   AC_DEFINE(XML_DELEGATE,1,Define if you have XML library)",
          "2697:   CFLAGS=\"$XML_CFLAGS $CFLAGS\"",
          "2698: fi",
          "2700: AM_CONDITIONAL(XML_DELEGATE, test \"$have_xml\" = 'yes')",
          "2701: AC_SUBST(XML_CFLAGS)",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "3996: #",
          "3998: if test \"$build_modules\" != 'no'; then",
          "4000: else",
          "4002: fi",
          "4003: AC_SUBST(MAGICK_DEP_LIBS)",
          "4005: #",
          "4006: # Sanitize output variables (asthetic).",
          "4007: #",
          "4009:   sanitize=''",
          "4010:   eval value=$`echo $variable`",
          "4011:   for component in $value",
          "",
          "[Removed Lines]",
          "3999:     MAGICK_DEP_LIBS=\"$USER_LIBS $LCMS_LIBS $FREETYPE_LIBS $LQR_LIBS $FFTW_LIBS $FONTCONFIG_LIBS $XEXT_LIBS $IPC_LIBS $X11_LIBS $XT_LIBS $LZMA_LIBS $BZLIB_LIBS $ZLIB_LIBS $LTDL_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"",
          "4001:     MAGICK_DEP_LIBS=\"$USER_LIBS $JBIG_LIBS $LCMS_LIBS $TIFF_LIBS $FREETYPE_LIBS $JPEG_LIBS $GS_LIBS $LQR_LIBS $PNG_LIBS $AUTOTRACE_LIBS $DJVU_LIBS $FFTW_LIBS $FPX_LIBS $FONTCONFIG_LIBS $WEBP_LIBS $WMF_LIBS $DPS_LIBS $XEXT_LIBS $XT_LIBS $IPC_LIBS $X11_LIBS $LZMA_LIBS $BZLIB_LIBS $OPENEXR_LIBS $LIBOPENJP2_LIBS $PANGO_LIBS $RSVG_LIBS $XML_LIBS $GVC_LIBS $ZLIB_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"",
          "4008: for variable in CC CFLAGS CPPFLAGS CXXFLAGS LDFLAGS MAGICK_DEP_LIBS TESTED_LIBS X_CFLAGS X_PRE_LIBS X_LIBS X_EXTRA_LIBS; do",
          "",
          "[Added Lines]",
          "3680:     MAGICK_DEP_LIBS=\"$USER_LIBS $LCMS_LIBS $FREETYPE_LIBS $LQR_LIBS $fftw3_LIBS $FONTCONFIG_LIBS $XEXT_LIBS $IPC_LIBS $X11_LIBS $XT_LIBS $LZMA_LIBS $BZLIB_LIBS $ZLIB_LIBS $LTDL_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"",
          "3682:     MAGICK_DEP_LIBS=\"$USER_LIBS $JBIG_LIBS $LCMS_LIBS $TIFF_LIBS $FREETYPE_LIBS $JPEG_LIBS $GS_LIBS $LQR_LIBS $PNG_LIBS $AUTOTRACE_LIBS $DDJVUAP_LIBS $fftw3_LIBS $FPX_LIBS $FONTCONFIG_LIBS $WEBP_LIBS $WMF_LIBS $DPS_LIBS $XEXT_LIBS $XT_LIBS $IPC_LIBS $X11_LIBS $LZMA_LIBS $BZLIB_LIBS $OPENEXR_LIBS $LIBOPENJP2_LIBS $PANGO_LIBS $RSVG_LIBS $XML_LIBS $GVC_LIBS $ZLIB_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"",
          "3689: for variable in CFLAGS CPPFLAGS CXXFLAGS LDFLAGS PCFLAGS X_CFLAGS; do",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "759ba919e9fe454989454f481f4055fd38b32307",
      "candidate_info": {
        "commit_hash": "759ba919e9fe454989454f481f4055fd38b32307",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/759ba919e9fe454989454f481f4055fd38b32307",
        "files": [
          "MagickCore/coder.c",
          "MagickCore/color.c",
          "MagickCore/configure.c",
          "MagickCore/delegate.c",
          "MagickCore/locale.c",
          "MagickCore/magic.c",
          "MagickCore/magick-baseconfig.h",
          "MagickCore/matrix.c",
          "MagickCore/mime.c",
          "MagickCore/policy.c",
          "MagickCore/profile.c",
          "MagickCore/type.c",
          "MagickCore/version.h",
          "PerlMagick/Makefile.PL",
          "PerlMagick/check.sh"
        ],
        "message": "",
        "before_after_code_files": [
          "MagickCore/coder.c||MagickCore/coder.c",
          "MagickCore/color.c||MagickCore/color.c",
          "MagickCore/configure.c||MagickCore/configure.c",
          "MagickCore/delegate.c||MagickCore/delegate.c",
          "MagickCore/locale.c||MagickCore/locale.c",
          "MagickCore/magic.c||MagickCore/magic.c",
          "MagickCore/magick-baseconfig.h||MagickCore/magick-baseconfig.h",
          "MagickCore/matrix.c||MagickCore/matrix.c",
          "MagickCore/mime.c||MagickCore/mime.c",
          "MagickCore/policy.c||MagickCore/policy.c",
          "MagickCore/profile.c||MagickCore/profile.c",
          "MagickCore/type.c||MagickCore/type.c",
          "MagickCore/version.h||MagickCore/version.h",
          "PerlMagick/Makefile.PL||PerlMagick/Makefile.PL",
          "PerlMagick/check.sh||PerlMagick/check.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MagickCore/version.h||MagickCore/version.h"
          ],
          "candidate": [
            "MagickCore/version.h||MagickCore/version.h"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/coder.c||MagickCore/coder.c": [
          "File: MagickCore/coder.c -> MagickCore/coder.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "789: %    o exception: return any errors or warnings in this structure.",
          "790: %",
          "793:   const char *xml,const char *filename,const size_t depth,",
          "794:   ExceptionInfo *exception)",
          "795: {",
          "",
          "[Removed Lines]",
          "792: static MagickBooleanType LoadCoderCache(SplayTreeInfo *coder_cache,",
          "",
          "[Added Lines]",
          "792: static MagickBooleanType LoadCoderCache(SplayTreeInfo *coder_cache,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "941:         break;",
          "942:       }",
          "943:       case 'S':",
          "945:       {",
          "",
          "[Removed Lines]",
          "944:       case 's':",
          "",
          "[Added Lines]",
          "944:       case 's':",
          "",
          "---------------"
        ],
        "MagickCore/color.c||MagickCore/color.c": [
          "File: MagickCore/color.c -> MagickCore/color.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1939: %    o xml:  The color list in XML format.",
          "1940: %",
          "1941: %    o filename:  The color list filename.",
          "1943: %    o depth: depth of <include /> statements.",
          "1944: %",
          "1945: %    o exception: return any errors or warnings in this structure.",
          "",
          "[Removed Lines]",
          "1942: %",
          "",
          "[Added Lines]",
          "1942: %",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2106:       {",
          "2107:         if (LocaleCompare((char *) keyword,\"name\") == 0)",
          "2108:           {",
          "2110:             break;",
          "2111:           }",
          "2112:         break;",
          "2113:       }",
          "",
          "[Removed Lines]",
          "2109:             color_info->name=ConstantString(token);",
          "",
          "[Added Lines]",
          "2109:             color_info->name=ConstantString(token);",
          "",
          "---------------"
        ],
        "MagickCore/configure.c||MagickCore/configure.c": [
          "File: MagickCore/configure.c -> MagickCore/configure.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1134: %",
          "1135: %    o filename:  The configure list filename.",
          "1136: %",
          "1138: %",
          "1139: %    o exception: return any errors or warnings in this structure.",
          "1140: %",
          "",
          "[Removed Lines]",
          "1137: %    o depth: depth of <include /> statements.",
          "",
          "[Added Lines]",
          "1137: %    o depth: depth of <include /> statements.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1287:         if (LocaleCompare((char *) keyword,\"stealth\") == 0)",
          "1288:           {",
          "1289:             configure_info->stealth=IsStringTrue(token);",
          "1291:           }",
          "",
          "[Removed Lines]",
          "1290:             break;",
          "",
          "[Added Lines]",
          "1290:             break;",
          "",
          "---------------"
        ],
        "MagickCore/delegate.c||MagickCore/delegate.c": [
          "File: MagickCore/delegate.c -> MagickCore/delegate.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1318: %",
          "1319: %    o filename:  The delegate list filename.",
          "1320: %",
          "1322: %",
          "1323: %    o exception: return any errors or warnings in this structure.",
          "1324: %",
          "",
          "[Removed Lines]",
          "1321: %    o depth: depth of <include /> statements.",
          "",
          "[Added Lines]",
          "1321: %    o depth: depth of <include /> statements.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1534:             delegate_info->stealth=IsStringTrue(token);",
          "1535:             break;",
          "1536:           }",
          "1538:       }",
          "",
          "[Removed Lines]",
          "1537:         break;",
          "",
          "[Added Lines]",
          "1537:         break;",
          "",
          "---------------"
        ],
        "MagickCore/locale.c||MagickCore/locale.c": [
          "File: MagickCore/locale.c -> MagickCore/locale.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1176:   if (x < y)",
          "1177:     return(x);",
          "1178:   return(y);",
          "1181: static MagickBooleanType LoadLocaleCache(SplayTreeInfo *locale_cache,",
          "1182:   const char *xml,const char *filename,const char *locale,const size_t depth,",
          "",
          "[Removed Lines]",
          "1179: }",
          "",
          "[Added Lines]",
          "1179: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1383:           Subpath element.",
          "1386:           continue;",
          "1387:         if (*(keyword+1) == '/')",
          "1388:           {",
          "1389:             ChopLocaleComponents(tag,1);",
          "",
          "[Removed Lines]",
          "1385:         if (*(keyword+1) == '?')",
          "",
          "[Added Lines]",
          "1385:         if (*(keyword+1) == '?')",
          "",
          "---------------"
        ],
        "MagickCore/magic.c||MagickCore/magic.c": [
          "File: MagickCore/magic.c -> MagickCore/magic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "764: %    o depth: depth of <include /> statements.",
          "765: %",
          "766: %    o exception: return any errors or warnings in this structure.",
          "770:   const char *xml,const char *filename,const size_t depth,",
          "771:   ExceptionInfo *exception)",
          "772: {",
          "773:   char",
          "774:     keyword[MaxTextExtent],",
          "",
          "[Removed Lines]",
          "767: %",
          "769: static MagickBooleanType LoadMagicCache(LinkedListInfo *magic_cache,",
          "",
          "[Added Lines]",
          "770:   const char *xml,const char *filename,const size_t depth,",
          "771:   ExceptionInfo *exception)",
          "772: {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "978:                 }",
          "979:               else",
          "980:                 if (LocaleNCompare(p,\"&amp;\",5) == 0)",
          "983:               magic_info->length++;",
          "984:             }",
          "985:             break;",
          "",
          "[Removed Lines]",
          "981:                   (void) CopyMagickString(p+1,p+5,length-magic_info->length);",
          "",
          "[Added Lines]",
          "981:                   (void) CopyMagickString(p+1,p+5,length-magic_info->length);",
          "",
          "---------------"
        ],
        "MagickCore/magick-baseconfig.h||MagickCore/magick-baseconfig.h": [
          "File: MagickCore/magick-baseconfig.h -> MagickCore/magick-baseconfig.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1055: #ifndef MAGICKCORE_HAVE__EXIT",
          "",
          "[Removed Lines]",
          "1050: #ifndef MAGICKCORE_HAVE__BOOL",
          "1051: #define MAGICKCORE_HAVE__BOOL 1",
          "1052: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "MagickCore/matrix.c||MagickCore/matrix.c": [
          "File: MagickCore/matrix.c -> MagickCore/matrix.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "737:   assert(matrix_info != (const MatrixInfo *) NULL);",
          "738:   assert(matrix_info->signature == MagickSignature);",
          "739:   i=(MagickOffsetType) EdgeY(y,matrix_info->rows)*matrix_info->columns+",
          "741:   if (matrix_info->type != DiskCache)",
          "742:     {",
          "743:       (void) memcpy(value,(unsigned char *) matrix_info->elements+i*",
          "",
          "[Removed Lines]",
          "740:     EdgeX(x,matrix_info->columns);",
          "",
          "[Added Lines]",
          "740:     EdgeX(x,matrix_info->columns);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1144:   MagickOffsetType",
          "1145:     count,",
          "1146:     i;",
          "1148:   assert(matrix_info != (const MatrixInfo *) NULL);",
          "1149:   assert(matrix_info->signature == MagickSignature);",
          "1150:   i=(MagickOffsetType) y*matrix_info->columns+x;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "MagickCore/mime.c||MagickCore/mime.c": [
          "File: MagickCore/mime.c -> MagickCore/mime.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "800: %    o filename:  The mime list filename.",
          "801: %",
          "802: %    o depth: depth of <include /> statements.",
          "804: %    o exception: return any errors or warnings in this structure.",
          "805: %",
          "",
          "[Removed Lines]",
          "803: %",
          "",
          "[Added Lines]",
          "803: %",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "971:       mime_info->pattern=ConstantString(attribute);",
          "972:     attribute=GetXMLTreeAttribute(mime,\"priority\");",
          "973:     if (attribute != (const char *) NULL)",
          "975:     attribute=GetXMLTreeAttribute(mime,\"stealth\");",
          "976:     if (attribute != (const char *) NULL)",
          "977:       mime_info->stealth=IsStringTrue(attribute);",
          "978:     attribute=GetXMLTreeAttribute(mime,\"type\");",
          "",
          "[Removed Lines]",
          "974:       mime_info->priority=(ssize_t) strtol(attribute,(char **) NULL,0);",
          "",
          "[Added Lines]",
          "974:       mime_info->priority=(ssize_t) strtol(attribute,(char **) NULL,0);",
          "",
          "---------------"
        ],
        "MagickCore/policy.c||MagickCore/policy.c": [
          "File: MagickCore/policy.c -> MagickCore/policy.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "739: %    o xml:  The policy list in XML format.",
          "740: %",
          "741: %    o filename:  The policy list filename.",
          "745: %    o exception: return any errors or warnings in this structure.",
          "746: %",
          "749:   const char *xml,const char *filename,const size_t depth,",
          "750:   ExceptionInfo *exception)",
          "751: {",
          "752:   char",
          "753:     keyword[MaxTextExtent],",
          "",
          "[Removed Lines]",
          "742: %",
          "743: %    o depth: depth of <include /> statements.",
          "744: %",
          "748: static MagickBooleanType LoadPolicyCache(LinkedListInfo *policy_cache,",
          "",
          "[Added Lines]",
          "745: %    o exception: return any errors or warnings in this structure.",
          "748: static MagickBooleanType LoadPolicyCache(LinkedListInfo *policy_cache,",
          "749:   const char *xml,const char *filename,const size_t depth,",
          "750:   ExceptionInfo *exception)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "928:         break;",
          "929:       }",
          "930:       case 'V':",
          "932:       {",
          "933:         if (LocaleCompare((char *) keyword,\"value\") == 0)",
          "934:           {",
          "935:             policy_info->value=ConstantString(token);",
          "",
          "[Removed Lines]",
          "931:       case 'v':",
          "",
          "[Added Lines]",
          "931:       case 'v':",
          "",
          "---------------"
        ],
        "MagickCore/profile.c||MagickCore/profile.c": [
          "File: MagickCore/profile.c -> MagickCore/profile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: #include \"MagickCore/memory_.h\"",
          "54: #include \"MagickCore/monitor.h\"",
          "55: #include \"MagickCore/monitor-private.h\"",
          "57: #include \"MagickCore/optioni-private.h\"",
          "58: #include \"MagickCore/pixel-accessor.h\"",
          "59: #include \"MagickCore/profile.h\"",
          "",
          "[Removed Lines]",
          "56: #include \"MagickCore/option.h\"",
          "",
          "[Added Lines]",
          "56: #include \"MagickCore/option.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1186:   for (p=datum; p < (datum+length-16); )",
          "1187:   {",
          "1188:     s=p;",
          "1190:       break;",
          "1191:     p+=4;",
          "1192:     p=ReadResourceShort(p,&id);",
          "",
          "[Removed Lines]",
          "1189:     if (LocaleNCompare((char *) p,\"8BIM\",4) != 0)",
          "",
          "[Added Lines]",
          "1189:     if (LocaleNCompare((char *) p,\"8BIM\",4) != 0)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1277:   length=GetStringInfoLength(resource_block);",
          "1278:   for (p=datum; p < (datum+length-16); )",
          "1279:   {",
          "1281:       break;",
          "1282:     p+=4;",
          "1283:     p=ReadResourceShort(p,&id);",
          "",
          "[Removed Lines]",
          "1280:     if (LocaleNCompare((char *) p,\"8BIM\",4) != 0)",
          "",
          "[Added Lines]",
          "1280:     if (LocaleNCompare((char *) p,\"8BIM\",4) != 0)",
          "",
          "---------------"
        ],
        "MagickCore/type.c||MagickCore/type.c": [
          "File: MagickCore/type.c -> MagickCore/type.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1094:   return(MagickTrue);",
          "1095: }",
          "1097: static MagickBooleanType LoadTypeCache(SplayTreeInfo *type_cache,",
          "1098:   const char *xml,const char *filename,const size_t depth,",
          "1099:   ExceptionInfo *exception)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1339:         if (LocaleCompare((char *) keyword,\"weight\") == 0)",
          "1340:           {",
          "1341:             type_info->weight=StringToUnsignedLong(token);",
          "1343:               type_info->weight=700;",
          "1344:             if (LocaleCompare(token,\"normal\") == 0)",
          "1345:               type_info->weight=400;",
          "1346:             break;",
          "",
          "[Removed Lines]",
          "1342:             if (LocaleCompare(token,\"bold\") == 0)",
          "",
          "[Added Lines]",
          "1342:             if (LocaleCompare(token,\"bold\") == 0)",
          "",
          "---------------"
        ],
        "MagickCore/version.h||MagickCore/version.h": [
          "File: MagickCore/version.h -> MagickCore/version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "48: #define MagickppLibAddendum  \"-0\"",
          "49: #define MagickppLibInterface  1",
          "50: #define MagickppLibMinInterface  1",
          "52: #define MagickChangeDate   \"20120427\"",
          "53: #define MagickAuthoritativeURL  \"http://www.imagemagick.org\"",
          "54: #define MagickFeatures \"DPC HDRI OpenMP\"",
          "",
          "[Removed Lines]",
          "51: #define MagickReleaseDate  \"2014-06-25\"",
          "",
          "[Added Lines]",
          "51: #define MagickReleaseDate  \"2014-06-26\"",
          "",
          "---------------"
        ],
        "PerlMagick/Makefile.PL||PerlMagick/Makefile.PL": [
          "File: PerlMagick/Makefile.PL -> PerlMagick/Makefile.PL",
          "--- Hunk 1 ---",
          "[Context before]",
          "206:    'INC' => $INC_magick,",
          "208:    # C compiler",
          "211:    # C pre-processor flags (e.g. -I & -D options)",
          "212:    # 'CPPFLAGS' => \"$Config{'cppflags'} -pthread -I/usr/include/pango-1.0 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libdrm -I/usr/include/libpng16 -I/usr/include/freetype2 -DMAGICKCORE_HDRI_ENABLE=1 -DMAGICKCORE_QUANTUM_DEPTH=16 -I/usr/include/libxml2\",",
          "",
          "[Removed Lines]",
          "209:    #'CC' => 'gcc -std=gnu99 -std=gnu99',",
          "",
          "[Added Lines]",
          "209:    #'CC' => 'g++',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "215:    'CCFLAGS' => $CCFLAGS_magick,",
          "217:    # Linker",
          "220:    # Linker flags for building an executable",
          "221:    'LDFLAGS' =>  $LDFLAGS_magick,",
          "",
          "[Removed Lines]",
          "218:    #'LD' => $Config{'ld'} == $Config{'cc'} ? 'gcc -std=gnu99 -std=gnu99' : $Config{'ld'},",
          "",
          "[Added Lines]",
          "218:    #'LD' => $Config{'ld'} == $Config{'cc'} ? 'g++' : $Config{'ld'},",
          "",
          "---------------"
        ],
        "PerlMagick/check.sh||PerlMagick/check.sh": [
          "File: PerlMagick/check.sh -> PerlMagick/check.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: if test -x PerlMagick -a -f Makefile.aperl ; then",
          "44:   # Static build test incantation",
          "46: elif test -f Makefile -a -f Magick.o; then",
          "47:   # Shared build test incantation",
          "49: else",
          "50:   echo 'PerlMagick has not been built!'",
          "51:   exit 1",
          "",
          "[Removed Lines]",
          "45:   ${MAKE} -f Makefile.aperl CC='gcc -std=gnu99 -std=gnu99' TEST_VERBOSE=1 test",
          "48:   ${MAKE} CC='gcc -std=gnu99 -std=gnu99' TEST_VERBOSE=1 test",
          "",
          "[Added Lines]",
          "45:   ${MAKE} -f Makefile.aperl CC='g++' TEST_VERBOSE=1 test",
          "48:   ${MAKE} CC='g++' TEST_VERBOSE=1 test",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4cc7ead1c167fc5f78960398c588d8941165b61c",
      "candidate_info": {
        "commit_hash": "4cc7ead1c167fc5f78960398c588d8941165b61c",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/4cc7ead1c167fc5f78960398c588d8941165b61c",
        "files": [
          "MagickCore/identify.c",
          "MagickCore/statistic.h",
          "MagickCore/version.h",
          "configure"
        ],
        "message": "",
        "before_after_code_files": [
          "MagickCore/identify.c||MagickCore/identify.c",
          "MagickCore/statistic.h||MagickCore/statistic.h",
          "MagickCore/version.h||MagickCore/version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MagickCore/version.h||MagickCore/version.h"
          ],
          "candidate": [
            "MagickCore/version.h||MagickCore/version.h"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/identify.c||MagickCore/identify.c": [
          "File: MagickCore/identify.c -> MagickCore/identify.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "394:   ssize_t",
          "395:     n;",
          "397:   n=FormatLocaleFile(file,\"    %s:\\n\",name);",
          "398:   for (i=0; i < MaximumNumberOfImageMoments; i++)",
          "399:     n+=FormatLocaleFile(file,\"      PH%.20g: %.*g, %.*g\\n\",i+1.0,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "MagickCore/statistic.h||MagickCore/statistic.h": [
          "File: MagickCore/statistic.h -> MagickCore/statistic.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: #endif",
          "25: #define MaximumNumberOfImageMoments  8",
          "27: typedef struct _ChannelStatistics",
          "28: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: #define MaximumNumberOfPerceptualHashes  7",
          "",
          "---------------"
        ],
        "MagickCore/version.h||MagickCore/version.h": [
          "File: MagickCore/version.h -> MagickCore/version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define MagickPackageName \"ImageMagick\"",
          "29: #define MagickCopyright  \"Copyright (C) 1999-2014 ImageMagick Studio LLC\"",
          "31: #define MagickLibVersion  0x700",
          "32: #define MagickLibVersionText  \"7.0.0\"",
          "33: #define MagickLibVersionNumber  1,0,0",
          "",
          "[Removed Lines]",
          "30: #define MagickSVNRevision  \"16716\"",
          "",
          "[Added Lines]",
          "30: #define MagickSVNRevision  \"16730:16732M\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48: #define MagickppLibAddendum  \"-0\"",
          "49: #define MagickppLibInterface  1",
          "50: #define MagickppLibMinInterface  1",
          "52: #define MagickChangeDate   \"20120427\"",
          "53: #define MagickAuthoritativeURL  \"http://www.imagemagick.org\"",
          "54: #define MagickFeatures \"DPC HDRI OpenMP\"",
          "",
          "[Removed Lines]",
          "51: #define MagickReleaseDate  \"2014-10-13\"",
          "",
          "[Added Lines]",
          "51: #define MagickReleaseDate  \"2014-10-18\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bc8ef1cd93c1cfb72dce578167165c6986b5e88c",
      "candidate_info": {
        "commit_hash": "bc8ef1cd93c1cfb72dce578167165c6986b5e88c",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/bc8ef1cd93c1cfb72dce578167165c6986b5e88c",
        "files": [
          "config/config.h.in",
          "configure",
          "configure.ac"
        ],
        "message": "",
        "before_after_code_files": [
          "config/config.h.in||config/config.h.in",
          "configure.ac||configure.ac"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "config/config.h.in||config/config.h.in": [
          "File: config/config.h.in -> config/config.h.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "243: #undef HAVE_J1",
          "246: #undef HAVE_LIBGCOV",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "246: #undef HAVE_LCMS2_H",
          "249: #undef HAVE_LCMS2_LCMS2_H",
          "252: #undef HAVE_LCMS_H",
          "255: #undef HAVE_LCMS_LCMS_H",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "728: #undef LCMS_DELEGATE",
          "731: #undef LIBOPENJP2_DELEGATE",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "743: #undef LCMS_VERSION_1",
          "",
          "---------------"
        ],
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "2271:   AC_CHECK_HEADER(lcms2/lcms2.h,have_lcms_header='yes',,)",
          "2272:   if test \"$have_lcms_header\" = 'yes'; then",
          "2273:     AC_DEFINE(HAVE_LCMS2_LCMS2_H,1,Define if you have the <lcms2/lcms2.h> header file.)",
          "2274:   fi",
          "2275: else",
          "2276:   PKG_CHECK_MODULES(LCMS,[lcms >= 1.0.0], have_lcms=yes, have_lcms=no)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2274:   else",
          "2275:     AC_DEFINE(HAVE_LCMS2_H,1,Define if you have the <lcms2.h> header file.)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2281:     AC_CHECK_HEADER(lcms/lcms.h,have_lcms_header='yes',,)",
          "2282:     if test \"$have_lcms_header\" = 'yes'; then",
          "2283:       AC_DEFINE(HAVE_LCMS_LCMS_H,1,Define if you have the <lcms/lcms.h> header file.)",
          "2284:     fi",
          "2285: fi",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2286:     else",
          "2287:       AC_DEFINE(HAVE_LCMS_H,1,Define if you have the <lcms.h> header file.)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3695: #",
          "3697: if test \"$build_modules\" != 'no'; then",
          "3699: else",
          "3701: fi",
          "3702: AC_SUBST(MAGICK_DEP_LIBS)",
          "",
          "[Removed Lines]",
          "3698:     MAGICK_DEP_LIBS=\"$USER_LIBS $LCMS_LIBS $LCMS2_LIBS $FREETYPE_LIBS $LQR_LIBS $fftw3_LIBS $FONTCONFIG_LIBS $XEXT_LIBS $IPC_LIBS $X11_LIBS $XT_LIBS $LZMA_LIBS $BZLIB_LIBS $ZLIB_LIBS $LTDL_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"",
          "3700:     MAGICK_DEP_LIBS=\"$USER_LIBS $JBIG_LIBS $LCMS_LIBS $LCMS2_LIBS $TIFF_LIBS $FREETYPE_LIBS $JPEG_LIBS $GS_LIBS $LQR_LIBS $PNG_LIBS $AUTOTRACE_LIBS $DDJVUAP_LIBS $fftw3_LIBS $FPX_LIBS $FONTCONFIG_LIBS $WEBP_LIBS $WMF_LIBS $DPS_LIBS $XEXT_LIBS $XT_LIBS $IPC_LIBS $X11_LIBS $LZMA_LIBS $BZLIB_LIBS $OPENEXR_LIBS $LIBOPENJP2_LIBS $PANGO_LIBS $RSVG_LIBS $XML_LIBS $GVC_LIBS $ZLIB_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"",
          "",
          "[Added Lines]",
          "3702:     MAGICK_DEP_LIBS=\"$USER_LIBS $LCMS_LIBS $FREETYPE_LIBS $LQR_LIBS $FFTW_LIBS $FONTCONFIG_LIBS $XEXT_LIBS $IPC_LIBS $X11_LIBS $XT_LIBS $LZMA_LIBS $BZLIB_LIBS $ZLIB_LIBS $LTDL_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"",
          "3704:     MAGICK_DEP_LIBS=\"$USER_LIBS $JBIG_LIBS $LCMS_LIBS $TIFF_LIBS $FREETYPE_LIBS $JPEG_LIBS $GS_LIBS $LQR_LIBS $PNG_LIBS $AUTOTRACE_LIBS $DDJVUAP_LIBS $FFTW_LIBS $FPX_LIBS $FONTCONFIG_LIBS $WEBP_LIBS $WMF_LIBS $DPS_LIBS $XEXT_LIBS $XT_LIBS $IPC_LIBS $X11_LIBS $LZMA_LIBS $BZLIB_LIBS $OPENEXR_LIBS $LIBOPENJP2_LIBS $PANGO_LIBS $RSVG_LIBS $XML_LIBS $GVC_LIBS $ZLIB_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3856:   DPS               --with-dps=$with_dps  $have_dps",
          "3857:   FFTW              --with-fftw=$with_fftw  $have_fftw",
          "3858:   FlashPIX          --with-fpx=$with_fpx  $have_fpx",
          "3860:   FreeType          --with-freetype=$with_freetype  $have_freetype",
          "3861:   Ghostscript lib   --with-gslib=$with_gslib  $have_gslib",
          "3862:   Graphviz          --with-gvc=$with_gvc  $have_gvc",
          "",
          "[Removed Lines]",
          "3859:   FontConfig        --with-fontconfig=$with_fontconfig  $have_fontconfig",
          "",
          "[Added Lines]",
          "3863:   FontConfig        --with-fontconfig=$with_fontconfig $have_fontconfig",
          "",
          "---------------"
        ]
      }
    }
  ]
}