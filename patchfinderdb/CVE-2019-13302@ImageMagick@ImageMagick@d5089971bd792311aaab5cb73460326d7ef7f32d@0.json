{
  "cve_id": "CVE-2019-13302",
  "cve_desc": "ImageMagick 7.0.8-50 Q16 has a heap-based buffer over-read in MagickCore/fourier.c in ComplexImages.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "d5089971bd792311aaab5cb73460326d7ef7f32d",
  "patch_info": {
    "commit_hash": "d5089971bd792311aaab5cb73460326d7ef7f32d",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/d5089971bd792311aaab5cb73460326d7ef7f32d",
    "files": [
      "MagickCore/fourier.c"
    ],
    "message": "https://github.com/ImageMagick/ImageMagick/issues/1597",
    "before_after_code_files": [
      "MagickCore/fourier.c||MagickCore/fourier.c"
    ]
  },
  "patch_diff": {
    "MagickCore/fourier.c||MagickCore/fourier.c": [
      "File: MagickCore/fourier.c -> MagickCore/fourier.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "164:   MagickBooleanType",
      "165:     status;",
      "167:   MagickOffsetType",
      "168:     progress;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "167:   MagickOffsetType",
      "168:     progress;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:     {",
      "217:       Br_image=images->next->next;",
      "218:       Bi_image=images->next->next->next;",
      "219:     }",
      "220:   Cr_image=complex_images;",
      "221:   Ci_image=complex_images->next;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "222:     }",
      "223:   Cr_image=complex_images;",
      "224:   Ci_image=complex_images->next;",
      "225:   number_channels=MagickMin(MagickMin(MagickMin(",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "263:       }",
      "264:     for (x=0; x < (ssize_t) Cr_image->columns; x++)",
      "265:     {",
      "267:         i;",
      "269:       for (i=0; i < (ssize_t) GetPixelChannels(Cr_image); i++)",
      "",
      "[Removed Lines]",
      "266:       register ssize_t",
      "",
      "[Added Lines]",
      "273:       register ssize_t",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "084c7d3587f0f10ad6eee880d1088c90fd393734",
      "candidate_info": {
        "commit_hash": "084c7d3587f0f10ad6eee880d1088c90fd393734",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/084c7d3587f0f10ad6eee880d1088c90fd393734",
        "files": [
          "ChangeLog",
          "MagickCore/fourier.c"
        ],
        "message": "Fix possible buffer overflow in ComplexImages()",
        "before_after_code_files": [
          "MagickCore/fourier.c||MagickCore/fourier.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MagickCore/fourier.c||MagickCore/fourier.c"
          ],
          "candidate": [
            "MagickCore/fourier.c||MagickCore/fourier.c"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/fourier.c||MagickCore/fourier.c": [
          "File: MagickCore/fourier.c -> MagickCore/fourier.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "165:     status;",
          "167:   MagickOffsetType",
          "170:   size_t",
          "171:     number_channels;",
          "",
          "[Removed Lines]",
          "168:     progress;",
          "",
          "[Added Lines]",
          "168:     progress;",
          "170:   size_t",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "193:       image=DestroyImageList(image);",
          "194:       return(image);",
          "195:     }",
          "197:   complex_images=NewImageList();",
          "198:   AppendImageToList(&complex_images,image);",
          "199:   image=CloneImage(images,0,0,MagickTrue,exception);",
          "200:   if (image == (Image *) NULL)",
          "201:     {",
          "202:       complex_images=DestroyImageList(complex_images);",
          "203:       return(complex_images);",
          "204:     }",
          "",
          "[Removed Lines]",
          "196:   image->depth=32UL;",
          "",
          "[Added Lines]",
          "198:   image->depth=32UL;",
          "204:       complex_images=DestroyImageList(complex_images);",
          "205:       return(complex_images);",
          "206:     }",
          "207:   if (SetImageStorageClass(image,DirectClass,exception) == MagickFalse)",
          "208:     {",
          "209:       image=DestroyImageList(image);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "231:   Br_view=AcquireVirtualCacheView(Br_image,exception);",
          "232:   Bi_view=AcquireVirtualCacheView(Bi_image,exception);",
          "233:   Cr_view=AcquireAuthenticCacheView(Cr_image,exception);",
          "234:   Ci_view=AcquireAuthenticCacheView(Ci_image,exception);",
          "235:   status=MagickTrue;",
          "237: #if defined(MAGICKCORE_OPENMP_SUPPORT)",
          "239:     magick_number_threads(Cr_image,complex_images,Cr_image->rows,1L)",
          "240: #endif",
          "241:   for (y=0; y < (ssize_t) Cr_image->rows; y++)",
          "",
          "[Removed Lines]",
          "236:   progress=0;",
          "238:   #pragma omp parallel for schedule(static) shared(progress,status) \\",
          "",
          "[Added Lines]",
          "242:   Ci_view=AcquireAuthenticCacheView(Ci_image,exception);",
          "243:   status=MagickTrue;",
          "246:   rows=MagickMin(Cr_image->rows,Ci_image->rows);",
          "248:   #pragma omp parallel for schedule(static) shared(progress,status) \\",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "253:     register ssize_t",
          "254:       x;",
          "261:     Bi=GetCacheViewVirtualPixels(Bi_view,0,y,Cr_image->columns,1,exception);",
          "262:     Cr=QueueCacheViewAuthenticPixels(Cr_view,0,y,Cr_image->columns,1,exception);",
          "263:     Ci=QueueCacheViewAuthenticPixels(Ci_view,0,y,Ci_image->columns,1,exception);",
          "",
          "[Removed Lines]",
          "256:     if (status == MagickFalse)",
          "257:       continue;",
          "258:     Ar=GetCacheViewVirtualPixels(Ar_view,0,y,Cr_image->columns,1,exception);",
          "259:     Ai=GetCacheViewVirtualPixels(Ai_view,0,y,Cr_image->columns,1,exception);",
          "260:     Br=GetCacheViewVirtualPixels(Br_view,0,y,Cr_image->columns,1,exception);",
          "",
          "[Added Lines]",
          "266:     if (status == MagickFalse)",
          "267:       continue;",
          "268:     Ar=GetCacheViewVirtualPixels(Ar_view,0,y,columns,1,exception);",
          "269:     Ai=GetCacheViewVirtualPixels(Ai_view,0,y,columns,1,exception);",
          "270:     Br=GetCacheViewVirtualPixels(Br_view,0,y,columns,1,exception);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "265:         (Br == (const Quantum *) NULL) || (Bi == (const Quantum *) NULL) ||",
          "266:         (Cr == (Quantum *) NULL) || (Ci == (Quantum *) NULL))",
          "267:       {",
          "269:         continue;",
          "270:       }",
          "271:     for (x=0; x < (ssize_t) Cr_image->columns; x++)",
          "",
          "[Removed Lines]",
          "268:         status=MagickFalse;",
          "",
          "[Added Lines]",
          "278:         status=MagickFalse;",
          "",
          "---------------"
        ]
      }
    }
  ]
}