{
  "cve_id": "CVE-2017-14151",
  "cve_desc": "An off-by-one error was discovered in opj_tcd_code_block_enc_allocate_data in lib/openjp2/tcd.c in OpenJPEG 2.2.0. The vulnerability causes an out-of-bounds write, which may lead to remote denial of service (heap-based buffer overflow affecting opj_mqc_flush in lib/openjp2/mqc.c and opj_t1_encode_cblk in lib/openjp2/t1.c) or possibly remote code execution.",
  "repo": "uclouvain/openjpeg",
  "patch_hash": "afb308b9ccbe129608c9205cf3bb39bbefad90b9",
  "patch_info": {
    "commit_hash": "afb308b9ccbe129608c9205cf3bb39bbefad90b9",
    "repo": "uclouvain/openjpeg",
    "commit_url": "https://github.com/uclouvain/openjpeg/commit/afb308b9ccbe129608c9205cf3bb39bbefad90b9",
    "files": [
      "src/lib/openjp2/tcd.c",
      "tests/nonregression/test_suite.ctest.in"
    ],
    "message": "Encoder: grow buffer size in opj_tcd_code_block_enc_allocate_data() to avoid write heap buffer overflow in opj_mqc_flush (#982)",
    "before_after_code_files": [
      "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c",
      "tests/nonregression/test_suite.ctest.in||tests/nonregression/test_suite.ctest.in"
    ]
  },
  "patch_diff": {
    "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c": [
      "File: src/lib/openjp2/tcd.c -> src/lib/openjp2/tcd.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1187: {",
      "1188:     OPJ_UINT32 l_data_size;",
      "1192:                                    (p_code_block->y1 - p_code_block->y0) * (OPJ_INT32)sizeof(OPJ_UINT32));",
      "1194:     if (l_data_size > p_code_block->data_size) {",
      "",
      "[Removed Lines]",
      "1191:     l_data_size = 1 + (OPJ_UINT32)((p_code_block->x1 - p_code_block->x0) *",
      "",
      "[Added Lines]",
      "1194:     l_data_size = 2 + (OPJ_UINT32)((p_code_block->x1 - p_code_block->x0) *",
      "",
      "---------------"
    ],
    "tests/nonregression/test_suite.ctest.in||tests/nonregression/test_suite.ctest.in": [
      "File: tests/nonregression/test_suite.ctest.in -> tests/nonregression/test_suite.ctest.in",
      "--- Hunk 1 ---",
      "[Context before]",
      "169: # Same rate as Bretagne2_4.j2k",
      "170: opj_compress -i @INPUT_NR_PATH@/Bretagne2.ppm -o @TEMP_PATH@/Bretagne2_empty_band_r800.j2k -t 2591,1943 -n 2 -r 800",
      "172: # DECODER TEST SUITE",
      "173: opj_decompress -i  @INPUT_NR_PATH@/Bretagne2.j2k -o @TEMP_PATH@/Bretagne2.j2k.pgx",
      "174: opj_decompress -i  @INPUT_NR_PATH@/_00042.j2k -o @TEMP_PATH@/_00042.j2k.pgx",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "172: opj_compress -i @INPUT_NR_PATH@/issue982.bmp -o @TEMP_PATH@/issue982.j2k -n 1",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "397f62c0a838e15d667ef50e27d5d011d2c79c04",
      "candidate_info": {
        "commit_hash": "397f62c0a838e15d667ef50e27d5d011d2c79c04",
        "repo": "uclouvain/openjpeg",
        "commit_url": "https://github.com/uclouvain/openjpeg/commit/397f62c0a838e15d667ef50e27d5d011d2c79c04",
        "files": [
          "src/lib/openjp2/tcd.c"
        ],
        "message": "Fix write heap buffer overflow in opj_mqc_byteout(). Discovered by Ke Liu of Tencent's Xuanwu LAB (#835)",
        "before_after_code_files": [
          "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c"
          ],
          "candidate": [
            "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c": [
          "File: src/lib/openjp2/tcd.c -> src/lib/openjp2/tcd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1182: {",
          "1183:     OPJ_UINT32 l_data_size;",
          "1188:     if (l_data_size > p_code_block->data_size) {",
          "1189:         if (p_code_block->data) {",
          "",
          "[Removed Lines]",
          "1185:     l_data_size = (OPJ_UINT32)((p_code_block->x1 - p_code_block->x0) *",
          "1186:                                (p_code_block->y1 - p_code_block->y0) * (OPJ_INT32)sizeof(OPJ_UINT32));",
          "",
          "[Added Lines]",
          "1186:     l_data_size = 1 + (OPJ_UINT32)((p_code_block->x1 - p_code_block->x0) *",
          "1187:                                    (p_code_block->y1 - p_code_block->y0) * (OPJ_INT32)sizeof(OPJ_UINT32));",
          "",
          "---------------"
        ]
      }
    }
  ]
}