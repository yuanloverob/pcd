{
  "cve_id": "CVE-2019-15922",
  "cve_desc": "An issue was discovered in the Linux kernel before 5.0.9. There is a NULL pointer dereference for a pf data structure if alloc_disk fails in drivers/block/paride/pf.c.",
  "repo": "torvalds/linux",
  "patch_hash": "58ccd2d31e502c37e108b285bf3d343eb00c235b",
  "patch_info": {
    "commit_hash": "58ccd2d31e502c37e108b285bf3d343eb00c235b",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/58ccd2d31e502c37e108b285bf3d343eb00c235b",
    "files": [
      "drivers/block/paride/pf.c"
    ],
    "message": "paride/pf: Fix potential NULL pointer dereference\n\nSyzkaller report this:\n\npf: pf version 1.04, major 47, cluster 64, nice 0\npf: No ATAPI disk detected\nkasan: CONFIG_KASAN_INLINE enabled\nkasan: GPF could be caused by NULL-ptr deref or user memory access\ngeneral protection fault: 0000 [#1] SMP KASAN PTI\nCPU: 0 PID: 9887 Comm: syz-executor.0 Tainted: G         C        5.1.0-rc3+ #8\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014\nRIP: 0010:pf_init+0x7af/0x1000 [pf]\nCode: 46 77 d2 48 89 d8 48 c1 e8 03 80 3c 28 00 74 08 48 89 df e8 03 25 a6 d2 4c 8b 23 49 8d bc 24 80 05 00 00 48 89 f8 48 c1 e8 03 <80> 3c 28 00 74 05 e8 e6 24 a6 d2 49 8b bc 24 80 05 00 00 e8 79 34\nRSP: 0018:ffff8881abcbf998 EFLAGS: 00010202\nRAX: 00000000000000b0 RBX: ffffffffc1e4a8a8 RCX: ffffffffaec50788\nRDX: 0000000000039b10 RSI: ffffc9000153c000 RDI: 0000000000000580\nRBP: dffffc0000000000 R08: ffffed103ee44e59 R09: ffffed103ee44e59\nR10: 0000000000000001 R11: ffffed103ee44e58 R12: 0000000000000000\nR13: ffffffffc1e4b028 R14: 0000000000000000 R15: 0000000000000020\nFS:  00007f1b78a91700(0000) GS:ffff8881f7200000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f6d72b207f8 CR3: 00000001d5790004 CR4: 00000000007606f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n ? 0xffffffffc1e50000\n do_one_initcall+0xbc/0x47d init/main.c:901\n do_init_module+0x1b5/0x547 kernel/module.c:3456\n load_module+0x6405/0x8c10 kernel/module.c:3804\n __do_sys_finit_module+0x162/0x190 kernel/module.c:3898\n do_syscall_64+0x9f/0x450 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\nRIP: 0033:0x462e99\nCode: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f1b78a90c58 EFLAGS: 00000246 ORIG_RAX: 0000000000000139\nRAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462e99\nRDX: 0000000000000000 RSI: 0000000020000180 RDI: 0000000000000003\nRBP: 00007f1b78a90c70 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007f1b78a916bc\nR13: 00000000004bcefa R14: 00000000006f6fb0 R15: 0000000000000004\nModules linked in: pf(+) paride gpio_tps65218 tps65218 i2c_cht_wc ati_remote dc395x act_meta_skbtcindex act_ife ife ecdh_generic rc_xbox_dvd sky81452_regulator v4l2_fwnode leds_blinkm snd_usb_hiface comedi(C) aes_ti slhc cfi_cmdset_0020 mtd cfi_util sx8654 mdio_gpio of_mdio fixed_phy mdio_bitbang libphy alcor_pci matrix_keymap hid_uclogic usbhid scsi_transport_fc videobuf2_v4l2 videobuf2_dma_sg snd_soc_pcm179x_spi snd_soc_pcm179x_codec i2c_demux_pinctrl mdev snd_indigodj isl6405 mii enc28j60 cmac adt7316_i2c(C) adt7316(C) fmc_trivial fmc nf_reject_ipv4 authenc rc_dtt200u rtc_ds1672 dvb_usb_dibusb_mc dvb_usb_dibusb_mc_common dib3000mc dibx000_common dvb_usb_dibusb_common dvb_usb dvb_core videobuf2_common videobuf2_vmalloc videobuf2_memops regulator_haptic adf7242 mac802154 ieee802154 s5h1409 da9034_ts snd_intel8x0m wmi cx24120 usbcore sdhci_cadence sdhci_pltfm sdhci mmc_core joydev i2c_algo_bit scsi_transport_iscsi iscsi_boot_sysfs ves1820 lockd grace nfs_acl auth_rpcgss sunrp\n c\n ip_vs snd_soc_adau7002 snd_cs4281 snd_rawmidi gameport snd_opl3_lib snd_seq_device snd_hwdep snd_ac97_codec ad7418 hid_primax hid snd_soc_cs4265 snd_soc_core snd_pcm_dmaengine snd_pcm snd_timer ac97_bus snd_compress snd soundcore ti_adc108s102 eeprom_93cx6 i2c_algo_pca mlxreg_hotplug st_pressure st_sensors industrialio_triggered_buffer kfifo_buf industrialio v4l2_common videodev media snd_soc_adau_utils rc_pinnacle_grey rc_core pps_gpio leds_lm3692x nandcore ledtrig_pattern iptable_security iptable_raw iptable_mangle iptable_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 iptable_filter bpfilter ip6_vti ip_vti ip_gre ipip sit tunnel4 ip_tunnel hsr veth netdevsim vxcan batman_adv cfg80211 rfkill chnl_net caif nlmon dummy team bonding vcan bridge stp llc ip6_gre gre ip6_tunnel tunnel6 tun mousedev ppdev tpm kvm_intel kvm irqbypass crct10dif_pclmul crc32_pclmul crc32c_intel ghash_clmulni_intel aesni_intel ide_pci_generic aes_x86_64 piix crypto_simd input_leds psmouse cryp\n td\n glue_helper ide_core intel_agp serio_raw intel_gtt agpgart ata_generic i2c_piix4 pata_acpi parport_pc parport rtc_cmos floppy sch_fq_codel ip_tables x_tables sha1_ssse3 sha1_generic ipv6 [last unloaded: paride]\nDumping ftrace buffer:\n  (ftrace buffer empty)\n---[ end trace 7a818cf5f210d79e ]---\n\nIf alloc_disk fails in pf_init_units, pf->disk will be\nNULL, however in pf_detect and pf_exit, it's not check\nthis before free.It may result a NULL pointer dereference.\n\nAlso when register_blkdev failed, blk_cleanup_queue() and\nblk_mq_free_tag_set() should be called to free resources.\n\nReported-by: Hulk Robot <hulkci@huawei.com>\nFixes: 6ce59025f118 (\"paride/pf: cleanup queues when detection fails\")\nSigned-off-by: YueHaibing <yuehaibing@huawei.com>\n\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
    "before_after_code_files": [
      "drivers/block/paride/pf.c||drivers/block/paride/pf.c"
    ]
  },
  "patch_diff": {
    "drivers/block/paride/pf.c||drivers/block/paride/pf.c": [
      "File: drivers/block/paride/pf.c -> drivers/block/paride/pf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "763:  printk(\"%s: No ATAPI disk detected\\n\", name);",
      "764:  for (pf = units, unit = 0; unit < PF_UNITS; pf++, unit++) {",
      "765:   blk_cleanup_queue(pf->disk->queue);",
      "766:   pf->disk->queue = NULL;",
      "767:   blk_mq_free_tag_set(&pf->tag_set);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "765:   if (!pf->disk)",
      "766:    continue;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1029:  pf_busy = 0;",
      "1031:  if (register_blkdev(major, name)) {",
      "1033:    put_disk(pf->disk);",
      "1034:   return -EBUSY;",
      "1035:  }",
      "",
      "[Removed Lines]",
      "1032:   for (pf = units, unit = 0; unit < PF_UNITS; pf++, unit++)",
      "",
      "[Added Lines]",
      "1034:   for (pf = units, unit = 0; unit < PF_UNITS; pf++, unit++) {",
      "1035:    if (!pf->disk)",
      "1036:     continue;",
      "1037:    blk_cleanup_queue(pf->disk->queue);",
      "1038:    blk_mq_free_tag_set(&pf->tag_set);",
      "1040:   }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1051:  int unit;",
      "1052:  unregister_blkdev(major, name);",
      "1053:  for (pf = units, unit = 0; unit < PF_UNITS; pf++, unit++) {",
      "1054:   if (pf->present)",
      "1055:    del_gendisk(pf->disk);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1061:   if (!pf->disk)",
      "1062:    continue;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c0b0984426814f3a9251873b689e67d34d8ccd84",
      "candidate_info": {
        "commit_hash": "c0b0984426814f3a9251873b689e67d34d8ccd84",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/c0b0984426814f3a9251873b689e67d34d8ccd84",
        "files": [
          "drivers/net/ethernet/hisilicon/hns/hns_dsaf_xgmac.c"
        ],
        "message": "net: hns: Fix probabilistic memory overwrite when HNS driver initialized\n\nWhen reboot the system again and again, may cause a memory\noverwrite.\n\n[   15.638922] systemd[1]: Reached target Swap.\n[   15.667561] tun: Universal TUN/TAP device driver, 1.6\n[   15.676756] Bridge firewalling registered\n[   17.344135] Unable to handle kernel paging request at virtual address 0000000200000040\n[   17.352179] Mem abort info:\n[   17.355007]   ESR = 0x96000004\n[   17.358105]   Exception class = DABT (current EL), IL = 32 bits\n[   17.364112]   SET = 0, FnV = 0\n[   17.367209]   EA = 0, S1PTW = 0\n[   17.370393] Data abort info:\n[   17.373315]   ISV = 0, ISS = 0x00000004\n[   17.377206]   CM = 0, WnR = 0\n[   17.380214] user pgtable: 4k pages, 48-bit VAs, pgdp = (____ptrval____)\n[   17.386926] [0000000200000040] pgd=0000000000000000\n[   17.391878] Internal error: Oops: 96000004 [#1] SMP\n[   17.396824] CPU: 23 PID: 95 Comm: kworker/u130:0 Tainted: G            E     4.19.25-1.2.78.aarch64 #1\n[   17.414175] Hardware name: Huawei TaiShan 2280 /BC11SPCD, BIOS 1.54 08/16/2018\n[   17.425615] Workqueue: events_unbound async_run_entry_fn\n[   17.435151] pstate: 00000005 (nzcv daif -PAN -UAO)\n[   17.444139] pc : __mutex_lock.isra.1+0x74/0x540\n[   17.453002] lr : __mutex_lock.isra.1+0x3c/0x540\n[   17.461701] sp : ffff000100d9bb60\n[   17.469146] x29: ffff000100d9bb60 x28: 0000000000000000\n[   17.478547] x27: 0000000000000000 x26: ffff802fb8945000\n[   17.488063] x25: 0000000000000000 x24: ffff802fa32081a8\n[   17.497381] x23: 0000000000000002 x22: ffff801fa2b15220\n[   17.506701] x21: ffff000009809000 x20: ffff802fa23a0888\n[   17.515980] x19: ffff801fa2b15220 x18: 0000000000000000\n[   17.525272] x17: 0000000200000000 x16: 0000000200000000\n[   17.534511] x15: 0000000000000000 x14: 0000000000000000\n[   17.543652] x13: ffff000008d95db8 x12: 000000000000000d\n[   17.552780] x11: ffff000008d95d90 x10: 0000000000000b00\n[   17.561819] x9 : ffff000100d9bb90 x8 : ffff802fb89d6560\n[   17.570829] x7 : 0000000000000004 x6 : 00000004a1801d05\n[   17.579839] x5 : 0000000000000000 x4 : 0000000000000000\n[   17.588852] x3 : ffff802fb89d5a00 x2 : 0000000000000000\n[   17.597734] x1 : 0000000200000000 x0 : 0000000200000000\n[   17.606631] Process kworker/u130:0 (pid: 95, stack limit = 0x(____ptrval____))\n[   17.617438] Call trace:\n[   17.623349]  __mutex_lock.isra.1+0x74/0x540\n[   17.630927]  __mutex_lock_slowpath+0x24/0x30\n[   17.638602]  mutex_lock+0x50/0x60\n[   17.645295]  drain_workqueue+0x34/0x198\n[   17.652623]  __sas_drain_work+0x7c/0x168\n[   17.659903]  sas_drain_work+0x60/0x68\n[   17.666947]  hisi_sas_scan_finished+0x30/0x40 [hisi_sas_main]\n[   17.676129]  do_scsi_scan_host+0x70/0xb0\n[   17.683534]  do_scan_async+0x20/0x228\n[   17.690586]  async_run_entry_fn+0x4c/0x1d0\n[   17.697997]  process_one_work+0x1b4/0x3f8\n[   17.705296]  worker_thread+0x54/0x470\n\nEvery time the call trace is not the same, but the overwrite address\nis always the same:\nUnable to handle kernel paging request at virtual address 0000000200000040\n\nThe root cause is, when write the reg XGMAC_MAC_TX_LF_RF_CONTROL_REG,\ndidn't use the io_base offset.\n\nSigned-off-by: Yonglong Liu <liuyonglong@huawei.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "drivers/net/ethernet/hisilicon/hns/hns_dsaf_xgmac.c||drivers/net/ethernet/hisilicon/hns/hns_dsaf_xgmac.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/net/ethernet/hisilicon/hns/hns_dsaf_xgmac.c||drivers/net/ethernet/hisilicon/hns/hns_dsaf_xgmac.c": [
          "File: drivers/net/ethernet/hisilicon/hns/hns_dsaf_xgmac.c -> drivers/net/ethernet/hisilicon/hns/hns_dsaf_xgmac.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "129:  dsaf_set_bit(val, XGMAC_UNIDIR_EN_B, 0);",
          "130:  dsaf_set_bit(val, XGMAC_RF_TX_EN_B, 1);",
          "131:  dsaf_set_field(val, XGMAC_LF_RF_INSERT_M, XGMAC_LF_RF_INSERT_S, 0);",
          "133: }",
          "",
          "[Removed Lines]",
          "132:  dsaf_write_reg(mac_drv, XGMAC_MAC_TX_LF_RF_CONTROL_REG, val);",
          "",
          "[Added Lines]",
          "132:  dsaf_write_dev(mac_drv, XGMAC_MAC_TX_LF_RF_CONTROL_REG, val);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7f75591fc5a123929a29636834d1bcb8b5c9fee3",
      "candidate_info": {
        "commit_hash": "7f75591fc5a123929a29636834d1bcb8b5c9fee3",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/7f75591fc5a123929a29636834d1bcb8b5c9fee3",
        "files": [
          "drivers/iio/industrialio-core.c"
        ],
        "message": "iio: core: fix a possible circular locking dependency\n\nThis fixes a possible circular locking dependency detected warning seen\nwith:\n- CONFIG_PROVE_LOCKING=y\n- consumer/provider IIO devices (ex: \"voltage-divider\" consumer of \"adc\")\n\nWhen using the IIO consumer interface, e.g. iio_channel_get(), the consumer\ndevice will likely call iio_read_channel_raw() or similar that rely on\n'info_exist_lock' mutex.\n\ntypically:\n...\n\tmutex_lock(&chan->indio_dev->info_exist_lock);\n\tif (chan->indio_dev->info == NULL) {\n\t\tret = -ENODEV;\n\t\tgoto err_unlock;\n\t}\n\tret = do_some_ops()\nerr_unlock:\n\tmutex_unlock(&chan->indio_dev->info_exist_lock);\n\treturn ret;\n...\n\nSame mutex is also hold in iio_device_unregister().\n\nThe following deadlock warning happens when:\n- the consumer device has called an API like iio_read_channel_raw()\n  at least once.\n- the consumer driver is unregistered, removed (unbind from sysfs)\n\n======================================================\nWARNING: possible circular locking dependency detected\n4.19.24 #577 Not tainted\n------------------------------------------------------\nsh/372 is trying to acquire lock:\n(kn->count#30){++++}, at: kernfs_remove_by_name_ns+0x3c/0x84\n\nbut task is already holding lock:\n(&dev->info_exist_lock){+.+.}, at: iio_device_unregister+0x18/0x60\n\nwhich lock already depends on the new lock.\n\nthe existing dependency chain (in reverse order) is:\n\n-> #1 (&dev->info_exist_lock){+.+.}:\n       __mutex_lock+0x70/0xa3c\n       mutex_lock_nested+0x1c/0x24\n       iio_read_channel_raw+0x1c/0x60\n       iio_read_channel_info+0xa8/0xb0\n       dev_attr_show+0x1c/0x48\n       sysfs_kf_seq_show+0x84/0xec\n       seq_read+0x154/0x528\n       __vfs_read+0x2c/0x15c\n       vfs_read+0x8c/0x110\n       ksys_read+0x4c/0xac\n       ret_fast_syscall+0x0/0x28\n       0xbedefb60\n\n-> #0 (kn->count#30){++++}:\n       lock_acquire+0xd8/0x268\n       __kernfs_remove+0x288/0x374\n       kernfs_remove_by_name_ns+0x3c/0x84\n       remove_files+0x34/0x78\n       sysfs_remove_group+0x40/0x9c\n       sysfs_remove_groups+0x24/0x34\n       device_remove_attrs+0x38/0x64\n       device_del+0x11c/0x360\n       cdev_device_del+0x14/0x2c\n       iio_device_unregister+0x24/0x60\n       release_nodes+0x1bc/0x200\n       device_release_driver_internal+0x1a0/0x230\n       unbind_store+0x80/0x130\n       kernfs_fop_write+0x100/0x1e4\n       __vfs_write+0x2c/0x160\n       vfs_write+0xa4/0x17c\n       ksys_write+0x4c/0xac\n       ret_fast_syscall+0x0/0x28\n       0xbe906840\n\nother info that might help us debug this:\n\n Possible unsafe locking scenario:\n\n       CPU0                    CPU1\n       ----                    ----\n  lock(&dev->info_exist_lock);\n                               lock(kn->count#30);\n                               lock(&dev->info_exist_lock);\n  lock(kn->count#30);\n\n *** DEADLOCK ***\n...\n\ncdev_device_del() can be called without holding the lock. It should be safe\nas info_exist_lock prevents kernelspace consumers to use the exported\nroutines during/after provider removal. cdev_device_del() is for userspace.\n\nHelp to reproduce:\nSee example: Documentation/devicetree/bindings/iio/afe/voltage-divider.txt\nsysv {\n\tcompatible = \"voltage-divider\";\n\tio-channels = <&adc 0>;\n\toutput-ohms = <22>;\n\tfull-ohms = <222>;\n};\n\nFirst, go to iio:deviceX for the \"voltage-divider\", do one read:\n$ cd /sys/bus/iio/devices/iio:deviceX\n$ cat in_voltage0_raw\n\nThen, unbind the consumer driver. It triggers above deadlock warning.\n$ cd /sys/bus/platform/drivers/iio-rescale/\n$ echo sysv > unbind\n\nNote I don't actually expect stable will pick this up all the\nway back into IIO being in staging, but if's probably valid that\nfar back.\n\nSigned-off-by: Fabrice Gasnier <fabrice.gasnier@st.com>\nFixes: ac917a81117c (\"staging:iio:core set the iio_dev.info pointer to null on unregister\")\nCc: <Stable@vger.kernel.org>\nSigned-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>",
        "before_after_code_files": [
          "drivers/iio/industrialio-core.c||drivers/iio/industrialio-core.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/iio/industrialio-core.c||drivers/iio/industrialio-core.c": [
          "File: drivers/iio/industrialio-core.c -> drivers/iio/industrialio-core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1744: void iio_device_unregister(struct iio_dev *indio_dev)",
          "1745: {",
          "1748:  cdev_device_del(&indio_dev->chrdev, &indio_dev->dev);",
          "1750:  iio_device_unregister_debugfs(indio_dev);",
          "1752:  iio_disable_all_buffers(indio_dev);",
          "",
          "[Removed Lines]",
          "1746:  mutex_lock(&indio_dev->info_exist_lock);",
          "",
          "[Added Lines]",
          "1748:  mutex_lock(&indio_dev->info_exist_lock);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a145b5b0e48783d0cd3ee605ed00b133d5c8ffed",
      "candidate_info": {
        "commit_hash": "a145b5b0e48783d0cd3ee605ed00b133d5c8ffed",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/a145b5b0e48783d0cd3ee605ed00b133d5c8ffed",
        "files": [
          "drivers/gpu/drm/i915/i915_debugfs.c"
        ],
        "message": "drm/i915: Always backoff after a drm_modeset_lock() deadlock\n\nIf drm_modeset_lock() reports a deadlock it sets the ctx->contexted\nfield and insists that the caller calls drm_modeset_backoff() or else it\ngenerates a WARN on cleanup.\n\n<4> [1601.870376] WARNING: CPU: 3 PID: 8445 at drivers/gpu/drm/drm_modeset_lock.c:228 drm_modeset_drop_locks+0x35/0x40\n<4> [1601.870395] Modules linked in: vgem snd_hda_codec_hdmi snd_hda_codec_realtek snd_hda_codec_generic x86_pkg_temp_thermal i915 coretemp crct10dif_pclmul\n<6> [1601.870403] Console: switching\n<4> [1601.870403]  snd_hda_intel\n<4> [1601.870406] to colour frame buffer device 320x90\n<4> [1601.870406]  crc32_pclmul snd_hda_codec snd_hwdep ghash_clmulni_intel e1000e snd_hda_core cdc_ether ptp usbnet mii pps_core snd_pcm i2c_i801 mei_me mei prime_numbers\n<4> [1601.870422] CPU: 3 PID: 8445 Comm: cat Tainted: G     U            5.0.0-rc7-CI-CI_DRM_5650+ #1\n<4> [1601.870424] Hardware name: Intel Corporation Ice Lake Client Platform/IceLake U DDR4 SODIMM PD RVP TLC, BIOS ICLSFWR1.R00.2402.AD3.1810170014 10/17/2018\n<4> [1601.870427] RIP: 0010:drm_modeset_drop_locks+0x35/0x40\n<4> [1601.870430] Code: 29 48 8b 43 60 48 8d 6b 60 48 39 c5 74 19 48 8b 43 60 48 8d b8 70 ff ff ff e8 87 ff ff ff 48 8b 43 60 48 39 c5 75 e7 5b 5d c3 <0f> 0b eb d3 0f 1f 80 00 00 00 00 41 56 41 55 41 54 55 53 48 8b 6f\n<4> [1601.870432] RSP: 0018:ffffc90000d67ce8 EFLAGS: 00010282\n<4> [1601.870435] RAX: 00000000ffffffdd RBX: ffffc90000d67d00 RCX: 5dbbe23d00000000\n<4> [1601.870437] RDX: 0000000000000000 RSI: 0000000093e6194a RDI: ffffc90000d67d00\n<4> [1601.870439] RBP: ffff88849e62e678 R08: 0000000003b7329a R09: 0000000000000001\n<4> [1601.870441] R10: 0000000000000000 R11: 0000000000000000 R12: ffff888492100410\n<4> [1601.870442] R13: ffff88849ea50958 R14: ffff8884a67eb028 R15: ffff8884a67eb028\n<4> [1601.870445] FS:  00007fa7a27745c0(0000) GS:ffff8884aff80000(0000) knlGS:0000000000000000\n<4> [1601.870447] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n<4> [1601.870449] CR2: 000055af07e66000 CR3: 00000004a8cc2006 CR4: 0000000000760ee0\n<4> [1601.870451] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n<4> [1601.870453] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n<4> [1601.870454] PKRU: 55555554\n<4> [1601.870456] Call Trace:\n<4> [1601.870505]  i915_dsc_fec_support_show+0x91/0x190 [i915]\n<4> [1601.870522]  seq_read+0xdb/0x3c0\n<4> [1601.870531]  full_proxy_read+0x51/0x80\n<4> [1601.870538]  __vfs_read+0x31/0x190\n<4> [1601.870546]  ? __se_sys_newfstat+0x3c/0x60\n<4> [1601.870552]  vfs_read+0x9e/0x150\n<4> [1601.870557]  ksys_read+0x50/0xc0\n<4> [1601.870564]  do_syscall_64+0x55/0x190\n<4> [1601.870569]  entry_SYSCALL_64_after_hwframe+0x49/0xbe\n<4> [1601.870572] RIP: 0033:0x7fa7a226d081\n<4> [1601.870574] Code: fe ff ff 48 8d 3d 67 9c 0a 00 48 83 ec 08 e8 a6 4c 02 00 66 0f 1f 44 00 00 48 8d 05 81 08 2e 00 8b 00 85 c0 75 13 31 c0 0f 05 <48> 3d 00 f0 ff ff 77 57 f3 c3 0f 1f 44 00 00 41 54 55 49 89 d4 53\n<4> [1601.870576] RSP: 002b:00007ffcc05140c8 EFLAGS: 00000246 ORIG_RAX: 0000000000000000\n<4> [1601.870579] RAX: ffffffffffffffda RBX: 0000000000020000 RCX: 00007fa7a226d081\n<4> [1601.870581] RDX: 0000000000020000 RSI: 000055af07e63000 RDI: 0000000000000007\n<4> [1601.870583] RBP: 0000000000020000 R08: 000000000000007b R09: 0000000000000000\n<4> [1601.870585] R10: 000055af07e60010 R11: 0000000000000246 R12: 000055af07e63000\n<4> [1601.870587] R13: 0000000000000007 R14: 000055af07e634bf R15: 0000000000020000\n\nBugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=109745\nFixes: e845f099f1c6 (\"drm/i915/dsc: Add Per connector debugfs node for DSC support/enable\")\nSigned-off-by: Chris Wilson <chris@chris-wilson.co.uk>\nCc: Rodrigo Vivi <rodrigo.vivi@intel.com>\nCc: Ville Syrjala <ville.syrjala@linux.intel.com>\nCc: Anusha Srivatsa <anusha.srivatsa@intel.com>\nCc: Lyude Paul <lyude@redhat.com>\nCc: Manasi Navare <manasi.d.navare@intel.com>\nReviewed-by: Manasi Navare <manasi.d.navare@intel.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20190329165152.29259-1-chris@chris-wilson.co.uk\n(cherry picked from commit ee6df5694a9a2e30566ae05e9c145a0f6d5e087f)\nSigned-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>",
        "before_after_code_files": [
          "drivers/gpu/drm/i915/i915_debugfs.c||drivers/gpu/drm/i915/i915_debugfs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/gpu/drm/i915/i915_debugfs.c||drivers/gpu/drm/i915/i915_debugfs.c": [
          "File: drivers/gpu/drm/i915/i915_debugfs.c -> drivers/gpu/drm/i915/i915_debugfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4830:   ret = drm_modeset_lock(&dev->mode_config.connection_mutex,",
          "4831:            &ctx);",
          "4832:   if (ret) {",
          "4834:    break;",
          "4835:   }",
          "4836:   crtc = connector->state->crtc;",
          "",
          "[Removed Lines]",
          "4833:    ret = -EINTR;",
          "",
          "[Added Lines]",
          "4833:    if (ret == -EDEADLK && !drm_modeset_backoff(&ctx)) {",
          "4834:     try_again = true;",
          "4835:     continue;",
          "4836:    }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bbd669a868bba591ffd38b7bc75a7b361bb54b04",
      "candidate_info": {
        "commit_hash": "bbd669a868bba591ffd38b7bc75a7b361bb54b04",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/bbd669a868bba591ffd38b7bc75a7b361bb54b04",
        "files": [
          "drivers/net/ethernet/ibm/ibmvnic.c"
        ],
        "message": "ibmvnic: Fix completion structure initialization\n\nFix device initialization completion handling for vNIC adapters.\nInitialize the completion structure on probe and reinitialize when needed.\nThis also fixes a race condition during kdump where the driver can attempt\nto access the completion struct before it is initialized:\n\nUnable to handle kernel paging request for data at address 0x00000000\nFaulting instruction address: 0xc0000000081acbe0\nOops: Kernel access of bad area, sig: 11 [#1]\nLE SMP NR_CPUS=2048 NUMA pSeries\nModules linked in: ibmvnic(+) ibmveth sunrpc overlay squashfs loop\nCPU: 19 PID: 301 Comm: systemd-udevd Not tainted 4.18.0-64.el8.ppc64le #1\nNIP:  c0000000081acbe0 LR: c0000000081ad964 CTR: c0000000081ad900\nREGS: c000000027f3f990 TRAP: 0300   Not tainted  (4.18.0-64.el8.ppc64le)\nMSR:  800000010280b033 <SF,VEC,VSX,EE,FP,ME,IR,DR,RI,LE,TM[E]> CR: 28228288  XER: 00000006\nCFAR: c000000008008934 DAR: 0000000000000000 DSISR: 40000000 IRQMASK: 1\nGPR00: c0000000081ad964 c000000027f3fc10 c0000000095b5800 c0000000221b4e58\nGPR04: 0000000000000003 0000000000000001 000049a086918581 00000000000000d4\nGPR08: 0000000000000007 0000000000000000 ffffffffffffffe8 d0000000014dde28\nGPR12: c0000000081ad900 c000000009a00c00 0000000000000001 0000000000000100\nGPR16: 0000000000000038 0000000000000007 c0000000095e2230 0000000000000006\nGPR20: 0000000000400140 0000000000000001 c00000000910c880 0000000000000000\nGPR24: 0000000000000000 0000000000000006 0000000000000000 0000000000000003\nGPR28: 0000000000000001 0000000000000001 c0000000221b4e60 c0000000221b4e58\nNIP [c0000000081acbe0] __wake_up_locked+0x50/0x100\nLR [c0000000081ad964] complete+0x64/0xa0\nCall Trace:\n[c000000027f3fc10] [c000000027f3fc60] 0xc000000027f3fc60 (unreliable)\n[c000000027f3fc60] [c0000000081ad964] complete+0x64/0xa0\n[c000000027f3fca0] [d0000000014dad58] ibmvnic_handle_crq+0xce0/0x1160 [ibmvnic]\n[c000000027f3fd50] [d0000000014db270] ibmvnic_tasklet+0x98/0x130 [ibmvnic]\n[c000000027f3fda0] [c00000000813f334] tasklet_action_common.isra.3+0xc4/0x1a0\n[c000000027f3fe00] [c000000008cd13f4] __do_softirq+0x164/0x400\n[c000000027f3fef0] [c00000000813ed64] irq_exit+0x184/0x1c0\n[c000000027f3ff20] [c0000000080188e8] __do_irq+0xb8/0x210\n[c000000027f3ff90] [c00000000802d0a4] call_do_irq+0x14/0x24\n[c000000026a5b010] [c000000008018adc] do_IRQ+0x9c/0x130\n[c000000026a5b060] [c000000008008ce4] hardware_interrupt_common+0x114/0x120\n\nSigned-off-by: Thomas Falcon <tlfalcon@linux.ibm.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "drivers/net/ethernet/ibm/ibmvnic.c||drivers/net/ethernet/ibm/ibmvnic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/net/ethernet/ibm/ibmvnic.c||drivers/net/ethernet/ibm/ibmvnic.c": [
          "File: drivers/net/ethernet/ibm/ibmvnic.c -> drivers/net/ethernet/ibm/ibmvnic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1886:  adapter->state = VNIC_PROBED;",
          "1888:  rc = init_crq_queue(adapter);",
          "1889:  if (rc) {",
          "1890:   netdev_err(adapter->netdev,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1888:  reinit_completion(&adapter->init_done);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4625:  old_num_rx_queues = adapter->req_rx_queues;",
          "4626:  old_num_tx_queues = adapter->req_tx_queues;",
          "4629:  adapter->init_done_rc = 0;",
          "4630:  ibmvnic_send_crq_init(adapter);",
          "4631:  if (!wait_for_completion_timeout(&adapter->init_done, timeout)) {",
          "",
          "[Removed Lines]",
          "4628:  init_completion(&adapter->init_done);",
          "",
          "[Added Lines]",
          "4629:  reinit_completion(&adapter->init_done);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4681:  adapter->from_passive_init = false;",
          "4684:  adapter->init_done_rc = 0;",
          "4685:  ibmvnic_send_crq_init(adapter);",
          "4686:  if (!wait_for_completion_timeout(&adapter->init_done, timeout)) {",
          "",
          "[Removed Lines]",
          "4683:  init_completion(&adapter->init_done);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4759:  INIT_WORK(&adapter->ibmvnic_reset, __ibmvnic_reset);",
          "4760:  INIT_LIST_HEAD(&adapter->rwi_list);",
          "4761:  spin_lock_init(&adapter->rwi_lock);",
          "4762:  adapter->resetting = false;",
          "4764:  adapter->mac_change_pending = false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4762:  init_completion(&adapter->init_done);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f0d1762554014ce0ae347b9f0d088f2c157c8c72",
      "candidate_info": {
        "commit_hash": "f0d1762554014ce0ae347b9f0d088f2c157c8c72",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/f0d1762554014ce0ae347b9f0d088f2c157c8c72",
        "files": [
          "drivers/block/paride/pcd.c"
        ],
        "message": "paride/pcd: Fix potential NULL pointer dereference and mem leak\n\nSyzkaller report this:\n\npcd: pcd version 1.07, major 46, nice 0\npcd0: Autoprobe failed\npcd: No CD-ROM drive found\nkasan: CONFIG_KASAN_INLINE enabled\nkasan: GPF could be caused by NULL-ptr deref or user memory access\ngeneral protection fault: 0000 [#1] SMP KASAN PTI\nCPU: 1 PID: 4525 Comm: syz-executor.0 Not tainted 5.1.0-rc3+ #8\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014\nRIP: 0010:pcd_init+0x95c/0x1000 [pcd]\nCode: c4 ab f7 48 89 d8 48 c1 e8 03 80 3c 28 00 74 08 48 89 df e8 56 a3 da f7 4c 8b 23 49 8d bc 24 80 05 00 00 48 89 f8 48 c1 e8 03 <80> 3c 28 00 74 05 e8 39 a3 da f7 49 8b bc 24 80 05 00 00 e8 cc b2\nRSP: 0018:ffff8881e84df880 EFLAGS: 00010202\nRAX: 00000000000000b0 RBX: ffffffffc155a088 RCX: ffffffffc1508935\nRDX: 0000000000040000 RSI: ffffc900014f0000 RDI: 0000000000000580\nRBP: dffffc0000000000 R08: ffffed103ee658b8 R09: ffffed103ee658b8\nR10: 0000000000000001 R11: ffffed103ee658b7 R12: 0000000000000000\nR13: ffffffffc155a778 R14: ffffffffc155a4a8 R15: 0000000000000003\nFS:  00007fe71bee3700(0000) GS:ffff8881f7300000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 000055a7334441a8 CR3: 00000001e9674003 CR4: 00000000007606e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n ? 0xffffffffc1508000\n ? 0xffffffffc1508000\n do_one_initcall+0xbc/0x47d init/main.c:901\n do_init_module+0x1b5/0x547 kernel/module.c:3456\n load_module+0x6405/0x8c10 kernel/module.c:3804\n __do_sys_finit_module+0x162/0x190 kernel/module.c:3898\n do_syscall_64+0x9f/0x450 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\nRIP: 0033:0x462e99\nCode: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fe71bee2c58 EFLAGS: 00000246 ORIG_RAX: 0000000000000139\nRAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462e99\nRDX: 0000000000000000 RSI: 0000000020000180 RDI: 0000000000000003\nRBP: 00007fe71bee2c70 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007fe71bee36bc\nR13: 00000000004bcefa R14: 00000000006f6fb0 R15: 0000000000000004\nModules linked in: pcd(+) paride solos_pci atm ts_fsm rtc_mt6397 mac80211 nhc_mobility nhc_udp nhc_ipv6 nhc_hop nhc_dest nhc_fragment nhc_routing 6lowpan rtc_cros_ec memconsole intel_xhci_usb_role_switch roles rtc_wm8350 usbcore industrialio_triggered_buffer kfifo_buf industrialio asc7621 dm_era dm_persistent_data dm_bufio dm_mod tpm gnss_ubx gnss_serial serdev gnss max2165 cpufreq_dt hid_penmount hid menf21bmc_wdt rc_core n_tracesink ide_gd_mod cdns_csi2tx v4l2_fwnode videodev media pinctrl_lewisburg pinctrl_intel iptable_security iptable_raw iptable_mangle iptable_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 iptable_filter bpfilter ip6_vti ip_vti ip_gre ipip sit tunnel4 ip_tunnel hsr veth netdevsim vxcan batman_adv cfg80211 rfkill chnl_net caif nlmon dummy team bonding vcan bridge stp llc ip6_gre gre ip6_tunnel tunnel6 tun joydev mousedev ppdev kvm_intel kvm irqbypass crct10dif_pclmul crc32_pclmul crc32c_intel ghash_clmulni_intel aesni_intel aes_x86_64 crypto_simd\n ide_pci_generic piix input_leds cryptd glue_helper psmouse ide_core intel_agp serio_raw intel_gtt ata_generic i2c_piix4 agpgart pata_acpi parport_pc parport floppy rtc_cmos sch_fq_codel ip_tables x_tables sha1_ssse3 sha1_generic ipv6 [last unloaded: bmc150_magn]\nDumping ftrace buffer:\n   (ftrace buffer empty)\n---[ end trace d873691c3cd69f56 ]---\n\nIf alloc_disk fails in pcd_init_units, cd->disk will be\nNULL, however in pcd_detect and pcd_exit, it's not check\nthis before free.It may result a NULL pointer dereference.\n\nAlso when register_blkdev failed, blk_cleanup_queue() and\nblk_mq_free_tag_set() should be called to free resources.\n\nReported-by: Hulk Robot <hulkci@huawei.com>\nFixes: 81b74ac68c28 (\"paride/pcd: cleanup queues when detection fails\")\nSigned-off-by: YueHaibing <yuehaibing@huawei.com>\n\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
        "before_after_code_files": [
          "drivers/block/paride/pcd.c||drivers/block/paride/pcd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/block/paride/pcd.c||drivers/block/paride/pcd.c": [
          "File: drivers/block/paride/pcd.c -> drivers/block/paride/pcd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "314:   disk->queue = blk_mq_init_sq_queue(&cd->tag_set, &pcd_mq_ops,",
          "315:          1, BLK_MQ_F_SHOULD_MERGE);",
          "316:   if (IS_ERR(disk->queue)) {",
          "317:    disk->queue = NULL;",
          "318:    continue;",
          "319:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "317:    put_disk(disk);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "751:  printk(\"%s: No CD-ROM drive found\\n\", name);",
          "752:  for (unit = 0, cd = pcd; unit < PCD_UNITS; unit++, cd++) {",
          "753:   blk_cleanup_queue(cd->disk->queue);",
          "754:   cd->disk->queue = NULL;",
          "755:   blk_mq_free_tag_set(&cd->tag_set);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "754:   if (!cd->disk)",
          "755:    continue;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1010:  pcd_probe_capabilities();",
          "1012:  if (register_blkdev(major, name)) {",
          "1014:    put_disk(cd->disk);",
          "1015:   return -EBUSY;",
          "1016:  }",
          "",
          "[Removed Lines]",
          "1013:   for (unit = 0, cd = pcd; unit < PCD_UNITS; unit++, cd++)",
          "",
          "[Added Lines]",
          "1016:   for (unit = 0, cd = pcd; unit < PCD_UNITS; unit++, cd++) {",
          "1017:    if (!cd->disk)",
          "1018:     continue;",
          "1020:    blk_cleanup_queue(cd->disk->queue);",
          "1021:    blk_mq_free_tag_set(&cd->tag_set);",
          "1023:   }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1032:  int unit;",
          "1034:  for (unit = 0, cd = pcd; unit < PCD_UNITS; unit++, cd++) {",
          "1035:   if (cd->present) {",
          "1036:    del_gendisk(cd->disk);",
          "1037:    pi_release(cd->pi);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1044:   if (!cd->disk)",
          "1045:    continue;",
          "",
          "---------------"
        ]
      }
    }
  ]
}