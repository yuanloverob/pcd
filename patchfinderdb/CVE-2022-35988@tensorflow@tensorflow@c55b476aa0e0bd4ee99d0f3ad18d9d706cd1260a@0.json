{
  "cve_id": "CVE-2022-35988",
  "cve_desc": "TensorFlow is an open source platform for machine learning. When `tf.linalg.matrix_rank` receives an empty input `a`, the GPU kernel gives a `CHECK` fail that can be used to trigger a denial of service attack. We have patched the issue in GitHub commit c55b476aa0e0bd4ee99d0f3ad18d9d706cd1260a. The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range. There are no known workarounds for this issue.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "c55b476aa0e0bd4ee99d0f3ad18d9d706cd1260a",
  "patch_info": {
    "commit_hash": "c55b476aa0e0bd4ee99d0f3ad18d9d706cd1260a",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/c55b476aa0e0bd4ee99d0f3ad18d9d706cd1260a",
    "files": [
      "tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc",
      "tensorflow/python/kernel_tests/linalg/svd_op_test.py"
    ],
    "message": "Fix empty batch issue in svd.\n\nIf there are zero batches, the GPU kernel previously failed with a `work_element_count > 0`\ncheck failure.  In the zero batch case, there is no output, so simply return.\n\nPiperOrigin-RevId: 462210670",
    "before_after_code_files": [
      "tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc||tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc",
      "tensorflow/python/kernel_tests/linalg/svd_op_test.py||tensorflow/python/kernel_tests/linalg/svd_op_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc||tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc": [
      "File: tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc -> tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     OP_REQUIRES_OK_ASYNC(context, context->allocate_output(2, shapeV, &outputV),",
      "396:                          done);",
      "398:     if (n == 0 || m == 0) {",
      "399:       if (n == m || !compute_uv_ || !full_matrices_) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "399:     if (shapeRaw.num_elements() == 0) {",
      "400:       done();",
      "401:       return;",
      "402:     }",
      "",
      "---------------"
    ],
    "tensorflow/python/kernel_tests/linalg/svd_op_test.py||tensorflow/python/kernel_tests/linalg/svd_op_test.py": [
      "File: tensorflow/python/kernel_tests/linalg/svd_op_test.py -> tensorflow/python/kernel_tests/linalg/svd_op_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "108:     for i in range(0, len(val), 2):",
      "109:       self.assertAllEqual(val[i], val[i + 1])",
      "112: def _GetSvdOpTest(dtype_, shape_, use_static_shape_, compute_uv_,",
      "113:                   full_matrices_):",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "111:   @test_util.run_in_graph_and_eager_modes(use_gpu=True)",
      "112:   def testEmptyBatches(self):",
      "113:     matrices = constant_op.constant(1.0, shape=[0, 2, 2])",
      "114:     s, u, v = self.evaluate(linalg_ops.svd(matrices))",
      "115:     self.assertAllEqual(s, np.zeros([0, 2]))",
      "116:     self.assertAllEqual(u, np.zeros([0, 2, 2]))",
      "117:     self.assertAllEqual(v, np.zeros([0, 2, 2]))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "064699074f0d4d4be25f4e4e5f4fd71eedc04975",
      "candidate_info": {
        "commit_hash": "064699074f0d4d4be25f4e4e5f4fd71eedc04975",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/064699074f0d4d4be25f4e4e5f4fd71eedc04975",
        "files": [
          "tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc",
          "tensorflow/python/kernel_tests/linalg/svd_op_test.py"
        ],
        "message": "Fix empty batch issue in svd.\n\nIf there are zero batches, the GPU kernel previously failed with a `work_element_count > 0`\ncheck failure.  In the zero batch case, there is no output, so simply return.\n\nPiperOrigin-RevId: 462210670",
        "before_after_code_files": [
          "tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc||tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc",
          "tensorflow/python/kernel_tests/linalg/svd_op_test.py||tensorflow/python/kernel_tests/linalg/svd_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc||tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc",
            "tensorflow/python/kernel_tests/linalg/svd_op_test.py||tensorflow/python/kernel_tests/linalg/svd_op_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc||tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc",
            "tensorflow/python/kernel_tests/linalg/svd_op_test.py||tensorflow/python/kernel_tests/linalg/svd_op_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc||tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc": [
          "File: tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc -> tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "395:     OP_REQUIRES_OK_ASYNC(context, context->allocate_output(2, shapeV, &outputV),",
          "396:                          done);",
          "398:     if (n == 0 || m == 0) {",
          "399:       if (n == m || !compute_uv_ || !full_matrices_) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "399:     if (shapeRaw.num_elements() == 0) {",
          "400:       done();",
          "401:       return;",
          "402:     }",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/linalg/svd_op_test.py||tensorflow/python/kernel_tests/linalg/svd_op_test.py": [
          "File: tensorflow/python/kernel_tests/linalg/svd_op_test.py -> tensorflow/python/kernel_tests/linalg/svd_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "108:     for i in range(0, len(val), 2):",
          "109:       self.assertAllEqual(val[i], val[i + 1])",
          "112: def _GetSvdOpTest(dtype_, shape_, use_static_shape_, compute_uv_,",
          "113:                   full_matrices_):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "111:   @test_util.run_in_graph_and_eager_modes(use_gpu=True)",
          "112:   def testEmptyBatches(self):",
          "113:     matrices = constant_op.constant(1.0, shape=[0, 2, 2])",
          "114:     s, u, v = self.evaluate(linalg_ops.svd(matrices))",
          "115:     self.assertAllEqual(s, np.zeros([0, 2]))",
          "116:     self.assertAllEqual(u, np.zeros([0, 2, 2]))",
          "117:     self.assertAllEqual(v, np.zeros([0, 2, 2]))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7cf360e6472e9dda35ac5eaeb3174d29cd98c597",
      "candidate_info": {
        "commit_hash": "7cf360e6472e9dda35ac5eaeb3174d29cd98c597",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/7cf360e6472e9dda35ac5eaeb3174d29cd98c597",
        "files": [
          "tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc",
          "tensorflow/python/kernel_tests/linalg/svd_op_test.py"
        ],
        "message": "Fix empty batch issue in svd.\n\nIf there are zero batches, the GPU kernel previously failed with a `work_element_count > 0`\ncheck failure.  In the zero batch case, there is no output, so simply return.\n\nPiperOrigin-RevId: 462210670",
        "before_after_code_files": [
          "tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc||tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc",
          "tensorflow/python/kernel_tests/linalg/svd_op_test.py||tensorflow/python/kernel_tests/linalg/svd_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc||tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc",
            "tensorflow/python/kernel_tests/linalg/svd_op_test.py||tensorflow/python/kernel_tests/linalg/svd_op_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc||tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc",
            "tensorflow/python/kernel_tests/linalg/svd_op_test.py||tensorflow/python/kernel_tests/linalg/svd_op_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc||tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc": [
          "File: tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc -> tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "395:     OP_REQUIRES_OK_ASYNC(context, context->allocate_output(2, shapeV, &outputV),",
          "396:                          done);",
          "398:     if (n == 0 || m == 0) {",
          "399:       if (n == m || !compute_uv_ || !full_matrices_) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "399:     if (shapeRaw.num_elements() == 0) {",
          "400:       done();",
          "401:       return;",
          "402:     }",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/linalg/svd_op_test.py||tensorflow/python/kernel_tests/linalg/svd_op_test.py": [
          "File: tensorflow/python/kernel_tests/linalg/svd_op_test.py -> tensorflow/python/kernel_tests/linalg/svd_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "108:     for i in range(0, len(val), 2):",
          "109:       self.assertAllEqual(val[i], val[i + 1])",
          "112: def _GetSvdOpTest(dtype_, shape_, use_static_shape_, compute_uv_,",
          "113:                   full_matrices_):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "111:   @test_util.run_in_graph_and_eager_modes(use_gpu=True)",
          "112:   def testEmptyBatches(self):",
          "113:     matrices = constant_op.constant(1.0, shape=[0, 2, 2])",
          "114:     s, u, v = self.evaluate(linalg_ops.svd(matrices))",
          "115:     self.assertAllEqual(s, np.zeros([0, 2]))",
          "116:     self.assertAllEqual(u, np.zeros([0, 2, 2]))",
          "117:     self.assertAllEqual(v, np.zeros([0, 2, 2]))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4406c9feddc7cebbbc8cd9ef124dbef26e3ffb3d",
      "candidate_info": {
        "commit_hash": "4406c9feddc7cebbbc8cd9ef124dbef26e3ffb3d",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/4406c9feddc7cebbbc8cd9ef124dbef26e3ffb3d",
        "files": [
          "tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc",
          "tensorflow/python/kernel_tests/svd_op_test.py"
        ],
        "message": "Fix empty batch issue in svd.\n\nIf there are zero batches, the GPU kernel previously failed with a `work_element_count > 0`\ncheck failure.  In the zero batch case, there is no output, so simply return.\n\nPiperOrigin-RevId: 462210670",
        "before_after_code_files": [
          "tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc||tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc",
          "tensorflow/python/kernel_tests/svd_op_test.py||tensorflow/python/kernel_tests/svd_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc||tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc||tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc||tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc": [
          "File: tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc -> tensorflow/core/kernels/linalg/svd_op_gpu.cu.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "395:     OP_REQUIRES_OK_ASYNC(context, context->allocate_output(2, shapeV, &outputV),",
          "396:                          done);",
          "398:     if (n == 0 || m == 0) {",
          "399:       if (n == m || !compute_uv_ || !full_matrices_) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "399:     if (shapeRaw.num_elements() == 0) {",
          "400:       done();",
          "401:       return;",
          "402:     }",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/svd_op_test.py||tensorflow/python/kernel_tests/svd_op_test.py": [
          "File: tensorflow/python/kernel_tests/svd_op_test.py -> tensorflow/python/kernel_tests/svd_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "112:     for i in range(0, len(val), 2):",
          "113:       self.assertAllEqual(val[i], val[i + 1])",
          "116: def _GetSvdOpTest(dtype_, shape_, use_static_shape_, compute_uv_,",
          "117:                   full_matrices_):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "115:   @test_util.run_in_graph_and_eager_modes(use_gpu=True)",
          "116:   def testEmptyBatches(self):",
          "117:     matrices = constant_op.constant(1.0, shape=[0, 2, 2])",
          "118:     s, u, v = self.evaluate(linalg_ops.svd(matrices))",
          "119:     self.assertAllEqual(s, np.zeros([0, 2]))",
          "120:     self.assertAllEqual(u, np.zeros([0, 2, 2]))",
          "121:     self.assertAllEqual(v, np.zeros([0, 2, 2]))",
          "",
          "---------------"
        ]
      }
    }
  ]
}