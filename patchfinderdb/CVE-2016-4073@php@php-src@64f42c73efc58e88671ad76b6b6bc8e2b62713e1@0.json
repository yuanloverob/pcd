{
  "cve_id": "CVE-2016-4073",
  "cve_desc": "Multiple integer overflows in the mbfl_strcut function in ext/mbstring/libmbfl/mbfl/mbfilter.c in PHP before 5.5.34, 5.6.x before 5.6.20, and 7.x before 7.0.5 allow remote attackers to cause a denial of service (application crash) or possibly execute arbitrary code via a crafted mb_strcut call.",
  "repo": "php/php-src",
  "patch_hash": "64f42c73efc58e88671ad76b6b6bc8e2b62713e1",
  "patch_info": {
    "commit_hash": "64f42c73efc58e88671ad76b6b6bc8e2b62713e1",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/64f42c73efc58e88671ad76b6b6bc8e2b62713e1",
    "files": [
      "ext/mbstring/libmbfl/mbfl/mbfilter.c"
    ],
    "message": "Fixed bug #71906: AddressSanitizer: negative-size-param (-1) in mbfl_strcut",
    "before_after_code_files": [
      "ext/mbstring/libmbfl/mbfl/mbfilter.c||ext/mbstring/libmbfl/mbfl/mbfilter.c"
    ]
  },
  "patch_diff": {
    "ext/mbstring/libmbfl/mbfl/mbfilter.c||ext/mbstring/libmbfl/mbfl/mbfilter.c": [
      "File: ext/mbstring/libmbfl/mbfl/mbfilter.c -> ext/mbstring/libmbfl/mbfl/mbfilter.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "137: mbfl_buffer_converter *",
      "138: mbfl_buffer_converter_new2(",
      "139:  const mbfl_encoding *from,",
      "141:     int buf_initsz)",
      "142: {",
      "143:  mbfl_buffer_converter *convd;",
      "",
      "[Removed Lines]",
      "140:  const mbfl_encoding *to,",
      "",
      "[Added Lines]",
      "140:  const mbfl_encoding *to,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "339: }",
      "341: mbfl_string *",
      "343:       mbfl_string *result)",
      "344: {",
      "345:  if (convd == NULL || string == NULL || result == NULL) {",
      "",
      "[Removed Lines]",
      "342: mbfl_buffer_converter_feed_result(mbfl_buffer_converter *convd, mbfl_string *string,",
      "",
      "[Added Lines]",
      "342: mbfl_buffer_converter_feed_result(mbfl_buffer_converter *convd, mbfl_string *string,",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "844:  } else {",
      "846:   mbfl_convert_filter *filter = mbfl_convert_filter_new(",
      "848:     mbfl_no_encoding_wchar,",
      "849:     filter_count_output, 0, &len);",
      "850:   if (filter == NULL) {",
      "",
      "[Removed Lines]",
      "847:     string->no_encoding,",
      "",
      "[Added Lines]",
      "847:     string->no_encoding,",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "935: mbfl_oddlen(mbfl_string *string)",
      "936: {",
      "937:  int len, n, m, k;",
      "",
      "[Removed Lines]",
      "934: int",
      "",
      "[Added Lines]",
      "934: int",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1071:        ++result;",
      "1072:       } else if ((c & 0xc0) != 0x80) {",
      "1073:        ++result;",
      "1075:      }",
      "1076:      goto out;",
      "1077:     }",
      "",
      "[Removed Lines]",
      "1074:       }",
      "",
      "[Added Lines]",
      "1074:       }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1116:   qe = needle_u8_val + needle_u8_len;",
      "1117:   if (offset < 0) {",
      "1118:    if (-offset > needle_len) {",
      "1120:     while (offset < 0) {",
      "1121:      unsigned char c;",
      "1122:      if (p <= e) {",
      "",
      "[Removed Lines]",
      "1119:     offset += needle_len;",
      "",
      "[Added Lines]",
      "1119:     offset += needle_len;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1158:        ++result;",
      "1159:       } else if ((c & 0xc0) != 0x80) {",
      "1160:        ++result;",
      "1162:      }",
      "1163:      goto out;",
      "1164:     }",
      "",
      "[Removed Lines]",
      "1161:       }",
      "",
      "[Added Lines]",
      "1161:       }",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1501:   if (encoding->flag & (MBFL_ENCTYPE_WCS2BE | MBFL_ENCTYPE_WCS2LE)) {",
      "1502:    from &= -2;",
      "1505:     length = string->len - from;",
      "1506:    }",
      "",
      "[Removed Lines]",
      "1504:    if (from + length >= string->len) {",
      "",
      "[Added Lines]",
      "1504:    if (length >= string->len - from) {",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1510:   } else if (encoding->flag & (MBFL_ENCTYPE_WCS4BE | MBFL_ENCTYPE_WCS4LE)) {",
      "1511:    from &= -4;",
      "1514:     length = string->len - from;",
      "1515:    }",
      "1517:    start = string->val + from;",
      "1518:    end   = start + (length & -4);",
      "1519:   } else if ((encoding->flag & MBFL_ENCTYPE_SBCS)) {",
      "1521:     length = string->len - from;",
      "1522:    }",
      "",
      "[Removed Lines]",
      "1513:    if (from + length >= string->len) {",
      "1520:    if (from + length >= string->len) {",
      "",
      "[Added Lines]",
      "1513:    if (length >= string->len - from) {",
      "1520:    if (length >= string->len - from) {",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1539:    start = p;",
      "1543:     end = string->val + string->len;",
      "1544:    } else {",
      "1545:     for (q = p + length; p < q; p += (m = mbtab[*p]));",
      "",
      "[Removed Lines]",
      "1542:    if ((start - string->val) + length >= (int)string->len) {",
      "",
      "[Added Lines]",
      "1542:    if (length >= (int)string->len - (start - string->val)) {",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "2024:   mbfl_no_encoding_wchar,",
      "2025:   (int(*)(int, void*))next_filter->filter_function,",
      "2026:   (int(*)(void*))next_filter->filter_flush,",
      "2028:  if (encoder == NULL) {",
      "2029:   goto out;",
      "2030:  }",
      "",
      "[Removed Lines]",
      "2027:   next_filter);",
      "",
      "[Added Lines]",
      "2027:   next_filter);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f8dd10508bd66b6eefb18d319577b443fb1e0c55",
      "candidate_info": {
        "commit_hash": "f8dd10508bd66b6eefb18d319577b443fb1e0c55",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/f8dd10508bd66b6eefb18d319577b443fb1e0c55",
        "files": [
          "ext/mbstring/libmbfl/mbfl/mbfilter.c",
          "main/php_version.h"
        ],
        "message": "Fixed bug #71906: AddressSanitizer: negative-size-param (-1) in mbfl_strcut",
        "before_after_code_files": [
          "ext/mbstring/libmbfl/mbfl/mbfilter.c||ext/mbstring/libmbfl/mbfl/mbfilter.c",
          "main/php_version.h||main/php_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "ext/mbstring/libmbfl/mbfl/mbfilter.c||ext/mbstring/libmbfl/mbfl/mbfilter.c"
          ],
          "candidate": [
            "ext/mbstring/libmbfl/mbfl/mbfilter.c||ext/mbstring/libmbfl/mbfl/mbfilter.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/mbstring/libmbfl/mbfl/mbfilter.c||ext/mbstring/libmbfl/mbfl/mbfilter.c": [
          "File: ext/mbstring/libmbfl/mbfl/mbfilter.c -> ext/mbstring/libmbfl/mbfl/mbfilter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "137: mbfl_buffer_converter *",
          "138: mbfl_buffer_converter_new2(",
          "139:  const mbfl_encoding *from,",
          "141:     int buf_initsz)",
          "142: {",
          "143:  mbfl_buffer_converter *convd;",
          "",
          "[Removed Lines]",
          "140:  const mbfl_encoding *to,",
          "",
          "[Added Lines]",
          "140:  const mbfl_encoding *to,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "339: }",
          "341: mbfl_string *",
          "343:       mbfl_string *result)",
          "344: {",
          "345:  if (convd == NULL || string == NULL || result == NULL) {",
          "",
          "[Removed Lines]",
          "342: mbfl_buffer_converter_feed_result(mbfl_buffer_converter *convd, mbfl_string *string,",
          "",
          "[Added Lines]",
          "342: mbfl_buffer_converter_feed_result(mbfl_buffer_converter *convd, mbfl_string *string,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "844:  } else {",
          "846:   mbfl_convert_filter *filter = mbfl_convert_filter_new(",
          "848:     mbfl_no_encoding_wchar,",
          "849:     filter_count_output, 0, &len);",
          "850:   if (filter == NULL) {",
          "",
          "[Removed Lines]",
          "847:     string->no_encoding,",
          "",
          "[Added Lines]",
          "847:     string->no_encoding,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "935: mbfl_oddlen(mbfl_string *string)",
          "936: {",
          "937:  int len, n, m, k;",
          "",
          "[Removed Lines]",
          "934: int",
          "",
          "[Added Lines]",
          "934: int",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1071:        ++result;",
          "1072:       } else if ((c & 0xc0) != 0x80) {",
          "1073:        ++result;",
          "1075:      }",
          "1076:      goto out;",
          "1077:     }",
          "",
          "[Removed Lines]",
          "1074:       }",
          "",
          "[Added Lines]",
          "1074:       }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1116:   qe = needle_u8_val + needle_u8_len;",
          "1117:   if (offset < 0) {",
          "1118:    if (-offset > needle_len) {",
          "1120:     while (offset < 0) {",
          "1121:      unsigned char c;",
          "1122:      if (p <= e) {",
          "",
          "[Removed Lines]",
          "1119:     offset += needle_len;",
          "",
          "[Added Lines]",
          "1119:     offset += needle_len;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1158:        ++result;",
          "1159:       } else if ((c & 0xc0) != 0x80) {",
          "1160:        ++result;",
          "1162:      }",
          "1163:      goto out;",
          "1164:     }",
          "",
          "[Removed Lines]",
          "1161:       }",
          "",
          "[Added Lines]",
          "1161:       }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1501:   if (encoding->flag & (MBFL_ENCTYPE_WCS2BE | MBFL_ENCTYPE_WCS2LE)) {",
          "1502:    from &= -2;",
          "1505:     length = string->len - from;",
          "1506:    }",
          "",
          "[Removed Lines]",
          "1504:    if (from + length >= string->len) {",
          "",
          "[Added Lines]",
          "1504:    if (length >= string->len - from) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1510:   } else if (encoding->flag & (MBFL_ENCTYPE_WCS4BE | MBFL_ENCTYPE_WCS4LE)) {",
          "1511:    from &= -4;",
          "1514:     length = string->len - from;",
          "1515:    }",
          "1517:    start = string->val + from;",
          "1518:    end   = start + (length & -4);",
          "1519:   } else if ((encoding->flag & MBFL_ENCTYPE_SBCS)) {",
          "1521:     length = string->len - from;",
          "1522:    }",
          "",
          "[Removed Lines]",
          "1513:    if (from + length >= string->len) {",
          "1520:    if (from + length >= string->len) {",
          "",
          "[Added Lines]",
          "1513:    if (length >= string->len - from) {",
          "1520:    if (length >= string->len - from) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1539:    start = p;",
          "1543:     end = string->val + string->len;",
          "1544:    } else {",
          "1545:     for (q = p + length; p < q; p += (m = mbtab[*p]));",
          "",
          "[Removed Lines]",
          "1542:    if ((start - string->val) + length >= (int)string->len) {",
          "",
          "[Added Lines]",
          "1542:    if (length >= (int)string->len - (start - string->val)) {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2024:   mbfl_no_encoding_wchar,",
          "2025:   (int(*)(int, void*))next_filter->filter_function,",
          "2026:   (int(*)(void*))next_filter->filter_flush,",
          "2028:  if (encoder == NULL) {",
          "2029:   goto out;",
          "2030:  }",
          "",
          "[Removed Lines]",
          "2027:   next_filter);",
          "",
          "[Added Lines]",
          "2027:   next_filter);",
          "",
          "---------------"
        ],
        "main/php_version.h||main/php_version.h": [
          "File: main/php_version.h -> main/php_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: #define PHP_MAJOR_VERSION 5",
          "4: #define PHP_MINOR_VERSION 5",
          "6: #define PHP_EXTRA_VERSION \"-dev\"",
          "",
          "[Removed Lines]",
          "5: #define PHP_RELEASE_VERSION 27",
          "7: #define PHP_VERSION \"5.5.27-dev\"",
          "8: #define PHP_VERSION_ID 50527",
          "",
          "[Added Lines]",
          "5: #define PHP_RELEASE_VERSION 34",
          "7: #define PHP_VERSION \"5.5.34-dev\"",
          "8: #define PHP_VERSION_ID 50534",
          "",
          "---------------"
        ]
      }
    }
  ]
}