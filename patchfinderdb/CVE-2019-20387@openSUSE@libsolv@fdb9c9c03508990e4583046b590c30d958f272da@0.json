{
  "cve_id": "CVE-2019-20387",
  "cve_desc": "repodata_schema2id in repodata.c in libsolv before 0.7.6 has a heap-based buffer over-read via a last schema whose length is less than the length of the input schema.",
  "repo": "openSUSE/libsolv",
  "patch_hash": "fdb9c9c03508990e4583046b590c30d958f272da",
  "patch_info": {
    "commit_hash": "fdb9c9c03508990e4583046b590c30d958f272da",
    "repo": "openSUSE/libsolv",
    "commit_url": "https://github.com/openSUSE/libsolv/commit/fdb9c9c03508990e4583046b590c30d958f272da",
    "files": [
      "src/repodata.c"
    ],
    "message": "repodata_schema2id: fix heap-buffer-overflow in memcmp\n\nWhen the length of last schema in data->schemadata is\nless than length of input schema, we got a read overflow\nin asan test.\n\nSigned-off-by: Zhipeng Xie <xiezhipeng1@huawei.com>",
    "before_after_code_files": [
      "src/repodata.c||src/repodata.c"
    ]
  },
  "patch_diff": {
    "src/repodata.c||src/repodata.c": [
      "File: src/repodata.c -> src/repodata.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "211:   cid = schematahash[h];",
      "212:   if (cid)",
      "213:     {",
      "215:         return cid;",
      "217:       for (cid = 1; cid < data->nschemata; cid++)",
      "219:           return cid;",
      "220:     }",
      "",
      "[Removed Lines]",
      "214:       if (!memcmp(data->schemadata + data->schemata[cid], schema, len * sizeof(Id)))",
      "218:         if (!memcmp(data->schemadata + data->schemata[cid], schema, len * sizeof(Id)))",
      "",
      "[Added Lines]",
      "214:       if ((data->schemata[cid] + len <= data->schemadatalen) &&",
      "215:      !memcmp(data->schemadata + data->schemata[cid], schema, len * sizeof(Id)))",
      "219:         if ((data->schemata[cid] + len <= data->schemadatalen) &&",
      "220:     !memcmp(data->schemadata + data->schemata[cid], schema, len * sizeof(Id)))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "42e705ca567e21d69c1fc100f598598259c7e2e9",
      "candidate_info": {
        "commit_hash": "42e705ca567e21d69c1fc100f598598259c7e2e9",
        "repo": "openSUSE/libsolv",
        "commit_url": "https://github.com/openSUSE/libsolv/commit/42e705ca567e21d69c1fc100f598598259c7e2e9",
        "files": [
          "src/repodata.c"
        ],
        "message": "repodata_schema2id: fix heap-buffer-overflow in memcmp\n\nWhen the length of last schema in data->schemadata is\nless than length of input schema, we got a read overflow\nin asan test.\n\nSigned-off-by: Zhipeng Xie <xiezhipeng1@huawei.com>",
        "before_after_code_files": [
          "src/repodata.c||src/repodata.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/repodata.c||src/repodata.c"
          ],
          "candidate": [
            "src/repodata.c||src/repodata.c"
          ]
        }
      },
      "candidate_diff": {
        "src/repodata.c||src/repodata.c": [
          "File: src/repodata.c -> src/repodata.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "205:   cid = schematahash[h];",
          "206:   if (cid)",
          "207:     {",
          "209:         return cid;",
          "211:       for (cid = 1; cid < data->nschemata; cid++)",
          "213:           return cid;",
          "214:     }",
          "",
          "[Removed Lines]",
          "208:       if (!memcmp(data->schemadata + data->schemata[cid], schema, len * sizeof(Id)))",
          "212:         if (!memcmp(data->schemadata + data->schemata[cid], schema, len * sizeof(Id)))",
          "",
          "[Added Lines]",
          "208:       if ((data->schemata[cid] + len <= data->schemadatalen) &&",
          "209:      !memcmp(data->schemadata + data->schemata[cid], schema, len * sizeof(Id)))",
          "213:         if ((data->schemata[cid] + len <= data->schemadatalen) &&",
          "214:     !memcmp(data->schemadata + data->schemata[cid], schema, len * sizeof(Id)))",
          "",
          "---------------"
        ]
      }
    }
  ]
}