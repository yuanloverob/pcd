{
  "cve_id": "CVE-2019-19880",
  "cve_desc": "exprListAppendList in window.c in SQLite 3.30.1 allows attackers to trigger an invalid pointer dereference because constant integer values in ORDER BY clauses of window definitions are mishandled.",
  "repo": "sqlite/sqlite",
  "patch_hash": "75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
  "patch_info": {
    "commit_hash": "75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/window.c"
    ],
    "message": "When processing constant integer values in ORDER BY clauses of window definitions (see check-in [7e4809eadfe99ebf]) be sure to fully disable the constant value to avoid an invalid pointer dereference if the expression is ever duplicated. This fixes a crash report from Yongheng and Rui.\n\nFossilOrigin-Name: 1ca0bd982ab1183bbafce0d260e4dceda5eb766ed2e7793374a88d1ae0bdd2ca",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/window.c||src/window.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 8223e79f987feda5c8e51ec52cec6798cca16d070b10558939e2888ca1a25b8e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/window.c||src/window.c": [
      "File: src/window.c -> src/window.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "895:     int nInit = pList ? pList->nExpr : 0;",
      "896:     for(i=0; i<pAppend->nExpr; i++){",
      "897:       Expr *pDup = sqlite3ExprDup(pParse->db, pAppend->a[i].pExpr, 0);",
      "898:       if( bIntToNull && pDup && pDup->op==TK_INTEGER ){",
      "899:         pDup->op = TK_NULL;",
      "900:         pDup->flags &= ~(EP_IntValue|EP_IsTrue|EP_IsFalse);",
      "901:       }",
      "902:       pList = sqlite3ExprListAppend(pParse, pList, pDup);",
      "903:       if( pList ) pList->a[nInit+i].sortFlags = pAppend->a[i].sortFlags;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "898:       assert( pDup==0 || !ExprHasProperty(pDup, EP_MemToken) );",
      "902:         pDup->u.zToken = 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e2d2ad6ece4611d7e548e14ab61bf0fe1d70bf11",
      "candidate_info": {
        "commit_hash": "e2d2ad6ece4611d7e548e14ab61bf0fe1d70bf11",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e2d2ad6ece4611d7e548e14ab61bf0fe1d70bf11",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "Update the test/fuzzdata8.db database with new interesting cases from dbsqlfuzz.\n\nFossilOrigin-Name: e467e4c8fa256ddd6c26c1f21bc26289a21f18b781737eaf706bc813ed8234fa",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b0da6e0dd1f9a9ba7646ee6bb3c14945e570303c9a42d20fa8a653570e12c3f9",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "666a42ffb3ad492e049ad3e1020299218f66a53b",
      "candidate_info": {
        "commit_hash": "666a42ffb3ad492e049ad3e1020299218f66a53b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/666a42ffb3ad492e049ad3e1020299218f66a53b",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c"
        ],
        "message": "Minor performance improvement for balance_nonroot().\n\nFossilOrigin-Name: d7434cae3edc321e2f1f8d340a0e656b1613b736f8400fb271a0e80f59401b9e",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 156d612800a7282fe0ebb20feb31d3fd577f4ab60fab8c00940c87143997aefb",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6992:   while( 1 /*Exit by break*/ ){",
          "6993:     int sz, rc;",
          "6994:     u8 *pSlot;",
          "6996:     if( (aData[1]==0 && aData[2]==0) || (pSlot = pageFindSlot(pPg,sz,&rc))==0 ){",
          "6997:       if( (pData - pBegin)<sz ) return 1;",
          "6998:       pData -= sz;",
          "",
          "[Removed Lines]",
          "6995:     sz = cachedCellSize(pCArray, i);",
          "",
          "[Added Lines]",
          "6995:     assert( pCArray->szCell[i]!=0 );",
          "6996:     sz = pCArray->szCell[i];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7153:         memmove(&pCellptr[2], pCellptr, (nCell - iCell) * 2);",
          "7154:       }",
          "7155:       nCell++;",
          "7156:       if( pageInsertArray(",
          "7157:             pPg, pBegin, &pData, pCellptr,",
          "7158:             iCell+iNew, 1, pCArray",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7157:       cachedCellSize(pCArray, iCell+iNew);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "38587159ddabc116c5b85acf05d1aebbfb777845",
      "candidate_info": {
        "commit_hash": "38587159ddabc116c5b85acf05d1aebbfb777845",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/38587159ddabc116c5b85acf05d1aebbfb777845",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbesort.c"
        ],
        "message": "Omit a pointless memory allocation in vdbeSorterSort().\n\nFossilOrigin-Name: 5d76dbc5b0584c15d7d59e5c079868f2077f32b865f406b40ec837b8ab6ef2e1",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbesort.c||src/vdbesort.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 31e85fbbc4cfd09a98b4a6dc6624f863816f376c6a4eef1fafc657c8e1abbc36",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbesort.c||src/vdbesort.c": [
          "File: src/vdbesort.c -> src/vdbesort.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1397: static int vdbeSorterSort(SortSubtask *pTask, SorterList *pList){",
          "1398:   int i;",
          "1400:   SorterRecord *p;",
          "1401:   int rc;",
          "1403:   rc = vdbeSortAllocUnpacked(pTask);",
          "1404:   if( rc!=SQLITE_OK ) return rc;",
          "1406:   p = pList->pList;",
          "1407:   pTask->xCompare = vdbeSorterGetCompare(pTask->pSorter);",
          "1414:   while( p ){",
          "1415:     SorterRecord *pNext;",
          "",
          "[Removed Lines]",
          "1399:   SorterRecord **aSlot;",
          "1409:   aSlot = (SorterRecord **)sqlite3MallocZero(64 * sizeof(SorterRecord *));",
          "1410:   if( !aSlot ){",
          "1411:     return SQLITE_NOMEM_BKPT;",
          "1412:   }",
          "",
          "[Added Lines]",
          "1401:   SorterRecord *aSlot[64];",
          "1408:   memset(aSlot, 0, sizeof(aSlot));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1434:   }",
          "1436:   p = 0;",
          "1438:     if( aSlot[i]==0 ) continue;",
          "1439:     p = p ? vdbeSorterMerge(pTask, p, aSlot[i]) : aSlot[i];",
          "1440:   }",
          "1441:   pList->pList = p;",
          "1444:   assert( pTask->pUnpacked->errCode==SQLITE_OK",
          "1445:        || pTask->pUnpacked->errCode==SQLITE_NOMEM",
          "1446:   );",
          "",
          "[Removed Lines]",
          "1437:   for(i=0; i<64; i++){",
          "1443:   sqlite3_free(aSlot);",
          "",
          "[Added Lines]",
          "1433:   for(i=0; i<ArraySize(aSlot); i++){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "679c9613f61a9af9a2c6c5c9d8295ebe28b9d6c6",
      "candidate_info": {
        "commit_hash": "679c9613f61a9af9a2c6c5c9d8295ebe28b9d6c6",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/679c9613f61a9af9a2c6c5c9d8295ebe28b9d6c6",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/view.test"
        ],
        "message": "Remove use of the affinity() function from view.test, as it is only available in SQLITE_DEBUG builds.\n\nFossilOrigin-Name: 7f2246a17be9915b3492624a3d8deff56694bdc372f7627e3f16c1869415b1a3",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/view.test||test/view.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f5d0436d8dc650cadb61a5fe76fd1a0d68dabba54ff0c2a8c138f9dfbdab1c3f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/view.test||test/view.test": [
          "File: test/view.test -> test/view.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "733: }",
          "735: do_execsql_test view-27.1 {",
          "737: } {",
          "740: }",
          "742: do_execsql_test view-27.2 { SELECT c0<c1 FROM v0 } 1",
          "",
          "[Removed Lines]",
          "736:   SELECT c0, typeof(c0), affinity(c0), c1, typeof(c1), affinity(c1) FROM v0;",
          "738:   -1   text text",
          "739:    0.0 real none",
          "",
          "[Added Lines]",
          "736:   SELECT c0, typeof(c0), c1, typeof(c1) FROM v0;",
          "738:   -1   text",
          "739:    0.0 real",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bd462bcc10bb1545d39359ff29cb521819ab656d",
      "candidate_info": {
        "commit_hash": "bd462bcc10bb1545d39359ff29cb521819ab656d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/bd462bcc10bb1545d39359ff29cb521819ab656d",
        "files": [
          "ext/expert/expert1.test",
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "src/vdbe.h",
          "src/vdbeaux.c",
          "src/wherecode.c",
          "test/autoindex1.test",
          "test/bestindex3.test",
          "test/cost.test",
          "test/eqp.test",
          "test/join5.test",
          "test/tkt-80ba201079.test",
          "test/where7.test",
          "test/where9.test",
          "test/whereI.test",
          "test/with3.test"
        ],
        "message": "Improvements to EXPLAIN QUERY PLAN formatting.  The MULTI-INDEX OR now shows a separate \"INDEX\" subtree for each index.  SCALAR SUBQUERY entries provide a subquery number that is related back to the .selecttrace output.\n\nFossilOrigin-Name: 7153552bac51295c56a1c42ca79d57195851e232509f9e9610375692f48c7e86",
        "before_after_code_files": [
          "ext/expert/expert1.test||ext/expert/expert1.test",
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "src/vdbe.h||src/vdbe.h",
          "src/vdbeaux.c||src/vdbeaux.c",
          "src/wherecode.c||src/wherecode.c",
          "test/autoindex1.test||test/autoindex1.test",
          "test/bestindex3.test||test/bestindex3.test",
          "test/cost.test||test/cost.test",
          "test/eqp.test||test/eqp.test",
          "test/join5.test||test/join5.test",
          "test/tkt-80ba201079.test||test/tkt-80ba201079.test",
          "test/where7.test||test/where7.test",
          "test/where9.test||test/where9.test",
          "test/whereI.test||test/whereI.test",
          "test/with3.test||test/with3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/expert/expert1.test||ext/expert/expert1.test": [
          "File: ext/expert/expert1.test -> ext/expert/expert1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "243:   CREATE INDEX t7_idx_00000062 ON t7(b);",
          "244:   CREATE INDEX t7_idx_00000061 ON t7(a);",
          "245:   MULTI-INDEX OR",
          "248: }",
          "250: # rowid terms.",
          "",
          "[Removed Lines]",
          "246:     SEARCH TABLE t7 USING INDEX t7_idx_00000061 (a=?)",
          "247:     SEARCH TABLE t7 USING INDEX t7_idx_00000062 (b=?)",
          "",
          "[Added Lines]",
          "246:     INDEX 1",
          "247:       SEARCH TABLE t7 USING INDEX t7_idx_00000061 (a=?)",
          "248:     INDEX 2",
          "249:       SEARCH TABLE t7 USING INDEX t7_idx_00000062 (b=?)",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e53781f5bdf5c7b7d91ffe76565ea2fe5d1b3a9b162b3a88a7017bbe785d4c72",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2693:     if( ExprHasProperty(pExpr, EP_Subrtn) ){",
          "2695:       sqlite3VdbeAddOp2(v, OP_Gosub, pExpr->y.sub.regReturn,",
          "2696:                         pExpr->y.sub.iAddr);",
          "2697:       sqlite3VdbeAddOp2(v, OP_OpenDup, iTab, pExpr->iTable);",
          "2698:       return;",
          "2699:     }",
          "",
          "[Removed Lines]",
          "2694:       sqlite3VdbeAddOp2(v, OP_Once, 0, sqlite3VdbeCurrentAddr(v)+3);",
          "",
          "[Added Lines]",
          "2694:       int addr = sqlite3VdbeAddOp0(v, OP_Once); VdbeCoverage(v);",
          "2695:       if( ExprHasProperty(pExpr, EP_xIsSelect) ){",
          "2696:         ExplainQueryPlan((pParse, 0, \"REUSE LIST SUBQUERY %d\",",
          "2697:               pExpr->x.pSelect->selId));",
          "2698:       }",
          "2702:       sqlite3VdbeJumpHere(v, addr);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2746:     if( ALWAYS(pEList->nExpr==nVal) ){",
          "2747:       SelectDest dest;",
          "2748:       int i;",
          "2750:       dest.zAffSdst = exprINAffinity(pParse, pExpr);",
          "2751:       pSelect->iLimit = 0;",
          "2752:       testcase( pSelect->selFlags & SF_Distinct );",
          "",
          "[Removed Lines]",
          "2749:       sqlite3SelectDestInit(&dest, SRT_Set, pExpr->iTable);",
          "",
          "[Added Lines]",
          "2754:       sqlite3SelectDestInit(&dest, SRT_Set, iTab);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2812:       if( isRowid && sqlite3ExprIsInteger(pE2, &iValToIns) ){",
          "2814:       }else{",
          "2815:         r3 = sqlite3ExprCodeTarget(pParse, pE2, r1);",
          "2816:         if( isRowid ){",
          "2817:           sqlite3VdbeAddOp2(v, OP_MustBeInt, r3,",
          "2818:                             sqlite3VdbeCurrentAddr(v)+2);",
          "2819:           VdbeCoverage(v);",
          "2821:         }else{",
          "2822:           sqlite3VdbeAddOp4(v, OP_MakeRecord, r3, 1, r2, &affinity, 1);",
          "2824:         }",
          "2825:       }",
          "2826:     }",
          "",
          "[Removed Lines]",
          "2813:         sqlite3VdbeAddOp3(v, OP_InsertInt, pExpr->iTable, r2, iValToIns);",
          "2820:           sqlite3VdbeAddOp3(v, OP_Insert, pExpr->iTable, r2, r3);",
          "2823:           sqlite3VdbeAddOp4Int(v, OP_IdxInsert, pExpr->iTable, r2, r3, 1);",
          "",
          "[Added Lines]",
          "2818:         sqlite3VdbeAddOp3(v, OP_InsertInt, iTab, r2, iValToIns);",
          "2825:           sqlite3VdbeAddOp3(v, OP_Insert, iTab, r2, r3);",
          "2828:           sqlite3VdbeAddOp4Int(v, OP_IdxInsert, iTab, r2, r3, 1);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2865:   Vdbe *v = pParse->pVdbe;",
          "2866:   assert( v!=0 );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2872:   testcase( pExpr->op==TK_EXISTS );",
          "2873:   testcase( pExpr->op==TK_SELECT );",
          "2874:   assert( pExpr->op==TK_EXISTS || pExpr->op==TK_SELECT );",
          "2875:   assert( ExprHasProperty(pExpr, EP_xIsSelect) );",
          "2876:   pSel = pExpr->x.pSelect;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2881:     if( ExprHasProperty(pExpr, EP_Subrtn) ){",
          "2882:       sqlite3VdbeAddOp2(v, OP_Gosub, pExpr->y.sub.regReturn,",
          "2883:                         pExpr->y.sub.iAddr);",
          "2884:       return pExpr->iTable;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2892:       ExplainQueryPlan((pParse, 0, \"REUSE SUBQUERY %d\", pSel->selId));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2915:   nReg = pExpr->op==TK_SELECT ? pSel->pEList->nExpr : 1;",
          "2916:   sqlite3SelectDestInit(&dest, 0, pParse->nMem+1);",
          "2917:   pParse->nMem += nReg;",
          "",
          "[Removed Lines]",
          "2907:   testcase( pExpr->op==TK_EXISTS );",
          "2908:   testcase( pExpr->op==TK_SELECT );",
          "2909:   assert( pExpr->op==TK_EXISTS || pExpr->op==TK_SELECT );",
          "2910:   assert( ExprHasProperty(pExpr, EP_xIsSelect) );",
          "2912:   pSel = pExpr->x.pSelect;",
          "2913:   ExplainQueryPlan((pParse, 1, \"%sSCALAR SUBQUERY\",",
          "2914:         addrOnce?\"\":\"CORRELATED \"));",
          "",
          "[Added Lines]",
          "2918:   ExplainQueryPlan((pParse, 1, \"%sSCALAR SUBQUERY %d\",",
          "2919:         addrOnce?\"\":\"CORRELATED \", pSel->selId));",
          "",
          "---------------"
        ],
        "src/vdbe.h||src/vdbe.h": [
          "File: src/vdbe.h -> src/vdbe.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "208:   void sqlite3VdbeExplain(Parse*,u8,const char*,...);",
          "209:   void sqlite3VdbeExplainPop(Parse*);",
          "210:   int sqlite3VdbeExplainParent(Parse*);",
          "211: # define ExplainQueryPlan(P)        sqlite3VdbeExplain P",
          "212: # define ExplainQueryPlanPop(P)     sqlite3VdbeExplainPop(P)",
          "213: # define ExplainQueryPlanParent(P)  sqlite3VdbeExplainParent(P)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "211:   void sqlite3ExplainBreakpoint(const char*,const char*);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "215: # define ExplainQueryPlan(P)",
          "216: # define ExplainQueryPlanPop(P)",
          "217: # define ExplainQueryPlanParent(P) 0",
          "218: #endif",
          "219: void sqlite3VdbeAddParseSchemaOp(Vdbe*,int,char*);",
          "220: void sqlite3VdbeChangeOpcode(Vdbe*, u32 addr, u8);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "220: #endif",
          "221: #if defined(SQLITE_DEBUG) && !defined(SQLITE_OMIT_EXPLAIN)",
          "222:   void sqlite3ExplainBreakpoint(const char*,const char*);",
          "223: #else",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "350: }",
          "358: void sqlite3VdbeExplain(Parse *pParse, u8 bPush, const char *zFmt, ...){",
          "360:     char *zMsg;",
          "361:     Vdbe *v;",
          "362:     va_list ap;",
          "",
          "[Removed Lines]",
          "359:   if( pParse->explain==2 ){",
          "",
          "[Added Lines]",
          "356: #if defined(SQLITE_DEBUG)",
          "357: void sqlite3ExplainBreakpoint(const char *z1, const char *z2){",
          "358:   (void)z1;",
          "359:   (void)z2;",
          "360: }",
          "361: #endif",
          "370: #if !defined(SQLITE_DEBUG)",
          "371:   if( pParse->explain==2 )",
          "372: #endif",
          "373:   {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "368:     iThis = v->nOp;",
          "369:     sqlite3VdbeAddOp4(v, OP_Explain, iThis, pParse->addrExplain, 0,",
          "370:                       zMsg, P4_DYNAMIC);",
          "372:   }",
          "373: }",
          "",
          "[Removed Lines]",
          "371:     if( bPush) pParse->addrExplain = iThis;",
          "",
          "[Added Lines]",
          "385:     sqlite3ExplainBreakpoint(bPush?\"PUSH\":\"\", sqlite3VdbeGetOp(v,-1)->p4.z);",
          "386:     if( bPush){",
          "387:       pParse->addrExplain = iThis;",
          "388:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "378: void sqlite3VdbeExplainPop(Parse *pParse){",
          "379:   pParse->addrExplain = sqlite3VdbeExplainParent(pParse);",
          "380: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "396:   sqlite3ExplainBreakpoint(\"POP\", 0);",
          "",
          "---------------"
        ],
        "src/wherecode.c||src/wherecode.c": [
          "File: src/wherecode.c -> src/wherecode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "213:     }",
          "214: #endif",
          "215:     zMsg = sqlite3StrAccumFinish(&str);",
          "216:     ret = sqlite3VdbeAddOp4(v, OP_Explain, sqlite3VdbeCurrentAddr(v),",
          "217:                             pParse->addrExplain, 0, zMsg,P4_DYNAMIC);",
          "218:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "216:     sqlite3ExplainBreakpoint(\"\",zMsg);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1951:           pOrExpr = pAndExpr;",
          "1952:         }",
          "1954:         WHERETRACE(0xffff, (\"Subplan for OR-clause:\\n\"));",
          "1955:         pSubWInfo = sqlite3WhereBegin(pParse, pOrTab, pOrExpr, 0, 0,",
          "1956:                                       wctrlFlags, iCovCur);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1955:         ExplainQueryPlan((pParse, 1, \"INDEX %d\", ii+1));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2056:           sqlite3WhereEnd(pSubWInfo);",
          "2057:         }",
          "2058:       }",
          "2059:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2059:           ExplainQueryPlanPop(pParse);",
          "",
          "---------------"
        ],
        "test/autoindex1.test||test/autoindex1.test": [
          "File: test/autoindex1.test -> test/autoindex1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "280:   |--MATERIALIZE xxxxxx",
          "281:   |  |--SCAN TABLE sheep AS s",
          "282:   |  |--SEARCH TABLE flock_owner AS prev USING INDEX sqlite_autoindex_flock_owner_1 (flock_no=? AND owner_change_date<?)",
          "284:   |     `--SEARCH TABLE flock_owner AS later USING COVERING INDEX sqlite_autoindex_flock_owner_1 (flock_no=? AND owner_change_date>? AND owner_change_date<?)",
          "285:   |--SCAN TABLE sheep AS x USING INDEX sheep_reg_flock_index",
          "286:   `--SEARCH SUBQUERY xxxxxx AS y USING AUTOMATIC COVERING INDEX (sheep_no=?)",
          "",
          "[Removed Lines]",
          "283:   |  `--CORRELATED SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "283:   |  `--CORRELATED SCALAR SUBQUERY xxxxxx",
          "",
          "---------------"
        ],
        "test/bestindex3.test||test/bestindex3.test": [
          "File: test/bestindex3.test -> test/bestindex3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "90: } {",
          "91:   QUERY PLAN",
          "92:   `--MULTI-INDEX OR",
          "95: }",
          "97: do_eqp_test 1.4 {",
          "",
          "[Removed Lines]",
          "93:      |--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:a EQ ?",
          "94:      `--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:b EQ ?",
          "",
          "[Added Lines]",
          "93:      |--INDEX 1",
          "94:      |  `--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:a EQ ?",
          "95:      `--INDEX 2",
          "96:         `--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:b EQ ?",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99: } {",
          "100:   QUERY PLAN",
          "101:   `--MULTI-INDEX OR",
          "104: }",
          "106: do_execsql_test 1.5 {",
          "",
          "[Removed Lines]",
          "102:      |--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:a LIKE ?",
          "103:      `--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:b EQ ?",
          "",
          "[Added Lines]",
          "104:      |--INDEX 1",
          "105:      |  `--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:a LIKE ?",
          "106:      `--INDEX 2",
          "107:         `--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:b EQ ?",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "150:   } [string map {\"\\n  \" \\n} {",
          "151:     QUERY PLAN",
          "152:     `--MULTI-INDEX OR",
          "155:   }]",
          "156: }",
          "",
          "[Removed Lines]",
          "153:        |--SEARCH TABLE t2 USING INDEX t2x (x>? AND x<?)",
          "154:        `--SEARCH TABLE t2 USING INDEX t2y (y=?)",
          "",
          "[Added Lines]",
          "157:        |--INDEX 1",
          "158:        |  `--SEARCH TABLE t2 USING INDEX t2x (x>? AND x<?)",
          "159:        `--INDEX 2",
          "160:           `--SEARCH TABLE t2 USING INDEX t2y (y=?)",
          "",
          "---------------"
        ],
        "test/cost.test||test/cost.test": [
          "File: test/cost.test -> test/cost.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "58: } {",
          "59:   QUERY PLAN",
          "60:   |--MULTI-INDEX OR",
          "64:   `--USE TEMP B-TREE FOR ORDER BY",
          "65: }",
          "",
          "[Removed Lines]",
          "61:   |  |--SEARCH TABLE t5 USING INDEX t5b (b=?)",
          "62:   |  |--SEARCH TABLE t5 USING INDEX t5c (c=?)",
          "63:   |  `--SEARCH TABLE t5 USING INDEX t5d (d=?)",
          "",
          "[Added Lines]",
          "61:   |  |--INDEX 1",
          "62:   |  |  `--SEARCH TABLE t5 USING INDEX t5b (b=?)",
          "63:   |  |--INDEX 2",
          "64:   |  |  `--SEARCH TABLE t5 USING INDEX t5c (c=?)",
          "65:   |  `--INDEX 3",
          "66:   |     `--SEARCH TABLE t5 USING INDEX t5d (d=?)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "124: } {",
          "125:   QUERY PLAN",
          "126:   |--MULTI-INDEX OR",
          "129:   `--USE TEMP B-TREE FOR ORDER BY",
          "130: }",
          "",
          "[Removed Lines]",
          "127:   |  |--SEARCH TABLE t3 USING INDEX t3i1 (b>? AND b<?)",
          "128:   |  `--SEARCH TABLE t3 USING INDEX t3i2 (c=?)",
          "",
          "[Added Lines]",
          "130:   |  |--INDEX 1",
          "131:   |  |  `--SEARCH TABLE t3 USING INDEX t3i1 (b>? AND b<?)",
          "132:   |  `--INDEX 2",
          "133:   |     `--SEARCH TABLE t3 USING INDEX t3i2 (c=?)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "149: } {",
          "150:   QUERY PLAN",
          "151:   |--MULTI-INDEX OR",
          "154:   `--USE TEMP B-TREE FOR ORDER BY",
          "155: }",
          "",
          "[Removed Lines]",
          "152:   |  |--SEARCH TABLE t1 USING INDEX t1b (b>? AND b<?)",
          "153:   |  `--SEARCH TABLE t1 USING INDEX t1b (b=?)",
          "",
          "[Added Lines]",
          "157:   |  |--INDEX 1",
          "158:   |  |  `--SEARCH TABLE t1 USING INDEX t1b (b>? AND b<?)",
          "159:   |  `--INDEX 2",
          "160:   |     `--SEARCH TABLE t1 USING INDEX t1b (b=?)",
          "",
          "---------------"
        ],
        "test/eqp.test||test/eqp.test": [
          "File: test/eqp.test -> test/eqp.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: } {",
          "46:   QUERY PLAN",
          "47:   |--MULTI-INDEX OR",
          "50:   `--SCAN TABLE t2",
          "51: }",
          "52: do_eqp_test 1.3 {",
          "",
          "[Removed Lines]",
          "48:   |  |--SEARCH TABLE t1 USING INDEX i1 (a=?)",
          "49:   |  `--SEARCH TABLE t1 USING INDEX i2 (b=?)",
          "",
          "[Added Lines]",
          "48:   |  |--INDEX 1",
          "49:   |  |  `--SEARCH TABLE t1 USING INDEX i1 (a=?)",
          "50:   |  `--INDEX 2",
          "51:   |     `--SEARCH TABLE t1 USING INDEX i2 (b=?)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55:   QUERY PLAN",
          "56:   |--SCAN TABLE t2",
          "57:   `--MULTI-INDEX OR",
          "60: }",
          "61: do_eqp_test 1.3 {",
          "62:   SELECT a FROM t1 ORDER BY a",
          "",
          "[Removed Lines]",
          "58:      |--SEARCH TABLE t1 USING INDEX i1 (a=?)",
          "59:      `--SEARCH TABLE t1 USING INDEX i2 (b=?)",
          "",
          "[Added Lines]",
          "60:      |--INDEX 1",
          "61:      |  `--SEARCH TABLE t1 USING INDEX i1 (a=?)",
          "62:      `--INDEX 2",
          "63:         `--SEARCH TABLE t1 USING INDEX i2 (b=?)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "225: } {",
          "226:   QUERY PLAN",
          "227:   |--SCAN TABLE t1",
          "229:      `--SCAN TABLE t1 AS sub",
          "230: }",
          "231: do_eqp_test 3.1.2 {",
          "",
          "[Removed Lines]",
          "228:   `--SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "232:   `--SCALAR SUBQUERY xxxxxx",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "233: } {",
          "234:   QUERY PLAN",
          "235:   |--SCAN TABLE t1",
          "237:      `--SCAN TABLE t1 AS sub",
          "238: }",
          "239: do_eqp_test 3.1.3 {",
          "",
          "[Removed Lines]",
          "236:   `--SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "240:   `--SCALAR SUBQUERY xxxxxx",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "241: } {",
          "242:   QUERY PLAN",
          "243:   |--SCAN TABLE t1",
          "245:      |--SCAN TABLE t1 AS sub",
          "246:      `--USE TEMP B-TREE FOR ORDER BY",
          "247: }",
          "",
          "[Removed Lines]",
          "244:   `--SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "248:   `--SCALAR SUBQUERY xxxxxx",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "250: } {",
          "251:   QUERY PLAN",
          "252:   |--SCAN TABLE t1",
          "254:      `--SCAN TABLE t2 USING COVERING INDEX t2i1",
          "255: }",
          "",
          "[Removed Lines]",
          "253:   `--SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "257:   `--SCALAR SUBQUERY xxxxxx",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "302: } {",
          "303:   QUERY PLAN",
          "304:   |--SCAN TABLE t1",
          "306:      `--SCAN TABLE t2",
          "307: }",
          "",
          "[Removed Lines]",
          "305:   `--CORRELATED SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "309:   `--CORRELATED SCALAR SUBQUERY xxxxxx",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "813:   |--MATERIALIZE xxxxxx",
          "814:   |  |--SCAN TABLE forumpost AS x USING INDEX forumthread",
          "815:   |  |--USING ROWID SEARCH ON TABLE private FOR IN-OPERATOR",
          "817:   |  |  |--SEARCH TABLE forumpost USING COVERING INDEX forumthread (froot=?)",
          "818:   |  |  `--USING ROWID SEARCH ON TABLE private FOR IN-OPERATOR",
          "819:   |  `--USE TEMP B-TREE FOR ORDER BY",
          "",
          "[Removed Lines]",
          "816:   |  |--CORRELATED SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "820:   |  |--CORRELATED SCALAR SUBQUERY xxxxxx",
          "",
          "---------------"
        ],
        "test/join5.test||test/join5.test": [
          "File: test/join5.test -> test/join5.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "267:   QUERY PLAN",
          "268:   |--SCAN TABLE t1",
          "269:   `--MULTI-INDEX OR",
          "272: }",
          "274: do_execsql_test 7.3 {",
          "",
          "[Removed Lines]",
          "270:      |--SEARCH TABLE t2 USING INDEX t2xy (x=? AND y=?)",
          "271:      `--SEARCH TABLE t2 USING INDEX t2xy (x=? AND y=?)",
          "",
          "[Added Lines]",
          "270:      |--INDEX 1",
          "271:      |  `--SEARCH TABLE t2 USING INDEX t2xy (x=? AND y=?)",
          "272:      `--INDEX 2",
          "273:         `--SEARCH TABLE t2 USING INDEX t2xy (x=? AND y=?)",
          "",
          "---------------"
        ],
        "test/tkt-80ba201079.test||test/tkt-80ba201079.test": [
          "File: test/tkt-80ba201079.test -> test/tkt-80ba201079.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "110: } {300 object_change 2048}",
          "111: do_test tkt-80ba2-201 {",
          "112:   db eval {",
          "113:     CREATE INDEX timeline_entry_id_idx on timeline(entry_id);",
          "114:     SELECT entry_type,",
          "115:            entry_types.name,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "113: PRAGMA vdbe_debug=on;",
          "114: PRAGMA vdbe_addoptrace=on;",
          "",
          "---------------"
        ],
        "test/where7.test||test/where7.test": [
          "File: test/where7.test -> test/where7.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "23353: } {",
          "23354:   QUERY PLAN",
          "23355:   |--MULTI-INDEX OR",
          "23358:   |--SEARCH TABLE t302 USING INDEX t302_c8_c3 (c8=? AND c3>?)",
          "23359:   `--USE TEMP B-TREE FOR ORDER BY",
          "23360: }",
          "",
          "[Removed Lines]",
          "23356:   |  |--SEARCH TABLE t301 USING COVERING INDEX t301_c4 (c4=?)",
          "23357:   |  `--SEARCH TABLE t301 USING INTEGER PRIMARY KEY (rowid=?)",
          "",
          "[Added Lines]",
          "23356:   |  |--INDEX 1",
          "23357:   |  |  `--SEARCH TABLE t301 USING COVERING INDEX t301_c4 (c4=?)",
          "23358:   |  `--INDEX 2",
          "23359:   |     `--SEARCH TABLE t301 USING INTEGER PRIMARY KEY (rowid=?)",
          "",
          "---------------"
        ],
        "test/where9.test||test/where9.test": [
          "File: test/where9.test -> test/where9.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "364:     QUERY PLAN",
          "365:     |--SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid=?)",
          "366:     `--MULTI-INDEX OR",
          "369:   }]",
          "370:   do_eqp_test where9-3.2 {",
          "371:     SELECT coalesce(t2.a,9999)",
          "",
          "[Removed Lines]",
          "367:        |--SEARCH TABLE t2 USING INDEX t2d (d=?)",
          "368:        `--SEARCH TABLE t2 USING COVERING INDEX t2f (f=?)",
          "",
          "[Added Lines]",
          "367:        |--INDEX 1",
          "368:        |  `--SEARCH TABLE t2 USING INDEX t2d (d=?)",
          "369:        `--INDEX 3",
          "370:           `--SEARCH TABLE t2 USING COVERING INDEX t2f (f=?)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "375:     QUERY PLAN",
          "376:     |--SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid=?)",
          "377:     `--MULTI-INDEX OR",
          "380:   }]",
          "381: }",
          "",
          "[Removed Lines]",
          "378:        |--SEARCH TABLE t2 USING INDEX t2d (d=?)",
          "379:        `--SEARCH TABLE t2 USING COVERING INDEX t2f (f=?)",
          "",
          "[Added Lines]",
          "380:        |--INDEX 1",
          "381:        |  `--SEARCH TABLE t2 USING INDEX t2d (d=?)",
          "382:        `--INDEX 2",
          "383:           `--SEARCH TABLE t2 USING COVERING INDEX t2f (f=?)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "456: } {",
          "457:   QUERY PLAN",
          "458:   `--MULTI-INDEX OR",
          "461: }",
          "463: # In contrast, b=1000 is preferred over any OR-clause.",
          "",
          "[Removed Lines]",
          "459:      |--SEARCH TABLE t1 USING INDEX t1c (c=?)",
          "460:      `--SEARCH TABLE t1 USING INDEX t1d (d=?)",
          "",
          "[Added Lines]",
          "463:      |--INDEX 1",
          "464:      |  `--SEARCH TABLE t1 USING INDEX t1c (c=?)",
          "465:      `--INDEX 2",
          "466:         `--SEARCH TABLE t1 USING INDEX t1d (d=?)",
          "",
          "---------------"
        ],
        "test/whereI.test||test/whereI.test": [
          "File: test/whereI.test -> test/whereI.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: } {",
          "32:   QUERY PLAN",
          "33:   `--MULTI-INDEX OR",
          "36: }",
          "38: do_execsql_test 1.2 {",
          "",
          "[Removed Lines]",
          "34:      |--SEARCH TABLE t1 USING INDEX i1 (b=?)",
          "35:      `--SEARCH TABLE t1 USING INDEX i2 (c=?)",
          "",
          "[Added Lines]",
          "34:      |--INDEX 1",
          "35:      |  `--SEARCH TABLE t1 USING INDEX i1 (b=?)",
          "36:      `--INDEX 2",
          "37:         `--SEARCH TABLE t1 USING INDEX i2 (c=?)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61: } {",
          "62:   QUERY PLAN",
          "63:   `--MULTI-INDEX OR",
          "66: }",
          "68: do_execsql_test 2.2 {",
          "",
          "[Removed Lines]",
          "64:      |--SEARCH TABLE t2 USING INDEX i3 (b=?)",
          "65:      `--SEARCH TABLE t2 USING INDEX i4 (c=?)",
          "",
          "[Added Lines]",
          "66:      |--INDEX 1",
          "67:      |  `--SEARCH TABLE t2 USING INDEX i3 (b=?)",
          "68:      `--INDEX 2",
          "69:         `--SEARCH TABLE t2 USING INDEX i4 (c=?)",
          "",
          "---------------"
        ],
        "test/with3.test||test/with3.test": [
          "File: test/with3.test -> test/with3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:   |--MATERIALIZE xxxxxx",
          "121:   |  |--SETUP",
          "122:   |  |  |--SCAN CONSTANT ROW",
          "124:   |  |     `--SCAN TABLE w2",
          "125:   |  `--RECURSIVE STEP",
          "126:   |     |--SCAN TABLE w1",
          "",
          "[Removed Lines]",
          "123:   |  |  `--SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "123:   |  |  `--SCALAR SUBQUERY xxxxxx",
          "",
          "---------------"
        ]
      }
    }
  ]
}