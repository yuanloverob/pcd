{
  "cve_id": "CVE-2016-9583",
  "cve_desc": "An out-of-bounds heap read vulnerability was found in the jpc_pi_nextpcrl() function of jasper before 2.0.6 when processing crafted input.",
  "repo": "mdadams/jasper",
  "patch_hash": "aa0b0f79ade5eef8b0e7a214c03f5af54b36ba7d",
  "patch_info": {
    "commit_hash": "aa0b0f79ade5eef8b0e7a214c03f5af54b36ba7d",
    "repo": "mdadams/jasper",
    "commit_url": "https://github.com/mdadams/jasper/commit/aa0b0f79ade5eef8b0e7a214c03f5af54b36ba7d",
    "files": [
      "src/libjasper/include/jasper/jas_types.h",
      "src/libjasper/jpc/jpc_t2cod.c",
      "src/libjasper/jpc/jpc_t2dec.c"
    ],
    "message": "Fixed numerous integer overflow problems in the code for packet iterators in the JPC decoder.",
    "before_after_code_files": [
      "src/libjasper/include/jasper/jas_types.h||src/libjasper/include/jasper/jas_types.h",
      "src/libjasper/jpc/jpc_t2cod.c||src/libjasper/jpc/jpc_t2cod.c",
      "src/libjasper/jpc/jpc_t2dec.c||src/libjasper/jpc/jpc_t2dec.c"
    ]
  },
  "patch_diff": {
    "src/libjasper/include/jasper/jas_types.h||src/libjasper/include/jasper/jas_types.h": [
      "File: src/libjasper/include/jasper/jas_types.h -> src/libjasper/include/jasper/jas_types.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "116: #define JAS_CAST(t, e) \\",
      "117:  ((t) (e))",
      "119: #ifdef __cplusplus",
      "120: extern \"C\" {",
      "121: #endif",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "121: #define JAS_UINTFAST32_NUMBITS (8 * sizeof(uint_fast32_t))",
      "",
      "---------------"
    ],
    "src/libjasper/jpc/jpc_t2cod.c||src/libjasper/jpc/jpc_t2cod.c": [
      "File: src/libjasper/jpc/jpc_t2cod.c -> src/libjasper/jpc/jpc_t2cod.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "198:     JAS_CAST(int, pchg->lyrnoend); ++pi->lyrno) {",
      "199:    for (pi->compno = pchg->compnostart, pi->picomp =",
      "200:      &pi->picomps[pi->compno]; pi->compno < pi->numcomps &&",
      "202:     if (pi->rlvlno >= pi->picomp->numrlvls) {",
      "203:      continue;",
      "204:     }",
      "",
      "[Removed Lines]",
      "201:      pi->compno < JAS_CAST(int, pchg->compnoend); ++pi->compno, ++pi->picomp) {",
      "",
      "[Added Lines]",
      "201:      pi->compno < JAS_CAST(int, pchg->compnoend); ++pi->compno,",
      "202:      ++pi->picomp) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "247:     ++compno, ++picomp) {",
      "248:    for (rlvlno = 0, pirlvl = picomp->pirlvls; rlvlno <",
      "249:      picomp->numrlvls; ++rlvlno, ++pirlvl) {",
      "254:     pi->xstep = (!pi->xstep) ? xstep : JAS_MIN(pi->xstep, xstep);",
      "255:     pi->ystep = (!pi->ystep) ? ystep : JAS_MIN(pi->ystep, ystep);",
      "256:    }",
      "",
      "[Removed Lines]",
      "250:     xstep = picomp->hsamp * (1 << (pirlvl->prcwidthexpn +",
      "251:       picomp->numrlvls - rlvlno - 1));",
      "252:     ystep = picomp->vsamp * (1 << (pirlvl->prcheightexpn +",
      "253:       picomp->numrlvls - rlvlno - 1));",
      "",
      "[Added Lines]",
      "252:     if (pirlvl->prcwidthexpn + pi->picomp->numrlvls >",
      "253:       JAS_UINTFAST32_NUMBITS - 2 ||",
      "254:       pirlvl->prcheightexpn + pi->picomp->numrlvls >",
      "255:       JAS_UINTFAST32_NUMBITS - 2) {",
      "256:      return -1;",
      "257:     }",
      "258:     xstep = picomp->hsamp * (JAS_CAST(uint_fast32_t, 1) <<",
      "259:       (pirlvl->prcwidthexpn + picomp->numrlvls - rlvlno - 1));",
      "260:     ystep = picomp->vsamp * (JAS_CAST(uint_fast32_t, 1) <<",
      "261:       (pirlvl->prcheightexpn + picomp->numrlvls - rlvlno - 1));",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "280:      rpy = r + pi->pirlvl->prcheightexpn;",
      "281:      trx0 = JPC_CEILDIV(pi->xstart, pi->picomp->hsamp << r);",
      "282:      try0 = JPC_CEILDIV(pi->ystart, pi->picomp->vsamp << r);",
      "293:       pi->prcno = prcvind * pi->pirlvl->numhprcs + prchind;",
      "295:       assert(pi->prcno < pi->pirlvl->numprcs);",
      "296:       for (pi->lyrno = 0; pi->lyrno <",
      "298:        prclyrno = &pi->pirlvl->prclyrnos[pi->prcno];",
      "299:        if (pi->lyrno >= *prclyrno) {",
      "300:         ++(*prclyrno);",
      "",
      "[Removed Lines]",
      "283:      if (((pi->x == pi->xstart && ((trx0 << r) % (1 << rpx)))",
      "284:        || !(pi->x % (1 << rpx))) &&",
      "285:        ((pi->y == pi->ystart && ((try0 << r) % (1 << rpy)))",
      "286:        || !(pi->y % (1 << rpy)))) {",
      "287:       prchind = JPC_FLOORDIVPOW2(JPC_CEILDIV(pi->x, pi->picomp->hsamp",
      "288:         << r), pi->pirlvl->prcwidthexpn) - JPC_FLOORDIVPOW2(trx0,",
      "289:         pi->pirlvl->prcwidthexpn);",
      "290:       prcvind = JPC_FLOORDIVPOW2(JPC_CEILDIV(pi->y, pi->picomp->vsamp",
      "291:         << r), pi->pirlvl->prcheightexpn) - JPC_FLOORDIVPOW2(try0,",
      "292:         pi->pirlvl->prcheightexpn);",
      "297:         pi->numlyrs && pi->lyrno < JAS_CAST(int, pchg->lyrnoend); ++pi->lyrno) {",
      "",
      "[Added Lines]",
      "291:      if (((pi->x == pi->xstart &&",
      "292:        ((trx0 << r) % (JAS_CAST(uint_fast32_t, 1) << rpx)))",
      "293:        || !(pi->x % (JAS_CAST(uint_fast32_t, 1) << rpx))) &&",
      "294:        ((pi->y == pi->ystart &&",
      "295:        ((try0 << r) % (JAS_CAST(uint_fast32_t, 1) << rpy)))",
      "296:        || !(pi->y % (JAS_CAST(uint_fast32_t, 1) << rpy)))) {",
      "297:       prchind = JPC_FLOORDIVPOW2(JPC_CEILDIV(pi->x,",
      "298:         pi->picomp->hsamp << r), pi->pirlvl->prcwidthexpn) -",
      "299:         JPC_FLOORDIVPOW2(trx0, pi->pirlvl->prcwidthexpn);",
      "300:       prcvind = JPC_FLOORDIVPOW2(JPC_CEILDIV(pi->y,",
      "301:         pi->picomp->vsamp << r), pi->pirlvl->prcheightexpn) -",
      "302:         JPC_FLOORDIVPOW2(try0, pi->pirlvl->prcheightexpn);",
      "307:         pi->numlyrs && pi->lyrno < JAS_CAST(int,",
      "308:         pchg->lyrnoend); ++pi->lyrno) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "339:     ++compno, ++picomp) {",
      "340:    for (rlvlno = 0, pirlvl = picomp->pirlvls; rlvlno <",
      "341:      picomp->numrlvls; ++rlvlno, ++pirlvl) {",
      "352:    }",
      "353:   }",
      "354:   pi->prgvolfirst = 0;",
      "",
      "[Removed Lines]",
      "342:     xstep = picomp->hsamp * (1 <<",
      "343:       (pirlvl->prcwidthexpn + picomp->numrlvls -",
      "344:       rlvlno - 1));",
      "345:     ystep = picomp->vsamp * (1 <<",
      "346:       (pirlvl->prcheightexpn + picomp->numrlvls -",
      "347:       rlvlno - 1));",
      "348:     pi->xstep = (!pi->xstep) ? xstep :",
      "349:       JAS_MIN(pi->xstep, xstep);",
      "350:     pi->ystep = (!pi->ystep) ? ystep :",
      "351:       JAS_MIN(pi->ystep, ystep);",
      "",
      "[Added Lines]",
      "354:     if (pirlvl->prcwidthexpn + pi->picomp->numrlvls >",
      "355:       JAS_UINTFAST32_NUMBITS - 2 ||",
      "356:       pirlvl->prcheightexpn + pi->picomp->numrlvls >",
      "357:       JAS_UINTFAST32_NUMBITS - 2) {",
      "358:      return -1;",
      "359:     }",
      "360:     xstep = picomp->hsamp * (JAS_CAST(uint_fast32_t, 1) <<",
      "361:       (pirlvl->prcwidthexpn + picomp->numrlvls - rlvlno - 1));",
      "362:     ystep = picomp->vsamp * (JAS_CAST(uint_fast32_t, 1) <<",
      "363:       (pirlvl->prcheightexpn + picomp->numrlvls - rlvlno - 1));",
      "364:     pi->xstep = (!pi->xstep) ? xstep : JAS_MIN(pi->xstep, xstep);",
      "365:     pi->ystep = (!pi->ystep) ? ystep : JAS_MIN(pi->ystep, ystep);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "375:      try0 = JPC_CEILDIV(pi->ystart, pi->picomp->vsamp << r);",
      "376:      rpx = r + pi->pirlvl->prcwidthexpn;",
      "377:      rpy = r + pi->pirlvl->prcheightexpn;",
      "379:        !(pi->x % (pi->picomp->hsamp << rpx))) &&",
      "381:        !(pi->y % (pi->picomp->vsamp << rpy)))) {",
      "388:       pi->prcno = prcvind * pi->pirlvl->numhprcs + prchind;",
      "389:       assert(pi->prcno < pi->pirlvl->numprcs);",
      "390:       for (pi->lyrno = 0; pi->lyrno < pi->numlyrs &&",
      "392:        prclyrno = &pi->pirlvl->prclyrnos[pi->prcno];",
      "393:        if (pi->lyrno >= *prclyrno) {",
      "394:         ++(*prclyrno);",
      "",
      "[Removed Lines]",
      "378:      if (((pi->x == pi->xstart && ((trx0 << r) % (1 << rpx))) ||",
      "380:        ((pi->y == pi->ystart && ((try0 << r) % (1 << rpy))) ||",
      "382:       prchind = JPC_FLOORDIVPOW2(JPC_CEILDIV(pi->x, pi->picomp->hsamp",
      "383:         << r), pi->pirlvl->prcwidthexpn) - JPC_FLOORDIVPOW2(trx0,",
      "384:         pi->pirlvl->prcwidthexpn);",
      "385:       prcvind = JPC_FLOORDIVPOW2(JPC_CEILDIV(pi->y, pi->picomp->vsamp",
      "386:         << r), pi->pirlvl->prcheightexpn) - JPC_FLOORDIVPOW2(try0,",
      "387:         pi->pirlvl->prcheightexpn);",
      "391:         pi->lyrno < JAS_CAST(int, pchg->lyrnoend); ++pi->lyrno) {",
      "",
      "[Added Lines]",
      "392:      if (((pi->x == pi->xstart &&",
      "393:        ((trx0 << r) % (JAS_CAST(uint_fast32_t, 1) << rpx))) ||",
      "395:        ((pi->y == pi->ystart &&",
      "396:        ((try0 << r) % (JAS_CAST(uint_fast32_t, 1) << rpy))) ||",
      "398:       prchind = JPC_FLOORDIVPOW2(JPC_CEILDIV(pi->x,",
      "399:         pi->picomp->hsamp << r), pi->pirlvl->prcwidthexpn) -",
      "400:         JPC_FLOORDIVPOW2(trx0, pi->pirlvl->prcwidthexpn);",
      "401:       prcvind = JPC_FLOORDIVPOW2(JPC_CEILDIV(pi->y,",
      "402:         pi->picomp->vsamp << r), pi->pirlvl->prcheightexpn) -",
      "403:         JPC_FLOORDIVPOW2(try0, pi->pirlvl->prcheightexpn);",
      "407:         pi->lyrno < JAS_CAST(int, pchg->lyrnoend);",
      "408:         ++pi->lyrno) {",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "426:   pi->prgvolfirst = 0;",
      "427:  }",
      "432:   pirlvl = pi->picomp->pirlvls;",
      "433:   pi->xstep = pi->picomp->hsamp * (JAS_CAST(uint_fast32_t, 1) <<",
      "434:     (pirlvl->prcwidthexpn + pi->picomp->numrlvls - 1));",
      "435:   pi->ystep = pi->picomp->vsamp * (JAS_CAST(uint_fast32_t, 1) <<",
      "",
      "[Removed Lines]",
      "429:  for (pi->compno = pchg->compnostart, pi->picomp =",
      "430:    &pi->picomps[pi->compno]; pi->compno < JAS_CAST(int, pchg->compnoend) && pi->compno < pi->numcomps; ++pi->compno,",
      "431:    ++pi->picomp) {",
      "",
      "[Added Lines]",
      "446:  for (pi->compno = pchg->compnostart, pi->picomp = &pi->picomps[pi->compno];",
      "447:    pi->compno < JAS_CAST(int, pchg->compnoend) && pi->compno < pi->numcomps;",
      "448:    ++pi->compno, ++pi->picomp) {",
      "451:   if (pirlvl->prcwidthexpn + pi->picomp->numrlvls >",
      "452:     JAS_UINTFAST32_NUMBITS - 2 ||",
      "453:     pirlvl->prcheightexpn + pi->picomp->numrlvls >",
      "454:     JAS_UINTFAST32_NUMBITS - 2) {",
      "455:    return -1;",
      "456:   }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "459:      try0 = JPC_CEILDIV(pi->ystart, pi->picomp->vsamp << r);",
      "460:      rpx = r + pi->pirlvl->prcwidthexpn;",
      "461:      rpy = r + pi->pirlvl->prcheightexpn;",
      "463:        !(pi->x % (pi->picomp->hsamp << rpx))) &&",
      "465:        !(pi->y % (pi->picomp->vsamp << rpy)))) {",
      "479:        prclyrno = &pi->pirlvl->prclyrnos[pi->prcno];",
      "480:        if (pi->lyrno >= *prclyrno) {",
      "481:         ++(*prclyrno);",
      "",
      "[Removed Lines]",
      "462:      if (((pi->x == pi->xstart && ((trx0 << r) % (1 << rpx))) ||",
      "464:        ((pi->y == pi->ystart && ((try0 << r) % (1 << rpy))) ||",
      "466:       prchind = JPC_FLOORDIVPOW2(JPC_CEILDIV(pi->x, pi->picomp->hsamp",
      "467:         << r), pi->pirlvl->prcwidthexpn) - JPC_FLOORDIVPOW2(trx0,",
      "468:         pi->pirlvl->prcwidthexpn);",
      "469:       prcvind = JPC_FLOORDIVPOW2(JPC_CEILDIV(pi->y, pi->picomp->vsamp",
      "470:         << r), pi->pirlvl->prcheightexpn) - JPC_FLOORDIVPOW2(try0,",
      "471:         pi->pirlvl->prcheightexpn);",
      "472:       pi->prcno = prcvind *",
      "473:         pi->pirlvl->numhprcs +",
      "474:         prchind;",
      "475:       assert(pi->prcno <",
      "476:         pi->pirlvl->numprcs);",
      "477:       for (pi->lyrno = 0; pi->lyrno <",
      "478:         pi->numlyrs && pi->lyrno < JAS_CAST(int, pchg->lyrnoend); ++pi->lyrno) {",
      "",
      "[Added Lines]",
      "486:      if (((pi->x == pi->xstart &&",
      "487:        ((trx0 << r) % (JAS_CAST(uint_fast32_t, 1) << rpx))) ||",
      "489:        ((pi->y == pi->ystart &&",
      "490:        ((try0 << r) % (JAS_CAST(uint_fast32_t, 1) << rpy))) ||",
      "492:       prchind = JPC_FLOORDIVPOW2(JPC_CEILDIV(pi->x,",
      "493:         pi->picomp->hsamp << r), pi->pirlvl->prcwidthexpn) -",
      "494:         JPC_FLOORDIVPOW2(trx0, pi->pirlvl->prcwidthexpn);",
      "495:       prcvind = JPC_FLOORDIVPOW2(JPC_CEILDIV(pi->y,",
      "496:         pi->picomp->vsamp << r), pi->pirlvl->prcheightexpn) -",
      "497:         JPC_FLOORDIVPOW2(try0, pi->pirlvl->prcheightexpn);",
      "498:       pi->prcno = prcvind * pi->pirlvl->numhprcs + prchind;",
      "499:       assert(pi->prcno < pi->pirlvl->numprcs);",
      "500:       for (pi->lyrno = 0; pi->lyrno < pi->numlyrs &&",
      "501:         pi->lyrno < JAS_CAST(int, pchg->lyrnoend);",
      "502:         ++pi->lyrno) {",
      "",
      "---------------"
    ],
    "src/libjasper/jpc/jpc_t2dec.c||src/libjasper/jpc/jpc_t2dec.c": [
      "File: src/libjasper/jpc/jpc_t2dec.c -> src/libjasper/jpc/jpc_t2dec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "423:  tile = dec->curtile;",
      "424:  pi = tile->pi;",
      "425:  for (;;) {",
      "439:   }",
      "441:   if ((ret = jpc_pi_next(pi))) {",
      "442:    return ret;",
      "443:   }",
      "448:   if (jas_getdbglevel() >= 1) {",
      "449:    jas_eprintf(\"packet offset=%08ld prg=%d cmptno=%02d \"",
      "450:      \"rlvlno=%02d prcno=%03d lyrno=%02d\\n\", (long)",
      "451:      jas_stream_getrwcount(in), jpc_pi_prg(pi), jpc_pi_cmptno(pi),",
      "452:      jpc_pi_rlvlno(pi), jpc_pi_prcno(pi), jpc_pi_lyrno(pi));",
      "453:   }",
      "456:    return -1;",
      "457:   }",
      "459:  }",
      "461:  return 0;",
      "",
      "[Removed Lines]",
      "426: if (!tile->pkthdrstream || jas_stream_peekc(tile->pkthdrstream) == EOF) {",
      "427:   switch (jpc_dec_lookahead(in)) {",
      "428:   case JPC_MS_EOC:",
      "429:   case JPC_MS_SOT:",
      "430:    return 0;",
      "431:    break;",
      "432:   case JPC_MS_SOP:",
      "433:   case JPC_MS_EPH:",
      "434:   case 0:",
      "435:    break;",
      "436:   default:",
      "437:    return -1;",
      "438:    break;",
      "440: }",
      "444: if (dec->maxpkts >= 0 && dec->numpkts >= dec->maxpkts) {",
      "445:  jas_eprintf(\"warning: stopping decode prematurely as requested\\n\");",
      "446:  return 0;",
      "447: }",
      "454:   if (jpc_dec_decodepkt(dec, pkthdrstream, in, jpc_pi_cmptno(pi), jpc_pi_rlvlno(pi),",
      "455:     jpc_pi_prcno(pi), jpc_pi_lyrno(pi))) {",
      "458: ++dec->numpkts;",
      "",
      "[Added Lines]",
      "426:   if (!tile->pkthdrstream || jas_stream_peekc(tile->pkthdrstream) == EOF) {",
      "427:    switch (jpc_dec_lookahead(in)) {",
      "428:    case JPC_MS_EOC:",
      "429:    case JPC_MS_SOT:",
      "430:     return 0;",
      "431:     break;",
      "432:    case JPC_MS_SOP:",
      "433:    case JPC_MS_EPH:",
      "434:    case 0:",
      "435:     break;",
      "436:    default:",
      "437:     return -1;",
      "438:     break;",
      "439:    }",
      "444:   if (dec->maxpkts >= 0 && dec->numpkts >= dec->maxpkts) {",
      "445:    jas_eprintf(\"warning: stopping decode prematurely as requested\\n\");",
      "446:    return 0;",
      "447:   }",
      "454:   if (jpc_dec_decodepkt(dec, pkthdrstream, in, jpc_pi_cmptno(pi),",
      "455:     jpc_pi_rlvlno(pi), jpc_pi_prcno(pi), jpc_pi_lyrno(pi))) {",
      "458:   ++dec->numpkts;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f25486c3d4aa472fec79150f2c41ed4333395d3d",
      "candidate_info": {
        "commit_hash": "f25486c3d4aa472fec79150f2c41ed4333395d3d",
        "repo": "mdadams/jasper",
        "commit_url": "https://github.com/mdadams/jasper/commit/f25486c3d4aa472fec79150f2c41ed4333395d3d",
        "files": [
          "data/test/good/PoC2.jpc",
          "src/libjasper/jpc/jpc_t2cod.c"
        ],
        "message": "Fixed a bug in the packet iterator code. Added a new regression test case.",
        "before_after_code_files": [
          "src/libjasper/jpc/jpc_t2cod.c||src/libjasper/jpc/jpc_t2cod.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/libjasper/jpc/jpc_t2cod.c||src/libjasper/jpc/jpc_t2cod.c"
          ],
          "candidate": [
            "src/libjasper/jpc/jpc_t2cod.c||src/libjasper/jpc/jpc_t2cod.c"
          ]
        }
      },
      "candidate_diff": {
        "src/libjasper/jpc/jpc_t2cod.c||src/libjasper/jpc/jpc_t2cod.c": [
          "File: src/libjasper/jpc/jpc_t2cod.c -> src/libjasper/jpc/jpc_t2cod.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "249:    for (rlvlno = 0, pirlvl = picomp->pirlvls; rlvlno <",
          "250:      picomp->numrlvls; ++rlvlno, ++pirlvl) {",
          "253:       JAS_UINTFAST32_NUMBITS - 2 ||",
          "255:       JAS_UINTFAST32_NUMBITS - 2) {",
          "256:      return -1;",
          "257:     }",
          "",
          "[Removed Lines]",
          "252:     if (pirlvl->prcwidthexpn + pi->picomp->numrlvls >",
          "254:       pirlvl->prcheightexpn + pi->picomp->numrlvls >",
          "",
          "[Added Lines]",
          "252:     if (pirlvl->prcwidthexpn + picomp->numrlvls >",
          "254:       pirlvl->prcheightexpn + picomp->numrlvls >",
          "",
          "---------------"
        ]
      }
    }
  ]
}