{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2639566c6e625c7e5b0f2cb1ad2c58d0aeac2530",
      "candidate_info": {
        "commit_hash": "2639566c6e625c7e5b0f2cb1ad2c58d0aeac2530",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/2639566c6e625c7e5b0f2cb1ad2c58d0aeac2530",
        "files": [
          "common.gypi",
          "deps/openssl/openssl.gyp"
        ],
        "message": "build: configure openssl\n\n* compile with -DOPENSSL_NO_SOCK and -DOPENSSL_NO_DGRAM, we don't need it\n* compile with -DOPENSSL_NO_GOST and -DOPENSSL_NO_HW_PADLOCK, works around the\n  brain dead linker on solaris and maybe others\n* compile with -DTERMIOS, OS X doesn't have <termio.h>\n* compile with -D__EXTENSIONS__ on solaris, makes siginfo_t available\n* compile without -ansi on linux, it hides a number of POSIX declarations\n  (sigaction, NI_MAXHOST, etc.)",
        "before_after_code_files": [
          "common.gypi||common.gypi",
          "deps/openssl/openssl.gyp||deps/openssl/openssl.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "common.gypi||common.gypi": [
          "File: common.gypi -> common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "146:             'ldflags': [ '-m32' ],",
          "147:           }],",
          "148:           [ 'OS==\"linux\"', {",
          "150:             'ldflags': [ '-rdynamic' ],",
          "151:           }],",
          "152:           [ 'OS==\"solaris\"', {",
          "",
          "[Removed Lines]",
          "149:             'cflags': [ '-ansi' ],",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/openssl/openssl.gyp||deps/openssl/openssl.gyp": [
          "File: deps/openssl/openssl.gyp -> deps/openssl/openssl.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:         'L_ENDIAN',",
          "12:         'OPENSSL_THREADS',",
          "13:         'PURIFY',",
          "15:         '_REENTRANT',",
          "16:         # We do not use TLS over UDP on Chromium so far.",
          "17:         'OPENSSL_NO_DTLS1',",
          "18:       ],",
          "19:       'sources': [",
          "20:         'openssl/ssl/bio_ssl.c',",
          "",
          "[Removed Lines]",
          "14:         'TERMIO',",
          "",
          "[Added Lines]",
          "17:         'OPENSSL_NO_SOCK',",
          "18:         'OPENSSL_NO_DGRAM',",
          "19:         # Work around brain dead SunOS linker.",
          "20:         'OPENSSL_NO_GOST',",
          "21:         'OPENSSL_NO_HW_PADLOCK',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "618:         'openssl/engines/e_sureware.c',",
          "619:         'openssl/engines/e_ubsec.c',",
          "620:       ],",
          "621:       'conditions': [",
          "623:           'defines': [",
          "624:             # ENGINESDIR must be defined if OPENSSLDIR is.",
          "625:             'ENGINESDIR=\"/dev/null\"',",
          "626:             # Set to ubuntu default path for convenience. If necessary, override",
          "627:             # this at runtime with the SSL_CERT_DIR environment variable.",
          "628:             'OPENSSLDIR=\"/etc/ssl\"',",
          "629:           ],",
          "639:         }],",
          "650:         }, {",
          "656:         }],",
          "670:       ],",
          "671:       'include_dirs': [",
          "672:         '.',",
          "",
          "[Removed Lines]",
          "622:         ['os_posix==1 and OS!=\"android\"', {",
          "630:           'variables': {",
          "631:             'conditions': [",
          "632:               ['target_arch==\"ia32\"', {",
          "633:                 'openssl_config_path': 'config/piii',",
          "634:               }, {",
          "635:                 'openssl_config_path': 'config/k8',",
          "636:               }],",
          "637:             ],",
          "638:           },",
          "640:         ['OS==\"android\"', {",
          "641:           'variables': {",
          "642:             'openssl_config_path': 'config/android',",
          "643:           },",
          "644:           'sources/': [",
          "645:             ['exclude', 'cast/.*$'],",
          "646:             ['exclude', 'crypto/md2/.*$'],",
          "647:             ['exclude', 'crypto/store/.*$'],",
          "648:             ['exclude', 'crypto/whrlpool/.$'],",
          "649:           ],",
          "651:           'sources/': [",
          "652:             ['exclude', 'camellia/.*$'],",
          "653:             ['exclude', 'cms/.*$'],",
          "654:             ['exclude', 'mdc2/.*$'],",
          "655:           ],",
          "657:         ['clang==1', {",
          "658:           'cflags': [",
          "659:             # OpenSSL has a few |if ((foo == NULL))| checks.",
          "660:             '-Wno-parentheses-equality',",
          "661:             # OpenSSL uses several function-style macros and then ignores the",
          "662:             # returned value.",
          "663:             '-Wno-unused-value',",
          "664:           ],",
          "665:         }, { # Not clang. Disable all warnings.",
          "666:           'cflags': [",
          "667:             '-w',",
          "668:           ],",
          "669:         }]",
          "",
          "[Added Lines]",
          "625:       'sources/': [",
          "626:         ['exclude', 'camellia/.*$'],",
          "627:         ['exclude', 'cms/.*$'],",
          "628:         ['exclude', 'mdc2/.*$'],",
          "629:       ],",
          "631:         ['OS==\"win\"', {",
          "632:           'defines': [",
          "633:             'MK1MF_BUILD',",
          "634:             'WIN32_LEAN_AND_MEAN',",
          "635:           ]",
          "636:         }, {",
          "643:             'TERMIOS',",
          "646:         ['OS==\"solaris\"', {",
          "647:           'defines': ['__EXTENSIONS__'],",
          "648:         }],",
          "649:         ['target_arch==\"ia32\"', {",
          "650:           'variables': {'openssl_config_path': 'config/piii'},",
          "652:           'variables': {'openssl_config_path': 'config/k8'},",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e06b5d7af7619e9234bb7eb8a9d66b3c7d245ad9",
      "candidate_info": {
        "commit_hash": "e06b5d7af7619e9234bb7eb8a9d66b3c7d245ad9",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e06b5d7af7619e9234bb7eb8a9d66b3c7d245ad9",
        "files": [
          "lib/http.js"
        ],
        "message": "http: remove duplicate assignments\n\nCloses GH-3754",
        "before_after_code_files": [
          "lib/http.js||lihttp.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/http.js||lihttp.js": [
          "File: lib/http.js -> lihttp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1482:     parser.incoming = null;",
          "1483:     req.parser = parser;",
          "1486:     socket.parser = parser;",
          "1488:     socket._httpMessage = req;",
          "",
          "[Removed Lines]",
          "1485:     parser.socket = socket;",
          "1487:     parser.incoming = null;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e9f8e2842636650bdfa8101e6204003707661820",
      "candidate_info": {
        "commit_hash": "e9f8e2842636650bdfa8101e6204003707661820",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e9f8e2842636650bdfa8101e6204003707661820",
        "files": [
          "deps/uv/test/test-list.h"
        ],
        "message": "uv: upgrade to f5c2a4a",
        "before_after_code_files": [
          "deps/uv/test/test-list.h||deps/uv/test/test-list.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/test/test-list.h||deps/uv/test/test-list.h": [
          "File: deps/uv/test/test-list.h -> deps/uv/test/test-list.h"
        ]
      }
    },
    {
      "candidate_hash": "00224771e32e4d051e5ea33b7e854f0031359912",
      "candidate_info": {
        "commit_hash": "00224771e32e4d051e5ea33b7e854f0031359912",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/00224771e32e4d051e5ea33b7e854f0031359912",
        "files": [
          "src/node.js"
        ],
        "message": "Revert \"debug: Wait 50ms before running the main module\"\n\nThis reverts commit c781f17742170f2e127f9ee6652c56b406c30586.",
        "before_after_code_files": [
          "src/node.js||src/node.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.js||src/node.js": [
          "File: src/node.js -> src/node.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:       }",
          "91:       var Module = NativeModule.require('module');",
          "118:     } else {",
          "119:       var Module = NativeModule.require('module');",
          "",
          "[Removed Lines]",
          "93:       if (global.v8debug &&",
          "94:           process.execArgv.some(function(arg) {",
          "95:             return arg.match(/^--debug-brk(=[0-9]*)?$/);",
          "96:           })) {",
          "109:         setTimeout(Module.runMain, 50);",
          "111:       } else {",
          "115:         process.nextTick(Module.runMain);",
          "116:       }",
          "",
          "[Added Lines]",
          "95:       process.nextTick(Module.runMain);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c78678b081d8c37b8bbc616e4cb782cf32645619",
      "candidate_info": {
        "commit_hash": "c78678b081d8c37b8bbc616e4cb782cf32645619",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/c78678b081d8c37b8bbc616e4cb782cf32645619",
        "files": [
          "lib/http.js",
          "test/simple/test-http-client-parse-error.js"
        ],
        "message": "http: bubble up parser errors to ClientRequest\n\nMake parser errors bubble up to the ClientRequest instead of the underlying\nnet.Socket object.\n\nFixes #3776.",
        "before_after_code_files": [
          "lib/http.js||lihttp.js",
          "test/simple/test-http-client-parse-error.js||test/simple/test-http-client-parse-error.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/http.js||lihttp.js": [
          "File: lib/http.js -> lihttp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1367:   if (ret instanceof Error) {",
          "1368:     debug('parse error');",
          "1369:     freeParser(parser, req);",
          "1371:   } else if (parser.incoming && parser.incoming.upgrade) {",
          "1373:     var bytesParsed = ret;",
          "",
          "[Removed Lines]",
          "1370:     socket.destroy(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-http-client-parse-error.js||test/simple/test-http-client-parse-error.js": [
          "File: test/simple/test-http-client-parse-error.js -> test/simple/test-http-client-parse-error.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: var http = require('http');",
          "26: var net = require('net');",
          "32:   console.log('connection');",
          "54: });",
          "57: process.on('exit', function() {",
          "59: });",
          "",
          "[Removed Lines]",
          "29: var srv = net.createServer(function(c) {",
          "30:   c.write('bad http - should trigger parse error\\r\\n');",
          "34:   c.on('end', function() { c.end(); });",
          "35: });",
          "37: var parseError = false;",
          "39: srv.listen(common.PORT, '127.0.0.1', function() {",
          "40:   var req = http.request({",
          "41:     host: '127.0.0.1',",
          "42:     port: common.PORT,",
          "43:     method: 'GET',",
          "44:     path: '/'});",
          "45:   req.end();",
          "47:   req.on('error', function(e) {",
          "48:     console.log('got error from client');",
          "49:     srv.close();",
          "50:     assert.ok(e.message.indexOf('Parse Error') >= 0);",
          "51:     assert.equal(e.code, 'HPE_INVALID_CONSTANT');",
          "52:     parseError = true;",
          "53:   });",
          "58:   assert.ok(parseError);",
          "",
          "[Added Lines]",
          "28: var connects = 0;",
          "29: var parseErrors = 0;",
          "32: net.createServer(function(c) {",
          "34:   if (++connects === 1) {",
          "35:     c.end('HTTP/1.1 302 Object Moved\\r\\nContent-Length: 0\\r\\n\\r\\nhi world');",
          "36:   } else {",
          "37:     c.end('bad http - should trigger parse error\\r\\n');",
          "38:     this.close();",
          "39:   }",
          "40: }).listen(common.PORT, '127.0.0.1', function() {",
          "41:   for (var i = 0; i < 2; i++) {",
          "42:     http.request({",
          "43:       host: '127.0.0.1',",
          "44:       port: common.PORT,",
          "45:       method: 'GET',",
          "46:       path: '/'",
          "47:     }).on('error', function(e) {",
          "48:       console.log('got error from client');",
          "49:       assert.ok(e.message.indexOf('Parse Error') >= 0);",
          "50:       assert.equal(e.code, 'HPE_INVALID_CONSTANT');",
          "51:       parseErrors++;",
          "52:     }).end();",
          "53:   }",
          "57:   assert.equal(connects, 2);",
          "58:   assert.equal(parseErrors, 2);",
          "",
          "---------------"
        ]
      }
    }
  ]
}