{
  "cve_id": "CVE-2020-16587",
  "cve_desc": "A heap-based buffer overflow vulnerability exists in Academy Software Foundation OpenEXR 2.3.0 in chunkOffsetReconstruction in ImfMultiPartInputFile.cpp that can cause a denial of service via a crafted EXR file.",
  "repo": "AcademySoftwareFoundation/openexr",
  "patch_hash": "8b5370c688a7362673c3a5256d93695617a4cd9a",
  "patch_info": {
    "commit_hash": "8b5370c688a7362673c3a5256d93695617a4cd9a",
    "repo": "AcademySoftwareFoundation/openexr",
    "commit_url": "https://github.com/AcademySoftwareFoundation/openexr/commit/8b5370c688a7362673c3a5256d93695617a4cd9a",
    "files": [
      "OpenEXR/IlmImf/ImfMultiPartInputFile.cpp"
    ],
    "message": "Fix #491, issue with part number range check reconstructing chunk offset table\n\nThe chunk offset was incorrectly testing for a part number that was the\nsame size (i.e. an invalid index)\n\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>",
    "before_after_code_files": [
      "OpenEXR/IlmImf/ImfMultiPartInputFile.cpp||OpenEXR/IlmImf/ImfMultiPartInputFile.cpp"
    ]
  },
  "patch_diff": {
    "OpenEXR/IlmImf/ImfMultiPartInputFile.cpp||OpenEXR/IlmImf/ImfMultiPartInputFile.cpp": [
      "File: OpenEXR/IlmImf/ImfMultiPartInputFile.cpp -> OpenEXR/IlmImf/ImfMultiPartInputFile.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "575:             {",
      "576:                 throw IEX_NAMESPACE::IoExc(\"part number out of range\");",
      "577:             }",
      "",
      "[Removed Lines]",
      "574:             if(partNumber<0 || partNumber> static_cast<int>(parts.size()))",
      "",
      "[Added Lines]",
      "574:             if(partNumber<0 || partNumber>= static_cast<int>(parts.size()))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "700e4996ce619743d5bebe07b4158ccc4547e9ad",
      "candidate_info": {
        "commit_hash": "700e4996ce619743d5bebe07b4158ccc4547e9ad",
        "repo": "AcademySoftwareFoundation/openexr",
        "commit_url": "https://github.com/AcademySoftwareFoundation/openexr/commit/700e4996ce619743d5bebe07b4158ccc4547e9ad",
        "files": [
          "OpenEXR/IlmImf/ImfMultiPartInputFile.cpp"
        ],
        "message": "use static_cast in error test",
        "before_after_code_files": [
          "OpenEXR/IlmImf/ImfMultiPartInputFile.cpp||OpenEXR/IlmImf/ImfMultiPartInputFile.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "OpenEXR/IlmImf/ImfMultiPartInputFile.cpp||OpenEXR/IlmImf/ImfMultiPartInputFile.cpp"
          ],
          "candidate": [
            "OpenEXR/IlmImf/ImfMultiPartInputFile.cpp||OpenEXR/IlmImf/ImfMultiPartInputFile.cpp"
          ]
        }
      },
      "candidate_diff": {
        "OpenEXR/IlmImf/ImfMultiPartInputFile.cpp||OpenEXR/IlmImf/ImfMultiPartInputFile.cpp": [
          "File: OpenEXR/IlmImf/ImfMultiPartInputFile.cpp -> OpenEXR/IlmImf/ImfMultiPartInputFile.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "575:             {",
          "576:                 throw IEX_NAMESPACE::IoExc(\"part number out of range\");",
          "577:             }",
          "",
          "[Removed Lines]",
          "574:             if(partNumber<0 || partNumber>int(parts.size()))",
          "",
          "[Added Lines]",
          "574:             if(partNumber<0 || partNumber> static_cast<int>(parts.size()))",
          "",
          "---------------"
        ]
      }
    }
  ]
}