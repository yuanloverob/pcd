{
  "cve_id": "CVE-2014-2270",
  "cve_desc": "softmagic.c in file before 5.17 and libmagic allows context-dependent attackers to cause a denial of service (out-of-bounds memory access and crash) via crafted offsets in the softmagic of a PE executable.",
  "repo": "file/file",
  "patch_hash": "447558595a3650db2886cd2f416ad0beba965801",
  "patch_info": {
    "commit_hash": "447558595a3650db2886cd2f416ad0beba965801",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/447558595a3650db2886cd2f416ad0beba965801",
    "files": [
      "src/softmagic.c"
    ],
    "message": "PR/313: Aaron Reffett: Check properly for exceeding the offset.",
    "before_after_code_files": [
      "src/softmagic.c||src/softmagic.c"
    ]
  },
  "patch_diff": {
    "src/softmagic.c||src/softmagic.c": [
      "File: src/softmagic.c -> src/softmagic.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "32: #include \"file.h\"",
      "34: #ifndef lint",
      "38: #include \"magic.h\"",
      "",
      "[Removed Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.170 2014/01/06 02:25:32 christos Exp $\")",
      "",
      "[Added Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.171 2014/01/08 22:02:06 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "71: private void cvt_32(union VALUETYPE *, const struct magic *);",
      "72: private void cvt_64(union VALUETYPE *, const struct magic *);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "74: #define OFFSET_OOB(n, o, i) ((n) < (o) || (i) >= ((n) - (o)))",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1223:   }",
      "1224:   switch (in_type = cvt_flip(m->in_type, flip)) {",
      "1225:   case FILE_BYTE:",
      "1227:     return 0;",
      "1228:    if (off) {",
      "1229:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1226:    if (nbytes < offset || nbytes < (offset + 1))",
      "",
      "[Added Lines]",
      "1227:    if (OFFSET_OOB(nbytes, offset, 1))",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1258:     offset = ~offset;",
      "1259:    break;",
      "1260:   case FILE_BESHORT:",
      "1262:     return 0;",
      "1263:    if (off) {",
      "1264:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1261:    if (nbytes < offset || nbytes < (offset + 2))",
      "",
      "[Added Lines]",
      "1262:    if (OFFSET_OOB(nbytes, offset, 2))",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1310:     offset = ~offset;",
      "1311:    break;",
      "1312:   case FILE_LESHORT:",
      "1314:     return 0;",
      "1315:    if (off) {",
      "1316:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1313:    if (nbytes < offset || nbytes < (offset + 2))",
      "",
      "[Added Lines]",
      "1314:    if (OFFSET_OOB(nbytes, offset, 2))",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1362:     offset = ~offset;",
      "1363:    break;",
      "1364:   case FILE_SHORT:",
      "1366:     return 0;",
      "1367:    if (off) {",
      "1368:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1365:    if (nbytes < offset || nbytes < (offset + 2))",
      "",
      "[Added Lines]",
      "1366:    if (OFFSET_OOB(nbytes, offset, 2))",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1399:    break;",
      "1400:   case FILE_BELONG:",
      "1401:   case FILE_BEID3:",
      "1403:     return 0;",
      "1404:    if (off) {",
      "1405:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1402:    if (nbytes < offset || nbytes < (offset + 4))",
      "",
      "[Added Lines]",
      "1403:    if (OFFSET_OOB(nbytes, offset, 4))",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1470:    break;",
      "1471:   case FILE_LELONG:",
      "1472:   case FILE_LEID3:",
      "1474:     return 0;",
      "1475:    if (off) {",
      "1476:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1473:    if (nbytes < offset || nbytes < (offset + 4))",
      "",
      "[Added Lines]",
      "1474:    if (OFFSET_OOB(nbytes, offset, 4))",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1540:     offset = ~offset;",
      "1541:    break;",
      "1542:   case FILE_MELONG:",
      "1544:     return 0;",
      "1545:    if (off) {",
      "1546:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1543:    if (nbytes < offset || nbytes < (offset + 4))",
      "",
      "[Added Lines]",
      "1544:    if (OFFSET_OOB(nbytes, offset, 4))",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1610:     offset = ~offset;",
      "1611:    break;",
      "1612:   case FILE_LONG:",
      "1614:     return 0;",
      "1615:    if (off) {",
      "1616:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1613:    if (nbytes < offset || nbytes < (offset + 4))",
      "",
      "[Added Lines]",
      "1614:    if (OFFSET_OOB(nbytes, offset, 4))",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1688:  switch (m->type) {",
      "1689:  case FILE_BYTE:",
      "1691:    return 0;",
      "1692:   break;",
      "1694:  case FILE_SHORT:",
      "1695:  case FILE_BESHORT:",
      "1696:  case FILE_LESHORT:",
      "1698:    return 0;",
      "1699:   break;",
      "",
      "[Removed Lines]",
      "1697:   if (nbytes < (offset + 2))",
      "",
      "[Added Lines]",
      "1691:   if (OFFSET_OOB(nbytes, offset, 1))",
      "1698:   if (OFFSET_OOB(nbytes, offset, 2))",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "1713:  case FILE_FLOAT:",
      "1714:  case FILE_BEFLOAT:",
      "1715:  case FILE_LEFLOAT:",
      "1717:    return 0;",
      "1718:   break;",
      "1720:  case FILE_DOUBLE:",
      "1721:  case FILE_BEDOUBLE:",
      "1722:  case FILE_LEDOUBLE:",
      "1724:    return 0;",
      "1725:   break;",
      "1727:  case FILE_STRING:",
      "1728:  case FILE_PSTRING:",
      "1729:  case FILE_SEARCH:",
      "1731:    return 0;",
      "1732:   break;",
      "1734:  case FILE_REGEX:",
      "1736:    return 0;",
      "1737:   break;",
      "1739:  case FILE_INDIRECT:",
      "1741:    return 0;",
      "1742:   sbuf = ms->o.buf;",
      "1743:   soffset = ms->offset;",
      "",
      "[Removed Lines]",
      "1716:   if (nbytes < (offset + 4))",
      "1723:   if (nbytes < (offset + 8))",
      "1730:   if (nbytes < (offset + m->vallen))",
      "1735:   if (nbytes < offset)",
      "1740:   if (nbytes < offset)",
      "",
      "[Added Lines]",
      "1717:   if (OFFSET_OOB(nbytes, offset, 4))",
      "1724:   if (OFFSET_OOB(nbytes, offset, 8))",
      "1731:   if (OFFSET_OOB(nbytes, offset, m->vallen))",
      "1736:   if (OFFSET_OOB(nbytes, offset, 0))",
      "1741:   if (OFFSET_OOB(nbytes, offset, 0))",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "1761:   return rv;",
      "1763:  case FILE_USE:",
      "1765:    return 0;",
      "1766:   sbuf = m->value.s;",
      "1767:   if (*sbuf == '^') {",
      "",
      "[Removed Lines]",
      "1764:   if (nbytes < offset)",
      "",
      "[Added Lines]",
      "1765:   if (OFFSET_OOB(nbytes, offset, 0))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bf26a91d57516326016772e1b6a1455638678c09",
      "candidate_info": {
        "commit_hash": "bf26a91d57516326016772e1b6a1455638678c09",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/bf26a91d57516326016772e1b6a1455638678c09",
        "files": [
          "src/softmagic.c"
        ],
        "message": "simplify 0 offset case",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.177 2014/02/21 14:32:48 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.178 2014/03/04 17:42:19 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "538:  case FILE_LEDATE:",
          "539:  case FILE_MEDATE:",
          "540:   if (file_printf(ms, F(m->desc, \"%s\"),",
          "543:    return -1;",
          "544:   t = ms->offset + sizeof(uint32_t);",
          "545:   break;",
          "",
          "[Removed Lines]",
          "541:       file_fmttime(p->l, FILE_T_LOCAL,",
          "542:       tbuf)) == -1)",
          "",
          "[Added Lines]",
          "541:       file_fmttime(p->l, FILE_T_LOCAL, tbuf)) == -1)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1740:   break;",
          "1742:  case FILE_REGEX:",
          "1744:    return 0;",
          "1745:   break;",
          "1747:  case FILE_INDIRECT:",
          "1748:   if (offset == 0)",
          "1749:    return 0;",
          "1751:    return 0;",
          "1752:   sbuf = ms->o.buf;",
          "1753:   soffset = ms->offset;",
          "",
          "[Removed Lines]",
          "1743:   if (OFFSET_OOB(nbytes, offset, 0))",
          "1750:   if (OFFSET_OOB(nbytes, offset, 0))",
          "",
          "[Added Lines]",
          "1742:   if (nbytes < offset)",
          "1749:   if (nbytes < offset)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1775:   return rv;",
          "1777:  case FILE_USE:",
          "1779:    return 0;",
          "1780:   sbuf = m->value.s;",
          "1781:   if (*sbuf == '^') {",
          "",
          "[Removed Lines]",
          "1778:   if (OFFSET_OOB(nbytes, offset, 0))",
          "",
          "[Added Lines]",
          "1777:   if (nbytes < offset)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cf289f23851ba3eb017576be1ba65c0a0f0e16a9",
      "candidate_info": {
        "commit_hash": "cf289f23851ba3eb017576be1ba65c0a0f0e16a9",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/cf289f23851ba3eb017576be1ba65c0a0f0e16a9",
        "files": [
          "src/softmagic.c"
        ],
        "message": "- avoid 0 offset causing an infinite loop. - XXX: should limit indirect nesting.",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.158 2013/01/06 20:22:16 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.159 2013/02/17 22:28:27 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1618:   if (m->flag & INDIROFFADD) {",
          "1619:    offset += ms->c.li[cont_level-1].off;",
          "1620:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "1621:     fprintf(stderr, \"indirect +offs=%u\\n\", offset);",
          "1622:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1620:    if (offset == 0) {",
          "1621:     if ((ms->flags & MAGIC_DEBUG) != 0)",
          "1622:      fprintf(stderr,",
          "1623:          \"indirect *zero* offset\\n\");",
          "1624:     return 0;",
          "1625:    }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1878ee9dfefa4adddd15822ade56228b4469228f",
      "candidate_info": {
        "commit_hash": "1878ee9dfefa4adddd15822ade56228b4469228f",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/1878ee9dfefa4adddd15822ade56228b4469228f",
        "files": [
          "src/softmagic.c"
        ],
        "message": "PR/337: Fix incorrect handling of offsets (wrong sign) Test: $ perl -e 'print \"ABC\", \"\\xff\\xff\", \"\\x00\"x70000, \"DEF\"' > abc.data $ cat abc.magic 0\tstring\t\tABC\tABC test file format >(3.s)\tsearch/0x3000\tDEF\t\\b, DEF sub type $ file -m abc.magic abc.data abc.data: ABC test file format, DEF sub type",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.182 2014/03/28 19:07:08 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.183 2014/04/01 15:44:26 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1179: {",
          "1180:  uint32_t soffset, offset = ms->offset;",
          "1181:  uint32_t count = m->str_range;",
          "1182:  int rv, oneed_separator, in_type;",
          "1183:  char *sbuf, *rbuf;",
          "1184:  union VALUETYPE *p = &ms->ms_value;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1182:  uint32_t lhs;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1281:   case FILE_BESHORT:",
          "1282:    if (OFFSET_OOB(nbytes, offset, 2))",
          "1283:     return 0;",
          "1284:    if (off) {",
          "1285:     switch (m->in_op & FILE_OPS_MASK) {",
          "1286:     case FILE_OPAND:",
          "1290:      break;",
          "1291:     case FILE_OPOR:",
          "1295:      break;",
          "1296:     case FILE_OPXOR:",
          "1300:      break;",
          "1301:     case FILE_OPADD:",
          "1305:      break;",
          "1306:     case FILE_OPMINUS:",
          "1310:      break;",
          "1311:     case FILE_OPMULTIPLY:",
          "1315:      break;",
          "1316:     case FILE_OPDIVIDE:",
          "1320:      break;",
          "1321:     case FILE_OPMODULO:",
          "1325:      break;",
          "1326:     }",
          "1327:    } else",
          "1330:    if (m->in_op & FILE_OPINVERSE)",
          "1331:     offset = ~offset;",
          "1332:    break;",
          "1333:   case FILE_LESHORT:",
          "1334:    if (OFFSET_OOB(nbytes, offset, 2))",
          "1335:     return 0;",
          "1336:    if (off) {",
          "1337:     switch (m->in_op & FILE_OPS_MASK) {",
          "1338:     case FILE_OPAND:",
          "1342:      break;",
          "1343:     case FILE_OPOR:",
          "1347:      break;",
          "1348:     case FILE_OPXOR:",
          "1352:      break;",
          "1353:     case FILE_OPADD:",
          "1357:      break;",
          "1358:     case FILE_OPMINUS:",
          "1362:      break;",
          "1363:     case FILE_OPMULTIPLY:",
          "1367:      break;",
          "1368:     case FILE_OPDIVIDE:",
          "1372:      break;",
          "1373:     case FILE_OPMODULO:",
          "1377:      break;",
          "1378:     }",
          "1379:    } else",
          "1382:    if (m->in_op & FILE_OPINVERSE)",
          "1383:     offset = ~offset;",
          "1384:    break;",
          "",
          "[Removed Lines]",
          "1287:      offset = (short)((p->hs[0]<<8)|",
          "1288:         (p->hs[1])) &",
          "1289:        off;",
          "1292:      offset = (short)((p->hs[0]<<8)|",
          "1293:         (p->hs[1])) |",
          "1294:        off;",
          "1297:      offset = (short)((p->hs[0]<<8)|",
          "1298:         (p->hs[1])) ^",
          "1299:        off;",
          "1302:      offset = (short)((p->hs[0]<<8)|",
          "1303:         (p->hs[1])) +",
          "1304:        off;",
          "1307:      offset = (short)((p->hs[0]<<8)|",
          "1308:         (p->hs[1])) -",
          "1309:        off;",
          "1312:      offset = (short)((p->hs[0]<<8)|",
          "1313:         (p->hs[1])) *",
          "1314:        off;",
          "1317:      offset = (short)((p->hs[0]<<8)|",
          "1318:         (p->hs[1])) /",
          "1319:        off;",
          "1322:      offset = (short)((p->hs[0]<<8)|",
          "1323:         (p->hs[1])) %",
          "1324:        off;",
          "1328:     offset = (short)((p->hs[0]<<8)|",
          "1329:        (p->hs[1]));",
          "1339:      offset = (short)((p->hs[1]<<8)|",
          "1340:         (p->hs[0])) &",
          "1341:        off;",
          "1344:      offset = (short)((p->hs[1]<<8)|",
          "1345:         (p->hs[0])) |",
          "1346:        off;",
          "1349:      offset = (short)((p->hs[1]<<8)|",
          "1350:         (p->hs[0])) ^",
          "1351:        off;",
          "1354:      offset = (short)((p->hs[1]<<8)|",
          "1355:         (p->hs[0])) +",
          "1356:        off;",
          "1359:      offset = (short)((p->hs[1]<<8)|",
          "1360:         (p->hs[0])) -",
          "1361:        off;",
          "1364:      offset = (short)((p->hs[1]<<8)|",
          "1365:         (p->hs[0])) *",
          "1366:        off;",
          "1369:      offset = (short)((p->hs[1]<<8)|",
          "1370:         (p->hs[0])) /",
          "1371:        off;",
          "1374:      offset = (short)((p->hs[1]<<8)|",
          "1375:         (p->hs[0])) %",
          "1376:        off;",
          "1380:     offset = (short)((p->hs[1]<<8)|",
          "1381:        (p->hs[0]));",
          "",
          "[Added Lines]",
          "1285:    lhs = (p->hs[0] << 8) | p->hs[1];",
          "1289:      offset = lhs & off;",
          "1292:      offset = lhs | off;",
          "1295:      offset = lhs ^ off;",
          "1298:      offset = lhs + off;",
          "1301:      offset = lhs - off;",
          "1304:      offset = lhs * off;",
          "1307:      offset = lhs / off;",
          "1310:      offset = lhs % off;",
          "1314:     offset = lhs;",
          "1321:    lhs = (p->hs[1] << 8) | p->hs[0];",
          "1325:      offset = lhs & off;",
          "1328:      offset = lhs | off;",
          "1331:      offset = lhs ^ off;",
          "1334:      offset = lhs + off;",
          "1337:      offset = lhs - off;",
          "1340:      offset = lhs * off;",
          "1343:      offset = lhs / off;",
          "1346:      offset = lhs % off;",
          "1350:     offset = lhs;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1422:   case FILE_BEID3:",
          "1423:    if (OFFSET_OOB(nbytes, offset, 4))",
          "1424:     return 0;",
          "1425:    if (off) {",
          "1426:     switch (m->in_op & FILE_OPS_MASK) {",
          "1427:     case FILE_OPAND:",
          "1433:      break;",
          "1434:     case FILE_OPOR:",
          "1440:      break;",
          "1441:     case FILE_OPXOR:",
          "1447:      break;",
          "1448:     case FILE_OPADD:",
          "1454:      break;",
          "1455:     case FILE_OPMINUS:",
          "1461:      break;",
          "1462:     case FILE_OPMULTIPLY:",
          "1468:      break;",
          "1469:     case FILE_OPDIVIDE:",
          "1475:      break;",
          "1476:     case FILE_OPMODULO:",
          "1482:      break;",
          "1483:     }",
          "1484:    } else",
          "1489:    if (m->in_op & FILE_OPINVERSE)",
          "1490:     offset = ~offset;",
          "1491:    break;",
          "",
          "[Removed Lines]",
          "1428:      offset = (int32_t)((p->hl[0]<<24)|",
          "1429:         (p->hl[1]<<16)|",
          "1430:         (p->hl[2]<<8)|",
          "1431:         (p->hl[3])) &",
          "1432:        off;",
          "1435:      offset = (int32_t)((p->hl[0]<<24)|",
          "1436:         (p->hl[1]<<16)|",
          "1437:         (p->hl[2]<<8)|",
          "1438:         (p->hl[3])) |",
          "1439:        off;",
          "1442:      offset = (int32_t)((p->hl[0]<<24)|",
          "1443:         (p->hl[1]<<16)|",
          "1444:         (p->hl[2]<<8)|",
          "1445:         (p->hl[3])) ^",
          "1446:        off;",
          "1449:      offset = (int32_t)((p->hl[0]<<24)|",
          "1450:         (p->hl[1]<<16)|",
          "1451:         (p->hl[2]<<8)|",
          "1452:         (p->hl[3])) +",
          "1453:        off;",
          "1456:      offset = (int32_t)((p->hl[0]<<24)|",
          "1457:         (p->hl[1]<<16)|",
          "1458:         (p->hl[2]<<8)|",
          "1459:         (p->hl[3])) -",
          "1460:        off;",
          "1463:      offset = (int32_t)((p->hl[0]<<24)|",
          "1464:         (p->hl[1]<<16)|",
          "1465:         (p->hl[2]<<8)|",
          "1466:         (p->hl[3])) *",
          "1467:        off;",
          "1470:      offset = (int32_t)((p->hl[0]<<24)|",
          "1471:         (p->hl[1]<<16)|",
          "1472:         (p->hl[2]<<8)|",
          "1473:         (p->hl[3])) /",
          "1474:        off;",
          "1477:      offset = (int32_t)((p->hl[0]<<24)|",
          "1478:         (p->hl[1]<<16)|",
          "1479:         (p->hl[2]<<8)|",
          "1480:         (p->hl[3])) %",
          "1481:        off;",
          "1485:     offset = (int32_t)((p->hl[0]<<24)|",
          "1486:        (p->hl[1]<<16)|",
          "1487:        (p->hl[2]<<8)|",
          "1488:        (p->hl[3]));",
          "",
          "[Added Lines]",
          "1394:    lhs = (p->hl[0] << 24) | (p->hl[1] << 16) |",
          "1395:        (p->hl[2] << 8) | p->hl[3];",
          "1399:      offset = lhs & off;",
          "1402:      offset = lhs | off;",
          "1405:      offset = lhs ^ off;",
          "1408:      offset = lhs + off;",
          "1411:      offset = lhs - off;",
          "1414:      offset = lhs * off;",
          "1417:      offset = lhs / off;",
          "1420:      offset = lhs % off;",
          "1424:     offset = lhs;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1493:   case FILE_LEID3:",
          "1494:    if (OFFSET_OOB(nbytes, offset, 4))",
          "1495:     return 0;",
          "1496:    if (off) {",
          "1497:     switch (m->in_op & FILE_OPS_MASK) {",
          "1498:     case FILE_OPAND:",
          "1504:      break;",
          "1505:     case FILE_OPOR:",
          "1511:      break;",
          "1512:     case FILE_OPXOR:",
          "1518:      break;",
          "1519:     case FILE_OPADD:",
          "1525:      break;",
          "1526:     case FILE_OPMINUS:",
          "1532:      break;",
          "1533:     case FILE_OPMULTIPLY:",
          "1539:      break;",
          "1540:     case FILE_OPDIVIDE:",
          "1546:      break;",
          "1547:     case FILE_OPMODULO:",
          "1553:      break;",
          "1554:     }",
          "1555:    } else",
          "1560:    if (m->in_op & FILE_OPINVERSE)",
          "1561:     offset = ~offset;",
          "1562:    break;",
          "1563:   case FILE_MELONG:",
          "1564:    if (OFFSET_OOB(nbytes, offset, 4))",
          "1565:     return 0;",
          "1566:    if (off) {",
          "1567:     switch (m->in_op & FILE_OPS_MASK) {",
          "1568:     case FILE_OPAND:",
          "1574:      break;",
          "1575:     case FILE_OPOR:",
          "1581:      break;",
          "1582:     case FILE_OPXOR:",
          "1588:      break;",
          "1589:     case FILE_OPADD:",
          "1595:      break;",
          "1596:     case FILE_OPMINUS:",
          "1602:      break;",
          "1603:     case FILE_OPMULTIPLY:",
          "1609:      break;",
          "1610:     case FILE_OPDIVIDE:",
          "1616:      break;",
          "1617:     case FILE_OPMODULO:",
          "1623:      break;",
          "1624:     }",
          "1625:    } else",
          "1630:    if (m->in_op & FILE_OPINVERSE)",
          "1631:     offset = ~offset;",
          "1632:    break;",
          "",
          "[Removed Lines]",
          "1499:      offset = (int32_t)((p->hl[3]<<24)|",
          "1500:         (p->hl[2]<<16)|",
          "1501:         (p->hl[1]<<8)|",
          "1502:         (p->hl[0])) &",
          "1503:        off;",
          "1506:      offset = (int32_t)((p->hl[3]<<24)|",
          "1507:         (p->hl[2]<<16)|",
          "1508:         (p->hl[1]<<8)|",
          "1509:         (p->hl[0])) |",
          "1510:        off;",
          "1513:      offset = (int32_t)((p->hl[3]<<24)|",
          "1514:         (p->hl[2]<<16)|",
          "1515:         (p->hl[1]<<8)|",
          "1516:         (p->hl[0])) ^",
          "1517:        off;",
          "1520:      offset = (int32_t)((p->hl[3]<<24)|",
          "1521:         (p->hl[2]<<16)|",
          "1522:         (p->hl[1]<<8)|",
          "1523:         (p->hl[0])) +",
          "1524:        off;",
          "1527:      offset = (int32_t)((p->hl[3]<<24)|",
          "1528:         (p->hl[2]<<16)|",
          "1529:         (p->hl[1]<<8)|",
          "1530:         (p->hl[0])) -",
          "1531:        off;",
          "1534:      offset = (int32_t)((p->hl[3]<<24)|",
          "1535:         (p->hl[2]<<16)|",
          "1536:         (p->hl[1]<<8)|",
          "1537:         (p->hl[0])) *",
          "1538:        off;",
          "1541:      offset = (int32_t)((p->hl[3]<<24)|",
          "1542:         (p->hl[2]<<16)|",
          "1543:         (p->hl[1]<<8)|",
          "1544:         (p->hl[0])) /",
          "1545:        off;",
          "1548:      offset = (int32_t)((p->hl[3]<<24)|",
          "1549:         (p->hl[2]<<16)|",
          "1550:         (p->hl[1]<<8)|",
          "1551:         (p->hl[0])) %",
          "1552:        off;",
          "1556:     offset = (int32_t)((p->hl[3]<<24)|",
          "1557:        (p->hl[2]<<16)|",
          "1558:        (p->hl[1]<<8)|",
          "1559:        (p->hl[0]));",
          "1569:      offset = (int32_t)((p->hl[1]<<24)|",
          "1570:         (p->hl[0]<<16)|",
          "1571:         (p->hl[3]<<8)|",
          "1572:         (p->hl[2])) &",
          "1573:        off;",
          "1576:      offset = (int32_t)((p->hl[1]<<24)|",
          "1577:         (p->hl[0]<<16)|",
          "1578:         (p->hl[3]<<8)|",
          "1579:         (p->hl[2])) |",
          "1580:        off;",
          "1583:      offset = (int32_t)((p->hl[1]<<24)|",
          "1584:         (p->hl[0]<<16)|",
          "1585:         (p->hl[3]<<8)|",
          "1586:         (p->hl[2])) ^",
          "1587:        off;",
          "1590:      offset = (int32_t)((p->hl[1]<<24)|",
          "1591:         (p->hl[0]<<16)|",
          "1592:         (p->hl[3]<<8)|",
          "1593:         (p->hl[2])) +",
          "1594:        off;",
          "1597:      offset = (int32_t)((p->hl[1]<<24)|",
          "1598:         (p->hl[0]<<16)|",
          "1599:         (p->hl[3]<<8)|",
          "1600:         (p->hl[2])) -",
          "1601:        off;",
          "1604:      offset = (int32_t)((p->hl[1]<<24)|",
          "1605:         (p->hl[0]<<16)|",
          "1606:         (p->hl[3]<<8)|",
          "1607:         (p->hl[2])) *",
          "1608:        off;",
          "1611:      offset = (int32_t)((p->hl[1]<<24)|",
          "1612:         (p->hl[0]<<16)|",
          "1613:         (p->hl[3]<<8)|",
          "1614:         (p->hl[2])) /",
          "1615:        off;",
          "1618:      offset = (int32_t)((p->hl[1]<<24)|",
          "1619:         (p->hl[0]<<16)|",
          "1620:         (p->hl[3]<<8)|",
          "1621:         (p->hl[2])) %",
          "1622:        off;",
          "1626:     offset = (int32_t)((p->hl[1]<<24)|",
          "1627:        (p->hl[0]<<16)|",
          "1628:        (p->hl[3]<<8)|",
          "1629:        (p->hl[2]));",
          "",
          "[Added Lines]",
          "1432:    lhs = (p->hl[3] << 24) | (p->hl[2] << 16) |",
          "1433:        (p->hl[1] << 8) | p->hl[0];",
          "1437:      offset = lhs & off;",
          "1440:      offset = lhs | off;",
          "1443:      offset = lhs ^ off;",
          "1446:      offset = lhs + off;",
          "1449:      offset = lhs - off;",
          "1452:      offset = lhs * off;",
          "1455:      offset = lhs / off;",
          "1458:      offset = lhs % off;",
          "1462:     offset = lhs;",
          "1469:    lhs = (p->hl[1] << 24) | (p->hl[0] << 16) |",
          "1470:        (p->hl[3] << 8) | p->hl[2];",
          "1474:      offset = lhs & off;",
          "1477:      offset = lhs | off;",
          "1480:      offset = lhs ^ off;",
          "1483:      offset = lhs + off;",
          "1486:      offset = lhs - off;",
          "1489:      offset = lhs * off;",
          "1492:      offset = lhs / off;",
          "1495:      offset = lhs % off;",
          "1499:     offset = lhs;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c0c0032b9e9eb57b91fefef905a3b018bab492d9",
      "candidate_info": {
        "commit_hash": "c0c0032b9e9eb57b91fefef905a3b018bab492d9",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/c0c0032b9e9eb57b91fefef905a3b018bab492d9",
        "files": [
          "src/softmagic.c"
        ],
        "message": "Fix memory leak (Anatol Belski)",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.175 2014/02/18 11:09:31 kim Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.176 2014/02/18 17:59:21 kim Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1762:   ms->offset = soffset;",
          "1763:   if (rv == 1) {",
          "1764:    if ((ms->flags & (MAGIC_MIME|MAGIC_APPLE)) == 0 &&",
          "1766:     return -1;",
          "1768:     return -1;",
          "1770:   }",
          "1771:   return rv;",
          "1773:  case FILE_USE:",
          "",
          "[Removed Lines]",
          "1765:        file_printf(ms, F(m->desc, \"%u\"), offset) == -1)",
          "1767:    if (file_printf(ms, \"%s\", rbuf) == -1)",
          "1769:    free(rbuf);",
          "",
          "[Added Lines]",
          "1765:        file_printf(ms, F(m->desc, \"%u\"), offset) == -1) {",
          "1766:     free(rbuf);",
          "1768:    }",
          "1769:    if (file_printf(ms, \"%s\", rbuf) == -1) {",
          "1770:     free(rbuf);",
          "1772:    }",
          "1774:   free(rbuf);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "defbf8856b8f519f5979f65623ec18266741de50",
      "candidate_info": {
        "commit_hash": "defbf8856b8f519f5979f65623ec18266741de50",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/defbf8856b8f519f5979f65623ec18266741de50",
        "files": [
          "src/softmagic.c"
        ],
        "message": "search and regex don't copy stuff to value.",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.206 2015/01/01 17:07:34 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.207 2015/01/02 21:29:39 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "589:   t = ms->offset + sizeof(uint64_t);",
          "590:   break;",
          "595:   vf = p->f;",
          "596:   switch (check_fmt(ms, m)) {",
          "597:   case -1:",
          "",
          "[Removed Lines]",
          "592:    case FILE_FLOAT:",
          "593:    case FILE_BEFLOAT:",
          "594:    case FILE_LEFLOAT:",
          "",
          "[Added Lines]",
          "592:  case FILE_FLOAT:",
          "593:  case FILE_BEFLOAT:",
          "594:  case FILE_LEFLOAT:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "609:   t = ms->offset + sizeof(float);",
          "610:     break;",
          "615:   vd = p->d;",
          "616:   switch (check_fmt(ms, m)) {",
          "617:   case -1:",
          "",
          "[Removed Lines]",
          "612:    case FILE_DOUBLE:",
          "613:    case FILE_BEDOUBLE:",
          "614:    case FILE_LEDOUBLE:",
          "",
          "[Added Lines]",
          "612:  case FILE_DOUBLE:",
          "613:  case FILE_BEDOUBLE:",
          "614:  case FILE_LEDOUBLE:",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "629:   t = ms->offset + sizeof(double);",
          "630:     break;",
          "632:  case FILE_REGEX: {",
          "633:   char *cp;",
          "634:   int rval;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "632:  case FILE_SEARCH:",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "652:   break;",
          "653:  }",
          "665:  case FILE_DEFAULT:",
          "666:  case FILE_CLEAR:",
          "667:     if (file_printf(ms, \"%s\", m->desc) == -1)",
          "",
          "[Removed Lines]",
          "655:  case FILE_SEARCH:",
          "656:     if (file_printf(ms, F(ms, m, \"%s\"),",
          "657:       file_printable(sbuf, sizeof(sbuf), m->value.s)) == -1)",
          "658:    return -1;",
          "659:   if ((m->str_flags & REGEX_OFFSET_START))",
          "660:    t = ms->search.offset;",
          "661:   else",
          "662:    t = ms->search.offset + m->vallen;",
          "663:   break;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1965:        m->str_flags);",
          "1967:     ms->search.offset += idx;",
          "1968:     break;",
          "1969:    }",
          "1970:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1959:     ms->search.rm_len = m->str_range - idx;",
          "",
          "---------------"
        ]
      }
    }
  ]
}