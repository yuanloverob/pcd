{
  "cve_id": "CVE-2020-15210",
  "cve_desc": "In tensorflow-lite before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, if a TFLite saved model uses the same tensor as both input and output of an operator, then, depending on the operator, we can observe a segmentation fault or just memory corruption. We have patched the issue in d58c96946b and will release patch releases for all versions between 1.15 and 2.3. We recommend users to upgrade to TensorFlow 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "d58c96946b2880991d63d1dacacb32f0a4dfa453",
  "patch_info": {
    "commit_hash": "d58c96946b2880991d63d1dacacb32f0a4dfa453",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/d58c96946b2880991d63d1dacacb32f0a4dfa453",
    "files": [
      "tensorflow/lite/BUILD",
      "tensorflow/lite/core/subgraph.cc",
      "tensorflow/lite/core/subgraph.h",
      "tensorflow/lite/model_test.cc",
      "tensorflow/lite/testdata/add_shared_tensors.bin",
      "tensorflow/lite/testdata/sparse_tensor.bin"
    ],
    "message": "[tflite] Ensure inputs and outputs don't overlap.\n\nIf a model uses the same tensor for both an input and an output then this can result in data loss and memory corruption. This should not happen.\n\nPiperOrigin-RevId: 332522916\nChange-Id: If0905b142415a9dfceaf2d181872f2a8fb88f48a",
    "before_after_code_files": [
      "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc",
      "tensorflow/lite/core/subgraph.h||tensorflow/lite/core/subgraph.h",
      "tensorflow/lite/model_test.cc||tensorflow/lite/model_test.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc": [
      "File: tensorflow/lite/core/subgraph.cc -> tensorflow/lite/core/subgraph.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "581:   return kTfLiteOk;",
      "582: }",
      "584: namespace {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "594: TfLiteStatus Subgraph::CheckInputAndOutputForOverlap(const int* input_indices,",
      "595:                                                      int num_inputs,",
      "596:                                                      const int* output_indices,",
      "597:                                                      int num_outputs) {",
      "598:   for (int i = 0; i < num_inputs; i++) {",
      "599:     for (int j = 0; j < num_outputs; j++) {",
      "600:       if (input_indices[i] == output_indices[j]) {",
      "601:         ReportError(\"Tensor %d is both input %d and output %d\\n\",",
      "602:                     input_indices[i], i, j);",
      "603:         consistent_ = false;",
      "604:         return kTfLiteError;",
      "605:       }",
      "606:     }",
      "607:   }",
      "608:   return kTfLiteOk;",
      "609: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "707:       &context_,",
      "708:       CheckTensorIndices(\"node outputs\", outputs.data(), outputs.size()));",
      "710:   int new_node_index = nodes_and_registration_.size();",
      "711:   if (node_index) *node_index = new_node_index;",
      "712:   nodes_and_registration_.resize(nodes_and_registration_.size() + 1);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "741:   if (builtin_data != nullptr) {",
      "742:     TF_LITE_ENSURE_OK(&context_, CheckInputAndOutputForOverlap(",
      "743:                                      inputs.data(), inputs.size(),",
      "744:                                      outputs.data(), outputs.size()));",
      "745:   }",
      "",
      "---------------"
    ],
    "tensorflow/lite/core/subgraph.h||tensorflow/lite/core/subgraph.h": [
      "File: tensorflow/lite/core/subgraph.h -> tensorflow/lite/core/subgraph.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "451:   TfLiteStatus CheckTensorIndices(const char* label, const int* indices,",
      "452:                                   int length);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "458:   TfLiteStatus CheckInputAndOutputForOverlap(const int* input_indices,",
      "459:                                              int num_inputs,",
      "460:                                              const int* output_indices,",
      "461:                                              int num_outputs);",
      "",
      "---------------"
    ],
    "tensorflow/lite/model_test.cc||tensorflow/lite/model_test.cc": [
      "File: tensorflow/lite/model_test.cc -> tensorflow/lite/model_test.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "438: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "441: TEST(BasicFlatBufferModel, TestHandleMalformedModel) {",
      "442:   const auto model_paths = {",
      "444:       \"tensorflow/lite/testdata/add_shared_tensors.bin\",",
      "445:   };",
      "447:   for (const auto& model_path : model_paths) {",
      "448:     std::unique_ptr<tflite::FlatBufferModel> model =",
      "449:         FlatBufferModel::BuildFromFile(model_path);",
      "450:     ASSERT_NE(model, nullptr);",
      "452:     tflite::ops::builtin::BuiltinOpResolver resolver;",
      "453:     InterpreterBuilder builder(*model, resolver);",
      "454:     std::unique_ptr<Interpreter> interpreter;",
      "455:     ASSERT_EQ(builder(&interpreter), kTfLiteOk);",
      "456:     ASSERT_NE(interpreter, nullptr);",
      "457:     ASSERT_NE(interpreter->AllocateTensors(), kTfLiteOk);",
      "458:   }",
      "459: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0b5662bc2be13a8c8f044d925d87fb6e56247cd8",
      "candidate_info": {
        "commit_hash": "0b5662bc2be13a8c8f044d925d87fb6e56247cd8",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/0b5662bc2be13a8c8f044d925d87fb6e56247cd8",
        "files": [
          "tensorflow/lite/BUILD",
          "tensorflow/lite/core/subgraph.cc",
          "tensorflow/lite/model_test.cc",
          "tensorflow/lite/testdata/segment_sum_invalid_buffer.bin"
        ],
        "message": "[tflite] Ensure input tensors don't have `nullptr` buffers.\n\nA crafted TFLite model can force a node to have as input a tensor backed by a `nullptr` buffer. That is, by carefully changing the buffer index in the flatbuffer serialization, we can force the TFLite interpreter to consider a read-only tensor to be a read-write one and assume that there is an operator that has this tensor as output, writing to it and allocating memory before the tensor is used as input. If this does not happen, we get memory corruption.\n\nPiperOrigin-RevId: 332524692\nChange-Id: I57ef175152a29020af9ab041dc959e5631dce40f",
        "before_after_code_files": [
          "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc",
          "tensorflow/lite/model_test.cc||tensorflow/lite/model_test.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc",
            "tensorflow/lite/model_test.cc||tensorflow/lite/model_test.cc"
          ],
          "candidate": [
            "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc",
            "tensorflow/lite/model_test.cc||tensorflow/lite/model_test.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc": [
          "File: tensorflow/lite/core/subgraph.cc -> tensorflow/lite/core/subgraph.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: #include <cstdint>",
          "21: #include \"tensorflow/lite/arena_planner.h\"",
          "22: #include \"tensorflow/lite/c/common.h\"",
          "23: #include \"tensorflow/lite/context_util.h\"",
          "24: #include \"tensorflow/lite/core/api/tensor_utils.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #include \"tensorflow/lite/builtin_ops.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1030:           tensor->data_is_stale) {",
          "1031:         TF_LITE_ENSURE_STATUS(EnsureTensorDataIsReadable(tensor_index));",
          "1032:       }",
          "1033:     }",
          "1035:     if (check_cancelled_func_ != nullptr &&",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1034:       if (tensor->data.raw == nullptr && tensor->bytes > 0) {",
          "1035:         if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1) {",
          "1039:           continue;",
          "1040:         } else {",
          "1043:           ReportError(\"Input tensor %d lacks data\", tensor_index);",
          "1044:           return kTfLiteError;",
          "1045:         }",
          "1046:       }",
          "",
          "---------------"
        ],
        "tensorflow/lite/model_test.cc||tensorflow/lite/model_test.cc": [
          "File: tensorflow/lite/model_test.cc -> tensorflow/lite/model_test.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "438: }",
          "459: }",
          "",
          "[Removed Lines]",
          "441: TEST(BasicFlatBufferModel, TestHandleMalformedModel) {",
          "442:   const auto model_paths = {",
          "444:       \"tensorflow/lite/testdata/add_shared_tensors.bin\",",
          "445:   };",
          "447:   for (const auto& model_path : model_paths) {",
          "448:     std::unique_ptr<tflite::FlatBufferModel> model =",
          "449:         FlatBufferModel::BuildFromFile(model_path);",
          "450:     ASSERT_NE(model, nullptr);",
          "452:     tflite::ops::builtin::BuiltinOpResolver resolver;",
          "453:     InterpreterBuilder builder(*model, resolver);",
          "454:     std::unique_ptr<Interpreter> interpreter;",
          "455:     ASSERT_EQ(builder(&interpreter), kTfLiteOk);",
          "456:     ASSERT_NE(interpreter, nullptr);",
          "457:     ASSERT_NE(interpreter->AllocateTensors(), kTfLiteOk);",
          "458:   }",
          "",
          "[Added Lines]",
          "447: TEST(BasicFlatBufferModel, TestHandleMalformedModelReuseTensor) {",
          "448:   const auto model_path =",
          "449:       \"tensorflow/lite/testdata/add_shared_tensors.bin\";",
          "451:   std::unique_ptr<tflite::FlatBufferModel> model =",
          "452:       FlatBufferModel::BuildFromFile(model_path);",
          "453:   ASSERT_NE(model, nullptr);",
          "455:   tflite::ops::builtin::BuiltinOpResolver resolver;",
          "456:   InterpreterBuilder builder(*model, resolver);",
          "457:   std::unique_ptr<Interpreter> interpreter;",
          "458:   ASSERT_EQ(builder(&interpreter), kTfLiteOk);",
          "459:   ASSERT_NE(interpreter, nullptr);",
          "460:   ASSERT_NE(interpreter->AllocateTensors(), kTfLiteOk);",
          "461: }",
          "468: TEST(BasicFlatBufferModel, TestHandleMalformedModelInvalidBuffer) {",
          "469:   const auto model_path =",
          "470:       \"tensorflow/lite/testdata/segment_sum_invalid_buffer.bin\";",
          "472:   std::unique_ptr<tflite::FlatBufferModel> model =",
          "473:       FlatBufferModel::BuildFromFile(model_path);",
          "474:   ASSERT_NE(model, nullptr);",
          "476:   tflite::ops::builtin::BuiltinOpResolver resolver;",
          "477:   InterpreterBuilder builder(*model, resolver);",
          "478:   std::unique_ptr<Interpreter> interpreter;",
          "479:   ASSERT_EQ(builder(&interpreter), kTfLiteOk);",
          "480:   ASSERT_NE(interpreter, nullptr);",
          "481:   ASSERT_EQ(interpreter->AllocateTensors(), kTfLiteOk);",
          "482:   ASSERT_NE(interpreter->Invoke(), kTfLiteOk);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1c8709b437fec10875b0cf271889afec9bbf582e",
      "candidate_info": {
        "commit_hash": "1c8709b437fec10875b0cf271889afec9bbf582e",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/1c8709b437fec10875b0cf271889afec9bbf582e",
        "files": [
          "tensorflow/lite/core/subgraph.cc",
          "tensorflow/lite/core/subgraph.h"
        ],
        "message": "[tflite] Ensure inputs and outputs don't overlap.\n\nIf a model uses the same tensor for both an input and an output then this can result in data loss and memory corruption. This should not happen.\n\nPiperOrigin-RevId: 332522916\nChange-Id: If0905b142415a9dfceaf2d181872f2a8fb88f48a",
        "before_after_code_files": [
          "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc",
          "tensorflow/lite/core/subgraph.h||tensorflow/lite/core/subgraph.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc",
            "tensorflow/lite/core/subgraph.h||tensorflow/lite/core/subgraph.h"
          ],
          "candidate": [
            "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc",
            "tensorflow/lite/core/subgraph.h||tensorflow/lite/core/subgraph.h"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc": [
          "File: tensorflow/lite/core/subgraph.cc -> tensorflow/lite/core/subgraph.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "465:   return kTfLiteOk;",
          "466: }",
          "468: TfLiteStatus Subgraph::BytesRequired(TfLiteType type, const int* dims,",
          "469:                                      size_t dims_size, size_t* bytes) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "478: TfLiteStatus Subgraph::CheckInputAndOutputForOverlap(const int* input_indices,",
          "479:                                                      int num_inputs,",
          "480:                                                      const int* output_indices,",
          "481:                                                      int num_outputs) {",
          "482:   for (int i = 0; i < num_inputs; i++) {",
          "483:     for (int j = 0; j < num_outputs; j++) {",
          "484:       if (input_indices[i] == output_indices[j]) {",
          "485:         ReportError(\"Tensor %d is both input %d and output %d\\n\",",
          "486:                     input_indices[i], i, j);",
          "487:         consistent_ = false;",
          "488:         return kTfLiteError;",
          "489:       }",
          "490:     }",
          "491:   }",
          "492:   return kTfLiteOk;",
          "493: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "552:       &context_,",
          "553:       CheckTensorIndices(\"node outputs\", outputs.data(), outputs.size()));",
          "555:   int new_node_index = nodes_and_registration_.size();",
          "556:   if (node_index) *node_index = new_node_index;",
          "557:   nodes_and_registration_.resize(nodes_and_registration_.size() + 1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "586:   if (builtin_data != nullptr) {",
          "587:     TF_LITE_ENSURE_OK(&context_, CheckInputAndOutputForOverlap(",
          "588:                                      inputs.data(), inputs.size(),",
          "589:                                      outputs.data(), outputs.size()));",
          "590:   }",
          "",
          "---------------"
        ],
        "tensorflow/lite/core/subgraph.h||tensorflow/lite/core/subgraph.h": [
          "File: tensorflow/lite/core/subgraph.h -> tensorflow/lite/core/subgraph.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "399:   TfLiteStatus CheckTensorIndices(const char* label, const int* indices,",
          "400:                                   int length);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "406:   TfLiteStatus CheckInputAndOutputForOverlap(const int* input_indices,",
          "407:                                              int num_inputs,",
          "408:                                              const int* output_indices,",
          "409:                                              int num_outputs);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "094329d0dcb8290bed2b1ee420934971f422c86d",
      "candidate_info": {
        "commit_hash": "094329d0dcb8290bed2b1ee420934971f422c86d",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/094329d0dcb8290bed2b1ee420934971f422c86d",
        "files": [
          "tensorflow/lite/core/subgraph.cc",
          "tensorflow/lite/core/subgraph.h"
        ],
        "message": "[tflite] Ensure inputs and outputs don't overlap.\n\nIf a model uses the same tensor for both an input and an output then this can result in data loss and memory corruption. This should not happen.\n\nPiperOrigin-RevId: 332522916\nChange-Id: If0905b142415a9dfceaf2d181872f2a8fb88f48a",
        "before_after_code_files": [
          "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc",
          "tensorflow/lite/core/subgraph.h||tensorflow/lite/core/subgraph.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc",
            "tensorflow/lite/core/subgraph.h||tensorflow/lite/core/subgraph.h"
          ],
          "candidate": [
            "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc",
            "tensorflow/lite/core/subgraph.h||tensorflow/lite/core/subgraph.h"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc": [
          "File: tensorflow/lite/core/subgraph.cc -> tensorflow/lite/core/subgraph.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "567:   return kTfLiteOk;",
          "568: }",
          "570: namespace {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "580: TfLiteStatus Subgraph::CheckInputAndOutputForOverlap(const int* input_indices,",
          "581:                                                      int num_inputs,",
          "582:                                                      const int* output_indices,",
          "583:                                                      int num_outputs) {",
          "584:   for (int i = 0; i < num_inputs; i++) {",
          "585:     for (int j = 0; j < num_outputs; j++) {",
          "586:       if (input_indices[i] == output_indices[j]) {",
          "587:         ReportError(\"Tensor %d is both input %d and output %d\\n\",",
          "588:                     input_indices[i], i, j);",
          "589:         consistent_ = false;",
          "590:         return kTfLiteError;",
          "591:       }",
          "592:     }",
          "593:   }",
          "594:   return kTfLiteOk;",
          "595: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "688:       &context_,",
          "689:       CheckTensorIndices(\"node outputs\", outputs.data(), outputs.size()));",
          "691:   int new_node_index = nodes_and_registration_.size();",
          "692:   if (node_index) *node_index = new_node_index;",
          "693:   nodes_and_registration_.resize(nodes_and_registration_.size() + 1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "722:   if (builtin_data != nullptr) {",
          "723:     TF_LITE_ENSURE_OK(&context_, CheckInputAndOutputForOverlap(",
          "724:                                      inputs.data(), inputs.size(),",
          "725:                                      outputs.data(), outputs.size()));",
          "726:   }",
          "",
          "---------------"
        ],
        "tensorflow/lite/core/subgraph.h||tensorflow/lite/core/subgraph.h": [
          "File: tensorflow/lite/core/subgraph.h -> tensorflow/lite/core/subgraph.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "433:   TfLiteStatus CheckTensorIndices(const char* label, const int* indices,",
          "434:                                   int length);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "440:   TfLiteStatus CheckInputAndOutputForOverlap(const int* input_indices,",
          "441:                                              int num_inputs,",
          "442:                                              const int* output_indices,",
          "443:                                              int num_outputs);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8c2092e9f9ef78b3f9060f8bf5ce7a49d1ccdc8f",
      "candidate_info": {
        "commit_hash": "8c2092e9f9ef78b3f9060f8bf5ce7a49d1ccdc8f",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/8c2092e9f9ef78b3f9060f8bf5ce7a49d1ccdc8f",
        "files": [
          "tensorflow/lite/core/subgraph.cc",
          "tensorflow/lite/core/subgraph.h"
        ],
        "message": "[tflite] Ensure inputs and outputs don't overlap.\n\nIf a model uses the same tensor for both an input and an output then this can result in data loss and memory corruption. This should not happen.\n\nPiperOrigin-RevId: 332522916\nChange-Id: If0905b142415a9dfceaf2d181872f2a8fb88f48a",
        "before_after_code_files": [
          "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc",
          "tensorflow/lite/core/subgraph.h||tensorflow/lite/core/subgraph.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc",
            "tensorflow/lite/core/subgraph.h||tensorflow/lite/core/subgraph.h"
          ],
          "candidate": [
            "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc",
            "tensorflow/lite/core/subgraph.h||tensorflow/lite/core/subgraph.h"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc": [
          "File: tensorflow/lite/core/subgraph.cc -> tensorflow/lite/core/subgraph.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "464:   return kTfLiteOk;",
          "465: }",
          "467: TfLiteStatus Subgraph::BytesRequired(TfLiteType type, const int* dims,",
          "468:                                      size_t dims_size, size_t* bytes) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "477: TfLiteStatus Subgraph::CheckInputAndOutputForOverlap(const int* input_indices,",
          "478:                                                      int num_inputs,",
          "479:                                                      const int* output_indices,",
          "480:                                                      int num_outputs) {",
          "481:   for (int i = 0; i < num_inputs; i++) {",
          "482:     for (int j = 0; j < num_outputs; j++) {",
          "483:       if (input_indices[i] == output_indices[j]) {",
          "484:         ReportError(\"Tensor %d is both input %d and output %d\\n\",",
          "485:                     input_indices[i], i, j);",
          "486:         consistent_ = false;",
          "487:         return kTfLiteError;",
          "488:       }",
          "489:     }",
          "490:   }",
          "491:   return kTfLiteOk;",
          "492: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "553:       &context_,",
          "554:       CheckTensorIndices(\"node outputs\", outputs.data(), outputs.size()));",
          "556:   int new_node_index = nodes_and_registration_.size();",
          "557:   if (node_index) *node_index = new_node_index;",
          "558:   nodes_and_registration_.resize(nodes_and_registration_.size() + 1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "587:   if (builtin_data != nullptr) {",
          "588:     TF_LITE_ENSURE_OK(&context_, CheckInputAndOutputForOverlap(",
          "589:                                      inputs.data(), inputs.size(),",
          "590:                                      outputs.data(), outputs.size()));",
          "591:   }",
          "",
          "---------------"
        ],
        "tensorflow/lite/core/subgraph.h||tensorflow/lite/core/subgraph.h": [
          "File: tensorflow/lite/core/subgraph.h -> tensorflow/lite/core/subgraph.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "358:   TfLiteStatus CheckTensorIndices(const char* label, const int* indices,",
          "359:                                   int length);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "365:   TfLiteStatus CheckInputAndOutputForOverlap(const int* input_indices,",
          "366:                                              int num_inputs,",
          "367:                                              const int* output_indices,",
          "368:                                              int num_outputs);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f50a14b00560a383865c2273e4a9094add3888d5",
      "candidate_info": {
        "commit_hash": "f50a14b00560a383865c2273e4a9094add3888d5",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/f50a14b00560a383865c2273e4a9094add3888d5",
        "files": [
          "tensorflow/lite/core/subgraph.cc",
          "tensorflow/lite/core/subgraph.h"
        ],
        "message": "[tflite] Ensure inputs and outputs don't overlap.\n\nIf a model uses the same tensor for both an input and an output then this can result in data loss and memory corruption. This should not happen.\n\nPiperOrigin-RevId: 332522916\nChange-Id: If0905b142415a9dfceaf2d181872f2a8fb88f48a",
        "before_after_code_files": [
          "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc",
          "tensorflow/lite/core/subgraph.h||tensorflow/lite/core/subgraph.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc",
            "tensorflow/lite/core/subgraph.h||tensorflow/lite/core/subgraph.h"
          ],
          "candidate": [
            "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc",
            "tensorflow/lite/core/subgraph.h||tensorflow/lite/core/subgraph.h"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc": [
          "File: tensorflow/lite/core/subgraph.cc -> tensorflow/lite/core/subgraph.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "560:   return kTfLiteOk;",
          "561: }",
          "563: namespace {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "573: TfLiteStatus Subgraph::CheckInputAndOutputForOverlap(const int* input_indices,",
          "574:                                                      int num_inputs,",
          "575:                                                      const int* output_indices,",
          "576:                                                      int num_outputs) {",
          "577:   for (int i = 0; i < num_inputs; i++) {",
          "578:     for (int j = 0; j < num_outputs; j++) {",
          "579:       if (input_indices[i] == output_indices[j]) {",
          "580:         ReportError(\"Tensor %d is both input %d and output %d\\n\",",
          "581:                     input_indices[i], i, j);",
          "582:         consistent_ = false;",
          "583:         return kTfLiteError;",
          "584:       }",
          "585:     }",
          "586:   }",
          "587:   return kTfLiteOk;",
          "588: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "681:       &context_,",
          "682:       CheckTensorIndices(\"node outputs\", outputs.data(), outputs.size()));",
          "684:   int new_node_index = nodes_and_registration_.size();",
          "685:   if (node_index) *node_index = new_node_index;",
          "686:   nodes_and_registration_.resize(nodes_and_registration_.size() + 1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "715:   if (builtin_data != nullptr) {",
          "716:     TF_LITE_ENSURE_OK(&context_, CheckInputAndOutputForOverlap(",
          "717:                                      inputs.data(), inputs.size(),",
          "718:                                      outputs.data(), outputs.size()));",
          "719:   }",
          "",
          "---------------"
        ],
        "tensorflow/lite/core/subgraph.h||tensorflow/lite/core/subgraph.h": [
          "File: tensorflow/lite/core/subgraph.h -> tensorflow/lite/core/subgraph.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "415:   TfLiteStatus CheckTensorIndices(const char* label, const int* indices,",
          "416:                                   int length);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "422:   TfLiteStatus CheckInputAndOutputForOverlap(const int* input_indices,",
          "423:                                              int num_inputs,",
          "424:                                              const int* output_indices,",
          "425:                                              int num_outputs);",
          "",
          "---------------"
        ]
      }
    }
  ]
}