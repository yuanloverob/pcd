{
  "cve_id": "CVE-2022-27008",
  "cve_desc": "nginx njs 0.7.2 is vulnerable to Buffer Overflow. Type confused in Array.prototype.concat() when a slow array appended element is fast array.",
  "repo": "nginx/njs",
  "patch_hash": "e673ae41a998d1391bd562edb2ed6d49db7cc716",
  "patch_info": {
    "commit_hash": "e673ae41a998d1391bd562edb2ed6d49db7cc716",
    "repo": "nginx/njs",
    "commit_url": "https://github.com/nginx/njs/commit/e673ae41a998d1391bd562edb2ed6d49db7cc716",
    "files": [
      "src/njs_array.c",
      "src/test/njs_unit_test.c"
    ],
    "message": "Fixed Array.prototype.concat() when \"this\" is a slow array.\n\nPreviously, when the current appended element is fast array the \"this\"\narray was expected to always be a fast array also.  This may not be the\ncase when the previous appended element was not fast thus converting\nthe \"this\" array to a slow form.\n\nPrevious fix introduced in 2c1382bab643 (0.7.2) was not complete, the\ncorrect fix is to never assume \"this\" is fast, whereas njs_array_add()\nmay only be called with fast arrays.\n\nThis closes #471 issue in Github.",
    "before_after_code_files": [
      "src/njs_array.c||src/njs_array.c",
      "src/test/njs_unit_test.c||src/test/njs_unit_test.c"
    ]
  },
  "patch_diff": {
    "src/njs_array.c||src/njs_array.c": [
      "File: src/njs_array.c -> src/njs_array.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "364:     uint64_t     size;",
      "365:     njs_value_t  *start, *old;",
      "367:     free_before = array->start - array->data;",
      "368:     free_after = array->size - array->length - free_before;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "367:     njs_assert(array->object.fast_array);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1754:                         njs_set_invalid(&retval);",
      "1755:                     }",
      "1760:                     }",
      "1761:                 }",
      "",
      "[Removed Lines]",
      "1757:                     ret = njs_array_add(vm, array, &retval);",
      "1758:                     if (njs_slow_path(ret != NJS_OK)) {",
      "1759:                         return NJS_ERROR;",
      "",
      "[Added Lines]",
      "1759:                     ret = njs_value_property_i64_set(vm, &this, length,",
      "1760:                                                      &retval);",
      "1761:                     if (njs_slow_path(ret == NJS_ERROR)) {",
      "1762:                         return ret;",
      "",
      "---------------"
    ],
    "src/test/njs_unit_test.c||src/test/njs_unit_test.c": [
      "File: src/test/njs_unit_test.c -> src/test/njs_unit_test.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4253:               \"njs.dump([a[0], a[33],a.length])\"),",
      "4254:       njs_str(\"[1,1,65]\") },",
      "4256:     { njs_str(\"var re = /abc/; re[Symbol.isConcatSpreadable] = true;\"",
      "4257:               \"re[0] = 1, re[1] = 2, re[2] = 3, re.length = 3;\"",
      "4258:               \"[].concat(re)\"),",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4256:     { njs_str(\"var a = [1]; a[1111111] = 2;\"",
      "4257:               \"var a2 = [3].concat(a, [4]);\"",
      "4258:               \"njs.dump(a2)\"),",
      "4259:       njs_str(\"[3,1,<1111110 empty items>,2,4]\") },",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "232fb594608cac2094131af4322f2062cefbaeb2",
      "candidate_info": {
        "commit_hash": "232fb594608cac2094131af4322f2062cefbaeb2",
        "repo": "nginx/njs",
        "commit_url": "https://github.com/nginx/njs/commit/232fb594608cac2094131af4322f2062cefbaeb2",
        "files": [
          "src/njs_array.c",
          "src/test/njs_unit_test.c"
        ],
        "message": "Fixed Array.prototype.concat() when array is changed while iterating.\n\nPreviously, the flat array may be converted to a slow one as a\nside-effect of a custom getter invocation for a proto array object.\nThe function erroneously assumed that the this array remains flat\nwhile iterating.\n\nThe fix is to eliminate the micro-optimization which uses direct\npointers.\n\nThe problem is similar to the previous commits.",
        "before_after_code_files": [
          "src/njs_array.c||src/njs_array.c",
          "src/test/njs_unit_test.c||src/test/njs_unit_test.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/njs_array.c||src/njs_array.c",
            "src/test/njs_unit_test.c||src/test/njs_unit_test.c"
          ],
          "candidate": [
            "src/njs_array.c||src/njs_array.c",
            "src/test/njs_unit_test.c||src/test/njs_unit_test.c"
          ]
        }
      },
      "candidate_diff": {
        "src/njs_array.c||src/njs_array.c": [
          "File: src/njs_array.c -> src/njs_array.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1780:     int64_t      k, len, length;",
          "1781:     njs_int_t    ret;",
          "1782:     njs_uint_t   i;",
          "1784:     njs_array_t  *array, *keys;",
          "1786:     ret = njs_value_to_object(vm, &args[0]);",
          "",
          "[Removed Lines]",
          "1783:     njs_value_t  this, retval, *value, *e;",
          "",
          "[Added Lines]",
          "1783:     njs_value_t  this, retval, *e;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1819:                 return NJS_ERROR;",
          "1820:             }",
          "1825:                 for (k = 0; k < len; k++, length++) {",
          "1836:                         }",
          "1839:                     }",
          "1842:                     if (njs_slow_path(ret != NJS_OK)) {",
          "1843:                         return NJS_ERROR;",
          "1844:                     }",
          "",
          "[Removed Lines]",
          "1822:             if (njs_is_fast_array(&this) && njs_is_fast_array(e)",
          "1823:                 && (length + len) <= NJS_ARRAY_LARGE_OBJECT_LENGTH)",
          "1824:             {",
          "1826:                     value = &njs_array_start(e)[k];",
          "1828:                     if (njs_slow_path(!njs_is_valid(value))) {",
          "1829:                         ret = njs_value_property_i64(vm, e, k, &retval);",
          "1830:                         if (njs_slow_path(ret == NJS_ERROR)) {",
          "1831:                             return ret;",
          "1832:                         }",
          "1834:                         if (ret == NJS_DECLINED) {",
          "1835:                             njs_set_invalid(&retval);",
          "1838:                         value = &retval;",
          "1841:                     ret = njs_array_add(vm, array, value);",
          "",
          "[Added Lines]",
          "1822:             if (njs_is_fast_array(e)) {",
          "1824:                     ret = njs_value_property_i64(vm, e, k, &retval);",
          "1825:                     if (njs_slow_path(ret != NJS_OK)) {",
          "1826:                         if (ret == NJS_ERROR) {",
          "1827:                             return NJS_ERROR;",
          "1830:                         njs_set_invalid(&retval);",
          "1833:                     ret = njs_array_add(vm, array, &retval);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1847:                 continue;",
          "1848:             }",
          "1871:             keys = njs_array_indices(vm, e);",
          "1872:             if (njs_slow_path(keys == NULL)) {",
          "1873:                 return NJS_ERROR;",
          "",
          "[Removed Lines]",
          "1850:             if (njs_fast_object(len)) {",
          "1851:                 for (k = 0; k < len; k++, length++) {",
          "1852:                     ret = njs_value_property_i64(vm, e, k, &retval);",
          "1853:                     if (njs_slow_path(ret == NJS_ERROR)) {",
          "1854:                         return ret;",
          "1855:                     }",
          "1857:                     if (ret != NJS_OK) {",
          "1858:                         continue;",
          "1859:                     }",
          "1861:                     ret = njs_value_property_i64_set(vm, &this, length,",
          "1862:                                                      &retval);",
          "1863:                     if (njs_slow_path(ret == NJS_ERROR)) {",
          "1864:                         return ret;",
          "1865:                     }",
          "1866:                 }",
          "1868:                 continue;",
          "1869:             }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1879:                     return ret;",
          "1880:                 }",
          "1884:                 if (ret == NJS_OK) {",
          "1885:                     ret = njs_value_property_i64_set(vm, &this, idx, &retval);",
          "1886:                     if (njs_slow_path(ret == NJS_ERROR)) {",
          "1887:                         njs_array_destroy(vm, keys);",
          "",
          "[Removed Lines]",
          "1882:                 idx = njs_string_to_index(&keys->start[k]) + length;",
          "",
          "[Added Lines]",
          "1854:                     idx = njs_string_to_index(&keys->start[k]) + length;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1902:             return NJS_ERROR;",
          "1903:         }",
          "1916:         }",
          "1918:         length++;",
          "",
          "[Removed Lines]",
          "1905:         if (njs_is_fast_array(&this)) {",
          "1906:             ret = njs_array_add(vm, array, e);",
          "1907:             if (njs_slow_path(ret != NJS_OK)) {",
          "1908:                 return ret;",
          "1909:             }",
          "1911:         } else {",
          "1912:             ret = njs_value_property_i64_set(vm, &this, length, e);",
          "1913:             if (njs_slow_path(ret == NJS_ERROR)) {",
          "1914:                 return ret;",
          "1915:             }",
          "",
          "[Added Lines]",
          "1876:         ret = njs_value_property_i64_set(vm, &this, length, e);",
          "1877:         if (njs_slow_path(ret == NJS_ERROR)) {",
          "1878:             return ret;",
          "",
          "---------------"
        ],
        "src/test/njs_unit_test.c||src/test/njs_unit_test.c": [
          "File: src/test/njs_unit_test.c -> src/test/njs_unit_test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "12834:               \"Object.getOwnPropertyDescriptor(o, Symbol.isConcatSpreadable).value\"),",
          "12835:       njs_str(\"true\") },",
          "12837:     { njs_str(\"var o = {}, n = 5381 /* NJS_DJB_HASH_INIT */;\"",
          "12838:               \"while(n--) o[Symbol()] = 'test'; o[''];\"),",
          "12839:       njs_str(\"undefined\") },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12837:     { njs_str(\"var a = [1];\"",
          "12838:               \"var b = [2, /**/, 4, 5];\"",
          "12839:               \"Object.defineProperty(b.__proto__, 1, {\"",
          "12840:               \"    get: () => {\"",
          "12841:               \"        b.length = 10**6;\"",
          "12842:               \"        return 3;\"",
          "12843:               \"    }\"",
          "12844:               \"});\"",
          "12845:               \"a.concat(b)\"),",
          "12846:       njs_str(\"1,2,3,4,5\") },",
          "",
          "---------------"
        ]
      }
    }
  ]
}