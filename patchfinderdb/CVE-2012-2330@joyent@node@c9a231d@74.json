{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f0a561fe67d64415e28c817f336ad71be4d23b81",
      "candidate_info": {
        "commit_hash": "f0a561fe67d64415e28c817f336ad71be4d23b81",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/f0a561fe67d64415e28c817f336ad71be4d23b81",
        "files": [
          "lib/net.js"
        ],
        "message": "net: rename flag FLAG_SHUTDOWNQUED",
        "before_after_code_files": [
          "lib/net.js||linet.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/net.js||linet.js": [
          "File: lib/net.js -> linet.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: var FLAG_GOT_EOF = 1 << 0;",
          "46: var FLAG_SHUTDOWN = 1 << 1;",
          "47: var FLAG_DESTROY_SOON = 1 << 2;",
          "51: var debug;",
          "",
          "[Removed Lines]",
          "48: var FLAG_SHUTDOWNQUED = 1 << 3;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "252: Socket.prototype.end = function(data, encoding) {",
          "255:     if (data) this.write(data, encoding);",
          "256:     this.writable = false;",
          "258:   }",
          "260:   if (!this.writable) return;",
          "",
          "[Removed Lines]",
          "253:   if (this._connecting && ((this._flags & FLAG_SHUTDOWNQUED) == 0)) {",
          "257:     this._flags |= FLAG_SHUTDOWNQUED;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "748:     self.emit('connect');",
          "753:       self.end();",
          "754:     }",
          "755:   } else {",
          "",
          "[Removed Lines]",
          "750:     if (self._flags & FLAG_SHUTDOWNQUED) {",
          "752:       self._flags &= ~FLAG_SHUTDOWNQUED;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4a38795b6f9050c12e0851a5bdaa7daf3246854a",
      "candidate_info": {
        "commit_hash": "4a38795b6f9050c12e0851a5bdaa7daf3246854a",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/4a38795b6f9050c12e0851a5bdaa7daf3246854a",
        "files": [
          "test/simple/test-isolates-parent-exit.js"
        ],
        "message": "Add failing test case: parent on('exit')\n\nFixes #2564",
        "before_after_code_files": [
          "test/simple/test-isolates-parent-exit.js||test/simple/test-isolates-parent-exit.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-isolates-parent-exit.js||test/simple/test-isolates-parent-exit.js": [
          "File: test/simple/test-isolates-parent-exit.js -> test/simple/test-isolates-parent-exit.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var assert = require('assert');",
          "23: var common = require('../common');",
          "25: if (process.argv[2] === 'child') {",
          "26:   process.exit(0);",
          "27: } else if (process.argv[2] === 'testcase') {",
          "30:   var fork = require('child_process').fork;",
          "31:   var child = fork(process.argv[1], ['child'], {thread: true});",
          "33:   process.on('exit', function () {",
          "34:     process.stdout.write('exit\\n');",
          "35:   });",
          "36: } else {",
          "39:   var spawn = require('child_process').spawn;",
          "40:   var child = spawn(process.execPath, [process.argv[1], 'testcase']);",
          "43:   child.stderr.pipe(process.stderr);",
          "44:   process.stdin.pipe(child.stdin);",
          "46:   var missing = true;",
          "47:   child.stdout.on('data', function(chunk) {",
          "48:     if (missing) {",
          "49:         missing = chunk.toString() !== 'exit\\n';",
          "50:     }",
          "51:     process.stdout.write(chunk);",
          "52:   });",
          "54:   child.on('exit', function(code) {",
          "55:     process.exit(code);",
          "56:   });",
          "58:   process.on('exit', function() {",
          "59:     assert.equal(missing, false);",
          "60:   });",
          "61: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7142b260c6c299fc9697e6554620be47a6f622a9",
      "candidate_info": {
        "commit_hash": "7142b260c6c299fc9697e6554620be47a6f622a9",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/7142b260c6c299fc9697e6554620be47a6f622a9",
        "files": [
          "deps/openssl/config/android/openssl/opensslconf.h"
        ],
        "message": "build: tweak the openssl android configuration to build\n\nRemoved NO_CAST, NO_MD2 and NO_STORE because otherwise there were build errors.\n\nAdded NO_CAMELLIA, NO_MDC2, and NO_CMS because otherwise there were linker errors.",
        "before_after_code_files": [
          "deps/openssl/config/android/openssl/opensslconf.h||deps/openssl/config/android/openssl/opensslconf.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/openssl/config/android/openssl/opensslconf.h||deps/openssl/config/android/openssl/opensslconf.h": [
          "File: deps/openssl/config/android/openssl/opensslconf.h -> deps/openssl/config/android/openssl/opensslconf.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: #ifndef OPENSSL_DOING_MAKEDEPEND",
          "10: #endif",
          "11: #ifndef OPENSSL_NO_GMP",
          "12: # define OPENSSL_NO_GMP",
          "",
          "[Removed Lines]",
          "8: #ifndef OPENSSL_NO_CAST",
          "9: # define OPENSSL_NO_CAST",
          "",
          "[Added Lines]",
          "8: #ifndef OPENSSL_NO_CAMELLIA",
          "9: # define OPENSSL_NO_CAMELLIA",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "20: #ifndef OPENSSL_NO_KRB5",
          "21: # define OPENSSL_NO_KRB5",
          "22: #endif",
          "25: #endif",
          "26: #ifndef OPENSSL_NO_RC5",
          "27: # define OPENSSL_NO_RC5",
          "",
          "[Removed Lines]",
          "23: #ifndef OPENSSL_NO_MD2",
          "24: # define OPENSSL_NO_MD2",
          "",
          "[Added Lines]",
          "23: #ifndef OPENSSL_NO_MDC2",
          "24: # define OPENSSL_NO_MDC2",
          "25: #endif",
          "26: #ifndef OPENSSL_NO_CMS",
          "27: # define OPENSSL_NO_CMS",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "35: #ifndef OPENSSL_NO_SHA0",
          "36: # define OPENSSL_NO_SHA0",
          "37: #endif",
          "41: #ifndef OPENSSL_NO_WHRLPOOL",
          "42: # define OPENSSL_NO_WHRLPOOL",
          "43: #endif",
          "",
          "[Removed Lines]",
          "38: #ifndef OPENSSL_NO_STORE",
          "39: # define OPENSSL_NO_STORE",
          "40: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "92: # if defined(OPENSSL_NO_WHRLPOOL) && !defined(NO_WHRLPOOL)",
          "93: #  define NO_WHRLPOOL",
          "94: # endif",
          "95: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "95: # if defined(OPENSSL_NO_MDC2) && !defined(NO_MDC2)",
          "96: #  define NO_MDC2",
          "97: # endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5427311ae6800e0cdcbf1dfb352c084fd01d2b58",
      "candidate_info": {
        "commit_hash": "5427311ae6800e0cdcbf1dfb352c084fd01d2b58",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/5427311ae6800e0cdcbf1dfb352c084fd01d2b58",
        "files": [
          "deps/uv/src/win/thread.c"
        ],
        "message": "uv: upgrade to 0db56ea",
        "before_after_code_files": [
          "deps/uv/src/win/thread.c||deps/uv/src/win/thread.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/src/win/thread.c||deps/uv/src/win/thread.c": [
          "File: deps/uv/src/win/thread.c -> deps/uv/src/win/thread.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "113: }",
          "116: int uv_mutex_init(uv_mutex_t* mutex) {",
          "117:   InitializeCriticalSection(mutex);",
          "118:   return 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "116: uv_thread_t uv_thread_self(void) {",
          "117:   return GetCurrentThreadId();",
          "118: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ab32e9e04346fe627e01b3b9a852f6c4663681f2",
      "candidate_info": {
        "commit_hash": "ab32e9e04346fe627e01b3b9a852f6c4663681f2",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/ab32e9e04346fe627e01b3b9a852f6c4663681f2",
        "files": [
          "lib/child_process.js"
        ],
        "message": "child_process: emit 'channel closed' error instead of throwing",
        "before_after_code_files": [
          "lib/child_process.js||lichild_process.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/child_process.js||lichild_process.js": [
          "File: lib/child_process.js -> lichild_process.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "102:       throw new TypeError('message cannot be undefined');",
          "103:     }",
          "108:     if (channel.writeQueueSize > 1024 * 1024) {",
          "",
          "[Removed Lines]",
          "105:     if (!this.connected) throw new Error('channel closed');",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}