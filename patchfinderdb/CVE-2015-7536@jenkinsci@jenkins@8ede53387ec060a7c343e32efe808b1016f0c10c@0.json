{
  "cve_id": "CVE-2015-7536",
  "cve_desc": "Cross-site scripting (XSS) vulnerability in Jenkins before 1.640 and LTS before 1.625.2 allows remote authenticated users to inject arbitrary web script or HTML via unspecified vectors related to workspaces and archived artifacts.",
  "repo": "jenkinsci/jenkins",
  "patch_hash": "8ede53387ec060a7c343e32efe808b1016f0c10c",
  "patch_info": {
    "commit_hash": "8ede53387ec060a7c343e32efe808b1016f0c10c",
    "repo": "jenkinsci/jenkins",
    "commit_url": "https://github.com/jenkinsci/jenkins/commit/8ede53387ec060a7c343e32efe808b1016f0c10c",
    "files": [
      "core/src/main/java/hudson/FilePath.java"
    ],
    "message": "[JENKINS-32778] - Prevent extracting archived plugins outside of target path (#3402)",
    "before_after_code_files": [
      "core/src/main/java/hudson/FilePath.java||core/src/main/java/hudson/FilePath.java"
    ]
  },
  "patch_diff": {
    "core/src/main/java/hudson/FilePath.java||core/src/main/java/hudson/FilePath.java": [
      "File: core/src/main/java/hudson/FilePath.java -> core/src/main/java/hudson/FilePath.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "598:             while (entries.hasMoreElements()) {",
      "599:                 ZipEntry e = entries.nextElement();",
      "600:                 File f = new File(dir, e.getName());",
      "601:                 if (e.isDirectory()) {",
      "602:                     mkdirs(f);",
      "603:                 } else {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "601:                 if (!f.toPath().normalize().startsWith(dir.toPath())) {",
      "602:                     throw new IOException(",
      "603:                         \"Zip \" + zipFile.getPath() + \" contains illegal file name that breaks out of the target directory: \" + e.getName());",
      "604:                 }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e7cc06e7458303913498779af2c2fa3353f4dab1",
      "candidate_info": {
        "commit_hash": "e7cc06e7458303913498779af2c2fa3353f4dab1",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e7cc06e7458303913498779af2c2fa3353f4dab1",
        "files": [
          "core/src/main/java/hudson/FilePath.java"
        ],
        "message": "handle absolute paths correctly when unzipping\n\nWhen checking that an unzipped file does not break out of the target directory - this handles '..' in absolute paths correctly, where the previous implementation might not.",
        "before_after_code_files": [
          "core/src/main/java/hudson/FilePath.java||core/src/main/java/hudson/FilePath.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/hudson/FilePath.java||core/src/main/java/hudson/FilePath.java"
          ],
          "candidate": [
            "core/src/main/java/hudson/FilePath.java||core/src/main/java/hudson/FilePath.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/hudson/FilePath.java||core/src/main/java/hudson/FilePath.java": [
          "File: core/src/main/java/hudson/FilePath.java -> core/src/main/java/hudson/FilePath.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "598:             while (entries.hasMoreElements()) {",
          "599:                 ZipEntry e = entries.nextElement();",
          "600:                 File f = new File(dir, e.getName());",
          "602:                     throw new IOException(",
          "603:                         \"Zip \" + zipFile.getPath() + \" contains illegal file name that breaks out of the target directory: \" + e.getName());",
          "604:                 }",
          "",
          "[Removed Lines]",
          "601:                 if (!f.toPath().normalize().startsWith(dir.toPath())) {",
          "",
          "[Added Lines]",
          "601:                 if (!f.getCanonicalPath().startsWith(dir.getCanonicalPath())) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}