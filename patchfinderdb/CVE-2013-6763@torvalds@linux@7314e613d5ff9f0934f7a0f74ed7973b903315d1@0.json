{
  "cve_id": "CVE-2013-6763",
  "cve_desc": "The uio_mmap_physical function in drivers/uio/uio.c in the Linux kernel before 3.12 does not validate the size of a memory block, which allows local users to cause a denial of service (memory corruption) or possibly gain privileges via crafted mmap operations, a different vulnerability than CVE-2013-4511.",
  "repo": "torvalds/linux",
  "patch_hash": "7314e613d5ff9f0934f7a0f74ed7973b903315d1",
  "patch_info": {
    "commit_hash": "7314e613d5ff9f0934f7a0f74ed7973b903315d1",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/7314e613d5ff9f0934f7a0f74ed7973b903315d1",
    "files": [
      "drivers/uio/uio.c",
      "drivers/video/au1100fb.c",
      "drivers/video/au1200fb.c"
    ],
    "message": "Fix a few incorrectly checked [io_]remap_pfn_range() calls\n\nNico Golde reports a few straggling uses of [io_]remap_pfn_range() that\nreally should use the vm_iomap_memory() helper.  This trivially converts\ntwo of them to the helper, and comments about why the third one really\nneeds to continue to use remap_pfn_range(), and adds the missing size\ncheck.\n\nReported-by: Nico Golde <nico@ngolde.de>\nCc: stable@kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org.",
    "before_after_code_files": [
      "drivers/uio/uio.c||drivers/uio/uio.c",
      "drivers/video/au1100fb.c||drivers/video/au1100fb.c",
      "drivers/video/au1200fb.c||drivers/video/au1200fb.c"
    ]
  },
  "patch_diff": {
    "drivers/uio/uio.c||drivers/uio/uio.c": [
      "File: drivers/uio/uio.c -> drivers/uio/uio.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "642: {",
      "643:  struct uio_device *idev = vma->vm_private_data;",
      "644:  int mi = uio_find_mem_index(vma);",
      "645:  if (mi < 0)",
      "646:   return -EINVAL;",
      "650:  vma->vm_page_prot = pgprot_noncached(vma->vm_page_prot);",
      "652:  return remap_pfn_range(vma,",
      "653:           vma->vm_start,",
      "655:           vma->vm_end - vma->vm_start,",
      "656:           vma->vm_page_prot);",
      "657: }",
      "",
      "[Removed Lines]",
      "648:  vma->vm_ops = &uio_physical_vm_ops;",
      "654:           idev->info->mem[mi].addr >> PAGE_SHIFT,",
      "",
      "[Added Lines]",
      "645:  struct uio_mem *mem;",
      "648:  mem = idev->info->mem + mi;",
      "650:  if (vma->vm_end - vma->vm_start > mem->size)",
      "651:   return -EINVAL;",
      "653:  vma->vm_ops = &uio_physical_vm_ops;",
      "667:           mem->addr >> PAGE_SHIFT,",
      "",
      "---------------"
    ],
    "drivers/video/au1100fb.c||drivers/video/au1100fb.c": [
      "File: drivers/video/au1100fb.c -> drivers/video/au1100fb.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "361: int au1100fb_fb_mmap(struct fb_info *fbi, struct vm_area_struct *vma)",
      "362: {",
      "363:  struct au1100fb_device *fbdev;",
      "367:  fbdev = to_au1100fb_device(fbi);",
      "385:  vma->vm_page_prot = pgprot_noncached(vma->vm_page_prot);",
      "386:  pgprot_val(vma->vm_page_prot) |= (6 << 9); //CCA=6",
      "395: }",
      "397: static struct fb_ops au1100fb_ops =",
      "",
      "[Removed Lines]",
      "364:  unsigned int len;",
      "365:  unsigned long start=0, off;",
      "369:  if (vma->vm_pgoff > (~0UL >> PAGE_SHIFT)) {",
      "370:   return -EINVAL;",
      "371:  }",
      "373:  start = fbdev->fb_phys & PAGE_MASK;",
      "374:  len = PAGE_ALIGN((start & ~PAGE_MASK) + fbdev->fb_len);",
      "376:  off = vma->vm_pgoff << PAGE_SHIFT;",
      "378:  if ((vma->vm_end - vma->vm_start + off) > len) {",
      "379:   return -EINVAL;",
      "380:  }",
      "382:  off += start;",
      "383:  vma->vm_pgoff = off >> PAGE_SHIFT;",
      "388:  if (io_remap_pfn_range(vma, vma->vm_start, off >> PAGE_SHIFT,",
      "389:     vma->vm_end - vma->vm_start,",
      "390:     vma->vm_page_prot)) {",
      "391:   return -EAGAIN;",
      "392:  }",
      "394:  return 0;",
      "",
      "[Added Lines]",
      "370:  return vm_iomap_memory(vma, fbdev->fb_phys, fbdev->fb_len);",
      "",
      "---------------"
    ],
    "drivers/video/au1200fb.c||drivers/video/au1200fb.c": [
      "File: drivers/video/au1200fb.c -> drivers/video/au1200fb.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1235: static int au1200fb_fb_mmap(struct fb_info *info, struct vm_area_struct *vma)",
      "1237: {",
      "1240:  struct au1200fb_device *fbdev = info->par;",
      "1258:  vma->vm_page_prot = pgprot_noncached(vma->vm_page_prot);",
      "1264: }",
      "1266: static void set_global(u_int cmd, struct au1200_lcd_global_regs_t *pdata)",
      "",
      "[Removed Lines]",
      "1238:  unsigned int len;",
      "1239:  unsigned long start=0, off;",
      "1242:  if (vma->vm_pgoff > (~0UL >> PAGE_SHIFT)) {",
      "1243:   return -EINVAL;",
      "1244:  }",
      "1246:  start = fbdev->fb_phys & PAGE_MASK;",
      "1247:  len = PAGE_ALIGN((start & ~PAGE_MASK) + fbdev->fb_len);",
      "1249:  off = vma->vm_pgoff << PAGE_SHIFT;",
      "1251:  if ((vma->vm_end - vma->vm_start + off) > len) {",
      "1252:   return -EINVAL;",
      "1253:  }",
      "1255:  off += start;",
      "1256:  vma->vm_pgoff = off >> PAGE_SHIFT;",
      "1261:  return io_remap_pfn_range(vma, vma->vm_start, off >> PAGE_SHIFT,",
      "1262:       vma->vm_end - vma->vm_start,",
      "1263:       vma->vm_page_prot);",
      "",
      "[Added Lines]",
      "1242:  return vm_iomap_memory(vma, fbdev->fb_phys, fbdev->fb_len);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ddb09754e6c7239e302c7b675df9bbd415f8de5d",
      "candidate_info": {
        "commit_hash": "ddb09754e6c7239e302c7b675df9bbd415f8de5d",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/ddb09754e6c7239e302c7b675df9bbd415f8de5d",
        "files": [
          "drivers/uio/uio.c"
        ],
        "message": "uio: fix vma io range check in mmap\n\nthe vma range size is always page size aligned in mmap, while the\nreal io space range may not be page aligned, thus leading to range\ncheck failure in the uio_mmap_physical().\n\nfor example, in a case of io range size \"mem->size == 1KB\", and we\nhave (vma->vm_end - vma->vm_start) == 4KB, due to \"len\" is aligned\nto page size in do_mmap_pgoff().\n\nnow fix this issue by align mem->size to page size in the check.\n\nSigned-off-by: Bin Wang <binw@marvell.com>\nSigned-off-by: Nobuhiro Iwamatsu <nobuhiro.iwamatsu.yj@renesas.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
        "before_after_code_files": [
          "drivers/uio/uio.c||drivers/uio/uio.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/uio/uio.c||drivers/uio/uio.c"
          ],
          "candidate": [
            "drivers/uio/uio.c||drivers/uio/uio.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/uio/uio.c||drivers/uio/uio.c": [
          "File: drivers/uio/uio.c -> drivers/uio/uio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "656:  if (mem->addr & ~PAGE_MASK)",
          "657:   return -ENODEV;",
          "659:   return -EINVAL;",
          "661:  vma->vm_ops = &uio_physical_vm_ops;",
          "",
          "[Removed Lines]",
          "658:  if (vma->vm_end - vma->vm_start > mem->size)",
          "",
          "[Added Lines]",
          "658:  if (vma->vm_end - vma->vm_start > PAGE_ALIGN(mem->size))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1fca06fafb235a88c4fa91294aa1726c0e22855b",
      "candidate_info": {
        "commit_hash": "1fca06fafb235a88c4fa91294aa1726c0e22855b",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/1fca06fafb235a88c4fa91294aa1726c0e22855b",
        "files": [
          "drivers/video/au1200fb.c"
        ],
        "message": "au1200fb: io_remap_pfn_range() sets VM_IO\n\n... and single return is quite sufficient to get out of function, TYVM\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
        "before_after_code_files": [
          "drivers/video/au1200fb.c||drivers/video/au1200fb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/video/au1200fb.c||drivers/video/au1200fb.c"
          ],
          "candidate": [
            "drivers/video/au1200fb.c||drivers/video/au1200fb.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/video/au1200fb.c||drivers/video/au1200fb.c": [
          "File: drivers/video/au1200fb.c -> drivers/video/au1200fb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1258:  vma->vm_page_prot = pgprot_noncached(vma->vm_page_prot);",
          "1263:  return io_remap_pfn_range(vma, vma->vm_start, off >> PAGE_SHIFT,",
          "1264:       vma->vm_end - vma->vm_start,",
          "1265:       vma->vm_page_prot);",
          "1268: }",
          "1270: static void set_global(u_int cmd, struct au1200_lcd_global_regs_t *pdata)",
          "",
          "[Removed Lines]",
          "1261:  vma->vm_flags |= VM_IO;",
          "1267:  return 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b29f680c4fe305902d02c1d5aa4968fe13a45fe6",
      "candidate_info": {
        "commit_hash": "b29f680c4fe305902d02c1d5aa4968fe13a45fe6",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/b29f680c4fe305902d02c1d5aa4968fe13a45fe6",
        "files": [
          "drivers/uio/uio.c"
        ],
        "message": "Revert \"uio: fix vma io range check in mmap\"\n\nThis reverts commit ddb09754e6c7239e302c7b675df9bbd415f8de5d.\n\nLinus objected to this originally, I can see why it might be needed, but\ngiven that no one spoke up defending this patch, I'm going to revert it.\n\nIf you have hardware that requires this change, please speak up in the\nfuture and defend the patch.\n\nReported-by: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Bin Wang <binw@marvell.com>\nCc: Nobuhiro Iwamatsu <nobuhiro.iwamatsu.yj@renesas.com>\nCc: Norbert Ciosek <norbertciosek@gmail.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
        "before_after_code_files": [
          "drivers/uio/uio.c||drivers/uio/uio.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/uio/uio.c||drivers/uio/uio.c"
          ],
          "candidate": [
            "drivers/uio/uio.c||drivers/uio/uio.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/uio/uio.c||drivers/uio/uio.c": [
          "File: drivers/uio/uio.c -> drivers/uio/uio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "656:  if (mem->addr & ~PAGE_MASK)",
          "657:   return -ENODEV;",
          "659:   return -EINVAL;",
          "661:  vma->vm_ops = &uio_physical_vm_ops;",
          "",
          "[Removed Lines]",
          "658:  if (vma->vm_end - vma->vm_start > PAGE_ALIGN(mem->size))",
          "",
          "[Added Lines]",
          "658:  if (vma->vm_end - vma->vm_start > mem->size)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c607f450f6e49f5794f27617bedc638b51044d2e",
      "candidate_info": {
        "commit_hash": "c607f450f6e49f5794f27617bedc638b51044d2e",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/c607f450f6e49f5794f27617bedc638b51044d2e",
        "files": [
          "drivers/video/au1100fb.c"
        ],
        "message": "au1100fb: VM_IO is set by io_remap_pfn_range()\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
        "before_after_code_files": [
          "drivers/video/au1100fb.c||drivers/video/au1100fb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/video/au1100fb.c||drivers/video/au1100fb.c"
          ],
          "candidate": [
            "drivers/video/au1100fb.c||drivers/video/au1100fb.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/video/au1100fb.c||drivers/video/au1100fb.c": [
          "File: drivers/video/au1100fb.c -> drivers/video/au1100fb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "385:  vma->vm_page_prot = pgprot_noncached(vma->vm_page_prot);",
          "386:  pgprot_val(vma->vm_page_prot) |= (6 << 9); //CCA=6",
          "390:  if (io_remap_pfn_range(vma, vma->vm_start, off >> PAGE_SHIFT,",
          "391:     vma->vm_end - vma->vm_start,",
          "392:     vma->vm_page_prot)) {",
          "",
          "[Removed Lines]",
          "388:  vma->vm_flags |= VM_IO;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}