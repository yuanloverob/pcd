{
  "cve_id": "CVE-2019-3569",
  "cve_desc": "HHVM, when used with FastCGI, would bind by default to all available interfaces. This behavior could allow a malicious individual unintended direct access to the application, which could result in information disclosure. This issue affects versions 4.3.0, 4.4.0, 4.5.0, 4.6.0, 4.7.0, 4.8.0, versions 3.30.5 and below, and all versions in the 4.0, 4.1, and 4.2 series.",
  "repo": "facebook/hhvm",
  "patch_hash": "97ef580ec2cca9a54da6f9bd9fdd9a455f6d74ed",
  "patch_info": {
    "commit_hash": "97ef580ec2cca9a54da6f9bd9fdd9a455f6d74ed",
    "repo": "facebook/hhvm",
    "commit_url": "https://github.com/facebook/hhvm/commit/97ef580ec2cca9a54da6f9bd9fdd9a455f6d74ed",
    "files": [
      "hphp/runtime/server/fastcgi/fastcgi-server.cpp",
      "hphp/test/server/debugger/tests/runTest1.php",
      "hphp/test/server/fastcgi/tests/authDigestTest.php",
      "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
      "hphp/test/server/fastcgi/tests/global_variables_server.php",
      "hphp/test/server/fastcgi/tests/headerTest.php",
      "hphp/test/server/fastcgi/tests/httpsTest.php",
      "hphp/test/server/fastcgi/tests/invalid.php",
      "hphp/test/server/util/server_tests.inc"
    ],
    "message": "Fix default FastCGI interface\n\nReviewed By: alexeyt\n\nDifferential Revision: D15567393\n\nfbshipit-source-id: ffab228f689d4ddca9ea4835c70aecf16da2aa9f",
    "before_after_code_files": [
      "hphp/runtime/server/fastcgi/fastcgi-server.cpp||hphp/runtime/server/fastcgi/fastcgi-server.cpp",
      "hphp/test/server/debugger/tests/runTest1.php||hphp/test/server/debugger/tests/runTest1.php",
      "hphp/test/server/fastcgi/tests/authDigestTest.php||hphp/test/server/fastcgi/tests/authDigestTest.php",
      "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php||hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
      "hphp/test/server/fastcgi/tests/global_variables_server.php||hphp/test/server/fastcgi/tests/global_variables_server.php",
      "hphp/test/server/fastcgi/tests/headerTest.php||hphp/test/server/fastcgi/tests/headerTest.php",
      "hphp/test/server/fastcgi/tests/httpsTest.php||hphp/test/server/fastcgi/tests/httpsTest.php",
      "hphp/test/server/fastcgi/tests/invalid.php||hphp/test/server/fastcgi/tests/invalid.php",
      "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
    ]
  },
  "patch_diff": {
    "hphp/runtime/server/fastcgi/fastcgi-server.cpp||hphp/runtime/server/fastcgi/fastcgi-server.cpp": [
      "File: hphp/runtime/server/fastcgi/fastcgi-server.cpp -> hphp/runtime/server/fastcgi/fastcgi-server.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "80:   if (useFileSocket) {",
      "81:     sock_addr.setFromPath(address);",
      "82:   } else if (address.empty()) {",
      "84:   } else {",
      "85:     sock_addr.setFromHostPort(address, port);",
      "86:   }",
      "",
      "[Removed Lines]",
      "83:     sock_addr.setFromLocalPort(port);",
      "",
      "[Added Lines]",
      "83:     sock_addr.setFromHostPort(\"localhost\", port);",
      "84:     assert(sock_addr.isLoopbackAddress());",
      "",
      "---------------"
    ],
    "hphp/test/server/debugger/tests/runTest1.php||hphp/test/server/debugger/tests/runTest1.php": [
      "File: hphp/test/server/debugger/tests/runTest1.php -> hphp/test/server/debugger/tests/runTest1.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: function test1Controller($hphpdOutput, $hphpdProcessId, $serverPort) {",
      "7:   waitForClientToOutput($hphpdOutput, \"Waiting for server response\");",
      "9:   echo \"Requesting test1.php\\n\";",
      "13:   waitForClientToOutput($hphpdOutput, \"quit\");",
      "",
      "[Removed Lines]",
      "8:   $url = \"http://\".php_uname('n').':'.$serverPort.'/test1.php';",
      "10:   request(php_uname('n'), $serverPort, 'test1.php', 10); // ignore response",
      "",
      "[Added Lines]",
      "9:   request('localhost', $serverPort, 'test1.php', 10); // ignore response",
      "",
      "---------------"
    ],
    "hphp/test/server/fastcgi/tests/authDigestTest.php||hphp/test/server/fastcgi/tests/authDigestTest.php": [
      "File: hphp/test/server/fastcgi/tests/authDigestTest.php -> hphp/test/server/fastcgi/tests/authDigestTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "8:     'uri=\"/test_auth_digest.php\", cnonce=\"MjIyMTg2\", nc=00000001, ' .",
      "9:     'qop=\"auth\", response=\"6dfbea52fbf13016476c1879e6436004\", ' .",
      "10:     'opaque=\"cdce8a5c95a1427d74df7acbf41c9ce0\"');",
      "12:                   [], [], $args));",
      "13: }",
      "",
      "[Removed Lines]",
      "11:   var_dump(request(php_uname('n'), $serverPort, \"test_auth_digest.php\",",
      "",
      "[Added Lines]",
      "11:   var_dump(request('localhost', $serverPort, \"test_auth_digest.php\",",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "18:     'uri=\"/test_auth_digest.php\", cnonce=\"MjIyMTg1\", nc=00000001, ' .",
      "19:     'qop=\"auth\", response=\"e544aaed06917adea3e5c74dd49f0e32\", ' .",
      "20:     'opaque=\"cdce8a5c95a1427d74df7acbf41c9ce0\"');",
      "22:                   [], [], $args));",
      "23: }",
      "",
      "[Removed Lines]",
      "21:   var_dump(request(php_uname('n'), $serverPort, \"test_auth_digest.php\",",
      "",
      "[Added Lines]",
      "21:   var_dump(request('localhost', $serverPort, \"test_auth_digest.php\",",
      "",
      "---------------"
    ],
    "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php||hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php": [
      "File: hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php -> hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "6: require_once('test_base.inc');",
      "8: function disableIniZendCompatController($port) {",
      "10: }",
      "12: echo \"---Enable Ini Zend Compat ON---\\n\";",
      "",
      "[Removed Lines]",
      "9:   echo request(php_uname('n'), $port, 'test_disable_ini_zend_compat.php');",
      "",
      "[Added Lines]",
      "9:   echo request('localhost', $port, 'test_disable_ini_zend_compat.php');",
      "",
      "---------------"
    ],
    "hphp/test/server/fastcgi/tests/global_variables_server.php||hphp/test/server/fastcgi/tests/global_variables_server.php": [
      "File: hphp/test/server/fastcgi/tests/global_variables_server.php -> hphp/test/server/fastcgi/tests/global_variables_server.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "23:     $path = 'global_variables.php?var=GET&get=1';",
      "24:     $post = array('var' => 'POST', 'post' => 2);",
      "25:     $headers = array('Cookie' => 'var=COOKIE;cookie=3;');",
      "27:   }, $request[0]);",
      "28: }",
      "",
      "[Removed Lines]",
      "26:     echo request(php_uname('n'), $port, $path, $post, $headers, $extra) . \"\\n\";",
      "",
      "[Added Lines]",
      "26:     echo request('localhost', $port, $path, $post, $headers, $extra) . \"\\n\";",
      "",
      "---------------"
    ],
    "hphp/test/server/fastcgi/tests/headerTest.php||hphp/test/server/fastcgi/tests/headerTest.php": [
      "File: hphp/test/server/fastcgi/tests/headerTest.php -> hphp/test/server/fastcgi/tests/headerTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: function headerTestController($serverPort) {",
      "6:   $args = array('Authorization' => 'foo');",
      "8:                   [], ['PROXY' => 'foobar'], $args));",
      "9: }",
      "",
      "[Removed Lines]",
      "7:   var_dump(request(php_uname('n'), $serverPort, \"test_headers.php\",",
      "",
      "[Added Lines]",
      "7:   var_dump(request('localhost', $serverPort, \"test_headers.php\",",
      "",
      "---------------"
    ],
    "hphp/test/server/fastcgi/tests/httpsTest.php||hphp/test/server/fastcgi/tests/httpsTest.php": [
      "File: hphp/test/server/fastcgi/tests/httpsTest.php -> hphp/test/server/fastcgi/tests/httpsTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: function httpsTestController($serverPort) {",
      "6:   $args = array('HTTPS' => '');",
      "8:                   [], [], $args));",
      "9: }",
      "",
      "[Removed Lines]",
      "7:   var_dump(request(php_uname('n'), $serverPort, \"test_https.php\",",
      "",
      "[Added Lines]",
      "7:   var_dump(request('localhost', $serverPort, \"test_https.php\",",
      "",
      "---------------"
    ],
    "hphp/test/server/fastcgi/tests/invalid.php||hphp/test/server/fastcgi/tests/invalid.php": [
      "File: hphp/test/server/fastcgi/tests/invalid.php -> hphp/test/server/fastcgi/tests/invalid.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: require_once('test_base.inc');",
      "5: function invalidTestController($port) {",
      "8:   $filename = __DIR__.'/request-doesnotexist.dat';",
      "9:   $file = fopen($filename, 'rb');",
      "",
      "[Removed Lines]",
      "6:   $host = php_uname('n');",
      "",
      "[Added Lines]",
      "6:   $host = 'localhost';",
      "",
      "---------------"
    ],
    "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc": [
      "File: hphp/test/server/util/server_tests.inc -> hphp/test/server/util/server_tests.inc",
      "--- Hunk 1 ---",
      "[Context before]",
      "181: function checkServerId($serverPort, $expectedIds) {",
      "183:   $r = request($host, $serverPort, \"hello.php\");",
      "184:   if (preg_match('/Hello, World!(.*+)/', $r ?? '', &$matches)) {",
      "185:     foreach ((array)$expectedIds as $id) {",
      "",
      "[Removed Lines]",
      "182:   $host = php_uname('n');",
      "",
      "[Added Lines]",
      "182:   $host = 'localhost';",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "218:   $r = \"\";",
      "219:   for ($i = 1; $i <= 10; $i++) {",
      "221:     if ($r === \"OK\") break;",
      "222:     usleep(100000);",
      "223:   }",
      "",
      "[Removed Lines]",
      "220:     $r = request(php_uname('n'), $adminPort, 'stop?instance-id='.$test_run_id);",
      "",
      "[Added Lines]",
      "220:     $r = request('localhost', $adminPort, 'stop?instance-id='.$test_run_id);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "286:     $headers = implode(\" \", $s);",
      "287:   }",
      "288:   $url = \"http://$host:$port/$path\";",
      "291:   $LOG_ROOT = ServerUtilServerTests::$LOG_ROOT;",
      "292:   $test_run_id = ServerUtilServerTests::$test_run_id;",
      "",
      "[Removed Lines]",
      "289:   $host_name = \"hphpd.debugger.\".php_uname('n');",
      "",
      "[Added Lines]",
      "289:   $host_name = \"hphpd.debugger.\".\\php_uname('n');",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "304:       foreach ($requests as $request) {",
      "305:         $r = is_array($request) ? $request[0] : $request;",
      "306:         echo \"Requesting '$r'\\n\";",
      "308:       }",
      "309:     },",
      "310:     $customArgs,",
      "",
      "[Removed Lines]",
      "307:         var_dump(request(php_uname('n'), $serverPort, $request));",
      "",
      "[Added Lines]",
      "307:         var_dump(request('localhost', $serverPort, $request));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "13afa03ae2386b3d70e21255a125fed0ce673e56",
      "candidate_info": {
        "commit_hash": "13afa03ae2386b3d70e21255a125fed0ce673e56",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/13afa03ae2386b3d70e21255a125fed0ce673e56",
        "files": [
          "hphp/test/server/util/server_tests.inc"
        ],
        "message": "Fix default FastCGI interface\n\nReviewed By: alexeyt\n\nDifferential Revision: D15567393",
        "before_after_code_files": [
          "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
          ],
          "candidate": [
            "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
          ]
        }
      },
      "candidate_diff": {
        "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc": [
          "File: hphp/test/server/util/server_tests.inc -> hphp/test/server/util/server_tests.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "181: function checkServerId($serverPort, $expectedIds) {",
          "183:   $r = request($host, $serverPort, \"hello.php\");",
          "184:   if (preg_match('/Hello, World!(.*+)/', $r ?? '', &$matches)) {",
          "185:     foreach ((array)$expectedIds as $id) {",
          "",
          "[Removed Lines]",
          "182:   $host = php_uname('n');",
          "",
          "[Added Lines]",
          "182:   $host = 'localhost';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "218:   $r = \"\";",
          "219:   for ($i = 1; $i <= 10; $i++) {",
          "221:     if ($r === \"OK\") break;",
          "222:     usleep(100000);",
          "223:   }",
          "",
          "[Removed Lines]",
          "220:     $r = request(php_uname('n'), $adminPort, 'stop?instance-id='.$test_run_id);",
          "",
          "[Added Lines]",
          "220:     $r = request('localhost', $adminPort, 'stop?instance-id='.$test_run_id);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "298:       foreach ($requests as $request) {",
          "299:         list($r) = (array)$request;",
          "300:         echo \"Requesting '$r'\\n\";",
          "302:       }",
          "303:     },",
          "304:     $customArgs,",
          "",
          "[Removed Lines]",
          "301:         var_dump(request(php_uname('n'), $serverPort, $request));",
          "",
          "[Added Lines]",
          "301:         var_dump(request('localhost', $serverPort, $request));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "32d480d67633de025292982e44319f88c65c4631",
      "candidate_info": {
        "commit_hash": "32d480d67633de025292982e44319f88c65c4631",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/32d480d67633de025292982e44319f88c65c4631",
        "files": [
          "hphp/runtime/server/fastcgi/fastcgi-server.cpp",
          "hphp/test/server/debugger/tests/runTest1.php",
          "hphp/test/server/fastcgi/tests/authDigestTest.php",
          "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
          "hphp/test/server/fastcgi/tests/global_variables_server.php",
          "hphp/test/server/fastcgi/tests/headerTest.php",
          "hphp/test/server/fastcgi/tests/httpsTest.php",
          "hphp/test/server/fastcgi/tests/invalid.php",
          "hphp/test/server/util/server_tests.inc"
        ],
        "message": "Fix default FastCGI interface\n\nReviewed By: alexeyt\n\nDifferential Revision: D15567393",
        "before_after_code_files": [
          "hphp/runtime/server/fastcgi/fastcgi-server.cpp||hphp/runtime/server/fastcgi/fastcgi-server.cpp",
          "hphp/test/server/debugger/tests/runTest1.php||hphp/test/server/debugger/tests/runTest1.php",
          "hphp/test/server/fastcgi/tests/authDigestTest.php||hphp/test/server/fastcgi/tests/authDigestTest.php",
          "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php||hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
          "hphp/test/server/fastcgi/tests/global_variables_server.php||hphp/test/server/fastcgi/tests/global_variables_server.php",
          "hphp/test/server/fastcgi/tests/headerTest.php||hphp/test/server/fastcgi/tests/headerTest.php",
          "hphp/test/server/fastcgi/tests/httpsTest.php||hphp/test/server/fastcgi/tests/httpsTest.php",
          "hphp/test/server/fastcgi/tests/invalid.php||hphp/test/server/fastcgi/tests/invalid.php",
          "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/server/fastcgi/fastcgi-server.cpp||hphp/runtime/server/fastcgi/fastcgi-server.cpp",
            "hphp/test/server/debugger/tests/runTest1.php||hphp/test/server/debugger/tests/runTest1.php",
            "hphp/test/server/fastcgi/tests/authDigestTest.php||hphp/test/server/fastcgi/tests/authDigestTest.php",
            "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php||hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
            "hphp/test/server/fastcgi/tests/global_variables_server.php||hphp/test/server/fastcgi/tests/global_variables_server.php",
            "hphp/test/server/fastcgi/tests/headerTest.php||hphp/test/server/fastcgi/tests/headerTest.php",
            "hphp/test/server/fastcgi/tests/httpsTest.php||hphp/test/server/fastcgi/tests/httpsTest.php",
            "hphp/test/server/fastcgi/tests/invalid.php||hphp/test/server/fastcgi/tests/invalid.php",
            "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
          ],
          "candidate": [
            "hphp/runtime/server/fastcgi/fastcgi-server.cpp||hphp/runtime/server/fastcgi/fastcgi-server.cpp",
            "hphp/test/server/debugger/tests/runTest1.php||hphp/test/server/debugger/tests/runTest1.php",
            "hphp/test/server/fastcgi/tests/authDigestTest.php||hphp/test/server/fastcgi/tests/authDigestTest.php",
            "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php||hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
            "hphp/test/server/fastcgi/tests/global_variables_server.php||hphp/test/server/fastcgi/tests/global_variables_server.php",
            "hphp/test/server/fastcgi/tests/headerTest.php||hphp/test/server/fastcgi/tests/headerTest.php",
            "hphp/test/server/fastcgi/tests/httpsTest.php||hphp/test/server/fastcgi/tests/httpsTest.php",
            "hphp/test/server/fastcgi/tests/invalid.php||hphp/test/server/fastcgi/tests/invalid.php",
            "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/server/fastcgi/fastcgi-server.cpp||hphp/runtime/server/fastcgi/fastcgi-server.cpp": [
          "File: hphp/runtime/server/fastcgi/fastcgi-server.cpp -> hphp/runtime/server/fastcgi/fastcgi-server.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:   if (useFileSocket) {",
          "81:     sock_addr.setFromPath(address);",
          "82:   } else if (address.empty()) {",
          "84:   } else {",
          "85:     sock_addr.setFromHostPort(address, port);",
          "86:   }",
          "",
          "[Removed Lines]",
          "83:     sock_addr.setFromLocalPort(port);",
          "",
          "[Added Lines]",
          "83:     sock_addr.setFromHostPort(\"localhost\", port);",
          "84:     assert(sock_addr.isLoopbackAddress());",
          "",
          "---------------"
        ],
        "hphp/test/server/debugger/tests/runTest1.php||hphp/test/server/debugger/tests/runTest1.php": [
          "File: hphp/test/server/debugger/tests/runTest1.php -> hphp/test/server/debugger/tests/runTest1.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: function test1Controller($hphpdOutput, $hphpdProcessId, $serverPort) {",
          "7:   waitForClientToOutput($hphpdOutput, \"Waiting for server response\");",
          "9:   echo \"Requesting test1.php\\n\";",
          "13:   waitForClientToOutput($hphpdOutput, \"quit\");",
          "",
          "[Removed Lines]",
          "8:   $url = \"http://\".php_uname('n').':'.$serverPort.'/test1.php';",
          "10:   request(php_uname('n'), $serverPort, 'test1.php', 10); // ignore response",
          "",
          "[Added Lines]",
          "9:   request('localhost', $serverPort, 'test1.php', 10); // ignore response",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/authDigestTest.php||hphp/test/server/fastcgi/tests/authDigestTest.php": [
          "File: hphp/test/server/fastcgi/tests/authDigestTest.php -> hphp/test/server/fastcgi/tests/authDigestTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:     'uri=\"/test_auth_digest.php\", cnonce=\"MjIyMTg2\", nc=00000001, ' .",
          "9:     'qop=\"auth\", response=\"6dfbea52fbf13016476c1879e6436004\", ' .",
          "10:     'opaque=\"cdce8a5c95a1427d74df7acbf41c9ce0\"');",
          "12:                   [], [], $args));",
          "13: }",
          "",
          "[Removed Lines]",
          "11:   var_dump(request(php_uname('n'), $serverPort, \"test_auth_digest.php\",",
          "",
          "[Added Lines]",
          "11:   var_dump(request('localhost', $serverPort, \"test_auth_digest.php\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "18:     'uri=\"/test_auth_digest.php\", cnonce=\"MjIyMTg1\", nc=00000001, ' .",
          "19:     'qop=\"auth\", response=\"e544aaed06917adea3e5c74dd49f0e32\", ' .",
          "20:     'opaque=\"cdce8a5c95a1427d74df7acbf41c9ce0\"');",
          "22:                   [], [], $args));",
          "23: }",
          "",
          "[Removed Lines]",
          "21:   var_dump(request(php_uname('n'), $serverPort, \"test_auth_digest.php\",",
          "",
          "[Added Lines]",
          "21:   var_dump(request('localhost', $serverPort, \"test_auth_digest.php\",",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php||hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php": [
          "File: hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php -> hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: require_once('test_base.inc');",
          "8: function disableIniZendCompatController($port) {",
          "10: }",
          "12: echo \"---Enable Ini Zend Compat ON---\\n\";",
          "",
          "[Removed Lines]",
          "9:   echo request(php_uname('n'), $port, 'test_disable_ini_zend_compat.php');",
          "",
          "[Added Lines]",
          "9:   echo request('localhost', $port, 'test_disable_ini_zend_compat.php');",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/global_variables_server.php||hphp/test/server/fastcgi/tests/global_variables_server.php": [
          "File: hphp/test/server/fastcgi/tests/global_variables_server.php -> hphp/test/server/fastcgi/tests/global_variables_server.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:     $path = 'global_variables.php?var=GET&get=1';",
          "24:     $post = array('var' => 'POST', 'post' => 2);",
          "25:     $headers = array('Cookie' => 'var=COOKIE;cookie=3;');",
          "27:   }, $request[0]);",
          "28: }",
          "",
          "[Removed Lines]",
          "26:     echo request(php_uname('n'), $port, $path, $post, $headers, $extra) . \"\\n\";",
          "",
          "[Added Lines]",
          "26:     echo request('localhost', $port, $path, $post, $headers, $extra) . \"\\n\";",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/headerTest.php||hphp/test/server/fastcgi/tests/headerTest.php": [
          "File: hphp/test/server/fastcgi/tests/headerTest.php -> hphp/test/server/fastcgi/tests/headerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: function headerTestController($serverPort) {",
          "6:   $args = array('Authorization' => 'foo');",
          "8:                   [], ['PROXY' => 'foobar'], $args));",
          "9: }",
          "",
          "[Removed Lines]",
          "7:   var_dump(request(php_uname('n'), $serverPort, \"test_headers.php\",",
          "",
          "[Added Lines]",
          "7:   var_dump(request('localhost', $serverPort, \"test_headers.php\",",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/httpsTest.php||hphp/test/server/fastcgi/tests/httpsTest.php": [
          "File: hphp/test/server/fastcgi/tests/httpsTest.php -> hphp/test/server/fastcgi/tests/httpsTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: function httpsTestController($serverPort) {",
          "6:   $args = array('HTTPS' => '');",
          "8:                   [], [], $args));",
          "9: }",
          "",
          "[Removed Lines]",
          "7:   var_dump(request(php_uname('n'), $serverPort, \"test_https.php\",",
          "",
          "[Added Lines]",
          "7:   var_dump(request('localhost', $serverPort, \"test_https.php\",",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/invalid.php||hphp/test/server/fastcgi/tests/invalid.php": [
          "File: hphp/test/server/fastcgi/tests/invalid.php -> hphp/test/server/fastcgi/tests/invalid.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: require_once('test_base.inc');",
          "5: function invalidTestController($port) {",
          "8:   $filename = __DIR__.'/request-doesnotexist.dat';",
          "9:   $file = fopen($filename, 'rb');",
          "",
          "[Removed Lines]",
          "6:   $host = php_uname('n');",
          "",
          "[Added Lines]",
          "6:   $host = 'localhost';",
          "",
          "---------------"
        ],
        "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc": [
          "File: hphp/test/server/util/server_tests.inc -> hphp/test/server/util/server_tests.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "181: function checkServerId($serverPort, $expectedIds) {",
          "183:   $r = request($host, $serverPort, \"hello.php\");",
          "184:   if (preg_match('/Hello, World!(.*+)/', $r ?? '', &$matches)) {",
          "185:     foreach ((array)$expectedIds as $id) {",
          "",
          "[Removed Lines]",
          "182:   $host = php_uname('n');",
          "",
          "[Added Lines]",
          "182:   $host = 'localhost';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "218:   $r = \"\";",
          "219:   for ($i = 1; $i <= 10; $i++) {",
          "221:     if ($r === \"OK\") break;",
          "222:     usleep(100000);",
          "223:   }",
          "",
          "[Removed Lines]",
          "220:     $r = request(php_uname('n'), $adminPort, 'stop?instance-id='.$test_run_id);",
          "",
          "[Added Lines]",
          "220:     $r = request('localhost', $adminPort, 'stop?instance-id='.$test_run_id);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "286:     $headers = implode(\" \", $s);",
          "287:   }",
          "288:   $url = \"http://$host:$port/$path\";",
          "291:   $LOG_ROOT = ServerUtilServerTests::$LOG_ROOT;",
          "292:   $test_run_id = ServerUtilServerTests::$test_run_id;",
          "",
          "[Removed Lines]",
          "289:   $host_name = \"hphpd.debugger.\".php_uname('n');",
          "",
          "[Added Lines]",
          "289:   $host_name = \"hphpd.debugger.\".\\php_uname('n');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "304:       foreach ($requests as $request) {",
          "305:         $r = is_array($request) ? $request[0] : $request;",
          "306:         echo \"Requesting '$r'\\n\";",
          "308:       }",
          "309:     },",
          "310:     $customArgs,",
          "",
          "[Removed Lines]",
          "307:         var_dump(request(php_uname('n'), $serverPort, $request));",
          "",
          "[Added Lines]",
          "307:         var_dump(request('localhost', $serverPort, $request));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "036c2166189c87ea0a32b265094a894b2742a772",
      "candidate_info": {
        "commit_hash": "036c2166189c87ea0a32b265094a894b2742a772",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/036c2166189c87ea0a32b265094a894b2742a772",
        "files": [
          "hphp/test/server/util/server_tests.inc"
        ],
        "message": "Fix default FastCGI interface\n\nReviewed By: alexeyt\n\nDifferential Revision: D15567393",
        "before_after_code_files": [
          "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
          ],
          "candidate": [
            "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
          ]
        }
      },
      "candidate_diff": {
        "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc": [
          "File: hphp/test/server/util/server_tests.inc -> hphp/test/server/util/server_tests.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "181: function checkServerId($serverPort, $expectedIds) {",
          "183:   $r = request($host, $serverPort, \"hello.php\");",
          "184:   if (preg_match('/Hello, World!(.*+)/', $r ?? '', &$matches)) {",
          "185:     foreach ((array)$expectedIds as $id) {",
          "",
          "[Removed Lines]",
          "182:   $host = php_uname('n');",
          "",
          "[Added Lines]",
          "182:   $host = 'localhost';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "218:   $r = \"\";",
          "219:   for ($i = 1; $i <= 10; $i++) {",
          "221:     if ($r === \"OK\") break;",
          "222:     usleep(100000);",
          "223:   }",
          "",
          "[Removed Lines]",
          "220:     $r = request(php_uname('n'), $adminPort, 'stop?instance-id='.$test_run_id);",
          "",
          "[Added Lines]",
          "220:     $r = request('localhost', $adminPort, 'stop?instance-id='.$test_run_id);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "298:       foreach ($requests as $request) {",
          "299:         list($r) = (array)$request;",
          "300:         echo \"Requesting '$r'\\n\";",
          "302:       }",
          "303:     },",
          "304:     $customArgs,",
          "",
          "[Removed Lines]",
          "301:         var_dump(request(php_uname('n'), $serverPort, $request));",
          "",
          "[Added Lines]",
          "301:         var_dump(request('localhost', $serverPort, $request));",
          "",
          "---------------"
        ]
      }
    }
  ]
}