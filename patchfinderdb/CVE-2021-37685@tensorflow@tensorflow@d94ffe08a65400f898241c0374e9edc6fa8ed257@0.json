{
  "cve_id": "CVE-2021-37685",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions TFLite's [`expand_dims.cc`](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50) contains a vulnerability which allows reading one element outside of bounds of heap allocated data. If `axis` is a large negative value (e.g., `-100000`), then after the first `if` it would still be negative. The check following the `if` statement will pass and the `for` loop would read one element before the start of `input_dims.data` (when `i = 0`). We have patched the issue in GitHub commit d94ffe08a65400f898241c0374e9edc6fa8ed257. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "d94ffe08a65400f898241c0374e9edc6fa8ed257",
  "patch_info": {
    "commit_hash": "d94ffe08a65400f898241c0374e9edc6fa8ed257",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257",
    "files": [
      "tensorflow/lite/kernels/expand_dims.cc"
    ],
    "message": "Prevent an OOB read in `expand_dims.cc`\n\nThe for loop that follows this check assumes that `axis` is between `0` and `input_dims.size`. If user supplied `axis` is negative, the if code before this check is supposed to bring it back to positive (similar to how in Python one can do `l[-3]` to mean `l[-3 + len(l)]`).\n\nPiperOrigin-RevId: 387200206\nChange-Id: I162f4feba12d547c3a4340833ae682016a2ebfab",
    "before_after_code_files": [
      "tensorflow/lite/kernels/expand_dims.cc||tensorflow/lite/kernels/expand_dims.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/lite/kernels/expand_dims.cc||tensorflow/lite/kernels/expand_dims.cc": [
      "File: tensorflow/lite/kernels/expand_dims.cc -> tensorflow/lite/kernels/expand_dims.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "37:     axis = input_dims.size + 1 + axis;",
      "38:   }",
      "39:   TF_LITE_ENSURE(context, axis <= input_dims.size);",
      "41:   TfLiteIntArray* output_dims = TfLiteIntArrayCreate(input_dims.size + 1);",
      "42:   for (int i = 0; i < output_dims->size; ++i) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "40:   TF_LITE_ENSURE(context, axis >= 0);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "113956762c6ee9b120378245bb6ff0d6f749255b",
      "candidate_info": {
        "commit_hash": "113956762c6ee9b120378245bb6ff0d6f749255b",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/113956762c6ee9b120378245bb6ff0d6f749255b",
        "files": [
          "tensorflow/lite/kernels/expand_dims.cc"
        ],
        "message": "Prevent an OOB read in `expand_dims.cc`\n\nThe for loop that follows this check assumes that `axis` is between `0` and `input_dims.size`. If user supplied `axis` is negative, the if code before this check is supposed to bring it back to positive (similar to how in Python one can do `l[-3]` to mean `l[-3 + len(l)]`).\n\nPiperOrigin-RevId: 387200206\nChange-Id: I162f4feba12d547c3a4340833ae682016a2ebfab",
        "before_after_code_files": [
          "tensorflow/lite/kernels/expand_dims.cc||tensorflow/lite/kernels/expand_dims.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/expand_dims.cc||tensorflow/lite/kernels/expand_dims.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/expand_dims.cc||tensorflow/lite/kernels/expand_dims.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/expand_dims.cc||tensorflow/lite/kernels/expand_dims.cc": [
          "File: tensorflow/lite/kernels/expand_dims.cc -> tensorflow/lite/kernels/expand_dims.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:     axis = input_dims.size + 1 + axis;",
          "39:   }",
          "40:   TF_LITE_ENSURE(context, axis <= input_dims.size);",
          "42:   TfLiteIntArray* output_dims = TfLiteIntArrayCreate(input_dims.size + 1);",
          "43:   for (int i = 0; i < output_dims->size; ++i) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41:   TF_LITE_ENSURE(context, axis >= 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6fadd98fcbc77cc5ef124f76e29c2db1b87a4084",
      "candidate_info": {
        "commit_hash": "6fadd98fcbc77cc5ef124f76e29c2db1b87a4084",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/6fadd98fcbc77cc5ef124f76e29c2db1b87a4084",
        "files": [
          "tensorflow/lite/kernels/expand_dims.cc"
        ],
        "message": "Prevent an OOB read in `expand_dims.cc`\n\nThe for loop that follows this check assumes that `axis` is between `0` and `input_dims.size`. If user supplied `axis` is negative, the if code before this check is supposed to bring it back to positive (similar to how in Python one can do `l[-3]` to mean `l[-3 + len(l)]`).\n\nPiperOrigin-RevId: 387200206\nChange-Id: I162f4feba12d547c3a4340833ae682016a2ebfab",
        "before_after_code_files": [
          "tensorflow/lite/kernels/expand_dims.cc||tensorflow/lite/kernels/expand_dims.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/expand_dims.cc||tensorflow/lite/kernels/expand_dims.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/expand_dims.cc||tensorflow/lite/kernels/expand_dims.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/expand_dims.cc||tensorflow/lite/kernels/expand_dims.cc": [
          "File: tensorflow/lite/kernels/expand_dims.cc -> tensorflow/lite/kernels/expand_dims.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:     axis = input_dims.size + 1 + axis;",
          "38:   }",
          "39:   TF_LITE_ENSURE(context, axis <= input_dims.size);",
          "41:   TfLiteIntArray* output_dims = TfLiteIntArrayCreate(input_dims.size + 1);",
          "42:   for (int i = 0; i < output_dims->size; ++i) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:   TF_LITE_ENSURE(context, axis >= 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "44bd7767b802a256359af30c5ba06a430aa02638",
      "candidate_info": {
        "commit_hash": "44bd7767b802a256359af30c5ba06a430aa02638",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/44bd7767b802a256359af30c5ba06a430aa02638",
        "files": [
          "tensorflow/lite/kernels/expand_dims.cc"
        ],
        "message": "Prevent an OOB read in `expand_dims.cc`\n\nThe for loop that follows this check assumes that `axis` is between `0` and `input_dims.size`. If user supplied `axis` is negative, the if code before this check is supposed to bring it back to positive (similar to how in Python one can do `l[-3]` to mean `l[-3 + len(l)]`).\n\nPiperOrigin-RevId: 387200206\nChange-Id: I162f4feba12d547c3a4340833ae682016a2ebfab",
        "before_after_code_files": [
          "tensorflow/lite/kernels/expand_dims.cc||tensorflow/lite/kernels/expand_dims.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/expand_dims.cc||tensorflow/lite/kernels/expand_dims.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/expand_dims.cc||tensorflow/lite/kernels/expand_dims.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/expand_dims.cc||tensorflow/lite/kernels/expand_dims.cc": [
          "File: tensorflow/lite/kernels/expand_dims.cc -> tensorflow/lite/kernels/expand_dims.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:     axis = input_dims.size + 1 + axis;",
          "38:   }",
          "39:   TF_LITE_ENSURE(context, axis <= input_dims.size);",
          "41:   TfLiteIntArray* output_dims = TfLiteIntArrayCreate(input_dims.size + 1);",
          "42:   for (int i = 0; i < output_dims->size; ++i) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:   TF_LITE_ENSURE(context, axis >= 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7ee8e39cde1395f94fc0010e43ece6f282df3a35",
      "candidate_info": {
        "commit_hash": "7ee8e39cde1395f94fc0010e43ece6f282df3a35",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/7ee8e39cde1395f94fc0010e43ece6f282df3a35",
        "files": [
          "tensorflow/lite/kernels/expand_dims.cc"
        ],
        "message": "Prevent an OOB read in `expand_dims.cc`\n\nThe for loop that follows this check assumes that `axis` is between `0` and `input_dims.size`. If user supplied `axis` is negative, the if code before this check is supposed to bring it back to positive (similar to how in Python one can do `l[-3]` to mean `l[-3 + len(l)]`).\n\nPiperOrigin-RevId: 387200206\nChange-Id: I162f4feba12d547c3a4340833ae682016a2ebfab",
        "before_after_code_files": [
          "tensorflow/lite/kernels/expand_dims.cc||tensorflow/lite/kernels/expand_dims.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/expand_dims.cc||tensorflow/lite/kernels/expand_dims.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/expand_dims.cc||tensorflow/lite/kernels/expand_dims.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/expand_dims.cc||tensorflow/lite/kernels/expand_dims.cc": [
          "File: tensorflow/lite/kernels/expand_dims.cc -> tensorflow/lite/kernels/expand_dims.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:     axis = input_dims.size + 1 + axis;",
          "39:   }",
          "40:   TF_LITE_ENSURE(context, axis <= input_dims.size);",
          "42:   TfLiteIntArray* output_dims = TfLiteIntArrayCreate(input_dims.size + 1);",
          "43:   for (int i = 0; i < output_dims->size; ++i) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41:   TF_LITE_ENSURE(context, axis >= 0);",
          "",
          "---------------"
        ]
      }
    }
  ]
}