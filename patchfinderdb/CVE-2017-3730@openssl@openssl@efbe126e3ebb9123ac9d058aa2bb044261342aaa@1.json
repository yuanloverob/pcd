{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b7d2480c820531df2a5a300a7b24bbaa7755c288",
      "candidate_info": {
        "commit_hash": "b7d2480c820531df2a5a300a7b24bbaa7755c288",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b7d2480c820531df2a5a300a7b24bbaa7755c288",
        "files": [
          "crypto/evp/p_lib.c"
        ],
        "message": "GH1537: Avoid double-free in the EVP_PKEY API\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit d65c3615f6c658478503f4862f8055203a98038c)",
        "before_after_code_files": [
          "crypto/evp/p_lib.c||crypto/evp/p_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/evp/p_lib.c||crypto/evp/p_lib.c": [
          "File: crypto/evp/p_lib.c -> crypto/evp/p_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "398:         return;",
          "399:     REF_ASSERT_ISNT(i < 0);",
          "400:     EVP_PKEY_free_it(x);",
          "401:     sk_X509_ATTRIBUTE_pop_free(x->attributes, X509_ATTRIBUTE_free);",
          "402:     OPENSSL_free(x);",
          "403: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "401:     CRYPTO_THREAD_lock_free(x->lock);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "413:     ENGINE_finish(x->engine);",
          "414:     x->engine = NULL;",
          "415: #endif",
          "417: }",
          "419: static int unsup_alg(BIO *out, const EVP_PKEY *pkey, int indent,",
          "",
          "[Removed Lines]",
          "416:     CRYPTO_THREAD_lock_free(x->lock);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5ee32f27a618a013b3426ef0ae4e3daedb61b862",
      "candidate_info": {
        "commit_hash": "5ee32f27a618a013b3426ef0ae4e3daedb61b862",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/5ee32f27a618a013b3426ef0ae4e3daedb61b862",
        "files": [
          "Configurations/descrip.mms.tmpl"
        ],
        "message": "VMS build file template: assign 'arch' to local symbol table\n\nSince the local symbol table is looked up before the global symbol\ntable, 'arch' assigned in the local symbol table of the DCL where MMS\nis called would be seen before the 'arch' defined in descrip.mms.\nAssigning it to the local symbol table in descrip.mms removes that\nissue.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1853)\n(cherry picked from commit 3ee24d4acaff1c247db89c5cfcac17749dc3d7bc)",
        "before_after_code_files": [
          "Configurations/descrip.mms.tmpl||Configurations/descrip.mms.tmpl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/descrip.mms.tmpl||Configurations/descrip.mms.tmpl": [
          "File: Configurations/descrip.mms.tmpl -> Configurations/descrip.mms.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "223:         $(NODEBUG) !",
          "224:         $(NODEBUG) ! Figure out the architecture",
          "225:         $(NODEBUG) !",
          "227:         $(NODEBUG) !",
          "228:         $(NODEBUG) ! Set up logical names for the libraries, so LINK and",
          "229:         $(NODEBUG) ! running programs can use them.",
          "",
          "[Removed Lines]",
          "226:         $(NODEBUG) arch == f$edit( f$getsyi( \"arch_name\"), \"upcase\")",
          "",
          "[Added Lines]",
          "226:         $(NODEBUG) arch = f$edit( f$getsyi( \"arch_name\"), \"upcase\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eba44ca0a697845b2cf695d984f8d46a49c866f8",
      "candidate_info": {
        "commit_hash": "eba44ca0a697845b2cf695d984f8d46a49c866f8",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/eba44ca0a697845b2cf695d984f8d46a49c866f8",
        "files": [
          "Configurations/10-main.conf"
        ],
        "message": "Configurations/10-main.conf: fix omittions in commentary.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit d5a39c12f0331dd0d14dbfcf2b98921be4cbb1da)",
        "before_after_code_files": [
          "Configurations/10-main.conf||Configurations/10-main.conf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/10-main.conf||Configurations/10-main.conf": [
          "File: Configurations/10-main.conf -> Configurations/10-main.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "865:     #",
          "866:     # It takes pair of prior-set environment variables to make it work:",
          "867:     #",
          "869:     # CROSS_COMPILE=<prefix>",
          "870:     #",
          "871:     # As well as PATH adjusted to cover ${CROSS_COMPILE}gcc and company.",
          "",
          "[Removed Lines]",
          "868:     # CROSS_SYSROOT=/some/where/android-ndk-<ver>/platforms/android-<apiver>/arch-<",
          "",
          "[Added Lines]",
          "868:     # CROSS_SYSROOT=/some/where/android-ndk-<ver>/platforms/android-<apiver>/arch-<arch>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "874:     # ANDROID_NDK=/some/where/android-ndk-10d",
          "875:     # CROSS_SYSROOT=$ANDROID_NDK/platforms/android-14/arch-arm",
          "876:     # CROSS_COMPILE=arm-linux-adroideabi-",
          "878:     #",
          "879:     \"android\" => {",
          "880:         inherit_from     => [ \"linux-generic32\" ],",
          "",
          "[Removed Lines]",
          "877:     # PATH=$ANDROID_NDK/toolchains/arm-linux-androideabi-4.8/prebuild/linux-x86_64/",
          "",
          "[Added Lines]",
          "877:     # PATH=$ANDROID_NDK/toolchains/arm-linux-androideabi-4.8/prebuild/linux-x86_64/bin",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c04b1434e6741cfc6b6c29db2c34b46f5ccd3d99",
      "candidate_info": {
        "commit_hash": "c04b1434e6741cfc6b6c29db2c34b46f5ccd3d99",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c04b1434e6741cfc6b6c29db2c34b46f5ccd3d99",
        "files": [
          "crypto/aes/asm/aesv8-armx.pl",
          "crypto/armv4cpuid.pl",
          "crypto/modes/asm/ghashv8-armx.pl"
        ],
        "message": "ARMv4 assembly pack: harmonize Thumb-ification of iOS build.\n\nThree modules were left behind in a285992763f3961f69a8d86bf7dfff020a08cef9.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2617)\n\n(cherry picked from commit c93f06c12f10c07cea935abd78a07a037e27f155)",
        "before_after_code_files": [
          "crypto/aes/asm/aesv8-armx.pl||crypto/aes/asm/aesv8-armx.pl",
          "crypto/armv4cpuid.pl||crypto/armv4cpuid.pl",
          "crypto/modes/asm/ghashv8-armx.pl||crypto/modes/asm/ghashv8-armx.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/aes/asm/aesv8-armx.pl||crypto/aes/asm/aesv8-armx.pl": [
          "File: crypto/aes/asm/aesv8-armx.pl -> crypto/aes/asm/aesv8-armx.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: .text",
          "60: ___",
          "61: $code.=\".arch armv8-a+crypto\\n\"   if ($flavour =~ /64/);",
          "66: # Assembler mnemonics are an eclectic mix of 32- and 64-bit syntax,",
          "67: # NEON is mostly 32-bit mnemonics, integer - mostly 64. Goal is to",
          "",
          "[Removed Lines]",
          "62: $code.=\".arch armv7-a\\n.fpu neon\\n.code 32\\n\" if ($flavour !~ /64/);",
          "63:   #^^^^^^ this is done to simplify adoption by not depending",
          "64:   # on latest binutils.",
          "",
          "[Added Lines]",
          "62: $code.=<<___      if ($flavour !~ /64/);",
          "63: .arch armv7-a // don't confuse not-so-latest binutils with argv8 :-)",
          "64: .fpu neon",
          "65: .code 32",
          "66: #undef __thumb2__",
          "67: ___",
          "",
          "---------------"
        ],
        "crypto/armv4cpuid.pl||crypto/armv4cpuid.pl": [
          "File: crypto/armv4cpuid.pl -> crypto/armv4cpuid.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: .thumb",
          "28: #else",
          "29: .code 32",
          "30: #endif",
          "32: .align 5",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: #undef __thumb2__",
          "",
          "---------------"
        ],
        "crypto/modes/asm/ghashv8-armx.pl||crypto/modes/asm/ghashv8-armx.pl": [
          "File: crypto/modes/asm/ghashv8-armx.pl -> crypto/modes/asm/ghashv8-armx.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "67: .text",
          "68: ___",
          "69: $code.=\".arch armv8-a+crypto\\n\" if ($flavour =~ /64/);",
          "72: ################################################################################",
          "73: # void gcm_init_v8(u128 Htable[16],const u64 H[2]);",
          "",
          "[Removed Lines]",
          "70: $code.=\".fpu neon\\n.code 32\\n\" if ($flavour !~ /64/);",
          "",
          "[Added Lines]",
          "70: $code.=<<___    if ($flavour !~ /64/);",
          "71: .fpu neon",
          "72: .code 32",
          "73: #undef __thumb2__",
          "74: ___",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5a0d86c0e33eb7893517bc11c6bde188e81d5290",
      "candidate_info": {
        "commit_hash": "5a0d86c0e33eb7893517bc11c6bde188e81d5290",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/5a0d86c0e33eb7893517bc11c6bde188e81d5290",
        "files": [
          "test/asynctest.c"
        ],
        "message": "Add test to show wrong behavior of ASYNC_WAIT_CTX\n\nThis happens when a fd is added and then immediately removed from the\nASYNC_WAIT_CTX before pausing the job.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2581)\n(cherry picked from commit f44e63644d29e5908be52b7896d5031a5cf460eb)",
        "before_after_code_files": [
          "test/asynctest.c||test/asynctest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/asynctest.c||test/asynctest.c": [
          "File: test/asynctest.c -> test/asynctest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "49: {",
          "50:     ASYNC_JOB *job;",
          "51:     ASYNC_WAIT_CTX *waitctx;",
          "53:     job = ASYNC_get_current_job();",
          "54:     if (job == NULL)",
          "55:         return 0;",
          "56:     waitctx = ASYNC_get_wait_ctx(job);",
          "57:     if (waitctx == NULL)",
          "58:         return 0;",
          "59:     if (!ASYNC_WAIT_CTX_set_wait_fd(waitctx, waitctx, MAGIC_WAIT_FD, NULL, NULL))",
          "60:         return 0;",
          "61:     ASYNC_pause_job();",
          "63:     if (!ASYNC_WAIT_CTX_clear_fd(waitctx, waitctx))",
          "64:         return 0;",
          "",
          "[Removed Lines]",
          "52:     ASYNC_pause_job();",
          "",
          "[Added Lines]",
          "60:     ASYNC_pause_job();",
          "68:     if (!ASYNC_WAIT_CTX_clear_fd(waitctx, waitctx))",
          "69:         return 0;",
          "70:     ASYNC_pause_job();",
          "73:     if (!ASYNC_WAIT_CTX_set_wait_fd(waitctx, waitctx, MAGIC_WAIT_FD, NULL, NULL))",
          "74:         return 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "195:             || fd != MAGIC_WAIT_FD",
          "197:             || !ASYNC_WAIT_CTX_get_changed_fds(waitctx, NULL, &numfds, NULL,",
          "199:             || numfds != 1",
          "200:             || numdelfds != 0",
          "201:             || !ASYNC_WAIT_CTX_get_changed_fds(waitctx, &fd, &numfds, NULL,",
          "202:                                                &numdelfds)",
          "203:             || fd != MAGIC_WAIT_FD",
          "205:             || ASYNC_start_job(&job, waitctx, &funcret, waitfd, NULL, 0)",
          "207:             || !ASYNC_WAIT_CTX_get_all_fds(waitctx, NULL, &numfds)",
          "208:             || numfds != 0",
          "209:             || !ASYNC_WAIT_CTX_get_changed_fds(waitctx, NULL, &numfds, NULL,",
          "",
          "[Removed Lines]",
          "198:                                               &numdelfds)",
          "206:                 != ASYNC_FINISH",
          "",
          "[Added Lines]",
          "210:                                                &numdelfds)",
          "218:                 != ASYNC_PAUSE",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "213:             || !ASYNC_WAIT_CTX_get_changed_fds(waitctx, NULL, &numfds, &delfd,",
          "214:                                                &numdelfds)",
          "215:             || delfd != MAGIC_WAIT_FD",
          "216:             || funcret != 1) {",
          "217:         fprintf(stderr, \"test_ASYNC_get_wait_fd() failed\\n\");",
          "218:         ASYNC_WAIT_CTX_free(waitctx);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "229:             || ASYNC_start_job(&job, waitctx, &funcret, waitfd, NULL, 0)",
          "230:                 != ASYNC_FINISH",
          "231:             || !ASYNC_WAIT_CTX_get_all_fds(waitctx, NULL, &numfds)",
          "232:             || numfds != 0",
          "233:             || !ASYNC_WAIT_CTX_get_changed_fds(waitctx, NULL, &numfds, NULL,",
          "234:                                                &numdelfds)",
          "235:             || numfds != 0",
          "236:             || numdelfds != 0",
          "",
          "---------------"
        ]
      }
    }
  ]
}