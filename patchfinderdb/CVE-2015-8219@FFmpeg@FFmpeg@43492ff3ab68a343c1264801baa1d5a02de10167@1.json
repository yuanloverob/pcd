{
  "cve_id": "CVE-2015-8219",
  "cve_desc": "The init_tile function in libavcodec/jpeg2000dec.c in FFmpeg before 2.8.2 does not enforce minimum-value and maximum-value constraints on tile coordinates, which allows remote attackers to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact via crafted JPEG 2000 data.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "43492ff3ab68a343c1264801baa1d5a02de10167",
  "patch_info": {
    "commit_hash": "43492ff3ab68a343c1264801baa1d5a02de10167",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/43492ff3ab68a343c1264801baa1d5a02de10167",
    "files": [
      "libavcodec/jpeg2000dec.c"
    ],
    "message": "avcodec/jpeg2000dec: Clip all tile coordinates\n\nFixes out of array access\nFixes: b877a6b788a25c70e8b1d014f8628549/asan_heap-oob_1da2c3f_2324_5a1b329b0b3c4bb6b1d775660ac56717.r3d\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "before_after_code_files": [
      "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
    ]
  },
  "patch_diff": {
    "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c": [
      "File: libavcodec/jpeg2000dec.c -> libavcodec/jpeg2000dec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "826:     if (!tile->comp)",
      "827:         return AVERROR(ENOMEM);",
      "834:     for (compno = 0; compno < s->ncomponents; compno++) {",
      "835:         Jpeg2000Component *comp = tile->comp + compno;",
      "",
      "[Removed Lines]",
      "829:     tile->coord[0][0] = FFMAX(tilex       * s->tile_width  + s->tile_offset_x, s->image_offset_x);",
      "830:     tile->coord[0][1] = FFMIN((tilex + 1) * s->tile_width  + s->tile_offset_x, s->width);",
      "831:     tile->coord[1][0] = FFMAX(tiley       * s->tile_height + s->tile_offset_y, s->image_offset_y);",
      "832:     tile->coord[1][1] = FFMIN((tiley + 1) * s->tile_height + s->tile_offset_y, s->height);",
      "",
      "[Added Lines]",
      "829:     tile->coord[0][0] = av_clip(tilex       * s->tile_width  + s->tile_offset_x, s->image_offset_x, s->width);",
      "830:     tile->coord[0][1] = av_clip((tilex + 1) * s->tile_width  + s->tile_offset_x, s->image_offset_x, s->width);",
      "831:     tile->coord[1][0] = av_clip(tiley       * s->tile_height + s->tile_offset_y, s->image_offset_y, s->height);",
      "832:     tile->coord[1][1] = av_clip((tiley + 1) * s->tile_height + s->tile_offset_y, s->image_offset_y, s->height);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6c4a2f11ddde59719e672a09d519f031a2d3a20c",
      "candidate_info": {
        "commit_hash": "6c4a2f11ddde59719e672a09d519f031a2d3a20c",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/6c4a2f11ddde59719e672a09d519f031a2d3a20c",
        "files": [
          "libavcodec/jpeg2000dec.c"
        ],
        "message": "avcodec/jpeg2000dec: Add coords to Jpeg2000Tile\n\nThese will be needed in subsequent commits\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
          ],
          "candidate": [
            "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c": [
          "File: libavcodec/jpeg2000dec.c -> libavcodec/jpeg2000dec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:     Jpeg2000QuantStyle  qntsty[4];",
          "63:     Jpeg2000TilePart    tile_part[256];",
          "64:     uint16_t tp_idx;                    // Tile-part index",
          "65: } Jpeg2000Tile;",
          "67: typedef struct Jpeg2000DecoderContext {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:     int coord[2][2];                    // border coordinates {{x0, x1}, {y0, y1}}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "740:     if (!tile->comp)",
          "741:         return AVERROR(ENOMEM);",
          "743:     for (compno = 0; compno < s->ncomponents; compno++) {",
          "744:         Jpeg2000Component *comp = tile->comp + compno;",
          "745:         Jpeg2000CodingStyle *codsty = tile->codsty + compno;",
          "746:         Jpeg2000QuantStyle  *qntsty = tile->qntsty + compno;",
          "747:         int ret; // global bandno",
          "753:         if (compno) {",
          "754:             comp->coord_o[0][0] /= s->cdx[compno];",
          "755:             comp->coord_o[0][1] /= s->cdx[compno];",
          "",
          "[Removed Lines]",
          "749:         comp->coord_o[0][0] = FFMAX(tilex       * s->tile_width  + s->tile_offset_x, s->image_offset_x);",
          "750:         comp->coord_o[0][1] = FFMIN((tilex + 1) * s->tile_width  + s->tile_offset_x, s->width);",
          "751:         comp->coord_o[1][0] = FFMAX(tiley       * s->tile_height + s->tile_offset_y, s->image_offset_y);",
          "752:         comp->coord_o[1][1] = FFMIN((tiley + 1) * s->tile_height + s->tile_offset_y, s->height);",
          "",
          "[Added Lines]",
          "744:     tile->coord[0][0] = FFMAX(tilex       * s->tile_width  + s->tile_offset_x, s->image_offset_x);",
          "745:     tile->coord[0][1] = FFMIN((tilex + 1) * s->tile_width  + s->tile_offset_x, s->width);",
          "746:     tile->coord[1][0] = FFMAX(tiley       * s->tile_height + s->tile_offset_y, s->image_offset_y);",
          "747:     tile->coord[1][1] = FFMIN((tiley + 1) * s->tile_height + s->tile_offset_y, s->height);",
          "755:         comp->coord_o[0][0] = tile->coord[0][0];",
          "756:         comp->coord_o[0][1] = tile->coord[0][1];",
          "757:         comp->coord_o[1][0] = tile->coord[1][0];",
          "758:         comp->coord_o[1][1] = tile->coord[1][1];",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "65d3359fb366ea265a8468d76a111cb7352f0b55",
      "candidate_info": {
        "commit_hash": "65d3359fb366ea265a8468d76a111cb7352f0b55",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/65d3359fb366ea265a8468d76a111cb7352f0b55",
        "files": [
          "libavcodec/jpeg2000dec.c"
        ],
        "message": "avcodec/jpeg2000dec: Fix potential integer overflow with tile dimensions\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
          ],
          "candidate": [
            "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c": [
          "File: libavcodec/jpeg2000dec.c -> libavcodec/jpeg2000dec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "830:     if (!tile->comp)",
          "831:         return AVERROR(ENOMEM);",
          "838:     for (compno = 0; compno < s->ncomponents; compno++) {",
          "839:         Jpeg2000Component *comp = tile->comp + compno;",
          "",
          "[Removed Lines]",
          "833:     tile->coord[0][0] = av_clip(tilex       * s->tile_width  + s->tile_offset_x, s->image_offset_x, s->width);",
          "834:     tile->coord[0][1] = av_clip((tilex + 1) * s->tile_width  + s->tile_offset_x, s->image_offset_x, s->width);",
          "835:     tile->coord[1][0] = av_clip(tiley       * s->tile_height + s->tile_offset_y, s->image_offset_y, s->height);",
          "836:     tile->coord[1][1] = av_clip((tiley + 1) * s->tile_height + s->tile_offset_y, s->image_offset_y, s->height);",
          "",
          "[Added Lines]",
          "833:     tile->coord[0][0] = av_clip(tilex       * (int64_t)s->tile_width  + s->tile_offset_x, s->image_offset_x, s->width);",
          "834:     tile->coord[0][1] = av_clip((tilex + 1) * (int64_t)s->tile_width  + s->tile_offset_x, s->image_offset_x, s->width);",
          "835:     tile->coord[1][0] = av_clip(tiley       * (int64_t)s->tile_height + s->tile_offset_y, s->image_offset_y, s->height);",
          "836:     tile->coord[1][1] = av_clip((tiley + 1) * (int64_t)s->tile_height + s->tile_offset_y, s->image_offset_y, s->height);",
          "",
          "---------------"
        ]
      }
    }
  ]
}