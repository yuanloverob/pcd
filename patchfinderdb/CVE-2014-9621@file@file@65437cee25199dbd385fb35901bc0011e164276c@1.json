{
  "cve_id": "CVE-2014-9621",
  "cve_desc": "The ELF parser in file 5.16 through 5.21 allows remote attackers to cause a denial of service via a long string.",
  "repo": "file/file",
  "patch_hash": "65437cee25199dbd385fb35901bc0011e164276c",
  "patch_info": {
    "commit_hash": "65437cee25199dbd385fb35901bc0011e164276c",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/65437cee25199dbd385fb35901bc0011e164276c",
    "files": [
      "src/readelf.c"
    ],
    "message": "Limit string printing to 100 chars, and add flags I forgot in the previous commit.",
    "before_after_code_files": [
      "src/readelf.c||src/readelf.c"
    ]
  },
  "patch_diff": {
    "src/readelf.c||src/readelf.c": [
      "File: src/readelf.c -> src/readelf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: #include \"file.h\"",
      "29: #ifndef lint",
      "31: #endif",
      "33: #ifdef BUILTIN_ELF",
      "",
      "[Removed Lines]",
      "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.115 2014/12/16 20:53:05 christos Exp $\")",
      "",
      "[Added Lines]",
      "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.116 2014/12/16 23:18:40 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "900:  }",
      "902:  if (namesz == 7 && strcmp((char *)&nbuf[noff], \"NetBSD\") == 0) {",
      "903:   switch (xnh_type) {",
      "904:       case NT_NETBSD_VERSION:",
      "905:    return size;",
      "906:   case NT_NETBSD_MARCH:",
      "907:    if (*flags & FLAGS_DID_NETBSD_MARCH)",
      "908:     return size;",
      "911:     return size;",
      "912:    break;",
      "913:   case NT_NETBSD_CMODEL:",
      "914:    if (*flags & FLAGS_DID_NETBSD_CMODEL)",
      "915:     return size;",
      "916:    if (file_printf(ms, \", compiler model: %.*s\",",
      "917:        (int)descsz, (const char *)&nbuf[doff]) == -1)",
      "918:     return size;",
      "",
      "[Removed Lines]",
      "909:    if (file_printf(ms, \", compiled for: %.*s\", (int)descsz,",
      "910:        (const char *)&nbuf[doff]) == -1)",
      "",
      "[Added Lines]",
      "903:   if (descsz > 100)",
      "904:    descsz = 100;",
      "912:    if (file_printf(ms, \", compiled for: %.*s\",",
      "913:        (int)descsz, (const char *)&nbuf[doff]) == -1)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d5f2c28536f1645e3da25fa3f8da5a0a45404dc4",
      "candidate_info": {
        "commit_hash": "d5f2c28536f1645e3da25fa3f8da5a0a45404dc4",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/d5f2c28536f1645e3da25fa3f8da5a0a45404dc4",
        "files": [
          "ChangeLog",
          "src/file.h",
          "src/gmtime_r.c",
          "src/localtime_r.c",
          "src/magic.c",
          "src/readelf.c"
        ],
        "message": "PR/466: Windows fixes.",
        "before_after_code_files": [
          "src/file.h||src/file.h",
          "src/gmtime_r.c||src/gmtime_r.c",
          "src/localtime_r.c||src/localtime_r.c",
          "src/magic.c||src/magic.c",
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/file.h||src/file.h": [
          "File: src/file.h -> src/file.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "44:     #define SIZE_T_FORMAT \"\"",
          "45:   #endif",
          "46:   #define INT64_T_FORMAT \"I64\"",
          "47: #else",
          "48:   #define SIZE_T_FORMAT \"z\"",
          "49:   #define INT64_T_FORMAT \"ll\"",
          "50: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47:   #define INTMAX_T_FORMAT \"I64\"",
          "51:   #define INTMAX_T_FORMAT \"j\"",
          "",
          "---------------"
        ],
        "src/gmtime_r.c||src/gmtime_r.c": [
          "File: src/gmtime_r.c -> src/gmtime_r.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: #include \"file.h\"",
          "4: #ifndef lint",
          "7: #include <time.h>",
          "8: #include <string.h>",
          "11: struct tm *",
          "13: {",
          "14:  struct tm *tmp = gmtime(t);",
          "15:  if (tmp == NULL)",
          "",
          "[Removed Lines]",
          "5: FILE_RCSID(\"@(#)$File: asctime_r.c,v 1.1 2012/05/15 17:14:36 christos Exp $\")",
          "12: gmtime_r(const time_t t, struct tm *tm)",
          "",
          "[Added Lines]",
          "5: FILE_RCSID(\"@(#)$File: gmtime_r.c,v 1.1 2015/01/09 19:28:32 christos Exp $\")",
          "12: gmtime_r(const time_t *t, struct tm *tm)",
          "",
          "---------------"
        ],
        "src/localtime_r.c||src/localtime_r.c": [
          "File: src/localtime_r.c -> src/localtime_r.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: #include \"file.h\"",
          "4: #ifndef lint",
          "7: #include <time.h>",
          "8: #include <string.h>",
          "11: struct tm *",
          "13: {",
          "14:  struct tm *tmp = localtime(t);",
          "15:  if (tmp == NULL)",
          "",
          "[Removed Lines]",
          "5: FILE_RCSID(\"@(#)$File: asctime_r.c,v 1.1 2012/05/15 17:14:36 christos Exp $\")",
          "12: localtime_r(const time_t t, struct tm *tm)",
          "",
          "[Added Lines]",
          "5: FILE_RCSID(\"@(#)$File: localtime_r.c,v 1.1 2015/01/09 19:28:32 christos Exp $\")",
          "12: localtime_r(const time_t *t, struct tm *tm)",
          "",
          "---------------"
        ],
        "src/magic.c||src/magic.c": [
          "File: src/magic.c -> src/magic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #include \"file.h\"",
          "35: #ifndef lint",
          "39: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "36: FILE_RCSID(\"@(#)$File: magic.c,v 1.92 2015/01/02 21:29:39 christos Exp $\")",
          "",
          "[Added Lines]",
          "36: FILE_RCSID(\"@(#)$File: magic.c,v 1.93 2015/04/15 23:47:58 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "138:  PathRemoveFileSpecA(dllpath);",
          "140:  sp = strlen(dllpath);",
          "141:  if (sp > 3 && stricmp(&dllpath[sp - 3], \"bin\") == 0) {",
          "142:   _w32_append_path(hmagicpath,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "140:  if (module) {",
          "141:   char exepath[MAX_PATH];",
          "142:   GetModuleFileNameA(NULL, exepath, MAX_PATH);",
          "143:   PathRemoveFileSpecA(exepath);",
          "144:   if (stricmp(exepath, dllpath) == 0)",
          "145:    goto out;",
          "146:  }",
          "",
          "---------------"
        ],
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.119 2015/04/09 20:01:41 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.120 2015/06/16 14:18:07 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1054:   case SHT_NOTE:",
          "1055:    if (xsh_size + xsh_offset > (uintmax_t)fsize)  {",
          "1056:     if (file_printf(ms,",
          "1060:      return -1;",
          "1061:     return 0;",
          "1062:    }",
          "",
          "[Removed Lines]",
          "1057:         \", note offset/size 0x%jx+0x%jx exceeds\"",
          "1058:         \" file size 0x%jx\", (uintmax_t)xsh_offset,",
          "1059:         (uintmax_t)xsh_size, (uintmax_t)fsize) == -1)",
          "",
          "[Added Lines]",
          "1057:         \", note offset/size 0x%\" INTMAX_T_FORMAT",
          "1058:         \"x+0x%\" INTMAX_T_FORMAT \"x exceeds\"",
          "1059:         \" file size 0x%\" INTMAX_T_FORMAT \"x\",",
          "1060:         (uintmax_t)xsh_offset, (uintmax_t)xsh_size,",
          "1061:         (uintmax_t)fsize) == -1)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1065:         \" for note\");",
          "1066:     return -1;",
          "1067:    }",
          "1069:     file_badread(ms);",
          "1070:     free(nbuf);",
          "1071:     return -1;",
          "",
          "[Removed Lines]",
          "1068:    if (pread(fd, nbuf, xsh_size, xsh_offset) < (ssize_t)xsh_size) {",
          "",
          "[Added Lines]",
          "1070:    if (pread(fd, nbuf, xsh_size, xsh_offset) <",
          "1071:        (ssize_t)xsh_size) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fb33636ba72d84977e368e56d5d5f7f553f08a23",
      "candidate_info": {
        "commit_hash": "fb33636ba72d84977e368e56d5d5f7f553f08a23",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/fb33636ba72d84977e368e56d5d5f7f553f08a23",
        "files": [
          "src/readelf.c"
        ],
        "message": "fix sign-compare error.",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.120 2015/06/16 14:18:07 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.121 2015/07/11 14:41:37 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1053:   switch (xsh_type) {",
          "1054:   case SHT_NOTE:",
          "1056:     if (file_printf(ms,",
          "1057:         \", note offset/size 0x%\" INTMAX_T_FORMAT",
          "1058:         \"x+0x%\" INTMAX_T_FORMAT \"x exceeds\"",
          "",
          "[Removed Lines]",
          "1055:    if (xsh_size + xsh_offset > (uintmax_t)fsize)  {",
          "",
          "[Added Lines]",
          "1055:    if ((uintmax_t)(xsh_size + xsh_offset) >",
          "1056:        (uintmax_t)fsize) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8a905717660395b38ec4966493f6f1cf2f33946c",
      "candidate_info": {
        "commit_hash": "8a905717660395b38ec4966493f6f1cf2f33946c",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/8a905717660395b38ec4966493f6f1cf2f33946c",
        "files": [
          "src/readelf.c"
        ],
        "message": "adjust limits better (from NetBSD)",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.106 2014/11/22 23:57:44 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.107 2014/11/26 15:33:10 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "60: private uint32_t getu32(int, uint32_t);",
          "61: private uint64_t getu64(int, uint64_t);",
          "66: private int",
          "67: toomany(struct magic_set *ms, const char *name, uint16_t num)",
          "",
          "[Removed Lines]",
          "63: #define MAX_PHNUM 256",
          "64: #define MAX_SHNUM 1024",
          "",
          "[Added Lines]",
          "63: #define MAX_PHNUM 128",
          "64: #define MAX_SHNUM 32768",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "574a285880a2bf1064a94e7058d24ff14e403aeb",
      "candidate_info": {
        "commit_hash": "574a285880a2bf1064a94e7058d24ff14e403aeb",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/574a285880a2bf1064a94e7058d24ff14e403aeb",
        "files": [
          "src/readelf.c"
        ],
        "message": "Code to detect gnu attributes, and start of parser.",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.101 2014/03/11 17:13:18 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.102 2014/03/11 21:00:13 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1005:      file_badread(ms);",
          "1006:      return -1;",
          "1007:     }",
          "1008:     (void)memcpy(xcap_addr, cbuf, xcap_sizeof);",
          "1009:     switch (xcap_tag) {",
          "1010:     case CA_SUNW_NULL:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1008:     if (cbuf[0] == 'A') {",
          "1009: #ifdef notyet",
          "1010:      char *p = cbuf + 1;",
          "1011:      uint32_t len, tag;",
          "1012:      memcpy(&len, p, sizeof(len));",
          "1013:      p += 4;",
          "1014:      len = getu32(swap, len);",
          "1015:      if (memcmp(\"gnu\", p, 3) != 0) {",
          "1016:          if (file_printf(ms,",
          "1017:       \", unknown capability %.3s\", p)",
          "1018:       == -1)",
          "1019:       return -1;",
          "1020:          break;",
          "1021:      }",
          "1022:      p += strlen(p) + 1;",
          "1023:      tag = *p++;",
          "1024:      memcpy(&len, p, sizeof(len));",
          "1025:      p += 4;",
          "1026:      len = getu32(swap, len);",
          "1027:      if (tag != 1) {",
          "1028:          if (file_printf(ms, \", unknown gnu\"",
          "1029:       \" capability tag %d\", tag)",
          "1030:       == -1)",
          "1031:       return -1;",
          "1032:          break;",
          "1033:      }",
          "1035: #endif",
          "1036:      break;",
          "1037:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2d7ddd68af77ce6f5b4d3e1a496dfde7875f2790",
      "candidate_info": {
        "commit_hash": "2d7ddd68af77ce6f5b4d3e1a496dfde7875f2790",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/2d7ddd68af77ce6f5b4d3e1a496dfde7875f2790",
        "files": [
          "src/readelf.c"
        ],
        "message": "check the proper variable",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.109 2014/12/09 02:46:38 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.110 2014/12/09 02:47:07 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1285:     file_badread(ms);",
          "1286:   return -1;",
          "1287:  }",
          "1289:   fsize = st.st_size;",
          "1290:  else",
          "1291:   fsize = SIZE_UNKNOWN;",
          "",
          "[Removed Lines]",
          "1288:  if (S_ISREG(st.st_mode) || fsize != 0)",
          "",
          "[Added Lines]",
          "1288:  if (S_ISREG(st.st_mode) || st.st_size != 0)",
          "",
          "---------------"
        ]
      }
    }
  ]
}