{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6b8ae8e66d84ef363780c1b1f5c87c0771fca97a",
      "candidate_info": {
        "commit_hash": "6b8ae8e66d84ef363780c1b1f5c87c0771fca97a",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/6b8ae8e66d84ef363780c1b1f5c87c0771fca97a",
        "files": [
          "deps/v8/build/common.gypi"
        ],
        "message": "v8: reapply floating patches",
        "before_after_code_files": [
          "deps/v8/build/common.gypi||deps/v8/build/common.gypi"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/build/common.gypi||deps/v8/build/common.gypi": [
          "File: deps/v8/build/common.gypi -> deps/v8/build/common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "239:           'WIN32',",
          "240:         ],",
          "241:         'msvs_configuration_attributes': {",
          "243:           'IntermediateDirectory': '$(OutDir)\\\\obj\\\\$(ProjectName)',",
          "244:           'CharacterSet': '1',",
          "245:         },",
          "",
          "[Removed Lines]",
          "242:           'OutputDirectory': '<(DEPTH)\\\\build\\\\$(ConfigurationName)',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "271:         'target_conditions': [",
          "272:           ['_toolset==\"host\"', {",
          "273:             'variables': {",
          "275:             },",
          "276:             'cflags': [ '<(m32flag)' ],",
          "277:             'ldflags': [ '<(m32flag)' ],",
          "",
          "[Removed Lines]",
          "274:               'm32flag': '<!((echo | $(echo ${CXX_host:-$(which g++)}) -m32 -E - > /dev/null 2>&1) && echo -n \"-m32\" || true)',",
          "",
          "[Added Lines]",
          "273:               'm32flag': '<!((echo | $(echo ${CXX_host:-$(which g++)}) -m32 -E - > /dev/null 2>&1) && echo \"-m32\" || true)',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "281:           }],",
          "282:           ['_toolset==\"target\"', {",
          "283:             'variables': {",
          "285:             },",
          "286:             'cflags': [ '<(m32flag)' ],",
          "287:             'ldflags': [ '<(m32flag)' ],",
          "",
          "[Removed Lines]",
          "284:               'm32flag': '<!((echo | $(echo ${CXX_target:-${CXX:-$(which g++)}}) -m32 -E - > /dev/null 2>&1) && echo -n \"-m32\" || true)',",
          "",
          "[Added Lines]",
          "283:               'm32flag': '<!((echo | $(echo ${CXX_target:-${CXX:-$(which g++)}}) -m32 -E - > /dev/null 2>&1) && echo \"-m32\" || true)',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "324:         },",
          "325:         'conditions': [",
          "326:           ['OS==\"linux\" or OS==\"freebsd\" or OS==\"openbsd\" or OS==\"netbsd\"', {",
          "328:                         '-Wnon-virtual-dtor', '-Woverloaded-virtual' ],",
          "329:           }],",
          "330:         ],",
          "",
          "[Removed Lines]",
          "327:             'cflags': [ '-Wall', '<(werror)', '-W', '-Wno-unused-parameter',",
          "",
          "[Added Lines]",
          "326:             'cflags': [ '-Wno-unused-parameter',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8e57398b2032ca62712c3d846d22d4c04820bace",
      "candidate_info": {
        "commit_hash": "8e57398b2032ca62712c3d846d22d4c04820bace",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/8e57398b2032ca62712c3d846d22d4c04820bace",
        "files": [
          "lib/repl.js"
        ],
        "message": "Fix #2034 repl message for .clear when useGlobal=true",
        "before_after_code_files": [
          "lib/repl.js||lirepl.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/repl.js||lirepl.js": [
          "File: lib/repl.js -> lirepl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "712:     }",
          "713:   });",
          "715:   repl.defineCommand('clear', {",
          "717:     action: function() {",
          "719:       this.bufferedCommand = '';",
          "721:       this.displayPrompt();",
          "722:     }",
          "723:   });",
          "",
          "[Removed Lines]",
          "716:     help: 'Break, and also clear the local context',",
          "718:       this.outputStream.write('Clearing context...\\n');",
          "720:       this.resetContext(true);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4053c01b53f6345b33ac1f377eb9f8d6a84a8b65",
      "candidate_info": {
        "commit_hash": "4053c01b53f6345b33ac1f377eb9f8d6a84a8b65",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/4053c01b53f6345b33ac1f377eb9f8d6a84a8b65",
        "files": [
          "src/node_file.cc"
        ],
        "message": "First arg to fs.fchown is an int, not a string\n\nBug introduced by 26bfb6bea45348d6aaa213b4ee38ac002c429394\n\nFix isaacs/npm#2225",
        "before_after_code_files": [
          "src/node_file.cc||src/node_file.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_file.cc||src/node_file.cc": [
          "File: src/node_file.cc -> src/node_file.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "875:   HandleScope scope;",
          "877:   int len = args.Length();",
          "879:   if (len < 2) return TYPE_ERROR(\"uid required\");",
          "880:   if (len < 3) return TYPE_ERROR(\"gid required\");",
          "882:   if (!args[1]->IsInt32()) return TYPE_ERROR(\"uid must be an int\");",
          "883:   if (!args[2]->IsInt32()) return TYPE_ERROR(\"gid must be an int\");",
          "",
          "[Removed Lines]",
          "878:   if (len < 1) return TYPE_ERROR(\"path required\");",
          "881:   if (!args[0]->IsString()) return TYPE_ERROR(\"path must be a string\");",
          "",
          "[Added Lines]",
          "878:   if (len < 1) return TYPE_ERROR(\"fd required\");",
          "881:   if (!args[0]->IsInt32()) return TYPE_ERROR(\"fd must be an int\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "94d337eb0fbf78bda2af6938b4a65d3c94808caf",
      "candidate_info": {
        "commit_hash": "94d337eb0fbf78bda2af6938b4a65d3c94808caf",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/94d337eb0fbf78bda2af6938b4a65d3c94808caf",
        "files": [
          "lib/cluster.js",
          "test/simple/test-cluster-master-kill.js"
        ],
        "message": "cluster: kill workers when master dies\n\nThis patch will kill the worker once it has lost its connection with the parent.\nHowever if the worker are doing a suicide, other measures will be used.",
        "before_after_code_files": [
          "lib/cluster.js||licluster.js",
          "test/simple/test-cluster-master-kill.js||test/simple/test-cluster-master-kill.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/cluster.js||licluster.js": [
          "File: lib/cluster.js -> licluster.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "109:     silent: options.silent || false",
          "110:   };",
          "130:   cluster.emit('setup');",
          "131: };",
          "",
          "[Removed Lines]",
          "113:   process.on('uncaughtException', function(err) {",
          "115:     if (process.listeners('uncaughtException').length > 1) return;",
          "118:     if (!(err instanceof Error)) {",
          "119:       err = new Error(err);",
          "120:     }",
          "121:     console.error(err.stack);",
          "124:     quickDestroyCluster();",
          "126:     process.exit(1);",
          "127:   });",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "401:         process.exit(0);",
          "402:       });",
          "415:     } else {",
          "416:       process.exit(0);",
          "417:     }",
          "",
          "[Removed Lines]",
          "409:       setInterval(function() {",
          "410:         if (!self.process.connected) {",
          "411:           process.exit(0);",
          "412:         }",
          "413:       }, 200);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "509:   progress.check();",
          "510: };",
          "522: cluster._setupWorker = function() {",
          "524:   var worker = cluster.worker = new Worker();",
          "527:   worker.state = 'online';",
          "528:   sendInternalMessage(worker, { cmd: 'online' });",
          "",
          "[Removed Lines]",
          "514: function quickDestroyCluster() {",
          "515:   eachWorker(function(worker) {",
          "516:     worker.process.disconnect();",
          "517:     worker.process.kill();",
          "518:   });",
          "519: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-cluster-master-kill.js||test/simple/test-cluster-master-kill.js": [
          "File: test/simple/test-cluster-master-kill.js -> test/simple/test-cluster-master-kill.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: var common = require('../common');",
          "24: var assert = require('assert');",
          "25: var cluster = require('cluster');",
          "27: if (cluster.isWorker) {",
          "30:   var http = require('http');",
          "31:   http.Server().listen(common.PORT, '127.0.0.1');",
          "33: } else if (process.argv[2] === 'cluster') {",
          "35:   var worker = cluster.fork();",
          "38:   process.send({",
          "39:     pid: worker.process.pid",
          "40:   });",
          "43:   worker.once('listening', function() {",
          "44:     setTimeout(function() {",
          "45:       process.exit(0);",
          "46:     }, 1000);",
          "47:   });",
          "49: } else {",
          "52:   var fork = require('child_process').fork;",
          "55:   var isAlive = function(pid) {",
          "56:     try {",
          "58:       process.kill(pid, 0);",
          "60:       return true;",
          "61:     } catch (e) {",
          "62:       return false;",
          "63:     }",
          "64:   };",
          "67:   var master = fork(process.argv[1], ['cluster']);",
          "70:   var pid = null;",
          "71:   master.once('message', function(data) {",
          "72:     pid = data.pid;",
          "73:   });",
          "76:   var alive = true;",
          "77:   master.on('exit', function(code) {",
          "80:     assert.equal(code, 0);",
          "83:     setTimeout(function() {",
          "84:       alive = isAlive(pid);",
          "85:     }, 200);",
          "86:   });",
          "88:   process.once('exit', function() {",
          "90:     if (alive) {",
          "91:       process.kill(pid);",
          "92:     }",
          "94:     assert.equal(typeof pid, 'number', 'did not get worker pid info');",
          "95:     assert.equal(alive, false, 'worker was alive after master died');",
          "96:   });",
          "98: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e11b6b8f756a86f9f5061b0429c902b14503795b",
      "candidate_info": {
        "commit_hash": "e11b6b8f756a86f9f5061b0429c902b14503795b",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e11b6b8f756a86f9f5061b0429c902b14503795b",
        "files": [
          "lib/_debugger.js"
        ],
        "message": "Remove octal escape sequences and avoid reserved keyword\n\nBoth are errors in strict mode.",
        "before_after_code_files": [
          "lib/_debugger.js||li_debugger.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/_debugger.js||li_debugger.js": [
          "File: lib/_debugger.js -> li_debugger.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:   stdout = stdout || process.stdout;",
          "42:   var args = ['--debug-brk'].concat(argv),",
          "45:   stdin.resume();",
          "",
          "[Removed Lines]",
          "43:       interface = new Interface(stdin, stdout, args);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:         'Please report this bug.');",
          "50:     console.error(e.message);",
          "51:     console.error(e.stack);",
          "53:     process.exit(1);",
          "54:   });",
          "55: };",
          "",
          "[Removed Lines]",
          "52:     if (interface.child) interface.child.kill();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "702:   if (repl.useColors) {",
          "704:   }",
          "",
          "[Removed Lines]",
          "703:     tail = tail.replace(/(.+?)([^\\w]|$)/, '\\033[32m$1\\033[39m$2');",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}