{
  "cve_id": "CVE-2014-0236",
  "cve_desc": "file before 5.18, as used in the Fileinfo component in PHP before 5.6.0, allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a zero root_storage value in a CDF file, related to cdf.c and readcdf.c.",
  "repo": "php/php-src",
  "patch_hash": "f3f22ff5c697aef854ffc1918bce708b37481b0f",
  "patch_info": {
    "commit_hash": "f3f22ff5c697aef854ffc1918bce708b37481b0f",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/f3f22ff5c697aef854ffc1918bce708b37481b0f",
    "files": [
      "NEWS",
      "ext/fileinfo/libmagic/cdf.c",
      "ext/fileinfo/libmagic/cdf.h",
      "ext/fileinfo/libmagic/readcdf.c"
    ],
    "message": "Fixed bug #67329 fileinfo: NULL pointer deference flaw by processing certain CDF files",
    "before_after_code_files": [
      "ext/fileinfo/libmagic/cdf.c||ext/fileinfo/libmagic/cdf.c",
      "ext/fileinfo/libmagic/cdf.h||ext/fileinfo/libmagic/cdf.h",
      "ext/fileinfo/libmagic/readcdf.c||ext/fileinfo/libmagic/readcdf.c"
    ]
  },
  "patch_diff": {
    "ext/fileinfo/libmagic/cdf.c||ext/fileinfo/libmagic/cdf.c": [
      "File: ext/fileinfo/libmagic/cdf.c -> ext/fileinfo/libmagic/cdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: #include \"file.h\"",
      "37: #ifndef lint",
      "39: #endif",
      "41: #include <assert.h>",
      "",
      "[Removed Lines]",
      "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.53 2013/02/26 16:20:42 christos Exp $\")",
      "",
      "[Added Lines]",
      "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.55 2014/02/27 23:26:17 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "689: int",
      "690: cdf_read_short_stream(const cdf_info_t *info, const cdf_header_t *h,",
      "692: {",
      "693:  size_t i;",
      "694:  const cdf_directory_t *d;",
      "696:  for (i = 0; i < dir->dir_len; i++)",
      "697:   if (dir->dir_tab[i].d_type == CDF_DIR_TYPE_ROOT_STORAGE)",
      "698:    break;",
      "",
      "[Removed Lines]",
      "691:     const cdf_sat_t *sat, const cdf_dir_t *dir, cdf_stream_t *scn)",
      "",
      "[Added Lines]",
      "691:     const cdf_sat_t *sat, const cdf_dir_t *dir, cdf_stream_t *scn,",
      "692:     const cdf_directory_t **root)",
      "",
      "---------------"
    ],
    "ext/fileinfo/libmagic/cdf.h||ext/fileinfo/libmagic/cdf.h": [
      "File: ext/fileinfo/libmagic/cdf.h -> ext/fileinfo/libmagic/cdf.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "300: int cdf_read_ssat(const cdf_info_t *, const cdf_header_t *, const cdf_sat_t *,",
      "301:     cdf_sat_t *);",
      "302: int cdf_read_short_stream(const cdf_info_t *, const cdf_header_t *,",
      "304: int cdf_read_property_info(const cdf_stream_t *, const cdf_header_t *, uint32_t,",
      "305:     cdf_property_info_t **, size_t *, size_t *);",
      "306: int cdf_read_summary_info(const cdf_info_t *, const cdf_header_t *,",
      "",
      "[Removed Lines]",
      "303:     const cdf_sat_t *, const cdf_dir_t *, cdf_stream_t *);",
      "",
      "[Added Lines]",
      "303:     const cdf_sat_t *, const cdf_dir_t *, cdf_stream_t *,",
      "304:     const cdf_directory_t **);",
      "",
      "---------------"
    ],
    "ext/fileinfo/libmagic/readcdf.c||ext/fileinfo/libmagic/readcdf.c": [
      "File: ext/fileinfo/libmagic/readcdf.c -> ext/fileinfo/libmagic/readcdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "26: #include \"file.h\"",
      "28: #ifndef lint",
      "30: #endif",
      "32: #include <stdlib.h>",
      "",
      "[Removed Lines]",
      "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.37 2014/01/06 13:41:18 rrt Exp $\")",
      "",
      "[Added Lines]",
      "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.40 2014/03/06 15:23:33 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "77: # define strcasestr strstr",
      "78: #endif",
      "80: private const char *",
      "81: cdf_app_to_mime(const char *vbuf, const struct nv *nv)",
      "82: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "80: static const struct cv {",
      "81:  uint64_t clsid[2];",
      "82:  const char *mime;",
      "83: } clsid2mime[] = {",
      "84:  {",
      "85: #ifdef PHP_WIN32",
      "86:   { 0x00000000000c1084ui64, 0x46000000000000c0ui64 },",
      "87: #else",
      "88:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU },",
      "89: #endif",
      "90:   \"x-msi\",",
      "91:  }",
      "92: }, clsid2desc[] = {",
      "93:  {",
      "94: #ifdef PHP_WIN32",
      "95:   { 0x00000000000c1084ui64, 0x46000000000000c0ui64 },",
      "96: #else",
      "97:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU },",
      "98: #endif",
      "99:   \"MSI Installer\",",
      "100:  },",
      "101: };",
      "103: private const char *",
      "104: cdf_clsid_to_mime(const uint64_t clsid[2], const struct cv *cv)",
      "105: {",
      "106:  size_t i;",
      "107:  for (i = 0; cv[i].mime != NULL; i++) {",
      "108:   if (clsid[0] == cv[i].clsid[0] && clsid[1] == cv[i].clsid[1])",
      "109:    return cv[i].mime;",
      "110:  }",
      "111:  return NULL;",
      "112: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "96: private int",
      "97: cdf_file_property_info(struct magic_set *ms, const cdf_property_info_t *info,",
      "99: {",
      "100:         size_t i;",
      "101:         cdf_timestamp_t tp;",
      "",
      "[Removed Lines]",
      "98:     size_t count)",
      "",
      "[Added Lines]",
      "132:     size_t count, const cdf_directory_t *root_storage)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "108:  memset(&ts, 0, sizeof(ts));",
      "110:         for (i = 0; i < count; i++) {",
      "111:                 cdf_print_property_name(buf, sizeof(buf), info[i].pi_id);",
      "112:                 switch (info[i].pi_type) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "144:         if (!NOTMIME(ms) && root_storage)",
      "145:   str = cdf_clsid_to_mime(root_storage->d_storage_uuid, clsid2mime);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "163:                                                     buf, vbuf) == -1)",
      "164:                                                         return -1;",
      "165:                                         }",
      "167:         CDF_PROPERTY_NAME_OF_APPLICATION) {",
      "168:      str = cdf_app_to_mime(vbuf, app2mime);",
      "169:     }",
      "",
      "[Removed Lines]",
      "166:                                 } else if (info[i].pi_id ==",
      "",
      "[Added Lines]",
      "203:                                 } else if (str == NULL && info[i].pi_id ==",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "218: private int",
      "219: cdf_file_summary_info(struct magic_set *ms, const cdf_header_t *h,",
      "221: {",
      "222:         cdf_summary_info_header_t si;",
      "223:         cdf_property_info_t *info;",
      "",
      "[Removed Lines]",
      "220:     const cdf_stream_t *sst)",
      "",
      "[Added Lines]",
      "257:     const cdf_stream_t *sst, const cdf_directory_t *root_storage)",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "228:                 return -1;",
      "230:         if (NOTMIME(ms)) {",
      "231:                 if (file_printf(ms, \"Composite Document File V2 Document\")",
      "232:       == -1)",
      "233:                         return -1;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "268:   const char *str;",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "255:                                 return -2;",
      "256:                         break;",
      "257:                 }",
      "261:         free(info);",
      "263:         return m == -1 ? -2 : m;",
      "",
      "[Removed Lines]",
      "258:         }",
      "260:         m = cdf_file_property_info(ms, info, count);",
      "",
      "[Added Lines]",
      "297:   if (root_storage) {",
      "298:    str = cdf_clsid_to_mime(root_storage->d_storage_uuid, clsid2desc);",
      "299:    if (str)",
      "300:     if (file_printf(ms, \", %s\", str) == -1)",
      "301:      return -2;",
      "302:    }",
      "303:   }",
      "305:         m = cdf_file_property_info(ms, info, count, root_storage);",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "275:         int i;",
      "276:         const char *expn = \"\";",
      "277:         const char *corrupt = \"corrupt: \";",
      "279:         info.i_fd = fd;",
      "280:         info.i_buf = buf;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:         const cdf_directory_t *root_storage;",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "308:                 goto out2;",
      "309:         }",
      "312:                 expn = \"Cannot read short stream\";",
      "313:                 goto out3;",
      "314:         }",
      "",
      "[Removed Lines]",
      "311:         if ((i = cdf_read_short_stream(&info, &h, &sat, &dir, &sst)) == -1) {",
      "",
      "[Added Lines]",
      "357:         if ((i = cdf_read_short_stream(&info, &h, &sat, &dir, &sst,",
      "358:      &root_storage)) == -1) {",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "329: #ifdef CDF_DEBUG",
      "330:         cdf_dump_summary_info(&h, &scn);",
      "331: #endif",
      "334:  if (i == 0) {",
      "335:   const char *str = NULL;",
      "336:   cdf_directory_t *d;",
      "337:   char name[__arraycount(d->d_name)];",
      "338:   size_t j, k;",
      "340:    d = &dir.dir_tab[j];",
      "341:    for (k = 0; k < sizeof(name); k++)",
      "342:     name[k] = (char)cdf_tole2(d->d_name[k]);",
      "349:   }",
      "350:   if (NOTMIME(ms)) {",
      "351:    if (str != NULL) {",
      "",
      "[Removed Lines]",
      "332:         if ((i = cdf_file_summary_info(ms, &h, &scn)) < 0)",
      "333:                 expn = \"Can't expand summary_info\";",
      "339:   for (j = 0; j < dir.dir_len; j++) {",
      "343:    if (NOTMIME(ms))",
      "344:     str = cdf_app_to_mime(name, name2desc);",
      "345:    else",
      "346:     str = cdf_app_to_mime(name, name2mime);",
      "347:    if (str != NULL)",
      "348:     break;",
      "",
      "[Added Lines]",
      "379:         if ((i = cdf_file_summary_info(ms, &h, &scn, root_storage)) < 0)",
      "380:             expn = \"Can't expand summary_info\";",
      "388:   for (j = 0; str == NULL && j < dir.dir_len; j++) {",
      "392:    str = cdf_app_to_mime(name,",
      "393:        NOTMIME(ms) ? name2desc : name2mime);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0873f2bfb4f8ad0ecd5f4ae7805828ed34bc1565",
      "candidate_info": {
        "commit_hash": "0873f2bfb4f8ad0ecd5f4ae7805828ed34bc1565",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/0873f2bfb4f8ad0ecd5f4ae7805828ed34bc1565",
        "files": [
          "phpdbg.c",
          "phpdbg_help.c"
        ],
        "message": "remove -e option in favour of taking script from argv[]",
        "before_after_code_files": [
          "phpdbg.c||phpdbg.c",
          "phpdbg_help.c||phpdbg_help.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "phpdbg.c||phpdbg.c": [
          "File: phpdbg.c -> phpdbg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "569:  {'z', 1, \"load zend_extension\"},",
          "571:  {'q', 0, \"no banner\"},",
          "573:  {'v', 0, \"disable quietness\"},",
          "574:  {'s', 0, \"enable stepping\"},",
          "575:  {'b', 0, \"boring colours\"},",
          "",
          "[Removed Lines]",
          "572:  {'e', 1, \"exec\"},",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "997:     if (sapi_name) {",
          "998:      free(sapi_name);",
          "",
          "[Removed Lines]",
          "987:     exec_len = strlen(php_optarg);",
          "988:     if (exec_len) {",
          "989:      if (exec) {",
          "990:       free(exec);",
          "991:      }",
          "992:      exec = strdup(php_optarg);",
          "993:     }",
          "994:    } break;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1083:    } break;",
          "1084:   }",
          "1085:  }",
          "1087: #ifndef _WIN32",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1077:  if ((argc > php_optind) && (strcmp(argv[php_optind-1],\"--\") != SUCCESS))",
          "1078:  {",
          "1079:   exec_len = strlen(argv[php_optind]);",
          "1080:   if (exec_len) {",
          "1081:    if (exec) {",
          "1082:     free(exec);",
          "1083:    }",
          "1084:    exec = strdup(argv[php_optind]);",
          "1085:   }",
          "1086:   php_optind++;",
          "1087:  }",
          "",
          "---------------"
        ],
        "phpdbg_help.c||phpdbg_help.c": [
          "File: phpdbg_help.c -> phpdbg_help.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "361: \"  **-d**      **-d**memory_limit=4G   Set a php.ini directive\" CR",
          "362: \"  **-n**                          Disable default php.ini\" CR",
          "363: \"  **-q**                          Supress welcome banner\" CR",
          "365: \"  **-v**                          Enable oplog output\" CR",
          "366: \"  **-s**                          Enable stepping\" CR",
          "367: \"  **-b**                          Disable colour\" CR",
          "",
          "[Removed Lines]",
          "364: \"  **-e**      **-e**mytest.php        Set execution context\" CR",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "742f4704a97844654bde3f9f054e6678ef897a1a",
      "candidate_info": {
        "commit_hash": "742f4704a97844654bde3f9f054e6678ef897a1a",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/742f4704a97844654bde3f9f054e6678ef897a1a",
        "files": [
          "sapi/litespeed/lsapi_main.c"
        ],
        "message": "sapi/litespeed/lsapi_main.c: Fix bug #63228\n\nFix compiling error at line 606 (error: format not a string\nliteral and no format arguments [-Werror=format-security]",
        "before_after_code_files": [
          "sapi/litespeed/lsapi_main.c||sapi/litespeed/lsapi_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sapi/litespeed/lsapi_main.c||sapi/litespeed/lsapi_main.c": [
          "File: sapi/litespeed/lsapi_main.c -> sapi/litespeed/lsapi_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "615:         \"  args...    Arguments passed to script.\\n\";",
          "616:     php_output_startup();",
          "617:     php_output_activate(TSRMLS_C);",
          "619: #ifdef PHP_OUTPUT_NEWAPI",
          "620:     php_output_end_all(TSRMLS_C);",
          "621: #else",
          "",
          "[Removed Lines]",
          "618:     php_printf( usage );",
          "",
          "[Added Lines]",
          "618:     php_printf( \"%s\", usage );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "71a27605f4d8488bd5fd9e920934595e46d6a7e9",
      "candidate_info": {
        "commit_hash": "71a27605f4d8488bd5fd9e920934595e46d6a7e9",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/71a27605f4d8488bd5fd9e920934595e46d6a7e9",
        "files": [
          "sapi/fpm/fpm/fpm_stdio.c"
        ],
        "message": "5.6 have fpm_globals.force_stderr",
        "before_after_code_files": [
          "sapi/fpm/fpm/fpm_stdio.c||sapi/fpm/fpm/fpm_stdio.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sapi/fpm/fpm/fpm_stdio.c||sapi/fpm/fpm/fpm_stdio.c": [
          "File: sapi/fpm/fpm/fpm_stdio.c -> sapi/fpm/fpm/fpm_stdio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "269:   openlog(fpm_global_config.syslog_ident, LOG_PID | LOG_CONS, fpm_global_config.syslog_facility);",
          "270:   fpm_globals.error_log_fd = ZLOG_SYSLOG;",
          "271: #if HAVE_UNISTD_H",
          "273: #else",
          "274:   if (fpm_global_config.daemonize) {",
          "275: #endif",
          "",
          "[Removed Lines]",
          "272:   if (fpm_global_config.daemonize || !isatty(STDERR_FILENO)) {",
          "",
          "[Added Lines]",
          "272:   if (fpm_global_config.daemonize || (!isatty(STDERR_FILENO) && !fpm_globals.force_stderr)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0d5121a3c7e499cb27c7d5aa14d5e6ad62ecde34",
      "candidate_info": {
        "commit_hash": "0d5121a3c7e499cb27c7d5aa14d5e6ad62ecde34",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/0d5121a3c7e499cb27c7d5aa14d5e6ad62ecde34",
        "files": [
          "Zend/zend.c",
          "ext/interbase/php_ibase_includes.h",
          "ext/standard/html.c"
        ],
        "message": "fixed ZEND_DEBUG usage",
        "before_after_code_files": [
          "Zend/zend.c||Zend/zend.c",
          "ext/interbase/php_ibase_includes.h||ext/interbase/php_ibase_includes.h",
          "ext/standard/html.c||ext/standard/html.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Zend/zend.c||Zend/zend.c": [
          "File: Zend/zend.c -> Zend/zend.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "955:  zend_destroy_rsrc_list(&EG(regular_list) TSRMLS_CC);",
          "958:  if (GC_G(gc_enabled) && !CG(unclean_shutdown)) {",
          "959:   gc_collect_cycles(TSRMLS_C);",
          "960:  }",
          "",
          "[Removed Lines]",
          "957: #ifdef ZEND_DEBUG",
          "",
          "[Added Lines]",
          "957: #if ZEND_DEBUG",
          "",
          "---------------"
        ],
        "ext/interbase/php_ibase_includes.h||ext/interbase/php_ibase_includes.h": [
          "File: ext/interbase/php_ibase_includes.h -> ext/interbase/php_ibase_includes.h"
        ],
        "ext/standard/html.c||ext/standard/html.c": [
          "File: ext/standard/html.c -> ext/standard/html.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "901: #if 0",
          "902:   return php_mb2_int_to_char(buf, code);",
          "903: #else",
          "905:   assert(code <= 0xFFU);",
          "906: #endif",
          "",
          "[Removed Lines]",
          "904: #ifdef ZEND_DEBUG",
          "",
          "[Added Lines]",
          "904: #if ZEND_DEBUG",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "913:   return php_mb2_int_to_char(buf, code);",
          "914: #else",
          "916:   assert(code <= 0xFFU);",
          "917: #endif",
          "",
          "[Removed Lines]",
          "915: #ifdef ZEND_DEBUG",
          "",
          "[Added Lines]",
          "915: #if ZEND_DEBUG",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "17039ed362a3dd02efe0f9c50f02c86f5d2c0de8",
      "candidate_info": {
        "commit_hash": "17039ed362a3dd02efe0f9c50f02c86f5d2c0de8",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/17039ed362a3dd02efe0f9c50f02c86f5d2c0de8",
        "files": [
          "phpdbg_watch.c"
        ],
        "message": "PHP 5.4/5.5 compability in phpdbg_watch.c",
        "before_after_code_files": [
          "phpdbg_watch.c||phpdbg_watch.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "phpdbg_watch.c||phpdbg_watch.c": [
          "File: phpdbg_watch.c -> phpdbg_watch.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "580:  zend_llist_init(&PHPDBG_G(watchlist_mem), sizeof(void *), phpdbg_watch_mem_dtor, 1);",
          "581:  phpdbg_btree_init(&PHPDBG_G(watchpoint_tree), sizeof(void *) * 8);",
          "582:  phpdbg_btree_init(&PHPDBG_G(watch_HashTables), sizeof(void *) * 8);",
          "584: }",
          "586: static void phpdbg_print_changed_zval(phpdbg_watch_memdump *dump TSRMLS_DC) {",
          "",
          "[Removed Lines]",
          "583:  _zend_hash_init(&PHPDBG_G(watchpoints), 8, phpdbg_watch_dtor, 0 ZEND_FILE_LINE_CC);",
          "",
          "[Added Lines]",
          "583:  zend_hash_init(&PHPDBG_G(watchpoints), 8, NULL, phpdbg_watch_dtor, 0 ZEND_FILE_LINE_CC);",
          "",
          "---------------"
        ]
      }
    }
  ]
}