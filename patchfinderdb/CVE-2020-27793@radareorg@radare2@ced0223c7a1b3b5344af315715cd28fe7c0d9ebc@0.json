{
  "cve_id": "CVE-2020-27793",
  "cve_desc": "An off-by-one overflow flaw was found in radare2 due to mismatched array length in core_java.c. This could allow an attacker to cause a crash, and perform a denail of service attack.",
  "repo": "radareorg/radare2",
  "patch_hash": "ced0223c7a1b3b5344af315715cd28fe7c0d9ebc",
  "patch_info": {
    "commit_hash": "ced0223c7a1b3b5344af315715cd28fe7c0d9ebc",
    "repo": "radareorg/radare2",
    "commit_url": "https://github.com/radareorg/radare2/commit/ced0223c7a1b3b5344af315715cd28fe7c0d9ebc",
    "files": [
      "libr/core/p/core_java.c"
    ],
    "message": "Fix unmatched array length in core_java.c (issue #16304) (#16313)",
    "before_after_code_files": [
      "libr/core/p/core_java.c||libr/core/p/core_java.c"
    ]
  },
  "patch_diff": {
    "libr/core/p/core_java.c||libr/core/p/core_java.c": [
      "File: libr/core/p/core_java.c -> libr/core/p/core_java.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1465:  if (input[4] != ' ') {",
      "1466:   return r_cmd_java_handle_help (core, input);",
      "1467:  }",
      "1470:   IFDBG r_cons_printf (\"Checking cmd: %s %d\\n\", JAVA_CMDS[i].name,",
      "1471:    strncmp (input+5, JAVA_CMDS[i].name, JAVA_CMDS[i].name_len));",
      "",
      "[Removed Lines]",
      "1468:  for (; i < END_CMDS; i++) {",
      "",
      "[Added Lines]",
      "1468:  for (; i < END_CMDS - 1; i++) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "122948b4660ac272942c57b17ab011f44214acb6",
      "candidate_info": {
        "commit_hash": "122948b4660ac272942c57b17ab011f44214acb6",
        "repo": "radareorg/radare2",
        "commit_url": "https://github.com/radareorg/radare2/commit/122948b4660ac272942c57b17ab011f44214acb6",
        "files": [
          "libr/core/p/core_java.c"
        ],
        "message": "Fix UB in core.java plugin (#17831)\n\n* Fix UB in core.java plugin\n\nlibr/core/p/core_java.c: In function 'r_cmd_java_handle_help':\nlibr/core/p/core_java.c:390:34: warning: iteration 20 invokes undefined behavior [-Waggressive-loop-optimizations]\n   help_msg[3 + (i * 3) + 0] = cmd->name;\n                               ~~~^~~~~~\nlibr/..//libr/core/p/core_java.c:388:2: note: within this loop\n  for (i = 0; i < END_CMDS; i++) {\n\n* Cleanup and remove last LIST_CODE_REFS refs for core.java\n* lcr command was removed in 3ead80cca8a9e03ce4c755718d6772cf583d5716",
        "before_after_code_files": [
          "libr/core/p/core_java.c||libr/core/p/core_java.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libr/core/p/core_java.c||libr/core/p/core_java.c"
          ],
          "candidate": [
            "libr/core/p/core_java.c||libr/core/p/core_java.c"
          ]
        }
      },
      "candidate_diff": {
        "libr/core/p/core_java.c||libr/core/p/core_java.c": [
          "File: libr/core/p/core_java.c -> libr/core/p/core_java.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "212: #define SUMMARY_INFO_DESC \"print summary information for the current java class file\"",
          "213: #define SUMMARY_INFO_LEN 7",
          "220: #define PRINT_EXC \"exc\"",
          "221: #define PRINT_EXC_ARGS \" [<addr>]\"",
          "222: #define PRINT_EXC_DESC \"list all exceptions to fields and methods in code sections\"",
          "",
          "[Removed Lines]",
          "215: #define LIST_CODE_REFS \"lcr\"",
          "216: #define LIST_CODE_REFS_ARGS \" [addr]\"",
          "217: #define LIST_CODE_REFS_DESC \"list all references to fields and methods in code sections\"",
          "218: #define LIST_CODE_REFS_LEN 3",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "253:  { INSERT_MREF, INSERT_MREF_ARGS, INSERT_MREF_DESC, INSERT_MREF_LEN, r_cmd_java_handle_insert_method_ref },",
          "254:  { CALC_SZ, CALC_SZ_ARGS, CALC_SZ_DESC, CALC_SZ_LEN, r_cmd_java_handle_calc_class_sz },",
          "255:  { ISVALID, ISVALID_ARGS, ISVALID_DESC, ISVALID_LEN, r_cmd_java_handle_isvalid },",
          "256: };",
          "258: enum {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "251:  { NULL, NULL, NULL, 0, NULL }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "271:  REPLACE_CLASS_NAME_IDX = 12,",
          "272:  RELOAD_BIN_IDX = 13,",
          "273:  SUMMARY_INFO_IDX = 14,",
          "281: };",
          "283: static ut8 _(r_cmd_java_obj_ref)(const char *name, const char *class_name, ut32 len) {",
          "",
          "[Removed Lines]",
          "274:  LIST_CODE_REFS_IDX = 15,",
          "275:  PRINT_EXC_IDX = 16,",
          "276:  YARA_CODE_REFS_IDX = 17,",
          "277:  INSERT_MREF_IDX = 18,",
          "278:  CALC_SZ_IDX = 19,",
          "279:  ISVALID_IDX = 20,",
          "280:  END_CMDS = 21,",
          "",
          "[Added Lines]",
          "270:  PRINT_EXC_IDX = 15,",
          "271:  YARA_CODE_REFS_IDX = 16,",
          "272:  INSERT_MREF_IDX = 17,",
          "273:  CALC_SZ_IDX = 18,",
          "274:  ISVALID_IDX = 19,",
          "275:  END_CMDS = 20,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "385:  help_msg[0] = \"Usage:\";",
          "386:  help_msg[1] = \"java [cmd] [arg..] \";",
          "387:  help_msg[2] = r_core_plugin_java.desc;",
          "389:   RCmdJavaCmd *cmd = &JAVA_CMDS[i];",
          "390:   help_msg[3 + (i * 3) + 0] = cmd->name;",
          "391:   help_msg[3 + (i * 3) + 1] = cmd->args;",
          "",
          "[Removed Lines]",
          "388:  for (i = 0; i < END_CMDS; i++) {",
          "",
          "[Added Lines]",
          "383:  for (i = 0; JAVA_CMDS[i].name; i++) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1462:  if (input[4] != ' ') {",
          "1463:   return r_cmd_java_handle_help (core, input);",
          "1464:  }",
          "1467:   IFDBG r_cons_printf (\"Checking cmd: %s %d\\n\", JAVA_CMDS[i].name,",
          "1468:    strncmp (input + 5, JAVA_CMDS[i].name, JAVA_CMDS[i].name_len));",
          "",
          "[Removed Lines]",
          "1465:  for (; i < END_CMDS - 1; i++) {",
          "",
          "[Added Lines]",
          "1460:  for (; JAVA_CMDS[i].name; i++) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1854:  const char *p = input? r_cmd_java_consumetok (input, ' ', -1): NULL, *n = NULL;",
          "1855:  char *classname = NULL, *name = NULL, *descriptor = NULL;",
          "1856:  ut32 cn_sz = 0, n_sz = 0, d_sz = 0;",
          "1859:  if (!bin) {",
          "1861:  }",
          "1862:  if (!anal || !anal->fcns || r_list_length (anal->fcns) == 0) {",
          "1863:   eprintf (\"Unable to access the current analysis, perform 'af' for function analysis.\\n\");",
          "1864:   return true;",
          "1865:  }",
          "1866:  if (!p) {",
          "1868:  }",
          "1870:  n = p && *p? r_cmd_java_strtok (p, ' ', -1): NULL;",
          "1871:  classname = n && p && p != n? malloc (n - p + 1): NULL;",
          "1872:  cn_sz = n && p? n - p + 1: 0;",
          "1873:  if (!classname) {",
          "1875:  }",
          "1877:  snprintf (classname, cn_sz, \"%s\", p);",
          "",
          "[Removed Lines]",
          "1857:  int res = false;",
          "1860:   return res;",
          "1867:   return res;",
          "1874:   return res;",
          "",
          "[Added Lines]",
          "1849:   return false;",
          "1856:   return false;",
          "1863:   return false;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1881:  n_sz = n && p? n - p + 1: 0;",
          "1882:  if (!name) {",
          "1883:   free (classname);",
          "1885:  }",
          "1886:  snprintf (name, n_sz, \"%s\", p);",
          "",
          "[Removed Lines]",
          "1884:   return res;",
          "",
          "[Added Lines]",
          "1873:   return false;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1898:  if (!descriptor) {",
          "1899:   free (classname);",
          "1900:   free (name);",
          "1902:  }",
          "1903:  snprintf (descriptor, d_sz, \"%s\", p);",
          "",
          "[Removed Lines]",
          "1901:   return res;",
          "",
          "[Added Lines]",
          "1890:   return false;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1906:  free (classname);",
          "1907:  free (name);",
          "1908:  free (descriptor);",
          "1911: }",
          "1913: static int r_cmd_java_handle_print_exceptions(RCore *core, const char *input) {",
          "1914:  RAnal *anal = get_anal (core);",
          "1915:  RBinJavaObj *bin = (RBinJavaObj *) r_cmd_java_get_bin_obj (anal);",
          "1917:  RBinJavaField *method;",
          "1918:  ut64 func_addr = -1;",
          "1919:  RBinJavaExceptionEntry *exc_entry;",
          "",
          "[Removed Lines]",
          "1909:  res = true;",
          "1910:  return res;",
          "1916:  RListIter *exc_iter = NULL, *methods_iter=NULL;",
          "",
          "[Added Lines]",
          "1898:  return true;",
          "1904:  RListIter *exc_iter = NULL, *methods_iter = NULL;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1926:  }",
          "1928:  r_list_foreach (bin->methods_list, methods_iter, method) {",
          "1931:   ut8 do_this_one = start <= func_addr && func_addr <= end;",
          "1932:   RList *exc_table = NULL;",
          "1933:   do_this_one = func_addr == (ut64)-1? 1: do_this_one;",
          "",
          "[Removed Lines]",
          "1929:   ut64 start = r_bin_java_get_method_start (bin, method),",
          "1930:        end = r_bin_java_get_method_end (bin, method);",
          "",
          "[Added Lines]",
          "1917:   ut64 start = r_bin_java_get_method_start (bin, method);",
          "1918:   ut64 end = r_bin_java_get_method_end (bin, method);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1936:   }",
          "1937:   exc_table = r_bin_java_get_method_exception_table_with_addr (bin, start);",
          "1940:    r_cons_printf (\" Exception table for %s @ 0x%\"PFMT64x\":\\n\", method->name, start);",
          "1941:    r_cons_printf (\" [ NONE ]\\n\");",
          "1942:   } else {",
          "",
          "[Removed Lines]",
          "1939:   if (r_list_length (exc_table) == 0){",
          "",
          "[Added Lines]",
          "1927:   if (r_list_length (exc_table) == 0) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}