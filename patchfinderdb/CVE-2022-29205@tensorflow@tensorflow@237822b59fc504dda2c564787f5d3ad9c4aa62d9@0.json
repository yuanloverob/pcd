{
  "cve_id": "CVE-2022-29205",
  "cve_desc": "TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, there is a potential for segfault / denial of service in TensorFlow by calling `tf.compat.v1.*` ops which don't yet have support for quantized types, which was added after migration to TensorFlow 2.x. In these scenarios, since the kernel is missing, a `nullptr` value is passed to `ParseDimensionValue` for the `py_value` argument. Then, this is dereferenced, resulting in segfault. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "237822b59fc504dda2c564787f5d3ad9c4aa62d9",
  "patch_info": {
    "commit_hash": "237822b59fc504dda2c564787f5d3ad9c4aa62d9",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/237822b59fc504dda2c564787f5d3ad9c4aa62d9",
    "files": [
      "tensorflow/core/kernels/strided_slice_op.cc",
      "tensorflow/core/kernels/strided_slice_op_impl.h",
      "tensorflow/python/eager/pywrap_tfe_src.cc"
    ],
    "message": "Fix tf.compat.v1.placeholder_with_default vulnerability with quantized types.\n\nWhen iterating through the tensor to extract shape values, an underlying missing kernel\n(`StridedSlice` for quantized types) causes an error, which then results in a `nullptr`\nbeing passed to `ParseDimensionValue()`, causing a segfault.\n\nThe `nullptr` check allows the missing kernel error to propagate.\nAdding the missing kernel registrations allows the shape values\nto be extracted successfully.\n\nPiperOrigin-RevId: 445045957",
    "before_after_code_files": [
      "tensorflow/core/kernels/strided_slice_op.cc||tensorflow/core/kernels/strided_slice_op.cc",
      "tensorflow/core/kernels/strided_slice_op_impl.h||tensorflow/core/kernels/strided_slice_op_impl.h",
      "tensorflow/python/eager/pywrap_tfe_src.cc||tensorflow/python/eager/pywrap_tfe_src.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/strided_slice_op.cc||tensorflow/core/kernels/strided_slice_op.cc": [
      "File: tensorflow/core/kernels/strided_slice_op.cc -> tensorflow/core/kernels/strided_slice_op.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "431:                           StridedSliceAssignOp<CPUDevice, type, true>)",
      "433: TF_CALL_ALL_TYPES(REGISTER_STRIDED_SLICE);",
      "435: #undef REGISTER_STRIDED_SLICE",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "434: TF_CALL_QUANTIZED_TYPES(REGISTER_STRIDED_SLICE);",
      "",
      "---------------"
    ],
    "tensorflow/core/kernels/strided_slice_op_impl.h||tensorflow/core/kernels/strided_slice_op_impl.h": [
      "File: tensorflow/core/kernels/strided_slice_op_impl.h -> tensorflow/core/kernels/strided_slice_op_impl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "292: #endif  // END GOOGLE_CUDA || TENSORFLOW_USE_ROCM",
      "294: TF_CALL_ALL_TYPES(DECLARE_FOR_N_CPU);",
      "297: #undef INSTANTIATE",
      "298: #undef DECLARE_FOR_N_CPU",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "295: TF_CALL_QUANTIZED_TYPES(DECLARE_FOR_N_CPU);",
      "",
      "---------------"
    ],
    "tensorflow/python/eager/pywrap_tfe_src.cc||tensorflow/python/eager/pywrap_tfe_src.cc": [
      "File: tensorflow/python/eager/pywrap_tfe_src.cc -> tensorflow/python/eager/pywrap_tfe_src.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "688:       for (int i = 0; i < num_dims; ++i) {",
      "689:         tensorflow::Safe_PyObjectPtr inner_py_value(",
      "690:             PySequence_ITEM(py_value, i));",
      "691:         if (inner_py_value.get() == Py_None) {",
      "692:           dims[i] = -1;",
      "694:                                         &dims[i])) {",
      "695:           return false;",
      "696:         }",
      "",
      "[Removed Lines]",
      "693:         } else if (!ParseDimensionValue(key, inner_py_value.get(), status,",
      "",
      "[Added Lines]",
      "695:         } else if (inner_py_value.get() == nullptr ||",
      "696:                    !ParseDimensionValue(key, inner_py_value.get(), status,",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6e91b68ddada8832eab2dda7c7955cdbc7c4e312",
      "candidate_info": {
        "commit_hash": "6e91b68ddada8832eab2dda7c7955cdbc7c4e312",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/6e91b68ddada8832eab2dda7c7955cdbc7c4e312",
        "files": [
          "tensorflow/core/kernels/strided_slice_op.cc",
          "tensorflow/core/kernels/strided_slice_op_impl.h",
          "tensorflow/python/eager/pywrap_tfe_src.cc"
        ],
        "message": "Fix tf.compat.v1.placeholder_with_default vulnerability with quantized types.\n\nWhen iterating through the tensor to extract shape values, an underlying missing kernel\n(`StridedSlice` for quantized types) causes an error, which then results in a `nullptr`\nbeing passed to `ParseDimensionValue()`, causing a segfault.\n\nThe `nullptr` check allows the missing kernel error to propagate.\nAdding the missing kernel registrations allows the shape values\nto be extracted successfully.\n\nPiperOrigin-RevId: 445045957",
        "before_after_code_files": [
          "tensorflow/core/kernels/strided_slice_op.cc||tensorflow/core/kernels/strided_slice_op.cc",
          "tensorflow/core/kernels/strided_slice_op_impl.h||tensorflow/core/kernels/strided_slice_op_impl.h",
          "tensorflow/python/eager/pywrap_tfe_src.cc||tensorflow/python/eager/pywrap_tfe_src.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/strided_slice_op.cc||tensorflow/core/kernels/strided_slice_op.cc",
            "tensorflow/core/kernels/strided_slice_op_impl.h||tensorflow/core/kernels/strided_slice_op_impl.h",
            "tensorflow/python/eager/pywrap_tfe_src.cc||tensorflow/python/eager/pywrap_tfe_src.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/strided_slice_op.cc||tensorflow/core/kernels/strided_slice_op.cc",
            "tensorflow/core/kernels/strided_slice_op_impl.h||tensorflow/core/kernels/strided_slice_op_impl.h",
            "tensorflow/python/eager/pywrap_tfe_src.cc||tensorflow/python/eager/pywrap_tfe_src.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/strided_slice_op.cc||tensorflow/core/kernels/strided_slice_op.cc": [
          "File: tensorflow/core/kernels/strided_slice_op.cc -> tensorflow/core/kernels/strided_slice_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "431:                           StridedSliceAssignOp<CPUDevice, type, true>)",
          "433: TF_CALL_ALL_TYPES(REGISTER_STRIDED_SLICE);",
          "435: #undef REGISTER_STRIDED_SLICE",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "434: TF_CALL_QUANTIZED_TYPES(REGISTER_STRIDED_SLICE);",
          "",
          "---------------"
        ],
        "tensorflow/core/kernels/strided_slice_op_impl.h||tensorflow/core/kernels/strided_slice_op_impl.h": [
          "File: tensorflow/core/kernels/strided_slice_op_impl.h -> tensorflow/core/kernels/strided_slice_op_impl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "292: #endif  // END GOOGLE_CUDA || TENSORFLOW_USE_ROCM",
          "294: TF_CALL_ALL_TYPES(DECLARE_FOR_N_CPU);",
          "297: #undef INSTANTIATE",
          "298: #undef DECLARE_FOR_N_CPU",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "295: TF_CALL_QUANTIZED_TYPES(DECLARE_FOR_N_CPU);",
          "",
          "---------------"
        ],
        "tensorflow/python/eager/pywrap_tfe_src.cc||tensorflow/python/eager/pywrap_tfe_src.cc": [
          "File: tensorflow/python/eager/pywrap_tfe_src.cc -> tensorflow/python/eager/pywrap_tfe_src.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "680:       for (int i = 0; i < num_dims; ++i) {",
          "681:         tensorflow::Safe_PyObjectPtr inner_py_value(",
          "682:             PySequence_ITEM(py_value, i));",
          "683:         if (inner_py_value.get() == Py_None) {",
          "684:           dims[i] = -1;",
          "686:                                         &dims[i])) {",
          "687:           return false;",
          "688:         }",
          "",
          "[Removed Lines]",
          "685:         } else if (!ParseDimensionValue(key, inner_py_value.get(), status,",
          "",
          "[Added Lines]",
          "687:         } else if (inner_py_value.get() == nullptr ||",
          "688:                    !ParseDimensionValue(key, inner_py_value.get(), status,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "809deaa3d59eab73224b18f68af999bee4979e85",
      "candidate_info": {
        "commit_hash": "809deaa3d59eab73224b18f68af999bee4979e85",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/809deaa3d59eab73224b18f68af999bee4979e85",
        "files": [
          "tensorflow/core/kernels/strided_slice_op.cc",
          "tensorflow/core/kernels/strided_slice_op_impl.h",
          "tensorflow/python/eager/pywrap_tfe_src.cc"
        ],
        "message": "Fix tf.compat.v1.placeholder_with_default vulnerability with quantized types.\n\nWhen iterating through the tensor to extract shape values, an underlying missing kernel\n(`StridedSlice` for quantized types) causes an error, which then results in a `nullptr`\nbeing passed to `ParseDimensionValue()`, causing a segfault.\n\nThe `nullptr` check allows the missing kernel error to propagate.\nAdding the missing kernel registrations allows the shape values\nto be extracted successfully.\n\nPiperOrigin-RevId: 445045957",
        "before_after_code_files": [
          "tensorflow/core/kernels/strided_slice_op.cc||tensorflow/core/kernels/strided_slice_op.cc",
          "tensorflow/core/kernels/strided_slice_op_impl.h||tensorflow/core/kernels/strided_slice_op_impl.h",
          "tensorflow/python/eager/pywrap_tfe_src.cc||tensorflow/python/eager/pywrap_tfe_src.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/strided_slice_op.cc||tensorflow/core/kernels/strided_slice_op.cc",
            "tensorflow/core/kernels/strided_slice_op_impl.h||tensorflow/core/kernels/strided_slice_op_impl.h",
            "tensorflow/python/eager/pywrap_tfe_src.cc||tensorflow/python/eager/pywrap_tfe_src.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/strided_slice_op.cc||tensorflow/core/kernels/strided_slice_op.cc",
            "tensorflow/core/kernels/strided_slice_op_impl.h||tensorflow/core/kernels/strided_slice_op_impl.h",
            "tensorflow/python/eager/pywrap_tfe_src.cc||tensorflow/python/eager/pywrap_tfe_src.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/strided_slice_op.cc||tensorflow/core/kernels/strided_slice_op.cc": [
          "File: tensorflow/core/kernels/strided_slice_op.cc -> tensorflow/core/kernels/strided_slice_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "431:                           StridedSliceAssignOp<CPUDevice, type, true>)",
          "433: TF_CALL_ALL_TYPES(REGISTER_STRIDED_SLICE);",
          "435: #undef REGISTER_STRIDED_SLICE",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "434: TF_CALL_QUANTIZED_TYPES(REGISTER_STRIDED_SLICE);",
          "",
          "---------------"
        ],
        "tensorflow/core/kernels/strided_slice_op_impl.h||tensorflow/core/kernels/strided_slice_op_impl.h": [
          "File: tensorflow/core/kernels/strided_slice_op_impl.h -> tensorflow/core/kernels/strided_slice_op_impl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "289: #endif  // END GOOGLE_CUDA || TENSORFLOW_USE_ROCM",
          "291: TF_CALL_ALL_TYPES(DECLARE_FOR_N_CPU);",
          "294: #undef INSTANTIATE",
          "295: #undef DECLARE_FOR_N_CPU",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "292: TF_CALL_QUANTIZED_TYPES(DECLARE_FOR_N_CPU);",
          "",
          "---------------"
        ],
        "tensorflow/python/eager/pywrap_tfe_src.cc||tensorflow/python/eager/pywrap_tfe_src.cc": [
          "File: tensorflow/python/eager/pywrap_tfe_src.cc -> tensorflow/python/eager/pywrap_tfe_src.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "680:       for (int i = 0; i < num_dims; ++i) {",
          "681:         tensorflow::Safe_PyObjectPtr inner_py_value(",
          "682:             PySequence_ITEM(py_value, i));",
          "683:         if (inner_py_value.get() == Py_None) {",
          "684:           dims[i] = -1;",
          "686:                                         &dims[i])) {",
          "687:           return false;",
          "688:         }",
          "",
          "[Removed Lines]",
          "685:         } else if (!ParseDimensionValue(key, inner_py_value.get(), status,",
          "",
          "[Added Lines]",
          "687:         } else if (inner_py_value.get() == nullptr ||",
          "688:                    !ParseDimensionValue(key, inner_py_value.get(), status,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c7ebd5fbc3b9d5fa0c623f3e7693cf157dc69122",
      "candidate_info": {
        "commit_hash": "c7ebd5fbc3b9d5fa0c623f3e7693cf157dc69122",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/c7ebd5fbc3b9d5fa0c623f3e7693cf157dc69122",
        "files": [
          "tensorflow/core/kernels/strided_slice_op.cc",
          "tensorflow/core/kernels/strided_slice_op_impl.h",
          "tensorflow/python/eager/pywrap_tfe_src.cc"
        ],
        "message": "Fix tf.compat.v1.placeholder_with_default vulnerability with quantized types.\n\nWhen iterating through the tensor to extract shape values, an underlying missing kernel\n(`StridedSlice` for quantized types) causes an error, which then results in a `nullptr`\nbeing passed to `ParseDimensionValue()`, causing a segfault.\n\nThe `nullptr` check allows the missing kernel error to propagate.\nAdding the missing kernel registrations allows the shape values\nto be extracted successfully.\n\nPiperOrigin-RevId: 445045957",
        "before_after_code_files": [
          "tensorflow/core/kernels/strided_slice_op.cc||tensorflow/core/kernels/strided_slice_op.cc",
          "tensorflow/core/kernels/strided_slice_op_impl.h||tensorflow/core/kernels/strided_slice_op_impl.h",
          "tensorflow/python/eager/pywrap_tfe_src.cc||tensorflow/python/eager/pywrap_tfe_src.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/strided_slice_op.cc||tensorflow/core/kernels/strided_slice_op.cc",
            "tensorflow/core/kernels/strided_slice_op_impl.h||tensorflow/core/kernels/strided_slice_op_impl.h",
            "tensorflow/python/eager/pywrap_tfe_src.cc||tensorflow/python/eager/pywrap_tfe_src.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/strided_slice_op.cc||tensorflow/core/kernels/strided_slice_op.cc",
            "tensorflow/core/kernels/strided_slice_op_impl.h||tensorflow/core/kernels/strided_slice_op_impl.h",
            "tensorflow/python/eager/pywrap_tfe_src.cc||tensorflow/python/eager/pywrap_tfe_src.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/strided_slice_op.cc||tensorflow/core/kernels/strided_slice_op.cc": [
          "File: tensorflow/core/kernels/strided_slice_op.cc -> tensorflow/core/kernels/strided_slice_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "431:                           StridedSliceAssignOp<CPUDevice, type, true>)",
          "433: TF_CALL_ALL_TYPES(REGISTER_STRIDED_SLICE);",
          "435: #undef REGISTER_STRIDED_SLICE",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "434: TF_CALL_QUANTIZED_TYPES(REGISTER_STRIDED_SLICE);",
          "",
          "---------------"
        ],
        "tensorflow/core/kernels/strided_slice_op_impl.h||tensorflow/core/kernels/strided_slice_op_impl.h": [
          "File: tensorflow/core/kernels/strided_slice_op_impl.h -> tensorflow/core/kernels/strided_slice_op_impl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "292: #endif  // END GOOGLE_CUDA || TENSORFLOW_USE_ROCM",
          "294: TF_CALL_ALL_TYPES(DECLARE_FOR_N_CPU);",
          "297: #undef INSTANTIATE",
          "298: #undef DECLARE_FOR_N_CPU",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "295: TF_CALL_QUANTIZED_TYPES(DECLARE_FOR_N_CPU);",
          "",
          "---------------"
        ],
        "tensorflow/python/eager/pywrap_tfe_src.cc||tensorflow/python/eager/pywrap_tfe_src.cc": [
          "File: tensorflow/python/eager/pywrap_tfe_src.cc -> tensorflow/python/eager/pywrap_tfe_src.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "688:       for (int i = 0; i < num_dims; ++i) {",
          "689:         tensorflow::Safe_PyObjectPtr inner_py_value(",
          "690:             PySequence_ITEM(py_value, i));",
          "691:         if (inner_py_value.get() == Py_None) {",
          "692:           dims[i] = -1;",
          "694:                                         &dims[i])) {",
          "695:           return false;",
          "696:         }",
          "",
          "[Removed Lines]",
          "693:         } else if (!ParseDimensionValue(key, inner_py_value.get(), status,",
          "",
          "[Added Lines]",
          "695:         } else if (inner_py_value.get() == nullptr ||",
          "696:                    !ParseDimensionValue(key, inner_py_value.get(), status,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c53582706b4585f39aa9ac05c4261f0e8680f037",
      "candidate_info": {
        "commit_hash": "c53582706b4585f39aa9ac05c4261f0e8680f037",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/c53582706b4585f39aa9ac05c4261f0e8680f037",
        "files": [
          "tensorflow/core/kernels/strided_slice_op.cc",
          "tensorflow/core/kernels/strided_slice_op_impl.h",
          "tensorflow/python/eager/pywrap_tfe_src.cc"
        ],
        "message": "Fix tf.compat.v1.placeholder_with_default vulnerability with quantized types.\n\nWhen iterating through the tensor to extract shape values, an underlying missing kernel\n(`StridedSlice` for quantized types) causes an error, which then results in a `nullptr`\nbeing passed to `ParseDimensionValue()`, causing a segfault.\n\nThe `nullptr` check allows the missing kernel error to propagate.\nAdding the missing kernel registrations allows the shape values\nto be extracted successfully.\n\nPiperOrigin-RevId: 445045957",
        "before_after_code_files": [
          "tensorflow/core/kernels/strided_slice_op.cc||tensorflow/core/kernels/strided_slice_op.cc",
          "tensorflow/core/kernels/strided_slice_op_impl.h||tensorflow/core/kernels/strided_slice_op_impl.h",
          "tensorflow/python/eager/pywrap_tfe_src.cc||tensorflow/python/eager/pywrap_tfe_src.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/strided_slice_op.cc||tensorflow/core/kernels/strided_slice_op.cc",
            "tensorflow/core/kernels/strided_slice_op_impl.h||tensorflow/core/kernels/strided_slice_op_impl.h",
            "tensorflow/python/eager/pywrap_tfe_src.cc||tensorflow/python/eager/pywrap_tfe_src.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/strided_slice_op.cc||tensorflow/core/kernels/strided_slice_op.cc",
            "tensorflow/core/kernels/strided_slice_op_impl.h||tensorflow/core/kernels/strided_slice_op_impl.h",
            "tensorflow/python/eager/pywrap_tfe_src.cc||tensorflow/python/eager/pywrap_tfe_src.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/strided_slice_op.cc||tensorflow/core/kernels/strided_slice_op.cc": [
          "File: tensorflow/core/kernels/strided_slice_op.cc -> tensorflow/core/kernels/strided_slice_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "431:                           StridedSliceAssignOp<CPUDevice, type, true>)",
          "433: TF_CALL_ALL_TYPES(REGISTER_STRIDED_SLICE);",
          "435: #undef REGISTER_STRIDED_SLICE",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "434: TF_CALL_QUANTIZED_TYPES(REGISTER_STRIDED_SLICE);",
          "",
          "---------------"
        ],
        "tensorflow/core/kernels/strided_slice_op_impl.h||tensorflow/core/kernels/strided_slice_op_impl.h": [
          "File: tensorflow/core/kernels/strided_slice_op_impl.h -> tensorflow/core/kernels/strided_slice_op_impl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "292: #endif  // END GOOGLE_CUDA || TENSORFLOW_USE_ROCM",
          "294: TF_CALL_ALL_TYPES(DECLARE_FOR_N_CPU);",
          "297: #undef INSTANTIATE",
          "298: #undef DECLARE_FOR_N_CPU",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "295: TF_CALL_QUANTIZED_TYPES(DECLARE_FOR_N_CPU);",
          "",
          "---------------"
        ],
        "tensorflow/python/eager/pywrap_tfe_src.cc||tensorflow/python/eager/pywrap_tfe_src.cc": [
          "File: tensorflow/python/eager/pywrap_tfe_src.cc -> tensorflow/python/eager/pywrap_tfe_src.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "678:       for (int i = 0; i < num_dims; ++i) {",
          "679:         tensorflow::Safe_PyObjectPtr inner_py_value(",
          "680:             PySequence_ITEM(py_value, i));",
          "681:         if (inner_py_value.get() == Py_None) {",
          "682:           dims[i] = -1;",
          "684:                                         &dims[i])) {",
          "685:           return false;",
          "686:         }",
          "",
          "[Removed Lines]",
          "683:         } else if (!ParseDimensionValue(key, inner_py_value.get(), status,",
          "",
          "[Added Lines]",
          "685:         } else if (inner_py_value.get() == nullptr ||",
          "686:                    !ParseDimensionValue(key, inner_py_value.get(), status,",
          "",
          "---------------"
        ]
      }
    }
  ]
}