{
  "cve_id": "CVE-2020-14385",
  "cve_desc": "A flaw was found in the Linux kernel before 5.9-rc4. A failure of the file system metadata validator in XFS can cause an inode with a valid, user-creatable extended attribute to be flagged as corrupt. This can lead to the filesystem being shutdown, or otherwise rendered inaccessible until it is remounted, leading to a denial of service. The highest threat from this vulnerability is to system availability.",
  "repo": "torvalds/linux",
  "patch_hash": "f4020438fab05364018c91f7e02ebdd192085933",
  "patch_info": {
    "commit_hash": "f4020438fab05364018c91f7e02ebdd192085933",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/f4020438fab05364018c91f7e02ebdd192085933",
    "files": [
      "fs/xfs/libxfs/xfs_attr_leaf.c"
    ],
    "message": "xfs: fix boundary test in xfs_attr_shortform_verify\n\nThe boundary test for the fixed-offset parts of xfs_attr_sf_entry in\nxfs_attr_shortform_verify is off by one, because the variable array\nat the end is defined as nameval[1] not nameval[].\nHence we need to subtract 1 from the calculation.\n\nThis can be shown by:\n\n# touch file\n# setfattr -n root.a file\n\nand verifications will fail when it's written to disk.\n\nThis only matters for a last attribute which has a single-byte name\nand no value, otherwise the combination of namelen & valuelen will\npush endp further out and this test won't fail.\n\nFixes: 1e1bbd8e7ee06 (\"xfs: create structure verifier function for shortform xattrs\")\nSigned-off-by: Eric Sandeen <sandeen@redhat.com>\nReviewed-by: Darrick J. Wong <darrick.wong@oracle.com>\nSigned-off-by: Darrick J. Wong <darrick.wong@oracle.com>\nReviewed-by: Christoph Hellwig <hch@lst.de>",
    "before_after_code_files": [
      "fs/xfs/libxfs/xfs_attr_leaf.c||fs/xfs/libxfs/xfs_attr_leaf.c"
    ]
  },
  "patch_diff": {
    "fs/xfs/libxfs/xfs_attr_leaf.c||fs/xfs/libxfs/xfs_attr_leaf.c": [
      "File: fs/xfs/libxfs/xfs_attr_leaf.c -> fs/xfs/libxfs/xfs_attr_leaf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1041:    return __this_address;",
      "",
      "[Removed Lines]",
      "1040:   if (((char *)sfep + sizeof(*sfep)) >= endp)",
      "",
      "[Added Lines]",
      "1042:   if (((char *)sfep + sizeof(*sfep) - 1) >= endp)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c418dbc9805dbd215586454f0c5729333219aa63",
      "candidate_info": {
        "commit_hash": "c418dbc9805dbd215586454f0c5729333219aa63",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/c418dbc9805dbd215586454f0c5729333219aa63",
        "files": [
          "fs/xfs/libxfs/xfs_attr_leaf.c",
          "fs/xfs/libxfs/xfs_attr_sf.h",
          "fs/xfs/libxfs/xfs_da_format.h"
        ],
        "message": "xfs: Use variable-size array for nameval in xfs_attr_sf_entry\n\nnameval is a variable-size array, so, define it as it, and remove all\nthe -1 magic number subtractions\n\nReviewed-by: Christoph Hellwig <hch@lst.de>\nSigned-off-by: Carlos Maiolino <cmaiolino@redhat.com>\nReviewed-by: Darrick J. Wong <darrick.wong@oracle.com>\nSigned-off-by: Darrick J. Wong <darrick.wong@oracle.com>",
        "before_after_code_files": [
          "fs/xfs/libxfs/xfs_attr_leaf.c||fs/xfs/libxfs/xfs_attr_leaf.c",
          "fs/xfs/libxfs/xfs_attr_sf.h||fs/xfs/libxfs/xfs_attr_sf.h",
          "fs/xfs/libxfs/xfs_da_format.h||fs/xfs/libxfs/xfs_da_format.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/xfs/libxfs/xfs_attr_leaf.c||fs/xfs/libxfs/xfs_attr_leaf.c"
          ],
          "candidate": [
            "fs/xfs/libxfs/xfs_attr_leaf.c||fs/xfs/libxfs/xfs_attr_leaf.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/xfs/libxfs/xfs_attr_leaf.c||fs/xfs/libxfs/xfs_attr_leaf.c": [
          "File: fs/xfs/libxfs/xfs_attr_leaf.c -> fs/xfs/libxfs/xfs_attr_leaf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "992:    return 0;",
          "993:   if (be16_to_cpu(name_loc->valuelen) >= XFS_ATTR_SF_ENTSIZE_MAX)",
          "994:    return 0;",
          "998:  }",
          "999:  if ((dp->i_mount->m_flags & XFS_MOUNT_ATTR2) &&",
          "1000:      (dp->i_df.if_format != XFS_DINODE_FMT_BTREE) &&",
          "",
          "[Removed Lines]",
          "995:   bytes += sizeof(struct xfs_attr_sf_entry) - 1",
          "996:     + name_loc->namelen",
          "997:     + be16_to_cpu(name_loc->valuelen);",
          "",
          "[Added Lines]",
          "995:   bytes += XFS_ATTR_SF_ENTSIZE_BYNAME(name_loc->namelen,",
          "996:      be16_to_cpu(name_loc->valuelen));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1043:    return __this_address;",
          "",
          "[Removed Lines]",
          "1042:   if (((char *)sfep + sizeof(*sfep) - 1) >= endp)",
          "",
          "[Added Lines]",
          "1041:   if (((char *)sfep + sizeof(*sfep)) >= endp)",
          "",
          "---------------"
        ],
        "fs/xfs/libxfs/xfs_attr_sf.h||fs/xfs/libxfs/xfs_attr_sf.h": [
          "File: fs/xfs/libxfs/xfs_attr_sf.h -> fs/xfs/libxfs/xfs_attr_sf.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: } xfs_attr_sf_sort_t;",
          "29: #define XFS_ATTR_SF_ENTSIZE_BYNAME(nlen,vlen) /* space name/value uses */ \\",
          "31: #define XFS_ATTR_SF_ENTSIZE_MAX   /* max space for name&value */ \\",
          "32:  ((1 << (NBBY*(int)sizeof(uint8_t))) - 1)",
          "33: #define XFS_ATTR_SF_ENTSIZE(sfep)  /* space an entry uses */ \\",
          "35:   (sfep)->namelen+(sfep)->valuelen)",
          "36: #define XFS_ATTR_SF_NEXTENTRY(sfep)  /* next entry in struct */ \\",
          "37:  ((struct xfs_attr_sf_entry *)((char *)(sfep) + \\",
          "",
          "[Removed Lines]",
          "30:  (((int)sizeof(struct xfs_attr_sf_entry)-1 + (nlen)+(vlen)))",
          "34:  ((int)sizeof(struct xfs_attr_sf_entry)-1 + \\",
          "",
          "[Added Lines]",
          "30:  ((sizeof(struct xfs_attr_sf_entry) + (nlen) + (vlen)))",
          "34:  ((int)sizeof(struct xfs_attr_sf_entry) + \\",
          "",
          "---------------"
        ],
        "fs/xfs/libxfs/xfs_da_format.h||fs/xfs/libxfs/xfs_da_format.h": [
          "File: fs/xfs/libxfs/xfs_da_format.h -> fs/xfs/libxfs/xfs_da_format.h"
        ]
      }
    }
  ]
}