{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bf9d8e9214e2098bacf18416564dc3a91bcdf5d6",
      "candidate_info": {
        "commit_hash": "bf9d8e9214e2098bacf18416564dc3a91bcdf5d6",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/bf9d8e9214e2098bacf18416564dc3a91bcdf5d6",
        "files": [
          "lib/module.js",
          "test/message/stack_overflow.out",
          "test/message/throw_custom_error.out",
          "test/message/throw_non_error.out",
          "test/message/undefined_reference_in_new_context.out"
        ],
        "message": "Fix exception output for module load exceptions\n\nSo instead of:\n\nnode.js:201\n        throw e; // process.nextTick error, or 'error' event on first tick\n              ^\n\nYou will now see:\n\npath/to/foo.js:1\nthrow new Error('bar');\n      ^\n\nThis is a sub-set of isaacs patch here:\n\nhttps://github.com/joyent/node/issues/3235\n\nThe difference is that this patch purely adresses the exception output,\nbut does not try to make any behavior changes / improvements.",
        "before_after_code_files": [
          "lib/module.js||limodule.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/module.js||limodule.js": [
          "File: lib/module.js -> limodule.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "304:   }",
          "306:   Module._cache[filename] = module;",
          "307:   try {",
          "308:     module.load(filename);",
          "312:   }",
          "314:   return module.exports;",
          "",
          "[Removed Lines]",
          "309:   } catch (err) {",
          "310:     delete Module._cache[filename];",
          "311:     throw err;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b3d4938e3e04394f672f8f15feb779b231424bb6",
      "candidate_info": {
        "commit_hash": "b3d4938e3e04394f672f8f15feb779b231424bb6",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/b3d4938e3e04394f672f8f15feb779b231424bb6",
        "files": [
          "configure",
          "node.gyp"
        ],
        "message": "build: add --without-isolates configure switch",
        "before_after_code_files": [
          "node.gyp||node.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "node.gyp||node.gyp": [
          "File: node.gyp -> node.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "130:       ],",
          "132:       'conditions': [",
          "133:         [ 'node_use_openssl==\"true\"', {",
          "134:           'defines': [ 'HAVE_OPENSSL=1' ],",
          "135:           'sources': [ 'src/node_crypto.cc' ],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "133:         [ 'node_use_isolates==\"true\"', {",
          "134:           'defines': [ 'HAVE_ISOLATES=1' ],",
          "135:         }, {",
          "136:           'defines': [ 'HAVE_ISOLATES=0' ],",
          "137:         }],",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f492baa61dd1fa2955fc3821b34fb5c998c81503",
      "candidate_info": {
        "commit_hash": "f492baa61dd1fa2955fc3821b34fb5c998c81503",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/f492baa61dd1fa2955fc3821b34fb5c998c81503",
        "files": [
          "src/node_version.h"
        ],
        "message": "Now working on 0.7.6",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #define NODE_MAJOR_VERSION 0",
          "30: #define NODE_MINOR_VERSION 7",
          "34: #ifndef NODE_STRINGIFY",
          "35: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "31: #define NODE_PATCH_VERSION 5",
          "32: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "[Added Lines]",
          "31: #define NODE_PATCH_VERSION 6",
          "32: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f82ef0f7c3a024474847f10f18cf39df5f743b38",
      "candidate_info": {
        "commit_hash": "f82ef0f7c3a024474847f10f18cf39df5f743b38",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/f82ef0f7c3a024474847f10f18cf39df5f743b38",
        "files": [
          "lib/http.js"
        ],
        "message": "http: remove ClientRequest.prototype.pause()\n\nClientRequest.prototype.pause() is not needed. ClientRequest is a writable\nstream and deferring to OutgoingMessage.prototype.pause() is broken, the method\ndoes not exist.",
        "before_after_code_files": [
          "lib/http.js||lihttp.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/http.js||lihttp.js": [
          "File: lib/http.js -> lihttp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1431: ClientRequest.prototype.setSocketKeepAlive = function() {",
          "1432:   this._deferToConnect('setKeepAlive', arguments);",
          "1433: };",
          "1442: exports.request = function(options, cb) {",
          "",
          "[Removed Lines]",
          "1434: ClientRequest.prototype.pause = function() {",
          "1435:   var self = this;",
          "1436:   self._deferToConnect(null, null, function() {",
          "1437:     OutgoingMessage.prototype.pause.apply(self, []);",
          "1438:   });",
          "1439: };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "35043ad8ac77f568755fff6c8aea4f41f531330d",
      "candidate_info": {
        "commit_hash": "35043ad8ac77f568755fff6c8aea4f41f531330d",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/35043ad8ac77f568755fff6c8aea4f41f531330d",
        "files": [
          "src/node.cc"
        ],
        "message": "process: use NODE_STRINGIFY macro to set process.versions.uv",
        "before_after_code_files": [
          "src/node.cc||src/node.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2077:   module_load_list = Persistent<Array>::New(Array::New());",
          "2078:   process->Set(String::NewSymbol(\"moduleLoadList\"), module_load_list);",
          "2080:   Local<Object> versions = Object::New();",
          "2082:   process->Set(String::NewSymbol(\"versions\"), versions);",
          "2083:   versions->Set(String::NewSymbol(\"http_parser\"), String::New(",
          "2084:                NODE_STRINGIFY(HTTP_PARSER_VERSION_MAJOR) \".\"",
          "",
          "[Removed Lines]",
          "2081:   char buf[20];",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2087:   versions->Set(String::NewSymbol(\"node\"), String::New(NODE_VERSION+1));",
          "2088:   versions->Set(String::NewSymbol(\"v8\"), String::New(V8::GetVersion()));",
          "2089:   versions->Set(String::NewSymbol(\"ares\"), String::New(ARES_VERSION_STR));",
          "2092:   versions->Set(String::NewSymbol(\"zlib\"), String::New(ZLIB_VERSION));",
          "2093: #if HAVE_OPENSSL",
          "",
          "[Removed Lines]",
          "2090:   snprintf(buf, 20, \"%d.%d\", UV_VERSION_MAJOR, UV_VERSION_MINOR);",
          "2091:   versions->Set(String::NewSymbol(\"uv\"), String::New(buf));",
          "",
          "[Added Lines]",
          "2090:   versions->Set(String::NewSymbol(\"uv\"), String::New(",
          "2091:                NODE_STRINGIFY(UV_VERSION_MAJOR) \".\"",
          "2092:                NODE_STRINGIFY(UV_VERSION_MINOR)));",
          "",
          "---------------"
        ]
      }
    }
  ]
}