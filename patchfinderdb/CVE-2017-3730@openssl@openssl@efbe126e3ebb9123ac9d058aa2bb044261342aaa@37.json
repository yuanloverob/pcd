{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5c75e43d84ca6a56adba5bab37b868576ff8b209",
      "candidate_info": {
        "commit_hash": "5c75e43d84ca6a56adba5bab37b868576ff8b209",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/5c75e43d84ca6a56adba5bab37b868576ff8b209",
        "files": [
          "doc/crypto/ERR_GET_LIB.pod",
          "include/openssl/err.h"
        ],
        "message": "Restore the ERR_FATAL_ERROR() macro\n\nCommit 0cd0a820abc6124cf8e176fa92d620a2abf9e419 removed this macro\nalong with many unused function and reason codes; ERR_FATAL_ERROR()\nwas not used in the tree, but did have external consumers.\n\nAdd it back to restore the API compatibility and avoid breaking\napplications for no internal benefit.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2049)\n(cherry picked from commit 036ba500f7886ca2e7231549fa574ec2cdd45cef)",
        "before_after_code_files": [
          "include/openssl/err.h||include/openssl/err.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/err.h||include/openssl/err.h": [
          "File: include/openssl/err.h -> include/openssl/err.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "140: # define ERR_GET_LIB(l)          (int)(((l) >> 24L) & 0x0FFL)",
          "141: # define ERR_GET_FUNC(l)         (int)(((l) >> 12L) & 0xFFFL)",
          "142: # define ERR_GET_REASON(l)       (int)( (l)         & 0xFFFL)",
          "145: # define SYS_F_FOPEN             1",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "143: # define ERR_FATAL_ERROR(l)      (int)( (l)         & ERR_R_FATAL)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "acacbfa7565c78d2273c0b2a2e5e803f44afefeb",
      "candidate_info": {
        "commit_hash": "acacbfa7565c78d2273c0b2a2e5e803f44afefeb",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/acacbfa7565c78d2273c0b2a2e5e803f44afefeb",
        "files": [
          "ssl/statem/statem.c"
        ],
        "message": "Fix Use After Free for large message sizes\n\nThe buffer to receive messages is initialised to 16k. If a message is\nreceived that is larger than that then the buffer is \"realloc'd\". This can\ncause the location of the underlying buffer to change. Anything that is\nreferring to the old location will be referring to free'd data. In the\nrecent commit c1ef7c97 (master) and 4b390b6c (1.1.0) the point in the code\nwhere the message buffer is grown was changed. However s->init_msg was not\nupdated to point at the new location.\n\nCVE-2016-6309\n\nReviewed-by: Emilia K\u00e4sper <emilia@openssl.org>\n(cherry picked from commit 0d698f6696e114a6e47f8b75ff88ec81f9e30175)",
        "before_after_code_files": [
          "ssl/statem/statem.c||ssl/statem/statem.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/statem/statem.c||ssl/statem/statem.c": [
          "File: ssl/statem/statem.c -> ssl/statem/statem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "445:     st->read_state = READ_STATE_HEADER;",
          "446: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "448: static int grow_init_buf(SSL *s, size_t size) {",
          "450:     size_t msg_offset = (char *)s->init_msg - s->init_buf->data;",
          "452:     if (!BUF_MEM_grow_clean(s->init_buf, (int)size))",
          "453:         return 0;",
          "455:     if (size < msg_offset)",
          "456:         return 0;",
          "458:     s->init_msg = s->init_buf->data + msg_offset;",
          "460:     return 1;",
          "461: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "546:             if (!SSL_IS_DTLS(s)",
          "547:                     && s->s3->tmp.message_size > 0",
          "551:                 ssl3_send_alert(s, SSL3_AL_FATAL, SSL_AD_INTERNAL_ERROR);",
          "552:                 SSLerr(SSL_F_READ_STATE_MACHINE, ERR_R_BUF_LIB);",
          "553:                 return SUB_STATE_ERROR;",
          "",
          "[Removed Lines]",
          "548:                     && !BUF_MEM_grow_clean(s->init_buf,",
          "549:                                            (int)s->s3->tmp.message_size",
          "550:                                            + SSL3_HM_HEADER_LENGTH)) {",
          "",
          "[Added Lines]",
          "563:                     && !grow_init_buf(s, s->s3->tmp.message_size",
          "564:                                          + SSL3_HM_HEADER_LENGTH)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f8641c9c693179fe7461608c51aaa8700dca6da2",
      "candidate_info": {
        "commit_hash": "f8641c9c693179fe7461608c51aaa8700dca6da2",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f8641c9c693179fe7461608c51aaa8700dca6da2",
        "files": [
          "test/handshake_helper.c"
        ],
        "message": "test/ssl_test: give up if both client and server wait on read\n\nIn some cases, both client and server end of the test can end up in\nSSL_ERROR_WANT_READ and never get out of it, making the test spin.\nDetect it and give up instead of waiting endlessly.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2096)\n(cherry picked from commit ceb6d746941063eccf7655c7709ba56ca117044b)",
        "before_after_code_files": [
          "test/handshake_helper.c||test/handshake_helper.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/handshake_helper.c||test/handshake_helper.c": [
          "File: test/handshake_helper.c -> test/handshake_helper.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "867:     HANDSHAKE_EX_DATA server_ex_data, client_ex_data;",
          "868:     CTX_DATA client_ctx_data, server_ctx_data, server2_ctx_data;",
          "869:     HANDSHAKE_RESULT *ret = HANDSHAKE_RESULT_new();",
          "871:     connect_phase_t phase = HANDSHAKE;",
          "872:     handshake_status_t status = HANDSHAKE_RETRY;",
          "873:     const unsigned char* tick = NULL;",
          "",
          "[Removed Lines]",
          "870:     int client_turn = 1;",
          "",
          "[Added Lines]",
          "870:     int client_turn = 1, client_turn_count = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "957:         switch (status) {",
          "958:         case HANDSHAKE_SUCCESS:",
          "959:             phase = next_phase(test_ctx, phase);",
          "960:             if (phase == CONNECTION_DONE) {",
          "961:                 ret->result = SSL_TEST_SUCCESS;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "959:             client_turn_count = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "981:             ret->result = SSL_TEST_INTERNAL_ERROR;",
          "982:             goto err;",
          "983:         case HANDSHAKE_RETRY:",
          "985:             client_turn ^= 1;",
          "986:             break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "985:             if (client_turn_count++ >= 2000) {",
          "991:                 ret->result = SSL_TEST_INTERNAL_ERROR;",
          "992:                 goto err;",
          "993:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d67fe76786587bc6995337d2a9cb525fb60bf998",
      "candidate_info": {
        "commit_hash": "d67fe76786587bc6995337d2a9cb525fb60bf998",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/d67fe76786587bc6995337d2a9cb525fb60bf998",
        "files": [
          "apps/s_client.c",
          "apps/s_server.c",
          "doc/apps/s_client.pod",
          "doc/apps/s_server.pod"
        ],
        "message": "Update s_client and s_server documentation about some missing arguments\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1837)\n(cherry picked from commit a22f9c84b468eed83c651cb5f2c68c7ad4103ffd)",
        "before_after_code_files": [
          "apps/s_client.c||apps/s_client.c",
          "apps/s_server.c||apps/s_server.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/s_client.c||apps/s_client.c": [
          "File: apps/s_client.c -> apps/s_client.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "567:     {\"proxy\", OPT_PROXY, 's',",
          "568:      \"Connect to via specified proxy to the real server\"},",
          "569: #ifdef AF_UNIX",
          "571: #endif",
          "572:     {\"4\", OPT_4, '-', \"Use IPv4 only\"},",
          "573: #ifdef AF_INET6",
          "",
          "[Removed Lines]",
          "570:     {\"unix\", OPT_UNIX, 's', \"Connect over unix domain sockets\"},",
          "",
          "[Added Lines]",
          "570:     {\"unix\", OPT_UNIX, 's', \"Connect over the specified Unix-domain socket\"},",
          "",
          "---------------"
        ],
        "apps/s_server.c||apps/s_server.c": [
          "File: apps/s_server.c -> apps/s_server.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "684:     {\"port\", OPT_PORT, 'p',",
          "685:      \"TCP/IP port to listen on for connections (default is \" PORT \")\"},",
          "686:     {\"accept\", OPT_ACCEPT, 's',",
          "688: #ifdef AF_UNIX",
          "689:     {\"unix\", OPT_UNIX, 's', \"Unix domain socket to accept on\"},",
          "690: #endif",
          "",
          "[Removed Lines]",
          "687:      \"TCP/IP optional host and port to accept on (default is \" PORT \")\"},",
          "",
          "[Added Lines]",
          "687:      \"TCP/IP optional host and port to listen on for connections (default is *:\" PORT \")\"},",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "56518d82372048825f068de32dfca77c32be1bc0",
      "candidate_info": {
        "commit_hash": "56518d82372048825f068de32dfca77c32be1bc0",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/56518d82372048825f068de32dfca77c32be1bc0",
        "files": [
          "crypto/ct/ct_oct.c",
          "crypto/ct/ct_sct.c"
        ],
        "message": "Move SCT_LIST_free definition into a more logical place\n\nThis reflects its position in include/openssl/ct.h.\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1548)\n(cherry picked from commit e1940e9f7a73bf3a560fbe3550a9b69a612118ec)",
        "before_after_code_files": [
          "crypto/ct/ct_oct.c||crypto/ct/ct_oct.c",
          "crypto/ct/ct_sct.c||crypto/ct/ct_sct.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ct/ct_oct.c||crypto/ct/ct_oct.c": [
          "File: crypto/ct/ct_oct.c -> crypto/ct/ct_oct.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "254:     return -1;",
          "255: }",
          "262: STACK_OF(SCT) *o2i_SCT_LIST(STACK_OF(SCT) **a, const unsigned char **pp,",
          "263:                             size_t len)",
          "264: {",
          "",
          "[Removed Lines]",
          "257: void SCT_LIST_free(STACK_OF(SCT) *a)",
          "258: {",
          "259:     sk_SCT_pop_free(a, SCT_free);",
          "260: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "crypto/ct/ct_sct.c||crypto/ct/ct_sct.c": [
          "File: crypto/ct/ct_sct.c -> crypto/ct/ct_sct.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:     OPENSSL_free(sct);",
          "46: }",
          "48: int SCT_set_version(SCT *sct, sct_version_t version)",
          "49: {",
          "50:     if (version != SCT_VERSION_V1) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48: void SCT_LIST_free(STACK_OF(SCT) *a)",
          "49: {",
          "50:     sk_SCT_pop_free(a, SCT_free);",
          "51: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}