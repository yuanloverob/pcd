{
  "cve_id": "CVE-2019-9208",
  "cve_desc": "In Wireshark 2.4.0 to 2.4.12 and 2.6.0 to 2.6.6, the TCAP dissector could crash. This was addressed in epan/dissectors/asn1/tcap/tcap.cnf by avoiding NULL pointer dereferences.",
  "repo": "wireshark/wireshark",
  "patch_hash": "34873a20eb489562098c5a58085ae783f869525c",
  "patch_info": {
    "commit_hash": "34873a20eb489562098c5a58085ae783f869525c",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/34873a20eb489562098c5a58085ae783f869525c",
    "files": [
      "epan/dissectors/asn1/tcap/tcap.cnf",
      "epan/dissectors/packet-tcap.c"
    ],
    "message": "tcap: check p_tcap_private before dereferencing.\n\nThis caused a NULL pointer dereference on ASAN builds with\nmalformed packets.\n\nAddressSanitizer:DEADLYSIGNAL\n=================================================================\n==15485==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000008 (pc 0x7ff49a4281fa bp 0x7ffe5257a4d0 sp 0x7ffe5257a2c0 T0)\n==15485==The signal is caused by a WRITE memory access.\n==15485==Hint: address points to the zero page.\n    #0 0x7ff49a4281f9 in dissect_tcap_AARQ_application_context_name wireshark/epan/dissectors/./asn1/tcap/tcap.cnf\n    #1 0x7ff498e7bab1 in dissect_ber_sequence wireshark/epan/dissectors/packet-ber.c:2425:17\n\nBug: 15464\nChange-Id: I8fd4f09a1356211acb180e4598a33fce96d98e94\nReviewed-on: https://code.wireshark.org/review/31840\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/asn1/tcap/tcap.cnf||epan/dissectors/asn1/tcap/tcap.cnf",
      "epan/dissectors/packet-tcap.c||epan/dissectors/packet-tcap.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/asn1/tcap/tcap.cnf||epan/dissectors/asn1/tcap/tcap.cnf": [
      "File: epan/dissectors/asn1/tcap/tcap.cnf -> epan/dissectors/asn1/tcap/tcap.cnf",
      "--- Hunk 1 ---",
      "[Context before]",
      "115: #.FN_BODY AUDT-apdu/_untag/application-context-name  FN_VARIANT = _str  VAL_PTR = &cur_oid",
      "116:   struct tcap_private_t *p_tcap_private = (struct tcap_private_t*)actx->value_ptr;",
      "117: %(DEFAULT_BODY)s",
      "120: #----------------------------------------------------------------------------------------",
      "121: #.FN_BODY AARQ-apdu/_untag/application-context-name  FN_VARIANT = _str  VAL_PTR = &cur_oid",
      "122:   struct tcap_private_t *p_tcap_private = (struct tcap_private_t*)actx->value_ptr;",
      "123: %(DEFAULT_BODY)s",
      "126: #----------------------------------------------------------------------------------------",
      "127: #.FN_BODY AARE-apdu/_untag/application-context-name  FN_VARIANT = _str  VAL_PTR = &cur_oid",
      "128:   struct tcap_private_t *p_tcap_private = (struct tcap_private_t*)actx->value_ptr;",
      "129: %(DEFAULT_BODY)s",
      "132: #----------------------------------------------------------------------------------------",
      "133: #.FN_BODY OrigTransactionID",
      "134:   tvbuff_t *parameter_tvb;",
      "",
      "[Removed Lines]",
      "118:   p_tcap_private->oid= (const void*) cur_oid;",
      "119:   p_tcap_private->acv=TRUE;",
      "124:   p_tcap_private->oid= (const void*) cur_oid;",
      "125:   p_tcap_private->acv=TRUE;",
      "130:   p_tcap_private->oid= (const void*) cur_oid;",
      "131:   p_tcap_private->acv=TRUE;",
      "",
      "[Added Lines]",
      "118:   if (p_tcap_private) {",
      "119:     p_tcap_private->oid= (const void*) cur_oid;",
      "120:     p_tcap_private->acv=TRUE;",
      "121:   }",
      "126:   if (p_tcap_private) {",
      "127:     p_tcap_private->oid= (const void*) cur_oid;",
      "128:     p_tcap_private->acv=TRUE;",
      "129:   }",
      "134:   if (p_tcap_private) {",
      "135:     p_tcap_private->oid= (const void*) cur_oid;",
      "136:     p_tcap_private->acv=TRUE;",
      "137:   }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "166:       gp_tcapsrt_info->src_tid=0;",
      "167:       break;",
      "168:     }",
      "171:     if (len) {",
      "172:       col_append_str(actx->pinfo->cinfo, COL_INFO, \"otid(\");",
      "",
      "[Removed Lines]",
      "169:     p_tcap_private->src_tid = gp_tcapsrt_info->src_tid;",
      "",
      "[Added Lines]",
      "175:     if (p_tcap_private)",
      "176:       p_tcap_private->src_tid = gp_tcapsrt_info->src_tid;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "214:       gp_tcapsrt_info->dst_tid=0;",
      "215:       break;",
      "216:     }",
      "219:     if (len) {",
      "220:       col_append_str(actx->pinfo->cinfo, COL_INFO, \"dtid(\");",
      "",
      "[Removed Lines]",
      "217:     p_tcap_private->dst_tid = gp_tcapsrt_info->dst_tid;",
      "",
      "[Added Lines]",
      "224:     if (p_tcap_private)",
      "225:       p_tcap_private->dst_tid = gp_tcapsrt_info->dst_tid;",
      "",
      "---------------"
    ],
    "epan/dissectors/packet-tcap.c||epan/dissectors/packet-tcap.c": [
      "File: epan/dissectors/packet-tcap.c -> epan/dissectors/packet-tcap.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "744: static int",
      "745: dissect_tcap_OrigTransactionID(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "747:   tvbuff_t *parameter_tvb;",
      "748:   guint8 len, i;",
      "749:   proto_tree *subtree;",
      "",
      "[Removed Lines]",
      "746: #line 134 \"./asn1/tcap/tcap.cnf\"",
      "",
      "[Added Lines]",
      "746: #line 140 \"./asn1/tcap/tcap.cnf\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "781:       gp_tcapsrt_info->src_tid=0;",
      "782:       break;",
      "783:     }",
      "786:     if (len) {",
      "787:       col_append_str(actx->pinfo->cinfo, COL_INFO, \"otid(\");",
      "",
      "[Removed Lines]",
      "784:     p_tcap_private->src_tid = gp_tcapsrt_info->src_tid;",
      "",
      "[Added Lines]",
      "784:     if (p_tcap_private)",
      "785:       p_tcap_private->src_tid = gp_tcapsrt_info->src_tid;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "808: static int",
      "809: dissect_tcap_Begin(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "811: gp_tcapsrt_info->ope=TC_BEGIN;",
      "",
      "[Removed Lines]",
      "810: #line 228 \"./asn1/tcap/tcap.cnf\"",
      "",
      "[Added Lines]",
      "811: #line 236 \"./asn1/tcap/tcap.cnf\"",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "830: static int",
      "831: dissect_tcap_DestTransactionID(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "833:   tvbuff_t *parameter_tvb;",
      "834:   guint8 len , i;",
      "835:   proto_tree *subtree;",
      "",
      "[Removed Lines]",
      "832: #line 182 \"./asn1/tcap/tcap.cnf\"",
      "",
      "[Added Lines]",
      "833: #line 189 \"./asn1/tcap/tcap.cnf\"",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "867:       gp_tcapsrt_info->dst_tid=0;",
      "868:       break;",
      "869:     }",
      "872:     if (len) {",
      "873:       col_append_str(actx->pinfo->cinfo, COL_INFO, \"dtid(\");",
      "",
      "[Removed Lines]",
      "870:     p_tcap_private->dst_tid = gp_tcapsrt_info->dst_tid;",
      "",
      "[Added Lines]",
      "871:     if (p_tcap_private)",
      "872:       p_tcap_private->dst_tid = gp_tcapsrt_info->dst_tid;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "893: static int",
      "894: dissect_tcap_End(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "896: gp_tcapsrt_info->ope=TC_END;",
      "898:   col_set_str(actx->pinfo->cinfo, COL_INFO, \"End \");",
      "",
      "[Removed Lines]",
      "895: #line 242 \"./asn1/tcap/tcap.cnf\"",
      "",
      "[Added Lines]",
      "897: #line 250 \"./asn1/tcap/tcap.cnf\"",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "915: static int",
      "916: dissect_tcap_Continue(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "918: gp_tcapsrt_info->ope=TC_CONT;",
      "920:   col_set_str(actx->pinfo->cinfo, COL_INFO, \"Continue \");",
      "",
      "[Removed Lines]",
      "917: #line 249 \"./asn1/tcap/tcap.cnf\"",
      "",
      "[Added Lines]",
      "919: #line 257 \"./asn1/tcap/tcap.cnf\"",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "986: static int",
      "987: dissect_tcap_Abort(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "989: gp_tcapsrt_info->ope=TC_ABORT;",
      "991:   col_set_str(actx->pinfo->cinfo, COL_INFO, \"Abort \");",
      "",
      "[Removed Lines]",
      "988: #line 256 \"./asn1/tcap/tcap.cnf\"",
      "",
      "[Added Lines]",
      "990: #line 264 \"./asn1/tcap/tcap.cnf\"",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1038:   struct tcap_private_t *p_tcap_private = (struct tcap_private_t*)actx->value_ptr;",
      "1039:   offset = dissect_ber_object_identifier_str(implicit_tag, actx, tree, tvb, offset, hf_index, &cur_oid);",
      "1045:   return offset;",
      "",
      "[Removed Lines]",
      "1041:   p_tcap_private->oid= (const void*) cur_oid;",
      "1042:   p_tcap_private->acv=TRUE;",
      "",
      "[Added Lines]",
      "1043:   if (p_tcap_private) {",
      "1044:     p_tcap_private->oid= (const void*) cur_oid;",
      "1045:     p_tcap_private->acv=TRUE;",
      "1046:   }",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1133: static int",
      "1134: dissect_tcap_AARQ_application_context_name(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "1136:   struct tcap_private_t *p_tcap_private = (struct tcap_private_t*)actx->value_ptr;",
      "1137:   offset = dissect_ber_object_identifier_str(implicit_tag, actx, tree, tvb, offset, hf_index, &cur_oid);",
      "1143:   return offset;",
      "",
      "[Removed Lines]",
      "1135: #line 122 \"./asn1/tcap/tcap.cnf\"",
      "1139:   p_tcap_private->oid= (const void*) cur_oid;",
      "1140:   p_tcap_private->acv=TRUE;",
      "",
      "[Added Lines]",
      "1139: #line 124 \"./asn1/tcap/tcap.cnf\"",
      "1143:   if (p_tcap_private) {",
      "1144:     p_tcap_private->oid= (const void*) cur_oid;",
      "1145:     p_tcap_private->acv=TRUE;",
      "1146:   }",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1202: static int",
      "1203: dissect_tcap_AARE_application_context_name(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "1205:   struct tcap_private_t *p_tcap_private = (struct tcap_private_t*)actx->value_ptr;",
      "1206:   offset = dissect_ber_object_identifier_str(implicit_tag, actx, tree, tvb, offset, hf_index, &cur_oid);",
      "1212:   return offset;",
      "",
      "[Removed Lines]",
      "1204: #line 128 \"./asn1/tcap/tcap.cnf\"",
      "1208:   p_tcap_private->oid= (const void*) cur_oid;",
      "1209:   p_tcap_private->acv=TRUE;",
      "",
      "[Added Lines]",
      "1210: #line 132 \"./asn1/tcap/tcap.cnf\"",
      "1214:   if (p_tcap_private) {",
      "1215:     p_tcap_private->oid= (const void*) cur_oid;",
      "1216:     p_tcap_private->acv=TRUE;",
      "1217:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3d1b8004ed3a07422ca5d4e4ee8097150b934fd2",
      "candidate_info": {
        "commit_hash": "3d1b8004ed3a07422ca5d4e4ee8097150b934fd2",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/3d1b8004ed3a07422ca5d4e4ee8097150b934fd2",
        "files": [
          "epan/dissectors/asn1/tcap/tcap.cnf",
          "epan/dissectors/packet-tcap.c"
        ],
        "message": "tcap: check p_tcap_private before dereferencing.\n\nThis caused a NULL pointer dereference on ASAN builds with\nmalformed packets.\n\nAddressSanitizer:DEADLYSIGNAL\n=================================================================\n==15485==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000008 (pc 0x7ff49a4281fa bp 0x7ffe5257a4d0 sp 0x7ffe5257a2c0 T0)\n==15485==The signal is caused by a WRITE memory access.\n==15485==Hint: address points to the zero page.\n    #0 0x7ff49a4281f9 in dissect_tcap_AARQ_application_context_name wireshark/epan/dissectors/./asn1/tcap/tcap.cnf\n    #1 0x7ff498e7bab1 in dissect_ber_sequence wireshark/epan/dissectors/packet-ber.c:2425:17\n\nBug: 15464\nChange-Id: I8fd4f09a1356211acb180e4598a33fce96d98e94\nReviewed-on: https://code.wireshark.org/review/31840\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 34873a20eb489562098c5a58085ae783f869525c)\nReviewed-on: https://code.wireshark.org/review/31842\nPetri-Dish: Dario Lombardo <lomato@gmail.com>\nReviewed-by: Dario Lombardo <lomato@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/asn1/tcap/tcap.cnf||epan/dissectors/asn1/tcap/tcap.cnf",
          "epan/dissectors/packet-tcap.c||epan/dissectors/packet-tcap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/asn1/tcap/tcap.cnf||epan/dissectors/asn1/tcap/tcap.cnf",
            "epan/dissectors/packet-tcap.c||epan/dissectors/packet-tcap.c"
          ],
          "candidate": [
            "epan/dissectors/asn1/tcap/tcap.cnf||epan/dissectors/asn1/tcap/tcap.cnf",
            "epan/dissectors/packet-tcap.c||epan/dissectors/packet-tcap.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/asn1/tcap/tcap.cnf||epan/dissectors/asn1/tcap/tcap.cnf": [
          "File: epan/dissectors/asn1/tcap/tcap.cnf -> epan/dissectors/asn1/tcap/tcap.cnf",
          "--- Hunk 1 ---",
          "[Context before]",
          "115: #.FN_BODY AUDT-apdu/_untag/application-context-name  FN_VARIANT = _str  VAL_PTR = &cur_oid",
          "116:   struct tcap_private_t *p_tcap_private = (struct tcap_private_t*)actx->value_ptr;",
          "117: %(DEFAULT_BODY)s",
          "120: #----------------------------------------------------------------------------------------",
          "121: #.FN_BODY AARQ-apdu/_untag/application-context-name  FN_VARIANT = _str  VAL_PTR = &cur_oid",
          "122:   struct tcap_private_t *p_tcap_private = (struct tcap_private_t*)actx->value_ptr;",
          "123: %(DEFAULT_BODY)s",
          "126: #----------------------------------------------------------------------------------------",
          "127: #.FN_BODY AARE-apdu/_untag/application-context-name  FN_VARIANT = _str  VAL_PTR = &cur_oid",
          "128:   struct tcap_private_t *p_tcap_private = (struct tcap_private_t*)actx->value_ptr;",
          "129: %(DEFAULT_BODY)s",
          "132: #----------------------------------------------------------------------------------------",
          "133: #.FN_BODY OrigTransactionID",
          "134:   tvbuff_t *parameter_tvb;",
          "",
          "[Removed Lines]",
          "118:   p_tcap_private->oid= (const void*) cur_oid;",
          "119:   p_tcap_private->acv=TRUE;",
          "124:   p_tcap_private->oid= (const void*) cur_oid;",
          "125:   p_tcap_private->acv=TRUE;",
          "130:   p_tcap_private->oid= (const void*) cur_oid;",
          "131:   p_tcap_private->acv=TRUE;",
          "",
          "[Added Lines]",
          "118:   if (p_tcap_private) {",
          "119:     p_tcap_private->oid= (const void*) cur_oid;",
          "120:     p_tcap_private->acv=TRUE;",
          "121:   }",
          "126:   if (p_tcap_private) {",
          "127:     p_tcap_private->oid= (const void*) cur_oid;",
          "128:     p_tcap_private->acv=TRUE;",
          "129:   }",
          "134:   if (p_tcap_private) {",
          "135:     p_tcap_private->oid= (const void*) cur_oid;",
          "136:     p_tcap_private->acv=TRUE;",
          "137:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "166:       gp_tcapsrt_info->src_tid=0;",
          "167:       break;",
          "168:     }",
          "171:     if (len) {",
          "172:       col_append_str(actx->pinfo->cinfo, COL_INFO, \"otid(\");",
          "",
          "[Removed Lines]",
          "169:     p_tcap_private->src_tid = gp_tcapsrt_info->src_tid;",
          "",
          "[Added Lines]",
          "175:     if (p_tcap_private)",
          "176:       p_tcap_private->src_tid = gp_tcapsrt_info->src_tid;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "214:       gp_tcapsrt_info->dst_tid=0;",
          "215:       break;",
          "216:     }",
          "219:     if (len) {",
          "220:       col_append_str(actx->pinfo->cinfo, COL_INFO, \"dtid(\");",
          "",
          "[Removed Lines]",
          "217:     p_tcap_private->dst_tid = gp_tcapsrt_info->dst_tid;",
          "",
          "[Added Lines]",
          "224:     if (p_tcap_private)",
          "225:       p_tcap_private->dst_tid = gp_tcapsrt_info->dst_tid;",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-tcap.c||epan/dissectors/packet-tcap.c": [
          "File: epan/dissectors/packet-tcap.c -> epan/dissectors/packet-tcap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "756: static int",
          "757: dissect_tcap_OrigTransactionID(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "759:   tvbuff_t *parameter_tvb;",
          "760:   guint8 len, i;",
          "761:   proto_tree *subtree;",
          "",
          "[Removed Lines]",
          "758: #line 134 \"./asn1/tcap/tcap.cnf\"",
          "",
          "[Added Lines]",
          "758: #line 140 \"./asn1/tcap/tcap.cnf\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "793:       gp_tcapsrt_info->src_tid=0;",
          "794:       break;",
          "795:     }",
          "798:     if (len) {",
          "799:       col_append_str(actx->pinfo->cinfo, COL_INFO, \"otid(\");",
          "",
          "[Removed Lines]",
          "796:     p_tcap_private->src_tid = gp_tcapsrt_info->src_tid;",
          "",
          "[Added Lines]",
          "796:     if (p_tcap_private)",
          "797:       p_tcap_private->src_tid = gp_tcapsrt_info->src_tid;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "820: static int",
          "821: dissect_tcap_Begin(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "823: gp_tcapsrt_info->ope=TC_BEGIN;",
          "",
          "[Removed Lines]",
          "822: #line 228 \"./asn1/tcap/tcap.cnf\"",
          "",
          "[Added Lines]",
          "823: #line 236 \"./asn1/tcap/tcap.cnf\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "842: static int",
          "843: dissect_tcap_DestTransactionID(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "845:   tvbuff_t *parameter_tvb;",
          "846:   guint8 len , i;",
          "847:   proto_tree *subtree;",
          "",
          "[Removed Lines]",
          "844: #line 182 \"./asn1/tcap/tcap.cnf\"",
          "",
          "[Added Lines]",
          "845: #line 189 \"./asn1/tcap/tcap.cnf\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "879:       gp_tcapsrt_info->dst_tid=0;",
          "880:       break;",
          "881:     }",
          "884:     if (len) {",
          "885:       col_append_str(actx->pinfo->cinfo, COL_INFO, \"dtid(\");",
          "",
          "[Removed Lines]",
          "882:     p_tcap_private->dst_tid = gp_tcapsrt_info->dst_tid;",
          "",
          "[Added Lines]",
          "883:     if (p_tcap_private)",
          "884:       p_tcap_private->dst_tid = gp_tcapsrt_info->dst_tid;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "905: static int",
          "906: dissect_tcap_End(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "908: gp_tcapsrt_info->ope=TC_END;",
          "910:   col_set_str(actx->pinfo->cinfo, COL_INFO, \"End \");",
          "",
          "[Removed Lines]",
          "907: #line 242 \"./asn1/tcap/tcap.cnf\"",
          "",
          "[Added Lines]",
          "909: #line 250 \"./asn1/tcap/tcap.cnf\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "927: static int",
          "928: dissect_tcap_Continue(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "930: gp_tcapsrt_info->ope=TC_CONT;",
          "932:   col_set_str(actx->pinfo->cinfo, COL_INFO, \"Continue \");",
          "",
          "[Removed Lines]",
          "929: #line 249 \"./asn1/tcap/tcap.cnf\"",
          "",
          "[Added Lines]",
          "931: #line 257 \"./asn1/tcap/tcap.cnf\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "998: static int",
          "999: dissect_tcap_Abort(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "1001: gp_tcapsrt_info->ope=TC_ABORT;",
          "1003:   col_set_str(actx->pinfo->cinfo, COL_INFO, \"Abort \");",
          "",
          "[Removed Lines]",
          "1000: #line 256 \"./asn1/tcap/tcap.cnf\"",
          "",
          "[Added Lines]",
          "1002: #line 264 \"./asn1/tcap/tcap.cnf\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1050:   struct tcap_private_t *p_tcap_private = (struct tcap_private_t*)actx->value_ptr;",
          "1051:   offset = dissect_ber_object_identifier_str(implicit_tag, actx, tree, tvb, offset, hf_index, &cur_oid);",
          "1057:   return offset;",
          "",
          "[Removed Lines]",
          "1053:   p_tcap_private->oid= (const void*) cur_oid;",
          "1054:   p_tcap_private->acv=TRUE;",
          "",
          "[Added Lines]",
          "1055:   if (p_tcap_private) {",
          "1056:     p_tcap_private->oid= (const void*) cur_oid;",
          "1057:     p_tcap_private->acv=TRUE;",
          "1058:   }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1145: static int",
          "1146: dissect_tcap_AARQ_application_context_name(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "1148:   struct tcap_private_t *p_tcap_private = (struct tcap_private_t*)actx->value_ptr;",
          "1149:   offset = dissect_ber_object_identifier_str(implicit_tag, actx, tree, tvb, offset, hf_index, &cur_oid);",
          "1155:   return offset;",
          "",
          "[Removed Lines]",
          "1147: #line 122 \"./asn1/tcap/tcap.cnf\"",
          "1151:   p_tcap_private->oid= (const void*) cur_oid;",
          "1152:   p_tcap_private->acv=TRUE;",
          "",
          "[Added Lines]",
          "1151: #line 124 \"./asn1/tcap/tcap.cnf\"",
          "1155:   if (p_tcap_private) {",
          "1156:     p_tcap_private->oid= (const void*) cur_oid;",
          "1157:     p_tcap_private->acv=TRUE;",
          "1158:   }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1214: static int",
          "1215: dissect_tcap_AARE_application_context_name(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "1217:   struct tcap_private_t *p_tcap_private = (struct tcap_private_t*)actx->value_ptr;",
          "1218:   offset = dissect_ber_object_identifier_str(implicit_tag, actx, tree, tvb, offset, hf_index, &cur_oid);",
          "1224:   return offset;",
          "",
          "[Removed Lines]",
          "1216: #line 128 \"./asn1/tcap/tcap.cnf\"",
          "1220:   p_tcap_private->oid= (const void*) cur_oid;",
          "1221:   p_tcap_private->acv=TRUE;",
          "",
          "[Added Lines]",
          "1222: #line 132 \"./asn1/tcap/tcap.cnf\"",
          "1226:   if (p_tcap_private) {",
          "1227:     p_tcap_private->oid= (const void*) cur_oid;",
          "1228:     p_tcap_private->acv=TRUE;",
          "1229:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "03c674b21bac121687522d3fe145eeb56ce72258",
      "candidate_info": {
        "commit_hash": "03c674b21bac121687522d3fe145eeb56ce72258",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/03c674b21bac121687522d3fe145eeb56ce72258",
        "files": [
          "epan/dissectors/asn1/tcap/tcap.cnf",
          "epan/dissectors/packet-tcap.c"
        ],
        "message": "tcap: check p_tcap_private before dereferencing.\n\nThis caused a NULL pointer dereference on ASAN builds with\nmalformed packets.\n\nAddressSanitizer:DEADLYSIGNAL\n=================================================================\n==15485==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000008 (pc 0x7ff49a4281fa bp 0x7ffe5257a4d0 sp 0x7ffe5257a2c0 T0)\n==15485==The signal is caused by a WRITE memory access.\n==15485==Hint: address points to the zero page.\n    #0 0x7ff49a4281f9 in dissect_tcap_AARQ_application_context_name wireshark/epan/dissectors/./asn1/tcap/tcap.cnf\n    #1 0x7ff498e7bab1 in dissect_ber_sequence wireshark/epan/dissectors/packet-ber.c:2425:17\n\nBug: 15464\nChange-Id: I8fd4f09a1356211acb180e4598a33fce96d98e94\nReviewed-on: https://code.wireshark.org/review/31840\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 34873a20eb489562098c5a58085ae783f869525c)\nReviewed-on: https://code.wireshark.org/review/31841\nPetri-Dish: Dario Lombardo <lomato@gmail.com>\nReviewed-by: Dario Lombardo <lomato@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/asn1/tcap/tcap.cnf||epan/dissectors/asn1/tcap/tcap.cnf",
          "epan/dissectors/packet-tcap.c||epan/dissectors/packet-tcap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/asn1/tcap/tcap.cnf||epan/dissectors/asn1/tcap/tcap.cnf",
            "epan/dissectors/packet-tcap.c||epan/dissectors/packet-tcap.c"
          ],
          "candidate": [
            "epan/dissectors/asn1/tcap/tcap.cnf||epan/dissectors/asn1/tcap/tcap.cnf",
            "epan/dissectors/packet-tcap.c||epan/dissectors/packet-tcap.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/asn1/tcap/tcap.cnf||epan/dissectors/asn1/tcap/tcap.cnf": [
          "File: epan/dissectors/asn1/tcap/tcap.cnf -> epan/dissectors/asn1/tcap/tcap.cnf",
          "--- Hunk 1 ---",
          "[Context before]",
          "115: #.FN_BODY AUDT-apdu/_untag/application-context-name  FN_VARIANT = _str  VAL_PTR = &cur_oid",
          "116:   struct tcap_private_t *p_tcap_private = (struct tcap_private_t*)actx->value_ptr;",
          "117: %(DEFAULT_BODY)s",
          "120: #----------------------------------------------------------------------------------------",
          "121: #.FN_BODY AARQ-apdu/_untag/application-context-name  FN_VARIANT = _str  VAL_PTR = &cur_oid",
          "122:   struct tcap_private_t *p_tcap_private = (struct tcap_private_t*)actx->value_ptr;",
          "123: %(DEFAULT_BODY)s",
          "126: #----------------------------------------------------------------------------------------",
          "127: #.FN_BODY AARE-apdu/_untag/application-context-name  FN_VARIANT = _str  VAL_PTR = &cur_oid",
          "128:   struct tcap_private_t *p_tcap_private = (struct tcap_private_t*)actx->value_ptr;",
          "129: %(DEFAULT_BODY)s",
          "132: #----------------------------------------------------------------------------------------",
          "133: #.FN_BODY OrigTransactionID",
          "134:   tvbuff_t *parameter_tvb;",
          "",
          "[Removed Lines]",
          "118:   p_tcap_private->oid= (const void*) cur_oid;",
          "119:   p_tcap_private->acv=TRUE;",
          "124:   p_tcap_private->oid= (const void*) cur_oid;",
          "125:   p_tcap_private->acv=TRUE;",
          "130:   p_tcap_private->oid= (const void*) cur_oid;",
          "131:   p_tcap_private->acv=TRUE;",
          "",
          "[Added Lines]",
          "118:   if (p_tcap_private) {",
          "119:     p_tcap_private->oid= (const void*) cur_oid;",
          "120:     p_tcap_private->acv=TRUE;",
          "121:   }",
          "126:   if (p_tcap_private) {",
          "127:     p_tcap_private->oid= (const void*) cur_oid;",
          "128:     p_tcap_private->acv=TRUE;",
          "129:   }",
          "134:   if (p_tcap_private) {",
          "135:     p_tcap_private->oid= (const void*) cur_oid;",
          "136:     p_tcap_private->acv=TRUE;",
          "137:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "166:       gp_tcapsrt_info->src_tid=0;",
          "167:       break;",
          "168:     }",
          "171:     if (len) {",
          "172:       col_append_str(actx->pinfo->cinfo, COL_INFO, \"otid(\");",
          "",
          "[Removed Lines]",
          "169:     p_tcap_private->src_tid = gp_tcapsrt_info->src_tid;",
          "",
          "[Added Lines]",
          "175:     if (p_tcap_private)",
          "176:       p_tcap_private->src_tid = gp_tcapsrt_info->src_tid;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "214:       gp_tcapsrt_info->dst_tid=0;",
          "215:       break;",
          "216:     }",
          "219:     if (len) {",
          "220:       col_append_str(actx->pinfo->cinfo, COL_INFO, \"dtid(\");",
          "",
          "[Removed Lines]",
          "217:     p_tcap_private->dst_tid = gp_tcapsrt_info->dst_tid;",
          "",
          "[Added Lines]",
          "224:     if (p_tcap_private)",
          "225:       p_tcap_private->dst_tid = gp_tcapsrt_info->dst_tid;",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-tcap.c||epan/dissectors/packet-tcap.c": [
          "File: epan/dissectors/packet-tcap.c -> epan/dissectors/packet-tcap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "744: static int",
          "745: dissect_tcap_OrigTransactionID(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "747:   tvbuff_t *parameter_tvb;",
          "748:   guint8 len, i;",
          "749:   proto_tree *subtree;",
          "",
          "[Removed Lines]",
          "746: #line 134 \"./asn1/tcap/tcap.cnf\"",
          "",
          "[Added Lines]",
          "746: #line 140 \"./asn1/tcap/tcap.cnf\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "781:       gp_tcapsrt_info->src_tid=0;",
          "782:       break;",
          "783:     }",
          "786:     if (len) {",
          "787:       col_append_str(actx->pinfo->cinfo, COL_INFO, \"otid(\");",
          "",
          "[Removed Lines]",
          "784:     p_tcap_private->src_tid = gp_tcapsrt_info->src_tid;",
          "",
          "[Added Lines]",
          "784:     if (p_tcap_private)",
          "785:       p_tcap_private->src_tid = gp_tcapsrt_info->src_tid;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "808: static int",
          "809: dissect_tcap_Begin(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "811: gp_tcapsrt_info->ope=TC_BEGIN;",
          "",
          "[Removed Lines]",
          "810: #line 228 \"./asn1/tcap/tcap.cnf\"",
          "",
          "[Added Lines]",
          "811: #line 236 \"./asn1/tcap/tcap.cnf\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "830: static int",
          "831: dissect_tcap_DestTransactionID(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "833:   tvbuff_t *parameter_tvb;",
          "834:   guint8 len , i;",
          "835:   proto_tree *subtree;",
          "",
          "[Removed Lines]",
          "832: #line 182 \"./asn1/tcap/tcap.cnf\"",
          "",
          "[Added Lines]",
          "833: #line 189 \"./asn1/tcap/tcap.cnf\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "867:       gp_tcapsrt_info->dst_tid=0;",
          "868:       break;",
          "869:     }",
          "872:     if (len) {",
          "873:       col_append_str(actx->pinfo->cinfo, COL_INFO, \"dtid(\");",
          "",
          "[Removed Lines]",
          "870:     p_tcap_private->dst_tid = gp_tcapsrt_info->dst_tid;",
          "",
          "[Added Lines]",
          "871:     if (p_tcap_private)",
          "872:       p_tcap_private->dst_tid = gp_tcapsrt_info->dst_tid;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "893: static int",
          "894: dissect_tcap_End(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "896: gp_tcapsrt_info->ope=TC_END;",
          "898:   col_set_str(actx->pinfo->cinfo, COL_INFO, \"End \");",
          "",
          "[Removed Lines]",
          "895: #line 242 \"./asn1/tcap/tcap.cnf\"",
          "",
          "[Added Lines]",
          "897: #line 250 \"./asn1/tcap/tcap.cnf\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "915: static int",
          "916: dissect_tcap_Continue(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "918: gp_tcapsrt_info->ope=TC_CONT;",
          "920:   col_set_str(actx->pinfo->cinfo, COL_INFO, \"Continue \");",
          "",
          "[Removed Lines]",
          "917: #line 249 \"./asn1/tcap/tcap.cnf\"",
          "",
          "[Added Lines]",
          "919: #line 257 \"./asn1/tcap/tcap.cnf\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "986: static int",
          "987: dissect_tcap_Abort(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "989: gp_tcapsrt_info->ope=TC_ABORT;",
          "991:   col_set_str(actx->pinfo->cinfo, COL_INFO, \"Abort \");",
          "",
          "[Removed Lines]",
          "988: #line 256 \"./asn1/tcap/tcap.cnf\"",
          "",
          "[Added Lines]",
          "990: #line 264 \"./asn1/tcap/tcap.cnf\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1038:   struct tcap_private_t *p_tcap_private = (struct tcap_private_t*)actx->value_ptr;",
          "1039:   offset = dissect_ber_object_identifier_str(implicit_tag, actx, tree, tvb, offset, hf_index, &cur_oid);",
          "1045:   return offset;",
          "",
          "[Removed Lines]",
          "1041:   p_tcap_private->oid= (const void*) cur_oid;",
          "1042:   p_tcap_private->acv=TRUE;",
          "",
          "[Added Lines]",
          "1043:   if (p_tcap_private) {",
          "1044:     p_tcap_private->oid= (const void*) cur_oid;",
          "1045:     p_tcap_private->acv=TRUE;",
          "1046:   }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1133: static int",
          "1134: dissect_tcap_AARQ_application_context_name(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "1136:   struct tcap_private_t *p_tcap_private = (struct tcap_private_t*)actx->value_ptr;",
          "1137:   offset = dissect_ber_object_identifier_str(implicit_tag, actx, tree, tvb, offset, hf_index, &cur_oid);",
          "1143:   return offset;",
          "",
          "[Removed Lines]",
          "1135: #line 122 \"./asn1/tcap/tcap.cnf\"",
          "1139:   p_tcap_private->oid= (const void*) cur_oid;",
          "1140:   p_tcap_private->acv=TRUE;",
          "",
          "[Added Lines]",
          "1139: #line 124 \"./asn1/tcap/tcap.cnf\"",
          "1143:   if (p_tcap_private) {",
          "1144:     p_tcap_private->oid= (const void*) cur_oid;",
          "1145:     p_tcap_private->acv=TRUE;",
          "1146:   }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1202: static int",
          "1203: dissect_tcap_AARE_application_context_name(gboolean implicit_tag _U_, tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "1205:   struct tcap_private_t *p_tcap_private = (struct tcap_private_t*)actx->value_ptr;",
          "1206:   offset = dissect_ber_object_identifier_str(implicit_tag, actx, tree, tvb, offset, hf_index, &cur_oid);",
          "1212:   return offset;",
          "",
          "[Removed Lines]",
          "1204: #line 128 \"./asn1/tcap/tcap.cnf\"",
          "1208:   p_tcap_private->oid= (const void*) cur_oid;",
          "1209:   p_tcap_private->acv=TRUE;",
          "",
          "[Added Lines]",
          "1210: #line 132 \"./asn1/tcap/tcap.cnf\"",
          "1214:   if (p_tcap_private) {",
          "1215:     p_tcap_private->oid= (const void*) cur_oid;",
          "1216:     p_tcap_private->acv=TRUE;",
          "1217:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8b6eb05bb3ae7b27267a48d7cb248a8732bb9bc8",
      "candidate_info": {
        "commit_hash": "8b6eb05bb3ae7b27267a48d7cb248a8732bb9bc8",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/8b6eb05bb3ae7b27267a48d7cb248a8732bb9bc8",
        "files": [
          "epan/dissectors/packet-ieee80211.c"
        ],
        "message": "ieee80211: One to one mapping between conversations and associations\n\nIn the IEEE 802.11 dissector the conversations concept is (re)used\nfor tracking associations. The conversations are then used to keep\ndata that's unique for a certain association, like negotiated AKMS.\n\nThough currently associations are unique per (re)association\nwhereas conversations are unique based only on src/dest address.\nThis is problematic for captures with multiple associations with\nsame STA/BSSI pair.\n\nFor example:\nAssoc req frame (assoc #1, conversation #1)\nReassoc frame (assoc #2, conversation #1)\nAssoc req frame (assoc #3, conversation #1)\n\nTo make a one to one mapping between conversations and associations\nstore an association counter with each frame and use it with the pinfo\nsrcport/destport fields to build a conversation key:\n(src, dest, association_counter).\n\nBug: 15616\nChange-Id: Ie020bdffbcdab4739ee07f73025ef1157c1fc329\nReviewed-on: https://code.wireshark.org/review/32737\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-ieee80211.c||epan/dissectors/packet-ieee80211.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-ieee80211.c||epan/dissectors/packet-ieee80211.c": [
          "File: epan/dissectors/packet-ieee80211.c -> epan/dissectors/packet-ieee80211.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "124: static gboolean wlan_key_mic_len_enable = FALSE;",
          "125: static guint wlan_key_mic_len = 0;",
          "128: static reassembly_table wlan_reassembly_table;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "132: static guint32 association_counter = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "245: #define IS_CTRL_GRANT_OR_GRANT_ACK_KEY 2",
          "246: #define EAPOL_KEY 3",
          "247: #define PACKET_DATA_KEY 4",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "255: #define ASSOC_COUNTER_KEY 5",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "22364:           tagged_parameter_tree_len, MGT_ASSOC_REQ, &association_sanity_check);",
          "22365:       ieee_80211_do_association_sanity_check(pinfo, &association_sanity_check);",
          "22367:       conversation = find_or_create_conversation(pinfo);",
          "22368:       conversation_data = get_or_create_conversation_data(conversation);",
          "22369:       conversation_data->last_akm_suite = association_sanity_check.last_akm_suite;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22375:       if (!pinfo->fd->visited) {",
          "22376:         association_counter++;",
          "22377:         p_add_proto_data(wmem_file_scope(), pinfo, proto_wlan, ASSOC_COUNTER_KEY,",
          "22378:                          GUINT_TO_POINTER(association_counter));",
          "22379:       }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "22402:           tagged_parameter_tree_len, MGT_REASSOC_REQ, &association_sanity_check);",
          "22403:       ieee_80211_do_association_sanity_check(pinfo, &association_sanity_check);",
          "22405:       conversation = find_or_create_conversation(pinfo);",
          "22406:       conversation_data = get_or_create_conversation_data(conversation);",
          "22407:       conversation_data->last_akm_suite = association_sanity_check.last_akm_suite;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22418:       if (!pinfo->fd->visited) {",
          "22419:         association_counter++;",
          "22420:         p_add_proto_data(wmem_file_scope(), pinfo, proto_wlan, ASSOC_COUNTER_KEY,",
          "22421:                          GUINT_TO_POINTER(association_counter));",
          "22422:       }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "23647:   whdr= &whdrs[0];",
          "23649:   col_set_str(pinfo->cinfo, COL_PROTOCOL, \"802.11\");",
          "23650:   col_clear(pinfo->cinfo, COL_INFO);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23668:   if (!pinfo->fd->visited) {",
          "23669:     p_add_proto_data(wmem_file_scope(), pinfo, proto_wlan, ASSOC_COUNTER_KEY,",
          "23670:                      GUINT_TO_POINTER(association_counter));",
          "23671:   }",
          "23672:   pinfo->srcport = GPOINTER_TO_UINT(",
          "23673:     p_get_proto_data(wmem_file_scope(), pinfo, proto_wlan, ASSOC_COUNTER_KEY));",
          "23674:   pinfo->destport = pinfo->srcport;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d13244c6f70eafc05e12992fa4a56a0da3a758c4",
      "candidate_info": {
        "commit_hash": "d13244c6f70eafc05e12992fa4a56a0da3a758c4",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/d13244c6f70eafc05e12992fa4a56a0da3a758c4",
        "files": [
          "epan/dissectors/packet-asterix.c"
        ],
        "message": "Updates and bugfixes of ASTERIX I048\n\nI048 v1.23 updates (now the default)\n- Added I048/020.ERR\n- Updated I048/170.CDM value meaning\nI048 v1.21 updates\n- Added I048/020.XPP\n- Updated I048/030.WE with new value codes (19-23)\nI048 updates\n- Added I048/RE.MD5, Mode 5 Reports\n- Added I048/RE.M5N, Mode 5 Reports, New Format\n- Added I048/RE.M4E, Extended Mode 4 Report\n- Added I048/RE.RPC, Radar Plot Characteristics\n- Added I048/RE.ERR, Extended Range Report\nI048 bugfixes\n- Fixed I048 Capitalisation and spelling inconsistencies\n- Fixed I048/030, now displays up to 10 Warning/Error codes\n- Fixed I048/100, fixed order and invalid masks of all sub-fields\n- Fixed I048/120#0.CAL, incorrect type, missing mask\n- Fixed I048/120#1.DOP, incorrect type\n- Fixed I048/120#1.AMB, incorrect type\n- Fixed I048/120#1.FRQ, incorrect type\n- Fixed I048/260.ACAS, not displaying anything, incorrect type\n\nChange-Id: I5d742fded258e3831392cb6f1e1d9d3eafd6e938\nReviewed-on: https://code.wireshark.org/review/31379\nPetri-Dish: Anders Broman <a.broman58@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-asterix.c||epan/dissectors/packet-asterix.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-asterix.c||epan/dissectors/packet-asterix.c": [
          "File: epan/dissectors/packet-asterix.c -> epan/dissectors/packet-asterix.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "827: static gint hf_048_020_SPI = -1;",
          "828: static gint hf_048_020_RAB = -1;",
          "829: static gint hf_048_020_TST = -1;",
          "830: static gint hf_048_020_ME = -1;",
          "831: static gint hf_048_020_MI = -1;",
          "832: static gint hf_048_020_FOE = -1;",
          "833: static gint hf_048_030 = -1;",
          "834: static gint hf_048_030_WE = -1;",
          "835: static gint hf_048_040 = -1;",
          "836: static gint hf_048_040_RHO = -1;",
          "837: static gint hf_048_040_THETA = -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "830: static gint hf_048_020_ERR = -1;",
          "831: static gint hf_048_020_XPP = -1;",
          "837: static gint hf_048_030_1_WE = -1;",
          "838: static gint hf_048_030_2_WE = -1;",
          "839: static gint hf_048_030_3_WE = -1;",
          "840: static gint hf_048_030_4_WE = -1;",
          "841: static gint hf_048_030_5_WE = -1;",
          "842: static gint hf_048_030_6_WE = -1;",
          "843: static gint hf_048_030_7_WE = -1;",
          "844: static gint hf_048_030_8_WE = -1;",
          "845: static gint hf_048_030_9_WE = -1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "950: static gint hf_048_170_DOU = -1;",
          "951: static gint hf_048_170_MAH = -1;",
          "952: static gint hf_048_170_CDM = -1;",
          "953: static gint hf_048_170_TRE = -1;",
          "954: static gint hf_048_170_GHO = -1;",
          "955: static gint hf_048_170_SUP = -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "964: static gint hf_048_170_CDM_v1_21 = -1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "977: static gint hf_048_260 = -1;",
          "978: static gint hf_048_260_ACAS = -1;",
          "979: static gint hf_048_RE = -1;",
          "980: static gint hf_048_SP = -1;",
          "982: static gint hf_062_010 = -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "992: static gint hf_048_RE_MD5 = -1;",
          "993: static gint hf_048_RE_MD5_01 = -1;",
          "994: static gint hf_048_RE_MD5_01_M5 = -1;",
          "995: static gint hf_048_RE_MD5_01_ID = -1;",
          "996: static gint hf_048_RE_MD5_01_DA = -1;",
          "997: static gint hf_048_RE_MD5_01_M1 = -1;",
          "998: static gint hf_048_RE_MD5_01_M2 = -1;",
          "999: static gint hf_048_RE_MD5_01_M3 = -1;",
          "1000: static gint hf_048_RE_MD5_01_MC = -1;",
          "1001: static gint hf_048_RE_MD5_02 = -1;",
          "1002: static gint hf_048_RE_MD5_02_PIN = -1;",
          "1003: static gint hf_048_RE_MD5_02_NAV = -1;",
          "1004: static gint hf_048_RE_MD5_02_NAT = -1;",
          "1005: static gint hf_048_RE_MD5_02_MIS = -1;",
          "1006: static gint hf_048_RE_MD5_03 = -1;",
          "1007: static gint hf_048_RE_MD5_03_LAT = -1;",
          "1008: static gint hf_048_RE_MD5_03_LON = -1;",
          "1009: static gint hf_048_RE_MD5_04 = -1;",
          "1010: static gint hf_048_RE_MD5_04_RES = -1;",
          "1011: static gint hf_048_RE_MD5_04_GA = -1;",
          "1012: static gint hf_048_RE_MD5_05 = -1;",
          "1013: static gint hf_048_RE_MD5_05_V = -1;",
          "1014: static gint hf_048_RE_MD5_05_G = -1;",
          "1015: static gint hf_048_RE_MD5_05_L = -1;",
          "1016: static gint hf_048_RE_MD5_05_SQUAWK = -1;",
          "1017: static gint hf_048_RE_MD5_06 = -1;",
          "1018: static gint hf_048_RE_MD5_06_TOS = -1;",
          "1019: static gint hf_048_RE_MD5_07 = -1;",
          "1020: static gint hf_048_RE_MD5_07_XP = -1;",
          "1021: static gint hf_048_RE_MD5_07_X5 = -1;",
          "1022: static gint hf_048_RE_MD5_07_XC = -1;",
          "1023: static gint hf_048_RE_MD5_07_X3 = -1;",
          "1024: static gint hf_048_RE_MD5_07_X2 = -1;",
          "1025: static gint hf_048_RE_MD5_07_X1 = -1;",
          "1026: static gint hf_048_RE_M5N = -1;",
          "1027: static gint hf_048_RE_M5N_01 = -1;",
          "1028: static gint hf_048_RE_M5N_01_M5 = -1;",
          "1029: static gint hf_048_RE_M5N_01_ID = -1;",
          "1030: static gint hf_048_RE_M5N_01_DA = -1;",
          "1031: static gint hf_048_RE_M5N_01_M1 = -1;",
          "1032: static gint hf_048_RE_M5N_01_M2 = -1;",
          "1033: static gint hf_048_RE_M5N_01_M3 = -1;",
          "1034: static gint hf_048_RE_M5N_01_MC = -1;",
          "1035: static gint hf_048_RE_M5N_02 = -1;",
          "1036: static gint hf_048_RE_M5N_02_PIN = -1;",
          "1037: static gint hf_048_RE_M5N_02_NOV = -1;",
          "1038: static gint hf_048_RE_M5N_02_NO = -1;",
          "1039: static gint hf_048_RE_M5N_03 = -1;",
          "1040: static gint hf_048_RE_M5N_03_LAT = -1;",
          "1041: static gint hf_048_RE_M5N_03_LON = -1;",
          "1042: static gint hf_048_RE_M5N_04 = -1;",
          "1043: static gint hf_048_RE_M5N_04_RES = -1;",
          "1044: static gint hf_048_RE_M5N_04_GA = -1;",
          "1045: static gint hf_048_RE_M5N_05 = -1;",
          "1046: static gint hf_048_RE_M5N_05_V = -1;",
          "1047: static gint hf_048_RE_M5N_05_G = -1;",
          "1048: static gint hf_048_RE_M5N_05_L = -1;",
          "1049: static gint hf_048_RE_M5N_05_SQUAWK = -1;",
          "1050: static gint hf_048_RE_M5N_06 = -1;",
          "1051: static gint hf_048_RE_M5N_06_TOS = -1;",
          "1052: static gint hf_048_RE_M5N_07 = -1;",
          "1053: static gint hf_048_RE_M5N_07_XP = -1;",
          "1054: static gint hf_048_RE_M5N_07_X5 = -1;",
          "1055: static gint hf_048_RE_M5N_07_XC = -1;",
          "1056: static gint hf_048_RE_M5N_07_X3 = -1;",
          "1057: static gint hf_048_RE_M5N_07_X2 = -1;",
          "1058: static gint hf_048_RE_M5N_07_X1 = -1;",
          "1059: static gint hf_048_RE_M5N_08 = -1;",
          "1060: static gint hf_048_RE_M5N_08_FOM = -1;",
          "1061: static gint hf_048_RE_M4E = -1;",
          "1062: static gint hf_048_RE_M4E_FOE_FRI = -1;",
          "1063: static gint hf_048_RE_RPC = -1;",
          "1064: static gint hf_048_RE_RPC_01 = -1;",
          "1065: static gint hf_048_RE_RPC_01_SCO = -1;",
          "1066: static gint hf_048_RE_RPC_02 = -1;",
          "1067: static gint hf_048_RE_RPC_02_SCR = -1;",
          "1068: static gint hf_048_RE_RPC_03 = -1;",
          "1069: static gint hf_048_RE_RPC_03_RW = -1;",
          "1070: static gint hf_048_RE_RPC_04 = -1;",
          "1071: static gint hf_048_RE_RPC_04_AR = -1;",
          "1072: static gint hf_048_RE_ERR = -1;",
          "1073: static gint hf_048_RE_ERR_RHO = -1;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2265: static gint ett_048_020_SPI = -1;",
          "2266: static gint ett_048_020_RAB = -1;",
          "2267: static gint ett_048_020_TST = -1;",
          "2268: static gint ett_048_020_ME = -1;",
          "2269: static gint ett_048_020_MI = -1;",
          "2270: static gint ett_048_020_FOE = -1;",
          "2271: static gint ett_048_030 = -1;",
          "2272: static gint ett_048_030_WE = -1;",
          "2273: static gint ett_048_040 = -1;",
          "2274: static gint ett_048_040_RHO = -1;",
          "2275: static gint ett_048_040_THETA = -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2362: static gint ett_048_020_ERR = -1;",
          "2363: static gint ett_048_020_XPP = -1;",
          "2369: static gint ett_048_030_1_WE = -1;",
          "2370: static gint ett_048_030_2_WE = -1;",
          "2371: static gint ett_048_030_3_WE = -1;",
          "2372: static gint ett_048_030_4_WE = -1;",
          "2373: static gint ett_048_030_5_WE = -1;",
          "2374: static gint ett_048_030_6_WE = -1;",
          "2375: static gint ett_048_030_7_WE = -1;",
          "2376: static gint ett_048_030_8_WE = -1;",
          "2377: static gint ett_048_030_9_WE = -1;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2388: static gint ett_048_170_DOU = -1;",
          "2389: static gint ett_048_170_MAH = -1;",
          "2390: static gint ett_048_170_CDM = -1;",
          "2391: static gint ett_048_170_TRE = -1;",
          "2392: static gint ett_048_170_GHO = -1;",
          "2393: static gint ett_048_170_SUP = -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2496: static gint ett_048_170_CDM_v1_21 = -1;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2415: static gint ett_048_260 = -1;",
          "2416: static gint ett_048_260_ACAS = -1;",
          "2417: static gint ett_048_RE = -1;",
          "2418: static gint ett_048_SP = -1;",
          "2420: static gint ett_062_010 = -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2524: static gint ett_048_RE_MD5 = -1;",
          "2525: static gint ett_048_RE_MD5_01 = -1;",
          "2526: static gint ett_048_RE_MD5_01_M5 = -1;",
          "2527: static gint ett_048_RE_MD5_01_ID = -1;",
          "2528: static gint ett_048_RE_MD5_01_DA = -1;",
          "2529: static gint ett_048_RE_MD5_01_M1 = -1;",
          "2530: static gint ett_048_RE_MD5_01_M2 = -1;",
          "2531: static gint ett_048_RE_MD5_01_M3 = -1;",
          "2532: static gint ett_048_RE_MD5_01_MC = -1;",
          "2533: static gint ett_048_RE_MD5_02 = -1;",
          "2534: static gint ett_048_RE_MD5_02_PIN = -1;",
          "2535: static gint ett_048_RE_MD5_02_NAV = -1;",
          "2536: static gint ett_048_RE_MD5_02_NAT = -1;",
          "2537: static gint ett_048_RE_MD5_02_MIS = -1;",
          "2538: static gint ett_048_RE_MD5_03 = -1;",
          "2539: static gint ett_048_RE_MD5_03_LAT = -1;",
          "2540: static gint ett_048_RE_MD5_03_LON = -1;",
          "2541: static gint ett_048_RE_MD5_04 = -1;",
          "2542: static gint ett_048_RE_MD5_04_RES = -1;",
          "2543: static gint ett_048_RE_MD5_04_GA = -1;",
          "2544: static gint ett_048_RE_MD5_05 = -1;",
          "2545: static gint ett_048_RE_MD5_05_V = -1;",
          "2546: static gint ett_048_RE_MD5_05_G = -1;",
          "2547: static gint ett_048_RE_MD5_05_L = -1;",
          "2548: static gint ett_048_RE_MD5_05_SQUAWK = -1;",
          "2549: static gint ett_048_RE_MD5_06 = -1;",
          "2550: static gint ett_048_RE_MD5_06_TOS = -1;",
          "2551: static gint ett_048_RE_MD5_07 = -1;",
          "2552: static gint ett_048_RE_MD5_07_XP = -1;",
          "2553: static gint ett_048_RE_MD5_07_X5 = -1;",
          "2554: static gint ett_048_RE_MD5_07_XC = -1;",
          "2555: static gint ett_048_RE_MD5_07_X3 = -1;",
          "2556: static gint ett_048_RE_MD5_07_X2 = -1;",
          "2557: static gint ett_048_RE_MD5_07_X1 = -1;",
          "2558: static gint ett_048_RE_M5N = -1;",
          "2559: static gint ett_048_RE_M5N_01 = -1;",
          "2560: static gint ett_048_RE_M5N_01_M5 = -1;",
          "2561: static gint ett_048_RE_M5N_01_ID = -1;",
          "2562: static gint ett_048_RE_M5N_01_DA = -1;",
          "2563: static gint ett_048_RE_M5N_01_M1 = -1;",
          "2564: static gint ett_048_RE_M5N_01_M2 = -1;",
          "2565: static gint ett_048_RE_M5N_01_M3 = -1;",
          "2566: static gint ett_048_RE_M5N_01_MC = -1;",
          "2567: static gint ett_048_RE_M5N_02 = -1;",
          "2568: static gint ett_048_RE_M5N_02_PIN = -1;",
          "2569: static gint ett_048_RE_M5N_02_NOV = -1;",
          "2570: static gint ett_048_RE_M5N_02_NO = -1;",
          "2571: static gint ett_048_RE_M5N_03 = -1;",
          "2572: static gint ett_048_RE_M5N_03_LAT = -1;",
          "2573: static gint ett_048_RE_M5N_03_LON = -1;",
          "2574: static gint ett_048_RE_M5N_04 = -1;",
          "2575: static gint ett_048_RE_M5N_04_RES = -1;",
          "2576: static gint ett_048_RE_M5N_04_GA = -1;",
          "2577: static gint ett_048_RE_M5N_05 = -1;",
          "2578: static gint ett_048_RE_M5N_05_V = -1;",
          "2579: static gint ett_048_RE_M5N_05_G = -1;",
          "2580: static gint ett_048_RE_M5N_05_L = -1;",
          "2581: static gint ett_048_RE_M5N_05_SQUAWK = -1;",
          "2582: static gint ett_048_RE_M5N_06 = -1;",
          "2583: static gint ett_048_RE_M5N_06_TOS = -1;",
          "2584: static gint ett_048_RE_M5N_07 = -1;",
          "2585: static gint ett_048_RE_M5N_07_XP = -1;",
          "2586: static gint ett_048_RE_M5N_07_X5 = -1;",
          "2587: static gint ett_048_RE_M5N_07_XC = -1;",
          "2588: static gint ett_048_RE_M5N_07_X3 = -1;",
          "2589: static gint ett_048_RE_M5N_07_X2 = -1;",
          "2590: static gint ett_048_RE_M5N_07_X1 = -1;",
          "2591: static gint ett_048_RE_M5N_08 = -1;",
          "2592: static gint ett_048_RE_M5N_08_FOM = -1;",
          "2593: static gint ett_048_RE_M4E = -1;",
          "2594: static gint ett_048_RE_M4E_FOE_FRI = -1;",
          "2595: static gint ett_048_RE_RPC = -1;",
          "2596: static gint ett_048_RE_RPC_01 = -1;",
          "2597: static gint ett_048_RE_RPC_01_SCO = -1;",
          "2598: static gint ett_048_RE_RPC_02 = -1;",
          "2599: static gint ett_048_RE_RPC_02_SCR = -1;",
          "2600: static gint ett_048_RE_RPC_03 = -1;",
          "2601: static gint ett_048_RE_RPC_03_RW = -1;",
          "2602: static gint ett_048_RE_RPC_04 = -1;",
          "2603: static gint ett_048_RE_RPC_04_AR = -1;",
          "2604: static gint ett_048_RE_ERR = -1;",
          "2605: static gint ett_048_RE_ERR_RHO = -1;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "6222:     { 1, \"Test target report\" },",
          "6223:     { 0, NULL }",
          "6224: };",
          "6225: static const value_string valstr_048_020_ME[] = {",
          "6226:     { 0, \"No military emergency\" },",
          "6227:     { 1, \"Military emergency\" },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6413: static const value_string valstr_048_020_ERR[] = {",
          "6414:     { 0, \"No extended range\" },",
          "6415:     { 1, \"Extended range present\" },",
          "6416:     { 0, NULL }",
          "6417: };",
          "6418: static const value_string valstr_048_020_XPP[] = {",
          "6419:     { 0, \"No X-Pulse present\" },",
          "6420:     { 1, \"X-Pulse present\" },",
          "6421:     { 0, NULL }",
          "6422: };",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "6245: static const FieldPart I048_020_SPI = { 1, 1.0, FIELD_PART_UINT, &hf_048_020_SPI, NULL };",
          "6246: static const FieldPart I048_020_RAB = { 1, 1.0, FIELD_PART_UINT, &hf_048_020_RAB, NULL };",
          "6247: static const FieldPart I048_020_TST = { 1, 1.0, FIELD_PART_UINT, &hf_048_020_TST, NULL };",
          "6248: static const FieldPart I048_020_ME = { 1, 1.0, FIELD_PART_UINT, &hf_048_020_ME, NULL };",
          "6249: static const FieldPart I048_020_MI = { 1, 1.0, FIELD_PART_UINT, &hf_048_020_MI, NULL };",
          "6250: static const FieldPart I048_020_FOE = { 2, 1.0, FIELD_PART_UINT, &hf_048_020_FOE, NULL };",
          "6251: static const FieldPart *I048_020_PARTS[] = { &I048_020_TYP, &I048_020_SIM, &I048_020_RDP, &I048_020_SPI, &I048_020_RAB, &IXXX_FX,",
          "6255: static const value_string valstr_048_030_WE[] = {",
          "",
          "[Removed Lines]",
          "6252:                                               &I048_020_TST, &IXXX_2bit_spare, &I048_020_ME, &I048_020_MI, &I048_020_FOE, &IXXX_FX, NULL };",
          "",
          "[Added Lines]",
          "6452:                                              &I048_020_TST, &I048_020_ERR, &I048_020_XPP, &I048_020_ME, &I048_020_MI, &I048_020_FOE, &IXXX_FX, NULL };",
          "6453: static const FieldPart *I048_020_PARTS_v1_21[] = { &I048_020_TYP, &I048_020_SIM, &I048_020_RDP, &I048_020_SPI, &I048_020_RAB, &IXXX_FX,",
          "6454:                                                    &I048_020_TST, &IXXX_1bit_spare, &I048_020_XPP, &I048_020_ME, &I048_020_MI, &I048_020_FOE, &IXXX_FX, NULL };",
          "6455: static const FieldPart *I048_020_PARTS_v1_17[] = { &I048_020_TYP, &I048_020_SIM, &I048_020_RDP, &I048_020_SPI, &I048_020_RAB, &IXXX_FX,",
          "6456:                                                    &I048_020_TST, &IXXX_2bit_spare, &I048_020_ME, &I048_020_MI, &I048_020_FOE, &IXXX_FX, NULL };",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "6274:     { 18, \"Undecodable Mode C code / Mode S altitude code\" },",
          "6275:     { 19, \"Birds\" },",
          "6276:     { 20, \"Flock of Birds\" },",
          "6277:     { 0, NULL }",
          "6278: };",
          "6279: static const FieldPart I048_030_WE = { 7, 1.0, FIELD_PART_UINT, &hf_048_030_WE, NULL };",
          "6283: static const FieldPart I048_040_RHO = { 16, 1.0/256.0, FIELD_PART_UFLOAT, &hf_048_040_RHO, NULL };",
          "",
          "[Removed Lines]",
          "6280: static const FieldPart *I048_030_PARTS[] = { &I048_030_WE, &IXXX_FX, NULL };",
          "",
          "[Added Lines]",
          "6481:     { 21, \"Mode 1 was present in original reply\" },",
          "6482:     { 22, \"Mode 2 was present in original reply\" },",
          "6483:     { 23, \"Plot potentially caused by Wind Turbine\" },",
          "6491: static const FieldPart I048_030_1_WE = { 7, 1.0, FIELD_PART_UINT, &hf_048_030_1_WE, NULL };",
          "6492: static const FieldPart I048_030_2_WE = { 7, 1.0, FIELD_PART_UINT, &hf_048_030_2_WE, NULL };",
          "6493: static const FieldPart I048_030_3_WE = { 7, 1.0, FIELD_PART_UINT, &hf_048_030_3_WE, NULL };",
          "6494: static const FieldPart I048_030_4_WE = { 7, 1.0, FIELD_PART_UINT, &hf_048_030_4_WE, NULL };",
          "6495: static const FieldPart I048_030_5_WE = { 7, 1.0, FIELD_PART_UINT, &hf_048_030_5_WE, NULL };",
          "6496: static const FieldPart I048_030_6_WE = { 7, 1.0, FIELD_PART_UINT, &hf_048_030_6_WE, NULL };",
          "6497: static const FieldPart I048_030_7_WE = { 7, 1.0, FIELD_PART_UINT, &hf_048_030_7_WE, NULL };",
          "6498: static const FieldPart I048_030_8_WE = { 7, 1.0, FIELD_PART_UINT, &hf_048_030_8_WE, NULL };",
          "6499: static const FieldPart I048_030_9_WE = { 7, 1.0, FIELD_PART_UINT, &hf_048_030_9_WE, NULL };",
          "6500: static const FieldPart *I048_030_PARTS[] = {",
          "6501:     &I048_030_WE, &IXXX_FX,",
          "6502:     &I048_030_1_WE, &IXXX_FX,",
          "6503:     &I048_030_2_WE, &IXXX_FX,",
          "6504:     &I048_030_3_WE, &IXXX_FX,",
          "6505:     &I048_030_4_WE, &IXXX_FX,",
          "6506:     &I048_030_5_WE, &IXXX_FX,",
          "6507:     &I048_030_6_WE, &IXXX_FX,",
          "6508:     &I048_030_7_WE, &IXXX_FX,",
          "6509:     &I048_030_8_WE, &IXXX_FX,",
          "6510:     &I048_030_9_WE, &IXXX_FX,",
          "6511:     NULL };",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "6496:     { 0, NULL }",
          "6497: };",
          "6498: static const FieldPart I048_120_01_D = { 1, 1.0, FIELD_PART_UINT, &hf_048_120_01_D, NULL };",
          "6500: static const FieldPart *I048_120_01_PARTS[] = { &I048_120_01_D, &IXXX_5bit_spare, &I048_120_01_CAL, NULL };",
          "6503: static const FieldPart I048_120_02_AMB = { 16, 1.0, FIELD_PART_UINT, &hf_048_120_02_AMB, NULL };",
          "6504: static const FieldPart I048_120_02_FRQ = { 16, 1.0, FIELD_PART_UINT, &hf_048_120_02_FRQ, NULL };",
          "6505: static const FieldPart *I048_120_02_PARTS[] = { &I048_120_02_DOP, &I048_120_02_AMB, &I048_120_02_FRQ, NULL };",
          "",
          "[Removed Lines]",
          "6499: static const FieldPart I048_120_01_CAL = { 10, 1.0, FIELD_PART_FLOAT, &hf_048_120_01_CAL, NULL };",
          "6502: static const FieldPart I048_120_02_DOP = { 16, 1.0, FIELD_PART_UINT, &hf_048_120_02_DOP, NULL };",
          "",
          "[Added Lines]",
          "6730: static const FieldPart I048_120_01_CAL = { 10, 1.0, FIELD_PART_INT, &hf_048_120_01_CAL, NULL };",
          "6733: static const FieldPart I048_120_02_DOP = { 16, 1.0, FIELD_PART_INT, &hf_048_120_02_DOP, NULL };",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "6548:     { 0, NULL }",
          "6549: };",
          "6550: static const value_string valstr_048_170_CDM[] = {",
          "6551:     { 0, \"Maintaining\" } ,",
          "6552:     { 1, \"Climbing\" } ,",
          "6553:     { 2, \"Descending\" } ,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6782:     { 0, \"Maintaining\" } ,",
          "6783:     { 1, \"Climbing\" } ,",
          "6784:     { 2, \"Descending\" } ,",
          "6785:     { 3, \"Unknown\" } ,",
          "6786:     { 0, NULL }",
          "6787: };",
          "6788: static const value_string valstr_048_170_CDM_v1_21[] = {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "6565:     { 0, NULL }",
          "6566: };",
          "6567: static const value_string valstr_048_170_SUP[] = {",
          "6570:     { 0, NULL }",
          "6571: };",
          "6572: static const value_string valstr_048_170_TCC[] = {",
          "6574:     { 1, \"Slant range correction and a suitable projection technique are used to track in a 2D.reference plane, tangential to the earth model at the Radar Site co-ordinates.\" } ,",
          "6575:     { 0, NULL }",
          "6576: };",
          "",
          "[Removed Lines]",
          "6568:     { 0, \"no\" } ,",
          "6569:     { 1, \" yes\" } ,",
          "6573:     { 0, \"Tracking performed in socalled 'Radar Plane', i.e. neither slant range correction nor stereographical projection was applied.\" } ,",
          "",
          "[Added Lines]",
          "6806:     { 0, \"No\" } ,",
          "6807:     { 1, \"Yes\" } ,",
          "6811:     { 0, \"Tracking performed in so-called 'Radar Plane', i.e. neither slant range correction nor stereographical projection was applied.\" } ,",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "6579: static const FieldPart I048_170_DOU = { 1, 1.0, FIELD_PART_UINT, &hf_048_170_DOU, NULL };",
          "6580: static const FieldPart I048_170_MAH = { 1, 1.0, FIELD_PART_UINT, &hf_048_170_MAH, NULL };",
          "6581: static const FieldPart I048_170_CDM = { 2, 1.0, FIELD_PART_UINT, &hf_048_170_CDM, NULL };",
          "6582: static const FieldPart I048_170_TRE = { 1, 1.0, FIELD_PART_UINT, &hf_048_170_TRE, NULL };",
          "6583: static const FieldPart I048_170_GHO = { 1, 1.0, FIELD_PART_UINT, &hf_048_170_GHO, NULL };",
          "6584: static const FieldPart I048_170_SUP = { 1, 1.0, FIELD_PART_UINT, &hf_048_170_SUP, NULL };",
          "6585: static const FieldPart I048_170_TCC = { 1, 1.0, FIELD_PART_UINT, &hf_048_170_TCC, NULL };",
          "6586: static const FieldPart *I048_170_PARTS[] = { &I048_170_CNF, &I048_170_RAD, &I048_170_DOU, &I048_170_MAH, &I048_170_CDM, &IXXX_FX,",
          "6590: static const FieldPart I048_200_GS = { 16, 1.0/16384.0, FIELD_PART_UFLOAT, &hf_048_200_GS, NULL };",
          "",
          "[Removed Lines]",
          "6587:                                               &I048_170_TRE, &I048_170_GHO, &I048_170_SUP, &I048_170_TCC, &IXXX_3bit_spare, &IXXX_FX, NULL };",
          "",
          "[Added Lines]",
          "6820: static const FieldPart I048_170_CDM_v1_21 = { 2, 1.0, FIELD_PART_UINT, &hf_048_170_CDM_v1_21, NULL };",
          "6826:                                              &I048_170_TRE, &I048_170_GHO, &I048_170_SUP, &I048_170_TCC, &IXXX_3bit_spare, &IXXX_FX, NULL };",
          "6827: static const FieldPart *I048_170_PARTS_v1_21[] = { &I048_170_CNF, &I048_170_RAD, &I048_170_DOU, &I048_170_MAH, &I048_170_CDM_v1_21, &IXXX_FX,",
          "6828:                                                    &I048_170_TRE, &I048_170_GHO, &I048_170_SUP, &I048_170_TCC, &IXXX_3bit_spare, &IXXX_FX, NULL };",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "6651: static const FieldPart I048_260_ACAS = { 56, 1.0, FIELD_PART_HEX, &hf_048_260_ACAS, NULL };",
          "6652: static const FieldPart *I048_260_PARTS[] = { &I048_260_ACAS, NULL };",
          "6655: DIAG_OFF_PEDANTIC",
          "6656: static const AsterixField I048_010 = { FIXED, 2, 0, 0, &hf_048_010, IXXX_SAC_SIC, { NULL } };",
          "6657: static const AsterixField I048_020 = { FX, 1, 0, 0, &hf_048_020, I048_020_PARTS, { NULL } };",
          "6658: static const AsterixField I048_030 = { FX, 1, 0, 0, &hf_048_030, I048_030_PARTS, { NULL } };",
          "6659: static const AsterixField I048_040 = { FIXED, 4, 0, 0, &hf_048_040, I048_040_PARTS, { NULL } };",
          "6660: static const AsterixField I048_042 = { FIXED, 4, 0, 0, &hf_048_042, I048_042_PARTS, { NULL } };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6900: static const value_string valstr_048_RE_MD5_01_M5[] = {",
          "6901:     { 0, \"No Mode 5 interrogation\" },",
          "6902:     { 1, \"Mode 5 interrogation\" },",
          "6903:     { 0, NULL }",
          "6904: };",
          "6905: static const value_string valstr_048_RE_MD5_01_ID[] = {",
          "6906:     { 0, \"No authenticated Mode 5 ID reply/report\" },",
          "6907:     { 1, \"Authenticated Mode 5 ID reply/report\" },",
          "6908:     { 0, NULL }",
          "6909: };",
          "6910: static const value_string valstr_048_RE_MD5_01_DA[] = {",
          "6911:     { 0, \"No authenticated Mode 5 Data reply/report\" },",
          "6912:     { 1, \"Authenticated Mode 5 Data reply/report (i.e any valid Mode 5 reply type other than ID)\" },",
          "6913:     { 0, NULL }",
          "6914: };",
          "6915: static const value_string valstr_048_RE_MD5_01_M1[] = {",
          "6916:     { 0, \"Mode 1 code not present or not from Mode 5 reply/report\" },",
          "6917:     { 1, \"Mode 1 code from Mode 5 reply/report\" },",
          "6918:     { 0, NULL }",
          "6919: };",
          "6920: static const value_string valstr_048_RE_MD5_01_M2[] = {",
          "6921:     { 0, \"Mode 2 code not present or not from Mode 5 reply/report\" },",
          "6922:     { 1, \"Mode 2 code from Mode 5 reply/report.\" },",
          "6923:     { 0, NULL }",
          "6924: };",
          "6925: static const value_string valstr_048_RE_MD5_01_M3[] = {",
          "6926:     { 0, \"Mode 3 code not present or not from Mode 5 reply/report\" },",
          "6927:     { 1, \"Mode 3 code from Mode 5 reply/report.\" },",
          "6928:     { 0, NULL }",
          "6929: };",
          "6930: static const value_string valstr_048_RE_MD5_01_MC[] = {",
          "6931:     { 0, \"Mode C altitude not present or not from Mode 5 reply/report\" },",
          "6932:     { 1, \"Mode C altitude from Mode 5 reply/report\" },",
          "6933:     { 0, NULL }",
          "6934: };",
          "6935: static const FieldPart I048_RE_MD5_01_M5 = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_MD5_01_M5, NULL };",
          "6936: static const FieldPart I048_RE_MD5_01_ID = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_MD5_01_ID, NULL };",
          "6937: static const FieldPart I048_RE_MD5_01_DA = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_MD5_01_DA, NULL };",
          "6938: static const FieldPart I048_RE_MD5_01_M1 = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_MD5_01_M1, NULL };",
          "6939: static const FieldPart I048_RE_MD5_01_M2 = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_MD5_01_M2, NULL };",
          "6940: static const FieldPart I048_RE_MD5_01_M3 = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_MD5_01_M3, NULL };",
          "6941: static const FieldPart I048_RE_MD5_01_MC = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_MD5_01_MC, NULL };",
          "6942: static const FieldPart *I048_RE_MD5_01_PARTS[] = { &I048_RE_MD5_01_M5,",
          "6943:                                                     &I048_RE_MD5_01_ID,",
          "6944:                                                     &I048_RE_MD5_01_DA,",
          "6945:                                                     &I048_RE_MD5_01_M1,",
          "6946:                                                     &I048_RE_MD5_01_M2,",
          "6947:                                                     &I048_RE_MD5_01_M3,",
          "6948:                                                     &I048_RE_MD5_01_MC,",
          "6949:                                                     NULL };",
          "6952: static const value_string valstr_048_RE_MD5_02_NAV[] = {",
          "6953:     { 0, \"National Origin is valid\" },",
          "6954:     { 1, \"National Origin is invalid\" },",
          "6955:     { 0, NULL }",
          "6956: };",
          "6957: static const FieldPart I048_RE_MD5_02_PIN = { 14, 1.0, FIELD_PART_UINT, &hf_048_RE_MD5_02_PIN, NULL };",
          "6958: static const FieldPart I048_RE_MD5_02_NAV = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_MD5_02_NAV, NULL };",
          "6959: static const FieldPart I048_RE_MD5_02_NAT = { 5, 1.0, FIELD_PART_UINT, &hf_048_RE_MD5_02_NAT, NULL };",
          "6960: static const FieldPart I048_RE_MD5_02_MIS = { 6, 1.0, FIELD_PART_UINT, &hf_048_RE_MD5_02_MIS, NULL };",
          "6961: static const FieldPart *I048_RE_MD5_02_PARTS[] = { &IXXX_2bit_spare,",
          "6962:                                                     &I048_RE_MD5_02_PIN,",
          "6963:                                                     &IXXX_2bit_spare,",
          "6964:                                                     &I048_RE_MD5_02_NAV,",
          "6965:                                                     &I048_RE_MD5_02_NAT,",
          "6966:                                                     &IXXX_2bit_spare,",
          "6967:                                                     &I048_RE_MD5_02_MIS,",
          "6968:                                                     NULL };",
          "6971: static const FieldPart I048_RE_MD5_03_LAT = { 24, 180.0/8388608.0, FIELD_PART_FLOAT, &hf_048_RE_MD5_03_LAT, NULL };",
          "6972: static const FieldPart I048_RE_MD5_03_LON = { 24, 180.0/8388608.0, FIELD_PART_FLOAT, &hf_048_RE_MD5_03_LON, NULL };",
          "6973: static const FieldPart *I048_RE_MD5_03_PARTS[] = { &I048_RE_MD5_03_LAT,",
          "6974:                                                     &I048_RE_MD5_03_LON,",
          "6975:                                                     NULL };",
          "6978: static const value_string valstr_048_RE_MD5_04_RES[] = {",
          "6979:     { 0, \"GA reported in 100 ft increments\" },",
          "6980:     { 1, \"GA reported in 25 ft increments\" },",
          "6981:     { 0, NULL }",
          "6982: };",
          "6983: static const FieldPart I048_RE_MD5_04_RES = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_MD5_04_RES, NULL };",
          "6984: static const FieldPart I048_RE_MD5_04_GA = { 14, 25.0, FIELD_PART_FLOAT, &hf_048_RE_MD5_04_GA, NULL };",
          "6985: static const FieldPart *I048_RE_MD5_04_PARTS[] = { &IXXX_1bit_spare,",
          "6986:                                                    &I048_RE_MD5_04_RES,",
          "6987:                                                    &I048_RE_MD5_04_GA,",
          "6988:                                                    NULL };",
          "6991: static const value_string valstr_048_RE_MD5_05_V[] = {",
          "6992:     { 0, \"Code not validated (see note 2)\" },",
          "6993:     { 1, \"Code validated (see note 2)\" },",
          "6994:     { 0, NULL }",
          "6995: };",
          "6996: static const value_string valstr_048_RE_MD5_05_G[] = {",
          "6997:     { 0, \"Default\" },",
          "6998:     { 1, \"Garbled code\" },",
          "6999:     { 0, NULL }",
          "7000: };",
          "7001: static const value_string valstr_048_RE_MD5_05_L[] = {",
          "7002:     { 0, \"Mode-1 code derived from the reply of the transponder\" },",
          "7003:     { 1, \"Mode-1 code not extracted during the last scan\" },",
          "7004:     { 0, NULL }",
          "7005: };",
          "7006: static const FieldPart I048_RE_MD5_05_V = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_MD5_05_V, NULL };",
          "7007: static const FieldPart I048_RE_MD5_05_G = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_MD5_05_G, NULL };",
          "7008: static const FieldPart I048_RE_MD5_05_L = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_MD5_05_L, NULL };",
          "7009: static const FieldPart I048_RE_MD5_05_SQUAWK = { 12, 1.0, FIELD_PART_UINT, &hf_048_RE_MD5_05_SQUAWK, NULL };",
          "7010: static const FieldPart *I048_RE_MD5_05_PARTS[] = { &I048_RE_MD5_05_V,",
          "7011:                                                     &I048_RE_MD5_05_G,",
          "7012:                                                     &I048_RE_MD5_05_L,",
          "7013:                                                     &IXXX_1bit_spare,",
          "7014:                                                     &I048_RE_MD5_05_SQUAWK,",
          "7015:                                                     NULL };",
          "7018: static const FieldPart I048_RE_MD5_06_TOS = { 8, 1.0/128.0, FIELD_PART_FLOAT, &hf_048_RE_MD5_06_TOS, NULL };",
          "7019: static const FieldPart *I048_RE_MD5_06_PARTS[] = { &I048_RE_MD5_06_TOS, NULL };",
          "7022: static const value_string valstr_048_RE_MD5_07_XP[] = {",
          "7023:     { 0, \"X-Pulse not present\" },",
          "7024:     { 1, \"X-pulse present\" },",
          "7025:     { 0, NULL }",
          "7026: };",
          "7027: static const value_string valstr_048_RE_MD5_07_X5[] = {",
          "7028:     { 0, \"X-pulse set to zero or no authenticated Data reply or Report received\" },",
          "7029:     { 1, \"X-pulse set to one (present)\" },",
          "7030:     { 0, NULL }",
          "7031: };",
          "7032: static const value_string valstr_048_RE_MD5_07_XC[] = {",
          "7033:     { 0, \"X-pulse set to zero or no Mode C reply\" },",
          "7034:     { 1, \"X-pulse set to one (present)\" },",
          "7035:     { 0, NULL }",
          "7036: };",
          "7037: static const value_string valstr_048_RE_MD5_07_X3[] = {",
          "7038:     { 0, \"X-pulse set to zero or no Mode 3/A reply\" },",
          "7039:     { 1, \"X-pulse set to one (present)\" },",
          "7040:     { 0, NULL }",
          "7041: };",
          "7042: static const value_string valstr_048_RE_MD5_07_X2[] = {",
          "7043:     { 0, \"X-pulse set to zero or no Mode 2 reply\" },",
          "7044:     { 1, \"X-pulse set to one (present)\" },",
          "7045:     { 0, NULL }",
          "7046: };",
          "7047: static const value_string valstr_048_RE_MD5_07_X1[] = {",
          "7048:     { 0, \"X-pulse set to zero or no Mode 1 reply\" },",
          "7049:     { 1, \"X-pulse set to one (present)\" },",
          "7050:     { 0, NULL }",
          "7051: };",
          "7052: static const FieldPart I048_RE_MD5_07_XP = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_MD5_07_XP, NULL };",
          "7053: static const FieldPart I048_RE_MD5_07_X5 = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_MD5_07_X5, NULL };",
          "7054: static const FieldPart I048_RE_MD5_07_XC = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_MD5_07_XC, NULL };",
          "7055: static const FieldPart I048_RE_MD5_07_X3 = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_MD5_07_X3, NULL };",
          "7056: static const FieldPart I048_RE_MD5_07_X2 = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_MD5_07_X2, NULL };",
          "7057: static const FieldPart I048_RE_MD5_07_X1 = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_MD5_07_X1, NULL };",
          "7058: static const FieldPart *I048_RE_MD5_07_PARTS[] = { &IXXX_2bit_spare,",
          "7059:                                                    &I048_RE_MD5_07_XP,",
          "7060:                                                    &I048_RE_MD5_07_X5,",
          "7061:                                                    &I048_RE_MD5_07_XC,",
          "7062:                                                    &I048_RE_MD5_07_X3,",
          "7063:                                                    &I048_RE_MD5_07_X2,",
          "7064:                                                    &I048_RE_MD5_07_X1,",
          "7065:                                                    NULL };",
          "7070: static const value_string valstr_048_RE_M5N_01_M5[] = {",
          "7071:     { 0, \"No Mode 5 interrogation\" },",
          "7072:     { 1, \"Mode 5 interrogation\" },",
          "7073:     { 0, NULL }",
          "7074: };",
          "7075: static const value_string valstr_048_RE_M5N_01_ID[] = {",
          "7076:     { 0, \"No authenticated Mode 5 ID reply/report\" },",
          "7077:     { 1, \"Authenticated Mode 5 ID reply/report\" },",
          "7078:     { 0, NULL }",
          "7079: };",
          "7080: static const value_string valstr_048_RE_M5N_01_DA[] = {",
          "7081:     { 0, \"No authenticated Mode 5 Data reply/report\" },",
          "7082:     { 1, \"Authenticated Mode 5 Data reply/report (i.e any valid Mode 5 reply type other than ID)\" },",
          "7083:     { 0, NULL }",
          "7084: };",
          "7085: static const value_string valstr_048_RE_M5N_01_M1[] = {",
          "7086:     { 0, \"Mode 1 code not present or not from Mode 5 reply/report\" },",
          "7087:     { 1, \"Mode 1 code from Mode 5 reply/report\" },",
          "7088:     { 0, NULL }",
          "7089: };",
          "7090: static const value_string valstr_048_RE_M5N_01_M2[] = {",
          "7091:     { 0, \"Mode 2 code not present or not from Mode 5 reply/report\" },",
          "7092:     { 1, \"Mode 2 code from Mode 5 reply/report.\" },",
          "7093:     { 0, NULL }",
          "7094: };",
          "7095: static const value_string valstr_048_RE_M5N_01_M3[] = {",
          "7096:     { 0, \"Mode 3 code not present or not from Mode 5 reply/report\" },",
          "7097:     { 1, \"Mode 3 code from Mode 5 reply/report.\" },",
          "7098:     { 0, NULL }",
          "7099: };",
          "7100: static const value_string valstr_048_RE_M5N_01_MC[] = {",
          "7101:     { 0, \"Mode C altitude not present or not from Mode 5 reply/report\" },",
          "7102:     { 1, \"Mode C altitude from Mode 5 reply/report\" },",
          "7103:     { 0, NULL }",
          "7104: };",
          "7105: static const FieldPart I048_RE_M5N_01_M5 = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_M5N_01_M5, NULL };",
          "7106: static const FieldPart I048_RE_M5N_01_ID = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_M5N_01_ID, NULL };",
          "7107: static const FieldPart I048_RE_M5N_01_DA = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_M5N_01_DA, NULL };",
          "7108: static const FieldPart I048_RE_M5N_01_M1 = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_M5N_01_M1, NULL };",
          "7109: static const FieldPart I048_RE_M5N_01_M2 = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_M5N_01_M2, NULL };",
          "7110: static const FieldPart I048_RE_M5N_01_M3 = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_M5N_01_M3, NULL };",
          "7111: static const FieldPart I048_RE_M5N_01_MC = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_M5N_01_MC, NULL };",
          "7112: static const FieldPart *I048_RE_M5N_01_PARTS[] = { &I048_RE_M5N_01_M5,",
          "7113:                                                     &I048_RE_M5N_01_ID,",
          "7114:                                                     &I048_RE_M5N_01_DA,",
          "7115:                                                     &I048_RE_M5N_01_M1,",
          "7116:                                                     &I048_RE_M5N_01_M2,",
          "7117:                                                     &I048_RE_M5N_01_M3,",
          "7118:                                                     &I048_RE_M5N_01_MC,",
          "7119:                                                     NULL };",
          "7122: static const value_string valstr_048_RE_M5N_02_NOV[] = {",
          "7123:     { 0, \"National Origin is valid\" },",
          "7124:     { 1, \"National Origin is invalid\" },",
          "7125:     { 0, NULL }",
          "7126: };",
          "7127: static const FieldPart I048_RE_M5N_02_PIN = { 14, 1.0, FIELD_PART_UINT, &hf_048_RE_M5N_02_PIN, NULL };",
          "7128: static const FieldPart I048_RE_M5N_02_NOV = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_M5N_02_NOV, NULL };",
          "7129: static const FieldPart I048_RE_M5N_02_NO = { 11, 1.0, FIELD_PART_UINT, &hf_048_RE_M5N_02_NO, NULL };",
          "7130: static const FieldPart *I048_RE_M5N_02_PARTS[] = { &IXXX_2bit_spare,",
          "7131:                                                     &I048_RE_M5N_02_PIN,",
          "7132:                                                     &IXXX_4bit_spare,",
          "7133:                                                     &I048_RE_M5N_02_NOV,",
          "7134:                                                     &I048_RE_M5N_02_NO,",
          "7135:                                                     NULL };",
          "7138: static const FieldPart I048_RE_M5N_03_LAT = { 24, 180.0/8388608.0, FIELD_PART_FLOAT, &hf_048_RE_M5N_03_LAT, NULL };",
          "7139: static const FieldPart I048_RE_M5N_03_LON = { 24, 180.0/8388608.0, FIELD_PART_FLOAT, &hf_048_RE_M5N_03_LON, NULL };",
          "7140: static const FieldPart *I048_RE_M5N_03_PARTS[] = { &I048_RE_M5N_03_LAT,",
          "7141:                                                     &I048_RE_M5N_03_LON,",
          "7142:                                                     NULL };",
          "7145: static const value_string valstr_048_RE_M5N_04_RES[] = {",
          "7146:     { 0, \"GA reported in 100 ft increments\" },",
          "7147:     { 1, \"GA reported in 25 ft increments\" },",
          "7148:     { 0, NULL }",
          "7149: };",
          "7150: static const FieldPart I048_RE_M5N_04_RES = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_M5N_04_RES, NULL };",
          "7151: static const FieldPart I048_RE_M5N_04_GA = { 14, 25.0, FIELD_PART_FLOAT, &hf_048_RE_M5N_04_GA, NULL };",
          "7152: static const FieldPart *I048_RE_M5N_04_PARTS[] = { &IXXX_1bit_spare,",
          "7153:                                                    &I048_RE_M5N_04_RES,",
          "7154:                                                    &I048_RE_M5N_04_GA,",
          "7155:                                                    NULL };",
          "7158: static const value_string valstr_048_RE_M5N_05_V[] = {",
          "7159:     { 0, \"Code not validated (see note 2)\" },",
          "7160:     { 1, \"Code validated (see note 2)\" },",
          "7161:     { 0, NULL }",
          "7162: };",
          "7163: static const value_string valstr_048_RE_M5N_05_G[] = {",
          "7164:     { 0, \"Default\" },",
          "7165:     { 1, \"Garbled code\" },",
          "7166:     { 0, NULL }",
          "7167: };",
          "7168: static const value_string valstr_048_RE_M5N_05_L[] = {",
          "7169:     { 0, \"Mode-1 code derived from the reply of the transponder\" },",
          "7170:     { 1, \"Mode-1 code not extracted during the last scan\" },",
          "7171:     { 0, NULL }",
          "7172: };",
          "7173: static const FieldPart I048_RE_M5N_05_V = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_M5N_05_V, NULL };",
          "7174: static const FieldPart I048_RE_M5N_05_G = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_M5N_05_G, NULL };",
          "7175: static const FieldPart I048_RE_M5N_05_L = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_M5N_05_L, NULL };",
          "7176: static const FieldPart I048_RE_M5N_05_SQUAWK = { 12, 1.0, FIELD_PART_UINT, &hf_048_RE_M5N_05_SQUAWK, NULL };",
          "7177: static const FieldPart *I048_RE_M5N_05_PARTS[] = { &I048_RE_M5N_05_V,",
          "7178:                                                     &I048_RE_M5N_05_G,",
          "7179:                                                     &I048_RE_M5N_05_L,",
          "7180:                                                     &IXXX_1bit_spare,",
          "7181:                                                     &I048_RE_M5N_05_SQUAWK,",
          "7182:                                                     NULL };",
          "7185: static const FieldPart I048_RE_M5N_06_TOS = { 8, 1.0/128.0, FIELD_PART_FLOAT, &hf_048_RE_M5N_06_TOS, NULL };",
          "7186: static const FieldPart *I048_RE_M5N_06_PARTS[] = { &I048_RE_M5N_06_TOS, NULL };",
          "7189: static const value_string valstr_048_RE_M5N_07_XP[] = {",
          "7190:     { 0, \"X-Pulse not present\" },",
          "7191:     { 1, \"X-pulse present\" },",
          "7192:     { 0, NULL }",
          "7193: };",
          "7194: static const value_string valstr_048_RE_M5N_07_X5[] = {",
          "7195:     { 0, \"X-pulse set to zero or no authenticated Data reply or Report received\" },",
          "7196:     { 1, \"X-pulse set to one (present)\" },",
          "7197:     { 0, NULL }",
          "7198: };",
          "7199: static const value_string valstr_048_RE_M5N_07_XC[] = {",
          "7200:     { 0, \"X-pulse set to zero or no Mode C reply\" },",
          "7201:     { 1, \"X-pulse set to one (present)\" },",
          "7202:     { 0, NULL }",
          "7203: };",
          "7204: static const value_string valstr_048_RE_M5N_07_X3[] = {",
          "7205:     { 0, \"X-pulse set to zero or no Mode 3/A reply\" },",
          "7206:     { 1, \"X-pulse set to one (present)\" },",
          "7207:     { 0, NULL }",
          "7208: };",
          "7209: static const value_string valstr_048_RE_M5N_07_X2[] = {",
          "7210:     { 0, \"X-pulse set to zero or no Mode 2 reply\" },",
          "7211:     { 1, \"X-pulse set to one (present)\" },",
          "7212:     { 0, NULL }",
          "7213: };",
          "7214: static const value_string valstr_048_RE_M5N_07_X1[] = {",
          "7215:     { 0, \"X-pulse set to zero or no Mode 1 reply\" },",
          "7216:     { 1, \"X-pulse set to one (present)\" },",
          "7217:     { 0, NULL }",
          "7218: };",
          "7219: static const FieldPart I048_RE_M5N_07_XP = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_M5N_07_XP, NULL };",
          "7220: static const FieldPart I048_RE_M5N_07_X5 = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_M5N_07_X5, NULL };",
          "7221: static const FieldPart I048_RE_M5N_07_XC = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_M5N_07_XC, NULL };",
          "7222: static const FieldPart I048_RE_M5N_07_X3 = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_M5N_07_X3, NULL };",
          "7223: static const FieldPart I048_RE_M5N_07_X2 = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_M5N_07_X2, NULL };",
          "7224: static const FieldPart I048_RE_M5N_07_X1 = { 1, 1.0, FIELD_PART_UINT, &hf_048_RE_M5N_07_X1, NULL };",
          "7225: static const FieldPart *I048_RE_M5N_07_PARTS[] = { &IXXX_2bit_spare,",
          "7226:                                                    &I048_RE_M5N_07_XP,",
          "7227:                                                    &I048_RE_M5N_07_X5,",
          "7228:                                                    &I048_RE_M5N_07_XC,",
          "7229:                                                    &I048_RE_M5N_07_X3,",
          "7230:                                                    &I048_RE_M5N_07_X2,",
          "7231:                                                    &I048_RE_M5N_07_X1,",
          "7232:                                                    NULL };",
          "7235: static const FieldPart I048_RE_M5N_08_FOM = { 5, 1.0, FIELD_PART_UINT, &hf_048_RE_M5N_08_FOM, NULL };",
          "7236: static const FieldPart *I048_RE_M5N_08_PARTS[] = { &IXXX_3bit_spare,",
          "7237:                                                     &I048_RE_M5N_08_FOM,",
          "7238:                                                     NULL };",
          "7241: static const value_string valstr_048_RE_M4E_FOE_FRI[] = {",
          "7242:     { 0, \"No Mode 4 identification\" },",
          "7243:     { 1, \"Possibly friendly target\" },",
          "7244:     { 2, \"Probably friendly target\" },",
          "7245:     { 3, \"Friendly target\" },",
          "7246:     { 0, NULL }",
          "7247: };",
          "7248: static const FieldPart I048_RE_M4E_FOE_FRI = { 2, 1.0, FIELD_PART_UINT, &hf_048_RE_M4E_FOE_FRI, NULL };",
          "7249: static const FieldPart *I048_RE_M4E_PARTS[] = { &IXXX_5bit_spare,",
          "7250:                                                 &I048_RE_M4E_FOE_FRI,",
          "7251:                                                 &IXXX_FX,",
          "7252:                                                 NULL };",
          "7257: static const FieldPart I048_RE_RPC_01_SCO = { 8, 1.0, FIELD_PART_UINT, &hf_048_RE_RPC_01_SCO, NULL };",
          "7258: static const FieldPart *I048_RE_RPC_01_PARTS[] = { &I048_RE_RPC_01_SCO, NULL };",
          "7261: static const FieldPart I048_RE_RPC_02_SCR = { 16, 0.1, FIELD_PART_UFLOAT, &hf_048_RE_RPC_02_SCR, NULL };",
          "7262: static const FieldPart *I048_RE_RPC_02_PARTS[] = { &I048_RE_RPC_02_SCR, NULL };",
          "7265: static const FieldPart I048_RE_RPC_03_RW = { 16, 1.0/256.0, FIELD_PART_UFLOAT, &hf_048_RE_RPC_03_RW, NULL };",
          "7266: static const FieldPart *I048_RE_RPC_03_PARTS[] = { &I048_RE_RPC_03_RW, NULL };",
          "7269: static const FieldPart I048_RE_RPC_04_AR = { 16, 1.0/256.0, FIELD_PART_UFLOAT, &hf_048_RE_RPC_04_AR, NULL };",
          "7270: static const FieldPart *I048_RE_RPC_04_PARTS[] = { &I048_RE_RPC_04_AR, NULL };",
          "7273: static const FieldPart I048_RE_ERR_RHO = { 24, 1.0/256.0, FIELD_PART_UFLOAT, &hf_048_RE_ERR_RHO, NULL };",
          "7274: static const FieldPart *I048_RE_ERR_PARTS[] = { &I048_RE_ERR_RHO, NULL };",
          "7280: static const AsterixField I048_020_v1_21 = { FX, 1, 0, 0, &hf_048_020, I048_020_PARTS_v1_21, { NULL } };",
          "7281: static const AsterixField I048_020_v1_17 = { FX, 1, 0, 0, &hf_048_020, I048_020_PARTS_v1_17, { NULL } };",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "6690: static const AsterixField I048_140 = { FIXED, 3, 0, 0, &hf_048_140, IXXX_TOD, { NULL } };",
          "6691: static const AsterixField I048_161 = { FIXED, 2, 0, 0, &hf_048_161, I048_161_PARTS, { NULL } };",
          "6692: static const AsterixField I048_170 = { FX, 1, 0, 0, &hf_048_170, I048_170_PARTS, { NULL } };",
          "6693: static const AsterixField I048_200 = { FIXED, 4, 0, 0, &hf_048_200, I048_200_PARTS, { NULL } };",
          "6694: static const AsterixField I048_210 = { FIXED, 4, 0, 0, &hf_048_210, I048_210_PARTS, { NULL } };",
          "6695: static const AsterixField I048_220 = { FIXED, 3, 0, 0, &hf_048_220, IXXX_AA_PARTS, { NULL } };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7317: static const AsterixField I048_170_v1_21 = { FX, 1, 0, 0, &hf_048_170, I048_170_PARTS_v1_21, { NULL } };",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "6697: static const AsterixField I048_240 = { FIXED, 6, 0, 0, &hf_048_240, IXXX_AI_PARTS, { NULL } };",
          "6698: static const AsterixField I048_250 = { REPETITIVE, 8, 1, 0, &hf_048_250, IXXX_MB, { NULL } };",
          "6699: static const AsterixField I048_260 = { FIXED, 7, 0, 0, &hf_048_260, I048_260_PARTS, { NULL } };",
          "6701: static const AsterixField I048_SP = { SP, 0, 0, 1, &hf_048_SP, NULL, { NULL } };",
          "6704:                                                 &I048_220, &I048_240, &I048_250, &I048_161, &I048_042, &I048_200, &I048_170,",
          "6705:                                                 &I048_210, &I048_030, &I048_080, &I048_100, &I048_110, &I048_120, &I048_230,",
          "6706:                                                 &I048_260, &I048_055, &I048_050, &I048_065, &I048_060, &I048_SP,  &I048_RE, NULL };",
          "6707: static const AsterixField **I048_v1_17[] = { I048_v1_17_uap, NULL };",
          "6709: DIAG_ON_PEDANTIC",
          "6711: static const enum_val_t I048_versions[] = {",
          "6713:     { NULL, NULL, 0 }",
          "6714: };",
          "",
          "[Removed Lines]",
          "6700: static const AsterixField I048_RE = { RE, 0, 0, 1, &hf_048_RE, NULL, { NULL } };",
          "6703: static const AsterixField *I048_v1_17_uap[] = { &I048_010, &I048_140, &I048_020, &I048_040, &I048_070, &I048_090, &I048_130,",
          "6708: static const AsterixField ***I048[] = { I048_v1_17 };",
          "6712:     { \"I048_v1_17\", \"Version 1.17\", 0 },",
          "",
          "[Added Lines]",
          "7325: static const AsterixField I048_RE_MD5_01 = { FX, 1, 0, 0, &hf_048_RE_MD5_01, I048_RE_MD5_01_PARTS, { NULL } };",
          "7326: static const AsterixField I048_RE_MD5_02 = { FIXED, 4, 0, 0, &hf_048_RE_MD5_02, I048_RE_MD5_02_PARTS, { NULL } };",
          "7327: static const AsterixField I048_RE_MD5_03 = { FIXED, 6, 0, 0, &hf_048_RE_MD5_03, I048_RE_MD5_03_PARTS, { NULL } };",
          "7328: static const AsterixField I048_RE_MD5_04 = { FIXED, 2, 0, 0, &hf_048_RE_MD5_04, I048_RE_MD5_04_PARTS, { NULL } };",
          "7329: static const AsterixField I048_RE_MD5_05 = { FIXED, 2, 0, 0, &hf_048_RE_MD5_05, I048_RE_MD5_05_PARTS, { NULL } };",
          "7330: static const AsterixField I048_RE_MD5_06 = { FIXED, 1, 0, 0, &hf_048_RE_MD5_06, I048_RE_MD5_06_PARTS, { NULL } };",
          "7331: static const AsterixField I048_RE_MD5_07 = { FIXED, 1, 0, 0, &hf_048_RE_MD5_07, I048_RE_MD5_07_PARTS, { NULL } };",
          "7332: static const AsterixField I048_RE_MD5 = { COMPOUND, 0, 0, 0, &hf_048_RE_MD5, NULL, { &I048_RE_MD5_01,",
          "7333:                                                                                      &I048_RE_MD5_02,",
          "7334:                                                                                      &I048_RE_MD5_03,",
          "7335:                                                                                      &I048_RE_MD5_04,",
          "7336:                                                                                      &I048_RE_MD5_05,",
          "7337:                                                                                      &I048_RE_MD5_06,",
          "7338:                                                                                      &I048_RE_MD5_07,",
          "7339:                                                                                      NULL } };",
          "7340: static const AsterixField I048_RE_M5N_01 = { FX, 1, 0, 0, &hf_048_RE_M5N_01, I048_RE_M5N_01_PARTS, { NULL } };",
          "7341: static const AsterixField I048_RE_M5N_02 = { FIXED, 4, 0, 0, &hf_048_RE_M5N_02, I048_RE_M5N_02_PARTS, { NULL } };",
          "7342: static const AsterixField I048_RE_M5N_03 = { FIXED, 6, 0, 0, &hf_048_RE_M5N_03, I048_RE_M5N_03_PARTS, { NULL } };",
          "7343: static const AsterixField I048_RE_M5N_04 = { FIXED, 2, 0, 0, &hf_048_RE_M5N_04, I048_RE_M5N_04_PARTS, { NULL } };",
          "7344: static const AsterixField I048_RE_M5N_05 = { FIXED, 2, 0, 0, &hf_048_RE_M5N_05, I048_RE_M5N_05_PARTS, { NULL } };",
          "7345: static const AsterixField I048_RE_M5N_06 = { FIXED, 1, 0, 0, &hf_048_RE_M5N_06, I048_RE_M5N_06_PARTS, { NULL } };",
          "7346: static const AsterixField I048_RE_M5N_07 = { FIXED, 1, 0, 0, &hf_048_RE_M5N_07, I048_RE_M5N_07_PARTS, { NULL } };",
          "7347: static const AsterixField I048_RE_M5N_08 = { FIXED, 1, 0, 0, &hf_048_RE_M5N_08, I048_RE_M5N_08_PARTS, { NULL } };",
          "7348: static const AsterixField I048_RE_M5N = { COMPOUND, 0, 0, 0, &hf_048_RE_M5N, NULL, { &I048_RE_M5N_01,",
          "7349:                                                                                      &I048_RE_M5N_02,",
          "7350:                                                                                      &I048_RE_M5N_03,",
          "7351:                                                                                      &I048_RE_M5N_04,",
          "7352:                                                                                      &I048_RE_M5N_05,",
          "7353:                                                                                      &I048_RE_M5N_06,",
          "7354:                                                                                      &I048_RE_M5N_07,",
          "7355:                                                                                      &I048_RE_M5N_08,",
          "7356:                                                                                      NULL } };",
          "7357: static const AsterixField I048_RE_M4E = { FX, 1, 0, 0, &hf_048_RE_M4E, I048_RE_M4E_PARTS, { NULL } };",
          "7358: static const AsterixField I048_RE_RPC_01 = { FIXED, 1, 0, 0, &hf_048_RE_RPC_01, I048_RE_RPC_01_PARTS, { NULL } };",
          "7359: static const AsterixField I048_RE_RPC_02 = { FIXED, 2, 0, 0, &hf_048_RE_RPC_02, I048_RE_RPC_02_PARTS, { NULL } };",
          "7360: static const AsterixField I048_RE_RPC_03 = { FIXED, 2, 0, 0, &hf_048_RE_RPC_03, I048_RE_RPC_03_PARTS, { NULL } };",
          "7361: static const AsterixField I048_RE_RPC_04 = { FIXED, 2, 0, 0, &hf_048_RE_RPC_04, I048_RE_RPC_04_PARTS, { NULL } };",
          "7362: static const AsterixField I048_RE_RPC = { COMPOUND, 0, 0, 0, &hf_048_RE_RPC, NULL, { &I048_RE_RPC_01,",
          "7363:                                                                                      &I048_RE_RPC_02,",
          "7364:                                                                                      &I048_RE_RPC_03,",
          "7365:                                                                                      &I048_RE_RPC_04,",
          "7366:                                                                                      NULL } };",
          "7367: static const AsterixField I048_RE_ERR = { FIXED, 3, 0, 0, &hf_048_RE_ERR, I048_RE_ERR_PARTS, { NULL } };",
          "7368: static const AsterixField I048_RE = { RE, 0, 0, 1, &hf_048_RE, NULL, { &I048_RE_MD5, &I048_RE_M5N, &I048_RE_M4E, &I048_RE_RPC, &I048_RE_ERR, NULL } };",
          "7371: static const AsterixField *I048_v1_23_uap[] = { &I048_010, &I048_140, &I048_020, &I048_040, &I048_070, &I048_090, &I048_130,",
          "7375: static const AsterixField *I048_v1_21_uap[] = { &I048_010, &I048_140, &I048_020_v1_21, &I048_040, &I048_070, &I048_090, &I048_130,",
          "7376:                                                 &I048_220, &I048_240, &I048_250, &I048_161, &I048_042, &I048_200, &I048_170_v1_21,",
          "7377:                                                 &I048_210, &I048_030, &I048_080, &I048_100, &I048_110, &I048_120, &I048_230,",
          "7378:                                                 &I048_260, &I048_055, &I048_050, &I048_065, &I048_060, &I048_SP,  &I048_RE, NULL };",
          "7379: static const AsterixField *I048_v1_17_uap[] = { &I048_010, &I048_140, &I048_020_v1_17, &I048_040, &I048_070, &I048_090, &I048_130,",
          "7380:                                                 &I048_220, &I048_240, &I048_250, &I048_161, &I048_042, &I048_200, &I048_170_v1_21,",
          "7381:                                                 &I048_210, &I048_030, &I048_080, &I048_100, &I048_110, &I048_120, &I048_230,",
          "7382:                                                 &I048_260, &I048_055, &I048_050, &I048_065, &I048_060, &I048_SP,  &I048_RE, NULL };",
          "7383: static const AsterixField **I048_v1_23[] = { I048_v1_23_uap, NULL };",
          "7384: static const AsterixField **I048_v1_21[] = { I048_v1_21_uap, NULL };",
          "7386: static const AsterixField ***I048[] = { I048_v1_23, I048_v1_21, I048_v1_17 };",
          "7390:     { \"I048_v1_23\", \"Version 1.23\", 0 },",
          "7391:     { \"I048_v1_21\", \"Version 1.21\", 1 },",
          "7392:     { \"I048_v1_17\", \"Version 1.17\", 2 },",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "10424:         { &hf_048_010, { \"010, Data Source Identifier\", \"asterix.048_010\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10425:         { &hf_048_020, { \"020, Target Report Descriptor\", \"asterix.048_020\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10426:         { &hf_048_020_TYP, { \"TYP\", \"asterix.048_020_TYP\", FT_UINT8, BASE_DEC, VALS (valstr_048_020_TYP), 0xe0, \"Type of detection\", HFILL } },",
          "10429:         { &hf_048_020_SPI, { \"SPI\", \"asterix.048_020_SPI\", FT_UINT8, BASE_DEC, VALS (valstr_048_020_SPI), 0x04, \"Special Position Identification\", HFILL } },",
          "10430:         { &hf_048_020_RAB, { \"RAB\", \"asterix.048_020_RAB\", FT_UINT8, BASE_DEC, VALS (valstr_048_020_RAB), 0x02, \"Report from aircraft or field monitor\", HFILL } },",
          "10431:         { &hf_048_020_TST, { \"TST\", \"asterix.048_020_TST\", FT_UINT8, BASE_DEC, VALS (valstr_048_020_TST), 0x80, \"Real or test target\", HFILL } },",
          "10432:         { &hf_048_020_ME, { \"ME\", \"asterix.048_020_ME\", FT_UINT8, BASE_DEC, VALS (valstr_048_020_ME), 0x10, \"Military emergency\", HFILL } },",
          "10433:         { &hf_048_020_MI, { \"MI\", \"asterix.048_020_MI\", FT_UINT8, BASE_DEC, VALS (valstr_048_020_MI), 0x08, \"Military identification\", HFILL } },",
          "10435:         { &hf_048_030, { \"030, Warning/Error Conditions\", \"asterix.048_030\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10436:         { &hf_048_030_WE, { \"W/E value\", \"asterix.048_030_WE\", FT_UINT8, BASE_DEC, VALS (valstr_048_030_WE), 0xfe, NULL, HFILL } },",
          "10437:         { &hf_048_040, { \"040, Measured Position in Polar Co-ordinates\", \"asterix.048_040\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10438:         { &hf_048_040_RHO, { \"RHO[NM]\", \"asterix.048_040_RHO\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10439:         { &hf_048_040_THETA, { \"THETA[deg]\", \"asterix.048_040_THETA\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "[Removed Lines]",
          "10427:         { &hf_048_020_SIM, { \"SIM\", \"asterix.048_020_SIM\", FT_UINT8, BASE_DEC, VALS (valstr_048_020_SIM), 0x10, \"Simulated od Actual target\", HFILL } },",
          "10428:         { &hf_048_020_RDP, { \"RDP\", \"asterix.048_020_RDP\", FT_UINT8, BASE_DEC, VALS (valstr_048_020_RDP), 0x08, \"RDP CHain\", HFILL } },",
          "10434:         { &hf_048_020_FOE, { \"FOE/FRI\", \"asterix.048_020_FOE\", FT_UINT8, BASE_DEC, VALS (valstr_048_020_FOE), 0x06, \"Foe of friend\", HFILL } },",
          "",
          "[Added Lines]",
          "11107:         { &hf_048_020_SIM, { \"SIM\", \"asterix.048_020_SIM\", FT_UINT8, BASE_DEC, VALS (valstr_048_020_SIM), 0x10, \"Simulated or Actual target\", HFILL } },",
          "11108:         { &hf_048_020_RDP, { \"RDP\", \"asterix.048_020_RDP\", FT_UINT8, BASE_DEC, VALS (valstr_048_020_RDP), 0x08, \"RDP Chain\", HFILL } },",
          "11112:         { &hf_048_020_ERR, { \"ERR\", \"asterix.048_020_ERR\", FT_UINT8, BASE_DEC, VALS (valstr_048_020_ERR), 0x40, \"Extended range present or not\", HFILL } },",
          "11113:         { &hf_048_020_XPP, { \"XPP\", \"asterix.048_020_XPP\", FT_UINT8, BASE_DEC, VALS (valstr_048_020_XPP), 0x20, \"X-Pulse present or not\", HFILL } },",
          "11116:         { &hf_048_020_FOE, { \"FOE/FRI\", \"asterix.048_020_FOE\", FT_UINT8, BASE_DEC, VALS (valstr_048_020_FOE), 0x06, \"Foe or friend\", HFILL } },",
          "11119:         { &hf_048_030_1_WE, { \"W/E value\", \"asterix.048_030_1_WE\", FT_UINT8, BASE_DEC, VALS (valstr_048_030_WE), 0xfe, NULL, HFILL } },",
          "11120:         { &hf_048_030_2_WE, { \"W/E value\", \"asterix.048_030_2_WE\", FT_UINT8, BASE_DEC, VALS (valstr_048_030_WE), 0xfe, NULL, HFILL } },",
          "11121:         { &hf_048_030_3_WE, { \"W/E value\", \"asterix.048_030_3_WE\", FT_UINT8, BASE_DEC, VALS (valstr_048_030_WE), 0xfe, NULL, HFILL } },",
          "11122:         { &hf_048_030_4_WE, { \"W/E value\", \"asterix.048_030_4_WE\", FT_UINT8, BASE_DEC, VALS (valstr_048_030_WE), 0xfe, NULL, HFILL } },",
          "11123:         { &hf_048_030_5_WE, { \"W/E value\", \"asterix.048_030_5_WE\", FT_UINT8, BASE_DEC, VALS (valstr_048_030_WE), 0xfe, NULL, HFILL } },",
          "11124:         { &hf_048_030_6_WE, { \"W/E value\", \"asterix.048_030_6_WE\", FT_UINT8, BASE_DEC, VALS (valstr_048_030_WE), 0xfe, NULL, HFILL } },",
          "11125:         { &hf_048_030_7_WE, { \"W/E value\", \"asterix.048_030_7_WE\", FT_UINT8, BASE_DEC, VALS (valstr_048_030_WE), 0xfe, NULL, HFILL } },",
          "11126:         { &hf_048_030_8_WE, { \"W/E value\", \"asterix.048_030_8_WE\", FT_UINT8, BASE_DEC, VALS (valstr_048_030_WE), 0xfe, NULL, HFILL } },",
          "11127:         { &hf_048_030_9_WE, { \"W/E value\", \"asterix.048_030_9_WE\", FT_UINT8, BASE_DEC, VALS (valstr_048_030_WE), 0xfe, NULL, HFILL } },",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "10494:         { &hf_048_100, { \"100, Mode-C Code and Code Confidence Indicator\", \"asterix.048_100\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10495:         { &hf_048_100_V, { \"V\", \"asterix.048_100_V\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_V), 0x80, NULL, HFILL } },",
          "10496:         { &hf_048_100_G, { \"G\", \"asterix.048_100_G\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_G), 0x40, NULL, HFILL } },",
          "10505:         { &hf_048_100_C1, { \"C1\", \"asterix.048_100_C1\", FT_UINT8, BASE_DEC, NULL, 0x08, NULL, HFILL } },",
          "10517:         { &hf_048_100_QC1, { \"QC1\", \"asterix.048_100_QC1\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_QA), 0x08, NULL, HFILL } },",
          "10521:         { &hf_048_110, { \"110, Height Measured by a 3D Radar\", \"asterix.048_110\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10522:         { &hf_048_110_3DHEIGHT, { \"3D-Height [feet]\", \"asterix.048_110_3DHEIGHT\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10523:         { &hf_048_120, { \"120, Radial Doppler Speed\", \"asterix.048_120\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10524:         { &hf_048_120_01, { \"Subfield #1: Calculated Doppler Speed\", \"asterix.048_120_01\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10525:         { &hf_048_120_01_D, { \"D\", \"asterix.048_120_01_D\", FT_UINT8, BASE_DEC, VALS (valstr_048_120_01_D), 0x80, NULL, HFILL } },",
          "10527:         { &hf_048_120_02, { \"Subfield # 2: Raw Doppler Speed\", \"asterix.048_120_02\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10531:         { &hf_048_130, { \"130, Radar Plot Characteristics\", \"asterix.048_130\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10532:         { &hf_048_130_01, { \"#1: SSR Plot Runlength\", \"asterix.048_130_01\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10533:         { &hf_048_130_01_SRL, { \"SRL[deg]\", \"asterix.048_130_01_SRL\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "[Removed Lines]",
          "10497:         { &hf_048_100_A4, { \"A4\", \"asterix.048_100_A4\", FT_UINT8, BASE_DEC, NULL, 0x08, NULL, HFILL } },",
          "10498:         { &hf_048_100_A2, { \"A2\", \"asterix.048_100_A2\", FT_UINT8, BASE_DEC, NULL, 0x04, NULL, HFILL } },",
          "10499:         { &hf_048_100_A1, { \"A1\", \"asterix.048_100_A1\", FT_UINT8, BASE_DEC, NULL, 0x02, NULL, HFILL } },",
          "10500:         { &hf_048_100_B4, { \"B4\", \"asterix.048_100_B4\", FT_UINT8, BASE_DEC, NULL, 0x01, NULL, HFILL } },",
          "10501:         { &hf_048_100_B2, { \"B2\", \"asterix.048_100_B2\", FT_UINT8, BASE_DEC, NULL, 0x80, NULL, HFILL } },",
          "10502:         { &hf_048_100_B1, { \"B1\", \"asterix.048_100_B1\", FT_UINT8, BASE_DEC, NULL, 0x40, NULL, HFILL } },",
          "10503:         { &hf_048_100_C4, { \"C4\", \"asterix.048_100_C4\", FT_UINT8, BASE_DEC, NULL, 0x20, NULL, HFILL } },",
          "10504:         { &hf_048_100_C2, { \"C2\", \"asterix.048_100_C2\", FT_UINT8, BASE_DEC, NULL, 0x10, NULL, HFILL } },",
          "10506:         { &hf_048_100_D4, { \"D4\", \"asterix.048_100_D4\", FT_UINT8, BASE_DEC, NULL, 0x04, NULL, HFILL } },",
          "10507:         { &hf_048_100_D2, { \"D2\", \"asterix.048_100_D2\", FT_UINT8, BASE_DEC, NULL, 0x02, NULL, HFILL } },",
          "10508:         { &hf_048_100_D1, { \"D1\", \"asterix.048_100_D1\", FT_UINT8, BASE_DEC, NULL, 0x01, NULL, HFILL } },",
          "10509:         { &hf_048_100_QA4, { \"QA4\", \"asterix.048_100_QA4\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_QA), 0x08, NULL, HFILL } },",
          "10510:         { &hf_048_100_QA2, { \"QA2\", \"asterix.048_100_QA2\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_QA), 0x04, NULL, HFILL } },",
          "10511:         { &hf_048_100_QA1, { \"QA1\", \"asterix.048_100_QA1\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_QA), 0x02, NULL, HFILL } },",
          "10512:         { &hf_048_100_QB4, { \"QB4\", \"asterix.048_100_QB4\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_QA), 0x01, NULL, HFILL } },",
          "10513:         { &hf_048_100_QB2, { \"QB2\", \"asterix.048_100_QB2\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_QA), 0x80, NULL, HFILL } },",
          "10514:         { &hf_048_100_QB1, { \"QB1\", \"asterix.048_100_QB1\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_QA), 0x40, NULL, HFILL } },",
          "10515:         { &hf_048_100_QC4, { \"QC4\", \"asterix.048_100_QC4\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_QA), 0x20, NULL, HFILL } },",
          "10516:         { &hf_048_100_QC2, { \"QC2\", \"asterix.048_100_QC2\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_QA), 0x10, NULL, HFILL } },",
          "10518:         { &hf_048_100_QD4, { \"QD4\", \"asterix.048_100_QD4\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_QA), 0x04, NULL, HFILL } },",
          "10519:         { &hf_048_100_QD2, { \"QD2\", \"asterix.048_100_QD2\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_QA), 0x02, NULL, HFILL } },",
          "10520:         { &hf_048_100_QD1, { \"QD1\", \"asterix.048_100_QD1\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_QA), 0x01, NULL, HFILL } },",
          "10526:         { &hf_048_120_01_CAL, { \"CAL[m/s]\", \"asterix.048_120_01_CAL\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10528:         { &hf_048_120_02_DOP, { \"DOP[m/s]\", \"asterix.048_120_02_DOP\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10529:         { &hf_048_120_02_AMB, { \"AMB[m/s]\", \"asterix.048_120_02_AMB\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10530:         { &hf_048_120_02_FRQ, { \"FRQ[MHz]\", \"asterix.048_120_02_FRQ\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "[Added Lines]",
          "11189:         { &hf_048_100_A1, { \"A1\", \"asterix.048_100_A1\", FT_UINT8, BASE_DEC, NULL, 0x04, NULL, HFILL } },",
          "11190:         { &hf_048_100_C2, { \"C2\", \"asterix.048_100_C2\", FT_UINT8, BASE_DEC, NULL, 0x02, NULL, HFILL } },",
          "11191:         { &hf_048_100_A2, { \"A2\", \"asterix.048_100_A2\", FT_UINT8, BASE_DEC, NULL, 0x01, NULL, HFILL } },",
          "11192:         { &hf_048_100_C4, { \"C4\", \"asterix.048_100_C4\", FT_UINT8, BASE_DEC, NULL, 0x80, NULL, HFILL } },",
          "11193:         { &hf_048_100_A4, { \"A4\", \"asterix.048_100_A4\", FT_UINT8, BASE_DEC, NULL, 0x40, NULL, HFILL } },",
          "11194:         { &hf_048_100_B1, { \"B1\", \"asterix.048_100_B1\", FT_UINT8, BASE_DEC, NULL, 0x20, NULL, HFILL } },",
          "11195:         { &hf_048_100_D1, { \"D1\", \"asterix.048_100_D1\", FT_UINT8, BASE_DEC, NULL, 0x10, NULL, HFILL } },",
          "11196:         { &hf_048_100_B2, { \"B2\", \"asterix.048_100_B2\", FT_UINT8, BASE_DEC, NULL, 0x08, NULL, HFILL } },",
          "11197:         { &hf_048_100_D2, { \"D2\", \"asterix.048_100_D2\", FT_UINT8, BASE_DEC, NULL, 0x04, NULL, HFILL } },",
          "11198:         { &hf_048_100_B4, { \"B4\", \"asterix.048_100_B4\", FT_UINT8, BASE_DEC, NULL, 0x02, NULL, HFILL } },",
          "11199:         { &hf_048_100_D4, { \"D4\", \"asterix.048_100_D4\", FT_UINT8, BASE_DEC, NULL, 0x01, NULL, HFILL } },",
          "11201:         { &hf_048_100_QA1, { \"QA1\", \"asterix.048_100_QA1\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_QA), 0x04, NULL, HFILL } },",
          "11202:         { &hf_048_100_QC2, { \"QC2\", \"asterix.048_100_QC2\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_QA), 0x02, NULL, HFILL } },",
          "11203:         { &hf_048_100_QA2, { \"QA2\", \"asterix.048_100_QA2\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_QA), 0x01, NULL, HFILL } },",
          "11204:         { &hf_048_100_QC4, { \"QC4\", \"asterix.048_100_QC4\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_QA), 0x80, NULL, HFILL } },",
          "11205:         { &hf_048_100_QA4, { \"QA4\", \"asterix.048_100_QA4\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_QA), 0x40, NULL, HFILL } },",
          "11206:         { &hf_048_100_QB1, { \"QB1\", \"asterix.048_100_QB1\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_QA), 0x20, NULL, HFILL } },",
          "11207:         { &hf_048_100_QD1, { \"QD1\", \"asterix.048_100_QD1\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_QA), 0x10, NULL, HFILL } },",
          "11208:         { &hf_048_100_QB2, { \"QB2\", \"asterix.048_100_QB2\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_QA), 0x08, NULL, HFILL } },",
          "11209:         { &hf_048_100_QD2, { \"QD2\", \"asterix.048_100_QD2\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_QA), 0x04, NULL, HFILL } },",
          "11210:         { &hf_048_100_QB4, { \"QB4\", \"asterix.048_100_QB4\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_QA), 0x02, NULL, HFILL } },",
          "11211:         { &hf_048_100_QD4, { \"QD4\", \"asterix.048_100_QD4\", FT_UINT8, BASE_DEC, VALS (valstr_048_100_QA), 0x01, NULL, HFILL } },",
          "11217:         { &hf_048_120_01_CAL, { \"CAL[m/s]\", \"asterix.048_120_01_CAL\", FT_INT16, BASE_DEC, NULL, 0x3ff, NULL, HFILL } },",
          "11219:         { &hf_048_120_02_DOP, { \"DOP[m/s]\", \"asterix.048_120_02_DOP\", FT_INT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },",
          "11220:         { &hf_048_120_02_AMB, { \"AMB[m/s]\", \"asterix.048_120_02_AMB\", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },",
          "11221:         { &hf_048_120_02_FRQ, { \"FRQ[MHz]\", \"asterix.048_120_02_FRQ\", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "10552:         { &hf_048_170_DOU, { \"DOU\", \"asterix.048_170_DOU\", FT_UINT8, BASE_DEC, VALS (valstr_048_170_DOU), 0x10, \"Signals level of confidence in plot to track association process\", HFILL } },",
          "10553:         { &hf_048_170_MAH, { \"MAH\", \"asterix.048_170_MAH\", FT_UINT8, BASE_DEC, VALS (valstr_048_170_MAH), 0x08, \"Manoeuvre detection in Horizontal Sense\", HFILL } },",
          "10554:         { &hf_048_170_CDM, { \"CDM\", \"asterix.048_170_CDM\", FT_UINT8, BASE_DEC, VALS (valstr_048_170_CDM), 0x06, \"Climbing / Descending Mode\", HFILL } },",
          "10555:         { &hf_048_170_TRE, { \"TRE\", \"asterix.048_170_TRE\", FT_UINT8, BASE_DEC, VALS (valstr_048_170_TRE), 0x80, \"Signal for End_of_Track\", HFILL } },",
          "10556:         { &hf_048_170_GHO, { \"GHO\", \"asterix.048_170_GHO\", FT_UINT8, BASE_DEC, VALS (valstr_048_170_GHO), 0x40, \"Ghost vs. true target\", HFILL } },",
          "10557:         { &hf_048_170_SUP, { \"SUP\", \"asterix.048_170_SUP\", FT_UINT8, BASE_DEC, VALS (valstr_048_170_SUP), 0x20, \"Track maintained with track information from neighbouring Node B on the cluster, or network\", HFILL } },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11246:         { &hf_048_170_CDM_v1_21, { \"CDM\", \"asterix.048_170_CDM\", FT_UINT8, BASE_DEC, VALS (valstr_048_170_CDM_v1_21), 0x06, \"Climbing / Descending Mode\", HFILL } },",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "10577:         { &hf_048_240, { \"240, Aircraft Identification\", \"asterix.048_240\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10578:         { &hf_048_250, { \"250, Mode S MB Data\", \"asterix.048_250\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10579:         { &hf_048_260, { \"260, ACAS Resolution Advisory Report\", \"asterix.048_260\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10581:         { &hf_048_RE, { \"Reserved Expansion Field\", \"asterix.048_RE\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10582:         { &hf_048_SP, { \"Special Purpose Field\", \"asterix.048_SP\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10584:         { &hf_062_010, { \"010, Data Source Identifier\", \"asterix.062_010\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "[Removed Lines]",
          "10580:         { &hf_048_260_ACAS, { \"ACAS\", \"asterix.048_260_ACAS\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "[Added Lines]",
          "11272:         { &hf_048_260_ACAS, { \"ACAS\", \"asterix.048_260_ACAS\", FT_BYTES, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11274:         { &hf_048_RE_MD5, { \"MD5, Mode 5 Reports\", \"asterix.048_RE_MD5\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11275:         { &hf_048_RE_MD5_01, { \"#1, Mode 5 Summary\", \"asterix.048_RE_MD5_01\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11276:         { &hf_048_RE_MD5_01_M5, { \"M5\", \"asterix.048_RE_MD5_01_M5\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_MD5_01_M5), 0x80, NULL, HFILL } },",
          "11277:         { &hf_048_RE_MD5_01_ID, { \"ID\", \"asterix.048_RE_MD5_01_ID\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_MD5_01_ID), 0x40, NULL, HFILL } },",
          "11278:         { &hf_048_RE_MD5_01_DA, { \"DA\", \"asterix.048_RE_MD5_01_DA\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_MD5_01_DA), 0x20, NULL, HFILL } },",
          "11279:         { &hf_048_RE_MD5_01_M1, { \"M1\", \"asterix.048_RE_MD5_01_M1\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_MD5_01_M1), 0x10, NULL, HFILL } },",
          "11280:         { &hf_048_RE_MD5_01_M2, { \"M2\", \"asterix.048_RE_MD5_01_M2\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_MD5_01_M2), 0x08, NULL, HFILL } },",
          "11281:         { &hf_048_RE_MD5_01_M3, { \"M3\", \"asterix.048_RE_MD5_01_M3\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_MD5_01_M3), 0x04, NULL, HFILL } },",
          "11282:         { &hf_048_RE_MD5_01_MC, { \"MC\", \"asterix.048_RE_MD5_01_MC\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_MD5_01_MC), 0x02, NULL, HFILL } },",
          "11283:         { &hf_048_RE_MD5_02, { \"#2, Mode 5 PIN /National Origin/ Mission Code\", \"asterix.048_RE_MD5_02\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11284:         { &hf_048_RE_MD5_02_PIN, { \"PIN\", \"asterix.048_RE_MD5_02_PIN\", FT_UINT16, BASE_DEC, NULL, 0x3fff, NULL, HFILL } },",
          "11285:         { &hf_048_RE_MD5_02_NAV, { \"NAV\", \"asterix.048_RE_MD5_02_NAV\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_MD5_02_NAV), 0x20, NULL, HFILL } },",
          "11286:         { &hf_048_RE_MD5_02_NAT, { \"NAT\", \"asterix.048_RE_MD5_02_NAT\", FT_UINT8, BASE_DEC, NULL, 0x1f, NULL, HFILL } },",
          "11287:         { &hf_048_RE_MD5_02_MIS, { \"MIS\", \"asterix.048_RE_MD5_02_MIS\", FT_UINT8, BASE_DEC, NULL, 0x3f, NULL, HFILL } },",
          "11288:         { &hf_048_RE_MD5_03, { \"#3, Mode 5 Reported Position\", \"asterix.048_RE_MD5_03\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11289:         { &hf_048_RE_MD5_03_LAT, { \"LAT[deg]\", \"asterix.048_RE_MD5_03_LAT\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11290:         { &hf_048_RE_MD5_03_LON, { \"LON[deg]\", \"asterix.048_RE_MD5_03_LON\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11291:         { &hf_048_RE_MD5_04, { \"#4, Mode 5 GNSS-derived Altitude\", \"asterix.048_RE_MD5_04\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11292:         { &hf_048_RE_MD5_04_RES, { \"RES\", \"asterix.048_RE_MD5_04_RES\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_MD5_04_RES), 0x40, NULL, HFILL } },",
          "11293:         { &hf_048_RE_MD5_04_GA, { \"GA[ft]\", \"asterix.048_RE_MD5_04_GA\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11294:         { &hf_048_RE_MD5_05, { \"#5, Extended Mode 1 Code in Octal Representation\", \"asterix.048_RE_MD5_05\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11295:         { &hf_048_RE_MD5_05_V, { \"V\", \"asterix.048_RE_MD5_05_V\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_MD5_05_V), 0x80, NULL, HFILL } },",
          "11296:         { &hf_048_RE_MD5_05_G, { \"G\", \"asterix.048_RE_MD5_05_G\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_MD5_05_G), 0x40, NULL, HFILL } },",
          "11297:         { &hf_048_RE_MD5_05_L, { \"L\", \"asterix.048_RE_MD5_05_L\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_MD5_05_L), 0x20, NULL, HFILL } },",
          "11298:         { &hf_048_RE_MD5_05_SQUAWK, { \"SQUAWK\", \"asterix.048_RE_MD5_05_SQUAWK\", FT_UINT16, BASE_OCT, NULL, 0x0fff, NULL, HFILL } },",
          "11299:         { &hf_048_RE_MD5_06, { \"#6, Time Offset for POS and GA\", \"asterix.048_RE_MD5_06\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11300:         { &hf_048_RE_MD5_06_TOS, { \"TOS[s]\", \"asterix.048_RE_MD5_06_TOS\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11301:         { &hf_048_RE_MD5_07, { \"#7, X Pulse Presence,\", \"asterix.048_RE_MD5_07\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11302:         { &hf_048_RE_MD5_07_XP, { \"XP\", \"asterix.048_RE_MD5_07_XP\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_MD5_07_XP), 0x20, NULL, HFILL } },",
          "11303:         { &hf_048_RE_MD5_07_X5, { \"X5\", \"asterix.048_RE_MD5_07_X5\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_MD5_07_X5), 0x10, NULL, HFILL } },",
          "11304:         { &hf_048_RE_MD5_07_XC, { \"XC\", \"asterix.048_RE_MD5_07_XC\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_MD5_07_XC), 0x08, NULL, HFILL } },",
          "11305:         { &hf_048_RE_MD5_07_X3, { \"X3\", \"asterix.048_RE_MD5_07_X3\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_MD5_07_X3), 0x04, NULL, HFILL } },",
          "11306:         { &hf_048_RE_MD5_07_X2, { \"X2\", \"asterix.048_RE_MD5_07_X2\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_MD5_07_X2), 0x02, NULL, HFILL } },",
          "11307:         { &hf_048_RE_MD5_07_X1, { \"X1\", \"asterix.048_RE_MD5_07_X1\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_MD5_07_X1), 0x01, NULL, HFILL } },",
          "11308:         { &hf_048_RE_M5N, { \"M5N, Mode 5 Reports, New Format\", \"asterix.048_RE_M5N\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11309:         { &hf_048_RE_M5N_01, { \"#1, Mode 5 Summary\", \"asterix.048_RE_M5N_01\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11310:         { &hf_048_RE_M5N_01_M5, { \"M5\", \"asterix.048_RE_M5N_01_M5\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_M5N_01_M5), 0x80, NULL, HFILL } },",
          "11311:         { &hf_048_RE_M5N_01_ID, { \"ID\", \"asterix.048_RE_M5N_01_ID\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_M5N_01_ID), 0x40, NULL, HFILL } },",
          "11312:         { &hf_048_RE_M5N_01_DA, { \"DA\", \"asterix.048_RE_M5N_01_DA\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_M5N_01_DA), 0x20, NULL, HFILL } },",
          "11313:         { &hf_048_RE_M5N_01_M1, { \"M1\", \"asterix.048_RE_M5N_01_M1\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_M5N_01_M1), 0x10, NULL, HFILL } },",
          "11314:         { &hf_048_RE_M5N_01_M2, { \"M2\", \"asterix.048_RE_M5N_01_M2\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_M5N_01_M2), 0x08, NULL, HFILL } },",
          "11315:         { &hf_048_RE_M5N_01_M3, { \"M3\", \"asterix.048_RE_M5N_01_M3\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_M5N_01_M3), 0x04, NULL, HFILL } },",
          "11316:         { &hf_048_RE_M5N_01_MC, { \"MC\", \"asterix.048_RE_M5N_01_MC\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_M5N_01_MC), 0x02, NULL, HFILL } },",
          "11317:         { &hf_048_RE_M5N_02, { \"#2, Mode 5 PIN /National Origin/ Mission Code\", \"asterix.048_RE_M5N_02\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11318:         { &hf_048_RE_M5N_02_PIN, { \"PIN\", \"asterix.048_RE_M5N_02_PIN\", FT_UINT16, BASE_DEC, NULL, 0x3fff, NULL, HFILL } },",
          "11319:         { &hf_048_RE_M5N_02_NOV, { \"NOV\", \"asterix.048_RE_M5N_02_NOV\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_M5N_02_NOV), 0x08, NULL, HFILL } },",
          "11320:         { &hf_048_RE_M5N_02_NO, { \"NO\", \"asterix.048_RE_M5N_02_NO\", FT_UINT16, BASE_DEC, NULL, 0x07ff, NULL, HFILL } },",
          "11321:         { &hf_048_RE_M5N_03, { \"#3, Mode 5 Reported Position\", \"asterix.048_RE_M5N_03\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11322:         { &hf_048_RE_M5N_03_LAT, { \"LAT[deg]\", \"asterix.048_RE_M5N_03_LAT\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11323:         { &hf_048_RE_M5N_03_LON, { \"LON[deg]\", \"asterix.048_RE_M5N_03_LON\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11324:         { &hf_048_RE_M5N_04, { \"#4, Mode 5 GNSS-derived Altitude\", \"asterix.048_RE_M5N_04\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11325:         { &hf_048_RE_M5N_04_RES, { \"RES\", \"asterix.048_RE_M5N_04_RES\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_M5N_04_RES), 0x40, NULL, HFILL } },",
          "11326:         { &hf_048_RE_M5N_04_GA, { \"GA[ft]\", \"asterix.048_RE_M5N_04_GA\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11327:         { &hf_048_RE_M5N_05, { \"#5, Extended Mode 1 Code in Octal Representation\", \"asterix.048_RE_M5N_05\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11328:         { &hf_048_RE_M5N_05_V, { \"V\", \"asterix.048_RE_M5N_05_V\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_M5N_05_V), 0x80, NULL, HFILL } },",
          "11329:         { &hf_048_RE_M5N_05_G, { \"G\", \"asterix.048_RE_M5N_05_G\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_M5N_05_G), 0x40, NULL, HFILL } },",
          "11330:         { &hf_048_RE_M5N_05_L, { \"L\", \"asterix.048_RE_M5N_05_L\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_M5N_05_L), 0x20, NULL, HFILL } },",
          "11331:         { &hf_048_RE_M5N_05_SQUAWK, { \"SQUAWK\", \"asterix.048_RE_M5N_05_SQUAWK\", FT_UINT16, BASE_OCT, NULL, 0x0fff, NULL, HFILL } },",
          "11332:         { &hf_048_RE_M5N_06, { \"#6, Time Offset for POS and GA\", \"asterix.048_RE_M5N_06\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11333:         { &hf_048_RE_M5N_06_TOS, { \"TOS[s]\", \"asterix.048_RE_M5N_06_TOS\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11334:         { &hf_048_RE_M5N_07, { \"#7, X Pulse Presence\", \"asterix.048_RE_M5N_07\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11335:         { &hf_048_RE_M5N_07_XP, { \"XP\", \"asterix.048_RE_M5N_07_XP\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_M5N_07_XP), 0x20, NULL, HFILL } },",
          "11336:         { &hf_048_RE_M5N_07_X5, { \"X5\", \"asterix.048_RE_M5N_07_X5\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_M5N_07_X5), 0x10, NULL, HFILL } },",
          "11337:         { &hf_048_RE_M5N_07_XC, { \"XC\", \"asterix.048_RE_M5N_07_XC\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_M5N_07_XC), 0x08, NULL, HFILL } },",
          "11338:         { &hf_048_RE_M5N_07_X3, { \"X3\", \"asterix.048_RE_M5N_07_X3\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_M5N_07_X3), 0x04, NULL, HFILL } },",
          "11339:         { &hf_048_RE_M5N_07_X2, { \"X2\", \"asterix.048_RE_M5N_07_X2\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_M5N_07_X2), 0x02, NULL, HFILL } },",
          "11340:         { &hf_048_RE_M5N_07_X1, { \"X1\", \"asterix.048_RE_M5N_07_X1\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_M5N_07_X1), 0x01, NULL, HFILL } },",
          "11341:         { &hf_048_RE_M5N_08, { \"#8, Figure of Merit\", \"asterix.048_RE_M5N_08\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11342:         { &hf_048_RE_M5N_08_FOM, { \"FOM\", \"asterix.048_RE_M5N_08_FOM\", FT_UINT8, BASE_DEC, NULL, 0x1f, NULL, HFILL } },",
          "11343:         { &hf_048_RE_M4E, { \"M4E, Extended Mode 4 Report\", \"asterix.048_RE_M4E\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11344:         { &hf_048_RE_M4E_FOE_FRI, { \"FOE/FRI\", \"asterix.048_RE_M4E_FOE_FRI\", FT_UINT8, BASE_DEC, VALS (valstr_048_RE_M4E_FOE_FRI), 0x06, NULL, HFILL } },",
          "11345:         { &hf_048_RE_RPC, { \"RPC, Radar Plot Characteristics\", \"asterix.048_RE_RPC\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11346:         { &hf_048_RE_RPC_01, { \"#1, Score\", \"asterix.048_RE_RPC_01\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11347:         { &hf_048_RE_RPC_01_SCO, { \"SCO\", \"asterix.048_RE_RPC_01_SCO\", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },",
          "11348:         { &hf_048_RE_RPC_02, { \"#2, Signal / Clutter Ratio\", \"asterix.048_RE_RPC_02\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11349:         { &hf_048_RE_RPC_02_SCR, { \"SCR[dB]\", \"asterix.048_RE_RPC_02_SCR\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11350:         { &hf_048_RE_RPC_03, { \"#3, Range Width\", \"asterix.048_RE_RPC_03\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11351:         { &hf_048_RE_RPC_03_RW, { \"RW[NM]\", \"asterix.048_RE_RPC_03_RW\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11352:         { &hf_048_RE_RPC_04, { \"#4, Ambiguous Range\", \"asterix.048_RE_RPC_04\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11353:         { &hf_048_RE_RPC_04_AR, { \"AR[NM]\", \"asterix.048_RE_RPC_04_AR\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11354:         { &hf_048_RE_ERR, { \"ERR, Extended Range Report\", \"asterix.048_RE_ERR\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11355:         { &hf_048_RE_ERR_RHO, { \"RHO[NM]\", \"asterix.048_RE_ERR_RHO\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "11870:         &ett_048_020_SPI,",
          "11871:         &ett_048_020_RAB,",
          "11872:         &ett_048_020_TST,",
          "11873:         &ett_048_020_ME,",
          "11874:         &ett_048_020_MI,",
          "11875:         &ett_048_020_FOE,",
          "11876:         &ett_048_030,",
          "11877:         &ett_048_030_WE,",
          "11878:         &ett_048_040,",
          "11879:         &ett_048_040_RHO,",
          "11880:         &ett_048_040_THETA,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12647:         &ett_048_020_ERR,",
          "12648:         &ett_048_020_XPP,",
          "12654:         &ett_048_030_1_WE,",
          "12655:         &ett_048_030_2_WE,",
          "12656:         &ett_048_030_3_WE,",
          "12657:         &ett_048_030_4_WE,",
          "12658:         &ett_048_030_5_WE,",
          "12659:         &ett_048_030_6_WE,",
          "12660:         &ett_048_030_7_WE,",
          "12661:         &ett_048_030_8_WE,",
          "12662:         &ett_048_030_9_WE,",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "11993:         &ett_048_170_DOU,",
          "11994:         &ett_048_170_MAH,",
          "11995:         &ett_048_170_CDM,",
          "11996:         &ett_048_170_TRE,",
          "11997:         &ett_048_170_GHO,",
          "11998:         &ett_048_170_SUP,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12781:         &ett_048_170_CDM_v1_21,",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "12020:         &ett_048_260,",
          "12021:         &ett_048_260_ACAS,",
          "12022:         &ett_048_RE,",
          "12023:         &ett_048_SP,",
          "12025:         &ett_062_010,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12809:         &ett_048_RE_MD5,",
          "12810:         &ett_048_RE_MD5_01,",
          "12811:         &ett_048_RE_MD5_01_M5,",
          "12812:         &ett_048_RE_MD5_01_ID,",
          "12813:         &ett_048_RE_MD5_01_DA,",
          "12814:         &ett_048_RE_MD5_01_M1,",
          "12815:         &ett_048_RE_MD5_01_M2,",
          "12816:         &ett_048_RE_MD5_01_M3,",
          "12817:         &ett_048_RE_MD5_01_MC,",
          "12818:         &ett_048_RE_MD5_02,",
          "12819:         &ett_048_RE_MD5_02_PIN,",
          "12820:         &ett_048_RE_MD5_02_NAV,",
          "12821:         &ett_048_RE_MD5_02_NAT,",
          "12822:         &ett_048_RE_MD5_02_MIS,",
          "12823:         &ett_048_RE_MD5_03,",
          "12824:         &ett_048_RE_MD5_03_LAT,",
          "12825:         &ett_048_RE_MD5_03_LON,",
          "12826:         &ett_048_RE_MD5_04,",
          "12827:         &ett_048_RE_MD5_04_RES,",
          "12828:         &ett_048_RE_MD5_04_GA,",
          "12829:         &ett_048_RE_MD5_05,",
          "12830:         &ett_048_RE_MD5_05_V,",
          "12831:         &ett_048_RE_MD5_05_G,",
          "12832:         &ett_048_RE_MD5_05_L,",
          "12833:         &ett_048_RE_MD5_05_SQUAWK,",
          "12834:         &ett_048_RE_MD5_06,",
          "12835:         &ett_048_RE_MD5_06_TOS,",
          "12836:         &ett_048_RE_MD5_07,",
          "12837:         &ett_048_RE_MD5_07_XP,",
          "12838:         &ett_048_RE_MD5_07_X5,",
          "12839:         &ett_048_RE_MD5_07_XC,",
          "12840:         &ett_048_RE_MD5_07_X3,",
          "12841:         &ett_048_RE_MD5_07_X2,",
          "12842:         &ett_048_RE_MD5_07_X1,",
          "12843:         &ett_048_RE_M5N,",
          "12844:         &ett_048_RE_M5N_01,",
          "12845:         &ett_048_RE_M5N_01_M5,",
          "12846:         &ett_048_RE_M5N_01_ID,",
          "12847:         &ett_048_RE_M5N_01_DA,",
          "12848:         &ett_048_RE_M5N_01_M1,",
          "12849:         &ett_048_RE_M5N_01_M2,",
          "12850:         &ett_048_RE_M5N_01_M3,",
          "12851:         &ett_048_RE_M5N_01_MC,",
          "12852:         &ett_048_RE_M5N_02,",
          "12853:         &ett_048_RE_M5N_02_PIN,",
          "12854:         &ett_048_RE_M5N_02_NOV,",
          "12855:         &ett_048_RE_M5N_02_NO,",
          "12856:         &ett_048_RE_M5N_03,",
          "12857:         &ett_048_RE_M5N_03_LAT,",
          "12858:         &ett_048_RE_M5N_03_LON,",
          "12859:         &ett_048_RE_M5N_04,",
          "12860:         &ett_048_RE_M5N_04_RES,",
          "12861:         &ett_048_RE_M5N_04_GA,",
          "12862:         &ett_048_RE_M5N_05,",
          "12863:         &ett_048_RE_M5N_05_V,",
          "12864:         &ett_048_RE_M5N_05_G,",
          "12865:         &ett_048_RE_M5N_05_L,",
          "12866:         &ett_048_RE_M5N_05_SQUAWK,",
          "12867:         &ett_048_RE_M5N_06,",
          "12868:         &ett_048_RE_M5N_06_TOS,",
          "12869:         &ett_048_RE_M5N_07,",
          "12870:         &ett_048_RE_M5N_07_XP,",
          "12871:         &ett_048_RE_M5N_07_X5,",
          "12872:         &ett_048_RE_M5N_07_XC,",
          "12873:         &ett_048_RE_M5N_07_X3,",
          "12874:         &ett_048_RE_M5N_07_X2,",
          "12875:         &ett_048_RE_M5N_07_X1,",
          "12876:         &ett_048_RE_M5N_08,",
          "12877:         &ett_048_RE_M5N_08_FOM,",
          "12878:         &ett_048_RE_M4E,",
          "12879:         &ett_048_RE_M4E_FOE_FRI,",
          "12880:         &ett_048_RE_RPC,",
          "12881:         &ett_048_RE_RPC_01,",
          "12882:         &ett_048_RE_RPC_01_SCO,",
          "12883:         &ett_048_RE_RPC_02,",
          "12884:         &ett_048_RE_RPC_02_SCR,",
          "12885:         &ett_048_RE_RPC_03,",
          "12886:         &ett_048_RE_RPC_03_RW,",
          "12887:         &ett_048_RE_RPC_04,",
          "12888:         &ett_048_RE_RPC_04_AR,",
          "12889:         &ett_048_RE_ERR,",
          "12890:         &ett_048_RE_ERR_RHO,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "22588bb924347fd517ff757745b0f98ca781c298",
      "candidate_info": {
        "commit_hash": "22588bb924347fd517ff757745b0f98ca781c298",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/22588bb924347fd517ff757745b0f98ca781c298",
        "files": [
          "epan/dissectors/packet-asterix.c"
        ],
        "message": "Updates and bugfixes of ASTERIX I062\n\nI062 v1.18 updates (now the default)\n- Updated I062/380#10.STAT, new enum values  (6 & 7)\n- Added asterix.062/080.SFC\n- Added asterix.062/080.IDD\n- Added asterix.062/080.IEC\nI062 v1.17 updates\n- Added asterix.062/060.V\n- Added asterix.062/060.G\nI062 bugfixes:\n- Fixed I062 Capitalisation inconsistencies\n- Fixed I062/080.FPLT, incorrect value mask\n- Fixed I062/080.SDS, incorrect value mask\n- Fixed I062/110#1.M5, incorrect name (was I062/110#1.MD5)\n- Fixed I062/110#4, incorrect abbreviation (was asterix.062_11_04)\n- Fixed I062/110#4, missing spare bit\n- Fixed I062/110#4.RES, incorrect value mask\n- Fixed I062/110#6, incorrect abbreviation (was asterix.062_11_06)\n- Fixed I062/136.MFL, incorrect abbreviation (was asterix.062_136_ALT)\n- Fixed I062/245.STI, was missing\n- Fixed I062/245, did not display anything\n- Fixed I062/290, incorrect abbreviation, (was asterix.062_)\n- Fixed I062/295#7.MHG, incorrect name (was I062/295#07.MHD)\n- Fixed I062/340#4/5, incorrect abbreviations (was asterix.062_340_)\n- Fixed I062/380#4, incorrect abbreviation (was asterix.062_380_4)\n- Fixed I062/380#4.IAS, incorrect scaling (depends on IM bit)\n- Fixed I062/380#6.ALT, incorrect type (was unsigned)\n- Fixed I062/380#7.ALT, incorrect type (was unsigned)\n- Fixed I062/380#9.NC, incorrect value mask\n- Fixed I062/380#9.TD, incorrect field size\n- Fixed I062/380#9.TTR, incorrect type (was signed)\n- Fixed I062/380#17.TA, incorrect type (was signed)\n- Fixed I062/380#19.VUC, incorrect field size\n- Fixed I062/390#3, incorrect type (was 32-bit), incorrect value mask\n- Fixed I062/390#n, incorrect abbreviations (was asterix.062_nn)\n- Fixed I062/500#3.APWLAT, incorrect type (was signed)\n- Fixed I062/500#3.APWLON, incorrect type (was signed)\n- Fixed I062/500#n, incorrect abbreviations (was asterix.062_nn)\n- Fixed I062/510, missing support for slaved trackers\n- Fixed I062/510.SUD, incorrect name (was I062/510.SID)\n- Fixed I062/510.SUD, incorrect type (was 24-bit), incorrect value mask\n- Fixed I062/510.STN, incorrect value mask\n- Updated I062/RE.CST.SAC/SIC, now reports as asterix.SAC/SIC\n- Updated I062/RE.CSNT.SAC/SIC, now reports as asterix.SAC/SIC\n\nNote: incorrect value masks and field sizes would in most cases\ncause an exception when trying to decode those fields.\n\nChange-Id: If6b9662d20619dd30b4fe28907ab0630c6d55e44\nReviewed-on: https://code.wireshark.org/review/31214\nPetri-Dish: Anders Broman <a.broman58@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-asterix.c||epan/dissectors/packet-asterix.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-asterix.c||epan/dissectors/packet-asterix.c": [
          "File: epan/dissectors/packet-asterix.c -> epan/dissectors/packet-asterix.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "984: static gint hf_062_015_SI = -1;",
          "985: static gint hf_062_040 = -1;",
          "986: static gint hf_062_060 = -1;",
          "987: static gint hf_062_060_CH = -1;",
          "988: static gint hf_062_060_SQUAWK = -1;",
          "989: static gint hf_062_070 = -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "987: static gint hf_062_060_V = -1;",
          "988: static gint hf_062_060_G = -1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1019: static gint hf_062_080_DUPT = -1;",
          "1020: static gint hf_062_080_DUPF = -1;",
          "1021: static gint hf_062_080_DUPM = -1;",
          "1022: static gint hf_062_080_FRIFOE = -1;",
          "1023: static gint hf_062_080_COA = -1;",
          "1024: static gint hf_062_100 = -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1024: static gint hf_062_080_SFC = -1;",
          "1025: static gint hf_062_080_IDD = -1;",
          "1026: static gint hf_062_080_IEC = -1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1074: static gint hf_062_135_QNH = -1;",
          "1075: static gint hf_062_135_ALT = -1;",
          "1076: static gint hf_062_136 = -1;",
          "1078: static gint hf_062_180 = -1;",
          "1079: static gint hf_062_180_SPEED = -1;",
          "1080: static gint hf_062_180_HEADING = -1;",
          "",
          "[Removed Lines]",
          "1077: static gint hf_062_136_ALT = -1;",
          "",
          "[Added Lines]",
          "1082: static gint hf_062_136_MFL = -1;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1096: static gint hf_062_240 = -1;",
          "1097: static gint hf_062_240_ROT = -1;",
          "1098: static gint hf_062_245 = -1;",
          "1099: static gint hf_062_270 = -1;",
          "1100: static gint hf_062_270_LENGTH = -1;",
          "1101: static gint hf_062_270_ORIENTATION = -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1104: static gint hf_062_245_STI = -1;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1154: static gint hf_062_295_06 = -1;",
          "1155: static gint hf_062_295_06_MD5 = -1;",
          "1156: static gint hf_062_295_07 = -1;",
          "1158: static gint hf_062_295_08 = -1;",
          "1159: static gint hf_062_295_08_IAS = -1;",
          "1160: static gint hf_062_295_09 = -1;",
          "",
          "[Removed Lines]",
          "1157: static gint hf_062_295_07_MHD = -1;",
          "",
          "[Added Lines]",
          "1163: static gint hf_062_295_07_MHG = -1;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1421: static gint hf_062_500_07_v0_17 = -1;",
          "1422: static gint hf_062_500_07_ALA = -1;",
          "1423: static gint hf_062_510 = -1;",
          "1425: static gint hf_062_510_STN = -1;",
          "1426: static gint hf_062_RE = -1;",
          "1427: static gint hf_062_RE_CST = -1;",
          "1430: static gint hf_062_RE_CST_TYP = -1;",
          "1431: static gint hf_062_RE_CST_TRK_NUM = -1;",
          "1432: static gint hf_062_RE_CSNT = -1;",
          "1435: static gint hf_062_RE_CSNT_TYP = -1;",
          "1436: static gint hf_062_RE_TVS = -1;",
          "1437: static gint hf_062_RE_TVS_VX = -1;",
          "",
          "[Removed Lines]",
          "1424: static gint hf_062_510_SID = -1;",
          "1428: static gint hf_062_RE_CST_SAC = -1;",
          "1429: static gint hf_062_RE_CST_SIC = -1;",
          "1433: static gint hf_062_RE_CSNT_SAC = -1;",
          "1434: static gint hf_062_RE_CSNT_SIC = -1;",
          "",
          "[Added Lines]",
          "1430: static gint hf_062_510_SUD = -1;",
          "1432: static gint hf_062_510_SLV_01_SUD = -1;",
          "1433: static gint hf_062_510_SLV_01_STN = -1;",
          "1434: static gint hf_062_510_SLV_02_SUD = -1;",
          "1435: static gint hf_062_510_SLV_02_STN = -1;",
          "1436: static gint hf_062_510_SLV_03_SUD = -1;",
          "1437: static gint hf_062_510_SLV_03_STN = -1;",
          "1438: static gint hf_062_510_SLV_04_SUD = -1;",
          "1439: static gint hf_062_510_SLV_04_STN = -1;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2412: static gint ett_062_015_SI = -1;",
          "2413: static gint ett_062_040 = -1;",
          "2414: static gint ett_062_060 = -1;",
          "2415: static gint ett_062_060_CH = -1;",
          "2416: static gint ett_062_060_SQUAWK = -1;",
          "2417: static gint ett_062_070 = -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2425: static gint ett_062_060_V = -1;",
          "2426: static gint ett_062_060_G = -1;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2447: static gint ett_062_080_DUPT = -1;",
          "2448: static gint ett_062_080_DUPF = -1;",
          "2449: static gint ett_062_080_DUPM = -1;",
          "2450: static gint ett_062_080_FRIFOE = -1;",
          "2451: static gint ett_062_080_COA = -1;",
          "2452: static gint ett_062_100 = -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2462: static gint ett_062_080_SFC = -1;",
          "2463: static gint ett_062_080_IDD = -1;",
          "2464: static gint ett_062_080_IEC = -1;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2502: static gint ett_062_135_QNH = -1;",
          "2503: static gint ett_062_135_ALT = -1;",
          "2504: static gint ett_062_136 = -1;",
          "2506: static gint ett_062_180 = -1;",
          "2507: static gint ett_062_180_SPEED = -1;",
          "2508: static gint ett_062_180_HEADING = -1;",
          "",
          "[Removed Lines]",
          "2505: static gint ett_062_136_ALT = -1;",
          "",
          "[Added Lines]",
          "2520: static gint ett_062_136_MFL = -1;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2524: static gint ett_062_240 = -1;",
          "2525: static gint ett_062_240_ROT = -1;",
          "2526: static gint ett_062_245 = -1;",
          "2527: static gint ett_062_270 = -1;",
          "2528: static gint ett_062_270_LENGTH = -1;",
          "2529: static gint ett_062_270_ORIENTATION = -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2542: static gint ett_062_245_STI = -1;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2582: static gint ett_062_295_06 = -1;",
          "2583: static gint ett_062_295_06_MD5 = -1;",
          "2584: static gint ett_062_295_07 = -1;",
          "2586: static gint ett_062_295_08 = -1;",
          "2587: static gint ett_062_295_08_IAS = -1;",
          "2588: static gint ett_062_295_09 = -1;",
          "",
          "[Removed Lines]",
          "2585: static gint ett_062_295_07_MHD = -1;",
          "",
          "[Added Lines]",
          "2601: static gint ett_062_295_07_MHG = -1;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2849: static gint ett_062_500_07_v0_17 = -1;",
          "2850: static gint ett_062_500_07_ALA = -1;",
          "2851: static gint ett_062_510 = -1;",
          "2853: static gint ett_062_510_STN = -1;",
          "2854: static gint ett_062_RE = -1;",
          "2855: static gint ett_062_RE_CST = -1;",
          "2858: static gint ett_062_RE_CST_TYP = -1;",
          "2859: static gint ett_062_RE_CST_TRK_NUM = -1;",
          "2860: static gint ett_062_RE_CSNT = -1;",
          "2863: static gint ett_062_RE_CSNT_TYP = -1;",
          "2864: static gint ett_062_RE_TVS = -1;",
          "2865: static gint ett_062_RE_TVS_VX = -1;",
          "",
          "[Removed Lines]",
          "2852: static gint ett_062_510_SID = -1;",
          "2856: static gint ett_062_RE_CST_SAC = -1;",
          "2857: static gint ett_062_RE_CST_SIC = -1;",
          "2861: static gint ett_062_RE_CSNT_SAC = -1;",
          "2862: static gint ett_062_RE_CSNT_SIC = -1;",
          "",
          "[Added Lines]",
          "2868: static gint ett_062_510_SUD = -1;",
          "2870: static gint ett_062_510_SLV_01_SUD = -1;",
          "2871: static gint ett_062_510_SLV_01_STN = -1;",
          "2872: static gint ett_062_510_SLV_02_SUD = -1;",
          "2873: static gint ett_062_510_SLV_02_STN = -1;",
          "2874: static gint ett_062_510_SLV_03_SUD = -1;",
          "2875: static gint ett_062_510_SLV_03_STN = -1;",
          "2876: static gint ett_062_510_SLV_04_SUD = -1;",
          "2877: static gint ett_062_510_SLV_04_STN = -1;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2946: #define FIELD_PART_ASCII      6",
          "2947: #define FIELD_PART_FX         7",
          "2948: #define FIELD_PART_HEX        8",
          "2950: typedef struct FieldPart_s FieldPart;",
          "2951: struct FieldPart_s {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2969: #define FIELD_PART_IAS_IM     9",
          "2970: #define FIELD_PART_IAS_ASPD   10",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "4882:     { 1, \"Air Speed = Mach\" },",
          "4883:     { 0, NULL }",
          "4884: };",
          "4887: static const FieldPart *I021_150_PARTS[] = { &I021_150_IM, &I021_150_ASPD, NULL };",
          "",
          "[Removed Lines]",
          "4885: static const FieldPart I021_150_IM = { 1, 1.0, FIELD_PART_UINT, &hf_021_150_IM, NULL };",
          "4886: static const FieldPart I021_150_ASPD = { 15, 1.0, FIELD_PART_UFLOAT, &hf_021_150_ASPD, NULL };",
          "",
          "[Added Lines]",
          "4907: static const FieldPart I021_150_IM = { 1, 1.0, FIELD_PART_IAS_IM, &hf_021_150_IM, NULL };",
          "4908: static const FieldPart I021_150_ASPD = { 15, 1.0, FIELD_PART_IAS_ASPD, &hf_021_150_ASPD, NULL };",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "6701: static const FieldPart *I062_015_PARTS[] = { &I062_015_SI, NULL };",
          "6704: static const value_string valstr_062_060_CH[] = {",
          "6706:     { 1, \"Mode 3/A has changed\" },",
          "6707:     { 0, NULL }",
          "6708: };",
          "6709: static const FieldPart I062_060_CH = { 1, 1.0, FIELD_PART_UINT, &hf_062_060_CH, NULL };",
          "6710: static const FieldPart I062_060_SQUAWK = { 12, 1.0, FIELD_PART_SQUAWK, &hf_062_060_SQUAWK, NULL };",
          "6712: static const FieldPart *I062_060_PARTS_v0_17[] = { &IXXX_4bit_spare, &I062_060_SQUAWK, NULL };",
          "",
          "[Removed Lines]",
          "6705:     { 0, \"No Change\" },",
          "6711: static const FieldPart *I062_060_PARTS[] = { &IXXX_2bit_spare, &I062_060_CH, &IXXX_1bit_spare, &I062_060_SQUAWK, NULL };",
          "",
          "[Added Lines]",
          "6726: static const value_string valstr_062_060_V[] = {",
          "6727:     { 0, \"Code validated\" },",
          "6728:     { 1, \"Code not validated\" },",
          "6729:     { 0, NULL }",
          "6730: };",
          "6731: static const value_string valstr_062_060_G[] = {",
          "6732:     { 0, \"Default\" },",
          "6733:     { 1, \"Garbled code\" },",
          "6734:     { 0, NULL }",
          "6735: };",
          "6737:     { 0, \"No change\" },",
          "6742: static const FieldPart I062_060_V = { 1, 1.0, FIELD_PART_UINT, &hf_062_060_V, NULL };",
          "6743: static const FieldPart I062_060_G = { 1, 1.0, FIELD_PART_UINT, &hf_062_060_G, NULL };",
          "6746: static const FieldPart *I062_060_PARTS[] = { &I062_060_V, &I062_060_G, &I062_060_CH, &IXXX_1bit_spare, &I062_060_SQUAWK, NULL };",
          "6747: static const FieldPart *I062_060_PARTS_v1_16[] = { &IXXX_2bit_spare, &I062_060_CH, &IXXX_1bit_spare, &I062_060_SQUAWK, NULL };",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "6718:     { 0, NULL }",
          "6719: };",
          "6720: static const value_string valstr_062_080_SPI[] = {",
          "6722:     { 1, \"SPI present in the last report received from a sensor capable of decoding this data\" },",
          "6723:     { 0, NULL }",
          "6724: };",
          "",
          "[Removed Lines]",
          "6721:     { 0, \"default value\" },",
          "",
          "[Added Lines]",
          "6757:     { 0, \"Default value\" },",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "6728:     { 0, NULL }",
          "6729: };",
          "6730: static const value_string valstr_062_080_SRC[] = {",
          "6732:     { 1, \"GNSS\" },",
          "6733:     { 2, \"3D radar\" },",
          "6739:     { 0, NULL }",
          "6740: };",
          "6741: static const value_string valstr_062_080_CNF[] = {",
          "",
          "[Removed Lines]",
          "6731:     { 0, \"no source\" },",
          "6734:     { 3, \"triangulation\" },",
          "6735:     { 4, \"height from coverage\" },",
          "6736:     { 5, \"speed look-up table\" },",
          "6737:     { 6, \"default height\" },",
          "6738:     { 7, \"multilateration\" },",
          "",
          "[Added Lines]",
          "6767:     { 0, \"No source\" },",
          "6770:     { 3, \"Triangulation\" },",
          "6771:     { 4, \"Height from coverage\" },",
          "6772:     { 5, \"Speed look-up table\" },",
          "6773:     { 6, \"Default height\" },",
          "6774:     { 7, \"Multilateration\" },",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "6749:     { 0, NULL }",
          "6750: };",
          "6751: static const value_string valstr_062_080_TSE[] = {",
          "6754:     { 0, NULL }",
          "6755: };",
          "6756: static const value_string valstr_062_080_TSB[] = {",
          "6759:     { 0, NULL }",
          "6760: };",
          "6761: static const value_string valstr_062_080_FPC[] = {",
          "",
          "[Removed Lines]",
          "6752:     { 0, \"default value\" },",
          "6753:     { 1, \"last message transmitted to the user for the track\" },",
          "6757:     { 0, \"default value\" },",
          "6758:     { 1, \"first message transmitted to the user for the track\" },",
          "",
          "[Added Lines]",
          "6788:     { 0, \"Default value\" },",
          "6789:     { 1, \"Last message transmitted to the user for the track\" },",
          "6793:     { 0, \"Default value\" },",
          "6794:     { 1, \"First message transmitted to the user for the track\" },",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "6764:     { 0, NULL }",
          "6765: };",
          "6766: static const value_string valstr_062_080_AFF[] = {",
          "6768:     { 1, \"ADS-B data inconsistent with other surveillance information\" },",
          "6769:     { 0, NULL }",
          "6770: };",
          "6771: static const value_string valstr_062_080_STP[] = {",
          "6773:     { 1, \"Slave Track Promotion\" },",
          "6774:     { 0, NULL }",
          "6775: };",
          "",
          "[Removed Lines]",
          "6767:     { 0, \"default value\" },",
          "6772:     { 0, \"default value\" },",
          "",
          "[Added Lines]",
          "6803:     { 0, \"Default value\" },",
          "6808:     { 0, \"Default value\" },",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "6779:     { 0, NULL }",
          "6780: };",
          "6781: static const value_string valstr_062_080_AMA[] = {",
          "6784:     { 0, NULL }",
          "6785: };",
          "6786: static const value_string valstr_062_080_MD4[] = {",
          "",
          "[Removed Lines]",
          "6782:     { 0, \"track not resulting from amalgamation process\" },",
          "6783:     { 1, \"track resulting from amalgamation process\" },",
          "",
          "[Added Lines]",
          "6818:     { 0, \"Track not resulting from amalgamation process\" },",
          "6819:     { 1, \"Track resulting from amalgamation process\" },",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "6791:     { 0, NULL }",
          "6792: };",
          "6793: static const value_string valstr_062_080_ME[] = {",
          "6795:     { 1, \"Military Emergency present in the last report received from a sensor capable of decoding this data\" },",
          "6796:     { 0, NULL }",
          "6797: };",
          "6798: static const value_string valstr_062_080_MI[] = {",
          "6800:     { 1, \"Military Identification present in the last report received from a sensor capable of decoding this data\" },",
          "6801:     { 0, NULL }",
          "6802: };",
          "",
          "[Removed Lines]",
          "6794:     { 0, \"default value\" },",
          "6799:     { 0, \"default value\" },",
          "",
          "[Added Lines]",
          "6830:     { 0, \"Default value\" },",
          "6835:     { 0, \"Default value\" },",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "6885:     { 1, \"Duplicate Flight Plan due to manual correlation\" },",
          "6886:     { 0, NULL }",
          "6887: };",
          "6888: static const value_string valstr_062_080_FRIFOE[] = {",
          "6889:     { 0, \"No Mode 4 interrogation\" },",
          "6890:     { 1, \"Friendly target\" },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6924: static const value_string valstr_062_080_SFC[] = {",
          "6925:     { 0, \"Default value\" },",
          "6926:     { 1, \"Surface target\" },",
          "6927:     { 0, NULL }",
          "6928: };",
          "6929: static const value_string valstr_062_080_IDD[] = {",
          "6930:     { 0, \"Default value\" },",
          "6931:     { 1, \"Duplicate Flight-ID\" },",
          "6932:     { 0, NULL }",
          "6933: };",
          "6934: static const value_string valstr_062_080_IEC[] = {",
          "6935:     { 0, \"Default value\" },",
          "6936:     { 1, \"Inconsistent Emergency Code\" },",
          "6937:     { 0, NULL }",
          "6938: };",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "6925: static const FieldPart I062_080_SDS = { 2, 1.0, FIELD_PART_UINT, &hf_062_080_SDS, NULL };",
          "6926: static const FieldPart I062_080_EMS = { 3, 1.0, FIELD_PART_UINT, &hf_062_080_EMS, NULL };",
          "6927: static const FieldPart I062_080_PFT = { 1, 1.0, FIELD_PART_UINT, &hf_062_080_PFT, NULL };",
          "6929: static const FieldPart I062_080_DUPT = { 1, 1.0, FIELD_PART_UINT, &hf_062_080_DUPT, NULL };",
          "6930: static const FieldPart I062_080_DUPF = { 1, 1.0, FIELD_PART_UINT, &hf_062_080_DUPF, NULL };",
          "6931: static const FieldPart I062_080_DUPM = { 1, 1.0, FIELD_PART_UINT, &hf_062_080_DUPM, NULL };",
          "6932: static const FieldPart I062_080_FRIFOE = { 2, 1.0, FIELD_PART_UINT, &hf_062_080_FRIFOE, NULL };",
          "6933: static const FieldPart I062_080_COA = { 2, 1.0, FIELD_PART_UINT, &hf_062_080_COA, NULL };",
          "6934: static const FieldPart *I062_080_PARTS[] = { &I062_080_MON, &I062_080_SPI, &I062_080_MRH, &I062_080_SRC, &I062_080_CNF, &IXXX_FX,",
          "6935:                                              &I062_080_SIM, &I062_080_TSE, &I062_080_TSB, &I062_080_FPC, &I062_080_AFF, &I062_080_STP, &I062_080_KOS, &IXXX_FX,",
          "6936:                                              &I062_080_AMA, &I062_080_MD4, &I062_080_ME, &I062_080_MI, &I062_080_MD5, &IXXX_FX,",
          "6937:                                              &I062_080_CST, &I062_080_PSR, &I062_080_SSR, &I062_080_MDS, &I062_080_ADS, &I062_080_SUC, &I062_080_AAC, &IXXX_FX,",
          "",
          "[Removed Lines]",
          "6928: static const FieldPart I062_080_FPLT = { 2, 1.0, FIELD_PART_UINT, &hf_062_080_FPLT, NULL };",
          "",
          "[Added Lines]",
          "6979: static const FieldPart I062_080_FPLT = { 1, 1.0, FIELD_PART_UINT, &hf_062_080_FPLT, NULL };",
          "6983: static const FieldPart I062_080_SFC = { 1, 1.0, FIELD_PART_UINT, &hf_062_080_SFC, NULL };",
          "6984: static const FieldPart I062_080_IDD = { 1, 1.0, FIELD_PART_UINT, &hf_062_080_IDD, NULL };",
          "6985: static const FieldPart I062_080_IEC = { 1, 1.0, FIELD_PART_UINT, &hf_062_080_IEC, NULL };",
          "6989:                                              &I062_080_SIM, &I062_080_TSE, &I062_080_TSB, &I062_080_FPC, &I062_080_AFF, &I062_080_STP, &I062_080_KOS, &IXXX_FX,",
          "6990:                                              &I062_080_AMA, &I062_080_MD4, &I062_080_ME, &I062_080_MI, &I062_080_MD5, &IXXX_FX,",
          "6991:                                              &I062_080_CST, &I062_080_PSR, &I062_080_SSR, &I062_080_MDS, &I062_080_ADS, &I062_080_SUC, &I062_080_AAC, &IXXX_FX,",
          "6992:                                              &I062_080_SDS, &I062_080_EMS, &I062_080_PFT, &I062_080_FPLT, &IXXX_FX,",
          "6993:                                              &I062_080_DUPT, &I062_080_DUPF, &I062_080_DUPM, &I062_080_SFC, &I062_080_IDD, &I062_080_IEC, &IXXX_1bit_spare, &IXXX_FX, NULL };",
          "6994: static const FieldPart *I062_080_PARTS_v1_17[] = { &I062_080_MON, &I062_080_SPI, &I062_080_MRH, &I062_080_SRC, &I062_080_CNF, &IXXX_FX,",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "7025: };",
          "7026: static const FieldPart I062_110_04_RES = { 1, 1.0, FIELD_PART_UINT, &hf_062_110_04_RES, NULL };",
          "7027: static const FieldPart I062_110_04_GA = { 14, 25.0, FIELD_PART_FLOAT, &hf_062_110_04_GA, NULL };",
          "7030: static const FieldPart I062_110_05_SQUAWK = { 12, 1.0, FIELD_PART_SQUAWK, &hf_062_110_05_SQUAWK, NULL };",
          "7031: static const FieldPart *I062_110_05_PARTS[] = { &IXXX_4bit_spare, &I062_110_05_SQUAWK, NULL };",
          "",
          "[Removed Lines]",
          "7028: static const FieldPart *I062_110_04_PARTS[] = { &I062_110_04_RES, &I062_110_04_GA, NULL };",
          "",
          "[Added Lines]",
          "7088: static const FieldPart *I062_110_04_PARTS[] = { &IXXX_1bit_spare, &I062_110_04_RES, &I062_110_04_GA, NULL };",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "7091: static const FieldPart *I062_135_PARTS[] = { &I062_135_QNH, &I062_135_ALT, NULL };",
          "7098: static const FieldPart I062_180_SPEED = { 16, 1.0/16384.0, FIELD_PART_FLOAT, &hf_062_180_SPEED, NULL };",
          "",
          "[Removed Lines]",
          "7094: static const FieldPart I062_136_ALT = { 16, 1.0/4.0, FIELD_PART_FLOAT, &hf_062_136_ALT, NULL };",
          "7095: static const FieldPart *I062_136_PARTS[] = { &I062_136_ALT, NULL };",
          "",
          "[Added Lines]",
          "7154: static const FieldPart I062_136_MFL = { 16, 1.0/4.0, FIELD_PART_FLOAT, &hf_062_136_MFL, NULL };",
          "7155: static const FieldPart *I062_136_PARTS[] = { &I062_136_MFL, NULL };",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "7153: static const FieldPart I062_240_ROT = { 8, 1.0/4.0, FIELD_PART_FLOAT, &hf_062_240_ROT, NULL };",
          "7154: static const FieldPart *I062_240_PARTS[] = { &I062_240_ROT, NULL };",
          "7157: static const FieldPart I062_270_LENGTH = { 7, 1.0, FIELD_PART_UFLOAT, &hf_062_270_LENGTH, NULL };",
          "7158: static const FieldPart I062_270_ORIENTATION = { 7, 360.0/128.0, FIELD_PART_UFLOAT, &hf_062_270_ORIENTATION, NULL };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7217: static const value_string valstr_062_245_STI[] = {",
          "7218:     { 0, \"Callsign or registration downlinked from target\" },",
          "7219:     { 1, \"Callsign not downlinked from target\" },",
          "7220:     { 2, \"Registration not downlinked from target\" },",
          "7221:     { 3, \"Invalid\" },",
          "7222:     { 0, NULL }",
          "7223: };",
          "7224: static const FieldPart I062_245_STI = { 2, 1.0, FIELD_PART_UINT, &hf_062_245_STI, NULL };",
          "7225: static const FieldPart *I062_245_PARTS[] = { &I062_245_STI, &IXXX_6bit_spare, &IXXX_AI, NULL };",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "7215: static const FieldPart *I062_295_05_PARTS[] = { &I062_295_05_MD4, NULL };",
          "7216: static const FieldPart I062_295_06_MD5 = { 8, 0.25, FIELD_PART_UFLOAT, &hf_062_295_06_MD5, NULL };",
          "7217: static const FieldPart *I062_295_06_PARTS[] = { &I062_295_06_MD5, NULL };",
          "7220: static const FieldPart I062_295_08_IAS = { 8, 0.25, FIELD_PART_UFLOAT, &hf_062_295_08_IAS, NULL };",
          "7221: static const FieldPart *I062_295_08_PARTS[] = { &I062_295_08_IAS, NULL };",
          "7222: static const FieldPart I062_295_09_TAS = { 8, 0.25, FIELD_PART_UFLOAT, &hf_062_295_09_TAS, NULL };",
          "",
          "[Removed Lines]",
          "7218: static const FieldPart I062_295_07_MHD = { 8, 0.25, FIELD_PART_UFLOAT, &hf_062_295_07_MHD, NULL };",
          "7219: static const FieldPart *I062_295_07_PARTS[] = { &I062_295_07_MHD, NULL };",
          "",
          "[Added Lines]",
          "7289: static const FieldPart I062_295_07_MHG = { 8, 0.25, FIELD_PART_UFLOAT, &hf_062_295_07_MHG, NULL };",
          "7290: static const FieldPart *I062_295_07_PARTS[] = { &I062_295_07_MHG, NULL };",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "7381: static const FieldPart *I062_380_04_PARTS[] = { &I062_380_04_IM, &I062_380_04_IAS, NULL };",
          "",
          "[Removed Lines]",
          "7379: static const FieldPart I062_380_04_IM = { 1, 1.0, FIELD_PART_UINT, &hf_062_380_04_IM, NULL };",
          "7380: static const FieldPart I062_380_04_IAS = { 15, 1.0, FIELD_PART_UFLOAT, &hf_062_380_04_IAS, NULL };",
          "",
          "[Added Lines]",
          "7448: static const FieldPart I062_380_04_IM = { 1, 1.0, FIELD_PART_IAS_IM, &hf_062_380_04_IM, NULL };",
          "7449: static const FieldPart I062_380_04_IAS = { 15, 1.0, FIELD_PART_IAS_ASPD, &hf_062_380_04_IAS, NULL };",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "7447: };",
          "7448: static const FieldPart I062_380_06_SAS = { 1, 1.0, FIELD_PART_UINT, &hf_062_380_06_SAS, NULL };",
          "7449: static const FieldPart I062_380_06_SOURCE = { 2, 1.0, FIELD_PART_UINT, &hf_062_380_06_SOURCE, NULL };",
          "7451: static const FieldPart *I062_380_06_PARTS[] = { &I062_380_06_SAS, &I062_380_06_SOURCE, &I062_380_06_ALT, NULL };",
          "",
          "[Removed Lines]",
          "7450: static const FieldPart I062_380_06_ALT = { 13, 25.0, FIELD_PART_UFLOAT, &hf_062_380_06_ALT, NULL };",
          "",
          "[Added Lines]",
          "7519: static const FieldPart I062_380_06_ALT = { 13, 25.0, FIELD_PART_FLOAT, &hf_062_380_06_ALT, NULL };",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "7459: static const FieldPart I062_380_07_MV = { 1, 1.0, FIELD_PART_UINT, &hf_062_380_07_MV, NULL };",
          "7460: static const FieldPart I062_380_07_AH = { 1, 1.0, FIELD_PART_UINT, &hf_062_380_07_AH, NULL };",
          "7461: static const FieldPart I062_380_07_AM = { 1, 1.0, FIELD_PART_UINT, &hf_062_380_07_AM, NULL };",
          "7463: static const FieldPart *I062_380_07_PARTS[] = { &I062_380_07_MV, &I062_380_07_AH, &I062_380_07_AM, &I062_380_07_ALT, NULL };",
          "",
          "[Removed Lines]",
          "7462: static const FieldPart I062_380_07_ALT = { 13, 25.0, FIELD_PART_UFLOAT, &hf_062_380_07_ALT, NULL };",
          "",
          "[Added Lines]",
          "7531: static const FieldPart I062_380_07_ALT = { 13, 25.0, FIELD_PART_FLOAT, &hf_062_380_07_ALT, NULL };",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "7527: static const FieldPart I062_380_09_LAT = { 24, 180.0/8388608.0, FIELD_PART_FLOAT, &hf_062_380_09_LAT, NULL };",
          "7528: static const FieldPart I062_380_09_LON = { 24, 180.0/8388608.0, FIELD_PART_FLOAT, &hf_062_380_09_LON, NULL };",
          "7529: static const FieldPart I062_380_09_PTYP = { 4, 1.0, FIELD_PART_UINT, &hf_062_380_09_PTYP, NULL };",
          "7531: static const FieldPart I062_380_09_TRA = { 1, 1.0, FIELD_PART_UINT, &hf_062_380_09_TRA, NULL };",
          "7532: static const FieldPart I062_380_09_TOA = { 1, 1.0, FIELD_PART_UINT, &hf_062_380_09_TOA, NULL };",
          "7533: static const FieldPart I062_380_09_TOV = { 24, 1.0, FIELD_PART_UFLOAT, &hf_062_380_09_TOV, NULL };",
          "7535: static const FieldPart *I062_380_09_PARTS[] = { &I062_380_09_TCA, &I062_380_09_NC, &I062_380_09_TCP, &I062_380_09_ALT, &I062_380_09_LAT, &I062_380_09_LON,",
          "7536:                                                  &I062_380_09_PTYP, &I062_380_09_TD, &I062_380_09_TRA, &I062_380_09_TOA, &I062_380_09_TOV, &I062_380_09_TTR, NULL };",
          "",
          "[Removed Lines]",
          "7530: static const FieldPart I062_380_09_TD = { 1, 1.0, FIELD_PART_UINT, &hf_062_380_09_TD, NULL };",
          "7534: static const FieldPart I062_380_09_TTR = { 16, 0.01, FIELD_PART_UINT, &hf_062_380_09_TTR, NULL };",
          "",
          "[Added Lines]",
          "7599: static const FieldPart I062_380_09_TD = { 2, 1.0, FIELD_PART_UINT, &hf_062_380_09_TD, NULL };",
          "7603: static const FieldPart I062_380_09_TTR = { 16, 0.01, FIELD_PART_UFLOAT, &hf_062_380_09_TTR, NULL };",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "7551:     { 3, \"Alert, no SPI, aircraft on ground\" },",
          "7552:     { 4, \"Alert, SPI, aircraft airborne or on ground\" },",
          "7553:     { 5, \"No alert, SPI, aircraft airborne or on ground\" },",
          "7554:     { 0, NULL }",
          "7555: };",
          "7556: static const value_string valstr_062_380_10_SSC[] = {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7623:     { 6, \"Not defined\" },",
          "7624:     { 7, \"Unknown or not yet extracted\" },",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "7581: static const value_string valstr_062_380_11_AC[] = {",
          "7583:     { 1, \"ACAS not operational\" },",
          "7584:     { 2, \"ACAS operational\" },",
          "7586:     { 0, NULL }",
          "7587: };",
          "7588: static const value_string valstr_062_380_11_MN[] = {",
          "7590:     { 1, \"Multiple navigational aids not operating\" },",
          "7591:     { 2, \"Multiple navigational aids operating\" },",
          "7593:     { 0, NULL }",
          "7594: };",
          "7595: static const value_string valstr_062_380_11_DC[] = {",
          "7597:     { 1, \"Differential correction\" },",
          "7598:     { 2, \"No differential correction\" },",
          "7600:     { 0, NULL }",
          "7601: };",
          "7602: static const value_string valstr_062_380_11_GBS[] = {",
          "",
          "[Removed Lines]",
          "7582:     { 0, \"unknown\" },",
          "7585:     { 3, \"invalid\" },",
          "7589:     { 0, \"unknown\" },",
          "7592:     { 3, \"invalid\" },",
          "7596:     { 0, \"unknown\" },",
          "7599:     { 3, \"invalid\" },",
          "",
          "[Added Lines]",
          "7653:     { 0, \"Unknown\" },",
          "7656:     { 3, \"Invalid\" },",
          "7660:     { 0, \"Unknown\" },",
          "7663:     { 3, \"Invalid\" },",
          "7667:     { 0, \"Unknown\" },",
          "7670:     { 3, \"Invalid\" },",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "7651: static const FieldPart *I062_380_16_PARTS[] = { &I062_380_16_TI, &IXXX_6bit_spare, &I062_380_16_RATE, NULL };",
          "7655: static const FieldPart *I062_380_17_PARTS[] = { &I062_380_17_TA, NULL };",
          "",
          "[Removed Lines]",
          "7654: static const FieldPart I062_380_17_TA = { 16, 360.0/65536.0, FIELD_PART_FLOAT, &hf_062_380_17_TA, NULL };",
          "",
          "[Added Lines]",
          "7725: static const FieldPart I062_380_17_TA = { 16, 360.0/65536.0, FIELD_PART_UFLOAT, &hf_062_380_17_TA, NULL };",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "7659: static const FieldPart *I062_380_18_PARTS[] = { &I062_380_18_GS, NULL };",
          "7663: static const FieldPart *I062_380_19_PARTS[] = { &I062_380_19_VUC, NULL };",
          "",
          "[Removed Lines]",
          "7662: static const FieldPart I062_380_19_VUC = { 16, 1.0, FIELD_PART_UINT, &hf_062_380_19_VUC, NULL };",
          "",
          "[Added Lines]",
          "7733: static const FieldPart I062_380_19_VUC = { 8, 1.0, FIELD_PART_UINT, &hf_062_380_19_VUC, NULL };",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "7698: static const value_string valstr_062_380_21_ECAT[] = {",
          "7699:     {  1, \"light aircraft <= 7000 kg\" },",
          "7701:     {  3, \"7000 kg < medium aircraft < 136000 kg\" },",
          "7703:     {  5, \"136000 kg <= heavy aircraft\" },",
          "7723:     { 0, NULL }",
          "7724: };",
          "7725: static const FieldPart I062_380_21_ECAT = { 8, 1.0, FIELD_PART_UINT, &hf_062_380_21_ECAT, NULL };",
          "",
          "[Removed Lines]",
          "7700:     {  2, \"reserved\" },",
          "7702:     {  4, \"reserved\" },",
          "7704:     {  6, \"highly manoeuvrable (5g acceleration capability) and high speed (>400 knots cruise)\" },",
          "7705:     {  7, \"reserved\" },",
          "7706:     {  8, \"reserved\" },",
          "7707:     {  9, \"reserved\" },",
          "7708:     { 10, \"rotocraft\" },",
          "7709:     { 11, \"glider / sailplane\" },",
          "7710:     { 12, \"lighter-than-air\" },",
          "7711:     { 13, \"unmanned aerial vehicle\" },",
          "7712:     { 14, \"space / transatmospheric vehicle\" },",
          "7713:     { 15, \"ultralight / handglider / paraglider\" },",
          "7714:     { 16, \"parachutist / skydiver\" },",
          "7715:     { 17, \"reserved\" },",
          "7716:     { 18, \"reserved\" },",
          "7717:     { 19, \"reserved\" },",
          "7718:     { 20, \"surface emergency vehicle\" },",
          "7719:     { 21, \"surface service vehicle\" },",
          "7720:     { 22, \"fixed ground or tethered obstruction\" },",
          "7721:     { 23, \"reserved\" },",
          "7722:     { 24, \"reserved\" },",
          "",
          "[Added Lines]",
          "7771:     {  2, \"Reserved\" },",
          "7773:     {  4, \"Reserved\" },",
          "7775:     {  6, \"Highly manoeuvrable (5g acceleration capability) and high speed (>400 knots cruise)\" },",
          "7776:     {  7, \"Reserved\" },",
          "7777:     {  8, \"Reserved\" },",
          "7778:     {  9, \"Reserved\" },",
          "7779:     { 10, \"Rotocraft\" },",
          "7780:     { 11, \"Glider / sailplane\" },",
          "7781:     { 12, \"Lighter-than-air\" },",
          "7782:     { 13, \"Unmanned aerial vehicle\" },",
          "7783:     { 14, \"Space / transatmospheric vehicle\" },",
          "7784:     { 15, \"Ultralight / handglider / paraglider\" },",
          "7785:     { 16, \"Parachutist / skydiver\" },",
          "7786:     { 17, \"Reserved\" },",
          "7787:     { 18, \"Reserved\" },",
          "7788:     { 19, \"Reserved\" },",
          "7789:     { 20, \"Surface emergency vehicle\" },",
          "7790:     { 21, \"Surface service vehicle\" },",
          "7791:     { 22, \"Fixed ground or tethered obstruction\" },",
          "7792:     { 23, \"Reserved\" },",
          "7793:     { 24, \"Reserved\" },",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "7937: static const FieldPart *I062_500_02_PARTS_v0_17[] = { &I062_500_02_APWLAT, &I062_500_02_APWLON, NULL };",
          "7942: static const FieldPart *I062_500_03_PARTS[] = { &I062_500_03_APWLAT, &I062_500_03_APWLON, NULL };",
          "",
          "[Removed Lines]",
          "7940: static const FieldPart I062_500_03_APWLAT = { 16, 180.0/33554432.0, FIELD_PART_FLOAT, &hf_062_500_03_APWLAT, NULL };",
          "7941: static const FieldPart I062_500_03_APWLON = { 16, 180.0/33554432.0, FIELD_PART_FLOAT, &hf_062_500_03_APWLON, NULL };",
          "",
          "[Added Lines]",
          "8011: static const FieldPart I062_500_03_APWLAT = { 16, 180.0/33554432.0, FIELD_PART_UFLOAT, &hf_062_500_03_APWLAT, NULL };",
          "8012: static const FieldPart I062_500_03_APWLON = { 16, 180.0/33554432.0, FIELD_PART_UFLOAT, &hf_062_500_03_APWLON, NULL };",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "7984: static const FieldPart I062_500_08_ARC = { 8, 6.25, FIELD_PART_UFLOAT, &hf_062_500_08_ARC, NULL };",
          "7985: static const FieldPart *I062_500_08_PARTS[] = { &I062_500_08_ARC, NULL };",
          "7989: static const FieldPart I062_510_STN = { 15, 1.0, FIELD_PART_UINT, &hf_062_510_STN, NULL };",
          "7993: static const value_string valstr_062_RE_CST_TYPE[] = {",
          "",
          "[Removed Lines]",
          "7988: static const FieldPart I062_510_SID = { 8, 1.0, FIELD_PART_UINT, &hf_062_510_SID, NULL };",
          "7990: static const FieldPart *I062_510_PARTS[] = { &I062_510_SID, &I062_510_STN, &IXXX_3FX, NULL };",
          "",
          "[Added Lines]",
          "8064: static const FieldPart I062_510_SUD = { 8, 1.0, FIELD_PART_UINT, &hf_062_510_SUD, NULL };",
          "8066: static const FieldPart I062_510_SLV_01_SUD = { 8, 1.0, FIELD_PART_UINT, &hf_062_510_SLV_01_SUD, NULL };",
          "8067: static const FieldPart I062_510_SLV_01_STN = { 15, 1.0, FIELD_PART_UINT, &hf_062_510_SLV_01_STN, NULL };",
          "8068: static const FieldPart I062_510_SLV_02_SUD = { 8, 1.0, FIELD_PART_UINT, &hf_062_510_SLV_02_SUD, NULL };",
          "8069: static const FieldPart I062_510_SLV_02_STN = { 15, 1.0, FIELD_PART_UINT, &hf_062_510_SLV_02_STN, NULL };",
          "8070: static const FieldPart I062_510_SLV_03_SUD = { 8, 1.0, FIELD_PART_UINT, &hf_062_510_SLV_03_SUD, NULL };",
          "8071: static const FieldPart I062_510_SLV_03_STN = { 15, 1.0, FIELD_PART_UINT, &hf_062_510_SLV_03_STN, NULL };",
          "8072: static const FieldPart I062_510_SLV_04_SUD = { 8, 1.0, FIELD_PART_UINT, &hf_062_510_SLV_04_SUD, NULL };",
          "8073: static const FieldPart I062_510_SLV_04_STN = { 15, 1.0, FIELD_PART_UINT, &hf_062_510_SLV_04_STN, NULL };",
          "8074: static const FieldPart *I062_510_PARTS[] = {",
          "8075:     &I062_510_SUD, &I062_510_STN, &IXXX_3FX,",
          "8076:     &I062_510_SLV_01_SUD, &I062_510_SLV_01_STN, &IXXX_3FX,",
          "8077:     &I062_510_SLV_02_SUD, &I062_510_SLV_02_STN, &IXXX_3FX,",
          "8078:     &I062_510_SLV_03_SUD, &I062_510_SLV_03_STN, &IXXX_3FX,",
          "8079:     &I062_510_SLV_04_SUD, &I062_510_SLV_04_STN, &IXXX_3FX,",
          "8080:     NULL };",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "8011: };",
          "8016: static const FieldPart I062_RE_CST_TYPE = { 8, 1.0, FIELD_PART_UINT, &hf_062_RE_CST_TYP, NULL };",
          "8017: static const FieldPart I062_RE_CST_TRK_NUM = { 16, 1.0, FIELD_PART_UINT, &hf_062_RE_CST_TRK_NUM, NULL };",
          "8023: static const FieldPart I062_RE_CSNT_TYPE = { 8, 1.0, FIELD_PART_UINT, &hf_062_RE_CSNT_TYP, NULL };",
          "8027: static const FieldPart I062_RE_TVS_VX = { 16, 0.25, FIELD_PART_FLOAT, &hf_062_RE_TVS_VX, NULL };",
          "",
          "[Removed Lines]",
          "8014: static const FieldPart I062_RE_CST_SAC = { 8, 1.0, FIELD_PART_UINT, &hf_062_RE_CST_SAC, NULL };",
          "8015: static const FieldPart I062_RE_CST_SIC = { 8, 1.0, FIELD_PART_UINT, &hf_062_RE_CST_SIC, NULL };",
          "8018: static const FieldPart *I062_RE_CST_PARTS[] = { &I062_RE_CST_SAC, &I062_RE_CST_SIC, &I062_RE_CST_TYPE, &I062_RE_CST_TRK_NUM, NULL };",
          "8021: static const FieldPart I062_RE_CSNT_SAC = { 8, 1.0, FIELD_PART_UINT, &hf_062_RE_CSNT_SAC, NULL };",
          "8022: static const FieldPart I062_RE_CSNT_SIC = { 8, 1.0, FIELD_PART_UINT, &hf_062_RE_CSNT_SIC, NULL };",
          "8024: static const FieldPart *I062_RE_CSNT_PARTS[] = { &I062_RE_CSNT_SAC, &I062_RE_CSNT_SIC, &I062_RE_CSNT_TYPE, NULL };",
          "",
          "[Added Lines]",
          "8106: static const FieldPart *I062_RE_CST_PARTS[] = { &IXXX_SAC, &IXXX_SIC, &I062_RE_CST_TYPE, &I062_RE_CST_TRK_NUM, NULL };",
          "8110: static const FieldPart *I062_RE_CSNT_PARTS[] = { &IXXX_SAC, &IXXX_SIC, &I062_RE_CSNT_TYPE, NULL };",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "8032: static const FieldPart I062_RE_STS_FDR = { 1, 1.0, FIELD_PART_UINT, &hf_062_RE_STS_FDR, NULL };",
          "",
          "[Removed Lines]",
          "8033: static const FieldPart *I062_RE_STS_PARTS[] = { &I062_RE_STS_FDR, NULL };",
          "",
          "[Added Lines]",
          "8119: static const FieldPart *I062_RE_STS_PARTS[] = { &I062_RE_STS_FDR, &IXXX_6bit_spare, &IXXX_FX, NULL };",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "8039: static const AsterixField I062_015 = { FIXED, 1, 0, 0, &hf_062_015, I062_015_PARTS, { NULL } };",
          "8040: static const AsterixField I062_040 = { FIXED, 2, 0, 0, &hf_062_040, IXXX_TN_16_PARTS, { NULL } };",
          "8041: static const AsterixField I062_060 = { FIXED, 2, 0, 0, &hf_062_060, I062_060_PARTS, { NULL } };",
          "8042: static const AsterixField I062_060_v0_17 = { FIXED, 2, 0, 0, &hf_062_060, I062_060_PARTS_v0_17, { NULL } };",
          "8043: static const AsterixField I062_070 = { FIXED, 3, 0, 0, &hf_062_070, IXXX_TOD, { NULL } };",
          "8044: static const AsterixField I062_080 = { FX, 1, 0, 0, &hf_062_080, I062_080_PARTS, { NULL } };",
          "8045: static const AsterixField I062_080_v0_17 = { FX, 1, 0, 0, &hf_062_080, I062_080_PARTS_v0_17, { NULL } };",
          "8046: static const AsterixField I062_100 = { FIXED, 6, 0, 0, &hf_062_100, I062_100_PARTS, { NULL } };",
          "8047: static const AsterixField I062_100_v0_17 = { FIXED, 4, 0, 0, &hf_062_100, I062_100_PARTS_v0_17, { NULL } };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8128: static const AsterixField I062_060_v1_16 = { FIXED, 2, 0, 0, &hf_062_060, I062_060_PARTS_v1_16, { NULL } };",
          "8132: static const AsterixField I062_080_v1_17 = { FX, 1, 0, 0, &hf_062_080, I062_080_PARTS_v1_17, { NULL } };",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "8075: static const AsterixField I062_210_v0_17 = { FIXED, 2, 0, 0, &hf_062_210_v0_17, I062_210_PARTS_v0_17, { NULL } };",
          "8076: static const AsterixField I062_220 = { FIXED, 2, 0, 0, &hf_062_220, I062_220_PARTS, { NULL } };",
          "8077: static const AsterixField I062_240 = { FIXED, 1, 0, 0, &hf_062_240, I062_240_PARTS, { NULL } };",
          "8079: static const AsterixField I062_270 = { FX, 1, 0, 0, &hf_062_270, I062_270_PARTS, { NULL } };",
          "8080: static const AsterixField I062_290_01 = { FIXED, 1, 0, 0, &hf_062_290_01, I062_290_01_PARTS, { NULL } };",
          "8081: static const AsterixField I062_290_02 = { FIXED, 1, 0, 0, &hf_062_290_02, I062_290_02_PARTS, { NULL } };",
          "",
          "[Removed Lines]",
          "8078: static const AsterixField I062_245 = { FIXED, 7, 0, 0, &hf_062_245, NULL, { NULL } };",
          "",
          "[Added Lines]",
          "8166: static const AsterixField I062_245 = { FIXED, 7, 0, 0, &hf_062_245, I062_245_PARTS, { NULL } };",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "8342: static const AsterixField I062_RE = { RE, 0, 0, 1, &hf_062_RE, NULL, { &I062_RE_CST, &I062_RE_CSNT, &I062_RE_TVS, &I062_RE_STS, NULL } };",
          "8343: static const AsterixField I062_SP = { SP, 0, 0, 1, &hf_062_SP, NULL, { NULL } };",
          "8346:                                                 &I062_210, &I062_060, &I062_245, &I062_380, &I062_040, &I062_080, &I062_290,",
          "8347:                                                 &I062_200, &I062_295, &I062_136, &I062_130, &I062_135, &I062_220, &I062_390,",
          "8348:                                                 &I062_270, &I062_300, &I062_110, &I062_120, &I062_510, &I062_500, &I062_340,",
          "8349:                                                 &IX_SPARE, &IX_SPARE, &IX_SPARE, &IX_SPARE, &IX_SPARE, &I062_RE,  &I062_SP, NULL };",
          "8350: static const AsterixField *I062_v0_17_uap[] = { &I062_010, &I062_015, &I062_070, &I062_040, &I062_105_v0_17, &I062_100_v0_17, &I062_060_v0_17,",
          "8351:                                                 &I062_130, &I062_135, &I062_136, &I062_180, &I062_200_v0_17, &I062_220, &I062_240,",
          "8352:                                                 &I062_210_v0_17, &I062_080_v0_17, &I062_290_v0_17, &I062_340, &I062_380_v0_17, &I062_500_v0_17, &I062_390,",
          "8353:                                                 &I062_110_v0_17, &I062_120, &I062_510, &IX_SPARE, &IX_SPARE, &I062_RE,  &I062_SP, NULL };",
          "8354: static const AsterixField **I062_v1_16[] = { I062_v1_16_uap, NULL };",
          "8355: static const AsterixField **I062_v0_17[] = { I062_v0_17_uap, NULL };",
          "8357: DIAG_ON_PEDANTIC",
          "8359: static const enum_val_t I062_versions[] = {",
          "8362:     { NULL, NULL, 0 }",
          "8363: };",
          "",
          "[Removed Lines]",
          "8345: static const AsterixField *I062_v1_16_uap[] = { &I062_010, &IX_SPARE, &I062_015, &I062_070, &I062_105, &I062_100, &I062_185,",
          "8356: static const AsterixField ***I062[] = { I062_v1_16, I062_v0_17 };",
          "8360:     { \"I062_v1_16\", \"Version 1.16\", 0 },",
          "8361:     { \"I062_v0_17\", \"Version 0.17\", 1 },",
          "",
          "[Added Lines]",
          "8433: static const AsterixField *I062_v1_18_uap[] = { &I062_010, &IX_SPARE, &I062_015, &I062_070, &I062_105, &I062_100, &I062_185,",
          "8438: static const AsterixField *I062_v1_17_uap[] = { &I062_010, &IX_SPARE, &I062_015, &I062_070, &I062_105, &I062_100, &I062_185,",
          "8439:                                                 &I062_210, &I062_060, &I062_245, &I062_380, &I062_040, &I062_080_v1_17, &I062_290,",
          "8440:                                                 &I062_200, &I062_295, &I062_136, &I062_130, &I062_135, &I062_220, &I062_390,",
          "8441:                                                 &I062_270, &I062_300, &I062_110, &I062_120, &I062_510, &I062_500, &I062_340,",
          "8442:                                                 &IX_SPARE, &IX_SPARE, &IX_SPARE, &IX_SPARE, &IX_SPARE, &I062_RE,  &I062_SP, NULL };",
          "8443: static const AsterixField *I062_v1_16_uap[] = { &I062_010, &IX_SPARE, &I062_015, &I062_070, &I062_105, &I062_100, &I062_185,",
          "8444:                                                 &I062_210, &I062_060_v1_16, &I062_245, &I062_380, &I062_040, &I062_080, &I062_290,",
          "8445:                                                 &I062_200, &I062_295, &I062_136, &I062_130, &I062_135, &I062_220, &I062_390,",
          "8446:                                                 &I062_270, &I062_300, &I062_110, &I062_120, &I062_510, &I062_500, &I062_340,",
          "8447:                                                 &IX_SPARE, &IX_SPARE, &IX_SPARE, &IX_SPARE, &IX_SPARE, &I062_RE,  &I062_SP, NULL };",
          "8452: static const AsterixField **I062_v1_18[] = { I062_v1_18_uap, NULL };",
          "8453: static const AsterixField **I062_v1_17[] = { I062_v1_17_uap, NULL };",
          "8456: static const AsterixField ***I062[] = { I062_v1_18, I062_v1_17, I062_v1_16, I062_v0_17 };",
          "8460:     { \"I062_v1_18\", \"Version 1.18\", 0 },",
          "8461:     { \"I062_v1_17\", \"Version 1.17\", 1 },",
          "8462:     { \"I062_v1_16\", \"Version 1.16\", 2 },",
          "8463:     { \"I062_v0_17\", \"Version 0.17\", 3 },",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "9275:                 proto_tree_add_item (asterix_field_tree, hf_asterix_fspec, tvb, offset + start, fspec_len, ENC_NA);",
          "9276:                 dissect_asterix_fields (tvb, pinfo, offset + start, asterix_field_tree, category, (const AsterixField **)current_uap[i]->field);",
          "9277:             }",
          "9279:                 asterix_field_item = proto_tree_add_item (tree, *current_uap[i]->hf, tvb, offset + start, len, ENC_NA);",
          "9280:                 asterix_field_tree = proto_item_add_subtree (asterix_field_item, ett_asterix_subtree);",
          "9281:                 asterix_build_subtree (tvb, pinfo, offset + start, asterix_field_tree, current_uap[i]);",
          "",
          "[Removed Lines]",
          "9278:             else {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "9292:     gint64 value;",
          "9293:     char *str_buffer = NULL;",
          "9294:     double scaling_factor = 1.0;",
          "9297:     if (field->part != NULL) {",
          "9298:         for (i = 0, inner_offset = 0, go_on = 1; go_on && field->part[i] != NULL; i++) {",
          "",
          "[Removed Lines]",
          "9295:     guint8 *set_im_021_150, *get_im_021_150;",
          "",
          "[Added Lines]",
          "9431:     guint8 *air_speed_im_bit;",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "9305:                     case FIELD_PART_INT:",
          "9306:                     case FIELD_PART_UINT:",
          "9315:                     case FIELD_PART_HEX:",
          "9316:                     case FIELD_PART_ASCII:",
          "9317:                     case FIELD_PART_SQUAWK:",
          "",
          "[Removed Lines]",
          "9308:                         if (field->part[i] == &I021_150_IM) {",
          "9309:                             set_im_021_150 = wmem_new (wmem_packet_scope (), guint8);",
          "9312:                             p_add_proto_data (pinfo->pool, pinfo, proto_asterix, 21150, set_im_021_150);",
          "9313:                         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "9321:                         twos_complement (&value, field->part[i]->bit_length);",
          "9323:                     case FIELD_PART_UFLOAT:",
          "9335:                         if (field->part[i]->format_string != NULL)",
          "9336:                             proto_tree_add_double_format_value (parent, *field->part[i]->hf, tvb, offset + inner_offset / 8, byte_length (field->part[i]->bit_length), value * scaling_factor, field->part[i]->format_string, value * scaling_factor);",
          "9337:                         else",
          "",
          "[Removed Lines]",
          "9325:                         if (field->part[i] == &I021_150_ASPD) {",
          "9326:                             get_im_021_150 = (guint8 *)p_get_proto_data (pinfo->pool, pinfo, proto_asterix, 21150);",
          "9327:                             if (*get_im_021_150 == 0)",
          "9328:                                 scaling_factor = 1.0/16384.0;",
          "9329:                             else",
          "9330:                                 scaling_factor = 0.001;",
          "9331:                         }",
          "9332:                         else",
          "9333:                             scaling_factor = field->part[i]->scaling_factor;",
          "",
          "[Added Lines]",
          "9452:                         scaling_factor = field->part[i]->scaling_factor;",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "9351:                             AISCode[value & 63]);",
          "9352:                         proto_tree_add_string (parent, *field->part[i]->hf, tvb, offset + inner_offset / 8, byte_length (field->part[i]->bit_length), str_buffer);",
          "9353:                         break;",
          "9354:                 }",
          "9355:             }",
          "9356:             inner_offset += field->part[i]->bit_length;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9472:                     case FIELD_PART_IAS_IM:",
          "9474:                         air_speed_im_bit = wmem_new (wmem_packet_scope (), guint8);",
          "9477:                         p_add_proto_data (pinfo->pool, pinfo, proto_asterix, 21150, air_speed_im_bit);",
          "9478:                         proto_tree_add_item (parent, *field->part[i]->hf, tvb, offset + inner_offset / 8, byte_length (field->part[i]->bit_length), ENC_BIG_ENDIAN);",
          "9479:                         break;",
          "9480:                     case FIELD_PART_IAS_ASPD:",
          "9482:                         air_speed_im_bit = (guint8 *)p_get_proto_data (pinfo->pool, pinfo, proto_asterix, 21150);",
          "9483:                         if (!air_speed_im_bit || *air_speed_im_bit == 0)",
          "9484:                             scaling_factor = 1.0/16384.0;",
          "9485:                         else",
          "9486:                             scaling_factor = 0.001;",
          "9487:                         proto_tree_add_double (parent, *field->part[i]->hf, tvb, offset + inner_offset / 8, byte_length (field->part[i]->bit_length), value * scaling_factor);",
          "9488:                         break;",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "10451:         { &hf_062_015_SI, { \"SI\", \"asterix.062_015_SI\", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },",
          "10452:         { &hf_062_040, { \"040, Track Number\", \"asterix.062_040\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10453:         { &hf_062_060, { \"060, Track Mode 3/A Code\", \"asterix.062_060\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10454:         { &hf_062_060_CH, { \"CH\", \"asterix.062_060_CH\", FT_UINT8, BASE_DEC, VALS (valstr_062_060_CH), 0x20, \"Change in Mode 3/A\", HFILL } },",
          "10455:         { &hf_062_060_SQUAWK, { \"SQUAWK\", \"asterix.062_060_SQUAWK\", FT_UINT16, BASE_OCT, NULL, 0x0fff, NULL, HFILL } },",
          "10456:         { &hf_062_070, { \"070, Time Of Track Information\", \"asterix.062_070\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10589:         { &hf_062_060_V, { \"V\", \"asterix.062_060_V\", FT_UINT8, BASE_DEC, VALS (valstr_062_060_V), 0x80, \"Validated\", HFILL } },",
          "10590:         { &hf_062_060_G, { \"G\", \"asterix.062_060_G\", FT_UINT8, BASE_DEC, VALS (valstr_062_060_G), 0x40, \"Garbled\", HFILL } },",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "10479:         { &hf_062_080_ADS, { \"ADS\", \"asterix.062_080_ADS\", FT_UINT8, BASE_DEC, VALS (valstr_062_080_ADS), 0x08, NULL, HFILL } },",
          "10480:         { &hf_062_080_SUC, { \"SUC\", \"asterix.062_080_SUC\", FT_UINT8, BASE_DEC, VALS (valstr_062_080_SUC), 0x04, NULL, HFILL } },",
          "10481:         { &hf_062_080_AAC, { \"AAC\", \"asterix.062_080_AAC\", FT_UINT8, BASE_DEC, VALS (valstr_062_080_AAC), 0x02, NULL, HFILL } },",
          "10483:         { &hf_062_080_EMS, { \"EMS\", \"asterix.062_080_EMS\", FT_UINT8, BASE_DEC, VALS (valstr_062_080_EMS), 0x38, NULL, HFILL } },",
          "10484:         { &hf_062_080_PFT, { \"PFT\", \"asterix.062_080_PFT\", FT_UINT8, BASE_DEC, VALS (valstr_062_080_PFT), 0x04, NULL, HFILL } },",
          "10485:         { &hf_062_080_FPLT, { \"FPLT\", \"asterix.062_080_FPLT\", FT_UINT8, BASE_DEC, VALS (valstr_062_080_FPLT), 0x02, NULL, HFILL } },",
          "10486:         { &hf_062_080_DUPT, { \"DUPT\", \"asterix.062_080_DUPT\", FT_UINT8, BASE_DEC, VALS (valstr_062_080_DUPT), 0x80, NULL, HFILL } },",
          "10487:         { &hf_062_080_DUPF, { \"DUPT\", \"asterix.062_080_DUPF\", FT_UINT8, BASE_DEC, VALS (valstr_062_080_DUPF), 0x40, NULL, HFILL } },",
          "10488:         { &hf_062_080_DUPM, { \"DUPM\", \"asterix.062_080_DUPM\", FT_UINT8, BASE_DEC, VALS (valstr_062_080_DUPM), 0x20, NULL, HFILL } },",
          "10489:         { &hf_062_080_FRIFOE, { \"FRI/FOE\", \"asterix.062_080_FRIFOE\", FT_UINT8, BASE_DEC, VALS (valstr_062_080_FRIFOE), 0x60, NULL, HFILL } },",
          "10490:         { &hf_062_080_COA, { \"COA\", \"asterix.062_080_COA\", FT_UINT8, BASE_DEC, VALS (valstr_062_080_COA), 0x80, NULL, HFILL } },",
          "10491:         { &hf_062_100, { \"100, Calculated Track Position (Cartesian)\", \"asterix.062_100\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "[Removed Lines]",
          "10482:         { &hf_062_080_SDS, { \"SDS\", \"asterix.062_080_SDS\", FT_UINT8, BASE_DEC, VALS (valstr_062_080_SDS), 0xe0, NULL, HFILL } },",
          "",
          "[Added Lines]",
          "10619:         { &hf_062_080_SDS, { \"SDS\", \"asterix.062_080_SDS\", FT_UINT8, BASE_DEC, VALS (valstr_062_080_SDS), 0xc0, NULL, HFILL } },",
          "10626:         { &hf_062_080_SFC, { \"SFC\", \"asterix.062_080_SFC\", FT_UINT8, BASE_DEC, VALS (valstr_062_080_SFC), 0x10, NULL, HFILL } },",
          "10627:         { &hf_062_080_IDD, { \"IDD\", \"asterix.062_080_IDD\", FT_UINT8, BASE_DEC, VALS (valstr_062_080_IDD), 0x08, NULL, HFILL } },",
          "10628:         { &hf_062_080_IEC, { \"IEC\", \"asterix.062_080_IEC\", FT_UINT8, BASE_DEC, VALS (valstr_062_080_IEC), 0x04, NULL, HFILL } },",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "10498:         { &hf_062_105_LON, { \"LON[deg]\", \"asterix.062_105_LON\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10499:         { &hf_062_110, { \"110, Mode 5 Data reports & Extended Mode 1 Code\", \"asterix.062_110\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10500:         { &hf_062_110_01, { \"#1: Mode 5 Summary\", \"asterix.062_110_01\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10502:         { &hf_062_110_01_ID, { \"ID\", \"asterix.062_110_01_ID\", FT_UINT8, BASE_DEC, VALS (valstr_062_110_01_ID), 0x40, NULL, HFILL } },",
          "10503:         { &hf_062_110_01_DA, { \"DA\", \"asterix.062_110_01_DA\", FT_UINT8, BASE_DEC, VALS (valstr_062_110_01_DA), 0x20, NULL, HFILL } },",
          "10504:         { &hf_062_110_01_M1, { \"M1\", \"asterix.062_110_01_M1\", FT_UINT8, BASE_DEC, VALS (valstr_062_110_01_M1), 0x10, NULL, HFILL } },",
          "",
          "[Removed Lines]",
          "10501:         { &hf_062_110_01_M5, { \"MD5\", \"asterix.062_110_01_MD5\", FT_UINT8, BASE_DEC, VALS (valstr_062_110_01_M5), 0x80, NULL, HFILL } },",
          "",
          "[Added Lines]",
          "10641:         { &hf_062_110_01_M5, { \"M5\", \"asterix.062_110_01_M5\", FT_UINT8, BASE_DEC, VALS (valstr_062_110_01_M5), 0x80, NULL, HFILL } },",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "10510:         { &hf_062_110_02_PIN, { \"PIN\", \"asterix.062_110_02_PIN\", FT_UINT16, BASE_DEC, NULL, 0x3fff, NULL, HFILL } },",
          "10511:         { &hf_062_110_02_NAT, { \"NAT\", \"asterix.062_110_02_NAT\", FT_UINT8, BASE_DEC, NULL, 0x1f, NULL, HFILL } },",
          "10512:         { &hf_062_110_02_MIS, { \"MIS\", \"asterix.062_110_02_MIS\", FT_UINT8, BASE_DEC, NULL, 0x3f, NULL, HFILL } },",
          "10514:         { &hf_062_110_03_LAT, { \"LAT[deg]\", \"asterix.062_110_03_LAT\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10515:         { &hf_062_110_03_LON, { \"LON[deg]\", \"asterix.062_110_03_LON\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10518:         { &hf_062_110_04_GA, { \"GA[feet]\", \"asterix.062_110_04_GA\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10519:         { &hf_062_110_05, { \"#5: Extended Mode 1 Code in Octal Representation\", \"asterix.062_110_05\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10520:         { &hf_062_110_05_SQUAWK, { \"SQUAWK\", \"asterix.062_110_05_SQUAWK\", FT_UINT16, BASE_OCT, NULL, 0x0fff, NULL, HFILL } },",
          "10522:         { &hf_062_110_06_TOS, { \"TOS[s]\", \"asterix.062_110_06_TOS\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10523:         { &hf_062_110_07, { \"#7: X Pulse Presence\", \"asterix.062_110_07\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10524:         { &hf_062_110_07_X5, { \"X5\", \"asterix.062_110_07_X5\", FT_UINT8, BASE_DEC, VALS (valstr_062_110_07_X5), 0x10, NULL, HFILL } },",
          "",
          "[Removed Lines]",
          "10513:         { &hf_062_110_03, { \"#3: Mode 5 Reported Position\", \"asterix.062_\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10516:         { &hf_062_110_04, { \"#4: Mode 5 GNSS-derived Altitude\", \"asterix.062_11_04\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10517:         { &hf_062_110_04_RES, { \"RES\", \"asterix.062_110_04_RES\", FT_UINT8, BASE_DEC, VALS (valstr_062_110_04_RES), 0x60, NULL, HFILL } },",
          "10521:         { &hf_062_110_06, { \"#6: Time Offset for POS and GA\", \"asterix.062_11_06\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "[Added Lines]",
          "10653:         { &hf_062_110_03, { \"#3: Mode 5 Reported Position\", \"asterix.062_110_03\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10656:         { &hf_062_110_04, { \"#4: Mode 5 GNSS-derived Altitude\", \"asterix.062_110_04\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10657:         { &hf_062_110_04_RES, { \"RES\", \"asterix.062_110_04_RES\", FT_UINT8, BASE_DEC, VALS (valstr_062_110_04_RES), 0x40, NULL, HFILL } },",
          "10661:         { &hf_062_110_06, { \"#6: Time Offset for POS and GA\", \"asterix.062_110_06\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "10541:         { &hf_062_135_QNH, { \"QNH\", \"asterix.062_135_QNH\", FT_UINT8, BASE_DEC, VALS (valstr_062_135_QNH), 0x80, NULL, HFILL } },",
          "10542:         { &hf_062_135_ALT, { \"Altitude[FL]\", \"asterix.062_135_ALT\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10543:         { &hf_062_136, { \"136, Measured Flight Level\", \"asterix.062_136\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10545:         { &hf_062_180, { \"180, Calculated Track Velocity (Polar)\", \"asterix.062_180\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10546:         { &hf_062_180_SPEED, { \"Speed[NM/s]\", \"asterix.062_180_SPEED\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10547:         { &hf_062_180_HEADING, { \"Heading[deg]\", \"asterix.062_180_HEADING\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "[Removed Lines]",
          "10544:         { &hf_062_136_ALT, { \"Measured Flight Level[FL]\", \"asterix.062_136_ALT\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "[Added Lines]",
          "10684:         { &hf_062_136_MFL, { \"Measured Flight Level[FL]\", \"asterix.062_136_MFL\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "10564:         { &hf_062_240, { \"240, Calculated Rate Of Turn\", \"asterix.062_240\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10565:         { &hf_062_240_ROT, { \"TOR[deg/s]\", \"asterix.062_240_ROT\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10566:         { &hf_062_245, { \"245, Target Identification\", \"asterix.062_245\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10567:         { &hf_062_270, { \"270, Target Size & Orientation\", \"asterix.062_270\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10568:         { &hf_062_270_LENGTH, { \"Length[m]\", \"asterix.062_270_LENGTH\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10569:         { &hf_062_270_ORIENTATION, { \"Orientation[m]\", \"asterix.062_270_ORIENTATION\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10570:         { &hf_062_270_WIDTH, { \"Width[m]\", \"asterix.062_270_WIDTH\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10572:         { &hf_062_290_01, { \"#1: Track Age\", \"asterix.062_290_01\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10573:         { &hf_062_290_01_TRK, { \"TRK[s]\", \"asterix.062_290_01_TRK\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10574:         { &hf_062_290_02, { \"#2: PSR Age\", \"asterix.062_290_02\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "[Removed Lines]",
          "10571:         { &hf_062_290, { \"290, System Track Update Ages\", \"asterix.062_\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "[Added Lines]",
          "10707:         { &hf_062_245_STI, { \"STI\", \"asterix.062_245_STI\", FT_UINT8, BASE_DEC, VALS (valstr_062_245_STI), 0xc0, NULL, HFILL } },",
          "10712:         { &hf_062_290, { \"290, System Track Update Ages\", \"asterix.062_290\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "10622:         { &hf_062_295_06, { \"#6: Mode 5 Age\", \"asterix.062_295_06\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10623:         { &hf_062_295_06_MD5, { \"MD5[s]\", \"asterix.062_295_06_MD5\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10624:         { &hf_062_295_07, { \"#7: Magnetic Heading Age\", \"asterix.062_295_07\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10626:         { &hf_062_295_08, { \"#8: Indicated Airspeed / Mach Nb age\", \"asterix.062_295_08\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10627:         { &hf_062_295_08_IAS, { \"IAS[s]\", \"asterix.062_295_08_IAS\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10628:         { &hf_062_295_09, { \"#9: True Airspeed Age\", \"asterix.062_295_09\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "[Removed Lines]",
          "10625:         { &hf_062_295_07_MHD, { \"MHD[s]\", \"asterix.062_295_07_MHD\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "[Added Lines]",
          "10766:         { &hf_062_295_07_MHG, { \"MHG[s]\", \"asterix.062_295_07_MHG\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "10680:         { &hf_062_340_02_THETA, { \"THETA[deg]\", \"asterix.062_340_02_THETA\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10681:         { &hf_062_340_03, { \"#3: Measured 3-D Height\", \"asterix.062_340_03\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10682:         { &hf_062_340_03_H, { \"HEIGHT[feet]\", \"asterix.062_340_03_H\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10684:         { &hf_062_340_04_V, { \"V\", \"asterix.062_340_04_V\", FT_UINT8, BASE_DEC, VALS (valstr_062_340_04_V), 0x80, NULL, HFILL } },",
          "10685:         { &hf_062_340_04_G, { \"G\", \"asterix.062_340_04_G\", FT_UINT8, BASE_DEC, VALS (valstr_062_340_04_G), 0x40, NULL, HFILL } },",
          "10686:         { &hf_062_340_04_FL, { \"HEIGHT[FL]\", \"asterix.062_340_04_FL\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10688:         { &hf_062_340_05_V, { \"V\", \"asterix.062_340_05_V\", FT_UINT8, BASE_DEC, VALS (valstr_062_340_05_V), 0x80, NULL, HFILL } },",
          "10689:         { &hf_062_340_05_G, { \"G\", \"asterix.062_340_05_G\", FT_UINT8, BASE_DEC, VALS (valstr_062_340_05_G), 0x40, NULL, HFILL } },",
          "10690:         { &hf_062_340_05_L, { \"L\", \"asterix.062_340_05_L\", FT_UINT8, BASE_DEC, VALS (valstr_062_340_05_L), 0x20, NULL, HFILL } },",
          "",
          "[Removed Lines]",
          "10683:         { &hf_062_340_04, { \"#4: Last Measured Mode C Code\", \"asterix.062_340_\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10687:         { &hf_062_340_05, { \"#5: Last Measured Mode 3/A Code\", \"asterix.062_340_\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "[Added Lines]",
          "10824:         { &hf_062_340_04, { \"#4: Last Measured Mode C Code\", \"asterix.062_340_04\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10828:         { &hf_062_340_05, { \"#5: Last Measured Mode 3/A Code\", \"asterix.062_340_05\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "10699:         { &hf_062_380_02, { \"#2: Target Identification\", \"asterix.062_380_02\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10700:         { &hf_062_380_03, { \"#3: Magnetic Heading\", \"asterix.062_380_03\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10701:         { &hf_062_380_03_MH, { \"MH[deg]\", \"asterix.062_380_03_MH\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10703:         { &hf_062_380_04_IM, { \"IM\", \"asterix.062_380_04_IM\", FT_UINT8, BASE_DEC, NULL, 0x80, NULL, HFILL } },",
          "10704:         { &hf_062_380_04_IAS, { \"IAS[NM/s or Mach]\", \"asterix.062_380_04_IAS\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10705:         { &hf_062_380_05, { \"#5: True Airspeed\", \"asterix.062_380_05\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "[Removed Lines]",
          "10702:         { &hf_062_380_04, { \"#4: Indicated Airspeed / Mach No\", \"asterix.062_380_4\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "[Added Lines]",
          "10843:         { &hf_062_380_04, { \"#4: Indicated Airspeed / Mach No\", \"asterix.062_380_04\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "10718:         { &hf_062_380_08_NVB, { \"NVB\", \"asterix.062_380_08_NVB\", FT_UINT8, BASE_DEC, VALS (valstr_062_380_08_NVB), 0x40, NULL, HFILL } },",
          "10719:         { &hf_062_380_09, { \"#9: \", \"asterix.062_380_09\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10720:         { &hf_062_380_09_TCA, { \"TCA\", \"asterix.062_380_09_TCA\", FT_UINT8, BASE_DEC, VALS (valstr_062_380_09_TCA), 0x80, NULL, HFILL } },",
          "10722:         { &hf_062_380_09_TCP, { \"TCP\", \"asterix.062_380_09_TCP\", FT_UINT8, BASE_DEC, NULL, 0x3f, NULL, HFILL } },",
          "10723:         { &hf_062_380_09_ALT, { \"ALT[feet]\", \"asterix.062_380_09_ALT\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10724:         { &hf_062_380_09_LAT, { \"LAT[deg]\", \"asterix.062_380_09_LAT\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "[Removed Lines]",
          "10721:         { &hf_062_380_09_NC, { \"NC\", \"asterix.062_380_09_NC\", FT_UINT8, BASE_DEC, VALS (valstr_062_380_09_NC), 0x80, NULL, HFILL } },",
          "",
          "[Added Lines]",
          "10862:         { &hf_062_380_09_NC, { \"NC\", \"asterix.062_380_09_NC\", FT_UINT8, BASE_DEC, VALS (valstr_062_380_09_NC), 0x40, NULL, HFILL } },",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "10801:         { &hf_062_380_05_v0_17, { \"#5: ACAS Resolution Advisory Report\", \"asterix.062_380_05_v0_17\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10802:         { &hf_062_380_05_MB, { \"#4: ACAS Resolution Advisory Report\", \"asterix.062_380_05_MB\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10803:         { &hf_062_390, { \"390, Flight Plan Related Data\", \"asterix.062_390\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10806:         { &hf_062_390_02_CS, { \"CS\", \"asterix.062_390_02_CS\", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10809:         { &hf_062_390_03_NBR, { \"NBR\", \"asterix.062_390_03_NBR\", FT_UINT32, BASE_DEC, NULL, 0x07ffffff, NULL, HFILL } },",
          "10811:         { &hf_062_390_04_GAT_OAT, { \"GAT/OAT\", \"asterix.062_390_04_GAT_OAT\", FT_UINT8, BASE_DEC, VALS (valstr_062_390_04_GAT_OAT), 0xc0, NULL, HFILL } },",
          "10812:         { &hf_062_390_04_FR12, { \"FR1/FR2\", \"asterix.062_390_04_FR12\", FT_UINT8, BASE_DEC, VALS (valstr_062_390_04_FR12), 0x30, NULL, HFILL } },",
          "10813:         { &hf_062_390_04_RVSM, { \"RVSM\", \"asterix.062_390_04_RVSM\", FT_UINT8, BASE_DEC, VALS (valstr_062_390_04_RVSM), 0x0c, NULL, HFILL } },",
          "10814:         { &hf_062_390_04_HPR, { \"HPR\", \"asterix.062_390_04_HPR\", FT_UINT8, BASE_DEC, VALS (valstr_062_390_04_HPR), 0x02, NULL, HFILL } },",
          "10816:         { &hf_062_390_05_ACTYP, { \"ACTYP\", \"asterix.062_390_05_ACTYP\", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10818:         { &hf_062_390_06_WTC, { \"WTC\", \"asterix.062_390_06_WTC\", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10820:         { &hf_062_390_07_ADEP, { \"ADEP\", \"asterix.062_390_07_ADEP\", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10822:         { &hf_062_390_08_ADES, { \"ADES\", \"asterix.062_390_08_ADES\", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10824:         { &hf_062_390_09_NU1, { \"NU1\", \"asterix.062_390_09_NU1\", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10825:         { &hf_062_390_09_NU2, { \"NU2\", \"asterix.062_390_09_NU2\", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10826:         { &hf_062_390_09_LTR, { \"LTR\", \"asterix.062_390_09_LTR\", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10828:         { &hf_062_390_10_CFL, { \"CFL[FL]\", \"asterix.062_390_10_CFL\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10830:         { &hf_062_390_11_CNTR, { \"CNTR\", \"asterix.062_390_11_CNTR\", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },",
          "10831:         { &hf_062_390_11_POS, { \"POS\", \"asterix.062_390_11_POS\", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },",
          "10833:         { &hf_062_390_12_TYP, { \"TYP\", \"asterix.062_390_12_TYP\", FT_UINT8, BASE_DEC, VALS (valstr_062_390_12_TYP), 0xf8, NULL, HFILL } },",
          "10834:         { &hf_062_390_12_DAY, { \"DAY\", \"asterix.062_390_12_DAY\", FT_UINT8, BASE_DEC, VALS (valstr_062_390_12_DAY), 0x06, NULL, HFILL } },",
          "10835:         { &hf_062_390_12_HOR, { \"HOUR\", \"asterix.062_390_12_HOR\", FT_UINT8, BASE_DEC, NULL, 0x1f, NULL, HFILL } },",
          "10836:         { &hf_062_390_12_MIN, { \"MIN\", \"asterix.062_390_12_MIN\", FT_UINT8, BASE_DEC, NULL, 0x3f, NULL, HFILL } },",
          "10837:         { &hf_062_390_12_AVS, { \"AVS\", \"asterix.062_390_12_AVS\", FT_UINT8, BASE_DEC, VALS (valstr_062_390_12_AVS), 0x80, NULL, HFILL } },",
          "10838:         { &hf_062_390_12_SEC, { \"SEC\", \"asterix.062_390_12_SEC\", FT_UINT8, BASE_DEC, NULL, 0x3f, NULL, HFILL } },",
          "10840:         { &hf_062_390_13_STAND, { \"STAND\", \"asterix.062_390_13_STAND\", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10842:         { &hf_062_390_14_EMP, { \"EMP\", \"asterix.062_390_14_EMP\", FT_UINT8, BASE_DEC, VALS (valstr_062_390_14_EMP), 0xc0, NULL, HFILL } },",
          "10843:         { &hf_062_390_14_AVL, { \"AVL\", \"asterix.062_390_14_AVL\", FT_UINT8, BASE_DEC, VALS (valstr_062_390_14_AVL), 0x30, NULL, HFILL } },",
          "10845:         { &hf_062_390_15_SID, { \"SID\", \"asterix.062_390_15_SID\", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10847:         { &hf_062_390_16_STAR, { \"STAR\", \"asterix.062_390_16_STAR\", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10849:         { &hf_062_390_17_VA, { \"VA\", \"asterix.062_390_17_VA\", FT_UINT8, BASE_DEC, VALS (valstr_062_390_17_VA), 0x10, NULL, HFILL } },",
          "10850:         { &hf_062_390_17_SQUAWK, { \"SQUAWK\", \"asterix.062_390_17_SQUAWK\", FT_UINT16, BASE_OCT, NULL, 0x0fff, NULL, HFILL } },",
          "10852:         { &hf_062_390_18_CS, { \"CS\", \"asterix.062_390_18_CS\", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10853:         { &hf_062_500, { \"500, Estimated Accuracies\", \"asterix.062_500\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10855:         { &hf_062_500_01_APCX, { \"APC X[m]\", \"asterix.062_500_01_APCX\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10856:         { &hf_062_500_01_APCY, { \"APC Y[m]\", \"asterix.062_500_01_APCY\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10858:         { &hf_062_500_02_COV, { \"COV[m]\", \"asterix.062_500_02_COV\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10860:         { &hf_062_500_03_APWLAT, { \"APW LAT[deg]\", \"asterix.062_500_03_APWLAT\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10861:         { &hf_062_500_03_APWLON, { \"APW LON[deg]\", \"asterix.062_500_03_APWLON\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10863:         { &hf_062_500_04_AGA, { \"AGA[feet]\", \"asterix.062_500_04_AGA\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10865:         { &hf_062_500_05_ABA, { \"ABA[FL]\", \"asterix.062_500_05_ABA\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10867:         { &hf_062_500_06_ATVX, { \"ATV X[m/s]\", \"asterix.062_500_06_ATVX\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10868:         { &hf_062_500_06_ATVY, { \"ATV Y[m/s]\", \"asterix.062_500_06_ATVY\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10870:         { &hf_062_500_07_AAX, { \"AA X[m/s^2]\", \"asterix.062_500_07_AAX\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10871:         { &hf_062_500_07_AAY, { \"AA X[m/s^2]\", \"asterix.062_500_07_AAY\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10873:         { &hf_062_500_08_ARC, { \"ARC[feet/min]\", \"asterix.062_500_08_ARC\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10875:         { &hf_062_500_01_APCX_8bit, { \"APC X[NM]\", \"asterix.062_500_01_APCX_8bit\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "[Removed Lines]",
          "10804:         { &hf_062_390_01, { \"#1: FPPS Identification Tag\", \"asterix.062_01\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10805:         { &hf_062_390_02, { \"#2: Callsign\", \"asterix.062_02\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10807:         { &hf_062_390_03, { \"#3: IFPS_FLIGHT_ID\", \"asterix.062_03\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10808:         { &hf_062_390_03_TYP, { \"TYP\", \"asterix.062_390_03_TYP\", FT_UINT32, BASE_DEC, VALS (valstr_062_390_03_TYP), 0xc0000000, NULL, HFILL } },",
          "10810:         { &hf_062_390_04, { \"#4: Flight Category\", \"asterix.062_04\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10815:         { &hf_062_390_05, { \"#5: Type of Aircraft\", \"asterix.062_05\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10817:         { &hf_062_390_06, { \"#6: Wake Turbulence Category\", \"asterix.062_06\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10819:         { &hf_062_390_07, { \"#7: Departure Airport\", \"asterix.062_07\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10821:         { &hf_062_390_08, { \"#8: Destination Airport\", \"asterix.062_08\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10823:         { &hf_062_390_09, { \"#9: Runway Designation\", \"asterix.062_09\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10827:         { &hf_062_390_10, { \"#10: Current Cleared Flight Level\", \"asterix.062_10\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10829:         { &hf_062_390_11, { \"#11: Current Control Position\", \"asterix.062_11\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10832:         { &hf_062_390_12, { \"#12: Time of Departure / Arrival\", \"asterix.062_12\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10839:         { &hf_062_390_13, { \"#13: Aircraft Stand\", \"asterix.062_13\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10841:         { &hf_062_390_14, { \"#14: Stand Status\", \"asterix.062_14\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10844:         { &hf_062_390_15, { \"#15: Standard Instrument Departure\", \"asterix.062_15\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10846:         { &hf_062_390_16, { \"#16: Standard Instrument Arrival\", \"asterix.062_16\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10848:         { &hf_062_390_17, { \"#17: Pre-Emergency Mode 3/A\", \"asterix.062_17\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10851:         { &hf_062_390_18, { \"#18: Pre-Emergency Callsign\", \"asterix.062_18\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10854:         { &hf_062_500_01, { \"#1: Estimated Accuracy Of Track Position (Cartesian)\", \"asterix.062_01\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10857:         { &hf_062_500_02, { \"#2: XY covariance component\", \"asterix.062_02\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10859:         { &hf_062_500_03, { \"#3: Estimated Accuracy Of Track Position (WGS-84)\", \"asterix.062_03\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10862:         { &hf_062_500_04, { \"#4: Estimated Accuracy Of Calculated Track Geometric Altitude\", \"asterix.062_04\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10864:         { &hf_062_500_05, { \"#5: Estimated Accuracy Of Calculated Track Barometric Altitude\", \"asterix.062_05\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10866:         { &hf_062_500_06, { \"#6: \", \"asterix.062_06\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10869:         { &hf_062_500_07, { \"#7: Estimated Accuracy Of Acceleration (Cartesian)\", \"asterix.062_07\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10872:         { &hf_062_500_08, { \"#8: Estimated Accuracy Of Rate Of Climb/Descent\", \"asterix.062_08\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "[Added Lines]",
          "10945:         { &hf_062_390_01, { \"#1: FPPS Identification Tag\", \"asterix.062_390_01\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10946:         { &hf_062_390_02, { \"#2: Callsign\", \"asterix.062_390_02\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10948:         { &hf_062_390_03, { \"#3: IFPS_FLIGHT_ID\", \"asterix.062_390_03\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10949:         { &hf_062_390_03_TYP, { \"TYP\", \"asterix.062_390_03_TYP\", FT_UINT8, BASE_DEC, VALS (valstr_062_390_03_TYP), 0xc0, NULL, HFILL } },",
          "10951:         { &hf_062_390_04, { \"#4: Flight Category\", \"asterix.062_390_04\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10956:         { &hf_062_390_05, { \"#5: Type of Aircraft\", \"asterix.062_390_05\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10958:         { &hf_062_390_06, { \"#6: Wake Turbulence Category\", \"asterix.062_390_06\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10960:         { &hf_062_390_07, { \"#7: Departure Airport\", \"asterix.062_390_07\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10962:         { &hf_062_390_08, { \"#8: Destination Airport\", \"asterix.062_390_08\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10964:         { &hf_062_390_09, { \"#9: Runway Designation\", \"asterix.062_390_09\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10968:         { &hf_062_390_10, { \"#10: Current Cleared Flight Level\", \"asterix.062_390_10\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10970:         { &hf_062_390_11, { \"#11: Current Control Position\", \"asterix.062_390_11\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10973:         { &hf_062_390_12, { \"#12: Time of Departure / Arrival\", \"asterix.062_390_12\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10980:         { &hf_062_390_13, { \"#13: Aircraft Stand\", \"asterix.062_390_13\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10982:         { &hf_062_390_14, { \"#14: Stand Status\", \"asterix.062_390_14\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10985:         { &hf_062_390_15, { \"#15: Standard Instrument Departure\", \"asterix.062_390_15\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10987:         { &hf_062_390_16, { \"#16: Standard Instrument Arrival\", \"asterix.062_390_16\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10989:         { &hf_062_390_17, { \"#17: Pre-Emergency Mode 3/A\", \"asterix.062_390_17\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10992:         { &hf_062_390_18, { \"#18: Pre-Emergency Callsign\", \"asterix.062_390_18\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10995:         { &hf_062_500_01, { \"#1: Estimated Accuracy Of Track Position (Cartesian)\", \"asterix.062_500_01\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10998:         { &hf_062_500_02, { \"#2: XY covariance component\", \"asterix.062_500_02\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11000:         { &hf_062_500_03, { \"#3: Estimated Accuracy Of Track Position (WGS-84)\", \"asterix.062_500_03\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11003:         { &hf_062_500_04, { \"#4: Estimated Accuracy Of Calculated Track Geometric Altitude\", \"asterix.062_500_04\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11005:         { &hf_062_500_05, { \"#5: Estimated Accuracy Of Calculated Track Barometric Altitude\", \"asterix.062_500_05\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11007:         { &hf_062_500_06, { \"#6: \", \"asterix.062_500_06\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11010:         { &hf_062_500_07, { \"#7: Estimated Accuracy Of Acceleration (Cartesian)\", \"asterix.062_500_07\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "11013:         { &hf_062_500_08, { \"#8: Estimated Accuracy Of Rate Of Climb/Descent\", \"asterix.062_500_08\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "10889:         { &hf_062_500_07_v0_17, { \"#7: Estimated Accuracy Of Longitudinal Acceleration\", \"asterix.062_500_07_v0_17\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10890:         { &hf_062_500_07_ALA, { \"ALA[NM/s^2]\", \"asterix.062_500_07_ALA\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10891:         { &hf_062_510, { \"510, Composed Track Number\", \"asterix.062_510\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10894:         { &hf_062_RE, { \"Reserved Expansion Field\", \"asterix.062_RE\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10895:         { &hf_062_RE_CST, {\"CST\", \"asterix.062_RE_CST\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10898:         { &hf_062_RE_CST_TYP, {\"TYP\", \"asterix.062_RE_CST_TYP\", FT_UINT8, BASE_DEC, VALS(valstr_062_RE_CST_TYPE), 0x0F, NULL, HFILL } },",
          "10899:         { &hf_062_RE_CST_TRK_NUM, {\"TRK NUM\", \"asterix.062_RE_CST_TRK_NUM\", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },",
          "10900:         { &hf_062_RE_CSNT, {\"CSNT\", \"asterix.062_RE_CSNT\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10903:         { &hf_062_RE_CSNT_TYP, {\"TYP\", \"asterix.062_RE_CSNT_TYP\", FT_UINT8, BASE_DEC, VALS(valstr_062_RE_CST_TYPE), 0x0F, NULL, HFILL } },",
          "10904:         { &hf_062_RE_TVS, {\"TVS\", \"asterix.062_RE_TVS\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "10905:         { &hf_062_RE_TVS_VX, {\"VX[m/s]\", \"asterix.062_RE_TVS_VX\", FT_DOUBLE, BASE_NONE, NULL, 0x0, NULL, HFILL } },",
          "",
          "[Removed Lines]",
          "10892:         { &hf_062_510_SID, { \"SID\", \"asterix.062_510_SID\", FT_UINT24, BASE_DEC, NULL, 0xfffffe, NULL, HFILL } },",
          "10893:         { &hf_062_510_STN, { \"STN\", \"asterix.062_510_STN\", FT_UINT24, BASE_DEC, NULL, 0xfffffe, NULL, HFILL } },",
          "10896:         { &hf_062_RE_CST_SAC, {\"Sensor SAC\", \"asterix.062_RE_SAC\", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },",
          "10897:         { &hf_062_RE_CST_SIC, {\"Sensor SIC\", \"asterix.062_RE_SIC\", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },",
          "10901:         { &hf_062_RE_CSNT_SAC, {\"Sensor SAC\", \"asterix.062_RE_CSNT_SAC\", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },",
          "10902:         { &hf_062_RE_CSNT_SIC, {\"Sensor SIC\", \"asterix.062_RE_CSNT_SIC\", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },",
          "",
          "[Added Lines]",
          "11033:         { &hf_062_510_SUD, { \"SUD\", \"asterix.062_510_SUD\", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },",
          "11034:         { &hf_062_510_STN, { \"STN\", \"asterix.062_510_STN\", FT_UINT24, BASE_DEC, NULL, 0x00fffe, NULL, HFILL } },",
          "11035:         { &hf_062_510_SLV_01_SUD, { \"SLV1_SUD\", \"asterix.062_510_SLV_01_SUD\", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },",
          "11036:         { &hf_062_510_SLV_01_STN, { \"SLV1_STN\", \"asterix.062_510_SLV_01_STN\", FT_UINT24, BASE_DEC, NULL, 0x00fffe, NULL, HFILL } },",
          "11037:         { &hf_062_510_SLV_02_SUD, { \"SLV2_SUD\", \"asterix.062_510_SLV_02_SUD\", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },",
          "11038:         { &hf_062_510_SLV_02_STN, { \"SLV2_STN\", \"asterix.062_510_SLV_02_STN\", FT_UINT24, BASE_DEC, NULL, 0x00fffe, NULL, HFILL } },",
          "11039:         { &hf_062_510_SLV_03_SUD, { \"SLV3_SUD\", \"asterix.062_510_SLV_03_SUD\", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },",
          "11040:         { &hf_062_510_SLV_03_STN, { \"SLV3_STN\", \"asterix.062_510_SLV_03_STN\", FT_UINT24, BASE_DEC, NULL, 0x00fffe, NULL, HFILL } },",
          "11041:         { &hf_062_510_SLV_04_SUD, { \"SLV4_SUD\", \"asterix.062_510_SLV_04_SUD\", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },",
          "11042:         { &hf_062_510_SLV_04_STN, { \"SLV4_STN\", \"asterix.062_510_SLV_04_STN\", FT_UINT24, BASE_DEC, NULL, 0x00fffe, NULL, HFILL } },",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "11882:         &ett_062_015_SI,",
          "11883:         &ett_062_040,",
          "11884:         &ett_062_060,",
          "11885:         &ett_062_060_CH,",
          "11886:         &ett_062_060_SQUAWK,",
          "11887:         &ett_062_070,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12030:         &ett_062_060_V,",
          "12031:         &ett_062_060_G,",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "11917:         &ett_062_080_DUPT,",
          "11918:         &ett_062_080_DUPF,",
          "11919:         &ett_062_080_DUPM,",
          "11920:         &ett_062_080_FRIFOE,",
          "11921:         &ett_062_080_COA,",
          "11922:         &ett_062_100,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12067:         &ett_062_080_SFC,",
          "12068:         &ett_062_080_IDD,",
          "12069:         &ett_062_080_IEC,",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "11972:         &ett_062_135_QNH,",
          "11973:         &ett_062_135_ALT,",
          "11974:         &ett_062_136,",
          "11976:         &ett_062_180,",
          "11977:         &ett_062_180_SPEED,",
          "11978:         &ett_062_180_HEADING,",
          "",
          "[Removed Lines]",
          "11975:         &ett_062_136_ALT,",
          "",
          "[Added Lines]",
          "12125:         &ett_062_136_MFL,",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "11994:         &ett_062_240,",
          "11995:         &ett_062_240_ROT,",
          "11996:         &ett_062_245,",
          "11997:         &ett_062_270,",
          "11998:         &ett_062_270_LENGTH,",
          "11999:         &ett_062_270_ORIENTATION,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12147:         &ett_062_245_STI,",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "12052:         &ett_062_295_06,",
          "12053:         &ett_062_295_06_MD5,",
          "12054:         &ett_062_295_07,",
          "12056:         &ett_062_295_08,",
          "12057:         &ett_062_295_08_IAS,",
          "12058:         &ett_062_295_09,",
          "",
          "[Removed Lines]",
          "12055:         &ett_062_295_07_MHD,",
          "",
          "[Added Lines]",
          "12206:         &ett_062_295_07_MHG,",
          "",
          "---------------",
          "--- Hunk 66 ---",
          "[Context before]",
          "12319:         &ett_062_500_07_v0_17,",
          "12320:         &ett_062_500_07_ALA,",
          "12321:         &ett_062_510,",
          "12323:         &ett_062_510_STN,",
          "12324:         &ett_062_RE,",
          "12325:         &ett_062_RE_CST,",
          "12328:         &ett_062_RE_CST_TYP,",
          "12329:         &ett_062_RE_CST_TRK_NUM,",
          "12330:         &ett_062_RE_CSNT,",
          "12333:         &ett_062_RE_CSNT_TYP,",
          "12334:         &ett_062_RE_TVS,",
          "12335:         &ett_062_RE_TVS_VX,",
          "",
          "[Removed Lines]",
          "12322:         &ett_062_510_SID,",
          "12326:         &ett_062_RE_CST_SAC,",
          "12327:         &ett_062_RE_CST_SIC,",
          "12331:         &ett_062_RE_CSNT_SAC,",
          "12332:         &ett_062_RE_CSNT_SIC,",
          "",
          "[Added Lines]",
          "12473:         &ett_062_510_SUD,",
          "12475:         &ett_062_510_SLV_01_SUD,",
          "12476:         &ett_062_510_SLV_01_STN,",
          "12477:         &ett_062_510_SLV_02_SUD,",
          "12478:         &ett_062_510_SLV_02_STN,",
          "12479:         &ett_062_510_SLV_03_SUD,",
          "12480:         &ett_062_510_SLV_03_STN,",
          "12481:         &ett_062_510_SLV_04_SUD,",
          "12482:         &ett_062_510_SLV_04_STN,",
          "",
          "---------------"
        ]
      }
    }
  ]
}