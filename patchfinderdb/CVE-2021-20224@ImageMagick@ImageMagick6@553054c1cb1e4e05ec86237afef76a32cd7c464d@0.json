{
  "cve_id": "CVE-2021-20224",
  "cve_desc": "An integer overflow issue was discovered in ImageMagick's ExportIndexQuantum() function in MagickCore/quantum-export.c. Function calls to GetPixelIndex() could result in values outside the range of representable for the 'unsigned char'. When ImageMagick processes a crafted pdf file, this could lead to an undefined behaviour or a crash.",
  "repo": "ImageMagick/ImageMagick6",
  "patch_hash": "553054c1cb1e4e05ec86237afef76a32cd7c464d",
  "patch_info": {
    "commit_hash": "553054c1cb1e4e05ec86237afef76a32cd7c464d",
    "repo": "ImageMagick/ImageMagick6",
    "commit_url": "https://github.com/ImageMagick/ImageMagick6/commit/553054c1cb1e4e05ec86237afef76a32cd7c464d",
    "files": [
      "magick/quantum-export.c"
    ],
    "message": "https://github.com/ImageMagick/ImageMagick/pull/3083",
    "before_after_code_files": [
      "magick/quantum-export.c||magick/quantum-export.c"
    ]
  },
  "patch_diff": {
    "magick/quantum-export.c||magick/quantum-export.c": [
      "File: magick/quantum-export.c -> magick/quantum-export.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2516:       unsigned char",
      "2517:         pixel;",
      "2520:       {",
      "2535:         pixel=(unsigned char) *indexes++;",
      "",
      "[Removed Lines]",
      "2519:       for (x=((ssize_t) number_pixels-7); x > 0; x-=8)",
      "2521:         pixel=(unsigned char) *indexes++;",
      "2523:         pixel=(unsigned char) *indexes++;",
      "2525:         pixel=(unsigned char) *indexes++;",
      "2527:         pixel=(unsigned char) *indexes++;",
      "2529:         pixel=(unsigned char) *indexes++;",
      "2531:         pixel=(unsigned char) *indexes++;",
      "2533:         pixel=(unsigned char) *indexes++;",
      "",
      "[Added Lines]",
      "2519:       for (x=((ssize_t) number_pixels-7); x > 0; x-=8)",
      "2521:         pixel=(unsigned char) ((ssize_t) *indexes++);",
      "2523:         pixel=(unsigned char) ((ssize_t) *indexes++);",
      "2525:         pixel=(unsigned char) ((ssize_t) *indexes++);",
      "2527:         pixel=(unsigned char) ((ssize_t) *indexes++);",
      "2529:         pixel=(unsigned char) ((ssize_t) *indexes++);",
      "2531:         pixel=(unsigned char) ((ssize_t) *indexes++);",
      "2533:         pixel=(unsigned char) ((ssize_t) *indexes++);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2539:       if ((number_pixels % 8) != 0)",
      "2540:         {",
      "2543:           {",
      "2544:             pixel=(unsigned char) *indexes++;",
      "",
      "[Removed Lines]",
      "2542:           for (bit=7; bit >= (ssize_t) (8-(number_pixels % 8)); bit--)",
      "",
      "[Added Lines]",
      "2542:           for (bit=7; bit >= (ssize_t) (8-(number_pixels % 8)); bit--)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2553:       unsigned char",
      "2554:         pixel;",
      "2557:       {",
      "2560:         pixel=(unsigned char) *indexes++;",
      "2562:         q++;",
      "2563:       }",
      "2565:         {",
      "2566:           pixel=(unsigned char) *indexes++;",
      "",
      "[Removed Lines]",
      "2556:       for (x=0; x < (ssize_t) (number_pixels-1) ; x+=2)",
      "2558:         pixel=(unsigned char) *indexes++;",
      "2564:       if ((number_pixels % 2) != 0)",
      "",
      "[Added Lines]",
      "2556:       for (x=0; x < (ssize_t) (number_pixels-1) ; x+=2)",
      "2558:         pixel=(unsigned char) ((ssize_t) *indexes++);",
      "2564:       if ((number_pixels % 2) != 0)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2669:       unsigned char",
      "2670:         pixel;",
      "2673:       {",
      "2674:         pixel=(unsigned char) *indexes++;",
      "2676:         pixel=(unsigned char) (GetPixelOpacity(p) == (Quantum)",
      "2677:           TransparentOpacity ? 1 : 0);",
      "2679:         p++;",
      "2680:         pixel=(unsigned char) *indexes++;",
      "2682:         pixel=(unsigned char) (GetPixelOpacity(p) == (Quantum)",
      "2683:           TransparentOpacity ? 1 : 0);",
      "2685:         p++;",
      "2686:         pixel=(unsigned char) *indexes++;",
      "2688:         pixel=(unsigned char) (GetPixelOpacity(p) == (Quantum)",
      "2689:           TransparentOpacity ? 1 : 0);",
      "2691:         p++;",
      "2692:         pixel=(unsigned char) *indexes++;",
      "",
      "[Removed Lines]",
      "2672:       for (x=((ssize_t) number_pixels-3); x > 0; x-=4)",
      "",
      "[Added Lines]",
      "2672:       for (x=((ssize_t) number_pixels-3); x > 0; x-=4)",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2700:       if ((number_pixels % 4) != 0)",
      "2701:         {",
      "2704:           {",
      "2705:             pixel=(unsigned char) *indexes++;",
      "",
      "[Removed Lines]",
      "2703:           for (bit=3; bit >= (ssize_t) (4-(number_pixels % 4)); bit-=2)",
      "",
      "[Added Lines]",
      "2703:           for (bit=3; bit >= (ssize_t) (4-(number_pixels % 4)); bit-=2)",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2718:       unsigned char",
      "2719:         pixel;",
      "2722:       {",
      "2725:         pixel=(unsigned char) (16*QuantumScale*((Quantum) (QuantumRange-",
      "2726:           GetPixelOpacity(p)))+0.5);",
      "",
      "[Removed Lines]",
      "2721:       for (x=0; x < (ssize_t) number_pixels ; x++)",
      "2723:         pixel=(unsigned char) *indexes++;",
      "",
      "[Added Lines]",
      "2721:       for (x=0; x < (ssize_t) number_pixels ; x++)",
      "2723:         pixel=(unsigned char) ((ssize_t) *indexes++);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2753:       if (quantum_info->format == FloatingPointQuantumFormat)",
      "2754:         {",
      "2756:           {",
      "2757:             q=PopShortPixel(quantum_info->endian,(unsigned short) GetPixelIndex(indexes+x),q);",
      "2758:             pixel=SinglePrecisionToHalf(QuantumScale*GetPixelAlpha(p));",
      "",
      "[Removed Lines]",
      "2755:           for (x=0; x < (ssize_t) number_pixels; x++)",
      "",
      "[Added Lines]",
      "2755:           for (x=0; x < (ssize_t) number_pixels; x++)",
      "2756:           {",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2762:           }",
      "2763:           break;",
      "2764:         }",
      "2766:       {",
      "2767:         q=PopShortPixel(quantum_info->endian,(unsigned short) GetPixelIndex(indexes+x),q);",
      "2768:         pixel=ScaleQuantumToShort((Quantum) (QuantumRange-GetPixelOpacity(p)));",
      "",
      "[Removed Lines]",
      "2765:       for (x=0; x < (ssize_t) number_pixels; x++)",
      "",
      "[Added Lines]",
      "2766:       for (x=0; x < (ssize_t) number_pixels; x++)",
      "2767:       {",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2792:           }",
      "2793:           break;",
      "2794:         }",
      "2796:       {",
      "2797:         q=PopLongPixel(quantum_info->endian,(unsigned int) GetPixelIndex(indexes+x),q);",
      "2798:         pixel=ScaleQuantumToLong((Quantum) (QuantumRange-GetPixelOpacity(p)));",
      "",
      "[Removed Lines]",
      "2795:       for (x=0; x < (ssize_t) number_pixels; x++)",
      "",
      "[Added Lines]",
      "2797:       for (x=0; x < (ssize_t) number_pixels; x++)",
      "2798:       {",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "2827:         range;",
      "2829:       range=GetQuantumRange(quantum_info->depth);",
      "2834:         q=PopQuantumPixel(quantum_info,",
      "2835:           ScaleQuantumToAny((Quantum) (GetPixelAlpha(p)),range),q);",
      "2836:         p++;",
      "",
      "[Removed Lines]",
      "2830:       for (x=0; x < (ssize_t) number_pixels; x++)",
      "2831:       {",
      "2832:         q=PopQuantumPixel(quantum_info,",
      "2833:           GetPixelIndex(indexes+x),q);",
      "",
      "[Added Lines]",
      "2833:       for (x=0; x < (ssize_t) number_pixels; x++)",
      "2834:       {",
      "2835:         q=PopQuantumPixel(quantum_info,GetPixelIndex(indexes+x),q);",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "3035:     default:",
      "3036:     {",
      "3037:       range=GetQuantumRange(quantum_info->depth);",
      "3040:         q=PopQuantumPixel(quantum_info,",
      "3041:           ScaleQuantumToAny(GetPixelRed(p),range),q);",
      "3042:         p++;",
      "",
      "[Removed Lines]",
      "3038:       for (x=0; x < (ssize_t) number_pixels; x++)",
      "3039:       {",
      "",
      "[Added Lines]",
      "3040:       for (x=0; x < (ssize_t) number_pixels; x++)",
      "3041:       {",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "3150:                 pixel=(unsigned int) ScaleQuantumToAny(GetPixelBlue(p),range);",
      "3151:                 p++;",
      "3152:                 break;",
      "3154:             }",
      "3155:             q=PopShortPixel(quantum_info->endian,(unsigned short) (pixel << 4),q);",
      "3156:             switch ((x+1) % 3)",
      "",
      "[Removed Lines]",
      "3153:               }",
      "",
      "[Added Lines]",
      "3155:               }",
      "3156:             }",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "3171:                 pixel=(unsigned int) ScaleQuantumToAny(GetPixelBlue(p),range);",
      "3172:                 p++;",
      "3173:                 break;",
      "3175:             }",
      "3176:             q=PopShortPixel(quantum_info->endian,(unsigned short) (pixel << 4),q);",
      "3177:             q+=quantum_info->pad;",
      "",
      "[Removed Lines]",
      "3174:               }",
      "",
      "[Added Lines]",
      "3177:               }",
      "3178:             }",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "3196:                 pixel=(unsigned int) ScaleQuantumToAny(GetPixelBlue(p),range);",
      "3197:                 p++;",
      "3198:                 break;",
      "3200:             }",
      "3201:             q=PopShortPixel(quantum_info->endian,(unsigned short) (pixel << 4),q);",
      "3202:             q+=quantum_info->pad;",
      "",
      "[Removed Lines]",
      "3199:               }",
      "",
      "[Added Lines]",
      "3203:               }",
      "3204:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8e0e8360d4a2e2275f1fc3131ceee906ddc4bf4d",
      "candidate_info": {
        "commit_hash": "8e0e8360d4a2e2275f1fc3131ceee906ddc4bf4d",
        "repo": "ImageMagick/ImageMagick6",
        "commit_url": "https://github.com/ImageMagick/ImageMagick6/commit/8e0e8360d4a2e2275f1fc3131ceee906ddc4bf4d",
        "files": [
          "magick/quantum-export.c"
        ],
        "message": "eliminate compiler warnings",
        "before_after_code_files": [
          "magick/quantum-export.c||magick/quantum-export.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "magick/quantum-export.c||magick/quantum-export.c"
          ],
          "candidate": [
            "magick/quantum-export.c||magick/quantum-export.c"
          ]
        }
      },
      "candidate_diff": {
        "magick/quantum-export.c||magick/quantum-export.c": [
          "File: magick/quantum-export.c -> magick/quantum-export.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "691:           {",
          "692:             for (i=0; i < 4; i++)",
          "693:             {",
          "698:                 case 2: quantum=GetPixelBlue(p); break;",
          "699:                 case 3: quantum=(Quantum) GetPixelAlpha(p); break;",
          "700:               }",
          "",
          "[Removed Lines]",
          "694:               switch (i)",
          "695:               {",
          "696:                 case 0: quantum=GetPixelRed(p); break;",
          "697:                 case 1: quantum=GetPixelGreen(p); break;",
          "",
          "[Added Lines]",
          "694:               switch (i)",
          "695:               {",
          "696:                 case 0: quantum=(size_t) GetPixelRed(p); break;",
          "697:                 case 1: quantum=(size_t) GetPixelGreen(p); break;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "933:           {",
          "934:             for (i=0; i < 4; i++)",
          "935:             {",
          "940:                 case 2: quantum=GetPixelBlue(p); break;",
          "941:                 case 3: quantum=GetPixelOpacity(p); break;",
          "942:               }",
          "",
          "[Removed Lines]",
          "936:               switch (i)",
          "937:               {",
          "938:                 case 0: quantum=GetPixelRed(p); break;",
          "939:                 case 1: quantum=GetPixelGreen(p); break;",
          "",
          "[Added Lines]",
          "936:               switch (i)",
          "937:               {",
          "938:                 case 0: quantum=(size_t) GetPixelRed(p); break;",
          "939:                 case 1: quantum=(size_t) GetPixelGreen(p); break;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1369:             {",
          "1370:               switch (n % 3)",
          "1371:               {",
          "1373:                 {",
          "1374:                   quantum=GetPixelRed(p);",
          "1375:                   break;",
          "1376:                 }",
          "1378:                 {",
          "1379:                   quantum=GetPixelGreen(p);",
          "1380:                   break;",
          "1381:                 }",
          "1383:                 {",
          "1384:                   quantum=GetPixelBlue(p);",
          "1385:                   break;",
          "",
          "[Removed Lines]",
          "1372:                 case 0:",
          "1377:                 case 1:",
          "1382:                 case 2:",
          "",
          "[Added Lines]",
          "1372:                 case 0:",
          "1377:                 case 1:",
          "1382:                 case 2:",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1410:         {",
          "1411:           switch (n % 3)",
          "1412:           {",
          "1414:             {",
          "1415:               quantum=GetPixelRed(p);",
          "1416:               break;",
          "1417:             }",
          "1419:             {",
          "1420:               quantum=GetPixelGreen(p);",
          "1421:               break;",
          "1422:             }",
          "1424:             {",
          "1425:               quantum=GetPixelBlue(p);",
          "1426:               break;",
          "",
          "[Removed Lines]",
          "1413:             case 0:",
          "1418:             case 1:",
          "1423:             case 2:",
          "",
          "[Added Lines]",
          "1413:             case 0:",
          "1418:             case 1:",
          "1423:             case 2:",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2632:     }",
          "2633:     default:",
          "2634:     {",
          "2637:         q=PopQuantumPixel(quantum_info,",
          "2638:           GetPixelIndex(indexes+x),q);",
          "2639:         p++;",
          "",
          "[Removed Lines]",
          "2635:       for (x=0; x < (ssize_t) number_pixels; x++)",
          "2636:       {",
          "",
          "[Added Lines]",
          "2635:       for (x=0; x < (ssize_t) number_pixels; x++)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2830:         range;",
          "2832:       range=GetQuantumRange(quantum_info->depth);",
          "2834:       {",
          "2835:         q=PopQuantumPixel(quantum_info,GetPixelIndex(indexes+x),q);",
          "2836:         q=PopQuantumPixel(quantum_info,ScaleQuantumToAny((Quantum)",
          "",
          "[Removed Lines]",
          "2833:       for (x=0; x < (ssize_t) number_pixels; x++)",
          "",
          "[Added Lines]",
          "2832:       for (x=0; x < (ssize_t) number_pixels; x++)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3391:           {",
          "3392:             for (i=0; i < 4; i++)",
          "3393:             {",
          "3398:                 case 2: quantum=GetPixelBlue(p); break;",
          "3399:                 case 3: quantum=(Quantum) GetPixelAlpha(p); break;",
          "3400:               }",
          "",
          "[Removed Lines]",
          "3394:               switch (i)",
          "3395:               {",
          "3396:                 case 0: quantum=GetPixelRed(p); break;",
          "3397:                 case 1: quantum=GetPixelGreen(p); break;",
          "",
          "[Added Lines]",
          "3393:               switch (i)",
          "3394:               {",
          "3395:                 case 0: quantum=(size_t) GetPixelRed(p); break;",
          "3396:                 case 1: quantum=(size_t) GetPixelGreen(p); break;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "3633:           {",
          "3634:             for (i=0; i < 4; i++)",
          "3635:             {",
          "3640:                 case 2: quantum=GetPixelBlue(p); break;",
          "3641:                 case 3: quantum=GetPixelOpacity(p); break;",
          "3642:               }",
          "",
          "[Removed Lines]",
          "3636:               switch (i)",
          "3637:               {",
          "3638:                 case 0: quantum=GetPixelRed(p); break;",
          "3639:                 case 1: quantum=GetPixelGreen(p); break;",
          "",
          "[Added Lines]",
          "3635:               switch (i)",
          "3636:               {",
          "3637:                 case 0: quantum=(size_t) GetPixelRed(p); break;",
          "3638:                 case 1: quantum=(size_t) GetPixelGreen(p); break;",
          "",
          "---------------"
        ]
      }
    }
  ]
}