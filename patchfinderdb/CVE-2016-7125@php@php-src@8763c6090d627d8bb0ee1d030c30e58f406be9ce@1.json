{
  "cve_id": "CVE-2016-7125",
  "cve_desc": "ext/session/session.c in PHP before 5.6.25 and 7.x before 7.0.10 skips invalid session names in a way that triggers incorrect parsing, which allows remote attackers to inject arbitrary-type session data by leveraging control of a session name, as demonstrated by object injection.",
  "repo": "php/php-src",
  "patch_hash": "8763c6090d627d8bb0ee1d030c30e58f406be9ce",
  "patch_info": {
    "commit_hash": "8763c6090d627d8bb0ee1d030c30e58f406be9ce",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/8763c6090d627d8bb0ee1d030c30e58f406be9ce",
    "files": [
      "ext/session/session.c",
      "ext/session/tests/bug72681.phpt"
    ],
    "message": "Fix bug #72681 - consume data even if we're not storing them",
    "before_after_code_files": [
      "ext/session/session.c||ext/session/session.c",
      "ext/session/tests/bug72681.phpt||ext/session/tests/bug72681.phpt"
    ]
  },
  "patch_diff": {
    "ext/session/session.c||ext/session/session.c": [
      "File: ext/session/session.c -> ext/session/session.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "924:  int namelen;",
      "925:  int has_value;",
      "926:  php_unserialize_data_t var_hash;",
      "928:  PHP_VAR_UNSERIALIZE_INIT(var_hash);",
      "930:  for (p = val; p < endptr; ) {",
      "931:   zval **tmp;",
      "932:   namelen = ((unsigned char)(*p)) & (~PS_BIN_UNDEF);",
      "934:   if (namelen < 0 || namelen > PS_BIN_MAX || (p + namelen) >= endptr) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "927:  int skip = 0;",
      "933:   skip = 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "945:   if (zend_hash_find(&EG(symbol_table), name, namelen + 1, (void **) &tmp) == SUCCESS) {",
      "946:    if ((Z_TYPE_PP(tmp) == IS_ARRAY && Z_ARRVAL_PP(tmp) == &EG(symbol_table)) || *tmp == PS(http_session_vars)) {",
      "949:    }",
      "950:   }",
      "952:   if (has_value) {",
      "953:    ALLOC_INIT_ZVAL(current);",
      "954:    if (php_var_unserialize(&current, (const unsigned char **) &p, (const unsigned char *) endptr, &var_hash TSRMLS_CC)) {",
      "956:    } else {",
      "957:     PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
      "958:     return FAILURE;",
      "959:    }",
      "960:    var_push_dtor_no_addref(&var_hash, &current);",
      "961:   }",
      "963:   efree(name);",
      "964:  }",
      "",
      "[Removed Lines]",
      "947:     efree(name);",
      "948:     continue;",
      "955:     php_set_session_var(name, namelen, current, &var_hash  TSRMLS_CC);",
      "962:   PS_ADD_VARL(name, namelen);",
      "",
      "[Added Lines]",
      "949:     skip = 1;",
      "956:     if (!skip) {",
      "957:      php_set_session_var(name, namelen, current, &var_hash  TSRMLS_CC);",
      "958:     }",
      "965:   if (!skip) {",
      "966:    PS_ADD_VARL(name, namelen);",
      "967:   }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1016:  int namelen;",
      "1017:  int has_value;",
      "1018:  php_unserialize_data_t var_hash;",
      "1020:  PHP_VAR_UNSERIALIZE_INIT(var_hash);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1024:  int skip = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1024:  while (p < endptr) {",
      "1025:   zval **tmp;",
      "1026:   q = p;",
      "1027:   while (*q != PS_DELIMITER) {",
      "1028:    if (++q >= endptr) goto break_outer_loop;",
      "1029:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1033:   skip = 0;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1041:   if (zend_hash_find(&EG(symbol_table), name, namelen + 1, (void **) &tmp) == SUCCESS) {",
      "1042:    if ((Z_TYPE_PP(tmp) == IS_ARRAY && Z_ARRVAL_PP(tmp) == &EG(symbol_table)) || *tmp == PS(http_session_vars)) {",
      "1044:    }",
      "1045:   }",
      "1047:   if (has_value) {",
      "1048:    ALLOC_INIT_ZVAL(current);",
      "1049:    if (php_var_unserialize(&current, (const unsigned char **) &q, (const unsigned char *) endptr, &var_hash TSRMLS_CC)) {",
      "1051:    } else {",
      "1052:     var_push_dtor_no_addref(&var_hash, &current);",
      "1053:     efree(name);",
      "",
      "[Removed Lines]",
      "1043:     goto skip;",
      "1050:     php_set_session_var(name, namelen, current, &var_hash  TSRMLS_CC);",
      "",
      "[Added Lines]",
      "1050:     skip = 1;",
      "1057:     if (!skip) {",
      "1058:      php_set_session_var(name, namelen, current, &var_hash  TSRMLS_CC);",
      "1059:     }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1056:    }",
      "1057:    var_push_dtor_no_addref(&var_hash, &current);",
      "1058:   }",
      "1060: skip:",
      "1061:   efree(name);",
      "",
      "[Removed Lines]",
      "1059:   PS_ADD_VARL(name, namelen);",
      "",
      "[Added Lines]",
      "1068:   if (!skip) {",
      "1069:    PS_ADD_VARL(name, namelen);",
      "1070:   }",
      "",
      "---------------"
    ],
    "ext/session/tests/bug72681.phpt||ext/session/tests/bug72681.phpt": [
      "File: ext/session/tests/bug72681.phpt -> ext/session/tests/bug72681.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Bug #72681: PHP Session Data Injection Vulnerability",
      "3: --SKIPIF--",
      "4: <?php include('skipif.inc'); ?>",
      "5: --FILE--",
      "6: <?php",
      "7: ini_set('session.serialize_handler', 'php');",
      "8: session_start();",
      "9: $_SESSION['_SESSION'] = 'ryat|O:8:\"stdClass\":0:{}';",
      "10: session_write_close();",
      "11: session_start();",
      "12: var_dump($_SESSION);",
      "13: ?>",
      "14: --EXPECT--",
      "15: array(0) {",
      "16: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bf5c502e3d1df85c074784838f44d769f0ae0e6c",
      "candidate_info": {
        "commit_hash": "bf5c502e3d1df85c074784838f44d769f0ae0e6c",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/bf5c502e3d1df85c074784838f44d769f0ae0e6c",
        "files": [
          "ext/session/session.c",
          "ext/session/tests/session_encode_error2.phpt"
        ],
        "message": "Remove \"register_globals\" support codes from php/php_binary serializers. As a result, users may use PS_UNDEF_MAKER(=!) char for session variable name.",
        "before_after_code_files": [
          "ext/session/session.c||ext/session/session.c",
          "ext/session/tests/session_encode_error2.phpt||ext/session/tests/session_encode_error2.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/session/session.c||ext/session/session.c"
          ],
          "candidate": [
            "ext/session/session.c||ext/session/session.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/session/session.c||ext/session/session.c": [
          "File: ext/session/session.c -> ext/session/session.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "887:    smart_str_appendc(&buf, (unsigned char)ZSTR_LEN(key));",
          "888:    smart_str_appendl(&buf, ZSTR_VAL(key), ZSTR_LEN(key));",
          "889:    php_var_serialize(&buf, struc, &var_hash);",
          "894:  );",
          "896:  smart_str_0(&buf);",
          "",
          "[Removed Lines]",
          "890:   } else {",
          "891:    if (ZSTR_LEN(key) > PS_BIN_MAX) continue;",
          "892:    smart_str_appendc(&buf, (unsigned char) (ZSTR_LEN(key) & PS_BIN_UNDEF));",
          "893:    smart_str_appendl(&buf, ZSTR_VAL(key), ZSTR_LEN(key));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "904: {",
          "905:  const char *p;",
          "906:  const char *endptr = val + vallen;",
          "908:  int namelen;",
          "909:  zend_string *name;",
          "910:  php_unserialize_data_t var_hash;",
          "912:  PHP_VAR_UNSERIALIZE_INIT(var_hash);",
          "",
          "[Removed Lines]",
          "907:  int has_value;",
          "",
          "[Added Lines]",
          "906:  zval *current, rv;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "919:    return FAILURE;",
          "920:   }",
          "924:   name = zend_string_init(p + 1, namelen, 0);",
          "926:   p += namelen + 1;",
          "940:   } else {",
          "942:   }",
          "943:   zend_string_release(name);",
          "944:  }",
          "",
          "[Removed Lines]",
          "922:   has_value = *p & PS_BIN_UNDEF ? 0 : 1;",
          "928:   if (has_value) {",
          "929:    zval *current, rv;",
          "930:    current = var_tmp_var(&var_hash);",
          "931:    if (php_var_unserialize(current, (const unsigned char **) &p, (const unsigned char *) endptr, &var_hash)) {",
          "932:     ZVAL_PTR(&rv, current);",
          "933:     php_set_session_var(name, &rv, &var_hash);",
          "934:    } else {",
          "935:     zend_string_release(name);",
          "936:     php_session_normalize_vars();",
          "937:     PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
          "938:     return FAILURE;",
          "939:    }",
          "941:    PS_ADD_VARL(name);",
          "",
          "[Added Lines]",
          "920:   current = var_tmp_var(&var_hash);",
          "922:   if (php_var_unserialize(current, (const unsigned char **) &p, (const unsigned char *) endptr, &var_hash)) {",
          "923:    ZVAL_PTR(&rv, current);",
          "924:    php_set_session_var(name, &rv, &var_hash);",
          "926:    zend_string_release(name);",
          "927:    php_session_normalize_vars();",
          "928:    PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
          "929:    return FAILURE;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "953: #define PS_DELIMITER '|'",
          "957: {",
          "",
          "[Removed Lines]",
          "954: #define PS_UNDEF_MARKER '!'",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "962:  PHP_VAR_SERIALIZE_INIT(var_hash);",
          "964:  PS_ENCODE_LOOP(",
          "978:  );",
          "980:  smart_str_0(&buf);",
          "",
          "[Removed Lines]",
          "965:    smart_str_appendl(&buf, ZSTR_VAL(key), ZSTR_LEN(key));",
          "966:    if (memchr(ZSTR_VAL(key), PS_DELIMITER, ZSTR_LEN(key)) || memchr(ZSTR_VAL(key), PS_UNDEF_MARKER, ZSTR_LEN(key))) {",
          "967:     PHP_VAR_SERIALIZE_DESTROY(var_hash);",
          "968:     smart_str_free(&buf);",
          "969:     return NULL;",
          "970:    }",
          "971:    smart_str_appendc(&buf, PS_DELIMITER);",
          "973:    php_var_serialize(&buf, struc, &var_hash);",
          "974:   } else {",
          "975:    smart_str_appendc(&buf, PS_UNDEF_MARKER);",
          "976:    smart_str_appendl(&buf, ZSTR_VAL(key), ZSTR_LEN(key));",
          "977:    smart_str_appendc(&buf, PS_DELIMITER);",
          "",
          "[Added Lines]",
          "952:   smart_str_appendl(&buf, ZSTR_VAL(key), ZSTR_LEN(key));",
          "953:   if (memchr(ZSTR_VAL(key), PS_DELIMITER, ZSTR_LEN(key))) {",
          "954:    PHP_VAR_SERIALIZE_DESTROY(var_hash);",
          "955:    smart_str_free(&buf);",
          "956:    return NULL;",
          "957:   }",
          "958:   smart_str_appendc(&buf, PS_DELIMITER);",
          "959:   php_var_serialize(&buf, struc, &var_hash);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "990:  const char *endptr = val + vallen;",
          "991:  ptrdiff_t namelen;",
          "992:  zend_string *name;",
          "994:  php_unserialize_data_t var_hash;",
          "996:  PHP_VAR_UNSERIALIZE_INIT(var_hash);",
          "",
          "[Removed Lines]",
          "993:  int has_value, retval = SUCCESS;",
          "",
          "[Added Lines]",
          "975:  int retval = SUCCESS;",
          "977:  zval *current, rv;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1002:   while (*q != PS_DELIMITER) {",
          "1003:    if (++q >= endptr) goto break_outer_loop;",
          "1004:   }",
          "1012:   namelen = q - p;",
          "1013:   name = zend_string_init(p, namelen, 0);",
          "1014:   q++;",
          "1027:   } else {",
          "1029:   }",
          "1030:   zend_string_release(name);",
          "1032:   p = q;",
          "1033:  }",
          "1034: break_outer_loop:",
          "1035:  php_session_normalize_vars();",
          "",
          "[Removed Lines]",
          "1005:   if (p[0] == PS_UNDEF_MARKER) {",
          "1006:    p++;",
          "1007:    has_value = 0;",
          "1008:   } else {",
          "1009:    has_value = 1;",
          "1010:   }",
          "1016:   if (has_value) {",
          "1017:    zval *current, rv;",
          "1018:    current = var_tmp_var(&var_hash);",
          "1019:    if (php_var_unserialize(current, (const unsigned char **)&q, (const unsigned char *)endptr, &var_hash)) {",
          "1020:     ZVAL_PTR(&rv, current);",
          "1021:     php_set_session_var(name, &rv, &var_hash);",
          "1022:    } else {",
          "1023:     zend_string_release(name);",
          "1024:     retval = FAILURE;",
          "1025:     goto break_outer_loop;",
          "1026:    }",
          "1028:    PS_ADD_VARL(name);",
          "",
          "[Added Lines]",
          "993:   current = var_tmp_var(&var_hash);",
          "994:   if (php_var_unserialize(current, (const unsigned char **)&q, (const unsigned char *)endptr, &var_hash)) {",
          "995:    ZVAL_PTR(&rv, current);",
          "996:    php_set_session_var(name, &rv, &var_hash);",
          "998:    zend_string_release(name);",
          "999:    retval = FAILURE;",
          "1000:    goto break_outer_loop;",
          "",
          "---------------"
        ],
        "ext/session/tests/session_encode_error2.phpt||ext/session/tests/session_encode_error2.phpt": [
          "File: ext/session/tests/session_encode_error2.phpt -> ext/session/tests/session_encode_error2.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "221: -- Iteration 20 --",
          "222: bool(true)",
          "224: bool(true)",
          "226: -- Iteration 21 --",
          "",
          "[Removed Lines]",
          "223: bool(false)",
          "",
          "[Added Lines]",
          "223: string(33) \"Hello World!|s:12:\"Hello World!\";\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3647fc6fcc63262e0347ee78a37b2410bf6a7035",
      "candidate_info": {
        "commit_hash": "3647fc6fcc63262e0347ee78a37b2410bf6a7035",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/3647fc6fcc63262e0347ee78a37b2410bf6a7035",
        "files": [
          "Zend/zend_API.c",
          "ext/session/mod_files.c",
          "ext/session/mod_user.c",
          "ext/session/mod_user_class.c",
          "ext/session/php_session.h",
          "ext/session/session.c",
          "ext/standard/url_scanner_ex.c",
          "ext/standard/url_scanner_ex.re"
        ],
        "message": "Refactor session (incompleted)",
        "before_after_code_files": [
          "Zend/zend_API.c||Zend/zend_API.c",
          "ext/session/mod_files.c||ext/session/mod_files.c",
          "ext/session/mod_user.c||ext/session/mod_user.c",
          "ext/session/mod_user_class.c||ext/session/mod_user_class.c",
          "ext/session/php_session.h||ext/session/php_session.h",
          "ext/session/session.c||ext/session/session.c",
          "ext/standard/url_scanner_ex.c||ext/standard/url_scanner_ex.c",
          "ext/standard/url_scanner_ex.re||ext/standard/url_scanner_ex.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/session/session.c||ext/session/session.c"
          ],
          "candidate": [
            "ext/session/session.c||ext/session/session.c"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend_API.c||Zend/zend_API.c": [
          "File: Zend/zend_API.c -> Zend/zend_API.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2716:  while (num_symbol_tables-- > 0) {",
          "2717:   symbol_table = va_arg(symbol_table_list, HashTable *);",
          "2718:   zend_hash_str_update(symbol_table, name, name_length, symbol);",
          "2720:  }",
          "2721:  va_end(symbol_table_list);",
          "2722:  return SUCCESS;",
          "",
          "[Removed Lines]",
          "2719:   Z_ADDREF_P(symbol);",
          "",
          "[Added Lines]",
          "2719:   if (Z_REFCOUNTED_P(symbol)) {",
          "2720:    Z_ADDREF_P(symbol);",
          "2721:   }",
          "",
          "---------------"
        ],
        "ext/session/mod_files.c||ext/session/mod_files.c": [
          "File: ext/session/mod_files.c -> ext/session/mod_files.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "330:  if (PS(use_strict_mode) &&",
          "333:   if (key) {",
          "335:    PS(id) = NULL;",
          "336:   }",
          "338:   if (!PS(id)) {",
          "339:    return FAILURE;",
          "340:   }",
          "",
          "[Removed Lines]",
          "331:   ps_files_key_exists(data, key TSRMLS_CC) == FAILURE) {",
          "334:    efree(PS(id));",
          "337:   PS(id) = PS(mod)->s_create_sid((void **)&data, NULL TSRMLS_CC);",
          "",
          "[Added Lines]",
          "331:   ps_files_key_exists(data, key? key->val : NULL TSRMLS_CC) == FAILURE) {",
          "334:    STR_RELEASE(PS(id));",
          "337:   PS(id) = PS(mod)->s_create_sid((void **)&data TSRMLS_CC);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "345:   PS(session_status) = php_session_active;",
          "346:  }",
          "349:  if (data->fd < 0) {",
          "350:   return FAILURE;",
          "351:  }",
          "",
          "[Removed Lines]",
          "348:  ps_files_open(data, PS(id) TSRMLS_CC);",
          "",
          "[Added Lines]",
          "348:  ps_files_open(data, PS(id)->val TSRMLS_CC);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "354:   return FAILURE;",
          "355:  }",
          "359:  if (sbuf.st_size == 0) {",
          "361:   return SUCCESS;",
          "362:  }",
          "366: #if defined(HAVE_PREAD)",
          "368: #else",
          "369:  lseek(data->fd, 0, SEEK_SET);",
          "371: #endif",
          "373:  if (n != sbuf.st_size) {",
          "",
          "[Removed Lines]",
          "357:  data->st_size = *vallen = sbuf.st_size;",
          "367:  n = pread(data->fd, *val, sbuf.st_size, 0);",
          "370:  n = read(data->fd, *val, sbuf.st_size);",
          "",
          "[Added Lines]",
          "357:  data->st_size = sbuf.st_size;",
          "367:  n = pread(data->fd, (*val)->val, (*val)->len, 0);",
          "370:  n = read(data->fd, (*val)->val, (*val)->len);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "376:   } else {",
          "377:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"read returned less bytes than requested\");",
          "378:   }",
          "380:   return FAILURE;",
          "381:  }",
          "",
          "[Removed Lines]",
          "379:   efree(*val);",
          "",
          "[Added Lines]",
          "379:   STR_RELEASE(*val);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "388:  long n;",
          "389:  PS_FILES_DATA;",
          "392:  if (data->fd < 0) {",
          "393:   return FAILURE;",
          "394:  }",
          "399:   php_ignore_value(ftruncate(data->fd, 0));",
          "400:  }",
          "402: #if defined(HAVE_PWRITE)",
          "404: #else",
          "405:  lseek(data->fd, 0, SEEK_SET);",
          "407: #endif",
          "410:   if (n == -1) {",
          "411:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"write failed: %s (%d)\", strerror(errno), errno);",
          "412:   } else {",
          "",
          "[Removed Lines]",
          "391:  ps_files_open(data, key TSRMLS_CC);",
          "398:  if (vallen < (int)data->st_size) {",
          "403:  n = pwrite(data->fd, val, vallen, 0);",
          "406:  n = write(data->fd, val, vallen);",
          "409:  if (n != vallen) {",
          "",
          "[Added Lines]",
          "391:  ps_files_open(data, key->val TSRMLS_CC);",
          "398:  if (val->len < (int)data->st_size) {",
          "403:  n = pwrite(data->fd, val->val, val->len, 0);",
          "406:  n = write(data->fd, val->val, val->len);",
          "409:  if (n != val->len) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "423:  char buf[MAXPATHLEN];",
          "424:  PS_FILES_DATA;",
          "427:   return FAILURE;",
          "428:  }",
          "",
          "[Removed Lines]",
          "426:  if (!ps_files_path_create(buf, sizeof(buf), data, key)) {",
          "",
          "[Added Lines]",
          "426:  if (!ps_files_path_create(buf, sizeof(buf), data, key->val)) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "460: PS_CREATE_SID_FUNC(files)",
          "461: {",
          "463:  int maxfail = 3;",
          "464:  PS_FILES_DATA;",
          "466:  do {",
          "470:    if (sid) {",
          "472:     sid = NULL;",
          "473:    }",
          "474:    if (!(maxfail--)) {",
          "",
          "[Removed Lines]",
          "462:  char *sid;",
          "467:   sid = php_session_create_id((void **)&data, newlen TSRMLS_CC);",
          "469:   if (data && ps_files_key_exists(data, sid TSRMLS_CC) == SUCCESS) {",
          "471:     efree(sid);",
          "",
          "[Added Lines]",
          "462:  zend_string *sid;",
          "467:   sid = php_session_create_id(&data TSRMLS_C);",
          "469:   if (data && ps_files_key_exists(data, sid? sid->val : NULL TSRMLS_CC) == SUCCESS) {",
          "471:     STR_RELEASE(sid);",
          "",
          "---------------"
        ],
        "ext/session/mod_user.c||ext/session/mod_user.c": [
          "File: ext/session/mod_user.c -> ext/session/mod_user.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #define SESS_ZVAL_LONG(val, a)      \\",
          "30: {             \\",
          "32:  ZVAL_LONG(a, val);        \\",
          "33: }",
          "",
          "[Removed Lines]",
          "31:  MAKE_STD_ZVAL(a);        \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41: #define SESS_ZVAL_STRINGN(vl, ln, a)    \\",
          "42: {             \\",
          "45: }",
          "48: {",
          "49:  int i;",
          "58:  for (i = 0; i < argc; i++) {",
          "59:   zval_ptr_dtor(&argv[i]);",
          "60:  }",
          "63: }",
          "65: #define STDVARS        \\",
          "67:  int ret = FAILURE",
          "69: #define PSF(a) PS(mod_user_names).name.ps_##a",
          "71: #define FINISH        \\",
          "75:   zval_ptr_dtor(&retval);    \\",
          "76:  }          \\",
          "77:  return ret",
          "79: PS_OPEN_FUNC(user)",
          "80: {",
          "82:  STDVARS;",
          "85:   php_error_docref(NULL TSRMLS_CC, E_WARNING,",
          "86:    \"user session functions not defined\");",
          "88:   return FAILURE;",
          "89:  }",
          "95:  PS(mod_user_implemented) = 1;",
          "97:  FINISH;",
          "",
          "[Removed Lines]",
          "43:  MAKE_STD_ZVAL(a);        \\",
          "44:  ZVAL_STRINGL(a, vl, ln, 1);      \\",
          "47: static zval *ps_call_handler(zval *func, int argc, zval **argv TSRMLS_DC)",
          "50:  zval *retval = NULL;",
          "52:  MAKE_STD_ZVAL(retval);",
          "53:  if (call_user_function(EG(function_table), NULL, func, retval, argc, argv TSRMLS_CC) == FAILURE) {",
          "54:   zval_ptr_dtor(&retval);",
          "55:   retval = NULL;",
          "56:  }",
          "62:  return retval;",
          "66:  zval *retval = NULL;     \\",
          "72:  if (retval) {       \\",
          "73:   convert_to_long(retval);   \\",
          "74:   ret = Z_LVAL_P(retval);    \\",
          "81:  zval *args[2];",
          "84:  if (PSF(open) == NULL) {",
          "91:  SESS_ZVAL_STRING((char*)save_path, args[0]);",
          "92:  SESS_ZVAL_STRING((char*)session_name, args[1]);",
          "94:  retval = ps_call_handler(PSF(open), 2, args TSRMLS_CC);",
          "",
          "[Added Lines]",
          "42:  ZVAL_STRINGL(a, vl, ln);      \\",
          "45: #define SESS_ZVAL_STR(vl, a)      \\",
          "46: {             \\",
          "47:  ZVAL_STR(a, STR_COPY(vl));      \\",
          "48: }",
          "50: static void ps_call_handler(zval *func, int argc, zval *argv, zval *retval TSRMLS_DC)",
          "53:  call_user_function(EG(function_table), NULL, func, retval, argc, argv TSRMLS_CC);",
          "60:  zval retval;       \\",
          "66:  if (!ZVAL_IS_UNDEF(&retval)) {   \\",
          "67:   convert_to_long(&retval);   \\",
          "68:   ret = Z_LVAL(retval);    \\",
          "75:  zval args[2];",
          "78:  if (ZVAL_IS_UNDEF(&PSF(open))) {",
          "85:  SESS_ZVAL_STRING((char*)save_path, &args[0]);",
          "86:  SESS_ZVAL_STRING((char*)session_name, &args[1]);",
          "88:  ps_call_handler(&PSF(open), 2, args, &retval TSRMLS_CC);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "108:  }",
          "110:  zend_try {",
          "112:  } zend_catch {",
          "113:   bailout = 1;",
          "114:  } zend_end_try();",
          "",
          "[Removed Lines]",
          "111:   retval = ps_call_handler(PSF(close), 0, NULL TSRMLS_CC);",
          "",
          "[Added Lines]",
          "105:   ps_call_handler(&PSF(close), 0, NULL, &retval TSRMLS_CC);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "116:  PS(mod_user_implemented) = 0;",
          "118:  if (bailout) {",
          "120:    zval_ptr_dtor(&retval);",
          "121:   }",
          "122:   zend_bailout();",
          "",
          "[Removed Lines]",
          "119:   if (retval) {",
          "",
          "[Added Lines]",
          "113:   if (!ZVAL_IS_UNDEF(&retval)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "128: PS_READ_FUNC(user)",
          "129: {",
          "131:  STDVARS;",
          "141:    ret = SUCCESS;",
          "142:   }",
          "143:   zval_ptr_dtor(&retval);",
          "",
          "[Removed Lines]",
          "130:  zval *args[1];",
          "133:  SESS_ZVAL_STRING((char*)key, args[0]);",
          "135:  retval = ps_call_handler(PSF(read), 1, args TSRMLS_CC);",
          "137:  if (retval) {",
          "138:   if (Z_TYPE_P(retval) == IS_STRING) {",
          "",
          "[Added Lines]",
          "124:  zval args[1];",
          "127:  SESS_ZVAL_STR(key, &args[0]);",
          "129:  ps_call_handler(&PSF(read), 1, args, &retval TSRMLS_CC);",
          "131:  if (!ZVAL_IS_UNDEF(&retval)) {",
          "132:   if (Z_TYPE(retval) == IS_STRING) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "149: PS_WRITE_FUNC(user)",
          "150: {",
          "152:  STDVARS;",
          "159:  FINISH;",
          "160: }",
          "162: PS_DESTROY_FUNC(user)",
          "163: {",
          "165:  STDVARS;",
          "171:  FINISH;",
          "172: }",
          "174: PS_GC_FUNC(user)",
          "175: {",
          "177:  STDVARS;",
          "183:  FINISH;",
          "184: }",
          "",
          "[Removed Lines]",
          "151:  zval *args[2];",
          "154:  SESS_ZVAL_STRING((char*)key, args[0]);",
          "155:  SESS_ZVAL_STRINGN((char*)val, vallen, args[1]);",
          "157:  retval = ps_call_handler(PSF(write), 2, args TSRMLS_CC);",
          "164:  zval *args[1];",
          "167:  SESS_ZVAL_STRING((char*)key, args[0]);",
          "169:  retval = ps_call_handler(PSF(destroy), 1, args TSRMLS_CC);",
          "176:  zval *args[1];",
          "179:  SESS_ZVAL_LONG(maxlifetime, args[0]);",
          "181:  retval = ps_call_handler(PSF(gc), 1, args TSRMLS_CC);",
          "",
          "[Added Lines]",
          "144:  zval args[2];",
          "147:  SESS_ZVAL_STR(key, &args[0]);",
          "148:  SESS_ZVAL_STR(val, &args[1]);",
          "150:  ps_call_handler(&PSF(write), 2, args, &retval TSRMLS_CC);",
          "157:  zval args[1];",
          "160:  SESS_ZVAL_STR(key, &args[0]);",
          "162:  ps_call_handler(&PSF(destroy), 1, args, &retval TSRMLS_CC);",
          "169:  zval args[1];",
          "172:  SESS_ZVAL_LONG(maxlifetime, &args[0]);",
          "174:  ps_call_handler(&PSF(gc), 1, args, &retval TSRMLS_CC);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "186: PS_CREATE_SID_FUNC(user)",
          "187: {",
          "198:    }",
          "199:    zval_ptr_dtor(&retval);",
          "202:    php_error_docref(NULL TSRMLS_CC, E_ERROR, \"No session id returned by function\");",
          "203:    return NULL;",
          "204:   }",
          "",
          "[Removed Lines]",
          "189:  if (PSF(create_sid) != NULL) {",
          "190:   char *id = NULL;",
          "191:   zval *retval = NULL;",
          "193:   retval = ps_call_handler(PSF(create_sid), 0, NULL TSRMLS_CC);",
          "195:   if (retval) {",
          "196:    if (Z_TYPE_P(retval) == IS_STRING) {",
          "197:     id = estrndup(Z_STRVAL_P(retval), Z_STRLEN_P(retval));",
          "200:   }",
          "201:   else {",
          "",
          "[Added Lines]",
          "182:  if (!ZVAL_IS_UNDEF(&PSF(create_sid))) {",
          "183:   zend_string *id = NULL;",
          "184:   zval retval;",
          "186:   ps_call_handler(&PSF(create_sid), 0, NULL, &retval TSRMLS_CC);",
          "188:   if (!ZVAL_IS_UNDEF(&retval)) {",
          "189:    if (Z_TYPE(retval) == IS_STRING) {",
          "190:     id = STR_COPY(Z_STR(retval));",
          "193:   } else {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "212:  }",
          "216: }",
          "",
          "[Removed Lines]",
          "215:  return php_session_create_id(mod_data, newlen TSRMLS_CC);",
          "",
          "[Added Lines]",
          "207:  return php_session_create_id(mod_data TSRMLS_CC);",
          "",
          "---------------"
        ],
        "ext/session/mod_user_class.c||ext/session/mod_user_class.c": [
          "File: ext/session/mod_user_class.c -> ext/session/mod_user_class.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "72: PHP_METHOD(SessionHandler, read)",
          "73: {",
          "77:  PS_SANITY_CHECK_IS_OPEN;",
          "80:   return;",
          "81:  }",
          "84:   RETVAL_FALSE;",
          "85:   return;",
          "86:  }",
          "91: }",
          "",
          "[Removed Lines]",
          "74:  char *key, *val;",
          "75:  int key_len, val_len;",
          "79:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &key, &key_len) == FAILURE) {",
          "83:  if (PS(default_mod)->s_read(&PS(mod_data), key, &val, &val_len TSRMLS_CC) == FAILURE) {",
          "88:  RETVAL_STRINGL(val, val_len);",
          "89:  efree(val);",
          "90:  return;",
          "",
          "[Added Lines]",
          "74:  zend_string *val;",
          "75:  zend_string *key;",
          "79:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"S\", &key) == FAILURE) {",
          "83:  if (PS(default_mod)->s_read(&PS(mod_data), key, &val TSRMLS_CC) == FAILURE) {",
          "88:  RETURN_STR(val);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96: PHP_METHOD(SessionHandler, write)",
          "97: {",
          "101:  PS_SANITY_CHECK_IS_OPEN;",
          "104:   return;",
          "105:  }",
          "108: }",
          "",
          "[Removed Lines]",
          "98:  char *key, *val;",
          "99:  int key_len, val_len;",
          "103:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"ss\", &key, &key_len, &val, &val_len) == FAILURE) {",
          "107:  RETVAL_BOOL(SUCCESS == PS(default_mod)->s_write(&PS(mod_data), key, val, val_len TSRMLS_CC));",
          "",
          "[Added Lines]",
          "96:  zend_string *key, *val;",
          "100:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"SS\", &key, &val) == FAILURE) {",
          "104:  RETURN_BOOL(SUCCESS == PS(default_mod)->s_write(&PS(mod_data), key, val TSRMLS_CC));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "113: PHP_METHOD(SessionHandler, destroy)",
          "114: {",
          "118:  PS_SANITY_CHECK_IS_OPEN;",
          "121:   return;",
          "122:  }",
          "125: }",
          "",
          "[Removed Lines]",
          "115:  char *key;",
          "116:  int key_len;",
          "120:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &key, &key_len) == FAILURE) {",
          "124:  RETVAL_BOOL(SUCCESS == PS(default_mod)->s_destroy(&PS(mod_data), key TSRMLS_CC));",
          "",
          "[Added Lines]",
          "112:  zend_string *key;",
          "116:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"S\", &key) == FAILURE) {",
          "120:  RETURN_BOOL(SUCCESS == PS(default_mod)->s_destroy(&PS(mod_data), key TSRMLS_CC));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "138:   return;",
          "139:  }",
          "142: }",
          "",
          "[Removed Lines]",
          "141:  RETVAL_BOOL(SUCCESS == PS(default_mod)->s_gc(&PS(mod_data), maxlifetime, &nrdels TSRMLS_CC));",
          "",
          "[Added Lines]",
          "137:  RETURN_BOOL(SUCCESS == PS(default_mod)->s_gc(&PS(mod_data), maxlifetime, &nrdels TSRMLS_CC));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "147: PHP_METHOD(SessionHandler, create_sid)",
          "148: {",
          "151:  if (zend_parse_parameters_none() == FAILURE) {",
          "152:      return;",
          "153:  }",
          "160: }",
          "",
          "[Removed Lines]",
          "149:  char *id;",
          "155:  id = PS(default_mod)->s_create_sid(&PS(mod_data), NULL TSRMLS_CC);",
          "158:  RETVAL_STRING(id);",
          "159:  efree(id);",
          "",
          "[Added Lines]",
          "145:  zend_string *id;",
          "151:  id = PS(default_mod)->s_create_sid(&PS(mod_data) TSRMLS_CC);",
          "153:  RETURN_STR(id);",
          "",
          "---------------"
        ],
        "ext/session/php_session.h||ext/session/php_session.h": [
          "File: ext/session/php_session.h -> ext/session/php_session.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #define PS_OPEN_ARGS void **mod_data, const char *save_path, const char *session_name TSRMLS_DC",
          "36: #define PS_CLOSE_ARGS void **mod_data TSRMLS_DC",
          "40: #define PS_GC_ARGS void **mod_data, int maxlifetime, int *nrdels TSRMLS_DC",
          "41: #define PS_CREATE_SID_ARGS void **mod_data TSRMLS_DC",
          "",
          "[Removed Lines]",
          "37: #define PS_READ_ARGS void **mod_data, const zend_string *key, char **val, int *vallen TSRMLS_DC",
          "38: #define PS_WRITE_ARGS void **mod_data, const zend_string *key, const char *val, const int vallen TSRMLS_DC",
          "39: #define PS_DESTROY_ARGS void **mod_data, const zend_string *key TSRMLS_DC",
          "",
          "[Added Lines]",
          "37: #define PS_READ_ARGS void **mod_data, zend_string *key, zend_string **val TSRMLS_DC",
          "38: #define PS_WRITE_ARGS void **mod_data, zend_string *key, zend_string *val TSRMLS_DC",
          "39: #define PS_DESTROY_ARGS void **mod_data, zend_string *key TSRMLS_DC",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "221: PHPAPI void session_adapt_url(const char *, size_t, char **, size_t * TSRMLS_DC);",
          "227: PHPAPI int php_session_register_module(ps_module *);",
          "",
          "[Removed Lines]",
          "223: PHPAPI void php_add_session_var(char *name, size_t namelen TSRMLS_DC);",
          "224: PHPAPI void php_set_session_var(char *name, size_t namelen, zval *state_val, php_unserialize_data_t *var_hash TSRMLS_DC);",
          "225: PHPAPI zval *php_get_session_var(char *name, size_t namelen TSRMLS_DC);",
          "",
          "[Added Lines]",
          "223: PHPAPI void php_add_session_var(zend_string *name TSRMLS_DC);",
          "224: PHPAPI void php_set_session_var(zend_string *name, zval *state_val, php_unserialize_data_t *var_hash TSRMLS_DC);",
          "225: PHPAPI zval *php_get_session_var(zend_string *name TSRMLS_DC);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "239: PHPAPI int php_session_valid_key(const char *key);",
          "240: PHPAPI void php_session_reset_id(TSRMLS_D);",
          "244: } while (0)",
          "252: } while (0)",
          "258:  zval *struc;",
          "275:  } while(0)",
          "277: PHPAPI ZEND_EXTERN_MODULE_GLOBALS(ps)",
          "",
          "[Removed Lines]",
          "242: #define PS_ADD_VARL(name,namelen) do {          \\",
          "243:  php_add_session_var(name, namelen TSRMLS_CC);       \\",
          "246: #define PS_ADD_VAR(name) PS_ADD_VARL(name, strlen(name))",
          "248: #define PS_DEL_VARL(name,namelen) do {          \\",
          "249:  if (PS(http_session_vars)) {           \\",
          "250:   zend_hash_del(Z_ARRVAL_P(PS(http_session_vars)), name, namelen+1); \\",
          "251:  }                  \\",
          "255: #define PS_ENCODE_VARS            \\",
          "256:  zend_string *key;           \\",
          "257:  ulong num_key;            \\",
          "260: #define PS_ENCODE_LOOP(code) do {         \\",
          "261:   HashTable *_ht = Z_ARRVAL(PS(http_session_vars));   \\",
          "262:   int key_type;            \\",
          "263:                  \\",
          "264:   for (zend_hash_internal_pointer_reset(_ht);     \\",
          "265:     (key_type = zend_hash_get_current_key_ex(_ht, &key, &num_key, 0, NULL)) != HASH_KEY_NON_EXISTENT; \\",
          "266:      zend_hash_move_forward(_ht)) {     \\",
          "267:    if (key_type == HASH_KEY_IS_LONG) {      \\",
          "268:     php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"Skipping numeric key %ld\", num_key); \\",
          "269:     continue;           \\",
          "270:    }              \\",
          "271:    if ((struc = php_get_session_var(key->val, key->len TSRMLS_CC))) { \\",
          "272:     code;             \\",
          "273:    }               \\",
          "274:   }               \\",
          "",
          "[Added Lines]",
          "242: #define PS_ADD_VARL(name) do {          \\",
          "243:  php_add_session_var(name TSRMLS_CC);       \\",
          "246: #define PS_ADD_VAR(name) PS_ADD_VARL(name)",
          "248: #define PS_DEL_VARL(name) do {          \\",
          "249:  if (!ZVAL_IS_NULL(&PS(http_session_vars))) {     \\",
          "250:   zend_hash_del(Z_ARRVAL(PS(http_session_vars)), name);  \\",
          "251:  }                \\",
          "255: #define PS_ENCODE_VARS             \\",
          "256:  zend_string *key;            \\",
          "257:  ulong num_key;             \\",
          "260: #define PS_ENCODE_LOOP(code) do {          \\",
          "261:   HashTable *_ht = Z_ARRVAL_P(Z_REFVAL(PS(http_session_vars))); \\",
          "262:   int key_type;             \\",
          "263:                   \\",
          "264:   for (zend_hash_internal_pointer_reset(_ht);      \\",
          "265:     (key_type = zend_hash_get_current_key_ex(_ht, &key,  \\",
          "266:       &num_key, 0, NULL)) != HASH_KEY_NON_EXISTENT;  \\",
          "267:      zend_hash_move_forward(_ht)) {      \\",
          "268:    if (key_type == HASH_KEY_IS_LONG) {       \\",
          "269:     php_error_docref(NULL TSRMLS_CC, E_NOTICE,    \\",
          "270:       \"Skipping numeric key %ld\", num_key);   \\",
          "271:     continue;            \\",
          "272:    }               \\",
          "273:    if ((struc = php_get_session_var(key TSRMLS_CC))) {   \\",
          "274:     code;              \\",
          "275:    }                \\",
          "276:   }                \\",
          "",
          "---------------"
        ],
        "ext/session/session.c||ext/session/session.c": [
          "File: ext/session/session.c -> ext/session/session.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "80: #define IF_SESSION_VARS() \\",
          "83: #define SESSION_CHECK_ACTIVE_STATE \\",
          "84:  if (PS(session_status) == php_session_active) { \\",
          "",
          "[Removed Lines]",
          "81:  if (Z_TYPE(PS(http_session_vars)) == IS_ARRAY)",
          "",
          "[Added Lines]",
          "81:  if (Z_ISREF_P(&PS(http_session_vars)) && Z_TYPE_P(Z_REFVAL(PS(http_session_vars))) == IS_ARRAY)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "140: }",
          "144: {",
          "145:  zval *sym_track = NULL;",
          "147:  IF_SESSION_VARS() {",
          "149:  } else {",
          "150:   return;",
          "151:  }",
          "",
          "[Removed Lines]",
          "148:   sym_track = zend_hash_str_find(Z_ARRVAL(PS(http_session_vars)), name, namelen);",
          "",
          "[Added Lines]",
          "148:   sym_track = zend_hash_find(Z_ARRVAL_P(Z_REFVAL(PS(http_session_vars))), name);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "154:   zval empty_var;",
          "156:   ZVAL_NULL(&empty_var);",
          "158:  }",
          "159: }",
          "163: {",
          "164:  IF_SESSION_VARS() {",
          "166:  }",
          "167: }",
          "171: {",
          "172:  IF_SESSION_VARS() {",
          "174:  }",
          "175:  return NULL;",
          "176: }",
          "",
          "[Removed Lines]",
          "157:   ZEND_SET_SYMBOL_WITH_LENGTH(Z_ARRVAL(PS(http_session_vars)), name, namelen, &empty_var, 1, 0);",
          "165:   zend_set_hash_symbol(state_val, name, namelen, Z_ISREF_P(state_val), 1, Z_ARRVAL(PS(http_session_vars)));",
          "173:   return zend_hash_str_find(Z_ARRVAL(PS(http_session_vars)), name, namelen);",
          "",
          "[Added Lines]",
          "157:   ZEND_SET_SYMBOL_WITH_LENGTH(Z_ARRVAL_P(Z_REFVAL(PS(http_session_vars))), name->val, name->len, &empty_var, 1, 0);",
          "165:   zend_set_hash_symbol(state_val, name->val, name->len, Z_ISREF_P(state_val), 1, Z_ARRVAL_P(Z_REFVAL(PS(http_session_vars))));",
          "173:   return zend_hash_find(Z_ARRVAL_P(Z_REFVAL(PS(http_session_vars))), name);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "180: {",
          "181:  zend_string *var_name = STR_INIT(\"_SESSION\", sizeof(\"_SESSION\") - 1, 0);",
          "183:  zend_delete_global_variable(var_name TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "181:  zval session_vars;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "187:   zval_ptr_dtor(&PS(http_session_vars));",
          "188:  }",
          "192:  ZEND_SET_GLOBAL_VAR_WITH_LENGTH(\"_SESSION\", sizeof(\"_SESSION\") - 1, &PS(http_session_vars), 2, 1);",
          "193: }",
          "",
          "[Removed Lines]",
          "190:  array_init(&PS(http_session_vars));",
          "",
          "[Added Lines]",
          "191:  array_init(&session_vars);",
          "192:  ZVAL_NEW_REF(&PS(http_session_vars), &session_vars);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "457: {",
          "461:  if (!PS(mod)) {",
          "462:   php_error_docref(NULL TSRMLS_CC, E_ERROR, \"No storage module chosen - failed to initialize session\");",
          "",
          "[Removed Lines]",
          "458:  char *val = NULL;",
          "459:  int vallen;",
          "",
          "[Added Lines]",
          "460:  zend_string *val = NULL;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "491:  php_session_track_init(TSRMLS_C);",
          "",
          "[Removed Lines]",
          "492:  if (PS(mod)->s_read(&PS(mod_data), PS(id), &val, &vallen TSRMLS_CC) == FAILURE) {",
          "",
          "[Added Lines]",
          "493:  if (PS(mod)->s_read(&PS(mod_data), PS(id), &val TSRMLS_CC) == FAILURE) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "508:   PHP_MD5Init(&context);",
          "510:   PHP_MD5Final(PS(session_data_hash), &context);",
          "514:  } else {",
          "515:   memset(PS(session_data_hash),'\\0', 16);",
          "516:  }",
          "",
          "[Removed Lines]",
          "509:   PHP_MD5Update(&context, val, vallen);",
          "512:   php_session_decode(val, vallen TSRMLS_CC);",
          "513:   efree(val);",
          "",
          "[Added Lines]",
          "510:   PHP_MD5Update(&context, val->val, val->len);",
          "513:   php_session_decode(val->val, val->len TSRMLS_CC);",
          "514:   STR_RELEASE(val);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "543:     PHP_MD5Final(digest, &context);",
          "545:     if (memcmp(digest, PS(session_data_hash), 16)) {",
          "547:     } else {",
          "548:      ret = SUCCESS;",
          "549:     }",
          "550:     STR_RELEASE(val);",
          "551:    } else {",
          "553:    }",
          "554:   }",
          "",
          "[Removed Lines]",
          "546:      ret = PS(mod)->s_write(&PS(mod_data), PS(id), val->val, val->len TSRMLS_CC);",
          "552:     ret = PS(mod)->s_write(&PS(mod_data), PS(id), \"\", 0 TSRMLS_CC);",
          "",
          "[Added Lines]",
          "547:      ret = PS(mod)->s_write(&PS(mod_data), PS(id), val TSRMLS_CC);",
          "553:     ret = PS(mod)->s_write(&PS(mod_data), PS(id), STR_EMPTY_ALLOC() TSRMLS_CC);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "850:  php_serialize_data_t var_hash;",
          "852:  PHP_VAR_SERIALIZE_INIT(var_hash);",
          "854:  PHP_VAR_SERIALIZE_DESTROY(var_hash);",
          "855:  return buf.s;",
          "856: }",
          "",
          "[Removed Lines]",
          "853:  php_var_serialize(&buf, &PS(http_session_vars), &var_hash TSRMLS_CC);",
          "",
          "[Added Lines]",
          "854:  php_var_serialize(&buf, Z_REFVAL(PS(http_session_vars)), &var_hash TSRMLS_CC);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "862:  zval session_vars;",
          "863:  php_unserialize_data_t var_hash;",
          "865:  PHP_VAR_UNSERIALIZE_INIT(var_hash);",
          "866:  php_var_unserialize(&session_vars, &val, endptr, &var_hash TSRMLS_CC);",
          "867:  PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "866:  ZVAL_NULL(&session_vars);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "869:   zval_ptr_dtor(&PS(http_session_vars));",
          "870:  }",
          "871:  if (Z_TYPE(session_vars) == IS_NULL) {",
          "876:  ZEND_SET_GLOBAL_VAR_WITH_LENGTH(\"_SESSION\", sizeof(\"_SESSION\") - 1, &PS(http_session_vars), 2, 1);",
          "877:  return SUCCESS;",
          "878: }",
          "",
          "[Removed Lines]",
          "872:   array_init(&PS(http_session_vars));",
          "873:  } else {",
          "874:   ZVAL_COPY_VALUE(&PS(http_session_vars), &session_vars);",
          "875:  }",
          "",
          "[Added Lines]",
          "874:   array_init(&session_vars);",
          "875:  }",
          "876:  ZVAL_NEW_REF(&PS(http_session_vars), &session_vars);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "912: {",
          "913:  const char *p;",
          "915:  const char *endptr = val + vallen;",
          "916:  zval current;",
          "918:  int has_value;",
          "919:  php_unserialize_data_t var_hash;",
          "921:  PHP_VAR_UNSERIALIZE_INIT(var_hash);",
          "",
          "[Removed Lines]",
          "914:  char *name;",
          "917:  int namelen;",
          "",
          "[Added Lines]",
          "918:  int namelen;",
          "919:  zend_string *name;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "931:   has_value = *p & PS_BIN_UNDEF ? 0 : 1;",
          "935:   p += namelen + 1;",
          "938:    if ((Z_TYPE_P(tmp) == IS_ARRAY && Z_ARRVAL_P(tmp) == &EG(symbol_table).ht) || tmp == &PS(http_session_vars)) {",
          "939:     efree(name);",
          "940:     continue;",
          "",
          "[Removed Lines]",
          "933:   name = estrndup(p + 1, namelen);",
          "937:   if ((tmp = zend_hash_str_find(&EG(symbol_table).ht, name, namelen))) {",
          "",
          "[Added Lines]",
          "934:   name = STR_INIT(p + 1, namelen, 0);",
          "938:   if ((tmp = zend_hash_find(&EG(symbol_table).ht, name))) {",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "942:   }",
          "944:   if (has_value) {",
          "945:    if (php_var_unserialize(&current, (const unsigned char **) &p, (const unsigned char *) endptr, &var_hash TSRMLS_CC)) {",
          "947:    }",
          "948:    zval_ptr_dtor(&current);",
          "949:   }",
          "952:  }",
          "954:  PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
          "",
          "[Removed Lines]",
          "946:     php_set_session_var(name, namelen, &current, &var_hash  TSRMLS_CC);",
          "950:   PS_ADD_VARL(name, namelen);",
          "951:   efree(name);",
          "",
          "[Added Lines]",
          "946:    ZVAL_NULL(&current);",
          "948:     php_set_session_var(name, &current, &var_hash  TSRMLS_CC);",
          "952:   PS_ADD_VARL(name);",
          "953:   STR_RELEASE(name);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "995: {",
          "996:  const char *p, *q;",
          "998:  const char *endptr = val + vallen;",
          "1001:  int has_value;",
          "1002:  php_unserialize_data_t var_hash;",
          "1004:  PHP_VAR_UNSERIALIZE_INIT(var_hash);",
          "1006:  p = val;",
          "1008:  while (p < endptr) {",
          "1009:   zval *tmp;",
          "1010:   q = p;",
          "",
          "[Removed Lines]",
          "997:  char *name;",
          "999:  zval current;",
          "1000:  int namelen;",
          "",
          "[Added Lines]",
          "1000:  zval stack, *current = NULL;",
          "1002:  int namelen;",
          "1003:  zend_string *name;",
          "1010:  array_init(&stack);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1019:   }",
          "1021:   namelen = q - p;",
          "1023:   q++;",
          "1026:    if ((Z_TYPE_P(tmp) == IS_ARRAY && Z_ARRVAL_P(tmp) == &EG(symbol_table).ht) || tmp == &PS(http_session_vars)) {",
          "1027:     goto skip;",
          "1028:    }",
          "1029:   }",
          "1031:   if (has_value) {",
          "1034:    }",
          "1036:   }",
          "1038: skip:",
          "1041:   p = q;",
          "1042:  }",
          "1043: break_outer_loop:",
          "1045:  PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
          "1047:  return SUCCESS;",
          "1048: }",
          "",
          "[Removed Lines]",
          "1022:   name = estrndup(p, namelen);",
          "1025:   if ((tmp = zend_hash_str_find(&EG(symbol_table).ht, name, namelen))) {",
          "1032:    if (php_var_unserialize(&current, (const unsigned char **) &q, (const unsigned char *) endptr, &var_hash TSRMLS_CC)) {",
          "1033:     php_set_session_var(name, namelen, &current, &var_hash  TSRMLS_CC);",
          "1035:    zval_ptr_dtor(&current);",
          "1037:   PS_ADD_VARL(name, namelen);",
          "1039:   efree(name);",
          "",
          "[Added Lines]",
          "1025:   name = STR_INIT(p, namelen, 0);",
          "1028:   if ((tmp = zend_hash_find(&EG(symbol_table).ht, name))) {",
          "1035:    zval dummy;",
          "1036:    ZVAL_NULL(&dummy);",
          "1038:    current = zend_hash_next_index_insert(Z_ARRVAL(stack), &dummy);",
          "1039:    if (php_var_unserialize(current, (const unsigned char **) &q, (const unsigned char *) endptr, &var_hash TSRMLS_CC)) {",
          "1040:     php_set_session_var(name, current, &var_hash TSRMLS_CC);",
          "1043:   PS_ADD_VARL(name);",
          "1045:   STR_RELEASE(name);",
          "1052:  zval_ptr_dtor(&stack);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1344: }",
          "",
          "[Removed Lines]",
          "1343:  sapi_add_header_ex(ncookie.s->val, ncookie.s->len, 0, 0 TSRMLS_CC);",
          "",
          "[Added Lines]",
          "1350:  sapi_add_header_ex(estrndup(ncookie.s->val, ncookie.s->len), ncookie.s->len, 0, 0 TSRMLS_CC);",
          "1351:  smart_str_free(&ncookie);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1404:   smart_str_appends(&var, PS(id)->val);",
          "1405:   smart_str_0(&var);",
          "1406:   REGISTER_STRINGL_CONSTANT(\"SID\", var.s->val, var.s->len, 0);",
          "1407:  } else {",
          "1408:   REGISTER_STRINGL_CONSTANT(\"SID\", \"\", 0, 0);",
          "1409:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1415:   smart_str_free(&var);",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2101:   HashTable *ht_sess_var;",
          "2103:   SEPARATE_ZVAL_IF_NOT_REF(&PS(http_session_vars));",
          "2107:   zend_hash_clean(ht_sess_var);",
          "",
          "[Removed Lines]",
          "2104:   ht_sess_var = Z_ARRVAL(PS(http_session_vars));",
          "",
          "[Added Lines]",
          "2113:   ht_sess_var = Z_ARRVAL_P(Z_REFVAL(PS(http_session_vars)));",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2459: {",
          "2460:  zend_class_entry ce;",
          "",
          "[Removed Lines]",
          "2462:  zend_string *sess_var = STR_INIT(\"_SESSION\", sizeof(\"_SESSION\") - 1, 0);",
          "2463:  zend_register_auto_global(sess_var, 0, NULL TSRMLS_CC);",
          "2464:  STR_RELEASE(sess_var);",
          "",
          "[Added Lines]",
          "2471:  zend_register_auto_global(STR_INIT(\"_SESSION\", sizeof(\"_SESSION\") - 1, 1), 0, NULL TSRMLS_CC);",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "2617: {",
          "2618:  zval *progress_ary, *cancel_upload;",
          "2621:   return 0;",
          "2622:  }",
          "2623:  if (Z_TYPE_P(progress_ary) != IS_ARRAY) {",
          "",
          "[Removed Lines]",
          "2620:  if ((progress_ary = zend_symtable_find(Z_ARRVAL(PS(http_session_vars)), progress->key.s)) == NULL) {",
          "",
          "[Added Lines]",
          "2627:  if ((progress_ary = zend_symtable_find(Z_ARRVAL_P(Z_REFVAL(PS(http_session_vars))), progress->key.s)) == NULL) {",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "2654:  PS(session_status) = php_session_active;",
          "2655:  IF_SESSION_VARS() {",
          "2656:   progress->cancel_upload |= php_check_cancel_upload(progress TSRMLS_CC);",
          "2658:  }",
          "2659:  php_session_flush(TSRMLS_C);",
          "",
          "[Removed Lines]",
          "2657:   ZEND_SET_SYMBOL_WITH_LENGTH(Z_ARRVAL(PS(http_session_vars)), progress->key.s->val, progress->key.s->len, &progress->data, 2, 0);",
          "",
          "[Added Lines]",
          "2664:   ZEND_SET_SYMBOL_WITH_LENGTH(Z_ARRVAL_P(Z_REFVAL(PS(http_session_vars))), progress->key.s->val, progress->key.s->len, &progress->data, 2, 0);",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "2664:  php_session_initialize(TSRMLS_C);",
          "2665:  PS(session_status) = php_session_active;",
          "2666:  IF_SESSION_VARS() {",
          "2668:  }",
          "2669:  php_session_flush(TSRMLS_C);",
          "",
          "[Removed Lines]",
          "2667:   zend_hash_del(Z_ARRVAL(PS(http_session_vars)), progress->key.s);",
          "",
          "[Added Lines]",
          "2674:   zend_hash_del(Z_ARRVAL_P(Z_REFVAL(PS(http_session_vars))), progress->key.s);",
          "",
          "---------------"
        ],
        "ext/standard/url_scanner_ex.c||ext/standard/url_scanner_ex.c": [
          "File: ext/standard/url_scanner_ex.c -> ext/standard/url_scanner_ex.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "282:     if (!strncasecmp(ctx->tag.s->val, \"form\", sizeof(\"form\") - 1)) {",
          "283:      doit = 1;",
          "284:     }",
          "286:      char *e, *p = (char *)zend_memnstr(ctx->val.s->val, \"://\", sizeof(\"://\") - 1, ctx->val.s->val + ctx->val.s->len);",
          "287:      if (p) {",
          "288:       e = memchr(p, '/', (ctx->val.s->val + ctx->val.s->len) - p);",
          "",
          "[Removed Lines]",
          "285:     if (doit && ctx->val.s->val && ctx->lookup_data && *ctx->lookup_data) {",
          "",
          "[Added Lines]",
          "285:     if (doit && ctx->val.s && ctx->lookup_data && *ctx->lookup_data) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1067: PHPAPI int php_url_scanner_reset_vars(TSRMLS_D)",
          "1068: {",
          "1072:  return SUCCESS;",
          "1073: }",
          "",
          "[Removed Lines]",
          "1069:  BG(url_adapt_state_ex).form_app.s->len = 0;",
          "1070:  BG(url_adapt_state_ex).url_app.s->len = 0;",
          "",
          "[Added Lines]",
          "1069:  if (BG(url_adapt_state_ex).form_app.s) {",
          "1070:   BG(url_adapt_state_ex).form_app.s->len = 0;",
          "1071:  }",
          "1072:  if (BG(url_adapt_state_ex).url_app.s) {",
          "1073:   BG(url_adapt_state_ex).url_app.s->len = 0;",
          "1074:  }",
          "",
          "---------------"
        ],
        "ext/standard/url_scanner_ex.re||ext/standard/url_scanner_ex.re": [
          "File: ext/standard/url_scanner_ex.re -> ext/standard/url_scanner_ex.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "519: PHPAPI int php_url_scanner_reset_vars(TSRMLS_D)",
          "520: {",
          "524:  return SUCCESS;",
          "525: }",
          "",
          "[Removed Lines]",
          "521:  BG(url_adapt_state_ex).form_app.s->len = 0;",
          "522:  BG(url_adapt_state_ex).url_app.s->len = 0;",
          "",
          "[Added Lines]",
          "521:  if (BG(url_adapt_state_ex).form_app.s) {",
          "522:   BG(url_adapt_state_ex).form_app.s->len = 0;",
          "523:  }",
          "524:  if (BG(url_adapt_state_ex).url_app.s) {",
          "525:   BG(url_adapt_state_ex).url_app.s->len = 0;",
          "526:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ed9d916c28b042d276a28998f92eb7e6cc56025a",
      "candidate_info": {
        "commit_hash": "ed9d916c28b042d276a28998f92eb7e6cc56025a",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/ed9d916c28b042d276a28998f92eb7e6cc56025a",
        "files": [
          "ext/session/tests/bug72681.phpt"
        ],
        "message": "fix test",
        "before_after_code_files": [
          "ext/session/tests/bug72681.phpt||ext/session/tests/bug72681.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/session/tests/bug72681.phpt||ext/session/tests/bug72681.phpt"
          ],
          "candidate": [
            "ext/session/tests/bug72681.phpt||ext/session/tests/bug72681.phpt"
          ]
        }
      },
      "candidate_diff": {
        "ext/session/tests/bug72681.phpt||ext/session/tests/bug72681.phpt": [
          "File: ext/session/tests/bug72681.phpt -> ext/session/tests/bug72681.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: <?php",
          "7: ini_set('session.serialize_handler', 'php');",
          "8: session_start();",
          "10: session_write_close();",
          "11: session_start();",
          "12: var_dump($_SESSION);",
          "",
          "[Removed Lines]",
          "9: $_SESSION['_SESSION'] = 'ryat|O:8:\"stdClass\":0:{}';",
          "",
          "[Added Lines]",
          "9: $GLOBALS['ryat'] = $GLOBALS;",
          "10: $_SESSION['ryat'] = 'ryat|O:8:\"stdClass\":0:{}';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9b1a224d4e994219a6ef1d1d8fdcc1b0598ba3ab",
      "candidate_info": {
        "commit_hash": "9b1a224d4e994219a6ef1d1d8fdcc1b0598ba3ab",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/9b1a224d4e994219a6ef1d1d8fdcc1b0598ba3ab",
        "files": [
          "Zend/zend_API.c",
          "ext/exif/exif.c",
          "ext/gmp/gmp.c",
          "ext/gmp/tests/bug70284.phpt",
          "ext/hash/hash_haval.c",
          "ext/hash/tests/bug70312.phpt",
          "ext/hash/tests/hash_file_basic1.phpt",
          "ext/hash/tests/hash_hmac_basic.phpt",
          "ext/hash/tests/hash_hmac_file_basic.phpt",
          "ext/pcre/php_pcre.c",
          "ext/pcre/tests/bug70345.phpt",
          "ext/session/session.c",
          "ext/session/tests/session_decode_error2.phpt",
          "ext/soap/soap.c",
          "ext/soap/tests/bug70388.phpt",
          "ext/spl/spl_dllist.c",
          "ext/spl/tests/bug70155.phpt",
          "ext/spl/tests/bug70365.phpt",
          "ext/spl/tests/bug70366.phpt",
          "ext/standard/tests/serialize/bug70172.phpt",
          "ext/standard/tests/serialize/bug70172_2.phpt",
          "ext/standard/tests/serialize/bug70219.phpt",
          "ext/standard/var.c",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re",
          "ext/xsl/xsltprocessor.c",
          "ext/zip/php_zip.c",
          "ext/zip/tests/bug70350.phpt"
        ],
        "message": "Merge branch 'PHP-5.6'\n\n* PHP-5.6: (21 commits)\n  fix unit tests\n  update NEWS\n  add NEWS for fixes\n  Improve fix for #70172\n  Fix bug #70312 - HAVAL gives wrong hashes in specific cases\n  fix test\n  add test\n  Fix bug #70366 - use-after-free vulnerability in unserialize() with SplDoublyLinkedList\n  Fix bug #70365 - use-after-free vulnerability in unserialize() with SplObjectStorage\n  Fix bug #70172 - Use After Free Vulnerability in unserialize()\n  Fix bug #70388 - SOAP serialize_function_call() type confusion\n  Fixed bug #70350: ZipArchive::extractTo allows for directory traversal when creating directories\n  Improve fix for #70385\n  Fix bug #70345 (Multiple vulnerabilities related to PCRE functions)\n  Fix bug #70385 (Buffer over-read in exif_read_data with TIFF IFD tag byte value of 32 bytes)\n  Fix bug #70219 (Use after free vulnerability in session deserializer)\n  Fix bug ##70284 (Use after free vulnerability in unserialize() with GMP)\n  Fix for bug #69782\n  Add CVE IDs asigned (post release) to PHP 5.4.43\n  Add CVE IDs asigned to #69085 (PHP 5.4.39)\n  ...\n\nConflicts:\n\text/exif/exif.c\n\text/gmp/gmp.c\n\text/pcre/php_pcre.c\n\text/session/session.c\n\text/session/tests/session_decode_variation3.phpt\n\text/soap/soap.c\n\text/spl/spl_observer.c\n\text/standard/var.c\n\text/standard/var_unserializer.c\n\text/standard/var_unserializer.re\n\text/xsl/xsltprocessor.c",
        "before_after_code_files": [
          "Zend/zend_API.c||Zend/zend_API.c",
          "ext/exif/exif.c||ext/exif/exif.c",
          "ext/gmp/gmp.c||ext/gmp/gmp.c",
          "ext/gmp/tests/bug70284.phpt||ext/gmp/tests/bug70284.phpt",
          "ext/hash/hash_haval.c||ext/hash/hash_haval.c",
          "ext/hash/tests/bug70312.phpt||ext/hash/tests/bug70312.phpt",
          "ext/hash/tests/hash_file_basic1.phpt||ext/hash/tests/hash_file_basic1.phpt",
          "ext/hash/tests/hash_hmac_basic.phpt||ext/hash/tests/hash_hmac_basic.phpt",
          "ext/hash/tests/hash_hmac_file_basic.phpt||ext/hash/tests/hash_hmac_file_basic.phpt",
          "ext/pcre/php_pcre.c||ext/pcre/php_pcre.c",
          "ext/pcre/tests/bug70345.phpt||ext/pcre/tests/bug70345.phpt",
          "ext/session/session.c||ext/session/session.c",
          "ext/session/tests/session_decode_error2.phpt||ext/session/tests/session_decode_error2.phpt",
          "ext/soap/soap.c||ext/soap/soap.c",
          "ext/soap/tests/bug70388.phpt||ext/soap/tests/bug70388.phpt",
          "ext/spl/spl_dllist.c||ext/spl/spl_dllist.c",
          "ext/spl/tests/bug70155.phpt||ext/spl/tests/bug70155.phpt",
          "ext/spl/tests/bug70365.phpt||ext/spl/tests/bug70365.phpt",
          "ext/spl/tests/bug70366.phpt||ext/spl/tests/bug70366.phpt",
          "ext/standard/tests/serialize/bug70172.phpt||ext/standard/tests/serialize/bug70172.phpt",
          "ext/standard/tests/serialize/bug70172_2.phpt||ext/standard/tests/serialize/bug70172_2.phpt",
          "ext/standard/tests/serialize/bug70219.phpt||ext/standard/tests/serialize/bug70219.phpt",
          "ext/standard/var.c||ext/standard/var.c",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re",
          "ext/xsl/xsltprocessor.c||ext/xsl/xsltprocessor.c",
          "ext/zip/php_zip.c||ext/zip/php_zip.c",
          "ext/zip/tests/bug70350.phpt||ext/zip/tests/bug70350.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/session/session.c||ext/session/session.c"
          ],
          "candidate": [
            "ext/session/session.c||ext/session/session.c"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend_API.c||Zend/zend_API.c": [
          "File: Zend/zend_API.c -> Zend/zend_API.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1243: {",
          "1244:     zval *prop, tmp;",
          "1245:     zend_string *key;",
          "1246:     zend_property_info *property_info;",
          "1260:    }",
          "1261:   } else {",
          "1262:    if (!object->properties) {",
          "1263:     rebuild_object_properties(object);",
          "1264:    }",
          "1266:    zval_add_ref(prop);",
          "1267:   }",
          "1268:  } ZEND_HASH_FOREACH_END();",
          "",
          "[Removed Lines]",
          "1248:  ZEND_HASH_FOREACH_STR_KEY_VAL(properties, key, prop) {",
          "1249:   property_info = zend_get_property_info(object->ce, key, 1);",
          "1250:   if (property_info != ZEND_WRONG_PROPERTY_INFO &&",
          "1251:       property_info &&",
          "1252:       (property_info->flags & ZEND_ACC_STATIC) == 0) {",
          "1253:    zval *slot = OBJ_PROP(object, property_info->offset);",
          "1254:    zval_ptr_dtor(slot);",
          "1255:    ZVAL_COPY_VALUE(slot, prop);",
          "1256:    zval_add_ref(slot);",
          "1257:    if (object->properties) {",
          "1258:     ZVAL_INDIRECT(&tmp, slot);",
          "1259:     zend_hash_update(object->properties, key, &tmp);",
          "1265:    prop = zend_hash_update(object->properties, key, prop);",
          "",
          "[Added Lines]",
          "1246:     zend_long h;",
          "1249:     ZEND_HASH_FOREACH_KEY_VAL(properties, h, key, prop) {",
          "1250:   if(key) {",
          "1251:    property_info = zend_get_property_info(object->ce, key, 1);",
          "1252:    if (property_info != ZEND_WRONG_PROPERTY_INFO &&",
          "1253:     property_info &&",
          "1254:     (property_info->flags & ZEND_ACC_STATIC) == 0) {",
          "1255:     zval *slot = OBJ_PROP(object, property_info->offset);",
          "1256:     zval_ptr_dtor(slot);",
          "1257:     ZVAL_COPY_VALUE(slot, prop);",
          "1258:     zval_add_ref(slot);",
          "1259:     if (object->properties) {",
          "1260:      ZVAL_INDIRECT(&tmp, slot);",
          "1261:      zend_hash_update(object->properties, key, &tmp);",
          "1262:     }",
          "1263:    } else {",
          "1264:     if (!object->properties) {",
          "1265:      rebuild_object_properties(object);",
          "1266:     }",
          "1267:     prop = zend_hash_update(object->properties, key, prop);",
          "1268:     zval_add_ref(prop);",
          "1274:    prop = zend_hash_index_update(object->properties, h, prop);",
          "",
          "---------------"
        ],
        "ext/exif/exif.c||ext/exif/exif.c": [
          "File: ext/exif/exif.c -> ext/exif/exif.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2945:      if (length<byte_count-1) {",
          "2947:       ImageInfo->CopyrightPhotographer  = estrdup(value_ptr);",
          "2949:       spprintf(&ImageInfo->Copyright, 0, \"%s, %s\", value_ptr, value_ptr+length+1);",
          "2953:      } else {",
          "2955:      }",
          "2956:     }",
          "2957:     break;",
          "",
          "[Removed Lines]",
          "2948:       ImageInfo->CopyrightEditor        = estrdup(value_ptr+length+1);",
          "2954:       ImageInfo->Copyright = estrdup(value_ptr);",
          "",
          "[Added Lines]",
          "2948:       ImageInfo->CopyrightEditor        = estrndup(value_ptr+length+1, byte_count-length-1);",
          "2954:       ImageInfo->Copyright = estrndup(value_ptr, byte_count);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3042:     break;",
          "3044:    case TAG_MAKE:",
          "3046:     break;",
          "3047:    case TAG_MODEL:",
          "3049:     break;",
          "3051:    case TAG_MAKER_NOTE:",
          "",
          "[Removed Lines]",
          "3045:     ImageInfo->make = estrdup(value_ptr);",
          "3048:     ImageInfo->model = estrdup(value_ptr);",
          "",
          "[Added Lines]",
          "3045:     ImageInfo->make = estrndup(value_ptr, byte_count);",
          "3048:     ImageInfo->model = estrndup(value_ptr, byte_count);",
          "",
          "---------------"
        ],
        "ext/gmp/gmp.c||ext/gmp/gmp.c": [
          "File: ext/gmp/gmp.c -> ext/gmp/gmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "585: {",
          "586:  mpz_ptr gmpnum;",
          "587:  const unsigned char *p, *max;",
          "589:  int retval = FAILURE;",
          "590:  php_unserialize_data_t unserialize_data = (php_unserialize_data_t) data;",
          "593:  PHP_VAR_UNSERIALIZE_INIT(unserialize_data);",
          "594:  gmp_create(object, &gmpnum);",
          "596:  p = buf;",
          "597:  max = buf + buf_len;",
          "602:  ) {",
          "603:   zend_throw_exception(NULL, \"Could not unserialize number\", 0);",
          "604:   goto exit;",
          "605:  }",
          "611:  ) {",
          "612:   zend_throw_exception(NULL, \"Could not unserialize properties\", 0);",
          "613:   goto exit;",
          "614:  }",
          "617:   zend_hash_copy(",
          "619:    (copy_ctor_func_t) zval_add_ref",
          "620:   );",
          "621:  }",
          "623:  retval = SUCCESS;",
          "624: exit:",
          "626:  PHP_VAR_UNSERIALIZE_DESTROY(unserialize_data);",
          "627:  return retval;",
          "628: }",
          "",
          "[Removed Lines]",
          "588:  zval zv;",
          "592:  ZVAL_UNDEF(&zv);",
          "599:  if (!php_var_unserialize(&zv, &p, max, &unserialize_data)",
          "600:   || Z_TYPE(zv) != IS_STRING",
          "601:   || convert_to_gmp(gmpnum, &zv, 10) == FAILURE",
          "606:  zval_dtor(&zv);",
          "607:  ZVAL_UNDEF(&zv);",
          "609:  if (!php_var_unserialize(&zv, &p, max, &unserialize_data)",
          "610:   || Z_TYPE(zv) != IS_ARRAY",
          "616:  if (zend_hash_num_elements(Z_ARRVAL(zv)) != 0) {",
          "618:    zend_std_get_properties(object), Z_ARRVAL(zv),",
          "625:  zval_dtor(&zv);",
          "",
          "[Added Lines]",
          "588:  zval *zv;",
          "598:  zv = var_tmp_var(&unserialize_data);",
          "599:  if (!php_var_unserialize(zv, &p, max, &unserialize_data)",
          "600:   || Z_TYPE_P(zv) != IS_STRING",
          "601:   || convert_to_gmp(gmpnum, zv, 10) == FAILURE",
          "607:  zv = var_tmp_var(&unserialize_data);",
          "608:  if (!php_var_unserialize(zv, &p, max, &unserialize_data)",
          "609:   || Z_TYPE_P(zv) != IS_ARRAY",
          "615:  if (zend_hash_num_elements(Z_ARRVAL_P(zv)) != 0) {",
          "617:    zend_std_get_properties(object), Z_ARRVAL_P(zv),",
          "",
          "---------------"
        ],
        "ext/gmp/tests/bug70284.phpt||ext/gmp/tests/bug70284.phpt": [
          "File: ext/gmp/tests/bug70284.phpt -> ext/gmp/tests/bug70284.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #70284 (Use after free vulnerability in unserialize() with GMP)",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded(\"gmp\")) print \"skip\"; ?>",
          "5: --FILE--",
          "6: <?php",
          "8: $inner = 'r:2;a:1:{i:0;a:1:{i:0;r:4;}}';",
          "9: $exploit = 'a:2:{i:0;s:1:\"1\";i:1;C:3:\"GMP\":'.strlen($inner).':{'.$inner.'}}';",
          "11: $data = unserialize($exploit);",
          "13: $fakezval = ptr2str(1122334455);",
          "14: $fakezval .= ptr2str(0);",
          "15: $fakezval .= \"\\x00\\x00\\x00\\x00\";",
          "16: $fakezval .= \"\\x01\";",
          "17: $fakezval .= \"\\x00\";",
          "18: $fakezval .= \"\\x00\\x00\";",
          "20: for ($i = 0; $i < 5; $i++) {",
          "21:  $v[$i] = $fakezval.$i;",
          "22: }",
          "24: var_dump($data);",
          "26: function ptr2str($ptr)",
          "27: {",
          "28: $out = '';",
          "29:  for ($i = 0; $i < 8; $i++) {",
          "30:   $out .= chr($ptr & 0xff);",
          "31:   $ptr >>= 8;",
          "32:  }",
          "33:  return $out;",
          "34: }",
          "35: ?>",
          "36: --EXPECTF--",
          "37: array(2) {",
          "38:   [0]=>",
          "39:   string(1) \"1\"",
          "40:   [1]=>",
          "41:   object(GMP)#%d (2) {",
          "42:     [0]=>",
          "43:     array(1) {",
          "44:       [0]=>",
          "45:       string(1) \"1\"",
          "46:     }",
          "47:     [\"num\"]=>",
          "48:     string(1) \"1\"",
          "49:   }",
          "50: }",
          "",
          "---------------"
        ],
        "ext/hash/hash_haval.c||ext/hash/hash_haval.c": [
          "File: ext/hash/hash_haval.c -> ext/hash/hash_haval.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "340:  padLen = (index < 118) ? (118 - index) : (246 - index);",
          "341:  PHP_HAVALUpdate(context, PADDING, padLen);",
          "",
          "[Removed Lines]",
          "339:  index = (unsigned int) ((context->count[0] >> 3) & 0x3f);",
          "",
          "[Added Lines]",
          "339:  index = (unsigned int) ((context->count[0] >> 3) & 0x7f);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "394:  padLen = (index < 118) ? (118 - index) : (246 - index);",
          "395:  PHP_HAVALUpdate(context, PADDING, padLen);",
          "",
          "[Removed Lines]",
          "393:  index = (unsigned int) ((context->count[0] >> 3) & 0x3f);",
          "",
          "[Added Lines]",
          "393:  index = (unsigned int) ((context->count[0] >> 3) & 0x7f);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "448:  padLen = (index < 118) ? (118 - index) : (246 - index);",
          "449:  PHP_HAVALUpdate(context, PADDING, padLen);",
          "",
          "[Removed Lines]",
          "447:  index = (unsigned int) ((context->count[0] >> 3) & 0x3f);",
          "",
          "[Added Lines]",
          "447:  index = (unsigned int) ((context->count[0] >> 3) & 0x7f);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "488:  padLen = (index < 118) ? (118 - index) : (246 - index);",
          "489:  PHP_HAVALUpdate(context, PADDING, padLen);",
          "",
          "[Removed Lines]",
          "487:  index = (unsigned int) ((context->count[0] >> 3) & 0x3f);",
          "",
          "[Added Lines]",
          "487:  index = (unsigned int) ((context->count[0] >> 3) & 0x7f);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "529:  padLen = (index < 118) ? (118 - index) : (246 - index);",
          "530:  PHP_HAVALUpdate(context, PADDING, padLen);",
          "",
          "[Removed Lines]",
          "528:  index = (unsigned int) ((context->count[0] >> 3) & 0x3f);",
          "",
          "[Added Lines]",
          "528:  index = (unsigned int) ((context->count[0] >> 3) & 0x7f);",
          "",
          "---------------"
        ],
        "ext/hash/tests/bug70312.phpt||ext/hash/tests/bug70312.phpt": [
          "File: ext/hash/tests/bug70312.phpt -> ext/hash/tests/bug70312.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #70312 HAVAL gives wrong hashes in specific cases",
          "3: --SKIPIF--",
          "4: <?php if(!extension_loaded(\"hash\")) print \"skip\"; ?>",
          "5: --FILE--",
          "6: <?php",
          "7: var_dump(hash('haval128,5', '1234567890123456789012345678901234567890123456789012345678901234'));",
          "8: var_dump(hash('haval160,5', '1234567890123456789012345678901234567890123456789012345678901234'));",
          "9: var_dump(hash('haval192,5', '1234567890123456789012345678901234567890123456789012345678901234'));",
          "10: var_dump(hash('haval224,5', '1234567890123456789012345678901234567890123456789012345678901234'));",
          "11: var_dump(hash('haval256,5', '1234567890123456789012345678901234567890123456789012345678901234'));",
          "12: ?>",
          "13: --EXPECTF--",
          "14: string(32) \"f3f0d23819b87228b4b70ee350afaa9d\"",
          "15: string(40) \"aded6485e137f11d7292212ba3fa961714df0564\"",
          "16: string(48) \"e53da2b16269fe732e9a898a96707a9f28404d7333b02286\"",
          "17: string(56) \"c574fb307f0817b514b9bb2e7c4bfaffb7ad667aca3c8b523fefcf10\"",
          "18: string(64) \"fb73c19300b14d5cb393d929bf005e6c2d459a4c9c009e9813af1d2d3637ee8f\"",
          "",
          "---------------"
        ],
        "ext/hash/tests/hash_file_basic1.phpt||ext/hash/tests/hash_file_basic1.phpt": [
          "File: ext/hash/tests/hash_file_basic1.phpt -> ext/hash/tests/hash_file_basic1.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "64: adler32: ff87222e",
          "65: crc32: 61664d33",
          "66: gost: d9e65f0c0c2ef944e4f8a01f4a46365c4f33a2853756878182a7f03e1490a4cd",
          "68: md2: 70f791c0d8fa9edd7d08e32fcba8c354",
          "69: md4: a9d034b16bb290c57a645afd6f14cd3b",
          "70: md5: 704bf818448f5bbb94061332d2c889aa",
          "",
          "[Removed Lines]",
          "67: haval128,3: 8bb81269aca8b7f87829020d76a4e841",
          "",
          "[Added Lines]",
          "67: haval128,3: c25962b13383c3ed9f13817c8f2ae7d6",
          "",
          "---------------"
        ],
        "ext/hash/tests/hash_hmac_basic.phpt||ext/hash/tests/hash_hmac_basic.phpt": [
          "File: ext/hash/tests/hash_hmac_basic.phpt -> ext/hash/tests/hash_hmac_basic.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: adler32: 12c803f7",
          "46: crc32: 96859101",
          "47: gost: a4a3c80bdf3f8665bf07376a34dc9c1b11af7c813f4928f62e39f0c0dc564dad",
          "49: md2: 6d111dab563025e4cb5f4425c991fa12",
          "50: md4: 10cdbfe843000c623f8b8da0d5d20b0b",
          "51: md5: 2a632783e2812cf23de100d7d6a463ae",
          "",
          "[Removed Lines]",
          "48: haval128,3: 82cd0f4bd36729b5c80c33efa8c13ac5",
          "",
          "[Added Lines]",
          "48: haval128,3: 4d1318607f0406bd1b7bd50907772672",
          "",
          "---------------"
        ],
        "ext/hash/tests/hash_hmac_file_basic.phpt||ext/hash/tests/hash_hmac_file_basic.phpt": [
          "File: ext/hash/tests/hash_hmac_file_basic.phpt -> ext/hash/tests/hash_hmac_file_basic.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "73: adler32: 0f8c02f9",
          "74: crc32: f2a60b9c",
          "75: gost: 94c39a40d5db852a8dc3d24e37eebf2d53e3d711457c59cd02b614f792a9d918",
          "77: md2: a685475e600314bb549ab4f33c3b27cb",
          "78: md4: cbc6bff781f48f57378d3effa27553e4",
          "79: md5: 8bddf39dd1c566c27acc7fa85ec36acf",
          "",
          "[Removed Lines]",
          "76: haval128,3: e8fcff647f1a675acb429130fb94a17e",
          "",
          "[Added Lines]",
          "76: haval128,3: f1cea637451097d790354a86de3f54a3",
          "",
          "---------------"
        ],
        "ext/pcre/php_pcre.c||ext/pcre/php_pcre.c": [
          "File: ext/pcre/php_pcre.c -> ext/pcre/php_pcre.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "759:    if (subpats != NULL) {",
          "762:      if (subpat_names) {",
          "763:       efree(subpat_names);",
          "764:      }",
          "",
          "[Removed Lines]",
          "761:     if (pcre_get_substring_list(subject, offsets, count, &stringlist) < 0) {",
          "",
          "[Added Lines]",
          "761:     if ((offsets[1] - offsets[0] < 0) || pcre_get_substring_list(subject, offsets, count, &stringlist) < 0) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1177:   piece = subject + start_offset;",
          "1181:    if (UNEXPECTED(replace_count)) {",
          "1182:     ++*replace_count;",
          "1183:    }",
          "",
          "[Removed Lines]",
          "1180:   if (EXPECTED(count > 0 && limit)) {",
          "",
          "[Added Lines]",
          "1180:   if (EXPECTED(count > 0 && (offsets[1] - offsets[0] >= 0) && limit)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1799:   }",
          "1803:    if (!no_empty || &subject[offsets[0]] != last_match) {",
          "1805:     if (offset_capture) {",
          "",
          "[Removed Lines]",
          "1802:   if (count > 0) {",
          "",
          "[Added Lines]",
          "1802:   if (count > 0 && (offsets[1] - offsets[0] >= 0)) {",
          "",
          "---------------"
        ],
        "ext/pcre/tests/bug70345.phpt||ext/pcre/tests/bug70345.phpt": [
          "File: ext/pcre/tests/bug70345.phpt -> ext/pcre/tests/bug70345.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #70345 (Multiple vulnerabilities related to PCRE functions)",
          "3: --FILE--",
          "4: <?php",
          "5: $regex = '/(?=xyz\\K)/';",
          "6: $subject = \"aaaaxyzaaaa\";",
          "8: $v = preg_split($regex, $subject);",
          "9: print_r($v);",
          "11: $regex = '/(a(?=xyz\\K))/';",
          "12: $subject = \"aaaaxyzaaaa\";",
          "13: preg_match($regex, $subject, $matches);",
          "15: var_dump($matches);",
          "16: --EXPECTF--",
          "17: Array",
          "18: (",
          "19:     [0] => aaaaxyzaaaa",
          "20: )",
          "22: Warning: preg_match(): Get subpatterns list failed in %s on line %d",
          "23: array(0) {",
          "24: }",
          "",
          "---------------"
        ],
        "ext/session/session.c||ext/session/session.c": [
          "File: ext/session/session.c -> ext/session/session.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "65: static int php_session_rfc1867_callback(unsigned int event, void *event_data, void **extra);",
          "66: static int (*php_session_rfc1867_orig_callback)(unsigned int event, void *event_data, void **extra);",
          "69: zend_class_entry *php_session_class_entry;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67: static void php_session_track_init(void);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "139: {",
          "140:  int retval = SUCCESS;",
          "142:  if (PS(session_status) != php_session_active) {",
          "143:   php_error_docref(NULL, E_WARNING, \"Trying to destroy uninitialized session\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "142:  zend_string *var_name;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "235:  }",
          "236:  if (PS(serializer)->decode(ZSTR_VAL(data), ZSTR_LEN(data)) == FAILURE) {",
          "237:   php_session_destroy();",
          "238:   php_error_docref(NULL, E_WARNING, \"Failed to decode session object. Session has been destroyed\");",
          "239:   return FAILURE;",
          "240:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "240:   php_session_track_init();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "952:     var_replace(&var_hash, &current, zv);",
          "953:    } else {",
          "954:     zval_ptr_dtor(&current);",
          "955:    }",
          "956:   }",
          "957:   PS_ADD_VARL(name);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "958:     PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
          "959:     return FAILURE;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1042:     var_replace(&var_hash, &current, zv);",
          "1043:    } else {",
          "1044:     zval_ptr_dtor(&current);",
          "1045:    }",
          "1046:   }",
          "1047:   PS_ADD_VARL(name);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1050:     PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
          "1051:     return FAILURE;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2169:  }",
          "2171:  if (php_session_decode(str) == FAILURE) {",
          "2174:  }",
          "2175:  RETURN_TRUE;",
          "2176: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2179:   RETURN_FALSE;",
          "",
          "---------------"
        ],
        "ext/session/tests/session_decode_error2.phpt||ext/session/tests/session_decode_error2.phpt": [
          "File: ext/session/tests/session_decode_error2.phpt -> ext/session/tests/session_decode_error2.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: var_dump(session_start());",
          "20: for($index = 0; $index < strlen($data); $index++) {",
          "21:     echo \"\\n-- Iteration $index --\\n\";",
          "22:     $encoded = substr($data, 0, $index);",
          "23:     var_dump(session_decode($encoded));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21:  if(session_status() != PHP_SESSION_ACTIVE) { session_start(); }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53: }",
          "55: -- Iteration 4 --",
          "60: }",
          "62: -- Iteration 5 --",
          "67: }",
          "69: -- Iteration 6 --",
          "74: }",
          "76: -- Iteration 7 --",
          "81: }",
          "83: -- Iteration 8 --",
          "88: }",
          "90: -- Iteration 9 --",
          "95: }",
          "97: -- Iteration 10 --",
          "102: }",
          "104: -- Iteration 11 --",
          "109: }",
          "111: -- Iteration 12 --",
          "116: }",
          "118: -- Iteration 13 --",
          "123: }",
          "125: -- Iteration 14 --",
          "130: }",
          "132: -- Iteration 15 --",
          "137: }",
          "139: -- Iteration 16 --",
          "144: }",
          "146: -- Iteration 17 --",
          "151: }",
          "153: -- Iteration 18 --",
          "158: }",
          "160: -- Iteration 19 --",
          "165: }",
          "167: -- Iteration 20 --",
          "172: }",
          "174: -- Iteration 21 --",
          "179: }",
          "181: -- Iteration 22 --",
          "186: }",
          "188: -- Iteration 23 --",
          "193: }",
          "195: -- Iteration 24 --",
          "200: }",
          "202: -- Iteration 25 --",
          "207: }",
          "209: -- Iteration 26 --",
          "214: }",
          "216: -- Iteration 27 --",
          "221: }",
          "223: -- Iteration 28 --",
          "228: }",
          "230: -- Iteration 29 --",
          "235: }",
          "237: -- Iteration 30 --",
          "242: }",
          "244: -- Iteration 31 --",
          "249: }",
          "251: -- Iteration 32 --",
          "256: }",
          "258: -- Iteration 33 --",
          "263: }",
          "265: -- Iteration 34 --",
          "",
          "[Removed Lines]",
          "56: bool(true)",
          "57: array(1) {",
          "58:   [\"foo\"]=>",
          "59:   NULL",
          "63: bool(true)",
          "64: array(1) {",
          "65:   [\"foo\"]=>",
          "66:   NULL",
          "70: bool(true)",
          "71: array(1) {",
          "72:   [\"foo\"]=>",
          "73:   NULL",
          "77: bool(true)",
          "78: array(1) {",
          "79:   [\"foo\"]=>",
          "80:   NULL",
          "84: bool(true)",
          "85: array(1) {",
          "86:   [\"foo\"]=>",
          "87:   NULL",
          "91: bool(true)",
          "92: array(1) {",
          "93:   [\"foo\"]=>",
          "94:   NULL",
          "98: bool(true)",
          "99: array(1) {",
          "100:   [\"foo\"]=>",
          "101:   NULL",
          "105: bool(true)",
          "106: array(1) {",
          "107:   [\"foo\"]=>",
          "108:   NULL",
          "112: bool(true)",
          "113: array(1) {",
          "114:   [\"foo\"]=>",
          "115:   NULL",
          "119: bool(true)",
          "120: array(1) {",
          "121:   [\"foo\"]=>",
          "122:   NULL",
          "126: bool(true)",
          "127: array(1) {",
          "128:   [\"foo\"]=>",
          "129:   NULL",
          "133: bool(true)",
          "134: array(1) {",
          "135:   [\"foo\"]=>",
          "136:   NULL",
          "140: bool(true)",
          "141: array(1) {",
          "142:   [\"foo\"]=>",
          "143:   NULL",
          "147: bool(true)",
          "148: array(1) {",
          "149:   [\"foo\"]=>",
          "150:   NULL",
          "154: bool(true)",
          "155: array(1) {",
          "156:   [\"foo\"]=>",
          "157:   NULL",
          "161: bool(true)",
          "162: array(1) {",
          "163:   [\"foo\"]=>",
          "164:   NULL",
          "168: bool(true)",
          "169: array(1) {",
          "170:   [\"foo\"]=>",
          "171:   NULL",
          "175: bool(true)",
          "176: array(1) {",
          "177:   [\"foo\"]=>",
          "178:   NULL",
          "182: bool(true)",
          "183: array(1) {",
          "184:   [\"foo\"]=>",
          "185:   NULL",
          "189: bool(true)",
          "190: array(1) {",
          "191:   [\"foo\"]=>",
          "192:   NULL",
          "196: bool(true)",
          "197: array(1) {",
          "198:   [\"foo\"]=>",
          "199:   NULL",
          "203: bool(true)",
          "204: array(1) {",
          "205:   [\"foo\"]=>",
          "206:   NULL",
          "210: bool(true)",
          "211: array(1) {",
          "212:   [\"foo\"]=>",
          "213:   NULL",
          "217: bool(true)",
          "218: array(1) {",
          "219:   [\"foo\"]=>",
          "220:   NULL",
          "224: bool(true)",
          "225: array(1) {",
          "226:   [\"foo\"]=>",
          "227:   NULL",
          "231: bool(true)",
          "232: array(1) {",
          "233:   [\"foo\"]=>",
          "234:   NULL",
          "238: bool(true)",
          "239: array(1) {",
          "240:   [\"foo\"]=>",
          "241:   NULL",
          "245: bool(true)",
          "246: array(1) {",
          "247:   [\"foo\"]=>",
          "248:   NULL",
          "252: bool(true)",
          "253: array(1) {",
          "254:   [\"foo\"]=>",
          "255:   NULL",
          "259: bool(true)",
          "260: array(1) {",
          "261:   [\"foo\"]=>",
          "262:   NULL",
          "",
          "[Added Lines]",
          "58: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "59: bool(false)",
          "60: array(0) {",
          "65: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "66: bool(false)",
          "67: array(0) {",
          "72: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "73: bool(false)",
          "74: array(0) {",
          "79: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "80: bool(false)",
          "81: array(0) {",
          "86: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "87: bool(false)",
          "88: array(0) {",
          "93: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "94: bool(false)",
          "95: array(0) {",
          "100: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "101: bool(false)",
          "102: array(0) {",
          "107: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "108: bool(false)",
          "109: array(0) {",
          "114: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "115: bool(false)",
          "116: array(0) {",
          "121: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "122: bool(false)",
          "123: array(0) {",
          "128: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "129: bool(false)",
          "130: array(0) {",
          "135: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "136: bool(false)",
          "137: array(0) {",
          "142: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "143: bool(false)",
          "144: array(0) {",
          "149: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "150: bool(false)",
          "151: array(0) {",
          "156: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "157: bool(false)",
          "158: array(0) {",
          "163: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "164: bool(false)",
          "165: array(0) {",
          "170: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "171: bool(false)",
          "172: array(0) {",
          "177: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "178: bool(false)",
          "179: array(0) {",
          "184: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "185: bool(false)",
          "186: array(0) {",
          "191: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "192: bool(false)",
          "193: array(0) {",
          "198: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "199: bool(false)",
          "200: array(0) {",
          "205: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "206: bool(false)",
          "207: array(0) {",
          "212: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "213: bool(false)",
          "214: array(0) {",
          "219: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "220: bool(false)",
          "221: array(0) {",
          "226: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "227: bool(false)",
          "228: array(0) {",
          "233: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "234: bool(false)",
          "235: array(0) {",
          "240: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "241: bool(false)",
          "242: array(0) {",
          "247: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "248: bool(false)",
          "249: array(0) {",
          "254: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "255: bool(false)",
          "256: array(0) {",
          "261: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "262: bool(false)",
          "263: array(0) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "333: }",
          "335: -- Iteration 39 --",
          "349: }",
          "351: -- Iteration 40 --",
          "365: }",
          "367: -- Iteration 41 --",
          "381: }",
          "383: -- Iteration 42 --",
          "397: }",
          "399: -- Iteration 43 --",
          "",
          "[Removed Lines]",
          "336: bool(true)",
          "337: array(2) {",
          "338:   [\"foo\"]=>",
          "339:   array(3) {",
          "340:     [0]=>",
          "341:     int(1)",
          "342:     [1]=>",
          "343:     int(2)",
          "344:     [2]=>",
          "345:     int(3)",
          "346:   }",
          "347:   [\"guff\"]=>",
          "348:   NULL",
          "352: bool(true)",
          "353: array(2) {",
          "354:   [\"foo\"]=>",
          "355:   array(3) {",
          "356:     [0]=>",
          "357:     int(1)",
          "358:     [1]=>",
          "359:     int(2)",
          "360:     [2]=>",
          "361:     int(3)",
          "362:   }",
          "363:   [\"guff\"]=>",
          "364:   NULL",
          "368: bool(true)",
          "369: array(2) {",
          "370:   [\"foo\"]=>",
          "371:   array(3) {",
          "372:     [0]=>",
          "373:     int(1)",
          "374:     [1]=>",
          "375:     int(2)",
          "376:     [2]=>",
          "377:     int(3)",
          "378:   }",
          "379:   [\"guff\"]=>",
          "380:   NULL",
          "384: bool(true)",
          "385: array(2) {",
          "386:   [\"foo\"]=>",
          "387:   array(3) {",
          "388:     [0]=>",
          "389:     int(1)",
          "390:     [1]=>",
          "391:     int(2)",
          "392:     [2]=>",
          "393:     int(3)",
          "394:   }",
          "395:   [\"guff\"]=>",
          "396:   NULL",
          "",
          "[Added Lines]",
          "338: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "339: bool(false)",
          "340: array(0) {",
          "345: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "346: bool(false)",
          "347: array(0) {",
          "352: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "353: bool(false)",
          "354: array(0) {",
          "359: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "360: bool(false)",
          "361: array(0) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "512: }",
          "514: -- Iteration 48 --",
          "537: }",
          "539: -- Iteration 49 --",
          "562: }",
          "564: -- Iteration 50 --",
          "587: }",
          "589: -- Iteration 51 --",
          "612: }",
          "",
          "[Removed Lines]",
          "515: bool(true)",
          "516: array(3) {",
          "517:   [\"foo\"]=>",
          "518:   &array(3) {",
          "519:     [0]=>",
          "520:     int(1)",
          "521:     [1]=>",
          "522:     int(2)",
          "523:     [2]=>",
          "524:     int(3)",
          "525:   }",
          "526:   [\"guff\"]=>",
          "527:   &array(3) {",
          "528:     [0]=>",
          "529:     int(1)",
          "530:     [1]=>",
          "531:     int(2)",
          "532:     [2]=>",
          "533:     int(3)",
          "534:   }",
          "535:   [\"blah\"]=>",
          "536:   NULL",
          "540: bool(true)",
          "541: array(3) {",
          "542:   [\"foo\"]=>",
          "543:   &array(3) {",
          "544:     [0]=>",
          "545:     int(1)",
          "546:     [1]=>",
          "547:     int(2)",
          "548:     [2]=>",
          "549:     int(3)",
          "550:   }",
          "551:   [\"guff\"]=>",
          "552:   &array(3) {",
          "553:     [0]=>",
          "554:     int(1)",
          "555:     [1]=>",
          "556:     int(2)",
          "557:     [2]=>",
          "558:     int(3)",
          "559:   }",
          "560:   [\"blah\"]=>",
          "561:   NULL",
          "565: bool(true)",
          "566: array(3) {",
          "567:   [\"foo\"]=>",
          "568:   &array(3) {",
          "569:     [0]=>",
          "570:     int(1)",
          "571:     [1]=>",
          "572:     int(2)",
          "573:     [2]=>",
          "574:     int(3)",
          "575:   }",
          "576:   [\"guff\"]=>",
          "577:   &array(3) {",
          "578:     [0]=>",
          "579:     int(1)",
          "580:     [1]=>",
          "581:     int(2)",
          "582:     [2]=>",
          "583:     int(3)",
          "584:   }",
          "585:   [\"blah\"]=>",
          "586:   NULL",
          "590: bool(true)",
          "591: array(3) {",
          "592:   [\"foo\"]=>",
          "593:   &array(3) {",
          "594:     [0]=>",
          "595:     int(1)",
          "596:     [1]=>",
          "597:     int(2)",
          "598:     [2]=>",
          "599:     int(3)",
          "600:   }",
          "601:   [\"guff\"]=>",
          "602:   &array(3) {",
          "603:     [0]=>",
          "604:     int(1)",
          "605:     [1]=>",
          "606:     int(2)",
          "607:     [2]=>",
          "608:     int(3)",
          "609:   }",
          "610:   [\"blah\"]=>",
          "611:   NULL",
          "613: bool(true)",
          "614: Done",
          "",
          "[Added Lines]",
          "481: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "482: bool(false)",
          "483: array(0) {",
          "488: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "489: bool(false)",
          "490: array(0) {",
          "495: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "496: bool(false)",
          "497: array(0) {",
          "502: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "503: bool(false)",
          "504: array(0) {",
          "507: Warning: session_destroy(): Trying to destroy uninitialized session in %s/session_decode_error2.php on line %d",
          "508: bool(false)",
          "509: Done",
          "",
          "---------------"
        ],
        "ext/soap/soap.c||ext/soap/soap.c": [
          "File: ext/soap/soap.c -> ext/soap/soap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1505:    add_soap_fault_ex(&exception_object, this_ptr, \"Server\", \"Internal Error\", NULL, NULL);",
          "1506:   }",
          "1507:   soap_server_fault_ex(function, &exception_object, NULL);",
          "1509: }",
          "",
          "[Removed Lines]",
          "1508:  }",
          "",
          "[Added Lines]",
          "1508:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2924:     free_soap_headers = 1;",
          "2925:    }",
          "2926:    ZEND_HASH_FOREACH_VAL(default_headers, tmp) {",
          "2929:    } ZEND_HASH_FOREACH_END();",
          "2930:   } else {",
          "2931:    soap_headers = Z_ARRVAL_P(tmp);",
          "",
          "[Removed Lines]",
          "2927:     Z_ADDREF_P(tmp);",
          "2928:     zend_hash_next_index_insert(soap_headers, tmp);",
          "",
          "[Added Lines]",
          "2927:     if(Z_TYPE_P(tmp) == IS_OBJECT) {",
          "2928:      Z_ADDREF_P(tmp);",
          "2929:      zend_hash_next_index_insert(soap_headers, tmp);",
          "2930:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4332:   zval* header;",
          "4334:   ZEND_HASH_FOREACH_VAL(soap_headers, header) {",
          "4336:    zval *name, *ns, *tmp;",
          "4338:    if ((name = zend_hash_str_find(ht, \"name\", sizeof(\"name\")-1)) != NULL &&",
          "4339:        Z_TYPE_P(name) == IS_STRING &&",
          "4340:        (ns = zend_hash_str_find(ht, \"namespace\", sizeof(\"namespace\")-1)) != NULL &&",
          "",
          "[Removed Lines]",
          "4335:    HashTable *ht = Z_OBJPROP_P(header);",
          "",
          "[Added Lines]",
          "4337:    HashTable *ht;",
          "4340:    if (Z_TYPE_P(header) != IS_OBJECT) {",
          "4341:     continue;",
          "4342:    }",
          "4344:    ht = Z_OBJPROP_P(header);",
          "",
          "---------------"
        ],
        "ext/soap/tests/bug70388.phpt||ext/soap/tests/bug70388.phpt": [
          "File: ext/soap/tests/bug70388.phpt -> ext/soap/tests/bug70388.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #70388 (SOAP serialize_function_call() type confusion / RCE)",
          "3: --SKIPIF--",
          "4: <?php require_once('skipif.inc'); ?>",
          "5: --FILE--",
          "6: <?php",
          "7: $dummy = unserialize('O:10:\"SoapClient\":3:{s:3:\"uri\";s:1:\"X\";s:8:\"location\";s:22:\"http://localhost/a.xml\";s:17:\"__default_headers\";a:1:{i:1;s:1337:\"'.str_repeat(\"X\", 1337).'\";}}');",
          "8: try {",
          "9:  var_dump($dummy->notexisting());",
          "10: } catch(Exception $e) {",
          "11:  var_dump($e->getMessage());",
          "12:  var_dump(get_class($e));",
          "13: }",
          "14: ?>",
          "15: --EXPECTF--",
          "16: string(%d) \"%s\"",
          "17: string(9) \"SoapFault\"",
          "",
          "---------------"
        ],
        "ext/spl/spl_dllist.c||ext/spl/spl_dllist.c": [
          "File: ext/spl/spl_dllist.c -> ext/spl/spl_dllist.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1210:   if (!php_var_unserialize(elem, &p, s + buf_len, &var_hash)) {",
          "1211:    goto error;",
          "1212:   }",
          "1214:   spl_ptr_llist_push(intern->llist, elem);",
          "1215:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1213:   var_push_dtor(&var_hash, elem);",
          "",
          "---------------"
        ],
        "ext/spl/tests/bug70155.phpt||ext/spl/tests/bug70155.phpt": [
          "File: ext/spl/tests/bug70155.phpt -> ext/spl/tests/bug70155.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: SPL: Bug #70155 Use After Free Vulnerability in unserialize() with SPLArrayObject",
          "3: --FILE--",
          "4: <?php",
          "5: $inner = 'x:i:0;O:12:\"DateInterval\":1:{s:1:\"y\";i:3;};m:a:1:{i:0;R:2;}';",
          "6: $exploit = 'C:11:\"ArrayObject\":'.strlen($inner).':{'.$inner.'}';",
          "7: $data = unserialize($exploit);",
          "9: var_dump($data);",
          "10: ?>",
          "11: ===DONE===",
          "12: --EXPECTF--",
          "13: object(ArrayObject)#1 (2) {",
          "14:   [0]=>",
          "15:   int(0)",
          "16:   [\"storage\":\"ArrayObject\":private]=>",
          "17:   object(DateInterval)#2 (15) {",
          "18:     [\"y\"]=>",
          "19:     int(3)",
          "20:     [\"m\"]=>",
          "21:     int(-1)",
          "22:     [\"d\"]=>",
          "23:     int(-1)",
          "24:     [\"h\"]=>",
          "25:     int(-1)",
          "26:     [\"i\"]=>",
          "27:     int(-1)",
          "28:     [\"s\"]=>",
          "29:     int(-1)",
          "30:     [\"weekday\"]=>",
          "31:     int(-1)",
          "32:     [\"weekday_behavior\"]=>",
          "33:     int(-1)",
          "34:     [\"first_last_day_of\"]=>",
          "35:     int(-1)",
          "36:     [\"invert\"]=>",
          "37:     int(0)",
          "38:     [\"days\"]=>",
          "39:     int(-1)",
          "40:     [\"special_type\"]=>",
          "41:     int(0)",
          "42:     [\"special_amount\"]=>",
          "43:     int(-1)",
          "44:     [\"have_weekday_relative\"]=>",
          "45:     int(0)",
          "46:     [\"have_special_relative\"]=>",
          "47:     int(0)",
          "48:   }",
          "49: }",
          "50: ===DONE===",
          "",
          "---------------"
        ],
        "ext/spl/tests/bug70365.phpt||ext/spl/tests/bug70365.phpt": [
          "File: ext/spl/tests/bug70365.phpt -> ext/spl/tests/bug70365.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: SPL: Bug #70365 use-after-free vulnerability in unserialize() with SplObjectStorage",
          "3: --FILE--",
          "4: <?php",
          "5: class obj {",
          "6:  var $ryat;",
          "7:  function __wakeup() {",
          "8:   $this->ryat = 1;",
          "9:  }",
          "10: }",
          "12: $fakezval = ptr2str(1122334455);",
          "13: $fakezval .= ptr2str(0);",
          "14: $fakezval .= \"\\x00\\x00\\x00\\x00\";",
          "15: $fakezval .= \"\\x01\";",
          "16: $fakezval .= \"\\x00\";",
          "17: $fakezval .= \"\\x00\\x00\";",
          "19: $inner = 'x:i:1;O:8:\"stdClass\":0:{},i:1;;m:a:0:{}';",
          "20: $exploit = 'a:5:{i:0;i:1;i:1;C:16:\"SplObjectStorage\":'.strlen($inner).':{'.$inner.'}i:2;O:3:\"obj\":1:{s:4:\"ryat\";R:3;}i:3;R:6;i:4;s:'.strlen($fakezval).':\"'.$fakezval.'\";}';",
          "22: $data = unserialize($exploit);",
          "24: var_dump($data);",
          "26: function ptr2str($ptr)",
          "27: {",
          "28:  $out = '';",
          "29:  for ($i = 0; $i < 8; $i++) {",
          "30:   $out .= chr($ptr & 0xff);",
          "31:   $ptr >>= 8;",
          "32:  }",
          "33:  return $out;",
          "34: }",
          "35: --EXPECTF--",
          "36: array(5) {",
          "37:   [0]=>",
          "38:   int(1)",
          "39:   [1]=>",
          "40:   &int(1)",
          "41:   [2]=>",
          "42:   object(obj)#%d (1) {",
          "43:     [\"ryat\"]=>",
          "44:     &int(1)",
          "45:   }",
          "46:   [3]=>",
          "47:   int(1)",
          "48:   [4]=>",
          "49:   string(24) \"%s\"",
          "50: }",
          "",
          "---------------"
        ],
        "ext/spl/tests/bug70366.phpt||ext/spl/tests/bug70366.phpt": [
          "File: ext/spl/tests/bug70366.phpt -> ext/spl/tests/bug70366.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: SPL: Bug #70366 use-after-free vulnerability in unserialize() with SplDoublyLinkedList",
          "3: --FILE--",
          "4: <?php",
          "5: class obj {",
          "6:  var $ryat;",
          "7:  function __wakeup() {",
          "8:   $this->ryat = 1;",
          "9:  }",
          "10: }",
          "12: $fakezval = ptr2str(1122334455);",
          "13: $fakezval .= ptr2str(0);",
          "14: $fakezval .= \"\\x00\\x00\\x00\\x00\";",
          "15: $fakezval .= \"\\x01\";",
          "16: $fakezval .= \"\\x00\";",
          "17: $fakezval .= \"\\x00\\x00\";",
          "19: $inner = 'i:1234;:i:1;';",
          "20: $exploit = 'a:5:{i:0;i:1;i:1;C:19:\"SplDoublyLinkedList\":'.strlen($inner).':{'.$inner.'}i:2;O:3:\"obj\":1:{s:4:\"ryat\";R:3;}i:3;a:1:{i:0;R:5;}i:4;s:'.strlen($fakezval).':\"'.$fakezval.'\";}';",
          "22: $data = unserialize($exploit);",
          "24: var_dump($data);",
          "26: function ptr2str($ptr)",
          "27: {",
          "28:  $out = '';",
          "29:  for ($i = 0; $i < 8; $i++) {",
          "30:   $out .= chr($ptr & 0xff);",
          "31:   $ptr >>= 8;",
          "32:  }",
          "33:  return $out;",
          "34: }",
          "35: ?>",
          "36: --EXPECTF--",
          "37: array(5) {",
          "38:   [0]=>",
          "39:   int(1)",
          "40:   [1]=>",
          "41:   &int(1)",
          "42:   [2]=>",
          "43:   object(obj)#%d (1) {",
          "44:     [\"ryat\"]=>",
          "45:     &int(1)",
          "46:   }",
          "47:   [3]=>",
          "48:   array(1) {",
          "49:     [0]=>",
          "50:     int(1)",
          "51:   }",
          "52:   [4]=>",
          "53:   string(24) \"%s\"",
          "54: }",
          "",
          "---------------"
        ],
        "ext/standard/tests/serialize/bug70172.phpt||ext/standard/tests/serialize/bug70172.phpt": [
          "File: ext/standard/tests/serialize/bug70172.phpt -> ext/standard/tests/serialize/bug70172.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #70172 - Use After Free Vulnerability in unserialize()",
          "3: --XFAIL--",
          "4: Memory leak on debug build, needs fix.",
          "5: --FILE--",
          "6: <?php",
          "7: class obj implements Serializable {",
          "8:  var $data;",
          "9:  function serialize() {",
          "10:   return serialize($this->data);",
          "11:  }",
          "12:  function unserialize($data) {",
          "13:   $this->data = unserialize($data);",
          "14:  }",
          "15: }",
          "17: $fakezval = ptr2str(1122334455);",
          "18: $fakezval .= ptr2str(0);",
          "19: $fakezval .= \"\\x00\\x00\\x00\\x00\";",
          "20: $fakezval .= \"\\x01\";",
          "21: $fakezval .= \"\\x00\";",
          "22: $fakezval .= \"\\x00\\x00\";",
          "24: $inner = 'r:2;';",
          "25: $exploit = 'a:2:{i:0;i:1;i:1;C:3:\"obj\":'.strlen($inner).':{'.$inner.'}}';",
          "27: $data = unserialize($exploit);",
          "29: for ($i = 0; $i < 5; $i++) {",
          "30:  $v[$i] = $fakezval.$i;",
          "31: }",
          "33: var_dump($data);",
          "35: function ptr2str($ptr)",
          "36: {",
          "37:  $out = '';",
          "38:  for ($i = 0; $i < 8; $i++) {",
          "39:   $out .= chr($ptr & 0xff);",
          "40:   $ptr >>= 8;",
          "41:  }",
          "42:  return $out;",
          "43: }",
          "44: ?>",
          "45: --EXPECTF--",
          "46: array(2) {",
          "47:   [0]=>",
          "48:   int(1)",
          "49:   [1]=>",
          "50:   object(obj)#%d (1) {",
          "51:     [\"data\"]=>",
          "52:     int(1)",
          "53:   }",
          "54: }",
          "",
          "---------------"
        ],
        "ext/standard/tests/serialize/bug70172_2.phpt||ext/standard/tests/serialize/bug70172_2.phpt": [
          "File: ext/standard/tests/serialize/bug70172_2.phpt -> ext/standard/tests/serialize/bug70172_2.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #70172 - Use After Free Vulnerability in unserialize()",
          "3: --FILE--",
          "4: <?php",
          "5: class obj implements Serializable {",
          "6:  var $data;",
          "7:  function serialize() {",
          "8:   return serialize($this->data);",
          "9:  }",
          "10:  function unserialize($data) {",
          "11:   $this->data = unserialize($data);",
          "12:  }",
          "13: }",
          "15: class obj2 {",
          "16:  var $ryat;",
          "17:  function __wakeup() {",
          "18:   $this->ryat = 1;",
          "19:  }",
          "20: }",
          "22: $fakezval = ptr2str(1122334455);",
          "23: $fakezval .= ptr2str(0);",
          "24: $fakezval .= \"\\x00\\x00\\x00\\x00\";",
          "25: $fakezval .= \"\\x01\";",
          "26: $fakezval .= \"\\x00\";",
          "27: $fakezval .= \"\\x00\\x00\";",
          "29: $inner = 'r:2;';",
          "30: $exploit = 'a:2:{i:0;O:4:\"obj2\":1:{s:4:\"ryat\";C:3:\"obj\":'.strlen($inner).':{'.$inner.'}}i:1;a:1:{i:0;a:1:{i:0;R:4;}}}';",
          "32: $data = unserialize($exploit);",
          "34: for ($i = 0; $i < 5; $i++) {",
          "35:  $v[$i] = $fakezval.$i;",
          "36: }",
          "38: var_dump($data);",
          "40: function ptr2str($ptr)",
          "41: {",
          "42:  $out = '';",
          "43:  for ($i = 0; $i < 8; $i++) {",
          "44:   $out .= chr($ptr & 0xff);",
          "45:   $ptr >>= 8;",
          "46:  }",
          "47:  return $out;",
          "48: }",
          "49: ?>",
          "50: --EXPECTF--",
          "51: array(2) {",
          "52:   [0]=>",
          "53:   object(obj2)#%d (1) {",
          "54:     [\"ryat\"]=>",
          "55:     int(1)",
          "56:   }",
          "57:   [1]=>",
          "58:   array(1) {",
          "59:     [0]=>",
          "60:     array(1) {",
          "61:       [0]=>",
          "62:       &object(obj2)#%d (1) {",
          "63:         [\"ryat\"]=>",
          "64:         int(1)",
          "65:       }",
          "66:     }",
          "67:   }",
          "68: }",
          "",
          "---------------"
        ],
        "ext/standard/tests/serialize/bug70219.phpt||ext/standard/tests/serialize/bug70219.phpt": [
          "File: ext/standard/tests/serialize/bug70219.phpt -> ext/standard/tests/serialize/bug70219.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #70219 Use after free vulnerability in session deserializer",
          "3: --FILE--",
          "4: <?php",
          "5: class obj implements Serializable {",
          "6:     var $data;",
          "7:     function serialize() {",
          "8:         return serialize($this->data);",
          "9:     }",
          "10:     function unserialize($data) {",
          "11:         session_start();",
          "12:         session_decode($data);",
          "13:     }",
          "14: }",
          "16: $inner = 'ryat|a:1:{i:0;a:1:{i:1;';",
          "17: $exploit = 'a:2:{i:0;C:3:\"obj\":'.strlen($inner).':{'.$inner.'}i:1;R:4;}';",
          "19: $data = unserialize($exploit);",
          "21: for ($i = 0; $i < 5; $i++) {",
          "22:     $v[$i] = 'hi'.$i;",
          "23: }",
          "25: var_dump($data);",
          "26: ?>",
          "27: --EXPECTF--",
          "28: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s on line %d",
          "29: array(2) {",
          "30:   [0]=>",
          "31:   object(obj)#%d (1) {",
          "32:     [\"data\"]=>",
          "33:     NULL",
          "34:   }",
          "35:   [1]=>",
          "36:   &array(1) {",
          "37:     [\"data\"]=>",
          "38:     NULL",
          "39:   }",
          "40: }",
          "",
          "---------------"
        ],
        "ext/standard/var.c||ext/standard/var.c": [
          "File: ext/standard/var.c -> ext/standard/var.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1045:  php_unserialize_data_t var_hash;",
          "1046:  zval *options = NULL, *classes = NULL;",
          "1047:  HashTable *class_hash = NULL;",
          "1049:  if (zend_parse_parameters(ZEND_NUM_ARGS(), \"s|a\", &buf, &buf_len, &options) == FAILURE) {",
          "1050:   RETURN_FALSE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1048:  zval *old_rval = return_value;",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "103: #if 0",
          "104: PHPAPI void var_push_dtor_no_addref(php_unserialize_data_t *var_hashx, zval *rval)",
          "105: {",
          "107: #if VAR_ENTRIES_DBG",
          "109: #endif",
          "111:  if (!var_hash || var_hash->used_slots == VAR_ENTRIES_MAX) {",
          "",
          "[Removed Lines]",
          "106:  var_dtor_entries *var_hash = (*var_hashx)->last_dtor;",
          "108:  fprintf(stderr, \"var_push_dtor_no_addref(%ld): %d (%d)\\n\", var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(rval), Z_REFCOUNT_PP(rval));",
          "",
          "[Added Lines]",
          "106:  var_entries *var_hash;",
          "108:     if (!var_hashx || !*var_hashx) {",
          "109:         return;",
          "110:     }",
          "112:     var_hash = (*var_hashx)->last_dtor;",
          "114:  fprintf(stderr, \"var_push_dtor_no_addref(%p, %ld): %d (%d)\\n\", *rval, var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(rval), Z_REFCOUNT_PP(rval));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "184:  while (var_dtor_hash) {",
          "185:   for (i = 0; i < var_dtor_hash->used_slots; i++) {",
          "186:    zval_ptr_dtor(&var_dtor_hash->data[i]);",
          "187:   }",
          "188:   next = var_dtor_hash->next;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "192: #if VAR_ENTRIES_DBG",
          "193:    fprintf(stderr, \"var_destroy dtor(%p, %ld)\\n\", var_dtor_hash->data[i], Z_REFCOUNT_P(var_dtor_hash->data[i]));",
          "194: #endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "263: #define YYMARKER marker",
          "",
          "[Removed Lines]",
          "266: #line 271 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "275: #line 280 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "530:  start = cursor;",
          "534: {",
          "535:  YYCTYPE yych;",
          "536:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "533: #line 534 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "542: #line 543 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "590:  yych = *(YYMARKER = ++YYCURSOR);",
          "591:  if (yych == ':') goto yy95;",
          "592: yy3:",
          "594:  { return 0; }",
          "596: yy4:",
          "597:  yych = *(YYMARKER = ++YYCURSOR);",
          "598:  if (yych == ':') goto yy89;",
          "",
          "[Removed Lines]",
          "593: #line 881 \"ext/standard/var_unserializer.re\"",
          "595: #line 596 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "602: #line 893 \"ext/standard/var_unserializer.re\"",
          "604: #line 605 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "635:  goto yy3;",
          "636: yy14:",
          "637:  ++YYCURSOR;",
          "639:  {",
          "641:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "643: }",
          "645: yy16:",
          "646:  yych = *++YYCURSOR;",
          "647:  goto yy3;",
          "",
          "[Removed Lines]",
          "638: #line 875 \"ext/standard/var_unserializer.re\"",
          "644: #line 645 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "647: #line 887 \"ext/standard/var_unserializer.re\"",
          "653: #line 654 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "667:  if (yybm[0+yych] & 128) {",
          "668:   goto yy20;",
          "669:  }",
          "671:  yych = *++YYCURSOR;",
          "672:  if (yych != '\"') goto yy18;",
          "673:  ++YYCURSOR;",
          "675:  {",
          "676:  size_t len, len2, len3, maxlen;",
          "677:  zend_long elements;",
          "",
          "[Removed Lines]",
          "670:  if (yych != ':') goto yy18;",
          "674: #line 730 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "679:  if (yych <= '/') goto yy18;",
          "680:  if (yych >= ';') goto yy18;",
          "684: #line 741 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "686:  zval retval;",
          "687:  zval args[1];",
          "689:  if (*start == 'C') {",
          "690:   custom_object = 1;",
          "691:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "699:     if (!var_hash) return 0;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "817:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "818: }",
          "820: yy25:",
          "821:  yych = *++YYCURSOR;",
          "822:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "819: #line 820 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "830: #line 831 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "841:  yych = *++YYCURSOR;",
          "842:  if (yych != '\"') goto yy18;",
          "843:  ++YYCURSOR;",
          "845:  {",
          "849:  return object_common2(UNSERIALIZE_PASSTHRU,",
          "850:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
          "851: }",
          "853: yy32:",
          "854:  yych = *++YYCURSOR;",
          "855:  if (yych == '+') goto yy33;",
          "",
          "[Removed Lines]",
          "844: #line 722 \"ext/standard/var_unserializer.re\"",
          "852: #line 853 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "855: #line 732 \"ext/standard/var_unserializer.re\"",
          "857:     if (!var_hash) return 0;",
          "864: #line 865 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "870:  yych = *++YYCURSOR;",
          "871:  if (yych != '{') goto yy18;",
          "872:  ++YYCURSOR;",
          "874:  {",
          "875:  zend_long elements = parse_iv(start + 2);",
          "879:  if (elements < 0) {",
          "880:   return 0;",
          "",
          "[Removed Lines]",
          "873: #line 701 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "885: #line 710 \"ext/standard/var_unserializer.re\"",
          "890:     if (!var_hash) return 0;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "892:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "893: }",
          "895: yy39:",
          "896:  yych = *++YYCURSOR;",
          "897:  if (yych == '+') goto yy40;",
          "",
          "[Removed Lines]",
          "894: #line 895 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "907: #line 908 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "912:  yych = *++YYCURSOR;",
          "913:  if (yych != '\"') goto yy18;",
          "914:  ++YYCURSOR;",
          "916:  {",
          "917:  size_t len, maxlen;",
          "918:  zend_string *str;",
          "",
          "[Removed Lines]",
          "915: #line 673 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "928: #line 682 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "940:  ZVAL_STR(rval, str);",
          "941:  return 1;",
          "942: }",
          "944: yy46:",
          "945:  yych = *++YYCURSOR;",
          "946:  if (yych == '+') goto yy47;",
          "",
          "[Removed Lines]",
          "943: #line 944 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "956: #line 957 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "961:  yych = *++YYCURSOR;",
          "962:  if (yych != '\"') goto yy18;",
          "963:  ++YYCURSOR;",
          "965:  {",
          "966:  size_t len, maxlen;",
          "967:  char *str;",
          "",
          "[Removed Lines]",
          "964: #line 646 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "977: #line 655 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "988:  ZVAL_STRINGL(rval, str, len);",
          "989:  return 1;",
          "990: }",
          "992: yy53:",
          "993:  yych = *++YYCURSOR;",
          "994:  if (yych <= '/') {",
          "",
          "[Removed Lines]",
          "991: #line 992 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1004: #line 1005 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1076:  }",
          "1077: yy63:",
          "1078:  ++YYCURSOR;",
          "1080:  {",
          "1081: #if SIZEOF_ZEND_LONG == 4",
          "1082: use_double:",
          "",
          "[Removed Lines]",
          "1079: #line 637 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1092: #line 646 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1085:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1086:  return 1;",
          "1087: }",
          "1089: yy65:",
          "1090:  yych = *++YYCURSOR;",
          "1091:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1088: #line 1089 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1101: #line 1102 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1144:  yych = *++YYCURSOR;",
          "1145:  if (yych != ';') goto yy18;",
          "1146:  ++YYCURSOR;",
          "1148:  {",
          "",
          "[Removed Lines]",
          "1147: #line 621 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1160: #line 630 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1161:  return 1;",
          "1162: }",
          "1164: yy76:",
          "1165:  yych = *++YYCURSOR;",
          "1166:  if (yych == 'N') goto yy73;",
          "",
          "[Removed Lines]",
          "1163: #line 1164 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1176: #line 1177 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1187:  if (yych <= '9') goto yy79;",
          "1188:  if (yych != ';') goto yy18;",
          "1189:  ++YYCURSOR;",
          "1191:  {",
          "1192: #if SIZEOF_ZEND_LONG == 4",
          "1193:  int digits = YYCURSOR - start - 3;",
          "",
          "[Removed Lines]",
          "1190: #line 595 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1203: #line 604 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1213:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1214:  return 1;",
          "1215: }",
          "1217: yy83:",
          "1218:  yych = *++YYCURSOR;",
          "1219:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1216: #line 1217 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1229: #line 1230 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1221:  yych = *++YYCURSOR;",
          "1222:  if (yych != ';') goto yy18;",
          "1223:  ++YYCURSOR;",
          "1225:  {",
          "1227:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1228:  return 1;",
          "1229: }",
          "1231: yy87:",
          "1232:  ++YYCURSOR;",
          "1234:  {",
          "1236:  ZVAL_NULL(rval);",
          "1237:  return 1;",
          "1238: }",
          "1240: yy89:",
          "1241:  yych = *++YYCURSOR;",
          "1242:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1224: #line 589 \"ext/standard/var_unserializer.re\"",
          "1230: #line 1231 \"ext/standard/var_unserializer.c\"",
          "1233: #line 583 \"ext/standard/var_unserializer.re\"",
          "1239: #line 1240 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1237: #line 598 \"ext/standard/var_unserializer.re\"",
          "1243: #line 1244 \"ext/standard/var_unserializer.c\"",
          "1246: #line 592 \"ext/standard/var_unserializer.re\"",
          "1252: #line 1253 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1259:  if (yych <= '9') goto yy91;",
          "1260:  if (yych != ';') goto yy18;",
          "1261:  ++YYCURSOR;",
          "1263:  {",
          "1264:  zend_long id;",
          "",
          "[Removed Lines]",
          "1262: #line 560 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1275: #line 569 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1283:  return 1;",
          "1284: }",
          "1286: yy95:",
          "1287:  yych = *++YYCURSOR;",
          "1288:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1285: #line 1286 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1298: #line 1299 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1305:  if (yych <= '9') goto yy97;",
          "1306:  if (yych != ';') goto yy18;",
          "1307:  ++YYCURSOR;",
          "1309:  {",
          "1310:  zend_long id;",
          "",
          "[Removed Lines]",
          "1308: #line 538 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1321: #line 547 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1328:  return 1;",
          "1329: }",
          "1331: }",
          "1335:  return 0;",
          "",
          "[Removed Lines]",
          "1330: #line 1331 \"ext/standard/var_unserializer.c\"",
          "1332: #line 883 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1343: #line 1344 \"ext/standard/var_unserializer.c\"",
          "1345: #line 895 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "101: #if 0",
          "102: PHPAPI void var_push_dtor_no_addref(php_unserialize_data_t *var_hashx, zval *rval)",
          "103: {",
          "105: #if VAR_ENTRIES_DBG",
          "107: #endif",
          "109:  if (!var_hash || var_hash->used_slots == VAR_ENTRIES_MAX) {",
          "",
          "[Removed Lines]",
          "104:  var_dtor_entries *var_hash = (*var_hashx)->last_dtor;",
          "106:  fprintf(stderr, \"var_push_dtor_no_addref(%ld): %d (%d)\\n\", var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(rval), Z_REFCOUNT_PP(rval));",
          "",
          "[Added Lines]",
          "104:  var_entries *var_hash;",
          "106:     if (!var_hashx || !*var_hashx) {",
          "107:         return;",
          "108:     }",
          "110:     var_hash = (*var_hashx)->last_dtor;",
          "112:  fprintf(stderr, \"var_push_dtor_no_addref(%p, %ld): %d (%d)\\n\", *rval, var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(rval), Z_REFCOUNT_PP(rval));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "182:  while (var_dtor_hash) {",
          "183:   for (i = 0; i < var_dtor_hash->used_slots; i++) {",
          "184:    zval_ptr_dtor(&var_dtor_hash->data[i]);",
          "185:   }",
          "186:   next = var_dtor_hash->next;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "190: #if VAR_ENTRIES_DBG",
          "191:    fprintf(stderr, \"var_destroy dtor(%p, %ld)\\n\", var_dtor_hash->data[i], Z_REFCOUNT_P(var_dtor_hash->data[i]));",
          "192: #endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "702:  zend_long elements = parse_iv(start + 2);",
          "706:  if (elements < 0) {",
          "707:   return 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "714:     if (!var_hash) return 0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "720: }",
          "722: \"o:\" iv \":\" [\"] {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "733:     if (!var_hash) return 0;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "741:  zval retval;",
          "742:  zval args[1];",
          "744:  if (*start == 'C') {",
          "745:   custom_object = 1;",
          "746:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "755:     if (!var_hash) return 0;",
          "",
          "---------------"
        ],
        "ext/xsl/xsltprocessor.c||ext/xsl/xsltprocessor.c": [
          "File: ext/xsl/xsltprocessor.c -> ext/xsl/xsltprocessor.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "218:  if (error == 1) {",
          "219:   for (i = nargs - 1; i >= 0; i--) {",
          "220:    obj = valuePop(ctxt);",
          "222:   }",
          "223:   return;",
          "224:  }",
          "",
          "[Removed Lines]",
          "221:    xmlXPathFreeObject(obj);",
          "",
          "[Added Lines]",
          "221:    if (obj) {",
          "222:     xmlXPathFreeObject(obj);",
          "223:    }",
          "",
          "---------------"
        ],
        "ext/zip/php_zip.c||ext/zip/php_zip.c": [
          "File: ext/zip/php_zip.c -> ext/zip/php_zip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "173:  if (path_cleaned_len > 1 && IS_SLASH(path_cleaned[path_cleaned_len - 1])) {",
          "175:   is_dir_only = 1;",
          "176:  } else {",
          "177:   memcpy(file_dirname, path_cleaned, path_cleaned_len);",
          "",
          "[Removed Lines]",
          "174:   len = spprintf(&file_dirname_fullpath, 0, \"%s/%s\", dest, file);",
          "",
          "[Added Lines]",
          "174:   len = spprintf(&file_dirname_fullpath, 0, \"%s/%s\", dest, path_cleaned);",
          "",
          "---------------"
        ],
        "ext/zip/tests/bug70350.phpt||ext/zip/tests/bug70350.phpt": [
          "File: ext/zip/tests/bug70350.phpt -> ext/zip/tests/bug70350.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #70350 (ZipArchive::extractTo allows for directory traversal when creating directories)",
          "3: --SKIPIF--",
          "4: <?php",
          "5: if(!extension_loaded('zip')) die('skip');",
          "6: ?>",
          "7: --FILE--",
          "8: <?php",
          "10: $dir = dirname(__FILE__).\"/bug70350\";",
          "11: mkdir($dir);",
          "12: $archive = new ZipArchive();",
          "13: $archive->open(\"$dir/a.zip\",ZipArchive::CREATE);",
          "14: $archive->addEmptyDir(\"../down2/\");",
          "15: $archive->close();",
          "17: $archive2 = new ZipArchive();",
          "18: $archive2->open(\"$dir/a.zip\");",
          "19: $archive2->extractTo($dir);",
          "20: $archive2->close();",
          "21: var_dump(file_exists(\"$dir/down2/\"));",
          "22: var_dump(file_exists(\"../down2/\"));",
          "23: ?>",
          "24: --CLEAN--",
          "25: <?php",
          "26: $dir = dirname(__FILE__).\"/bug70350\";",
          "27: rmdir(\"$dir/down2\");",
          "28: unlink(\"$dir/a.zip\");",
          "29: rmdir($dir);",
          "30: ?>",
          "31: --EXPECT--",
          "32: bool(true)",
          "33: bool(false)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0d13325b660b5ae64267dffcc9a153c7634fdfe2",
      "candidate_info": {
        "commit_hash": "0d13325b660b5ae64267dffcc9a153c7634fdfe2",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/0d13325b660b5ae64267dffcc9a153c7634fdfe2",
        "files": [
          "ext/exif/exif.c",
          "ext/session/session.c",
          "ext/session/tests/bug72681.phpt",
          "ext/standard/base64.c",
          "ext/standard/quot_print.c",
          "ext/standard/tests/strings/bug70436.phpt",
          "ext/standard/tests/strings/bug72663.phpt",
          "ext/standard/tests/strings/bug72663_2.phpt",
          "ext/standard/tests/strings/bug72663_3.phpt",
          "ext/standard/uuencode.c",
          "ext/standard/var_unserializer.c",
          "ext/wddx/wddx.c"
        ],
        "message": "Merge branch 'PHP-5.6' into PHP-7.0\n\n* PHP-5.6: (24 commits)\n  Update NEWS\n  BLock test with memory leak\n  fix tests\n  Fix TSRM build\n  Fix bug #72850 - integer overflow in uuencode\n  Fixed bug #72849 - integer overflow in urlencode\n  Fix bug #72848 - integer overflow in quoted_printable_encode caused heap corruption\n  Fix bug #72838 - \tInteger overflow lead to heap corruption in sql_regcase\n  Fix bug #72837 - integer overflow in bzdecompress caused heap corruption\n  Fix bug #72836 - integer overflow in base64_decode caused heap corruption\n  Fix for bug #72807 - do not produce strings with negative length\n  Fix for bug #72790 and bug #72799\n  Fix bug #72730 - imagegammacorrect allows arbitrary write access\n  Fix bug#72697 - select_colors write out-of-bounds\n  Fixed bug #72627: Memory Leakage In exif_process_IFD_in_TIFF\n  Fix bug #72750: wddx_deserialize null dereference\n  Fix bug #72771: ftps:// opendir wrapper is vulnerable to protocol downgrade attack\n  Improve fix for #72663\n  Fix bug #70436: Use After Free Vulnerability in unserialize()\n  Fix bug #72749: wddx_deserialize allows illegal memory access\n  ...\n\nConflicts:\n\tZend/zend_API.h\n\text/bz2/bz2.c\n\text/curl/interface.c\n\text/ereg/ereg.c\n\text/exif/exif.c\n\text/gd/gd.c\n\text/gd/tests/imagetruecolortopalette_error3.phpt\n\text/gd/tests/imagetruecolortopalette_error4.phpt\n\text/session/session.c\n\text/snmp/snmp.c\n\text/standard/base64.c\n\text/standard/ftp_fopen_wrapper.c\n\text/standard/quot_print.c\n\text/standard/url.c\n\text/standard/uuencode.c\n\text/standard/var.c\n\text/standard/var_unserializer.c\n\text/standard/var_unserializer.re\n\text/wddx/tests/bug72790.phpt\n\text/wddx/tests/bug72799.phpt\n\text/wddx/wddx.c\n\tsapi/cli/generate_mime_type_map.php",
        "before_after_code_files": [
          "ext/exif/exif.c||ext/exif/exif.c",
          "ext/session/session.c||ext/session/session.c",
          "ext/session/tests/bug72681.phpt||ext/session/tests/bug72681.phpt",
          "ext/standard/base64.c||ext/standard/base64.c",
          "ext/standard/quot_print.c||ext/standard/quot_print.c",
          "ext/standard/tests/strings/bug70436.phpt||ext/standard/tests/strings/bug70436.phpt",
          "ext/standard/tests/strings/bug72663.phpt||ext/standard/tests/strings/bug72663.phpt",
          "ext/standard/tests/strings/bug72663_2.phpt||ext/standard/tests/strings/bug72663_2.phpt",
          "ext/standard/tests/strings/bug72663_3.phpt||ext/standard/tests/strings/bug72663_3.phpt",
          "ext/standard/uuencode.c||ext/standard/uuencode.c",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/wddx/wddx.c||ext/wddx/wddx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/session/session.c||ext/session/session.c",
            "ext/session/tests/bug72681.phpt||ext/session/tests/bug72681.phpt"
          ],
          "candidate": [
            "ext/session/session.c||ext/session/session.c",
            "ext/session/tests/bug72681.phpt||ext/session/tests/bug72681.phpt"
          ]
        }
      },
      "candidate_diff": {
        "ext/exif/exif.c||ext/exif/exif.c": [
          "File: ext/exif/exif.c -> ext/exif/exif.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3762:       } else {",
          "3763:        exif_thumbnail_build(ImageInfo);",
          "3764:       }",
          "3766:      }",
          "3767: #ifdef EXIF_DEBUG",
          "3768:      exif_error_docref(NULL EXIFERR_CC, ImageInfo, E_NOTICE, \"Read next IFD (THUMBNAIL) done\");",
          "",
          "[Removed Lines]",
          "3765:       exif_thumbnail_build(ImageInfo);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ext/session/session.c||ext/session/session.c": [
          "File: ext/session/session.c -> ext/session/session.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "963:  int namelen;",
          "964:  zend_string *name;",
          "965:  php_unserialize_data_t var_hash;",
          "967:  PHP_VAR_UNSERIALIZE_INIT(var_hash);",
          "969:  for (p = val; p < endptr; ) {",
          "970:   zval *tmp;",
          "971:   namelen = ((unsigned char)(*p)) & (~PS_BIN_UNDEF);",
          "973:   if (namelen < 0 || namelen > PS_BIN_MAX || (p + namelen) >= endptr) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "966:  int skip = 0;",
          "972:   skip = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "984:   if ((tmp = zend_hash_find(&EG(symbol_table), name))) {",
          "985:    if ((Z_TYPE_P(tmp) == IS_ARRAY &&",
          "986:     Z_ARRVAL_P(tmp) == &EG(symbol_table)) || tmp == &PS(http_session_vars)) {",
          "989:    }",
          "990:   }",
          "",
          "[Removed Lines]",
          "987:     zend_string_release(name);",
          "988:     continue;",
          "",
          "[Added Lines]",
          "989:     skip = 1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "994:    current = var_tmp_var(&var_hash);",
          "995:    if (php_var_unserialize(current, (const unsigned char **) &p, (const unsigned char *) endptr, &var_hash)) {",
          "996:     ZVAL_PTR(&rv, current);",
          "998:    } else {",
          "999:     zend_string_release(name);",
          "1000:     php_session_normalize_vars();",
          "",
          "[Removed Lines]",
          "997:     php_set_session_var(name, &rv, &var_hash );",
          "",
          "[Added Lines]",
          "998:     if (!skip) {",
          "999:      php_set_session_var(name, &rv, &var_hash);",
          "1000:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1056:  zend_string *name;",
          "1057:  int has_value, retval = SUCCESS;",
          "1058:  php_unserialize_data_t var_hash;",
          "1060:  PHP_VAR_UNSERIALIZE_INIT(var_hash);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1062:  int skip = 0;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1064:  while (p < endptr) {",
          "1065:   zval *tmp;",
          "1066:   q = p;",
          "1067:   while (*q != PS_DELIMITER) {",
          "1068:    if (++q >= endptr) goto break_outer_loop;",
          "1069:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1071:   skip = 0;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1081:   if ((tmp = zend_hash_find(&EG(symbol_table), name))) {",
          "1082:    if ((Z_TYPE_P(tmp) == IS_ARRAY &&",
          "1083:     Z_ARRVAL_P(tmp) == &EG(symbol_table)) || tmp == &PS(http_session_vars)) {",
          "1085:    }",
          "1086:   }",
          "",
          "[Removed Lines]",
          "1084:     goto skip;",
          "",
          "[Added Lines]",
          "1089:     skip = 1;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1090:    current = var_tmp_var(&var_hash);",
          "1091:    if (php_var_unserialize(current, (const unsigned char **)&q, (const unsigned char *)endptr, &var_hash)) {",
          "1092:     ZVAL_PTR(&rv, current);",
          "1094:    } else {",
          "1095:     zend_string_release(name);",
          "1096:     retval = FAILURE;",
          "1097:     goto break_outer_loop;",
          "1098:    }",
          "1099:   } else {",
          "1101:   }",
          "1102: skip:",
          "1103:   zend_string_release(name);",
          "",
          "[Removed Lines]",
          "1093:     php_set_session_var(name, &rv, &var_hash);",
          "1100:    PS_ADD_VARL(name);",
          "",
          "[Added Lines]",
          "1098:     if (!skip) {",
          "1099:      php_set_session_var(name, &rv, &var_hash);",
          "1100:     }",
          "1107:    if(!skip) {",
          "1108:     PS_ADD_VARL(name);",
          "1109:    }",
          "",
          "---------------"
        ],
        "ext/session/tests/bug72681.phpt||ext/session/tests/bug72681.phpt": [
          "File: ext/session/tests/bug72681.phpt -> ext/session/tests/bug72681.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #72681: PHP Session Data Injection Vulnerability",
          "3: --SKIPIF--",
          "4: <?php include('skipif.inc'); ?>",
          "5: --FILE--",
          "6: <?php",
          "7: ini_set('session.serialize_handler', 'php');",
          "8: session_start();",
          "9: $_SESSION['_SESSION'] = 'ryat|O:8:\"stdClass\":0:{}';",
          "10: session_write_close();",
          "11: session_start();",
          "12: var_dump($_SESSION);",
          "13: ?>",
          "14: --EXPECT--",
          "15: array(0) {",
          "16: }",
          "",
          "---------------"
        ],
        "ext/standard/base64.c||ext/standard/base64.c": [
          "File: ext/standard/base64.c -> ext/standard/base64.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:  unsigned char *p;",
          "60:  zend_string *result;",
          "63:  p = (unsigned char *)ZSTR_VAL(result);",
          "",
          "[Removed Lines]",
          "62:  result = zend_string_alloc(((length + 2) / 3) * 4 * sizeof(char), 0);",
          "",
          "[Added Lines]",
          "62:  result = zend_string_safe_alloc(((length + 2) / 3), 4 * sizeof(char), 0, 0);",
          "",
          "---------------"
        ],
        "ext/standard/quot_print.c||ext/standard/quot_print.c": [
          "File: ext/standard/quot_print.c -> ext/standard/quot_print.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "275:   RETURN_EMPTY_STRING();",
          "276:  }",
          "279:  RETURN_STR(new_str);",
          "280: }",
          "",
          "[Removed Lines]",
          "278:  new_str = php_quot_print_encode((unsigned char *)ZSTR_VAL(str), (size_t)ZSTR_LEN(str));",
          "",
          "[Added Lines]",
          "278:  new_str = php_quot_print_encode((unsigned char *)ZSTR_VAL(str), ZSTR_LEN(str));",
          "",
          "---------------"
        ],
        "ext/standard/tests/strings/bug70436.phpt||ext/standard/tests/strings/bug70436.phpt": [
          "File: ext/standard/tests/strings/bug70436.phpt -> ext/standard/tests/strings/bug70436.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #70436: Use After Free Vulnerability in unserialize()",
          "3: --FILE--",
          "4: <?php",
          "6: class obj implements Serializable",
          "7: {",
          "8:  var $data;",
          "10:  function serialize()",
          "11:  {",
          "12:   return serialize($this->data);",
          "13:  }",
          "15:  function unserialize($data)",
          "16:  {",
          "17:   $this->data = unserialize($data);",
          "18:  }",
          "19: }",
          "21: $fakezval = ptr2str(1122334455);",
          "22: $fakezval .= ptr2str(0);",
          "23: $fakezval .= \"\\x00\\x00\\x00\\x00\";",
          "24: $fakezval .= \"\\x01\";",
          "25: $fakezval .= \"\\x00\";",
          "26: $fakezval .= \"\\x00\\x00\";",
          "28: $inner = 'C:3:\"obj\":3:{ryat';",
          "29: $exploit = 'a:4:{i:0;i:1;i:1;C:3:\"obj\":'.strlen($inner).':{'.$inner.'}i:2;s:'.strlen($fakezval).':\"'.$fakezval.'\";i:3;R:5;}';",
          "31: $data = unserialize($exploit);",
          "33: var_dump($data);",
          "35: function ptr2str($ptr)",
          "36: {",
          "37:  $out = '';",
          "39:  for ($i = 0; $i < 8; $i++) {",
          "40:   $out .= chr($ptr & 0xff);",
          "41:   $ptr >>= 8;",
          "42:  }",
          "44:  return $out;",
          "45: }",
          "46: ?>",
          "47: DONE",
          "48: --EXPECTF--",
          "49: Notice: unserialize(): Error at offset 0 of 3 bytes in %sbug70436.php on line %d",
          "51: Notice: unserialize(): Error at offset 17 of 17 bytes in %sbug70436.php on line %d",
          "52: array(4) {",
          "53:   [0]=>",
          "54:   int(1)",
          "55:   [1]=>",
          "56:   object(obj)#%d (1) {",
          "57:     [\"data\"]=>",
          "58:     bool(false)",
          "59:   }",
          "60:   [2]=>",
          "61:   string(24) \"%s\"",
          "62:   [3]=>",
          "63:   bool(false)",
          "64: }",
          "65: DONE",
          "",
          "---------------"
        ],
        "ext/standard/tests/strings/bug72663.phpt||ext/standard/tests/strings/bug72663.phpt": [
          "File: ext/standard/tests/strings/bug72663.phpt -> ext/standard/tests/strings/bug72663.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #72663: Create an Unexpected Object and Don't Invoke __wakeup() in Deserialization",
          "3: --FILE--",
          "4: <?php",
          "5: class obj implements Serializable {",
          "6:     var $data;",
          "7:     function serialize() {",
          "8:         return serialize($this->data);",
          "9:     }",
          "10:     function unserialize($data) {",
          "11:         $this->data = unserialize($data);",
          "12:     }",
          "13: }",
          "15: $inner = 'a:1:{i:0;O:9:\"Exception\":2:{s:7:\"'.\"\\0\".'*'.\"\\0\".'file\";R:4;}';",
          "16: $exploit = 'a:2:{i:0;C:3:\"obj\":'.strlen($inner).':{'.$inner.'}i:1;R:4;}';",
          "18: $data = unserialize($exploit);",
          "19: echo $data[1];",
          "20: ?>",
          "21: DONE",
          "22: --EXPECTF--",
          "23: Notice: unserialize(): Unexpected end of serialized data in %sbug72663.php on line %d",
          "25: Notice: unserialize(): Error at offset 46 of 47 bytes in %sbug72663.php on line %d",
          "26: DONE",
          "",
          "---------------"
        ],
        "ext/standard/tests/strings/bug72663_2.phpt||ext/standard/tests/strings/bug72663_2.phpt": [
          "File: ext/standard/tests/strings/bug72663_2.phpt -> ext/standard/tests/strings/bug72663_2.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #72663: Create an Unexpected Object and Don't Invoke __wakeup() in Deserialization",
          "3: --FILE--",
          "4: <?php",
          "6: ini_set('session.serialize_handler', 'php_serialize');",
          "7: session_start();",
          "8: $sess = 'O:9:\"Exception\":2:{s:7:\"'.\"\\0\".'*'.\"\\0\".'file\";R:1;}';",
          "9: session_decode($sess);",
          "10: var_dump($_SESSION);",
          "11: ?>",
          "12: DONE",
          "13: --EXPECTF--",
          "14: Notice: session_decode(): Unexpected end of serialized data in %sbug72663_2.php on line %d",
          "15: array(0) {",
          "16: }",
          "17: DONE",
          "",
          "---------------"
        ],
        "ext/standard/tests/strings/bug72663_3.phpt||ext/standard/tests/strings/bug72663_3.phpt": [
          "File: ext/standard/tests/strings/bug72663_3.phpt -> ext/standard/tests/strings/bug72663_3.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #72663: Create an Unexpected Object and Don't Invoke __wakeup() in Deserialization",
          "3: --XFAIL--",
          "4: Memory leak, TBF later.",
          "5: --FILE--",
          "6: <?php",
          "7: class obj {",
          "8:  var $ryat;",
          "9:  function __wakeup() {",
          "10:   $this->ryat = str_repeat('A', 0x112);",
          "11:  }",
          "12: }",
          "14: $poc = 'O:8:\"stdClass\":1:{i:0;O:3:\"obj\":1:{s:4:\"ryat\";R:1;';",
          "15: unserialize($poc);",
          "16: ?>",
          "17: DONE",
          "18: --EXPECTF--",
          "19: Notice: unserialize(): Error at offset 51 of 50 bytes in %sbug72663_3.php on line %d",
          "20: DONE",
          "",
          "---------------"
        ],
        "ext/standard/uuencode.c||ext/standard/uuencode.c": [
          "File: ext/standard/uuencode.c -> ext/standard/uuencode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:  char *p, *s, *e, *ee;",
          "72:  zend_string *dest;",
          "76:  p = ZSTR_VAL(dest);",
          "77:  s = src;",
          "78:  e = src + src_len;",
          "",
          "[Removed Lines]",
          "75:  dest = zend_string_alloc((size_t)ceil(src_len * 1.38) + 46, 0);",
          "",
          "[Added Lines]",
          "75:        Use 1.5 for easier calculation.",
          "77:  dest = zend_string_safe_alloc(src_len/2, 3, 46, 0);",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "651:  if (yybm[0+yych] & 128) {",
          "652:   goto yy20;",
          "653:  }",
          "655:  yych = *++YYCURSOR;",
          "656:  if (yych != '\"') goto yy18;",
          "657:  ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "654:  if (yych != ':') goto yy18;",
          "",
          "[Added Lines]",
          "654:  if (yych <= '/') goto yy18;",
          "655:  if (yych >= ';') goto yy18;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "801:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "802: }",
          "804: yy25:",
          "805:  yych = *++YYCURSOR;",
          "806:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "803: #line 804 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "804: #line 805 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "832:  return object_common2(UNSERIALIZE_PASSTHRU,",
          "833:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
          "834: }",
          "836: yy32:",
          "837:  yych = *++YYCURSOR;",
          "838:  if (yych == '+') goto yy33;",
          "",
          "[Removed Lines]",
          "835: #line 836 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "836: #line 837 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "878:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "879: }",
          "881: yy39:",
          "882:  yych = *++YYCURSOR;",
          "883:  if (yych == '+') goto yy40;",
          "",
          "[Removed Lines]",
          "880: #line 881 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "881: #line 882 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "932:  ZVAL_STR(rval, str);",
          "933:  return 1;",
          "934: }",
          "936: yy46:",
          "937:  yych = *++YYCURSOR;",
          "938:  if (yych == '+') goto yy47;",
          "",
          "[Removed Lines]",
          "935: #line 936 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "936: #line 937 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "985:  ZVAL_STRINGL(rval, str, len);",
          "986:  return 1;",
          "987: }",
          "989: yy53:",
          "990:  yych = *++YYCURSOR;",
          "991:  if (yych <= '/') {",
          "",
          "[Removed Lines]",
          "988: #line 989 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "989: #line 990 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1082:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1083:  return 1;",
          "1084: }",
          "1086: yy65:",
          "1087:  yych = *++YYCURSOR;",
          "1088:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1085: #line 1086 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1086: #line 1087 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1158:  return 1;",
          "1159: }",
          "1161: yy76:",
          "1162:  yych = *++YYCURSOR;",
          "1163:  if (yych == 'N') goto yy73;",
          "",
          "[Removed Lines]",
          "1160: #line 1161 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1161: #line 1162 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1210:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1211:  return 1;",
          "1212: }",
          "1214: yy83:",
          "1215:  yych = *++YYCURSOR;",
          "1216:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1213: #line 1214 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1214: #line 1215 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1224:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1225:  return 1;",
          "1226: }",
          "1228: yy87:",
          "1229:  ++YYCURSOR;",
          "1230: #line 573 \"ext/standard/var_unserializer.re\"",
          "",
          "[Removed Lines]",
          "1227: #line 1228 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1228: #line 1229 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1233:  ZVAL_NULL(rval);",
          "1234:  return 1;",
          "1235: }",
          "1237: yy89:",
          "1238:  yych = *++YYCURSOR;",
          "1239:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1236: #line 1237 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1237: #line 1238 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1282:  return 1;",
          "1283: }",
          "1285: yy95:",
          "1286:  yych = *++YYCURSOR;",
          "1287:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1284: #line 1285 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1285: #line 1286 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1331:  return 1;",
          "1332: }",
          "1334: }",
          "1335: #line 886 \"ext/standard/var_unserializer.re\"",
          "",
          "[Removed Lines]",
          "1333: #line 1334 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1334: #line 1335 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------"
        ],
        "ext/wddx/wddx.c||ext/wddx/wddx.c": [
          "File: ext/wddx/wddx.c -> ext/wddx/wddx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "921:    wddx_stack_top(stack, (void**)&ent2);",
          "925:     zval_ptr_dtor(&ent1->data);",
          "926:     efree(ent1);",
          "927:     return;",
          "",
          "[Removed Lines]",
          "924:    if (ent2->type == ST_FIELD && Z_ISUNDEF(ent2->data)) {",
          "",
          "[Added Lines]",
          "924:    if (Z_ISUNDEF(ent2->data)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1055:     if (Z_LVAL(ent->data) == -1) {",
          "1056:      ZVAL_STRINGL(&ent->data, (char *)tmp, len);",
          "1057:     }",
          "1059:    }",
          "1060:     break;",
          "",
          "[Removed Lines]",
          "1058:     efree(tmp);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1090:  if (stack.top == 1) {",
          "1091:   wddx_stack_top(&stack, (void**)&ent);",
          "1094:  } else {",
          "1095:   retval = FAILURE;",
          "1096:  }",
          "",
          "[Removed Lines]",
          "1092:   ZVAL_COPY(return_value, &ent->data);",
          "1093:   retval = SUCCESS;",
          "",
          "[Added Lines]",
          "1091:   if (IS_UNDEF(ent->data)) {",
          "1092:    retval = FAILURE;",
          "1093:   } else {",
          "1094:    ZVAL_COPY(return_value, &ent->data);",
          "1095:    retval = SUCCESS;",
          "1096:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}