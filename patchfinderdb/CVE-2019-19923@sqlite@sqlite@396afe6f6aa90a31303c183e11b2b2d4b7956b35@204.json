{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4a4c1bf85662b428235f99b92a07980191ba1e10",
      "candidate_info": {
        "commit_hash": "4a4c1bf85662b428235f99b92a07980191ba1e10",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4a4c1bf85662b428235f99b92a07980191ba1e10",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbeaux.c"
        ],
        "message": "Make the result of sqlite3_normalized_sql() survive its statement being reprepared.\n\nFossilOrigin-Name: 4330f0795dbc2ab41dddd41d5979331fb9b78c477c66367c4be52f929531a45f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbeaux.c||src/vdbeaux.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 175c15008e9f19b8f6762c2fe4a545735128765081980eed01d5e46ca4acb500",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:   zTmp = pA->zSql;",
          "134:   pA->zSql = pB->zSql;",
          "135:   pB->zSql = zTmp;",
          "137:   zTmp = pA->zNormSql;",
          "138:   pA->zNormSql = pB->zNormSql;",
          "139:   pB->zNormSql = zTmp;",
          "",
          "[Removed Lines]",
          "136: #if 0",
          "",
          "[Added Lines]",
          "136: #ifdef SQLITE_ENABLE_NORMALIZE",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
      "candidate_info": {
        "commit_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/527cbd4a104cb93bf3994b3dd3619a6299a78b13",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/build.c",
          "src/sqliteInt.h",
          "test/altertab.test"
        ],
        "message": "Do not allow CREATE TABLE or CREATE VIEW of an object with a name that looks like a shadow table name.\n\nFossilOrigin-Name: 6aef58b629d89955f85f65191ba2be67b2adfac4f0327fe9a7141cb2705dbc00",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/build.c||src/build.c",
          "src/sqliteInt.h||src/sqliteInt.h",
          "test/altertab.test||test/altertab.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8ad34d36a141fa8f5d9bd784dfeb892c983897a6dc6b867607cc668508acf944",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "856:       }",
          "857:     }",
          "858:   }else{",
          "861:     ){",
          "862:       sqlite3ErrorMsg(pParse, \"object name reserved for internal use: %s\",",
          "863:                       zName);",
          "864:       return SQLITE_ERROR;",
          "865:     }",
          "866:   }",
          "867:   return SQLITE_OK;",
          "868: }",
          "",
          "[Removed Lines]",
          "859:     if( pParse->nested==0",
          "860:      && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7)",
          "",
          "[Added Lines]",
          "859:     if( (pParse->nested==0 && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7))",
          "860:      || (sqlite3ReadOnlyShadowTables(db) && sqlite3ShadowTableName(db, zName))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "2132: static int isShadowTableName(sqlite3 *db, char *zName){",
          "",
          "[Added Lines]",
          "2133: int sqlite3ShadowTableName(sqlite3 *db, const char *zName){",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2147:   if( pMod->pModule->xShadowName==0 ) return 0;",
          "2148:   return pMod->pModule->xShadowName(zTail+1);",
          "2149: }",
          "",
          "[Removed Lines]",
          "2150: #else",
          "2151: # define isShadowTableName(x,y) 0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2190:   p = pParse->pNewTable;",
          "2191:   if( p==0 ) return;",
          "2194:     p->tabFlags |= TF_Shadow;",
          "2195:   }",
          "",
          "[Removed Lines]",
          "2193:   if( pSelect==0 && isShadowTableName(db, p->zName) ){",
          "",
          "[Added Lines]",
          "2192:   if( pSelect==0 && sqlite3ShadowTableName(db, p->zName) ){",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "4548: #  define sqlite3VtabInSync(db) ((db)->nVTrans>0 && (db)->aVTrans==0)",
          "4549: #endif",
          "4550: int sqlite3ReadOnlyShadowTables(sqlite3 *db);",
          "4551: int sqlite3VtabEponymousTableInit(Parse*,Module*);",
          "4552: void sqlite3VtabEponymousTableClear(sqlite3*,Module*);",
          "4553: void sqlite3VtabMakeWritable(Parse*,Table*);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4551: #ifndef SQLITE_OMIT_VIRTUALTABLE",
          "4552:   int sqlite3ShadowTableName(sqlite3 *db, const char *zName);",
          "4553: #else",
          "4554: # define sqlite3ShadowTableName(A,B) 0",
          "4555: #endif",
          "",
          "---------------"
        ],
        "test/altertab.test||test/altertab.test": [
          "File: test/altertab.test -> test/altertab.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "547:   } {1 {table y1_segments may not be modified}}",
          "549:   do_catchsql_test 16.20 {",
          "554:     DROP TABLE y1_segments;",
          "555:   } {1 {table y1_segments may not be dropped}}",
          "557:   do_execsql_test 16.30 {",
          "558:     ALTER TABLE y1 RENAME TO z1;",
          "559:   }",
          "",
          "[Removed Lines]",
          "550:     ALTER TABLE y1_segments RENAME TO abc;",
          "551:   } {1 {table y1_segments may not be altered}}",
          "553:   do_catchsql_test 16.21 {",
          "",
          "[Added Lines]",
          "553:   do_catchsql_test 16.20 {",
          "554:     ALTER TABLE y1_segments RENAME TO abc;",
          "555:   } {1 {table y1_segments may not be altered}}",
          "556:   sqlite3_db_config db DEFENSIVE 0",
          "557:   do_catchsql_test 16.22 {",
          "558:     ALTER TABLE y1_segments RENAME TO abc;",
          "559:   } {0 {}}",
          "560:   sqlite3_db_config db DEFENSIVE 1",
          "561:   do_catchsql_test 16.23 {",
          "562:     CREATE TABLE y1_segments AS SELECT * FROM abc;",
          "563:   } {1 {object name reserved for internal use: y1_segments}}",
          "564:   do_catchsql_test 16.24 {",
          "565:     CREATE VIEW y1_segments AS SELECT * FROM abc;",
          "566:   } {1 {object name reserved for internal use: y1_segments}}",
          "567:   sqlite3_db_config db DEFENSIVE 0",
          "568:   do_catchsql_test 16.25 {",
          "569:     ALTER TABLE abc RENAME TO y1_segments;",
          "570:   } {0 {}}",
          "571:   sqlite3_db_config db DEFENSIVE 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6301c43f236543ecb174e2639a0201bb29580fbe",
      "candidate_info": {
        "commit_hash": "6301c43f236543ecb174e2639a0201bb29580fbe",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/6301c43f236543ecb174e2639a0201bb29580fbe",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c",
          "test/dbfuzz001.test"
        ],
        "message": "dbfuzz2 found a NEVER() that is sometimes true.\n\nFossilOrigin-Name: 1201615cbbd3070158ea5fab3d2c8c95f41b25d6da096a44cb9257a7b7405efc",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c",
          "test/dbfuzz001.test||test/dbfuzz001.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 997b65117f8c12dba5fb85434fde9765cdb0d2a49cc3e31979abba3e21350086",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7039:   assert( sqlite3PagerIswriteable(pParent->pDbPage) );",
          "7040:   assert( pPage->nOverflow==1 );",
          "",
          "[Removed Lines]",
          "7043:   if( NEVER(pPage->nCell==0) ) return SQLITE_CORRUPT_BKPT;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/dbfuzz001.test||test/dbfuzz001.test": [
          "File: test/dbfuzz001.test -> test/dbfuzz001.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:   finish_test",
          "19:   return",
          "20: }",
          "22: # In the following database file, there is 384 bytes of free space",
          "23: # on page 8 that does not appear on the freeblock list.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: database_may_be_corrupt",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "180:   DELETE FROM t3 WHERE x IS NOT NULL AND +rowid=6;",
          "181: } {}",
          "183: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "184: # This is a dbfuzz2-generate test case that can cause a page with",
          "185: # pPage->nCell==0 to enter the balancer.",
          "186: #",
          "187: do_test dbfuzz001-200 {",
          "188:   db deserialize [decode_hexdb {",
          "189:     | size 3076 pagesize 512 filename c03.db",
          "190:     | page 1 offset 0",
          "191:     |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "192:     |     16: 02 00 01 01 00 40 20 20 00 00 00 0c 00 00 00 07   .....@  ........",
          "193:     |     32: 00 00 00 00 00 00 00 00 00 00 00 08 00 00 00 04   ................",
          "194:     |     48: 00 00 00 00 00 00 00 03 e8 00 00 01 00 00 00 00   ................",
          "195:     |     80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0c   ................",
          "196:     |     96: 00 2e 2c 50 0d 00 00 00 06 01 06 00 01 da 01 b0   ..,P............",
          "197:     |    112: 01 56 01 86 01 2a 01 06 00 00 00 00 00 00 00 00   .V...*..........",
          "198:     |    128: 00 00 00 00 00 00 00 00 ef 00 00 00 00 00 00 00   ................",
          "199:     |    192: 00 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "200:     |    224: 00 00 00 00 00 00 00 00 00 00 00 00 00 ff e9 00   ................",
          "201:     |    256: 00 00 00 00 00 00 22 07 06 17 11 11 01 31 74 61   ......\"......1ta",
          "202:     |    272: 62 6c 65 74 34 74 34 07 43 52 45 41 54 45 20 54   blet4t4.CREATE T",
          "203:     |    288: 41 42 4c 45 20 74 34 28 78 29 2a 06 06 17 13 11   ABLE t4(x)*.....",
          "204:     |    304: 01 3f 69 6e 64 65 78 74 33 78 74 33 06 43 52 45   .?indext3xt3.CRE",
          "205:     |    320: 41 54 45 20 49 4e 44 45 58 20 74 33 64 20 4f 4e   ATE INDEX t3d ON",
          "206:     |    336: 20 74 33 28 78 29 2e 04 06 17 15 11 01 45 69 6e    t3(x).......Ein",
          "207:     |    352: 64 65 78 74 32 63 64 74 32 05 43 52 45 41 54 45   dext2cdt2.CREATE",
          "208:     |    368: 20 49 4e 44 45 58 20 74 32 63 64 20 4f 4e 20 74    INDEX t2cd ON t",
          "209:     |    384: 32 28 63 2c 64 29 28 05 06 17 11 11 01 3d 74 61   2(c,d)(......=ta",
          "210:     |    400: 62 6c 65 74 33 74 33 04 43 52 45 41 54 45 20 54   blet3t3.CREATE T",
          "211:     |    416: 41 42 4c 45 20 74 33 28 63 2c 78 2c 65 2c 66 29   ABLE t3(c,x,e,f)",
          "212:     |    432: 28 02 06 17 11 11 01 3d 74 61 62 6c 65 74 32 74   (......=tablet2t",
          "213:     |    448: 32 03 43 52 45 41 54 45 20 54 41 42 4c 45 20 74   2.CREATE TABLE t",
          "214:     |    464: 32 28 63 2c 64 2c 65 2c 66 29 24 01 06 17 11 11   2(c,d,e,f)$.....",
          "215:     |    480: 01 35 74 61 62 6c 65 74 31 74 31 02 43 52 45 41   .5tablet1t1.CREA",
          "216:     |    496: 54 45 20 54 41 42 4c 45 20 74 31 28 61 2c 62 29   TE TABLE t1(a,b)",
          "217:     | page 2 offset 512",
          "218:     |      0: 0d 00 00 00 04 01 cf 00 01 fa 01 f3 01 de 01 cf   ................",
          "219:     |    176: 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "220:     |    256: 00 00 14 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "221:     |    368: 00 00 00 00 00 00 00 00 00 00 00 00 1e 00 00 00   ................",
          "222:     |    416: 00 00 00 1b 00 00 00 00 04 00 00 00 00 00 00 00   ................",
          "223:     |    448: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0d   ................",
          "224:     |    464: 04 03 17 17 73 65 76 65 6e 65 69 67 68 74 13 03   ....seveneight..",
          "225:     |    480: 03 07 07 40 14 00 00 00 00 00 00 40 18 00 00 00   ...@.......@....",
          "226:     |    496: 00 00 00 05 02 03 01 01 03 04 04 01 03 09 01 02   ................",
          "227:     | page 3 offset 1024",
          "228:     |      0: 0d 00 00 00 08 01 54 00 01 f7 01 ec 01 c5 01 aa   ......T.........",
          "229:     |     16: 01 a1 01 96 01 6f 01 54 00 00 00 00 00 00 00 00   .....o.T........",
          "230:     |     32: 00 00 00 00 00 00 00 03 e8 00 00 00 00 00 00 00   ................",
          "231:     |    336: 00 00 00 00 19 08 05 16 17 17 17 65 69 67 68 74   ...........eight",
          "232:     |    352: 65 69 67 68 74 73 65 76 65 6e 73 65 76 ff ff ff   eightsevensev...",
          "233:     |    368: 0e 05 07 07 07 07 40 18 00 00 00 00 00 00 40 18   ......@.......@.",
          "234:     |    384: 00 00 00 00 00 00 40 14 00 00 00 00 00 00 40 14   ......@.......@.",
          "235:     |    400: 00 00 00 00 00 00 09 06 05 01 01 01 01 04 04 03   ................",
          "236:     |    416: 03 07 05 05 01 01 09 09 02 02 19 04 05 17 17 17   ................",
          "237:     |    432: 17 73 65 6f 65 6e 65 69 67 68 74 65 69 67 68 74   .seoeneighteight",
          "238:     |    448: 73 65 76 65 6e 25 03 05 07 07 07 07 40 14 00 00   seven%......@...",
          "239:     |    464: 00 00 00 00 40 18 00 00 00 00 00 00 40 18 00 00   ....@.......@...",
          "240:     |    480: 00 00 00 00 40 14 00 00 00 00 00 00 09 02 05 01   ....@...........",
          "241:     |    496: 01 01 01 03 04 04 03 07 01 05 09 01 01 09 02 02   ................",
          "242:     | page 4 offset 1536",
          "243:     |      0: 0d 00 00 00 00 00 10 00 00 00 00 00 00 00 00 00   ................",
          "244:     |    160: 00 00 00 ea 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "245:     |    336: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00   ............ ...",
          "246:     | page 5 offset 2048",
          "247:     |      0: 0a 00 00 00 08 01 96 00 01 fa 01 c4 01 f2 01 bc   ................",
          "248:     |     16: 01 dc 01 a6 01 96 01 cc 00 00 00 00 00 00 00 00   ................",
          "249:     |     48: 00 00 00 00 00 00 00 00 00 00 10 00 00 00 00 00   ................",
          "250:     |    288: 00 00 00 00 00 00 00 00 00 64 00 00 00 2b 00 00   .........d...+..",
          "251:     |    400: 00 00 00 00 00 00 0f 04 17 17 01 65 69 67 68 74   ...........eight",
          "252:     |    416: 65 69 6f 68 74 08 15 04 07 07 01 40 18 00 00 00   eioht......@....",
          "253:     |    432: 00 00 00 40 18 00 00 00 00 00 00 07 07 04 01 01   ...@............",
          "254:     |    448: 01 04 04 06 07 04 01 01 01 02 02 05 0f 04 17 17   ................",
          "255:     |    464: 01 73 65 76 65 6e 65 69 67 68 74 04 15 04 07 07   .seveneight.....",
          "256:     |    480: 01 40 14 00 00 00 00 00 00 40 18 00 00 00 00 00   .@.......@......",
          "257:     |    496: 00 03 07 04 01 01 01 03 04 02 05 04 09 01 09 02   ................",
          "258:     | page 6 offset 2560",
          "259:     |      0: 0a 00 00 00 00 02 00 00 00 00 00 00 00 0d 00 00   ................",
          "260:     |     16: 00 08 01 c2 00 01 fb 01 f6 01 f1 01 ec 01 e0 01   ................",
          "261:     |     32: d4 01 cb 01 c2 00 00 00 00 00 00 00 00 00 00 00   ................",
          "262:     |    160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 00   ................",
          "263:     |    448: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 07   ................",
          "264:     |    464: 08 02 17 65 69 67 68 74 07 07 02 17 65 69 67 68   ...eight....eigh",
          "265:     |    480: 74 0a 06 02 07 40 18 00 00 00 00 00 00 0a 05 02   t....@..........",
          "266:     |    496: 07 40 18 00 04 02 01 04 03 03 02 01 04 03 02 02   .@..............",
          "267:     | end x/c03.db",
          "268:   }]",
          "269:   catchsql {INSERT INTO t3 SELECT * FROM t2;}",
          "270: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b1af9c603c70535a61b5785a4b29ce9cecc8f78d",
      "candidate_info": {
        "commit_hash": "b1af9c603c70535a61b5785a4b29ce9cecc8f78d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b1af9c603c70535a61b5785a4b29ce9cecc8f78d",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c"
        ],
        "message": "Progress handler improvements: (1) Invoke the callback after OP_Program opcodes (2) Invoke the callback multiple times in a row to catch up after a long run of no progress checks.\n\nFossilOrigin-Name: 0c5db18d79366d9c23925ce3ed835500311f32a10aa7dbfdd09148b1e8a2507b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: fa792714ae62fa980f1767acc6d622a6727ceb677870243c88548423795dcb5b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "823:     assert( db->nProgressOps!=0 );",
          "825:     if( db->xProgress(db->pProgressArg) ){",
          "826:       nProgressLimit = 0xffffffff;",
          "827:       rc = SQLITE_INTERRUPT;",
          "",
          "[Removed Lines]",
          "822:   if( nVmStep>=nProgressLimit && db->xProgress!=0 ){",
          "824:     nProgressLimit = nVmStep + db->nProgressOps - (nVmStep%db->nProgressOps);",
          "",
          "[Added Lines]",
          "822:   while( nVmStep>=nProgressLimit && db->xProgress!=0 ){",
          "824:     nProgressLimit += db->nProgressOps;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6174:   }",
          "6175: #endif",
          "6176:   pOp = &aOp[-1];",
          "6179: }",
          "",
          "[Removed Lines]",
          "6178:   break;",
          "",
          "[Added Lines]",
          "6177:   goto check_for_interrupt;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7586: vdbe_return:",
          "7587: #ifndef SQLITE_OMIT_PROGRESS_CALLBACK",
          "7589:     if( db->xProgress(db->pProgressArg) ){",
          "7590:       nProgressLimit = 0xffffffff;",
          "7591:       rc = SQLITE_INTERRUPT;",
          "",
          "[Removed Lines]",
          "7588:   if( nVmStep>=nProgressLimit && db->xProgress!=0 ){",
          "",
          "[Added Lines]",
          "7587:   while( nVmStep>=nProgressLimit && db->xProgress!=0 ){",
          "7588:     nProgressLimit += db->nProgressOps;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5bf4644f41336f85f066d009d9f67c446b439ed0",
      "candidate_info": {
        "commit_hash": "5bf4644f41336f85f066d009d9f67c446b439ed0",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/5bf4644f41336f85f066d009d9f67c446b439ed0",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Fix the \".open --hexdb\" command in the CLI so that it works even with terminal input.\n\nFossilOrigin-Name: 9b5d943426c9273162ecb4c561eb3b25e843318dd438239c882c9db50f788454",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 48889530a9de22fee536edfd1627be62396ed18d842d5fd6d91e010b4337be95",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "3877:   }else{",
          "3878:     in = p->in;",
          "3879:     nLine = p->lineno;",
          "3880:   }",
          "3882:   nLine++;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3880:     if( in==0 ) in = stdin;",
          "",
          "---------------"
        ]
      }
    }
  ]
}