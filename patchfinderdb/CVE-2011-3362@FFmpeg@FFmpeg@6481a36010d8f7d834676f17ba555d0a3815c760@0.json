{
  "cve_id": "CVE-2011-3362",
  "cve_desc": "Integer signedness error in the decode_residual_block function in cavsdec.c in libavcodec in FFmpeg before 0.7.3 and 0.8.x before 0.8.2, and libav through 0.7.1, allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via a crafted Chinese AVS video (aka CAVS) file.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "6481a36010d8f7d834676f17ba555d0a3815c760",
  "patch_info": {
    "commit_hash": "6481a36010d8f7d834676f17ba555d0a3815c760",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/6481a36010d8f7d834676f17ba555d0a3815c760",
    "files": [
      "libavcodec/cavsdec.c"
    ],
    "message": "cavs: fix oCERT #2011-002 FFmpeg/libavcodec insufficient boundary check\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavcodec/cavsdec.c||libavcodec/cavsdec.c"
    ]
  },
  "patch_diff": {
    "libavcodec/cavsdec.c||libavcodec/cavsdec.c": [
      "File: libavcodec/cavsdec.c -> libavcodec/cavsdec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "115: static int decode_residual_block(AVSContext *h, GetBitContext *gb,",
      "116:                                  const struct dec_2dvlc *r, int esc_golomb_order,",
      "117:                                  int qp, uint8_t *dst, int stride) {",
      "119:     DCTELEM level_buf[65];",
      "120:     uint8_t run_buf[65];",
      "121:     DCTELEM *block = h->block;",
      "",
      "[Removed Lines]",
      "118:     int i, level_code, esc_code, level, run, mask;",
      "",
      "[Added Lines]",
      "118:     int i, esc_code, level, mask;",
      "119:     unsigned int level_code, run;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "91d5da9321c52e8197fb14046ebb335f3e6ff4a0",
      "candidate_info": {
        "commit_hash": "91d5da9321c52e8197fb14046ebb335f3e6ff4a0",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/91d5da9321c52e8197fb14046ebb335f3e6ff4a0",
        "files": [
          "libavcodec/cavsdec.c"
        ],
        "message": "cavs: fix oCERT #2011-002 FFmpeg/libavcodec insufficient boundary check\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/cavsdec.c||libavcodec/cavsdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/cavsdec.c||libavcodec/cavsdec.c"
          ],
          "candidate": [
            "libavcodec/cavsdec.c||libavcodec/cavsdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/cavsdec.c||libavcodec/cavsdec.c": [
          "File: libavcodec/cavsdec.c -> libavcodec/cavsdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "115: static int decode_residual_block(AVSContext *h, GetBitContext *gb,",
          "116:                                  const struct dec_2dvlc *r, int esc_golomb_order,",
          "117:                                  int qp, uint8_t *dst, int stride) {",
          "119:     DCTELEM level_buf[65];",
          "120:     uint8_t run_buf[65];",
          "121:     DCTELEM *block = h->block;",
          "",
          "[Removed Lines]",
          "118:     int i, level_code, esc_code, level, run, mask;",
          "",
          "[Added Lines]",
          "118:     int i, esc_code, level, mask;",
          "119:     unsigned int level_code, run;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c5cbda50793e311aa73489d12184ffd6761c9fbf",
      "candidate_info": {
        "commit_hash": "c5cbda50793e311aa73489d12184ffd6761c9fbf",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/c5cbda50793e311aa73489d12184ffd6761c9fbf",
        "files": [
          "libavcodec/cavsdec.c"
        ],
        "message": "cavs: fix oCERT #2011-002 FFmpeg/libavcodec insufficient boundary check\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/cavsdec.c||libavcodec/cavsdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/cavsdec.c||libavcodec/cavsdec.c"
          ],
          "candidate": [
            "libavcodec/cavsdec.c||libavcodec/cavsdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/cavsdec.c||libavcodec/cavsdec.c": [
          "File: libavcodec/cavsdec.c -> libavcodec/cavsdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "115: static int decode_residual_block(AVSContext *h, GetBitContext *gb,",
          "116:                                  const struct dec_2dvlc *r, int esc_golomb_order,",
          "117:                                  int qp, uint8_t *dst, int stride) {",
          "119:     DCTELEM level_buf[65];",
          "120:     uint8_t run_buf[65];",
          "121:     DCTELEM *block = h->block;",
          "",
          "[Removed Lines]",
          "118:     int i, level_code, esc_code, level, run, mask;",
          "",
          "[Added Lines]",
          "118:     int i, esc_code, level, mask;",
          "119:     unsigned int level_code, run;",
          "",
          "---------------"
        ]
      }
    }
  ]
}