{
  "cve_id": "CVE-2019-10678",
  "cve_desc": "Domoticz before 4.10579 neglects to categorize \\n and \\r as insecure argument options.",
  "repo": "domoticz/domoticz",
  "patch_hash": "2119afbe74ee0c914c1d5c4c859c594c08b0ad42",
  "patch_info": {
    "commit_hash": "2119afbe74ee0c914c1d5c4c859c594c08b0ad42",
    "repo": "domoticz/domoticz",
    "commit_url": "https://github.com/domoticz/domoticz/commit/2119afbe74ee0c914c1d5c4c859c594c08b0ad42",
    "files": [
      "main/Helper.cpp"
    ],
    "message": "Do not allow enters/returns in arguments (thanks to Fabio Carretto)",
    "before_after_code_files": [
      "main/Helper.cpp||main/Helper.cpp"
    ]
  },
  "patch_diff": {
    "main/Helper.cpp||main/Helper.cpp": [
      "File: main/Helper.cpp -> main/Helper.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "1014:  \"$\",",
      "1015:  \"<\",",
      "1016:  \">\",",
      "1017:  NULL",
      "1018: };",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1017:  \"\\n\",",
      "1018:  \"\\r\",",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9e4716920d712cdb928744e596ad7c043540e9bb",
      "candidate_info": {
        "commit_hash": "9e4716920d712cdb928744e596ad7c043540e9bb",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/9e4716920d712cdb928744e596ad7c043540e9bb",
        "files": [
          "hardware/Winddelen.cpp",
          "main/Helper.cpp"
        ],
        "message": "Fixed compile warning in Helper class O_RDONLY",
        "before_after_code_files": [
          "hardware/Winddelen.cpp||hardware/Winddelen.cpp",
          "main/Helper.cpp||main/Helper.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [
            "main/Helper.cpp||main/Helper.cpp"
          ],
          "candidate": [
            "main/Helper.cpp||main/Helper.cpp"
          ]
        }
      },
      "candidate_diff": {
        "hardware/Winddelen.cpp||hardware/Winddelen.cpp": [
          "File: hardware/Winddelen.cpp -> hardware/Winddelen.cpp"
        ],
        "main/Helper.cpp||main/Helper.cpp": [
          "File: main/Helper.cpp -> main/Helper.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: #endif",
          "9: #include <sys/types.h>",
          "10: #include <sys/stat.h>",
          "11: #include <fstream>",
          "12: #include <math.h>",
          "13: #include <algorithm>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: #include <fcntl.h>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1576d5406a15a41c894461c3abe46a5f83d6c545",
      "candidate_info": {
        "commit_hash": "1576d5406a15a41c894461c3abe46a5f83d6c545",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/1576d5406a15a41c894461c3abe46a5f83d6c545",
        "files": [
          "hardware/NestOAuthAPI.cpp",
          "main/domoticz.cpp"
        ],
        "message": "Trace fix for old armada architecture Nest, Fixed compile warning",
        "before_after_code_files": [
          "hardware/NestOAuthAPI.cpp||hardware/NestOAuthAPI.cpp",
          "main/domoticz.cpp||main/domoticz.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "hardware/NestOAuthAPI.cpp||hardware/NestOAuthAPI.cpp": [
          "File: hardware/NestOAuthAPI.cpp -> hardware/NestOAuthAPI.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "696:  }",
          "697:  catch (std::exception& e)",
          "698:  {",
          "700:   return false;",
          "701:  }",
          "",
          "[Removed Lines]",
          "699:   _log.Log(LOG_ERROR, \"NestOAuthAPI: Failed to get thermostat serial (for now). Try again later.\");",
          "",
          "[Added Lines]",
          "699:   _log.Log(LOG_ERROR, \"NestOAuthAPI: Failed to get thermostat serial (for now). Trying again later..(%s)\",e.what());",
          "",
          "---------------"
        ],
        "main/domoticz.cpp||main/domoticz.cpp": [
          "File: main/domoticz.cpp -> main/domoticz.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:  int retval = prctl(PR_SET_PTRACER, PR_SET_PTRACER_ANY, 0, 0, 0);",
          "99:  pid_t intermediate_pid = fork();",
          "100:  if (intermediate_pid == -1)",
          "101:  {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "96: #ifdef PR_SET_PTRACER",
          "98: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "32a239241a9da599d482c249502acccdcdcf2336",
      "candidate_info": {
        "commit_hash": "32a239241a9da599d482c249502acccdcdcf2336",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/32a239241a9da599d482c249502acccdcdcf2336",
        "files": [
          "hardware/RFXComSerial.cpp",
          "main/mainworker.cpp"
        ],
        "message": "Corrected Chill in pTypeWeather",
        "before_after_code_files": [
          "hardware/RFXComSerial.cpp||hardware/RFXComSerial.cpp",
          "main/mainworker.cpp||main/mainworker.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "hardware/RFXComSerial.cpp||hardware/RFXComSerial.cpp": [
          "File: hardware/RFXComSerial.cpp -> hardware/RFXComSerial.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #define RETRY_DELAY 30",
          "28: extern std::string szStartupFolder;",
          "30: #define round(a) ( int ) ( a + .5 )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: #define RFX_WRITE_DELAY 300",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:  m_serial.setStopbits(serial::stopbits_one);",
          "83:  m_serial.setFlowcontrol(serial::flowcontrol_none);",
          "86:  m_serial.setTimeout(stimeout);",
          "87: }",
          "",
          "[Removed Lines]",
          "85:  serial::Timeout stimeout = serial::Timeout::simpleTimeout(100);",
          "",
          "[Added Lines]",
          "87:  serial::Timeout stimeout = serial::Timeout::simpleTimeout(200);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "682:   try",
          "683:   {",
          "684:    size_t twrite = m_serial.write((const uint8_t *)&output_buffer, tot_bytes);",
          "686:    if (twrite == tot_bytes)",
          "687:    {",
          "688:     int rcount = 0;",
          "",
          "[Removed Lines]",
          "685:    sleep_milliseconds(100);",
          "",
          "[Added Lines]",
          "687:    sleep_milliseconds(RFX_WRITE_DELAY);",
          "",
          "---------------"
        ],
        "main/mainworker.cpp||main/mainworker.cpp": [
          "File: main/mainworker.cpp -> main/mainworker.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10900:    WriteMessage(\" Invalid Temperature\");",
          "10901:    return;",
          "10902:   }",
          "10908:   {",
          "10910:   }",
          "10913:   if (subType = sTypeWEATHER2)",
          "10914:   {",
          "",
          "[Removed Lines]",
          "10903:   if (!pResponse->WEATHER.chillsign)",
          "10904:   {",
          "10905:    chill = float((pResponse->WEATHER.chillhigh * 256) + pResponse->WEATHER.chilllow) / 10.0f;",
          "10906:   }",
          "10907:   else",
          "10909:    chill = -(float(((pResponse->WEATHER.chillhigh) & 0x7F) * 256 + pResponse->WEATHER.chilllow) / 10.0f);",
          "10911:   pRFXDevice->SendWind(windID, BatteryLevel, intDirection, (float)intSpeed, (float)intGust, temp, chill, true, true, procResult.DeviceName, SignalLevel);",
          "",
          "[Added Lines]",
          "10904:   bool bHaveChill = false;",
          "10905:   if (1 == 0);// subType == sTypeWEATHERx)",
          "10907:    if (!pResponse->WEATHER.chillsign)",
          "10908:    {",
          "10909:     chill = float((pResponse->WEATHER.chillhigh * 256) + pResponse->WEATHER.chilllow) / 10.0f;",
          "10910:    }",
          "10911:    else",
          "10912:    {",
          "10913:     chill = -(float(((pResponse->WEATHER.chillhigh) & 0x7F) * 256 + pResponse->WEATHER.chilllow) / 10.0f);",
          "10914:    }",
          "10915:    bHaveChill = true;",
          "10917:   pRFXDevice->SendWind(windID, BatteryLevel, intDirection, (float)intSpeed, (float)intGust, temp, chill, true, bHaveChill, procResult.DeviceName, SignalLevel);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a60b4c737406ef9c85b57cd80349cdf015100930",
      "candidate_info": {
        "commit_hash": "a60b4c737406ef9c85b57cd80349cdf015100930",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/a60b4c737406ef9c85b57cd80349cdf015100930",
        "files": [
          "www/views/lights.html"
        ],
        "message": "Added Blinds T14/R15/T16 to lights.html",
        "before_after_code_files": [
          "www/views/lights.html||www/views/lights.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "www/views/lights.html||www/views/lights.html": [
          "File: www/views/lights.html -> www/views/lights.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "95:      <option value=\"211\">Blinds T11 ASP</option>",
          "96:      <option value=\"212\">Blinds T12 Confexx</option>",
          "97:      <option value=\"213\">Blinds T13 Screenline</option>",
          "98:      <option value=\"301\">Smartwares Radiator</option>",
          "99:      <option value=\"302\">Home Confort TEL-010</option>",
          "100:      <option value=\"303\">Selector Switch</option>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98:      <option value=\"214\">Blinds T14 Hualite</option>",
          "99:      <option value=\"215\">Blinds T15 RFU</option>",
          "100:      <option value=\"216\">Blinds T16 Zemismart</option>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f158b5f595d18a19f91473f81a055317e275f09b",
      "candidate_info": {
        "commit_hash": "f158b5f595d18a19f91473f81a055317e275f09b",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/f158b5f595d18a19f91473f81a055317e275f09b",
        "files": [
          "www/app/DevicesController.js"
        ],
        "message": "Devices tab, removed unnecessary zwave node id as this is part of the ID already",
        "before_after_code_files": [
          "www/app/DevicesController.js||www/app/DevicesController.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "www/app/DevicesController.js||www/app/DevicesController.js": [
          "File: www/app/DevicesController.js -> www/app/DevicesController.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "359:         itemSubIcons += '&nbsp;<img src=\"images/empty16.png\">';",
          "360:        }",
          "361:        var ID = item.ID;",
          "371:        if (item.Type == \"Lighting 1\") {",
          "372:         ID = String.fromCharCode(item.ID);",
          "373:        }",
          "",
          "[Removed Lines]",
          "362:               if (typeof(item.HardwareTypeVal) != 'undefined' && item.HardwareTypeVal == 21) {",
          "363:                 var ZWID = item.ID.substr(-4, 2);",
          "364:                 if (ZWID == '00') {",
          "365:                   ZWID = item.ID.substr(-2, 2);",
          "366:                 }",
          "367:                 ZWID = '0x' + ZWID;",
          "368:                 var ZWIDdec =  (\"00\" + parseInt(ZWID)).slice(-3);",
          "369:                 item.HardwareName = item.HardwareName + \" \" + ZWIDdec + ' (' + ZWID + ')';",
          "370:               }",
          "",
          "[Added Lines]",
          "365:        if (typeof(item.HardwareTypeVal) != 'undefined' && item.HardwareTypeVal == 21) {",
          "366:         var ZWID = item.ID.substr(-4, 2);",
          "367:         if (ZWID == '00') {",
          "368:         ZWID = item.ID.substr(-2, 2);",
          "369:         }",
          "370:         ZWID = '0x' + ZWID;",
          "371:         var ZWIDdec =  (\"00\" + parseInt(ZWID)).slice(-3);",
          "372:         item.HardwareName = item.HardwareName + \" \" + ZWIDdec + ' (' + ZWID + ')';",
          "373:        }",
          "",
          "---------------"
        ]
      }
    }
  ]
}