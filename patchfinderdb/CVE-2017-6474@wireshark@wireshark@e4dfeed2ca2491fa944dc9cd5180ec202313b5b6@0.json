{
  "cve_id": "CVE-2017-6474",
  "cve_desc": "In Wireshark 2.2.0 to 2.2.4 and 2.0.0 to 2.0.10, there is a NetScaler file parser infinite loop, triggered by a malformed capture file. This was addressed in wiretap/netscaler.c by validating record sizes.",
  "repo": "wireshark/wireshark",
  "patch_hash": "e4dfeed2ca2491fa944dc9cd5180ec202313b5b6",
  "patch_info": {
    "commit_hash": "e4dfeed2ca2491fa944dc9cd5180ec202313b5b6",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/e4dfeed2ca2491fa944dc9cd5180ec202313b5b6",
    "files": [
      "wiretap/netscaler.c"
    ],
    "message": "Do more record length checks.\n\nDo the check early in the process of processing the record, and do it\nfor all record types.\n\nBug: 13429\nChange-Id: Id7f4d12415c6740241850d8f873cff52909e7110\nReviewed-on: https://code.wireshark.org/review/20330\nReviewed-by: Guy Harris <guy@alum.mit.edu>",
    "before_after_code_files": [
      "wiretap/netscaler.c||wiretap/netscaler.c"
    ]
  },
  "patch_diff": {
    "wiretap/netscaler.c||wiretap/netscaler.c": [
      "File: wiretap/netscaler.c -> wiretap/netscaler.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "973:             return FALSE;\\",
      "974:         }\\",
      "983:             return FALSE;\\",
      "984:         }\\",
      "986:         if ((nstrace_buflen - nstrace_buf_offset) < (phdr)->caplen) {\\",
      "",
      "[Removed Lines]",
      "975:         (phdr)->rec_type = REC_TYPE_PACKET;\\",
      "976:         TIMEDEFV##ver((phdr),fp,type);\\",
      "977:         FULLPART##SIZEDEFV##ver((phdr),type,ver);\\",
      "978:         TRACE_V##ver##_REC_LEN_OFF((phdr),v##ver##_##fullpart,type,pktrace##fullpart##_v##ver);\\",
      "980:         if ((phdr)->caplen < sizeof *type) {\\",
      "",
      "[Added Lines]",
      "976:         if (pletoh16(&type->nsprRecordSize) < sizeof *type) {\\",
      "981:         (phdr)->rec_type = REC_TYPE_PACKET;\\",
      "982:         TIMEDEFV##ver((phdr),fp,type);\\",
      "983:         FULLPART##SIZEDEFV##ver((phdr),type,ver);\\",
      "984:         TRACE_V##ver##_REC_LEN_OFF((phdr),v##ver##_##fullpart,type,pktrace##fullpart##_v##ver);\\",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1037:                 case NSPR_ABSTIME_V10:",
      "1038:                 {",
      "1039:                     nspr_pktracefull_v10_t *fp = (nspr_pktracefull_v10_t *) &nstrace_buf[nstrace_buf_offset];",
      "1040:                     ns_setabstime(nstrace, pletoh32(((nspr_abstime_v10_t *) fp)->abs_Time), pletoh32(&((nspr_abstime_v10_t *) fp)->abs_RelTime));",
      "1041:                     nstrace_buf_offset += pletoh16(&fp->nsprRecordSize);",
      "1042:                     break;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1040:                     if (pletoh16(&fp->nsprRecordSize) == 0) {",
      "1043:                         return FALSE;",
      "1044:                     }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1045:                 case NSPR_RELTIME_V10:",
      "1046:                 {",
      "1047:                     nspr_pktracefull_v10_t *fp = (nspr_pktracefull_v10_t *) &nstrace_buf[nstrace_buf_offset];",
      "1048:                     ns_setrelativetime(nstrace, pletoh32(((nspr_abstime_v10_t *) fp)->abs_RelTime));",
      "1049:                     nstrace_buf_offset += pletoh16(&fp->nsprRecordSize);",
      "1050:                     break;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1053:                     if (pletoh16(&fp->nsprRecordSize) == 0) {",
      "1056:                         return FALSE;",
      "1057:                     }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1057:                 default:",
      "1058:                 {",
      "1059:                     nspr_pktracefull_v10_t *fp = (nspr_pktracefull_v10_t *) &nstrace_buf[nstrace_buf_offset];",
      "1060:                     nstrace_buf_offset += pletoh16(&fp->nsprRecordSize);",
      "1061:                     break;",
      "1062:                 }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1070:                     if (pletoh16(&fp->nsprRecordSize) == 0) {",
      "1073:                         return FALSE;",
      "1074:                     }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1137:             return FALSE;\\",
      "1138:         }\\",
      "1148:             return FALSE;\\",
      "1149:         }\\",
      "1151:         if ((nstrace_buflen - nstrace_buf_offset) < (phdr)->caplen) {\\",
      "",
      "[Removed Lines]",
      "1139:         (phdr)->rec_type = REC_TYPE_PACKET;\\",
      "1140:         TIMEDEFV##ver((phdr),fp,type);\\",
      "1141:         FULLPART##SIZEDEFV##ver((phdr),fp,ver);\\",
      "1142:         TRACE_V##ver##_REC_LEN_OFF((phdr),enumprefix,type,structname);\\",
      "1143:         (phdr)->pseudo_header.nstr.rec_type = NSPR_HEADER_VERSION##HEADERVER;\\",
      "1145:         if ((phdr)->caplen < sizeof *fp) {\\",
      "",
      "[Added Lines]",
      "1155:         if (nspr_getv20recordsize((nspr_hd_v20_t *)fp) < sizeof *fp) {\\",
      "1160:         (phdr)->rec_type = REC_TYPE_PACKET;\\",
      "1161:         TIMEDEFV##ver((phdr),fp,type);\\",
      "1162:         FULLPART##SIZEDEFV##ver((phdr),fp,ver);\\",
      "1163:         TRACE_V##ver##_REC_LEN_OFF((phdr),enumprefix,type,structname);\\",
      "1164:         (phdr)->pseudo_header.nstr.rec_type = NSPR_HEADER_VERSION##HEADERVER;\\",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1230:                 case NSPR_ABSTIME_V20:",
      "1231:                 {",
      "1232:                     nspr_pktracefull_v20_t *fp20 = (nspr_pktracefull_v20_t *) &nstrace_buf[nstrace_buf_offset];",
      "1233:                     nstrace_buf_offset += nspr_getv20recordsize((nspr_hd_v20_t *)fp20);",
      "1234:                     ns_setabstime(nstrace, pletoh32(&((nspr_abstime_v20_t *) fp20)->abs_Time), pletoh16(&((nspr_abstime_v20_t *) fp20)->abs_RelTime));",
      "1235:                     break;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1248:                     if (nspr_getv20recordsize((nspr_hd_v20_t *)fp20) == 0) {",
      "1251:                         return FALSE;",
      "1252:                     }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1238:                 case NSPR_RELTIME_V20:",
      "1239:                 {",
      "1240:                     nspr_pktracefull_v20_t *fp20 = (nspr_pktracefull_v20_t *) &nstrace_buf[nstrace_buf_offset];",
      "1241:                     ns_setrelativetime(nstrace, pletoh16(&((nspr_abstime_v20_t *) fp20)->abs_RelTime));",
      "1242:                     nstrace_buf_offset += nspr_getv20recordsize((nspr_hd_v20_t *)fp20);",
      "1243:                     break;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1261:                     if (nspr_getv20recordsize((nspr_hd_v20_t *)fp20) == 0) {",
      "1264:                         return FALSE;",
      "1265:                     }",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1255:                 default:",
      "1256:                 {",
      "1257:                     nspr_pktracefull_v20_t *fp20 = (nspr_pktracefull_v20_t *) &nstrace_buf[nstrace_buf_offset];",
      "1258:                     nstrace_buf_offset += nspr_getv20recordsize((nspr_hd_v20_t *)fp20);",
      "1259:                     break;",
      "1260:                 }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1283:                     if (nspr_getv20recordsize((nspr_hd_v20_t *)fp20) == 0) {",
      "1286:                         return FALSE;",
      "1287:                     }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1396:             nstrace_buf[nstrace_buf_offset])",
      "1397:         {",
      "1398:             hdp = (nspr_hd_v20_t *) &nstrace_buf[nstrace_buf_offset];",
      "1403:             }",
      "1404:             switch (hdp->phd_RecordType)",
      "1405:             {",
      "",
      "[Removed Lines]",
      "1399:             if(nspr_getv20recordsize(hdp) == 0){",
      "1402:               return FALSE;",
      "",
      "[Added Lines]",
      "1429:             if (nspr_getv20recordsize(hdp) == 0) {",
      "1432:                 return FALSE;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d00ced1548c914802a033d328f0b79d60ccd50c3",
      "candidate_info": {
        "commit_hash": "d00ced1548c914802a033d328f0b79d60ccd50c3",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/d00ced1548c914802a033d328f0b79d60ccd50c3",
        "files": [
          "wiretap/netscaler.c"
        ],
        "message": "Do more record length checks.\n\nDo the check early in the process of processing the record, and do it\nfor all record types.\n\nBug: 13429\nChange-Id: Id7f4d12415c6740241850d8f873cff52909e7110\nReviewed-on: https://code.wireshark.org/review/20330\nReviewed-by: Guy Harris <guy@alum.mit.edu>\n(cherry picked from commit e4dfeed2ca2491fa944dc9cd5180ec202313b5b6)\nReviewed-on: https://code.wireshark.org/review/20331",
        "before_after_code_files": [
          "wiretap/netscaler.c||wiretap/netscaler.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "wiretap/netscaler.c||wiretap/netscaler.c"
          ],
          "candidate": [
            "wiretap/netscaler.c||wiretap/netscaler.c"
          ]
        }
      },
      "candidate_diff": {
        "wiretap/netscaler.c||wiretap/netscaler.c": [
          "File: wiretap/netscaler.c -> wiretap/netscaler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "973:             return FALSE;\\",
          "974:         }\\",
          "983:             return FALSE;\\",
          "984:         }\\",
          "986:         if ((nstrace_buflen - nstrace_buf_offset) < (phdr)->caplen) {\\",
          "",
          "[Removed Lines]",
          "975:         (phdr)->rec_type = REC_TYPE_PACKET;\\",
          "976:         TIMEDEFV##ver((phdr),fp,type);\\",
          "977:         FULLPART##SIZEDEFV##ver((phdr),type,ver);\\",
          "978:         TRACE_V##ver##_REC_LEN_OFF((phdr),v##ver##_##fullpart,type,pktrace##fullpart##_v##ver);\\",
          "980:         if ((phdr)->caplen < sizeof *type) {\\",
          "",
          "[Added Lines]",
          "976:         if (pletoh16(&type->nsprRecordSize) < sizeof *type) {\\",
          "981:         (phdr)->rec_type = REC_TYPE_PACKET;\\",
          "982:         TIMEDEFV##ver((phdr),fp,type);\\",
          "983:         FULLPART##SIZEDEFV##ver((phdr),type,ver);\\",
          "984:         TRACE_V##ver##_REC_LEN_OFF((phdr),v##ver##_##fullpart,type,pktrace##fullpart##_v##ver);\\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1037:                 case NSPR_ABSTIME_V10:",
          "1038:                 {",
          "1039:                     nspr_pktracefull_v10_t *fp = (nspr_pktracefull_v10_t *) &nstrace_buf[nstrace_buf_offset];",
          "1040:                     ns_setabstime(nstrace, pletoh32(((nspr_abstime_v10_t *) fp)->abs_Time), pletoh32(&((nspr_abstime_v10_t *) fp)->abs_RelTime));",
          "1041:                     nstrace_buf_offset += pletoh16(&fp->nsprRecordSize);",
          "1042:                     break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1040:                     if (pletoh16(&fp->nsprRecordSize) == 0) {",
          "1043:                         return FALSE;",
          "1044:                     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1045:                 case NSPR_RELTIME_V10:",
          "1046:                 {",
          "1047:                     nspr_pktracefull_v10_t *fp = (nspr_pktracefull_v10_t *) &nstrace_buf[nstrace_buf_offset];",
          "1048:                     ns_setrelativetime(nstrace, pletoh32(((nspr_abstime_v10_t *) fp)->abs_RelTime));",
          "1049:                     nstrace_buf_offset += pletoh16(&fp->nsprRecordSize);",
          "1050:                     break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1053:                     if (pletoh16(&fp->nsprRecordSize) == 0) {",
          "1056:                         return FALSE;",
          "1057:                     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1057:                 default:",
          "1058:                 {",
          "1059:                     nspr_pktracefull_v10_t *fp = (nspr_pktracefull_v10_t *) &nstrace_buf[nstrace_buf_offset];",
          "1060:                     nstrace_buf_offset += pletoh16(&fp->nsprRecordSize);",
          "1061:                     break;",
          "1062:                 }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1070:                     if (pletoh16(&fp->nsprRecordSize) == 0) {",
          "1073:                         return FALSE;",
          "1074:                     }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1137:             return FALSE;\\",
          "1138:         }\\",
          "1148:             return FALSE;\\",
          "1149:         }\\",
          "1151:         if ((nstrace_buflen - nstrace_buf_offset) < (phdr)->caplen) {\\",
          "",
          "[Removed Lines]",
          "1139:         (phdr)->rec_type = REC_TYPE_PACKET;\\",
          "1140:         TIMEDEFV##ver((phdr),fp,type);\\",
          "1141:         FULLPART##SIZEDEFV##ver((phdr),fp,ver);\\",
          "1142:         TRACE_V##ver##_REC_LEN_OFF((phdr),enumprefix,type,structname);\\",
          "1143:         (phdr)->pseudo_header.nstr.rec_type = NSPR_HEADER_VERSION##HEADERVER;\\",
          "1145:         if ((phdr)->caplen < sizeof *fp) {\\",
          "",
          "[Added Lines]",
          "1155:         if (nspr_getv20recordsize((nspr_hd_v20_t *)fp) < sizeof *fp) {\\",
          "1160:         (phdr)->rec_type = REC_TYPE_PACKET;\\",
          "1161:         TIMEDEFV##ver((phdr),fp,type);\\",
          "1162:         FULLPART##SIZEDEFV##ver((phdr),fp,ver);\\",
          "1163:         TRACE_V##ver##_REC_LEN_OFF((phdr),enumprefix,type,structname);\\",
          "1164:         (phdr)->pseudo_header.nstr.rec_type = NSPR_HEADER_VERSION##HEADERVER;\\",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1230:                 case NSPR_ABSTIME_V20:",
          "1231:                 {",
          "1232:                     nspr_pktracefull_v20_t *fp20 = (nspr_pktracefull_v20_t *) &nstrace_buf[nstrace_buf_offset];",
          "1233:                     nstrace_buf_offset += nspr_getv20recordsize((nspr_hd_v20_t *)fp20);",
          "1234:                     ns_setabstime(nstrace, pletoh32(&((nspr_abstime_v20_t *) fp20)->abs_Time), pletoh16(&((nspr_abstime_v20_t *) fp20)->abs_RelTime));",
          "1235:                     break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1248:                     if (nspr_getv20recordsize((nspr_hd_v20_t *)fp20) == 0) {",
          "1251:                         return FALSE;",
          "1252:                     }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1238:                 case NSPR_RELTIME_V20:",
          "1239:                 {",
          "1240:                     nspr_pktracefull_v20_t *fp20 = (nspr_pktracefull_v20_t *) &nstrace_buf[nstrace_buf_offset];",
          "1241:                     ns_setrelativetime(nstrace, pletoh16(&((nspr_abstime_v20_t *) fp20)->abs_RelTime));",
          "1242:                     nstrace_buf_offset += nspr_getv20recordsize((nspr_hd_v20_t *)fp20);",
          "1243:                     break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1261:                     if (nspr_getv20recordsize((nspr_hd_v20_t *)fp20) == 0) {",
          "1264:                         return FALSE;",
          "1265:                     }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1255:                 default:",
          "1256:                 {",
          "1257:                     nspr_pktracefull_v20_t *fp20 = (nspr_pktracefull_v20_t *) &nstrace_buf[nstrace_buf_offset];",
          "1258:                     nstrace_buf_offset += nspr_getv20recordsize((nspr_hd_v20_t *)fp20);",
          "1259:                     break;",
          "1260:                 }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1283:                     if (nspr_getv20recordsize((nspr_hd_v20_t *)fp20) == 0) {",
          "1286:                         return FALSE;",
          "1287:                     }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1396:             nstrace_buf[nstrace_buf_offset])",
          "1397:         {",
          "1398:             hdp = (nspr_hd_v20_t *) &nstrace_buf[nstrace_buf_offset];",
          "1403:             }",
          "1404:             switch (hdp->phd_RecordType)",
          "1405:             {",
          "",
          "[Removed Lines]",
          "1399:             if(nspr_getv20recordsize(hdp) == 0){",
          "1402:               return FALSE;",
          "",
          "[Added Lines]",
          "1429:             if (nspr_getv20recordsize(hdp) == 0) {",
          "1432:                 return FALSE;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a998c9195f183d85f5b0bbeebba21a2d4d303d47",
      "candidate_info": {
        "commit_hash": "a998c9195f183d85f5b0bbeebba21a2d4d303d47",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/a998c9195f183d85f5b0bbeebba21a2d4d303d47",
        "files": [
          "wiretap/netscaler.c"
        ],
        "message": "Do more record length checks.\n\nDo the check early in the process of processing the record, and do it\nfor all record types.\n\nBug: 13429\nChange-Id: Id7f4d12415c6740241850d8f873cff52909e7110\nReviewed-on: https://code.wireshark.org/review/20330\nReviewed-by: Guy Harris <guy@alum.mit.edu>\n(cherry picked from commit e4dfeed2ca2491fa944dc9cd5180ec202313b5b6)\nReviewed-on: https://code.wireshark.org/review/20332",
        "before_after_code_files": [
          "wiretap/netscaler.c||wiretap/netscaler.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "wiretap/netscaler.c||wiretap/netscaler.c"
          ],
          "candidate": [
            "wiretap/netscaler.c||wiretap/netscaler.c"
          ]
        }
      },
      "candidate_diff": {
        "wiretap/netscaler.c||wiretap/netscaler.c": [
          "File: wiretap/netscaler.c -> wiretap/netscaler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "972:             return FALSE;\\",
          "973:         }\\",
          "982:             return FALSE;\\",
          "983:         }\\",
          "985:         if ((nstrace_buflen - nstrace_buf_offset) < (phdr)->caplen) {\\",
          "",
          "[Removed Lines]",
          "974:         (phdr)->rec_type = REC_TYPE_PACKET;\\",
          "975:         TIMEDEFV##ver((phdr),fp,type);\\",
          "976:         FULLPART##SIZEDEFV##ver((phdr),type,ver);\\",
          "977:         TRACE_V##ver##_REC_LEN_OFF((phdr),v##ver##_##fullpart,type,pktrace##fullpart##_v##ver);\\",
          "979:         if ((phdr)->caplen < sizeof *type) {\\",
          "",
          "[Added Lines]",
          "975:         if (pletoh16(&type->nsprRecordSize) < sizeof *type) {\\",
          "980:         (phdr)->rec_type = REC_TYPE_PACKET;\\",
          "981:         TIMEDEFV##ver((phdr),fp,type);\\",
          "982:         FULLPART##SIZEDEFV##ver((phdr),type,ver);\\",
          "983:         TRACE_V##ver##_REC_LEN_OFF((phdr),v##ver##_##fullpart,type,pktrace##fullpart##_v##ver);\\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1036:                 case NSPR_ABSTIME_V10:",
          "1037:                 {",
          "1038:                     nspr_pktracefull_v10_t *fp = (nspr_pktracefull_v10_t *) &nstrace_buf[nstrace_buf_offset];",
          "1039:                     ns_setabstime(nstrace, pletoh32(((nspr_abstime_v10_t *) fp)->abs_Time), pletoh32(&((nspr_abstime_v10_t *) fp)->abs_RelTime));",
          "1040:                     nstrace_buf_offset += pletoh16(&fp->nsprRecordSize);",
          "1041:                     break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1039:                     if (pletoh16(&fp->nsprRecordSize) == 0) {",
          "1042:                         return FALSE;",
          "1043:                     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1044:                 case NSPR_RELTIME_V10:",
          "1045:                 {",
          "1046:                     nspr_pktracefull_v10_t *fp = (nspr_pktracefull_v10_t *) &nstrace_buf[nstrace_buf_offset];",
          "1047:                     ns_setrelativetime(nstrace, pletoh32(((nspr_abstime_v10_t *) fp)->abs_RelTime));",
          "1048:                     nstrace_buf_offset += pletoh16(&fp->nsprRecordSize);",
          "1049:                     break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1052:                     if (pletoh16(&fp->nsprRecordSize) == 0) {",
          "1055:                         return FALSE;",
          "1056:                     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1056:                 default:",
          "1057:                 {",
          "1058:                     nspr_pktracefull_v10_t *fp = (nspr_pktracefull_v10_t *) &nstrace_buf[nstrace_buf_offset];",
          "1059:                     nstrace_buf_offset += pletoh16(&fp->nsprRecordSize);",
          "1060:                     break;",
          "1061:                 }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1069:                     if (pletoh16(&fp->nsprRecordSize) == 0) {",
          "1072:                         return FALSE;",
          "1073:                     }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1132:             return FALSE;\\",
          "1133:         }\\",
          "1143:             return FALSE;\\",
          "1144:         }\\",
          "1146:         if ((nstrace_buflen - nstrace_buf_offset) < (phdr)->caplen) {\\",
          "",
          "[Removed Lines]",
          "1134:         (phdr)->rec_type = REC_TYPE_PACKET;\\",
          "1135:         TIMEDEFV##ver((phdr),fp,type);\\",
          "1136:         FULLPART##SIZEDEFV##ver((phdr),fp,ver);\\",
          "1137:         TRACE_V##ver##_REC_LEN_OFF((phdr),enumprefix,type,structname);\\",
          "1138:         (phdr)->pseudo_header.nstr.rec_type = NSPR_HEADER_VERSION##HEADERVER;\\",
          "1140:         if ((phdr)->caplen < sizeof *fp) {\\",
          "",
          "[Added Lines]",
          "1150:         if (nspr_getv20recordsize((nspr_hd_v20_t *)fp) < sizeof *fp) {\\",
          "1155:         (phdr)->rec_type = REC_TYPE_PACKET;\\",
          "1156:         TIMEDEFV##ver((phdr),fp,type);\\",
          "1157:         FULLPART##SIZEDEFV##ver((phdr),fp,ver);\\",
          "1158:         TRACE_V##ver##_REC_LEN_OFF((phdr),enumprefix,type,structname);\\",
          "1159:         (phdr)->pseudo_header.nstr.rec_type = NSPR_HEADER_VERSION##HEADERVER;\\",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1225:                 case NSPR_ABSTIME_V20:",
          "1226:                 {",
          "1227:                     nspr_pktracefull_v20_t *fp20 = (nspr_pktracefull_v20_t *) &nstrace_buf[nstrace_buf_offset];",
          "1228:                     nstrace_buf_offset += nspr_getv20recordsize((nspr_hd_v20_t *)fp20);",
          "1229:                     ns_setabstime(nstrace, pletoh32(&((nspr_abstime_v20_t *) fp20)->abs_Time), pletoh16(&((nspr_abstime_v20_t *) fp20)->abs_RelTime));",
          "1230:                     break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1243:                     if (nspr_getv20recordsize((nspr_hd_v20_t *)fp20) == 0) {",
          "1246:                         return FALSE;",
          "1247:                     }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1233:                 case NSPR_RELTIME_V20:",
          "1234:                 {",
          "1235:                     nspr_pktracefull_v20_t *fp20 = (nspr_pktracefull_v20_t *) &nstrace_buf[nstrace_buf_offset];",
          "1236:                     ns_setrelativetime(nstrace, pletoh16(&((nspr_abstime_v20_t *) fp20)->abs_RelTime));",
          "1237:                     nstrace_buf_offset += nspr_getv20recordsize((nspr_hd_v20_t *)fp20);",
          "1238:                     break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1256:                     if (nspr_getv20recordsize((nspr_hd_v20_t *)fp20) == 0) {",
          "1259:                         return FALSE;",
          "1260:                     }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1250:                 default:",
          "1251:                 {",
          "1252:                     nspr_pktracefull_v20_t *fp20 = (nspr_pktracefull_v20_t *) &nstrace_buf[nstrace_buf_offset];",
          "1253:                     nstrace_buf_offset += nspr_getv20recordsize((nspr_hd_v20_t *)fp20);",
          "1254:                     break;",
          "1255:                 }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1278:                     if (nspr_getv20recordsize((nspr_hd_v20_t *)fp20) == 0) {",
          "1281:                         return FALSE;",
          "1282:                     }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1387:             nstrace_buf[nstrace_buf_offset])",
          "1388:         {",
          "1389:             hdp = (nspr_hd_v20_t *) &nstrace_buf[nstrace_buf_offset];",
          "1394:             }",
          "1395:             switch (hdp->phd_RecordType)",
          "1396:             {",
          "",
          "[Removed Lines]",
          "1390:             if(nspr_getv20recordsize(hdp) == 0){",
          "1393:               return FALSE;",
          "",
          "[Added Lines]",
          "1420:             if (nspr_getv20recordsize(hdp) == 0) {",
          "1423:                 return FALSE;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "19c51d27b9cabf7b811d6c60e42a59330235c2de",
      "candidate_info": {
        "commit_hash": "19c51d27b9cabf7b811d6c60e42a59330235c2de",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/19c51d27b9cabf7b811d6c60e42a59330235c2de",
        "files": [
          "wiretap/netscaler.c"
        ],
        "message": "Don't go past the end of a page in a NetScaler file.\n\nRecords in a properly formatted NetScaler file shouldn't go past the end\nof a page, but nothing guarantees that a NetScaler file will be properly\nformatted.\n\nNetScaler 3.x files allow record bodies to go past the end of a page,\nbut 1.x and 2.x files don't, so treat record headers that go past the\nend of a page, and record bodies in 1.x and 2.x files that go past the\nend of a page, as errors.\n\nClean up some stuff while we're at it.\n\nBug: 13430\nChange-Id: I3b1d56086e3bb14b246406f306e3d730df337561\nReviewed-on: https://code.wireshark.org/review/20326\nReviewed-by: Guy Harris <guy@alum.mit.edu>",
        "before_after_code_files": [
          "wiretap/netscaler.c||wiretap/netscaler.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "wiretap/netscaler.c||wiretap/netscaler.c"
          ],
          "candidate": [
            "wiretap/netscaler.c||wiretap/netscaler.c"
          ]
        }
      },
      "candidate_diff": {
        "wiretap/netscaler.c||wiretap/netscaler.c": [
          "File: wiretap/netscaler.c -> wiretap/netscaler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "604: typedef struct {",
          "605:     gchar  *pnstrace_buf;",
          "606:     gint64  xxx_offset;",
          "",
          "[Removed Lines]",
          "607:     gint32  nstrace_buf_offset;",
          "608:     gint32  nstrace_buflen;",
          "",
          "[Added Lines]",
          "607:     guint32 nstrace_buf_offset;",
          "608:     guint32 nstrace_buflen;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "867:     {\\",
          "868:         nstrace_t *nstrace = (nstrace_t *)wth->priv;\\",
          "869:         gchar* nstrace_buf = nstrace->pnstrace_buf;\\",
          "872:         int bytes_read;\\",
          "873:         do\\",
          "874:         {\\",
          "",
          "[Removed Lines]",
          "870:         gint32 nstrace_buf_offset = nstrace->nstrace_buf_offset;\\",
          "871:         gint32 nstrace_buflen = nstrace->nstrace_buflen;\\",
          "",
          "[Added Lines]",
          "870:         guint32 nstrace_buf_offset = nstrace->nstrace_buf_offset;\\",
          "871:         guint32 nstrace_buflen = nstrace->nstrace_buflen;\\",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "892:             nstrace_buf_offset = 0;\\",
          "893:             nstrace->xxx_offset += nstrace_buflen;\\",
          "894:             nstrace_buflen = GET_READ_PAGE_SIZE((nstrace->file_size - nstrace->xxx_offset));\\",
          "896:         return FALSE;\\",
          "897:     }",
          "",
          "[Removed Lines]",
          "895:         }while((nstrace_buflen > 0) && (bytes_read = file_read(nstrace_buf, nstrace_buflen, wth->fh)) && bytes_read == nstrace_buflen); \\",
          "",
          "[Added Lines]",
          "895:         }while((nstrace_buflen > 0) && (bytes_read = file_read(nstrace_buf, nstrace_buflen, wth->fh)) > 0 && (guint32)bytes_read == nstrace_buflen); \\",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "966: #define PACKET_DESCRIBE(phdr,FULLPART,fullpart,ver,type,HEADERVER) \\",
          "967:     do {\\",
          "968:         nspr_pktrace##fullpart##_v##ver##_t *type = (nspr_pktrace##fullpart##_v##ver##_t *) &nstrace_buf[nstrace_buf_offset];\\",
          "969:         (phdr)->rec_type = REC_TYPE_PACKET;\\",
          "970:         TIMEDEFV##ver((phdr),fp,type);\\",
          "971:         FULLPART##SIZEDEFV##ver((phdr),type,ver);\\",
          "972:         TRACE_V##ver##_REC_LEN_OFF((phdr),v##ver##_##fullpart,type,pktrace##fullpart##_v##ver);\\",
          "973:         ws_buffer_assure_space(wth->frame_buffer, (phdr)->caplen);\\",
          "974:         memcpy(ws_buffer_start_ptr(wth->frame_buffer), type, (phdr)->caplen);\\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "970:         if ((nstrace_buflen - nstrace_buf_offset) < sizeof *type) {\\",
          "973:             return FALSE;\\",
          "974:         }\\",
          "980:         if ((phdr)->caplen < sizeof *type) {\\",
          "983:             return FALSE;\\",
          "984:         }\\",
          "986:         if ((nstrace_buflen - nstrace_buf_offset) < (phdr)->caplen) {\\",
          "989:             return FALSE;\\",
          "990:         }\\",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "984:     nstrace_t *nstrace = (nstrace_t *)wth->priv;",
          "985:     guint64 nsg_creltime = nstrace->nsg_creltime;",
          "986:     gchar *nstrace_buf = nstrace->pnstrace_buf;",
          "989:     int bytes_read;",
          "",
          "[Removed Lines]",
          "987:     gint32 nstrace_buf_offset = nstrace->nstrace_buf_offset;",
          "988:     gint32 nstrace_buflen = nstrace->nstrace_buflen;",
          "",
          "[Added Lines]",
          "1005:     guint32 nstrace_buf_offset = nstrace->nstrace_buf_offset;",
          "1006:     guint32 nstrace_buflen = nstrace->nstrace_buflen;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1048:         nstrace_buf_offset = 0;",
          "1049:         nstrace->xxx_offset += nstrace_buflen;",
          "1050:         nstrace_buflen = GET_READ_PAGE_SIZE((nstrace->file_size - nstrace->xxx_offset));",
          "1053:     return FALSE;",
          "1054: }",
          "",
          "[Removed Lines]",
          "1051:     }while((nstrace_buflen > 0) && (bytes_read = file_read(nstrace_buf, nstrace_buflen, wth->fh)) && (bytes_read == nstrace_buflen));",
          "",
          "[Added Lines]",
          "1069:     }while((nstrace_buflen > 0) && (bytes_read = file_read(nstrace_buf, nstrace_buflen, wth->fh)) > 0 && ((guint32)bytes_read == nstrace_buflen));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1112: #define PACKET_DESCRIBE(phdr,FULLPART,ver,enumprefix,type,structname,HEADERVER)\\",
          "1113:     do {\\",
          "1114:         nspr_##structname##_t *fp= (nspr_##structname##_t*)&nstrace_buf[nstrace_buf_offset];\\",
          "1115:         (phdr)->rec_type = REC_TYPE_PACKET;\\",
          "1116:         TIMEDEFV##ver((phdr),fp,type);\\",
          "1117:         FULLPART##SIZEDEFV##ver((phdr),fp,ver);\\",
          "1118:         TRACE_V##ver##_REC_LEN_OFF((phdr),enumprefix,type,structname);\\",
          "1119:         (phdr)->pseudo_header.nstr.rec_type = NSPR_HEADER_VERSION##HEADERVER;\\",
          "1120:         ws_buffer_assure_space(wth->frame_buffer, (phdr)->caplen);\\",
          "1121:         memcpy(ws_buffer_start_ptr(wth->frame_buffer), fp, (phdr)->caplen);\\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1134:         if ((nstrace_buflen - nstrace_buf_offset) < sizeof *fp) {\\",
          "1137:             return FALSE;\\",
          "1138:         }\\",
          "1145:         if ((phdr)->caplen < sizeof *fp) {\\",
          "1148:             return FALSE;\\",
          "1149:         }\\",
          "1151:         if ((nstrace_buflen - nstrace_buf_offset) < (phdr)->caplen) {\\",
          "1154:             return FALSE;\\",
          "1155:         }\\",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1131:     nstrace_t *nstrace = (nstrace_t *)wth->priv;",
          "1132:     guint64 nsg_creltime = nstrace->nsg_creltime;",
          "1133:     gchar *nstrace_buf = nstrace->pnstrace_buf;",
          "1136:     int bytes_read;",
          "",
          "[Removed Lines]",
          "1134:     gint32 nstrace_buf_offset = nstrace->nstrace_buf_offset;",
          "1135:     gint32 nstrace_buflen = nstrace->nstrace_buflen;",
          "",
          "[Added Lines]",
          "1170:     guint32 nstrace_buf_offset = nstrace->nstrace_buf_offset;",
          "1171:     guint32 nstrace_buflen = nstrace->nstrace_buflen;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1228:         nstrace_buf_offset = 0;",
          "1229:         nstrace->xxx_offset += nstrace_buflen;",
          "1230:         nstrace_buflen = GET_READ_PAGE_SIZE((nstrace->file_size - nstrace->xxx_offset));",
          "1233:     return FALSE;",
          "1234: }",
          "",
          "[Removed Lines]",
          "1231:     }while((nstrace_buflen > 0) && (bytes_read = file_read(nstrace_buf, nstrace_buflen, wth->fh)) && (bytes_read == nstrace_buflen));",
          "",
          "[Added Lines]",
          "1267:     }while((nstrace_buflen > 0) && (bytes_read = file_read(nstrace_buf, nstrace_buflen, wth->fh)) > 0 && ((guint32)bytes_read == nstrace_buflen));",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1272: #define PACKET_DESCRIBE(phdr,FULLPART,ver,enumprefix,type,structname,HEADERVER)\\",
          "1273:     do {\\",
          "1274:         nspr_##structname##_t *fp = (nspr_##structname##_t *) &nstrace_buf[nstrace_buf_offset];\\",
          "1275:         (phdr)->rec_type = REC_TYPE_PACKET;\\",
          "1276:         TIMEDEFV##ver((phdr),fp,type);\\",
          "1277:         FULLPART##SIZEDEFV##ver((phdr),fp,ver);\\",
          "1278:         TRACE_V##ver##_REC_LEN_OFF((phdr),enumprefix,type,structname);\\",
          "1279:         SETETHOFFSET_##ver(phdr)\\",
          "1280:         (phdr)->pseudo_header.nstr.rec_type = NSPR_HEADER_VERSION##HEADERVER;\\",
          "1281:         ws_buffer_assure_space(wth->frame_buffer, (phdr)->caplen);\\",
          "1283:         while (nstrace_tmpbuff_off < nspr_##structname##_s) {\\",
          "1284:             nstrace_tmpbuff[nstrace_tmpbuff_off++] = nstrace_buf[nstrace_buf_offset++];\\",
          "1285:         }\\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1312:         if ((nstrace->nstrace_buflen - nstrace_buf_offset) < sizeof *fp) {\\",
          "1315:             return FALSE;\\",
          "1316:         }\\",
          "1324:         if ((phdr)->caplen < sizeof *fp) {\\",
          "1327:             return FALSE;\\",
          "1328:         }\\",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1319:     nstrace_t *nstrace = (nstrace_t *)wth->priv;",
          "1320:     guint64 nsg_creltime;",
          "1321:     gchar *nstrace_buf = nstrace->pnstrace_buf;",
          "1324:     guint8 nstrace_tmpbuff[65536];",
          "1325:     guint32 nstrace_tmpbuff_off=0,nst_dataSize=0,rec_size=0,nsg_nextPageOffset=0;",
          "1326:     nspr_hd_v20_t *hdp;",
          "",
          "[Removed Lines]",
          "1322:     gint32 nstrace_buf_offset = nstrace->nstrace_buf_offset;",
          "1323:     gint32 nstrace_buflen = nstrace->nstrace_buflen;",
          "",
          "[Added Lines]",
          "1375:     guint32 nstrace_buf_offset = nstrace->nstrace_buf_offset;",
          "1376:     guint32 nstrace_buflen = nstrace->nstrace_buflen;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1336:         if (!nstrace_buf[nstrace_buf_offset] && nstrace_buf_offset <= NSPR_PAGESIZE_TRACE){",
          "1337:             nstrace_buf_offset = NSPR_PAGESIZE_TRACE;",
          "1338:         }",
          "1340:             memset(&nstrace_buf[bytes_read], 0, NSPR_PAGESIZE_TRACE-bytes_read);",
          "1341:         }",
          "1342:         while ((nstrace_buf_offset < NSPR_PAGESIZE_TRACE) &&",
          "",
          "[Removed Lines]",
          "1339:         if(file_eof(wth->fh) && bytes_read>0 ){",
          "",
          "[Added Lines]",
          "1392:         if (file_eof(wth->fh) && bytes_read > 0 && bytes_read < NSPR_PAGESIZE_TRACE){",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1396:         nstrace_buf_offset = 0;",
          "1397:         nstrace->xxx_offset += nstrace_buflen;",
          "1398:         nstrace_buflen = NSPR_PAGESIZE_TRACE;",
          "1401:     return FALSE;",
          "1402: }",
          "",
          "[Removed Lines]",
          "1399:     } while((nstrace_buflen > 0) && (bytes_read = file_read(nstrace_buf, nstrace_buflen, wth->fh)) && (file_eof(wth->fh) || bytes_read == nstrace_buflen));",
          "",
          "[Added Lines]",
          "1452:     } while((nstrace_buflen > 0) && (bytes_read = file_read(nstrace_buf, nstrace_buflen, wth->fh)) > 0 && (file_eof(wth->fh) || (guint32)bytes_read == nstrace_buflen));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8b8ad47820a8d7de978442448aff58099cbe8236",
      "candidate_info": {
        "commit_hash": "8b8ad47820a8d7de978442448aff58099cbe8236",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/8b8ad47820a8d7de978442448aff58099cbe8236",
        "files": [
          "wiretap/netscaler.c"
        ],
        "message": "Backport wiretap/netscaler.c from 2.0.11\n\nThis fixes several bugs most notably the following vulnerabilities:\nCVE-2017-6474, CVE-2017-6468, CVE-2017-6467\n\nThe backport omits the support for netscaler 3.5 format\n\nBug: 13429 13430 12083\nChange-Id: I0a63bd79437551e7effd31cce29930ed9f4fb4e9\nReviewed-on: https://code.wireshark.org/review/20538\nReviewed-by: Balint Reczey <balint@balintreczey.hu>",
        "before_after_code_files": [
          "wiretap/netscaler.c||wiretap/netscaler.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "wiretap/netscaler.c||wiretap/netscaler.c"
          ],
          "candidate": [
            "wiretap/netscaler.c||wiretap/netscaler.c"
          ]
        }
      },
      "candidate_diff": {
        "wiretap/netscaler.c||wiretap/netscaler.c": [
          "File: wiretap/netscaler.c -> wiretap/netscaler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: #include <string.h>",
          "24: #include \"wtap-int.h\"",
          "25: #include \"file_wrappers.h\"",
          "27: #include \"netscaler.h\"",
          "",
          "[Removed Lines]",
          "26: #include <wsutil/buffer.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133: typedef struct nspr_headerdev_v10",
          "",
          "[Removed Lines]",
          "130: #define NSPR_V20RECORDSIZE_2BYTES       0x80",
          "",
          "[Added Lines]",
          "129: #define NSPR_V20RECORDSIZE_2BYTES       0x80U",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "215: {",
          "219: } nspr_pktracefull_v10_t;",
          "223: typedef struct nspr_pktracefull_v20",
          "",
          "[Removed Lines]",
          "220: #define nspr_pktracefull_v10_s    (nspr_hdev_v10_s + 4)",
          "",
          "[Added Lines]",
          "218: #define nspr_pktracefull_v10_s    ((guint32)(sizeof(nspr_pktracefull_v10_t)))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "229: } nspr_pktracefull_v20_t;",
          "233: typedef struct nspr_pktracefull_v21",
          "",
          "[Removed Lines]",
          "230: #define nspr_pktracefull_v20_s    ((guint32)(sizeof(nspr_pktracefull_v20_t) - 4))",
          "",
          "[Added Lines]",
          "227: #define nspr_pktracefull_v20_s    ((guint32)(sizeof(nspr_pktracefull_v20_t)))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "241: } nspr_pktracefull_v21_t;",
          "245: typedef struct nspr_pktracefull_v22",
          "",
          "[Removed Lines]",
          "242: #define nspr_pktracefull_v21_s    ((guint32)(sizeof(nspr_pktracefull_v21_t) - 4))",
          "",
          "[Added Lines]",
          "238: #define nspr_pktracefull_v21_s    ((guint32)(sizeof(nspr_pktracefull_v21_t)))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "254: } nspr_pktracefull_v22_t;",
          "257: typedef struct nspr_pktracefull_v23",
          "258: {",
          "",
          "[Removed Lines]",
          "255: #define nspr_pktracefull_v22_s    ((guint32)(sizeof(nspr_pktracefull_v22_t) - 2))",
          "",
          "[Added Lines]",
          "250: #define nspr_pktracefull_v22_s    ((guint32)(sizeof(nspr_pktracefull_v22_t)))",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "267: } nspr_pktracefull_v23_t;",
          "271: typedef struct nspr_pktracefull_v24",
          "",
          "[Removed Lines]",
          "268: #define nspr_pktracefull_v23_s    ((guint32)(sizeof(nspr_pktracefull_v23_t) - 2))",
          "",
          "[Added Lines]",
          "262: #define nspr_pktracefull_v23_s    ((guint32)(sizeof(nspr_pktracefull_v23_t)))",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "284: } nspr_pktracefull_v24_t;",
          "288: typedef struct nspr_pktracefull_v25",
          "",
          "[Removed Lines]",
          "285: #define nspr_pktracefull_v24_s    ((guint32)(sizeof(nspr_pktracefull_v24_t) - 4))",
          "",
          "[Added Lines]",
          "278: #define nspr_pktracefull_v24_s    ((guint32)(sizeof(nspr_pktracefull_v24_t)))",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "303: } nspr_pktracefull_v25_t;",
          "309: typedef struct nspr_pktracefull_v26",
          "",
          "[Removed Lines]",
          "304: #define nspr_pktracefull_v25_s    ((guint32)(sizeof(nspr_pktracefull_v25_t) - 4))",
          "305: #define fp_src_vmname    fp_Data",
          "306: #define fp_src_vmname    fp_Data",
          "",
          "[Added Lines]",
          "296: #define nspr_pktracefull_v25_s    ((guint32)(sizeof(nspr_pktracefull_v25_t)))",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "323:     guint8 fp_reserved;",
          "324:     guint8 fp_ns_activity[4];",
          "327: } nspr_pktracefull_v26_t;",
          "331: typedef struct nspr_pktracepart_v10",
          "",
          "[Removed Lines]",
          "328: #define nspr_pktracefull_v26_s    ((guint32)(sizeof(nspr_pktracefull_v26_t) - 4))",
          "",
          "[Added Lines]",
          "317: #define nspr_pktracefull_v26_s    ((guint32)(sizeof(nspr_pktracefull_v26_t)))",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "338: } nspr_pktracepart_v10_t;",
          "342: typedef struct nspr_pktracepart_v20",
          "",
          "[Removed Lines]",
          "339: #define nspr_pktracepart_v10_s    (nspr_pktracefull_v10_s + 4)",
          "",
          "[Added Lines]",
          "327: #define nspr_pktracepart_v10_s    ((guint32)(sizeof(nspr_pktracepart_v10_t)))",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "350: } nspr_pktracepart_v20_t;",
          "354: typedef struct nspr_pktracepart_v21",
          "",
          "[Removed Lines]",
          "351: #define nspr_pktracepart_v20_s    ((guint32)(sizeof(nspr_pktracepart_v20_t) -4))",
          "",
          "[Added Lines]",
          "338: #define nspr_pktracepart_v20_s    ((guint32)(sizeof(nspr_pktracepart_v20_t)))",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "364: } nspr_pktracepart_v21_t;",
          "368: typedef struct nspr_pktracepart_v22",
          "",
          "[Removed Lines]",
          "365: #define nspr_pktracepart_v21_s    ((guint32)(sizeof(nspr_pktracepart_v21_t) -4))",
          "",
          "[Added Lines]",
          "351: #define nspr_pktracepart_v21_s    ((guint32)(sizeof(nspr_pktracepart_v21_t)))",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "379: } nspr_pktracepart_v22_t;",
          "382: typedef struct nspr_pktracepart_v23",
          "383: {",
          "",
          "[Removed Lines]",
          "380: #define nspr_pktracepart_v22_s    ((guint32)(sizeof(nspr_pktracepart_v22_t) -2))",
          "",
          "[Added Lines]",
          "365: #define nspr_pktracepart_v22_s    ((guint32)(sizeof(nspr_pktracepart_v22_t)))",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "394: } nspr_pktracepart_v23_t;",
          "398: typedef struct nspr_pktracepart_v24",
          "",
          "[Removed Lines]",
          "395: #define nspr_pktracepart_v23_s    ((guint32)(sizeof(nspr_pktracepart_v23_t) -4))",
          "",
          "[Added Lines]",
          "379: #define nspr_pktracepart_v23_s    ((guint32)(sizeof(nspr_pktracepart_v23_t)))",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "413: } nspr_pktracepart_v24_t;",
          "417: typedef struct nspr_pktracepart_v25",
          "",
          "[Removed Lines]",
          "414: #define nspr_pktracepart_v24_s    ((guint32)(sizeof(nspr_pktracepart_v24_t) -4))",
          "",
          "[Added Lines]",
          "397: #define nspr_pktracepart_v24_s    ((guint32)(sizeof(nspr_pktracepart_v24_t)))",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "434: } nspr_pktracepart_v25_t;",
          "441: typedef struct  nspr_pktracefull_v30",
          "",
          "[Removed Lines]",
          "435: #define nspr_pktracepart_v25_s    ((guint32)(sizeof(nspr_pktracepart_v25_t) -4))",
          "436: #define pp_src_vmname    pp_Data",
          "437: #define pp_dst_vmname    pp_Data",
          "",
          "[Added Lines]",
          "417: #define nspr_pktracepart_v25_s    ((guint32)(sizeof(nspr_pktracepart_v25_t)))",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "456:     guint8 fp_reserved[3];",
          "457:     guint8 fp_ns_activity[4];",
          "458:     guint8 fp_reserved_32[12];",
          "460: } nspr_pktracefull_v30_t;",
          "461: #define nspr_pktracefull_v30_s  ((guint32)(sizeof(nspr_pktracefull_v30_t)))",
          "466: typedef struct nspr_pktracepart_v26",
          "",
          "[Removed Lines]",
          "462: #define fp_src_vmname   fp_Data",
          "463: #define fp_dst_vmname   fp_Data",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "482:     guint8 pp_reserved;",
          "483:     guint8 pp_ns_activity[4];",
          "486: } nspr_pktracepart_v26_t;",
          "489: #define myoffsetof(type,fieldname) (&(((type*)0)->fieldname))",
          "491: #define __TNO(phdr,enumprefix,structprefix,structname,hdrname,structfieldname) \\",
          "494: #define __TNL(phdr,enumprefix,structprefix,structname,hdrname,structfieldname) \\",
          "497: #define __TNV1O(phdr,enumprefix,structprefix,structname,hdrname,structfieldname) \\",
          "500: #define __TNV1L(phdr,enumprefix,structprefix,structname,hdrname,structfieldname) \\",
          "503: #define TRACE_V10_REC_LEN_OFF(phdr,enumprefix,structprefix,structname) \\",
          "504:     __TNV1O(phdr,enumprefix,structprefix,structname,dir,phd.ph_RecordType)\\",
          "505:     __TNV1L(phdr,enumprefix,structprefix,structname,dir,phd.ph_RecordType)\\",
          "506:     __TNV1O(phdr,enumprefix,structprefix,structname,nicno,phd.ph_DevNo)\\",
          "507:     __TNV1L(phdr,enumprefix,structprefix,structname,nicno,phd.ph_DevNo)\\",
          "522: #define TRACE_V20_REC_LEN_OFF(phdr,enumprefix,structprefix,structname) \\",
          "523:     __TNO(phdr,enumprefix,structprefix,structname,dir,RecordType)\\",
          "524:     __TNL(phdr,enumprefix,structprefix,structname,dir,RecordType)\\",
          "525:     __TNO(phdr,enumprefix,structprefix,structname,nicno,DevNo)\\",
          "526:     __TNL(phdr,enumprefix,structprefix,structname,nicno,DevNo)\\",
          "529: #define TRACE_V21_REC_LEN_OFF(phdr,enumprefix,structprefix,structname) \\",
          "530:     TRACE_V20_REC_LEN_OFF(phdr,enumprefix,structprefix,structname)\\",
          "",
          "[Removed Lines]",
          "487: #define nspr_pktracepart_v26_s    ((guint32)(sizeof(nspr_pktracepart_v26_t) -4))",
          "492:     guint8 enumprefix##_##hdrname##_offset = (guint8)GPOINTER_TO_INT(myoffsetof(nspr_##structname##_t,structprefix##_##structfieldname));",
          "495:     guint8 enumprefix##_##hdrname##_len = (guint8)sizeof(((nspr_##structname##_t*)0)->structprefix##_##structfieldname);",
          "498:     guint8 enumprefix##_##hdrname##_offset = (guint8)GPOINTER_TO_INT(myoffsetof(nspr_##structname##_t,structfieldname));",
          "501:     guint8 enumprefix##_##hdrname##_len = (guint8)sizeof(((nspr_##structname##_t*)0)->structfieldname);",
          "508:     __TNO(phdr,enumprefix,structprefix,structname,eth,Data)",
          "510: #define TRACE_FULL_V10_REC_LEN_OFF(phdr,enumprefix,structprefix,structname) \\",
          "511:     (phdr)->len = pletoh16(&(fp)->nsprRecordSize);\\",
          "512:     (phdr)->caplen = (phdr)->len;\\",
          "513:     TRACE_V10_REC_LEN_OFF(phdr,enumprefix,structprefix,structname)",
          "515: #define TRACE_PART_V10_REC_LEN_OFF(phdr,enumprefix,structprefix,structname) \\",
          "516:     (phdr)->rec_type = REC_TYPE_PACKET;\\",
          "517:     (phdr)->presence_flags |= WTAP_HAS_CAP_LEN;\\",
          "518:     (phdr)->len =  pletoh16(&pp->pp_PktSizeOrg) + nspr_pktracepart_v10_s;\\",
          "519:     (phdr)->caplen =  pletoh16(&pp->nsprRecordSize);\\",
          "520:     TRACE_V10_REC_LEN_OFF(phdr,enumprefix,structprefix,structname)",
          "527:     __TNO(phdr,enumprefix,structprefix,structname,eth,Data)",
          "",
          "[Added Lines]",
          "462: #define nspr_pktracepart_v26_s    ((guint32)(sizeof(nspr_pktracepart_v26_t)))",
          "466: #define __TNDO(phdr,enumprefix,structname,hdrname)\\",
          "467:     static const guint8 enumprefix##_##hdrname##_offset = (guint8)sizeof(nspr_##structname##_t);",
          "470:     static const guint8 enumprefix##_##hdrname##_offset = (guint8)GPOINTER_TO_INT(myoffsetof(nspr_##structname##_t,structprefix##_##structfieldname));",
          "473:     static const guint8 enumprefix##_##hdrname##_len = (guint8)sizeof(((nspr_##structname##_t*)0)->structprefix##_##structfieldname);",
          "476:     static const guint8 enumprefix##_##hdrname##_offset = (guint8)GPOINTER_TO_INT(myoffsetof(nspr_##structname##_t,structfieldname));",
          "479:     static const guint8 enumprefix##_##hdrname##_len = (guint8)sizeof(((nspr_##structname##_t*)0)->structfieldname);",
          "486:     __TNDO(phdr,enumprefix,structname,eth)",
          "493:     __TNDO(phdr,enumprefix,structname,eth)",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "549:     TRACE_V24_REC_LEN_OFF(phdr,enumprefix,structprefix,structname)\\",
          "550:     __TNO(phdr,enumprefix,structprefix,structname,src_vmname_len,src_vmname_len)\\",
          "551:     __TNO(phdr,enumprefix,structprefix,structname,dst_vmname_len,dst_vmname_len)\\",
          "554: #define TRACE_V26_REC_LEN_OFF(phdr,enumprefix,structprefix,structname) \\",
          "555:     TRACE_V25_REC_LEN_OFF(phdr,enumprefix,structprefix,structname)\\",
          "",
          "[Removed Lines]",
          "552:     __TNO(phdr,enumprefix,structprefix,structname,data,Data)",
          "",
          "[Added Lines]",
          "518:     __TNDO(phdr,enumprefix,structname,data)",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "579: #undef __TNV1O",
          "580: #undef __TNV1L",
          "581: #undef __TNO",
          "582: #undef __TNL",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "548: #undef __TNDO",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "603: typedef struct {",
          "604:     gchar  *pnstrace_buf;",
          "605:     gint64  xxx_offset;",
          "",
          "[Removed Lines]",
          "606:     gint32  nstrace_buf_offset;",
          "607:     gint32  nstrace_buflen;",
          "",
          "[Added Lines]",
          "573:     guint32 nstrace_buf_offset;",
          "574:     guint32 nstrace_buflen;",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "642: static gboolean nstrace_dump(wtap_dumper *wdh, const struct wtap_pkthdr *phdr,",
          "643:                              const guint8 *pd, int *err);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "613: #define WTAP_ERR_UNWRITABLE_FILE_TYPE WTAP_ERR_UNSUPPORTED",
          "614: #define WTAP_ERR_UNWRITABLE_REC_TYPE WTAP_ERR_UNSUPPORTED",
          "615: #define WTAP_ERR_UNWRITABLE_ENCAP WTAP_ERR_UNSUPPORTED_ENCAP",
          "617: #define wtap_open_return_val int",
          "618: #define WTAP_OPEN_ERROR -1",
          "619: #define WTAP_OPEN_NOT_MINE 0",
          "620: #define WTAP_OPEN_MINE 1",
          "622: #define ws_buffer_assure_space buffer_assure_space",
          "623: #define ws_buffer_free buffer_free",
          "624: #define ws_buffer_init buffer_init",
          "625: #define ws_buffer_start_ptr buffer_start_ptr",
          "639: static gboolean",
          "640: wtap_read_bytes(FILE_T fh, void *buf, unsigned int count, int *err,",
          "641:     gchar **err_info)",
          "642: {",
          "643:  int bytes_read;",
          "645:  bytes_read = file_read(buf, count, fh);",
          "646:  if (bytes_read < 0 || (guint)bytes_read != count) {",
          "648:   if (*err == 0)",
          "650:   return FALSE;",
          "651:  }",
          "652:  return TRUE;",
          "653: }",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "671: {",
          "672:     gchar *nstrace_buf;",
          "673:     gint64 file_size;",
          "674:     gint32 page_size;",
          "675:     nstrace_t *nstrace;",
          "680:     if ((file_size = wtap_file_size(wth, err)) == -1)",
          "683:     nstrace_buf = (gchar *)g_malloc(NSPR_PAGESIZE);",
          "684:     page_size = GET_READ_PAGE_SIZE(file_size);",
          "",
          "[Removed Lines]",
          "670: int nstrace_open(wtap *wth, int *err, gchar **err_info)",
          "676:     int bytes_read;",
          "678:     errno = WTAP_ERR_CANT_READ;",
          "681:         return 0;",
          "",
          "[Added Lines]",
          "680: wtap_open_return_val nstrace_open(wtap *wth, int *err, gchar **err_info)",
          "689:         return WTAP_OPEN_NOT_MINE;",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "703:     default:",
          "705:         g_free(nstrace_buf);",
          "707:     }",
          "709:     if ((file_seek(wth->fh, 0, SEEK_SET, err)) == -1)",
          "710:     {",
          "712:         g_free(nstrace_buf);",
          "714:     }",
          "718:     {",
          "720:         g_free(nstrace_buf);",
          "724:     }",
          "726:     switch (wth->file_type_subtype)",
          "",
          "[Removed Lines]",
          "706:         return 0;",
          "713:         return 0;",
          "716:     bytes_read = file_read(nstrace_buf, page_size, wth->fh);",
          "717:     if (bytes_read != page_size)",
          "721:         if (*err != 0 && *err != WTAP_ERR_SHORT_READ)",
          "722:             return -1;",
          "723:         return 0;",
          "",
          "[Added Lines]",
          "714:         return WTAP_OPEN_NOT_MINE;",
          "720:         return WTAP_OPEN_ERROR;",
          "723:     if (!wtap_read_bytes(wth->fh, nstrace_buf, page_size, err, err_info))",
          "726:         if (*err != WTAP_ERR_SHORT_READ)",
          "727:             return WTAP_OPEN_ERROR;",
          "728:         return WTAP_OPEN_NOT_MINE;",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "762:         if ((file_seek(wth->fh, 0, SEEK_SET, err)) == -1)",
          "763:         {",
          "765:             g_free(nstrace->pnstrace_buf);",
          "766:             g_free(nstrace);",
          "768:         }",
          "773:         {",
          "775:             g_free(nstrace->pnstrace_buf);",
          "776:             g_free(nstrace);",
          "778:         }",
          "",
          "[Removed Lines]",
          "767:             return 0;",
          "771:         bytes_read = file_read(nstrace_buf, page_size, wth->fh);",
          "772:         if (bytes_read != page_size)",
          "777:             return 0;",
          "",
          "[Added Lines]",
          "771:             return WTAP_OPEN_ERROR;",
          "775:         if (!wtap_read_bytes(wth->fh, nstrace_buf, page_size, err, err_info))",
          "779:             return WTAP_OPEN_ERROR;",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "786:     wth->phdr.ts.nsecs = 0;",
          "790: }",
          "",
          "[Removed Lines]",
          "789:     return 1;",
          "",
          "[Added Lines]",
          "791:     return WTAP_OPEN_MINE;",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "831:                 (sigv20p->sig_RecordSize <= len) &&",
          "832:                 ((gint32)sizeof(NSPR_SIGSTR_V20) <= len))",
          "833:             {",
          "835:                     return WTAP_FILE_TYPE_SUBTYPE_NETSCALER_2_0;",
          "837:                     return WTAP_FILE_TYPE_SUBTYPE_NETSCALER_3_0;",
          "838:             }",
          "839: #undef    sigv20p",
          "840:         }",
          "",
          "[Removed Lines]",
          "834:                 if (!nspm_signature_isv20(sigv20p->sig_Signature))",
          "836:                 else if (!nspm_signature_isv30(sigv20p->sig_Signature))",
          "",
          "[Added Lines]",
          "836:                 if (!nspm_signature_isv20(sigv20p->sig_Signature)){",
          "838:                 } else if (!nspm_signature_isv30(sigv20p->sig_Signature)){",
          "840:                 }",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "847: #define nspr_getv10recordsize(hdp) (pletoh16(&(hdp)->nsprRecordSize))",
          "848: #define nspr_getv20recordtype(hdp) ((hdp)->phd_RecordType)",
          "849: #define nspr_getv20recordsize(hdp) \\",
          "851:         (((hdp)->phd_RecordSizeHigh * NSPR_V20RECORDSIZE_2BYTES)+ \\",
          "852:          ((hdp)->phd_RecordSizeLow & ~NSPR_V20RECORDSIZE_2BYTES)) : \\",
          "853:           (hdp)->phd_RecordSizeLow)",
          "",
          "[Removed Lines]",
          "850:     (((hdp)->phd_RecordSizeLow & NSPR_V20RECORDSIZE_2BYTES)? \\",
          "",
          "[Added Lines]",
          "853:     (guint32)(((hdp)->phd_RecordSizeLow & NSPR_V20RECORDSIZE_2BYTES)? \\",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "858:     {\\",
          "859:         nstrace_t *nstrace = (nstrace_t *)wth->priv;\\",
          "860:         gchar* nstrace_buf = nstrace->pnstrace_buf;\\",
          "863:         int bytes_read;\\",
          "864:         do\\",
          "865:         {\\",
          "866:             while (nstrace_buf_offset < nstrace_buflen)\\",
          "",
          "[Removed Lines]",
          "861:         gint32 nstrace_buf_offset = nstrace->nstrace_buf_offset;\\",
          "862:         gint32 nstrace_buflen = nstrace->nstrace_buflen;\\",
          "",
          "[Added Lines]",
          "864:         guint32 nstrace_buf_offset = nstrace->nstrace_buf_offset;\\",
          "865:         guint32 nstrace_buflen = nstrace->nstrace_buflen;\\",
          "867:         guint32 record_size;\\",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "877:                         nstrace_buf_offset = nstrace_buflen;\\",
          "878:                         break;\\",
          "879:                     default:\\",
          "881:                 }\\",
          "882:             }\\",
          "883:             nstrace_buf_offset = 0;\\",
          "884:             nstrace->xxx_offset += nstrace_buflen;\\",
          "885:             nstrace_buflen = GET_READ_PAGE_SIZE((nstrace->file_size - nstrace->xxx_offset));\\",
          "887:         return FALSE;\\",
          "888:     }",
          "",
          "[Removed Lines]",
          "880:                         nstrace_buf_offset += nspr_getv##ver##recordsize(fp);\\",
          "886:         }while((nstrace_buflen > 0) && (bytes_read = file_read(nstrace_buf, nstrace_buflen, wth->fh)) && bytes_read == nstrace_buflen); \\",
          "",
          "[Added Lines]",
          "884:                         record_size = nspr_getv##ver##recordsize(fp);\\",
          "885:                         if (record_size == 0)\\",
          "886:                             return FALSE;\\",
          "887:                         nstrace_buf_offset += record_size;\\",
          "893:         }while((nstrace_buflen > 0) && (bytes_read = file_read(nstrace_buf, nstrace_buflen, wth->fh)) > 0 && (guint32)bytes_read == nstrace_buflen); \\",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "910:     return FALSE;",
          "911: }",
          "913: #define __TNO(phdr,enumprefix,structprefix,structname,hdrname,structfieldname) \\",
          "914:     (phdr)->pseudo_header.nstr.hdrname##_offset = enumprefix##_##hdrname##_offset;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "920: #define __TNDO(phdr,enumprefix,structname,hdrname)\\",
          "921:     (phdr)->pseudo_header.nstr.hdrname##_offset = enumprefix##_##hdrname##_offset;",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "930: static gboolean nstrace_read_v10(wtap *wth, int *err, gchar **err_info, gint64 *data_offset)",
          "931: {",
          "932:     nstrace_t *nstrace = (nstrace_t *)wth->priv;",
          "933:     guint64 nsg_creltime = nstrace->nsg_creltime;",
          "934:     gchar *nstrace_buf = nstrace->pnstrace_buf;",
          "939:     int bytes_read;",
          "",
          "[Removed Lines]",
          "935:     gint32 nstrace_buf_offset = nstrace->nstrace_buf_offset;",
          "936:     gint32 nstrace_buflen = nstrace->nstrace_buflen;",
          "937:     nspr_pktracefull_v10_t *fp;",
          "938:     nspr_pktracepart_v10_t *pp;",
          "",
          "[Added Lines]",
          "940: #define TIMEDEFV10(phdr,fp,type) \\",
          "941:     do {\\",
          "942:         (phdr)->presence_flags = WTAP_HAS_TS;\\",
          "943:         nsg_creltime += ns_hrtime2nsec(pletoh32(&type->type##_RelTimeHr));\\",
          "944:         (phdr)->ts.secs = nstrace->nspm_curtime + (guint32) (nsg_creltime / 1000000000);\\",
          "945:         (phdr)->ts.nsecs = (guint32) (nsg_creltime % 1000000000);\\",
          "946:     }while(0)",
          "948: #define PARTSIZEDEFV10(phdr,pp,ver) \\",
          "949:     do {\\",
          "950:         (phdr)->presence_flags |= WTAP_HAS_CAP_LEN;\\",
          "951:         (phdr)->len = pletoh16(&pp->pp_PktSizeOrg) + nspr_pktracepart_v##ver##_s;\\",
          "952:         (phdr)->caplen = pletoh16(&pp->nsprRecordSize);\\",
          "953:     }while(0)",
          "955: #define FULLSIZEDEFV10(phdr,fp,ver) \\",
          "956:     do {\\",
          "957:         (phdr)->len = pletoh16(&(fp)->nsprRecordSize);\\",
          "958:         (phdr)->caplen = (phdr)->len;\\",
          "959:     }while(0)",
          "961: #define PACKET_DESCRIBE(phdr,FULLPART,fullpart,ver,type,HEADERVER) \\",
          "962:     do {\\",
          "963:         nspr_pktrace##fullpart##_v##ver##_t *type = (nspr_pktrace##fullpart##_v##ver##_t *) &nstrace_buf[nstrace_buf_offset];\\",
          "965:         if ((nstrace_buflen - nstrace_buf_offset) < sizeof *type) {\\",
          "968:             return FALSE;\\",
          "969:         }\\",
          "971:         if (pletoh16(&type->nsprRecordSize) < sizeof *type) {\\",
          "974:             return FALSE;\\",
          "975:         }\\",
          "976:         (phdr)->rec_type = REC_TYPE_PACKET;\\",
          "977:         TIMEDEFV##ver((phdr),fp,type);\\",
          "978:         FULLPART##SIZEDEFV##ver((phdr),type,ver);\\",
          "979:         TRACE_V##ver##_REC_LEN_OFF((phdr),v##ver##_##fullpart,type,pktrace##fullpart##_v##ver);\\",
          "981:         if ((nstrace_buflen - nstrace_buf_offset) < (phdr)->caplen) {\\",
          "984:             return FALSE;\\",
          "985:         }\\",
          "986:         ws_buffer_assure_space(wth->frame_buffer, (phdr)->caplen);\\",
          "987:         memcpy(ws_buffer_start_ptr(wth->frame_buffer), type, (phdr)->caplen);\\",
          "989:         nstrace->nstrace_buf_offset = nstrace_buf_offset + (phdr)->caplen;\\",
          "990:         nstrace->nstrace_buflen = nstrace_buflen;\\",
          "991:         nstrace->nsg_creltime = nsg_creltime;\\",
          "992:         return TRUE;\\",
          "993:     }while(0)",
          "1000:     guint32 nstrace_buf_offset = nstrace->nstrace_buf_offset;",
          "1001:     guint32 nstrace_buflen = nstrace->nstrace_buflen;",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "943:     do",
          "944:     {",
          "945:         while ((nstrace_buf_offset < nstrace_buflen) &&",
          "947:         {",
          "997:             switch (pletoh16(&(( nspr_header_v10_t*)&nstrace_buf[nstrace_buf_offset])->ph_RecordType))",
          "998:             {",
          "",
          "[Removed Lines]",
          "946:             ((nstrace_buflen - nstrace_buf_offset) >= ((gint32)sizeof(fp->nsprRecordType))))",
          "949: #define GENERATE_CASE_FULL(phdr,type,acttype) \\",
          "950:         case NSPR_PDPKTRACEFULLTX_V##type:\\",
          "951:         case NSPR_PDPKTRACEFULLTXB_V##type:\\",
          "952:         case NSPR_PDPKTRACEFULLRX_V##type:\\",
          "953:             fp = (nspr_pktracefull_v10_t *) &nstrace_buf[nstrace_buf_offset];\\",
          "959:             (phdr)->rec_type = REC_TYPE_PACKET;\\",
          "960:             (phdr)->presence_flags = WTAP_HAS_TS;\\",
          "961:             nsg_creltime += ns_hrtime2nsec(pletoh32(&fp->fp_RelTimeHr));\\",
          "962:             (phdr)->ts.secs = nstrace->nspm_curtime + (guint32) (nsg_creltime / 1000000000);\\",
          "963:             (phdr)->ts.nsecs = (guint32) (nsg_creltime % 1000000000);\\",
          "964:             TRACE_FULL_V##type##_REC_LEN_OFF(phdr,v##type##_full,fp,pktracefull_v##type);\\",
          "965:             buffer_assure_space(wth->frame_buffer, (phdr)->caplen);\\",
          "966:             memcpy(buffer_start_ptr(wth->frame_buffer), fp, (phdr)->caplen);\\",
          "968:             nstrace->nstrace_buf_offset = nstrace_buf_offset + (phdr)->len;\\",
          "969:             nstrace->nstrace_buflen = nstrace_buflen;\\",
          "970:             nstrace->nsg_creltime = nsg_creltime;\\",
          "971:             return TRUE;",
          "973: #define GENERATE_CASE_PART(phdr,type,acttype) \\",
          "974:         case NSPR_PDPKTRACEPARTTX_V##type:\\",
          "975:         case NSPR_PDPKTRACEPARTTXB_V##type:\\",
          "976:         case NSPR_PDPKTRACEPARTRX_V##type:\\",
          "977:             pp = (nspr_pktracepart_v10_t *) &nstrace_buf[nstrace_buf_offset];\\",
          "983:             (phdr)->rec_type = REC_TYPE_PACKET;\\",
          "984:             (phdr)->presence_flags = WTAP_HAS_TS;\\",
          "985:             nsg_creltime += ns_hrtime2nsec(pletoh32(&pp->pp_RelTimeHr));\\",
          "986:             (phdr)->ts.secs = nstrace->nspm_curtime + (guint32) (nsg_creltime / 1000000000);\\",
          "987:             (phdr)->ts.nsecs = (guint32) (nsg_creltime % 1000000000);\\",
          "988:             TRACE_PART_V##type##_REC_LEN_OFF(phdr,v##type##_part,pp,pktracepart_v##type);\\",
          "989:             buffer_assure_space(wth->frame_buffer, (phdr)->caplen);\\",
          "990:             memcpy(buffer_start_ptr(wth->frame_buffer), pp, (phdr)->caplen);\\",
          "992:             nstrace->nstrace_buf_offset = nstrace_buf_offset + (phdr)->caplen;\\",
          "993:             nstrace->nsg_creltime = nsg_creltime;\\",
          "994:             nstrace->nstrace_buflen = nstrace_buflen;\\",
          "995:             return TRUE;\\",
          "",
          "[Added Lines]",
          "1009:             ((nstrace_buflen - nstrace_buf_offset) >= ((gint32)sizeof((( nspr_header_v10_t*)&nstrace_buf[nstrace_buf_offset])->ph_RecordType))))",
          "1012: #define GENERATE_CASE_FULL(phdr,ver,HEADERVER) \\",
          "1013:         case NSPR_PDPKTRACEFULLTX_V##ver:\\",
          "1014:         case NSPR_PDPKTRACEFULLTXB_V##ver:\\",
          "1015:         case NSPR_PDPKTRACEFULLRX_V##ver:\\",
          "1016:             PACKET_DESCRIBE(phdr,FULL,full,ver,fp,HEADERVER);",
          "1018: #define GENERATE_CASE_PART(phdr,ver,HEADERVER) \\",
          "1019:         case NSPR_PDPKTRACEPARTTX_V##ver:\\",
          "1020:         case NSPR_PDPKTRACEPARTTXB_V##ver:\\",
          "1021:         case NSPR_PDPKTRACEPARTRX_V##ver:\\",
          "1022:             PACKET_DESCRIBE(phdr,PART,part,ver,pp,HEADERVER);",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "1002: #undef GENERATE_CASE_FULL",
          "1003: #undef GENERATE_CASE_PART",
          "1029:             }",
          "1030:         }",
          "1032:         nstrace_buf_offset = 0;",
          "1033:         nstrace->xxx_offset += nstrace_buflen;",
          "1034:         nstrace_buflen = GET_READ_PAGE_SIZE((nstrace->file_size - nstrace->xxx_offset));",
          "1037:     return FALSE;",
          "1038: }",
          "1050:     do {\\",
          "1057:     }while(0)",
          "1060:     do {\\",
          "1064:         nsg_creltime = pletoh64(fp->type##_AbsTimeHr);\\",
          "1067:     }while(0)",
          "1076:     do {\\",
          "1078:         (phdr)->presence_flags |= WTAP_HAS_CAP_LEN;\\",
          "1079:         (phdr)->len = pletoh16(&pp->pp_PktSizeOrg) + nspr_pktracepart_v##ver##_s;\\",
          "1080:         (phdr)->caplen = nspr_getv20recordsize((nspr_hd_v20_t *)pp);\\",
          "1081:     }while(0)",
          "1091:     do {\\",
          "1092:         (phdr)->len = nspr_getv20recordsize((nspr_hd_v20_t *)fp);\\",
          "1093:         (phdr)->caplen = (phdr)->len;\\",
          "1094:     }while(0)",
          "1112:     do {\\",
          "1113:         nspr_##structname##_t *fp= (nspr_##structname##_t*)&nstrace_buf[nstrace_buf_offset];\\",
          "1116:         TRACE_V##ver##_REC_LEN_OFF((phdr),enumprefix,type,structname);\\",
          "1121:         nstrace->nstrace_buf_offset = nstrace_buf_offset + nspr_getv20recordsize((nspr_hd_v20_t *)fp);\\",
          "1122:         nstrace->nstrace_buflen = nstrace_buflen;\\",
          "",
          "[Removed Lines]",
          "1005:             case NSPR_ABSTIME_V10:",
          "1007:                 fp = (nspr_pktracefull_v10_t *) &nstrace_buf[nstrace_buf_offset];",
          "1008:                 ns_setabstime(nstrace, pletoh32(((nspr_abstime_v10_t *) fp)->abs_Time), pletoh32(&((nspr_abstime_v10_t *) fp)->abs_RelTime));",
          "1009:                 nstrace_buf_offset += pletoh16(&fp->nsprRecordSize);",
          "1010:                 break;",
          "1012:             case NSPR_RELTIME_V10:",
          "1014:                 fp = (nspr_pktracefull_v10_t *) &nstrace_buf[nstrace_buf_offset];",
          "1015:                 ns_setrelativetime(nstrace, pletoh32(((nspr_abstime_v10_t *) fp)->abs_RelTime));",
          "1016:                 nstrace_buf_offset += pletoh16(&fp->nsprRecordSize);",
          "1017:                 break;",
          "1019:             case NSPR_UNUSEDSPACE_V10:",
          "1021:                 nstrace_buf_offset = nstrace_buflen;",
          "1022:                 break;",
          "1024:             default:",
          "1026:                 fp = (nspr_pktracefull_v10_t *) &nstrace_buf[nstrace_buf_offset];",
          "1027:                 nstrace_buf_offset += pletoh16(&fp->nsprRecordSize);",
          "1028:                 break;",
          "1035:     }while((nstrace_buflen > 0) && (bytes_read = file_read(nstrace_buf, nstrace_buflen, wth->fh)) && (bytes_read == nstrace_buflen));",
          "1040: #define TIMEDEFV20(fp,type) \\",
          "1041:     do {\\",
          "1042:         wth->phdr.rec_type = REC_TYPE_PACKET;\\",
          "1043:         wth->phdr.presence_flags |= WTAP_HAS_TS;\\",
          "1044:         nsg_creltime += ns_hrtime2nsec(pletoh32(fp->type##_RelTimeHr));\\",
          "1045:         wth->phdr.ts.secs = nstrace->nspm_curtime + (guint32) (nsg_creltime / 1000000000);\\",
          "1046:         wth->phdr.ts.nsecs = (guint32) (nsg_creltime % 1000000000);\\",
          "1047:     }while(0)",
          "1049: #define TIMEDEFV23(fp,type) \\",
          "1051:         wth->phdr.rec_type = REC_TYPE_PACKET;\\",
          "1052:         wth->phdr.presence_flags |= WTAP_HAS_TS;\\",
          "1054:         nsg_creltime = pletoh64(fp->type##_AbsTimeHr);\\",
          "1055:         wth->phdr.ts.secs = (guint32) (nsg_creltime / 1000000000);\\",
          "1056:         wth->phdr.ts.nsecs = (guint32) (nsg_creltime % 1000000000);\\",
          "1059: #define TIMEDEFV30(fp,type) \\",
          "1061:         wth->phdr.rec_type = REC_TYPE_PACKET;\\",
          "1062:         wth->phdr.presence_flags |= WTAP_HAS_TS;\\",
          "1065:         wth->phdr.ts.secs = (guint32) (nsg_creltime / 1000000000);\\",
          "1066:         wth->phdr.ts.nsecs = (guint32) (nsg_creltime % 1000000000);\\",
          "1069: #define TIMEDEFV21(fp,type) TIMEDEFV20(fp,type)",
          "1070: #define TIMEDEFV22(fp,type) TIMEDEFV20(fp,type)",
          "1071: #define TIMEDEFV24(fp,type) TIMEDEFV23(fp,type)",
          "1072: #define TIMEDEFV25(fp,type) TIMEDEFV24(fp,type)",
          "1073: #define TIMEDEFV26(fp,type) TIMEDEFV24(fp,type)",
          "1075: #define PPSIZEDEFV20(phdr,pp,ver) \\",
          "1077:         (phdr)->rec_type = REC_TYPE_PACKET;\\",
          "1083: #define PPSIZEDEFV21(phdr,pp,ver) PPSIZEDEFV20(phdr,pp,ver)",
          "1084: #define PPSIZEDEFV22(phdr,pp,ver) PPSIZEDEFV20(phdr,pp,ver)",
          "1085: #define PPSIZEDEFV23(phdr,pp,ver) PPSIZEDEFV20(phdr,pp,ver)",
          "1086: #define PPSIZEDEFV24(phdr,pp,ver) PPSIZEDEFV20(phdr,pp,ver)",
          "1087: #define PPSIZEDEFV25(phdr,pp,ver) PPSIZEDEFV20(phdr,pp,ver)",
          "1088: #define PPSIZEDEFV26(phdr,pp,ver) PPSIZEDEFV20(phdr,pp,ver)",
          "1090: #define FPSIZEDEFV20(phdr,fp,ver)\\",
          "1096: #define FPSIZEDEFV21(phdr,fp,ver) FPSIZEDEFV20(phdr,fp,ver)",
          "1097: #define FPSIZEDEFV22(phdr,fp,ver) FPSIZEDEFV20(phdr,fp,ver)",
          "1098: #define FPSIZEDEFV23(phdr,fp,ver) FPSIZEDEFV20(phdr,fp,ver)",
          "1099: #define FPSIZEDEFV24(phdr,fp,ver) FPSIZEDEFV20(phdr,fp,ver)",
          "1100: #define FPSIZEDEFV25(phdr,fp,ver) FPSIZEDEFV20(phdr,fp,ver)",
          "1101: #define FPSIZEDEFV26(phdr,fp,ver) FPSIZEDEFV20(phdr,fp,ver)",
          "1103: #define FPSIZEDEFV30(phdr,fp,ver)\\",
          "1104:     do {\\",
          "1105:         (phdr)->rec_type = REC_TYPE_PACKET;\\",
          "1106:         (phdr)->presence_flags |= WTAP_HAS_CAP_LEN;\\",
          "1107:         (phdr)->len = pletoh16(&fp->fp_PktSizeOrg) + nspr_pktracefull_v##ver##_s;\\",
          "1108:         (phdr)->caplen = nspr_getv20recordsize((nspr_hd_v20_t *)fp);\\",
          "1109:     }while(0)",
          "1111: #define PACKET_DESCRIBE(phdr,FPTIMEDEF,SIZEDEF,ver,enumprefix,type,structname,TYPE)\\",
          "1114:         TIMEDEFV##ver(fp,type);\\",
          "1115:         SIZEDEF##ver((phdr),fp,ver);\\",
          "1117:         (phdr)->pseudo_header.nstr.rec_type = NSPR_HEADER_VERSION##TYPE;\\",
          "1118:         buffer_assure_space(wth->frame_buffer, (phdr)->caplen);\\",
          "1119:         memcpy(buffer_start_ptr(wth->frame_buffer), fp, (phdr)->caplen);\\",
          "",
          "[Added Lines]",
          "1032:                 case NSPR_ABSTIME_V10:",
          "1033:                 {",
          "1034:                     nspr_pktracefull_v10_t *fp = (nspr_pktracefull_v10_t *) &nstrace_buf[nstrace_buf_offset];",
          "1035:                     if (pletoh16(&fp->nsprRecordSize) == 0) {",
          "1038:                         return FALSE;",
          "1039:                     }",
          "1040:                     ns_setabstime(nstrace, pletoh32(((nspr_abstime_v10_t *) fp)->abs_Time), pletoh32(&((nspr_abstime_v10_t *) fp)->abs_RelTime));",
          "1041:                     nstrace_buf_offset += pletoh16(&fp->nsprRecordSize);",
          "1042:                     break;",
          "1043:                 }",
          "1045:                 case NSPR_RELTIME_V10:",
          "1046:                 {",
          "1047:                     nspr_pktracefull_v10_t *fp = (nspr_pktracefull_v10_t *) &nstrace_buf[nstrace_buf_offset];",
          "1048:                     if (pletoh16(&fp->nsprRecordSize) == 0) {",
          "1051:                         return FALSE;",
          "1052:                     }",
          "1053:                     ns_setrelativetime(nstrace, pletoh32(((nspr_abstime_v10_t *) fp)->abs_RelTime));",
          "1054:                     nstrace_buf_offset += pletoh16(&fp->nsprRecordSize);",
          "1055:                     break;",
          "1056:                 }",
          "1058:                 case NSPR_UNUSEDSPACE_V10:",
          "1059:                     nstrace_buf_offset = nstrace_buflen;",
          "1060:                     break;",
          "1062:                 default:",
          "1063:                 {",
          "1064:                     nspr_pktracefull_v10_t *fp = (nspr_pktracefull_v10_t *) &nstrace_buf[nstrace_buf_offset];",
          "1065:                     if (pletoh16(&fp->nsprRecordSize) == 0) {",
          "1068:                         return FALSE;",
          "1069:                     }",
          "1070:                     nstrace_buf_offset += pletoh16(&fp->nsprRecordSize);",
          "1071:                     break;",
          "1072:                 }",
          "1079:     }while((nstrace_buflen > 0) && (bytes_read = file_read(nstrace_buf, nstrace_buflen, wth->fh)) > 0 && ((guint32)bytes_read == nstrace_buflen));",
          "1084: #undef PACKET_DESCRIBE",
          "1086: #define TIMEDEFV20(phdr,fp,type) \\",
          "1088:         (phdr)->presence_flags = WTAP_HAS_TS;\\",
          "1089:         nsg_creltime += ns_hrtime2nsec(pletoh32(fp->type##_RelTimeHr));\\",
          "1090:         (phdr)->ts.secs = nstrace->nspm_curtime + (guint32) (nsg_creltime / 1000000000);\\",
          "1091:         (phdr)->ts.nsecs = (guint32) (nsg_creltime % 1000000000);\\",
          "1094: #define TIMEDEFV23(phdr,fp,type) \\",
          "1096:         (phdr)->presence_flags = WTAP_HAS_TS;\\",
          "1099:         (phdr)->ts.secs = (guint32) (nsg_creltime / 1000000000);\\",
          "1100:         (phdr)->ts.nsecs = (guint32) (nsg_creltime % 1000000000);\\",
          "1103: #define TIMEDEFV21(phdr,fp,type) TIMEDEFV20(phdr,fp,type)",
          "1104: #define TIMEDEFV22(phdr,fp,type) TIMEDEFV20(phdr,fp,type)",
          "1105: #define TIMEDEFV24(phdr,fp,type) TIMEDEFV23(phdr,fp,type)",
          "1106: #define TIMEDEFV25(phdr,fp,type) TIMEDEFV24(phdr,fp,type)",
          "1107: #define TIMEDEFV26(phdr,fp,type) TIMEDEFV24(phdr,fp,type)",
          "1109: #define PARTSIZEDEFV20(phdr,pp,ver) \\",
          "1116: #define PARTSIZEDEFV21(phdr,pp,ver) PARTSIZEDEFV20(phdr,pp,ver)",
          "1117: #define PARTSIZEDEFV22(phdr,pp,ver) PARTSIZEDEFV20(phdr,pp,ver)",
          "1118: #define PARTSIZEDEFV23(phdr,pp,ver) PARTSIZEDEFV20(phdr,pp,ver)",
          "1119: #define PARTSIZEDEFV24(phdr,pp,ver) PARTSIZEDEFV20(phdr,pp,ver)",
          "1120: #define PARTSIZEDEFV25(phdr,pp,ver) PARTSIZEDEFV20(phdr,pp,ver)",
          "1121: #define PARTSIZEDEFV26(phdr,pp,ver) PARTSIZEDEFV20(phdr,pp,ver)",
          "1123: #define FULLSIZEDEFV20(phdr,fp,ver)\\",
          "1129: #define FULLSIZEDEFV21(phdr,fp,ver) FULLSIZEDEFV20(phdr,fp,ver)",
          "1130: #define FULLSIZEDEFV22(phdr,fp,ver) FULLSIZEDEFV20(phdr,fp,ver)",
          "1131: #define FULLSIZEDEFV23(phdr,fp,ver) FULLSIZEDEFV20(phdr,fp,ver)",
          "1132: #define FULLSIZEDEFV24(phdr,fp,ver) FULLSIZEDEFV20(phdr,fp,ver)",
          "1133: #define FULLSIZEDEFV25(phdr,fp,ver) FULLSIZEDEFV20(phdr,fp,ver)",
          "1134: #define FULLSIZEDEFV26(phdr,fp,ver) FULLSIZEDEFV20(phdr,fp,ver)",
          "1136: #define PACKET_DESCRIBE(phdr,FULLPART,ver,enumprefix,type,structname,HEADERVER)\\",
          "1140:         if ((nstrace_buflen - nstrace_buf_offset) < sizeof *fp) {\\",
          "1143:             return FALSE;\\",
          "1144:         }\\",
          "1146:         if (nspr_getv20recordsize((nspr_hd_v20_t *)fp) < sizeof *fp) {\\",
          "1149:             return FALSE;\\",
          "1150:         }\\",
          "1151:         (phdr)->rec_type = REC_TYPE_PACKET;\\",
          "1152:         TIMEDEFV##ver((phdr),fp,type);\\",
          "1153:         FULLPART##SIZEDEFV##ver((phdr),fp,ver);\\",
          "1155:         (phdr)->pseudo_header.nstr.rec_type = NSPR_HEADER_VERSION##HEADERVER;\\",
          "1157:         if ((nstrace_buflen - nstrace_buf_offset) < (phdr)->caplen) {\\",
          "1160:             return FALSE;\\",
          "1161:         }\\",
          "1162:         ws_buffer_assure_space(wth->frame_buffer, (phdr)->caplen);\\",
          "1163:         memcpy(ws_buffer_start_ptr(wth->frame_buffer), fp, (phdr)->caplen);\\",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "1129:     nstrace_t *nstrace = (nstrace_t *)wth->priv;",
          "1130:     guint64 nsg_creltime = nstrace->nsg_creltime;",
          "1131:     gchar *nstrace_buf = nstrace->pnstrace_buf;",
          "1134:     int bytes_read;",
          "",
          "[Removed Lines]",
          "1132:     gint32 nstrace_buf_offset = nstrace->nstrace_buf_offset;",
          "1133:     gint32 nstrace_buflen = nstrace->nstrace_buflen;",
          "",
          "[Added Lines]",
          "1176:     guint32 nstrace_buf_offset = nstrace->nstrace_buf_offset;",
          "1177:     guint32 nstrace_buflen = nstrace->nstrace_buflen;",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "1143:             switch ((( nspr_hd_v20_t*)&nstrace_buf[nstrace_buf_offset])->phd_RecordType)",
          "1144:             {",
          "1172:                 GENERATE_CASE_FULL(&wth->phdr,20,200);",
          "1173:                 GENERATE_CASE_PART(&wth->phdr,20,200);",
          "",
          "[Removed Lines]",
          "1146: #define GENERATE_CASE_FULL(phdr,type,acttype) \\",
          "1147:         case NSPR_PDPKTRACEFULLTX_V##type:\\",
          "1148:         case NSPR_PDPKTRACEFULLTXB_V##type:\\",
          "1149:         case NSPR_PDPKTRACEFULLRX_V##type:\\",
          "1150:             PACKET_DESCRIBE(phdr,TIMEDEF,FPSIZEDEFV,type,v##type##_full,fp,pktracefull_v##type,acttype);",
          "1152: #define GENERATE_CASE_FULL_V25(phdr,type,acttype) \\",
          "1153:         case NSPR_PDPKTRACEFULLTX_V##type:\\",
          "1154:         case NSPR_PDPKTRACEFULLTXB_V##type:\\",
          "1155:         case NSPR_PDPKTRACEFULLRX_V##type:\\",
          "1156:         case NSPR_PDPKTRACEFULLNEWRX_V##type:\\",
          "1157:             PACKET_DESCRIBE(phdr,TIMEDEF,FPSIZEDEFV,type,v##type##_full,fp,pktracefull_v##type,acttype);",
          "1159: #define GENERATE_CASE_PART(phdr,type,acttype) \\",
          "1160:         case NSPR_PDPKTRACEPARTTX_V##type:\\",
          "1161:         case NSPR_PDPKTRACEPARTTXB_V##type:\\",
          "1162:         case NSPR_PDPKTRACEPARTRX_V##type:\\",
          "1163:             PACKET_DESCRIBE(phdr,TIMEDEF,PPSIZEDEFV,type,v##type##_part,pp,pktracepart_v##type,acttype);",
          "1165: #define GENERATE_CASE_PART_V25(phdr,type,acttype) \\",
          "1166:         case NSPR_PDPKTRACEPARTTX_V##type:\\",
          "1167:         case NSPR_PDPKTRACEPARTTXB_V##type:\\",
          "1168:         case NSPR_PDPKTRACEPARTRX_V##type:\\",
          "1169:         case NSPR_PDPKTRACEPARTNEWRX_V##type:\\",
          "1170:             PACKET_DESCRIBE(phdr,TIMEDEF,PPSIZEDEFV,type,v##type##_part,pp,pktracepart_v##type,acttype);",
          "",
          "[Added Lines]",
          "1190: #define GENERATE_CASE_FULL(phdr,ver,HEADERVER) \\",
          "1191:         case NSPR_PDPKTRACEFULLTX_V##ver:\\",
          "1192:         case NSPR_PDPKTRACEFULLTXB_V##ver:\\",
          "1193:         case NSPR_PDPKTRACEFULLRX_V##ver:\\",
          "1194:             PACKET_DESCRIBE(phdr,FULL,ver,v##ver##_full,fp,pktracefull_v##ver,HEADERVER);",
          "1196: #define GENERATE_CASE_FULL_V25(phdr,ver,HEADERVER) \\",
          "1197:         case NSPR_PDPKTRACEFULLTX_V##ver:\\",
          "1198:         case NSPR_PDPKTRACEFULLTXB_V##ver:\\",
          "1199:         case NSPR_PDPKTRACEFULLRX_V##ver:\\",
          "1200:         case NSPR_PDPKTRACEFULLNEWRX_V##ver:\\",
          "1201:             PACKET_DESCRIBE(phdr,FULL,ver,v##ver##_full,fp,pktracefull_v##ver,HEADERVER);",
          "1203: #define GENERATE_CASE_PART(phdr,ver,HEADERVER) \\",
          "1204:         case NSPR_PDPKTRACEPARTTX_V##ver:\\",
          "1205:         case NSPR_PDPKTRACEPARTTXB_V##ver:\\",
          "1206:         case NSPR_PDPKTRACEPARTRX_V##ver:\\",
          "1207:             PACKET_DESCRIBE(phdr,PART,ver,v##ver##_part,pp,pktracepart_v##ver,HEADERVER);",
          "1209: #define GENERATE_CASE_PART_V25(phdr,ver,HEADERVER) \\",
          "1210:         case NSPR_PDPKTRACEPARTTX_V##ver:\\",
          "1211:         case NSPR_PDPKTRACEPARTTXB_V##ver:\\",
          "1212:         case NSPR_PDPKTRACEPARTRX_V##ver:\\",
          "1213:         case NSPR_PDPKTRACEPARTNEWRX_V##ver:\\",
          "1214:             PACKET_DESCRIBE(phdr,PART,ver,v##ver##_part,pp,pktracepart_v##ver,HEADERVER);",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "1192:                 case NSPR_ABSTIME_V20:",
          "1193:                 {",
          "1194:                     nspr_pktracefull_v20_t *fp20 = (nspr_pktracefull_v20_t *) &nstrace_buf[nstrace_buf_offset];",
          "1195:                     nstrace_buf_offset += nspr_getv20recordsize((nspr_hd_v20_t *)fp20);",
          "1196:                     ns_setabstime(nstrace, pletoh32(&((nspr_abstime_v20_t *) fp20)->abs_Time), pletoh16(&((nspr_abstime_v20_t *) fp20)->abs_RelTime));",
          "1197:                     break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1239:                     if (nspr_getv20recordsize((nspr_hd_v20_t *)fp20) == 0) {",
          "1242:                         return FALSE;",
          "1243:                     }",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "1200:                 case NSPR_RELTIME_V20:",
          "1201:                 {",
          "1202:                     nspr_pktracefull_v20_t *fp20 = (nspr_pktracefull_v20_t *) &nstrace_buf[nstrace_buf_offset];",
          "1203:                     ns_setrelativetime(nstrace, pletoh16(&((nspr_abstime_v20_t *) fp20)->abs_RelTime));",
          "1204:                     nstrace_buf_offset += nspr_getv20recordsize((nspr_hd_v20_t *)fp20);",
          "1205:                     break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1252:                     if (nspr_getv20recordsize((nspr_hd_v20_t *)fp20) == 0) {",
          "1255:                         return FALSE;",
          "1256:                     }",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "1217:                 default:",
          "1218:                 {",
          "1219:                     nspr_pktracefull_v20_t *fp20 = (nspr_pktracefull_v20_t *) &nstrace_buf[nstrace_buf_offset];",
          "1220:                     nstrace_buf_offset += nspr_getv20recordsize((nspr_hd_v20_t *)fp20);",
          "1221:                     break;",
          "1222:                 }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1274:                     if (nspr_getv20recordsize((nspr_hd_v20_t *)fp20) == 0) {",
          "1277:                         return FALSE;",
          "1278:                     }",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "1226:         nstrace_buf_offset = 0;",
          "1227:         nstrace->xxx_offset += nstrace_buflen;",
          "1228:         nstrace_buflen = GET_READ_PAGE_SIZE((nstrace->file_size - nstrace->xxx_offset));",
          "1231:     return FALSE;",
          "1232: }",
          "1234: #undef PACKET_DESCRIBE",
          "1237:     do {\\",
          "1255:         }\\",
          "1260:             return FALSE;\\",
          "1263:         }\\",
          "1264:         rec_size = nst_dataSize - nstrace_tmpbuff_off;\\",
          "1278: static gboolean nstrace_read_v30(wtap *wth, int *err, gchar **err_info, gint64 *data_offset)",
          "1279: {",
          "1280:     nstrace_t *nstrace = (nstrace_t *)wth->priv;",
          "1282:     gchar *nstrace_buf = nstrace->pnstrace_buf;",
          "1285:     guint8 nstrace_tmpbuff[65536];",
          "1286:     guint32 nstrace_tmpbuff_off=0,nst_dataSize=0,rec_size=0,nsg_nextPageOffset=0;",
          "1287:     nspr_hd_v20_t *hdp;",
          "1292:     do",
          "1293:     {",
          "1294:         while ((nstrace_buf_offset < NSPR_PAGESIZE_TRACE) &&",
          "1295:             nstrace_buf[nstrace_buf_offset])",
          "1296:         {",
          "1297:             hdp = (nspr_hd_v20_t *) &nstrace_buf[nstrace_buf_offset];",
          "1298:             switch (hdp->phd_RecordType)",
          "1299:             {",
          "1310:                 case NSPR_ABSTIME_V20:",
          "1311:                 {",
          "",
          "[Removed Lines]",
          "1229:     }while((nstrace_buflen > 0) && (bytes_read = file_read(nstrace_buf, nstrace_buflen, wth->fh)) && (bytes_read == nstrace_buflen));",
          "1236: #define PACKET_DESCRIBE(phdr,FPTIMEDEF,SIZEDEF,ver,enumprefix,type,structname,TYPE)\\",
          "1238:     nspr_##structname##_t *fp = (nspr_##structname##_t *) &nstrace_buf[nstrace_buf_offset];\\",
          "1239:     TIMEDEFV##ver(fp,type);\\",
          "1240:     SIZEDEF##ver((phdr),fp,ver);\\",
          "1241:     TRACE_V##ver##_REC_LEN_OFF((phdr),enumprefix,type,structname);\\",
          "1242:     (phdr)->pseudo_header.nstr.rec_type = NSPR_HEADER_VERSION##TYPE;\\",
          "1243:     buffer_assure_space(wth->frame_buffer, (phdr)->caplen);\\",
          "1245:     while (nstrace_tmpbuff_off < nspr_##structname##_s) {\\",
          "1246:         nstrace_tmpbuff[nstrace_tmpbuff_off++] = nstrace_buf[nstrace_buf_offset++];\\",
          "1247:     }\\",
          "1248:     nst_dataSize = nspr_getv20recordsize(hdp);\\",
          "1249:     rec_size = nst_dataSize - nstrace_tmpbuff_off;\\",
          "1250:     nsg_nextPageOffset = ((nstrace_buf_offset + rec_size) >= NSPR_PAGESIZE_TRACE) ?\\",
          "1251:     ((nstrace_buf_offset + rec_size) - (NSPR_PAGESIZE_TRACE - 1)) : 0;\\",
          "1252:     while (nsg_nextPageOffset) {\\",
          "1253:         while (nstrace_buf_offset < NSPR_PAGESIZE_TRACE) {\\",
          "1254:             nstrace_tmpbuff[nstrace_tmpbuff_off++] = nstrace_buf[nstrace_buf_offset++];\\",
          "1256:         nstrace_buflen = NSPR_PAGESIZE_TRACE;\\",
          "1257:         nstrace->xxx_offset += nstrace_buflen;\\",
          "1258:         bytes_read = file_read(nstrace_buf, NSPR_PAGESIZE_TRACE, wth->fh);\\",
          "1259:         if (bytes_read != NSPR_PAGESIZE_TRACE) {\\",
          "1261:         } else {\\",
          "1262:             nstrace_buf_offset = 0;\\",
          "1265:         nsg_nextPageOffset = ((nstrace_buf_offset + rec_size) >= NSPR_PAGESIZE_TRACE) ?\\",
          "1266:         ((nstrace_buf_offset + rec_size) - (NSPR_PAGESIZE_TRACE- 1)): 0;\\",
          "1267:     } \\",
          "1268:     while (nstrace_tmpbuff_off < nst_dataSize) {\\",
          "1269:         nstrace_tmpbuff[nstrace_tmpbuff_off++] = nstrace_buf[nstrace_buf_offset++];\\",
          "1270:     }\\",
          "1271:     memcpy(buffer_start_ptr(wth->frame_buffer), nstrace_tmpbuff, (phdr)->caplen);\\",
          "1272:     nstrace->nstrace_buf_offset = nstrace_buf_offset;\\",
          "1273:     nstrace->nstrace_buflen = nstrace_buflen = ((gint32)NSPR_PAGESIZE_TRACE);\\",
          "1274:     nstrace->nsg_creltime = nsg_creltime;\\",
          "1275:     return TRUE;\\",
          "1276: } while(0)",
          "1281:     guint64 nsg_creltime = nstrace->nsg_creltime;",
          "1283:     gint32 nstrace_buf_offset = nstrace->nstrace_buf_offset;",
          "1284:     gint32 nstrace_buflen = nstrace->nstrace_buflen;",
          "1288:     int bytes_read;",
          "1301: #define GENERATE_CASE_V30(phdr,type,acttype) \\",
          "1302:         case NSPR_PDPKTRACEFULLTX_V##type:\\",
          "1303:         case NSPR_PDPKTRACEFULLTXB_V##type:\\",
          "1304:         case NSPR_PDPKTRACEFULLRX_V##type:\\",
          "1305:         case NSPR_PDPKTRACEFULLNEWRX_V##type:\\",
          "1306:         PACKET_DESCRIBE(phdr, TIMEDEF, FPSIZEDEFV,type,v##type##_full,fp,pktracefull_v##type,acttype);",
          "1307:         GENERATE_CASE_V30(&wth->phdr,30, 300);",
          "1308: #undef GENERATE_CASE_V30",
          "",
          "[Added Lines]",
          "1288:     }while((nstrace_buflen > 0) && (bytes_read = file_read(nstrace_buf, nstrace_buflen, wth->fh)) > 0 && ((guint32)bytes_read == nstrace_buflen));",
          "1295: #define SETETHOFFSET_30(phdr) ;\\",
          "1297: #define TIMEDEFV30(phdr,fp,type) \\",
          "1299:         (phdr)->presence_flags = WTAP_HAS_TS;\\",
          "1301:         nsg_creltime = pletoh64(fp->type##_AbsTimeHr);\\",
          "1302:         (phdr)->ts.secs = (guint32) (nsg_creltime / 1000000000);\\",
          "1303:         (phdr)->ts.nsecs = (guint32) (nsg_creltime % 1000000000);\\",
          "1304:     }while(0)",
          "1306: #define FULLSIZEDEFV30(phdr,fp,ver)\\",
          "1307:     do {\\",
          "1308:         (phdr)->presence_flags |= WTAP_HAS_CAP_LEN;\\",
          "1309:         (phdr)->len = pletoh16(&fp->fp_PktSizeOrg) + nspr_pktracefull_v##ver##_s + fp->fp_src_vmname_len + fp->fp_dst_vmname_len;\\",
          "1310:         (phdr)->caplen = nspr_getv20recordsize((nspr_hd_v20_t *)fp);\\",
          "1311:     }while(0)",
          "1313: #define PACKET_DESCRIBE(phdr,FULLPART,ver,enumprefix,type,structname,HEADERVER)\\",
          "1314:     do {\\",
          "1315:         nspr_##structname##_t *fp = (nspr_##structname##_t *) &nstrace_buf[nstrace_buf_offset];\\",
          "1317:         if ((nstrace->nstrace_buflen - nstrace_buf_offset) < sizeof *fp) {\\",
          "1320:             return FALSE;\\",
          "1322:         (phdr)->rec_type = REC_TYPE_PACKET;\\",
          "1323:         TIMEDEFV##ver((phdr),fp,type);\\",
          "1324:         FULLPART##SIZEDEFV##ver((phdr),fp,ver);\\",
          "1325:         TRACE_V##ver##_REC_LEN_OFF((phdr),enumprefix,type,structname);\\",
          "1326:         SETETHOFFSET_##ver(phdr)\\",
          "1327:         (phdr)->pseudo_header.nstr.rec_type = NSPR_HEADER_VERSION##HEADERVER;\\",
          "1329:         if ((phdr)->caplen < sizeof *fp) {\\",
          "1334:         ws_buffer_assure_space(wth->frame_buffer, (phdr)->caplen);\\",
          "1337:         while (nstrace_tmpbuff_off < nspr_##structname##_s) {\\",
          "1338:             nstrace_tmpbuff[nstrace_tmpbuff_off++] = nstrace_buf[nstrace_buf_offset++];\\",
          "1339:         }\\",
          "1340:         nst_dataSize = nspr_getv20recordsize(hdp);\\",
          "1342:         nsg_nextPageOffset = ((nstrace_buf_offset + rec_size) >= (guint)nstrace->nstrace_buflen) ?\\",
          "1343:         ((nstrace_buf_offset + rec_size) - (NSPR_PAGESIZE_TRACE - 1)) : 0;\\",
          "1345:         while (nsg_nextPageOffset) {\\",
          "1347:             while (nstrace_buf_offset < nstrace->nstrace_buflen) {\\",
          "1348:                 nstrace_tmpbuff[nstrace_tmpbuff_off++] = nstrace_buf[nstrace_buf_offset++];\\",
          "1349:             }\\",
          "1350:             nstrace->xxx_offset += nstrace_buflen;\\",
          "1351:             nstrace_buflen = NSPR_PAGESIZE_TRACE;\\",
          "1353:             bytes_read = file_read(nstrace_buf, NSPR_PAGESIZE_TRACE, wth->fh);\\",
          "1354:             if ( !file_eof(wth->fh) && bytes_read != NSPR_PAGESIZE_TRACE) {\\",
          "1355:                 return FALSE;\\",
          "1356:             } else {\\",
          "1357:                 nstrace_buf_offset = 0;\\",
          "1358:             }\\",
          "1359:             nstrace_buflen = bytes_read;\\",
          "1360:             rec_size = nst_dataSize - nstrace_tmpbuff_off;\\",
          "1361:             nsg_nextPageOffset = ((nstrace_buf_offset + rec_size) >= (guint)nstrace->nstrace_buflen) ?\\",
          "1362:             ((nstrace_buf_offset + rec_size) - (NSPR_PAGESIZE_TRACE- 1)): 0;\\",
          "1363:         } \\",
          "1365:         while (nstrace_tmpbuff_off < nst_dataSize) {\\",
          "1366:             nstrace_tmpbuff[nstrace_tmpbuff_off++] = nstrace_buf[nstrace_buf_offset++];\\",
          "1367:         }\\",
          "1368:         memcpy(ws_buffer_start_ptr(wth->frame_buffer), nstrace_tmpbuff, (phdr)->caplen);\\",
          "1369:         nstrace->nstrace_buf_offset = nstrace_buf_offset;\\",
          "1370:         nstrace->nstrace_buflen = nstrace_buflen;\\",
          "1371:         nstrace->nsg_creltime = nsg_creltime;\\",
          "1372:         return TRUE;\\",
          "1373:     } while(0)",
          "1378:     guint64 nsg_creltime;",
          "1380:     guint32 nstrace_buf_offset = nstrace->nstrace_buf_offset;",
          "1381:     guint32 nstrace_buflen = nstrace->nstrace_buflen;",
          "1385:     int bytes_read = 0;",
          "1388:     if(nstrace_buflen == 0){",
          "1390:     }",
          "1394:         if (!nstrace_buf[nstrace_buf_offset] && nstrace_buf_offset <= NSPR_PAGESIZE_TRACE){",
          "1395:             nstrace_buf_offset = NSPR_PAGESIZE_TRACE;",
          "1396:         }",
          "1397:         if (file_eof(wth->fh) && bytes_read > 0 && bytes_read < NSPR_PAGESIZE_TRACE){",
          "1398:             memset(&nstrace_buf[bytes_read], 0, NSPR_PAGESIZE_TRACE-bytes_read);",
          "1399:         }",
          "1404:             if (nspr_getv20recordsize(hdp) == 0) {",
          "1407:                 return FALSE;",
          "1408:             }",
          "1412: #define GENERATE_CASE_FULL_V30(phdr,ver,HEADERVER) \\",
          "1413:         case NSPR_PDPKTRACEFULLTX_V##ver:\\",
          "1414:         case NSPR_PDPKTRACEFULLTXB_V##ver:\\",
          "1415:         case NSPR_PDPKTRACEFULLRX_V##ver:\\",
          "1416:         case NSPR_PDPKTRACEFULLNEWRX_V##ver:\\",
          "1417:             PACKET_DESCRIBE(phdr,FULL,ver,v##ver##_full,fp,pktracefull_v##ver,HEADERVER);",
          "1419:                 GENERATE_CASE_FULL_V30(&wth->phdr,30,300);",
          "1421: #undef GENERATE_CASE_FULL_V30",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "1331:         nstrace_buf_offset = 0;",
          "1332:         nstrace->xxx_offset += nstrace_buflen;",
          "1333:         nstrace_buflen = NSPR_PAGESIZE_TRACE;",
          "1336:     return FALSE;",
          "1337: }",
          "1339: #undef PACKET_DESCRIBE",
          "1341: static gboolean nstrace_seek_read_v10(wtap *wth, gint64 seek_off,",
          "1342:     struct wtap_pkthdr *phdr, Buffer *buf, int *err, gchar **err_info)",
          "1343: {",
          "1344:     nspr_hd_v10_t hdr;",
          "1346:     guint record_length;",
          "1347:     guint8 *pd;",
          "1348:     unsigned int bytes_to_read;",
          "",
          "[Removed Lines]",
          "1334:     } while((nstrace_buflen > 0) && (bytes_read = file_read(nstrace_buf, nstrace_buflen, wth->fh)) && (bytes_read == nstrace_buflen));",
          "1345:     int bytes_read;",
          "1349:     nspr_pktracefull_v10_t *fp;",
          "1350:     nspr_pktracepart_v10_t *pp;",
          "",
          "[Added Lines]",
          "1447:     } while((nstrace_buflen > 0) && (bytes_read = file_read(nstrace_buf, nstrace_buflen, wth->fh)) > 0 && (file_eof(wth->fh) || (guint32)bytes_read == nstrace_buflen));",
          "1458: #undef TIMEDEFV10",
          "1459: #define TIMEDEFV10(phdr,fp,type) \\",
          "1460:     do {\\",
          "1461:         (phdr)->presence_flags = 0;\\",
          "1462:     }while(0)",
          "1464: #define PACKET_DESCRIBE(phdr,FULLPART,fullpart,ver,type,HEADERVER) \\",
          "1465:     do {\\",
          "1466:         nspr_pktrace##fullpart##_v##ver##_t *type = (nspr_pktrace##fullpart##_v##ver##_t *) pd;\\",
          "1467:         (phdr)->rec_type = REC_TYPE_PACKET;\\",
          "1468:         TIMEDEFV##ver((phdr),fp,type);\\",
          "1469:         FULLPART##SIZEDEFV##ver((phdr),type,ver);\\",
          "1470:         TRACE_V##ver##_REC_LEN_OFF(phdr,v##ver##_##fullpart,type,pktrace##fullpart##_v##ver);\\",
          "1471:         (phdr)->pseudo_header.nstr.rec_type = NSPR_HEADER_VERSION##HEADERVER;\\",
          "1472:     }while(0)",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "1365:         return FALSE;",
          "",
          "[Removed Lines]",
          "1360:     bytes_read = file_read((void *)&hdr, sizeof hdr, wth->random_fh);",
          "1361:     if (bytes_read != sizeof hdr) {",
          "1363:         if (*err == 0)",
          "1366:     }",
          "",
          "[Added Lines]",
          "1490:     if (!wtap_read_bytes(wth->random_fh, (void *)&hdr, sizeof hdr,",
          "1491:                          err, err_info))",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "1378:     memcpy(pd, (void *)&hdr, sizeof hdr);",
          "1379:     if (record_length > sizeof hdr) {",
          "1386:             return FALSE;",
          "1388:     }",
          "1394:         case NSPR_PDPKTRACEFULLTX_V##type:\\",
          "1395:         case NSPR_PDPKTRACEFULLTXB_V##type:\\",
          "1396:         case NSPR_PDPKTRACEFULLRX_V##type:\\",
          "1400:             break;",
          "1403:         case NSPR_PDPKTRACEPARTTX_V##type:\\",
          "1404:         case NSPR_PDPKTRACEPARTTXB_V##type:\\",
          "1405:         case NSPR_PDPKTRACEPARTRX_V##type:\\",
          "1409:             break;",
          "1411:     switch (pletoh16(&(( nspr_header_v10_t*)pd)->ph_RecordType))",
          "",
          "[Removed Lines]",
          "1376:     buffer_assure_space(buf, record_length);",
          "1377:     pd = buffer_start_ptr(buf);",
          "1380:      bytes_to_read = (unsigned int)(record_length - sizeof hdr);",
          "1381:         bytes_read = file_read(pd + sizeof hdr, bytes_to_read, wth->random_fh);",
          "1382:         if (bytes_read < 0 || (unsigned int)bytes_read != bytes_to_read) {",
          "1384:             if (*err == 0)",
          "1387:         }",
          "1393: #define GENERATE_CASE_FULL(phdr,type,acttype) \\",
          "1397:             fp = (nspr_pktracefull_v10_t *) pd;\\",
          "1398:             TRACE_FULL_V##type##_REC_LEN_OFF(phdr,v##type##_full,fp,pktracefull_v##type);\\",
          "1399:             (phdr)->pseudo_header.nstr.rec_type = NSPR_HEADER_VERSION##acttype;\\",
          "1402: #define GENERATE_CASE_PART(phdr,type,acttype) \\",
          "1406:             pp = (nspr_pktracepart_v10_t *) pd;\\",
          "1407:             TRACE_PART_V##type##_REC_LEN_OFF(phdr,v##type##_part,pp,pktracepart_v##type);\\",
          "1408:             (phdr)->pseudo_header.nstr.rec_type = NSPR_HEADER_VERSION##acttype;\\",
          "",
          "[Added Lines]",
          "1502:     ws_buffer_assure_space(buf, record_length);",
          "1503:     pd = ws_buffer_start_ptr(buf);",
          "1506:         bytes_to_read = (unsigned int)(record_length - sizeof hdr);",
          "1507:         if (!wtap_read_bytes(wth->random_fh, pd + sizeof hdr, bytes_to_read,",
          "1508:                              err, err_info))",
          "1515: #define GENERATE_CASE_FULL(phdr,type,HEADERVER) \\",
          "1519:             PACKET_DESCRIBE(phdr,FULL,full,type,fp,HEADERVER);\\",
          "1522: #define GENERATE_CASE_PART(phdr,type,HEADERVER) \\",
          "1526:             PACKET_DESCRIBE(phdr,PART,part,type,pp,HEADERVER);\\",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "1420:     return TRUE;",
          "1421: }",
          "1424:     do {\\",
          "1425:         nspr_##structname##_t *fp= (nspr_##structname##_t*)pd;\\",
          "1427:         TRACE_V##ver##_REC_LEN_OFF((phdr),enumprefix,type,structname);\\",
          "1429:         return TRUE;\\",
          "1430:     }while(0)",
          "",
          "[Removed Lines]",
          "1423: #define PACKET_DESCRIBE(phdr,FPTIMEDEF,SIZEDEF,ver,enumprefix,type,structname,TYPE)\\",
          "1426:         SIZEDEF##ver((phdr),fp,ver);\\",
          "1428:         (phdr)->pseudo_header.nstr.rec_type = NSPR_HEADER_VERSION##TYPE;\\",
          "",
          "[Added Lines]",
          "1541: #undef PACKET_DESCRIBE",
          "1547: #undef TIMEDEFV20",
          "1548: #define TIMEDEFV20(phdr,fp,type) \\",
          "1549:     do {\\",
          "1550:         (phdr)->presence_flags = 0;\\",
          "1551:     }while(0)",
          "1553: #undef TIMEDEFV21",
          "1554: #undef TIMEDEFV22",
          "1555: #define TIMEDEFV21(phdr,fp,type) TIMEDEFV20(phdr,fp,type)",
          "1556: #define TIMEDEFV22(phdr,fp,type) TIMEDEFV20(phdr,fp,type)",
          "1558: #define PACKET_DESCRIBE(phdr,FULLPART,ver,enumprefix,type,structname,HEADERVER)\\",
          "1561:         (phdr)->rec_type = REC_TYPE_PACKET;\\",
          "1562:         TIMEDEFV##ver((phdr),fp,type);\\",
          "1563:         FULLPART##SIZEDEFV##ver((phdr),fp,ver);\\",
          "1565:         (phdr)->pseudo_header.nstr.rec_type = NSPR_HEADER_VERSION##HEADERVER;\\",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "1433:     struct wtap_pkthdr *phdr, Buffer *buf, int *err, gchar **err_info)",
          "1434: {",
          "1435:     nspr_hd_v20_t hdr;",
          "1437:     guint record_length;",
          "1438:     guint hdrlen;",
          "1439:     guint8 *pd;",
          "1440:     unsigned int bytes_to_read;",
          "",
          "[Removed Lines]",
          "1436:     int bytes_read;",
          "",
          "[Added Lines]",
          "1577:     guint64 nsg_creltime;",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "1455:         return FALSE;",
          "1457:     hdrlen = 2;",
          "1462:     if (hdr.phd_RecordSizeLow & NSPR_V20RECORDSIZE_2BYTES) {",
          "1468:             return FALSE;",
          "1470:         hdrlen = 3;",
          "1471:     }",
          "",
          "[Removed Lines]",
          "1450:     bytes_read = file_read((void *)&hdr, 2, wth->random_fh);",
          "1451:     if (bytes_read != 2) {",
          "1453:         if (*err == 0)",
          "1456:     }",
          "1463:         bytes_read = file_read((void *)&hdr.phd_RecordSizeHigh, 1, wth->random_fh);",
          "1464:         if (bytes_read != 1) {",
          "1466:             if (*err == 0)",
          "1469:         }",
          "",
          "[Added Lines]",
          "1587:     if (!wtap_read_bytes(wth->random_fh, (void *)&hdr, 2, err, err_info))",
          "1595:         if (!wtap_read_bytes(wth->random_fh, (void *)&hdr.phd_RecordSizeHigh, 1,",
          "1596:                              err, err_info))",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "1483:     memcpy(pd, (void *)&hdr, hdrlen);",
          "1484:     if (record_length > hdrlen) {",
          "1491:             return FALSE;",
          "1493:     }",
          "1521:     switch ((( nspr_hd_v20_t*)pd)->phd_RecordType)",
          "1522:     {",
          "",
          "[Removed Lines]",
          "1481:     buffer_assure_space(buf, record_length);",
          "1482:     pd = buffer_start_ptr(buf);",
          "1485:      bytes_to_read = (unsigned int)(record_length - hdrlen);",
          "1486:         bytes_read = file_read(pd + hdrlen, bytes_to_read, wth->random_fh);",
          "1487:         if (bytes_read < 0 || (unsigned int)bytes_read != bytes_to_read) {",
          "1489:             if (*err == 0)",
          "1492:         }",
          "1495: #define GENERATE_CASE_FULL(phdr,type,acttype) \\",
          "1496:         case NSPR_PDPKTRACEFULLTX_V##type:\\",
          "1497:         case NSPR_PDPKTRACEFULLTXB_V##type:\\",
          "1498:         case NSPR_PDPKTRACEFULLRX_V##type:\\",
          "1499:             PACKET_DESCRIBE(phdr,TIMEDEF,FPSIZEDEFV,type,v##type##_full,fp,pktracefull_v##type,acttype);",
          "1501: #define GENERATE_CASE_FULL_V25(phdr,type,acttype) \\",
          "1502:         case NSPR_PDPKTRACEFULLTX_V##type:\\",
          "1503:         case NSPR_PDPKTRACEFULLTXB_V##type:\\",
          "1504:         case NSPR_PDPKTRACEFULLRX_V##type:\\",
          "1505:         case NSPR_PDPKTRACEFULLNEWRX_V##type:\\",
          "1506:             PACKET_DESCRIBE(phdr,TIMEDEF,FPSIZEDEFV,type,v##type##_full,fp,pktracefull_v##type,acttype);",
          "1508: #define GENERATE_CASE_PART(phdr,type,acttype) \\",
          "1509:         case NSPR_PDPKTRACEPARTTX_V##type:\\",
          "1510:         case NSPR_PDPKTRACEPARTTXB_V##type:\\",
          "1511:         case NSPR_PDPKTRACEPARTRX_V##type:\\",
          "1512:             PACKET_DESCRIBE(phdr,TIMEDEF,PPSIZEDEFV,type,v##type##_part,pp,pktracepart_v##type,acttype);",
          "1514: #define GENERATE_CASE_PART_V25(phdr,type,acttype) \\",
          "1515:         case NSPR_PDPKTRACEPARTTX_V##type:\\",
          "1516:         case NSPR_PDPKTRACEPARTTXB_V##type:\\",
          "1517:         case NSPR_PDPKTRACEPARTRX_V##type:\\",
          "1518:         case NSPR_PDPKTRACEPARTNEWRX_V##type:\\",
          "1519:             PACKET_DESCRIBE(phdr,TIMEDEF,PPSIZEDEFV,type,v##type##_part,pp,pktracepart_v##type,acttype);",
          "",
          "[Added Lines]",
          "1609:     ws_buffer_assure_space(buf, record_length);",
          "1610:     pd = ws_buffer_start_ptr(buf);",
          "1613:         bytes_to_read = (unsigned int)(record_length - hdrlen);",
          "1614:         if (!wtap_read_bytes(wth->random_fh, pd + hdrlen, bytes_to_read,",
          "1615:                              err, err_info))",
          "1619: #define GENERATE_CASE_FULL(phdr,ver,HEADERVER) \\",
          "1620:         case NSPR_PDPKTRACEFULLTX_V##ver:\\",
          "1621:         case NSPR_PDPKTRACEFULLTXB_V##ver:\\",
          "1622:         case NSPR_PDPKTRACEFULLRX_V##ver:\\",
          "1623:             PACKET_DESCRIBE(phdr,FULL,ver,v##ver##_full,fp,pktracefull_v##ver,HEADERVER);",
          "1625: #define GENERATE_CASE_FULL_V25(phdr,ver,HEADERVER) \\",
          "1626:         case NSPR_PDPKTRACEFULLTX_V##ver:\\",
          "1627:         case NSPR_PDPKTRACEFULLTXB_V##ver:\\",
          "1628:         case NSPR_PDPKTRACEFULLRX_V##ver:\\",
          "1629:         case NSPR_PDPKTRACEFULLNEWRX_V##ver:\\",
          "1630:             PACKET_DESCRIBE(phdr,FULL,ver,v##ver##_full,fp,pktracefull_v##ver,HEADERVER);",
          "1632: #define GENERATE_CASE_PART(phdr,ver,HEADERVER) \\",
          "1633:         case NSPR_PDPKTRACEPARTTX_V##ver:\\",
          "1634:         case NSPR_PDPKTRACEPARTTXB_V##ver:\\",
          "1635:         case NSPR_PDPKTRACEPARTRX_V##ver:\\",
          "1636:             PACKET_DESCRIBE(phdr,PART,ver,v##ver##_part,pp,pktracepart_v##ver,HEADERVER);",
          "1638: #define GENERATE_CASE_PART_V25(phdr,ver,HEADERVER) \\",
          "1639:         case NSPR_PDPKTRACEPARTTX_V##ver:\\",
          "1640:         case NSPR_PDPKTRACEPARTTXB_V##ver:\\",
          "1641:         case NSPR_PDPKTRACEPARTRX_V##ver:\\",
          "1642:         case NSPR_PDPKTRACEPARTNEWRX_V##ver:\\",
          "1643:             PACKET_DESCRIBE(phdr,PART,ver,v##ver##_part,pp,pktracepart_v##ver,HEADERVER);",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "1544:     return TRUE;",
          "1545: }",
          "1548: static gboolean nstrace_seek_read_v30(wtap *wth, gint64 seek_off,",
          "1549:     struct wtap_pkthdr *phdr, Buffer *buf, int *err, gchar **err_info)",
          "1550: {",
          "1551:     nspr_hd_v20_t hdr;",
          "1553:     guint record_length;",
          "1554:     guint hdrlen;",
          "1555:     guint8 *pd;",
          "1556:     unsigned int bytes_to_read;",
          "",
          "[Removed Lines]",
          "1552:     int bytes_read;",
          "",
          "[Added Lines]",
          "1671: #undef PACKET_DESCRIBE",
          "1672: #undef SETETHOFFSET_30",
          "1674: #define SETETHOFFSET_30(phdr) ;\\",
          "1676: #define PACKET_DESCRIBE(phdr,FULLPART,ver,enumprefix,type,structname,HEADERVER)\\",
          "1677:     do {\\",
          "1678:         nspr_##structname##_t *fp= (nspr_##structname##_t*)pd;\\",
          "1679:         (phdr)->rec_type = REC_TYPE_PACKET;\\",
          "1680:         TIMEDEFV##ver((phdr),fp,type);\\",
          "1681:         SETETHOFFSET_##ver(phdr);\\",
          "1682:         FULLPART##SIZEDEFV##ver((phdr),fp,ver);\\",
          "1683:         TRACE_V##ver##_REC_LEN_OFF((phdr),enumprefix,type,structname);\\",
          "1684:         (phdr)->pseudo_header.nstr.rec_type = NSPR_HEADER_VERSION##HEADERVER;\\",
          "1685:         return TRUE;\\",
          "1686:     }while(0)",
          "1696:     guint64 nsg_creltime;",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "1570:         return FALSE;",
          "1572:     hdrlen = 2;",
          "1577:     if (hdr.phd_RecordSizeLow & NSPR_V20RECORDSIZE_2BYTES) {",
          "1583:             return FALSE;",
          "1585:         hdrlen = 3;",
          "1586:     }",
          "",
          "[Removed Lines]",
          "1565:     bytes_read = file_read((void *)&hdr, 2, wth->random_fh);",
          "1566:     if (bytes_read != 2) {",
          "1568:         if (*err == 0)",
          "1571:     }",
          "1578:         bytes_read = file_read((void *)&hdr.phd_RecordSizeHigh, 1, wth->random_fh);",
          "1579:         if (bytes_read != 1) {",
          "1581:             if (*err == 0)",
          "1584:         }",
          "",
          "[Added Lines]",
          "1705:     if (!wtap_read_bytes(wth->random_fh, (void *)&hdr, 2, err, err_info))",
          "1713:         if (!wtap_read_bytes(wth->random_fh, (void *)&hdr.phd_RecordSizeHigh, 1,",
          "1714:                              err, err_info))",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "1598:     memcpy(pd, (void *)&hdr, hdrlen);",
          "1599:     if (record_length > hdrlen) {",
          "1600:         bytes_to_read = (unsigned int)(record_length - hdrlen);",
          "1606:             return FALSE;",
          "1608:     }",
          "1619:         switch ((( nspr_hd_v20_t*)pd)->phd_RecordType)",
          "1620:         {",
          "",
          "[Removed Lines]",
          "1596:     buffer_assure_space(buf, record_length);",
          "1597:     pd = buffer_start_ptr(buf);",
          "1601:         bytes_read = file_read(pd + hdrlen, bytes_to_read, wth->random_fh);",
          "1602:         if (bytes_read < 0 || (unsigned int)bytes_read != bytes_to_read) {",
          "1604:             if (*err == 0)",
          "1607:         }",
          "1610: #define GENERATE_CASE_V30(phdr,type,acttype) \\",
          "1611:     case NSPR_PDPKTRACEFULLTX_V##type:\\",
          "1612:     case NSPR_PDPKTRACEFULLTXB_V##type:\\",
          "1613:     case NSPR_PDPKTRACEFULLRX_V##type:\\",
          "1614:     case NSPR_PDPKTRACEFULLNEWRX_V##type:\\",
          "1615:     TRACE_V##type##_REC_LEN_OFF((phdr),v##type##_full,fp,pktracefull_v##type);\\",
          "1616:         (phdr)->pseudo_header.nstr.rec_type = NSPR_HEADER_VERSION##acttype;\\",
          "1617:         break;",
          "",
          "[Added Lines]",
          "1727:     ws_buffer_assure_space(buf, record_length);",
          "1728:     pd = ws_buffer_start_ptr(buf);",
          "1732:         if (!wtap_read_bytes(wth->random_fh, pd + hdrlen, bytes_to_read,",
          "1733:                              err, err_info))",
          "1737:     (phdr)->caplen = (phdr)->len = record_length;",
          "1739: #define GENERATE_CASE_V30(phdr,ver,HEADERVER) \\",
          "1740:     case NSPR_PDPKTRACEFULLTX_V##ver:\\",
          "1741:     case NSPR_PDPKTRACEFULLTXB_V##ver:\\",
          "1742:     case NSPR_PDPKTRACEFULLRX_V##ver:\\",
          "1743:     case NSPR_PDPKTRACEFULLNEWRX_V##ver:\\",
          "1744:         PACKET_DESCRIBE(phdr,FULL,ver,v##ver##_full,fp,pktracefull_v##ver,HEADERVER);",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "1640:     guint16 page_offset;",
          "1641:     guint16 page_len;",
          "1642:     guint32 absrec_time;",
          "1643: } nstrace_dump_t;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1770:     gboolean newfile;",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "1649:     if (encap == WTAP_ENCAP_NSTRACE_1_0)",
          "1650:         return 0;",
          "1653: }",
          "",
          "[Removed Lines]",
          "1652:     return WTAP_ERR_UNSUPPORTED_ENCAP;",
          "",
          "[Added Lines]",
          "1780:     return WTAP_ERR_UNWRITABLE_ENCAP;",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "1660:     if (encap == WTAP_ENCAP_NSTRACE_2_0)",
          "1661:         return 0;",
          "1664: }",
          "",
          "[Removed Lines]",
          "1663:     return WTAP_ERR_UNSUPPORTED_ENCAP;",
          "",
          "[Added Lines]",
          "1791:     return WTAP_ERR_UNWRITABLE_ENCAP;",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "1670:     if (encap == WTAP_ENCAP_NSTRACE_3_0)",
          "1671:         return 0;",
          "1674: }",
          "",
          "[Removed Lines]",
          "1673:     return WTAP_ERR_UNSUPPORTED_ENCAP;",
          "",
          "[Added Lines]",
          "1801:     return WTAP_ERR_UNWRITABLE_ENCAP;",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "1684:     nstrace = (nstrace_dump_t *)g_malloc(sizeof(nstrace_dump_t));",
          "1685:     wdh->priv = (void *)nstrace;",
          "1686:     nstrace->page_offset = 0;",
          "1688:     nstrace->absrec_time = 0;",
          "1690:     return TRUE;",
          "1691: }",
          "",
          "[Removed Lines]",
          "1687:     nstrace->page_len = NSPR_PAGESIZE;",
          "",
          "[Added Lines]",
          "1815:     if (wdh->file_type_subtype == WTAP_FILE_TYPE_SUBTYPE_NETSCALER_3_0)",
          "1816:       nstrace->page_len = NSPR_PAGESIZE_TRACE;",
          "1817:     else",
          "1818:       nstrace->page_len = NSPR_PAGESIZE;",
          "1821:     nstrace->newfile = TRUE;",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "1835:     if (phdr->rec_type != REC_TYPE_PACKET) {",
          "1837:         return FALSE;",
          "1838:     }",
          "1841:     {",
          "1843:         if (wdh->file_type_subtype == WTAP_FILE_TYPE_SUBTYPE_NETSCALER_1_0)",
          "1844:         {",
          "",
          "[Removed Lines]",
          "1840:     if (nstrace->page_offset == 0)",
          "",
          "[Added Lines]",
          "1973:     if (nstrace->newfile == TRUE)",
          "1975:         nstrace->newfile = FALSE;",
          "",
          "---------------"
        ]
      }
    }
  ]
}