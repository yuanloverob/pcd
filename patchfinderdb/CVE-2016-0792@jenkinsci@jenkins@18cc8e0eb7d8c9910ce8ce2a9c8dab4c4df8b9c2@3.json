{
  "cve_id": "CVE-2016-0792",
  "cve_desc": "Multiple unspecified API endpoints in Jenkins before 1.650 and LTS before 1.642.2 allow remote authenticated users to execute arbitrary code via serialized data in an XML file, related to XStream and groovy.util.Expando.",
  "repo": "jenkinsci/jenkins",
  "patch_hash": "18cc8e0eb7d8c9910ce8ce2a9c8dab4c4df8b9c2",
  "patch_info": {
    "commit_hash": "18cc8e0eb7d8c9910ce8ce2a9c8dab4c4df8b9c2",
    "repo": "jenkinsci/jenkins",
    "commit_url": "https://github.com/jenkinsci/jenkins/commit/18cc8e0eb7d8c9910ce8ce2a9c8dab4c4df8b9c2",
    "files": [
      "core/src/main/java/hudson/util/XStream2.java",
      "test/src/test/java/hudson/util/XStream2Security247Test.java",
      "test/src/test/resources/hudson/util/XStream2Security247Test/config.xml"
    ],
    "message": "[FIX SECURITY-247] Prevent loading of MethodClosure from XML",
    "before_after_code_files": [
      "core/src/main/java/hudson/util/XStream2.java||core/src/main/java/hudson/util/XStream2.java",
      "test/src/test/java/hudson/util/XStream2Security247Test.java||test/src/test/java/hudson/util/XStream2Security247Test.java"
    ]
  },
  "patch_diff": {
    "core/src/main/java/hudson/util/XStream2.java||core/src/main/java/hudson/util/XStream2.java": [
      "File: core/src/main/java/hudson/util/XStream2.java -> core/src/main/java/hudson/util/XStream2.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "160:         registerConverter(new AssociatedConverterImpl(this), -10);",
      "162:         registerConverter(new DynamicProxyConverter(getMapper()) { // SECURITY-105 defense",
      "163:             @Override public boolean canConvert(Class type) {",
      "164:                 return /* this precedes NullConverter */ type != null && super.canConvert(type);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "162:         registerConverter(new BlacklistedTypesConverter(), PRIORITY_VERY_HIGH); // SECURITY-247 defense",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "435:     }",
      "437: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "439:     private static class BlacklistedTypesConverter implements Converter {",
      "440:         @Override",
      "441:         public void marshal(Object source, HierarchicalStreamWriter writer, MarshallingContext context) {",
      "442:             throw new UnsupportedOperationException(\"Cannot marshal MethodClosure\");",
      "443:         }",
      "445:         @Override",
      "446:         public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {",
      "447:             throw new ConversionException(\"Cannot load MethodClosure for security reasons\");",
      "448:         }",
      "450:         @Override",
      "451:         public boolean canConvert(Class type) {",
      "452:             return type != null && \"org.codehaus.groovy.runtime.MethodClosure\".equals(type.getName());",
      "453:         }",
      "454:     }",
      "",
      "---------------"
    ],
    "test/src/test/java/hudson/util/XStream2Security247Test.java||test/src/test/java/hudson/util/XStream2Security247Test.java": [
      "File: test/src/test/java/hudson/util/XStream2Security247Test.java -> test/src/test/java/hudson/util/XStream2Security247Test.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: package hudson.util;",
      "3: import hudson.Functions;",
      "4: import hudson.model.Items;",
      "5: import org.apache.commons.io.FileUtils;",
      "6: import org.junit.Rule;",
      "7: import org.junit.Test;",
      "8: import org.jvnet.hudson.test.Issue;",
      "9: import org.jvnet.hudson.test.JenkinsRule;",
      "11: import java.io.File;",
      "13: import static org.junit.Assert.assertFalse;",
      "15: public class XStream2Security247Test {",
      "17:     @Rule",
      "18:     public JenkinsRule j = new JenkinsRule();",
      "20:     @Test",
      "21:     @Issue(\"SECURITY-247\")",
      "22:     public void dontUnmarshalMethodClosure() throws Exception {",
      "23:         if (Functions.isWindows())  return;",
      "24:         File exploitFile = new File(\"/tmp/jenkins-security247test\");",
      "25:         try {",
      "27:             if (exploitFile.exists() && !exploitFile.delete()) {",
      "28:                 throw new IllegalStateException(\"file exists and cannot be deleted\");",
      "29:             }",
      "30:             File tempJobDir = new File(j.jenkins.getRootDir(), \"security247\");",
      "31:             FileUtils.copyInputStreamToFile(XStream2Security247Test.class.getResourceAsStream(\"/hudson/util/XStream2Security247Test/config.xml\"),",
      "32:                     new File(tempJobDir, \"config.xml\"));",
      "33:             try {",
      "34:                 Items.load(j.jenkins, tempJobDir);",
      "35:             } catch (Exception e) {",
      "37:             }",
      "38:             assertFalse(\"no file should be created here\", exploitFile.exists());",
      "39:         } finally {",
      "40:             exploitFile.delete();",
      "41:         }",
      "42:     }",
      "43: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "39642a49c32b3da42aa7d34b2bb81607c6aa98e5",
      "candidate_info": {
        "commit_hash": "39642a49c32b3da42aa7d34b2bb81607c6aa98e5",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/39642a49c32b3da42aa7d34b2bb81607c6aa98e5",
        "files": [
          "changelog.html"
        ],
        "message": "[FIXED JENKINS-33068] Recording merge",
        "before_after_code_files": [
          "changelog.html||changelog.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/jenkinsci/jenkins/pull/2063"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "changelog.html||changelog.html": [
          "File: changelog.html -> changelog.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "55: <!-- Record your changes in the trunk here. -->",
          "56: <div id=\"trunk\" style=\"display:none\"><!--=TRUNK-BEGIN=-->",
          "57: <ul class=image>",
          "59: </ul>",
          "60: </div><!--=TRUNK-END=-->",
          "61: <h3><a name=v1.650>What's new in 1.650</a> (2016/02/24)</h3>",
          "",
          "[Removed Lines]",
          "58:   <li class=>",
          "",
          "[Added Lines]",
          "58:   <li class=\"rfe\">",
          "59:     Move periodic task logfiles from <code>JENKINS_HOME/*.log</code> to <code>JENKINS_HOME/logs/tasks/*.log</code> and rotate them periodically rather than overwrite every execution",
          "60:     (<a href-\"https://issues.jenkins-ci.org/browse/JENKINS-33068\">issue 33068</a>)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "def5bdb1984705be3c41be8bca4fd387db084eda",
      "candidate_info": {
        "commit_hash": "def5bdb1984705be3c41be8bca4fd387db084eda",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/def5bdb1984705be3c41be8bca4fd387db084eda",
        "files": [
          "core/src/main/java/jenkins/security/ApiTokenProperty.java"
        ],
        "message": "[SECURITY-241] Use US-ASCII to prevent charset issues",
        "before_after_code_files": [
          "core/src/main/java/jenkins/security/ApiTokenProperty.java||core/src/main/java/jenkins/security/ApiTokenProperty.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/jenkinsci/jenkins/pull/2063"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core/src/main/java/jenkins/security/ApiTokenProperty.java||core/src/main/java/jenkins/security/ApiTokenProperty.java": [
          "File: core/src/main/java/jenkins/security/ApiTokenProperty.java -> core/src/main/java/jenkins/security/ApiTokenProperty.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "41: import org.kohsuke.stapler.StaplerResponse;",
          "43: import java.io.IOException;",
          "44: import java.security.MessageDigest;",
          "45: import java.security.SecureRandom;",
          "46: import javax.annotation.Nonnull;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44: import java.nio.charset.Charset;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "112:     public boolean matchesPassword(String password) {",
          "113:         String token = getApiTokenInsecure();",
          "115:     }",
          "117:     private boolean hasPermissionToSeeToken() {",
          "",
          "[Removed Lines]",
          "114:         return MessageDigest.isEqual(password.getBytes(), token.getBytes());",
          "",
          "[Added Lines]",
          "115:         return MessageDigest.isEqual(password.getBytes(Charset.forName(\"US-ASCII\")),",
          "116:                 token.getBytes(Charset.forName(\"US-ASCII\")));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "919001c84670f9d35c4eb72003640c4a990aaf2f",
      "candidate_info": {
        "commit_hash": "919001c84670f9d35c4eb72003640c4a990aaf2f",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/919001c84670f9d35c4eb72003640c4a990aaf2f",
        "files": [
          "core/src/main/java/jenkins/security/ApiTokenProperty.java"
        ],
        "message": "[SECURITY-241] Add explanation for chosen implementation",
        "before_after_code_files": [
          "core/src/main/java/jenkins/security/ApiTokenProperty.java||core/src/main/java/jenkins/security/ApiTokenProperty.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/jenkinsci/jenkins/pull/2063"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core/src/main/java/jenkins/security/ApiTokenProperty.java||core/src/main/java/jenkins/security/ApiTokenProperty.java": [
          "File: core/src/main/java/jenkins/security/ApiTokenProperty.java -> core/src/main/java/jenkins/security/ApiTokenProperty.java"
        ]
      }
    },
    {
      "candidate_hash": "1870fb817e8173144fb765c00764657903461130",
      "candidate_info": {
        "commit_hash": "1870fb817e8173144fb765c00764657903461130",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/1870fb817e8173144fb765c00764657903461130",
        "files": [
          "core/src/main/java/hudson/util/XStream2.java"
        ],
        "message": "[SECURITY-247] Reuse remoting's ClassFilter for better coverage",
        "before_after_code_files": [
          "core/src/main/java/hudson/util/XStream2.java||core/src/main/java/hudson/util/XStream2.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/hudson/util/XStream2.java||core/src/main/java/hudson/util/XStream2.java"
          ],
          "candidate": [
            "core/src/main/java/hudson/util/XStream2.java||core/src/main/java/hudson/util/XStream2.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/hudson/util/XStream2.java||core/src/main/java/hudson/util/XStream2.java": [
          "File: core/src/main/java/hudson/util/XStream2.java -> core/src/main/java/hudson/util/XStream2.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: import hudson.PluginManager;",
          "48: import hudson.PluginWrapper;",
          "49: import hudson.diagnosis.OldDataMonitor;",
          "50: import hudson.util.xstream.ImmutableSetConverter;",
          "51: import hudson.util.xstream.ImmutableSortedSetConverter;",
          "52: import jenkins.model.Jenkins;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50: import hudson.remoting.ClassFilter;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "439:     private static class BlacklistedTypesConverter implements Converter {",
          "440:         @Override",
          "441:         public void marshal(Object source, HierarchicalStreamWriter writer, MarshallingContext context) {",
          "443:         }",
          "445:         @Override",
          "446:         public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {",
          "448:         }",
          "450:         @Override",
          "451:         public boolean canConvert(Class type) {",
          "453:         }",
          "454:     }",
          "455: }",
          "",
          "[Removed Lines]",
          "442:             throw new UnsupportedOperationException(\"Cannot marshal MethodClosure\");",
          "447:             throw new ConversionException(\"Cannot load MethodClosure for security reasons\");",
          "452:             return type != null && \"org.codehaus.groovy.runtime.MethodClosure\".equals(type.getName());",
          "",
          "[Added Lines]",
          "443:             throw new UnsupportedOperationException(\"Refusing to marshal for security reasons\");",
          "448:             throw new ConversionException(\"Refusing to unmarshal for security reasons\");",
          "453:             if (type == null) {",
          "454:                 return false;",
          "455:             }",
          "456:             try {",
          "457:                 ClassFilter.DEFAULT.check(type.getName());",
          "458:             } catch (SecurityException se) {",
          "460:                 return true;",
          "461:             }",
          "462:             return false;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aa8b855af393543d490c879ea037bfced0cf4b61",
      "candidate_info": {
        "commit_hash": "aa8b855af393543d490c879ea037bfced0cf4b61",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/aa8b855af393543d490c879ea037bfced0cf4b61",
        "files": [
          "test/src/test/java/hudson/util/XStream2Security247Test.java",
          "test/src/test/resources/hudson/util/XStream2Security247Test/config.xml"
        ],
        "message": "[SECURITY-247] Added doCreateItem test, improved loading test",
        "before_after_code_files": [
          "test/src/test/java/hudson/util/XStream2Security247Test.java||test/src/test/java/hudson/util/XStream2Security247Test.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "test/src/test/java/hudson/util/XStream2Security247Test.java||test/src/test/java/hudson/util/XStream2Security247Test.java"
          ],
          "candidate": [
            "test/src/test/java/hudson/util/XStream2Security247Test.java||test/src/test/java/hudson/util/XStream2Security247Test.java"
          ]
        }
      },
      "candidate_diff": {
        "test/src/test/java/hudson/util/XStream2Security247Test.java||test/src/test/java/hudson/util/XStream2Security247Test.java": [
          "File: test/src/test/java/hudson/util/XStream2Security247Test.java -> test/src/test/java/hudson/util/XStream2Security247Test.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package hudson.util;",
          "4: import hudson.model.Items;",
          "6: import org.junit.Rule;",
          "7: import org.junit.Test;",
          "8: import org.jvnet.hudson.test.Issue;",
          "9: import org.jvnet.hudson.test.JenkinsRule;",
          "11: import java.io.File;",
          "13: import static org.junit.Assert.assertFalse;",
          "15: public class XStream2Security247Test {",
          "17:     @Rule",
          "18:     public JenkinsRule j = new JenkinsRule();",
          "20:     @Test",
          "21:     @Issue(\"SECURITY-247\")",
          "25:         try {",
          "27:             if (exploitFile.exists() && !exploitFile.delete()) {",
          "28:                 throw new IllegalStateException(\"file exists and cannot be deleted\");",
          "29:             }",
          "30:             File tempJobDir = new File(j.jenkins.getRootDir(), \"security247\");",
          "33:             try {",
          "34:                 Items.load(j.jenkins, tempJobDir);",
          "35:             } catch (Exception e) {",
          "",
          "[Removed Lines]",
          "3: import hudson.Functions;",
          "5: import org.apache.commons.io.FileUtils;",
          "22:     public void dontUnmarshalMethodClosure() throws Exception {",
          "23:         if (Functions.isWindows())  return;",
          "24:         File exploitFile = new File(\"/tmp/jenkins-security247test\");",
          "31:             FileUtils.copyInputStreamToFile(XStream2Security247Test.class.getResourceAsStream(\"/hudson/util/XStream2Security247Test/config.xml\"),",
          "32:                     new File(tempJobDir, \"config.xml\"));",
          "",
          "[Added Lines]",
          "4: import org.apache.commons.io.*;",
          "5: import org.apache.commons.io.IOUtils;",
          "6: import org.junit.Before;",
          "9: import org.junit.rules.TemporaryFolder;",
          "12: import org.kohsuke.stapler.StaplerRequest;",
          "13: import org.kohsuke.stapler.StaplerResponse;",
          "14: import org.mockito.Mock;",
          "15: import org.mockito.MockitoAnnotations;",
          "17: import javax.servlet.ServletInputStream;",
          "19: import java.io.IOException;",
          "20: import java.io.InputStream;",
          "23: import static org.mockito.Mockito.when;",
          "30:     @Rule",
          "31:     public TemporaryFolder f = new TemporaryFolder();",
          "33:     @Mock",
          "34:     private StaplerRequest req;",
          "36:     @Mock",
          "37:     private StaplerResponse rsp;",
          "39:     @Before",
          "40:     public void setUp() throws Exception {",
          "41:         MockitoAnnotations.initMocks(this);",
          "42:     }",
          "46:     public void testXmlLoad() throws Exception {",
          "47:         File exploitFile = f.newFile();",
          "55:             String exploitXml = org.apache.commons.io.IOUtils.toString(",
          "56:                     XStream2Security247Test.class.getResourceAsStream(",
          "57:                             \"/hudson/util/XStream2Security247Test/config.xml\"), \"UTF-8\");",
          "59:             exploitXml = exploitXml.replace(\"@TOKEN@\", exploitFile.getAbsolutePath());",
          "61:             FileUtils.write(new File(tempJobDir, \"config.xml\"), exploitXml);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:             exploitFile.delete();",
          "41:         }",
          "42:     }",
          "43: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74:     @Test",
          "75:     @Issue(\"SECURITY-247\")",
          "76:     public void testPostJobXml() throws Exception {",
          "77:         File exploitFile = f.newFile();",
          "78:         try {",
          "80:             if (exploitFile.exists() && !exploitFile.delete()) {",
          "81:                 throw new IllegalStateException(\"file exists and cannot be deleted\");",
          "82:             }",
          "83:             File tempJobDir = new File(j.jenkins.getRootDir(), \"security247\");",
          "85:             String exploitXml = org.apache.commons.io.IOUtils.toString(",
          "86:                     XStream2Security247Test.class.getResourceAsStream(",
          "87:                             \"/hudson/util/XStream2Security247Test/config.xml\"), \"UTF-8\");",
          "89:             exploitXml = exploitXml.replace(\"@TOKEN@\", exploitFile.getAbsolutePath());",
          "91:             when(req.getMethod()).thenReturn(\"POST\");",
          "92:             when(req.getInputStream()).thenReturn(new Stream(IOUtils.toInputStream(exploitXml)));",
          "93:             when(req.getContentType()).thenReturn(\"application/xml\");",
          "94:             when(req.getParameter(\"name\")).thenReturn(\"foo\");",
          "96:             try {",
          "97:                 j.jenkins.doCreateItem(req, rsp);",
          "98:             } catch (Exception e) {",
          "100:             }",
          "102:             assertFalse(\"no file should be created here\", exploitFile.exists());",
          "103:         } finally {",
          "104:             exploitFile.delete();",
          "105:         }",
          "106:     }",
          "108:     private static class Stream extends ServletInputStream {",
          "109:         private final InputStream inner;",
          "111:         public Stream(final InputStream inner) {",
          "112:             this.inner = inner;",
          "113:         }",
          "115:         @Override",
          "116:         public int read() throws IOException {",
          "117:             return inner.read();",
          "118:         }",
          "119:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}