{
  "cve_id": "CVE-2015-0278",
  "cve_desc": "libuv before 0.10.34 does not properly drop group privileges, which allows context-dependent attackers to gain privileges via unspecified vectors.",
  "repo": "libuv/libuv",
  "patch_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
  "patch_info": {
    "commit_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
    "repo": "libuv/libuv",
    "commit_url": "https://github.com/libuv/libuv/commit/66ab38918c911bcff025562cf06237d7fedaba0c",
    "files": [
      "src/unix/process.c"
    ],
    "message": "unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093",
    "before_after_code_files": [
      "src/unix/process.c||src/unix/process.c"
    ]
  },
  "patch_diff": {
    "src/unix/process.c||src/unix/process.c": [
      "File: src/unix/process.c -> src/unix/process.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "330:     _exit(127);",
      "331:   }",
      "333:   if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid)) {",
      "334:     uv__write_int(error_fd, -errno);",
      "335:     perror(\"setgid()\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "333:   if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {",
      "341:     SAVE_ERRNO(setgroups(0, NULL));",
      "342:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "90e4afd4fa3fe4910a686f8bf50cb6d8cc7ba5e9",
      "candidate_info": {
        "commit_hash": "90e4afd4fa3fe4910a686f8bf50cb6d8cc7ba5e9",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/90e4afd4fa3fe4910a686f8bf50cb6d8cc7ba5e9",
        "files": [
          "README.md",
          "vcbuild.bat"
        ],
        "message": "windows: fix PYTHON environment variable usage\n\n- (README.md) The PYTHON environment variable should point to python.exe\nnot the python directory.\n\n- (vcvars.bat) The PYTHON environment variable should be quoted on\nexpansion in case there's spaces in the path.",
        "before_after_code_files": [
          "vcbuild.bat||vcbuild.bat"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "vcbuild.bat||vcbuild.bat": [
          "File: vcbuild.bat -> vcbuild.bat",
          "--- Hunk 1 ---",
          "[Context before]",
          "101: exit /b 1",
          "103: :have_gyp",
          "106: if errorlevel 1 goto create-msvs-files-failed",
          "107: if not exist uv.sln goto create-msvs-files-failed",
          "108: echo Project files generated.",
          "",
          "[Removed Lines]",
          "104: if not defined PYTHON set PYTHON=\"python\"",
          "105: %PYTHON% gyp_uv.py -Dtarget_arch=%target_arch% -Duv_library=%library%",
          "",
          "[Added Lines]",
          "104: if not defined PYTHON set PYTHON=python",
          "105: \"%PYTHON%\" gyp_uv.py -Dtarget_arch=%target_arch% -Duv_library=%library%",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "515be339095043d774a82bf68b6a4599fab22b34",
      "candidate_info": {
        "commit_hash": "515be339095043d774a82bf68b6a4599fab22b34",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/515be339095043d774a82bf68b6a4599fab22b34",
        "files": [
          "m4/dtrace.m4"
        ],
        "message": "build: fix compilation warning if dtrace doesn't work\n\nCheck if dtrace should instrument object files only if dtrace\nsupport is detected to work",
        "before_after_code_files": [
          "m4/dtrace.m4||m4/dtrace.m4"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "m4/dtrace.m4||m4/dtrace.m4": [
          "File: m4/dtrace.m4 -> m4/dtrace.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:       ])",
          "31:       AS_IF([test \"x$ac_cv_dtrace_works\" = \"xyes\"],[",
          "32:         AC_DEFINE([HAVE_DTRACE], [1], [Enables DTRACE Support])",
          "38: provider Example {",
          "39:   probe increment(int);",
          "40: };",
          "",
          "[Removed Lines]",
          "33:       ])",
          "34:       AC_CACHE_CHECK([if dtrace should instrument object files],",
          "35:         [ac_cv_dtrace_needs_objects],[",
          "36:           dnl DTrace on MacOSX does not use -G option",
          "37:           cat >conftest.d <<_ACEOF",
          "",
          "[Added Lines]",
          "33:         AC_CACHE_CHECK([if dtrace should instrument object files],",
          "34:           [ac_cv_dtrace_needs_objects],[",
          "35:             dnl DTrace on MacOSX does not use -G option",
          "36:             cat >conftest.d <<_ACEOF",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:   EXAMPLE_INCREMENT(1);",
          "46: }",
          "47: _ACEOF",
          "54:       ])",
          "55:       AC_SUBST(DTRACEFLAGS) dnl TODO: test for -G on OSX",
          "56:       ac_cv_have_dtrace=yes",
          "",
          "[Removed Lines]",
          "48:           $DTRACE -h -o conftest.h -s conftest.d 2>/dev/zero",
          "49:           $CC -c -o conftest.o conftest.c",
          "50:           $DTRACE -G -o conftest.d.o -s conftest.d conftest.o 2>/dev/zero",
          "51:           AS_IF([test $? -eq 0],[ac_cv_dtrace_needs_objects=yes],",
          "52:             [ac_cv_dtrace_needs_objects=no])",
          "53:           rm -f conftest.d.o conftest.d conftest.h conftest.o conftest.c",
          "",
          "[Added Lines]",
          "47:             $DTRACE -h -o conftest.h -s conftest.d 2>/dev/zero",
          "48:             $CC -c -o conftest.o conftest.c",
          "49:             $DTRACE -G -o conftest.d.o -s conftest.d conftest.o 2>/dev/zero",
          "50:             AS_IF([test $? -eq 0],[ac_cv_dtrace_needs_objects=yes],",
          "51:               [ac_cv_dtrace_needs_objects=no])",
          "52:             rm -f conftest.d.o conftest.d conftest.h conftest.o conftest.c",
          "53:         ])",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bfa3e28b0d507c9747024f1ba7ea74ea7d3b328c",
      "candidate_info": {
        "commit_hash": "bfa3e28b0d507c9747024f1ba7ea74ea7d3b328c",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/bfa3e28b0d507c9747024f1ba7ea74ea7d3b328c",
        "files": [
          "src/win/winapi.h"
        ],
        "message": "windows: fix mingw32 build, define JOB_OBJECT_XXX\n\nmingw32 doesn't have the JOB_OBJECT_XXX defines. Provide them ourselves\nwhen they are not already defined.\n\nThis is possibly only an issue with older versions of mingw32 because\nmingw-w64 2.0 _does_ export the defines.",
        "before_after_code_files": [
          "src/win/winapi.h||src/win/winapi.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/win/winapi.h||src/win/winapi.h": [
          "File: src/win/winapi.h -> src/win/winapi.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "4073:         ((NTSTATUS) (error)) : ((NTSTATUS) (((error) & 0x0000FFFF) | \\",
          "4074:         (FACILITY_NTWIN32 << 16) | ERROR_SEVERITY_WARNING)))",
          "4078: #if defined(_MSC_VER) || defined(__MINGW64_VERSION_MAJOR)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4076: #ifndef JOB_OBJECT_LIMIT_PROCESS_MEMORY",
          "4077: # define JOB_OBJECT_LIMIT_PROCESS_MEMORY             0x00000100",
          "4078: #endif",
          "4079: #ifndef JOB_OBJECT_LIMIT_JOB_MEMORY",
          "4080: # define JOB_OBJECT_LIMIT_JOB_MEMORY                 0x00000200",
          "4081: #endif",
          "4082: #ifndef JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION",
          "4083: # define JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION 0x00000400",
          "4084: #endif",
          "4085: #ifndef JOB_OBJECT_LIMIT_BREAKAWAY_OK",
          "4086: # define JOB_OBJECT_LIMIT_BREAKAWAY_OK               0x00000800",
          "4087: #endif",
          "4088: #ifndef JOB_OBJECT_LIMIT_SILENT_BREAKAWAY_OK",
          "4089: # define JOB_OBJECT_LIMIT_SILENT_BREAKAWAY_OK        0x00001000",
          "4090: #endif",
          "4091: #ifndef JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE",
          "4092: # define JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE          0x00002000",
          "4093: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1552184238a49e748a04d0cb2cdf2d34c2d3c7cb",
      "candidate_info": {
        "commit_hash": "1552184238a49e748a04d0cb2cdf2d34c2d3c7cb",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/1552184238a49e748a04d0cb2cdf2d34c2d3c7cb",
        "files": [
          "Makefile.am",
          "src/unix/stream.c",
          "test/test-list.h",
          "test/test-pipe-close-stdout-read-stdin.c",
          "uv.gyp"
        ],
        "message": "unix: read on stream even when UV__POLLHUP set.\n\nThis fixes a SmartOS specific issue that happens when reading from\na stream that is the reading end of a pipe that has been closed by\nthe parent process.\n\nIn this case, a UV__POLLHUP event would be set on the stream and would\nprevent the event loop from closing it. As a result, the event loop\nwould think there are stil handles open, and leave the process\nhanging.\n\nFixes #1419.",
        "before_after_code_files": [
          "Makefile.am||Makefile.am",
          "src/unix/stream.c||src/unix/stream.c",
          "test/test-list.h||test/test-list.h",
          "test/test-pipe-close-stdout-read-stdin.c||test/test-pipe-close-stdout-read-stdin.c",
          "uv.gyp||uv.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.am||Makefile.am": [
          "File: Makefile.am -> Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "163:                          test/test-pipe-getsockname.c \\",
          "164:                          test/test-pipe-sendmsg.c \\",
          "165:                          test/test-pipe-server-close.c \\",
          "166:                          test/test-platform-output.c \\",
          "167:                          test/test-poll-close.c \\",
          "168:                          test/test-poll-closesocket.c \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "166:                          test/test-pipe-close-stdout-read-stdin.c \\",
          "",
          "---------------"
        ],
        "src/unix/stream.c||src/unix/stream.c": [
          "File: src/unix/stream.c -> src/unix/stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1162:   assert(uv__stream_fd(stream) >= 0);",
          "1166:     uv__read(stream);",
          "1168:   if (uv__stream_fd(stream) == -1)",
          "",
          "[Removed Lines]",
          "1165:   if (events & (UV__POLLIN | UV__POLLERR))",
          "",
          "[Added Lines]",
          "1165:   if (events & (UV__POLLIN | UV__POLLERR | UV__POLLHUP))",
          "",
          "---------------"
        ],
        "test/test-list.h||test/test-list.h": [
          "File: test/test-list.h -> test/test-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "156: TEST_DECLARE   (pipe_ref2)",
          "157: TEST_DECLARE   (pipe_ref3)",
          "158: TEST_DECLARE   (pipe_ref4)",
          "159: TEST_DECLARE   (process_ref)",
          "160: TEST_DECLARE   (has_ref)",
          "161: TEST_DECLARE   (active)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "159: #ifndef _WIN32",
          "160: TEST_DECLARE   (pipe_close_stdout_read_stdin)",
          "161: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "314:   TEST_ENTRY  (pipe_connect_to_file)",
          "316:   TEST_ENTRY  (pipe_server_close)",
          "317:   TEST_ENTRY  (tty)",
          "318:   TEST_ENTRY  (stdio_over_pipes)",
          "319:   TEST_ENTRY  (ip6_pton)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "320: #ifndef _WIN32",
          "321:   TEST_ENTRY  (pipe_close_stdout_read_stdin)",
          "322: #endif",
          "",
          "---------------"
        ],
        "test/test-pipe-close-stdout-read-stdin.c||test/test-pipe-close-stdout-read-stdin.c": [
          "File: test/test-pipe-close-stdout-read-stdin.c -> test/test-pipe-close-stdout-read-stdin.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #ifndef _WIN32",
          "24: #include <stdlib.h>",
          "25: #include <unistd.h>",
          "26: #include <sys/wait.h>",
          "27: #include <sys/types.h>",
          "29: #include \"uv.h\"",
          "30: #include \"task.h\"",
          "32: void alloc_buffer(uv_handle_t *handle, size_t suggested_size, uv_buf_t* buf)",
          "33: {",
          "34:   static char buffer[1024];",
          "36:   buf->base = buffer;",
          "37:   buf->len = sizeof(buffer);",
          "38: }",
          "40: void read_stdin(uv_stream_t *stream, ssize_t nread, const uv_buf_t* buf)",
          "41: {",
          "42:   if (nread < 0) {",
          "43:     uv_close((uv_handle_t*)stream, NULL);",
          "44:     return;",
          "45:   }",
          "46: }",
          "51: TEST_IMPL(pipe_close_stdout_read_stdin) {",
          "52:   int r = -1;",
          "53:   int pid;",
          "54:   int fd[2];",
          "55:   int status;",
          "57:   pipe(fd);",
          "59:   if ((pid = fork()) == 0) {",
          "64:     close(fd[1]);",
          "65:     close(0);",
          "66:     dup(fd[0]);",
          "69:     uv_pipe_t stdin_pipe;",
          "71:     r = uv_pipe_init(uv_default_loop(), (uv_pipe_t *)&stdin_pipe, 0);",
          "72:     ASSERT(r == 0);",
          "74:     r = uv_pipe_open((uv_pipe_t *)&stdin_pipe, 0);",
          "75:     ASSERT(r == 0);",
          "77:     r = uv_read_start((uv_stream_t *)&stdin_pipe, alloc_buffer, read_stdin);",
          "78:     ASSERT(r == 0);",
          "85:     ASSERT(uv_run(uv_default_loop(), UV_RUN_NOWAIT) == 0);",
          "86:   } else {",
          "92:      close(fd[1]);",
          "93:      close(fd[0]);",
          "95:     waitpid(pid, &status, 0);",
          "96:     ASSERT(WIFEXITED(status) && WEXITSTATUS(status) == 0);",
          "97:   }",
          "99:   MAKE_VALGRIND_HAPPY();",
          "100:   return 0;",
          "101: }",
          "",
          "---------------"
        ],
        "uv.gyp||uv.gyp": [
          "File: uv.gyp -> uv.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "346:         'test/test-pipe-getsockname.c',",
          "347:         'test/test-pipe-sendmsg.c',",
          "348:         'test/test-pipe-server-close.c',",
          "349:         'test/test-platform-output.c',",
          "350:         'test/test-poll.c',",
          "351:         'test/test-poll-close.c',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "349:         'test/test-pipe-close-stdout-read-stdin.c',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bd0692e65a708f916872fe019eff37398a0c800a",
      "candidate_info": {
        "commit_hash": "bd0692e65a708f916872fe019eff37398a0c800a",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/bd0692e65a708f916872fe019eff37398a0c800a",
        "files": [
          "Makefile.am"
        ],
        "message": "build: use same CFLAGS in autotools build as in gyp\n\nCloses #1362",
        "before_after_code_files": [
          "Makefile.am||Makefile.am"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.am||Makefile.am": [
          "File: Makefile.am -> Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "82: include_HEADERS += include/uv-unix.h",
          "83: AM_CPPFLAGS += -I$(top_srcdir)/src/unix",
          "84: libuv_la_SOURCES += src/unix/async.c \\",
          "85:                    src/unix/atomic-ops.h \\",
          "86:                    src/unix/core.c \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84: libuv_la_CFLAGS += -g --std=gnu89 -pedantic -Wall -Wextra -Wno-unused-parameter",
          "",
          "---------------"
        ]
      }
    }
  ]
}