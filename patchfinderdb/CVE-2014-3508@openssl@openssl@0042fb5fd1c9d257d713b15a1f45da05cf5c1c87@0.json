{
  "cve_id": "CVE-2014-3508",
  "cve_desc": "The OBJ_obj2txt function in crypto/objects/obj_dat.c in OpenSSL 0.9.8 before 0.9.8zb, 1.0.0 before 1.0.0n, and 1.0.1 before 1.0.1i, when pretty printing is used, does not ensure the presence of '\\0' characters, which allows context-dependent attackers to obtain sensitive information from process stack memory by reading output from X509_name_oneline, X509_name_print_ex, and unspecified other functions.",
  "repo": "openssl/openssl",
  "patch_hash": "0042fb5fd1c9d257d713b15a1f45da05cf5c1c87",
  "patch_info": {
    "commit_hash": "0042fb5fd1c9d257d713b15a1f45da05cf5c1c87",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/0042fb5fd1c9d257d713b15a1f45da05cf5c1c87",
    "files": [
      "crypto/asn1/a_object.c",
      "crypto/objects/obj_dat.c"
    ],
    "message": "Fix OID handling:\n\n- Upon parsing, reject OIDs with invalid base-128 encoding.\n- Always NUL-terminate the destination buffer in OBJ_obj2txt printing function.\n\nCVE-2014-3508\n\nReviewed-by: Dr. Stephen Henson <steve@openssl.org>\nReviewed-by: Kurt Roeckx <kurt@openssl.org>\nReviewed-by: Tim Hudson <tjh@openssl.org>",
    "before_after_code_files": [
      "crypto/asn1/a_object.c||crypto/asn1/a_object.c",
      "crypto/objects/obj_dat.c||crypto/objects/obj_dat.c"
    ]
  },
  "patch_diff": {
    "crypto/asn1/a_object.c||crypto/asn1/a_object.c": [
      "File: crypto/asn1/a_object.c -> crypto/asn1/a_object.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "287:  ASN1err(ASN1_F_D2I_ASN1_OBJECT,i);",
      "288:  return(NULL);",
      "289: }",
      "290: ASN1_OBJECT *c2i_ASN1_OBJECT(ASN1_OBJECT **a, const unsigned char **pp,",
      "291:       long len)",
      "292:  {",
      "293:  ASN1_OBJECT *ret=NULL;",
      "294:  const unsigned char *p;",
      "295:  unsigned char *data;",
      "301:   {",
      "302:   if (*p == 0x80 && (!i || !(p[-1] & 0x80)))",
      "303:    {",
      "",
      "[Removed Lines]",
      "296:  int i;",
      "300:  for (i = 0, p = *pp; i < len; i++, p++)",
      "",
      "[Added Lines]",
      "297:  int i, length;",
      "304:  if (len <= 0 || len > INT_MAX || pp == NULL || (p = *pp) == NULL ||",
      "305:      p[len - 1] & 0x80)",
      "306:   {",
      "307:   ASN1err(ASN1_F_C2I_ASN1_OBJECT,ASN1_R_INVALID_OBJECT_ENCODING);",
      "308:   return NULL;",
      "309:   }",
      "311:  length = (int)len;",
      "312:  for (i = 0; i < length; i++, p++)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "320:  data = (unsigned char *)ret->data;",
      "321:  ret->data = NULL;",
      "324:   {",
      "325:   ret->length=0;",
      "326:   if (data != NULL) OPENSSL_free(data);",
      "328:   if (data == NULL)",
      "329:    { i=ERR_R_MALLOC_FAILURE; goto err; }",
      "330:   ret->flags|=ASN1_OBJECT_FLAG_DYNAMIC_DATA;",
      "331:   }",
      "334:  ret->data  =data;",
      "336:  ret->sn=NULL;",
      "337:  ret->ln=NULL;",
      "341:  if (a != NULL) (*a)=ret;",
      "",
      "[Removed Lines]",
      "323:  if ((data == NULL) || (ret->length < len))",
      "327:   data=(unsigned char *)OPENSSL_malloc(len ? (int)len : 1);",
      "332:  memcpy(data,p,(int)len);",
      "335:  ret->length=(int)len;",
      "339:  p+=len;",
      "",
      "[Added Lines]",
      "335:  if ((data == NULL) || (ret->length < length))",
      "339:   data=(unsigned char *)OPENSSL_malloc(length);",
      "344:  memcpy(data,p,length);",
      "347:  ret->length=length;",
      "351:  p+=length;",
      "",
      "---------------"
    ],
    "crypto/objects/obj_dat.c||crypto/objects/obj_dat.c": [
      "File: crypto/objects/obj_dat.c -> crypto/objects/obj_dat.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "471:  const unsigned char *p;",
      "472:  char tbuf[DECIMAL_SIZE(i)+DECIMAL_SIZE(l)+2];",
      "480:  if (!no_name && (nid=OBJ_obj2nid(a)) != NID_undef)",
      "481:   {",
      "",
      "[Removed Lines]",
      "474:  if ((a == NULL) || (a->data == NULL)) {",
      "475:   buf[0]='\\0';",
      "476:   return(0);",
      "477:  }",
      "",
      "[Added Lines]",
      "475:  if (buf && buf_len > 0)",
      "476:   buf[0] = '\\0';",
      "478:  if ((a == NULL) || (a->data == NULL))",
      "479:   return(0);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "554:     i=(int)(l/40);",
      "555:     l-=(long)(i*40);",
      "556:     }",
      "558:     {",
      "560:     buf_len--;",
      "561:     }",
      "562:    n++;",
      "",
      "[Removed Lines]",
      "557:    if (buf && (buf_len > 0))",
      "",
      "[Added Lines]",
      "558:    if (buf && (buf_len > 1))",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "571:    i = strlen(bndec);",
      "572:    if (buf)",
      "573:     {",
      "575:      {",
      "577:      buf_len--;",
      "578:      }",
      "579:     BUF_strlcpy(buf,bndec,buf_len);",
      "",
      "[Removed Lines]",
      "574:     if (buf_len > 0)",
      "",
      "[Added Lines]",
      "576:     if (buf_len > 1)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "03b04ddac162c7b7fa3c57eadccc5a583a00d291",
      "candidate_info": {
        "commit_hash": "03b04ddac162c7b7fa3c57eadccc5a583a00d291",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/03b04ddac162c7b7fa3c57eadccc5a583a00d291",
        "files": [
          "crypto/asn1/a_object.c",
          "crypto/objects/obj_dat.c"
        ],
        "message": "Fix OID handling:\n\n- Upon parsing, reject OIDs with invalid base-128 encoding.\n- Always NUL-terminate the destination buffer in OBJ_obj2txt printing function.\n\nCVE-2014-3508\n\nReviewed-by: Dr. Stephen Henson <steve@openssl.org>\nReviewed-by: Kurt Roeckx <kurt@openssl.org>\nReviewed-by: Tim Hudson <tjh@openssl.org>",
        "before_after_code_files": [
          "crypto/asn1/a_object.c||crypto/asn1/a_object.c",
          "crypto/objects/obj_dat.c||crypto/objects/obj_dat.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/asn1/a_object.c||crypto/asn1/a_object.c",
            "crypto/objects/obj_dat.c||crypto/objects/obj_dat.c"
          ],
          "candidate": [
            "crypto/asn1/a_object.c||crypto/asn1/a_object.c",
            "crypto/objects/obj_dat.c||crypto/objects/obj_dat.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/asn1/a_object.c||crypto/asn1/a_object.c": [
          "File: crypto/asn1/a_object.c -> crypto/asn1/a_object.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "283:  ASN1err(ASN1_F_D2I_ASN1_OBJECT,i);",
          "284:  return(NULL);",
          "285: }",
          "286: ASN1_OBJECT *c2i_ASN1_OBJECT(ASN1_OBJECT **a, const unsigned char **pp,",
          "287:       long len)",
          "288:  {",
          "289:  ASN1_OBJECT *ret=NULL;",
          "290:  const unsigned char *p;",
          "291:  unsigned char *data;",
          "297:   {",
          "298:   if (*p == 0x80 && (!i || !(p[-1] & 0x80)))",
          "299:    {",
          "",
          "[Removed Lines]",
          "292:  int i;",
          "296:  for (i = 0, p = *pp; i < len; i++, p++)",
          "",
          "[Added Lines]",
          "293:  int i, length;",
          "300:  if (len <= 0 || len > INT_MAX || pp == NULL || (p = *pp) == NULL ||",
          "301:      p[len - 1] & 0x80)",
          "302:   {",
          "303:   ASN1err(ASN1_F_C2I_ASN1_OBJECT,ASN1_R_INVALID_OBJECT_ENCODING);",
          "304:   return NULL;",
          "305:   }",
          "307:  length = (int)len;",
          "308:  for (i = 0; i < length; i++, p++)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "316:  data = (unsigned char *)ret->data;",
          "317:  ret->data = NULL;",
          "320:   {",
          "321:   ret->length=0;",
          "322:   if (data != NULL) OPENSSL_free(data);",
          "324:   if (data == NULL)",
          "325:    { i=ERR_R_MALLOC_FAILURE; goto err; }",
          "326:   ret->flags|=ASN1_OBJECT_FLAG_DYNAMIC_DATA;",
          "327:   }",
          "330:  ret->data  =data;",
          "332:  ret->sn=NULL;",
          "333:  ret->ln=NULL;",
          "337:  if (a != NULL) (*a)=ret;",
          "",
          "[Removed Lines]",
          "319:  if ((data == NULL) || (ret->length < len))",
          "323:   data=(unsigned char *)OPENSSL_malloc(len ? (int)len : 1);",
          "328:  memcpy(data,p,(int)len);",
          "331:  ret->length=(int)len;",
          "335:  p+=len;",
          "",
          "[Added Lines]",
          "331:  if ((data == NULL) || (ret->length < length))",
          "335:   data=(unsigned char *)OPENSSL_malloc(length);",
          "340:  memcpy(data,p,length);",
          "343:  ret->length=length;",
          "347:  p+=length;",
          "",
          "---------------"
        ],
        "crypto/objects/obj_dat.c||crypto/objects/obj_dat.c": [
          "File: crypto/objects/obj_dat.c -> crypto/objects/obj_dat.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "471:  const unsigned char *p;",
          "472:  char tbuf[DECIMAL_SIZE(i)+DECIMAL_SIZE(l)+2];",
          "480:  if (!no_name && (nid=OBJ_obj2nid(a)) != NID_undef)",
          "481:   {",
          "",
          "[Removed Lines]",
          "474:  if ((a == NULL) || (a->data == NULL)) {",
          "475:   buf[0]='\\0';",
          "476:   return(0);",
          "477:  }",
          "",
          "[Added Lines]",
          "475:  if (buf && buf_len > 0)",
          "476:   buf[0] = '\\0';",
          "478:  if ((a == NULL) || (a->data == NULL))",
          "479:   return(0);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "554:     i=(int)(l/40);",
          "555:     l-=(long)(i*40);",
          "556:     }",
          "558:     {",
          "560:     buf_len--;",
          "561:     }",
          "562:    n++;",
          "",
          "[Removed Lines]",
          "557:    if (buf && (buf_len > 0))",
          "",
          "[Added Lines]",
          "558:    if (buf && (buf_len > 1))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "571:    i = strlen(bndec);",
          "572:    if (buf)",
          "573:     {",
          "575:      {",
          "577:      buf_len--;",
          "578:      }",
          "579:     BUF_strlcpy(buf,bndec,buf_len);",
          "",
          "[Removed Lines]",
          "574:     if (buf_len > 0)",
          "",
          "[Added Lines]",
          "576:     if (buf_len > 1)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "57b0c4697a3388706b6746dc16d053787aa5cac0",
      "candidate_info": {
        "commit_hash": "57b0c4697a3388706b6746dc16d053787aa5cac0",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/57b0c4697a3388706b6746dc16d053787aa5cac0",
        "files": [
          "crypto/asn1/a_object.c",
          "crypto/objects/obj_dat.c"
        ],
        "message": "Fix OID handling:\n\n- Upon parsing, reject OIDs with invalid base-128 encoding.\n- Always NUL-terminate the destination buffer in OBJ_obj2txt printing function.\n\nCVE-2014-3508\n\nReviewed-by: Dr. Stephen Henson <steve@openssl.org>\nReviewed-by: Kurt Roeckx <kurt@openssl.org>\nReviewed-by: Tim Hudson <tjh@openssl.org>",
        "before_after_code_files": [
          "crypto/asn1/a_object.c||crypto/asn1/a_object.c",
          "crypto/objects/obj_dat.c||crypto/objects/obj_dat.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/asn1/a_object.c||crypto/asn1/a_object.c",
            "crypto/objects/obj_dat.c||crypto/objects/obj_dat.c"
          ],
          "candidate": [
            "crypto/asn1/a_object.c||crypto/asn1/a_object.c",
            "crypto/objects/obj_dat.c||crypto/objects/obj_dat.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/asn1/a_object.c||crypto/asn1/a_object.c": [
          "File: crypto/asn1/a_object.c -> crypto/asn1/a_object.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "283:  ASN1err(ASN1_F_D2I_ASN1_OBJECT,i);",
          "284:  return(NULL);",
          "285: }",
          "286: ASN1_OBJECT *c2i_ASN1_OBJECT(ASN1_OBJECT **a, const unsigned char **pp,",
          "287:       long len)",
          "288:  {",
          "289:  ASN1_OBJECT *ret=NULL;",
          "290:  const unsigned char *p;",
          "291:  unsigned char *data;",
          "297:   {",
          "298:   if (*p == 0x80 && (!i || !(p[-1] & 0x80)))",
          "299:    {",
          "",
          "[Removed Lines]",
          "292:  int i;",
          "296:  for (i = 0, p = *pp; i < len; i++, p++)",
          "",
          "[Added Lines]",
          "293:  int i, length;",
          "300:  if (len <= 0 || len > INT_MAX || pp == NULL || (p = *pp) == NULL ||",
          "301:      p[len - 1] & 0x80)",
          "302:   {",
          "303:   ASN1err(ASN1_F_C2I_ASN1_OBJECT,ASN1_R_INVALID_OBJECT_ENCODING);",
          "304:   return NULL;",
          "305:   }",
          "307:  length = (int)len;",
          "308:  for (i = 0; i < length; i++, p++)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "316:  data = (unsigned char *)ret->data;",
          "317:  ret->data = NULL;",
          "320:   {",
          "321:   ret->length=0;",
          "322:   if (data != NULL) OPENSSL_free(data);",
          "324:   if (data == NULL)",
          "325:    { i=ERR_R_MALLOC_FAILURE; goto err; }",
          "326:   ret->flags|=ASN1_OBJECT_FLAG_DYNAMIC_DATA;",
          "327:   }",
          "330:  ret->data  =data;",
          "332:  ret->sn=NULL;",
          "333:  ret->ln=NULL;",
          "337:  if (a != NULL) (*a)=ret;",
          "",
          "[Removed Lines]",
          "319:  if ((data == NULL) || (ret->length < len))",
          "323:   data=(unsigned char *)OPENSSL_malloc(len ? (int)len : 1);",
          "328:  memcpy(data,p,(int)len);",
          "331:  ret->length=(int)len;",
          "335:  p+=len;",
          "",
          "[Added Lines]",
          "331:  if ((data == NULL) || (ret->length < length))",
          "335:   data=(unsigned char *)OPENSSL_malloc(length);",
          "340:  memcpy(data,p,length);",
          "343:  ret->length=length;",
          "347:  p+=length;",
          "",
          "---------------"
        ],
        "crypto/objects/obj_dat.c||crypto/objects/obj_dat.c": [
          "File: crypto/objects/obj_dat.c -> crypto/objects/obj_dat.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "471:  const unsigned char *p;",
          "472:  char tbuf[DECIMAL_SIZE(i)+DECIMAL_SIZE(l)+2];",
          "480:  if (!no_name && (nid=OBJ_obj2nid(a)) != NID_undef)",
          "481:   {",
          "",
          "[Removed Lines]",
          "474:  if ((a == NULL) || (a->data == NULL)) {",
          "475:   buf[0]='\\0';",
          "476:   return(0);",
          "477:  }",
          "",
          "[Added Lines]",
          "475:  if (buf && buf_len > 0)",
          "476:   buf[0] = '\\0';",
          "478:  if ((a == NULL) || (a->data == NULL))",
          "479:   return(0);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "554:     i=(int)(l/40);",
          "555:     l-=(long)(i*40);",
          "556:     }",
          "558:     {",
          "560:     buf_len--;",
          "561:     }",
          "562:    n++;",
          "",
          "[Removed Lines]",
          "557:    if (buf && (buf_len > 0))",
          "",
          "[Added Lines]",
          "558:    if (buf && (buf_len > 1))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "571:    i = strlen(bndec);",
          "572:    if (buf)",
          "573:     {",
          "575:      {",
          "577:      buf_len--;",
          "578:      }",
          "579:     BUF_strlcpy(buf,bndec,buf_len);",
          "",
          "[Removed Lines]",
          "574:     if (buf_len > 0)",
          "",
          "[Added Lines]",
          "576:     if (buf_len > 1)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c01618dd822cc724c05eeb52455874ad068ec6a5",
      "candidate_info": {
        "commit_hash": "c01618dd822cc724c05eeb52455874ad068ec6a5",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c01618dd822cc724c05eeb52455874ad068ec6a5",
        "files": [
          "crypto/asn1/a_object.c",
          "crypto/objects/obj_dat.c"
        ],
        "message": "Fix OID handling:\n\n- Upon parsing, reject OIDs with invalid base-128 encoding.\n- Always NUL-terminate the destination buffer in OBJ_obj2txt printing function.\n\nCVE-2014-3508\n\nReviewed-by: Dr. Stephen Henson <steve@openssl.org>\nReviewed-by: Kurt Roeckx <kurt@openssl.org>\nReviewed-by: Tim Hudson <tjh@openssl.org>",
        "before_after_code_files": [
          "crypto/asn1/a_object.c||crypto/asn1/a_object.c",
          "crypto/objects/obj_dat.c||crypto/objects/obj_dat.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/asn1/a_object.c||crypto/asn1/a_object.c",
            "crypto/objects/obj_dat.c||crypto/objects/obj_dat.c"
          ],
          "candidate": [
            "crypto/asn1/a_object.c||crypto/asn1/a_object.c",
            "crypto/objects/obj_dat.c||crypto/objects/obj_dat.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/asn1/a_object.c||crypto/asn1/a_object.c": [
          "File: crypto/asn1/a_object.c -> crypto/asn1/a_object.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "283:  ASN1err(ASN1_F_D2I_ASN1_OBJECT,i);",
          "284:  return(NULL);",
          "285: }",
          "286: ASN1_OBJECT *c2i_ASN1_OBJECT(ASN1_OBJECT **a, const unsigned char **pp,",
          "287:       long len)",
          "288:  {",
          "289:  ASN1_OBJECT *ret=NULL;",
          "290:  const unsigned char *p;",
          "291:  unsigned char *data;",
          "297:   {",
          "298:   if (*p == 0x80 && (!i || !(p[-1] & 0x80)))",
          "299:    {",
          "",
          "[Removed Lines]",
          "292:  int i;",
          "296:  for (i = 0, p = *pp; i < len; i++, p++)",
          "",
          "[Added Lines]",
          "293:  int i, length;",
          "300:  if (len <= 0 || len > INT_MAX || pp == NULL || (p = *pp) == NULL ||",
          "301:      p[len - 1] & 0x80)",
          "302:   {",
          "303:   ASN1err(ASN1_F_C2I_ASN1_OBJECT,ASN1_R_INVALID_OBJECT_ENCODING);",
          "304:   return NULL;",
          "305:   }",
          "307:  length = (int)len;",
          "308:  for (i = 0; i < length; i++, p++)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "316:  data = (unsigned char *)ret->data;",
          "317:  ret->data = NULL;",
          "320:   {",
          "321:   ret->length=0;",
          "322:   if (data != NULL) OPENSSL_free(data);",
          "324:   if (data == NULL)",
          "325:    { i=ERR_R_MALLOC_FAILURE; goto err; }",
          "326:   ret->flags|=ASN1_OBJECT_FLAG_DYNAMIC_DATA;",
          "327:   }",
          "330:  ret->data  =data;",
          "332:  ret->sn=NULL;",
          "333:  ret->ln=NULL;",
          "337:  if (a != NULL) (*a)=ret;",
          "",
          "[Removed Lines]",
          "319:  if ((data == NULL) || (ret->length < len))",
          "323:   data=(unsigned char *)OPENSSL_malloc(len ? (int)len : 1);",
          "328:  memcpy(data,p,(int)len);",
          "331:  ret->length=(int)len;",
          "335:  p+=len;",
          "",
          "[Added Lines]",
          "331:  if ((data == NULL) || (ret->length < length))",
          "335:   data=(unsigned char *)OPENSSL_malloc(length);",
          "340:  memcpy(data,p,length);",
          "343:  ret->length=length;",
          "347:  p+=length;",
          "",
          "---------------"
        ],
        "crypto/objects/obj_dat.c||crypto/objects/obj_dat.c": [
          "File: crypto/objects/obj_dat.c -> crypto/objects/obj_dat.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "471:  const unsigned char *p;",
          "472:  char tbuf[DECIMAL_SIZE(i)+DECIMAL_SIZE(l)+2];",
          "480:  if (!no_name && (nid=OBJ_obj2nid(a)) != NID_undef)",
          "481:   {",
          "",
          "[Removed Lines]",
          "474:  if ((a == NULL) || (a->data == NULL)) {",
          "475:   buf[0]='\\0';",
          "476:   return(0);",
          "477:  }",
          "",
          "[Added Lines]",
          "475:  if (buf && buf_len > 0)",
          "476:   buf[0] = '\\0';",
          "478:  if ((a == NULL) || (a->data == NULL))",
          "479:   return(0);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "554:     i=(int)(l/40);",
          "555:     l-=(long)(i*40);",
          "556:     }",
          "558:     {",
          "560:     buf_len--;",
          "561:     }",
          "562:    n++;",
          "",
          "[Removed Lines]",
          "557:    if (buf && (buf_len > 0))",
          "",
          "[Added Lines]",
          "558:    if (buf && (buf_len > 1))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "571:    i = strlen(bndec);",
          "572:    if (buf)",
          "573:     {",
          "575:      {",
          "577:      buf_len--;",
          "578:      }",
          "579:     BUF_strlcpy(buf,bndec,buf_len);",
          "",
          "[Removed Lines]",
          "574:     if (buf_len > 0)",
          "",
          "[Added Lines]",
          "576:     if (buf_len > 1)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b9a73f5481fb8d5aac535622759cb0f632f39914",
      "candidate_info": {
        "commit_hash": "b9a73f5481fb8d5aac535622759cb0f632f39914",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b9a73f5481fb8d5aac535622759cb0f632f39914",
        "files": [
          "crypto/asn1/a_object.c",
          "crypto/objects/obj_dat.c"
        ],
        "message": "Fix OID handling:\n\n- Upon parsing, reject OIDs with invalid base-128 encoding.\n- Always NUL-terminate the destination buffer in OBJ_obj2txt printing function.\n\nCVE-2014-3508\n\nReviewed-by: Dr. Stephen Henson <steve@openssl.org>\nReviewed-by: Kurt Roeckx <kurt@openssl.org>\nReviewed-by: Tim Hudson <tjh@openssl.org>",
        "before_after_code_files": [
          "crypto/asn1/a_object.c||crypto/asn1/a_object.c",
          "crypto/objects/obj_dat.c||crypto/objects/obj_dat.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/asn1/a_object.c||crypto/asn1/a_object.c",
            "crypto/objects/obj_dat.c||crypto/objects/obj_dat.c"
          ],
          "candidate": [
            "crypto/asn1/a_object.c||crypto/asn1/a_object.c",
            "crypto/objects/obj_dat.c||crypto/objects/obj_dat.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/asn1/a_object.c||crypto/asn1/a_object.c": [
          "File: crypto/asn1/a_object.c -> crypto/asn1/a_object.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "285:   ASN1_OBJECT_free(ret);",
          "286:  return(NULL);",
          "287: }",
          "288: ASN1_OBJECT *c2i_ASN1_OBJECT(ASN1_OBJECT **a, const unsigned char **pp,",
          "289:       long len)",
          "290:  {",
          "291:  ASN1_OBJECT *ret=NULL;",
          "292:  const unsigned char *p;",
          "298:   {",
          "299:   if (*p == 0x80 && (!i || !(p[-1] & 0x80)))",
          "300:    {",
          "",
          "[Removed Lines]",
          "293:  int i;",
          "297:  for (i = 0, p = *pp; i < len; i++, p++)",
          "",
          "[Added Lines]",
          "294:  int i, length;",
          "301:  if (len <= 0 || len > INT_MAX || pp == NULL || (p = *pp) == NULL ||",
          "302:      p[len - 1] & 0x80)",
          "303:   {",
          "304:   ASN1err(ASN1_F_C2I_ASN1_OBJECT,ASN1_R_INVALID_OBJECT_ENCODING);",
          "305:   return NULL;",
          "306:   }",
          "308:  length = (int)len;",
          "309:  for (i = 0; i < length; i++, p++)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "313:  else ret=(*a);",
          "315:  p= *pp;",
          "317:   {",
          "318:   if (ret->data != NULL) OPENSSL_free(ret->data);",
          "320:   ret->flags|=ASN1_OBJECT_FLAG_DYNAMIC_DATA;",
          "321:   if (ret->data == NULL)",
          "322:    { i=ERR_R_MALLOC_FAILURE; goto err; }",
          "323:   }",
          "326:  ret->sn=NULL;",
          "327:  ret->ln=NULL;",
          "331:  if (a != NULL) (*a)=ret;",
          "",
          "[Removed Lines]",
          "316:  if ((ret->data == NULL) || (ret->length < len))",
          "319:   ret->data=(unsigned char *)OPENSSL_malloc(len ? (int)len : 1);",
          "324:  memcpy(ret->data,p,(int)len);",
          "325:  ret->length=(int)len;",
          "329:  p+=len;",
          "",
          "[Added Lines]",
          "328:  if ((ret->data == NULL) || (ret->length < length))",
          "331:   ret->data=(unsigned char *)OPENSSL_malloc(length);",
          "336:  memcpy(ret->data,p,length);",
          "337:  ret->length=length;",
          "341:  p+=length;",
          "",
          "---------------"
        ],
        "crypto/objects/obj_dat.c||crypto/objects/obj_dat.c": [
          "File: crypto/objects/obj_dat.c -> crypto/objects/obj_dat.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "444:  unsigned char *p;",
          "445:  char tbuf[DECIMAL_SIZE(i)+DECIMAL_SIZE(l)+2];",
          "453:  if (!no_name && (nid=OBJ_obj2nid(a)) != NID_undef)",
          "454:   {",
          "",
          "[Removed Lines]",
          "447:  if ((a == NULL) || (a->data == NULL)) {",
          "448:   buf[0]='\\0';",
          "449:   return(0);",
          "450:  }",
          "",
          "[Added Lines]",
          "448:  if (buf && buf_len > 0)",
          "449:   buf[0] = '\\0';",
          "451:  if ((a == NULL) || (a->data == NULL))",
          "452:   return(0);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "527:     i=(int)(l/40);",
          "528:     l-=(long)(i*40);",
          "529:     }",
          "531:     {",
          "533:     buf_len--;",
          "534:     }",
          "535:    n++;",
          "",
          "[Removed Lines]",
          "530:    if (buf && (buf_len > 0))",
          "",
          "[Added Lines]",
          "531:    if (buf && (buf_len > 1))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "544:    i = strlen(bndec);",
          "545:    if (buf)",
          "546:     {",
          "548:      {",
          "550:      buf_len--;",
          "551:      }",
          "552:     BUF_strlcpy(buf,bndec,buf_len);",
          "",
          "[Removed Lines]",
          "547:     if (buf_len > 0)",
          "",
          "[Added Lines]",
          "549:     if (buf_len > 1)",
          "",
          "---------------"
        ]
      }
    }
  ]
}