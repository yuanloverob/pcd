{
  "cve_id": "CVE-2014-9652",
  "cve_desc": "The mconvert function in softmagic.c in file before 5.21, as used in the Fileinfo component in PHP before 5.4.37, 5.5.x before 5.5.21, and 5.6.x before 5.6.5, does not properly handle a certain string-length field during a copy of a truncated version of a Pascal string, which might allow remote attackers to cause a denial of service (out-of-bounds memory access and application crash) via a crafted file.",
  "repo": "file/file",
  "patch_hash": "59e63838913eee47f5c120a6c53d4565af638158",
  "patch_info": {
    "commit_hash": "59e63838913eee47f5c120a6c53d4565af638158",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/59e63838913eee47f5c120a6c53d4565af638158",
    "files": [
      "src/softmagic.c"
    ],
    "message": "PR/398: Correctly truncate pascal strings (fixes out of bounds read of 1, 2, or 4 bytes).",
    "before_after_code_files": [
      "src/softmagic.c||src/softmagic.c"
    ]
  },
  "patch_diff": {
    "src/softmagic.c||src/softmagic.c": [
      "File: src/softmagic.c -> src/softmagic.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "32: #include \"file.h\"",
      "34: #ifndef lint",
      "38: #include \"magic.h\"",
      "",
      "[Removed Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.195 2014/09/24 19:49:07 christos Exp $\")",
      "",
      "[Added Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.196 2014/11/07 15:24:14 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "964:   size_t sz = file_pstring_length_size(m);",
      "965:   char *ptr1 = p->s, *ptr2 = ptr1 + sz;",
      "966:   size_t len = file_pstring_get_length(m, ptr1);",
      "975:   }",
      "976:   while (len--)",
      "",
      "[Removed Lines]",
      "967:   if (len >= sizeof(p->s)) {",
      "974:    len = sizeof(p->s) - sz;",
      "",
      "[Added Lines]",
      "968:   if (len >= sz) {",
      "977:    len = sz;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "07bdb1e0d5f91d4efbe718024cbed7a067294446",
      "candidate_info": {
        "commit_hash": "07bdb1e0d5f91d4efbe718024cbed7a067294446",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/07bdb1e0d5f91d4efbe718024cbed7a067294446",
        "files": [
          "ChangeLog",
          "magic/Magdir/animation",
          "magic/Magdir/apple",
          "magic/Magdir/archive",
          "magic/Magdir/att3b",
          "magic/Magdir/audio",
          "magic/Magdir/bflt",
          "magic/Magdir/cafebabe",
          "magic/Magdir/clarion",
          "magic/Magdir/clipper",
          "magic/Magdir/compress",
          "magic/Magdir/database",
          "magic/Magdir/dump",
          "magic/Magdir/efi",
          "magic/Magdir/encore",
          "magic/Magdir/filesystems",
          "magic/Magdir/fonts",
          "magic/Magdir/games",
          "magic/Magdir/gimp",
          "magic/Magdir/gnome",
          "magic/Magdir/gpt",
          "magic/Magdir/hp",
          "magic/Magdir/ibm370",
          "magic/Magdir/images",
          "magic/Magdir/intel",
          "magic/Magdir/isz",
          "magic/Magdir/karma",
          "magic/Magdir/linux",
          "magic/Magdir/mach",
          "magic/Magdir/mips",
          "magic/Magdir/motorola",
          "magic/Magdir/msdos",
          "magic/Magdir/ncr",
          "magic/Magdir/nitpicker",
          "magic/Magdir/pdp",
          "magic/Magdir/riff",
          "magic/Magdir/sequent",
          "magic/Magdir/sgi",
          "magic/Magdir/sharc",
          "magic/Magdir/sql",
          "magic/Magdir/sun",
          "magic/Magdir/ti-8x",
          "magic/Magdir/uterus",
          "magic/Magdir/varied.out",
          "magic/Magdir/vax",
          "magic/Magdir/virtual",
          "magic/Magdir/vorbis",
          "magic/Magdir/windows",
          "magic/Magdir/xilinx",
          "magic/Magdir/xwindows",
          "magic/Magdir/zfs",
          "src/apprentice.c",
          "src/softmagic.c"
        ],
        "message": "Kill %h %hh and %l modifiers for bytes, shorts, and longs respectively. Use nothing, for all types except quads which need %ll",
        "before_after_code_files": [
          "src/apprentice.c||src/apprentice.c",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/apprentice.c||src/apprentice.c": [
          "File: src/apprentice.c -> src/apprentice.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.204 2014/04/17 12:44:01 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.205 2014/04/28 14:09:07 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2133: private int",
          "2134: check_format_type(const char *ptr, int type)",
          "2135: {",
          "2137:  if (*ptr == '\\0') {",
          "2139:   return -1;",
          "2140:  }",
          "2143:  case FILE_FMT_QUAD:",
          "2144:   quad = 1;",
          "2146:  case FILE_FMT_NUM:",
          "2147:   if (*ptr == '-')",
          "2148:    ptr++;",
          "2149:   if (*ptr == '.')",
          "",
          "[Removed Lines]",
          "2136:  int quad = 0;",
          "2142:  switch (type) {",
          "",
          "[Added Lines]",
          "2136:  int quad = 0, h;",
          "2142:  switch (file_formats[type]) {",
          "2147:   if (quad == 0) {",
          "2148:    switch (type) {",
          "2149:    case FILE_BYTE:",
          "2150:     h = 2;",
          "2151:     break;",
          "2152:    case FILE_SHORT:",
          "2153:    case FILE_BESHORT:",
          "2154:    case FILE_LESHORT:",
          "2155:     h = 1;",
          "2156:     break;",
          "2157:    case FILE_LONG:",
          "2158:    case FILE_BELONG:",
          "2159:    case FILE_LELONG:",
          "2160:    case FILE_MELONG:",
          "2161:    case FILE_LEID3:",
          "2162:    case FILE_BEID3:",
          "2163:    case FILE_INDIRECT:",
          "2164:     h = 0;",
          "2165:     break;",
          "2166:    default:",
          "2167:     abort();",
          "2168:    }",
          "2169:   } else",
          "2170:    h = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2168:    case 'o':",
          "2169:    case 'x':",
          "2170:    case 'X':",
          "2172:    default:",
          "2173:     return -1;",
          "2174:    }",
          "2176:   case 'h':",
          "2177:    switch (*ptr++) {",
          "2178:    case 'h':",
          "2179:     switch (*ptr++) {",
          "2180:     case 'i':",
          "2181:     case 'd':",
          "",
          "[Removed Lines]",
          "2171:     return 0;",
          "",
          "[Added Lines]",
          "2197:     return h != 0 ? -1 : 0;",
          "2207:    if (h-- <= 0)",
          "2208:     return -1;",
          "2211:     if (h-- <= 0)",
          "2212:      return -1;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2193:    case 'o':",
          "2194:    case 'x':",
          "2195:    case 'X':",
          "2197:    default:",
          "2198:     return -1;",
          "2199:    }",
          "2201:   case 'c':",
          "2202:   case 'i':",
          "2203:   case 'd':",
          "2204:   case 'u':",
          "2205:   case 'o':",
          "2206:   case 'x':",
          "2207:   case 'X':",
          "2208:    return 0;",
          "2210:   default:",
          "2211:    return -1;",
          "2212:   }",
          "",
          "[Removed Lines]",
          "2196:     return 0;",
          "",
          "[Added Lines]",
          "2230:     return h != 0 ? -1 : 0;",
          "2234: #endif",
          "2236:    return h != 2 ? -1 : 0;",
          "2243: #ifdef STRICT_FORMAT",
          "2244:    return h != 0 ? -1 : 0;",
          "2245: #else",
          "2247: #endif",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2293:  }",
          "2295:  ptr++;",
          "",
          "[Removed Lines]",
          "2296:  if (check_format_type(ptr, file_formats[m->type]) == -1) {",
          "",
          "[Added Lines]",
          "2334:  if (check_format_type(ptr, m->type) == -1) {",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.183 2014/04/01 15:44:26 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.184 2014/04/12 15:47:10 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "427:   case -1:",
          "428:    return -1;",
          "429:   case 1:",
          "431:        (unsigned char)v);",
          "432:    if (file_printf(ms, F(ms, m, \"%s\"), buf) == -1)",
          "433:     return -1;",
          "434:    break;",
          "435:   default:",
          "437:        (unsigned char) v) == -1)",
          "438:     return -1;",
          "439:    break;",
          "",
          "[Removed Lines]",
          "430:    (void)snprintf(buf, sizeof(buf), \"%c\",",
          "436:    if (file_printf(ms, F(ms, m, \"%c\"),",
          "",
          "[Added Lines]",
          "430:    (void)snprintf(buf, sizeof(buf), \"%d\",",
          "436:    if (file_printf(ms, F(ms, m, \"%d\"),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "449:   case -1:",
          "450:    return -1;",
          "451:   case 1:",
          "453:        (unsigned short)v);",
          "454:    if (file_printf(ms, F(ms, m, \"%s\"), buf) == -1)",
          "455:     return -1;",
          "456:    break;",
          "457:   default:",
          "459:        (unsigned short) v) == -1)",
          "460:     return -1;",
          "461:    break;",
          "",
          "[Removed Lines]",
          "452:    (void)snprintf(buf, sizeof(buf), \"%hu\",",
          "458:    if (file_printf(ms, F(ms, m, \"%hu\"),",
          "",
          "[Added Lines]",
          "452:    (void)snprintf(buf, sizeof(buf), \"%u\",",
          "458:    if (file_printf(ms, F(ms, m, \"%u\"),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "472:   case -1:",
          "473:    return -1;",
          "474:   case 1:",
          "477:    if (file_printf(ms, F(ms, m, \"%s\"), buf) == -1)",
          "478:     return -1;",
          "479:    break;",
          "480:   default:",
          "483:     return -1;",
          "484:    break;",
          "485:   }",
          "",
          "[Removed Lines]",
          "475:    (void)snprintf(buf, sizeof(buf), \"%lu\",",
          "476:        (unsigned long)(uint32_t) v);",
          "481:    if (file_printf(ms, F(ms, m, \"%lu\"),",
          "482:        (unsigned long)(uint32_t) v) == -1)",
          "",
          "[Added Lines]",
          "475:    (void)snprintf(buf, sizeof(buf), \"%u\", (uint32_t) v);",
          "480:    if (file_printf(ms, F(ms, m, \"%u\"), (uint32_t) v) == -1)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b72c33fb4446da23dedee1179ebafbb2404bb5e4",
      "candidate_info": {
        "commit_hash": "b72c33fb4446da23dedee1179ebafbb2404bb5e4",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/b72c33fb4446da23dedee1179ebafbb2404bb5e4",
        "files": [
          "src/softmagic.c"
        ],
        "message": "remove over-zealous, and fix test properly.",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.219 2015/09/16 18:25:23 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.220 2015/09/16 22:17:12 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1098: mcopy(struct magic_set *ms, union VALUETYPE *p, int type, int indir,",
          "1099:     const unsigned char *s, uint32_t offset, size_t nbytes, struct magic *m)",
          "1100: {",
          "",
          "[Removed Lines]",
          "1101:  if (offset >= nbytes) {",
          "1102:   file_magerror(ms,",
          "1103:       \"offset in magic %u greater than buffer size %zu\",",
          "1104:       offset, nbytes);",
          "1105:   return -1;",
          "1106:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1268:   if (m->in_op & FILE_OPINDIRECT) {",
          "1269:    const union VALUETYPE *q = CAST(const union VALUETYPE *,",
          "1270:        ((const void *)(s + offset + off)));",
          "1272:     return 0;",
          "1273:    switch (cvt_flip(m->in_type, flip)) {",
          "1274:    case FILE_BYTE:",
          "",
          "[Removed Lines]",
          "1271:    if (OFFSET_OOB(offset + off, nbytes, sizeof(*q)))",
          "",
          "[Added Lines]",
          "1265:    if (OFFSET_OOB(nbytes, offset + off, sizeof(*q)))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2166: private int",
          "2167: handle_annotation(struct magic_set *ms, struct magic *m)",
          "2168: {",
          "2170:  if (ms->flags & MAGIC_APPLE) {",
          "2171:   if (file_printf(ms, \"%.8s\", m->apple) == -1)",
          "2172:    return -1;",
          "",
          "[Removed Lines]",
          "2169: printf(\"desc = %s, ext = %s mime = %s\\n\", m->desc, m->ext, m->mimetype);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "99994474a7bad10a122bab2ddbd24b23bb8b4078",
      "candidate_info": {
        "commit_hash": "99994474a7bad10a122bab2ddbd24b23bb8b4078",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/99994474a7bad10a122bab2ddbd24b23bb8b4078",
        "files": [
          "src/magic.h.in",
          "src/softmagic.c"
        ],
        "message": "Add MAGIC_NODESC for no-description printing. Make name nodes not print description if MAGIC_NODESC",
        "before_after_code_files": [
          "src/magic.h.in||src/magic.h.in",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/magic.h.in||src/magic.h.in": [
          "File: src/magic.h.in -> src/magic.h.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: #define MAGIC_EXTENSION  0x1000000 /* Return a /-separated list of",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48: #define MAGIC_NODESC  (MAGIC_EXTENSION|MAGIC_MIME|MAGIC_APPLE)",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.213 2015/02/14 18:43:12 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.214 2015/04/09 20:01:41 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "147:  unsigned int cont_level = 0;",
          "152:  if (returnval == NULL)",
          "153:   returnval = &returnvalv;",
          "",
          "[Removed Lines]",
          "150:  int print = (ms->flags & (MAGIC_MIME|MAGIC_APPLE|MAGIC_EXTENSION)) == 0;",
          "",
          "[Added Lines]",
          "150:  int print = (ms->flags & MAGIC_NODESC) == 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1674:    return -1;",
          "1676:   if (rv == 1) {",
          "1678:        file_printf(ms, F(ms, m, \"%u\"), offset) == -1) {",
          "1679:     free(rbuf);",
          "1680:     return -1;",
          "",
          "[Removed Lines]",
          "1677:    if ((ms->flags & (MAGIC_MIME|MAGIC_APPLE|MAGIC_EXTENSION)) == 0 &&",
          "",
          "[Added Lines]",
          "1677:    if ((ms->flags & MAGIC_NODESC) == 0 &&",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1711:   return rv;",
          "1713:  case FILE_NAME:",
          "1714:   if (file_printf(ms, \"%s\", m->desc) == -1)",
          "1715:    return -1;",
          "1716:   return 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1714:   if (ms->flags & MAGIC_NODESC)",
          "1715:    return 1;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2152: private int",
          "2153: print_sep(struct magic_set *ms, int firstline)",
          "2154: {",
          "2156:   return 0;",
          "2157:  if (firstline)",
          "2158:   return 0;",
          "",
          "[Removed Lines]",
          "2155:  if (ms->flags & MAGIC_MIME)",
          "",
          "[Added Lines]",
          "2157:  if (ms->flags & MAGIC_NODESC)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0056ec32255de1de973574b0300161a1568767d6",
      "candidate_info": {
        "commit_hash": "0056ec32255de1de973574b0300161a1568767d6",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/0056ec32255de1de973574b0300161a1568767d6",
        "files": [
          "doc/file.man",
          "doc/libmagic.man",
          "src/apprentice.c",
          "src/ascmagic.c",
          "src/file.c",
          "src/file.h",
          "src/funcs.c",
          "src/magic.c",
          "src/magic.h.in",
          "src/softmagic.c"
        ],
        "message": "add a limit to the number of times a name/use entries can be used.",
        "before_after_code_files": [
          "src/apprentice.c||src/apprentice.c",
          "src/ascmagic.c||src/ascmagic.c",
          "src/file.c||src/file.c",
          "src/file.h||src/file.h",
          "src/funcs.c||src/funcs.c",
          "src/magic.c||src/magic.c",
          "src/magic.h.in||src/magic.h.in",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/apprentice.c||src/apprentice.c": [
          "File: src/apprentice.c -> src/apprentice.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.224 2014/11/27 15:40:36 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.225 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "526:  ms->line = 0;",
          "527:  ms->indir_recursion = FILE_INDIR_RECURSION;",
          "528:  ms->name_recursion = FILE_NAME_RECURSION;",
          "529:  ms->shnum_max = FILE_ELF_SHNUM;",
          "530:  ms->phnum_max = FILE_ELF_PHNUM;",
          "531:  return ms;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "529:  ms->name_max = FILE_NAME_MAX;",
          "",
          "---------------"
        ],
        "src/ascmagic.c||src/ascmagic.c": [
          "File: src/ascmagic.c -> src/ascmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include \"file.h\"",
          "37: #ifndef lint",
          "41: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "38: FILE_RCSID(\"@(#)$File: ascmagic.c,v 1.88 2014/02/12 23:20:53 christos Exp $\")",
          "",
          "[Added Lines]",
          "38: FILE_RCSID(\"@(#)$File: ascmagic.c,v 1.89 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "147:       == NULL)",
          "148:    goto done;",
          "149:   if ((rv = file_softmagic(ms, utf8_buf,",
          "151:    rv = -1;",
          "152:  }",
          "",
          "[Removed Lines]",
          "150:       (size_t)(utf8_end - utf8_buf), 0, 0, TEXTTEST, text)) == 0)",
          "",
          "[Added Lines]",
          "150:       (size_t)(utf8_end - utf8_buf), 0, 0, NULL,",
          "151:       TEXTTEST, text)) == 0)",
          "",
          "---------------"
        ],
        "src/file.c||src/file.c": [
          "File: src/file.c -> src/file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.156 2014/11/27 15:40:36 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.157 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "123: } pm[] = {",
          "124:  { \"indir\", MAGIC_PARAM_INDIR_RECURSION, 0 },",
          "125:  { \"name\", MAGIC_PARAM_NAME_RECURSION, 0 },",
          "126:  { \"phnum\", MAGIC_PARAM_PHNUM_MAX, 0 },",
          "127:  { \"shnum\", MAGIC_PARAM_SHNUM_MAX, 0 },",
          "128: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "126:  { \"namenum\", MAGIC_PARAM_NAME_MAX, 0 },",
          "",
          "---------------"
        ],
        "src/file.h||src/file.h": [
          "File: src/file.h -> src/file.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "404:  uint16_t indir_recursion;",
          "405:  uint16_t name_recursion;",
          "406:  uint16_t shnum_max;",
          "407:  uint16_t phnum_max;",
          "408: #define FILE_INDIR_RECURSION 15",
          "409: #define FILE_NAME_RECURSION 40",
          "412: };",
          "",
          "[Removed Lines]",
          "410: #define FILE_ELF_SHNUM  32768",
          "411: #define FILE_ELF_PHNUM  128",
          "",
          "[Added Lines]",
          "406:  uint16_t name_max;",
          "411: #define FILE_NAME_MAX  30",
          "412: #define FILE_ELF_SHNUM  32768",
          "413: #define FILE_ELF_PHNUM  128",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "448:     unichar **, size_t *, const char **, const char **, const char **);",
          "449: protected int file_is_tar(struct magic_set *, const unsigned char *, size_t);",
          "450: protected int file_softmagic(struct magic_set *, const unsigned char *, size_t,",
          "452: protected int file_apprentice(struct magic_set *, const char *, int);",
          "453: protected int buffer_apprentice(struct magic_set *, struct magic **,",
          "454:     size_t *, size_t);",
          "",
          "[Removed Lines]",
          "451:     uint16_t, uint16_t, int, int);",
          "",
          "[Added Lines]",
          "453:     uint16_t, uint16_t, uint16_t *, int, int);",
          "",
          "---------------"
        ],
        "src/funcs.c||src/funcs.c": [
          "File: src/funcs.c -> src/funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "33: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.74 2014/11/23 13:54:27 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.75 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "229:  if ((ms->flags & MAGIC_NO_CHECK_SOFT) == 0)",
          "231:       looks_text)) != 0) {",
          "232:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "233:     (void)fprintf(stderr, \"softmagic %d\\n\", m);",
          "",
          "[Removed Lines]",
          "230:   if ((m = file_softmagic(ms, ubuf, nb, 0, 0, BINTEST,",
          "",
          "[Added Lines]",
          "230:   if ((m = file_softmagic(ms, ubuf, nb, 0, 0, NULL, BINTEST,",
          "",
          "---------------"
        ],
        "src/magic.c||src/magic.c": [
          "File: src/magic.c -> src/magic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #include \"file.h\"",
          "35: #ifndef lint",
          "39: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "36: FILE_RCSID(\"@(#)$File: magic.c,v 1.86 2014/11/27 15:40:36 christos Exp $\")",
          "",
          "[Added Lines]",
          "36: FILE_RCSID(\"@(#)$File: magic.c,v 1.87 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "547:  case MAGIC_PARAM_NAME_RECURSION:",
          "548:   ms->name_recursion = *(const size_t *)val;",
          "549:   return 0;",
          "550:  case MAGIC_PARAM_PHNUM_MAX:",
          "551:   ms->phnum_max = *(const size_t *)val;",
          "552:   return 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "550:  case MAGIC_PARAM_NAME_MAX:",
          "551:   ms->name_max = *(const size_t *)val;",
          "552:   return 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "569:  case MAGIC_PARAM_NAME_RECURSION:",
          "571:   return 0;",
          "572:  case MAGIC_PARAM_PHNUM_MAX:",
          "574:   return 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "575:  case MAGIC_PARAM_NAME_MAX:",
          "577:   return 0;",
          "",
          "---------------"
        ],
        "src/magic.h.in||src/magic.h.in": [
          "File: src/magic.h.in -> src/magic.h.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "106: #define MAGIC_PARAM_INDIR_RECURSION 0",
          "107: #define MAGIC_PARAM_NAME_RECURSION 1",
          "111: int magic_setparam(magic_t, int, const void *);",
          "112: int magic_getparam(magic_t, int, void *);",
          "",
          "[Removed Lines]",
          "108: #define MAGIC_PARAM_PHNUM_MAX  2",
          "109: #define MAGIC_PARAM_SHNUM_MAX  3",
          "",
          "[Added Lines]",
          "108: #define MAGIC_PARAM_NAME_MAX  2",
          "109: #define MAGIC_PARAM_PHNUM_MAX  3",
          "110: #define MAGIC_PARAM_SHNUM_MAX  4",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.199 2014/11/27 15:40:36 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.200 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45: private int match(struct magic_set *, struct magic *, uint32_t,",
          "46:     const unsigned char *, size_t, size_t, int, int, int, uint16_t, uint16_t,",
          "48: private int mget(struct magic_set *, const unsigned char *,",
          "49:     struct magic *, size_t, size_t, unsigned int, int, int, int, uint16_t,",
          "51: private int magiccheck(struct magic_set *, struct magic *);",
          "52: private int32_t mprint(struct magic_set *, struct magic *);",
          "53: private int32_t moffset(struct magic_set *, struct magic *);",
          "",
          "[Removed Lines]",
          "47:     int *, int *, int *);",
          "50:     uint16_t, int *, int *, int *);",
          "",
          "[Added Lines]",
          "47:     uint16_t *, int *, int *, int *);",
          "50:     uint16_t, uint16_t *, int *, int *, int *);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "72: protected int",
          "73: file_softmagic(struct magic_set *ms, const unsigned char *buf, size_t nbytes,",
          "75: {",
          "76:  struct mlist *ml;",
          "77:  int rv, printed_something = 0, need_separator = 0;",
          "79:  for (ml = ms->mlist[0]->next; ml != ms->mlist[0]; ml = ml->next)",
          "80:   if ((rv = match(ms, ml->magic, ml->nmagic, buf, nbytes, 0, mode,",
          "83:    return rv;",
          "85:  return 0;",
          "",
          "[Removed Lines]",
          "74:     uint16_t indir_level, uint16_t name_level, int mode, int text)",
          "81:       text, 0, indir_level, name_level, &printed_something,",
          "82:       &need_separator, NULL)) != 0)",
          "",
          "[Added Lines]",
          "74:     uint16_t indir_level, uint16_t name_level, uint16_t *name_count,",
          "75:  int mode, int text)",
          "79:  uint16_t nc;",
          "81:  if (name_count == NULL) {",
          "82:   nc = 0;",
          "83:   name_count = &nc;",
          "84:  }",
          "88:       text, 0, indir_level, name_level, name_count,",
          "89:       &printed_something, &need_separator, NULL)) != 0)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "134: private int",
          "135: match(struct magic_set *ms, struct magic *magic, uint32_t nmagic,",
          "136:     const unsigned char *s, size_t nbytes, size_t offset, int mode, int text,",
          "139: {",
          "140:  uint32_t magindex = 0;",
          "141:  unsigned int cont_level = 0;",
          "",
          "[Removed Lines]",
          "137:     int flip, uint16_t indir_level, uint16_t name_level, int *printed_something,",
          "138:     int *need_separator, int *returnval)",
          "",
          "[Added Lines]",
          "144:     int flip, uint16_t indir_level, uint16_t name_level, uint16_t *name_count,",
          "145:     int *printed_something, int *need_separator, int *returnval)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "174:   switch (mget(ms, s, m, nbytes, offset, cont_level, mode, text,",
          "177:   case -1:",
          "178:    return -1;",
          "179:   case 0:",
          "",
          "[Removed Lines]",
          "175:       flip, indir_level, name_level, printed_something,",
          "176:       need_separator, returnval)) {",
          "",
          "[Added Lines]",
          "182:       flip, indir_level, name_level, name_count,",
          "183:       printed_something, need_separator, returnval)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "261:    }",
          "262: #endif",
          "263:    switch (mget(ms, s, m, nbytes, offset, cont_level, mode,",
          "265:        printed_something, need_separator, returnval)) {",
          "266:    case -1:",
          "267:     return -1;",
          "",
          "[Removed Lines]",
          "264:        text, flip, indir_level, name_level,",
          "",
          "[Added Lines]",
          "271:        text, flip, indir_level, name_level, name_count,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1215: private int",
          "1216: mget(struct magic_set *ms, const unsigned char *s, struct magic *m,",
          "1217:     size_t nbytes, size_t o, unsigned int cont_level, int mode, int text,",
          "1220: {",
          "1221:  uint32_t offset = ms->offset;",
          "1222:  uint32_t lhs;",
          "",
          "[Removed Lines]",
          "1218:     int flip, uint16_t indir_level, uint16_t name_level, int *printed_something,",
          "1219:     int *need_separator, int *returnval)",
          "",
          "[Added Lines]",
          "1225:     int flip, uint16_t indir_level, uint16_t name_level, uint16_t *name_count,",
          "1226:     int *printed_something, int *need_separator, int *returnval)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1238:   return -1;",
          "1239:  }",
          "1241:  if (mcopy(ms, p, m->type, m->flag & INDIR, s, (uint32_t)(offset + o),",
          "1242:      (uint32_t)nbytes, m) == -1)",
          "1243:   return -1;",
          "1245:  if ((ms->flags & MAGIC_DEBUG) != 0) {",
          "1246:   fprintf(stderr, \"mget(type=%d, flag=%x, offset=%u, o=%\"",
          "1249:   mdebug(offset, (char *)(void *)p, sizeof(union VALUETYPE));",
          "1250: #ifndef COMPILE_ONLY",
          "1251:   file_mdump(m);",
          "",
          "[Removed Lines]",
          "1247:       SIZE_T_FORMAT \"u, \" \"nbytes=%\" SIZE_T_FORMAT \"u)\\n\",",
          "1248:       m->type, m->flag, offset, o, nbytes);",
          "",
          "[Added Lines]",
          "1248:  if (*name_count >= ms->name_max) {",
          "1249:   file_error(ms, 0, \"name use count (%hu) exceeded\",",
          "1251:   return -1;",
          "1252:  }",
          "1260:       SIZE_T_FORMAT \"u, \" \"nbytes=%\" SIZE_T_FORMAT",
          "1261:       \"u, il=%hu, nl=%hu nc=%hu)\\n\",",
          "1262:       m->type, m->flag, offset, o, nbytes,",
          "1263:       indir_level, name_level, *name_count);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1686:    return -1;",
          "1688:   rv = file_softmagic(ms, s + offset, nbytes - offset,",
          "1691:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "1692:    fprintf(stderr, \"indirect @offs=%u[%d]\\n\", offset, rv);",
          "",
          "[Removed Lines]",
          "1689:       indir_level + 1, name_level, BINTEST, text);",
          "",
          "[Added Lines]",
          "1704:       indir_level + 1, name_level, name_count, BINTEST, text);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1721:    file_error(ms, 0, \"cannot find entry `%s'\", rbuf);",
          "1722:    return -1;",
          "1723:   }",
          "1725:   oneed_separator = *need_separator;",
          "1726:   if (m->flag & NOSPACE)",
          "1728:   rv = match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,",
          "1730:       printed_something, need_separator, returnval);",
          "1731:   if (rv != 1)",
          "",
          "[Removed Lines]",
          "1729:       mode, text, flip, indir_level, name_level + 1,",
          "",
          "[Added Lines]",
          "1739:   (*name_count)++;",
          "1744:       mode, text, flip, indir_level, name_level + 1, name_count,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d6f8888a02bda2e0c75bc50d99554c6641ed551d",
      "candidate_info": {
        "commit_hash": "d6f8888a02bda2e0c75bc50d99554c6641ed551d",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/d6f8888a02bda2e0c75bc50d99554c6641ed551d",
        "files": [
          "src/softmagic.c"
        ],
        "message": "handle line terminators better.",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.207 2015/01/02 21:29:39 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.208 2015/01/05 00:16:01 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "518:    t = ms->offset + strlen(str);",
          "520:    if (*m->value.s == '\\0')",
          "523:    if (m->str_flags & STRING_TRIM) {",
          "524:     char *last;",
          "",
          "[Removed Lines]",
          "521:     str[strcspn(str, \"\\n\")] = '\\0';",
          "",
          "[Added Lines]",
          "521:     str[strcspn(str, \"\\r\\n\")] = '\\0';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "707:    uint32_t t;",
          "709:    if (*m->value.s == '\\0')",
          "711:    t = CAST(uint32_t, (ms->offset + strlen(p->s)));",
          "712:    if (m->type == FILE_PSTRING)",
          "713:     t += (uint32_t)file_pstring_length_size(m);",
          "",
          "[Removed Lines]",
          "710:     p->s[strcspn(p->s, \"\\n\")] = '\\0';",
          "",
          "[Added Lines]",
          "710:     p->s[strcspn(p->s, \"\\r\\n\")] = '\\0';",
          "",
          "---------------"
        ]
      }
    }
  ]
}