{
  "cve_id": "CVE-2012-2779",
  "cve_desc": "Unspecified vulnerability in the decode_frame function in libavcodec/indeo5.c in FFmpeg before 0.11, and Libav 0.7.x before 0.7.7 and 0.8.x before 0.8.4, has unknown impact and attack vectors, related to an invalid \"gop header\" and decoding in a \"half initialized context.\"",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "229e4c133287955d5f3f837520a3602709b21950",
  "patch_info": {
    "commit_hash": "229e4c133287955d5f3f837520a3602709b21950",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/229e4c133287955d5f3f837520a3602709b21950",
    "files": [
      "libavcodec/indeo5.c"
    ],
    "message": "indeo5dec: Make sure we have had a valid gop header.\n\nThis prevents decoding happening on a half initialized context.\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavcodec/indeo5.c||libavcodec/indeo5.c"
    ]
  },
  "patch_diff": {
    "libavcodec/indeo5.c||libavcodec/indeo5.c": [
      "File: libavcodec/indeo5.c -> libavcodec/indeo5.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "76:     int             is_scalable;",
      "77:     uint32_t        lock_word;",
      "78:     IVIPicConfig    pic_conf;",
      "79: } IVI5DecContext;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "80:     int gop_invalid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "336:     ctx->frame_num = get_bits(&ctx->gb, 8);",
      "338:     if (ctx->frame_type == FRAMETYPE_INTRA) {",
      "339:         if (decode_gop_header(ctx, avctx))",
      "340:             return -1;",
      "341:     }",
      "343:     if (ctx->frame_type != FRAMETYPE_NULL) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "341:         ctx->gop_invalid = 1;",
      "344:         ctx->gop_invalid = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "751:     ctx->frame_size = buf_size;",
      "753:     result = decode_pic_hdr(ctx, avctx);",
      "755:         av_log(avctx, AV_LOG_ERROR,",
      "756:                \"Error while decoding picture header: %d\\n\", result);",
      "757:         return -1;",
      "",
      "[Removed Lines]",
      "754:     if (result) {",
      "",
      "[Added Lines]",
      "758:     if (result || ctx->gop_invalid) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "03ddc260668beaf62f6f7fe64a08b5a71be5bb27",
      "candidate_info": {
        "commit_hash": "03ddc260668beaf62f6f7fe64a08b5a71be5bb27",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/03ddc260668beaf62f6f7fe64a08b5a71be5bb27",
        "files": [
          "libavcodec/indeo5.c"
        ],
        "message": "indeo5dec: Make sure we have had a valid gop header.\n\nThis prevents decoding happening on a half initialized context.\n\nFixes CVE-2012-2779\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Anton Khirnov <anton@khirnov.net>\n(cherry picked from commit 891918431db628db17885ed947ee387b29826a64)\n\nConflicts:\n\n\tlibavcodec/ivi_common.c\n\tlibavcodec/ivi_common.h",
        "before_after_code_files": [
          "libavcodec/indeo5.c||libavcodec/indeo5.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/indeo5.c||libavcodec/indeo5.c"
          ],
          "candidate": [
            "libavcodec/indeo5.c||libavcodec/indeo5.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/indeo5.c||libavcodec/indeo5.c": [
          "File: libavcodec/indeo5.c -> libavcodec/indeo5.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:     int             is_scalable;",
          "77:     uint32_t        lock_word;",
          "78:     IVIPicConfig    pic_conf;",
          "79: } IVI5DecContext;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80:     int gop_invalid;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "335:     ctx->frame_num = get_bits(&ctx->gb, 8);",
          "337:     if (ctx->frame_type == FRAMETYPE_INTRA) {",
          "340:     }",
          "342:     if (ctx->frame_type != FRAMETYPE_NULL) {",
          "",
          "[Removed Lines]",
          "338:         if (decode_gop_header(ctx, avctx))",
          "339:             return -1;",
          "",
          "[Added Lines]",
          "340:         ctx->gop_invalid = 1;",
          "341:         if (decode_gop_header(ctx, avctx)) {",
          "342:             av_log(avctx, AV_LOG_ERROR, \"Invalid GOP header, skipping frames.\\n\");",
          "343:             return AVERROR_INVALIDDATA;",
          "344:         }",
          "345:         ctx->gop_invalid = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "759:                \"Error while decoding picture header: %d\\n\", result);",
          "760:         return -1;",
          "761:     }",
          "763:     if (ctx->gop_flags & IVI5_IS_PROTECTED) {",
          "764:         av_log(avctx, AV_LOG_ERROR, \"Password-protected clip!\\n\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "768:     if (ctx->gop_invalid)",
          "769:         return AVERROR_INVALIDDATA;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dc8371b2b12f4fc992623dd46fa47c81cbe21575",
      "candidate_info": {
        "commit_hash": "dc8371b2b12f4fc992623dd46fa47c81cbe21575",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/dc8371b2b12f4fc992623dd46fa47c81cbe21575",
        "files": [
          "libavcodec/indeo5.c",
          "libavcodec/ivi_common.c",
          "libavcodec/ivi_common.h"
        ],
        "message": "indeo5dec: Make sure we have had a valid gop header.\n\nThis prevents decoding happening on a half initialized context.\n\nFixes CVE-2012-2779\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Anton Khirnov <anton@khirnov.net>\n(cherry picked from commit 891918431db628db17885ed947ee387b29826a64)\n\nSigned-off-by: Reinhard Tartler <siretart@tauware.de>",
        "before_after_code_files": [
          "libavcodec/indeo5.c||libavcodec/indeo5.c",
          "libavcodec/ivi_common.c||libavcodec/ivi_common.c",
          "libavcodec/ivi_common.h||libavcodec/ivi_common.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/indeo5.c||libavcodec/indeo5.c"
          ],
          "candidate": [
            "libavcodec/indeo5.c||libavcodec/indeo5.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/indeo5.c||libavcodec/indeo5.c": [
          "File: libavcodec/indeo5.c -> libavcodec/indeo5.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "304:     ctx->frame_num = get_bits(&ctx->gb, 8);",
          "306:     if (ctx->frame_type == FRAMETYPE_INTRA) {",
          "309:     }",
          "311:     if (ctx->frame_type != FRAMETYPE_NULL) {",
          "",
          "[Removed Lines]",
          "307:         if (decode_gop_header(ctx, avctx))",
          "308:             return -1;",
          "",
          "[Added Lines]",
          "307:         ctx->gop_invalid = 1;",
          "308:         if (decode_gop_header(ctx, avctx)) {",
          "309:             av_log(avctx, AV_LOG_ERROR, \"Invalid GOP header, skipping frames.\\n\");",
          "310:             return AVERROR_INVALIDDATA;",
          "311:         }",
          "312:         ctx->gop_invalid = 0;",
          "",
          "---------------"
        ],
        "libavcodec/ivi_common.c||libavcodec/ivi_common.c": [
          "File: libavcodec/ivi_common.c -> libavcodec/ivi_common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "782:                \"Error while decoding picture header: %d\\n\", result);",
          "783:         return -1;",
          "784:     }",
          "786:     if (ctx->gop_flags & IVI5_IS_PROTECTED) {",
          "787:         av_log(avctx, AV_LOG_ERROR, \"Password-protected clip!\\n\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "785:     if (ctx->gop_invalid)",
          "786:         return AVERROR_INVALIDDATA;",
          "",
          "---------------"
        ],
        "libavcodec/ivi_common.h||libavcodec/ivi_common.h": [
          "File: libavcodec/ivi_common.h -> libavcodec/ivi_common.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "248:     int             (*decode_mb_info)  (struct IVI45DecContext *ctx, IVIBandDesc *band, IVITile *tile, AVCodecContext *avctx);",
          "249:     void            (*switch_buffers)  (struct IVI45DecContext *ctx);",
          "250:     int             (*is_nonnull_frame)(struct IVI45DecContext *ctx);",
          "251: } IVI45DecContext;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "252:     int gop_invalid;",
          "",
          "---------------"
        ]
      }
    }
  ]
}