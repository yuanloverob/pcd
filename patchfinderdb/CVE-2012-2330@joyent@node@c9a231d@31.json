{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e813e3491e3b9d828ae678391b7c926c4ad1f180",
      "candidate_info": {
        "commit_hash": "e813e3491e3b9d828ae678391b7c926c4ad1f180",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e813e3491e3b9d828ae678391b7c926c4ad1f180",
        "files": [
          "src/node.cc"
        ],
        "message": "node: make _getActiveHandles() return user objects\n\nBefore this commit, process._getActiveHandles() returned a list of internal\nhandles. Now, it returns the user objects that handles are attached to.\n\nFor example, a tcp_wrap handle will now return its parent net.Socket object.\n\nIt works for all handle types except timers because timer handles are shared\nacross multiple user objects.",
        "before_after_code_files": [
          "src/node.cc||src/node.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1362:   ngx_queue_t* q = NULL;",
          "1363:   int i = 0;",
          "1365:   ngx_queue_foreach(q, &handle_wrap_queue) {",
          "1366:     HandleWrap* w = container_of(q, HandleWrap, handle_wrap_queue_);",
          "1367:     if (w->object_.IsEmpty() || w->unref) continue;",
          "1369:   }",
          "1371:   return scope.Close(ary);",
          "",
          "[Removed Lines]",
          "1368:     ary->Set(i++, w->object_);",
          "",
          "[Added Lines]",
          "1365:   Local<String> owner_sym = String::New(\"owner\");",
          "1370:     Local<Value> obj = w->object_->Get(owner_sym);",
          "1371:     if (obj->IsUndefined()) obj = *w->object_;",
          "1372:     ary->Set(i++, obj);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0b0b72c2fab5bdf32f5476e47a1e7f2da9db2064",
      "candidate_info": {
        "commit_hash": "0b0b72c2fab5bdf32f5476e47a1e7f2da9db2064",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/0b0b72c2fab5bdf32f5476e47a1e7f2da9db2064",
        "files": [
          "lib/readline.js"
        ],
        "message": "Move function declaration to top-level\n\nGets rid of a strict mode error and a few levels of indentation.",
        "before_after_code_files": [
          "lib/readline.js||lireadline.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/readline.js||lireadline.js": [
          "File: lib/readline.js -> lireadline.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "346:           return a.length > b.length ? a : b;",
          "347:         }).length + 2;  // 2 space padding",
          "348:         var maxColumns = Math.floor(self.columns / width) || 1;",
          "375:         var group = [], c;",
          "376:         for (var i = 0, compLen = completions.length; i < compLen; i++) {",
          "377:           c = completions[i];",
          "378:           if (c === '') {",
          "380:             group = [];",
          "381:           } else {",
          "382:             group.push(c);",
          "383:           }",
          "384:         }",
          "",
          "[Removed Lines]",
          "350:         function handleGroup(group) {",
          "351:           if (group.length == 0) {",
          "352:             return;",
          "353:           }",
          "354:           var minRows = Math.ceil(group.length / maxColumns);",
          "355:           for (var row = 0; row < minRows; row++) {",
          "356:             for (var col = 0; col < maxColumns; col++) {",
          "357:               var idx = row * maxColumns + col;",
          "358:               if (idx >= group.length) {",
          "359:                 break;",
          "360:               }",
          "361:               var item = group[idx];",
          "362:               self.output.write(item);",
          "363:               if (col < maxColumns - 1) {",
          "364:                 for (var s = 0, itemLen = item.length; s < width - itemLen;",
          "365:                      s++) {",
          "366:                   self.output.write(' ');",
          "367:                 }",
          "368:               }",
          "369:             }",
          "370:             self.output.write('\\r\\n');",
          "371:           }",
          "372:           self.output.write('\\r\\n');",
          "373:         }",
          "379:             handleGroup(group);",
          "385:         handleGroup(group);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "398:   });",
          "399: };",
          "402: function commonPrefix(strings) {",
          "403:   if (!strings || strings.length == 0) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5d97d727536b33dfca6fc582033aed64f921f65f",
      "candidate_info": {
        "commit_hash": "5d97d727536b33dfca6fc582033aed64f921f65f",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/5d97d727536b33dfca6fc582033aed64f921f65f",
        "files": [
          "lib/net.js"
        ],
        "message": "net: fix bogus errno reporting\n\n_listen2() emits the error on the next tick. The errno value may have changed\nby then.",
        "before_after_code_files": [
          "lib/net.js||linet.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/net.js||linet.js": [
          "File: lib/net.js -> linet.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "911:   r = self._handle.listen(backlog || 511);",
          "913:   if (r) {",
          "914:     self._handle.close();",
          "915:     self._handle = null;",
          "916:     process.nextTick(function() {",
          "918:     });",
          "919:     return;",
          "920:   }",
          "",
          "[Removed Lines]",
          "917:       self.emit('error', errnoException(errno, 'listen'));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "24de89bd0e47cb657afa386fa7b2d2ae94309254",
      "candidate_info": {
        "commit_hash": "24de89bd0e47cb657afa386fa7b2d2ae94309254",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/24de89bd0e47cb657afa386fa7b2d2ae94309254",
        "files": [
          "deps/uv/config-unix.mk",
          "deps/uv/include/uv-private/uv-unix.h",
          "deps/uv/include/uv.h",
          "deps/uv/src/unix/core.c",
          "deps/uv/src/unix/internal.h",
          "deps/uv/src/unix/loop.c",
          "deps/uv/src/unix/pipe.c",
          "deps/uv/src/unix/poll.c",
          "deps/uv/src/unix/stream.c",
          "deps/uv/src/unix/tty.c",
          "deps/uv/src/unix/udp.c",
          "deps/uv/src/win/core.c",
          "deps/uv/test/benchmark-list.h",
          "deps/uv/test/benchmark-sizes.c",
          "deps/uv/test/test-fs.c",
          "deps/uv/test/test-ipc-send-recv.c",
          "deps/uv/test/test-list.h",
          "deps/uv/test/test-pipe-bind-error.c",
          "deps/uv/test/test-run-once.c",
          "deps/uv/uv.gyp"
        ],
        "message": "Upgrade uv to 604802a",
        "before_after_code_files": [
          "deps/uv/config-unix.mk||deps/uv/config-unix.mk",
          "deps/uv/include/uv-private/uv-unix.h||deps/uv/include/uv-private/uv-unix.h",
          "deps/uv/include/uv.h||deps/uv/include/uv.h",
          "deps/uv/src/unix/core.c||deps/uv/src/unix/core.c",
          "deps/uv/src/unix/internal.h||deps/uv/src/unix/internal.h",
          "deps/uv/src/unix/loop.c||deps/uv/src/unix/loop.c",
          "deps/uv/src/unix/pipe.c||deps/uv/src/unix/pipe.c",
          "deps/uv/src/unix/poll.c||deps/uv/src/unix/poll.c",
          "deps/uv/src/unix/stream.c||deps/uv/src/unix/stream.c",
          "deps/uv/src/unix/tty.c||deps/uv/src/unix/tty.c",
          "deps/uv/src/unix/udp.c||deps/uv/src/unix/udp.c",
          "deps/uv/src/win/core.c||deps/uv/src/win/core.c",
          "deps/uv/test/benchmark-list.h||deps/uv/test/benchmark-list.h",
          "deps/uv/test/benchmark-sizes.c||deps/uv/test/benchmark-sizes.c",
          "deps/uv/test/test-fs.c||deps/uv/test/test-fs.c",
          "deps/uv/test/test-ipc-send-recv.c||deps/uv/test/test-ipc-send-recv.c",
          "deps/uv/test/test-list.h||deps/uv/test/test-list.h",
          "deps/uv/test/test-pipe-bind-error.c||deps/uv/test/test-pipe-bind-error.c",
          "deps/uv/test/test-run-once.c||deps/uv/test/test-run-once.c",
          "deps/uv/uv.gyp||deps/uv/uv.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/config-unix.mk||deps/uv/config-unix.mk": [
          "File: deps/uv/config-unix.mk -> deps/uv/config-unix.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: OBJS += src/unix/error.o",
          "34: OBJS += src/unix/fs.o",
          "35: OBJS += src/unix/loop.o",
          "36: OBJS += src/unix/pipe.o",
          "37: OBJS += src/unix/poll.o",
          "38: OBJS += src/unix/process.o",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: OBJS += src/unix/loop-watcher.o",
          "",
          "---------------"
        ],
        "deps/uv/include/uv-private/uv-unix.h||deps/uv/include/uv-private/uv-unix.h": [
          "File: deps/uv/include/uv-private/uv-unix.h -> deps/uv/include/uv-private/uv-unix.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "132: #define UV_UDP_SEND_PRIVATE_FIELDS  \\",
          "133:   ngx_queue_t queue;                \\",
          "137:   int bufcnt;                       \\",
          "138:   ssize_t status;                   \\",
          "139:   uv_udp_send_cb send_cb;           \\",
          "140:   uv_buf_t bufsml[UV_REQ_BUFSML_SIZE];  \\",
          "",
          "[Removed Lines]",
          "134:   struct sockaddr_storage addr;     \\",
          "135:   socklen_t addrlen;                \\",
          "136:   uv_buf_t* bufs;                   \\",
          "",
          "[Added Lines]",
          "134:   struct sockaddr_in6 addr;         \\",
          "136:   uv_buf_t* bufs;                   \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "146: #define UV_HANDLE_PRIVATE_FIELDS \\",
          "148:   int flags; \\",
          "149:   uv_handle_t* next_pending; \\",
          "",
          "[Removed Lines]",
          "147:   int fd; \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "156:   uv__io_t write_watcher; \\",
          "157:   ngx_queue_t write_queue; \\",
          "158:   ngx_queue_t write_completed_queue; \\",
          "160:   uv_connection_cb connection_cb; \\",
          "161:   int accepted_fd; \\",
          "",
          "[Removed Lines]",
          "159:   int delayed_error; \\",
          "162:   int blocking;",
          "",
          "[Added Lines]",
          "158:   int delayed_error; \\",
          "160:   int fd; \\",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "170: #define UV_UDP_PRIVATE_FIELDS         \\",
          "171:   uv_alloc_cb alloc_cb;               \\",
          "172:   uv_udp_recv_cb recv_cb;             \\",
          "173:   uv__io_t read_watcher;              \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "169:   int fd;                             \\",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "185: #define UV_POLL_PRIVATE_FIELDS        \\",
          "186:   uv__io_t io_watcher;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "185:   int fd;                             \\",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "248:     struct uv_fs_event_s* rbe_parent; \\",
          "249:     int rbe_color;                    \\",
          "250:   } node;                             \\",
          "253: #elif defined(__APPLE__)  \\",
          "254:   || defined(__FreeBSD__) \\",
          "",
          "[Removed Lines]",
          "251:   uv_fs_event_cb cb;",
          "",
          "[Added Lines]",
          "251:   uv_fs_event_cb cb;                  \\",
          "252:   int fd;                             \\",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "260:   ev_io event_watcher; \\",
          "261:   uv_fs_event_cb cb; \\",
          "262:   int fflags; \\",
          "264: #elif defined(__sun)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "264:   int fd;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "267: # define UV_FS_EVENT_PRIVATE_FIELDS \\",
          "268:   ev_io event_watcher; \\",
          "269:   uv_fs_event_cb cb; \\",
          "272: # define UV_FS_EVENT_PRIVATE_FIELDS",
          "273: #endif",
          "",
          "[Removed Lines]",
          "270:   file_obj_t fo;",
          "",
          "[Added Lines]",
          "272:   file_obj_t fo; \\",
          "273:   int fd;",
          "",
          "---------------"
        ],
        "deps/uv/include/uv.h||deps/uv/include/uv.h": [
          "File: deps/uv/include/uv.h -> deps/uv/include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "235: UV_EXTERN int uv_run (uv_loop_t*);",
          "240: UV_EXTERN int uv_run_once (uv_loop_t*);",
          "",
          "[Added Lines]",
          "235: UV_EXTERN int uv_run(uv_loop_t*);",
          "243: UV_EXTERN int uv_run_once(uv_loop_t*);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "338: #endif",
          "340: #define UV_REQ_FIELDS \\",
          "344:   void* data; \\",
          "345:   UV_REQ_EXTRA_FIELDS \\",
          "350: struct uv_req_s {",
          "",
          "[Removed Lines]",
          "342:   uv_req_type type; \\",
          "347:   UV_REQ_PRIVATE_FIELDS",
          "",
          "[Added Lines]",
          "348:   UV_REQ_PRIVATE_FIELDS \\",
          "350:   uv_req_type type; \\",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "381: # define UV_HANDLE_EXTRA_FIELDS",
          "382: #endif",
          "396: struct uv_handle_s {",
          "",
          "[Removed Lines]",
          "384: #define UV_HANDLE_FIELDS \\",
          "386:   uv_loop_t* loop; \\",
          "387:   uv_handle_type type; \\",
          "389:   uv_close_cb close_cb; \\",
          "390:   void* data; \\",
          "391:   UV_HANDLE_EXTRA_FIELDS \\",
          "393:   UV_HANDLE_PRIVATE_FIELDS",
          "",
          "[Added Lines]",
          "387: #define UV_HANDLE_FIELDS                                                      \\",
          "389:   uv_loop_t* loop;                                                            \\",
          "391:   uv_close_cb close_cb;                                                       \\",
          "392:   void* data;                                                                 \\",
          "394:   uv_handle_type type;                                                        \\",
          "396:   UV_HANDLE_PRIVATE_FIELDS                                                    \\",
          "397:   UV_HANDLE_EXTRA_FIELDS                                                      \\",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1363: struct uv_fs_s {",
          "1364:   UV_REQ_FIELDS",
          "1366:   uv_fs_type fs_type;",
          "1367:   uv_fs_cb cb;",
          "1368:   ssize_t result;",
          "1369:   void* ptr;",
          "",
          "[Removed Lines]",
          "1365:   uv_loop_t* loop;",
          "",
          "[Added Lines]",
          "1370:   uv_loop_t* loop;",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/core.c||deps/uv/src/unix/core.c": [
          "File: deps/uv/src/unix/core.c -> deps/uv/src/unix/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "237: int uv_run_once(uv_loop_t* loop) {",
          "240: }",
          "",
          "[Removed Lines]",
          "238:   uv__run(loop);",
          "239:   return 0;",
          "",
          "[Added Lines]",
          "238:   return uv__run(loop);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "269:     case UV_NAMED_PIPE:",
          "270:     case UV_TCP:",
          "271:     case UV_TTY:",
          "274:       assert(((uv_stream_t*)handle)->fd == -1);",
          "275:       uv__stream_destroy((uv_stream_t*)handle);",
          "276:       break;",
          "",
          "[Removed Lines]",
          "272:       assert(!ev_is_active(&((uv_stream_t*)handle)->read_watcher));",
          "273:       assert(!ev_is_active(&((uv_stream_t*)handle)->write_watcher));",
          "",
          "[Added Lines]",
          "271:       assert(!uv__io_active(&((uv_stream_t*)handle)->read_watcher));",
          "272:       assert(!uv__io_active(&((uv_stream_t*)handle)->write_watcher));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "318:   uv_getaddrinfo_t* req = req_->data;",
          "319:   struct addrinfo *res = req->res;",
          "320: #if __sun",
          "321:   size_t hostlen = strlen(handle->hostname);",
          "322: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "320:   uv_getaddrinfo_t* handle = req->data;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "446: }",
          "450:   int peerfd;",
          "452:   assert(sockfd >= 0);",
          "454:   while (1) {",
          "455: #if __linux__",
          "457:     if (peerfd != -1)",
          "458:       break;",
          "",
          "[Removed Lines]",
          "449: int uv__accept(int sockfd, struct sockaddr* saddr, socklen_t slen) {",
          "456:     peerfd = uv__accept4(sockfd, saddr, &slen, UV__SOCK_NONBLOCK|UV__SOCK_CLOEXEC);",
          "",
          "[Added Lines]",
          "449: int uv__accept(int sockfd) {",
          "456:     peerfd = uv__accept4(sockfd,",
          "457:                          NULL,",
          "458:                          NULL,",
          "459:                          UV__SOCK_NONBLOCK|UV__SOCK_CLOEXEC);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "464:       break;",
          "465: #endif",
          "468:       if (errno == EINTR)",
          "469:         continue;",
          "470:       else",
          "",
          "[Removed Lines]",
          "467:     if ((peerfd = accept(sockfd, saddr, &slen)) == -1) {",
          "",
          "[Added Lines]",
          "471:     peerfd = accept(sockfd, NULL, NULL);",
          "473:     if (peerfd == -1) {",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/internal.h||deps/uv/src/unix/internal.h": [
          "File: deps/uv/src/unix/internal.h -> deps/uv/src/unix/internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "86: enum {",
          "98: };",
          "100: inline static int uv__has_pending_handles(const uv_loop_t* loop) {",
          "",
          "[Removed Lines]",
          "96:   UV_TIMER_REPEAT  = 0x100,",
          "97:   UV__PENDING      = 0x800",
          "",
          "[Added Lines]",
          "97:   UV_TIMER_REPEAT     = 0x100,",
          "98:   UV__PENDING         = 0x800",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "155: int uv__stream_open(uv_stream_t*, int fd, int flags);",
          "156: void uv__stream_destroy(uv_stream_t* stream);",
          "157: void uv__server_io(uv_loop_t* loop, uv__io_t* watcher, int events);",
          "159: int uv__connect(uv_connect_t* req, uv_stream_t* stream, struct sockaddr* addr,",
          "160:     socklen_t addrlen, uv_connect_cb cb);",
          "",
          "[Removed Lines]",
          "158: int uv__accept(int sockfd, struct sockaddr* saddr, socklen_t len);",
          "",
          "[Added Lines]",
          "159: int uv__accept(int sockfd);",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/loop.c||deps/uv/src/unix/loop.c": [
          "File: deps/uv/src/unix/loop.c -> deps/uv/src/unix/loop.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:     close(loop->fs_fd);",
          "78: #endif",
          "79: }",
          "",
          "[Removed Lines]",
          "82: #define X(name, type) \\",
          "83:   int uv_##name##_init(uv_loop_t* loop, uv_##name##_t* handle) {              \\",
          "84:     uv__handle_init(loop, (uv_handle_t*)handle, type);                        \\",
          "85:     loop->counters.name##_init++;                                             \\",
          "86:     handle->name##_cb = NULL;                                                 \\",
          "87:     return 0;                                                                 \\",
          "88:   }                                                                           \\",
          "89:   int uv_##name##_start(uv_##name##_t* handle, uv_##name##_cb cb) {           \\",
          "90:     if (uv__is_active(handle)) return 0;                                      \\",
          "91:     ngx_queue_insert_head(&handle->loop->name##_handles, &handle->queue);     \\",
          "92:     handle->name##_cb = cb;                                                   \\",
          "93:     uv__handle_start(handle);                                                 \\",
          "94:     return 0;                                                                 \\",
          "95:   }                                                                           \\",
          "96:   int uv_##name##_stop(uv_##name##_t* handle) {                               \\",
          "97:     if (!uv__is_active(handle)) return 0;                                     \\",
          "98:     ngx_queue_remove(&handle->queue);                                         \\",
          "99:     uv__handle_stop(handle);                                                  \\",
          "100:     return 0;                                                                 \\",
          "101:   }                                                                           \\",
          "102:   void uv__run_##name(uv_loop_t* loop) {                                      \\",
          "103:     uv_##name##_t* h;                                                         \\",
          "104:     ngx_queue_t* q;                                                           \\",
          "105:     ngx_queue_foreach(q, &loop->name##_handles) {                             \\",
          "106:       h = ngx_queue_data(q, uv_##name##_t, queue);                            \\",
          "107:       if (h->name##_cb) h->name##_cb(h, 0);                                   \\",
          "108:     }                                                                         \\",
          "109:   }                                                                           \\",
          "110:   void uv__##name##_close(uv_##name##_t* handle) {                            \\",
          "111:     uv_##name##_stop(handle);                                                 \\",
          "112:   }",
          "113: X(idle, UV_IDLE)",
          "114: X(check, UV_CHECK)",
          "115: X(prepare, UV_PREPARE)",
          "116: #undef X",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/pipe.c||deps/uv/src/unix/pipe.c": [
          "File: deps/uv/src/unix/pipe.c -> deps/uv/src/unix/pipe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:   uv_strlcpy(saddr.sun_path, pipe_fname, sizeof(saddr.sun_path));",
          "82:   saddr.sun_family = AF_UNIX;",
          "100:   }",
          "101:   bound = 1;",
          "",
          "[Removed Lines]",
          "84:   if (bind(sockfd, (struct sockaddr*)&saddr, sizeof saddr) == -1) {",
          "93:     if (errno != EADDRINUSE",
          "94:         || unlink(pipe_fname) == -1",
          "95:         || bind(sockfd, (struct sockaddr*)&saddr, sizeof saddr) == -1) {",
          "97:       uv__set_sys_error(handle->loop, (errno == ENOENT) ? EACCES : errno);",
          "98:       goto out;",
          "99:     }",
          "",
          "[Added Lines]",
          "84:   if (bind(sockfd, (struct sockaddr*)&saddr, sizeof saddr)) {",
          "86:     uv__set_sys_error(handle->loop, (errno == ENOENT) ? EACCES : errno);",
          "87:     goto out;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "243: static void uv__pipe_accept(uv_loop_t* loop, uv__io_t* w, int events) {",
          "245:   uv_pipe_t* pipe;",
          "246:   int saved_errno;",
          "247:   int sockfd;",
          "",
          "[Removed Lines]",
          "244:   struct sockaddr_un saddr;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "252:   assert(pipe->type == UV_NAMED_PIPE);",
          "255:   if (sockfd == -1) {",
          "256:     if (errno != EAGAIN && errno != EWOULDBLOCK) {",
          "257:       uv__set_sys_error(pipe->loop, errno);",
          "",
          "[Removed Lines]",
          "254:   sockfd = uv__accept(pipe->fd, (struct sockaddr *)&saddr, sizeof saddr);",
          "",
          "[Added Lines]",
          "241:   sockfd = uv__accept(pipe->fd);",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/poll.c||deps/uv/src/unix/poll.c": [
          "File: deps/uv/src/unix/poll.c -> deps/uv/src/unix/poll.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:   if (pevents & UV_WRITABLE)",
          "101:     events |= UV__IO_WRITE;",
          "103:   uv__io_set(&handle->io_watcher, uv__poll_io, handle->fd, events);",
          "104:   uv__io_start(handle->loop, &handle->io_watcher);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:   uv__io_stop(handle->loop, &handle->io_watcher);",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/stream.c||deps/uv/src/unix/stream.c": [
          "File: deps/uv/src/unix/stream.c -> deps/uv/src/unix/stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:   stream->accepted_fd = -1;",
          "68:   stream->fd = -1;",
          "69:   stream->delayed_error = 0;",
          "71:   ngx_queue_init(&stream->write_queue);",
          "72:   ngx_queue_init(&stream->write_completed_queue);",
          "73:   stream->write_queue_size = 0;",
          "",
          "[Removed Lines]",
          "70:   stream->blocking = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "167: void uv__server_io(uv_loop_t* loop, uv__io_t* w, int events) {",
          "168:   int fd;",
          "170:   uv_stream_t* stream = container_of(w, uv_stream_t, read_watcher);",
          "172:   assert(events == UV__IO_READ);",
          "",
          "[Removed Lines]",
          "169:   struct sockaddr_storage addr;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "183:   while (stream->fd != -1) {",
          "184:     assert(stream->accepted_fd < 0);",
          "187:     if (fd < 0) {",
          "188:       if (errno == EAGAIN || errno == EWOULDBLOCK) {",
          "",
          "[Removed Lines]",
          "185:     fd = uv__accept(stream->fd, (struct sockaddr*)&addr, sizeof addr);",
          "",
          "[Added Lines]",
          "183:     fd = uv__accept(stream->fd);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "444:       stream->write_queue_size -= uv__write_req_size(req);",
          "445:       uv__write_req_finish(req);",
          "446:       return;",
          "449:       goto start;",
          "450:     }",
          "",
          "[Removed Lines]",
          "447:     } else if (stream->blocking) {",
          "",
          "[Added Lines]",
          "445:     } else if (stream->flags & UV_STREAM_BLOCKING) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "465:         n = 0;",
          "",
          "[Removed Lines]",
          "468:         if (stream->blocking) {",
          "",
          "[Added Lines]",
          "466:         if (stream->flags & UV_STREAM_BLOCKING) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "501:   assert(n == 0 || n == -1);",
          "507:   uv__io_start(stream->loop, &stream->write_watcher);",
          "",
          "[Removed Lines]",
          "504:   assert(!stream->blocking);",
          "",
          "[Added Lines]",
          "502:   assert(!(stream->flags & UV_STREAM_BLOCKING));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "626:           stream->read2_cb((uv_pipe_t*)stream, -1, buf, UV_UNKNOWN_HANDLE);",
          "627:         }",
          "630:         return;",
          "631:       }",
          "",
          "[Removed Lines]",
          "629:         assert(!ev_is_active(&stream->read_watcher));",
          "",
          "[Added Lines]",
          "627:         assert(!uv__io_active(&stream->read_watcher));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "635:       uv__set_artificial_error(stream->loop, UV_EOF);",
          "636:       uv__io_stop(stream->loop, &stream->read_watcher);",
          "638:         uv__handle_stop(stream);",
          "640:       if (stream->read_cb) {",
          "",
          "[Removed Lines]",
          "637:       if (!ev_is_active(&stream->write_watcher))",
          "",
          "[Added Lines]",
          "635:       if (!uv__io_active(&stream->write_watcher))",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "936:     uv__io_start(stream->loop, &stream->write_watcher);",
          "937:   }",
          "",
          "[Removed Lines]",
          "934:     assert(!stream->blocking);",
          "",
          "[Added Lines]",
          "932:     assert(!(stream->flags & UV_STREAM_BLOCKING));",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1027:     handle->accepted_fd = -1;",
          "1028:   }",
          "1032: }",
          "",
          "[Removed Lines]",
          "1030:   assert(!ev_is_active(&handle->read_watcher));",
          "1031:   assert(!ev_is_active(&handle->write_watcher));",
          "",
          "[Added Lines]",
          "1028:   assert(!uv__io_active(&handle->read_watcher));",
          "1029:   assert(!uv__io_active(&handle->write_watcher));",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/tty.c||deps/uv/src/unix/tty.c": [
          "File: deps/uv/src/unix/tty.c -> deps/uv/src/unix/tty.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:   } else {",
          "44:     uv__stream_open((uv_stream_t*)tty, fd, UV_STREAM_WRITABLE);",
          "46:   }",
          "48:   loop->counters.tty_init++;",
          "",
          "[Removed Lines]",
          "45:     tty->blocking = 1;",
          "",
          "[Added Lines]",
          "45:     tty->flags |= UV_STREAM_BLOCKING;",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/udp.c||deps/uv/src/unix/udp.c": [
          "File: deps/uv/src/unix/udp.c -> deps/uv/src/unix/udp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: }",
          "90: void uv__udp_close(uv_udp_t* handle) {",
          "93:   close(handle->fd);",
          "94:   handle->fd = -1;",
          "95: }",
          "",
          "[Removed Lines]",
          "64: static void uv__udp_start_read_watcher(uv_udp_t* handle) {",
          "65:   uv__udp_start_watcher(handle,",
          "66:                         &handle->read_watcher,",
          "67:                         uv__udp_recvmsg,",
          "68:                         UV__IO_READ);",
          "69: }",
          "72: static void uv__udp_start_write_watcher(uv_udp_t* handle) {",
          "73:   uv__udp_start_watcher(handle,",
          "74:                         &handle->write_watcher,",
          "75:                         uv__udp_sendmsg,",
          "76:                         UV__IO_WRITE);",
          "77: }",
          "80: static void uv__udp_stop_read_watcher(uv_udp_t* handle) {",
          "81:   uv__udp_stop_watcher(handle, &handle->read_watcher);",
          "82: }",
          "85: static void uv__udp_stop_write_watcher(uv_udp_t* handle) {",
          "86:   uv__udp_stop_watcher(handle, &handle->write_watcher);",
          "87: }",
          "91:   uv__udp_stop_write_watcher(handle);",
          "92:   uv__udp_stop_read_watcher(handle);",
          "",
          "[Added Lines]",
          "65:   uv__udp_stop_watcher(handle, &handle->write_watcher);",
          "66:   uv__udp_stop_watcher(handle, &handle->read_watcher);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "143:     memset(&h, 0, sizeof h);",
          "144:     h.msg_name = &req->addr;",
          "146:     h.msg_iov = (struct iovec*)req->bufs;",
          "147:     h.msg_iovlen = req->bufcnt;",
          "",
          "[Removed Lines]",
          "145:     h.msg_namelen = req->addrlen;",
          "",
          "[Added Lines]",
          "119:     h.msg_namelen = (req->addr.sin6_family == AF_INET6 ?",
          "120:       sizeof(struct sockaddr_in6) : sizeof(struct sockaddr_in));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "225:   handle = container_of(w, uv_udp_t, read_watcher);",
          "226:   assert(handle->type == UV_UDP);",
          "229:   assert(handle->recv_cb != NULL);",
          "230:   assert(handle->alloc_cb != NULL);",
          "",
          "[Removed Lines]",
          "227:   assert(revents & EV_READ);",
          "",
          "[Added Lines]",
          "202:   assert(revents & UV__IO_READ);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "282:   handle = container_of(w, uv_udp_t, write_watcher);",
          "283:   assert(handle->type == UV_UDP);",
          "286:   assert(!ngx_queue_empty(&handle->write_queue)",
          "287:       || !ngx_queue_empty(&handle->write_completed_queue));",
          "",
          "[Removed Lines]",
          "284:   assert(revents & EV_WRITE);",
          "",
          "[Added Lines]",
          "259:   assert(revents & UV__IO_WRITE);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "298:   }",
          "299:   else if (ngx_queue_empty(&handle->write_queue)) {",
          "302:   }",
          "303: }",
          "",
          "[Removed Lines]",
          "301:     uv__udp_stop_write_watcher(handle);",
          "",
          "[Added Lines]",
          "276:     uv__udp_stop_watcher(handle, &handle->write_watcher);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "442:   uv__req_init(handle->loop, req, UV_UDP_SEND);",
          "444:   memcpy(&req->addr, addr, addrlen);",
          "446:   req->send_cb = send_cb;",
          "447:   req->handle = handle;",
          "448:   req->bufcnt = bufcnt;",
          "",
          "[Removed Lines]",
          "445:   req->addrlen = addrlen;",
          "",
          "[Added Lines]",
          "419:   assert(addrlen <= sizeof(req->addr));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "457:   memcpy(req->bufs, bufs, bufcnt * sizeof(bufs[0]));",
          "459:   ngx_queue_insert_tail(&handle->write_queue, &req->queue);",
          "462:   return 0;",
          "463: }",
          "",
          "[Removed Lines]",
          "460:   uv__udp_start_write_watcher(handle);",
          "",
          "[Added Lines]",
          "436:   uv__udp_start_watcher(handle,",
          "437:                         &handle->write_watcher,",
          "438:                         uv__udp_sendmsg,",
          "439:                         UV__IO_WRITE);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "658:   handle->alloc_cb = alloc_cb;",
          "659:   handle->recv_cb = recv_cb;",
          "662:   return 0;",
          "663: }",
          "666: int uv_udp_recv_stop(uv_udp_t* handle) {",
          "668:   handle->alloc_cb = NULL;",
          "669:   handle->recv_cb = NULL;",
          "670:   return 0;",
          "",
          "[Removed Lines]",
          "660:   uv__udp_start_read_watcher(handle);",
          "667:   uv__udp_stop_read_watcher(handle);",
          "",
          "[Added Lines]",
          "640:   uv__udp_start_watcher(handle,",
          "641:                         &handle->read_watcher,",
          "642:                         uv__udp_recvmsg,",
          "643:                         UV__IO_READ);",
          "650:   uv__udp_stop_watcher(handle, &handle->read_watcher);",
          "",
          "---------------"
        ],
        "deps/uv/src/win/core.c||deps/uv/src/win/core.c": [
          "File: deps/uv/src/win/core.c -> deps/uv/src/win/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "268:   } else {",
          "269:     UV_LOOP_ONCE(loop, uv_poll);",
          "270:   }",
          "272: }",
          "",
          "[Removed Lines]",
          "271:   return 0;",
          "",
          "[Added Lines]",
          "271:   return UV_LOOP_ALIVE(loop);",
          "",
          "---------------"
        ],
        "deps/uv/test/benchmark-list.h||deps/uv/test/benchmark-list.h": [
          "File: deps/uv/test/benchmark-list.h -> deps/uv/test/benchmark-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: BENCHMARK_DECLARE (sizes)",
          "23: BENCHMARK_DECLARE (ping_pongs)",
          "24: BENCHMARK_DECLARE (tcp_write_batch)",
          "25: BENCHMARK_DECLARE (tcp4_pound_100)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: BENCHMARK_DECLARE (loop_count)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "54: TASK_LIST_START",
          "55:   BENCHMARK_ENTRY  (sizes)",
          "57:   BENCHMARK_ENTRY  (ping_pongs)",
          "58:   BENCHMARK_HELPER (ping_pongs, tcp4_echo_server)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57:   BENCHMARK_ENTRY  (loop_count)",
          "",
          "---------------"
        ],
        "deps/uv/test/benchmark-sizes.c||deps/uv/test/benchmark-sizes.c": [
          "File: deps/uv/test/benchmark-sizes.c -> deps/uv/test/benchmark-sizes.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:   LOGF(\"uv_shutdown_t: %u bytes\\n\", (unsigned int) sizeof(uv_shutdown_t));",
          "28:   LOGF(\"uv_write_t: %u bytes\\n\", (unsigned int) sizeof(uv_write_t));",
          "29:   LOGF(\"uv_connect_t: %u bytes\\n\", (unsigned int) sizeof(uv_connect_t));",
          "30:   LOGF(\"uv_tcp_t: %u bytes\\n\", (unsigned int) sizeof(uv_tcp_t));",
          "31:   LOGF(\"uv_pipe_t: %u bytes\\n\", (unsigned int) sizeof(uv_pipe_t));",
          "32:   LOGF(\"uv_tty_t: %u bytes\\n\", (unsigned int) sizeof(uv_tty_t));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30:   LOGF(\"uv_udp_send_t: %u bytes\\n\", (unsigned int) sizeof(uv_udp_send_t));",
          "",
          "---------------"
        ],
        "deps/uv/test/test-fs.c||deps/uv/test/test-fs.c": [
          "File: deps/uv/test/test-fs.c -> deps/uv/test/test-fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1305: TEST_IMPL(fs_symlink_dir) {",
          "1306:   uv_fs_t req;",
          "1307:   int r;",
          "1309:   char* test_dir;",
          "",
          "[Removed Lines]",
          "1308:   char src_path_buf[PATHMAX];",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1320:   uv_fs_req_cleanup(&req);",
          "1322: #ifdef _WIN32",
          "1327: #else",
          "1328:   test_dir = \"test_dir\";",
          "1329: #endif",
          "",
          "[Removed Lines]",
          "1323:   strcpy(src_path_buf, \"\\\\\\\\?\\\\\");",
          "1324:   uv_cwd(src_path_buf + 4, sizeof(src_path_buf)/sizeof(src_path_buf[0]));",
          "1325:   strcat(src_path_buf, \"\\\\test_dir\\\\\");",
          "1326:   test_dir = src_path_buf;",
          "",
          "[Added Lines]",
          "1322:   {",
          "1323:     static char src_path_buf[PATHMAX];",
          "1324:     strcpy(src_path_buf, \"\\\\\\\\?\\\\\");",
          "1325:     uv_cwd(src_path_buf + 4, sizeof(src_path_buf));",
          "1326:     strcat(src_path_buf, \"\\\\test_dir\\\\\");",
          "1327:     test_dir = src_path_buf;",
          "1328:   }",
          "",
          "---------------"
        ],
        "deps/uv/test/test-ipc-send-recv.c||deps/uv/test/test-ipc-send-recv.c": [
          "File: deps/uv/test/test-ipc-send-recv.c -> deps/uv/test/test-ipc-send-recv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:   r = uv_pipe_init(uv_default_loop(), &ctx.send.pipe, 1);",
          "121:   ASSERT(r == 0);",
          "123:   r = uv_pipe_bind(&ctx.send.pipe, TEST_PIPENAME);",
          "124:   ASSERT(r == 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123: #ifndef _WIN32",
          "125:   remove(TEST_PIPENAME);",
          "126: #endif",
          "",
          "---------------"
        ],
        "deps/uv/test/test-list.h||deps/uv/test/test-list.h": [
          "File: deps/uv/test/test-list.h -> deps/uv/test/test-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: TEST_DECLARE   (platform_output)",
          "23: TEST_DECLARE   (callback_order)",
          "24: TEST_DECLARE   (tty)",
          "25: TEST_DECLARE   (stdio_over_pipes)",
          "26: TEST_DECLARE   (ipc_listen_before_write)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: TEST_DECLARE   (run_once)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "185: #if 0",
          "186:   TEST_ENTRY  (callback_order)",
          "187: #endif",
          "189:   TEST_ENTRY  (pipe_connect_bad_name)",
          "190:   TEST_ENTRY  (pipe_connect_to_file)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "189:   TEST_ENTRY  (run_once)",
          "",
          "---------------"
        ],
        "deps/uv/test/test-pipe-bind-error.c||deps/uv/test/test-pipe-bind-error.c": [
          "File: deps/uv/test/test-pipe-bind-error.c -> deps/uv/test/test-pipe-bind-error.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #ifdef _WIN32",
          "29: # define BAD_PIPENAME \"bad-pipe\"",
          "30: #else",
          "31: # define BAD_PIPENAME \"/path/to/unix/socket/that/really/should/not/be/there\"",
          "32: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: # define UNLINK_PIPE(name)",
          "33: # define UNLINK_PIPE(name) remove(name)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:   uv_pipe_t server1, server2;",
          "46:   int r;",
          "48:   r = uv_pipe_init(uv_default_loop(), &server1, 0);",
          "49:   ASSERT(r == 0);",
          "50:   r = uv_pipe_bind(&server1, TEST_PIPENAME);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:   UNLINK_PIPE(TEST_PIPENAME);",
          "",
          "---------------"
        ],
        "deps/uv/test/test-run-once.c||deps/uv/test/test-run-once.c": [
          "File: deps/uv/test/test-run-once.c -> deps/uv/test/test-run-once.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include \"uv.h\"",
          "23: #include \"task.h\"",
          "27: static void idle_cb(uv_idle_t* handle, int status) {",
          "29:   ASSERT(status == 0);",
          "31: }",
          "34: TEST_IMPL(run_once) {",
          "43:   return 0;",
          "44: }",
          "",
          "[Removed Lines]",
          "25: static idle_counter = 0;",
          "28:   ASSERT(handle != NULL);",
          "30:   idle_counter ++;",
          "35:   int n;",
          "36:   uv_idle_t h;",
          "37:   uv_idle_init(uv_default_loop(), &h);",
          "38:   uv_idle_start(&h, idle_cb);",
          "39:   for (n = 0; n < 500; n++) {",
          "40:     uv_run_once(uv_default_loop());",
          "41:   }",
          "42:   ASSERT(n == 500);",
          "",
          "[Added Lines]",
          "25: #define NUM_TICKS 64",
          "27: static uv_idle_t idle_handle;",
          "28: static int idle_counter;",
          "32:   ASSERT(handle == &idle_handle);",
          "35:   if (++idle_counter == NUM_TICKS)",
          "36:     uv_idle_stop(handle);",
          "41:   uv_idle_init(uv_default_loop(), &idle_handle);",
          "42:   uv_idle_start(&idle_handle, idle_cb);",
          "44:   while (uv_run_once(uv_default_loop()));",
          "45:   ASSERT(idle_counter == NUM_TICKS);",
          "",
          "---------------"
        ],
        "deps/uv/uv.gyp||deps/uv/uv.gyp": [
          "File: deps/uv/uv.gyp -> deps/uv/uv.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "195:             'src/unix/fs.c',",
          "196:             'src/unix/internal.h',",
          "197:             'src/unix/loop.c',",
          "198:             'src/unix/pipe.c',",
          "199:             'src/unix/poll.c',",
          "200:             'src/unix/process.c',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "198:             'src/unix/loop-watcher.c',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "328:         'test/test-poll.c',",
          "329:         'test/test-process-title.c',",
          "330:         'test/test-ref.c',",
          "331:         'test/test-shutdown-close.c',",
          "332:         'test/test-shutdown-eof.c',",
          "333:         'test/test-spawn.c',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "332:         'test/test-run-once.c',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "393:         'test/benchmark-ares.c',",
          "394:         'test/benchmark-getaddrinfo.c',",
          "395:         'test/benchmark-list.h',",
          "396:         'test/benchmark-ping-pongs.c',",
          "397:         'test/benchmark-pound.c',",
          "398:         'test/benchmark-pump.c',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "398:         'test/benchmark-loop-count.c',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "80a55e9c83592b8c1552cdf08f0a5513c6d51ea5",
      "candidate_info": {
        "commit_hash": "80a55e9c83592b8c1552cdf08f0a5513c6d51ea5",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/80a55e9c83592b8c1552cdf08f0a5513c6d51ea5",
        "files": [
          "src/node.cc"
        ],
        "message": "Report errors thrown from uncaughtException handers",
        "before_after_code_files": [
          "src/node.cc||src/node.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1724:   exit(1);",
          "1725: }",
          "1729: void FatalException(TryCatch &try_catch) {",
          "1730:   HandleScope scope;",
          "1738:   if (listeners_symbol.IsEmpty()) {",
          "1739:     listeners_symbol = NODE_PSYMBOL(\"listeners\");",
          "1740:     uncaught_exception_symbol = NODE_PSYMBOL(\"uncaughtException\");",
          "",
          "[Removed Lines]",
          "1727: static int uncaught_exception_counter = 0;",
          "1733:   if (uncaught_exception_counter > 0) {",
          "1734:     ReportException(try_catch, true);",
          "1735:     exit(1);",
          "1736:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1770:   Local<Value> error = try_catch.Exception();",
          "1771:   Local<Value> event_argv[2] = { uncaught_exception_symbol_l, error };",
          "1774:   emit->Call(process, 2, event_argv);",
          "1777: }",
          "",
          "[Removed Lines]",
          "1773:   uncaught_exception_counter++;",
          "1776:   uncaught_exception_counter--;",
          "",
          "[Added Lines]",
          "1765:   TryCatch event_try_catch;",
          "1767:   if (event_try_catch.HasCaught()) {",
          "1769:     ReportException(event_try_catch, true);",
          "1770:     exit(1);",
          "1771:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}