{
  "cve_id": "CVE-2014-5353",
  "cve_desc": "The krb5_ldap_get_password_policy_from_dn function in plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c in MIT Kerberos 5 (aka krb5) before 1.13.1, when the KDC uses LDAP, allows remote authenticated users to cause a denial of service (daemon crash) via a successful LDAP query with no results, as demonstrated by using an incorrect object type for a password policy.",
  "repo": "krb5/krb5",
  "patch_hash": "d1f707024f1d0af6e54a18885322d70fa15ec4d3",
  "patch_info": {
    "commit_hash": "d1f707024f1d0af6e54a18885322d70fa15ec4d3",
    "repo": "krb5/krb5",
    "commit_url": "https://github.com/krb5/krb5/commit/d1f707024f1d0af6e54a18885322d70fa15ec4d3",
    "files": [
      "src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c"
    ],
    "message": "Fix LDAP misused policy name crash [CVE-2014-5353]\n\nIn krb5_ldap_get_password_policy_from_dn, if LDAP_SEARCH returns\nsuccessfully with no results, return KRB5_KDB_NOENTRY instead of\nreturning success with a zeroed-out policy object.  This fixes a null\ndereference when an admin attempts to use an LDAP ticket policy name\nas a password policy name.\n\nCVE-2014-5353:\n\nIn MIT krb5, when kadmind is configured to use LDAP for the KDC\ndatabase, an authenticated remote attacker can cause a NULL dereference\nby attempting to use a named ticket policy object as a password policy\nfor a principal.  The attacker needs to be authenticated as a user who\nhas the elevated privilege for setting password policy by adding or\nmodifying principals.\n\nQueries to LDAP scoped to the krbPwdPolicy object class will correctly\nnot return entries of other classes, such as ticket policy objects, but\nmay return success with no returned elements if an object with the\nrequested DN exists in a different object class.  In this case, the\nroutine to retrieve a password policy returned success with a password\npolicy object that consisted entirely of zeroed memory.  In particular,\naccesses to the policy name will dereference a NULL pointer.  KDC\noperation does not access the policy name field, but most kadmin\noperations involving the principal with incorrect password policy\nwill trigger the crash.\n\nThanks to Patrik Kis for reporting this problem.\n\nCVSSv2 Vector: AV:N/AC:M/Au:S/C:N/I:N/A:C/E:H/RL:OF/RC:C\n\n[kaduk@mit.edu: CVE description and CVSS score]\n\nticket: 8051 (new)\ntarget_version: 1.13.1\ntags: pullup",
    "before_after_code_files": [
      "src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c"
    ]
  },
  "patch_diff": {
    "src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c": [
      "File: src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c -> src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "314:     LDAP_SEARCH(pol_dn, LDAP_SCOPE_BASE, \"(objectclass=krbPwdPolicy)\", password_policy_attributes);",
      "316:     ent=ldap_first_entry(ld, result);",
      "320:     }",
      "322: cleanup:",
      "323:     ldap_msgfree(result);",
      "",
      "[Removed Lines]",
      "317:     if (ent != NULL) {",
      "318:         if ((st = populate_policy(context, ld, ent, pol_name, *policy)) != 0)",
      "319:             goto cleanup;",
      "",
      "[Added Lines]",
      "317:     if (ent == NULL) {",
      "318:         st = KRB5_KDB_NOENTRY;",
      "319:         goto cleanup;",
      "321:     st = populate_policy(context, ld, ent, pol_name, *policy);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5fbb56c4624df9e6b0d0a80f46e5ad37eb79c6c0",
      "candidate_info": {
        "commit_hash": "5fbb56c4624df9e6b0d0a80f46e5ad37eb79c6c0",
        "repo": "krb5/krb5",
        "commit_url": "https://github.com/krb5/krb5/commit/5fbb56c4624df9e6b0d0a80f46e5ad37eb79c6c0",
        "files": [
          "src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c"
        ],
        "message": "Fix LDAP misused policy name crash [CVE-2014-5353]\n\nIn krb5_ldap_get_password_policy_from_dn, if LDAP_SEARCH returns\nsuccessfully with no results, return KRB5_KDB_NOENTRY instead of\nreturning success with a zeroed-out policy object.  This fixes a null\ndereference when an admin attempts to use an LDAP ticket policy name\nas a password policy name.\n\nCVE-2014-5353:\n\nIn MIT krb5, when kadmind is configured to use LDAP for the KDC\ndatabase, an authenticated remote attacker can cause a NULL dereference\nby attempting to use a named ticket policy object as a password policy\nfor a principal.  The attacker needs to be authenticated as a user who\nhas the elevated privilege for setting password policy by adding or\nmodifying principals.\n\nQueries to LDAP scoped to the krbPwdPolicy object class will correctly\nnot return entries of other classes, such as ticket policy objects, but\nmay return success with no returned elements if an object with the\nrequested DN exists in a different object class.  In this case, the\nroutine to retrieve a password policy returned success with a password\npolicy object that consisted entirely of zeroed memory.  In particular,\naccesses to the policy name will dereference a NULL pointer.  KDC\noperation does not access the policy name field, but most kadmin\noperations involving the principal with incorrect password policy\nwill trigger the crash.\n\nThanks to Patrik Kis for reporting this problem.\n\nCVSSv2 Vector: AV:N/AC:M/Au:S/C:N/I:N/A:C/E:H/RL:OF/RC:C\n\n[kaduk@mit.edu: CVE description and CVSS score]\n\n(cherry picked from commit d1f707024f1d0af6e54a18885322d70fa15ec4d3)\n(cherry picked from commit 0a97ce4411b34e871ae503b78eedf61db27180ea)\n\nticket: 8142 (new)\nversion_fixed: 1.11.6\nstatus: resolved",
        "before_after_code_files": [
          "src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c"
          ],
          "candidate": [
            "src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c"
          ]
        }
      },
      "candidate_diff": {
        "src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c": [
          "File: src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c -> src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "320:     LDAP_SEARCH(pol_dn, LDAP_SCOPE_BASE, \"(objectclass=krbPwdPolicy)\", password_policy_attributes);",
          "322:     ent=ldap_first_entry(ld, result);",
          "326:     }",
          "328: cleanup:",
          "329:     ldap_msgfree(result);",
          "",
          "[Removed Lines]",
          "323:     if (ent != NULL) {",
          "324:         if ((st = populate_policy(context, ld, ent, pol_name, *policy)) != 0)",
          "325:             goto cleanup;",
          "",
          "[Added Lines]",
          "323:     if (ent == NULL) {",
          "324:         st = KRB5_KDB_NOENTRY;",
          "325:         goto cleanup;",
          "327:     st = populate_policy(context, ld, ent, pol_name, *policy);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2865a748eff3b37d2090e9cf1c88d23bc7df7710",
      "candidate_info": {
        "commit_hash": "2865a748eff3b37d2090e9cf1c88d23bc7df7710",
        "repo": "krb5/krb5",
        "commit_url": "https://github.com/krb5/krb5/commit/2865a748eff3b37d2090e9cf1c88d23bc7df7710",
        "files": [
          "src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c"
        ],
        "message": "Fix LDAP misused policy name crash [CVE-2014-5353]\n\nIn krb5_ldap_get_password_policy_from_dn, if LDAP_SEARCH returns\nsuccessfully with no results, return KRB5_KDB_NOENTRY instead of\nreturning success with a zeroed-out policy object.  This fixes a null\ndereference when an admin attempts to use an LDAP ticket policy name\nas a password policy name.\n\nCVE-2014-5353:\n\nIn MIT krb5, when kadmind is configured to use LDAP for the KDC\ndatabase, an authenticated remote attacker can cause a NULL dereference\nby attempting to use a named ticket policy object as a password policy\nfor a principal.  The attacker needs to be authenticated as a user who\nhas the elevated privilege for setting password policy by adding or\nmodifying principals.\n\nQueries to LDAP scoped to the krbPwdPolicy object class will correctly\nnot return entries of other classes, such as ticket policy objects, but\nmay return success with no returned elements if an object with the\nrequested DN exists in a different object class.  In this case, the\nroutine to retrieve a password policy returned success with a password\npolicy object that consisted entirely of zeroed memory.  In particular,\naccesses to the policy name will dereference a NULL pointer.  KDC\noperation does not access the policy name field, but most kadmin\noperations involving the principal with incorrect password policy\nwill trigger the crash.\n\nThanks to Patrik Kis for reporting this problem.\n\nCVSSv2 Vector: AV:N/AC:M/Au:S/C:N/I:N/A:C/E:H/RL:OF/RC:C\n\n[kaduk@mit.edu: CVE description and CVSS score]\n\n(cherry picked from commit d1f707024f1d0af6e54a18885322d70fa15ec4d3)\n\nticket: 8051\nversion_fixed: 1.13.1\nstatus: resolved",
        "before_after_code_files": [
          "src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c"
          ],
          "candidate": [
            "src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c"
          ]
        }
      },
      "candidate_diff": {
        "src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c": [
          "File: src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c -> src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "314:     LDAP_SEARCH(pol_dn, LDAP_SCOPE_BASE, \"(objectclass=krbPwdPolicy)\", password_policy_attributes);",
          "316:     ent=ldap_first_entry(ld, result);",
          "320:     }",
          "322: cleanup:",
          "323:     ldap_msgfree(result);",
          "",
          "[Removed Lines]",
          "317:     if (ent != NULL) {",
          "318:         if ((st = populate_policy(context, ld, ent, pol_name, *policy)) != 0)",
          "319:             goto cleanup;",
          "",
          "[Added Lines]",
          "317:     if (ent == NULL) {",
          "318:         st = KRB5_KDB_NOENTRY;",
          "319:         goto cleanup;",
          "321:     st = populate_policy(context, ld, ent, pol_name, *policy);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0a97ce4411b34e871ae503b78eedf61db27180ea",
      "candidate_info": {
        "commit_hash": "0a97ce4411b34e871ae503b78eedf61db27180ea",
        "repo": "krb5/krb5",
        "commit_url": "https://github.com/krb5/krb5/commit/0a97ce4411b34e871ae503b78eedf61db27180ea",
        "files": [
          "src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c"
        ],
        "message": "Fix LDAP misused policy name crash [CVE-2014-5353]\n\nIn krb5_ldap_get_password_policy_from_dn, if LDAP_SEARCH returns\nsuccessfully with no results, return KRB5_KDB_NOENTRY instead of\nreturning success with a zeroed-out policy object.  This fixes a null\ndereference when an admin attempts to use an LDAP ticket policy name\nas a password policy name.\n\nCVE-2014-5353:\n\nIn MIT krb5, when kadmind is configured to use LDAP for the KDC\ndatabase, an authenticated remote attacker can cause a NULL dereference\nby attempting to use a named ticket policy object as a password policy\nfor a principal.  The attacker needs to be authenticated as a user who\nhas the elevated privilege for setting password policy by adding or\nmodifying principals.\n\nQueries to LDAP scoped to the krbPwdPolicy object class will correctly\nnot return entries of other classes, such as ticket policy objects, but\nmay return success with no returned elements if an object with the\nrequested DN exists in a different object class.  In this case, the\nroutine to retrieve a password policy returned success with a password\npolicy object that consisted entirely of zeroed memory.  In particular,\naccesses to the policy name will dereference a NULL pointer.  KDC\noperation does not access the policy name field, but most kadmin\noperations involving the principal with incorrect password policy\nwill trigger the crash.\n\nThanks to Patrik Kis for reporting this problem.\n\nCVSSv2 Vector: AV:N/AC:M/Au:S/C:N/I:N/A:C/E:H/RL:OF/RC:C\n\n[kaduk@mit.edu: CVE description and CVSS score]\n\n(cherry picked from commit d1f707024f1d0af6e54a18885322d70fa15ec4d3)\n\nticket: 8137 (new)\nversion_fixed: 1.12.3\nstatus: resolved",
        "before_after_code_files": [
          "src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c"
          ],
          "candidate": [
            "src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c"
          ]
        }
      },
      "candidate_diff": {
        "src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c": [
          "File: src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c -> src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "314:     LDAP_SEARCH(pol_dn, LDAP_SCOPE_BASE, \"(objectclass=krbPwdPolicy)\", password_policy_attributes);",
          "316:     ent=ldap_first_entry(ld, result);",
          "320:     }",
          "322: cleanup:",
          "323:     ldap_msgfree(result);",
          "",
          "[Removed Lines]",
          "317:     if (ent != NULL) {",
          "318:         if ((st = populate_policy(context, ld, ent, pol_name, *policy)) != 0)",
          "319:             goto cleanup;",
          "",
          "[Added Lines]",
          "317:     if (ent == NULL) {",
          "318:         st = KRB5_KDB_NOENTRY;",
          "319:         goto cleanup;",
          "321:     st = populate_policy(context, ld, ent, pol_name, *policy);",
          "",
          "---------------"
        ]
      }
    }
  ]
}