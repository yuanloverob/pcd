{
  "cve_id": "CVE-2019-19646",
  "cve_desc": "pragma.c in SQLite through 3.30.1 mishandles NOT NULL in an integrity_check PRAGMA command in certain cases of generated columns.",
  "repo": "sqlite/sqlite",
  "patch_hash": "ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
  "patch_info": {
    "commit_hash": "ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/pragma.c",
      "test/gencol1.test"
    ],
    "message": "Fix the NOT NULL verification logic in PRAGMA integrity_check so that it works for generated columns whose value is the result of a comparison operator. Ticket [bd8c280671ba44a7]\n\nFossilOrigin-Name: f3b39c71b88cb6721f443de56cdce4c08252453a5e340b00a2bd88dc10c42400",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/pragma.c||src/pragma.c",
      "test/gencol1.test||test/gencol1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: e3398c5ffb060b2b26334b8598e2c63953741e2d6f5124dbd6bdfc8e94742539",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/pragma.c||src/pragma.c": [
      "File: src/pragma.c -> src/pragma.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1596:           if( j==pTab->iPKey ) continue;",
      "1597:           if( pTab->aCol[j].notNull==0 ) continue;",
      "1598:           sqlite3ExprCodeGetColumnOfTable(v, pTab, iDataCur, j, 3);",
      "1600:           jmp2 = sqlite3VdbeAddOp1(v, OP_NotNull, 3); VdbeCoverage(v);",
      "1601:           zErr = sqlite3MPrintf(db, \"NULL value in %s.%s\", pTab->zName,",
      "1602:                               pTab->aCol[j].zName);",
      "",
      "[Removed Lines]",
      "1599:           sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);",
      "",
      "[Added Lines]",
      "1599:           if( sqlite3VdbeGetOp(v,-1)->opcode==OP_Column ){",
      "1600:             sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);",
      "1601:           }",
      "",
      "---------------"
    ],
    "test/gencol1.test||test/gencol1.test": [
      "File: test/gencol1.test -> test/gencol1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "328:   INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0)",
      "329: } {1 {FOREIGN KEY constraint failed}}",
      "331: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "331: # 2019-12-09 ticket bd8c280671ba44a7",
      "332: # With generated columns, the sqlite3ExprGetColumnOfTable() routine might",
      "333: # generate a code sequence that does not end with OP_Column.  So check to",
      "334: # make sure that the last instruction generated is an OP_column prior to",
      "335: # applying the OPFLAG_TYPEOFARG optimization to NOT NULL checks in the",
      "336: # PRAGMA integrity_check code.",
      "337: #",
      "338: sqlite3 db :memory:",
      "339: do_execsql_test gencol1-12.10 {",
      "340:   CREATE TABLE t0 (c0, c1 NOT NULL AS (c0==0));",
      "341:   INSERT INTO t0(c0) VALUES (0);",
      "342:   PRAGMA integrity_check;",
      "343: } {ok}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f10ce63651927b471a965adfd7519d4d14d09392",
      "candidate_info": {
        "commit_hash": "f10ce63651927b471a965adfd7519d4d14d09392",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f10ce63651927b471a965adfd7519d4d14d09392",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c"
        ],
        "message": "Fix PRAGMA integrity_check so that it does not cancel the PRAGMA vdbe_debug setting.\n\nFossilOrigin-Name: aaa3a19f8cf5ba7003634e4610abc7832354af91d7c7f65469218678f66bcd46",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 599b4df43c64ce295517c804b6bb4c3ab77d77e0ba585dc0657274f55489a3b1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "9804:   Pgno i;",
          "9805:   IntegrityCk sCheck;",
          "9806:   BtShared *pBt = p->pBt;",
          "9808:   char zErr[100];",
          "9809:   VVA_ONLY( int nRef );",
          "",
          "[Removed Lines]",
          "9807:   int savedDbFlags = pBt->db->flags;",
          "",
          "[Added Lines]",
          "9807:   u64 savedDbFlags = pBt->db->flags;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "130dbc3d96d2f673c75864b032fa7e24a08cb3a4",
      "candidate_info": {
        "commit_hash": "130dbc3d96d2f673c75864b032fa7e24a08cb3a4",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/130dbc3d96d2f673c75864b032fa7e24a08cb3a4",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "Add recent interesting cases from dbsqlfuzz.\n\nFossilOrigin-Name: f06ef3d75d85545dd58c6dda10f7ad04fafbb7ae8706b3821be21f86a94795f1",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5beb6dc9bc2d3d0003e33488df9c01aaf28c41c30fd9ca35543cbe3ec5a8d9ce",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ac6627327c01a1f9655e7ac33cb3adab45abc761",
      "candidate_info": {
        "commit_hash": "ac6627327c01a1f9655e7ac33cb3adab45abc761",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ac6627327c01a1f9655e7ac33cb3adab45abc761",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/windowA.test"
        ],
        "message": "New test cases for window functions with RANGE BETWEEN and DESC NULLS FIRST.\n\nFossilOrigin-Name: f7002f86c780e279c9f8a6268f317586519c059c9de2115ff6f1cad272570c29",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/windowA.test||test/windowA.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 39b4cad4a51bb5116d62ffb16ac36d96a9280321b049eb2d008605392f52a459",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/windowA.test||test/windowA.test": [
          "File: test/windowA.test -> test/windowA.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # 2019-08-30",
          "2: #",
          "3: # The author disclaims copyright to this source code.  In place of",
          "4: # a legal notice, here is a blessing:",
          "5: #",
          "6: #    May you do good and not evil.",
          "7: #    May you find forgiveness for yourself and forgive others.",
          "8: #    May you share freely, never taking more than you give.",
          "9: #",
          "10: #***********************************************************************",
          "11: # Test cases for RANGE BETWEEN and especially with NULLS LAST",
          "12: #",
          "14: set testdir [file dirname $argv0]",
          "15: source $testdir/tester.tcl",
          "16: set testprefix windowA",
          "18: ifcapable !windowfunc {",
          "19:   finish_test",
          "20:   return",
          "21: }",
          "23: do_execsql_test 1.0 {",
          "24:   CREATE TABLE t1(a INTEGER PRIMARY KEY, b CHAR(1), d FLOAT);",
          "25:   INSERT INTO t1 VALUES",
          "26:    (1, 'A', 5.4),",
          "27:    (2, 'B', 5.55),",
          "28:    (3, 'C', 8.0),",
          "29:    (4, 'D', 10.25),",
          "30:    (5, 'E', 10.26),",
          "31:    (6, 'N', NULL),",
          "32:    (7, 'N', NULL);",
          "33: } {}",
          "35: do_execsql_test 1.1 {",
          "36:   SELECT a, b, quote(d), group_concat(b,'') OVER w1 FROM t1",
          "37:   WINDOW w1 AS",
          "38:      (ORDER BY d DESC NULLS LAST",
          "39:       RANGE BETWEEN 2.50 PRECEDING AND 2.25 FOLLOWING)",
          "40:   ORDER BY +d DESC NULLS LAST, +a;",
          "41: } [list \\",
          "42:   5 E 10.26 ED   \\",
          "43:   4 D 10.25 EDC  \\",
          "44:   3 C   8.0 EDC  \\",
          "45:   2 B  5.55 CBA  \\",
          "46:   1 A   5.4 BA   \\",
          "47:   6 N  NULL NN   \\",
          "48:   7 N  NULL NN   \\",
          "49: ]",
          "51: do_execsql_test 1.2 {",
          "52:   SELECT a, b, quote(d), group_concat(b,'') OVER w1 FROM t1",
          "53:   WINDOW w1 AS",
          "54:      (ORDER BY d DESC NULLS FIRST",
          "55:       RANGE BETWEEN 2.50 PRECEDING AND 2.25 FOLLOWING)",
          "56:   ORDER BY +d DESC NULLS FIRST, +a;",
          "57: } [list \\",
          "58:   6 N  NULL NN   \\",
          "59:   7 N  NULL NN   \\",
          "60:   5 E 10.26 ED   \\",
          "61:   4 D 10.25 EDC  \\",
          "62:   3 C   8.0 EDC  \\",
          "63:   2 B  5.55 CBA  \\",
          "64:   1 A   5.4 BA   \\",
          "65: ]",
          "67: do_execsql_test 1.3 {",
          "68:   SELECT a, b, quote(d), group_concat(b,'') OVER w1 FROM t1",
          "69:   WINDOW w1 AS",
          "70:      (ORDER BY d DESC NULLS LAST",
          "71:       RANGE BETWEEN 2.50 PRECEDING AND UNBOUNDED FOLLOWING)",
          "72:   ORDER BY +d DESC NULLS LAST, +a;",
          "73: } [list \\",
          "74:   5 E 10.26 EDCBANN  \\",
          "75:   4 D 10.25 EDCBANN  \\",
          "76:   3 C   8.0 EDCBANN  \\",
          "77:   2 B  5.55 CBANN    \\",
          "78:   1 A   5.4 BANN     \\",
          "79:   6 N  NULL NN       \\",
          "80:   7 N  NULL NN       \\",
          "81: ]",
          "83: do_execsql_test 1.4 {",
          "84:   SELECT a, b, quote(d), group_concat(b,'') OVER w1 FROM t1",
          "85:   WINDOW w1 AS",
          "86:      (ORDER BY d DESC NULLS FIRST",
          "87:       RANGE BETWEEN 2.50 PRECEDING AND UNBOUNDED FOLLOWING)",
          "88:   ORDER BY +d DESC NULLS FIRST, +a;",
          "89: } [list \\",
          "90:   6 N  NULL NNEDCBA  \\",
          "91:   7 N  NULL NNEDCBA  \\",
          "92:   5 E 10.26 EDCBA    \\",
          "93:   4 D 10.25 EDCBA    \\",
          "94:   3 C   8.0 EDCBA    \\",
          "95:   2 B  5.55 CBA      \\",
          "96:   1 A   5.4 BA       \\",
          "97: ]",
          "99: do_execsql_test 1.5 {",
          "100:   SELECT a, b, quote(d), group_concat(b,'') OVER w1 FROM t1",
          "101:   WINDOW w1 AS",
          "102:      (ORDER BY d DESC NULLS LAST",
          "103:       RANGE BETWEEN 2.50 PRECEDING AND CURRENT ROW)",
          "104:   ORDER BY +d DESC NULLS LAST, +a;",
          "105: } [list \\",
          "106:   5 E 10.26 E    \\",
          "107:   4 D 10.25 ED   \\",
          "108:   3 C   8.0 EDC  \\",
          "109:   2 B  5.55 CB   \\",
          "110:   1 A   5.4 BA   \\",
          "111:   6 N  NULL NN   \\",
          "112:   7 N  NULL NN   \\",
          "113: ]",
          "115: do_execsql_test 1.6 {",
          "116:   SELECT a, b, quote(d), group_concat(b,'') OVER w1 FROM t1",
          "117:   WINDOW w1 AS",
          "118:      (ORDER BY d DESC NULLS FIRST",
          "119:       RANGE BETWEEN 2.50 PRECEDING AND CURRENT ROW)",
          "120:   ORDER BY +d DESC NULLS FIRST, +a;",
          "121: } [list \\",
          "122:   6 N  NULL NN   \\",
          "123:   7 N  NULL NN   \\",
          "124:   5 E 10.26 E    \\",
          "125:   4 D 10.25 ED   \\",
          "126:   3 C   8.0 EDC  \\",
          "127:   2 B  5.55 CB   \\",
          "128:   1 A   5.4 BA   \\",
          "129: ]",
          "131: do_execsql_test 2.1 {",
          "132:   SELECT a, b, quote(d), group_concat(b,'') OVER w1 FROM t1",
          "133:   WINDOW w1 AS",
          "134:      (ORDER BY d DESC NULLS LAST",
          "135:       RANGE BETWEEN UNBOUNDED PRECEDING AND 2.25 FOLLOWING)",
          "136:   ORDER BY +d DESC NULLS LAST, +a;",
          "137: } [list \\",
          "138:   5 E 10.26 ED       \\",
          "139:   4 D 10.25 EDC      \\",
          "140:   3 C   8.0 EDC      \\",
          "141:   2 B  5.55 EDCBA    \\",
          "142:   1 A   5.4 EDCBA    \\",
          "143:   6 N  NULL EDCBANN  \\",
          "144:   7 N  NULL EDCBANN  \\",
          "145: ]",
          "147: do_execsql_test 2.2 {",
          "148:   SELECT a, b, quote(d), group_concat(b,'') OVER w1 FROM t1",
          "149:   WINDOW w1 AS",
          "150:      (ORDER BY d DESC NULLS FIRST",
          "151:       RANGE BETWEEN UNBOUNDED PRECEDING AND 2.25 FOLLOWING)",
          "152:   ORDER BY +d DESC NULLS FIRST, +a;",
          "153: } [list \\",
          "154:   6 N  NULL NN         \\",
          "155:   7 N  NULL NN         \\",
          "156:   5 E 10.26 NNED       \\",
          "157:   4 D 10.25 NNEDC      \\",
          "158:   3 C   8.0 NNEDC      \\",
          "159:   2 B  5.55 NNEDCBA    \\",
          "160:   1 A   5.4 NNEDCBA    \\",
          "161: ]",
          "163: do_execsql_test 2.3 {",
          "164:   SELECT a, b, quote(d), group_concat(b,'') OVER w1 FROM t1",
          "165:   WINDOW w1 AS",
          "166:      (ORDER BY d DESC NULLS LAST",
          "167:       RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)",
          "168:   ORDER BY +d DESC NULLS LAST, +a;",
          "169: } [list \\",
          "170:   5 E 10.26 EDCBANN  \\",
          "171:   4 D 10.25 EDCBANN  \\",
          "172:   3 C   8.0 EDCBANN  \\",
          "173:   2 B  5.55 EDCBANN  \\",
          "174:   1 A   5.4 EDCBANN  \\",
          "175:   6 N  NULL EDCBANN  \\",
          "176:   7 N  NULL EDCBANN  \\",
          "177: ]",
          "179: do_execsql_test 2.4 {",
          "180:   SELECT a, b, quote(d), group_concat(b,'') OVER w1 FROM t1",
          "181:   WINDOW w1 AS",
          "182:      (ORDER BY d DESC NULLS FIRST",
          "183:       RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)",
          "184:   ORDER BY +d DESC NULLS FIRST, +a;",
          "185: } [list \\",
          "186:   6 N  NULL NNEDCBA  \\",
          "187:   7 N  NULL NNEDCBA  \\",
          "188:   5 E 10.26 NNEDCBA  \\",
          "189:   4 D 10.25 NNEDCBA  \\",
          "190:   3 C   8.0 NNEDCBA  \\",
          "191:   2 B  5.55 NNEDCBA  \\",
          "192:   1 A   5.4 NNEDCBA  \\",
          "193: ]",
          "195: do_execsql_test 2.5 {",
          "196:   SELECT a, b, quote(d), group_concat(b,'') OVER w1 FROM t1",
          "197:   WINDOW w1 AS",
          "198:      (ORDER BY d DESC NULLS LAST",
          "199:       RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)",
          "200:   ORDER BY +d DESC NULLS LAST, +a;",
          "201: } [list \\",
          "202:   5 E 10.26 E        \\",
          "203:   4 D 10.25 ED       \\",
          "204:   3 C   8.0 EDC      \\",
          "205:   2 B  5.55 EDCB     \\",
          "206:   1 A   5.4 EDCBA    \\",
          "207:   6 N  NULL EDCBANN  \\",
          "208:   7 N  NULL EDCBANN  \\",
          "209: ]",
          "211: do_execsql_test 2.6 {",
          "212:   SELECT a, b, quote(d), group_concat(b,'') OVER w1 FROM t1",
          "213:   WINDOW w1 AS",
          "214:      (ORDER BY d DESC NULLS FIRST",
          "215:       RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)",
          "216:   ORDER BY +d DESC NULLS FIRST, +a;",
          "217: } [list \\",
          "218:   6 N  NULL NN       \\",
          "219:   7 N  NULL NN       \\",
          "220:   5 E 10.26 NNE      \\",
          "221:   4 D 10.25 NNED     \\",
          "222:   3 C   8.0 NNEDC    \\",
          "223:   2 B  5.55 NNEDCB   \\",
          "224:   1 A   5.4 NNEDCBA  \\",
          "225: ]",
          "228: do_execsql_test 3.1 {",
          "229:   SELECT a, b, quote(d), group_concat(b,'') OVER w1 FROM t1",
          "230:   WINDOW w1 AS",
          "231:      (ORDER BY d DESC NULLS LAST",
          "232:       RANGE BETWEEN CURRENT ROW AND 2.25 FOLLOWING)",
          "233:   ORDER BY +d DESC NULLS LAST, +a;",
          "234: } [list \\",
          "235:   5 E 10.26 ED       \\",
          "236:   4 D 10.25 DC       \\",
          "237:   3 C   8.0 C        \\",
          "238:   2 B  5.55 BA       \\",
          "239:   1 A   5.4 A        \\",
          "240:   6 N  NULL NN       \\",
          "241:   7 N  NULL NN       \\",
          "242: ]",
          "244: do_execsql_test 3.2 {",
          "245:   SELECT a, b, quote(d), group_concat(b,'') OVER w1 FROM t1",
          "246:   WINDOW w1 AS",
          "247:      (ORDER BY d DESC NULLS FIRST",
          "248:       RANGE BETWEEN CURRENT ROW AND 2.25 FOLLOWING)",
          "249:   ORDER BY +d DESC NULLS FIRST, +a;",
          "250: } [list \\",
          "251:   6 N  NULL NN       \\",
          "252:   7 N  NULL NN       \\",
          "253:   5 E 10.26 ED       \\",
          "254:   4 D 10.25 DC       \\",
          "255:   3 C   8.0 C        \\",
          "256:   2 B  5.55 BA       \\",
          "257:   1 A   5.4 A        \\",
          "258: ]",
          "260: do_execsql_test 3.3 {",
          "261:   SELECT a, b, quote(d), group_concat(b,'') OVER w1 FROM t1",
          "262:   WINDOW w1 AS",
          "263:      (ORDER BY d DESC NULLS LAST",
          "264:       RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)",
          "265:   ORDER BY +d DESC NULLS LAST, +a;",
          "266: } [list \\",
          "267:   5 E 10.26 EDCBANN  \\",
          "268:   4 D 10.25 DCBANN   \\",
          "269:   3 C   8.0 CBANN    \\",
          "270:   2 B  5.55 BANN     \\",
          "271:   1 A   5.4 ANN      \\",
          "272:   6 N  NULL NN       \\",
          "273:   7 N  NULL NN       \\",
          "274: ]",
          "276: do_execsql_test 3.4 {",
          "277:   SELECT a, b, quote(d), group_concat(b,'') OVER w1 FROM t1",
          "278:   WINDOW w1 AS",
          "279:      (ORDER BY d DESC NULLS FIRST",
          "280:       RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)",
          "281:   ORDER BY +d DESC NULLS FIRST, +a;",
          "282: } [list \\",
          "283:   6 N  NULL NNEDCBA  \\",
          "284:   7 N  NULL NNEDCBA  \\",
          "285:   5 E 10.26 EDCBA    \\",
          "286:   4 D 10.25 DCBA     \\",
          "287:   3 C   8.0 CBA      \\",
          "288:   2 B  5.55 BA       \\",
          "289:   1 A   5.4 A        \\",
          "290: ]",
          "292: finish_test",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3cbbd195ca84adb2bd2a2ae579a0f9fcbe4de595",
      "candidate_info": {
        "commit_hash": "3cbbd195ca84adb2bd2a2ae579a0f9fcbe4de595",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3cbbd195ca84adb2bd2a2ae579a0f9fcbe4de595",
        "files": [
          "ext/fts5/fts5Int.h",
          "ext/fts5/fts5_main.c",
          "ext/fts5/fts5_storage.c",
          "ext/fts5/test/fts5content.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Prevent an fts5 table from being its own content table, or part of a view that is the content table.\n\nFossilOrigin-Name: b6d52c9364767ff4ab7279ae981afb97799299dcfaf38a0110c40ca82c72a825",
        "before_after_code_files": [
          "ext/fts5/fts5Int.h||ext/fts5/fts5Int.h",
          "ext/fts5/fts5_main.c||ext/fts5/fts5_main.c",
          "ext/fts5/fts5_storage.c||ext/fts5/fts5_storage.c",
          "ext/fts5/test/fts5content.test||ext/fts5/test/fts5content.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5Int.h||ext/fts5/fts5Int.h": [
          "File: ext/fts5/fts5Int.h -> ext/fts5/fts5Int.h"
        ],
        "ext/fts5/fts5_main.c||ext/fts5/fts5_main.c": [
          "File: ext/fts5/fts5_main.c -> ext/fts5/fts5_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "536:   assert( SQLITE_INDEX_CONSTRAINT_GE<SQLITE_INDEX_CONSTRAINT_MATCH );",
          "537:   assert( SQLITE_INDEX_CONSTRAINT_LE<SQLITE_INDEX_CONSTRAINT_MATCH );",
          "540:   for(i=0; i<pInfo->nConstraint; i++){",
          "541:     struct sqlite3_index_constraint *p = &pInfo->aConstraint[i];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "539:   if( pConfig->bLock ){",
          "540:     pTab->base.zErrMsg = sqlite3_mprintf(",
          "541:         \"recursively defined fts5 content table\"",
          "542:     );",
          "543:     return SQLITE_ERROR;",
          "544:   }",
          "",
          "---------------"
        ],
        "ext/fts5/fts5_storage.c||ext/fts5/fts5_storage.c": [
          "File: ext/fts5/fts5_storage.c -> ext/fts5/fts5_storage.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "138:     }else{",
          "139:       int f = SQLITE_PREPARE_PERSISTENT;",
          "140:       if( eStmt>FTS5_STMT_LOOKUP ) f |= SQLITE_PREPARE_NO_VTAB;",
          "141:       rc = sqlite3_prepare_v3(pC->db, zSql, -1, f, &p->aStmt[eStmt], 0);",
          "142:       sqlite3_free(zSql);",
          "143:       if( rc!=SQLITE_OK && pzErrMsg ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "141:       p->pConfig->bLock++;",
          "143:       p->pConfig->bLock--;",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5content.test||ext/fts5/test/fts5content.test": [
          "File: ext/fts5/test/fts5content.test -> ext/fts5/test/fts5content.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "253:   SELECT name FROM sqlite_master;",
          "254: } {}",
          "257: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "256: #---------------------------------------------------------------------------",
          "257: # Check that an fts5 table cannot be its own content table.",
          "258: #",
          "259: reset_db",
          "260: do_execsql_test 7.1 {",
          "261:   CREATE VIRTUAL TABLE t1 USING fts5(a, c=t1 );",
          "262:   INSERT INTO t1( a ) VALUES('abc');",
          "263: }",
          "264: do_catchsql_test 7.2 {",
          "265:   SELECT * FROM t1;",
          "266: } {1 {recursively defined fts5 content table}}",
          "267: do_catchsql_test 7.3 {",
          "268:   SELECT * FROM t1('abc');",
          "269: } {1 {recursively defined fts5 content table}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 1bd4b97d6405c9b093f3bfed914c56088ee13e4a2242be62b74a86660f74f533",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "229ae1ae72d3693e675703be2b986f62fb536cb1",
      "candidate_info": {
        "commit_hash": "229ae1ae72d3693e675703be2b986f62fb536cb1",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/229ae1ae72d3693e675703be2b986f62fb536cb1",
        "files": [
          "ext/fts5/fts5_main.c",
          "ext/fts5/test/fts5misc.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a potential crash in fts5 caused by using an auxiliary function on a \"special\" query like '*id' or '*reads'.\n\nFossilOrigin-Name: 9490683ae883561fa347cbe54ebdd61188d849b4852d904b508250ba5d0807ef",
        "before_after_code_files": [
          "ext/fts5/fts5_main.c||ext/fts5/fts5_main.c",
          "ext/fts5/test/fts5misc.test||ext/fts5/test/fts5misc.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_main.c||ext/fts5/fts5_main.c": [
          "File: ext/fts5/fts5_main.c -> ext/fts5/fts5_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "988:   assert( pTab->p.base.zErrMsg==0 );",
          "989:   pCsr->ePlan = FTS5_PLAN_SPECIAL;",
          "992:     pCsr->iSpecial = sqlite3Fts5IndexReads(pTab->p.pIndex);",
          "993:   }",
          "995:     pCsr->iSpecial = pCsr->iCsrId;",
          "996:   }",
          "997:   else{",
          "",
          "[Removed Lines]",
          "991:   if( 0==sqlite3_strnicmp(\"reads\", z, n) ){",
          "994:   else if( 0==sqlite3_strnicmp(\"id\", z, n) ){",
          "",
          "[Added Lines]",
          "991:   if( n==5 && 0==sqlite3_strnicmp(\"reads\", z, n) ){",
          "994:   else if( n==2 && 0==sqlite3_strnicmp(\"id\", z, n) ){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2239:   iCsrId = sqlite3_value_int64(argv[0]);",
          "2241:   pCsr = fts5CursorFromCsrid(pAux->pGlobal, iCsrId);",
          "2243:     char *zErr = sqlite3_mprintf(\"no such cursor: %lld\", iCsrId);",
          "2244:     sqlite3_result_error(context, zErr, -1);",
          "2245:     sqlite3_free(zErr);",
          "",
          "[Removed Lines]",
          "2242:   if( pCsr==0 ){",
          "",
          "[Added Lines]",
          "2242:   if( pCsr==0 || pCsr->ePlan==0 ){",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5misc.test||ext/fts5/test/fts5misc.test": [
          "File: ext/fts5/test/fts5misc.test -> ext/fts5/test/fts5misc.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # 2019 September 02",
          "2: #",
          "3: # The author disclaims copyright to this source code.  In place of",
          "4: # a legal notice, here is a blessing:",
          "5: #",
          "6: #    May you do good and not evil.",
          "7: #    May you find forgiveness for yourself and forgive others.",
          "8: #    May you share freely, never taking more than you give.",
          "9: #",
          "10: #*************************************************************************",
          "11: # This file implements regression tests for SQLite library.  The",
          "12: # focus of this script is testing the FTS5 module.",
          "13: #",
          "15: source [file join [file dirname [info script]] fts5_common.tcl]",
          "16: set testprefix fts5misc",
          "18: # If SQLITE_ENABLE_FTS5 is not defined, omit this file.",
          "19: ifcapable !fts5 {",
          "20:   finish_test",
          "21:   return",
          "22: }",
          "24: do_execsql_test 1.0 {",
          "25:   CREATE VIRTUAL TABLE t1 USING fts5(a);",
          "26: }",
          "28: do_catchsql_test 1.1.1 {",
          "29:   SELECT highlight(t1, 4, '<b>', '</b>') FROM t1('*');",
          "30: } {1 {unknown special query: }}",
          "31: do_catchsql_test 1.1.2 {",
          "32:   SELECT a FROM t1",
          "33:     WHERE rank = (SELECT highlight(t1, 4, '<b>', '</b>') FROM t1('*'));",
          "34: } {1 {unknown special query: }}",
          "36: do_catchsql_test 1.2.1 {",
          "37:   SELECT highlight(t1, 4, '<b>', '</b>') FROM t1('*id');",
          "38: } {0 {{}}}",
          "40: do_catchsql_test 1.2.2 {",
          "41:   SELECT a FROM t1",
          "42:     WHERE rank = (SELECT highlight(t1, 4, '<b>', '</b>') FROM t1('*id'));",
          "43: } {0 {}}",
          "45: do_catchsql_test 1.3.1 {",
          "46:   SELECT highlight(t1, 4, '<b>', '</b>') FROM t1('*reads');",
          "47: } {1 {no such cursor: 1}}",
          "49: do_catchsql_test 1.3.2 {",
          "50:   SELECT a FROM t1",
          "51:     WHERE rank = (SELECT highlight(t1, 4, '<b>', '</b>') FROM t1('*reads'));",
          "52: } {1 {no such cursor: 1}}",
          "54: db close",
          "55: sqlite3 db test.db",
          "57: do_catchsql_test 1.3.3 {",
          "58:   SELECT a FROM t1",
          "59:     WHERE rank = (SELECT highlight(t1, 4, '<b>', '</b>') FROM t1('*reads'));",
          "60: } {1 {no such cursor: 1}}",
          "62: finish_test",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 88833a9c2849c959a37a80e0e4d2b211ce3c83a48319724c89b172b060c876b4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}