{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "95844451b6651fa5ad66a09f971cc139b90c63aa",
      "candidate_info": {
        "commit_hash": "95844451b6651fa5ad66a09f971cc139b90c63aa",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/95844451b6651fa5ad66a09f971cc139b90c63aa",
        "files": [
          "node.gyp",
          "src/ngx-queue.h",
          "src/node_vars.h"
        ],
        "message": "fix windows build",
        "before_after_code_files": [
          "node.gyp||node.gyp",
          "src/ngx-queue.h||src/ngx-queue.h",
          "src/node_vars.h||src/node_vars.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "node.gyp||node.gyp": [
          "File: node.gyp -> node.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:     'node_use_dtrace': 'false',",
          "9:     'node_use_openssl%': 'true',",
          "10:     'node_use_system_openssl%': 'false',",
          "11:     'library_files': [",
          "12:       'src/node.js',",
          "13:       'lib/_debugger.js',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11:     'node_use_isolates%': 'true',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:         'src/v8_typed_array.cc',",
          "95:         'src/udp_wrap.cc',",
          "96:         # headers to make for a more pleasant IDE experience",
          "97:         'src/handle_wrap.h',",
          "98:         'src/node.h',",
          "99:         'src/node_vars.h',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98:         'src/ngx-queue.h',",
          "",
          "---------------"
        ],
        "src/ngx-queue.h||src/ngx-queue.h": [
          "File: src/ngx-queue.h -> src/ngx-queue.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: #ifndef _NGX_QUEUE_H_INCLUDED_",
          "8: #define _NGX_QUEUE_H_INCLUDED_",
          "11: typedef struct ngx_queue_s  ngx_queue_t;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10: #ifdef _WIN32",
          "11: # include <stddef.h>",
          "12: #endif",
          "",
          "---------------"
        ],
        "src/node_vars.h||src/node_vars.h": [
          "File: src/node_vars.h -> src/node_vars.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: #include <uv.h>",
          "10: #include <http_parser.h>",
          "12: #ifndef PATH_MAX",
          "13: # define PATH_MAX 4096",
          "14: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: #if defined(_MSC_VER)",
          "13: # define PATH_MAX MAX_PATH",
          "14: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "39a492799dca305f330c4693765ea8a951fc0d19",
      "candidate_info": {
        "commit_hash": "39a492799dca305f330c4693765ea8a951fc0d19",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/39a492799dca305f330c4693765ea8a951fc0d19",
        "files": [
          "src/node.cc",
          "src/node_isolate.cc",
          "src/node_isolate.h"
        ],
        "message": "move thread_id to node_isolate.cc",
        "before_after_code_files": [
          "src/node.cc||src/node.cc",
          "src/node_isolate.cc||src/node_isolate.cc",
          "src/node_isolate.h||src/node_isolate.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "140: static bool print_eval;",
          "142: static void CheckStatus(uv_timer_t* watcher, int status);",
          "147:                  int argc,",
          "148:                  char** argv);",
          "",
          "[Removed Lines]",
          "143: static unsigned long NewThreadId();",
          "145: void StartThread(unsigned long thread_id,",
          "146:                  Isolate* isolate,",
          "",
          "[Added Lines]",
          "144: void StartThread(Isolate* isolate,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1851: }",
          "1871: struct ThreadInfo {",
          "1873:   uv_thread_t thread_;",
          "1874:   char** argv_;",
          "1875:   int argc_;",
          "",
          "[Removed Lines]",
          "1854: static struct {",
          "1855:   uv_mutex_t lock_;",
          "1856:   unsigned long counter_;",
          "1857: } thread_id_generator_;",
          "1860: static unsigned long NewThreadId() {",
          "1861:   unsigned long thread_id;",
          "1863:   uv_mutex_lock(&thread_id_generator_.lock_);",
          "1864:   thread_id = ++thread_id_generator_.counter_;",
          "1865:   uv_mutex_unlock(&thread_id_generator_.lock_);",
          "1867:   return thread_id;",
          "1868: }",
          "1872:   unsigned long thread_id_;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1914:   uv_loop_t* loop = uv_loop_new();",
          "1915:   Isolate* isolate = Isolate::New(loop);",
          "1918:   delete ti;",
          "1919: }",
          "",
          "[Removed Lines]",
          "1917:   StartThread(ti->thread_id_, isolate, ti->argc_, ti->argv_);",
          "",
          "[Added Lines]",
          "1897:   StartThread(isolate, ti->argc_, ti->argv_);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1931:   assert(argv->Length() >= 2);",
          "1933:   ThreadInfo* ti = new ThreadInfo(argv);",
          "1936:   if (uv_thread_create(&ti->thread_, RunIsolate, ti)) {",
          "1937:     delete ti;",
          "",
          "[Removed Lines]",
          "1934:   ti->thread_id_ = NewThreadId();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2715:                  int argc,",
          "2716:                  char** argv) {",
          "2717:   HandleScope scope;",
          "",
          "[Removed Lines]",
          "2713: void StartThread(unsigned long thread_id,",
          "2714:                  Isolate* isolate,",
          "",
          "[Added Lines]",
          "2692: void StartThread(node::Isolate* isolate,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2773:   Handle<Object> process_l = SetupProcessObject(argc, argv);",
          "2775:   process_l->Set(String::NewSymbol(\"tid\"),",
          "",
          "[Removed Lines]",
          "2776:                  Integer::NewFromUnsigned(thread_id));",
          "",
          "[Added Lines]",
          "2754:                  Integer::NewFromUnsigned(isolate->id_));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2796: int Start(int argc, char *argv[]) {",
          "2800:   argv = ProcessInit(argc, argv);",
          "",
          "[Removed Lines]",
          "2797:   if (uv_mutex_init(&thread_id_generator_.lock_)) abort();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2803:   v8::HandleScope handle_scope;",
          "2808:   isolate->Dispose();",
          "2810: #ifndef NDEBUG",
          "",
          "[Removed Lines]",
          "2806:   Isolate* isolate = Isolate::New(uv_default_loop());",
          "2807:   StartThread(NewThreadId(), isolate, argc, argv);",
          "",
          "[Added Lines]",
          "2782:   node::Isolate::Initialize();",
          "2783:   Isolate* isolate = node::Isolate::New(uv_default_loop());",
          "2784:   StartThread(isolate, argc, argv);",
          "",
          "---------------"
        ],
        "src/node_isolate.cc||src/node_isolate.cc": [
          "File: src/node_isolate.cc -> src/node_isolate.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #include <assert.h>",
          "29: namespace node {",
          "32: Isolate* Isolate::New(uv_loop_t* loop) {",
          "33:   return new Isolate(loop);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: static volatile bool initialized;",
          "33: static volatile int id;",
          "34: static uv_mutex_t id_lock;",
          "36: void Isolate::Initialize() {",
          "37:   if (!initialized) {",
          "38:     initialized = true;",
          "39:     if (uv_mutex_init(&id_lock)) abort();",
          "40:   }",
          "41: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37: Isolate::Isolate(uv_loop_t* loop) {",
          "38:   ngx_queue_init(&at_exit_callbacks_);",
          "39:   loop_ = loop;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:   assert(initialized && \"node::Isolate::Initialize() hasn't been called\");",
          "51:   uv_mutex_lock(&id_lock);",
          "52:   id_ = ++id;",
          "53:   uv_mutex_unlock(&id_lock);",
          "",
          "---------------"
        ],
        "src/node_isolate.h||src/node_isolate.h": [
          "File: src/node_isolate.h -> src/node_isolate.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: class Isolate {",
          "45: public:",
          "46:   typedef void (*AtExitCallback)(void* arg);",
          "48:   static Isolate* New(uv_loop_t* loop);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47:   static void Initialize();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "77:   struct globals* Globals();",
          "79: private:",
          "80:   Isolate(uv_loop_t* loop);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:   unsigned int id_;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a299c97bbc701f4d460e91214d7bfe7a9589d361",
      "candidate_info": {
        "commit_hash": "a299c97bbc701f4d460e91214d7bfe7a9589d361",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/a299c97bbc701f4d460e91214d7bfe7a9589d361",
        "files": [
          "AUTHORS",
          "ChangeLog",
          "src/node_version.h"
        ],
        "message": "2012.08.22, Version 0.8.8 (Stable)\n\n* V8: upgrade to 3.11.10.19\n\n* npm: upgrade to 1.1.59\n\n* windows: fix uninitialized memory access in uv_update_time() (Bert Belder)\n\n* unix, windows: fix memory corruption in fs-poll.c (Ben Noordhuis)\n\n* unix: fix integer overflow in uv_hrtime (Tim Holy)\n\n* sunos: fix uv_cpu_info() on x86_64 (Ben Noordhuis)\n\n* tls: update default cipher list (Ben Noordhuis)\n\n* unix: Fix llvm and older gcc duplicate symbol warnings (Bert Belder)\n\n* fs: fix use after free in stat watcher (Ben Noordhuis)\n\n* build: Fix using manually compiled gcc on OS X (Nathan Rajlich)\n\n* windows: make junctions work again (Bert Belder)",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #define NODE_MAJOR_VERSION 0",
          "26: #define NODE_MINOR_VERSION 8",
          "27: #define NODE_PATCH_VERSION 8",
          "30: #ifndef NODE_STRINGIFY",
          "31: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "28: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "[Added Lines]",
          "28: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6ed5ef5fe0201b99967d391bda1b5da389ae138a",
      "candidate_info": {
        "commit_hash": "6ed5ef5fe0201b99967d391bda1b5da389ae138a",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/6ed5ef5fe0201b99967d391bda1b5da389ae138a",
        "files": [
          "deps/v8/build/common.gypi",
          "deps/v8/src/bootstrapper.cc",
          "deps/v8/src/debug.cc",
          "deps/v8/src/execution.cc",
          "deps/v8/src/flag-definitions.h",
          "deps/v8/src/hydrogen.cc",
          "deps/v8/src/version.cc",
          "deps/v8/test/mjsunit/regress/regress-119429.js"
        ],
        "message": "Upgrade V8 to 3.9.24.9",
        "before_after_code_files": [
          "deps/v8/build/common.gypi||deps/v8/build/common.gypi",
          "deps/v8/src/bootstrapper.cc||deps/v8/src/bootstrapper.cc",
          "deps/v8/src/debug.cc||deps/v8/src/debug.cc",
          "deps/v8/src/execution.cc||deps/v8/src/execution.cc",
          "deps/v8/src/flag-definitions.h||deps/v8/src/flag-definitions.h",
          "deps/v8/src/hydrogen.cc||deps/v8/src/hydrogen.cc",
          "deps/v8/src/version.cc||deps/v8/src/version.cc",
          "deps/v8/test/mjsunit/regress/regress-119429.js||deps/v8/test/mjsunit/regress/regress-119429.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/build/common.gypi||deps/v8/build/common.gypi": [
          "File: deps/v8/build/common.gypi -> deps/v8/build/common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "314:             'cflags': [ '-I/usr/pkg/include' ],",
          "315:           }],",
          "316:           ['OS==\"linux\" or OS==\"freebsd\" or OS==\"openbsd\" or OS==\"netbsd\"', {",
          "318:                         '-Wnon-virtual-dtor', '-Woverloaded-virtual' ],",
          "319:           }],",
          "320:         ],",
          "",
          "[Removed Lines]",
          "317:             'cflags': [ '-Wno-unused-parameter',",
          "",
          "[Added Lines]",
          "317:             'cflags': [ '-Wall', '<(werror)', '-W', '-Wno-unused-parameter',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "361:           }],  # OS==\"mac\"",
          "362:           ['OS==\"win\"', {",
          "363:             'msvs_configuration_attributes': {",
          "364:               'IntermediateDirectory': '$(OutDir)\\\\obj\\\\$(ProjectName)',",
          "365:               'CharacterSet': '1',",
          "366:             },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "364:               'OutputDirectory': '<(DEPTH)\\\\build\\\\$(ConfigurationName)',",
          "",
          "---------------"
        ],
        "deps/v8/src/bootstrapper.cc||deps/v8/src/bootstrapper.cc": [
          "File: deps/v8/src/bootstrapper.cc -> deps/v8/src/bootstrapper.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1301: #ifdef ENABLE_DEBUGGER_SUPPORT",
          "1302:   isolate->debugger()->set_compiling_natives(true);",
          "1303: #endif",
          "1304:   bool result = CompileScriptCached(name,",
          "1305:                                     source,",
          "1306:                                     NULL,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1307:   StackLimitCheck check(Isolate::Current());",
          "1308:   if (check.HasOverflowed()) return false;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2289:   HandleScope scope;",
          "2290:   SaveContext saved_context(isolate);",
          "2292:   Handle<Context> new_context = Snapshot::NewContextFromSnapshot();",
          "2293:   if (!new_context.is_null()) {",
          "2294:     global_context_ =",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2301:   StackLimitCheck check(Isolate::Current());",
          "2302:   if (check.HasOverflowed()) return;",
          "",
          "---------------"
        ],
        "deps/v8/src/debug.cc||deps/v8/src/debug.cc": [
          "File: deps/v8/src/debug.cc -> deps/v8/src/debug.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "767:   Handle<JSFunction> function =",
          "768:       factory->NewFunctionFromSharedFunctionInfo(function_info, context);",
          "774:   if (caught_exception) {",
          "775:     Handle<Object> message = MessageHandler::MakeMessageObject(",
          "778:     MessageHandler::ReportMessage(Isolate::Current(), NULL, message);",
          "779:     return false;",
          "780:   }",
          "",
          "[Removed Lines]",
          "770:   Execution::TryCall(function, Handle<Object>(context->global()),",
          "771:                      0, NULL, &caught_exception);",
          "776:         \"error_loading_debugger\", NULL, Vector<Handle<Object> >::empty(),",
          "777:         Handle<String>(), Handle<JSArray>());",
          "",
          "[Added Lines]",
          "770:   Handle<Object> exception =",
          "771:       Execution::TryCall(function, Handle<Object>(context->global()),",
          "772:                          0, NULL, &caught_exception);",
          "776:     ASSERT(!isolate->has_pending_exception());",
          "777:     MessageLocation computed_location;",
          "778:     isolate->ComputeLocation(&computed_location);",
          "780:         \"error_loading_debugger\", &computed_location,",
          "781:         Vector<Handle<Object> >::empty(), Handle<String>(), Handle<JSArray>());",
          "782:     ASSERT(!isolate->has_pending_exception());",
          "783:     isolate->set_pending_exception(*exception);",
          "785:     isolate->clear_pending_exception();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "813:           v8::Handle<ObjectTemplate>(),",
          "814:           NULL);",
          "817:   SaveContext save(isolate_);",
          "818:   isolate_->set_context(*context);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "824:   if (context.is_null()) return false;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3239:   debug->SetBreak(break_frame_id_, break_id_);",
          "",
          "[Removed Lines]",
          "3242:   if (prev_ == NULL) {",
          "",
          "[Added Lines]",
          "3252:   if (!load_failed_ && prev_ == NULL) {",
          "",
          "---------------"
        ],
        "deps/v8/src/execution.cc||deps/v8/src/execution.cc": [
          "File: deps/v8/src/execution.cc -> deps/v8/src/execution.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "826:     return isolate->heap()->undefined_value();",
          "827:   }",
          "829:   {",
          "830:     JavaScriptFrameIterator it(isolate);",
          "831:     ASSERT(!it.done());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "829:   StackLimitCheck check(isolate);",
          "830:   if (check.HasOverflowed()) {",
          "831:     return isolate->heap()->undefined_value();",
          "832:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "863:   isolate->stack_guard()->Continue(DEBUGCOMMAND);",
          "865:   HandleScope scope(isolate);",
          "867:   EnterDebugger debugger;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "870:   StackLimitCheck check(isolate);",
          "871:   if (check.HasOverflowed()) {",
          "872:     return;",
          "873:   }",
          "",
          "---------------"
        ],
        "deps/v8/src/flag-definitions.h||deps/v8/src/flag-definitions.h": [
          "File: deps/v8/src/flag-definitions.h -> deps/v8/src/flag-definitions.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "310: DEFINE_bool(break_on_abort, true, \"always cause a debug break before aborting\")",
          "314:            \"default size of stack region v8 is allowed to use (in kBytes)\")",
          "",
          "[Removed Lines]",
          "313: DEFINE_int(stack_size, kPointerSize * 128,",
          "",
          "[Added Lines]",
          "315: DEFINE_int(stack_size, kPointerSize * 123,",
          "",
          "---------------"
        ],
        "deps/v8/src/hydrogen.cc||deps/v8/src/hydrogen.cc": [
          "File: deps/v8/src/hydrogen.cc -> deps/v8/src/hydrogen.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2454:       Bailout(\"function with illegal redeclaration\");",
          "2455:       return NULL;",
          "2456:     }",
          "2457:     SetUpScope(scope);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2457:     if (scope->calls_eval()) {",
          "2458:       Bailout(\"function calls eval\");",
          "2459:       return NULL;",
          "2460:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5865:     VariableProxy* proxy = expr->expression()->AsVariableProxy();",
          "5866:     bool global_call = proxy != NULL && proxy->var()->IsUnallocated();",
          "5868:     if (global_call) {",
          "5869:       Variable* var = proxy->var();",
          "5870:       bool known_global_function = false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5872:     if (proxy != NULL && proxy->var()->is_possibly_eval()) {",
          "5873:       return Bailout(\"possible direct call to eval\");",
          "5874:     }",
          "",
          "---------------"
        ],
        "deps/v8/src/version.cc||deps/v8/src/version.cc": [
          "File: deps/v8/src/version.cc -> deps/v8/src/version.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #define MAJOR_VERSION     3",
          "36: #define MINOR_VERSION     9",
          "37: #define BUILD_NUMBER      24",
          "41: #define IS_CANDIDATE_VERSION 0",
          "",
          "[Removed Lines]",
          "38: #define PATCH_LEVEL       7",
          "",
          "[Added Lines]",
          "38: #define PATCH_LEVEL       9",
          "",
          "---------------"
        ],
        "deps/v8/test/mjsunit/regress/regress-119429.js||deps/v8/test/mjsunit/regress/regress-119429.js": [
          "File: deps/v8/test/mjsunit/regress/regress-119429.js -> deps/v8/test/mjsunit/regress/regress-119429.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: var d = 0;",
          "31: function recurse() {",
          "32:   if (++d == 25135) { // A magic number just below stack overflow  on ia32",
          "33:     %DebugBreak();",
          "34:   }",
          "35:   recurse();",
          "36: }",
          "37: assertThrows(function() { recurse();} );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bb675baaa985d5f56d8e5936da9b356ec4a57f11",
      "candidate_info": {
        "commit_hash": "bb675baaa985d5f56d8e5936da9b356ec4a57f11",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/bb675baaa985d5f56d8e5936da9b356ec4a57f11",
        "files": [
          "lib/net.js"
        ],
        "message": "net.js: don't pretend that everything is okay when unwrapping fails\n\nIn case of an UNWRAP failure, the binding returns -1, which is truthy.",
        "before_after_code_files": [
          "lib/net.js||linet.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/net.js||linet.js": [
          "File: lib/net.js -> linet.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "513:   var writeReq = this._handle.write(data);",
          "516:     this._destroy(errnoException(errno, 'write'), cb);",
          "517:     return false;",
          "518:   }",
          "",
          "[Removed Lines]",
          "515:   if (!writeReq) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}