{
  "cve_id": "CVE-2019-19880",
  "cve_desc": "exprListAppendList in window.c in SQLite 3.30.1 allows attackers to trigger an invalid pointer dereference because constant integer values in ORDER BY clauses of window definitions are mishandled.",
  "repo": "sqlite/sqlite",
  "patch_hash": "75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
  "patch_info": {
    "commit_hash": "75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/window.c"
    ],
    "message": "When processing constant integer values in ORDER BY clauses of window definitions (see check-in [7e4809eadfe99ebf]) be sure to fully disable the constant value to avoid an invalid pointer dereference if the expression is ever duplicated. This fixes a crash report from Yongheng and Rui.\n\nFossilOrigin-Name: 1ca0bd982ab1183bbafce0d260e4dceda5eb766ed2e7793374a88d1ae0bdd2ca",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/window.c||src/window.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 8223e79f987feda5c8e51ec52cec6798cca16d070b10558939e2888ca1a25b8e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/window.c||src/window.c": [
      "File: src/window.c -> src/window.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "895:     int nInit = pList ? pList->nExpr : 0;",
      "896:     for(i=0; i<pAppend->nExpr; i++){",
      "897:       Expr *pDup = sqlite3ExprDup(pParse->db, pAppend->a[i].pExpr, 0);",
      "898:       if( bIntToNull && pDup && pDup->op==TK_INTEGER ){",
      "899:         pDup->op = TK_NULL;",
      "900:         pDup->flags &= ~(EP_IntValue|EP_IsTrue|EP_IsFalse);",
      "901:       }",
      "902:       pList = sqlite3ExprListAppend(pParse, pList, pDup);",
      "903:       if( pList ) pList->a[nInit+i].sortFlags = pAppend->a[i].sortFlags;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "898:       assert( pDup==0 || !ExprHasProperty(pDup, EP_MemToken) );",
      "902:         pDup->u.zToken = 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "55b4c827fae95c394729c6968605863f5ce9eac5",
      "candidate_info": {
        "commit_hash": "55b4c827fae95c394729c6968605863f5ce9eac5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/55b4c827fae95c394729c6968605863f5ce9eac5",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/sqliteInt.h",
          "src/treeview.c",
          "src/where.c"
        ],
        "message": "In the \".wheretrace 0x100\" debugging mode, show the structure of the main parameters to sqlite3WhereBegin() calls.\n\nFossilOrigin-Name: fd598e475d353363e19adc27a671170f11ae9f6d8cad58cb2303fb2ad8ac6bec",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/treeview.c||src/treeview.c",
          "src/where.c||src/where.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 2660e9292ae2c229eb7c57a6a79bb19f0c970072f86750fbe9cca3113d44ffe4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h"
        ],
        "src/treeview.c||src/treeview.c": [
          "File: src/treeview.c -> src/treeview.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "176:     sqlite3TreeViewPush(pView, 1);",
          "177:   }",
          "178:   do{",
          "186:     if( cnt++ ) sqlite3TreeViewPop(pView);",
          "187:     if( p->pPrior ){",
          "188:       n = 1000;",
          "",
          "[Removed Lines]",
          "179:     sqlite3TreeViewLine(pView,",
          "180:       \"SELECT%s%s (%u/%p) selFlags=0x%x nSelectRow=%d\",",
          "181:       ((p->selFlags & SF_Distinct) ? \" DISTINCT\" : \"\"),",
          "182:       ((p->selFlags & SF_Aggregate) ? \" agg_flag\" : \"\"),",
          "183:       p->selId, p, p->selFlags,",
          "184:       (int)p->nSelectRow",
          "185:     );",
          "",
          "[Added Lines]",
          "179:     if( p->selFlags & SF_WhereBegin ){",
          "180:       sqlite3TreeViewLine(pView, \"sqlite3WhereBegin()\");",
          "181:     }else{",
          "182:       sqlite3TreeViewLine(pView,",
          "183:         \"SELECT%s%s (%u/%p) selFlags=0x%x nSelectRow=%d\",",
          "184:         ((p->selFlags & SF_Distinct) ? \" DISTINCT\" : \"\"),",
          "185:         ((p->selFlags & SF_Aggregate) ? \" agg_flag\" : \"\"),",
          "186:         p->selId, p, p->selFlags,",
          "187:         (int)p->nSelectRow",
          "188:       );",
          "189:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "199:       if( p->pWinDefn ) n++;",
          "200: #endif",
          "201:     }",
          "203: #ifndef SQLITE_OMIT_WINDOWFUNC",
          "204:     if( p->pWin ){",
          "205:       Window *pX;",
          "",
          "[Removed Lines]",
          "202:     sqlite3TreeViewExprList(pView, p->pEList, (n--)>0, \"result-set\");",
          "",
          "[Added Lines]",
          "206:     if( p->pEList ){",
          "207:       sqlite3TreeViewExprList(pView, p->pEList, n>0, \"result-set\");",
          "208:     }",
          "209:     n--;",
          "",
          "---------------"
        ],
        "src/where.c||src/where.c": [
          "File: src/where.c -> src/where.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4769:       sqlite3DebugPrintf(\", limit: %d\", iAuxArg);",
          "4770:     }",
          "4771:     sqlite3DebugPrintf(\")\\n\");",
          "4772:   }",
          "4774:     sqlite3WhereClausePrint(sWLB.pWC);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4772:     if( sqlite3WhereTrace & 0x100 ){",
          "4773:       Select sSelect;",
          "4774:       memset(&sSelect, 0, sizeof(sSelect));",
          "4775:       sSelect.selFlags = SF_WhereBegin;",
          "4776:       sSelect.pSrc = pTabList;",
          "4777:       sSelect.pWhere = pWhere;",
          "4778:       sSelect.pOrderBy = pOrderBy;",
          "4779:       sSelect.pEList = pResultSet;",
          "4780:       sqlite3TreeViewSelect(0, &sSelect, 0);",
          "4781:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "915e434c3547b250b60ac37eea9276888cd8605f",
      "candidate_info": {
        "commit_hash": "915e434c3547b250b60ac37eea9276888cd8605f",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/915e434c3547b250b60ac37eea9276888cd8605f",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c"
        ],
        "message": "Performance optimization to the new affinity handling logic.\n\nFossilOrigin-Name: c9724e761bce7a4ae63ce3c1408795915865e8d3024dcb90690456f724f0df53",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e8234f6939ccff4c10f741cf66d1c537cfebcbd0d1d79a618a64c755a7f087b5",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "239:     }else{",
          "240:       return SQLITE_AFF_BLOB;",
          "241:     }",
          "247:   }else{",
          "249:     assert( aff1<=SQLITE_AFF_NONE || aff2<=SQLITE_AFF_NONE );",
          "",
          "[Removed Lines]",
          "242:   }else if( aff1<=SQLITE_AFF_NONE && aff2<=SQLITE_AFF_NONE ){",
          "246:     return SQLITE_AFF_BLOB;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "281: int sqlite3IndexAffinityOk(Expr *pExpr, char idx_affinity){",
          "282:   char aff = comparisonAffinity(pExpr);",
          "290:   }",
          "291: }",
          "",
          "[Removed Lines]",
          "283:   switch( aff ){",
          "284:     case SQLITE_AFF_BLOB:",
          "285:       return 1;",
          "286:     case SQLITE_AFF_TEXT:",
          "287:       return idx_affinity==SQLITE_AFF_TEXT;",
          "288:     default:",
          "289:       return sqlite3IsNumericAffinity(idx_affinity);",
          "",
          "[Added Lines]",
          "278:   if( aff<SQLITE_AFF_TEXT ){",
          "279:     return 1;",
          "280:   }",
          "281:   if( aff==SQLITE_AFF_TEXT ){",
          "282:     return idx_affinity==SQLITE_AFF_TEXT;",
          "284:   return sqlite3IsNumericAffinity(idx_affinity);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "acd6bb5fe4667730463d5e434b6c14999257e02c",
      "candidate_info": {
        "commit_hash": "acd6bb5fe4667730463d5e434b6c14999257e02c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/acd6bb5fe4667730463d5e434b6c14999257e02c",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/sqliteInt.h"
        ],
        "message": "Improvements to the automatic compile-time selection of byte-order, as suggested on the mailing list by Seb Kemper.\n\nFossilOrigin-Name: b7aad929619f7043b1685a6477d50f6b4436e85511eb365eceae3dd4dbab571a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/sqliteInt.h||src/sqliteInt.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3e1b55f3ab85710ed81574904718205c7370b5f0b5a41029e961486d2e3f37c7",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "832: #ifndef SQLITE_BYTEORDER",
          "837: #   define SQLITE_BYTEORDER    1234",
          "839: #   define SQLITE_BYTEORDER    4321",
          "840: # else",
          "841: #   define SQLITE_BYTEORDER 0",
          "",
          "[Removed Lines]",
          "833: # if defined(i386)     || defined(__i386__)   || defined(_M_IX86) ||    \\",
          "834:      defined(__x86_64) || defined(__x86_64__) || defined(_M_X64)  ||    \\",
          "835:      defined(_M_AMD64) || defined(_M_ARM)     || defined(__x86)   ||    \\",
          "836:      defined(__arm__)  || defined(_M_ARM64)",
          "838: # elif defined(sparc)    || defined(__ppc__)",
          "",
          "[Added Lines]",
          "833: # if defined(i386)      || defined(__i386__)      || defined(_M_IX86) ||    \\",
          "834:      defined(__x86_64)  || defined(__x86_64__)    || defined(_M_X64)  ||    \\",
          "835:      defined(_M_AMD64)  || defined(_M_ARM)        || defined(__x86)   ||    \\",
          "836:      defined(__ARMEL__) || defined(__AARCH64EL__) || defined(_M_ARM64)",
          "838: # elif defined(sparc)     || defined(__ppc__) || \\",
          "839:        defined(__ARMEB__) || defined(__AARCH64EB__)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d86fe44ab5a442a065935cb8b11a138b238dcf4b",
      "candidate_info": {
        "commit_hash": "d86fe44ab5a442a065935cb8b11a138b238dcf4b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d86fe44ab5a442a065935cb8b11a138b238dcf4b",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c"
        ],
        "message": "Fix typo in a comment.  No code changes.\n\nFossilOrigin-Name: d0cc06d8a30444125e5655f6587a6355471c3447c08a2e5f7a046a4ed5cc5f09",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9690013a00d73a8047b25149ded50d20c74b5c62c0725eec50ed8477688e58a0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c"
        ]
      }
    },
    {
      "candidate_hash": "f71a243a608acd56e1bf3c71abd1a3b62e9a40cf",
      "candidate_info": {
        "commit_hash": "f71a243a608acd56e1bf3c71abd1a3b62e9a40cf",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f71a243a608acd56e1bf3c71abd1a3b62e9a40cf",
        "files": [
          "Makefile.msc",
          "autoconf/Makefile.msc",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Sync up warning related compiler options in the Makefiles for MSVC.\n\nFossilOrigin-Name: e77d48d1dd140967b18106044dd45e2ba6cd77b6aa5afa8bf3f0a9c16a50eec4",
        "before_after_code_files": [
          "Makefile.msc||Makefile.msc",
          "autoconf/Makefile.msc||autoconf/Makefile.msc",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.msc||Makefile.msc": [
          "File: Makefile.msc -> Makefile.msc",
          "--- Hunk 1 ---",
          "[Context before]",
          "73: !IFNDEF NO_WARN",
          "74: !IF $(USE_FULLWARN)!=0",
          "75: NO_WARN = -wd4054 -wd4055 -wd4100 -wd4127 -wd4130 -wd4152 -wd4189 -wd4206",
          "77: !ENDIF",
          "78: !ENDIF",
          "",
          "[Removed Lines]",
          "76: NO_WARN = $(NO_WARN) -wd4210 -wd4232 -wd4305 -wd4306 -wd4702 -wd4706",
          "",
          "[Added Lines]",
          "76: NO_WARN = $(NO_WARN) -wd4210 -wd4232 -wd4244 -wd4305 -wd4306 -wd4702 -wd4706",
          "",
          "---------------"
        ],
        "autoconf/Makefile.msc||autoconf/Makefile.msc": [
          "File: autoconf/Makefile.msc -> autoconf/Makefile.msc",
          "--- Hunk 1 ---",
          "[Context before]",
          "73: !IFNDEF NO_WARN",
          "74: !IF $(USE_FULLWARN)!=0",
          "75: NO_WARN = -wd4054 -wd4055 -wd4100 -wd4127 -wd4130 -wd4152 -wd4189 -wd4206",
          "77: !ENDIF",
          "78: !ENDIF",
          "",
          "[Removed Lines]",
          "76: NO_WARN = $(NO_WARN) -wd4210 -wd4232 -wd4305 -wd4306 -wd4702 -wd4706",
          "",
          "[Added Lines]",
          "76: NO_WARN = $(NO_WARN) -wd4210 -wd4232 -wd4244 -wd4305 -wd4306 -wd4702 -wd4706",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 857b2ba6d05d6f5a8cfdf269bae9005b25e1903ab9dc6b70546979d8c633f03b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}