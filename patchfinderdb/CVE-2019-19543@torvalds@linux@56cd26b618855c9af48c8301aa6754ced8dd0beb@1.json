{
  "cve_id": "CVE-2019-19543",
  "cve_desc": "In the Linux kernel before 5.1.6, there is a use-after-free in serial_ir_init_module() in drivers/media/rc/serial_ir.c.",
  "repo": "torvalds/linux",
  "patch_hash": "56cd26b618855c9af48c8301aa6754ced8dd0beb",
  "patch_info": {
    "commit_hash": "56cd26b618855c9af48c8301aa6754ced8dd0beb",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/56cd26b618855c9af48c8301aa6754ced8dd0beb",
    "files": [
      "drivers/media/rc/serial_ir.c"
    ],
    "message": "media: serial_ir: Fix use-after-free in serial_ir_init_module\n\nSyzkaller report this:\n\nBUG: KASAN: use-after-free in sysfs_remove_file_ns+0x5f/0x70 fs/sysfs/file.c:468\nRead of size 8 at addr ffff8881dc7ae030 by task syz-executor.0/6249\n\nCPU: 1 PID: 6249 Comm: syz-executor.0 Not tainted 5.0.0-rc8+ #3\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014\nCall Trace:\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0xfa/0x1ce lib/dump_stack.c:113\n print_address_description+0x65/0x270 mm/kasan/report.c:187\n kasan_report+0x149/0x18d mm/kasan/report.c:317\n ? 0xffffffffc1728000\n sysfs_remove_file_ns+0x5f/0x70 fs/sysfs/file.c:468\n sysfs_remove_file include/linux/sysfs.h:519 [inline]\n driver_remove_file+0x40/0x50 drivers/base/driver.c:122\n remove_bind_files drivers/base/bus.c:585 [inline]\n bus_remove_driver+0x186/0x220 drivers/base/bus.c:725\n driver_unregister+0x6c/0xa0 drivers/base/driver.c:197\n serial_ir_init_module+0x169/0x1000 [serial_ir]\n do_one_initcall+0xfa/0x5ca init/main.c:887\n do_init_module+0x204/0x5f6 kernel/module.c:3460\n load_module+0x66b2/0x8570 kernel/module.c:3808\n __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\nRIP: 0033:0x462e99\nCode: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f9450132c58 EFLAGS: 00000246 ORIG_RAX: 0000000000000139\nRAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462e99\nRDX: 0000000000000000 RSI: 0000000020000100 RDI: 0000000000000003\nRBP: 00007f9450132c70 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007f94501336bc\nR13: 00000000004bcefa R14: 00000000006f6fb0 R15: 0000000000000004\n\nAllocated by task 6249:\n set_track mm/kasan/common.c:85 [inline]\n __kasan_kmalloc.constprop.3+0xa0/0xd0 mm/kasan/common.c:495\n kmalloc include/linux/slab.h:545 [inline]\n kzalloc include/linux/slab.h:740 [inline]\n bus_add_driver+0xc0/0x610 drivers/base/bus.c:651\n driver_register+0x1bb/0x3f0 drivers/base/driver.c:170\n serial_ir_init_module+0xe8/0x1000 [serial_ir]\n do_one_initcall+0xfa/0x5ca init/main.c:887\n do_init_module+0x204/0x5f6 kernel/module.c:3460\n load_module+0x66b2/0x8570 kernel/module.c:3808\n __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nFreed by task 6249:\n set_track mm/kasan/common.c:85 [inline]\n __kasan_slab_free+0x130/0x180 mm/kasan/common.c:457\n slab_free_hook mm/slub.c:1430 [inline]\n slab_free_freelist_hook mm/slub.c:1457 [inline]\n slab_free mm/slub.c:3005 [inline]\n kfree+0xe1/0x270 mm/slub.c:3957\n kobject_cleanup lib/kobject.c:662 [inline]\n kobject_release lib/kobject.c:691 [inline]\n kref_put include/linux/kref.h:67 [inline]\n kobject_put+0x146/0x240 lib/kobject.c:708\n bus_remove_driver+0x10e/0x220 drivers/base/bus.c:732\n driver_unregister+0x6c/0xa0 drivers/base/driver.c:197\n serial_ir_init_module+0x14c/0x1000 [serial_ir]\n do_one_initcall+0xfa/0x5ca init/main.c:887\n do_init_module+0x204/0x5f6 kernel/module.c:3460\n load_module+0x66b2/0x8570 kernel/module.c:3808\n __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nThe buggy address belongs to the object at ffff8881dc7ae000\n which belongs to the cache kmalloc-256 of size 256\nThe buggy address is located 48 bytes inside of\n 256-byte region [ffff8881dc7ae000, ffff8881dc7ae100)\nThe buggy address belongs to the page:\npage:ffffea000771eb80 count:1 mapcount:0 mapping:ffff8881f6c02e00 index:0x0\nflags: 0x2fffc0000000200(slab)\nraw: 02fffc0000000200 ffffea0007d14800 0000000400000002 ffff8881f6c02e00\nraw: 0000000000000000 00000000800c000c 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n ffff8881dc7adf00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n ffff8881dc7adf80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n>ffff8881dc7ae000: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n                                     ^\n ffff8881dc7ae080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n ffff8881dc7ae100: fc fc fc fc fc fc fc fc 00 00 00 00 00 00 00 00\n\nThere are already cleanup handlings in serial_ir_init error path,\nno need to call serial_ir_exit do it again in serial_ir_init_module,\notherwise will trigger a use-after-free issue.\n\nFixes: fa5dc29c1fcc (\"[media] lirc_serial: move out of staging and rename to serial_ir\")\n\nReported-by: Hulk Robot <hulkci@huawei.com>\nSigned-off-by: YueHaibing <yuehaibing@huawei.com>\nSigned-off-by: Sean Young <sean@mess.org>\nSigned-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>",
    "before_after_code_files": [
      "drivers/media/rc/serial_ir.c||drivers/media/rc/serial_ir.c"
    ]
  },
  "patch_diff": {
    "drivers/media/rc/serial_ir.c||drivers/media/rc/serial_ir.c": [
      "File: drivers/media/rc/serial_ir.c -> drivers/media/rc/serial_ir.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "774: static int __init serial_ir_init_module(void)",
      "775: {",
      "778:  switch (type) {",
      "779:  case IR_HOMEBREW:",
      "780:  case IR_IRDEO:",
      "",
      "[Removed Lines]",
      "776:  int result;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "802:  if (sense != -1)",
      "803:   sense = !!sense;",
      "811: }",
      "813: static void __exit serial_ir_exit_module(void)",
      "",
      "[Removed Lines]",
      "805:  result = serial_ir_init();",
      "806:  if (!result)",
      "807:   return 0;",
      "809:  serial_ir_exit();",
      "810:  return result;",
      "",
      "[Added Lines]",
      "803:  return serial_ir_init();",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a6ecfb11bf37743c1ac49b266595582b107b61d4",
      "candidate_info": {
        "commit_hash": "a6ecfb11bf37743c1ac49b266595582b107b61d4",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/a6ecfb11bf37743c1ac49b266595582b107b61d4",
        "files": [
          "arch/arm/include/asm/kvm_mmu.h",
          "arch/arm64/include/asm/kvm_mmu.h",
          "virt/kvm/arm/vgic/vgic-its.c",
          "virt/kvm/arm/vgic/vgic-v3.c"
        ],
        "message": "KVM: arm/arm64: vgic-its: Take the srcu lock when writing to guest memory\n\nWhen halting a guest, QEMU flushes the virtual ITS caches, which\namounts to writing to the various tables that the guest has allocated.\n\nWhen doing this, we fail to take the srcu lock, and the kernel\nshouts loudly if running a lockdep kernel:\n\n[   69.680416] =============================\n[   69.680819] WARNING: suspicious RCU usage\n[   69.681526] 5.1.0-rc1-00008-g600025238f51-dirty #18 Not tainted\n[   69.682096] -----------------------------\n[   69.682501] ./include/linux/kvm_host.h:605 suspicious rcu_dereference_check() usage!\n[   69.683225]\n[   69.683225] other info that might help us debug this:\n[   69.683225]\n[   69.683975]\n[   69.683975] rcu_scheduler_active = 2, debug_locks = 1\n[   69.684598] 6 locks held by qemu-system-aar/4097:\n[   69.685059]  #0: 0000000034196013 (&kvm->lock){+.+.}, at: vgic_its_set_attr+0x244/0x3a0\n[   69.686087]  #1: 00000000f2ed935e (&its->its_lock){+.+.}, at: vgic_its_set_attr+0x250/0x3a0\n[   69.686919]  #2: 000000005e71ea54 (&vcpu->mutex){+.+.}, at: lock_all_vcpus+0x64/0xd0\n[   69.687698]  #3: 00000000c17e548d (&vcpu->mutex){+.+.}, at: lock_all_vcpus+0x64/0xd0\n[   69.688475]  #4: 00000000ba386017 (&vcpu->mutex){+.+.}, at: lock_all_vcpus+0x64/0xd0\n[   69.689978]  #5: 00000000c2c3c335 (&vcpu->mutex){+.+.}, at: lock_all_vcpus+0x64/0xd0\n[   69.690729]\n[   69.690729] stack backtrace:\n[   69.691151] CPU: 2 PID: 4097 Comm: qemu-system-aar Not tainted 5.1.0-rc1-00008-g600025238f51-dirty #18\n[   69.691984] Hardware name: rockchip evb_rk3399/evb_rk3399, BIOS 2019.04-rc3-00124-g2feec69fb1 03/15/2019\n[   69.692831] Call trace:\n[   69.694072]  lockdep_rcu_suspicious+0xcc/0x110\n[   69.694490]  gfn_to_memslot+0x174/0x190\n[   69.694853]  kvm_write_guest+0x50/0xb0\n[   69.695209]  vgic_its_save_tables_v0+0x248/0x330\n[   69.695639]  vgic_its_set_attr+0x298/0x3a0\n[   69.696024]  kvm_device_ioctl_attr+0x9c/0xd8\n[   69.696424]  kvm_device_ioctl+0x8c/0xf8\n[   69.696788]  do_vfs_ioctl+0xc8/0x960\n[   69.697128]  ksys_ioctl+0x8c/0xa0\n[   69.697445]  __arm64_sys_ioctl+0x28/0x38\n[   69.697817]  el0_svc_common+0xd8/0x138\n[   69.698173]  el0_svc_handler+0x38/0x78\n[   69.698528]  el0_svc+0x8/0xc\n\nThe fix is to obviously take the srcu lock, just like we do on the\nread side of things since bf308242ab98. One wonders why this wasn't\nfixed at the same time, but hey...\n\nFixes: bf308242ab98 (\"KVM: arm/arm64: VGIC/ITS: protect kvm_read_guest() calls with SRCU lock\")\nSigned-off-by: Marc Zyngier <marc.zyngier@arm.com>",
        "before_after_code_files": [
          "arch/arm/include/asm/kvm_mmu.h||arch/arm/include/asm/kvm_mmu.h",
          "arch/arm64/include/asm/kvm_mmu.h||arch/arm64/include/asm/kvm_mmu.h",
          "virt/kvm/arm/vgic/vgic-its.c||virt/kvm/arm/vgic/vgic-its.c",
          "virt/kvm/arm/vgic/vgic-v3.c||virt/kvm/arm/vgic/vgic-v3.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/arm/include/asm/kvm_mmu.h||arch/arm/include/asm/kvm_mmu.h": [
          "File: arch/arm/include/asm/kvm_mmu.h -> arch/arm/include/asm/kvm_mmu.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "381:  return ret;",
          "382: }",
          "384: static inline void *kvm_get_hyp_vector(void)",
          "385: {",
          "386:  switch(read_cpuid_part()) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "384: static inline int kvm_write_guest_lock(struct kvm *kvm, gpa_t gpa,",
          "385:            const void *data, unsigned long len)",
          "386: {",
          "387:  int srcu_idx = srcu_read_lock(&kvm->srcu);",
          "388:  int ret = kvm_write_guest(kvm, gpa, data, len);",
          "390:  srcu_read_unlock(&kvm->srcu, srcu_idx);",
          "392:  return ret;",
          "393: }",
          "",
          "---------------"
        ],
        "arch/arm64/include/asm/kvm_mmu.h||arch/arm64/include/asm/kvm_mmu.h": [
          "File: arch/arm64/include/asm/kvm_mmu.h -> arch/arm64/include/asm/kvm_mmu.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "445:  return ret;",
          "446: }",
          "448: #ifdef CONFIG_KVM_INDIRECT_VECTORS",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "448: static inline int kvm_write_guest_lock(struct kvm *kvm, gpa_t gpa,",
          "449:            const void *data, unsigned long len)",
          "450: {",
          "451:  int srcu_idx = srcu_read_lock(&kvm->srcu);",
          "452:  int ret = kvm_write_guest(kvm, gpa, data, len);",
          "454:  srcu_read_unlock(&kvm->srcu, srcu_idx);",
          "456:  return ret;",
          "457: }",
          "",
          "---------------"
        ],
        "virt/kvm/arm/vgic/vgic-its.c||virt/kvm/arm/vgic/vgic-its.c": [
          "File: virt/kvm/arm/vgic/vgic-its.c -> virt/kvm/arm/vgic/vgic-its.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1919:         ((u64)ite->irq->intid << KVM_ITS_ITE_PINTID_SHIFT) |",
          "1920:   ite->collection->collection_id;",
          "1921:  val = cpu_to_le64(val);",
          "1923: }",
          "",
          "[Removed Lines]",
          "1922:  return kvm_write_guest(kvm, gpa, &val, ite_esz);",
          "",
          "[Added Lines]",
          "1922:  return kvm_write_guest_lock(kvm, gpa, &val, ite_esz);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2066:         (itt_addr_field << KVM_ITS_DTE_ITTADDR_SHIFT) |",
          "2067:   (dev->num_eventid_bits - 1));",
          "2068:  val = cpu_to_le64(val);",
          "2070: }",
          "",
          "[Removed Lines]",
          "2069:  return kvm_write_guest(kvm, ptr, &val, dte_esz);",
          "",
          "[Added Lines]",
          "2069:  return kvm_write_guest_lock(kvm, ptr, &val, dte_esz);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2246:         ((u64)collection->target_addr << KVM_ITS_CTE_RDBASE_SHIFT) |",
          "2247:         collection->collection_id);",
          "2248:  val = cpu_to_le64(val);",
          "2250: }",
          "2252: static int vgic_its_restore_cte(struct vgic_its *its, gpa_t gpa, int esz)",
          "",
          "[Removed Lines]",
          "2249:  return kvm_write_guest(its->dev->kvm, gpa, &val, esz);",
          "",
          "[Added Lines]",
          "2249:  return kvm_write_guest_lock(its->dev->kvm, gpa, &val, esz);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2318:  val = 0;",
          "2319:  BUG_ON(cte_esz > sizeof(val));",
          "2321:  return ret;",
          "2322: }",
          "",
          "[Removed Lines]",
          "2320:  ret = kvm_write_guest(its->dev->kvm, gpa, &val, cte_esz);",
          "",
          "[Added Lines]",
          "2320:  ret = kvm_write_guest_lock(its->dev->kvm, gpa, &val, cte_esz);",
          "",
          "---------------"
        ],
        "virt/kvm/arm/vgic/vgic-v3.c||virt/kvm/arm/vgic/vgic-v3.c": [
          "File: virt/kvm/arm/vgic/vgic-v3.c -> virt/kvm/arm/vgic/vgic-v3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "358:  if (status) {",
          "360:   val &= ~(1 << bit_nr);",
          "362:   if (ret)",
          "363:    return ret;",
          "364:  }",
          "",
          "[Removed Lines]",
          "361:   ret = kvm_write_guest(kvm, ptr, &val, 1);",
          "",
          "[Added Lines]",
          "361:   ret = kvm_write_guest_lock(kvm, ptr, &val, 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "409:   else",
          "410:    val &= ~(1 << bit_nr);",
          "413:   if (ret)",
          "414:    return ret;",
          "415:  }",
          "",
          "[Removed Lines]",
          "412:   ret = kvm_write_guest(kvm, ptr, &val, 1);",
          "",
          "[Added Lines]",
          "412:   ret = kvm_write_guest_lock(kvm, ptr, &val, 1);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "39df730b09774bd860e39ea208a48d15078236cb",
      "candidate_info": {
        "commit_hash": "39df730b09774bd860e39ea208a48d15078236cb",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/39df730b09774bd860e39ea208a48d15078236cb",
        "files": [
          "tools/perf/util/parse-events.c"
        ],
        "message": "perf list: Don't forget to drop the reference to the allocated thread_map\n\nDetected via gcc's ASan:\n\n  Direct leak of 2048 byte(s) in 64 object(s) allocated from:\n    6     #0 0x7f606512e370 in __interceptor_realloc (/usr/lib/x86_64-linux-gnu/libasan.so.5+0xee370)\n    7     #1 0x556b0f1d7ddd in thread_map__realloc util/thread_map.c:43\n    8     #2 0x556b0f1d84c7 in thread_map__new_by_tid util/thread_map.c:85\n    9     #3 0x556b0f0e045e in is_event_supported util/parse-events.c:2250\n   10     #4 0x556b0f0e1aa1 in print_hwcache_events util/parse-events.c:2382\n   11     #5 0x556b0f0e3231 in print_events util/parse-events.c:2514\n   12     #6 0x556b0ee0a66e in cmd_list /home/changbin/work/linux/tools/perf/builtin-list.c:58\n   13     #7 0x556b0f01e0ae in run_builtin /home/changbin/work/linux/tools/perf/perf.c:302\n   14     #8 0x556b0f01e859 in handle_internal_command /home/changbin/work/linux/tools/perf/perf.c:354\n   15     #9 0x556b0f01edc8 in run_argv /home/changbin/work/linux/tools/perf/perf.c:398\n   16     #10 0x556b0f01f71f in main /home/changbin/work/linux/tools/perf/perf.c:520\n   17     #11 0x7f6062ccf09a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2409a)\n\nSigned-off-by: Changbin Du <changbin.du@gmail.com>\nReviewed-by: Jiri Olsa <jolsa@kernel.org>\nCc: Alexei Starovoitov <ast@kernel.org>\nCc: Daniel Borkmann <daniel@iogearbox.net>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Steven Rostedt (VMware) <rostedt@goodmis.org>\nFixes: 89896051f8da (\"perf tools: Do not put a variable sized type not at the end of a struct\")\nLink: http://lkml.kernel.org/r/20190316080556.3075-3-changbin.du@gmail.com\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
        "before_after_code_files": [
          "tools/perf/util/parse-events.c||tools/perf/util/parse-events.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/perf/util/parse-events.c||tools/perf/util/parse-events.c": [
          "File: tools/perf/util/parse-events.c -> tools/perf/util/parse-events.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2271:   perf_evsel__delete(evsel);",
          "2272:  }",
          "2274:  return ret;",
          "2275: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2274:  thread_map__put(tmap);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7494cec6cb3ba7385a6a223b81906384f15aae34",
      "candidate_info": {
        "commit_hash": "7494cec6cb3ba7385a6a223b81906384f15aae34",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/7494cec6cb3ba7385a6a223b81906384f15aae34",
        "files": [
          "virt/kvm/arm/vgic/vgic-its.c"
        ],
        "message": "KVM: arm/arm64: vgic-its: Take the srcu lock when parsing the memslots\n\nCalling kvm_is_visible_gfn() implies that we're parsing the memslots,\nand doing this without the srcu lock is frown upon:\n\n[12704.164532] =============================\n[12704.164544] WARNING: suspicious RCU usage\n[12704.164560] 5.1.0-rc1-00008-g600025238f51-dirty #16 Tainted: G        W\n[12704.164573] -----------------------------\n[12704.164589] ./include/linux/kvm_host.h:605 suspicious rcu_dereference_check() usage!\n[12704.164602] other info that might help us debug this:\n[12704.164616] rcu_scheduler_active = 2, debug_locks = 1\n[12704.164631] 6 locks held by qemu-system-aar/13968:\n[12704.164644]  #0: 000000007ebdae4f (&kvm->lock){+.+.}, at: vgic_its_set_attr+0x244/0x3a0\n[12704.164691]  #1: 000000007d751022 (&its->its_lock){+.+.}, at: vgic_its_set_attr+0x250/0x3a0\n[12704.164726]  #2: 00000000219d2706 (&vcpu->mutex){+.+.}, at: lock_all_vcpus+0x64/0xd0\n[12704.164761]  #3: 00000000a760aecd (&vcpu->mutex){+.+.}, at: lock_all_vcpus+0x64/0xd0\n[12704.164794]  #4: 000000000ef8e31d (&vcpu->mutex){+.+.}, at: lock_all_vcpus+0x64/0xd0\n[12704.164827]  #5: 000000007a872093 (&vcpu->mutex){+.+.}, at: lock_all_vcpus+0x64/0xd0\n[12704.164861] stack backtrace:\n[12704.164878] CPU: 2 PID: 13968 Comm: qemu-system-aar Tainted: G        W         5.1.0-rc1-00008-g600025238f51-dirty #16\n[12704.164887] Hardware name: rockchip evb_rk3399/evb_rk3399, BIOS 2019.04-rc3-00124-g2feec69fb1 03/15/2019\n[12704.164896] Call trace:\n[12704.164910]  dump_backtrace+0x0/0x138\n[12704.164920]  show_stack+0x24/0x30\n[12704.164934]  dump_stack+0xbc/0x104\n[12704.164946]  lockdep_rcu_suspicious+0xcc/0x110\n[12704.164958]  gfn_to_memslot+0x174/0x190\n[12704.164969]  kvm_is_visible_gfn+0x28/0x70\n[12704.164980]  vgic_its_check_id.isra.0+0xec/0x1e8\n[12704.164991]  vgic_its_save_tables_v0+0x1ac/0x330\n[12704.165001]  vgic_its_set_attr+0x298/0x3a0\n[12704.165012]  kvm_device_ioctl_attr+0x9c/0xd8\n[12704.165022]  kvm_device_ioctl+0x8c/0xf8\n[12704.165035]  do_vfs_ioctl+0xc8/0x960\n[12704.165045]  ksys_ioctl+0x8c/0xa0\n[12704.165055]  __arm64_sys_ioctl+0x28/0x38\n[12704.165067]  el0_svc_common+0xd8/0x138\n[12704.165078]  el0_svc_handler+0x38/0x78\n[12704.165089]  el0_svc+0x8/0xc\n\nMake sure the lock is taken when doing this.\n\nFixes: bf308242ab98 (\"KVM: arm/arm64: VGIC/ITS: protect kvm_read_guest() calls with SRCU lock\")\nReviewed-by: Eric Auger <eric.auger@redhat.com>\nSigned-off-by: Marc Zyngier <marc.zyngier@arm.com>",
        "before_after_code_files": [
          "virt/kvm/arm/vgic/vgic-its.c||virt/kvm/arm/vgic/vgic-its.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "virt/kvm/arm/vgic/vgic-its.c||virt/kvm/arm/vgic/vgic-its.c": [
          "File: virt/kvm/arm/vgic/vgic-its.c -> virt/kvm/arm/vgic/vgic-its.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "754:  u64 indirect_ptr, type = GITS_BASER_TYPE(baser);",
          "755:  phys_addr_t base = GITS_BASER_ADDR_48_to_52(baser);",
          "756:  int esz = GITS_BASER_ENTRY_SIZE(baser);",
          "758:  gfn_t gfn;",
          "760:  switch (type) {",
          "761:  case GITS_BASER_TYPE_DEVICE:",
          "",
          "[Removed Lines]",
          "757:  int index;",
          "",
          "[Added Lines]",
          "757:  int index, idx;",
          "759:  bool ret;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "783:   if (eaddr)",
          "786:  }",
          "",
          "[Removed Lines]",
          "785:   return kvm_is_visible_gfn(its->dev->kvm, gfn);",
          "",
          "[Added Lines]",
          "787:   goto out;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "813:  if (eaddr)",
          "816: }",
          "818: static int vgic_its_alloc_collection(struct vgic_its *its,",
          "",
          "[Removed Lines]",
          "815:  return kvm_is_visible_gfn(its->dev->kvm, gfn);",
          "",
          "[Added Lines]",
          "818: out:",
          "819:  idx = srcu_read_lock(&its->dev->kvm->srcu);",
          "820:  ret = kvm_is_visible_gfn(its->dev->kvm, gfn);",
          "821:  srcu_read_unlock(&its->dev->kvm->srcu, idx);",
          "822:  return ret;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "54569ba4b06d5baedae4614bde33a25a191473ba",
      "candidate_info": {
        "commit_hash": "54569ba4b06d5baedae4614bde33a25a191473ba",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/54569ba4b06d5baedae4614bde33a25a191473ba",
        "files": [
          "tools/perf/util/config.c"
        ],
        "message": "perf config: Fix a memory leak in collect_config()\n\nDetected with gcc's ASan:\n\n  Direct leak of 66 byte(s) in 5 object(s) allocated from:\n      #0 0x7ff3b1f32070 in __interceptor_strdup (/usr/lib/x86_64-linux-gnu/libasan.so.5+0x3b070)\n      #1 0x560c8761034d in collect_config util/config.c:597\n      #2 0x560c8760d9cb in get_value util/config.c:169\n      #3 0x560c8760dfd7 in perf_parse_file util/config.c:285\n      #4 0x560c8760e0d2 in perf_config_from_file util/config.c:476\n      #5 0x560c876108fd in perf_config_set__init util/config.c:661\n      #6 0x560c87610c72 in perf_config_set__new util/config.c:709\n      #7 0x560c87610d2f in perf_config__init util/config.c:718\n      #8 0x560c87610e5d in perf_config util/config.c:730\n      #9 0x560c875ddea0 in main /home/changbin/work/linux/tools/perf/perf.c:442\n      #10 0x7ff3afb8609a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2409a)\n\nSigned-off-by: Changbin Du <changbin.du@gmail.com>\nReviewed-by: Jiri Olsa <jolsa@kernel.org>\nCc: Alexei Starovoitov <ast@kernel.org>\nCc: Daniel Borkmann <daniel@iogearbox.net>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Steven Rostedt (VMware) <rostedt@goodmis.org>\nCc: Taeung Song <treeze.taeung@gmail.com>\nFixes: 20105ca1240c (\"perf config: Introduce perf_config_set class\")\nLink: http://lkml.kernel.org/r/20190316080556.3075-6-changbin.du@gmail.com\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
        "before_after_code_files": [
          "tools/perf/util/config.c||tools/perf/util/config.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/perf/util/config.c||tools/perf/util/config.c": [
          "File: tools/perf/util/config.c -> tools/perf/util/config.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "633:  }",
          "635:  ret = set_value(item, value);",
          "638: out_free:",
          "639:  free(key);",
          "641: }",
          "643: int perf_config_set__collect(struct perf_config_set *set, const char *file_name,",
          "",
          "[Removed Lines]",
          "636:  return ret;",
          "640:  return -1;",
          "",
          "[Added Lines]",
          "639:  return ret;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8bde8516893da5a5fdf06121f74d11b52ab92df5",
      "candidate_info": {
        "commit_hash": "8bde8516893da5a5fdf06121f74d11b52ab92df5",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/8bde8516893da5a5fdf06121f74d11b52ab92df5",
        "files": [
          "tools/perf/util/build-id.c",
          "tools/perf/util/parse-events.c"
        ],
        "message": "perf build-id: Fix memory leak in print_sdt_events()\n\nDetected with gcc's ASan:\n\n  Direct leak of 4356 byte(s) in 120 object(s) allocated from:\n      #0 0x7ff1a2b5a070 in __interceptor_strdup (/usr/lib/x86_64-linux-gnu/libasan.so.5+0x3b070)\n      #1 0x55719aef4814 in build_id_cache__origname util/build-id.c:215\n      #2 0x55719af649b6 in print_sdt_events util/parse-events.c:2339\n      #3 0x55719af66272 in print_events util/parse-events.c:2542\n      #4 0x55719ad1ecaa in cmd_list /home/changbin/work/linux/tools/perf/builtin-list.c:58\n      #5 0x55719aec745d in run_builtin /home/changbin/work/linux/tools/perf/perf.c:302\n      #6 0x55719aec7d1a in handle_internal_command /home/changbin/work/linux/tools/perf/perf.c:354\n      #7 0x55719aec8184 in run_argv /home/changbin/work/linux/tools/perf/perf.c:398\n      #8 0x55719aeca41a in main /home/changbin/work/linux/tools/perf/perf.c:520\n      #9 0x7ff1a07ae09a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2409a)\n\nSigned-off-by: Changbin Du <changbin.du@gmail.com>\nReviewed-by: Jiri Olsa <jolsa@kernel.org>\nCc: Alexei Starovoitov <ast@kernel.org>\nCc: Daniel Borkmann <daniel@iogearbox.net>\nCc: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Steven Rostedt (VMware) <rostedt@goodmis.org>\nFixes: 40218daea1db (\"perf list: Show SDT and pre-cached events\")\nLink: http://lkml.kernel.org/r/20190316080556.3075-7-changbin.du@gmail.com\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
        "before_after_code_files": [
          "tools/perf/util/build-id.c||tools/perf/util/build-id.c",
          "tools/perf/util/parse-events.c||tools/perf/util/parse-events.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/perf/util/build-id.c||tools/perf/util/build-id.c": [
          "File: tools/perf/util/build-id.c -> tools/perf/util/build-id.c"
        ],
        "tools/perf/util/parse-events.c||tools/perf/util/parse-events.c": [
          "File: tools/perf/util/parse-events.c -> tools/perf/util/parse-events.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2342:     printf(\"  %-50s [%s]\\n\", buf, \"SDT event\");",
          "2343:     free(buf);",
          "2344:    }",
          "2345:   } else",
          "2346:    printf(\"  %-50s [%s]\\n\", nd->s, \"SDT event\");",
          "2347:   if (nd2) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2345:    free(path);",
          "",
          "---------------"
        ]
      }
    }
  ]
}