{
  "cve_id": "CVE-2015-5318",
  "cve_desc": "Jenkins before 1.638 and LTS before 1.625.2 uses a publicly accessible salt to generate CSRF protection tokens, which makes it easier for remote attackers to bypass the CSRF protection mechanism via a brute force attack.",
  "repo": "jenkinsci/jenkins",
  "patch_hash": "f53802bb82a25b295b6dfa3bf2a591a6c8552183",
  "patch_info": {
    "commit_hash": "f53802bb82a25b295b6dfa3bf2a591a6c8552183",
    "repo": "jenkinsci/jenkins",
    "commit_url": "https://github.com/jenkinsci/jenkins/commit/f53802bb82a25b295b6dfa3bf2a591a6c8552183",
    "files": [
      "core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java"
    ],
    "message": "[SECURITY-169] - Convert crumb issuer salt to the confidential key",
    "before_after_code_files": [
      "core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java||core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java"
    ]
  },
  "patch_diff": {
    "core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java||core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java": [
      "File: core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java -> core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "18: import javax.servlet.ServletRequest;",
      "19: import javax.servlet.http.HttpServletRequest;",
      "21: import net.sf.json.JSONObject;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "20: import jenkins.security.HexStringConfidentialKey;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "117:     @Extension",
      "118:     public static final class DescriptorImpl extends CrumbIssuerDescriptor<DefaultCrumbIssuer> implements ModelObject {",
      "120:         public DescriptorImpl() {",
      "123:             load();",
      "124:         }",
      "",
      "[Removed Lines]",
      "122:             super(Jenkins.getInstance().getLegacyInstanceId(), System.getProperty(\"hudson.security.csrf.requestfield\", \".crumb\"));",
      "",
      "[Added Lines]",
      "121:         private final static HexStringConfidentialKey CRUMB_SALT = new HexStringConfidentialKey(Jenkins.class,\"crumbSalt\",16);",
      "124:             super(CRUMB_SALT.get(), System.getProperty(\"hudson.security.csrf.requestfield\", \".crumb\"));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ed0ea631cd4af0e678da96d7297910ba1612749d",
      "candidate_info": {
        "commit_hash": "ed0ea631cd4af0e678da96d7297910ba1612749d",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/ed0ea631cd4af0e678da96d7297910ba1612749d",
        "files": [
          "core/src/main/java/hudson/security/csrf/CrumbFilter.java",
          "core/src/main/java/hudson/security/csrf/CrumbIssuer.java",
          "core/src/main/java/hudson/security/csrf/CrumbIssuerDescriptor.java",
          "core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java",
          "test/src/test/groovy/hudson/model/SlaveTest.groovy"
        ],
        "message": "[FIXED JENKINS-12875] Change default crumb name to Jenkins-Crumb",
        "before_after_code_files": [
          "core/src/main/java/hudson/security/csrf/CrumbFilter.java||core/src/main/java/hudson/security/csrf/CrumbFilter.java",
          "core/src/main/java/hudson/security/csrf/CrumbIssuer.java||core/src/main/java/hudson/security/csrf/CrumbIssuer.java",
          "core/src/main/java/hudson/security/csrf/CrumbIssuerDescriptor.java||core/src/main/java/hudson/security/csrf/CrumbIssuerDescriptor.java",
          "core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java||core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java",
          "test/src/test/groovy/hudson/model/SlaveTest.groovy||test/src/test/groovy/hudson/model/SlaveTest.groovy"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java||core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java"
          ],
          "candidate": [
            "core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java||core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/hudson/security/csrf/CrumbFilter.java||core/src/main/java/hudson/security/csrf/CrumbFilter.java": [
          "File: core/src/main/java/hudson/security/csrf/CrumbFilter.java -> core/src/main/java/hudson/security/csrf/CrumbFilter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:             String crumbFieldName = crumbIssuer.getDescriptor().getCrumbRequestField();",
          "63:             String crumbSalt = crumbIssuer.getDescriptor().getCrumbSalt();",
          "66:             boolean valid = false;",
          "67:             if (crumb == null) {",
          "76:             }",
          "77:             if (crumb != null) {",
          "78:                 if (crumbIssuer.validateCrumb(httpRequest, crumbSalt, crumb)) {",
          "",
          "[Removed Lines]",
          "65:             String crumb = httpRequest.getHeader(crumbFieldName);",
          "68:                 Enumeration<?> paramNames = request.getParameterNames();",
          "69:                 while (paramNames.hasMoreElements()) {",
          "70:                     String paramName = (String) paramNames.nextElement();",
          "71:                     if (crumbFieldName.equals(paramName)) {",
          "72:                         crumb = request.getParameter(paramName);",
          "73:                         break;",
          "74:                     }",
          "75:                 }",
          "",
          "[Added Lines]",
          "66:             String crumb = extractCrumbFromRequest(httpRequest, crumbFieldName);",
          "69:                 extractCrumbFromRequest(httpRequest, \".crumb\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "93:         }",
          "94:     }",
          "96:     protected static boolean isMultipart(HttpServletRequest request) {",
          "97:         if (request == null) {",
          "98:             return false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "90:     private String extractCrumbFromRequest(HttpServletRequest httpRequest, String crumbFieldName) {",
          "91:         String crumb = httpRequest.getHeader(crumbFieldName);",
          "92:         if (crumb == null) {",
          "93:             Enumeration<?> paramNames = httpRequest.getParameterNames();",
          "94:             while (paramNames.hasMoreElements()) {",
          "95:                 String paramName = (String) paramNames.nextElement();",
          "96:                 if (crumbFieldName.equals(paramName)) {",
          "97:                     crumb = httpRequest.getParameter(paramName);",
          "98:                     break;",
          "99:                 }",
          "100:             }",
          "101:         }",
          "102:         return crumb;",
          "103:     }",
          "",
          "---------------"
        ],
        "core/src/main/java/hudson/security/csrf/CrumbIssuer.java||core/src/main/java/hudson/security/csrf/CrumbIssuer.java": [
          "File: core/src/main/java/hudson/security/csrf/CrumbIssuer.java -> core/src/main/java/hudson/security/csrf/CrumbIssuer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: public abstract class CrumbIssuer implements Describable<CrumbIssuer>, ExtensionPoint {",
          "45:     private static final String CRUMB_ATTRIBUTE = CrumbIssuer.class.getName() + \"_crumb\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:     public static final String DEFAULT_CRUMB_NAME = \"Jenkins-Crumb\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "199:             } else if (\"concat(//crumbRequestField,\\\":\\\",//crumb)\".equals(xpath)) { // new FullDuplexHttpStream; Main",
          "200:                 text = ci.getCrumbRequestField() + ':' + ci.getCrumb();",
          "201:             } else if (\"concat(//crumbRequestField,'=',//crumb)\".equals(xpath)) { // NetBeans",
          "203:                     text = ci.getCrumbRequestField() + '=' + ci.getCrumb();",
          "204:                 } else {",
          "205:                     text = null;",
          "",
          "[Removed Lines]",
          "202:                 if (ci.getCrumbRequestField().startsWith(\".\")) {",
          "",
          "[Added Lines]",
          "203:                 if (ci.getCrumbRequestField().startsWith(\".\") || ci.getCrumbRequestField().contains(\"-\")) {",
          "",
          "---------------"
        ],
        "core/src/main/java/hudson/security/csrf/CrumbIssuerDescriptor.java||core/src/main/java/hudson/security/csrf/CrumbIssuerDescriptor.java": [
          "File: core/src/main/java/hudson/security/csrf/CrumbIssuerDescriptor.java -> core/src/main/java/hudson/security/csrf/CrumbIssuerDescriptor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:     public void setCrumbRequestField(String requestField) {",
          "66:         if (Util.fixEmptyAndTrim(requestField) == null) {",
          "68:         } else {",
          "69:             crumbRequestField = requestField;",
          "70:         }",
          "",
          "[Removed Lines]",
          "67:             crumbRequestField = \".crumb\";",
          "",
          "[Added Lines]",
          "67:             crumbRequestField = CrumbIssuer.DEFAULT_CRUMB_NAME;",
          "",
          "---------------"
        ],
        "core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java||core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java": [
          "File: core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java -> core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "124:         private final static HexStringConfidentialKey CRUMB_SALT = new HexStringConfidentialKey(Jenkins.class,\"crumbSalt\",16);",
          "126:         public DescriptorImpl() {",
          "128:             load();",
          "129:         }",
          "",
          "[Removed Lines]",
          "127:             super(CRUMB_SALT.get(), System.getProperty(\"hudson.security.csrf.requestfield\", \".crumb\"));",
          "",
          "[Added Lines]",
          "127:             super(CRUMB_SALT.get(), System.getProperty(\"hudson.security.csrf.requestfield\", CrumbIssuer.DEFAULT_CRUMB_NAME));",
          "",
          "---------------"
        ],
        "test/src/test/groovy/hudson/model/SlaveTest.groovy||test/src/test/groovy/hudson/model/SlaveTest.groovy": [
          "File: test/src/test/groovy/hudson/model/SlaveTest.groovy -> test/src/test/groovy/hudson/model/SlaveTest.groovy",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: import static org.junit.Assert.assertNotNull",
          "29: import static org.junit.Assert.assertEquals",
          "31: import hudson.slaves.DumbSlave",
          "32: import hudson.slaves.JNLPLauncher",
          "33: import hudson.util.FormValidation",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: import hudson.security.csrf.CrumbIssuer",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "84:         HttpURLConnection con = new URL(j.getURL(),url).openConnection();",
          "85:         con.requestMethod = \"POST\"",
          "86:         con.setRequestProperty(\"Content-Type\",\"application/xml;charset=UTF-8\")",
          "88:         con.doOutput = true;",
          "89:         con.outputStream.write(xml.getBytes(\"UTF-8\"))",
          "90:         con.outputStream.close();",
          "",
          "[Removed Lines]",
          "87:         con.setRequestProperty(\".crumb\",\"test\")",
          "",
          "[Added Lines]",
          "88:         con.setRequestProperty(CrumbIssuer.DEFAULT_CRUMB_NAME,\"test\")",
          "",
          "---------------"
        ]
      }
    }
  ]
}