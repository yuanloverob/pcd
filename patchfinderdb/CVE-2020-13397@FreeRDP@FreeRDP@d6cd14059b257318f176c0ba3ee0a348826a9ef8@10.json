{
  "cve_id": "CVE-2020-13397",
  "cve_desc": "An issue was discovered in FreeRDP before 2.1.1. An out-of-bounds (OOB) read vulnerability has been detected in security_fips_decrypt in libfreerdp/core/security.c due to an uninitialized value.",
  "repo": "FreeRDP/FreeRDP",
  "patch_hash": "d6cd14059b257318f176c0ba3ee0a348826a9ef8",
  "patch_info": {
    "commit_hash": "d6cd14059b257318f176c0ba3ee0a348826a9ef8",
    "repo": "FreeRDP/FreeRDP",
    "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/d6cd14059b257318f176c0ba3ee0a348826a9ef8",
    "files": [
      "libfreerdp/core/security.c"
    ],
    "message": "Fixed GHSL-2020-101 missing NULL check\n\n(cherry picked from commit b207dbba35c505bbc3ad5aadc10b34980c6b7e8e)",
    "before_after_code_files": [
      "libfreerdp/core/security.c||libfreerdp/core/security.c"
    ]
  },
  "patch_diff": {
    "libfreerdp/core/security.c||libfreerdp/core/security.c": [
      "File: libfreerdp/core/security.c -> libfreerdp/core/security.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "816: {",
      "817:  size_t olen;",
      "819:  if (!winpr_Cipher_Update(rdp->fips_decrypt, data, length, data, &olen))",
      "820:   return FALSE;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "819:  if (!rdp || !rdp->fips_decrypt)",
      "820:   return FALSE;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c6bcfb0736834be867a746f6f4dc345a47de4fb9",
      "candidate_info": {
        "commit_hash": "c6bcfb0736834be867a746f6f4dc345a47de4fb9",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/c6bcfb0736834be867a746f6f4dc345a47de4fb9",
        "files": [
          "libfreerdp/core/orders.c"
        ],
        "message": "Fixed #6200: Arraysize check\n\n(cherry picked from commit 06c48df0dfd228646fed00c554a20ae9bcaa5e5e)",
        "before_after_code_files": [
          "libfreerdp/core/orders.c||libfreerdp/core/orders.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libfreerdp/core/orders.c||libfreerdp/core/orders.c": [
          "File: libfreerdp/core/orders.c -> libfreerdp/core/orders.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2552:   goto fail;",
          "2554:  cache_brush->bpp = BMF_BPP[iBitmapFormat];",
          "",
          "[Removed Lines]",
          "2551:  if (iBitmapFormat > ARRAYSIZE(BMF_BPP))",
          "",
          "[Added Lines]",
          "2551:  if (iBitmapFormat >= ARRAYSIZE(BMF_BPP))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fae7b99a8444be526e601467dd974140aee7c81e",
      "candidate_info": {
        "commit_hash": "fae7b99a8444be526e601467dd974140aee7c81e",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/fae7b99a8444be526e601467dd974140aee7c81e",
        "files": [
          "channels/cliprdr/client/cliprdr_main.c",
          "channels/cliprdr/server/cliprdr_main.c"
        ],
        "message": "Fixed #6162: Clipboard temporary path length limit\n\nThe limit of clipboard temporary paths is 260 '\\0' terminated\nwide characters. Fix the checks to enforce that properly.\n\n(cherry picked from commit 06bfcfad672522598a39522830449b444d50a9e4)",
        "before_after_code_files": [
          "channels/cliprdr/client/cliprdr_main.c||channels/cliprdr/client/cliprdr_main.c",
          "channels/cliprdr/server/cliprdr_main.c||channels/cliprdr/server/cliprdr_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "channels/cliprdr/client/cliprdr_main.c||channels/cliprdr/client/cliprdr_main.c": [
          "File: channels/cliprdr/client/cliprdr_main.c -> channels/cliprdr/client/cliprdr_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "594:  wStream* s;",
          "595:  WCHAR* wszTempDir = NULL;",
          "596:  cliprdrPlugin* cliprdr = (cliprdrPlugin*)context->handle;",
          "599:  if (!s)",
          "600:  {",
          "",
          "[Removed Lines]",
          "597:  s = cliprdr_packet_new(CB_TEMP_DIRECTORY, 0, 520 * 2);",
          "",
          "[Added Lines]",
          "597:  s = cliprdr_packet_new(CB_TEMP_DIRECTORY, 0, 260 * sizeof(WCHAR));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "607:  if (length < 0)",
          "608:   return ERROR_INTERNAL_ERROR;",
          "615:  free(wszTempDir);",
          "616:  WLog_Print(cliprdr->log, WLOG_DEBUG, \"TempDirectory: %s\", tempDirectory->szTempDir);",
          "617:  return cliprdr_packet_send(cliprdr, s);",
          "",
          "[Removed Lines]",
          "610:  if (length > 520)",
          "611:   length = 520;",
          "613:  Stream_Write(s, wszTempDir, (size_t)length * 2);",
          "614:  Stream_Zero(s, (520 - (size_t)length) * 2);",
          "",
          "[Added Lines]",
          "612:  if (length >= 260)",
          "613:   length = 259;",
          "615:  Stream_Write_UTF16_String(s, wszTempDir, length);",
          "616:  Stream_Zero(s, 520 - (length * sizeof(WCHAR)));",
          "",
          "---------------"
        ],
        "channels/cliprdr/server/cliprdr_main.c||channels/cliprdr/server/cliprdr_main.c": [
          "File: channels/cliprdr/server/cliprdr_main.c -> channels/cliprdr/server/cliprdr_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "553:  UINT error = CHANNEL_RC_OK;",
          "555:  WINPR_UNUSED(header);",
          "557:  {",
          "558:   WLog_ERR(TAG, \"Stream_GetRemainingLength returned %\" PRIuz \" but should at least be 520\",",
          "559:            slength);",
          "",
          "[Removed Lines]",
          "556:  if ((slength = Stream_GetRemainingLength(s)) < 520)",
          "",
          "[Added Lines]",
          "556:  if ((slength = Stream_GetRemainingLength(s)) < 260 * sizeof(WCHAR))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "563:  wszTempDir = (WCHAR*)Stream_Pointer(s);",
          "566:  {",
          "568:   return ERROR_INVALID_DATA;",
          "569:  }",
          "",
          "[Removed Lines]",
          "565:  if (wszTempDir[260] != 0)",
          "567:   WLog_ERR(TAG, \"wszTempDir[260] was not 0\");",
          "",
          "[Added Lines]",
          "565:  if (wszTempDir[259] != 0)",
          "567:   WLog_ERR(TAG, \"wszTempDir[259] was not 0\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "578:   return ERROR_INVALID_DATA;",
          "579:  }",
          "586:  CopyMemory(tempDirectory.szTempDir, cliprdr->temporaryDirectory, length);",
          "587:  tempDirectory.szTempDir[length] = '\\0';",
          "",
          "[Removed Lines]",
          "581:  length = strnlen(cliprdr->temporaryDirectory, 520);",
          "583:  if (length > 519)",
          "584:   length = 519;",
          "",
          "[Added Lines]",
          "581:  length = strnlen(cliprdr->temporaryDirectory, 260);",
          "583:  if (length >= 260)",
          "584:   length = 259;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cf4f6dbf3f57fb432e93773630ed5407ddec9147",
      "candidate_info": {
        "commit_hash": "cf4f6dbf3f57fb432e93773630ed5407ddec9147",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/cf4f6dbf3f57fb432e93773630ed5407ddec9147",
        "files": [
          "libfreerdp/codec/clear.c",
          "libfreerdp/codec/nsc.c",
          "libfreerdp/codec/progressive.c"
        ],
        "message": "Fixed multiple sanitizer errors in codecs\n\n(cherry picked from commit 2278d92a5d902692a7d1088629b2345c9b4e229c)",
        "before_after_code_files": [
          "libfreerdp/codec/clear.c||libfreerdp/codec/clear.c",
          "libfreerdp/codec/nsc.c||libfreerdp/codec/nsc.c",
          "libfreerdp/codec/progressive.c||libfreerdp/codec/progressive.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libfreerdp/codec/clear.c||libfreerdp/codec/clear.c": [
          "File: libfreerdp/codec/clear.c -> libfreerdp/codec/clear.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "783:    if (vBarUpdate)",
          "784:    {",
          "785:     UINT32 x;",
          "787:     BYTE* dstBuffer;",
          "789:     if (clear->VBarStorageCursor >= CLEARCODEC_VBAR_SIZE)",
          "",
          "[Removed Lines]",
          "786:     BYTE* pSrcPixel;",
          "",
          "[Added Lines]",
          "786:     BYTE* pSrcPixel = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "826:     if ((y + count) > vBarPixelCount)",
          "827:      count = (vBarPixelCount > y) ? (vBarPixelCount - y) : 0;",
          "832:     for (x = 0; x < count; x++)",
          "833:     {",
          "",
          "[Removed Lines]",
          "829:     pSrcPixel =",
          "830:         &vBarShortEntry->pixels[(y - vBarYOn) * GetBytesPerPixel(clear->format)];",
          "",
          "[Added Lines]",
          "829:     if (count > 0)",
          "830:      pSrcPixel =",
          "831:          &vBarShortEntry->pixels[(y - vBarYOn) * GetBytesPerPixel(clear->format)];",
          "",
          "---------------"
        ],
        "libfreerdp/codec/nsc.c||libfreerdp/codec/nsc.c": [
          "File: libfreerdp/codec/nsc.c -> libfreerdp/codec/nsc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "114: static BOOL nsc_rle_decode(BYTE* in, BYTE* out, UINT32 outSize, UINT32 originalSize)",
          "115: {",
          "121:  while (left > 4)",
          "122:  {",
          "125:   if (left == 5)",
          "126:   {",
          "",
          "[Removed Lines]",
          "116:  UINT32 len;",
          "117:  UINT32 left;",
          "118:  BYTE value;",
          "119:  left = originalSize;",
          "123:   value = *in++;",
          "",
          "[Added Lines]",
          "116:  UINT32 left = originalSize;",
          "120:   const BYTE value = *in++;",
          "121:   UINT32 len = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "143:    else",
          "144:    {",
          "145:     in++;",
          "148:    }",
          "150:    if (outSize < len)",
          "",
          "[Removed Lines]",
          "146:     len = *((UINT32*)in);",
          "147:     in += 4;",
          "",
          "[Added Lines]",
          "144:     len = ((UINT32)(*in++));",
          "145:     len |= ((UINT32)(*in++)) << 8U;",
          "146:     len |= ((UINT32)(*in++)) << 16U;",
          "147:     len |= ((UINT32)(*in++)) << 24U;",
          "",
          "---------------"
        ],
        "libfreerdp/codec/progressive.c||libfreerdp/codec/progressive.c": [
          "File: libfreerdp/codec/progressive.c -> libfreerdp/codec/progressive.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1183:    sign[index] = input;",
          "1184:   }",
          "1187:  }",
          "1189:  return 1;",
          "",
          "[Removed Lines]",
          "1186:   buffer[index] += (input << shift);",
          "",
          "[Added Lines]",
          "1186:   buffer[index] += (INT16)((UINT32)input << shift);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "77b5043d21c1b839728c1acbf11bfb7c077f2427",
      "candidate_info": {
        "commit_hash": "77b5043d21c1b839728c1acbf11bfb7c077f2427",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/77b5043d21c1b839728c1acbf11bfb7c077f2427",
        "files": [
          "channels/drdynvc/client/drdynvc_main.c",
          "channels/rdpgfx/client/rdpgfx_main.c"
        ],
        "message": "Reset pointer to NULL after free.\n\n(cherry picked from commit 33c7f808154c6682d3b84526a46d79f3e8d5c1ac)",
        "before_after_code_files": [
          "channels/drdynvc/client/drdynvc_main.c||channels/drdynvc/client/drdynvc_main.c",
          "channels/rdpgfx/client/rdpgfx_main.c||channels/rdpgfx/client/rdpgfx_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "channels/drdynvc/client/drdynvc_main.c||channels/drdynvc/client/drdynvc_main.c": [
          "File: channels/drdynvc/client/drdynvc_main.c -> channels/drdynvc/client/drdynvc_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "347:   if (channel->channel_callback)",
          "348:   {",
          "349:    IFCALL(channel->channel_callback->OnClose, channel->channel_callback);",
          "350:   }",
          "352:   if (channel->status == CHANNEL_RC_OK)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "350:    channel->channel_callback = NULL;",
          "",
          "---------------"
        ],
        "channels/rdpgfx/client/rdpgfx_main.c||channels/rdpgfx/client/rdpgfx_main.c": [
          "File: channels/rdpgfx/client/rdpgfx_main.c -> channels/rdpgfx/client/rdpgfx_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1826:  free_surfaces(context, gfx->SurfaceTable);",
          "1827:  evict_cache_slots(context, gfx->MaxCacheSlots, gfx->CacheSlots);",
          "1835:  free(callback);",
          "1836:  gfx->UnacknowledgedFrames = 0;",
          "1837:  gfx->TotalDecodedFrames = 0;",
          "",
          "[Removed Lines]",
          "1829:  if (gfx->listener_callback)",
          "1830:  {",
          "1831:   free(gfx->listener_callback);",
          "1832:   gfx->listener_callback = NULL;",
          "1833:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "538f82e91fac60594221c75cccb9c3f5e8cabcba",
      "candidate_info": {
        "commit_hash": "538f82e91fac60594221c75cccb9c3f5e8cabcba",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/538f82e91fac60594221c75cccb9c3f5e8cabcba",
        "files": [
          "winpr/libwinpr/utils/ini.c",
          "winpr/libwinpr/utils/test/TestIni.c"
        ],
        "message": "Fixed memory leak in ini parser and test functions.\n\n(cherry picked from commit 7f9997595918e8b6a2acec2ff40f5779fa183038)",
        "before_after_code_files": [
          "winpr/libwinpr/utils/ini.c||winpr/libwinpr/utils/ini.c",
          "winpr/libwinpr/utils/test/TestIni.c||winpr/libwinpr/utils/test/TestIni.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "winpr/libwinpr/utils/ini.c||winpr/libwinpr/utils/ini.c": [
          "File: winpr/libwinpr/utils/ini.c -> winpr/libwinpr/utils/ini.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "206:  return ini->line;",
          "207: }",
          "209: static wIniFileKey* IniFile_Key_New(const char* name, const char* value)",
          "210: {",
          "211:  wIniFileKey* key;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "209: static void IniFile_Key_Free(wIniFileKey* key)",
          "210: {",
          "211:  if (!key)",
          "212:   return;",
          "214:  free(key->name);",
          "215:  free(key->value);",
          "216:  free(key);",
          "217: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "223:   if (!key->name || !key->value)",
          "224:   {",
          "228:    return NULL;",
          "229:   }",
          "230:  }",
          "",
          "[Removed Lines]",
          "225:    free(key->name);",
          "226:    free(key->value);",
          "227:    free(key);",
          "",
          "[Added Lines]",
          "235:    IniFile_Key_Free(key);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "232:  return key;",
          "233: }",
          "245: static wIniFileSection* IniFile_Section_New(const char* name)",
          "246: {",
          "247:  wIniFileSection* section;",
          "",
          "[Removed Lines]",
          "235: static void IniFile_Key_Free(wIniFileKey* key)",
          "236: {",
          "237:  if (!key)",
          "238:   return;",
          "240:  free(key->name);",
          "241:  free(key->value);",
          "242:  free(key);",
          "243: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "821:   IniFile_Section_Free(ini->sections[index]);",
          "823:  free(ini->sections);",
          "824:  free(ini);",
          "825: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "822:  free(ini->buffer);",
          "",
          "---------------"
        ],
        "winpr/libwinpr/utils/test/TestIni.c||winpr/libwinpr/utils/test/TestIni.c": [
          "File: winpr/libwinpr/utils/test/TestIni.c -> winpr/libwinpr/utils/test/TestIni.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: int TestIni(int argc, char* argv[])",
          "40: {",
          "41:  int i, j;",
          "42:  int nKeys;",
          "43:  int nSections;",
          "44:  UINT32 iValue;",
          "46:  const char* sValue;",
          "50:  ini = IniFile_New();",
          "52:  sectionNames = IniFile_GetSectionNames(ini, &nSections);",
          "54:  for (i = 0; i < nSections; i++)",
          "55:  {",
          "56:   keyNames = IniFile_GetSectionKeyNames(ini, sectionNames[i], &nKeys);",
          "57:   printf(\"[%s]\\n\", sectionNames[i]);",
          "59:   for (j = 0; j < nKeys; j++)",
          "60:   {",
          "61:    sValue = IniFile_GetKeyValueString(ini, sectionNames[i], keyNames[j]);",
          "62:    printf(\"%s = %s\\n\", keyNames[j], sValue);",
          "63:   }",
          "66:  }",
          "69:  iValue = IniFile_GetKeyValueInt(ini, \"first_section\", \"one\");",
          "71:  if (iValue != 1)",
          "72:  {",
          "73:   printf(\"IniFile_GetKeyValueInt failure\\n\");",
          "75:  }",
          "77:  iValue = IniFile_GetKeyValueInt(ini, \"first_section\", \"five\");",
          "",
          "[Removed Lines]",
          "45:  wIniFile* ini;",
          "47:  char** keyNames;",
          "48:  char** sectionNames;",
          "51:  IniFile_ReadBuffer(ini, TEST_INI_01);",
          "65:   free(keyNames);",
          "68:  free(sectionNames);",
          "74:   return -1;",
          "",
          "[Added Lines]",
          "41:  int rc = -1;",
          "46:  wIniFile* ini = NULL;",
          "48:  char** keyNames = NULL;",
          "49:  char** sectionNames = NULL;",
          "52:  if (!ini)",
          "53:   goto fail;",
          "55:  if (IniFile_ReadBuffer(ini, TEST_INI_01) < 0)",
          "56:   goto fail;",
          "58:  free(sectionNames);",
          "60:  if (!sectionNames && (nSections > 0))",
          "61:   goto fail;",
          "65:   free(keyNames);",
          "68:   if (!keyNames && (nKeys > 0))",
          "69:    goto fail;",
          "82:   goto fail;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79:  if (iValue != 5)",
          "80:  {",
          "81:   printf(\"IniFile_GetKeyValueInt failure\\n\");",
          "83:  }",
          "85:  sValue = IniFile_GetKeyValueString(ini, \"first_section\", \"animal\");",
          "",
          "[Removed Lines]",
          "82:   return -1;",
          "",
          "[Added Lines]",
          "90:   goto fail;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "87:  if (strcmp(sValue, \"BIRD\") != 0)",
          "88:  {",
          "89:   printf(\"IniFile_GetKeyValueString failure\\n\");",
          "91:  }",
          "93:  sValue = IniFile_GetKeyValueString(ini, \"second_section\", \"path\");",
          "",
          "[Removed Lines]",
          "90:   return -1;",
          "",
          "[Added Lines]",
          "98:   goto fail;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "95:  if (strcmp(sValue, \"/usr/local/bin\") != 0)",
          "96:  {",
          "97:   printf(\"IniFile_GetKeyValueString failure\\n\");",
          "99:  }",
          "101:  sValue = IniFile_GetKeyValueString(ini, \"second_section\", \"URL\");",
          "",
          "[Removed Lines]",
          "98:   return -1;",
          "",
          "[Added Lines]",
          "106:   goto fail;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "103:  if (strcmp(sValue, \"http://www.example.com/~username\") != 0)",
          "104:  {",
          "105:   printf(\"IniFile_GetKeyValueString failure\\n\");",
          "107:  }",
          "109:  IniFile_Free(ini);",
          "111:  ini = IniFile_New();",
          "113:  sectionNames = IniFile_GetSectionNames(ini, &nSections);",
          "115:  for (i = 0; i < nSections; i++)",
          "116:  {",
          "117:   keyNames = IniFile_GetSectionKeyNames(ini, sectionNames[i], &nKeys);",
          "118:   printf(\"[%s]\\n\", sectionNames[i]);",
          "120:   for (j = 0; j < nKeys; j++)",
          "121:   {",
          "122:    sValue = IniFile_GetKeyValueString(ini, sectionNames[i], keyNames[j]);",
          "123:    printf(\"%s = %s\\n\", keyNames[j], sValue);",
          "124:   }",
          "127:  }",
          "130:  IniFile_Free(ini);",
          "132:  ini = IniFile_New();",
          "134:  if (IniFile_ReadBuffer(ini, TEST_INI_03) != -1)",
          "140:  IniFile_Free(ini);",
          "141:  return 0;",
          "142: }",
          "",
          "[Removed Lines]",
          "106:   return -1;",
          "112:  IniFile_ReadBuffer(ini, TEST_INI_02);",
          "126:   free(keyNames);",
          "129:  free(sectionNames);",
          "135:  {",
          "136:   IniFile_Free(ini);",
          "137:   return -1;",
          "138:  }",
          "",
          "[Added Lines]",
          "114:   goto fail;",
          "120:  if (!ini)",
          "121:   goto fail;",
          "122:  if (IniFile_ReadBuffer(ini, TEST_INI_02) < 0)",
          "123:   goto fail;",
          "124:  free(sectionNames);",
          "126:  if (!sectionNames && (nSections > 0))",
          "127:   goto fail;",
          "131:   free(keyNames);",
          "135:   if (!keyNames && (nKeys > 0))",
          "136:    goto fail;",
          "149:   goto fail;",
          "151:  rc = 0;",
          "152: fail:",
          "153:  free(keyNames);",
          "154:  free(sectionNames);",
          "",
          "---------------"
        ]
      }
    }
  ]
}