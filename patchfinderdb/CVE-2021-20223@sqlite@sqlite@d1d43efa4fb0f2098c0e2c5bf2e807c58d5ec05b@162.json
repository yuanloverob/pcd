{
  "cve_id": "CVE-2021-20223",
  "cve_desc": "",
  "repo": "sqlite/sqlite",
  "patch_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
  "patch_info": {
    "commit_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "files": [
      "ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test",
      "manifest",
      "manifest.uuid"
    ],
    "message": "Prevent fts5 tokenizer unicode61 from considering '\\0' to be a token characters, even if other characters of class \"Cc\" are.\n\nFossilOrigin-Name: b7b7bde9b7a03665e3691c6d51118965f216d2dfb1617f138b9f9e60e418ed2f",
    "before_after_code_files": [
      "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test",
      "manifest.uuid||manifest.uuid"
    ]
  },
  "patch_diff": {
    "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c": [
      "File: ext/fts5/fts5_unicode2.c -> ext/fts5/fts5_unicode2.c"
    ],
    "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test": [
      "File: ext/fts5/test/fts5tok1.test -> ext/fts5/test/fts5tok1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "111:   SELECT * FROM t4;",
      "112: } {1 {SQL logic error}}",
      "115: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "114: #-------------------------------------------------------------------------",
      "115: # Embedded 0x00 characters.",
      "116: #",
      "117: reset_db",
      "118: do_execsql_test 3.1.0 {",
      "119:   CREATE VIRTUAL TABLE t1 USING fts5(z);",
      "120:   CREATE VIRTUAL TABLE tt USING fts5vocab(t1, 'instance');",
      "121:   INSERT INTO t1 VALUES('abc' || char(0) || 'def');",
      "122:   SELECT * FROM tt;",
      "123: } { abc 1 z 0 def 1 z 1 }",
      "124: do_execsql_test 3.1.1 {",
      "125:   SELECT hex(z) FROM t1;",
      "126: } {61626300646566}",
      "127: do_execsql_test 3.1.2 {",
      "128:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "129: } {}",
      "131: do_execsql_test 3.2.0 {",
      "132:   CREATE VIRTUAL TABLE t2 USING fts5(z,",
      "133:       tokenize=\"unicode61 categories 'L* N* Co Cc'\"",
      "134:   );",
      "135:   CREATE VIRTUAL TABLE tu USING fts5vocab(t2, 'instance');",
      "137:   INSERT INTO t2 VALUES('abc' || char(0) || 'def');",
      "138:   SELECT * FROM tu;",
      "139: } { abc 1 z 0 def 1 z 1 }",
      "141: do_execsql_test 3.2.1 {",
      "142:   SELECT hex(z) FROM t1;",
      "143: } {61626300646566}",
      "145: do_execsql_test 3.2.2 {",
      "146:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "147: } {}",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 0e7e113d9f2c929c1f8a85e2cfad8e2e60f0e8770212b5e5320fb2a2c42911f8",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3858be3e599d174a8a9b3e68810578be551946ff",
      "candidate_info": {
        "commit_hash": "3858be3e599d174a8a9b3e68810578be551946ff",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3858be3e599d174a8a9b3e68810578be551946ff",
        "files": [
          "doc/trusted-schema.md",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Minor formatting changes in the trusted-schema.md document.\n\nFossilOrigin-Name: 55553b5e5ece8282f6a56a6f5c71024eaaef3c86ec42203af3da708b0de3643b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: af7c1ed4f8a7293d0ecacca3cfbe9414e0de5ec40b418ce7831b8dc724feb747",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d493353e9991159a69540f9732df8ff6be2aa2d6",
      "candidate_info": {
        "commit_hash": "d493353e9991159a69540f9732df8ff6be2aa2d6",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d493353e9991159a69540f9732df8ff6be2aa2d6",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/treeview.c"
        ],
        "message": "Enhance the TreeView logic to show information about Expr.op2 for FUNCTION and COLUMN nodes.\n\nFossilOrigin-Name: aceeaf9e28767a0880a16872867a1f57bff163acd0f10d19d5688068077590fa",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/treeview.c||src/treeview.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 2978b65ebe25eeabe543b67cb266308cceb20082a4ae71565d6d083d7c08bc9f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/treeview.c||src/treeview.c": [
          "File: src/treeview.c -> src/treeview.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "423:     case TK_COLUMN: {",
          "424:       if( pExpr->iTable<0 ){",
          "427:       }else{",
          "428:         sqlite3TreeViewLine(pView, \"{%d:%d}%s\",",
          "429:                              pExpr->iTable, pExpr->iColumn, zFlgs);",
          "",
          "[Removed Lines]",
          "426:         sqlite3TreeViewLine(pView, \"COLUMN(%d)%s\", pExpr->iColumn, zFlgs);",
          "",
          "[Added Lines]",
          "426:         char zOp2[16];",
          "427:         if( pExpr->op2 ){",
          "428:           sqlite3_snprintf(sizeof(zOp2),zOp2,\" op2=0x%02x\",pExpr->op2);",
          "429:         }else{",
          "430:           zOp2[0] = 0;",
          "431:         }",
          "432:         sqlite3TreeViewLine(pView, \"COLUMN(%d)%s%s\",",
          "433:                                     pExpr->iColumn, zFlgs, zOp2);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "566:       if( pExpr->op==TK_AGG_FUNCTION ){",
          "567:         sqlite3TreeViewLine(pView, \"AGG_FUNCTION%d %Q%s\",",
          "568:                              pExpr->op2, pExpr->u.zToken, zFlgs);",
          "569:       }else{",
          "570:         sqlite3TreeViewLine(pView, \"FUNCTION %Q%s\", pExpr->u.zToken, zFlgs);",
          "571:       }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "576:       }else if( pExpr->op2!=0 ){",
          "577:         const char *zOp2;",
          "578:         char zBuf[8];",
          "579:         sqlite3_snprintf(sizeof(zBuf),zBuf,\"0x%02x\",pExpr->op2);",
          "580:         zOp2 = zBuf;",
          "581:         if( pExpr->op2==NC_IsCheck ) zOp2 = \"NC_IsCheck\";",
          "582:         if( pExpr->op2==NC_IdxExpr ) zOp2 = \"NC_IdxExpr\";",
          "583:         if( pExpr->op2==NC_PartIdx ) zOp2 = \"NC_PartIdx\";",
          "584:         if( pExpr->op2==NC_GenCol ) zOp2 = \"NC_GenCol\";",
          "585:         sqlite3TreeViewLine(pView, \"FUNCTION %Q%s op2=%s\",",
          "586:                             pExpr->u.zToken, zFlgs, zOp2);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9c6a92982ff68cdbace6527e817adbe5a0628ea0",
      "candidate_info": {
        "commit_hash": "9c6a92982ff68cdbace6527e817adbe5a0628ea0",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/9c6a92982ff68cdbace6527e817adbe5a0628ea0",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/fkey.c"
        ],
        "message": "Fix a harmless compiler warning.\n\nFossilOrigin-Name: f0ebea35d9d6b69a7bb4242fb79ff3db4267e429855fa6969f9f52ffee1c7a99",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/fkey.c||src/fkey.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b47513d2b32b61ba42c1e9b59287d28f6fee231e6c65de2a3aa19effbbaf1e7f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/fkey.c||src/fkey.c": [
          "File: src/fkey.c -> src/fkey.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "932:         Vdbe *v = sqlite3GetVdbe(pParse);",
          "933:         int iJump = sqlite3VdbeCurrentAddr(v) + pFKey->nCol + 1;",
          "934:         for(i=0; i<pFKey->nCol; i++){",
          "938:           sqlite3VdbeAddOp2(v, OP_IsNull, iReg, iJump); VdbeCoverage(v);",
          "939:         }",
          "940:         sqlite3VdbeAddOp2(v, OP_FkCounter, pFKey->isDeferred, -1);",
          "",
          "[Removed Lines]",
          "935:           int iCol, iReg;",
          "936:           iCol = pFKey->aCol[i].iFrom;",
          "937:           iReg = sqlite3TableColumnToStorage(pFKey->pFrom,iCol) + regOld + 1;",
          "",
          "[Added Lines]",
          "935:           int iFromCol, iReg;",
          "936:           iFromCol = pFKey->aCol[i].iFrom;",
          "937:           iReg = sqlite3TableColumnToStorage(pFKey->pFrom,iFromCol) + regOld+1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "39d1a2a100056edc4d7eafd0876e2cbcb21c4e71",
      "candidate_info": {
        "commit_hash": "39d1a2a100056edc4d7eafd0876e2cbcb21c4e71",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/39d1a2a100056edc4d7eafd0876e2cbcb21c4e71",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/sqlite.h.in"
        ],
        "message": "Minor documentation enhancements.  No changes to code.\n\nFossilOrigin-Name: 6153f3aada0cc9c5e773753797892ee78b518b0d76568382f5fbc9ee960f814c",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/sqlite.h.in||src/sqlite.h.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9b14eb77548d3f65f5a4c9b16cecdbce8a3fb663692aa8315fbd21aab3e89f0d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqlite.h.in||src/sqlite.h.in": [
          "File: src/sqlite.h.in -> src/sqlite.h.in"
        ]
      }
    },
    {
      "candidate_hash": "ddcfe9210522ca4c5550b18b209df38c49a698f5",
      "candidate_info": {
        "commit_hash": "ddcfe9210522ca4c5550b18b209df38c49a698f5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ddcfe9210522ca4c5550b18b209df38c49a698f5",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/os_unix.c",
          "src/shell.c.in"
        ],
        "message": "Do not invoke usleep() for more than 999999 microseconds.\n\nFossilOrigin-Name: 1f5ed852f25515bbc0a7aaf236fdef40fa7e31805eee1249277fde4e68f95130",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/os_unix.c||src/os_unix.c",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b79f19edfd33c2a75f936c352668e14e81f35acf4f07edc27a21f941a7304b38",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/os_unix.c||src/os_unix.c": [
          "File: src/os_unix.c -> src/os_unix.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1545:   return rc;",
          "1546: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1549: static int unixSleep(sqlite3_vfs*,int);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1578:     rc = osFcntl(h,F_SETLK,pLock);",
          "1579:     tm--;",
          "1580:   }",
          "",
          "[Removed Lines]",
          "1577:     usleep(1000);",
          "",
          "[Added Lines]",
          "1580:     unixSleep(0,1000);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6576:   UNUSED_PARAMETER(NotUsed);",
          "6577:   return microseconds;",
          "6578: #elif defined(HAVE_USLEEP) && HAVE_USLEEP",
          "6580:   UNUSED_PARAMETER(NotUsed);",
          "6581:   return microseconds;",
          "6582: #else",
          "",
          "[Removed Lines]",
          "6579:   usleep(microseconds);",
          "",
          "[Added Lines]",
          "6582:   if( microseconds>=1000000 ) sleep(microseconds/1000000);",
          "6583:   if( microseconds%1000000 ) usleep(microseconds%1000000);",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "4425:   }",
          "4426: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4431: static void shellUSleepFunc(",
          "4432:   sqlite3_context *context,",
          "4433:   int argc,",
          "4434:   sqlite3_value **argv",
          "4435: ){",
          "4436:   int sleep = sqlite3_value_int(argv[0]);",
          "4437:   sqlite3_sleep(sleep/1000);",
          "4438:   sqlite3_result_int(context, sleep);",
          "4439: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4609:                             shellInt32, 0, 0);",
          "4610:     sqlite3_create_function(p->db, \"shell_idquote\", 1, SQLITE_UTF8, 0,",
          "4611:                             shellIdQuote, 0, 0);",
          "4612: #ifndef SQLITE_NOHAVE_SYSTEM",
          "4613:     sqlite3_create_function(p->db, \"edit\", 1, SQLITE_UTF8, 0,",
          "4614:                             editFunc, 0, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4625:     sqlite3_create_function(p->db, \"usleep\",1,SQLITE_UTF8,0,",
          "4626:                             shellUSleepFunc, 0, 0);",
          "",
          "---------------"
        ]
      }
    }
  ]
}