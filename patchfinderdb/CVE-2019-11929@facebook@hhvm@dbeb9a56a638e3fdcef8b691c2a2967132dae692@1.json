{
  "cve_id": "CVE-2019-11929",
  "cve_desc": "Insufficient boundary checks when formatting numbers in number_format allows read/write access to out-of-bounds memory, potentially leading to remote code execution. This issue affects HHVM versions prior to 3.30.10, all versions between 4.0.0 and 4.8.5, all versions between 4.9.0 and 4.18.2, and versions 4.19.0, 4.19.1, 4.20.0, 4.20.1, 4.20.2, 4.21.0, 4.22.0, 4.23.0.",
  "repo": "facebook/hhvm",
  "patch_hash": "dbeb9a56a638e3fdcef8b691c2a2967132dae692",
  "patch_info": {
    "commit_hash": "dbeb9a56a638e3fdcef8b691c2a2967132dae692",
    "repo": "facebook/hhvm",
    "commit_url": "https://github.com/facebook/hhvm/commit/dbeb9a56a638e3fdcef8b691c2a2967132dae692",
    "files": [
      "hphp/runtime/base/zend-string.cpp",
      "hphp/test/slow/string/number_format_t53795309.php",
      "hphp/test/slow/string/number_format_t53795309.php.expect"
    ],
    "message": "string_number_format: Correctly handles return value of snprintf\n\nSummary: `snprintf` can return a value greater than the number of bytes copied. In case the first byte of the string is not a digit (could be '-'), size of `tmpstr` was being updated without checking `tmplen`. This resulted in either an assertion error or a heap overflow depending on whether the assertion is compiled or not.\n\nReviewed By: mofarrell, qianxuweiren\n\nDifferential Revision: D17327899\n\nfbshipit-source-id: ee53875d21e02608c6d870388eecf1464de24ff1",
    "before_after_code_files": [
      "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp",
      "hphp/test/slow/string/number_format_t53795309.php||hphp/test/slow/string/number_format_t53795309.php",
      "hphp/test/slow/string/number_format_t53795309.php.expect||hphp/test/slow/string/number_format_t53795309.php.expect"
    ]
  },
  "patch_diff": {
    "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp": [
      "File: hphp/runtime/base/zend-string.cpp -> hphp/runtime/base/zend-string.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "1618:   d = php_math_round(d, dec);",
      "1621:   String tmpstr(63, ReserveString);",
      "1622:   tmpbuf = tmpstr.mutableData();",
      "1623:   tmplen = snprintf(tmpbuf, 64, \"%.*F\", dec, d);",
      "1624:   if (tmplen < 0) return empty_string();",
      "1626:     tmpstr.setSize(tmplen);",
      "1627:     return tmpstr;",
      "1628:   }",
      "",
      "[Removed Lines]",
      "1625:   if (tmpbuf == nullptr || !isdigit((int)tmpbuf[0])) {",
      "",
      "[Added Lines]",
      "1629:   if (tmplen < 64 && (tmpbuf == nullptr || !isdigit((int)tmpbuf[0]))) {",
      "",
      "---------------"
    ],
    "hphp/test/slow/string/number_format_t53795309.php||hphp/test/slow/string/number_format_t53795309.php": [
      "File: hphp/test/slow/string/number_format_t53795309.php -> hphp/test/slow/string/number_format_t53795309.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?hh",
      "4: <<__EntryPoint>>",
      "5: function main() {",
      "6:   $bin_repr = \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\";",
      "7:   $double_num = unpack(\"dnum\", $bin_repr)['num'];",
      "8:   var_dump(number_format($double_num, 100));",
      "9: }",
      "",
      "---------------"
    ],
    "hphp/test/slow/string/number_format_t53795309.php.expect||hphp/test/slow/string/number_format_t53795309.php.expect": [
      "File: hphp/test/slow/string/number_format_t53795309.php.expect -> hphp/test/slow/string/number_format_t53795309.php.expect",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: string(103) \"-0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8cff1643958c48d4ade473e125e8453322ecd6e1",
      "candidate_info": {
        "commit_hash": "8cff1643958c48d4ade473e125e8453322ecd6e1",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/8cff1643958c48d4ade473e125e8453322ecd6e1",
        "files": [
          "hphp/runtime/base/zend-string.cpp"
        ],
        "message": "backport zend-string.cpp patch\n\nhttps://github.com/facebook/hhvm/commit/dbeb9a56a638e3fdcef8b691c2a2967132dae692",
        "before_after_code_files": [
          "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp"
          ],
          "candidate": [
            "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp": [
          "File: hphp/runtime/base/zend-string.cpp -> hphp/runtime/base/zend-string.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1618:   d = php_math_round(d, dec);",
          "1621:   String tmpstr(63, ReserveString);",
          "1622:   tmpbuf = tmpstr.mutableData();",
          "1623:   tmplen = snprintf(tmpbuf, 64, \"%.*F\", dec, d);",
          "1624:   if (tmplen < 0) return empty_string();",
          "1626:     tmpstr.setSize(tmplen);",
          "1627:     return tmpstr;",
          "1628:   }",
          "",
          "[Removed Lines]",
          "1625:   if (tmpbuf == nullptr || !isdigit((int)tmpbuf[0])) {",
          "",
          "[Added Lines]",
          "1629:   if (tmplen < 64 && (tmpbuf == nullptr || !isdigit((int)tmpbuf[0]))) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aa64f6da588de8e0330def08eaac7f3106f31b79",
      "candidate_info": {
        "commit_hash": "aa64f6da588de8e0330def08eaac7f3106f31b79",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/aa64f6da588de8e0330def08eaac7f3106f31b79",
        "files": [
          "hphp/runtime/base/zend-string.cpp"
        ],
        "message": "backport zend-string.cpp patch\n\nhttps://github.com/facebook/hhvm/commit/dbeb9a56a638e3fdcef8b691c2a2967132dae692",
        "before_after_code_files": [
          "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp"
          ],
          "candidate": [
            "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp": [
          "File: hphp/runtime/base/zend-string.cpp -> hphp/runtime/base/zend-string.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1618:   d = php_math_round(d, dec);",
          "1621:   String tmpstr(63, ReserveString);",
          "1622:   tmpbuf = tmpstr.mutableData();",
          "1623:   tmplen = snprintf(tmpbuf, 64, \"%.*F\", dec, d);",
          "1624:   if (tmplen < 0) return empty_string();",
          "1626:     tmpstr.setSize(tmplen);",
          "1627:     return tmpstr;",
          "1628:   }",
          "",
          "[Removed Lines]",
          "1625:   if (tmpbuf == nullptr || !isdigit((int)tmpbuf[0])) {",
          "",
          "[Added Lines]",
          "1629:   if (tmplen < 64 && (tmpbuf == nullptr || !isdigit((int)tmpbuf[0]))) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8132c1cf80205f0a089f96d095e0f6b2b638071a",
      "candidate_info": {
        "commit_hash": "8132c1cf80205f0a089f96d095e0f6b2b638071a",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/8132c1cf80205f0a089f96d095e0f6b2b638071a",
        "files": [
          "hphp/runtime/base/zend-string.cpp"
        ],
        "message": "backport zend-string.cpp patch\n\nhttps://github.com/facebook/hhvm/commit/dbeb9a56a638e3fdcef8b691c2a2967132dae692",
        "before_after_code_files": [
          "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp"
          ],
          "candidate": [
            "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/base/zend-string.cpp||hphp/runtime/base/zend-string.cpp": [
          "File: hphp/runtime/base/zend-string.cpp -> hphp/runtime/base/zend-string.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1766:   d = php_math_round(d, dec);",
          "1769:   String tmpstr(63, ReserveString);",
          "1770:   tmpbuf = tmpstr.mutableData();",
          "1771:   tmplen = snprintf(tmpbuf, 64, \"%.*F\", dec, d);",
          "1772:   if (tmplen < 0) return empty_string();",
          "1774:     tmpstr.setSize(tmplen);",
          "1775:     return tmpstr;",
          "1776:   }",
          "",
          "[Removed Lines]",
          "1773:   if (tmpbuf == nullptr || !isdigit((int)tmpbuf[0])) {",
          "",
          "[Added Lines]",
          "1777:   if (tmplen < 64 && (tmpbuf == nullptr || !isdigit((int)tmpbuf[0]))) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}