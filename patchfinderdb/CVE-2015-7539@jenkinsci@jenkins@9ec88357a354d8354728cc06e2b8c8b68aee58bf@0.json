{
  "cve_id": "CVE-2015-7539",
  "cve_desc": "The Plugins Manager in Jenkins before 1.640 and LTS before 1.625.2 does not verify checksums for plugin files referenced in update site data, which makes it easier for man-in-the-middle attackers to execute arbitrary code via a crafted plugin.",
  "repo": "jenkinsci/jenkins",
  "patch_hash": "9ec88357a354d8354728cc06e2b8c8b68aee58bf",
  "patch_info": {
    "commit_hash": "9ec88357a354d8354728cc06e2b8c8b68aee58bf",
    "repo": "jenkinsci/jenkins",
    "commit_url": "https://github.com/jenkinsci/jenkins/commit/9ec88357a354d8354728cc06e2b8c8b68aee58bf",
    "files": [
      "core/src/main/java/hudson/model/UpdateCenter.java",
      "core/src/main/java/hudson/model/UpdateSite.java"
    ],
    "message": "[SECURITY-234] Getters instead of fields; trim base64 to fix test",
    "before_after_code_files": [
      "core/src/main/java/hudson/model/UpdateCenter.java||core/src/main/java/hudson/model/UpdateCenter.java",
      "core/src/main/java/hudson/model/UpdateSite.java||core/src/main/java/hudson/model/UpdateSite.java"
    ]
  },
  "patch_diff": {
    "core/src/main/java/hudson/model/UpdateCenter.java||core/src/main/java/hudson/model/UpdateCenter.java": [
      "File: core/src/main/java/hudson/model/UpdateCenter.java -> core/src/main/java/hudson/model/UpdateCenter.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "1105:         protected abstract void onSuccess();",
      "",
      "[Removed Lines]",
      "1108:         private Authentication authentication;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1116:         @Restricted(NoExternalUse.class)",
      "1117:         @CheckForNull",
      "",
      "[Removed Lines]",
      "1118:         protected String computedSHA1;",
      "",
      "[Added Lines]",
      "1115:         protected String getComputedSHA1() {",
      "1116:             return computedSHA1;",
      "1117:         }",
      "1119:         private String computedSHA1;",
      "1121:         private Authentication authentication;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1168:                     dis.close();",
      "1169:                 }",
      "1170:                 byte[] digest = sha1.digest();",
      "1172:             } catch (NoSuchAlgorithmException ignored) {",
      "",
      "[Removed Lines]",
      "1171:                 computedSHA1 = Base64.encodeBase64String(digest);",
      "",
      "[Added Lines]",
      "1175:                 computedSHA1 = Base64.encodeBase64String(digest).trim();",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1375:         @Override",
      "1376:         protected void replace(File dst, File src) throws IOException {",
      "1391:                     throw new IOException(\"Failed to compute SHA-1 of downloaded file, refusing installation\");",
      "1392:                 }",
      "1396:                 }",
      "1397:             }",
      "1401:             if(!src.renameTo(dst)) {",
      "1402:                 throw new IOException(\"Failed to rename \"+src+\" to \"+dst);",
      "1403:             }",
      "",
      "[Removed Lines]",
      "1377:          File bak = Util.changeExtension(dst,\".bak\");",
      "1379:             bak.delete();",
      "1380:             final File legacy = getLegacyDestination();",
      "1381:    if(legacy.exists()){",
      "1382:              legacy.renameTo(bak);",
      "1383:             }else{",
      "1384:              dst.renameTo(bak);",
      "1385:             }",
      "1386:             legacy.delete();",
      "1388:             if (plugin.sha1 != null) {",
      "1389:                 if (computedSHA1 == null) {",
      "1393:                 if (!plugin.sha1.equals(computedSHA1)) {",
      "1394:                     throw new IOException(\"Downloaded file \" + src.getAbsolutePath() + \" does not match expected SHA-1, expected \" + plugin.sha1 + \", actual \" + computedSHA1);",
      "1399:             dst.delete(); // any failure up to here is no big deal",
      "",
      "[Added Lines]",
      "1382:             if (plugin.getSha1() != null) {",
      "1383:                 if (getComputedSHA1() == null) {",
      "1387:                 if (!plugin.getSha1().equals(getComputedSHA1())) {",
      "1388:                     throw new IOException(\"Downloaded file \" + src.getAbsolutePath() + \" does not match expected SHA-1, expected \" + plugin.getSha1() + \", actual \" + getComputedSHA1());",
      "1393:             File bak = Util.changeExtension(dst, \".bak\");",
      "1394:             bak.delete();",
      "1396:             final File legacy = getLegacyDestination();",
      "1397:             if (legacy.exists()) {",
      "1398:                 if (!legacy.renameTo(bak)) {",
      "1399:                     legacy.delete();",
      "1400:                 }",
      "1401:             }",
      "1402:             if (dst.exists()) {",
      "1403:                 if (!dst.renameTo(bak)) {",
      "1404:                     dst.delete();",
      "1405:                 }",
      "1406:             }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1516:         @Override",
      "1517:         protected void replace(File dst, File src) throws IOException {",
      "1519:             if (expectedSHA1 != null) {",
      "1522:                     throw new IOException(\"Failed to compute SHA-1 of downloaded file, refusing installation\");",
      "1523:                 }",
      "1527:                 }",
      "1528:             }",
      "",
      "[Removed Lines]",
      "1518:             String expectedSHA1 = site.getData().core.sha1;",
      "1520:                 if (computedSHA1 == null) {",
      "1524:                 if (!expectedSHA1.equals(computedSHA1)) {",
      "1525:                     throw new IOException(\"Downloaded file \" + src.getAbsolutePath() + \" does not match expected SHA-1, expected \" + expectedSHA1 + \", actual \" + computedSHA1);",
      "",
      "[Added Lines]",
      "1525:             String expectedSHA1 = site.getData().core.getSha1();",
      "1527:                 if (getComputedSHA1() == null) {",
      "1531:                 if (!expectedSHA1.equals(getComputedSHA1())) {",
      "1532:                     throw new IOException(\"Downloaded file \" + src.getAbsolutePath() + \" does not match expected SHA-1, expected \" + expectedSHA1 + \", actual \" + getComputedSHA1());",
      "",
      "---------------"
    ],
    "core/src/main/java/hudson/model/UpdateSite.java||core/src/main/java/hudson/model/UpdateSite.java": [
      "File: core/src/main/java/hudson/model/UpdateSite.java -> core/src/main/java/hudson/model/UpdateSite.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "510:         @Exported",
      "511:         public final String url;",
      "520:         public Entry(String sourceId, JSONObject o) {",
      "521:             this(sourceId, o, null);",
      "",
      "[Removed Lines]",
      "518:         public final String sha1;",
      "",
      "[Added Lines]",
      "513:         private final String sha1;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "536:             this.url = url;",
      "537:         }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "540:         public String getSha1() {",
      "541:             return sha1;",
      "542:         }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "11479a2cc0a322a6bcd7e65667f3d24aa4d444bb",
      "candidate_info": {
        "commit_hash": "11479a2cc0a322a6bcd7e65667f3d24aa4d444bb",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/11479a2cc0a322a6bcd7e65667f3d24aa4d444bb",
        "files": [
          "core/src/main/java/hudson/model/UpdateCenter.java",
          "core/src/main/java/hudson/model/UpdateSite.java"
        ],
        "message": "[FIX SECURITY-234] Abort plugin/core update on checksum mismatch",
        "before_after_code_files": [
          "core/src/main/java/hudson/model/UpdateCenter.java||core/src/main/java/hudson/model/UpdateCenter.java",
          "core/src/main/java/hudson/model/UpdateSite.java||core/src/main/java/hudson/model/UpdateSite.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/hudson/model/UpdateCenter.java||core/src/main/java/hudson/model/UpdateCenter.java",
            "core/src/main/java/hudson/model/UpdateSite.java||core/src/main/java/hudson/model/UpdateSite.java"
          ],
          "candidate": [
            "core/src/main/java/hudson/model/UpdateCenter.java||core/src/main/java/hudson/model/UpdateCenter.java",
            "core/src/main/java/hudson/model/UpdateSite.java||core/src/main/java/hudson/model/UpdateSite.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/hudson/model/UpdateCenter.java||core/src/main/java/hudson/model/UpdateCenter.java": [
          "File: core/src/main/java/hudson/model/UpdateCenter.java -> core/src/main/java/hudson/model/UpdateCenter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: import jenkins.util.io.OnMaster;",
          "55: import org.acegisecurity.Authentication;",
          "56: import org.acegisecurity.context.SecurityContext;",
          "57: import org.apache.commons.io.input.CountingInputStream;",
          "58: import org.apache.commons.io.output.NullOutputStream;",
          "59: import org.jvnet.localizer.Localizable;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57: import org.apache.commons.codec.binary.Base64;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64: import javax.net.ssl.SSLHandshakeException;",
          "65: import javax.servlet.ServletException;",
          "66: import java.io.File;",
          "67: import java.io.FileOutputStream;",
          "68: import java.io.IOException;",
          "69: import java.io.OutputStream;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68: import java.io.FileInputStream;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "71: import java.net.URL;",
          "72: import java.net.URLConnection;",
          "73: import java.net.UnknownHostException;",
          "74: import java.util.ArrayList;",
          "75: import java.util.Collections;",
          "76: import java.util.HashSet;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76: import java.security.DigestInputStream;",
          "77: import java.security.MessageDigest;",
          "78: import java.security.NoSuchAlgorithmException;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1103:         private Authentication authentication;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1116:         @Restricted(NoExternalUse.class)",
          "1117:         @CheckForNull",
          "1118:         protected String computedSHA1;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1142:             File dst = getDestination();",
          "1143:             File tmp = config.download(this, src);",
          "1145:             config.postValidate(this, tmp);",
          "1146:             config.install(this, tmp, dst);",
          "1147:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1160:             try {",
          "1161:                 MessageDigest sha1 = MessageDigest.getInstance(\"SHA-1\");",
          "1162:                 DigestInputStream dis = new DigestInputStream(new FileInputStream(tmp), sha1);",
          "1163:                 byte[] unused = new byte[1024];",
          "1164:                 try {",
          "1165:                     while (dis.read(unused) != -1)",
          "1166:                         ; // do nothing, just read the entire file",
          "1167:                 } finally {",
          "1168:                     dis.close();",
          "1169:                 }",
          "1170:                 byte[] digest = sha1.digest();",
          "1171:                 computedSHA1 = Base64.encodeBase64String(digest);",
          "1172:             } catch (NoSuchAlgorithmException ignored) {",
          "1176:             }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1351:              dst.renameTo(bak);",
          "1352:             }",
          "1353:             legacy.delete();",
          "1354:             dst.delete(); // any failure up to here is no big deal",
          "1356:             if(!src.renameTo(dst)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1388:             if (plugin.sha1 != null) {",
          "1389:                 if (computedSHA1 == null) {",
          "1391:                     throw new IOException(\"Failed to compute SHA-1 of downloaded file, refusing installation\");",
          "1392:                 }",
          "1393:                 if (!plugin.sha1.equals(computedSHA1)) {",
          "1394:                     throw new IOException(\"Downloaded file \" + src.getAbsolutePath() + \" does not match expected SHA-1, expected \" + plugin.sha1 + \", actual \" + computedSHA1);",
          "1396:                 }",
          "1397:             }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1471:         @Override",
          "1472:         protected void replace(File dst, File src) throws IOException {",
          "1473:             Lifecycle.get().rewriteHudsonWar(src);",
          "1474:         }",
          "1475:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1518:             String expectedSHA1 = site.getData().core.sha1;",
          "1519:             if (expectedSHA1 != null) {",
          "1520:                 if (computedSHA1 == null) {",
          "1522:                     throw new IOException(\"Failed to compute SHA-1 of downloaded file, refusing installation\");",
          "1523:                 }",
          "1524:                 if (!expectedSHA1.equals(computedSHA1)) {",
          "1525:                     throw new IOException(\"Downloaded file \" + src.getAbsolutePath() + \" does not match expected SHA-1, expected \" + expectedSHA1 + \", actual \" + computedSHA1);",
          "1527:                 }",
          "1528:             }",
          "",
          "---------------"
        ],
        "core/src/main/java/hudson/model/UpdateSite.java||core/src/main/java/hudson/model/UpdateSite.java": [
          "File: core/src/main/java/hudson/model/UpdateSite.java -> core/src/main/java/hudson/model/UpdateSite.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: import hudson.PluginManager;",
          "29: import hudson.PluginWrapper;",
          "30: import hudson.lifecycle.Lifecycle;",
          "31: import hudson.model.UpdateCenter.UpdateCenterJob;",
          "32: import hudson.util.FormValidation;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: import hudson.Util;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "507:         @Exported",
          "508:         public final String url;",
          "510:         public Entry(String sourceId, JSONObject o) {",
          "511:             this(sourceId, o, null);",
          "512:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "518:         public final String sha1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "515:             this.sourceId = sourceId;",
          "516:             this.name = o.getString(\"name\");",
          "517:             this.version = o.getString(\"version\");",
          "518:             String url = o.getString(\"url\");",
          "519:             if (!URI.create(url).isAbsolute()) {",
          "520:                 if (baseURL == null) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "528:             this.sha1 = Util.fixEmpty(o.optString(\"sha1\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f99cb46e06f394637067730a82f46bddc3567295",
      "candidate_info": {
        "commit_hash": "f99cb46e06f394637067730a82f46bddc3567295",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f99cb46e06f394637067730a82f46bddc3567295",
        "files": [
          "core/src/main/java/hudson/model/UpdateCenter.java",
          "core/src/main/java/hudson/model/UpdateSite.java",
          "test/src/test/java/hudson/model/UpdateCenter2Test.java"
        ],
        "message": "[SECURITY-234] Add test. Add helper method for code reuse",
        "before_after_code_files": [
          "core/src/main/java/hudson/model/UpdateCenter.java||core/src/main/java/hudson/model/UpdateCenter.java",
          "core/src/main/java/hudson/model/UpdateSite.java||core/src/main/java/hudson/model/UpdateSite.java",
          "test/src/test/java/hudson/model/UpdateCenter2Test.java||test/src/test/java/hudson/model/UpdateCenter2Test.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/hudson/model/UpdateCenter.java||core/src/main/java/hudson/model/UpdateCenter.java",
            "core/src/main/java/hudson/model/UpdateSite.java||core/src/main/java/hudson/model/UpdateSite.java"
          ],
          "candidate": [
            "core/src/main/java/hudson/model/UpdateCenter.java||core/src/main/java/hudson/model/UpdateCenter.java",
            "core/src/main/java/hudson/model/UpdateSite.java||core/src/main/java/hudson/model/UpdateSite.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/hudson/model/UpdateCenter.java||core/src/main/java/hudson/model/UpdateCenter.java": [
          "File: core/src/main/java/hudson/model/UpdateCenter.java -> core/src/main/java/hudson/model/UpdateCenter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1288:         }",
          "1289:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1298:     private void verifyChecksums(String expectedSHA1, String actualSha1, File downloadedFile) throws IOException {",
          "1299:         if (expectedSHA1 != null) {",
          "1300:             if (actualSha1 == null) {",
          "1302:                 throw new IOException(\"Failed to compute SHA-1 of downloaded file, refusing installation\");",
          "1303:             }",
          "1304:             if (!expectedSHA1.equals(actualSha1)) {",
          "1305:                 throw new IOException(\"Downloaded file \" + downloadedFile.getAbsolutePath() + \" does not match expected SHA-1, expected \" + expectedSHA1 + \", actual \" + actualSha1);",
          "1307:             }",
          "1308:         }",
          "1309:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1380:         @Override",
          "1381:         protected void replace(File dst, File src) throws IOException {",
          "1395:             File bak = Util.changeExtension(dst, \".bak\");",
          "1396:             bak.delete();",
          "",
          "[Removed Lines]",
          "1383:             if (plugin.getSha1() != null) {",
          "1385:                 if (getComputedSHA1() == null) {",
          "1387:                     throw new IOException(\"Failed to compute SHA-1 of downloaded file, refusing installation\");",
          "1388:                 }",
          "1389:                 if (!plugin.getSha1().equals(getComputedSHA1())) {",
          "1390:                     throw new IOException(\"Downloaded file \" + src.getAbsolutePath() + \" does not match expected SHA-1, expected \" + plugin.getSha1() + \", actual \" + getComputedSHA1());",
          "1392:                 }",
          "1393:             }",
          "",
          "[Added Lines]",
          "1403:             verifyChecksums(plugin.getSha1(), getComputedSHA1(), src);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1525:         @Override",
          "1526:         protected void replace(File dst, File src) throws IOException {",
          "1527:             String expectedSHA1 = site.getData().core.getSha1();",
          "1538:             Lifecycle.get().rewriteHudsonWar(src);",
          "1539:         }",
          "1540:     }",
          "",
          "[Removed Lines]",
          "1528:             if (expectedSHA1 != null) {",
          "1529:                 if (getComputedSHA1() == null) {",
          "1531:                     throw new IOException(\"Failed to compute SHA-1 of downloaded file, refusing installation\");",
          "1532:                 }",
          "1533:                 if (!expectedSHA1.equals(getComputedSHA1())) {",
          "1534:                     throw new IOException(\"Downloaded file \" + src.getAbsolutePath() + \" does not match expected SHA-1, expected \" + expectedSHA1 + \", actual \" + getComputedSHA1());",
          "1536:                 }",
          "1537:             }",
          "",
          "[Added Lines]",
          "1538:             verifyChecksums(expectedSHA1, getComputedSHA1(), src);",
          "",
          "---------------"
        ],
        "core/src/main/java/hudson/model/UpdateSite.java||core/src/main/java/hudson/model/UpdateSite.java": [
          "File: core/src/main/java/hudson/model/UpdateSite.java -> core/src/main/java/hudson/model/UpdateSite.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "510:         @Exported",
          "511:         public final String url;",
          "515:         public Entry(String sourceId, JSONObject o) {",
          "516:             this(sourceId, o, null);",
          "",
          "[Removed Lines]",
          "513:         private final String sha1;",
          "",
          "[Added Lines]",
          "515:         @Restricted(NoExternalUse.class)",
          "",
          "---------------"
        ],
        "test/src/test/java/hudson/model/UpdateCenter2Test.java||test/src/test/java/hudson/model/UpdateCenter2Test.java": [
          "File: test/src/test/java/hudson/model/UpdateCenter2Test.java -> test/src/test/java/hudson/model/UpdateCenter2Test.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: import hudson.model.UpdateCenter.DownloadJob;",
          "27: import hudson.model.UpdateCenter.DownloadJob.Success;",
          "28: import static org.junit.Assert.*;",
          "29: import org.junit.Rule;",
          "30: import org.junit.Test;",
          "31: import org.jvnet.hudson.test.JenkinsRule;",
          "32: import org.jvnet.hudson.test.RandomlyFails;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: import hudson.model.UpdateCenter.DownloadJob.Failure;",
          "32: import org.jvnet.hudson.test.Issue;",
          "36: import java.io.IOException;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58:         assertEquals(Messages.UpdateCenter_n_a(), j.jenkins.getUpdateCenter().getLastUpdatedString());",
          "59:     }",
          "61: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:     @Issue(\"SECURITY-234\")",
          "66:     @Test public void installInvalidChecksum() throws Exception {",
          "67:         UpdateSite.neverUpdate = false;",
          "68:         j.jenkins.pluginManager.doCheckUpdatesServer(); // load the metadata",
          "69:         String wrongChecksum = \"ABCDEFG1234567890\";",
          "72:         j.jenkins.getUpdateCenter().getSite(\"default\").getPlugin(\"changelog-history\").sha1 = wrongChecksum;",
          "73:         DownloadJob job = (DownloadJob) j.jenkins.getUpdateCenter().getPlugin(\"changelog-history\").deploy().get();",
          "74:         assertTrue(job.status instanceof Failure);",
          "75:         assertTrue(\"error message references checksum\", ((Failure) job.status).problem.getMessage().contains(wrongChecksum));",
          "76:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c158648afa8888bc49ac337c973d4e4bc050118e",
      "candidate_info": {
        "commit_hash": "c158648afa8888bc49ac337c973d4e4bc050118e",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c158648afa8888bc49ac337c973d4e4bc050118e",
        "files": [
          "core/src/main/java/hudson/model/UpdateCenter.java",
          "core/src/main/java/hudson/model/UpdateSite.java"
        ],
        "message": "[SECURITY-234] More efficient digest computation, restrict API",
        "before_after_code_files": [
          "core/src/main/java/hudson/model/UpdateCenter.java||core/src/main/java/hudson/model/UpdateCenter.java",
          "core/src/main/java/hudson/model/UpdateSite.java||core/src/main/java/hudson/model/UpdateSite.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/hudson/model/UpdateCenter.java||core/src/main/java/hudson/model/UpdateCenter.java",
            "core/src/main/java/hudson/model/UpdateSite.java||core/src/main/java/hudson/model/UpdateSite.java"
          ],
          "candidate": [
            "core/src/main/java/hudson/model/UpdateCenter.java||core/src/main/java/hudson/model/UpdateCenter.java",
            "core/src/main/java/hudson/model/UpdateSite.java||core/src/main/java/hudson/model/UpdateSite.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/hudson/model/UpdateCenter.java||core/src/main/java/hudson/model/UpdateCenter.java": [
          "File: core/src/main/java/hudson/model/UpdateCenter.java -> core/src/main/java/hudson/model/UpdateCenter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "62: import org.kohsuke.stapler.StaplerRequest;",
          "63: import org.kohsuke.stapler.StaplerResponse;",
          "65: import javax.net.ssl.SSLHandshakeException;",
          "66: import javax.servlet.ServletException;",
          "67: import java.io.File;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65: import javax.annotation.Nonnull;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74: import java.net.URLConnection;",
          "75: import java.net.UnknownHostException;",
          "76: import java.security.DigestInputStream;",
          "77: import java.security.MessageDigest;",
          "78: import java.security.NoSuchAlgorithmException;",
          "79: import java.util.ArrayList;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "78: import java.security.DigestOutputStream;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "754:         public File download(DownloadJob job, URL src) throws IOException {",
          "755:             CountingInputStream in = null;",
          "756:             OutputStream out = null;",
          "757:             URLConnection con = null;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "757:             MessageDigest sha1 = null;",
          "758:             try {",
          "759:                 sha1 = MessageDigest.getInstance(\"SHA-1\");",
          "760:             } catch (NoSuchAlgorithmException ignored) {",
          "764:             }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "765:                 File dst = job.getDestination();",
          "766:                 File tmp = new File(dst.getPath()+\".tmp\");",
          "767:                 out = new FileOutputStream(tmp);",
          "769:                 LOGGER.info(\"Downloading \"+job.getName());",
          "770:                 Thread t = Thread.currentThread();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "779:                 if (sha1 != null) {",
          "780:                     out = new DigestOutputStream(out, sha1);",
          "781:                 }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "778:                 } catch (IOException e) {",
          "779:                     throw new IOException(\"Failed to load \"+src+\" to \"+tmp,e);",
          "780:                 } finally {",
          "781:                     t.setName(oldName);",
          "782:                 }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "795:                     IOUtils.closeQuietly(out);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "788:                     throw new IOException(\"Inconsistent file length: expected \"+total+\" but only got \"+tmp.length());",
          "789:                 }",
          "791:                 return tmp;",
          "792:             } catch (IOException e) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "806:                 if (sha1 != null) {",
          "807:                     byte[] digest = sha1.digest();",
          "809:                     job.computedSHA1 = Base64.encodeBase64String(digest).trim();",
          "810:                 }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1160:             File dst = getDestination();",
          "1161:             File tmp = config.download(this, src);",
          "1182:             config.postValidate(this, tmp);",
          "1183:             config.install(this, tmp, dst);",
          "1184:         }",
          "",
          "[Removed Lines]",
          "1163:             try {",
          "1164:                 MessageDigest sha1 = MessageDigest.getInstance(\"SHA-1\");",
          "1165:                 DigestInputStream dis = new DigestInputStream(new FileInputStream(tmp), sha1);",
          "1166:                 byte[] unused = new byte[1024];",
          "1167:                 try {",
          "1168:                     while (dis.read(unused) != -1)",
          "1169:                         ; // do nothing, just read the entire file",
          "1170:                 } finally {",
          "1171:                     dis.close();",
          "1172:                 }",
          "1173:                 byte[] digest = sha1.digest();",
          "1175:                 computedSHA1 = Base64.encodeBase64String(digest).trim();",
          "1176:             } catch (NoSuchAlgorithmException ignored) {",
          "1180:             }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "core/src/main/java/hudson/model/UpdateSite.java||core/src/main/java/hudson/model/UpdateSite.java": [
          "File: core/src/main/java/hudson/model/UpdateSite.java -> core/src/main/java/hudson/model/UpdateSite.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "520:             this.sourceId = sourceId;",
          "521:             this.name = o.getString(\"name\");",
          "522:             this.version = o.getString(\"version\");",
          "524:             String url = o.getString(\"url\");",
          "525:             if (!URI.create(url).isAbsolute()) {",
          "526:                 if (baseURL == null) {",
          "",
          "[Removed Lines]",
          "523:             this.sha1 = Util.fixEmpty(o.optString(\"sha1\"));",
          "",
          "[Added Lines]",
          "524:             String sha = Util.fixEmpty(o.optString(\"sha1\"));",
          "527:             this.sha1 = (sha == null) ? null : sha.trim();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "540:         public String getSha1() {",
          "541:             return sha1;",
          "542:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "546:         @Restricted(NoExternalUse.class)",
          "",
          "---------------"
        ]
      }
    }
  ]
}