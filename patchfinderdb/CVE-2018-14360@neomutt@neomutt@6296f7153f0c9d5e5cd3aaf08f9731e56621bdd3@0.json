{
  "cve_id": "CVE-2018-14360",
  "cve_desc": "An issue was discovered in NeoMutt before 2018-07-16. nntp_add_group in newsrc.c has a stack-based buffer overflow because of incorrect sscanf usage.",
  "repo": "neomutt/neomutt",
  "patch_hash": "6296f7153f0c9d5e5cd3aaf08f9731e56621bdd3",
  "patch_info": {
    "commit_hash": "6296f7153f0c9d5e5cd3aaf08f9731e56621bdd3",
    "repo": "neomutt/neomutt",
    "commit_url": "https://github.com/neomutt/neomutt/commit/6296f7153f0c9d5e5cd3aaf08f9731e56621bdd3",
    "files": [
      "newsrc.c"
    ],
    "message": "Set length modifiers for group and desc\n\nnntp_add_group parses a line controlled by the connected nntp server.\nRestrict the maximum lengths read into the stack buffers group, and\ndesc.",
    "before_after_code_files": [
      "newsrc.c||newsrc.c"
    ]
  },
  "patch_diff": {
    "newsrc.c||newsrc.c": [
      "File: newsrc.c -> newsrc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "592: {",
      "593:   struct NntpServer *nserv = data;",
      "594:   struct NntpData *nntp_data = NULL;",
      "596:   char desc[HUGE_STRING] = \"\";",
      "597:   char mod;",
      "598:   anum_t first, last;",
      "",
      "[Removed Lines]",
      "595:   char group[LONG_STRING];",
      "",
      "[Added Lines]",
      "595:   char group[LONG_STRING] = \"\";",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "600:   if (!nserv || !line)",
      "601:     return 0;",
      "604:     return 0;",
      "606:   nntp_data = nntp_data_find(nserv, group);",
      "607:   nntp_data->deleted = false;",
      "",
      "[Removed Lines]",
      "603:   if (sscanf(line, \"%s \" ANUM \" \" ANUM \" %c %[^\\n]\", group, &last, &first, &mod, desc) < 4)",
      "",
      "[Added Lines]",
      "604:   if (sscanf(line, \"%1023s \" ANUM \" \" ANUM \" %c %8191[^\\n]\", group, &last, &first, &mod, desc) < 4)",
      "605:   {",
      "606:     mutt_debug(4, \"Cannot parse server line: %s\\n\", line);",
      "608:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9b004d941caef32b770b09394bd4860b97e6c25d",
      "candidate_info": {
        "commit_hash": "9b004d941caef32b770b09394bd4860b97e6c25d",
        "repo": "neomutt/neomutt",
        "commit_url": "https://github.com/neomutt/neomutt/commit/9b004d941caef32b770b09394bd4860b97e6c25d",
        "files": [
          "imap/auth_plain.c",
          "imap/imap.c",
          "newsrc.c",
          "nntp.c",
          "pattern.c",
          "send.c"
        ],
        "message": "clang-format",
        "before_after_code_files": [
          "imap/auth_plain.c||imap/auth_plain.c",
          "imap/imap.c||imap/imap.c",
          "newsrc.c||newsrc.c",
          "nntp.c||nntp.c",
          "pattern.c||pattern.c",
          "send.c||send.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "newsrc.c||newsrc.c"
          ],
          "candidate": [
            "newsrc.c||newsrc.c"
          ]
        }
      },
      "candidate_diff": {
        "imap/auth_plain.c||imap/auth_plain.c": [
          "File: imap/auth_plain.c -> imap/auth_plain.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:     }",
          "78:     if (rc == IMAP_CMD_RESPOND)",
          "79:     {",
          "81:       mutt_socket_send(idata->conn, buf + sizeof(auth_plain_cmd));",
          "82:     }",
          "83:   }",
          "",
          "[Removed Lines]",
          "80:       mutt_str_strcat(buf + sizeof(auth_plain_cmd), sizeof(buf) - sizeof(auth_plain_cmd), \"\\r\\n\");",
          "",
          "[Added Lines]",
          "80:       mutt_str_strcat(buf + sizeof(auth_plain_cmd),",
          "81:                       sizeof(buf) - sizeof(auth_plain_cmd), \"\\r\\n\");",
          "",
          "---------------"
        ],
        "imap/imap.c||imap/imap.c": [
          "File: imap/imap.c -> imap/imap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1730:     mutt_buffer_init(&err);",
          "1731:     err.data = errstr;",
          "1732:     err.dsize = sizeof(errstr);",
          "1735:     if (mutt_parse_rc_line(mbox, &token, &err))",
          "1736:       mutt_debug(1, \"Error adding subscribed mailbox: %s\\n\", errstr);",
          "1737:     FREE(&token.data);",
          "",
          "[Removed Lines]",
          "1733:  len = snprintf(mbox, sizeof(mbox), \"%smailboxes \", subscribe ? \"\" : \"un\");",
          "1734:  imap_quote_string(mbox + len, sizeof(mbox) - len, path, true);",
          "",
          "[Added Lines]",
          "1733:     len = snprintf(mbox, sizeof(mbox), \"%smailboxes \", subscribe ? \"\" : \"un\");",
          "1734:     imap_quote_string(mbox + len, sizeof(mbox) - len, path, true);",
          "",
          "---------------"
        ],
        "newsrc.c||newsrc.c": [
          "File: newsrc.c -> newsrc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "601:     return 0;",
          "605:   {",
          "606:     mutt_debug(4, \"Cannot parse server line: %s\\n\", line);",
          "607:     return 0;",
          "",
          "[Removed Lines]",
          "604:   if (sscanf(line, \"%1023s \" ANUM \" \" ANUM \" %c %8191[^\\n]\", group, &last, &first, &mod, desc) < 4)",
          "",
          "[Added Lines]",
          "604:   if (sscanf(line, \"%1023s \" ANUM \" \" ANUM \" %c %8191[^\\n]\", group, &last,",
          "605:              &first, &mod, desc) < 4)",
          "",
          "---------------"
        ],
        "nntp.c||nntp.c": [
          "File: nntp.c -> nntp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1289:   fc.restore = restore;",
          "1290:   fc.messages = mutt_mem_calloc(last - first + 1, sizeof(unsigned char));",
          "1291:   if (fc.messages == NULL)",
          "1293: #ifdef USE_HCACHE",
          "1294:   fc.hc = hc;",
          "1295: #endif",
          "",
          "[Removed Lines]",
          "1292:    return -1;",
          "",
          "[Added Lines]",
          "1292:     return -1;",
          "",
          "---------------"
        ],
        "pattern.c||pattern.c": [
          "File: pattern.c -> pattern.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1885:     case MUTT_SENDER:",
          "1886:       if (!h->env)",
          "1887:         return 0;",
          "1890:     case MUTT_FROM:",
          "1891:       if (!h->env)",
          "1892:         return 0;",
          "1895:     case MUTT_TO:",
          "1896:       if (!h->env)",
          "1897:         return 0;",
          "",
          "[Removed Lines]",
          "1888:       return (pat->not ^ match_addrlist(pat, (flags & MUTT_MATCH_FULL_ADDRESS), 1,",
          "1889:                                         h->env->sender));",
          "1893:       return (pat->not ^",
          "1894:               match_addrlist(pat, (flags & MUTT_MATCH_FULL_ADDRESS), 1, h->env->from));",
          "",
          "[Added Lines]",
          "1888:       return (pat->not ^ match_addrlist(pat, (flags & MUTT_MATCH_FULL_ADDRESS),",
          "1889:                                         1, h->env->sender));",
          "1893:       return (pat->not ^ match_addrlist(pat, (flags & MUTT_MATCH_FULL_ADDRESS),",
          "1894:                                         1, h->env->from));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1924:     case MUTT_ADDRESS:",
          "1925:       if (!h->env)",
          "1926:         return 0;",
          "1929:                                         h->env->to, h->env->cc));",
          "1930:     case MUTT_RECIPIENT:",
          "1931:       if (!h->env)",
          "1932:         return 0;",
          "1936:       if (!h->env)",
          "1937:         return 0;",
          "",
          "[Removed Lines]",
          "1927:       return (pat->not ^ match_addrlist(pat, (flags & MUTT_MATCH_FULL_ADDRESS), 4,",
          "1928:                                         h->env->from, h->env->sender,",
          "1933:       return (pat->not ^ match_addrlist(pat, (flags & MUTT_MATCH_FULL_ADDRESS), 2,",
          "1934:                                         h->env->to, h->env->cc));",
          "",
          "[Added Lines]",
          "1927:       return (pat->not ^ match_addrlist(pat, (flags & MUTT_MATCH_FULL_ADDRESS),",
          "1928:                                         4, h->env->from, h->env->sender,",
          "1933:       return (pat->not ^ match_addrlist(pat, (flags & MUTT_MATCH_FULL_ADDRESS),",
          "1934:                                         2, h->env->to, h->env->cc));",
          "",
          "---------------"
        ],
        "send.c||send.c": [
          "File: send.c -> send.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1077:   if (From)",
          "1078:     addr = mutt_addr_copy(From);",
          "1080:     addr = mutt_addr_new();",
          "1081:     if (UseDomain)",
          "1082:     {",
          "",
          "[Removed Lines]",
          "1079:   else {",
          "",
          "[Added Lines]",
          "1079:   else",
          "1080:   {",
          "",
          "---------------"
        ]
      }
    }
  ]
}