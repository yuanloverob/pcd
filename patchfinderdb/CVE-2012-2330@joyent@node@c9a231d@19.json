{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1d9b4ace8a1f8ef4f17b701720511f8303171f41",
      "candidate_info": {
        "commit_hash": "1d9b4ace8a1f8ef4f17b701720511f8303171f41",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/1d9b4ace8a1f8ef4f17b701720511f8303171f41",
        "files": [
          "deps/openssl/openssl/apps/s_client.c",
          "deps/openssl/openssl/ssl/s3_clnt.c",
          "deps/openssl/openssl/ssl/s3_lib.c",
          "deps/openssl/openssl/ssl/ssl.h",
          "deps/openssl/openssl/ssl/ssl3.h",
          "deps/openssl/openssl/ssl/ssl_lib.c",
          "deps/openssl/openssl/ssl/ssltest.c",
          "deps/openssl/openssl/test/testssl"
        ],
        "message": "openssl: support handshake cut-through\n\nEnables SSL3+ clients to send application data immediately following the\nFinished message even when negotiating full-handshakes.  With this patch,\nclients can negotiate SSL connections in 1-RTT even when performing\nfull-handshakes.\n\nThis patch is taken from the Android Open Source Project.",
        "before_after_code_files": [
          "deps/openssl/openssl/apps/s_client.c||deps/openssl/openssl/apps/s_client.c",
          "deps/openssl/openssl/ssl/s3_clnt.c||deps/openssl/openssl/ssl/s3_clnt.c",
          "deps/openssl/openssl/ssl/s3_lib.c||deps/openssl/openssl/ssl/s3_lib.c",
          "deps/openssl/openssl/ssl/ssl.h||deps/openssl/openssl/ssl/ssl.h",
          "deps/openssl/openssl/ssl/ssl3.h||deps/openssl/openssl/ssl/ssl3.h",
          "deps/openssl/openssl/ssl/ssl_lib.c||deps/openssl/openssl/ssl/ssl_lib.c",
          "deps/openssl/openssl/ssl/ssltest.c||deps/openssl/openssl/ssl/ssltest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/openssl/openssl/apps/s_client.c||deps/openssl/openssl/apps/s_client.c": [
          "File: deps/openssl/openssl/apps/s_client.c -> deps/openssl/openssl/apps/s_client.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "360: # if !defined(OPENSSL_NO_NEXTPROTONEG)",
          "361:  BIO_printf(bio_err,\" -nextprotoneg arg - enable NPN extension, considering named protocols supported (comma-separated list)\\n\");",
          "362: # endif",
          "363: #endif",
          "364:  BIO_printf(bio_err,\" -legacy_renegotiation - enable use of legacy renegotiation (dangerous)\\n\");",
          "365:  BIO_printf(bio_err,\" -use_srtp profiles - Offer SRTP key management with a colon-separated profile list\\n\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "363:  BIO_printf(bio_err,\" -cutthrough       - enable 1-RTT full-handshake for strong ciphers\\n\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "573:  EVP_PKEY *key = NULL;",
          "574:  char *CApath=NULL,*CAfile=NULL,*cipher=NULL;",
          "575:  int reconnect=0,badop=0,verify=SSL_VERIFY_NONE,bugs=0;",
          "576:  int crlf=0;",
          "577:  int write_tty,read_tty,write_ssl,read_ssl,tty_on,ssl_pending;",
          "578:  SSL_CTX *ctx=NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "577:  int cutthrough=0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "879:    }",
          "880: # endif",
          "881: #endif",
          "882:   else if (strcmp(*argv,\"-serverpref\") == 0)",
          "883:    off|=SSL_OP_CIPHER_SERVER_PREFERENCE;",
          "884:   else if (strcmp(*argv,\"-legacy_renegotiation\") == 0)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "884:   else if (strcmp(*argv,\"-cutthrough\") == 0)",
          "885:    cutthrough=1;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1146:  if (socket_type == SOCK_DGRAM) SSL_CTX_set_read_ahead(ctx, 1);",
          "1148: #if !defined(OPENSSL_NO_TLSEXT) && !defined(OPENSSL_NO_NEXTPROTONEG)",
          "1149:  if (next_proto.data)",
          "1150:   SSL_CTX_set_next_proto_select_cb(ctx, next_proto_cb, &next_proto);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1154:  if (cutthrough)",
          "1155:   {",
          "1156:   int ssl_mode = SSL_CTX_get_mode(ctx);",
          "1157:   ssl_mode |= SSL_MODE_HANDSHAKE_CUTTHROUGH;",
          "1158:   SSL_CTX_set_mode(ctx, ssl_mode);",
          "1159:   }",
          "",
          "---------------"
        ],
        "deps/openssl/openssl/ssl/s3_clnt.c||deps/openssl/openssl/ssl/s3_clnt.c": [
          "File: deps/openssl/openssl/ssl/s3_clnt.c -> deps/openssl/openssl/ssl/s3_clnt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "203:  s->in_handshake++;",
          "204:  if (!SSL_in_init(s) || SSL_in_before(s)) SSL_clear(s);",
          "206: #ifndef OPENSSL_NO_HEARTBEATS",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "205: #if 0 /* Send app data in separate packet, otherwise, some particular site",
          "211:  if (SSL_get_mode(s) & SSL_MODE_HANDSHAKE_CUTTHROUGH)",
          "212:   {",
          "214:   s->s3->flags |= SSL3_FLAGS_DELAY_CLIENT_FINISHED;",
          "215:   }",
          "216: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "527:     }",
          "528:    else",
          "529:     {",
          "534:     else",
          "535: #endif",
          "538:     }",
          "539:    s->init_num=0;",
          "540:    break;",
          "",
          "[Removed Lines]",
          "530: #ifndef OPENSSL_NO_TLSEXT",
          "532:     if (s->tlsext_ticket_expected)",
          "533:      s->s3->tmp.next_state=SSL3_ST_CR_SESSION_TICKET_A;",
          "537:     s->s3->tmp.next_state=SSL3_ST_CR_FINISHED_A;",
          "",
          "[Added Lines]",
          "542:     if ((SSL_get_mode(s) & SSL_MODE_HANDSHAKE_CUTTHROUGH) && SSL_get_cipher_bits(s, NULL) >= 128",
          "544:        )",
          "545:      {",
          "546:      if (s->s3->flags & SSL3_FLAGS_DELAY_CLIENT_FINISHED)",
          "547:       {",
          "548:       s->state=SSL3_ST_CUTTHROUGH_COMPLETE;",
          "549:       s->s3->flags|=SSL3_FLAGS_POP_BUFFER;",
          "550:       s->s3->delay_buf_pop_ret=0;",
          "551:       }",
          "552:      else",
          "553:       {",
          "554:       s->s3->tmp.next_state=SSL3_ST_CUTTHROUGH_COMPLETE;",
          "555:       }",
          "556:      }",
          "558:      {",
          "559: #ifndef OPENSSL_NO_TLSEXT",
          "561:      if (s->tlsext_ticket_expected)",
          "562:       s->s3->tmp.next_state=SSL3_ST_CR_SESSION_TICKET_A;",
          "563:      else",
          "565:       s->s3->tmp.next_state=SSL3_ST_CR_FINISHED_A;",
          "566:      }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "582:    s->state=s->s3->tmp.next_state;",
          "583:    break;",
          "585:   case SSL_ST_OK:",
          "587:    ssl3_cleanup_key_block(s);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "614:   case SSL3_ST_CUTTHROUGH_COMPLETE:",
          "615: #ifndef OPENSSL_NO_TLSEXT",
          "617:    if (s->tlsext_ticket_expected)",
          "618:     s->state=SSL3_ST_CR_SESSION_TICKET_A;",
          "619:    else",
          "620: #endif",
          "621:     s->state=SSL3_ST_CR_FINISHED_A;",
          "626:    if (!(s->s3->flags & SSL3_FLAGS_DELAY_CLIENT_FINISHED))",
          "627:     ssl_free_wbio_buffer(s);",
          "628:    ret = 1;",
          "629:    goto end;",
          "",
          "---------------"
        ],
        "deps/openssl/openssl/ssl/s3_lib.c||deps/openssl/openssl/ssl/s3_lib.c": [
          "File: deps/openssl/openssl/ssl/s3_lib.c -> deps/openssl/openssl/ssl/s3_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4200: static int ssl3_read_internal(SSL *s, void *buf, int len, int peek)",
          "4201:  {",
          "4204:  clear_sys_error();",
          "4205:  if (s->s3->renegotiate) ssl3_renegotiate_check(s);",
          "4206:  s->s3->in_read_app_data=1;",
          "4207:  ret=s->method->ssl_read_bytes(s,SSL3_RT_APPLICATION_DATA,buf,len,peek);",
          "",
          "[Removed Lines]",
          "4202:  int ret;",
          "",
          "[Added Lines]",
          "4202:  int n,ret;",
          "4205:  if ((s->s3->flags & SSL3_FLAGS_POP_BUFFER) && (s->wbio == s->bbio))",
          "4206:   {",
          "4210:   if (BIO_wpending(s->wbio) > 0)",
          "4211:    {",
          "4212:    s->rwstate=SSL_WRITING;",
          "4213:    n=BIO_flush(s->wbio);",
          "4214:    if (n <= 0) return(n);",
          "4215:    s->rwstate=SSL_NOTHING;",
          "4216:    }",
          "4217:   }",
          "",
          "---------------"
        ],
        "deps/openssl/openssl/ssl/ssl.h||deps/openssl/openssl/ssl/ssl.h": [
          "File: deps/openssl/openssl/ssl/ssl.h -> deps/openssl/openssl/ssl/ssl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "643: #define SSL_MODE_SMALL_BUFFERS 0x00000020L",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "647: #define SSL_MODE_HANDSHAKE_CUTTHROUGH 0x00000040L",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1410: #define SSL_get_state(a)  SSL_state(a)",
          "1411: #define SSL_is_init_finished(a)  (SSL_state(a) == SSL_ST_OK)",
          "1413: #define SSL_in_before(a)  (SSL_state(a)&SSL_ST_BEFORE)",
          "1414: #define SSL_in_connect_init(a)  (SSL_state(a)&SSL_ST_CONNECT)",
          "1415: #define SSL_in_accept_init(a)  (SSL_state(a)&SSL_ST_ACCEPT)",
          "",
          "[Removed Lines]",
          "1412: #define SSL_in_init(a)   (SSL_state(a)&SSL_ST_INIT)",
          "",
          "[Added Lines]",
          "1416: #define SSL_in_init(a)   ((SSL_state(a)&SSL_ST_INIT) && \\",
          "1417:                                   !SSL_cutthrough_complete(a))",
          "1421: int SSL_cutthrough_complete(const SSL *s);",
          "",
          "---------------"
        ],
        "deps/openssl/openssl/ssl/ssl3.h||deps/openssl/openssl/ssl/ssl3.h": [
          "File: deps/openssl/openssl/ssl/ssl3.h -> deps/openssl/openssl/ssl/ssl3.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "559: #define SSL3_ST_CW_FLUSH  (0x100|SSL_ST_CONNECT)",
          "560: #ifndef OPENSSL_NO_SCTP",
          "561: #define DTLS1_SCTP_ST_CW_WRITE_SOCK   (0x310|SSL_ST_CONNECT)",
          "562: #define DTLS1_SCTP_ST_CR_READ_SOCK   (0x320|SSL_ST_CONNECT)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "560: #define SSL3_ST_CUTTHROUGH_COMPLETE (0x101|SSL_ST_CONNECT)",
          "",
          "---------------"
        ],
        "deps/openssl/openssl/ssl/ssl_lib.c||deps/openssl/openssl/ssl/ssl_lib.c": [
          "File: deps/openssl/openssl/ssl/ssl_lib.c -> deps/openssl/openssl/ssl/ssl_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3211:  SSL_callback_ctrl(ssl, SSL_CTRL_SET_MSG_CALLBACK, (void (*)(void))cb);",
          "3212:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3214: int SSL_cutthrough_complete(const SSL *s)",
          "3215:  {",
          "3218:   s->version >= SSL3_VERSION &&",
          "3224:    s->state == SSL3_ST_CR_FINISHED_A));",
          "3225:  }",
          "",
          "---------------"
        ],
        "deps/openssl/openssl/ssl/ssltest.c||deps/openssl/openssl/ssl/ssltest.c": [
          "File: deps/openssl/openssl/ssl/ssltest.c -> deps/openssl/openssl/ssl/ssltest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "371:  fprintf(stderr,\" -test_cipherlist - verifies the order of the ssl cipher lists\\n\");",
          "372:  fprintf(stderr,\" -c_small_records - enable client side use of small SSL record buffers\\n\");",
          "373:  fprintf(stderr,\" -s_small_records - enable server side use of small SSL record buffers\\n\");",
          "374:  }",
          "376: static void print_details(SSL *c_ssl, const char *prefix)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "374:  fprintf(stderr,\" -cutthrough      - enable 1-RTT full-handshake for strong ciphers\\n\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "502:  int ssl_mode = 0;",
          "503:  int c_small_records=0;",
          "504:  int s_small_records=0;",
          "506: int main(int argc, char *argv[])",
          "507:  {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "506:  int cutthrough = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "778:    {",
          "779:    s_small_records = 1;",
          "780:    }",
          "781:   else",
          "782:    {",
          "783:    fprintf(stderr,\"unknown option %s\\n\",*argv);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "783:   else if (strcmp(*argv, \"-cutthrough\") == 0)",
          "784:    {",
          "785:    cutthrough = 1;",
          "786:    }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "928:   ssl_mode |= SSL_MODE_SMALL_BUFFERS;",
          "929:   SSL_CTX_set_mode(s_ctx, ssl_mode);",
          "930:   }",
          "932: #ifndef OPENSSL_NO_DH",
          "933:  if (!no_dhe)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "937:  ssl_mode = 0;",
          "938:  if (cutthrough)",
          "939:   {",
          "940:   ssl_mode = SSL_CTX_get_mode(c_ctx);",
          "941:   ssl_mode = SSL_MODE_HANDSHAKE_CUTTHROUGH;",
          "942:   SSL_CTX_set_mode(c_ctx, ssl_mode);",
          "943:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "22d03c9108909499b9a16d5c6fb90344cd9d16b6",
      "candidate_info": {
        "commit_hash": "22d03c9108909499b9a16d5c6fb90344cd9d16b6",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/22d03c9108909499b9a16d5c6fb90344cd9d16b6",
        "files": [
          "src/node.cc"
        ],
        "message": "node.cc: include ares.h",
        "before_after_code_files": [
          "src/node.cc||src/node.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: #include \"req_wrap.h\"",
          "24: #include \"handle_wrap.h\"",
          "26: #include \"uv.h\"",
          "28: #include \"v8-debug.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: #include \"ares.h\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4f6882e8982aeee8065803e93acb2c6f0dff8d1d",
      "candidate_info": {
        "commit_hash": "4f6882e8982aeee8065803e93acb2c6f0dff8d1d",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/4f6882e8982aeee8065803e93acb2c6f0dff8d1d",
        "files": [
          "tools/msvs/msi/product.wxs",
          "tools/msvs/nodejsvars.bat"
        ],
        "message": "windows/msi: minor installer tweaks",
        "before_after_code_files": [
          "tools/msvs/msi/product.wxs||tools/msvs/msi/product.wxs",
          "tools/msvs/nodejsvars.bat||tools/msvs/nodejsvars.bat"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/msvs/msi/product.wxs||tools/msvs/msi/product.wxs": [
          "File: tools/msvs/msi/product.wxs -> tools/msvs/msi/product.wxs",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: <Wix xmlns=\"http://schemas.microsoft.com/wix/2006/wi\"",
          "3:      xmlns:util=\"http://schemas.microsoft.com/wix/UtilExtension\">",
          "7:   <?define ProductAuthor = \"Joyent, Inc. and other Node contributors\" ?>",
          "12:   <Product Id=\"*\"",
          "13:            Name=\"$(var.ProductName)\"",
          "",
          "[Removed Lines]",
          "5:   <?define ProductName = \"node.js\" ?>",
          "6:   <?define ProductDescription = \"Evented I/O for V8 javascript\" ?>",
          "9:   <?define repoDir=\"$(var.ProjectDir)..\\..\\..\\\" ?>",
          "10:   <?define sourcedir=\"$(var.repoDir)\\$(var.Configuration)\\\" ?>",
          "",
          "[Added Lines]",
          "5:   <?define ProductName = \"Node.js\" ?>",
          "6:   <?define ProductDescription = \"Node.js\" ?>",
          "9:   <?define RepoDir=\"$(var.ProjectDir)..\\..\\..\\\" ?>",
          "10:   <?define SourceDir=\"$(var.RepoDir)\\$(var.Configuration)\\\" ?>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "21:     <Media Id=\"1\" Cabinet=\"media1.cab\" EmbedCab=\"yes\" />",
          "24:                   DowngradeErrorMessage=\"A later version of node.js is already installed. Setup will now exit.\" />",
          "26:     <Directory Id=\"TARGETDIR\" Name=\"SourceDir\">",
          "28:       <Directory Id=\"ProgramMenuFolder\">",
          "30:       </Directory>",
          "32:       <Directory Id=\"$(var.ProgramFilesFolderId)\">",
          "",
          "[Removed Lines]",
          "23:     <MajorUpgrade AllowSameVersionUpgrades=\"yes\"",
          "29:           <Directory Id=\"ApplicationProgramsFolder\" Name=\"Node.js\"/>",
          "",
          "[Added Lines]",
          "23:     <MajorUpgrade AllowSameVersionUpgrades=\"yes\"",
          "29:           <Directory Id=\"ApplicationProgramsFolder\" Name=\"Node.js ($(var.Platform))\"/>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "34:           <Directory Id=\"NodeModulesFolder\" Name=\"node_modules\">",
          "35:             <Directory Id=\"NPMFolder\" Name=\"npm\">",
          "36:               <Component Id=\"npmrc\" Guid=\"55B2B03F-8F32-4D62-A54A-FA428615591D\">",
          "38:               </Component>",
          "39:             </Directory>",
          "40:           </Directory>",
          "41:           <Component Id=\"nodeexe\" Guid=\"AEC0F08E-89B3-4C35-A286-8DB8598597F2\">",
          "43:             <Environment Id=\"npm_env\"",
          "48:                          Value=\"[AppDataFolder]npm\\\" />",
          "49:             <Environment Id=\"node_env\"",
          "54:                          Value=\"[APPLICATIONROOTDIRECTORY]\" />",
          "55:           </Component>",
          "56:           <Component Id=\"npmcmd\" Guid=\"31e9986d-74cd-44e1-878c-194d3e997d32\">",
          "",
          "[Removed Lines]",
          "37:                  <File Id=\"filenpmrc\" KeyPath=\"yes\" Source=\"$(var.repoDir)\\tools\\msvs\\npm\\npmrc\" />",
          "42:             <File Id=\"filenodeexe\" KeyPath=\"yes\" Source=\"$(var.sourcedir)\\node.exe\" />",
          "44:                          Action=\"set\"",
          "45:                          Name=\"PATH\"",
          "46:                          Part=\"last\"",
          "47:                          System=\"yes\"",
          "50:                          Action=\"set\"",
          "51:                          Name=\"PATH\"",
          "52:                          Part=\"last\"",
          "53:                          System=\"yes\"",
          "",
          "[Added Lines]",
          "37:                  <File Id=\"filenpmrc\" KeyPath=\"yes\" Source=\"$(var.RepoDir)\\tools\\msvs\\npm\\npmrc\" />",
          "42:             <File Id=\"filenodeexe\" KeyPath=\"yes\" Source=\"$(var.SourceDir)\\node.exe\" />",
          "44:                          Action=\"set\"",
          "45:                          Name=\"PATH\"",
          "46:                          Part=\"last\"",
          "47:                          System=\"yes\"",
          "50:                          Action=\"set\"",
          "51:                          Name=\"PATH\"",
          "52:                          Part=\"last\"",
          "53:                          System=\"yes\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "61:           </Component>",
          "62:           <?if $(var.Configuration) = Debug ?>",
          "63:           <Component Id=\"nodepdb\" Guid=\"BEC0F08E-89B3-4C35-A286-8DB8598597F2\">",
          "65:           </Component>",
          "66:           <?endif?>",
          "67:           <Component Id=\"nodejsvars\" Guid=\"*\">",
          "69:           </Component>",
          "70:         </Directory>",
          "71:       </Directory>",
          "",
          "[Removed Lines]",
          "64:             <File Id=\"filenodepdb\" KeyPath=\"yes\" Source=\"$(var.sourcedir)\\node.pdb\" />",
          "68:             <File Id=\"filenodejsvars\" KeyPath=\"yes\" Source=\"$(var.repoDir)\\tools\\msvs\\nodejsvars.bat\" />",
          "",
          "[Added Lines]",
          "64:             <File Id=\"filenodepdb\" KeyPath=\"yes\" Source=\"$(var.SourceDir)\\node.pdb\" />",
          "68:             <File Id=\"filenodejsvars\" KeyPath=\"yes\" Source=\"$(var.RepoDir)\\tools\\msvs\\nodejsvars.bat\" />",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "88:         <Shortcut Id=\"ApplicationStartMenuShortcut\" Name=\"Node.js\"",
          "89:                   Description=\"$(var.ProductDescription)\" Target=\"[APPLICATIONROOTDIRECTORY]node.exe\"",
          "90:                   WorkingDirectory=\"APPLICATIONROOTDIRECTORY\"/>",
          "92:                   Description=\"Node.js Command Prompt\" Target=\"[%ComSpec]\"",
          "94:                   Show=\"normal\"",
          "95:                   WorkingDirectory=\"APPLICATIONROOTDIRECTORY\"/>",
          "96:         <util:InternetShortcut Id=\"OnlineWebsiteShortcut\"",
          "",
          "[Removed Lines]",
          "91:         <Shortcut Id=\"NodePromptStartMenuShortcut\" Name=\"Node.js ($(var.Platform)) Command Prompt\"",
          "93:                   Arguments='/k \"[APPLICATIONROOTDIRECTORY]nodejsvars.bat\" $(var.Platform)'",
          "",
          "[Added Lines]",
          "91:         <Shortcut Id=\"NodePromptStartMenuShortcut\" Name=\"Node.js command prompt\"",
          "93:                   Arguments='/k \"[APPLICATIONROOTDIRECTORY]nodejsvars.bat\"'",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "105:                   Arguments=\"/x [ProductCode]\"",
          "106:                   Description=\"Uninstalls $(var.ProductName)\" />",
          "107:         <RemoveFolder Id=\"ApplicationProgramsFolder\" On=\"uninstall\"/>",
          "109:       </Component>",
          "110:     </DirectoryRef>",
          "",
          "[Removed Lines]",
          "108:         <RegistryValue Root=\"HKCU\" Key=\"Software\\$(var.ProductAuthor)\\$(var.ProductName)\" Name=\"installed\" Type=\"integer\" Value=\"1\" KeyPath=\"yes\"/>",
          "",
          "[Added Lines]",
          "108:         <RegistryValue Root=\"HKCU\" Key=\"Software\\Joyent\\$(var.ProductName)\" Name=\"installed\" Type=\"integer\" Value=\"1\" KeyPath=\"yes\"/>",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "159:       <Publish Dialog=\"MaintenanceTypeDlg\" Control=\"Back\" Event=\"NewDialog\" Value=\"MaintenanceWelcomeDlg\">1</Publish>",
          "161:       <Property Id=\"ARPNOMODIFY\" Value=\"1\" />",
          "164:     </UI>",
          "166:     <UIRef Id=\"WixUI_Common\" />",
          "167:     <WixVariable Id=\"WixUIBannerBmp\" Value=\"..\\..\\..\\doc\\thin-white-stripe.jpg\" />",
          "168:     <WixVariable Id=\"WixUIDialogBmp\" Value=\"..\\..\\..\\doc\\full-white-stripe.jpg\" />",
          "170:   </Product>",
          "172: </Wix>",
          "",
          "[Removed Lines]",
          "162:       <Property Id=\"WIXUI_EXITDIALOGOPTIONALTEXT\" Value=\"Node.js has been succesfully installed.  To run Node.js open command prompt (cmd.exe), and run 'node'. See http://nodejs.org for information about the license.\" />",
          "169:     <WixVariable Id=\"WixUILicenseRtf\" Value=\"$(var.sourcedir)\\LICENSE.rtf\" />",
          "",
          "[Added Lines]",
          "162:       <Property Id=\"WIXUI_EXITDIALOGOPTIONALTEXT\" Value=\"Node.js has been succesfully installed. To run Node.js open command prompt (cmd.exe), and run 'node'.\" />",
          "169:     <WixVariable Id=\"WixUILicenseRtf\" Value=\"$(var.SourceDir)\\LICENSE.rtf\" />",
          "",
          "---------------"
        ],
        "tools/msvs/nodejsvars.bat||tools/msvs/nodejsvars.bat": [
          "File: tools/msvs/nodejsvars.bat -> tools/msvs/nodejsvars.bat",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: @echo off",
          "",
          "[Removed Lines]",
          "2: @rem Process arguments.",
          "3: set target_arch=x86",
          "5: :next-arg",
          "6: if \"%1\"==\"\" goto args-done",
          "7: if /i \"%1\"==\"x86\"           set target_arch=x86&goto arg-ok",
          "8: if /i \"%1\"==\"x64\"           set target_arch=x64&goto arg-ok",
          "10: echo Warning: ignoring invalid command line option `%1`.",
          "12: :arg-ok",
          "13: shift",
          "14: goto next-arg",
          "15: :args-done",
          "17: @rem Ensure this Node.js is first in the PATH",
          "18: echo Your environment has been set up for using Node.js (%target_arch%) and NPM",
          "19: set PATH=%~dp0;%PATH%",
          "",
          "[Added Lines]",
          "3: @rem Ensure this Node.js is first in the PATH",
          "4: set PATH=%~dp0;%PATH%",
          "6: @rem Figure out architecture and print it.",
          "7: setlocal",
          "8: for /F \"usebackq delims=\" %%v in (`\"%~dp0\"node.exe -p -e process.arch`) do set arch=%%v",
          "9: echo Your environment has been set up for using Node.js (%arch%) and NPM",
          "10: endlocal",
          "13: cd /d %HOMEDRIVE%\"%HOMEPATH%\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c2c08196d80d6034ca63866249e6a6d4b88650ca",
      "candidate_info": {
        "commit_hash": "c2c08196d80d6034ca63866249e6a6d4b88650ca",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/c2c08196d80d6034ca63866249e6a6d4b88650ca",
        "files": [
          "doc/api/cluster.markdown",
          "lib/cluster.js",
          "test/simple/test-cluster-basic.js"
        ],
        "message": "cluster: rename worker.unqiueID to worker.id",
        "before_after_code_files": [
          "lib/cluster.js||licluster.js",
          "test/simple/test-cluster-basic.js||test/simple/test-cluster-basic.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/cluster.js||licluster.js": [
          "File: lib/cluster.js -> licluster.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "258:   var self = this;",
          "259:   var env = process.env;",
          "265:   this.state = 'none';",
          "",
          "[Removed Lines]",
          "262:   this.uniqueID = cluster.isMaster ? ++ids : toDecInt(env.NODE_UNIQUE_ID);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "268:   if (cluster.isMaster) {",
          "272:     var envCopy = util._extend({}, env);",
          "275:     if (isObject(customEnv)) {",
          "276:       envCopy = util._extend(envCopy, customEnv);",
          "",
          "[Removed Lines]",
          "273:     envCopy['NODE_UNIQUE_ID'] = this.uniqueID;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "289:   if (cluster.isMaster) {",
          "",
          "[Removed Lines]",
          "291:     cluster.workers[this.uniqueID] = this;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "330:   if (cluster.isMaster) {",
          "332:   }",
          "333: }",
          "",
          "[Removed Lines]",
          "331:     delete cluster.workers[worker.uniqueID];",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "352:   if (callback) {",
          "354:     queryCallbacks[message._requestEcho] = callback;",
          "355:   }",
          "",
          "[Removed Lines]",
          "353:     message._requestEcho = worker.uniqueID + ':' + (++queryIds);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-cluster-basic.js||test/simple/test-cluster-basic.js": [
          "File: test/simple/test-cluster-basic.js -> test/simple/test-cluster-basic.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:   worker = cluster.fork();",
          "115:   assert.ok(worker instanceof cluster.Worker,",
          "116:       'the worker is not a instance of the Worker constructor');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "115:   assert.equal(worker.id, 1);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6332a4cf00425c63ae476d89f6705881eb06a3e1",
      "candidate_info": {
        "commit_hash": "6332a4cf00425c63ae476d89f6705881eb06a3e1",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/6332a4cf00425c63ae476d89f6705881eb06a3e1",
        "files": [
          "lib/fs.js"
        ],
        "message": "Expose posix realpath on windows as well",
        "before_after_code_files": [
          "lib/fs.js||lifs.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/fs.js||lifs.js": [
          "File: lib/fs.js -> lifs.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "894: var normalize = pathModule.normalize;",
          "942:     }",
          "971:         continue;",
          "972:       }",
          "995:       }",
          "1001:     }",
          "1065:     }",
          "1090:     }",
          "1093:       if (err) return cb(err);",
          "1114: var pool;",
          "",
          "[Removed Lines]",
          "896: if (isWindows) {",
          "901:   fs.realpathSync = function realpathSync(p, cache) {",
          "902:     p = pathModule.resolve(p);",
          "903:     if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {",
          "904:       return cache[p];",
          "905:     }",
          "906:     fs.statSync(p);",
          "907:     if (cache) cache[p] = p;",
          "908:     return p;",
          "909:   };",
          "912:   fs.realpath = function(p, cache, cb) {",
          "913:     if (typeof cb !== 'function') {",
          "914:       cb = cache;",
          "915:       cache = null;",
          "916:     }",
          "917:     p = pathModule.resolve(p);",
          "918:     if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {",
          "919:       return cb(null, cache[p]);",
          "920:     }",
          "921:     fs.stat(p, function(err) {",
          "922:       if (err) return cb(err);",
          "923:       if (cache) cache[p] = p;",
          "924:       cb(null, p);",
          "925:     });",
          "926:   };",
          "929: } else /* posix */ {",
          "933:   var nextPartRe = /(.*?)(?:[\\/]+|$)/g;",
          "936:   fs.realpathSync = function realpathSync(p, cache) {",
          "938:     p = pathModule.resolve(p);",
          "940:     if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {",
          "941:       return cache[p];",
          "944:     var original = p,",
          "945:         seenLinks = {},",
          "946:         knownHard = {};",
          "949:     var pos = 0;",
          "951:     var current = '';",
          "953:     var base = '';",
          "955:     var previous = '';",
          "960:     while (pos < p.length) {",
          "962:       nextPartRe.lastIndex = pos;",
          "963:       var result = nextPartRe.exec(p);",
          "964:       previous = current;",
          "965:       current += result[0];",
          "966:       base = previous + result[1];",
          "967:       pos = nextPartRe.lastIndex;",
          "970:       if (!base || knownHard[base] || (cache && cache[base] === base)) {",
          "974:       var resolvedLink;",
          "975:       if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {",
          "977:         resolvedLink = cache[base];",
          "978:       } else {",
          "979:         var stat = fs.lstatSync(base);",
          "980:         if (!stat.isSymbolicLink()) {",
          "981:           knownHard[base] = true;",
          "982:           if (cache) cache[base] = base;",
          "983:           continue;",
          "984:         }",
          "987:         var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);",
          "988:         if (!seenLinks[id]) {",
          "989:           fs.statSync(base);",
          "990:           seenLinks[id] = fs.readlinkSync(base);",
          "991:           resolvedLink = pathModule.resolve(previous, seenLinks[id]);",
          "993:           if (cache) cache[base] = resolvedLink;",
          "994:         }",
          "998:       p = pathModule.resolve(resolvedLink, p.slice(pos));",
          "999:       pos = 0;",
          "1000:       previous = base = current = '';",
          "1003:     if (cache) cache[original] = p;",
          "1005:     return p;",
          "1006:   };",
          "1010:   fs.realpath = function realpath(p, cache, cb) {",
          "1011:     if (typeof cb !== 'function') {",
          "1012:       cb = cache;",
          "1013:       cache = null;",
          "1014:     }",
          "1017:     p = pathModule.resolve(p);",
          "1019:     if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {",
          "1020:       return cb(null, cache[p]);",
          "1021:     }",
          "1023:     var original = p,",
          "1024:         seenLinks = {},",
          "1025:         knownHard = {};",
          "1028:     var pos = 0;",
          "1030:     var current = '';",
          "1032:     var base = '';",
          "1034:     var previous = '';",
          "1038:     LOOP();",
          "1039:     function LOOP() {",
          "1041:       if (pos >= p.length) {",
          "1042:         if (cache) cache[original] = p;",
          "1043:         return cb(null, p);",
          "1044:       }",
          "1047:       nextPartRe.lastIndex = pos;",
          "1048:       var result = nextPartRe.exec(p);",
          "1049:       previous = current;",
          "1050:       current += result[0];",
          "1051:       base = previous + result[1];",
          "1052:       pos = nextPartRe.lastIndex;",
          "1055:       if (!base || knownHard[base] || (cache && cache[base] === base)) {",
          "1056:         return process.nextTick(LOOP);",
          "1057:       }",
          "1059:       if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {",
          "1061:         return gotResolvedLink(cache[base]);",
          "1062:       }",
          "1064:       return fs.lstat(base, gotStat);",
          "1067:     function gotStat(err, stat) {",
          "1068:       if (err) return cb(err);",
          "1071:       if (!stat.isSymbolicLink()) {",
          "1072:         knownHard[base] = true;",
          "1073:         if (cache) cache[base] = base;",
          "1074:         return process.nextTick(LOOP);",
          "1075:       }",
          "1079:       var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);",
          "1080:       if (seenLinks[id]) {",
          "1081:         return gotTarget(null, seenLinks[id], base);",
          "1082:       }",
          "1083:       fs.stat(base, function(err) {",
          "1084:         if (err) return cb(err);",
          "1086:         fs.readlink(base, function(err, target) {",
          "1087:           gotTarget(err, seenLinks[id] = target);",
          "1088:         });",
          "1089:       });",
          "1092:     function gotTarget(err, target, base) {",
          "1095:       var resolvedLink = pathModule.resolve(previous, target);",
          "1096:       if (cache) cache[base] = resolvedLink;",
          "1097:       gotResolvedLink(resolvedLink);",
          "1098:     }",
          "1100:     function gotResolvedLink(resolvedLink) {",
          "1103:       p = pathModule.resolve(resolvedLink, p.slice(pos));",
          "1104:       pos = 0;",
          "1105:       previous = base = current = '';",
          "1107:       return process.nextTick(LOOP);",
          "1108:     }",
          "1109:   };",
          "1111: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}