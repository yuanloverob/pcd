{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3abf30552812fdfb07a1cbe5fff187ba9103d104",
      "candidate_info": {
        "commit_hash": "3abf30552812fdfb07a1cbe5fff187ba9103d104",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/3abf30552812fdfb07a1cbe5fff187ba9103d104",
        "files": [
          ".appveyor.yml",
          "appveyor.yml",
          "arch/X86/X86IntelInstPrinter.c"
        ],
        "message": "rename appveyor.yml to .appveyor.yml",
        "before_after_code_files": [
          "arch/X86/X86IntelInstPrinter.c||arch/X86/X86IntelInstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86IntelInstPrinter.c||arch/X86/X86IntelInstPrinter.c": [
          "File: arch/X86/X86IntelInstPrinter.c -> arch/X86/X86IntelInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "420:   printRegName(O, MCOperand_getReg(Op));",
          "421:  } else if (MCOperand_isImm(Op)) {",
          "422:   int64_t imm = MCOperand_getImm(Op);",
          "424:  }",
          "425: }",
          "",
          "[Removed Lines]",
          "423:   printImm(MI->csh->syntax, O, imm, false);",
          "",
          "[Added Lines]",
          "423:   if (MI->csh->imm_unsigned == CS_OPT_ON)",
          "424:    printImm(MI->csh->syntax, O, imm, true);",
          "425:   else",
          "426:    printImm(MI->csh->syntax, O, imm, false);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "846:   switch(MI->flat_insn->id) {",
          "847:    default:",
          "849:     break;",
          "851:    case X86_INS_MOVABS:",
          "",
          "[Removed Lines]",
          "848:     printImm(MI->csh->syntax, O, imm, false);",
          "",
          "[Added Lines]",
          "851:     if (MI->csh->imm_unsigned == CS_OPT_ON)",
          "852:      printImm(MI->csh->syntax, O, imm, true);",
          "853:     else",
          "854:      printImm(MI->csh->syntax, O, imm, false);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d7459a0ed760b62c08d2110292c20491cad8928f",
      "candidate_info": {
        "commit_hash": "d7459a0ed760b62c08d2110292c20491cad8928f",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/d7459a0ed760b62c08d2110292c20491cad8928f",
        "files": [
          "arch/X86/X86Mapping.c"
        ],
        "message": "x86: fix issue #756",
        "before_after_code_files": [
          "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ],
          "candidate": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ]
        }
      },
      "candidate_diff": {
        "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
          "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
          "2943:  if (!intel_regs_sorted) {",
          "2945:     sizeof(insn_regs_intel_sorted));",
          "2947:     ARR_SIZE(insn_regs_intel_sorted),",
          "2948:     sizeof(struct insn_reg), regs_cmp);",
          "2949:   intel_regs_sorted = true;",
          "",
          "[Removed Lines]",
          "2944:   memcpy (insn_regs_intel_sorted, insn_regs_intel,",
          "2946:   qsort (insn_regs_intel_sorted,",
          "",
          "[Added Lines]",
          "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
          "2946:   qsort(insn_regs_intel_sorted,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2958:    }",
          "2959:    return insn_regs_intel_sorted[mid].reg;",
          "2960:   } else {",
          "2961:    last = mid - 1;",
          "2962:   }",
          "2963:   mid = (first + last) / 2;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2961:    if (mid == 0)",
          "2962:     break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "efd8b14471520c13501cef00b9892e0a43a6f43f",
      "candidate_info": {
        "commit_hash": "efd8b14471520c13501cef00b9892e0a43a6f43f",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/efd8b14471520c13501cef00b9892e0a43a6f43f",
        "files": [
          "bindings/java/capstone/Ppc_const.java",
          "bindings/ocaml/ppc_const.ml",
          "bindings/python/capstone/ppc_const.py"
        ],
        "message": "bindings: regenerate consts",
        "before_after_code_files": [
          "bindings/javcapstone/Ppc_const.java||bindings/java/capstone/Ppc_const.java",
          "bindings/ocaml/ppc_const.ml||bindings/ocaml/ppc_const.ml",
          "bindings/python/capstone/ppc_const.py||bindings/python/capstone/ppc_const.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/javcapstone/Ppc_const.java||bindings/java/capstone/Ppc_const.java": [
          "File: bindings/javcapstone/Ppc_const.java -> bindings/java/capstone/Ppc_const.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28:  public static final int PPC_OP_INVALID = 0;",
          "29:  public static final int PPC_OP_REG = 1;",
          "30:  public static final int PPC_OP_IMM = 2;",
          "31:  public static final int PPC_OP_MEM = 3;",
          "32:  public static final int PPC_OP_CRX = 64;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "bindings/ocaml/ppc_const.ml||bindings/ocaml/ppc_const.ml": [
          "File: bindings/ocaml/ppc_const.ml -> bindings/ocaml/ppc_const.ml",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: let _PPC_BH_PLUS = 1;;",
          "21: let _PPC_BH_MINUS = 2;;",
          "23: (* PPC registers *)",
          "25: let _PPC_REG_INVALID = 0;;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: (* Operand type for instruction's operands *)",
          "25: let _PPC_OP_INVALID = 0;;",
          "26: let _PPC_OP_REG = 1;;",
          "27: let _PPC_OP_IMM = 2;;",
          "28: let _PPC_OP_MEM = 3;;",
          "29: let _PPC_OP_CRX = 64;;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "234: let _PPC_REG_X2 = 209;;",
          "235: let _PPC_REG_ENDING = 210;;",
          "245: (* PPC instruction *)",
          "247: let _PPC_INS_INVALID = 0;;",
          "",
          "[Removed Lines]",
          "237: (* Operand type for instruction's operands *)",
          "239: let _PPC_OP_INVALID = 0;;",
          "240: let _PPC_OP_REG = 1;;",
          "241: let _PPC_OP_IMM = 2;;",
          "242: let _PPC_OP_MEM = 3;;",
          "243: let _PPC_OP_CRX = 64;;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "bindings/python/capstone/ppc_const.py||bindings/python/capstone/ppc_const.py": [
          "File: bindings/python/capstone/ppc_const.py -> bindings/python/capstone/ppc_const.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: PPC_BH_PLUS = 1",
          "21: PPC_BH_MINUS = 2",
          "23: # PPC registers",
          "25: PPC_REG_INVALID = 0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: # Operand type for instruction's operands",
          "25: PPC_OP_INVALID = 0",
          "26: PPC_OP_REG = 1",
          "27: PPC_OP_IMM = 2",
          "28: PPC_OP_MEM = 3",
          "29: PPC_OP_CRX = 64",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "234: PPC_REG_X2 = 209",
          "235: PPC_REG_ENDING = 210",
          "245: # PPC instruction",
          "247: PPC_INS_INVALID = 0",
          "",
          "[Removed Lines]",
          "237: # Operand type for instruction's operands",
          "239: PPC_OP_INVALID = 0",
          "240: PPC_OP_REG = 1",
          "241: PPC_OP_IMM = 2",
          "242: PPC_OP_MEM = 3",
          "243: PPC_OP_CRX = 64",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "201a0a1757676c2e603a973fe5b2368a1e92c471",
      "candidate_info": {
        "commit_hash": "201a0a1757676c2e603a973fe5b2368a1e92c471",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/201a0a1757676c2e603a973fe5b2368a1e92c471",
        "files": [
          "cs.c"
        ],
        "message": "\"vsnprintf()\" is unsupported on Windows CE. The closest match is \"_vsnprintf()\".",
        "before_after_code_files": [
          "cs.c||cs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cs.c||cs.c": [
          "File: cs.c -> cs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "88: cs_calloc_t cs_mem_calloc = calloc;",
          "89: cs_realloc_t cs_mem_realloc = realloc;",
          "90: cs_free_t cs_mem_free = free;",
          "91: cs_vsnprintf_t cs_vsnprintf = vsnprintf;",
          "92: #else",
          "93: extern void* kern_os_malloc(size_t size);",
          "94: extern void kern_os_free(void* addr);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91: #if defined(_WIN32_WCE)",
          "92: cs_vsnprintf_t cs_vsnprintf = _vsnprintf;",
          "93: #else // !_WIN32_WCE",
          "95: #endif // _WIN32_WCE",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "130eb7ef946c56f6602972342062fbf68c9bd1b8",
      "candidate_info": {
        "commit_hash": "130eb7ef946c56f6602972342062fbf68c9bd1b8",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/130eb7ef946c56f6602972342062fbf68c9bd1b8",
        "files": [
          "CMakeLists.txt",
          "cstool/CMakeLists.txt",
          "cstool/cstool.c"
        ],
        "message": "cstool: compile with CMake using CMakeLists.txt in root dir",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: static void usage(char *prog)",
          "54: {",
          "56:  printf(\"Syntax: %s <arch+mode> <assembly-hexstring> [start-address-in-hex-format]\\n\", prog);",
          "57:  printf(\"\\nThe following <arch+mode> options are supported:\\n\");",
          "",
          "[Removed Lines]",
          "55:  printf(\"Cstool v%s for Capstone Disassembler Engine (www.capstone-engine.org)\\n\", VERSION);",
          "",
          "[Added Lines]",
          "55:  printf(\"Cstool v%s for Capstone Disassembler Engine (www.capstone-engine.org)\\n\\n\", VERSION);",
          "",
          "---------------"
        ]
      }
    }
  ]
}