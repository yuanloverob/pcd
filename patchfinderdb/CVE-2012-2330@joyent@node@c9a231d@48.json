{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9c3559f0adce15f400c6792270cde40c1b67c017",
      "candidate_info": {
        "commit_hash": "9c3559f0adce15f400c6792270cde40c1b67c017",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/9c3559f0adce15f400c6792270cde40c1b67c017",
        "files": [
          "lib/readline.js",
          "test/simple/test-readline-setRawMode.js"
        ],
        "message": "readline: re-add the Interface#close() method; rename \"end\" to \"close\"\n\nThe idea here is to reduce the number of times that `setRawMode()` is called\non the `input` stream, since it is expensive, and simply pause()/resume()\nshould not call it.\n\nSo now `setRawMode()` only gets called at the beginning of the Interface\ninstance, and then when `Interface#close()` is called.\n\nTest case included.",
        "before_after_code_files": [
          "lib/readline.js||lireadline.js",
          "test/simple/test-readline-setRawMode.js||test/simple/test-readline-setRawMode.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/readline.js||lireadline.js": [
          "File: lib/readline.js -> lireadline.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "91:       self._normalWrite(data);",
          "92:     });",
          "93:     input.on('end', function() {",
          "95:     });",
          "96:     var StringDecoder = require('string_decoder').StringDecoder; // lazy load",
          "97:     this._decoder = new StringDecoder('utf8');",
          "",
          "[Removed Lines]",
          "94:       self.emit('end');",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "236: };",
          "241:   if (this.terminal) {",
          "242:     if (typeof this.input.setRawMode === 'function') {",
          "244:     }",
          "245:   }",
          "246:   this.input.pause();",
          "247:   this.paused = true;",
          "248:   this.emit('pause');",
          "",
          "[Removed Lines]",
          "239: Interface.prototype.pause = function() {",
          "240:   if (this.paused) return;",
          "243:       this.input.setRawMode(true);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "252: Interface.prototype.resume = function() {",
          "253:   this.input.resume();",
          "259:   this.paused = false;",
          "260:   this.emit('resume');",
          "261: };",
          "",
          "[Removed Lines]",
          "254:   if (this.terminal) {",
          "255:     if (typeof this.input.setRawMode === 'function') {",
          "256:       this.input.setRawMode(true);",
          "257:     }",
          "258:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "584:         if (this.listeners('SIGINT').length) {",
          "585:           this.emit('SIGINT');",
          "586:         } else {",
          "589:         }",
          "590:         break;",
          "",
          "[Removed Lines]",
          "588:           this.pause();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "596:       case 'd': // delete right or EOF",
          "597:         if (this.cursor === 0 && this.line.length === 0) {",
          "600:         } else if (this.cursor < this.line.length) {",
          "601:           this._deleteRight();",
          "602:         }",
          "",
          "[Removed Lines]",
          "598:           this.pause();",
          "599:           this.emit('end');",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-readline-setRawMode.js||test/simple/test-readline-setRawMode.js": [
          "File: test/simple/test-readline-setRawMode.js -> test/simple/test-readline-setRawMode.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: var assert = require('assert');",
          "25: var readline = require('readline');",
          "26: var Stream = require('stream');",
          "28: var stream = new Stream();",
          "29: var expectedRawMode = true;",
          "30: var rawModeCalled = false;",
          "31: var resumeCalled = false;",
          "32: var pauseCalled = false;",
          "34: stream.setRawMode = function(mode) {",
          "35:   rawModeCalled = true;",
          "36:   assert.equal(mode, expectedRawMode);",
          "37: };",
          "38: stream.resume = function() {",
          "39:   resumeCalled = true;",
          "40: };",
          "41: stream.pause = function() {",
          "42:   pauseCalled = true;",
          "43: };",
          "47: var rli = readline.createInterface({",
          "48:   input: stream,",
          "49:   output: stream,",
          "50:   terminal: true",
          "51: });",
          "52: assert(rli.terminal)",
          "53: assert(rawModeCalled);",
          "54: assert(resumeCalled);",
          "55: assert(!pauseCalled);",
          "59: rawModeCalled = false;",
          "60: resumeCalled = false;",
          "61: pauseCalled = false;",
          "62: rli.pause();",
          "63: assert(!rawModeCalled);",
          "64: assert(!resumeCalled);",
          "65: assert(pauseCalled);",
          "69: rawModeCalled = false;",
          "70: resumeCalled = false;",
          "71: pauseCalled = false;",
          "72: rli.resume();",
          "73: assert(!rawModeCalled);",
          "74: assert(resumeCalled);",
          "75: assert(!pauseCalled);",
          "79: expectedRawMode = false;",
          "80: rawModeCalled = false;",
          "81: resumeCalled = false;",
          "82: pauseCalled = false;",
          "83: rli.close();",
          "84: assert(rawModeCalled);",
          "85: assert(!resumeCalled);",
          "86: assert(pauseCalled);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b8d861556a4438f63295bdd05e5c2894b3a2fe0e",
      "candidate_info": {
        "commit_hash": "b8d861556a4438f63295bdd05e5c2894b3a2fe0e",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/b8d861556a4438f63295bdd05e5c2894b3a2fe0e",
        "files": [
          "test/simple/test-eio-limit.js"
        ],
        "message": "test-eio-limit: Remove confusing broken incorrect test",
        "before_after_code_files": [
          "test/simple/test-eio-limit.js||test/simple/test-eio-limit.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-eio-limit.js||test/simple/test-eio-limit.js": [
          "File: test/simple/test-eio-limit.js -> test/simple/test-eio-limit.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "59faab4330c2c07eed57232cde03d0484751c23b",
      "candidate_info": {
        "commit_hash": "59faab4330c2c07eed57232cde03d0484751c23b",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/59faab4330c2c07eed57232cde03d0484751c23b",
        "files": [
          "vcbuild.bat"
        ],
        "message": "Make msbuild run in parallel.",
        "before_after_code_files": [
          "vcbuild.bat||vcbuild.bat"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "vcbuild.bat||vcbuild.bat": [
          "File: vcbuild.bat -> vcbuild.bat",
          "--- Hunk 1 ---",
          "[Context before]",
          "77: :msbuild-found",
          "78: @rem Build the sln with msbuild.",
          "80: if errorlevel 1 goto exit",
          "82: if defined nosign goto msi",
          "",
          "[Removed Lines]",
          "79: msbuild node.sln /t:%target% /p:Configuration=%config% /clp:NoSummary;NoItemAndPropertyList;Verbosity=minimal /nologo",
          "",
          "[Added Lines]",
          "79: msbuild node.sln /m /t:%target% /p:Configuration=%config% /clp:NoSummary;NoItemAndPropertyList;Verbosity=minimal /nologo",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "89: if not errorlevel 0 echo Cannot determine current version of node.js & goto exit",
          "90: for /F \"tokens=*\" %%i in (%temp%\\node_version.txt) do set NODE_VERSION=%%i",
          "91: heat dir deps\\npm -var var.NPMSourceDir -dr NodeModulesFolder -cg NPMFiles -gg -template fragment -nologo -out npm.wxs",
          "93: if errorlevel 1 goto exit",
          "95: if defined nosign goto run",
          "",
          "[Removed Lines]",
          "92: msbuild \"%~dp0tools\\msvs\\msi\\nodemsi.sln\" /t:Clean,Build /p:Configuration=%config% /p:NodeVersion=%NODE_VERSION% /clp:NoSummary;NoItemAndPropertyList;Verbosity=minimal /nologo",
          "",
          "[Added Lines]",
          "92: msbuild \"%~dp0tools\\msvs\\msi\\nodemsi.sln\" /m /t:Clean,Build /p:Configuration=%config% /p:NodeVersion=%NODE_VERSION% /clp:NoSummary;NoItemAndPropertyList;Verbosity=minimal /nologo",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9126dd2d903f3cf842f0c11a8349d794dde68e98",
      "candidate_info": {
        "commit_hash": "9126dd2d903f3cf842f0c11a8349d794dde68e98",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/9126dd2d903f3cf842f0c11a8349d794dde68e98",
        "files": [
          "lib/repl.js",
          "test/simple/test-repl.js"
        ],
        "message": "repl: fix passing an empty line inserting \"undefined\" into the buffer\n\nThere was a possiblity of insering the string \"undefined\" into the repl's\ncommand buffer, which would cause interesting results while evaluating.",
        "before_after_code_files": [
          "lib/repl.js||lirepl.js",
          "test/simple/test-repl.js||test/simple/test-repl.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/repl.js||lirepl.js": [
          "File: lib/repl.js -> lirepl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "883:   if (matches && matches.length === 2) {",
          "884:     return matches[1];",
          "885:   }",
          "886: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-repl.js||test/simple/test-repl.js": [
          "File: test/simple/test-repl.js -> test/simple/test-repl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "152:     { client: client_unix, send: 'npm install foobar',",
          "153:       expect: expect_npm },",
          "154:     { client: client_unix, send: '(function () {\\n\\nreturn 1;\\n})()',",
          "156:   ]);",
          "157: }",
          "",
          "[Removed Lines]",
          "155:       expect: '1' }",
          "",
          "[Added Lines]",
          "155:       expect: '1' },",
          "156:     { client: client_unix, send: '{\\n\\na: 1\\n}',",
          "157:       expect: '{ a: 1 }' }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0f33768059146250d35148f37de7bd07e35ed851",
      "candidate_info": {
        "commit_hash": "0f33768059146250d35148f37de7bd07e35ed851",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/0f33768059146250d35148f37de7bd07e35ed851",
        "files": [
          "deps/v8/tools/gyp/v8.gyp"
        ],
        "message": "v8: link against libsocket and libnsl on sunos\n\nThe V8 debugger requires BSD socket support. Solaris-like systems obviously\nsupport that but you need to link against the right libraries, it's not part of\nlibc.",
        "before_after_code_files": [
          "deps/v8/tools/gyp/v8.gyp||deps/v8/tools/gyp/v8.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/tools/gyp/v8.gyp||deps/v8/tools/gyp/v8.gyp": [
          "File: deps/v8/tools/gyp/v8.gyp -> deps/v8/tools/gyp/v8.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "696:               }",
          "697:             ],",
          "698:             ['OS==\"solaris\"', {",
          "699:                 'sources': [",
          "700:                   '../../src/platform-solaris.cc',",
          "701:                   '../../src/platform-posix.cc',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "699:                 'link_settings': {",
          "700:                   'libraries': [",
          "701:                     '-lsocket -lnsl',",
          "702:                 ]},",
          "",
          "---------------"
        ]
      }
    }
  ]
}