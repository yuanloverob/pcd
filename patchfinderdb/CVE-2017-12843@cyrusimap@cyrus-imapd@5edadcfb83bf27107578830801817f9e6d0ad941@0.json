{
  "cve_id": "CVE-2017-12843",
  "cve_desc": "Cyrus IMAP before 3.0.3 allows remote authenticated users to write to arbitrary files via a crafted (1) SYNCAPPLY, (2) SYNCGET or (3) SYNCRESTORE command.",
  "repo": "cyrusimap/cyrus-imapd",
  "patch_hash": "5edadcfb83bf27107578830801817f9e6d0ad941",
  "patch_info": {
    "commit_hash": "5edadcfb83bf27107578830801817f9e6d0ad941",
    "repo": "cyrusimap/cyrus-imapd",
    "commit_url": "https://github.com/cyrusimap/cyrus-imapd/commit/5edadcfb83bf27107578830801817f9e6d0ad941",
    "files": [
      "imap/dlist.c"
    ],
    "message": "dlist: don't allow overwrite of arbitrary files",
    "before_after_code_files": [
      "imap/dlist.c||imap/dlist.c"
    ]
  },
  "patch_diff": {
    "imap/dlist.c||imap/dlist.c": [
      "File: imap/dlist.c -> imap/dlist.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "141:                                         const struct message_guid *guid)",
      "142: {",
      "143:     static char buf[MAX_MAILBOX_PATH];",
      "156:     assert(base != NULL);",
      "",
      "[Removed Lines]",
      "144:     const char *base;",
      "147:     if (strchr(part, '/')) {",
      "148:         base = part;",
      "149:     }",
      "150:     else {",
      "151:         base = isarchive ? config_archivepartitiondir(part)",
      "152:                          : config_partitiondir(part);",
      "153:     }",
      "",
      "[Added Lines]",
      "146:     const char *base = isarchive ? config_archivepartitiondir(part)",
      "147:                                  : config_partitiondir(part);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1c9d2254b45e2232d966cba0b313a12e7f1d7cf0",
      "candidate_info": {
        "commit_hash": "1c9d2254b45e2232d966cba0b313a12e7f1d7cf0",
        "repo": "cyrusimap/cyrus-imapd",
        "commit_url": "https://github.com/cyrusimap/cyrus-imapd/commit/1c9d2254b45e2232d966cba0b313a12e7f1d7cf0",
        "files": [
          "backup/backup.h",
          "backup/backupd.c",
          "backup/lcb.c",
          "backup/lcb_indexr.c",
          "backup/lcb_internal.c",
          "cunit/dlist.testc",
          "imap/append.c",
          "imap/conversations.c",
          "imap/dlist.c",
          "imap/dlist.h",
          "imap/http_dav.c",
          "imap/notify.c",
          "imap/quota_db.c",
          "imap/sync_support.c",
          "lib/libconfig.c",
          "lib/libconfig.h"
        ],
        "message": "backups: don't reuse reserve partition argument as staging path",
        "before_after_code_files": [
          "backup/backup.h||backup/backup.h",
          "backup/backupd.c||backup/backupd.c",
          "backup/lcb.c||backup/lcb.c",
          "backup/lcb_indexr.c||backup/lcb_indexr.c",
          "backup/lcb_internal.c||backup/lcb_internal.c",
          "cunit/dlist.testc||cunit/dlist.testc",
          "imap/append.c||imap/append.c",
          "imap/conversations.c||imap/conversations.c",
          "imap/dlist.c||imap/dlist.c",
          "imap/dlist.h||imap/dlist.h",
          "imap/http_dav.c||imap/http_dav.c",
          "imap/notify.c||imap/notify.c",
          "imap/quota_db.c||imap/quota_db.c",
          "imap/sync_support.c||imap/sync_support.c",
          "lib/libconfig.c||lilibconfig.c",
          "lib/libconfig.h||lilibconfig.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "imap/dlist.c||imap/dlist.c"
          ],
          "candidate": [
            "imap/dlist.c||imap/dlist.c"
          ]
        }
      },
      "candidate_diff": {
        "backup/backup.h||backup/backup.h": [
          "File: backup/backup.h -> backup/backup.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: struct backup;",
          "56: void backup_cleanup_staging_path(void);",
          "",
          "[Removed Lines]",
          "55: const char *backup_get_staging_path(void);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "backup/backupd.c||backup/backupd.c": [
          "File: backup/backupd.c -> backup/backupd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "645:             if (!backupd_userid) goto nologin;",
          "646:             if (!strcmp(cmd.s, \"Apply\")) {",
          "647:                 struct dlist *dl = NULL;",
          "650:                 if (c == EOF) goto missingargs;",
          "651:                 if (c == '\\r') c = prot_getc(backupd_in);",
          "652:                 if (c != '\\n') goto extraargs;",
          "",
          "[Removed Lines]",
          "648:                 c = dlist_parse(&dl, /*parsekeys*/ 1, backupd_in,",
          "649:                                 backup_get_staging_path());",
          "",
          "[Added Lines]",
          "648:                 c = dlist_parse(&dl, /*parsekeys*/ 1, /*isbackup*/ 1, backupd_in);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "682:             if (!backupd_userid) goto nologin;",
          "683:             if (!strcmp(cmd.s, \"Get\")) {",
          "684:                 struct dlist *dl = NULL;",
          "687:                 if (c == EOF) goto missingargs;",
          "688:                 if (c == '\\r') c = prot_getc(backupd_in);",
          "689:                 if (c != '\\n') goto extraargs;",
          "",
          "[Removed Lines]",
          "685:                 c = dlist_parse(&dl, /*parsekeys*/ 1, backupd_in,",
          "686:                                 backup_get_staging_path());",
          "",
          "[Added Lines]",
          "684:                 c = dlist_parse(&dl, /*parsekeys*/ 1, /*isbackup*/ 1, backupd_in);",
          "",
          "---------------"
        ],
        "backup/lcb.c||backup/lcb.c": [
          "File: backup/lcb.c -> backup/lcb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "71: #include \"backup/lcb_internal.h\"",
          "72: #include \"backup/lcb_sqlconsts.h\"",
          "",
          "[Removed Lines]",
          "74: static const char *staging_path = NULL;",
          "76: EXPORTED const char *backup_get_staging_path(void)",
          "77: {",
          "78:     if (staging_path) return staging_path;",
          "80:     staging_path = config_getstring(IMAPOPT_BACKUP_STAGING_PATH);",
          "82:     if (!staging_path)",
          "83:         staging_path = strconcat(config_getstring(IMAPOPT_TEMP_PATH),",
          "84:                                  \"/backup\", NULL);",
          "86:     return staging_path;",
          "87: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94: EXPORTED void backup_cleanup_staging_path(void)",
          "95: {",
          "96:     char name[MAX_MAILBOX_PATH];",
          "98:     DIR *dirp;",
          "99:     int r;",
          "",
          "[Removed Lines]",
          "97:     const char *base = backup_get_staging_path();",
          "",
          "[Added Lines]",
          "82:     const char *base = config_backupstagingpath();",
          "",
          "---------------"
        ],
        "backup/lcb_indexr.c||backup/lcb_indexr.c": [
          "File: backup/lcb_indexr.c -> backup/lcb_indexr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "606:     if (mailbox->annotations) {",
          "607:         struct dlist *annots = NULL;",
          "609:                        strlen(mailbox->annotations));",
          "610:         if (annots) {",
          "611:             annots->name = xstrdup(\"ANNOTATIONS\");",
          "",
          "[Removed Lines]",
          "608:         dlist_parsemap(&annots, 0, mailbox->annotations,",
          "",
          "[Added Lines]",
          "608:         dlist_parsemap(&annots, 0, 1, mailbox->annotations,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "632:             if (mailbox_message->flags) {",
          "634:                                strlen(mailbox_message->flags));",
          "635:                 flags->name = xstrdup(\"FLAGS\");",
          "636:                 dlist_stitch(record, flags);",
          "",
          "[Removed Lines]",
          "633:                 dlist_parsemap(&flags, 0, mailbox_message->flags,",
          "",
          "[Added Lines]",
          "633:                 dlist_parsemap(&flags, 0, 1, mailbox_message->flags,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "646:             if (mailbox_message->annotations) {",
          "647:                 struct dlist *annots = NULL;",
          "649:                                strlen(mailbox_message->annotations));",
          "650:                 if (annots)  {",
          "651:                     annots->name = xstrdup(\"ANNOTATIONS\");",
          "",
          "[Removed Lines]",
          "648:                 dlist_parsemap(&annots, 0, mailbox_message->annotations,",
          "",
          "[Added Lines]",
          "648:                 dlist_parsemap(&annots, 0, 1, mailbox_message->annotations,",
          "",
          "---------------"
        ],
        "backup/lcb_internal.c||backup/lcb_internal.c": [
          "File: backup/lcb_internal.c -> backup/lcb_internal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:     if (c == EOF)",
          "78:         goto fail;",
          "82:     if (!dl) {",
          "83:         fprintf(stderr, \"\\ndidn't parse dlist, error %i\\n\", c);",
          "",
          "[Removed Lines]",
          "80:     c = dlist_parse(&dl, /*parsekeys*/ 1, in, backup_get_staging_path());",
          "",
          "[Added Lines]",
          "80:     c = dlist_parse(&dl, /*parsekeys*/ 1, 1, in);",
          "",
          "---------------"
        ],
        "cunit/dlist.testc||cunit/dlist.testc": [
          "File: cunit/dlist.testc -> cunit/dlist.testc",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:     CU_ASSERT_STRING_EQUAL(buf_cstring(&b), \"(\\\"NIL\\\" NIL)\");",
          "21:     dlist_free(&dl);",
          "24:     CU_ASSERT_EQUAL(r, 0);",
          "25:     CU_ASSERT_PTR_NOT_NULL(dl);",
          "",
          "[Removed Lines]",
          "23:     r = dlist_parsemap(&dl, 0, b.s, b.len);",
          "",
          "[Added Lines]",
          "23:     r = dlist_parsemap(&dl, 0, 0, b.s, b.len);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "223:     buf_printf(&b, \"((a b) (c d) (e f))\");",
          "227:     CU_ASSERT_EQUAL(r, 0);",
          "228:     CU_ASSERT_PTR_NOT_NULL(dl);",
          "",
          "[Removed Lines]",
          "225:     r = dlist_parsemap(&dl, 0, b.s, b.len);",
          "",
          "[Added Lines]",
          "225:     r = dlist_parsemap(&dl, 0, 0, b.s, b.len);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "251:     buf_printf(&b, \"((a b) (c d) (e f))\");",
          "255:     CU_ASSERT_EQUAL(r, 0);",
          "256:     CU_ASSERT_PTR_NOT_NULL(dl);",
          "",
          "[Removed Lines]",
          "253:     r = dlist_parsemap(&dl, 0, b.s, b.len);",
          "",
          "[Added Lines]",
          "253:     r = dlist_parsemap(&dl, 0, 0, b.s, b.len);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "279:     buf_printf(&b, \"((a b) (c d) (e f))\");",
          "283:     CU_ASSERT_EQUAL(r, 0);",
          "284:     CU_ASSERT_PTR_NOT_NULL(dl);",
          "",
          "[Removed Lines]",
          "281:     r = dlist_parsemap(&dl, 0, b.s, b.len);",
          "",
          "[Added Lines]",
          "281:     r = dlist_parsemap(&dl, 0, 0, b.s, b.len);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "307:     buf_printf(&b, \"((a b) (c) (d e))\");",
          "311:     CU_ASSERT_EQUAL(r, 0);",
          "312:     CU_ASSERT_PTR_NOT_NULL(dl);",
          "",
          "[Removed Lines]",
          "309:     r = dlist_parsemap(&dl, 0, b.s, b.len);",
          "",
          "[Added Lines]",
          "309:     r = dlist_parsemap(&dl, 0, 0, b.s, b.len);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "335:     buf_printf(&b, \"((a b) () (c d))\");",
          "339:     CU_ASSERT_EQUAL(r, 0);",
          "340:     CU_ASSERT_PTR_NOT_NULL(dl);",
          "",
          "[Removed Lines]",
          "337:     r = dlist_parsemap(&dl, 0, b.s, b.len);",
          "",
          "[Added Lines]",
          "337:     r = dlist_parsemap(&dl, 0, 0, b.s, b.len);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "363:     buf_printf(&b, \"(a b c d e)\");",
          "367:     CU_ASSERT_EQUAL(r, 0);",
          "368:     CU_ASSERT_PTR_NOT_NULL(dl);",
          "",
          "[Removed Lines]",
          "365:     r = dlist_parsemap(&dl, 0, b.s, b.len);",
          "",
          "[Added Lines]",
          "365:     r = dlist_parsemap(&dl, 0, 0, b.s, b.len);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "391:     buf_setcstr(&b, \"%(toplevel %(sub thing) ANOTHER (value is %(list with interesting things) (in it)) ExTrA ExTrA READ \\\"all about it\\\" EMPTYLIST () EMPTYKVLIST %() INCLUDING 123456)\");",
          "395:     CU_ASSERT_EQUAL(r, 0);",
          "396:     CU_ASSERT_PTR_NOT_NULL(dl);",
          "",
          "[Removed Lines]",
          "393:     r = dlist_parsemap(&dl, 0, b.s, b.len);",
          "",
          "[Added Lines]",
          "393:     r = dlist_parsemap(&dl, 0, 0, b.s, b.len);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "419:     buf_setcstr(&b, \"%(toplevel %(sub thing) ANOTHER (value is %(list with interesting things) (in it)) ExTrA ExTrA READ \\\"all about it\\\" EMPTYLIST () EMPTYKVLIST %() INCLUDING 123456)\");",
          "423:     CU_ASSERT_EQUAL(r, 0);",
          "424:     CU_ASSERT_PTR_NOT_NULL(dl);",
          "",
          "[Removed Lines]",
          "421:     r = dlist_parsemap(&dl, 0, b.s, b.len);",
          "",
          "[Added Lines]",
          "421:     r = dlist_parsemap(&dl, 0, 0, b.s, b.len);",
          "",
          "---------------"
        ],
        "imap/append.c||imap/append.c": [
          "File: imap/append.c -> imap/append.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "421:     prot_setisclient(p, 1);",
          "425:     r = (c == EOF ? IMAP_SYS_ERROR : 0);",
          "427: out:",
          "",
          "[Removed Lines]",
          "424:     c = dlist_parse(results, /*parsekeys*/0, p, NULL);",
          "",
          "[Added Lines]",
          "424:     c = dlist_parse(results, /*parsekeys*/0, /*isbackup*/0, p);",
          "",
          "---------------"
        ],
        "imap/conversations.c||imap/conversations.c": [
          "File: imap/conversations.c -> imap/conversations.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "227:                    &val, &vallen, &open->s.txn)) {",
          "228:         struct dlist *dl = NULL;",
          "229:         struct dlist *dp;",
          "231:         for (dp = dl->head; dp; dp = dp->next) {",
          "232:             strarray_append(open->s.folder_names, dlist_cstring(dp));",
          "233:         }",
          "",
          "[Removed Lines]",
          "230:         dlist_parsemap(&dl, 0, val, vallen);",
          "",
          "[Added Lines]",
          "230:         dlist_parsemap(&dl, 0, 0, val, vallen);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "953:         return IMAP_MAILBOX_BADFORMAT;",
          "954:     }",
          "957:     if (r) return r;",
          "959:     n = dl->head;",
          "",
          "[Removed Lines]",
          "956:     r = dlist_parsemap(&dl, 0, rest, restlen);",
          "",
          "[Added Lines]",
          "956:     r = dlist_parsemap(&dl, 0, 0, rest, restlen);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1105:     if (version != CONVERSATIONS_VERSION) return IMAP_MAILBOX_BADFORMAT;",
          "1108:     if (r) return r;",
          "1110:     conv = conversation_new(state);",
          "",
          "[Removed Lines]",
          "1107:     r = dlist_parsemap(&dl, 0, rest, restlen);",
          "",
          "[Added Lines]",
          "1107:     r = dlist_parsemap(&dl, 0, 0, rest, restlen);",
          "",
          "---------------"
        ],
        "imap/dlist.c||imap/dlist.c": [
          "File: imap/dlist.c -> imap/dlist.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "141:                                         const struct message_guid *guid)",
          "142: {",
          "143:     static char buf[MAX_MAILBOX_PATH];",
          "150:     assert(base != NULL);",
          "",
          "[Removed Lines]",
          "140: EXPORTED const char *dlist_reserve_path(const char *part, int isarchive,",
          "146:     const char *base = isarchive ? config_archivepartitiondir(part)",
          "147:                                  : config_partitiondir(part);",
          "",
          "[Added Lines]",
          "140: EXPORTED const char *dlist_reserve_path(const char *part, int isarchive, int isbackup,",
          "144:     const char *base;",
          "147:     if (isbackup) {",
          "148:         base = config_backupstagingpath();",
          "149:     }",
          "150:     else {",
          "151:         base = isarchive ? config_archivepartitiondir(part)",
          "152:                          : config_partitiondir(part);",
          "153:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "165: static int reservefile(struct protstream *in, const char *part,",
          "166:                        struct message_guid *guid, unsigned long size,",
          "168: {",
          "169:     FILE *file;",
          "170:     char buf[8192+1];",
          "171:     int r = 0;",
          "177:     unlink(*fname);",
          "",
          "[Removed Lines]",
          "167:                        const char **fname)",
          "",
          "[Added Lines]",
          "173:                        int isbackup, const char **fname)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1002:     return c;",
          "1003: }",
          "1007: {",
          "1008:     struct dlist *dl = NULL;",
          "1009:     static struct buf kbuf;",
          "",
          "[Removed Lines]",
          "1005: EXPORTED int dlist_parse(struct dlist **dlp, int parsekey,",
          "1006:                           struct protstream *in, const char *alt_reserve_base)",
          "",
          "[Added Lines]",
          "1011: EXPORTED int dlist_parse(struct dlist **dlp, int parsekey, int isbackup,",
          "1012:                           struct protstream *in)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1030:         while (c != ')') {",
          "1031:             struct dlist *di = NULL;",
          "1032:             prot_ungetc(c, in);",
          "1034:             if (di) dlist_stitch(dl, di);",
          "1035:             c = next_nonspace(in, c);",
          "1036:             if (c == EOF) goto fail;",
          "",
          "[Removed Lines]",
          "1033:             c = dlist_parse(&di, 0, in, alt_reserve_base);",
          "",
          "[Added Lines]",
          "1039:             c = dlist_parse(&di, 0, isbackup, in);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1046:             while (c != ')') {",
          "1047:                 struct dlist *di = NULL;",
          "1048:                 prot_ungetc(c, in);",
          "1050:                 if (di) dlist_stitch(dl, di);",
          "1051:                 c = next_nonspace(in, c);",
          "1052:                 if (c == EOF) goto fail;",
          "",
          "[Removed Lines]",
          "1049:                 c = dlist_parse(&di, 1, in, alt_reserve_base);",
          "",
          "[Added Lines]",
          "1055:                 c = dlist_parse(&di, 1, isbackup, in);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1057:             static struct buf pbuf, gbuf;",
          "1058:             unsigned size = 0;",
          "1059:             const char *fname;",
          "1061:             c = getastring(in, NULL, &pbuf);",
          "1062:             if (c != ' ') goto fail;",
          "1063:             c = getastring(in, NULL, &gbuf);",
          "",
          "[Removed Lines]",
          "1060:             const char *part;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1068:             if (c == '\\r') c = prot_getc(in);",
          "1069:             if (c != '\\n') goto fail;",
          "1070:             if (!message_guid_decode(&tmp_guid, gbuf.s)) goto fail;",
          "1073:             dl = dlist_setfile(NULL, kbuf.s, pbuf.s, &tmp_guid, size, fname);",
          "1075:         }",
          "",
          "[Removed Lines]",
          "1071:             part = alt_reserve_base ? alt_reserve_base : pbuf.s;",
          "1072:             if (reservefile(in, part, &tmp_guid, size, &fname)) goto fail;",
          "",
          "[Added Lines]",
          "1076:             if (reservefile(in, pbuf.s, &tmp_guid, size, isbackup, &fname)) goto fail;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1108: EXPORTED int dlist_parse_asatomlist(struct dlist **dlp, int parsekey,",
          "1109:                             struct protstream *in)",
          "1110: {",
          "1114:     if (*dlp && !dlist_isatomlist(*dlp)) {",
          "",
          "[Removed Lines]",
          "1111:     int c = dlist_parse(dlp, parsekey, in, NULL);",
          "",
          "[Added Lines]",
          "1115:     int c = dlist_parse(dlp, parsekey, 0, in);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1120:     return c;",
          "1121: }",
          "1124:                    const char *base, unsigned len)",
          "1125: {",
          "1126:     struct protstream *stream;",
          "",
          "[Removed Lines]",
          "1123: EXPORTED int dlist_parsemap(struct dlist **dlp, int parsekey,",
          "",
          "[Added Lines]",
          "1127: EXPORTED int dlist_parsemap(struct dlist **dlp, int parsekey, int isbackup,",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1130:     stream = prot_readmap(base, len);",
          "1133:     prot_free(stream);",
          "1135:     if (c != EOF) {",
          "",
          "[Removed Lines]",
          "1132:     c = dlist_parse(&dl, parsekey, stream, NULL);",
          "",
          "[Added Lines]",
          "1136:     c = dlist_parse(&dl, parsekey, isbackup, stream);",
          "",
          "---------------"
        ],
        "imap/dlist.h||imap/dlist.h": [
          "File: imap/dlist.h -> imap/dlist.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "97: };",
          "102: void dlist_makeatom(struct dlist *dl, const char *val);",
          "",
          "[Removed Lines]",
          "99: const char *dlist_reserve_path(const char *part, int isarchive, const struct message_guid *guid);",
          "",
          "[Added Lines]",
          "99: const char *dlist_reserve_path(const char *part, int isarchive, int isbackup,",
          "100:                                const struct message_guid *guid);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "218:                  struct protstream *out);",
          "219: void dlist_printbuf(const struct dlist *dl, int printkeys,",
          "220:                     struct buf *outbuf);",
          "223: int dlist_parse_asatomlist(struct dlist **dlp, int parsekey,",
          "224:                             struct protstream *in);",
          "226:                    const char *base, unsigned len);",
          "228: typedef int dlistsax_cb_t(int type, struct dlistsax_data *data);",
          "",
          "[Removed Lines]",
          "221: int dlist_parse(struct dlist **dlp, int parsekeys,",
          "222:                  struct protstream *in, const char *alt_reserve_base);",
          "225: int dlist_parsemap(struct dlist **dlp, int parsekeys,",
          "",
          "[Added Lines]",
          "222: int dlist_parse(struct dlist **dlp, int parsekeys, int isbackup,",
          "223:                  struct protstream *in);",
          "226: int dlist_parsemap(struct dlist **dlp, int parsekeys, int isbackup,",
          "",
          "---------------"
        ],
        "imap/http_dav.c||imap/http_dav.c": [
          "File: imap/http_dav.c -> imap/http_dav.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "8974:     dlist_getatom(dl, \"T\", &type_str);",
          "8975:     dlist_getlist(dl, \"D\", &al);",
          "",
          "[Removed Lines]",
          "8973:     dlist_parsemap(&dl, 1, wdata->filename, strlen(wdata->filename));",
          "",
          "[Added Lines]",
          "8973:     dlist_parsemap(&dl, 1, 0, wdata->filename, strlen(wdata->filename));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9295:     }",
          "9299:     dlist_getatom(dl, \"T\", &type_str);",
          "9300:     if (strcmp(type_str, SHARE_INVITE_NOTIFICATION)) {",
          "9301:         ret = HTTP_NOT_ALLOWED;",
          "",
          "[Removed Lines]",
          "9298:     dlist_parsemap(&dl, 1, wdata->filename, strlen(wdata->filename));",
          "",
          "[Added Lines]",
          "9298:     dlist_parsemap(&dl, 1, 0, wdata->filename, strlen(wdata->filename));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "9947:                         name, ns, NULL, 0);",
          "9951:     dlist_getatom(dl, \"T\", &type);",
          "9952:     dlist_getatom(dl, \"NS\", &ns_href);",
          "9953:     dlist_getlist(dl, \"A\", &al);",
          "",
          "[Removed Lines]",
          "9950:     dlist_parsemap(&dl, 1, wdata->filename, strlen(wdata->filename));",
          "",
          "[Added Lines]",
          "9950:     dlist_parsemap(&dl, 1, 0, wdata->filename, strlen(wdata->filename));",
          "",
          "---------------"
        ],
        "imap/notify.c||imap/notify.c": [
          "File: imap/notify.c -> imap/notify.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "135:     prot_printf(out, \"\\r\\n\");",
          "136:     prot_flush(out);",
          "139:     if (c == '\\r') c = prot_getc(in);",
          "141:     if (c == '\\n' && res && res->name) {",
          "",
          "[Removed Lines]",
          "138:     c = dlist_parse(&res, 1, in, NULL);",
          "",
          "[Added Lines]",
          "138:     c = dlist_parse(&res, 1, 0, in);",
          "",
          "---------------"
        ],
        "imap/quota_db.c||imap/quota_db.c": [
          "File: imap/quota_db.c -> imap/quota_db.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "162:     if (data[0] == '%') {",
          "164:             goto out;",
          "166:         for (res = 0; res < QUOTA_NUMRESOURCES; res++) {",
          "",
          "[Removed Lines]",
          "163:         if (dlist_parsemap(&dl, 0, data, datalen))",
          "",
          "[Added Lines]",
          "163:         if (dlist_parsemap(&dl, 0, 0, data, datalen))",
          "",
          "---------------"
        ],
        "imap/sync_support.c||imap/sync_support.c": [
          "File: imap/sync_support.c -> imap/sync_support.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1555:     struct dlist *dl = NULL;",
          "1556:     int c;",
          "1561:     if (c == '\\r') c = prot_getc(in);",
          "",
          "[Removed Lines]",
          "1558:     c = dlist_parse(&dl, 1, in, NULL);",
          "",
          "[Added Lines]",
          "1558:     c = dlist_parse(&dl, 1, 0, in);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2207:         mailbox_msg_path = mailbox_record_fname(mailbox, record);",
          "2211:         struct index_record record2;",
          "",
          "[Removed Lines]",
          "2208:         stage_msg_path = dlist_reserve_path(part, record->system_flags & FLAG_ARCHIVED, &record->guid);",
          "",
          "[Added Lines]",
          "2208:         stage_msg_path = dlist_reserve_path(part, record->system_flags & FLAG_ARCHIVED, 0, &record->guid);",
          "",
          "---------------"
        ],
        "lib/libconfig.c||lilibconfig.c": [
          "File: lib/libconfig.c -> lilibconfig.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "216:     return config_getoverflowstring(buf, NULL);",
          "217: }",
          "219: static void config_ispartition(const char *key,",
          "220:                                const char *val __attribute__((unused)),",
          "221:                                void *rock)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/libconfig.h||lilibconfig.h": [
          "File: lib/libconfig.h -> lilibconfig.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "64: extern const char *config_metapartitiondir(const char *partition);",
          "65: extern const char *config_archivepartitiondir(const char *partition);",
          "68: extern const char *config_filename;",
          "69: extern const char *config_dir;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d734a23122155f3522a8cb6aef118223aa73cde0",
      "candidate_info": {
        "commit_hash": "d734a23122155f3522a8cb6aef118223aa73cde0",
        "repo": "cyrusimap/cyrus-imapd",
        "commit_url": "https://github.com/cyrusimap/cyrus-imapd/commit/d734a23122155f3522a8cb6aef118223aa73cde0",
        "files": [
          "imap/dlist.c"
        ],
        "message": "dlist: don't allow overwrite of arbitrary files",
        "before_after_code_files": [
          "imap/dlist.c||imap/dlist.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "imap/dlist.c||imap/dlist.c"
          ],
          "candidate": [
            "imap/dlist.c||imap/dlist.c"
          ]
        }
      },
      "candidate_diff": {
        "imap/dlist.c||imap/dlist.c": [
          "File: imap/dlist.c -> imap/dlist.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "141:                                         const struct message_guid *guid)",
          "142: {",
          "143:     static char buf[MAX_MAILBOX_PATH];",
          "156:     assert(base != NULL);",
          "",
          "[Removed Lines]",
          "144:     const char *base;",
          "147:     if (strchr(part, '/')) {",
          "148:         base = part;",
          "149:     }",
          "150:     else {",
          "151:         base = isarchive ? config_archivepartitiondir(part)",
          "152:                          : config_partitiondir(part);",
          "153:     }",
          "",
          "[Added Lines]",
          "146:     const char *base = isarchive ? config_archivepartitiondir(part)",
          "147:                                  : config_partitiondir(part);",
          "",
          "---------------"
        ]
      }
    }
  ]
}